package org.telegram.messenger;

import android.appwidget.AppWidgetManager;
import android.text.TextUtils;
import android.util.Pair;
import android.util.SparseArray;
import android.util.SparseIntArray;
import androidx.collection.LongSparseArray;
import java.io.File;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.atomic.AtomicLong;
import org.telegram.SQLite.SQLiteCursor;
import org.telegram.SQLite.SQLiteDatabase;
import org.telegram.SQLite.SQLiteException;
import org.telegram.SQLite.SQLitePreparedStatement;
import org.telegram.messenger.ContactsController;
import org.telegram.messenger.MessagesController;
import org.telegram.messenger.support.LongSparseIntArray;
import org.telegram.tgnet.NativeByteBuffer;
import org.telegram.tgnet.RequestDelegate;
import org.telegram.tgnet.TLObject;
import org.telegram.tgnet.TLRPC$ChannelParticipant;
import org.telegram.tgnet.TLRPC$Chat;
import org.telegram.tgnet.TLRPC$ChatFull;
import org.telegram.tgnet.TLRPC$ChatParticipants;
import org.telegram.tgnet.TLRPC$Dialog;
import org.telegram.tgnet.TLRPC$Document;
import org.telegram.tgnet.TLRPC$EncryptedChat;
import org.telegram.tgnet.TLRPC$InputChannel;
import org.telegram.tgnet.TLRPC$InputDialogPeer;
import org.telegram.tgnet.TLRPC$InputMedia;
import org.telegram.tgnet.TLRPC$InputPeer;
import org.telegram.tgnet.TLRPC$Message;
import org.telegram.tgnet.TLRPC$MessageAction;
import org.telegram.tgnet.TLRPC$MessageEntity;
import org.telegram.tgnet.TLRPC$MessageFwdHeader;
import org.telegram.tgnet.TLRPC$MessageMedia;
import org.telegram.tgnet.TLRPC$MessageReplies;
import org.telegram.tgnet.TLRPC$Peer;
import org.telegram.tgnet.TLRPC$Photo;
import org.telegram.tgnet.TLRPC$PhotoSize;
import org.telegram.tgnet.TLRPC$Poll;
import org.telegram.tgnet.TLRPC$PollResults;
import org.telegram.tgnet.TLRPC$ReplyMarkup;
import org.telegram.tgnet.TLRPC$TL_channels_deleteMessages;
import org.telegram.tgnet.TLRPC$TL_chatAdminRights;
import org.telegram.tgnet.TLRPC$TL_chatBannedRights;
import org.telegram.tgnet.TLRPC$TL_chatFull;
import org.telegram.tgnet.TLRPC$TL_contact;
import org.telegram.tgnet.TLRPC$TL_dialog;
import org.telegram.tgnet.TLRPC$TL_folderPeer;
import org.telegram.tgnet.TLRPC$TL_inputFolderPeer;
import org.telegram.tgnet.TLRPC$TL_inputMediaGame;
import org.telegram.tgnet.TLRPC$TL_inputMessageEntityMentionName;
import org.telegram.tgnet.TLRPC$TL_message;
import org.telegram.tgnet.TLRPC$TL_messageActionChatAddUser;
import org.telegram.tgnet.TLRPC$TL_messageActionGeoProximityReached;
import org.telegram.tgnet.TLRPC$TL_messageEntityCustomEmoji;
import org.telegram.tgnet.TLRPC$TL_messageEntityMentionName;
import org.telegram.tgnet.TLRPC$TL_messageMediaDocument;
import org.telegram.tgnet.TLRPC$TL_messageMediaPhoto;
import org.telegram.tgnet.TLRPC$TL_messageMediaPoll;
import org.telegram.tgnet.TLRPC$TL_messageMediaUnsupported;
import org.telegram.tgnet.TLRPC$TL_messageMediaUnsupported_old;
import org.telegram.tgnet.TLRPC$TL_messageReactions;
import org.telegram.tgnet.TLRPC$TL_messageReplyHeader;
import org.telegram.tgnet.TLRPC$TL_message_secret;
import org.telegram.tgnet.TLRPC$TL_messages_deleteMessages;
import org.telegram.tgnet.TLRPC$TL_messages_deleteScheduledMessages;
import org.telegram.tgnet.TLRPC$TL_messages_messages;
import org.telegram.tgnet.TLRPC$TL_peerChannel;
import org.telegram.tgnet.TLRPC$TL_peerChat;
import org.telegram.tgnet.TLRPC$TL_peerNotifySettingsEmpty_layer77;
import org.telegram.tgnet.TLRPC$TL_peerUser;
import org.telegram.tgnet.TLRPC$TL_photoEmpty;
import org.telegram.tgnet.TLRPC$TL_replyInlineMarkup;
import org.telegram.tgnet.TLRPC$TL_updates;
import org.telegram.tgnet.TLRPC$TL_updates_channelDifferenceTooLong;
import org.telegram.tgnet.TLRPC$TL_userStatusLastMonth;
import org.telegram.tgnet.TLRPC$TL_userStatusLastWeek;
import org.telegram.tgnet.TLRPC$TL_userStatusRecently;
import org.telegram.tgnet.TLRPC$User;
import org.telegram.tgnet.TLRPC$UserFull;
import org.telegram.tgnet.TLRPC$UserProfilePhoto;
import org.telegram.tgnet.TLRPC$UserStatus;
import org.telegram.tgnet.TLRPC$Vector;
import org.telegram.tgnet.TLRPC$WallPaper;
import org.telegram.tgnet.TLRPC$WebPage;
import org.telegram.tgnet.TLRPC$messages_Dialogs;
import org.telegram.tgnet.TLRPC$messages_Messages;
import org.telegram.tgnet.TLRPC$photos_Photos;
import org.telegram.ui.ActionBar.Theme;
import org.telegram.ui.Adapters.DialogsSearchAdapter;

public class MessagesStorage extends BaseController {
    private static volatile MessagesStorage[] Instance = new MessagesStorage[4];
    private static final int LAST_DB_VERSION = 100;
    private static final Object[] lockObjects = new Object[4];
    private int archiveUnreadCount;
    private int[][] bots = {new int[2], new int[2]};
    private File cacheFile;
    private int[][] channels = {new int[2], new int[2]};
    private int[][] contacts = {new int[2], new int[2]};
    private SQLiteDatabase database;
    private boolean databaseMigrationInProgress;
    private ArrayList<MessagesController.DialogFilter> dialogFilters = new ArrayList<>();
    private SparseArray<MessagesController.DialogFilter> dialogFiltersMap = new SparseArray<>();
    private LongSparseArray<Integer> dialogsWithMentions = new LongSparseArray<>();
    private LongSparseArray<Integer> dialogsWithUnread = new LongSparseArray<>();
    private int[][] groups = {new int[2], new int[2]};
    private int lastDateValue = 0;
    private int lastPtsValue = 0;
    private int lastQtsValue = 0;
    private int lastSavedDate = 0;
    private int lastSavedPts = 0;
    private int lastSavedQts = 0;
    private int lastSavedSeq = 0;
    private int lastSecretVersion = 0;
    private int lastSeqValue = 0;
    private AtomicLong lastTaskId = new AtomicLong(System.currentTimeMillis());
    private int mainUnreadCount;
    private int[] mentionChannels = new int[2];
    private int[] mentionGroups = new int[2];
    private int[][] nonContacts = {new int[2], new int[2]};
    private CountDownLatch openSync = new CountDownLatch(1);
    private volatile int pendingArchiveUnreadCount;
    private volatile int pendingMainUnreadCount;
    private int secretG = 0;
    private byte[] secretPBytes = null;
    private File shmCacheFile;
    public boolean showClearDatabaseAlert;
    private DispatchQueue storageQueue;
    private SparseArray<ArrayList<Runnable>> tasks = new SparseArray<>();
    private LongSparseArray<Boolean> unknownDialogsIds = new LongSparseArray<>();
    private File walCacheFile;

    public interface BooleanCallback {
        void run(boolean z);
    }

    public interface IntCallback {
        void run(int i);
    }

    public interface LongCallback {
        void run(long j);
    }

    public interface StringCallback {
        void run(String str);
    }

    static {
        for (int i = 0; i < 4; i++) {
            lockObjects[i] = new Object();
        }
    }

    public static MessagesStorage getInstance(int i) {
        MessagesStorage messagesStorage = Instance[i];
        if (messagesStorage == null) {
            synchronized (lockObjects[i]) {
                messagesStorage = Instance[i];
                if (messagesStorage == null) {
                    MessagesStorage[] messagesStorageArr = Instance;
                    MessagesStorage messagesStorage2 = new MessagesStorage(i);
                    messagesStorageArr[i] = messagesStorage2;
                    messagesStorage = messagesStorage2;
                }
            }
        }
        return messagesStorage;
    }

    private void ensureOpened() {
        try {
            this.openSync.await();
        } catch (Throwable unused) {
        }
    }

    public int getLastDateValue() {
        ensureOpened();
        return this.lastDateValue;
    }

    public void setLastDateValue(int i) {
        ensureOpened();
        this.lastDateValue = i;
    }

    public int getLastPtsValue() {
        ensureOpened();
        return this.lastPtsValue;
    }

    public int getMainUnreadCount() {
        return this.mainUnreadCount;
    }

    public int getArchiveUnreadCount() {
        return this.archiveUnreadCount;
    }

    public void setLastPtsValue(int i) {
        ensureOpened();
        this.lastPtsValue = i;
    }

    public int getLastQtsValue() {
        ensureOpened();
        return this.lastQtsValue;
    }

    public void setLastQtsValue(int i) {
        ensureOpened();
        this.lastQtsValue = i;
    }

    public int getLastSeqValue() {
        ensureOpened();
        return this.lastSeqValue;
    }

    public void setLastSeqValue(int i) {
        ensureOpened();
        this.lastSeqValue = i;
    }

    public int getLastSecretVersion() {
        ensureOpened();
        return this.lastSecretVersion;
    }

    public void setLastSecretVersion(int i) {
        ensureOpened();
        this.lastSecretVersion = i;
    }

    public byte[] getSecretPBytes() {
        ensureOpened();
        return this.secretPBytes;
    }

    public void setSecretPBytes(byte[] bArr) {
        ensureOpened();
        this.secretPBytes = bArr;
    }

    public int getSecretG() {
        ensureOpened();
        return this.secretG;
    }

    public void setSecretG(int i) {
        ensureOpened();
        this.secretG = i;
    }

    public MessagesStorage(int i) {
        super(i);
        DispatchQueue dispatchQueue = new DispatchQueue("storageQueue_" + i);
        this.storageQueue = dispatchQueue;
        dispatchQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda14(this));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$new$0() {
        openDatabase(1);
    }

    public SQLiteDatabase getDatabase() {
        return this.database;
    }

    public DispatchQueue getStorageQueue() {
        return this.storageQueue;
    }

    public void bindTaskToGuid(Runnable runnable, int i) {
        ArrayList arrayList = this.tasks.get(i);
        if (arrayList == null) {
            arrayList = new ArrayList();
            this.tasks.put(i, arrayList);
        }
        arrayList.add(runnable);
    }

    public void cancelTasksForGuid(int i) {
        ArrayList arrayList = this.tasks.get(i);
        if (arrayList != null) {
            int size = arrayList.size();
            for (int i2 = 0; i2 < size; i2++) {
                this.storageQueue.cancelRunnable((Runnable) arrayList.get(i2));
            }
            this.tasks.remove(i);
        }
    }

    public void completeTaskForGuid(Runnable runnable, int i) {
        ArrayList arrayList = this.tasks.get(i);
        if (arrayList != null) {
            arrayList.remove(runnable);
            if (arrayList.isEmpty()) {
                this.tasks.remove(i);
            }
        }
    }

    public long getDatabaseSize() {
        File file = this.cacheFile;
        long j = 0;
        if (file != null) {
            j = 0 + file.length();
        }
        File file2 = this.shmCacheFile;
        return file2 != null ? j + file2.length() : j;
    }

    public void openDatabase(int i) {
        int i2 = i;
        File filesDirFixed = ApplicationLoader.getFilesDirFixed();
        if (this.currentAccount != 0) {
            File file = new File(filesDirFixed, "account" + this.currentAccount + "/");
            file.mkdirs();
            filesDirFixed = file;
        }
        this.cacheFile = new File(filesDirFixed, "cache4.db");
        this.walCacheFile = new File(filesDirFixed, "cache4.db-wal");
        this.shmCacheFile = new File(filesDirFixed, "cache4.db-shm");
        boolean z = !this.cacheFile.exists();
        int i3 = 3;
        try {
            SQLiteDatabase sQLiteDatabase = new SQLiteDatabase(this.cacheFile.getPath());
            this.database = sQLiteDatabase;
            sQLiteDatabase.executeFast("PRAGMA secure_delete = ON").stepThis().dispose();
            this.database.executeFast("PRAGMA temp_store = MEMORY").stepThis().dispose();
            this.database.executeFast("PRAGMA journal_mode = WAL").stepThis().dispose();
            this.database.executeFast("PRAGMA journal_size_limit = 10485760").stepThis().dispose();
            if (z) {
                if (BuildVars.LOGS_ENABLED) {
                    FileLog.d("create new database");
                }
                this.database.executeFast("CREATE TABLE messages_holes(uid INTEGER, start INTEGER, end INTEGER, PRIMARY KEY(uid, start));").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_end_messages_holes ON messages_holes(uid, end);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE media_holes_v2(uid INTEGER, type INTEGER, start INTEGER, end INTEGER, PRIMARY KEY(uid, type, start));").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_end_media_holes_v2 ON media_holes_v2(uid, type, end);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE scheduled_messages_v2(mid INTEGER, uid INTEGER, send_state INTEGER, date INTEGER, data BLOB, ttl INTEGER, replydata BLOB, reply_to_message_id INTEGER, PRIMARY KEY(mid, uid))").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS send_state_idx_scheduled_messages_v2 ON scheduled_messages_v2(mid, send_state, date);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_date_idx_scheduled_messages_v2 ON scheduled_messages_v2(uid, date);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS reply_to_idx_scheduled_messages_v2 ON scheduled_messages_v2(mid, reply_to_message_id);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE messages_v2(mid INTEGER, uid INTEGER, read_state INTEGER, send_state INTEGER, date INTEGER, data BLOB, out INTEGER, ttl INTEGER, media INTEGER, replydata BLOB, imp INTEGER, mention INTEGER, forwards INTEGER, replies_data BLOB, thread_reply_id INTEGER, is_channel INTEGER, reply_to_message_id INTEGER, custom_params BLOB, PRIMARY KEY(mid, uid))").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_mid_read_out_idx_messages_v2 ON messages_v2(uid, mid, read_state, out);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_date_mid_idx_messages_v2 ON messages_v2(uid, date, mid);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS mid_out_idx_messages_v2 ON messages_v2(mid, out);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS task_idx_messages_v2 ON messages_v2(uid, out, read_state, ttl, date, send_state);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS send_state_idx_messages_v2 ON messages_v2(mid, send_state, date);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_mention_idx_messages_v2 ON messages_v2(uid, mention, read_state);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS is_channel_idx_messages_v2 ON messages_v2(mid, is_channel);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS reply_to_idx_messages_v2 ON messages_v2(mid, reply_to_message_id);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE download_queue(uid INTEGER, type INTEGER, date INTEGER, data BLOB, parent TEXT, PRIMARY KEY (uid, type));").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS type_date_idx_download_queue ON download_queue(type, date);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE user_contacts_v7(key TEXT PRIMARY KEY, uid INTEGER, fname TEXT, sname TEXT, imported INTEGER)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE user_phones_v7(key TEXT, phone TEXT, sphone TEXT, deleted INTEGER, PRIMARY KEY (key, phone))").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS sphone_deleted_idx_user_phones ON user_phones_v7(sphone, deleted);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE dialogs(did INTEGER PRIMARY KEY, date INTEGER, unread_count INTEGER, last_mid INTEGER, inbox_max INTEGER, outbox_max INTEGER, last_mid_i INTEGER, unread_count_i INTEGER, pts INTEGER, date_i INTEGER, pinned INTEGER, flags INTEGER, folder_id INTEGER, data BLOB, unread_reactions INTEGER)").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS date_idx_dialogs ON dialogs(date);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS last_mid_idx_dialogs ON dialogs(last_mid);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS unread_count_idx_dialogs ON dialogs(unread_count);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS last_mid_i_idx_dialogs ON dialogs(last_mid_i);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS unread_count_i_idx_dialogs ON dialogs(unread_count_i);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS folder_id_idx_dialogs ON dialogs(folder_id);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS flags_idx_dialogs ON dialogs(flags);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE dialog_filter(id INTEGER PRIMARY KEY, ord INTEGER, unread_count INTEGER, flags INTEGER, title TEXT)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE dialog_filter_ep(id INTEGER, peer INTEGER, PRIMARY KEY (id, peer))").stepThis().dispose();
                this.database.executeFast("CREATE TABLE dialog_filter_pin_v2(id INTEGER, peer INTEGER, pin INTEGER, PRIMARY KEY (id, peer))").stepThis().dispose();
                this.database.executeFast("CREATE TABLE randoms_v2(random_id INTEGER, mid INTEGER, uid INTEGER, PRIMARY KEY (random_id, mid, uid))").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS mid_idx_randoms_v2 ON randoms_v2(mid, uid);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE enc_tasks_v4(mid INTEGER, uid INTEGER, date INTEGER, media INTEGER, PRIMARY KEY(mid, uid, media))").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS date_idx_enc_tasks_v4 ON enc_tasks_v4(date);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE messages_seq(mid INTEGER PRIMARY KEY, seq_in INTEGER, seq_out INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS seq_idx_messages_seq ON messages_seq(seq_in, seq_out);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE params(id INTEGER PRIMARY KEY, seq INTEGER, pts INTEGER, date INTEGER, qts INTEGER, lsv INTEGER, sg INTEGER, pbytes BLOB)").stepThis().dispose();
                this.database.executeFast("INSERT INTO params VALUES(1, 0, 0, 0, 0, 0, 0, NULL)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE media_v4(mid INTEGER, uid INTEGER, date INTEGER, type INTEGER, data BLOB, PRIMARY KEY(mid, uid, type))").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_mid_type_date_idx_media_v4 ON media_v4(uid, mid, type, date);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE bot_keyboard(uid INTEGER PRIMARY KEY, mid INTEGER, info BLOB)").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS bot_keyboard_idx_mid_v2 ON bot_keyboard(mid, uid);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE chat_settings_v2(uid INTEGER PRIMARY KEY, info BLOB, pinned INTEGER, online INTEGER, inviter INTEGER, links INTEGER)").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS chat_settings_pinned_idx ON chat_settings_v2(uid, pinned) WHERE pinned != 0;").stepThis().dispose();
                this.database.executeFast("CREATE TABLE user_settings(uid INTEGER PRIMARY KEY, info BLOB, pinned INTEGER)").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS user_settings_pinned_idx ON user_settings(uid, pinned) WHERE pinned != 0;").stepThis().dispose();
                this.database.executeFast("CREATE TABLE chat_pinned_v2(uid INTEGER, mid INTEGER, data BLOB, PRIMARY KEY (uid, mid));").stepThis().dispose();
                this.database.executeFast("CREATE TABLE chat_pinned_count(uid INTEGER PRIMARY KEY, count INTEGER, end INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE chat_hints(did INTEGER, type INTEGER, rating REAL, date INTEGER, PRIMARY KEY(did, type))").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS chat_hints_rating_idx ON chat_hints(rating);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE botcache(id TEXT PRIMARY KEY, date INTEGER, data BLOB)").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS botcache_date_idx ON botcache(date);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE users_data(uid INTEGER PRIMARY KEY, about TEXT)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE users(uid INTEGER PRIMARY KEY, name TEXT, status INTEGER, data BLOB)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE chats(uid INTEGER PRIMARY KEY, name TEXT, data BLOB)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE enc_chats(uid INTEGER PRIMARY KEY, user INTEGER, name TEXT, data BLOB, g BLOB, authkey BLOB, ttl INTEGER, layer INTEGER, seq_in INTEGER, seq_out INTEGER, use_count INTEGER, exchange_id INTEGER, key_date INTEGER, fprint INTEGER, fauthkey BLOB, khash BLOB, in_seq_no INTEGER, admin_id INTEGER, mtproto_seq INTEGER)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE channel_users_v2(did INTEGER, uid INTEGER, date INTEGER, data BLOB, PRIMARY KEY(did, uid))").stepThis().dispose();
                this.database.executeFast("CREATE TABLE channel_admins_v3(did INTEGER, uid INTEGER, data BLOB, PRIMARY KEY(did, uid))").stepThis().dispose();
                this.database.executeFast("CREATE TABLE contacts(uid INTEGER PRIMARY KEY, mutual INTEGER)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE user_photos(uid INTEGER, id INTEGER, data BLOB, PRIMARY KEY (uid, id))").stepThis().dispose();
                this.database.executeFast("CREATE TABLE dialog_settings(did INTEGER PRIMARY KEY, flags INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE web_recent_v3(id TEXT, type INTEGER, image_url TEXT, thumb_url TEXT, local_url TEXT, width INTEGER, height INTEGER, size INTEGER, date INTEGER, document BLOB, PRIMARY KEY (id, type));").stepThis().dispose();
                this.database.executeFast("CREATE TABLE stickers_v2(id INTEGER PRIMARY KEY, data BLOB, date INTEGER, hash INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE stickers_featured(id INTEGER PRIMARY KEY, data BLOB, unread BLOB, date INTEGER, hash INTEGER, premium INTEGER, emoji INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE stickers_dice(emoji TEXT PRIMARY KEY, data BLOB, date INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE hashtag_recent_v2(id TEXT PRIMARY KEY, date INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE webpage_pending_v2(id INTEGER, mid INTEGER, uid INTEGER, PRIMARY KEY (id, mid, uid));").stepThis().dispose();
                this.database.executeFast("CREATE TABLE sent_files_v2(uid TEXT, type INTEGER, data BLOB, parent TEXT, PRIMARY KEY (uid, type))").stepThis().dispose();
                this.database.executeFast("CREATE TABLE search_recent(did INTEGER PRIMARY KEY, date INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE media_counts_v2(uid INTEGER, type INTEGER, count INTEGER, old INTEGER, PRIMARY KEY(uid, type))").stepThis().dispose();
                this.database.executeFast("CREATE TABLE keyvalue(id TEXT PRIMARY KEY, value TEXT)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE bot_info_v2(uid INTEGER, dialogId INTEGER, info BLOB, PRIMARY KEY(uid, dialogId))").stepThis().dispose();
                this.database.executeFast("CREATE TABLE pending_tasks(id INTEGER PRIMARY KEY, data BLOB);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE requested_holes(uid INTEGER, seq_out_start INTEGER, seq_out_end INTEGER, PRIMARY KEY (uid, seq_out_start, seq_out_end));").stepThis().dispose();
                this.database.executeFast("CREATE TABLE sharing_locations(uid INTEGER PRIMARY KEY, mid INTEGER, date INTEGER, period INTEGER, message BLOB, proximity INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE shortcut_widget(id INTEGER, did INTEGER, ord INTEGER, PRIMARY KEY (id, did));").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS shortcut_widget_did ON shortcut_widget(did);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE emoji_keywords_v2(lang TEXT, keyword TEXT, emoji TEXT, PRIMARY KEY(lang, keyword, emoji));").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS emoji_keywords_v2_keyword ON emoji_keywords_v2(keyword);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE emoji_keywords_info_v2(lang TEXT PRIMARY KEY, alias TEXT, version INTEGER, date INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE wallpapers2(uid INTEGER PRIMARY KEY, data BLOB, num INTEGER)").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS wallpapers_num ON wallpapers2(num);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE unread_push_messages(uid INTEGER, mid INTEGER, random INTEGER, date INTEGER, data BLOB, fm TEXT, name TEXT, uname TEXT, flags INTEGER, PRIMARY KEY(uid, mid))").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS unread_push_messages_idx_date ON unread_push_messages(date);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS unread_push_messages_idx_random ON unread_push_messages(random);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE polls_v2(mid INTEGER, uid INTEGER, id INTEGER, PRIMARY KEY (mid, uid));").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS polls_id_v2 ON polls_v2(id);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE reactions(data BLOB, hash INTEGER, date INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE reaction_mentions(message_id INTEGER, state INTEGER, dialog_id INTEGER, PRIMARY KEY(message_id, dialog_id))").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS reaction_mentions_did ON reaction_mentions(dialog_id);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE downloading_documents(data BLOB, hash INTEGER, id INTEGER, state INTEGER, date INTEGER, PRIMARY KEY(hash, id));").stepThis().dispose();
                this.database.executeFast("CREATE TABLE animated_emoji(document_id INTEGER PRIMARY KEY, data BLOB);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE attach_menu_bots(data BLOB, hash INTEGER, date INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE premium_promo(data BLOB, date INTEGER);").stepThis().dispose();
                this.database.executeFast("PRAGMA user_version = 100").stepThis().dispose();
                AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda15(this));
                loadDialogFilters();
                loadUnreadMessages();
                loadPendingTasks();
                try {
                    this.openSync.countDown();
                } catch (Throwable unused) {
                }
                AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda18(this));
                return;
            }
            int intValue = this.database.executeInt("PRAGMA user_version", new Object[0]).intValue();
            if (BuildVars.LOGS_ENABLED) {
                FileLog.d("current db version = " + intValue);
            }
            if (intValue != 0) {
                SQLiteCursor queryFinalized = this.database.queryFinalized("SELECT seq, pts, date, qts, lsv, sg, pbytes FROM params WHERE id = 1", new Object[0]);
                if (queryFinalized.next()) {
                    this.lastSeqValue = queryFinalized.intValue(0);
                    this.lastPtsValue = queryFinalized.intValue(1);
                    this.lastDateValue = queryFinalized.intValue(2);
                    this.lastQtsValue = queryFinalized.intValue(3);
                    this.lastSecretVersion = queryFinalized.intValue(4);
                    this.secretG = queryFinalized.intValue(5);
                    if (queryFinalized.isNull(6)) {
                        this.secretPBytes = null;
                    } else {
                        byte[] byteArrayValue = queryFinalized.byteArrayValue(6);
                        this.secretPBytes = byteArrayValue;
                        if (byteArrayValue != null && byteArrayValue.length == 1) {
                            this.secretPBytes = null;
                        }
                    }
                }
                queryFinalized.dispose();
                if (intValue < 100) {
                    updateDbToLastVersion(intValue);
                }
                AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda15(this));
                loadDialogFilters();
                loadUnreadMessages();
                loadPendingTasks();
                this.openSync.countDown();
                AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda18(this));
                return;
            }
            throw new Exception("malformed");
        } catch (Exception e) {
            Exception exc = e;
            if (BuildVars.DEBUG_PRIVATE_VERSION) {
                throw exc;
            }
            FileLog.e((Throwable) exc);
            throw new RuntimeException("malformed");
        } catch (Exception e2) {
            Exception exc2 = e2;
            if (exc2.getMessage() != null) {
                if (exc2.getMessage().contains("malformed")) {
                    throw new RuntimeException("malformed");
                }
            }
            FileLog.e((Throwable) exc2);
            try {
                this.database.executeFast("CREATE TABLE IF NOT EXISTS params(id INTEGER PRIMARY KEY, seq INTEGER, pts INTEGER, date INTEGER, qts INTEGER, lsv INTEGER, sg INTEGER, pbytes BLOB)").stepThis().dispose();
                this.database.executeFast("INSERT INTO params VALUES(1, 0, 0, 0, 0, 0, 0, NULL)").stepThis().dispose();
            } catch (Exception e3) {
                FileLog.e((Throwable) e3);
            }
        } catch (Exception e4) {
            Exception exc3 = e4;
            FileLog.e((Throwable) exc3);
            if (BuildVars.DEBUG_PRIVATE_VERSION) {
                throw new RuntimeException(exc3);
            } else if (i2 < 3 && exc3.getMessage() != null && exc3.getMessage().contains("malformed")) {
                if (i2 == 2) {
                    cleanupInternal(true);
                    for (int i4 = 0; i4 < 2; i4++) {
                        getUserConfig().setDialogsLoadOffset(i4, 0, 0, 0, 0, 0, 0);
                        getUserConfig().setTotalDialogsCount(i4, 0);
                    }
                    getUserConfig().saveConfig(false);
                } else {
                    cleanupInternal(false);
                }
                if (i2 == 1) {
                    i3 = 2;
                }
                openDatabase(i3);
            }
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$openDatabase$1() {
        if (this.databaseMigrationInProgress) {
            this.databaseMigrationInProgress = false;
            NotificationCenter.getInstance(this.currentAccount).postNotificationName(NotificationCenter.onDatabaseMigration, Boolean.FALSE);
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$openDatabase$2() {
        this.showClearDatabaseAlert = false;
        NotificationCenter.getInstance(this.currentAccount).postNotificationName(NotificationCenter.onDatabaseOpened, new Object[0]);
    }

    public boolean isDatabaseMigrationInProgress() {
        return this.databaseMigrationInProgress;
    }

    private void updateDbToLastVersion(int i) throws Exception {
        SQLiteCursor sQLiteCursor;
        SQLiteCursor sQLiteCursor2;
        int i2;
        int i3;
        NativeByteBuffer nativeByteBuffer;
        SQLiteCursor sQLiteCursor3;
        SQLiteCursor sQLiteCursor4;
        SQLiteCursor sQLiteCursor5;
        SQLiteCursor sQLiteCursor6;
        SQLiteCursor sQLiteCursor7;
        SQLiteCursor sQLiteCursor8;
        MessagesStorage messagesStorage = this;
        int i4 = i;
        AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda17(messagesStorage));
        FileLog.d("MessagesStorage start db migration from " + i4 + " to " + 100);
        int i5 = 4;
        if (i4 < 4) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS user_photos(uid INTEGER, id INTEGER, data BLOB, PRIMARY KEY (uid, id))").stepThis().dispose();
            messagesStorage.database.executeFast("DROP INDEX IF EXISTS read_state_out_idx_messages;").stepThis().dispose();
            messagesStorage.database.executeFast("DROP INDEX IF EXISTS ttl_idx_messages;").stepThis().dispose();
            messagesStorage.database.executeFast("DROP INDEX IF EXISTS date_idx_messages;").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS mid_out_idx_messages ON messages(mid, out);").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS task_idx_messages ON messages(uid, out, read_state, ttl, date, send_state);").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS uid_date_mid_idx_messages ON messages(uid, date, mid);").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS user_contacts_v6(uid INTEGER PRIMARY KEY, fname TEXT, sname TEXT)").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS user_phones_v6(uid INTEGER, phone TEXT, sphone TEXT, deleted INTEGER, PRIMARY KEY (uid, phone))").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS sphone_deleted_idx_user_phones ON user_phones_v6(sphone, deleted);").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS mid_idx_randoms ON randoms(mid);").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS sent_files_v2(uid TEXT, type INTEGER, data BLOB, PRIMARY KEY (uid, type))").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS download_queue(uid INTEGER, type INTEGER, date INTEGER, data BLOB, PRIMARY KEY (uid, type));").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS type_date_idx_download_queue ON download_queue(type, date);").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS dialog_settings(did INTEGER PRIMARY KEY, flags INTEGER);").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS unread_count_idx_dialogs ON dialogs(unread_count);").stepThis().dispose();
            messagesStorage.database.executeFast("UPDATE messages SET send_state = 2 WHERE mid < 0 AND send_state = 1").stepThis().dispose();
            fixNotificationSettings();
            messagesStorage.database.executeFast("PRAGMA user_version = 4").stepThis().dispose();
            i4 = 4;
        }
        int i6 = 6;
        int i7 = 2;
        int i8 = 1;
        int i9 = 0;
        if (i4 == 4) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS enc_tasks_v2(mid INTEGER PRIMARY KEY, date INTEGER)").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS date_idx_enc_tasks_v2 ON enc_tasks_v2(date);").stepThis().dispose();
            messagesStorage.database.beginTransaction();
            SQLiteCursor queryFinalized = messagesStorage.database.queryFinalized("SELECT date, data FROM enc_tasks WHERE 1", new Object[0]);
            SQLitePreparedStatement executeFast = messagesStorage.database.executeFast("REPLACE INTO enc_tasks_v2 VALUES(?, ?)");
            if (queryFinalized.next()) {
                int intValue = queryFinalized.intValue(0);
                NativeByteBuffer byteBufferValue = queryFinalized.byteBufferValue(1);
                if (byteBufferValue != null) {
                    int limit = byteBufferValue.limit();
                    for (int i10 = 0; i10 < limit / 4; i10++) {
                        executeFast.requery();
                        executeFast.bindInteger(1, byteBufferValue.readInt32(false));
                        executeFast.bindInteger(2, intValue);
                        executeFast.step();
                    }
                    byteBufferValue.reuse();
                }
            }
            executeFast.dispose();
            queryFinalized.dispose();
            messagesStorage.database.commitTransaction();
            messagesStorage.database.executeFast("DROP INDEX IF EXISTS date_idx_enc_tasks;").stepThis().dispose();
            messagesStorage.database.executeFast("DROP TABLE IF EXISTS enc_tasks;").stepThis().dispose();
            messagesStorage.database.executeFast("ALTER TABLE messages ADD COLUMN media INTEGER default 0").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 6").stepThis().dispose();
            i4 = 6;
        }
        if (i4 == 6) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS messages_seq(mid INTEGER PRIMARY KEY, seq_in INTEGER, seq_out INTEGER);").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS seq_idx_messages_seq ON messages_seq(seq_in, seq_out);").stepThis().dispose();
            messagesStorage.database.executeFast("ALTER TABLE enc_chats ADD COLUMN layer INTEGER default 0").stepThis().dispose();
            messagesStorage.database.executeFast("ALTER TABLE enc_chats ADD COLUMN seq_in INTEGER default 0").stepThis().dispose();
            messagesStorage.database.executeFast("ALTER TABLE enc_chats ADD COLUMN seq_out INTEGER default 0").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 7").stepThis().dispose();
            i4 = 7;
        }
        if (i4 == 7 || i4 == 8 || i4 == 9) {
            messagesStorage.database.executeFast("ALTER TABLE enc_chats ADD COLUMN use_count INTEGER default 0").stepThis().dispose();
            messagesStorage.database.executeFast("ALTER TABLE enc_chats ADD COLUMN exchange_id INTEGER default 0").stepThis().dispose();
            messagesStorage.database.executeFast("ALTER TABLE enc_chats ADD COLUMN key_date INTEGER default 0").stepThis().dispose();
            messagesStorage.database.executeFast("ALTER TABLE enc_chats ADD COLUMN fprint INTEGER default 0").stepThis().dispose();
            messagesStorage.database.executeFast("ALTER TABLE enc_chats ADD COLUMN fauthkey BLOB default NULL").stepThis().dispose();
            messagesStorage.database.executeFast("ALTER TABLE enc_chats ADD COLUMN khash BLOB default NULL").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 10").stepThis().dispose();
            i4 = 10;
        }
        if (i4 == 10) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS web_recent_v3(id TEXT, type INTEGER, image_url TEXT, thumb_url TEXT, local_url TEXT, width INTEGER, height INTEGER, size INTEGER, date INTEGER, PRIMARY KEY (id, type));").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 11").stepThis().dispose();
            i4 = 11;
        }
        if (i4 == 11 || i4 == 12) {
            messagesStorage.database.executeFast("DROP INDEX IF EXISTS uid_mid_idx_media;").stepThis().dispose();
            messagesStorage.database.executeFast("DROP INDEX IF EXISTS mid_idx_media;").stepThis().dispose();
            messagesStorage.database.executeFast("DROP INDEX IF EXISTS uid_date_mid_idx_media;").stepThis().dispose();
            messagesStorage.database.executeFast("DROP TABLE IF EXISTS media;").stepThis().dispose();
            messagesStorage.database.executeFast("DROP TABLE IF EXISTS media_counts;").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS media_v2(mid INTEGER PRIMARY KEY, uid INTEGER, date INTEGER, type INTEGER, data BLOB)").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS media_counts_v2(uid INTEGER, type INTEGER, count INTEGER, PRIMARY KEY(uid, type))").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS uid_mid_type_date_idx_media ON media_v2(uid, mid, type, date);").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS keyvalue(id TEXT PRIMARY KEY, value TEXT)").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 13").stepThis().dispose();
            i4 = 13;
        }
        if (i4 == 13) {
            messagesStorage.database.executeFast("ALTER TABLE messages ADD COLUMN replydata BLOB default NULL").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 14").stepThis().dispose();
            i4 = 14;
        }
        if (i4 == 14) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS hashtag_recent_v2(id TEXT PRIMARY KEY, date INTEGER);").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 15").stepThis().dispose();
            i4 = 15;
        }
        if (i4 == 15) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS webpage_pending(id INTEGER, mid INTEGER, PRIMARY KEY (id, mid));").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 16").stepThis().dispose();
            i4 = 16;
        }
        if (i4 == 16) {
            messagesStorage.database.executeFast("ALTER TABLE dialogs ADD COLUMN inbox_max INTEGER default 0").stepThis().dispose();
            messagesStorage.database.executeFast("ALTER TABLE dialogs ADD COLUMN outbox_max INTEGER default 0").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 17").stepThis().dispose();
            i4 = 17;
        }
        if (i4 == 17) {
            messagesStorage.database.executeFast("PRAGMA user_version = 18").stepThis().dispose();
            i4 = 18;
        }
        if (i4 == 18) {
            messagesStorage.database.executeFast("DROP TABLE IF EXISTS stickers;").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS stickers_v2(id INTEGER PRIMARY KEY, data BLOB, date INTEGER, hash INTEGER);").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 19").stepThis().dispose();
            i4 = 19;
        }
        if (i4 == 19) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS bot_keyboard(uid INTEGER PRIMARY KEY, mid INTEGER, info BLOB)").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS bot_keyboard_idx_mid ON bot_keyboard(mid);").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 20").stepThis().dispose();
            i4 = 20;
        }
        if (i4 == 20) {
            messagesStorage.database.executeFast("CREATE TABLE search_recent(did INTEGER PRIMARY KEY, date INTEGER);").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 21").stepThis().dispose();
            i4 = 21;
        }
        if (i4 == 21) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS chat_settings_v2(uid INTEGER PRIMARY KEY, info BLOB)").stepThis().dispose();
            SQLiteCursor queryFinalized2 = messagesStorage.database.queryFinalized("SELECT uid, participants FROM chat_settings WHERE uid < 0", new Object[0]);
            SQLitePreparedStatement executeFast2 = messagesStorage.database.executeFast("REPLACE INTO chat_settings_v2 VALUES(?, ?)");
            while (queryFinalized2.next()) {
                long intValue2 = (long) queryFinalized2.intValue(0);
                NativeByteBuffer byteBufferValue2 = queryFinalized2.byteBufferValue(1);
                if (byteBufferValue2 != null) {
                    TLRPC$ChatParticipants TLdeserialize = TLRPC$ChatParticipants.TLdeserialize(byteBufferValue2, byteBufferValue2.readInt32(false), false);
                    byteBufferValue2.reuse();
                    if (TLdeserialize != null) {
                        TLRPC$TL_chatFull tLRPC$TL_chatFull = new TLRPC$TL_chatFull();
                        tLRPC$TL_chatFull.id = intValue2;
                        tLRPC$TL_chatFull.chat_photo = new TLRPC$TL_photoEmpty();
                        tLRPC$TL_chatFull.notify_settings = new TLRPC$TL_peerNotifySettingsEmpty_layer77();
                        tLRPC$TL_chatFull.exported_invite = null;
                        tLRPC$TL_chatFull.participants = TLdeserialize;
                        NativeByteBuffer nativeByteBuffer2 = new NativeByteBuffer(tLRPC$TL_chatFull.getObjectSize());
                        tLRPC$TL_chatFull.serializeToStream(nativeByteBuffer2);
                        executeFast2.requery();
                        executeFast2.bindLong(1, intValue2);
                        executeFast2.bindByteBuffer(2, nativeByteBuffer2);
                        executeFast2.step();
                        nativeByteBuffer2.reuse();
                    }
                }
            }
            executeFast2.dispose();
            queryFinalized2.dispose();
            messagesStorage.database.executeFast("DROP TABLE IF EXISTS chat_settings;").stepThis().dispose();
            messagesStorage.database.executeFast("ALTER TABLE dialogs ADD COLUMN last_mid_i INTEGER default 0").stepThis().dispose();
            messagesStorage.database.executeFast("ALTER TABLE dialogs ADD COLUMN unread_count_i INTEGER default 0").stepThis().dispose();
            messagesStorage.database.executeFast("ALTER TABLE dialogs ADD COLUMN pts INTEGER default 0").stepThis().dispose();
            messagesStorage.database.executeFast("ALTER TABLE dialogs ADD COLUMN date_i INTEGER default 0").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS last_mid_i_idx_dialogs ON dialogs(last_mid_i);").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS unread_count_i_idx_dialogs ON dialogs(unread_count_i);").stepThis().dispose();
            messagesStorage.database.executeFast("ALTER TABLE messages ADD COLUMN imp INTEGER default 0").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS messages_holes(uid INTEGER, start INTEGER, end INTEGER, PRIMARY KEY(uid, start));").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS uid_end_messages_holes ON messages_holes(uid, end);").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 22").stepThis().dispose();
            i4 = 22;
        }
        if (i4 == 22) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS media_holes_v2(uid INTEGER, type INTEGER, start INTEGER, end INTEGER, PRIMARY KEY(uid, type, start));").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS uid_end_media_holes_v2 ON media_holes_v2(uid, type, end);").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 23").stepThis().dispose();
            i4 = 23;
        }
        if (i4 == 23 || i4 == 24) {
            messagesStorage.database.executeFast("DELETE FROM media_holes_v2 WHERE uid != 0 AND type >= 0 AND start IN (0, 1)").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 25").stepThis().dispose();
            i4 = 25;
        }
        if (i4 == 25 || i4 == 26) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS channel_users_v2(did INTEGER, uid INTEGER, date INTEGER, data BLOB, PRIMARY KEY(did, uid))").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 27").stepThis().dispose();
            i4 = 27;
        }
        if (i4 == 27) {
            messagesStorage.database.executeFast("ALTER TABLE web_recent_v3 ADD COLUMN document BLOB default NULL").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 28").stepThis().dispose();
            i4 = 28;
        }
        if (i4 == 28 || i4 == 29) {
            messagesStorage.database.executeFast("DELETE FROM sent_files_v2 WHERE 1").stepThis().dispose();
            messagesStorage.database.executeFast("DELETE FROM download_queue WHERE 1").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 30").stepThis().dispose();
            i4 = 30;
        }
        if (i4 == 30) {
            messagesStorage.database.executeFast("ALTER TABLE chat_settings_v2 ADD COLUMN pinned INTEGER default 0").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS chat_settings_pinned_idx ON chat_settings_v2(uid, pinned) WHERE pinned != 0;").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS users_data(uid INTEGER PRIMARY KEY, about TEXT)").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 31").stepThis().dispose();
            i4 = 31;
        }
        if (i4 == 31) {
            messagesStorage.database.executeFast("DROP TABLE IF EXISTS bot_recent;").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS chat_hints(did INTEGER, type INTEGER, rating REAL, date INTEGER, PRIMARY KEY(did, type))").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS chat_hints_rating_idx ON chat_hints(rating);").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 32").stepThis().dispose();
            i4 = 32;
        }
        if (i4 == 32) {
            messagesStorage.database.executeFast("DROP INDEX IF EXISTS uid_mid_idx_imp_messages;").stepThis().dispose();
            messagesStorage.database.executeFast("DROP INDEX IF EXISTS uid_date_mid_imp_idx_messages;").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 33").stepThis().dispose();
            i4 = 33;
        }
        if (i4 == 33) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS pending_tasks(id INTEGER PRIMARY KEY, data BLOB);").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 34").stepThis().dispose();
            i4 = 34;
        }
        if (i4 == 34) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS stickers_featured(id INTEGER PRIMARY KEY, data BLOB, unread BLOB, date INTEGER, hash INTEGER);").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 35").stepThis().dispose();
            i4 = 35;
        }
        if (i4 == 35) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS requested_holes(uid INTEGER, seq_out_start INTEGER, seq_out_end INTEGER, PRIMARY KEY (uid, seq_out_start, seq_out_end));").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 36").stepThis().dispose();
            i4 = 36;
        }
        if (i4 == 36) {
            messagesStorage.database.executeFast("ALTER TABLE enc_chats ADD COLUMN in_seq_no INTEGER default 0").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 37").stepThis().dispose();
            i4 = 37;
        }
        if (i4 == 37) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS botcache(id TEXT PRIMARY KEY, date INTEGER, data BLOB)").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS botcache_date_idx ON botcache(date);").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 38").stepThis().dispose();
            i4 = 38;
        }
        if (i4 == 38) {
            messagesStorage.database.executeFast("ALTER TABLE dialogs ADD COLUMN pinned INTEGER default 0").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 39").stepThis().dispose();
            i4 = 39;
        }
        if (i4 == 39) {
            messagesStorage.database.executeFast("ALTER TABLE enc_chats ADD COLUMN admin_id INTEGER default 0").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 40").stepThis().dispose();
            i4 = 40;
        }
        if (i4 == 40) {
            fixNotificationSettings();
            messagesStorage.database.executeFast("PRAGMA user_version = 41").stepThis().dispose();
            i4 = 41;
        }
        if (i4 == 41) {
            messagesStorage.database.executeFast("ALTER TABLE messages ADD COLUMN mention INTEGER default 0").stepThis().dispose();
            messagesStorage.database.executeFast("ALTER TABLE user_contacts_v6 ADD COLUMN imported INTEGER default 0").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS uid_mention_idx_messages ON messages(uid, mention, read_state);").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 42").stepThis().dispose();
            i4 = 42;
        }
        if (i4 == 42) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS sharing_locations(uid INTEGER PRIMARY KEY, mid INTEGER, date INTEGER, period INTEGER, message BLOB);").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 43").stepThis().dispose();
            i4 = 43;
        }
        if (i4 == 43) {
            messagesStorage.database.executeFast("PRAGMA user_version = 44").stepThis().dispose();
            i4 = 44;
        }
        if (i4 == 44) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS user_contacts_v7(key TEXT PRIMARY KEY, uid INTEGER, fname TEXT, sname TEXT, imported INTEGER)").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS user_phones_v7(key TEXT, phone TEXT, sphone TEXT, deleted INTEGER, PRIMARY KEY (key, phone))").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS sphone_deleted_idx_user_phones ON user_phones_v7(sphone, deleted);").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 45").stepThis().dispose();
            i4 = 45;
        }
        if (i4 == 45) {
            messagesStorage.database.executeFast("ALTER TABLE enc_chats ADD COLUMN mtproto_seq INTEGER default 0").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 46").stepThis().dispose();
            i4 = 46;
        }
        if (i4 == 46) {
            messagesStorage.database.executeFast("DELETE FROM botcache WHERE 1").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 47").stepThis().dispose();
            i4 = 47;
        }
        if (i4 == 47) {
            messagesStorage.database.executeFast("ALTER TABLE dialogs ADD COLUMN flags INTEGER default 0").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 48").stepThis().dispose();
            i4 = 48;
        }
        if (i4 == 48) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS unread_push_messages(uid INTEGER, mid INTEGER, random INTEGER, date INTEGER, data BLOB, fm TEXT, name TEXT, uname TEXT, flags INTEGER, PRIMARY KEY(uid, mid))").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS unread_push_messages_idx_date ON unread_push_messages(date);").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS unread_push_messages_idx_random ON unread_push_messages(random);").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 49").stepThis().dispose();
            i4 = 49;
        }
        if (i4 == 49) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS user_settings(uid INTEGER PRIMARY KEY, info BLOB, pinned INTEGER)").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS user_settings_pinned_idx ON user_settings(uid, pinned) WHERE pinned != 0;").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 50").stepThis().dispose();
            i4 = 50;
        }
        if (i4 == 50) {
            messagesStorage.database.executeFast("DELETE FROM sent_files_v2 WHERE 1").stepThis().dispose();
            messagesStorage.database.executeFast("ALTER TABLE sent_files_v2 ADD COLUMN parent TEXT").stepThis().dispose();
            messagesStorage.database.executeFast("DELETE FROM download_queue WHERE 1").stepThis().dispose();
            messagesStorage.database.executeFast("ALTER TABLE download_queue ADD COLUMN parent TEXT").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 51").stepThis().dispose();
            i4 = 51;
        }
        if (i4 == 51) {
            messagesStorage.database.executeFast("ALTER TABLE media_counts_v2 ADD COLUMN old INTEGER").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 52").stepThis().dispose();
            i4 = 52;
        }
        if (i4 == 52) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS polls_v2(mid INTEGER, uid INTEGER, id INTEGER, PRIMARY KEY (mid, uid));").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS polls_id ON polls_v2(id);").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 53").stepThis().dispose();
            i4 = 53;
        }
        if (i4 == 53) {
            messagesStorage.database.executeFast("ALTER TABLE chat_settings_v2 ADD COLUMN online INTEGER default 0").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 54").stepThis().dispose();
            i4 = 54;
        }
        if (i4 == 54) {
            messagesStorage.database.executeFast("DROP TABLE IF EXISTS wallpapers;").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 55").stepThis().dispose();
            i4 = 55;
        }
        if (i4 == 55) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS wallpapers2(uid INTEGER PRIMARY KEY, data BLOB, num INTEGER)").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS wallpapers_num ON wallpapers2(num);").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 56").stepThis().dispose();
            i4 = 56;
        }
        if (i4 == 56 || i4 == 57) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS emoji_keywords_v2(lang TEXT, keyword TEXT, emoji TEXT, PRIMARY KEY(lang, keyword, emoji));").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS emoji_keywords_info_v2(lang TEXT PRIMARY KEY, alias TEXT, version INTEGER);").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 58").stepThis().dispose();
            i4 = 58;
        }
        if (i4 == 58) {
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS emoji_keywords_v2_keyword ON emoji_keywords_v2(keyword);").stepThis().dispose();
            messagesStorage.database.executeFast("ALTER TABLE emoji_keywords_info_v2 ADD COLUMN date INTEGER default 0").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 59").stepThis().dispose();
            i4 = 59;
        }
        if (i4 == 59) {
            messagesStorage.database.executeFast("ALTER TABLE dialogs ADD COLUMN folder_id INTEGER default 0").stepThis().dispose();
            messagesStorage.database.executeFast("ALTER TABLE dialogs ADD COLUMN data BLOB default NULL").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS folder_id_idx_dialogs ON dialogs(folder_id);").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 60").stepThis().dispose();
            i4 = 60;
        }
        if (i4 == 60) {
            messagesStorage.database.executeFast("DROP TABLE IF EXISTS channel_admins;").stepThis().dispose();
            messagesStorage.database.executeFast("DROP TABLE IF EXISTS blocked_users;").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 61").stepThis().dispose();
            i4 = 61;
        }
        if (i4 == 61) {
            messagesStorage.database.executeFast("DROP INDEX IF EXISTS send_state_idx_messages;").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS send_state_idx_messages2 ON messages(mid, send_state, date);").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 62").stepThis().dispose();
            i4 = 62;
        }
        if (i4 == 62) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS scheduled_messages(mid INTEGER PRIMARY KEY, uid INTEGER, send_state INTEGER, date INTEGER, data BLOB, ttl INTEGER, replydata BLOB)").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS send_state_idx_scheduled_messages ON scheduled_messages(mid, send_state, date);").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS uid_date_idx_scheduled_messages ON scheduled_messages(uid, date);").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 63").stepThis().dispose();
            i4 = 63;
        }
        if (i4 == 63) {
            messagesStorage.database.executeFast("DELETE FROM download_queue WHERE 1").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 64").stepThis().dispose();
            i4 = 64;
        }
        if (i4 == 64) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS dialog_filter(id INTEGER PRIMARY KEY, ord INTEGER, unread_count INTEGER, flags INTEGER, title TEXT)").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS dialog_filter_ep(id INTEGER, peer INTEGER, PRIMARY KEY (id, peer))").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 65").stepThis().dispose();
            i4 = 65;
        }
        if (i4 == 65) {
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS flags_idx_dialogs ON dialogs(flags);").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 66").stepThis().dispose();
            i4 = 66;
        }
        if (i4 == 66) {
            messagesStorage.database.executeFast("CREATE TABLE dialog_filter_pin_v2(id INTEGER, peer INTEGER, pin INTEGER, PRIMARY KEY (id, peer))").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 67").stepThis().dispose();
            i4 = 67;
        }
        if (i4 == 67) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS stickers_dice(emoji TEXT PRIMARY KEY, data BLOB, date INTEGER);").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 68").stepThis().dispose();
            i4 = 68;
        }
        if (i4 == 68) {
            messagesStorage.executeNoException("ALTER TABLE messages ADD COLUMN forwards INTEGER default 0");
            messagesStorage.database.executeFast("PRAGMA user_version = 69").stepThis().dispose();
            i4 = 69;
        }
        if (i4 == 69) {
            messagesStorage.executeNoException("ALTER TABLE messages ADD COLUMN replies_data BLOB default NULL");
            messagesStorage.executeNoException("ALTER TABLE messages ADD COLUMN thread_reply_id INTEGER default 0");
            messagesStorage.database.executeFast("PRAGMA user_version = 70").stepThis().dispose();
            i4 = 70;
        }
        if (i4 == 70) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS chat_pinned_v2(uid INTEGER, mid INTEGER, data BLOB, PRIMARY KEY (uid, mid));").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 71").stepThis().dispose();
            i4 = 71;
        }
        if (i4 == 71) {
            messagesStorage.executeNoException("ALTER TABLE sharing_locations ADD COLUMN proximity INTEGER default 0");
            messagesStorage.database.executeFast("PRAGMA user_version = 72").stepThis().dispose();
            i4 = 72;
        }
        if (i4 == 72) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS chat_pinned_count(uid INTEGER PRIMARY KEY, count INTEGER, end INTEGER);").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 73").stepThis().dispose();
            i4 = 73;
        }
        if (i4 == 73) {
            messagesStorage.executeNoException("ALTER TABLE chat_settings_v2 ADD COLUMN inviter INTEGER default 0");
            messagesStorage.database.executeFast("PRAGMA user_version = 74").stepThis().dispose();
            i4 = 74;
        }
        if (i4 == 74) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS shortcut_widget(id INTEGER, did INTEGER, ord INTEGER, PRIMARY KEY (id, did));").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS shortcut_widget_did ON shortcut_widget(did);").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 75").stepThis().dispose();
            i4 = 75;
        }
        if (i4 == 75) {
            messagesStorage.executeNoException("ALTER TABLE chat_settings_v2 ADD COLUMN links INTEGER default 0");
            messagesStorage.database.executeFast("PRAGMA user_version = 76").stepThis().dispose();
            i4 = 76;
        }
        if (i4 == 76) {
            messagesStorage.executeNoException("ALTER TABLE enc_tasks_v2 ADD COLUMN media INTEGER default -1");
            messagesStorage.database.executeFast("PRAGMA user_version = 77").stepThis().dispose();
            i4 = 77;
        }
        if (i4 == 77) {
            messagesStorage.database.executeFast("DROP TABLE IF EXISTS channel_admins_v2;").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS channel_admins_v3(did INTEGER, uid INTEGER, data BLOB, PRIMARY KEY(did, uid))").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 78").stepThis().dispose();
            i4 = 78;
        }
        if (i4 == 78) {
            messagesStorage.database.executeFast("DROP TABLE IF EXISTS bot_info;").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS bot_info_v2(uid INTEGER, dialogId INTEGER, info BLOB, PRIMARY KEY(uid, dialogId))").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 79").stepThis().dispose();
            i4 = 79;
        }
        int i11 = 3;
        if (i4 == 79) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS enc_tasks_v3(mid INTEGER, date INTEGER, media INTEGER, PRIMARY KEY(mid, media))").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS date_idx_enc_tasks_v3 ON enc_tasks_v3(date);").stepThis().dispose();
            messagesStorage.database.beginTransaction();
            SQLiteCursor queryFinalized3 = messagesStorage.database.queryFinalized("SELECT mid, date, media FROM enc_tasks_v2 WHERE 1", new Object[0]);
            SQLitePreparedStatement executeFast3 = messagesStorage.database.executeFast("REPLACE INTO enc_tasks_v3 VALUES(?, ?, ?)");
            if (queryFinalized3.next()) {
                long longValue = queryFinalized3.longValue(0);
                int intValue3 = queryFinalized3.intValue(1);
                int intValue4 = queryFinalized3.intValue(2);
                executeFast3.requery();
                executeFast3.bindLong(1, longValue);
                executeFast3.bindInteger(2, intValue3);
                executeFast3.bindInteger(3, intValue4);
                executeFast3.step();
            }
            executeFast3.dispose();
            queryFinalized3.dispose();
            messagesStorage.database.commitTransaction();
            messagesStorage.database.executeFast("DROP INDEX IF EXISTS date_idx_enc_tasks_v2;").stepThis().dispose();
            messagesStorage.database.executeFast("DROP TABLE IF EXISTS enc_tasks_v2;").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 80").stepThis().dispose();
            i4 = 80;
        }
        int i12 = 5;
        if (i4 == 80) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS scheduled_messages_v2(mid INTEGER, uid INTEGER, send_state INTEGER, date INTEGER, data BLOB, ttl INTEGER, replydata BLOB, PRIMARY KEY(mid, uid))").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS send_state_idx_scheduled_messages_v2 ON scheduled_messages_v2(mid, send_state, date);").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS uid_date_idx_scheduled_messages_v2 ON scheduled_messages_v2(uid, date);").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS bot_keyboard_idx_mid_v2 ON bot_keyboard(mid, uid);").stepThis().dispose();
            messagesStorage.database.executeFast("DROP INDEX IF EXISTS bot_keyboard_idx_mid;").stepThis().dispose();
            messagesStorage.database.beginTransaction();
            try {
                sQLiteCursor8 = messagesStorage.database.queryFinalized("SELECT mid, uid, send_state, date, data, ttl, replydata FROM scheduled_messages_v2 WHERE 1", new Object[0]);
            } catch (Exception e) {
                FileLog.e((Throwable) e);
                sQLiteCursor8 = null;
            }
            if (sQLiteCursor8 != null) {
                SQLitePreparedStatement executeFast4 = messagesStorage.database.executeFast("REPLACE INTO scheduled_messages_v2 VALUES(?, ?, ?, ?, ?, ?, ?)");
                while (sQLiteCursor8.next()) {
                    NativeByteBuffer byteBufferValue3 = sQLiteCursor8.byteBufferValue(4);
                    if (byteBufferValue3 != null) {
                        int intValue5 = sQLiteCursor8.intValue(i9);
                        long longValue2 = sQLiteCursor8.longValue(1);
                        int intValue6 = sQLiteCursor8.intValue(2);
                        int intValue7 = sQLiteCursor8.intValue(3);
                        int intValue8 = sQLiteCursor8.intValue(i12);
                        NativeByteBuffer byteBufferValue4 = sQLiteCursor8.byteBufferValue(6);
                        executeFast4.requery();
                        executeFast4.bindInteger(1, intValue5);
                        executeFast4.bindLong(2, longValue2);
                        executeFast4.bindInteger(3, intValue6);
                        executeFast4.bindByteBuffer(4, byteBufferValue3);
                        executeFast4.bindInteger(5, intValue7);
                        executeFast4.bindInteger(6, intValue8);
                        if (byteBufferValue4 != null) {
                            executeFast4.bindByteBuffer(7, byteBufferValue4);
                        } else {
                            executeFast4.bindNull(7);
                        }
                        executeFast4.step();
                        if (byteBufferValue4 != null) {
                            byteBufferValue4.reuse();
                        }
                        byteBufferValue3.reuse();
                        i9 = 0;
                        i12 = 5;
                    }
                }
                sQLiteCursor8.dispose();
                executeFast4.dispose();
            }
            messagesStorage.database.executeFast("DROP INDEX IF EXISTS send_state_idx_scheduled_messages;").stepThis().dispose();
            messagesStorage.database.executeFast("DROP INDEX IF EXISTS uid_date_idx_scheduled_messages;").stepThis().dispose();
            messagesStorage.database.executeFast("DROP TABLE IF EXISTS scheduled_messages;").stepThis().dispose();
            messagesStorage.database.commitTransaction();
            messagesStorage.database.executeFast("PRAGMA user_version = 81").stepThis().dispose();
            i4 = 81;
        }
        if (i4 == 81) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS media_v3(mid INTEGER, uid INTEGER, date INTEGER, type INTEGER, data BLOB, PRIMARY KEY(mid, uid))").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS uid_mid_type_date_idx_media_v3 ON media_v3(uid, mid, type, date);").stepThis().dispose();
            messagesStorage.database.beginTransaction();
            try {
                sQLiteCursor7 = messagesStorage.database.queryFinalized("SELECT mid, uid, date, type, data FROM media_v2 WHERE 1", new Object[0]);
            } catch (Exception e2) {
                FileLog.e((Throwable) e2);
                sQLiteCursor7 = null;
            }
            if (sQLiteCursor7 != null) {
                SQLitePreparedStatement executeFast5 = messagesStorage.database.executeFast("REPLACE INTO media_v3 VALUES(?, ?, ?, ?, ?)");
                while (sQLiteCursor7.next()) {
                    NativeByteBuffer byteBufferValue5 = sQLiteCursor7.byteBufferValue(4);
                    if (byteBufferValue5 != null) {
                        int intValue9 = sQLiteCursor7.intValue(0);
                        long longValue3 = sQLiteCursor7.longValue(1);
                        if (((int) longValue3) == 0) {
                            longValue3 = DialogObject.makeEncryptedDialogId((long) ((int) (longValue3 >> 32)));
                        }
                        int intValue10 = sQLiteCursor7.intValue(2);
                        int intValue11 = sQLiteCursor7.intValue(3);
                        executeFast5.requery();
                        executeFast5.bindInteger(1, intValue9);
                        executeFast5.bindLong(2, longValue3);
                        executeFast5.bindInteger(3, intValue10);
                        executeFast5.bindInteger(4, intValue11);
                        executeFast5.bindByteBuffer(5, byteBufferValue5);
                        executeFast5.step();
                        byteBufferValue5.reuse();
                    }
                }
                sQLiteCursor7.dispose();
                executeFast5.dispose();
            }
            messagesStorage.database.executeFast("DROP INDEX IF EXISTS uid_mid_type_date_idx_media;").stepThis().dispose();
            messagesStorage.database.executeFast("DROP TABLE IF EXISTS media_v2;").stepThis().dispose();
            messagesStorage.database.commitTransaction();
            messagesStorage.database.executeFast("PRAGMA user_version = 82").stepThis().dispose();
            i4 = 82;
        }
        if (i4 == 82) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS randoms_v2(random_id INTEGER, mid INTEGER, uid INTEGER, PRIMARY KEY (random_id, mid, uid))").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS mid_idx_randoms_v2 ON randoms_v2(mid, uid);").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS enc_tasks_v4(mid INTEGER, uid INTEGER, date INTEGER, media INTEGER, PRIMARY KEY(mid, uid, media))").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS date_idx_enc_tasks_v4 ON enc_tasks_v4(date);").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS polls_v2(mid INTEGER, uid INTEGER, id INTEGER, PRIMARY KEY (mid, uid));").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS polls_id_v2 ON polls_v2(id);").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS webpage_pending_v2(id INTEGER, mid INTEGER, uid INTEGER, PRIMARY KEY (id, mid, uid));").stepThis().dispose();
            messagesStorage.database.beginTransaction();
            try {
                sQLiteCursor3 = messagesStorage.database.queryFinalized("SELECT r.random_id, r.mid, m.uid FROM randoms as r INNER JOIN messages as m ON r.mid = m.mid WHERE 1", new Object[0]);
            } catch (Exception e3) {
                FileLog.e((Throwable) e3);
                sQLiteCursor3 = null;
            }
            if (sQLiteCursor3 != null) {
                SQLitePreparedStatement executeFast6 = messagesStorage.database.executeFast("REPLACE INTO randoms_v2 VALUES(?, ?, ?)");
                while (sQLiteCursor3.next()) {
                    long longValue4 = sQLiteCursor3.longValue(0);
                    int intValue12 = sQLiteCursor3.intValue(1);
                    long longValue5 = sQLiteCursor3.longValue(2);
                    if (((int) longValue5) == 0) {
                        longValue5 = DialogObject.makeEncryptedDialogId((long) ((int) (longValue5 >> 32)));
                    }
                    executeFast6.requery();
                    executeFast6.bindLong(1, longValue4);
                    executeFast6.bindInteger(2, intValue12);
                    executeFast6.bindLong(3, longValue5);
                    executeFast6.step();
                }
                sQLiteCursor3.dispose();
                executeFast6.dispose();
            }
            try {
                sQLiteCursor4 = messagesStorage.database.queryFinalized("SELECT p.mid, m.uid, p.id FROM polls as p INNER JOIN messages as m ON p.mid = m.mid WHERE 1", new Object[0]);
            } catch (Exception e4) {
                FileLog.e((Throwable) e4);
                sQLiteCursor4 = null;
            }
            if (sQLiteCursor4 != null) {
                SQLitePreparedStatement executeFast7 = messagesStorage.database.executeFast("REPLACE INTO polls_v2 VALUES(?, ?, ?)");
                while (sQLiteCursor4.next()) {
                    int intValue13 = sQLiteCursor4.intValue(0);
                    long longValue6 = sQLiteCursor4.longValue(1);
                    long longValue7 = sQLiteCursor4.longValue(2);
                    if (((int) longValue6) == 0) {
                        longValue6 = DialogObject.makeEncryptedDialogId((long) ((int) (longValue6 >> 32)));
                    }
                    executeFast7.requery();
                    executeFast7.bindInteger(1, intValue13);
                    executeFast7.bindLong(2, longValue6);
                    executeFast7.bindLong(3, longValue7);
                    executeFast7.step();
                }
                sQLiteCursor4.dispose();
                executeFast7.dispose();
            }
            try {
                sQLiteCursor5 = messagesStorage.database.queryFinalized("SELECT wp.id, wp.mid, m.uid FROM webpage_pending as wp INNER JOIN messages as m ON wp.mid = m.mid WHERE 1", new Object[0]);
            } catch (Exception e5) {
                FileLog.e((Throwable) e5);
                sQLiteCursor5 = null;
            }
            if (sQLiteCursor5 != null) {
                SQLitePreparedStatement executeFast8 = messagesStorage.database.executeFast("REPLACE INTO webpage_pending_v2 VALUES(?, ?, ?)");
                while (sQLiteCursor5.next()) {
                    long longValue8 = sQLiteCursor5.longValue(0);
                    int intValue14 = sQLiteCursor5.intValue(1);
                    long longValue9 = sQLiteCursor5.longValue(2);
                    if (((int) longValue9) == 0) {
                        longValue9 = DialogObject.makeEncryptedDialogId((long) ((int) (longValue9 >> 32)));
                    }
                    executeFast8.requery();
                    executeFast8.bindLong(1, longValue8);
                    executeFast8.bindInteger(2, intValue14);
                    executeFast8.bindLong(3, longValue9);
                    executeFast8.step();
                }
                sQLiteCursor5.dispose();
                executeFast8.dispose();
            }
            try {
                sQLiteCursor6 = messagesStorage.database.queryFinalized("SELECT et.mid, m.uid, et.date, et.media FROM enc_tasks_v3 as et INNER JOIN messages as m ON et.mid = m.mid WHERE 1", new Object[0]);
            } catch (Exception e6) {
                FileLog.e((Throwable) e6);
                sQLiteCursor6 = null;
            }
            if (sQLiteCursor6 != null) {
                SQLitePreparedStatement executeFast9 = messagesStorage.database.executeFast("REPLACE INTO enc_tasks_v4 VALUES(?, ?, ?, ?)");
                while (sQLiteCursor6.next()) {
                    int intValue15 = sQLiteCursor6.intValue(0);
                    long longValue10 = sQLiteCursor6.longValue(1);
                    int intValue16 = sQLiteCursor6.intValue(2);
                    int intValue17 = sQLiteCursor6.intValue(3);
                    if (((int) longValue10) == 0) {
                        longValue10 = DialogObject.makeEncryptedDialogId((long) ((int) (longValue10 >> 32)));
                    }
                    executeFast9.requery();
                    executeFast9.bindInteger(1, intValue15);
                    executeFast9.bindLong(2, longValue10);
                    executeFast9.bindInteger(3, intValue16);
                    executeFast9.bindInteger(4, intValue17);
                    executeFast9.step();
                }
                sQLiteCursor6.dispose();
                executeFast9.dispose();
            }
            messagesStorage.database.executeFast("DROP INDEX IF EXISTS mid_idx_randoms;").stepThis().dispose();
            messagesStorage.database.executeFast("DROP TABLE IF EXISTS randoms;").stepThis().dispose();
            messagesStorage.database.executeFast("DROP INDEX IF EXISTS date_idx_enc_tasks_v3;").stepThis().dispose();
            messagesStorage.database.executeFast("DROP TABLE IF EXISTS enc_tasks_v3;").stepThis().dispose();
            messagesStorage.database.executeFast("DROP INDEX IF EXISTS polls_id;").stepThis().dispose();
            messagesStorage.database.executeFast("DROP TABLE IF EXISTS polls;").stepThis().dispose();
            messagesStorage.database.executeFast("DROP TABLE IF EXISTS webpage_pending;").stepThis().dispose();
            messagesStorage.database.commitTransaction();
            messagesStorage.database.executeFast("PRAGMA user_version = 83").stepThis().dispose();
            i4 = 83;
        }
        if (i4 == 83) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS messages_v2(mid INTEGER, uid INTEGER, read_state INTEGER, send_state INTEGER, date INTEGER, data BLOB, out INTEGER, ttl INTEGER, media INTEGER, replydata BLOB, imp INTEGER, mention INTEGER, forwards INTEGER, replies_data BLOB, thread_reply_id INTEGER, is_channel INTEGER, PRIMARY KEY(mid, uid))").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS uid_mid_read_out_idx_messages_v2 ON messages_v2(uid, mid, read_state, out);").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS uid_date_mid_idx_messages_v2 ON messages_v2(uid, date, mid);").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS mid_out_idx_messages_v2 ON messages_v2(mid, out);").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS task_idx_messages_v2 ON messages_v2(uid, out, read_state, ttl, date, send_state);").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS send_state_idx_messages_v2 ON messages_v2(mid, send_state, date);").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS uid_mention_idx_messages_v2 ON messages_v2(uid, mention, read_state);").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS is_channel_idx_messages_v2 ON messages_v2(mid, is_channel);").stepThis().dispose();
            messagesStorage.database.beginTransaction();
            try {
                sQLiteCursor2 = messagesStorage.database.queryFinalized("SELECT mid, uid, read_state, send_state, date, data, out, ttl, media, replydata, imp, mention, forwards, replies_data, thread_reply_id FROM messages WHERE 1", new Object[0]);
            } catch (Exception e7) {
                FileLog.e((Throwable) e7);
                sQLiteCursor2 = null;
            }
            if (sQLiteCursor2 != null) {
                SQLitePreparedStatement executeFast10 = messagesStorage.database.executeFast("REPLACE INTO messages_v2 VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                while (sQLiteCursor2.next()) {
                    NativeByteBuffer byteBufferValue6 = sQLiteCursor2.byteBufferValue(5);
                    if (byteBufferValue6 != null) {
                        long intValue18 = (long) sQLiteCursor2.intValue(0);
                        long longValue11 = sQLiteCursor2.longValue(i8);
                        if (((int) longValue11) == 0) {
                            longValue11 = DialogObject.makeEncryptedDialogId((long) ((int) (longValue11 >> 32)));
                        }
                        int intValue19 = sQLiteCursor2.intValue(i7);
                        int intValue20 = sQLiteCursor2.intValue(i11);
                        int intValue21 = sQLiteCursor2.intValue(i5);
                        int intValue22 = sQLiteCursor2.intValue(i6);
                        int intValue23 = sQLiteCursor2.intValue(7);
                        int intValue24 = sQLiteCursor2.intValue(8);
                        NativeByteBuffer byteBufferValue7 = sQLiteCursor2.byteBufferValue(9);
                        int intValue25 = sQLiteCursor2.intValue(10);
                        int intValue26 = sQLiteCursor2.intValue(11);
                        int intValue27 = sQLiteCursor2.intValue(12);
                        NativeByteBuffer byteBufferValue8 = sQLiteCursor2.byteBufferValue(13);
                        SQLiteCursor sQLiteCursor9 = sQLiteCursor2;
                        int intValue28 = sQLiteCursor2.intValue(14);
                        int i13 = (int) (longValue11 >> 32);
                        if (intValue23 < 0) {
                            TLRPC$Message TLdeserialize2 = TLRPC$Message.TLdeserialize(byteBufferValue6, byteBufferValue6.readInt32(false), false);
                            if (TLdeserialize2 != null) {
                                i3 = intValue24;
                                TLdeserialize2.readAttachPath(byteBufferValue6, getUserConfig().clientUserId);
                                if (TLdeserialize2.params == null) {
                                    HashMap<String, String> hashMap = new HashMap<>();
                                    TLdeserialize2.params = hashMap;
                                    StringBuilder sb = new StringBuilder();
                                    i2 = i13;
                                    sb.append("");
                                    sb.append(intValue23);
                                    hashMap.put("fwd_peer", sb.toString());
                                } else {
                                    i2 = i13;
                                }
                                byteBufferValue6.reuse();
                                NativeByteBuffer nativeByteBuffer3 = new NativeByteBuffer(TLdeserialize2.getObjectSize());
                                TLdeserialize2.serializeToStream(nativeByteBuffer3);
                                byteBufferValue6 = nativeByteBuffer3;
                            } else {
                                i2 = i13;
                                i3 = intValue24;
                            }
                            intValue23 = 0;
                        } else {
                            i2 = i13;
                            i3 = intValue24;
                        }
                        executeFast10.requery();
                        executeFast10.bindInteger(1, (int) intValue18);
                        executeFast10.bindLong(2, longValue11);
                        executeFast10.bindInteger(3, intValue19);
                        executeFast10.bindInteger(4, intValue20);
                        executeFast10.bindInteger(5, intValue21);
                        executeFast10.bindByteBuffer(6, byteBufferValue6);
                        executeFast10.bindInteger(7, intValue22);
                        executeFast10.bindInteger(8, intValue23);
                        executeFast10.bindInteger(9, i3);
                        if (byteBufferValue7 != null) {
                            executeFast10.bindByteBuffer(10, byteBufferValue7);
                        } else {
                            executeFast10.bindNull(10);
                        }
                        executeFast10.bindInteger(11, intValue25);
                        executeFast10.bindInteger(12, intValue26);
                        executeFast10.bindInteger(13, intValue27);
                        if (byteBufferValue8 != null) {
                            nativeByteBuffer = byteBufferValue8;
                            executeFast10.bindByteBuffer(14, nativeByteBuffer);
                        } else {
                            nativeByteBuffer = byteBufferValue8;
                            executeFast10.bindNull(14);
                        }
                        executeFast10.bindInteger(15, intValue28);
                        executeFast10.bindInteger(16, i2 > 0 ? 1 : 0);
                        executeFast10.step();
                        if (byteBufferValue7 != null) {
                            byteBufferValue7.reuse();
                        }
                        if (nativeByteBuffer != null) {
                            nativeByteBuffer.reuse();
                        }
                        byteBufferValue6.reuse();
                        sQLiteCursor2 = sQLiteCursor9;
                        i5 = 4;
                        i6 = 6;
                        i7 = 2;
                        i8 = 1;
                        i11 = 3;
                    }
                }
                sQLiteCursor2.dispose();
                executeFast10.dispose();
            }
            messagesStorage = this;
            int i14 = 0;
            SQLiteCursor queryFinalized4 = messagesStorage.database.queryFinalized("SELECT did, last_mid, last_mid_i FROM dialogs WHERE 1", new Object[0]);
            SQLitePreparedStatement executeFast11 = messagesStorage.database.executeFast("UPDATE dialogs SET last_mid = ?, last_mid_i = ? WHERE did = ?");
            ArrayList arrayList = null;
            ArrayList arrayList2 = null;
            while (queryFinalized4.next()) {
                long longValue12 = queryFinalized4.longValue(i14);
                int i15 = (int) longValue12;
                int i16 = (int) (longValue12 >> 32);
                if (i15 == 0) {
                    if (arrayList == null) {
                        arrayList = new ArrayList();
                    }
                    arrayList.add(Integer.valueOf(i16));
                } else if (i16 == 2) {
                    if (arrayList2 == null) {
                        arrayList2 = new ArrayList();
                    }
                    arrayList2.add(Integer.valueOf(i15));
                }
                executeFast11.requery();
                executeFast11.bindInteger(1, queryFinalized4.intValue(1));
                executeFast11.bindInteger(2, queryFinalized4.intValue(2));
                executeFast11.bindLong(3, longValue12);
                executeFast11.step();
                i14 = 0;
            }
            executeFast11.dispose();
            queryFinalized4.dispose();
            int i17 = 0;
            SQLiteCursor queryFinalized5 = messagesStorage.database.queryFinalized("SELECT uid, mid FROM unread_push_messages WHERE 1", new Object[0]);
            SQLitePreparedStatement executeFast12 = messagesStorage.database.executeFast("UPDATE unread_push_messages SET mid = ? WHERE uid = ? AND mid = ?");
            while (queryFinalized5.next()) {
                long longValue13 = queryFinalized5.longValue(i17);
                int intValue29 = queryFinalized5.intValue(1);
                executeFast12.requery();
                executeFast12.bindInteger(1, intValue29);
                executeFast12.bindLong(2, longValue13);
                executeFast12.bindInteger(3, intValue29);
                executeFast12.step();
                i17 = 0;
            }
            executeFast12.dispose();
            queryFinalized5.dispose();
            if (arrayList != null) {
                SQLitePreparedStatement executeFast13 = messagesStorage.database.executeFast("UPDATE dialogs SET did = ? WHERE did = ?");
                SQLitePreparedStatement executeFast14 = messagesStorage.database.executeFast("UPDATE dialog_filter_pin_v2 SET peer = ? WHERE peer = ?");
                SQLitePreparedStatement executeFast15 = messagesStorage.database.executeFast("UPDATE dialog_filter_ep SET peer = ? WHERE peer = ?");
                int size = arrayList.size();
                for (int i18 = 0; i18 < size; i18++) {
                    long intValue30 = (long) ((Integer) arrayList.get(i18)).intValue();
                    long makeEncryptedDialogId = DialogObject.makeEncryptedDialogId(intValue30);
                    long j = intValue30 << 32;
                    executeFast13.requery();
                    executeFast13.bindLong(1, makeEncryptedDialogId);
                    executeFast13.bindLong(2, j);
                    executeFast13.step();
                    executeFast14.requery();
                    executeFast14.bindLong(1, makeEncryptedDialogId);
                    executeFast14.bindLong(2, j);
                    executeFast14.step();
                    executeFast15.requery();
                    executeFast15.bindLong(1, makeEncryptedDialogId);
                    executeFast15.bindLong(2, j);
                    executeFast15.step();
                }
                executeFast13.dispose();
                executeFast14.dispose();
                executeFast15.dispose();
            }
            if (arrayList2 != null) {
                SQLitePreparedStatement executeFast16 = messagesStorage.database.executeFast("UPDATE dialogs SET did = ? WHERE did = ?");
                int size2 = arrayList2.size();
                for (int i19 = 0; i19 < size2; i19++) {
                    int intValue31 = ((Integer) arrayList2.get(i19)).intValue();
                    long makeFolderDialogId = DialogObject.makeFolderDialogId(intValue31);
                    executeFast16.requery();
                    executeFast16.bindLong(1, makeFolderDialogId);
                    executeFast16.bindLong(2, 8589934592L | ((long) intValue31));
                    executeFast16.step();
                }
                executeFast16.dispose();
            }
            messagesStorage.database.executeFast("DROP INDEX IF EXISTS uid_mid_read_out_idx_messages;").stepThis().dispose();
            messagesStorage.database.executeFast("DROP INDEX IF EXISTS uid_date_mid_idx_messages;").stepThis().dispose();
            messagesStorage.database.executeFast("DROP INDEX IF EXISTS mid_out_idx_messages;").stepThis().dispose();
            messagesStorage.database.executeFast("DROP INDEX IF EXISTS task_idx_messages;").stepThis().dispose();
            messagesStorage.database.executeFast("DROP INDEX IF EXISTS send_state_idx_messages2;").stepThis().dispose();
            messagesStorage.database.executeFast("DROP INDEX IF EXISTS uid_mention_idx_messages;").stepThis().dispose();
            messagesStorage.database.executeFast("DROP TABLE IF EXISTS messages;").stepThis().dispose();
            messagesStorage.database.commitTransaction();
            messagesStorage.database.executeFast("PRAGMA user_version = 84").stepThis().dispose();
            i4 = 84;
        }
        if (i4 == 84) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS media_v4(mid INTEGER, uid INTEGER, date INTEGER, type INTEGER, data BLOB, PRIMARY KEY(mid, uid, type))").stepThis().dispose();
            messagesStorage.database.beginTransaction();
            try {
                sQLiteCursor = messagesStorage.database.queryFinalized("SELECT mid, uid, date, type, data FROM media_v3 WHERE 1", new Object[0]);
            } catch (Exception e8) {
                FileLog.e((Throwable) e8);
                sQLiteCursor = null;
            }
            if (sQLiteCursor != null) {
                SQLitePreparedStatement executeFast17 = messagesStorage.database.executeFast("REPLACE INTO media_v4 VALUES(?, ?, ?, ?, ?)");
                while (sQLiteCursor.next()) {
                    NativeByteBuffer byteBufferValue9 = sQLiteCursor.byteBufferValue(4);
                    if (byteBufferValue9 != null) {
                        int intValue32 = sQLiteCursor.intValue(0);
                        long longValue14 = sQLiteCursor.longValue(1);
                        if (((int) longValue14) == 0) {
                            longValue14 = DialogObject.makeEncryptedDialogId((long) ((int) (longValue14 >> 32)));
                        }
                        int intValue33 = sQLiteCursor.intValue(2);
                        int intValue34 = sQLiteCursor.intValue(3);
                        executeFast17.requery();
                        executeFast17.bindInteger(1, intValue32);
                        executeFast17.bindLong(2, longValue14);
                        executeFast17.bindInteger(3, intValue33);
                        executeFast17.bindInteger(4, intValue34);
                        executeFast17.bindByteBuffer(5, byteBufferValue9);
                        executeFast17.step();
                        byteBufferValue9.reuse();
                    }
                }
                sQLiteCursor.dispose();
                executeFast17.dispose();
            }
            messagesStorage.database.commitTransaction();
            messagesStorage.database.executeFast("DROP TABLE IF EXISTS media_v3;").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 85").stepThis().dispose();
            i4 = 85;
        }
        if (i4 == 85) {
            messagesStorage.executeNoException("ALTER TABLE messages_v2 ADD COLUMN reply_to_message_id INTEGER default 0");
            messagesStorage.executeNoException("ALTER TABLE scheduled_messages_v2 ADD COLUMN reply_to_message_id INTEGER default 0");
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS reply_to_idx_messages_v2 ON messages_v2(mid, reply_to_message_id);").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS reply_to_idx_scheduled_messages_v2 ON scheduled_messages_v2(mid, reply_to_message_id);").stepThis().dispose();
            messagesStorage.executeNoException("UPDATE messages_v2 SET replydata = NULL");
            messagesStorage.executeNoException("UPDATE scheduled_messages_v2 SET replydata = NULL");
            messagesStorage.database.executeFast("PRAGMA user_version = 86").stepThis().dispose();
            i4 = 86;
        }
        if (i4 == 86) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS reactions(data BLOB, hash INTEGER, date INTEGER);").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 87").stepThis().dispose();
            i4 = 87;
        }
        if (i4 == 87) {
            messagesStorage.database.executeFast("ALTER TABLE dialogs ADD COLUMN unread_reactions INTEGER default 0").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE TABLE reaction_mentions(message_id INTEGER PRIMARY KEY, state INTEGER);").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 88").stepThis().dispose();
            i4 = 88;
        }
        if (i4 == 88 || i4 == 89) {
            messagesStorage.database.executeFast("DROP TABLE IF EXISTS reaction_mentions;").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS reaction_mentions(message_id INTEGER, state INTEGER, dialog_id INTEGER, PRIMARY KEY(dialog_id, message_id));").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS reaction_mentions_did ON reaction_mentions(dialog_id);").stepThis().dispose();
            messagesStorage.database.executeFast("DROP INDEX IF EXISTS uid_mid_type_date_idx_media_v3").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS uid_mid_type_date_idx_media_v4 ON media_v4(uid, mid, type, date);").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 90").stepThis().dispose();
            i4 = 90;
        }
        if (i4 == 90 || i4 == 91) {
            messagesStorage.database.executeFast("DROP TABLE IF EXISTS downloading_documents;").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE TABLE downloading_documents(data BLOB, hash INTEGER, id INTEGER, state INTEGER, date INTEGER, PRIMARY KEY(hash, id));").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 92").stepThis().dispose();
            i4 = 92;
        }
        if (i4 == 92) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS attach_menu_bots(data BLOB, hash INTEGER, date INTEGER);").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 93").stepThis().dispose();
            i4 = 95;
        }
        if (i4 == 95 || i4 == 93) {
            messagesStorage.executeNoException("ALTER TABLE messages_v2 ADD COLUMN custom_params BLOB default NULL");
            messagesStorage.database.executeFast("PRAGMA user_version = 96").stepThis().dispose();
            i4 = 96;
        }
        if (i4 == 96) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS premium_promo(data BLOB, date INTEGER);").stepThis().dispose();
            messagesStorage.database.executeFast("UPDATE stickers_v2 SET date = 0");
            messagesStorage.database.executeFast("PRAGMA user_version = 97").stepThis().dispose();
            i4 = 97;
        }
        if (i4 == 97) {
            messagesStorage.database.executeFast("DROP TABLE IF EXISTS stickers_featured;").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE TABLE stickers_featured(id INTEGER PRIMARY KEY, data BLOB, unread BLOB, date INTEGER, hash INTEGER, premium INTEGER);").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 98").stepThis().dispose();
            i4 = 98;
        }
        if (i4 == 98) {
            messagesStorage.database.executeFast("CREATE TABLE animated_emoji(document_id INTEGER PRIMARY KEY, data BLOB);").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 99").stepThis().dispose();
            i4 = 99;
        }
        if (i4 == 99) {
            messagesStorage.database.executeFast("ALTER TABLE stickers_featured ADD COLUMN emoji INTEGER default 0").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 100").stepThis().dispose();
        }
        FileLog.d("MessagesStorage db migration finished");
        AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda7(messagesStorage));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$updateDbToLastVersion$3() {
        this.databaseMigrationInProgress = true;
        NotificationCenter.getInstance(this.currentAccount).postNotificationName(NotificationCenter.onDatabaseMigration, Boolean.TRUE);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$updateDbToLastVersion$4() {
        this.databaseMigrationInProgress = false;
        NotificationCenter.getInstance(this.currentAccount).postNotificationName(NotificationCenter.onDatabaseMigration, Boolean.FALSE);
    }

    private void executeNoException(String str) {
        try {
            this.database.executeFast(str).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    private void cleanupInternal(boolean z) {
        this.lastDateValue = 0;
        this.lastSeqValue = 0;
        this.lastPtsValue = 0;
        this.lastQtsValue = 0;
        this.lastSecretVersion = 0;
        this.mainUnreadCount = 0;
        this.archiveUnreadCount = 0;
        this.pendingMainUnreadCount = 0;
        this.pendingArchiveUnreadCount = 0;
        this.dialogFilters.clear();
        this.dialogFiltersMap.clear();
        this.unknownDialogsIds.clear();
        this.lastSavedSeq = 0;
        this.lastSavedPts = 0;
        this.lastSavedDate = 0;
        this.lastSavedQts = 0;
        this.secretPBytes = null;
        this.secretG = 0;
        SQLiteDatabase sQLiteDatabase = this.database;
        if (sQLiteDatabase != null) {
            sQLiteDatabase.close();
            this.database = null;
        }
        if (z) {
            File file = this.cacheFile;
            if (file != null) {
                file.delete();
                this.cacheFile = null;
            }
            File file2 = this.walCacheFile;
            if (file2 != null) {
                file2.delete();
                this.walCacheFile = null;
            }
            File file3 = this.shmCacheFile;
            if (file3 != null) {
                file3.delete();
                this.shmCacheFile = null;
            }
        }
    }

    public void cleanup(boolean z) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda184(this, z));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$cleanup$6(boolean z) {
        cleanupInternal(true);
        openDatabase(1);
        if (z) {
            Utilities.stageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda16(this));
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$cleanup$5() {
        getMessagesController().getDifference();
    }

    public void saveSecretParams(int i, int i2, byte[] bArr) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda37(this, i, i2, bArr));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$saveSecretParams$7(int i, int i2, byte[] bArr) {
        try {
            SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE params SET lsv = ?, sg = ?, pbytes = ? WHERE id = 1");
            int i3 = 1;
            executeFast.bindInteger(1, i);
            executeFast.bindInteger(2, i2);
            if (bArr != null) {
                i3 = bArr.length;
            }
            NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(i3);
            if (bArr != null) {
                nativeByteBuffer.writeBytes(bArr);
            }
            executeFast.bindByteBuffer(3, nativeByteBuffer);
            executeFast.step();
            executeFast.dispose();
            nativeByteBuffer.reuse();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    private void fixNotificationSettings() {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda6(this));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$fixNotificationSettings$8() {
        try {
            LongSparseArray longSparseArray = new LongSparseArray();
            Map<String, ?> all = MessagesController.getNotificationsSettings(this.currentAccount).getAll();
            for (Map.Entry next : all.entrySet()) {
                String str = (String) next.getKey();
                if (str.startsWith("notify2_")) {
                    Integer num = (Integer) next.getValue();
                    if (num.intValue() == 2 || num.intValue() == 3) {
                        String replace = str.replace("notify2_", "");
                        long j = 1;
                        if (num.intValue() != 2) {
                            Integer num2 = (Integer) all.get("notifyuntil_" + replace);
                            if (num2 != null) {
                                j = 1 | (((long) num2.intValue()) << 32);
                            }
                        }
                        longSparseArray.put(Long.parseLong(replace), Long.valueOf(j));
                    }
                }
            }
            try {
                this.database.beginTransaction();
                SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO dialog_settings VALUES(?, ?)");
                for (int i = 0; i < longSparseArray.size(); i++) {
                    executeFast.requery();
                    executeFast.bindLong(1, longSparseArray.keyAt(i));
                    executeFast.bindLong(2, ((Long) longSparseArray.valueAt(i)).longValue());
                    executeFast.step();
                }
                executeFast.dispose();
                this.database.commitTransaction();
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        } catch (Exception e2) {
            e2.printStackTrace();
        } catch (Throwable th) {
            FileLog.e(th);
        }
    }

    public long createPendingTask(NativeByteBuffer nativeByteBuffer) {
        if (nativeByteBuffer == null) {
            return 0;
        }
        long andAdd = this.lastTaskId.getAndAdd(1);
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda105(this, andAdd, nativeByteBuffer));
        return andAdd;
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$createPendingTask$9(long j, NativeByteBuffer nativeByteBuffer) {
        try {
            SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO pending_tasks VALUES(?, ?)");
            executeFast.bindLong(1, j);
            executeFast.bindByteBuffer(2, nativeByteBuffer);
            executeFast.step();
            executeFast.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        } catch (Throwable th) {
            nativeByteBuffer.reuse();
            throw th;
        }
        nativeByteBuffer.reuse();
    }

    public void removePendingTask(long j) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda63(this, j));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$removePendingTask$10(long j) {
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM pending_tasks WHERE id = " + j).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    private void loadPendingTasks() {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda8(this));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$loadPendingTasks$30() {
        try {
            SQLiteCursor queryFinalized = this.database.queryFinalized("SELECT id, data FROM pending_tasks WHERE 1", new Object[0]);
            while (queryFinalized.next()) {
                long longValue = queryFinalized.longValue(0);
                NativeByteBuffer byteBufferValue = queryFinalized.byteBufferValue(1);
                if (byteBufferValue != null) {
                    int readInt32 = byteBufferValue.readInt32(false);
                    if (readInt32 != 100) {
                        switch (readInt32) {
                            case 0:
                                TLRPC$Chat TLdeserialize = TLRPC$Chat.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                                if (TLdeserialize != null) {
                                    Utilities.stageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda157(this, TLdeserialize, longValue));
                                    break;
                                }
                                break;
                            case 1:
                                Utilities.stageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda72(this, (long) byteBufferValue.readInt32(false), byteBufferValue.readInt32(false), longValue));
                                break;
                            case 2:
                            case 5:
                            case 8:
                            case 10:
                            case 14:
                                TLRPC$TL_dialog tLRPC$TL_dialog = new TLRPC$TL_dialog();
                                tLRPC$TL_dialog.id = byteBufferValue.readInt64(false);
                                tLRPC$TL_dialog.top_message = byteBufferValue.readInt32(false);
                                tLRPC$TL_dialog.read_inbox_max_id = byteBufferValue.readInt32(false);
                                tLRPC$TL_dialog.read_outbox_max_id = byteBufferValue.readInt32(false);
                                tLRPC$TL_dialog.unread_count = byteBufferValue.readInt32(false);
                                tLRPC$TL_dialog.last_message_date = byteBufferValue.readInt32(false);
                                tLRPC$TL_dialog.pts = byteBufferValue.readInt32(false);
                                tLRPC$TL_dialog.flags = byteBufferValue.readInt32(false);
                                if (readInt32 >= 5) {
                                    tLRPC$TL_dialog.pinned = byteBufferValue.readBool(false);
                                    tLRPC$TL_dialog.pinnedNum = byteBufferValue.readInt32(false);
                                }
                                if (readInt32 >= 8) {
                                    tLRPC$TL_dialog.unread_mentions_count = byteBufferValue.readInt32(false);
                                }
                                if (readInt32 >= 10) {
                                    tLRPC$TL_dialog.unread_mark = byteBufferValue.readBool(false);
                                }
                                if (readInt32 >= 14) {
                                    tLRPC$TL_dialog.folder_id = byteBufferValue.readInt32(false);
                                }
                                AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda162(this, tLRPC$TL_dialog, TLRPC$InputPeer.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false), longValue));
                                break;
                            case 3:
                                getSendMessagesHelper().sendGame(TLRPC$InputPeer.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false), (TLRPC$TL_inputMediaGame) TLRPC$InputMedia.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false), byteBufferValue.readInt64(false), longValue);
                                break;
                            case 4:
                                AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda112(this, byteBufferValue.readInt64(false), byteBufferValue.readBool(false), TLRPC$InputPeer.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false), longValue));
                                break;
                            case 6:
                                Utilities.stageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda74(this, (long) byteBufferValue.readInt32(false), byteBufferValue.readInt32(false), longValue, TLRPC$InputChannel.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false)));
                                break;
                            case 7:
                                long readInt322 = (long) byteBufferValue.readInt32(false);
                                int readInt323 = byteBufferValue.readInt32(false);
                                TLObject TLdeserialize2 = TLRPC$TL_messages_deleteMessages.TLdeserialize(byteBufferValue, readInt323, false);
                                TLObject TLdeserialize3 = TLdeserialize2 == null ? TLRPC$TL_channels_deleteMessages.TLdeserialize(byteBufferValue, readInt323, false) : TLdeserialize2;
                                if (TLdeserialize3 != null) {
                                    AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda91(this, readInt322, longValue, TLdeserialize3));
                                    break;
                                } else {
                                    removePendingTask(longValue);
                                    break;
                                }
                            case 9:
                                AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda106(this, byteBufferValue.readInt64(false), TLRPC$InputPeer.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false), longValue));
                                break;
                            case 11:
                                int readInt324 = byteBufferValue.readInt32(false);
                                long readInt325 = (long) byteBufferValue.readInt32(false);
                                AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda76(this, readInt325, readInt324, readInt325 != 0 ? TLRPC$InputChannel.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false) : null, byteBufferValue.readInt32(false), longValue));
                                break;
                            case 12:
                            case 19:
                            case 20:
                                removePendingTask(longValue);
                                break;
                            case 13:
                                AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda111(this, byteBufferValue.readInt64(false), byteBufferValue.readBool(false), byteBufferValue.readInt32(false), byteBufferValue.readInt32(false), byteBufferValue.readBool(false), TLRPC$InputPeer.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false), longValue));
                                break;
                            case 15:
                                Utilities.stageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda169(this, TLRPC$InputPeer.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false), longValue));
                                break;
                            case 16:
                                int readInt326 = byteBufferValue.readInt32(false);
                                int readInt327 = byteBufferValue.readInt32(false);
                                ArrayList arrayList = new ArrayList();
                                for (int i = 0; i < readInt327; i++) {
                                    arrayList.add(TLRPC$InputDialogPeer.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false));
                                }
                                AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda59(this, readInt326, arrayList, longValue));
                                break;
                            case 17:
                                int readInt328 = byteBufferValue.readInt32(false);
                                int readInt329 = byteBufferValue.readInt32(false);
                                ArrayList arrayList2 = new ArrayList();
                                for (int i2 = 0; i2 < readInt329; i2++) {
                                    arrayList2.add(TLRPC$TL_inputFolderPeer.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false));
                                }
                                AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda58(this, readInt328, arrayList2, longValue));
                                break;
                            case 18:
                                long readInt64 = byteBufferValue.readInt64(false);
                                byteBufferValue.readInt32(false);
                                TLRPC$TL_messages_deleteScheduledMessages TLdeserialize4 = TLRPC$TL_messages_deleteScheduledMessages.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                                if (TLdeserialize4 != null) {
                                    AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda89(this, readInt64, longValue, TLdeserialize4));
                                    break;
                                } else {
                                    removePendingTask(longValue);
                                    break;
                                }
                            case 21:
                                Theme.OverrideWallpaperInfo overrideWallpaperInfo = new Theme.OverrideWallpaperInfo();
                                byteBufferValue.readInt64(false);
                                overrideWallpaperInfo.isBlurred = byteBufferValue.readBool(false);
                                overrideWallpaperInfo.isMotion = byteBufferValue.readBool(false);
                                overrideWallpaperInfo.color = byteBufferValue.readInt32(false);
                                overrideWallpaperInfo.gradientColor1 = byteBufferValue.readInt32(false);
                                overrideWallpaperInfo.rotation = byteBufferValue.readInt32(false);
                                overrideWallpaperInfo.intensity = (float) byteBufferValue.readDouble(false);
                                boolean readBool = byteBufferValue.readBool(false);
                                overrideWallpaperInfo.slug = byteBufferValue.readString(false);
                                overrideWallpaperInfo.originalFileName = byteBufferValue.readString(false);
                                AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda182(this, overrideWallpaperInfo, readBool, longValue));
                                break;
                            case 22:
                                AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda170(this, TLRPC$InputPeer.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false), longValue));
                                break;
                            case 23:
                                long readInt642 = byteBufferValue.readInt64(false);
                                AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda77(this, readInt642, byteBufferValue.readInt32(false), (DialogObject.isEncryptedDialog(readInt642) || !DialogObject.isChatDialog(readInt642) || !byteBufferValue.hasRemaining()) ? null : TLRPC$InputChannel.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false), byteBufferValue.readInt32(false), longValue));
                                break;
                            case 24:
                                long readInt643 = byteBufferValue.readInt64(false);
                                int readInt3210 = byteBufferValue.readInt32(false);
                                TLObject TLdeserialize5 = TLRPC$TL_messages_deleteMessages.TLdeserialize(byteBufferValue, readInt3210, false);
                                TLObject TLdeserialize6 = TLdeserialize5 == null ? TLRPC$TL_channels_deleteMessages.TLdeserialize(byteBufferValue, readInt3210, false) : TLdeserialize5;
                                if (TLdeserialize6 != null) {
                                    AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda90(this, readInt643, longValue, TLdeserialize6));
                                    break;
                                } else {
                                    removePendingTask(longValue);
                                    break;
                                }
                            case 25:
                                Utilities.stageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda75(this, byteBufferValue.readInt64(false), byteBufferValue.readInt32(false), longValue, TLRPC$InputChannel.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false)));
                                break;
                        }
                    } else {
                        AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda61(this, byteBufferValue.readInt32(false), byteBufferValue.readBool(false), longValue));
                    }
                    byteBufferValue.reuse();
                }
            }
            queryFinalized.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$loadPendingTasks$11(TLRPC$Chat tLRPC$Chat, long j) {
        getMessagesController().loadUnknownChannel(tLRPC$Chat, j);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$loadPendingTasks$12(long j, int i, long j2) {
        getMessagesController().getChannelDifference(j, i, j2, (TLRPC$InputChannel) null);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$loadPendingTasks$13(TLRPC$Dialog tLRPC$Dialog, TLRPC$InputPeer tLRPC$InputPeer, long j) {
        getMessagesController().checkLastDialogMessage(tLRPC$Dialog, tLRPC$InputPeer, j);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$loadPendingTasks$14(long j, boolean z, TLRPC$InputPeer tLRPC$InputPeer, long j2) {
        getMessagesController().pinDialog(j, z, tLRPC$InputPeer, j2);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$loadPendingTasks$15(long j, int i, long j2, TLRPC$InputChannel tLRPC$InputChannel) {
        getMessagesController().getChannelDifference(j, i, j2, tLRPC$InputChannel);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$loadPendingTasks$16(long j, int i, long j2, TLRPC$InputChannel tLRPC$InputChannel) {
        getMessagesController().getChannelDifference(j, i, j2, tLRPC$InputChannel);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$loadPendingTasks$17(long j, long j2, TLObject tLObject) {
        getMessagesController().deleteMessages((ArrayList<Integer>) null, (ArrayList<Long>) null, (TLRPC$EncryptedChat) null, -j, true, false, false, j2, tLObject);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$loadPendingTasks$18(long j, long j2, TLObject tLObject) {
        getMessagesController().deleteMessages((ArrayList<Integer>) null, (ArrayList<Long>) null, (TLRPC$EncryptedChat) null, j, true, false, false, j2, tLObject);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$loadPendingTasks$19(long j, TLRPC$InputPeer tLRPC$InputPeer, long j2) {
        getMessagesController().markDialogAsUnread(j, tLRPC$InputPeer, j2);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$loadPendingTasks$20(long j, int i, TLRPC$InputChannel tLRPC$InputChannel, int i2, long j2) {
        getMessagesController().markMessageAsRead2(-j, i, tLRPC$InputChannel, i2, j2);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$loadPendingTasks$21(long j, int i, TLRPC$InputChannel tLRPC$InputChannel, int i2, long j2) {
        getMessagesController().markMessageAsRead2(j, i, tLRPC$InputChannel, i2, j2);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$loadPendingTasks$22(Theme.OverrideWallpaperInfo overrideWallpaperInfo, boolean z, long j) {
        getMessagesController().saveWallpaperToServer((File) null, overrideWallpaperInfo, z, j);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$loadPendingTasks$23(long j, boolean z, int i, int i2, boolean z2, TLRPC$InputPeer tLRPC$InputPeer, long j2) {
        getMessagesController().deleteDialog(j, z ? 1 : 0, i, i2, z2, tLRPC$InputPeer, j2);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$loadPendingTasks$24(TLRPC$InputPeer tLRPC$InputPeer, long j) {
        getMessagesController().loadUnknownDialog(tLRPC$InputPeer, j);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$loadPendingTasks$25(int i, ArrayList arrayList, long j) {
        getMessagesController().reorderPinnedDialogs(i, arrayList, j);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$loadPendingTasks$26(int i, ArrayList arrayList, long j) {
        getMessagesController().addDialogToFolder((ArrayList<Long>) null, i, -1, arrayList, j);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$loadPendingTasks$27(long j, long j2, TLObject tLObject) {
        getMessagesController().deleteMessages((ArrayList<Integer>) null, (ArrayList<Long>) null, (TLRPC$EncryptedChat) null, j, true, true, false, j2, tLObject);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$loadPendingTasks$28(TLRPC$InputPeer tLRPC$InputPeer, long j) {
        getMessagesController().reloadMentionsCountForChannel(tLRPC$InputPeer, j);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$loadPendingTasks$29(int i, boolean z, long j) {
        getSecretChatHelper().declineSecretChat(i, z, j);
    }

    public void saveChannelPts(long j, int i) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda41(this, i, j));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$saveChannelPts$31(int i, long j) {
        try {
            SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE dialogs SET pts = ? WHERE did = ?");
            executeFast.bindInteger(1, i);
            executeFast.bindLong(2, -j);
            executeFast.step();
            executeFast.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: saveDiffParamsInternal */
    public void lambda$saveDiffParams$32(int i, int i2, int i3, int i4) {
        try {
            if (this.lastSavedSeq != i || this.lastSavedPts != i2 || this.lastSavedDate != i3 || this.lastQtsValue != i4) {
                SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE params SET seq = ?, pts = ?, date = ?, qts = ? WHERE id = 1");
                executeFast.bindInteger(1, i);
                executeFast.bindInteger(2, i2);
                executeFast.bindInteger(3, i3);
                executeFast.bindInteger(4, i4);
                executeFast.step();
                executeFast.dispose();
                this.lastSavedSeq = i;
                this.lastSavedPts = i2;
                this.lastSavedDate = i3;
                this.lastSavedQts = i4;
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void saveDiffParams(int i, int i2, int i3, int i4) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda34(this, i, i2, i3, i4));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$updateMutedDialogsFiltersCounters$33() {
        resetAllUnreadCounters(true);
    }

    public void updateMutedDialogsFiltersCounters() {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda24(this));
    }

    public void setDialogFlags(long j, long j2) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda85(this, j, j2));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$setDialogFlags$34(long j, long j2) {
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            SQLiteCursor queryFinalized = sQLiteDatabase.queryFinalized("SELECT flags FROM dialog_settings WHERE did = " + j, new Object[0]);
            int intValue = queryFinalized.next() ? queryFinalized.intValue(0) : 0;
            queryFinalized.dispose();
            if (j2 != ((long) intValue)) {
                this.database.executeFast(String.format(Locale.US, "REPLACE INTO dialog_settings VALUES(%d, %d)", new Object[]{Long.valueOf(j), Long.valueOf(j2)})).stepThis().dispose();
                resetAllUnreadCounters(true);
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void putPushMessage(MessageObject messageObject) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda150(this, messageObject));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$putPushMessage$35(MessageObject messageObject) {
        try {
            NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(messageObject.messageOwner.getObjectSize());
            messageObject.messageOwner.serializeToStream(nativeByteBuffer);
            int i = 0;
            if (messageObject.localType == 2) {
                i = 1;
            }
            if (messageObject.localChannel) {
                i |= 2;
            }
            SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO unread_push_messages VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?)");
            executeFast.requery();
            executeFast.bindLong(1, messageObject.getDialogId());
            executeFast.bindInteger(2, messageObject.getId());
            executeFast.bindLong(3, messageObject.messageOwner.random_id);
            executeFast.bindInteger(4, messageObject.messageOwner.date);
            executeFast.bindByteBuffer(5, nativeByteBuffer);
            CharSequence charSequence = messageObject.messageText;
            if (charSequence == null) {
                executeFast.bindNull(6);
            } else {
                executeFast.bindString(6, charSequence.toString());
            }
            String str = messageObject.localName;
            if (str == null) {
                executeFast.bindNull(7);
            } else {
                executeFast.bindString(7, str);
            }
            String str2 = messageObject.localUserName;
            if (str2 == null) {
                executeFast.bindNull(8);
            } else {
                executeFast.bindString(8, str2);
            }
            executeFast.bindInteger(9, i);
            executeFast.step();
            nativeByteBuffer.reuse();
            executeFast.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void clearLocalDatabase() {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda5(this));
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v3, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v10, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v12, resolved type: boolean} */
    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:134:0x0340, code lost:
        r3.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:136:0x0345, code lost:
        r7.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:138:0x034a, code lost:
        r19.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:55:0x0155, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:56:0x0156, code lost:
        r18 = r8;
        r19 = r9;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:61:0x0167, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:76:0x0278, code lost:
        r0 = th;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:78:0x027e, code lost:
        r0 = th;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:79:0x027f, code lost:
        r19 = r9;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:80:0x0283, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:81:0x0284, code lost:
        r19 = r9;
     */
    /* JADX WARNING: Failed to process nested try/catch */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:123:0x0322  */
    /* JADX WARNING: Removed duplicated region for block: B:125:0x0327  */
    /* JADX WARNING: Removed duplicated region for block: B:127:0x032c  */
    /* JADX WARNING: Removed duplicated region for block: B:134:0x0340  */
    /* JADX WARNING: Removed duplicated region for block: B:136:0x0345  */
    /* JADX WARNING: Removed duplicated region for block: B:138:0x034a  */
    /* JADX WARNING: Removed duplicated region for block: B:71:0x025e A[Catch:{ Exception -> 0x027b, all -> 0x0278 }] */
    /* JADX WARNING: Removed duplicated region for block: B:76:0x0278 A[ExcHandler: all (th java.lang.Throwable), PHI: r19 
      PHI: (r19v18 org.telegram.SQLite.SQLiteCursor) = (r19v20 org.telegram.SQLite.SQLiteCursor), (r19v25 org.telegram.SQLite.SQLiteCursor), (r19v25 org.telegram.SQLite.SQLiteCursor), (r19v29 org.telegram.SQLite.SQLiteCursor), (r19v29 org.telegram.SQLite.SQLiteCursor) binds: [B:67:0x0185, B:59:0x0163, B:60:?, B:51:0x014b, B:52:?] A[DONT_GENERATE, DONT_INLINE], Splitter:B:59:0x0163] */
    /* JADX WARNING: Removed duplicated region for block: B:78:0x027e A[ExcHandler: all (th java.lang.Throwable), PHI: r9 
      PHI: (r9v5 org.telegram.SQLite.SQLiteCursor) = (r9v4 org.telegram.SQLite.SQLiteCursor), (r9v7 org.telegram.SQLite.SQLiteCursor), (r9v7 org.telegram.SQLite.SQLiteCursor) binds: [B:34:0x00e8, B:39:0x0127, B:48:0x0141] A[DONT_GENERATE, DONT_INLINE], Splitter:B:34:0x00e8] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$clearLocalDatabase$37() {
        /*
            r20 = this;
            r1 = r20
            java.lang.String r2 = " AND mid != "
            java.util.ArrayList r4 = new java.util.ArrayList     // Catch:{ Exception -> 0x0312, all -> 0x030b }
            r4.<init>()     // Catch:{ Exception -> 0x0312, all -> 0x030b }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0312, all -> 0x030b }
            java.lang.String r5 = "DELETE FROM reaction_mentions"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r5)     // Catch:{ Exception -> 0x0312, all -> 0x030b }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0312, all -> 0x030b }
            r0.dispose()     // Catch:{ Exception -> 0x0312, all -> 0x030b }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0312, all -> 0x030b }
            java.lang.String r5 = "DELETE FROM downloading_documents"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r5)     // Catch:{ Exception -> 0x0312, all -> 0x030b }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0312, all -> 0x030b }
            r0.dispose()     // Catch:{ Exception -> 0x0312, all -> 0x030b }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0312, all -> 0x030b }
            java.lang.String r5 = "DELETE FROM attach_menu_bots"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r5)     // Catch:{ Exception -> 0x0312, all -> 0x030b }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0312, all -> 0x030b }
            r0.dispose()     // Catch:{ Exception -> 0x0312, all -> 0x030b }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0312, all -> 0x030b }
            java.lang.String r5 = "DELETE FROM animated_emoji"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r5)     // Catch:{ Exception -> 0x0312, all -> 0x030b }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0312, all -> 0x030b }
            r0.dispose()     // Catch:{ Exception -> 0x0312, all -> 0x030b }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0312, all -> 0x030b }
            java.lang.String r5 = "SELECT did FROM dialogs WHERE 1"
            r6 = 0
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0312, all -> 0x030b }
            org.telegram.SQLite.SQLiteCursor r5 = r0.queryFinalized(r5, r7)     // Catch:{ Exception -> 0x0312, all -> 0x030b }
        L_0x0050:
            boolean r0 = r5.next()     // Catch:{ Exception -> 0x0304, all -> 0x02fd }
            if (r0 == 0) goto L_0x0076
            long r7 = r5.longValue(r6)     // Catch:{ Exception -> 0x006f, all -> 0x0068 }
            boolean r0 = org.telegram.messenger.DialogObject.isEncryptedDialog(r7)     // Catch:{ Exception -> 0x006f, all -> 0x0068 }
            if (r0 != 0) goto L_0x0050
            java.lang.Long r0 = java.lang.Long.valueOf(r7)     // Catch:{ Exception -> 0x006f, all -> 0x0068 }
            r4.add(r0)     // Catch:{ Exception -> 0x006f, all -> 0x0068 }
            goto L_0x0050
        L_0x0068:
            r0 = move-exception
            r19 = r5
            r3 = 0
            r7 = 0
            goto L_0x0339
        L_0x006f:
            r0 = move-exception
            r19 = r5
            r3 = 0
            r7 = 0
            goto L_0x0318
        L_0x0076:
            r5.dispose()     // Catch:{ Exception -> 0x0304, all -> 0x02fd }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0312, all -> 0x030b }
            java.lang.String r5 = "REPLACE INTO messages_holes VALUES(?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r5 = r0.executeFast(r5)     // Catch:{ Exception -> 0x0312, all -> 0x030b }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02f6, all -> 0x02ef }
            java.lang.String r7 = "REPLACE INTO media_holes_v2 VALUES(?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r7 = r0.executeFast(r7)     // Catch:{ Exception -> 0x02f6, all -> 0x02ef }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02ea, all -> 0x02e5 }
            r0.beginTransaction()     // Catch:{ Exception -> 0x02ea, all -> 0x02e5 }
            r8 = 0
            r9 = 0
        L_0x0090:
            int r0 = r4.size()     // Catch:{ Exception -> 0x02e0, all -> 0x02da }
            if (r8 >= r0) goto L_0x0288
            java.lang.Object r0 = r4.get(r8)     // Catch:{ Exception -> 0x02e0, all -> 0x02da }
            r10 = r0
            java.lang.Long r10 = (java.lang.Long) r10     // Catch:{ Exception -> 0x02e0, all -> 0x02da }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02e0, all -> 0x02da }
            java.lang.StringBuilder r11 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x02e0, all -> 0x02da }
            r11.<init>()     // Catch:{ Exception -> 0x02e0, all -> 0x02da }
            java.lang.String r12 = "SELECT COUNT(mid) FROM messages_v2 WHERE uid = "
            r11.append(r12)     // Catch:{ Exception -> 0x02e0, all -> 0x02da }
            r11.append(r10)     // Catch:{ Exception -> 0x02e0, all -> 0x02da }
            java.lang.String r11 = r11.toString()     // Catch:{ Exception -> 0x02e0, all -> 0x02da }
            java.lang.Object[] r12 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x02e0, all -> 0x02da }
            org.telegram.SQLite.SQLiteCursor r9 = r0.queryFinalized(r11, r12)     // Catch:{ Exception -> 0x02e0, all -> 0x02da }
            boolean r0 = r9.next()     // Catch:{ Exception -> 0x02e0, all -> 0x02da }
            if (r0 == 0) goto L_0x00c1
            int r0 = r9.intValue(r6)     // Catch:{ Exception -> 0x02e0, all -> 0x02da }
            goto L_0x00c2
        L_0x00c1:
            r0 = 0
        L_0x00c2:
            r9.dispose()     // Catch:{ Exception -> 0x02e0, all -> 0x02da }
            r11 = 2
            if (r0 > r11) goto L_0x00cf
            r17 = r4
            r18 = r8
            r4 = 0
            goto L_0x0271
        L_0x00cf:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02e0, all -> 0x02da }
            java.lang.StringBuilder r11 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x02e0, all -> 0x02da }
            r11.<init>()     // Catch:{ Exception -> 0x02e0, all -> 0x02da }
            java.lang.String r12 = "SELECT last_mid_i, last_mid FROM dialogs WHERE did = "
            r11.append(r12)     // Catch:{ Exception -> 0x02e0, all -> 0x02da }
            r11.append(r10)     // Catch:{ Exception -> 0x02e0, all -> 0x02da }
            java.lang.String r11 = r11.toString()     // Catch:{ Exception -> 0x02e0, all -> 0x02da }
            java.lang.Object[] r12 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x02e0, all -> 0x02da }
            org.telegram.SQLite.SQLiteCursor r9 = r0.queryFinalized(r11, r12)     // Catch:{ Exception -> 0x02e0, all -> 0x02da }
            boolean r0 = r9.next()     // Catch:{ Exception -> 0x0283, all -> 0x027e }
            if (r0 == 0) goto L_0x0266
            long r11 = r9.longValue(r6)     // Catch:{ Exception -> 0x0283, all -> 0x027e }
            r0 = 1
            long r13 = r9.longValue(r0)     // Catch:{ Exception -> 0x0283, all -> 0x027e }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0283, all -> 0x027e }
            java.lang.StringBuilder r15 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0283, all -> 0x027e }
            r15.<init>()     // Catch:{ Exception -> 0x0283, all -> 0x027e }
            java.lang.String r3 = "SELECT data FROM messages_v2 WHERE uid = "
            r15.append(r3)     // Catch:{ Exception -> 0x0283, all -> 0x027e }
            r15.append(r10)     // Catch:{ Exception -> 0x0283, all -> 0x027e }
            java.lang.String r3 = " AND mid IN ("
            r15.append(r3)     // Catch:{ Exception -> 0x0283, all -> 0x027e }
            r15.append(r11)     // Catch:{ Exception -> 0x0283, all -> 0x027e }
            java.lang.String r3 = ","
            r15.append(r3)     // Catch:{ Exception -> 0x0283, all -> 0x027e }
            r15.append(r13)     // Catch:{ Exception -> 0x0283, all -> 0x027e }
            java.lang.String r3 = ")"
            r15.append(r3)     // Catch:{ Exception -> 0x0283, all -> 0x027e }
            java.lang.String r3 = r15.toString()     // Catch:{ Exception -> 0x0283, all -> 0x027e }
            java.lang.Object[] r15 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0283, all -> 0x027e }
            org.telegram.SQLite.SQLiteCursor r3 = r0.queryFinalized(r3, r15)     // Catch:{ Exception -> 0x0283, all -> 0x027e }
            r16 = -1
        L_0x0127:
            boolean r0 = r3.next()     // Catch:{ Exception -> 0x017e, all -> 0x027e }
            if (r0 == 0) goto L_0x0177
            org.telegram.tgnet.NativeByteBuffer r0 = r3.byteBufferValue(r6)     // Catch:{ Exception -> 0x017e, all -> 0x027e }
            if (r0 == 0) goto L_0x0169
            int r15 = r0.readInt32(r6)     // Catch:{ Exception -> 0x017e, all -> 0x027e }
            org.telegram.tgnet.TLRPC$Message r15 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r0, r15, r6)     // Catch:{ Exception -> 0x017e, all -> 0x027e }
            if (r15 == 0) goto L_0x015d
            int r6 = r15.id     // Catch:{ Exception -> 0x017e, all -> 0x027e }
            r17 = r4
            int r4 = r1.currentAccount     // Catch:{ Exception -> 0x0155, all -> 0x027e }
            org.telegram.messenger.UserConfig r4 = org.telegram.messenger.UserConfig.getInstance(r4)     // Catch:{ Exception -> 0x0155, all -> 0x027e }
            r18 = r8
            r19 = r9
            long r8 = r4.clientUserId     // Catch:{ Exception -> 0x0153, all -> 0x0278 }
            r15.readAttachPath(r0, r8)     // Catch:{ Exception -> 0x0153, all -> 0x0278 }
            r16 = r6
            goto L_0x0163
        L_0x0153:
            r0 = move-exception
            goto L_0x015a
        L_0x0155:
            r0 = move-exception
            r18 = r8
            r19 = r9
        L_0x015a:
            r16 = r6
            goto L_0x0185
        L_0x015d:
            r17 = r4
            r18 = r8
            r19 = r9
        L_0x0163:
            r0.reuse()     // Catch:{ Exception -> 0x0167, all -> 0x0278 }
            goto L_0x016f
        L_0x0167:
            r0 = move-exception
            goto L_0x0185
        L_0x0169:
            r17 = r4
            r18 = r8
            r19 = r9
        L_0x016f:
            r4 = r17
            r8 = r18
            r9 = r19
            r6 = 0
            goto L_0x0127
        L_0x0177:
            r17 = r4
            r18 = r8
            r19 = r9
            goto L_0x0188
        L_0x017e:
            r0 = move-exception
            r17 = r4
            r18 = r8
            r19 = r9
        L_0x0185:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
        L_0x0188:
            r0 = r16
            r3.dispose()     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            org.telegram.SQLite.SQLiteDatabase r3 = r1.database     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            java.lang.StringBuilder r4 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            r4.<init>()     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            java.lang.String r6 = "DELETE FROM messages_v2 WHERE uid = "
            r4.append(r6)     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            r4.append(r10)     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            r4.append(r2)     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            r4.append(r11)     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            r4.append(r2)     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            r4.append(r13)     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            java.lang.String r4 = r4.toString()     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.executeFast(r4)     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.stepThis()     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            r3.dispose()     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            org.telegram.SQLite.SQLiteDatabase r3 = r1.database     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            java.lang.StringBuilder r4 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            r4.<init>()     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            java.lang.String r6 = "DELETE FROM messages_holes WHERE uid = "
            r4.append(r6)     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            r4.append(r10)     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            java.lang.String r4 = r4.toString()     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.executeFast(r4)     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.stepThis()     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            r3.dispose()     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            org.telegram.SQLite.SQLiteDatabase r3 = r1.database     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            java.lang.StringBuilder r4 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            r4.<init>()     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            java.lang.String r6 = "DELETE FROM bot_keyboard WHERE uid = "
            r4.append(r6)     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            r4.append(r10)     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            java.lang.String r4 = r4.toString()     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.executeFast(r4)     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.stepThis()     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            r3.dispose()     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            org.telegram.SQLite.SQLiteDatabase r3 = r1.database     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            java.lang.StringBuilder r4 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            r4.<init>()     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            java.lang.String r6 = "DELETE FROM media_counts_v2 WHERE uid = "
            r4.append(r6)     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            r4.append(r10)     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            java.lang.String r4 = r4.toString()     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.executeFast(r4)     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.stepThis()     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            r3.dispose()     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            org.telegram.SQLite.SQLiteDatabase r3 = r1.database     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            java.lang.StringBuilder r4 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            r4.<init>()     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            java.lang.String r6 = "DELETE FROM media_v4 WHERE uid = "
            r4.append(r6)     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            r4.append(r10)     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            java.lang.String r4 = r4.toString()     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.executeFast(r4)     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.stepThis()     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            r3.dispose()     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            org.telegram.SQLite.SQLiteDatabase r3 = r1.database     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            java.lang.StringBuilder r4 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            r4.<init>()     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            java.lang.String r6 = "DELETE FROM media_holes_v2 WHERE uid = "
            r4.append(r6)     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            r4.append(r10)     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            java.lang.String r4 = r4.toString()     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.executeFast(r4)     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.stepThis()     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            r3.dispose()     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            int r3 = r1.currentAccount     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            org.telegram.messenger.MediaDataController r3 = org.telegram.messenger.MediaDataController.getInstance(r3)     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            long r8 = r10.longValue()     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            r4 = 0
            r3.clearBotKeyboard(r8, r4)     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            r3 = -1
            if (r0 == r3) goto L_0x026d
            long r8 = r10.longValue()     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            createFirstHoles(r8, r5, r7, r0)     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            goto L_0x026d
        L_0x0266:
            r17 = r4
            r18 = r8
            r19 = r9
            r4 = 0
        L_0x026d:
            r19.dispose()     // Catch:{ Exception -> 0x027b, all -> 0x0278 }
            r9 = r4
        L_0x0271:
            int r8 = r18 + 1
            r4 = r17
            r6 = 0
            goto L_0x0090
        L_0x0278:
            r0 = move-exception
            goto L_0x02f4
        L_0x027b:
            r0 = move-exception
            goto L_0x02fb
        L_0x027e:
            r0 = move-exception
            r19 = r9
            goto L_0x02f4
        L_0x0283:
            r0 = move-exception
            r19 = r9
            goto L_0x02fb
        L_0x0288:
            r4 = 0
            r5.dispose()     // Catch:{ Exception -> 0x02e0, all -> 0x02da }
            r7.dispose()     // Catch:{ Exception -> 0x02e0, all -> 0x02da }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02d6, all -> 0x02d2 }
            r0.commitTransaction()     // Catch:{ Exception -> 0x02d6, all -> 0x02d2 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02d6, all -> 0x02d2 }
            java.lang.String r2 = "PRAGMA journal_size_limit = 0"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x02d6, all -> 0x02d2 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x02d6, all -> 0x02d2 }
            r0.dispose()     // Catch:{ Exception -> 0x02d6, all -> 0x02d2 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02d6, all -> 0x02d2 }
            java.lang.String r2 = "VACUUM"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x02d6, all -> 0x02d2 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x02d6, all -> 0x02d2 }
            r0.dispose()     // Catch:{ Exception -> 0x02d6, all -> 0x02d2 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02d6, all -> 0x02d2 }
            java.lang.String r2 = "PRAGMA journal_size_limit = -1"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x02d6, all -> 0x02d2 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x02d6, all -> 0x02d2 }
            r0.dispose()     // Catch:{ Exception -> 0x02d6, all -> 0x02d2 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database
            r0.commitTransaction()
            if (r9 == 0) goto L_0x02cb
            r9.dispose()
        L_0x02cb:
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda11 r0 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda11
            r0.<init>(r1)
            goto L_0x0334
        L_0x02d2:
            r0 = move-exception
            r3 = r4
            r7 = r3
            goto L_0x02dc
        L_0x02d6:
            r0 = move-exception
            r3 = r4
            r7 = r3
            goto L_0x02e2
        L_0x02da:
            r0 = move-exception
            r3 = r5
        L_0x02dc:
            r19 = r9
            goto L_0x0339
        L_0x02e0:
            r0 = move-exception
            r3 = r5
        L_0x02e2:
            r19 = r9
            goto L_0x0318
        L_0x02e5:
            r0 = move-exception
            r4 = 0
            r19 = r4
            goto L_0x02f4
        L_0x02ea:
            r0 = move-exception
            r4 = 0
            r19 = r4
            goto L_0x02fb
        L_0x02ef:
            r0 = move-exception
            r4 = 0
            r7 = r4
            r19 = r7
        L_0x02f4:
            r3 = r5
            goto L_0x0339
        L_0x02f6:
            r0 = move-exception
            r4 = 0
            r7 = r4
            r19 = r7
        L_0x02fb:
            r3 = r5
            goto L_0x0318
        L_0x02fd:
            r0 = move-exception
            r4 = 0
            r3 = r4
            r7 = r3
            r19 = r5
            goto L_0x0339
        L_0x0304:
            r0 = move-exception
            r4 = 0
            r3 = r4
            r7 = r3
            r19 = r5
            goto L_0x0318
        L_0x030b:
            r0 = move-exception
            r4 = 0
            r3 = r4
            r7 = r3
            r19 = r7
            goto L_0x0339
        L_0x0312:
            r0 = move-exception
            r4 = 0
            r3 = r4
            r7 = r3
            r19 = r7
        L_0x0318:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0338 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database
            r0.commitTransaction()
            if (r3 == 0) goto L_0x0325
            r3.dispose()
        L_0x0325:
            if (r7 == 0) goto L_0x032a
            r7.dispose()
        L_0x032a:
            if (r19 == 0) goto L_0x032f
            r19.dispose()
        L_0x032f:
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda11 r0 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda11
            r0.<init>(r1)
        L_0x0334:
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0)
            return
        L_0x0338:
            r0 = move-exception
        L_0x0339:
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database
            r2.commitTransaction()
            if (r3 == 0) goto L_0x0343
            r3.dispose()
        L_0x0343:
            if (r7 == 0) goto L_0x0348
            r7.dispose()
        L_0x0348:
            if (r19 == 0) goto L_0x034d
            r19.dispose()
        L_0x034d:
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda11 r2 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda11
            r2.<init>(r1)
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r2)
            goto L_0x0357
        L_0x0356:
            throw r0
        L_0x0357:
            goto L_0x0356
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$clearLocalDatabase$37():void");
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$clearLocalDatabase$36() {
        NotificationCenter.getInstance(this.currentAccount).postNotificationName(NotificationCenter.didClearDatabase, new Object[0]);
        getMediaDataController().loadAttachMenuBots(false, true);
    }

    private static class ReadDialog {
        public int date;
        public int lastMid;
        public int unreadCount;

        private ReadDialog() {
        }
    }

    public void readAllDialogs(int i) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda25(this, i));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:48:0x0108  */
    /* JADX WARNING: Removed duplicated region for block: B:50:0x010e  */
    /* JADX WARNING: Removed duplicated region for block: B:63:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$readAllDialogs$39(int r13) {
        /*
            r12 = this;
            r0 = 0
            java.util.ArrayList r1 = new java.util.ArrayList     // Catch:{ Exception -> 0x0102 }
            r1.<init>()     // Catch:{ Exception -> 0x0102 }
            java.util.ArrayList r2 = new java.util.ArrayList     // Catch:{ Exception -> 0x0102 }
            r2.<init>()     // Catch:{ Exception -> 0x0102 }
            java.util.ArrayList r3 = new java.util.ArrayList     // Catch:{ Exception -> 0x0102 }
            r3.<init>()     // Catch:{ Exception -> 0x0102 }
            androidx.collection.LongSparseArray r9 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x0102 }
            r9.<init>()     // Catch:{ Exception -> 0x0102 }
            r4 = 1
            r5 = 0
            if (r13 < 0) goto L_0x0032
            org.telegram.SQLite.SQLiteDatabase r6 = r12.database     // Catch:{ Exception -> 0x0102 }
            java.util.Locale r7 = java.util.Locale.US     // Catch:{ Exception -> 0x0102 }
            java.lang.String r8 = "SELECT did, last_mid, unread_count, date FROM dialogs WHERE unread_count > 0 AND folder_id = %1$d"
            java.lang.Object[] r10 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0102 }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r13)     // Catch:{ Exception -> 0x0102 }
            r10[r5] = r13     // Catch:{ Exception -> 0x0102 }
            java.lang.String r13 = java.lang.String.format(r7, r8, r10)     // Catch:{ Exception -> 0x0102 }
            java.lang.Object[] r7 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x0102 }
            org.telegram.SQLite.SQLiteCursor r13 = r6.queryFinalized(r13, r7)     // Catch:{ Exception -> 0x0102 }
            goto L_0x003c
        L_0x0032:
            org.telegram.SQLite.SQLiteDatabase r13 = r12.database     // Catch:{ Exception -> 0x0102 }
            java.lang.String r6 = "SELECT did, last_mid, unread_count, date FROM dialogs WHERE unread_count > 0"
            java.lang.Object[] r7 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x0102 }
            org.telegram.SQLite.SQLiteCursor r13 = r13.queryFinalized(r6, r7)     // Catch:{ Exception -> 0x0102 }
        L_0x003c:
            boolean r6 = r13.next()     // Catch:{ Exception -> 0x00fb, all -> 0x00f6 }
            if (r6 == 0) goto L_0x00b0
            long r6 = r13.longValue(r5)     // Catch:{ Exception -> 0x00fb, all -> 0x00f6 }
            boolean r8 = org.telegram.messenger.DialogObject.isFolderDialogId(r6)     // Catch:{ Exception -> 0x00fb, all -> 0x00f6 }
            if (r8 == 0) goto L_0x004d
            goto L_0x003c
        L_0x004d:
            org.telegram.messenger.MessagesStorage$ReadDialog r8 = new org.telegram.messenger.MessagesStorage$ReadDialog     // Catch:{ Exception -> 0x00fb, all -> 0x00f6 }
            r8.<init>()     // Catch:{ Exception -> 0x00fb, all -> 0x00f6 }
            int r10 = r13.intValue(r4)     // Catch:{ Exception -> 0x00fb, all -> 0x00f6 }
            r8.lastMid = r10     // Catch:{ Exception -> 0x00fb, all -> 0x00f6 }
            r10 = 2
            int r10 = r13.intValue(r10)     // Catch:{ Exception -> 0x00fb, all -> 0x00f6 }
            r8.unreadCount = r10     // Catch:{ Exception -> 0x00fb, all -> 0x00f6 }
            r10 = 3
            int r10 = r13.intValue(r10)     // Catch:{ Exception -> 0x00fb, all -> 0x00f6 }
            r8.date = r10     // Catch:{ Exception -> 0x00fb, all -> 0x00f6 }
            r9.put(r6, r8)     // Catch:{ Exception -> 0x00fb, all -> 0x00f6 }
            boolean r8 = org.telegram.messenger.DialogObject.isEncryptedDialog(r6)     // Catch:{ Exception -> 0x00fb, all -> 0x00f6 }
            if (r8 != 0) goto L_0x009a
            boolean r8 = org.telegram.messenger.DialogObject.isChatDialog(r6)     // Catch:{ Exception -> 0x00fb, all -> 0x00f6 }
            if (r8 == 0) goto L_0x0088
            long r6 = -r6
            java.lang.Long r8 = java.lang.Long.valueOf(r6)     // Catch:{ Exception -> 0x00fb, all -> 0x00f6 }
            boolean r8 = r2.contains(r8)     // Catch:{ Exception -> 0x00fb, all -> 0x00f6 }
            if (r8 != 0) goto L_0x003c
            java.lang.Long r6 = java.lang.Long.valueOf(r6)     // Catch:{ Exception -> 0x00fb, all -> 0x00f6 }
            r2.add(r6)     // Catch:{ Exception -> 0x00fb, all -> 0x00f6 }
            goto L_0x003c
        L_0x0088:
            java.lang.Long r8 = java.lang.Long.valueOf(r6)     // Catch:{ Exception -> 0x00fb, all -> 0x00f6 }
            boolean r8 = r1.contains(r8)     // Catch:{ Exception -> 0x00fb, all -> 0x00f6 }
            if (r8 != 0) goto L_0x003c
            java.lang.Long r6 = java.lang.Long.valueOf(r6)     // Catch:{ Exception -> 0x00fb, all -> 0x00f6 }
            r1.add(r6)     // Catch:{ Exception -> 0x00fb, all -> 0x00f6 }
            goto L_0x003c
        L_0x009a:
            int r6 = org.telegram.messenger.DialogObject.getEncryptedChatId(r6)     // Catch:{ Exception -> 0x00fb, all -> 0x00f6 }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x00fb, all -> 0x00f6 }
            boolean r7 = r3.contains(r7)     // Catch:{ Exception -> 0x00fb, all -> 0x00f6 }
            if (r7 != 0) goto L_0x003c
            java.lang.Integer r6 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x00fb, all -> 0x00f6 }
            r3.add(r6)     // Catch:{ Exception -> 0x00fb, all -> 0x00f6 }
            goto L_0x003c
        L_0x00b0:
            r13.dispose()     // Catch:{ Exception -> 0x00fb, all -> 0x00f6 }
            java.util.ArrayList r6 = new java.util.ArrayList     // Catch:{ Exception -> 0x0102 }
            r6.<init>()     // Catch:{ Exception -> 0x0102 }
            java.util.ArrayList r7 = new java.util.ArrayList     // Catch:{ Exception -> 0x0102 }
            r7.<init>()     // Catch:{ Exception -> 0x0102 }
            java.util.ArrayList r8 = new java.util.ArrayList     // Catch:{ Exception -> 0x0102 }
            r8.<init>()     // Catch:{ Exception -> 0x0102 }
            boolean r13 = r3.isEmpty()     // Catch:{ Exception -> 0x0102 }
            java.lang.String r4 = ","
            if (r13 != 0) goto L_0x00d1
            java.lang.String r13 = android.text.TextUtils.join(r4, r3)     // Catch:{ Exception -> 0x0102 }
            r12.getEncryptedChatsInternal(r13, r8, r1)     // Catch:{ Exception -> 0x0102 }
        L_0x00d1:
            boolean r13 = r1.isEmpty()     // Catch:{ Exception -> 0x0102 }
            if (r13 != 0) goto L_0x00de
            java.lang.String r13 = android.text.TextUtils.join(r4, r1)     // Catch:{ Exception -> 0x0102 }
            r12.getUsersInternal(r13, r6)     // Catch:{ Exception -> 0x0102 }
        L_0x00de:
            boolean r13 = r2.isEmpty()     // Catch:{ Exception -> 0x0102 }
            if (r13 != 0) goto L_0x00eb
            java.lang.String r13 = android.text.TextUtils.join(r4, r2)     // Catch:{ Exception -> 0x0102 }
            r12.getChatsInternal(r13, r7)     // Catch:{ Exception -> 0x0102 }
        L_0x00eb:
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda145 r13 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda145     // Catch:{ Exception -> 0x0102 }
            r4 = r13
            r5 = r12
            r4.<init>(r5, r6, r7, r8, r9)     // Catch:{ Exception -> 0x0102 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r13)     // Catch:{ Exception -> 0x0102 }
            goto L_0x010b
        L_0x00f6:
            r0 = move-exception
            r11 = r0
            r0 = r13
            r13 = r11
            goto L_0x010c
        L_0x00fb:
            r0 = move-exception
            r11 = r0
            r0 = r13
            r13 = r11
            goto L_0x0103
        L_0x0100:
            r13 = move-exception
            goto L_0x010c
        L_0x0102:
            r13 = move-exception
        L_0x0103:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r13)     // Catch:{ all -> 0x0100 }
            if (r0 == 0) goto L_0x010b
            r0.dispose()
        L_0x010b:
            return
        L_0x010c:
            if (r0 == 0) goto L_0x0111
            r0.dispose()
        L_0x0111:
            goto L_0x0113
        L_0x0112:
            throw r13
        L_0x0113:
            goto L_0x0112
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$readAllDialogs$39(int):void");
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$readAllDialogs$38(ArrayList arrayList, ArrayList arrayList2, ArrayList arrayList3, LongSparseArray longSparseArray) {
        getMessagesController().putUsers(arrayList, true);
        getMessagesController().putChats(arrayList2, true);
        getMessagesController().putEncryptedChats(arrayList3, true);
        for (int i = 0; i < longSparseArray.size(); i++) {
            long keyAt = longSparseArray.keyAt(i);
            ReadDialog readDialog = (ReadDialog) longSparseArray.valueAt(i);
            MessagesController messagesController = getMessagesController();
            int i2 = readDialog.lastMid;
            messagesController.markDialogAsRead(keyAt, i2, i2, readDialog.date, false, 0, readDialog.unreadCount, true, 0);
        }
    }

    /* JADX WARNING: Code restructure failed: missing block: B:110:0x0265, code lost:
        r0 = th;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:111:0x0266, code lost:
        r7 = r8;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:112:0x0268, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:113:0x0269, code lost:
        r7 = r8;
     */
    /* JADX WARNING: Failed to process nested try/catch */
    /* JADX WARNING: Removed duplicated region for block: B:110:0x0265 A[ExcHandler: all (th java.lang.Throwable), Splitter:B:3:0x0029] */
    /* JADX WARNING: Removed duplicated region for block: B:122:0x0274  */
    /* JADX WARNING: Removed duplicated region for block: B:16:0x0084 A[Catch:{ Exception -> 0x0268, all -> 0x0265 }] */
    /* JADX WARNING: Removed duplicated region for block: B:17:0x0086 A[Catch:{ Exception -> 0x0268, all -> 0x0265 }] */
    /* JADX WARNING: Removed duplicated region for block: B:20:0x009a A[Catch:{ Exception -> 0x0268, all -> 0x0265 }] */
    /* JADX WARNING: Removed duplicated region for block: B:21:0x009c A[Catch:{ Exception -> 0x0268, all -> 0x0265 }] */
    /* JADX WARNING: Removed duplicated region for block: B:24:0x00b0 A[Catch:{ Exception -> 0x0268, all -> 0x0265 }] */
    /* JADX WARNING: Removed duplicated region for block: B:29:0x00d9 A[Catch:{ Exception -> 0x0268, all -> 0x0265 }] */
    /* JADX WARNING: Removed duplicated region for block: B:67:0x0185 A[Catch:{ Exception -> 0x0268, all -> 0x0265 }] */
    /* JADX WARNING: Removed duplicated region for block: B:70:0x019b A[Catch:{ Exception -> 0x0268, all -> 0x0265 }] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private org.telegram.tgnet.TLRPC$messages_Dialogs loadDialogsByIds(java.lang.String r19, java.util.ArrayList<java.lang.Long> r20, java.util.ArrayList<java.lang.Long> r21, java.util.ArrayList<java.lang.Integer> r22) throws java.lang.Exception {
        /*
            r18 = this;
            r1 = r18
            r2 = r20
            r3 = r21
            r4 = r22
            org.telegram.tgnet.TLRPC$TL_messages_dialogs r5 = new org.telegram.tgnet.TLRPC$TL_messages_dialogs
            r5.<init>()
            androidx.collection.LongSparseArray r6 = new androidx.collection.LongSparseArray
            r6.<init>()
            r7 = 0
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x026e, all -> 0x026b }
            java.util.Locale r8 = java.util.Locale.US     // Catch:{ Exception -> 0x026e, all -> 0x026b }
            java.lang.String r9 = "SELECT d.did, d.last_mid, d.unread_count, d.date, m.data, m.read_state, m.mid, m.send_state, s.flags, m.date, d.pts, d.inbox_max, d.outbox_max, m.replydata, d.pinned, d.unread_count_i, d.flags, d.folder_id, d.data, d.unread_reactions FROM dialogs as d LEFT JOIN messages_v2 as m ON d.last_mid = m.mid AND d.did = m.uid LEFT JOIN dialog_settings as s ON d.did = s.did WHERE d.did IN (%s) ORDER BY d.pinned DESC, d.date DESC"
            r10 = 1
            java.lang.Object[] r11 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x026e, all -> 0x026b }
            r12 = 0
            r11[r12] = r19     // Catch:{ Exception -> 0x026e, all -> 0x026b }
            java.lang.String r8 = java.lang.String.format(r8, r9, r11)     // Catch:{ Exception -> 0x026e, all -> 0x026b }
            java.lang.Object[] r9 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x026e, all -> 0x026b }
            org.telegram.SQLite.SQLiteCursor r8 = r0.queryFinalized(r8, r9)     // Catch:{ Exception -> 0x026e, all -> 0x026b }
        L_0x0029:
            boolean r0 = r8.next()     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r9 = 3
            r11 = 2
            if (r0 == 0) goto L_0x01ca
            long r13 = r8.longValue(r12)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            org.telegram.tgnet.TLRPC$TL_dialog r15 = new org.telegram.tgnet.TLRPC$TL_dialog     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r15.<init>()     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r15.id = r13     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            int r0 = r8.intValue(r10)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r15.top_message = r0     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            int r0 = r8.intValue(r11)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r15.unread_count = r0     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            int r0 = r8.intValue(r9)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r15.last_message_date = r0     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r0 = 10
            int r0 = r8.intValue(r0)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r15.pts = r0     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            if (r0 == 0) goto L_0x0065
            r16 = r13
            long r12 = r15.id     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            boolean r0 = org.telegram.messenger.DialogObject.isUserDialog(r12)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            if (r0 == 0) goto L_0x0063
            goto L_0x0067
        L_0x0063:
            r0 = 1
            goto L_0x0068
        L_0x0065:
            r16 = r13
        L_0x0067:
            r0 = 0
        L_0x0068:
            r15.flags = r0     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r0 = 11
            int r0 = r8.intValue(r0)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r15.read_inbox_max_id = r0     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r0 = 12
            int r0 = r8.intValue(r0)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r15.read_outbox_max_id = r0     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r0 = 14
            int r0 = r8.intValue(r0)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r15.pinnedNum = r0     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            if (r0 == 0) goto L_0x0086
            r0 = 1
            goto L_0x0087
        L_0x0086:
            r0 = 0
        L_0x0087:
            r15.pinned = r0     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r0 = 15
            int r0 = r8.intValue(r0)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r15.unread_mentions_count = r0     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r0 = 16
            int r0 = r8.intValue(r0)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r0 = r0 & r10
            if (r0 == 0) goto L_0x009c
            r0 = 1
            goto L_0x009d
        L_0x009c:
            r0 = 0
        L_0x009d:
            r15.unread_mark = r0     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r0 = 8
            long r11 = r8.longValue(r0)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            int r0 = (int) r11     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            org.telegram.tgnet.TLRPC$TL_peerNotifySettings r9 = new org.telegram.tgnet.TLRPC$TL_peerNotifySettings     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r9.<init>()     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r15.notify_settings = r9     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r0 = r0 & r10
            if (r0 == 0) goto L_0x00bd
            r0 = 32
            long r11 = r11 >> r0
            int r0 = (int) r11     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r9.mute_until = r0     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            if (r0 != 0) goto L_0x00bd
            r0 = 2147483647(0x7fffffff, float:NaN)
            r9.mute_until = r0     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
        L_0x00bd:
            r0 = 17
            int r0 = r8.intValue(r0)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r15.folder_id = r0     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r0 = 19
            int r0 = r8.intValue(r0)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r15.unread_reactions_count = r0     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r0 = r5.dialogs     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r0.add(r15)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r0 = 4
            org.telegram.tgnet.NativeByteBuffer r0 = r8.byteBufferValue(r0)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            if (r0 == 0) goto L_0x0170
            r9 = 0
            int r11 = r0.readInt32(r9)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            org.telegram.tgnet.TLRPC$Message r11 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r0, r11, r9)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            if (r11 == 0) goto L_0x016d
            org.telegram.messenger.UserConfig r9 = r18.getUserConfig()     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            long r12 = r9.clientUserId     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r11.readAttachPath(r0, r12)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r0.reuse()     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r0 = 5
            int r0 = r8.intValue(r0)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            org.telegram.messenger.MessageObject.setUnreadFlags(r11, r0)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r0 = 6
            int r0 = r8.intValue(r0)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r11.id = r0     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r0 = 9
            int r0 = r8.intValue(r0)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            if (r0 == 0) goto L_0x0109
            r15.last_message_date = r0     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
        L_0x0109:
            r0 = 7
            int r0 = r8.intValue(r0)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r11.send_state = r0     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            long r12 = r15.id     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r11.dialog_id = r12     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r0 = r5.messages     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r0.add(r11)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            addUsersAndChatsFromMessage(r11, r2, r3, r7)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r0 = r11.reply_to     // Catch:{ Exception -> 0x0168, all -> 0x0265 }
            if (r0 == 0) goto L_0x0170
            int r0 = r0.reply_to_msg_id     // Catch:{ Exception -> 0x0168, all -> 0x0265 }
            if (r0 == 0) goto L_0x0170
            org.telegram.tgnet.TLRPC$MessageAction r0 = r11.action     // Catch:{ Exception -> 0x0168, all -> 0x0265 }
            boolean r9 = r0 instanceof org.telegram.tgnet.TLRPC$TL_messageActionPinMessage     // Catch:{ Exception -> 0x0168, all -> 0x0265 }
            if (r9 != 0) goto L_0x0132
            boolean r9 = r0 instanceof org.telegram.tgnet.TLRPC$TL_messageActionPaymentSent     // Catch:{ Exception -> 0x0168, all -> 0x0265 }
            if (r9 != 0) goto L_0x0132
            boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC$TL_messageActionGameScore     // Catch:{ Exception -> 0x0168, all -> 0x0265 }
            if (r0 == 0) goto L_0x0170
        L_0x0132:
            r0 = 13
            boolean r9 = r8.isNull(r0)     // Catch:{ Exception -> 0x0168, all -> 0x0265 }
            if (r9 != 0) goto L_0x015e
            org.telegram.tgnet.NativeByteBuffer r0 = r8.byteBufferValue(r0)     // Catch:{ Exception -> 0x0168, all -> 0x0265 }
            if (r0 == 0) goto L_0x015e
            r9 = 0
            int r12 = r0.readInt32(r9)     // Catch:{ Exception -> 0x0168, all -> 0x0265 }
            org.telegram.tgnet.TLRPC$Message r12 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r0, r12, r9)     // Catch:{ Exception -> 0x0168, all -> 0x0265 }
            r11.replyMessage = r12     // Catch:{ Exception -> 0x0168, all -> 0x0265 }
            org.telegram.messenger.UserConfig r9 = r18.getUserConfig()     // Catch:{ Exception -> 0x0168, all -> 0x0265 }
            long r13 = r9.clientUserId     // Catch:{ Exception -> 0x0168, all -> 0x0265 }
            r12.readAttachPath(r0, r13)     // Catch:{ Exception -> 0x0168, all -> 0x0265 }
            r0.reuse()     // Catch:{ Exception -> 0x0168, all -> 0x0265 }
            org.telegram.tgnet.TLRPC$Message r0 = r11.replyMessage     // Catch:{ Exception -> 0x0168, all -> 0x0265 }
            if (r0 == 0) goto L_0x015e
            addUsersAndChatsFromMessage(r0, r2, r3, r7)     // Catch:{ Exception -> 0x0168, all -> 0x0265 }
        L_0x015e:
            org.telegram.tgnet.TLRPC$Message r0 = r11.replyMessage     // Catch:{ Exception -> 0x0168, all -> 0x0265 }
            if (r0 != 0) goto L_0x0170
            long r12 = r15.id     // Catch:{ Exception -> 0x0168, all -> 0x0265 }
            r6.put(r12, r11)     // Catch:{ Exception -> 0x0168, all -> 0x0265 }
            goto L_0x0170
        L_0x0168:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            goto L_0x0170
        L_0x016d:
            r0.reuse()     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
        L_0x0170:
            boolean r0 = org.telegram.messenger.DialogObject.isEncryptedDialog(r16)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            if (r0 != 0) goto L_0x017f
            int r0 = r15.read_inbox_max_id     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            int r9 = r15.top_message     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            if (r0 <= r9) goto L_0x017f
            r9 = 0
            r15.read_inbox_max_id = r9     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
        L_0x017f:
            boolean r0 = org.telegram.messenger.DialogObject.isEncryptedDialog(r16)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            if (r0 == 0) goto L_0x019b
            int r0 = org.telegram.messenger.DialogObject.getEncryptedChatId(r16)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            java.lang.Integer r9 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            boolean r9 = r4.contains(r9)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            if (r9 != 0) goto L_0x01c7
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r4.add(r0)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            goto L_0x01c7
        L_0x019b:
            boolean r0 = org.telegram.messenger.DialogObject.isUserDialog(r16)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            if (r0 == 0) goto L_0x01b3
            java.lang.Long r0 = java.lang.Long.valueOf(r16)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            boolean r0 = r2.contains(r0)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            if (r0 != 0) goto L_0x01c7
            java.lang.Long r0 = java.lang.Long.valueOf(r16)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r2.add(r0)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            goto L_0x01c7
        L_0x01b3:
            r11 = r16
            long r11 = -r11
            java.lang.Long r0 = java.lang.Long.valueOf(r11)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            boolean r0 = r3.contains(r0)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            if (r0 != 0) goto L_0x01c7
            java.lang.Long r0 = java.lang.Long.valueOf(r11)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            r3.add(r0)     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
        L_0x01c7:
            r12 = 0
            goto L_0x0029
        L_0x01ca:
            r8.dispose()     // Catch:{ Exception -> 0x0268, all -> 0x0265 }
            boolean r0 = r6.isEmpty()     // Catch:{ Exception -> 0x026e, all -> 0x026b }
            if (r0 != 0) goto L_0x0264
            int r0 = r6.size()     // Catch:{ Exception -> 0x026e, all -> 0x026b }
            r4 = 0
        L_0x01d8:
            if (r4 >= r0) goto L_0x0264
            long r12 = r6.keyAt(r4)     // Catch:{ Exception -> 0x026e, all -> 0x026b }
            java.lang.Object r8 = r6.valueAt(r4)     // Catch:{ Exception -> 0x026e, all -> 0x026b }
            org.telegram.tgnet.TLRPC$Message r8 = (org.telegram.tgnet.TLRPC$Message) r8     // Catch:{ Exception -> 0x026e, all -> 0x026b }
            org.telegram.SQLite.SQLiteDatabase r14 = r1.database     // Catch:{ Exception -> 0x026e, all -> 0x026b }
            java.util.Locale r15 = java.util.Locale.US     // Catch:{ Exception -> 0x026e, all -> 0x026b }
            java.lang.String r7 = "SELECT data, mid, date, uid FROM messages_v2 WHERE mid = %d and uid = %d"
            java.lang.Object[] r9 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x0260, all -> 0x025c }
            int r11 = r8.id     // Catch:{ Exception -> 0x0260, all -> 0x025c }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r11)     // Catch:{ Exception -> 0x0260, all -> 0x025c }
            r10 = 0
            r9[r10] = r11     // Catch:{ Exception -> 0x0260, all -> 0x025c }
            java.lang.Long r11 = java.lang.Long.valueOf(r12)     // Catch:{ Exception -> 0x0260, all -> 0x025c }
            r12 = 1
            r9[r12] = r11     // Catch:{ Exception -> 0x0260, all -> 0x025c }
            java.lang.String r7 = java.lang.String.format(r15, r7, r9)     // Catch:{ Exception -> 0x0260, all -> 0x025c }
            java.lang.Object[] r9 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x0260, all -> 0x025c }
            org.telegram.SQLite.SQLiteCursor r7 = r14.queryFinalized(r7, r9)     // Catch:{ Exception -> 0x0260, all -> 0x025c }
        L_0x0206:
            boolean r9 = r7.next()     // Catch:{ Exception -> 0x0260, all -> 0x025c }
            if (r9 == 0) goto L_0x024b
            org.telegram.tgnet.NativeByteBuffer r9 = r7.byteBufferValue(r10)     // Catch:{ Exception -> 0x0260, all -> 0x025c }
            if (r9 == 0) goto L_0x0246
            int r11 = r9.readInt32(r10)     // Catch:{ Exception -> 0x0260, all -> 0x025c }
            org.telegram.tgnet.TLRPC$Message r11 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r9, r11, r10)     // Catch:{ Exception -> 0x0260, all -> 0x025c }
            org.telegram.messenger.UserConfig r12 = r18.getUserConfig()     // Catch:{ Exception -> 0x0260, all -> 0x025c }
            long r12 = r12.clientUserId     // Catch:{ Exception -> 0x0260, all -> 0x025c }
            r11.readAttachPath(r9, r12)     // Catch:{ Exception -> 0x0260, all -> 0x025c }
            r9.reuse()     // Catch:{ Exception -> 0x0260, all -> 0x025c }
            r9 = 1
            int r12 = r7.intValue(r9)     // Catch:{ Exception -> 0x0260, all -> 0x025c }
            r11.id = r12     // Catch:{ Exception -> 0x0260, all -> 0x025c }
            r12 = 2
            int r13 = r7.intValue(r12)     // Catch:{ Exception -> 0x0260, all -> 0x025c }
            r11.date = r13     // Catch:{ Exception -> 0x0260, all -> 0x025c }
            r13 = 3
            long r14 = r7.longValue(r13)     // Catch:{ Exception -> 0x0260, all -> 0x025c }
            r11.dialog_id = r14     // Catch:{ Exception -> 0x0260, all -> 0x025c }
            r14 = 0
            addUsersAndChatsFromMessage(r11, r2, r3, r14)     // Catch:{ Exception -> 0x025a, all -> 0x0258 }
            r8.replyMessage = r11     // Catch:{ Exception -> 0x025a, all -> 0x0258 }
            long r9 = r8.dialog_id     // Catch:{ Exception -> 0x025a, all -> 0x0258 }
            r11.dialog_id = r9     // Catch:{ Exception -> 0x025a, all -> 0x0258 }
            goto L_0x0249
        L_0x0246:
            r12 = 2
            r13 = 3
            r14 = 0
        L_0x0249:
            r10 = 0
            goto L_0x0206
        L_0x024b:
            r12 = 2
            r13 = 3
            r14 = 0
            r7.dispose()     // Catch:{ Exception -> 0x025a, all -> 0x0258 }
            int r4 = r4 + 1
            r7 = r14
            r9 = 3
            r10 = 1
            r11 = 2
            goto L_0x01d8
        L_0x0258:
            r0 = move-exception
            goto L_0x025e
        L_0x025a:
            r0 = move-exception
            goto L_0x0262
        L_0x025c:
            r0 = move-exception
            r14 = 0
        L_0x025e:
            r7 = r14
            goto L_0x0272
        L_0x0260:
            r0 = move-exception
            r14 = 0
        L_0x0262:
            r7 = r14
            goto L_0x0270
        L_0x0264:
            return r5
        L_0x0265:
            r0 = move-exception
            r7 = r8
            goto L_0x0272
        L_0x0268:
            r0 = move-exception
            r7 = r8
            goto L_0x0270
        L_0x026b:
            r0 = move-exception
            r14 = r7
            goto L_0x0272
        L_0x026e:
            r0 = move-exception
            r14 = r7
        L_0x0270:
            throw r0     // Catch:{ all -> 0x0271 }
        L_0x0271:
            r0 = move-exception
        L_0x0272:
            if (r7 == 0) goto L_0x0277
            r7.dispose()
        L_0x0277:
            goto L_0x0279
        L_0x0278:
            throw r0
        L_0x0279:
            goto L_0x0278
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.loadDialogsByIds(java.lang.String, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList):org.telegram.tgnet.TLRPC$messages_Dialogs");
    }

    private void loadDialogFilters() {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda21(this));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:101:0x025c  */
    /* JADX WARNING: Removed duplicated region for block: B:103:0x0261  */
    /* JADX WARNING: Removed duplicated region for block: B:119:? A[RETURN, SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:96:0x0250  */
    /* JADX WARNING: Removed duplicated region for block: B:98:0x0255  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$loadDialogFilters$41() {
        /*
            r18 = this;
            r1 = r18
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            r0.<init>()     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            java.util.ArrayList r3 = new java.util.ArrayList     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            r3.<init>()     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            java.util.ArrayList r4 = new java.util.ArrayList     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            r4.<init>()     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            java.util.ArrayList r5 = new java.util.ArrayList     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            r5.<init>()     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            android.util.SparseArray r6 = new android.util.SparseArray     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            r6.<init>()     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            org.telegram.messenger.UserConfig r7 = r18.getUserConfig()     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            long r7 = r7.getClientUserId()     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            java.lang.Long r7 = java.lang.Long.valueOf(r7)     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            r0.add(r7)     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            org.telegram.SQLite.SQLiteDatabase r7 = r1.database     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            java.lang.String r8 = "SELECT id, ord, unread_count, flags, title FROM dialog_filter WHERE 1"
            r9 = 0
            java.lang.Object[] r10 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            org.telegram.SQLite.SQLiteCursor r7 = r7.queryFinalized(r8, r10)     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            r8 = 0
            r10 = 0
        L_0x0037:
            boolean r11 = r7.next()     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            r12 = 2
            r13 = 4
            r14 = 3
            r15 = 1
            if (r11 == 0) goto L_0x015b
            org.telegram.messenger.MessagesController$DialogFilter r11 = new org.telegram.messenger.MessagesController$DialogFilter     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            r11.<init>()     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            int r2 = r7.intValue(r9)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            r11.id = r2     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            int r2 = r7.intValue(r15)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            r11.order = r2     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            r2 = -1
            r11.unreadCount = r2     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            r11.pendingUnreadCount = r2     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            int r2 = r7.intValue(r14)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            r11.flags = r2     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            java.lang.String r2 = r7.stringValue(r13)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            r11.name = r2     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            java.util.ArrayList<org.telegram.messenger.MessagesController$DialogFilter> r2 = r1.dialogFilters     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            r2.add(r11)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            android.util.SparseArray<org.telegram.messenger.MessagesController$DialogFilter> r2 = r1.dialogFiltersMap     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            int r13 = r11.id     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            r2.put(r13, r11)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            int r2 = r11.id     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            r6.put(r2, r11)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            int r2 = r11.pendingUnreadCount     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            if (r2 >= 0) goto L_0x0079
            r10 = 1
        L_0x0079:
            r2 = 0
        L_0x007a:
            if (r2 >= r12) goto L_0x0153
            if (r2 != 0) goto L_0x009a
            org.telegram.SQLite.SQLiteDatabase r13 = r1.database     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            java.lang.StringBuilder r14 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            r14.<init>()     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            java.lang.String r12 = "SELECT peer, pin FROM dialog_filter_pin_v2 WHERE id = "
            r14.append(r12)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            int r12 = r11.id     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            r14.append(r12)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            java.lang.String r12 = r14.toString()     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            java.lang.Object[] r14 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            org.telegram.SQLite.SQLiteCursor r12 = r13.queryFinalized(r12, r14)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            goto L_0x00b5
        L_0x009a:
            org.telegram.SQLite.SQLiteDatabase r12 = r1.database     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            java.lang.StringBuilder r13 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            r13.<init>()     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            java.lang.String r14 = "SELECT peer FROM dialog_filter_ep WHERE id = "
            r13.append(r14)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            int r14 = r11.id     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            r13.append(r14)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            java.lang.String r13 = r13.toString()     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            java.lang.Object[] r14 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            org.telegram.SQLite.SQLiteCursor r12 = r12.queryFinalized(r13, r14)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
        L_0x00b5:
            boolean r13 = r12.next()     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            if (r13 == 0) goto L_0x0149
            long r13 = r12.longValue(r9)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            if (r2 != 0) goto L_0x00f0
            boolean r17 = org.telegram.messenger.DialogObject.isEncryptedDialog(r13)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            if (r17 != 0) goto L_0x00d0
            java.util.ArrayList<java.lang.Long> r9 = r11.alwaysShow     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            java.lang.Long r15 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            r9.add(r15)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
        L_0x00d0:
            r9 = 1
            int r15 = r12.intValue(r9)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            r9 = -2147483648(0xfffffffvar_, float:-0.0)
            if (r15 == r9) goto L_0x00ff
            org.telegram.messenger.support.LongSparseIntArray r9 = r11.pinnedDialogs     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            r9.put(r13, r15)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            java.lang.Long r9 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            boolean r9 = r5.contains(r9)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            if (r9 != 0) goto L_0x00ff
            java.lang.Long r9 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            r5.add(r9)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            goto L_0x00ff
        L_0x00f0:
            boolean r9 = org.telegram.messenger.DialogObject.isEncryptedDialog(r13)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            if (r9 != 0) goto L_0x00ff
            java.util.ArrayList<java.lang.Long> r9 = r11.neverShow     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            java.lang.Long r15 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            r9.add(r15)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
        L_0x00ff:
            boolean r9 = org.telegram.messenger.DialogObject.isChatDialog(r13)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            if (r9 == 0) goto L_0x0118
            long r13 = -r13
            java.lang.Long r9 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            boolean r9 = r3.contains(r9)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            if (r9 != 0) goto L_0x0145
            java.lang.Long r9 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            r3.add(r9)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            goto L_0x0145
        L_0x0118:
            boolean r9 = org.telegram.messenger.DialogObject.isUserDialog(r13)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            if (r9 == 0) goto L_0x0130
            java.lang.Long r9 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            boolean r9 = r0.contains(r9)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            if (r9 != 0) goto L_0x0145
            java.lang.Long r9 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            r0.add(r9)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            goto L_0x0145
        L_0x0130:
            int r9 = org.telegram.messenger.DialogObject.getEncryptedChatId(r13)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            boolean r13 = r4.contains(r13)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            if (r13 != 0) goto L_0x0145
            java.lang.Integer r9 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            r4.add(r9)     // Catch:{ Exception -> 0x023f, all -> 0x023c }
        L_0x0145:
            r9 = 0
            r15 = 1
            goto L_0x00b5
        L_0x0149:
            r12.dispose()     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            int r2 = r2 + 1
            r9 = 0
            r12 = 2
            r15 = 1
            goto L_0x007a
        L_0x0153:
            int r2 = r11.id     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            if (r2 != 0) goto L_0x0158
            r8 = 1
        L_0x0158:
            r9 = 0
            goto L_0x0037
        L_0x015b:
            r7.dispose()     // Catch:{ Exception -> 0x023f, all -> 0x023c }
            if (r8 != 0) goto L_0x01d1
            org.telegram.messenger.MessagesController$DialogFilter r2 = new org.telegram.messenger.MessagesController$DialogFilter     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            r2.<init>()     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            r7 = 0
            r2.id = r7     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            r2.order = r7     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            java.lang.String r8 = "ALL_CHATS"
            r2.name = r8     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            r9 = 0
        L_0x016f:
            java.util.ArrayList<org.telegram.messenger.MessagesController$DialogFilter> r7 = r1.dialogFilters     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            int r7 = r7.size()     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            if (r9 >= r7) goto L_0x0188
            java.util.ArrayList<org.telegram.messenger.MessagesController$DialogFilter> r7 = r1.dialogFilters     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            java.lang.Object r7 = r7.get(r9)     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            org.telegram.messenger.MessagesController$DialogFilter r7 = (org.telegram.messenger.MessagesController.DialogFilter) r7     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            int r8 = r7.order     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            r11 = 1
            int r8 = r8 + r11
            r7.order = r8     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            int r9 = r9 + 1
            goto L_0x016f
        L_0x0188:
            java.util.ArrayList<org.telegram.messenger.MessagesController$DialogFilter> r7 = r1.dialogFilters     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            r7.add(r2)     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            android.util.SparseArray<org.telegram.messenger.MessagesController$DialogFilter> r7 = r1.dialogFiltersMap     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            int r8 = r2.id     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            r7.put(r8, r2)     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            int r7 = r2.id     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            r6.put(r7, r2)     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            org.telegram.SQLite.SQLiteDatabase r6 = r1.database     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            java.lang.String r7 = "REPLACE INTO dialog_filter VALUES(?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r6 = r6.executeFast(r7)     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            int r7 = r2.id     // Catch:{ Exception -> 0x01cb, all -> 0x01c5 }
            r8 = 1
            r6.bindInteger(r8, r7)     // Catch:{ Exception -> 0x01cb, all -> 0x01c5 }
            int r7 = r2.order     // Catch:{ Exception -> 0x01cb, all -> 0x01c5 }
            r8 = 2
            r6.bindInteger(r8, r7)     // Catch:{ Exception -> 0x01cb, all -> 0x01c5 }
            int r7 = r2.unreadCount     // Catch:{ Exception -> 0x01cb, all -> 0x01c5 }
            r6.bindInteger(r14, r7)     // Catch:{ Exception -> 0x01cb, all -> 0x01c5 }
            int r7 = r2.flags     // Catch:{ Exception -> 0x01cb, all -> 0x01c5 }
            r6.bindInteger(r13, r7)     // Catch:{ Exception -> 0x01cb, all -> 0x01c5 }
            r7 = 5
            java.lang.String r2 = r2.name     // Catch:{ Exception -> 0x01cb, all -> 0x01c5 }
            r6.bindString(r7, r2)     // Catch:{ Exception -> 0x01cb, all -> 0x01c5 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r6.stepThis()     // Catch:{ Exception -> 0x01cb, all -> 0x01c5 }
            r2.dispose()     // Catch:{ Exception -> 0x01cb, all -> 0x01c5 }
            goto L_0x01d1
        L_0x01c5:
            r0 = move-exception
            r16 = r6
            r2 = 0
            goto L_0x025a
        L_0x01cb:
            r0 = move-exception
            r16 = r6
            r2 = 0
            goto L_0x024b
        L_0x01d1:
            java.util.ArrayList<org.telegram.messenger.MessagesController$DialogFilter> r2 = r1.dialogFilters     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda198 r6 = org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda198.INSTANCE     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            java.util.Collections.sort(r2, r6)     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            if (r10 == 0) goto L_0x01de
            r2 = 1
            r1.calcUnreadCounters(r2)     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
        L_0x01de:
            boolean r2 = r5.isEmpty()     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            java.lang.String r6 = ","
            if (r2 != 0) goto L_0x01ef
            java.lang.String r2 = android.text.TextUtils.join(r6, r5)     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            org.telegram.tgnet.TLRPC$messages_Dialogs r2 = r1.loadDialogsByIds(r2, r0, r3, r4)     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            goto L_0x01f4
        L_0x01ef:
            org.telegram.tgnet.TLRPC$TL_messages_dialogs r2 = new org.telegram.tgnet.TLRPC$TL_messages_dialogs     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            r2.<init>()     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
        L_0x01f4:
            r9 = r2
            java.util.ArrayList r11 = new java.util.ArrayList     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            r11.<init>()     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            java.util.ArrayList r12 = new java.util.ArrayList     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            r12.<init>()     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            java.util.ArrayList r13 = new java.util.ArrayList     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            r13.<init>()     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            boolean r2 = r4.isEmpty()     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            if (r2 != 0) goto L_0x0211
            java.lang.String r2 = android.text.TextUtils.join(r6, r4)     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            r1.getEncryptedChatsInternal(r2, r13, r0)     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
        L_0x0211:
            boolean r2 = r0.isEmpty()     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            if (r2 != 0) goto L_0x021e
            java.lang.String r0 = android.text.TextUtils.join(r6, r0)     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            r1.getUsersInternal(r0, r11)     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
        L_0x021e:
            boolean r0 = r3.isEmpty()     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            if (r0 != 0) goto L_0x022b
            java.lang.String r0 = android.text.TextUtils.join(r6, r3)     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            r1.getChatsInternal(r0, r12)     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
        L_0x022b:
            org.telegram.messenger.MessagesController r7 = r18.getMessagesController()     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            java.util.ArrayList r8 = new java.util.ArrayList     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            java.util.ArrayList<org.telegram.messenger.MessagesController$DialogFilter> r0 = r1.dialogFilters     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            r8.<init>(r0)     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            r10 = 0
            r14 = 0
            r7.processLoadedDialogFilters(r8, r9, r10, r11, r12, r13, r14)     // Catch:{ Exception -> 0x0247, all -> 0x0242 }
            goto L_0x0258
        L_0x023c:
            r0 = move-exception
            r2 = r7
            goto L_0x0244
        L_0x023f:
            r0 = move-exception
            r2 = r7
            goto L_0x0249
        L_0x0242:
            r0 = move-exception
            r2 = 0
        L_0x0244:
            r16 = 0
            goto L_0x025a
        L_0x0247:
            r0 = move-exception
            r2 = 0
        L_0x0249:
            r16 = 0
        L_0x024b:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0259 }
            if (r2 == 0) goto L_0x0253
            r2.dispose()
        L_0x0253:
            if (r16 == 0) goto L_0x0258
            r16.dispose()
        L_0x0258:
            return
        L_0x0259:
            r0 = move-exception
        L_0x025a:
            if (r2 == 0) goto L_0x025f
            r2.dispose()
        L_0x025f:
            if (r16 == 0) goto L_0x0264
            r16.dispose()
        L_0x0264:
            goto L_0x0266
        L_0x0265:
            throw r0
        L_0x0266:
            goto L_0x0265
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$loadDialogFilters$41():void");
    }

    /* access modifiers changed from: private */
    public static /* synthetic */ int lambda$loadDialogFilters$40(MessagesController.DialogFilter dialogFilter, MessagesController.DialogFilter dialogFilter2) {
        int i = dialogFilter.order;
        int i2 = dialogFilter2.order;
        if (i > i2) {
            return 1;
        }
        return i < i2 ? -1 : 0;
    }

    /* JADX WARNING: Code restructure failed: missing block: B:234:0x04e1, code lost:
        if (r13.indexOfKey(r3.id) >= 0) goto L_0x04e3;
     */
    /* JADX WARNING: Removed duplicated region for block: B:105:0x02be A[Catch:{ Exception -> 0x0673, all -> 0x066f }] */
    /* JADX WARNING: Removed duplicated region for block: B:106:0x02c8 A[Catch:{ Exception -> 0x0673, all -> 0x066f }] */
    /* JADX WARNING: Removed duplicated region for block: B:109:0x02cc A[Catch:{ Exception -> 0x0673, all -> 0x066f }] */
    /* JADX WARNING: Removed duplicated region for block: B:114:0x02de A[Catch:{ Exception -> 0x0673, all -> 0x066f }] */
    /* JADX WARNING: Removed duplicated region for block: B:115:0x02e9 A[Catch:{ Exception -> 0x0673, all -> 0x066f }] */
    /* JADX WARNING: Removed duplicated region for block: B:122:0x0329 A[Catch:{ Exception -> 0x0673, all -> 0x066f }] */
    /* JADX WARNING: Removed duplicated region for block: B:201:0x0471 A[Catch:{ Exception -> 0x0673, all -> 0x066f }] */
    /* JADX WARNING: Removed duplicated region for block: B:338:0x0645 A[Catch:{ Exception -> 0x0673, all -> 0x066f }] */
    /* JADX WARNING: Removed duplicated region for block: B:360:0x067b  */
    /* JADX WARNING: Removed duplicated region for block: B:364:0x0683  */
    /* JADX WARNING: Removed duplicated region for block: B:418:? A[RETURN, SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:90:0x026e A[Catch:{ Exception -> 0x0673, all -> 0x066f }] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void calcUnreadCounters(boolean r24) {
        /*
            r23 = this;
            r1 = r23
            r2 = 0
            r3 = 0
        L_0x0004:
            r5 = 2
            if (r3 >= r5) goto L_0x002e
            r6 = 0
        L_0x0008:
            if (r6 >= r5) goto L_0x002b
            int[][] r7 = r1.contacts     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r7 = r7[r3]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int[][] r8 = r1.nonContacts     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r8 = r8[r3]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int[][] r9 = r1.bots     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r9 = r9[r3]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int[][] r10 = r1.channels     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r10 = r10[r3]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int[][] r11 = r1.groups     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r11 = r11[r3]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r11[r6] = r2     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r10[r6] = r2     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r9[r6] = r2     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r8[r6] = r2     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r7[r6] = r2     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r6 = r6 + 1
            goto L_0x0008
        L_0x002b:
            int r3 = r3 + 1
            goto L_0x0004
        L_0x002e:
            androidx.collection.LongSparseArray<java.lang.Integer> r3 = r1.dialogsWithMentions     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r3.clear()     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            androidx.collection.LongSparseArray<java.lang.Integer> r3 = r1.dialogsWithUnread     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r3.clear()     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            java.util.ArrayList r3 = new java.util.ArrayList     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r3.<init>()     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            java.util.ArrayList r6 = new java.util.ArrayList     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r6.<init>()     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            java.util.ArrayList r7 = new java.util.ArrayList     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r7.<init>()     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            java.util.ArrayList r8 = new java.util.ArrayList     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r8.<init>()     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            java.util.ArrayList r9 = new java.util.ArrayList     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r9.<init>()     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            java.util.ArrayList r10 = new java.util.ArrayList     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r10.<init>()     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            org.telegram.messenger.support.LongSparseIntArray r11 = new org.telegram.messenger.support.LongSparseIntArray     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r11.<init>()     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            org.telegram.SQLite.SQLiteDatabase r12 = r1.database     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            java.lang.String r13 = "SELECT did, folder_id, unread_count, unread_count_i FROM dialogs WHERE unread_count > 0 OR flags > 0 UNION ALL SELECT did, folder_id, unread_count, unread_count_i FROM dialogs WHERE unread_count_i > 0"
            java.lang.Object[] r14 = new java.lang.Object[r2]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            org.telegram.SQLite.SQLiteCursor r12 = r12.queryFinalized(r13, r14)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
        L_0x0065:
            boolean r13 = r12.next()     // Catch:{ Exception -> 0x066b, all -> 0x0667 }
            r14 = 1
            if (r13 == 0) goto L_0x00df
            int r13 = r12.intValue(r14)     // Catch:{ Exception -> 0x066b, all -> 0x0667 }
            long r14 = r12.longValue(r2)     // Catch:{ Exception -> 0x066b, all -> 0x0667 }
            int r16 = r12.intValue(r5)     // Catch:{ Exception -> 0x066b, all -> 0x0667 }
            r4 = 3
            int r4 = r12.intValue(r4)     // Catch:{ Exception -> 0x066b, all -> 0x0667 }
            if (r16 <= 0) goto L_0x0088
            androidx.collection.LongSparseArray<java.lang.Integer> r5 = r1.dialogsWithUnread     // Catch:{ Exception -> 0x066b, all -> 0x0667 }
            java.lang.Integer r2 = java.lang.Integer.valueOf(r16)     // Catch:{ Exception -> 0x066b, all -> 0x0667 }
            r5.put(r14, r2)     // Catch:{ Exception -> 0x066b, all -> 0x0667 }
        L_0x0088:
            if (r4 <= 0) goto L_0x0093
            androidx.collection.LongSparseArray<java.lang.Integer> r2 = r1.dialogsWithMentions     // Catch:{ Exception -> 0x066b, all -> 0x0667 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r4)     // Catch:{ Exception -> 0x066b, all -> 0x0667 }
            r2.put(r14, r4)     // Catch:{ Exception -> 0x066b, all -> 0x0667 }
        L_0x0093:
            r11.put(r14, r13)     // Catch:{ Exception -> 0x066b, all -> 0x0667 }
            boolean r2 = org.telegram.messenger.DialogObject.isEncryptedDialog(r14)     // Catch:{ Exception -> 0x066b, all -> 0x0667 }
            if (r2 == 0) goto L_0x00b2
            int r2 = org.telegram.messenger.DialogObject.getEncryptedChatId(r14)     // Catch:{ Exception -> 0x066b, all -> 0x0667 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x066b, all -> 0x0667 }
            boolean r4 = r10.contains(r4)     // Catch:{ Exception -> 0x066b, all -> 0x0667 }
            if (r4 != 0) goto L_0x00dc
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x066b, all -> 0x0667 }
            r10.add(r2)     // Catch:{ Exception -> 0x066b, all -> 0x0667 }
            goto L_0x00dc
        L_0x00b2:
            boolean r2 = org.telegram.messenger.DialogObject.isUserDialog(r14)     // Catch:{ Exception -> 0x066b, all -> 0x0667 }
            if (r2 == 0) goto L_0x00ca
            java.lang.Long r2 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x066b, all -> 0x0667 }
            boolean r2 = r8.contains(r2)     // Catch:{ Exception -> 0x066b, all -> 0x0667 }
            if (r2 != 0) goto L_0x00dc
            java.lang.Long r2 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x066b, all -> 0x0667 }
            r8.add(r2)     // Catch:{ Exception -> 0x066b, all -> 0x0667 }
            goto L_0x00dc
        L_0x00ca:
            long r4 = -r14
            java.lang.Long r2 = java.lang.Long.valueOf(r4)     // Catch:{ Exception -> 0x066b, all -> 0x0667 }
            boolean r2 = r9.contains(r2)     // Catch:{ Exception -> 0x066b, all -> 0x0667 }
            if (r2 != 0) goto L_0x00dc
            java.lang.Long r2 = java.lang.Long.valueOf(r4)     // Catch:{ Exception -> 0x066b, all -> 0x0667 }
            r9.add(r2)     // Catch:{ Exception -> 0x066b, all -> 0x0667 }
        L_0x00dc:
            r2 = 0
            r5 = 2
            goto L_0x0065
        L_0x00df:
            r12.dispose()     // Catch:{ Exception -> 0x066b, all -> 0x0667 }
            androidx.collection.LongSparseArray r2 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r2.<init>()     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            androidx.collection.LongSparseArray r4 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r4.<init>()     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            androidx.collection.LongSparseArray r5 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r5.<init>()     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            org.telegram.messenger.support.LongSparseIntArray r12 = new org.telegram.messenger.support.LongSparseIntArray     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r12.<init>()     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            androidx.collection.LongSparseArray r13 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r13.<init>()     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            androidx.collection.LongSparseArray r15 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r15.<init>()     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            boolean r16 = r8.isEmpty()     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            java.lang.String r14 = ","
            if (r16 != 0) goto L_0x0196
            java.lang.String r8 = android.text.TextUtils.join(r14, r8)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r1.getUsersInternal(r8, r3)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r8 = r3.size()     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r16 = r4
            r4 = 0
        L_0x0116:
            if (r4 >= r8) goto L_0x0198
            java.lang.Object r17 = r3.get(r4)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r18 = r3
            r3 = r17
            org.telegram.tgnet.TLRPC$User r3 = (org.telegram.tgnet.TLRPC$User) r3     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r17 = r8
            org.telegram.messenger.MessagesController r8 = r23.getMessagesController()     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r20 = r5
            r19 = r6
            long r5 = r3.id     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            boolean r5 = r8.isDialogMuted(r5)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r8 = r7
            long r6 = r3.id     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r6 = r11.get(r6)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r5 == 0) goto L_0x0147
            r21 = r8
            long r7 = r3.id     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r22 = r9
            java.lang.Boolean r9 = java.lang.Boolean.TRUE     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r13.put(r7, r9)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            goto L_0x014b
        L_0x0147:
            r21 = r8
            r22 = r9
        L_0x014b:
            r7 = 1
            if (r6 != r7) goto L_0x0155
            long r7 = r3.id     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            java.lang.Boolean r9 = java.lang.Boolean.TRUE     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r15.put(r7, r9)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
        L_0x0155:
            boolean r7 = r3.bot     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r7 == 0) goto L_0x0164
            int[][] r7 = r1.bots     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r6 = r7[r6]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r7 = r6[r5]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r8 = 1
            int r7 = r7 + r8
            r6[r5] = r7     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            goto L_0x0182
        L_0x0164:
            boolean r7 = r3.self     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r7 != 0) goto L_0x0178
            boolean r7 = r3.contact     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r7 == 0) goto L_0x016d
            goto L_0x0178
        L_0x016d:
            int[][] r7 = r1.nonContacts     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r6 = r7[r6]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r7 = r6[r5]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r8 = 1
            int r7 = r7 + r8
            r6[r5] = r7     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            goto L_0x0182
        L_0x0178:
            int[][] r7 = r1.contacts     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r6 = r7[r6]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r7 = r6[r5]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r8 = 1
            int r7 = r7 + r8
            r6[r5] = r7     // Catch:{ Exception -> 0x0673, all -> 0x066f }
        L_0x0182:
            long r5 = r3.id     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r2.put(r5, r3)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r4 = r4 + 1
            r8 = r17
            r3 = r18
            r6 = r19
            r5 = r20
            r7 = r21
            r9 = r22
            goto L_0x0116
        L_0x0196:
            r16 = r4
        L_0x0198:
            r20 = r5
            r19 = r6
            r21 = r7
            r22 = r9
            boolean r3 = r10.isEmpty()     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r3 != 0) goto L_0x0265
            java.util.ArrayList r3 = new java.util.ArrayList     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r3.<init>()     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            java.util.ArrayList r4 = new java.util.ArrayList     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r4.<init>()     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            java.lang.String r5 = android.text.TextUtils.join(r14, r10)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r1.getEncryptedChatsInternal(r5, r4, r3)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            boolean r5 = r3.isEmpty()     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r5 != 0) goto L_0x0265
            java.lang.String r3 = android.text.TextUtils.join(r14, r3)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r5 = r19
            r1.getUsersInternal(r3, r5)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r3 = r5.size()     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r6 = 0
        L_0x01cb:
            if (r6 >= r3) goto L_0x01df
            java.lang.Object r7 = r5.get(r6)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            org.telegram.tgnet.TLRPC$User r7 = (org.telegram.tgnet.TLRPC$User) r7     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            long r8 = r7.id     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r10 = r20
            r10.put(r8, r7)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r6 = r6 + 1
            r20 = r10
            goto L_0x01cb
        L_0x01df:
            r10 = r20
            int r3 = r4.size()     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r5 = 0
        L_0x01e6:
            if (r5 >= r3) goto L_0x0263
            java.lang.Object r6 = r4.get(r5)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            org.telegram.tgnet.TLRPC$EncryptedChat r6 = (org.telegram.tgnet.TLRPC$EncryptedChat) r6     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            long r7 = r6.user_id     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            java.lang.Object r7 = r10.get(r7)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            org.telegram.tgnet.TLRPC$User r7 = (org.telegram.tgnet.TLRPC$User) r7     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r7 != 0) goto L_0x01fe
            r9 = r2
            r17 = r3
            r18 = r4
            goto L_0x025b
        L_0x01fe:
            int r6 = r6.id     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            long r8 = (long) r6     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            long r8 = org.telegram.messenger.DialogObject.makeEncryptedDialogId(r8)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            org.telegram.messenger.MessagesController r6 = r23.getMessagesController()     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            boolean r6 = r6.isDialogMuted(r8)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r8 = r11.get(r8)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r6 == 0) goto L_0x0220
            r9 = r2
            r17 = r3
            long r2 = r7.id     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r18 = r4
            java.lang.Boolean r4 = java.lang.Boolean.TRUE     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r13.put(r2, r4)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            goto L_0x0225
        L_0x0220:
            r9 = r2
            r17 = r3
            r18 = r4
        L_0x0225:
            r2 = 1
            if (r8 != r2) goto L_0x022f
            long r2 = r7.id     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            java.lang.Boolean r4 = java.lang.Boolean.TRUE     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r15.put(r2, r4)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
        L_0x022f:
            boolean r2 = r7.self     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r2 != 0) goto L_0x0243
            boolean r2 = r7.contact     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r2 == 0) goto L_0x0238
            goto L_0x0243
        L_0x0238:
            int[][] r2 = r1.nonContacts     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r2 = r2[r8]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r3 = r2[r6]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r4 = 1
            int r3 = r3 + r4
            r2[r6] = r3     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            goto L_0x024d
        L_0x0243:
            int[][] r2 = r1.contacts     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r2 = r2[r8]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r3 = r2[r6]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r4 = 1
            int r3 = r3 + r4
            r2[r6] = r3     // Catch:{ Exception -> 0x0673, all -> 0x066f }
        L_0x024d:
            long r2 = r7.id     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r4 = 0
            int r2 = r12.get(r2, r4)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            long r3 = r7.id     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r6 = 1
            int r2 = r2 + r6
            r12.put(r3, r2)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
        L_0x025b:
            int r5 = r5 + 1
            r2 = r9
            r3 = r17
            r4 = r18
            goto L_0x01e6
        L_0x0263:
            r9 = r2
            goto L_0x0268
        L_0x0265:
            r9 = r2
            r10 = r20
        L_0x0268:
            boolean r2 = r22.isEmpty()     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r2 != 0) goto L_0x031b
            r2 = r22
            java.lang.String r2 = android.text.TextUtils.join(r14, r2)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r3 = r21
            r1.getChatsInternal(r2, r3)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r2 = r3.size()     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r4 = 0
        L_0x027e:
            if (r4 >= r2) goto L_0x031b
            java.lang.Object r5 = r3.get(r4)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            org.telegram.tgnet.TLRPC$Chat r5 = (org.telegram.tgnet.TLRPC$Chat) r5     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            org.telegram.tgnet.TLRPC$InputChannel r6 = r5.migrated_to     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            boolean r6 = r6 instanceof org.telegram.tgnet.TLRPC$TL_inputChannel     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r6 != 0) goto L_0x02fb
            boolean r6 = org.telegram.messenger.ChatObject.isNotInChat(r5)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r6 == 0) goto L_0x0294
            goto L_0x02fb
        L_0x0294:
            org.telegram.messenger.MessagesController r6 = r23.getMessagesController()     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            long r7 = r5.id     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            long r7 = -r7
            boolean r6 = r6.isDialogMuted(r7, r5)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            long r7 = r5.id     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            long r7 = -r7
            int r7 = r11.get(r7)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r6 == 0) goto L_0x02b8
            androidx.collection.LongSparseArray<java.lang.Integer> r8 = r1.dialogsWithMentions     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r14 = r2
            r21 = r3
            long r2 = r5.id     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            long r2 = -r2
            int r2 = r8.indexOfKey(r2)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r2 >= 0) goto L_0x02bb
            r2 = 1
            goto L_0x02bc
        L_0x02b8:
            r14 = r2
            r21 = r3
        L_0x02bb:
            r2 = 0
        L_0x02bc:
            if (r6 == 0) goto L_0x02c8
            r3 = r9
            long r8 = r5.id     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            long r8 = -r8
            java.lang.Boolean r6 = java.lang.Boolean.TRUE     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r13.put(r8, r6)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            goto L_0x02c9
        L_0x02c8:
            r3 = r9
        L_0x02c9:
            r6 = 1
            if (r7 != r6) goto L_0x02d4
            long r8 = r5.id     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            long r8 = -r8
            java.lang.Boolean r6 = java.lang.Boolean.TRUE     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r15.put(r8, r6)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
        L_0x02d4:
            boolean r6 = org.telegram.messenger.ChatObject.isChannel(r5)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r6 == 0) goto L_0x02e9
            boolean r6 = r5.megagroup     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r6 != 0) goto L_0x02e9
            int[][] r6 = r1.channels     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r6 = r6[r7]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r7 = r6[r2]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r8 = 1
            int r7 = r7 + r8
            r6[r2] = r7     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            goto L_0x02f3
        L_0x02e9:
            int[][] r6 = r1.groups     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r6 = r6[r7]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r7 = r6[r2]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r8 = 1
            int r7 = r7 + r8
            r6[r2] = r7     // Catch:{ Exception -> 0x0673, all -> 0x066f }
        L_0x02f3:
            long r6 = r5.id     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r2 = r16
            r2.put(r6, r5)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            goto L_0x0311
        L_0x02fb:
            r14 = r2
            r21 = r3
            r3 = r9
            r2 = r16
            androidx.collection.LongSparseArray<java.lang.Integer> r6 = r1.dialogsWithUnread     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            long r7 = r5.id     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            long r7 = -r7
            r6.remove(r7)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            androidx.collection.LongSparseArray<java.lang.Integer> r6 = r1.dialogsWithMentions     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            long r7 = r5.id     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            long r7 = -r7
            r6.remove(r7)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
        L_0x0311:
            int r4 = r4 + 1
            r16 = r2
            r9 = r3
            r2 = r14
            r3 = r21
            goto L_0x027e
        L_0x031b:
            r3 = r9
            r2 = r16
            java.util.ArrayList<org.telegram.messenger.MessagesController$DialogFilter> r4 = r1.dialogFilters     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r4 = r4.size()     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r5 = 0
        L_0x0325:
            int r6 = r4 + 2
            if (r5 >= r6) goto L_0x067e
            if (r5 >= r4) goto L_0x0342
            java.util.ArrayList<org.telegram.messenger.MessagesController$DialogFilter> r6 = r1.dialogFilters     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            java.lang.Object r6 = r6.get(r5)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            org.telegram.messenger.MessagesController$DialogFilter r6 = (org.telegram.messenger.MessagesController.DialogFilter) r6     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r7 = r6.pendingUnreadCount     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r7 < 0) goto L_0x033f
            r17 = r3
            r3 = r4
            r4 = r5
            r20 = r10
            goto L_0x065e
        L_0x033f:
            int r7 = r6.flags     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            goto L_0x0359
        L_0x0342:
            int r6 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ALL_CHATS     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r5 != r4) goto L_0x0355
            org.telegram.messenger.NotificationsController r7 = r23.getNotificationsController()     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            boolean r7 = r7.showBadgeMuted     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r7 != 0) goto L_0x0351
            int r7 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r6 = r6 | r7
        L_0x0351:
            int r7 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED     // Catch:{ Exception -> 0x0673, all -> 0x066f }
        L_0x0353:
            r7 = r7 | r6
            goto L_0x0358
        L_0x0355:
            int r7 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            goto L_0x0353
        L_0x0358:
            r6 = 0
        L_0x0359:
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CONTACTS     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r8 = r8 & r7
            if (r8 == 0) goto L_0x0394
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r8 = r8 & r7
            if (r8 != 0) goto L_0x0379
            int[][] r8 = r1.contacts     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r9 = 0
            r11 = r8[r9]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r11 = r11[r9]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r11 = r11 + r9
            int r14 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r14 = r14 & r7
            if (r14 != 0) goto L_0x0377
            r8 = r8[r9]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r9 = 1
            r8 = r8[r9]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r8 = r8 + r11
            goto L_0x037a
        L_0x0377:
            r8 = r11
            goto L_0x037a
        L_0x0379:
            r8 = 0
        L_0x037a:
            int r9 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r9 = r9 & r7
            if (r9 != 0) goto L_0x0395
            int[][] r9 = r1.contacts     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r11 = 1
            r14 = r9[r11]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r16 = 0
            r14 = r14[r16]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r8 = r8 + r14
            int r14 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r14 = r14 & r7
            if (r14 != 0) goto L_0x0395
            r9 = r9[r11]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r9 = r9[r11]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r8 = r8 + r9
            goto L_0x0395
        L_0x0394:
            r8 = 0
        L_0x0395:
            int r9 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_NON_CONTACTS     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r9 = r9 & r7
            if (r9 == 0) goto L_0x03cb
            int r9 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r9 = r9 & r7
            if (r9 != 0) goto L_0x03b2
            int[][] r9 = r1.nonContacts     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r11 = 0
            r14 = r9[r11]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r14 = r14[r11]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r8 = r8 + r14
            int r14 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r14 = r14 & r7
            if (r14 != 0) goto L_0x03b2
            r9 = r9[r11]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r11 = 1
            r9 = r9[r11]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r8 = r8 + r9
        L_0x03b2:
            int r9 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r9 = r9 & r7
            if (r9 != 0) goto L_0x03cb
            int[][] r9 = r1.nonContacts     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r11 = 1
            r14 = r9[r11]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r16 = 0
            r14 = r14[r16]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r8 = r8 + r14
            int r14 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r14 = r14 & r7
            if (r14 != 0) goto L_0x03cb
            r9 = r9[r11]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r9 = r9[r11]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r8 = r8 + r9
        L_0x03cb:
            int r9 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_GROUPS     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r9 = r9 & r7
            if (r9 == 0) goto L_0x0401
            int r9 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r9 = r9 & r7
            if (r9 != 0) goto L_0x03e8
            int[][] r9 = r1.groups     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r11 = 0
            r14 = r9[r11]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r14 = r14[r11]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r8 = r8 + r14
            int r14 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r14 = r14 & r7
            if (r14 != 0) goto L_0x03e8
            r9 = r9[r11]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r11 = 1
            r9 = r9[r11]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r8 = r8 + r9
        L_0x03e8:
            int r9 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r9 = r9 & r7
            if (r9 != 0) goto L_0x0401
            int[][] r9 = r1.groups     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r11 = 1
            r14 = r9[r11]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r16 = 0
            r14 = r14[r16]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r8 = r8 + r14
            int r14 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r14 = r14 & r7
            if (r14 != 0) goto L_0x0401
            r9 = r9[r11]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r9 = r9[r11]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r8 = r8 + r9
        L_0x0401:
            int r9 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CHANNELS     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r9 = r9 & r7
            if (r9 == 0) goto L_0x0437
            int r9 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r9 = r9 & r7
            if (r9 != 0) goto L_0x041e
            int[][] r9 = r1.channels     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r11 = 0
            r14 = r9[r11]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r14 = r14[r11]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r8 = r8 + r14
            int r14 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r14 = r14 & r7
            if (r14 != 0) goto L_0x041e
            r9 = r9[r11]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r11 = 1
            r9 = r9[r11]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r8 = r8 + r9
        L_0x041e:
            int r9 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r9 = r9 & r7
            if (r9 != 0) goto L_0x0437
            int[][] r9 = r1.channels     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r11 = 1
            r14 = r9[r11]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r16 = 0
            r14 = r14[r16]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r8 = r8 + r14
            int r14 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r14 = r14 & r7
            if (r14 != 0) goto L_0x0437
            r9 = r9[r11]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r9 = r9[r11]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r8 = r8 + r9
        L_0x0437:
            int r9 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_BOTS     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r9 = r9 & r7
            if (r9 == 0) goto L_0x046e
            int r9 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r9 = r9 & r7
            if (r9 != 0) goto L_0x0454
            int[][] r9 = r1.bots     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r11 = 0
            r14 = r9[r11]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r14 = r14[r11]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r8 = r8 + r14
            int r14 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r14 = r14 & r7
            if (r14 != 0) goto L_0x0454
            r9 = r9[r11]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r11 = 1
            r9 = r9[r11]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r8 = r8 + r9
        L_0x0454:
            int r9 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r9 = r9 & r7
            if (r9 != 0) goto L_0x046e
            int[][] r9 = r1.bots     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r11 = 1
            r14 = r9[r11]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r16 = 0
            r14 = r14[r16]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r8 = r8 + r14
            int r14 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r14 = r14 & r7
            if (r14 != 0) goto L_0x046f
            r9 = r9[r11]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r9 = r9[r11]     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r8 = r8 + r9
            goto L_0x046f
        L_0x046e:
            r11 = 1
        L_0x046f:
            if (r6 == 0) goto L_0x0645
            java.util.ArrayList<java.lang.Long> r9 = r6.alwaysShow     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r9 = r9.size()     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r14 = r8
            r8 = 0
        L_0x0479:
            if (r8 >= r9) goto L_0x0562
            java.util.ArrayList<java.lang.Long> r11 = r6.alwaysShow     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            java.lang.Object r11 = r11.get(r8)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            java.lang.Long r11 = (java.lang.Long) r11     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r16 = r9
            r20 = r10
            long r9 = r11.longValue()     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            boolean r11 = org.telegram.messenger.DialogObject.isUserDialog(r9)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r11 == 0) goto L_0x0506
            r17 = r3
            r3 = 2
            r11 = 0
        L_0x0495:
            if (r11 >= r3) goto L_0x0501
            if (r11 != 0) goto L_0x049c
            r3 = r17
            goto L_0x049e
        L_0x049c:
            r3 = r20
        L_0x049e:
            java.lang.Object r3 = r3.get(r9)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            org.telegram.tgnet.TLRPC$User r3 = (org.telegram.tgnet.TLRPC$User) r3     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r3 == 0) goto L_0x04f6
            if (r11 != 0) goto L_0x04ad
            r18 = r4
            r19 = 1
            goto L_0x04b7
        L_0x04ad:
            r18 = r4
            r4 = 0
            int r19 = r12.get(r9, r4)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r19 != 0) goto L_0x04b7
            goto L_0x04d1
        L_0x04b7:
            boolean r4 = r3.bot     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r4 == 0) goto L_0x04be
            int r4 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_BOTS     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            goto L_0x04cc
        L_0x04be:
            boolean r4 = r3.self     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r4 != 0) goto L_0x04ca
            boolean r4 = r3.contact     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r4 == 0) goto L_0x04c7
            goto L_0x04ca
        L_0x04c7:
            int r4 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_NON_CONTACTS     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            goto L_0x04cc
        L_0x04ca:
            int r4 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CONTACTS     // Catch:{ Exception -> 0x0673, all -> 0x066f }
        L_0x04cc:
            r4 = r4 & r7
            if (r4 != 0) goto L_0x04d4
            int r14 = r14 + r19
        L_0x04d1:
            r21 = r5
            goto L_0x04f9
        L_0x04d4:
            int r4 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r4 = r4 & r7
            if (r4 == 0) goto L_0x04e6
            r21 = r5
            long r4 = r3.id     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r4 = r13.indexOfKey(r4)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r4 < 0) goto L_0x04e8
        L_0x04e3:
            int r14 = r14 + r19
            goto L_0x04f9
        L_0x04e6:
            r21 = r5
        L_0x04e8:
            int r4 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r4 = r4 & r7
            if (r4 == 0) goto L_0x04f9
            long r3 = r3.id     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r3 = r15.indexOfKey(r3)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r3 < 0) goto L_0x04f9
            goto L_0x04e3
        L_0x04f6:
            r18 = r4
            goto L_0x04d1
        L_0x04f9:
            int r11 = r11 + 1
            r4 = r18
            r5 = r21
            r3 = 2
            goto L_0x0495
        L_0x0501:
            r18 = r4
            r21 = r5
            goto L_0x0553
        L_0x0506:
            r17 = r3
            r18 = r4
            r21 = r5
            long r3 = -r9
            java.lang.Object r3 = r2.get(r3)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            org.telegram.tgnet.TLRPC$Chat r3 = (org.telegram.tgnet.TLRPC$Chat) r3     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r3 == 0) goto L_0x0553
            boolean r4 = org.telegram.messenger.ChatObject.isChannel(r3)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r4 == 0) goto L_0x0522
            boolean r4 = r3.megagroup     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r4 != 0) goto L_0x0522
            int r4 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CHANNELS     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            goto L_0x0524
        L_0x0522:
            int r4 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_GROUPS     // Catch:{ Exception -> 0x0673, all -> 0x066f }
        L_0x0524:
            r4 = r4 & r7
            if (r4 != 0) goto L_0x052a
        L_0x0527:
            int r14 = r14 + 1
            goto L_0x0553
        L_0x052a:
            int r4 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r4 = r4 & r7
            if (r4 == 0) goto L_0x0544
            long r4 = r3.id     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            long r4 = -r4
            int r4 = r13.indexOfKey(r4)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r4 < 0) goto L_0x0544
            androidx.collection.LongSparseArray<java.lang.Integer> r4 = r1.dialogsWithMentions     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            long r9 = r3.id     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            long r9 = -r9
            int r4 = r4.indexOfKey(r9)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r4 >= 0) goto L_0x0544
            goto L_0x0527
        L_0x0544:
            int r4 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r4 = r4 & r7
            if (r4 == 0) goto L_0x0553
            long r3 = r3.id     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            long r3 = -r3
            int r3 = r15.indexOfKey(r3)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r3 < 0) goto L_0x0553
            goto L_0x0527
        L_0x0553:
            int r8 = r8 + 1
            r9 = r16
            r3 = r17
            r4 = r18
            r10 = r20
            r5 = r21
            r11 = 1
            goto L_0x0479
        L_0x0562:
            r17 = r3
            r18 = r4
            r21 = r5
            r20 = r10
            java.util.ArrayList<java.lang.Long> r3 = r6.neverShow     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r3 = r3.size()     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r4 = 0
        L_0x0571:
            if (r4 >= r3) goto L_0x063a
            java.util.ArrayList<java.lang.Long> r5 = r6.neverShow     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            java.lang.Object r5 = r5.get(r4)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            java.lang.Long r5 = (java.lang.Long) r5     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            long r8 = r5.longValue()     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            boolean r5 = org.telegram.messenger.DialogObject.isUserDialog(r8)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r5 == 0) goto L_0x05ee
            r5 = 0
        L_0x0586:
            r10 = 2
            if (r5 >= r10) goto L_0x05ea
            if (r5 != 0) goto L_0x058e
            r11 = r17
            goto L_0x0590
        L_0x058e:
            r11 = r20
        L_0x0590:
            java.lang.Object r11 = r11.get(r8)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            org.telegram.tgnet.TLRPC$User r11 = (org.telegram.tgnet.TLRPC$User) r11     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r11 == 0) goto L_0x05e1
            if (r5 != 0) goto L_0x059d
            r16 = 1
            goto L_0x05a5
        L_0x059d:
            r10 = 0
            int r16 = r12.get(r8, r10)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r16 != 0) goto L_0x05a5
            goto L_0x05e1
        L_0x05a5:
            boolean r10 = r11.bot     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r10 == 0) goto L_0x05ac
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_BOTS     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            goto L_0x05ba
        L_0x05ac:
            boolean r10 = r11.self     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r10 != 0) goto L_0x05b8
            boolean r10 = r11.contact     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r10 == 0) goto L_0x05b5
            goto L_0x05b8
        L_0x05b5:
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_NON_CONTACTS     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            goto L_0x05ba
        L_0x05b8:
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CONTACTS     // Catch:{ Exception -> 0x0673, all -> 0x066f }
        L_0x05ba:
            r10 = r10 & r7
            if (r10 == 0) goto L_0x05e1
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r10 = r10 & r7
            if (r10 == 0) goto L_0x05ce
            r10 = r3
            r19 = r4
            long r3 = r11.id     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r3 = r15.indexOfKey(r3)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r3 >= 0) goto L_0x05e4
            goto L_0x05d1
        L_0x05ce:
            r10 = r3
            r19 = r4
        L_0x05d1:
            int r3 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r3 = r3 & r7
            if (r3 == 0) goto L_0x05de
            long r3 = r11.id     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            int r3 = r13.indexOfKey(r3)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r3 >= 0) goto L_0x05e4
        L_0x05de:
            int r14 = r14 - r16
            goto L_0x05e4
        L_0x05e1:
            r10 = r3
            r19 = r4
        L_0x05e4:
            int r5 = r5 + 1
            r3 = r10
            r4 = r19
            goto L_0x0586
        L_0x05ea:
            r10 = r3
            r19 = r4
            goto L_0x0635
        L_0x05ee:
            r10 = r3
            r19 = r4
            long r3 = -r8
            java.lang.Object r3 = r2.get(r3)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            org.telegram.tgnet.TLRPC$Chat r3 = (org.telegram.tgnet.TLRPC$Chat) r3     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r3 == 0) goto L_0x0635
            boolean r4 = org.telegram.messenger.ChatObject.isChannel(r3)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r4 == 0) goto L_0x0607
            boolean r4 = r3.megagroup     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r4 != 0) goto L_0x0607
            int r4 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CHANNELS     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            goto L_0x0609
        L_0x0607:
            int r4 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_GROUPS     // Catch:{ Exception -> 0x0673, all -> 0x066f }
        L_0x0609:
            r4 = r4 & r7
            if (r4 == 0) goto L_0x0635
            int r4 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r4 = r4 & r7
            if (r4 == 0) goto L_0x061a
            long r4 = r3.id     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            long r4 = -r4
            int r4 = r15.indexOfKey(r4)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r4 >= 0) goto L_0x0635
        L_0x061a:
            int r4 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            r4 = r4 & r7
            if (r4 == 0) goto L_0x0633
            long r4 = r3.id     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            long r4 = -r4
            int r4 = r13.indexOfKey(r4)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r4 < 0) goto L_0x0633
            androidx.collection.LongSparseArray<java.lang.Integer> r4 = r1.dialogsWithMentions     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            long r8 = r3.id     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            long r8 = -r8
            int r3 = r4.indexOfKey(r8)     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r3 < 0) goto L_0x0635
        L_0x0633:
            int r14 = r14 + -1
        L_0x0635:
            int r4 = r19 + 1
            r3 = r10
            goto L_0x0571
        L_0x063a:
            r6.pendingUnreadCount = r14     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r24 == 0) goto L_0x0640
            r6.unreadCount = r14     // Catch:{ Exception -> 0x0673, all -> 0x066f }
        L_0x0640:
            r3 = r18
            r4 = r21
            goto L_0x065e
        L_0x0645:
            r17 = r3
            r3 = r4
            r4 = r5
            r20 = r10
            if (r4 != r3) goto L_0x0654
            r1.pendingMainUnreadCount = r8     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r24 == 0) goto L_0x065e
            r1.mainUnreadCount = r8     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            goto L_0x065e
        L_0x0654:
            int r5 = r3 + 1
            if (r4 != r5) goto L_0x065e
            r1.pendingArchiveUnreadCount = r8     // Catch:{ Exception -> 0x0673, all -> 0x066f }
            if (r24 == 0) goto L_0x065e
            r1.archiveUnreadCount = r8     // Catch:{ Exception -> 0x0673, all -> 0x066f }
        L_0x065e:
            int r5 = r4 + 1
            r4 = r3
            r3 = r17
            r10 = r20
            goto L_0x0325
        L_0x0667:
            r0 = move-exception
            r2 = r0
            r4 = r12
            goto L_0x0681
        L_0x066b:
            r0 = move-exception
            r2 = r0
            r4 = r12
            goto L_0x0676
        L_0x066f:
            r0 = move-exception
            r2 = r0
            r4 = 0
            goto L_0x0681
        L_0x0673:
            r0 = move-exception
            r2 = r0
            r4 = 0
        L_0x0676:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r2)     // Catch:{ all -> 0x067f }
            if (r4 == 0) goto L_0x067e
            r4.dispose()
        L_0x067e:
            return
        L_0x067f:
            r0 = move-exception
            r2 = r0
        L_0x0681:
            if (r4 == 0) goto L_0x0686
            r4.dispose()
        L_0x0686:
            goto L_0x0688
        L_0x0687:
            throw r2
        L_0x0688:
            goto L_0x0687
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.calcUnreadCounters(boolean):void");
    }

    /* JADX WARNING: Removed duplicated region for block: B:50:0x0152  */
    /* JADX WARNING: Removed duplicated region for block: B:53:0x015d  */
    /* JADX WARNING: Removed duplicated region for block: B:62:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void saveDialogFilterInternal(org.telegram.messenger.MessagesController.DialogFilter r11, boolean r12, boolean r13) {
        /*
            r10 = this;
            r0 = 0
            java.util.ArrayList<org.telegram.messenger.MessagesController$DialogFilter> r1 = r10.dialogFilters     // Catch:{ Exception -> 0x0147 }
            boolean r1 = r1.contains(r11)     // Catch:{ Exception -> 0x0147 }
            r2 = 0
            if (r1 != 0) goto L_0x001e
            if (r12 == 0) goto L_0x0012
            java.util.ArrayList<org.telegram.messenger.MessagesController$DialogFilter> r12 = r10.dialogFilters     // Catch:{ Exception -> 0x0147 }
            r12.add(r2, r11)     // Catch:{ Exception -> 0x0147 }
            goto L_0x0017
        L_0x0012:
            java.util.ArrayList<org.telegram.messenger.MessagesController$DialogFilter> r12 = r10.dialogFilters     // Catch:{ Exception -> 0x0147 }
            r12.add(r11)     // Catch:{ Exception -> 0x0147 }
        L_0x0017:
            android.util.SparseArray<org.telegram.messenger.MessagesController$DialogFilter> r12 = r10.dialogFiltersMap     // Catch:{ Exception -> 0x0147 }
            int r1 = r11.id     // Catch:{ Exception -> 0x0147 }
            r12.put(r1, r11)     // Catch:{ Exception -> 0x0147 }
        L_0x001e:
            org.telegram.SQLite.SQLiteDatabase r12 = r10.database     // Catch:{ Exception -> 0x0147 }
            java.lang.String r1 = "REPLACE INTO dialog_filter VALUES(?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r12 = r12.executeFast(r1)     // Catch:{ Exception -> 0x0147 }
            int r1 = r11.id     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            r3 = 1
            r12.bindInteger(r3, r1)     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            int r1 = r11.order     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            r4 = 2
            r12.bindInteger(r4, r1)     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            int r1 = r11.unreadCount     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            r5 = 3
            r12.bindInteger(r5, r1)     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            r1 = 4
            int r6 = r11.flags     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            r12.bindInteger(r1, r6)     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            r1 = 5
            int r6 = r11.id     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            if (r6 != 0) goto L_0x0046
            java.lang.String r6 = "ALL_CHATS"
            goto L_0x0048
        L_0x0046:
            java.lang.String r6 = r11.name     // Catch:{ Exception -> 0x0142, all -> 0x013f }
        L_0x0048:
            r12.bindString(r1, r6)     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            r12.step()     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            r12.dispose()     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            if (r13 == 0) goto L_0x0139
            org.telegram.SQLite.SQLiteDatabase r12 = r10.database     // Catch:{ Exception -> 0x0147 }
            java.lang.StringBuilder r13 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0147 }
            r13.<init>()     // Catch:{ Exception -> 0x0147 }
            java.lang.String r1 = "DELETE FROM dialog_filter_ep WHERE id = "
            r13.append(r1)     // Catch:{ Exception -> 0x0147 }
            int r1 = r11.id     // Catch:{ Exception -> 0x0147 }
            r13.append(r1)     // Catch:{ Exception -> 0x0147 }
            java.lang.String r13 = r13.toString()     // Catch:{ Exception -> 0x0147 }
            org.telegram.SQLite.SQLitePreparedStatement r12 = r12.executeFast(r13)     // Catch:{ Exception -> 0x0147 }
            org.telegram.SQLite.SQLitePreparedStatement r12 = r12.stepThis()     // Catch:{ Exception -> 0x0147 }
            r12.dispose()     // Catch:{ Exception -> 0x0147 }
            org.telegram.SQLite.SQLiteDatabase r12 = r10.database     // Catch:{ Exception -> 0x0147 }
            java.lang.StringBuilder r13 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0147 }
            r13.<init>()     // Catch:{ Exception -> 0x0147 }
            java.lang.String r1 = "DELETE FROM dialog_filter_pin_v2 WHERE id = "
            r13.append(r1)     // Catch:{ Exception -> 0x0147 }
            int r1 = r11.id     // Catch:{ Exception -> 0x0147 }
            r13.append(r1)     // Catch:{ Exception -> 0x0147 }
            java.lang.String r13 = r13.toString()     // Catch:{ Exception -> 0x0147 }
            org.telegram.SQLite.SQLitePreparedStatement r12 = r12.executeFast(r13)     // Catch:{ Exception -> 0x0147 }
            org.telegram.SQLite.SQLitePreparedStatement r12 = r12.stepThis()     // Catch:{ Exception -> 0x0147 }
            r12.dispose()     // Catch:{ Exception -> 0x0147 }
            org.telegram.SQLite.SQLiteDatabase r12 = r10.database     // Catch:{ Exception -> 0x0147 }
            r12.beginTransaction()     // Catch:{ Exception -> 0x0147 }
            org.telegram.SQLite.SQLiteDatabase r12 = r10.database     // Catch:{ Exception -> 0x0147 }
            java.lang.String r13 = "REPLACE INTO dialog_filter_pin_v2 VALUES(?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r12 = r12.executeFast(r13)     // Catch:{ Exception -> 0x0147 }
            java.util.ArrayList<java.lang.Long> r13 = r11.alwaysShow     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            int r13 = r13.size()     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            r1 = 0
        L_0x00a7:
            if (r1 >= r13) goto L_0x00d1
            java.util.ArrayList<java.lang.Long> r6 = r11.alwaysShow     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            java.lang.Object r6 = r6.get(r1)     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            java.lang.Long r6 = (java.lang.Long) r6     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            long r6 = r6.longValue()     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            r12.requery()     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            int r8 = r11.id     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            r12.bindInteger(r3, r8)     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            r12.bindLong(r4, r6)     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            org.telegram.messenger.support.LongSparseIntArray r8 = r11.pinnedDialogs     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            r9 = -2147483648(0xfffffffvar_, float:-0.0)
            int r6 = r8.get(r6, r9)     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            r12.bindInteger(r5, r6)     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            r12.step()     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            int r1 = r1 + 1
            goto L_0x00a7
        L_0x00d1:
            org.telegram.messenger.support.LongSparseIntArray r13 = r11.pinnedDialogs     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            int r13 = r13.size()     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            r1 = 0
        L_0x00d8:
            if (r1 >= r13) goto L_0x0101
            org.telegram.messenger.support.LongSparseIntArray r6 = r11.pinnedDialogs     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            long r6 = r6.keyAt(r1)     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            boolean r8 = org.telegram.messenger.DialogObject.isEncryptedDialog(r6)     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            if (r8 != 0) goto L_0x00e7
            goto L_0x00fe
        L_0x00e7:
            r12.requery()     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            int r8 = r11.id     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            r12.bindInteger(r3, r8)     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            r12.bindLong(r4, r6)     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            org.telegram.messenger.support.LongSparseIntArray r6 = r11.pinnedDialogs     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            int r6 = r6.valueAt(r1)     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            r12.bindInteger(r5, r6)     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            r12.step()     // Catch:{ Exception -> 0x0142, all -> 0x013f }
        L_0x00fe:
            int r1 = r1 + 1
            goto L_0x00d8
        L_0x0101:
            r12.dispose()     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            org.telegram.SQLite.SQLiteDatabase r12 = r10.database     // Catch:{ Exception -> 0x0147 }
            java.lang.String r13 = "REPLACE INTO dialog_filter_ep VALUES(?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r12 = r12.executeFast(r13)     // Catch:{ Exception -> 0x0147 }
            java.util.ArrayList<java.lang.Long> r13 = r11.neverShow     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            int r13 = r13.size()     // Catch:{ Exception -> 0x0142, all -> 0x013f }
        L_0x0112:
            if (r2 >= r13) goto L_0x0131
            r12.requery()     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            int r1 = r11.id     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            r12.bindInteger(r3, r1)     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            java.util.ArrayList<java.lang.Long> r1 = r11.neverShow     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            java.lang.Object r1 = r1.get(r2)     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            java.lang.Long r1 = (java.lang.Long) r1     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            long r5 = r1.longValue()     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            r12.bindLong(r4, r5)     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            r12.step()     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            int r2 = r2 + 1
            goto L_0x0112
        L_0x0131:
            r12.dispose()     // Catch:{ Exception -> 0x0142, all -> 0x013f }
            org.telegram.SQLite.SQLiteDatabase r11 = r10.database     // Catch:{ Exception -> 0x0147 }
            r11.commitTransaction()     // Catch:{ Exception -> 0x0147 }
        L_0x0139:
            org.telegram.SQLite.SQLiteDatabase r11 = r10.database
            r11.commitTransaction()
            goto L_0x0155
        L_0x013f:
            r11 = move-exception
            r0 = r12
            goto L_0x0156
        L_0x0142:
            r11 = move-exception
            r0 = r12
            goto L_0x0148
        L_0x0145:
            r11 = move-exception
            goto L_0x0156
        L_0x0147:
            r11 = move-exception
        L_0x0148:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r11)     // Catch:{ all -> 0x0145 }
            org.telegram.SQLite.SQLiteDatabase r11 = r10.database
            r11.commitTransaction()
            if (r0 == 0) goto L_0x0155
            r0.dispose()
        L_0x0155:
            return
        L_0x0156:
            org.telegram.SQLite.SQLiteDatabase r12 = r10.database
            r12.commitTransaction()
            if (r0 == 0) goto L_0x0160
            r0.dispose()
        L_0x0160:
            goto L_0x0162
        L_0x0161:
            throw r11
        L_0x0162:
            goto L_0x0161
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.saveDialogFilterInternal(org.telegram.messenger.MessagesController$DialogFilter, boolean, boolean):void");
    }

    public void checkLoadedRemoteFilters(TLRPC$Vector tLRPC$Vector) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda177(this, tLRPC$Vector));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:174:0x0382 A[Catch:{ Exception -> 0x05fc }] */
    /* JADX WARNING: Removed duplicated region for block: B:175:0x0391 A[Catch:{ Exception -> 0x05fc }] */
    /* JADX WARNING: Removed duplicated region for block: B:178:0x039b A[Catch:{ Exception -> 0x05fc }] */
    /* JADX WARNING: Removed duplicated region for block: B:179:0x03a7 A[Catch:{ Exception -> 0x05fc }] */
    /* JADX WARNING: Removed duplicated region for block: B:181:0x03ad A[Catch:{ Exception -> 0x05fc }] */
    /* JADX WARNING: Removed duplicated region for block: B:182:0x03b3 A[Catch:{ Exception -> 0x05fc }] */
    /* JADX WARNING: Removed duplicated region for block: B:184:0x03b7 A[Catch:{ Exception -> 0x05fc }] */
    /* JADX WARNING: Removed duplicated region for block: B:185:0x03c3 A[Catch:{ Exception -> 0x05fc }] */
    /* JADX WARNING: Removed duplicated region for block: B:90:0x0192 A[Catch:{ Exception -> 0x05fc }] */
    /* JADX WARNING: Removed duplicated region for block: B:98:0x01b6 A[Catch:{ Exception -> 0x05fc }] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$checkLoadedRemoteFilters$43(org.telegram.tgnet.TLRPC$Vector r39) {
        /*
            r38 = this;
            r12 = r38
            r0 = r39
            android.util.SparseArray r7 = new android.util.SparseArray     // Catch:{ Exception -> 0x0600 }
            r7.<init>()     // Catch:{ Exception -> 0x0600 }
            java.util.ArrayList<org.telegram.messenger.MessagesController$DialogFilter> r1 = r12.dialogFilters     // Catch:{ Exception -> 0x0600 }
            int r1 = r1.size()     // Catch:{ Exception -> 0x0600 }
            r3 = 0
        L_0x0010:
            if (r3 >= r1) goto L_0x0022
            java.util.ArrayList<org.telegram.messenger.MessagesController$DialogFilter> r4 = r12.dialogFilters     // Catch:{ Exception -> 0x0600 }
            java.lang.Object r4 = r4.get(r3)     // Catch:{ Exception -> 0x0600 }
            org.telegram.messenger.MessagesController$DialogFilter r4 = (org.telegram.messenger.MessagesController.DialogFilter) r4     // Catch:{ Exception -> 0x0600 }
            int r5 = r4.id     // Catch:{ Exception -> 0x0600 }
            r7.put(r5, r4)     // Catch:{ Exception -> 0x0600 }
            int r3 = r3 + 1
            goto L_0x0010
        L_0x0022:
            java.util.ArrayList r8 = new java.util.ArrayList     // Catch:{ Exception -> 0x0600 }
            r8.<init>()     // Catch:{ Exception -> 0x0600 }
            java.util.ArrayList r1 = new java.util.ArrayList     // Catch:{ Exception -> 0x0600 }
            r1.<init>()     // Catch:{ Exception -> 0x0600 }
            java.util.HashMap r15 = new java.util.HashMap     // Catch:{ Exception -> 0x0600 }
            r15.<init>()     // Catch:{ Exception -> 0x0600 }
            java.util.ArrayList r3 = new java.util.ArrayList     // Catch:{ Exception -> 0x0600 }
            r3.<init>()     // Catch:{ Exception -> 0x0600 }
            java.util.HashMap r4 = new java.util.HashMap     // Catch:{ Exception -> 0x0600 }
            r4.<init>()     // Catch:{ Exception -> 0x0600 }
            java.util.ArrayList r5 = new java.util.ArrayList     // Catch:{ Exception -> 0x0600 }
            r5.<init>()     // Catch:{ Exception -> 0x0600 }
            java.util.HashMap r14 = new java.util.HashMap     // Catch:{ Exception -> 0x0600 }
            r14.<init>()     // Catch:{ Exception -> 0x0600 }
            java.util.ArrayList r6 = new java.util.ArrayList     // Catch:{ Exception -> 0x0600 }
            r6.<init>()     // Catch:{ Exception -> 0x0600 }
            java.util.HashMap r10 = new java.util.HashMap     // Catch:{ Exception -> 0x0600 }
            r10.<init>()     // Catch:{ Exception -> 0x0600 }
            java.util.HashMap r9 = new java.util.HashMap     // Catch:{ Exception -> 0x0600 }
            r9.<init>()     // Catch:{ Exception -> 0x0600 }
            java.util.HashSet r11 = new java.util.HashSet     // Catch:{ Exception -> 0x0600 }
            r11.<init>()     // Catch:{ Exception -> 0x0600 }
            java.util.ArrayList<java.lang.Object> r13 = r0.objects     // Catch:{ Exception -> 0x0600 }
            int r13 = r13.size()     // Catch:{ Exception -> 0x0600 }
            r2 = 0
        L_0x0060:
            if (r2 >= r13) goto L_0x0519
            r17 = r13
            java.util.ArrayList<java.lang.Object> r13 = r0.objects     // Catch:{ Exception -> 0x05fc }
            java.lang.Object r13 = r13.get(r2)     // Catch:{ Exception -> 0x05fc }
            org.telegram.tgnet.TLRPC$DialogFilter r13 = (org.telegram.tgnet.TLRPC$DialogFilter) r13     // Catch:{ Exception -> 0x05fc }
            int r0 = r13.id     // Catch:{ Exception -> 0x05fc }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x05fc }
            r8.add(r0)     // Catch:{ Exception -> 0x05fc }
            boolean r0 = r13.contacts     // Catch:{ Exception -> 0x05fc }
            if (r0 == 0) goto L_0x0082
            int r0 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CONTACTS     // Catch:{ Exception -> 0x0600 }
            r16 = 0
            r0 = r0 | 0
            r23 = r8
            goto L_0x0087
        L_0x0082:
            r16 = 0
            r23 = r8
            r0 = 0
        L_0x0087:
            boolean r8 = r13.non_contacts     // Catch:{ Exception -> 0x05fc }
            if (r8 == 0) goto L_0x008e
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_NON_CONTACTS     // Catch:{ Exception -> 0x0600 }
            r0 = r0 | r8
        L_0x008e:
            boolean r8 = r13.groups     // Catch:{ Exception -> 0x05fc }
            if (r8 == 0) goto L_0x0095
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_GROUPS     // Catch:{ Exception -> 0x0600 }
            r0 = r0 | r8
        L_0x0095:
            boolean r8 = r13.broadcasts     // Catch:{ Exception -> 0x05fc }
            if (r8 == 0) goto L_0x009c
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CHANNELS     // Catch:{ Exception -> 0x0600 }
            r0 = r0 | r8
        L_0x009c:
            boolean r8 = r13.bots     // Catch:{ Exception -> 0x05fc }
            if (r8 == 0) goto L_0x00a3
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_BOTS     // Catch:{ Exception -> 0x0600 }
            r0 = r0 | r8
        L_0x00a3:
            boolean r8 = r13.exclude_muted     // Catch:{ Exception -> 0x05fc }
            if (r8 == 0) goto L_0x00aa
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED     // Catch:{ Exception -> 0x0600 }
            r0 = r0 | r8
        L_0x00aa:
            boolean r8 = r13.exclude_read     // Catch:{ Exception -> 0x05fc }
            if (r8 == 0) goto L_0x00b1
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_READ     // Catch:{ Exception -> 0x0600 }
            r0 = r0 | r8
        L_0x00b1:
            boolean r8 = r13.exclude_archived     // Catch:{ Exception -> 0x05fc }
            if (r8 == 0) goto L_0x00b8
            int r8 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED     // Catch:{ Exception -> 0x0600 }
            r0 = r0 | r8
        L_0x00b8:
            android.util.SparseArray<org.telegram.messenger.MessagesController$DialogFilter> r8 = r12.dialogFiltersMap     // Catch:{ Exception -> 0x05fc }
            int r12 = r13.id     // Catch:{ Exception -> 0x05fc }
            java.lang.Object r8 = r8.get(r12)     // Catch:{ Exception -> 0x05fc }
            org.telegram.messenger.MessagesController$DialogFilter r8 = (org.telegram.messenger.MessagesController.DialogFilter) r8     // Catch:{ Exception -> 0x05fc }
            r18 = 0
            r20 = 1
            if (r8 == 0) goto L_0x03cd
            int r12 = r13.id     // Catch:{ Exception -> 0x05fc }
            r7.remove(r12)     // Catch:{ Exception -> 0x05fc }
            java.lang.String r12 = r8.name     // Catch:{ Exception -> 0x05fc }
            r22 = r7
            java.lang.String r7 = r13.title     // Catch:{ Exception -> 0x05fc }
            boolean r7 = android.text.TextUtils.equals(r12, r7)     // Catch:{ Exception -> 0x05fc }
            if (r7 != 0) goto L_0x00df
            java.lang.String r7 = r13.title     // Catch:{ Exception -> 0x05fc }
            r8.name = r7     // Catch:{ Exception -> 0x05fc }
            r7 = 1
            goto L_0x00e0
        L_0x00df:
            r7 = 0
        L_0x00e0:
            int r12 = r8.flags     // Catch:{ Exception -> 0x05fc }
            if (r12 == r0) goto L_0x00e9
            r8.flags = r0     // Catch:{ Exception -> 0x05fc }
            r0 = 1
            r7 = 1
            goto L_0x00ea
        L_0x00e9:
            r0 = 0
        L_0x00ea:
            java.util.HashSet r12 = new java.util.HashSet     // Catch:{ Exception -> 0x05fc }
            r24 = r0
            java.util.ArrayList<java.lang.Long> r0 = r8.alwaysShow     // Catch:{ Exception -> 0x05fc }
            r12.<init>(r0)     // Catch:{ Exception -> 0x05fc }
            java.util.ArrayList<java.lang.Long> r0 = r8.neverShow     // Catch:{ Exception -> 0x05fc }
            r12.addAll(r0)     // Catch:{ Exception -> 0x05fc }
            java.util.HashSet r0 = new java.util.HashSet     // Catch:{ Exception -> 0x05fc }
            r0.<init>()     // Catch:{ Exception -> 0x05fc }
            r25 = 0
            r26 = r7
            org.telegram.messenger.support.LongSparseIntArray r7 = r8.pinnedDialogs     // Catch:{ Exception -> 0x05fc }
            int r7 = r7.size()     // Catch:{ Exception -> 0x05fc }
            if (r7 == 0) goto L_0x0181
            java.util.ArrayList r7 = new java.util.ArrayList     // Catch:{ Exception -> 0x05fc }
            r7.<init>()     // Catch:{ Exception -> 0x05fc }
            r27 = r2
            org.telegram.messenger.support.LongSparseIntArray r2 = r8.pinnedDialogs     // Catch:{ Exception -> 0x05fc }
            int r2 = r2.size()     // Catch:{ Exception -> 0x05fc }
            r28 = r11
            r11 = 0
            r29 = 0
        L_0x011b:
            if (r11 >= r2) goto L_0x0139
            r30 = r2
            org.telegram.messenger.support.LongSparseIntArray r2 = r8.pinnedDialogs     // Catch:{ Exception -> 0x05fc }
            long r31 = r2.keyAt(r11)     // Catch:{ Exception -> 0x05fc }
            boolean r2 = org.telegram.messenger.DialogObject.isEncryptedDialog(r31)     // Catch:{ Exception -> 0x05fc }
            if (r2 == 0) goto L_0x012d
            r29 = 1
        L_0x012d:
            java.lang.Long r2 = java.lang.Long.valueOf(r31)     // Catch:{ Exception -> 0x05fc }
            r7.add(r2)     // Catch:{ Exception -> 0x05fc }
            int r11 = r11 + 1
            r2 = r30
            goto L_0x011b
        L_0x0139:
            if (r29 == 0) goto L_0x017e
            java.util.LinkedHashMap r2 = new java.util.LinkedHashMap     // Catch:{ Exception -> 0x05fc }
            r2.<init>()     // Catch:{ Exception -> 0x05fc }
            org.telegram.messenger.support.LongSparseIntArray r11 = r8.pinnedDialogs     // Catch:{ Exception -> 0x05fc }
            r29 = r6
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda197 r6 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda197     // Catch:{ Exception -> 0x05fc }
            r6.<init>(r11)     // Catch:{ Exception -> 0x05fc }
            java.util.Collections.sort(r7, r6)     // Catch:{ Exception -> 0x05fc }
            int r6 = r7.size()     // Catch:{ Exception -> 0x05fc }
            r11 = 0
        L_0x0151:
            if (r11 >= r6) goto L_0x0189
            java.lang.Object r25 = r7.get(r11)     // Catch:{ Exception -> 0x05fc }
            java.lang.Long r25 = (java.lang.Long) r25     // Catch:{ Exception -> 0x05fc }
            long r30 = r25.longValue()     // Catch:{ Exception -> 0x05fc }
            boolean r25 = org.telegram.messenger.DialogObject.isEncryptedDialog(r30)     // Catch:{ Exception -> 0x05fc }
            if (r25 != 0) goto L_0x0168
            r25 = r6
            r32 = r7
            goto L_0x0177
        L_0x0168:
            r25 = r6
            java.lang.Integer r6 = java.lang.Integer.valueOf(r11)     // Catch:{ Exception -> 0x05fc }
            r32 = r7
            java.lang.Long r7 = java.lang.Long.valueOf(r30)     // Catch:{ Exception -> 0x05fc }
            r2.put(r6, r7)     // Catch:{ Exception -> 0x05fc }
        L_0x0177:
            int r11 = r11 + 1
            r6 = r25
            r7 = r32
            goto L_0x0151
        L_0x017e:
            r29 = r6
            goto L_0x0187
        L_0x0181:
            r27 = r2
            r29 = r6
            r28 = r11
        L_0x0187:
            r2 = r25
        L_0x0189:
            org.telegram.messenger.support.LongSparseIntArray r6 = r8.pinnedDialogs     // Catch:{ Exception -> 0x05fc }
            int r6 = r6.size()     // Catch:{ Exception -> 0x05fc }
            r7 = 0
        L_0x0190:
            if (r7 >= r6) goto L_0x01b0
            org.telegram.messenger.support.LongSparseIntArray r11 = r8.pinnedDialogs     // Catch:{ Exception -> 0x05fc }
            long r30 = r11.keyAt(r7)     // Catch:{ Exception -> 0x05fc }
            boolean r11 = org.telegram.messenger.DialogObject.isEncryptedDialog(r30)     // Catch:{ Exception -> 0x05fc }
            if (r11 == 0) goto L_0x019f
            goto L_0x01ad
        L_0x019f:
            java.lang.Long r11 = java.lang.Long.valueOf(r30)     // Catch:{ Exception -> 0x05fc }
            r0.add(r11)     // Catch:{ Exception -> 0x05fc }
            java.lang.Long r11 = java.lang.Long.valueOf(r30)     // Catch:{ Exception -> 0x05fc }
            r12.remove(r11)     // Catch:{ Exception -> 0x05fc }
        L_0x01ad:
            int r7 = r7 + 1
            goto L_0x0190
        L_0x01b0:
            r7 = r26
            r6 = 0
        L_0x01b3:
            r11 = 2
            if (r6 >= r11) goto L_0x0373
            if (r6 != 0) goto L_0x01bb
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputPeer> r11 = r13.include_peers     // Catch:{ Exception -> 0x05fc }
            goto L_0x01bd
        L_0x01bb:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputPeer> r11 = r13.exclude_peers     // Catch:{ Exception -> 0x05fc }
        L_0x01bd:
            r25 = r7
            if (r6 != 0) goto L_0x01c4
            java.util.ArrayList<java.lang.Long> r7 = r8.alwaysShow     // Catch:{ Exception -> 0x05fc }
            goto L_0x01c6
        L_0x01c4:
            java.util.ArrayList<java.lang.Long> r7 = r8.neverShow     // Catch:{ Exception -> 0x05fc }
        L_0x01c6:
            if (r6 != 0) goto L_0x02b8
            r26 = r9
            org.telegram.messenger.support.LongSparseIntArray r9 = r8.pinnedDialogs     // Catch:{ Exception -> 0x05fc }
            r9.clear()     // Catch:{ Exception -> 0x05fc }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputPeer> r9 = r13.pinned_peers     // Catch:{ Exception -> 0x05fc }
            int r9 = r9.size()     // Catch:{ Exception -> 0x05fc }
            r30 = r10
            r10 = 0
        L_0x01d8:
            if (r10 >= r9) goto L_0x027f
            r31 = r9
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputPeer> r9 = r13.pinned_peers     // Catch:{ Exception -> 0x05fc }
            java.lang.Object r9 = r9.get(r10)     // Catch:{ Exception -> 0x05fc }
            org.telegram.tgnet.TLRPC$InputPeer r9 = (org.telegram.tgnet.TLRPC$InputPeer) r9     // Catch:{ Exception -> 0x05fc }
            r32 = r3
            r33 = r4
            long r3 = r9.user_id     // Catch:{ Exception -> 0x05fc }
            int r34 = (r3 > r18 ? 1 : (r3 == r18 ? 0 : -1))
            if (r34 == 0) goto L_0x01f3
            java.lang.Long r3 = java.lang.Long.valueOf(r3)     // Catch:{ Exception -> 0x05fc }
            goto L_0x0201
        L_0x01f3:
            long r3 = r9.chat_id     // Catch:{ Exception -> 0x05fc }
            int r34 = (r3 > r18 ? 1 : (r3 == r18 ? 0 : -1))
            if (r34 == 0) goto L_0x01fa
            goto L_0x01fc
        L_0x01fa:
            long r3 = r9.channel_id     // Catch:{ Exception -> 0x05fc }
        L_0x01fc:
            long r3 = -r3
            java.lang.Long r3 = java.lang.Long.valueOf(r3)     // Catch:{ Exception -> 0x05fc }
        L_0x0201:
            java.util.ArrayList<java.lang.Long> r4 = r8.alwaysShow     // Catch:{ Exception -> 0x05fc }
            boolean r4 = r4.contains(r3)     // Catch:{ Exception -> 0x05fc }
            if (r4 != 0) goto L_0x020e
            java.util.ArrayList<java.lang.Long> r4 = r8.alwaysShow     // Catch:{ Exception -> 0x05fc }
            r4.add(r3)     // Catch:{ Exception -> 0x05fc }
        L_0x020e:
            org.telegram.messenger.support.LongSparseIntArray r4 = r8.pinnedDialogs     // Catch:{ Exception -> 0x05fc }
            int r4 = r4.size()     // Catch:{ Exception -> 0x05fc }
            if (r2 == 0) goto L_0x0243
            r34 = r13
        L_0x0218:
            java.lang.Integer r13 = java.lang.Integer.valueOf(r4)     // Catch:{ Exception -> 0x05fc }
            java.lang.Object r13 = r2.remove(r13)     // Catch:{ Exception -> 0x05fc }
            java.lang.Long r13 = (java.lang.Long) r13     // Catch:{ Exception -> 0x05fc }
            if (r13 == 0) goto L_0x023c
            r35 = r6
            org.telegram.messenger.support.LongSparseIntArray r6 = r8.pinnedDialogs     // Catch:{ Exception -> 0x05fc }
            r36 = r1
            r37 = r2
            long r1 = r13.longValue()     // Catch:{ Exception -> 0x05fc }
            r6.put(r1, r4)     // Catch:{ Exception -> 0x05fc }
            int r4 = r4 + 1
            r6 = r35
            r1 = r36
            r2 = r37
            goto L_0x0218
        L_0x023c:
            r36 = r1
            r37 = r2
            r35 = r6
            goto L_0x024b
        L_0x0243:
            r36 = r1
            r37 = r2
            r35 = r6
            r34 = r13
        L_0x024b:
            org.telegram.messenger.support.LongSparseIntArray r1 = r8.pinnedDialogs     // Catch:{ Exception -> 0x05fc }
            r2 = r7
            long r6 = r3.longValue()     // Catch:{ Exception -> 0x05fc }
            r1.put(r6, r4)     // Catch:{ Exception -> 0x05fc }
            r12.remove(r3)     // Catch:{ Exception -> 0x05fc }
            boolean r1 = r0.remove(r3)     // Catch:{ Exception -> 0x05fc }
            if (r1 != 0) goto L_0x026c
            boolean r1 = r14.containsKey(r3)     // Catch:{ Exception -> 0x05fc }
            if (r1 != 0) goto L_0x026a
            r5.add(r3)     // Catch:{ Exception -> 0x05fc }
            r14.put(r3, r9)     // Catch:{ Exception -> 0x05fc }
        L_0x026a:
            r25 = 1
        L_0x026c:
            int r10 = r10 + 1
            r7 = r2
            r9 = r31
            r3 = r32
            r4 = r33
            r13 = r34
            r6 = r35
            r1 = r36
            r2 = r37
            goto L_0x01d8
        L_0x027f:
            r36 = r1
            r37 = r2
            r32 = r3
            r33 = r4
            r35 = r6
            r2 = r7
            r34 = r13
            if (r37 == 0) goto L_0x02c9
            java.util.Set r1 = r37.entrySet()     // Catch:{ Exception -> 0x05fc }
            java.util.Iterator r1 = r1.iterator()     // Catch:{ Exception -> 0x05fc }
        L_0x0296:
            boolean r3 = r1.hasNext()     // Catch:{ Exception -> 0x05fc }
            if (r3 == 0) goto L_0x02c9
            java.lang.Object r3 = r1.next()     // Catch:{ Exception -> 0x05fc }
            java.util.Map$Entry r3 = (java.util.Map.Entry) r3     // Catch:{ Exception -> 0x05fc }
            org.telegram.messenger.support.LongSparseIntArray r4 = r8.pinnedDialogs     // Catch:{ Exception -> 0x05fc }
            java.lang.Object r3 = r3.getValue()     // Catch:{ Exception -> 0x05fc }
            java.lang.Long r3 = (java.lang.Long) r3     // Catch:{ Exception -> 0x05fc }
            long r6 = r3.longValue()     // Catch:{ Exception -> 0x05fc }
            org.telegram.messenger.support.LongSparseIntArray r3 = r8.pinnedDialogs     // Catch:{ Exception -> 0x05fc }
            int r3 = r3.size()     // Catch:{ Exception -> 0x05fc }
            r4.put(r6, r3)     // Catch:{ Exception -> 0x05fc }
            goto L_0x0296
        L_0x02b8:
            r36 = r1
            r37 = r2
            r32 = r3
            r33 = r4
            r35 = r6
            r2 = r7
            r26 = r9
            r30 = r10
            r34 = r13
        L_0x02c9:
            r7 = r25
            int r1 = r11.size()     // Catch:{ Exception -> 0x05fc }
            r3 = 0
        L_0x02d0:
            if (r3 >= r1) goto L_0x035d
            java.lang.Object r4 = r11.get(r3)     // Catch:{ Exception -> 0x05fc }
            org.telegram.tgnet.TLRPC$InputPeer r4 = (org.telegram.tgnet.TLRPC$InputPeer) r4     // Catch:{ Exception -> 0x05fc }
            long r9 = r4.user_id     // Catch:{ Exception -> 0x05fc }
            int r6 = (r9 > r18 ? 1 : (r9 == r18 ? 0 : -1))
            if (r6 == 0) goto L_0x0310
            java.lang.Long r6 = java.lang.Long.valueOf(r9)     // Catch:{ Exception -> 0x05fc }
            boolean r9 = r12.remove(r6)     // Catch:{ Exception -> 0x05fc }
            if (r9 != 0) goto L_0x0307
            boolean r7 = r2.contains(r6)     // Catch:{ Exception -> 0x05fc }
            if (r7 != 0) goto L_0x02f1
            r2.add(r6)     // Catch:{ Exception -> 0x05fc }
        L_0x02f1:
            boolean r7 = r15.containsKey(r6)     // Catch:{ Exception -> 0x05fc }
            if (r7 != 0) goto L_0x0303
            r9 = r36
            r9.add(r6)     // Catch:{ Exception -> 0x05fc }
            r15.put(r6, r4)     // Catch:{ Exception -> 0x05fc }
            r7 = 1
            r24 = 1
            goto L_0x0309
        L_0x0303:
            r9 = r36
            r7 = 1
            goto L_0x0309
        L_0x0307:
            r9 = r36
        L_0x0309:
            r13 = r7
            r7 = r11
        L_0x030b:
            r11 = r32
            r10 = r33
            goto L_0x0351
        L_0x0310:
            r10 = r7
            r9 = r36
            long r6 = r4.chat_id     // Catch:{ Exception -> 0x05fc }
            int r13 = (r6 > r18 ? 1 : (r6 == r18 ? 0 : -1))
            if (r13 == 0) goto L_0x031a
            goto L_0x031c
        L_0x031a:
            long r6 = r4.channel_id     // Catch:{ Exception -> 0x05fc }
        L_0x031c:
            java.lang.Long r6 = java.lang.Long.valueOf(r6)     // Catch:{ Exception -> 0x05fc }
            r13 = r10
            r7 = r11
            long r10 = r6.longValue()     // Catch:{ Exception -> 0x05fc }
            long r10 = -r10
            java.lang.Long r10 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x05fc }
            boolean r11 = r12.remove(r10)     // Catch:{ Exception -> 0x05fc }
            if (r11 != 0) goto L_0x030b
            boolean r11 = r2.contains(r10)     // Catch:{ Exception -> 0x05fc }
            if (r11 != 0) goto L_0x033a
            r2.add(r10)     // Catch:{ Exception -> 0x05fc }
        L_0x033a:
            r10 = r33
            boolean r11 = r10.containsKey(r6)     // Catch:{ Exception -> 0x05fc }
            if (r11 != 0) goto L_0x034e
            r11 = r32
            r11.add(r6)     // Catch:{ Exception -> 0x05fc }
            r10.put(r6, r4)     // Catch:{ Exception -> 0x05fc }
            r13 = 1
            r24 = 1
            goto L_0x0351
        L_0x034e:
            r11 = r32
            r13 = 1
        L_0x0351:
            int r3 = r3 + 1
            r36 = r9
            r33 = r10
            r32 = r11
            r11 = r7
            r7 = r13
            goto L_0x02d0
        L_0x035d:
            r13 = r7
            r11 = r32
            r10 = r33
            r9 = r36
            int r6 = r35 + 1
            r1 = r9
            r4 = r10
            r3 = r11
            r9 = r26
            r10 = r30
            r13 = r34
            r2 = r37
            goto L_0x01b3
        L_0x0373:
            r11 = r3
            r25 = r7
            r26 = r9
            r30 = r10
            r9 = r1
            r10 = r4
            boolean r1 = r12.isEmpty()     // Catch:{ Exception -> 0x05fc }
            if (r1 != 0) goto L_0x0391
            int r1 = r8.id     // Catch:{ Exception -> 0x05fc }
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x05fc }
            r13 = r30
            r13.put(r1, r12)     // Catch:{ Exception -> 0x05fc }
            r7 = 1
            r24 = 1
            goto L_0x0395
        L_0x0391:
            r13 = r30
            r7 = r25
        L_0x0395:
            boolean r1 = r0.isEmpty()     // Catch:{ Exception -> 0x05fc }
            if (r1 != 0) goto L_0x03a7
            int r1 = r8.id     // Catch:{ Exception -> 0x05fc }
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x05fc }
            r12 = r26
            r12.put(r1, r0)     // Catch:{ Exception -> 0x05fc }
            goto L_0x03ab
        L_0x03a7:
            r12 = r26
            r20 = r7
        L_0x03ab:
            if (r20 == 0) goto L_0x03b3
            r6 = r29
            r6.add(r8)     // Catch:{ Exception -> 0x05fc }
            goto L_0x03b5
        L_0x03b3:
            r6 = r29
        L_0x03b5:
            if (r24 == 0) goto L_0x03c3
            int r0 = r8.id     // Catch:{ Exception -> 0x05fc }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x05fc }
            r8 = r28
            r8.add(r0)     // Catch:{ Exception -> 0x05fc }
            goto L_0x03c5
        L_0x03c3:
            r8 = r28
        L_0x03c5:
            r2 = r10
            r3 = r11
            r26 = r12
            r30 = r13
            goto L_0x0503
        L_0x03cd:
            r27 = r2
            r22 = r7
            r12 = r9
            r8 = r11
            r34 = r13
            r9 = r1
            r11 = r3
            r13 = r10
            r10 = r4
            org.telegram.messenger.MessagesController$DialogFilter r1 = new org.telegram.messenger.MessagesController$DialogFilter     // Catch:{ Exception -> 0x05fc }
            r1.<init>()     // Catch:{ Exception -> 0x05fc }
            r2 = r34
            int r3 = r2.id     // Catch:{ Exception -> 0x05fc }
            r1.id = r3     // Catch:{ Exception -> 0x05fc }
            r1.flags = r0     // Catch:{ Exception -> 0x05fc }
            java.lang.String r0 = r2.title     // Catch:{ Exception -> 0x05fc }
            r1.name = r0     // Catch:{ Exception -> 0x05fc }
            r0 = -1
            r1.pendingUnreadCount = r0     // Catch:{ Exception -> 0x05fc }
            r0 = 0
        L_0x03ee:
            r3 = 2
            if (r0 >= r3) goto L_0x04fa
            if (r0 != 0) goto L_0x045f
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputPeer> r4 = r2.pinned_peers     // Catch:{ Exception -> 0x05fc }
            int r4 = r4.size()     // Catch:{ Exception -> 0x05fc }
            r7 = 0
        L_0x03fa:
            if (r7 >= r4) goto L_0x045f
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputPeer> r3 = r2.pinned_peers     // Catch:{ Exception -> 0x05fc }
            java.lang.Object r3 = r3.get(r7)     // Catch:{ Exception -> 0x05fc }
            org.telegram.tgnet.TLRPC$InputPeer r3 = (org.telegram.tgnet.TLRPC$InputPeer) r3     // Catch:{ Exception -> 0x05fc }
            r26 = r12
            r30 = r13
            long r12 = r3.user_id     // Catch:{ Exception -> 0x05fc }
            int r24 = (r12 > r18 ? 1 : (r12 == r18 ? 0 : -1))
            if (r24 == 0) goto L_0x0413
            java.lang.Long r12 = java.lang.Long.valueOf(r12)     // Catch:{ Exception -> 0x05fc }
            goto L_0x0421
        L_0x0413:
            long r12 = r3.chat_id     // Catch:{ Exception -> 0x05fc }
            int r24 = (r12 > r18 ? 1 : (r12 == r18 ? 0 : -1))
            if (r24 == 0) goto L_0x041a
            goto L_0x041c
        L_0x041a:
            long r12 = r3.channel_id     // Catch:{ Exception -> 0x05fc }
        L_0x041c:
            long r12 = -r12
            java.lang.Long r12 = java.lang.Long.valueOf(r12)     // Catch:{ Exception -> 0x05fc }
        L_0x0421:
            java.util.ArrayList<java.lang.Long> r13 = r1.alwaysShow     // Catch:{ Exception -> 0x05fc }
            boolean r13 = r13.contains(r12)     // Catch:{ Exception -> 0x05fc }
            if (r13 != 0) goto L_0x042e
            java.util.ArrayList<java.lang.Long> r13 = r1.alwaysShow     // Catch:{ Exception -> 0x05fc }
            r13.add(r12)     // Catch:{ Exception -> 0x05fc }
        L_0x042e:
            org.telegram.messenger.support.LongSparseIntArray r13 = r1.pinnedDialogs     // Catch:{ Exception -> 0x05fc }
            r33 = r10
            r32 = r11
            long r10 = r12.longValue()     // Catch:{ Exception -> 0x05fc }
            r24 = r4
            org.telegram.messenger.support.LongSparseIntArray r4 = r1.pinnedDialogs     // Catch:{ Exception -> 0x05fc }
            int r4 = r4.size()     // Catch:{ Exception -> 0x05fc }
            int r4 = r4 + 1
            r13.put(r10, r4)     // Catch:{ Exception -> 0x05fc }
            boolean r4 = r14.containsKey(r12)     // Catch:{ Exception -> 0x05fc }
            if (r4 != 0) goto L_0x0451
            r5.add(r12)     // Catch:{ Exception -> 0x05fc }
            r14.put(r12, r3)     // Catch:{ Exception -> 0x05fc }
        L_0x0451:
            int r7 = r7 + 1
            r4 = r24
            r12 = r26
            r13 = r30
            r11 = r32
            r10 = r33
            r3 = 2
            goto L_0x03fa
        L_0x045f:
            r33 = r10
            r32 = r11
            r26 = r12
            r30 = r13
            if (r0 != 0) goto L_0x046c
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputPeer> r3 = r2.include_peers     // Catch:{ Exception -> 0x05fc }
            goto L_0x046e
        L_0x046c:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputPeer> r3 = r2.exclude_peers     // Catch:{ Exception -> 0x05fc }
        L_0x046e:
            if (r0 != 0) goto L_0x0473
            java.util.ArrayList<java.lang.Long> r4 = r1.alwaysShow     // Catch:{ Exception -> 0x05fc }
            goto L_0x0475
        L_0x0473:
            java.util.ArrayList<java.lang.Long> r4 = r1.neverShow     // Catch:{ Exception -> 0x05fc }
        L_0x0475:
            int r7 = r3.size()     // Catch:{ Exception -> 0x05fc }
            r10 = 0
        L_0x047a:
            if (r10 >= r7) goto L_0x04e8
            java.lang.Object r11 = r3.get(r10)     // Catch:{ Exception -> 0x05fc }
            org.telegram.tgnet.TLRPC$InputPeer r11 = (org.telegram.tgnet.TLRPC$InputPeer) r11     // Catch:{ Exception -> 0x05fc }
            long r12 = r11.user_id     // Catch:{ Exception -> 0x05fc }
            int r24 = (r12 > r18 ? 1 : (r12 == r18 ? 0 : -1))
            if (r24 == 0) goto L_0x04a9
            java.lang.Long r12 = java.lang.Long.valueOf(r12)     // Catch:{ Exception -> 0x05fc }
            boolean r13 = r4.contains(r12)     // Catch:{ Exception -> 0x05fc }
            if (r13 != 0) goto L_0x0495
            r4.add(r12)     // Catch:{ Exception -> 0x05fc }
        L_0x0495:
            boolean r13 = r15.containsKey(r12)     // Catch:{ Exception -> 0x05fc }
            if (r13 != 0) goto L_0x04a1
            r9.add(r12)     // Catch:{ Exception -> 0x05fc }
            r15.put(r12, r11)     // Catch:{ Exception -> 0x05fc }
        L_0x04a1:
            r34 = r2
            r13 = r3
            r3 = r32
            r2 = r33
            goto L_0x04de
        L_0x04a9:
            long r12 = r11.chat_id     // Catch:{ Exception -> 0x05fc }
            int r24 = (r12 > r18 ? 1 : (r12 == r18 ? 0 : -1))
            if (r24 == 0) goto L_0x04b0
            goto L_0x04b2
        L_0x04b0:
            long r12 = r11.channel_id     // Catch:{ Exception -> 0x05fc }
        L_0x04b2:
            java.lang.Long r12 = java.lang.Long.valueOf(r12)     // Catch:{ Exception -> 0x05fc }
            r34 = r2
            r13 = r3
            long r2 = r12.longValue()     // Catch:{ Exception -> 0x05fc }
            long r2 = -r2
            java.lang.Long r2 = java.lang.Long.valueOf(r2)     // Catch:{ Exception -> 0x05fc }
            boolean r3 = r4.contains(r2)     // Catch:{ Exception -> 0x05fc }
            if (r3 != 0) goto L_0x04cb
            r4.add(r2)     // Catch:{ Exception -> 0x05fc }
        L_0x04cb:
            r2 = r33
            boolean r3 = r2.containsKey(r12)     // Catch:{ Exception -> 0x05fc }
            if (r3 != 0) goto L_0x04dc
            r3 = r32
            r3.add(r12)     // Catch:{ Exception -> 0x05fc }
            r2.put(r12, r11)     // Catch:{ Exception -> 0x05fc }
            goto L_0x04de
        L_0x04dc:
            r3 = r32
        L_0x04de:
            int r10 = r10 + 1
            r33 = r2
            r32 = r3
            r3 = r13
            r2 = r34
            goto L_0x047a
        L_0x04e8:
            r34 = r2
            r3 = r32
            r2 = r33
            int r0 = r0 + 1
            r10 = r2
            r11 = r3
            r12 = r26
            r13 = r30
            r2 = r34
            goto L_0x03ee
        L_0x04fa:
            r2 = r10
            r3 = r11
            r26 = r12
            r30 = r13
            r6.add(r1)     // Catch:{ Exception -> 0x05fc }
        L_0x0503:
            int r0 = r27 + 1
            r12 = r38
            r4 = r2
            r11 = r8
            r1 = r9
            r13 = r17
            r7 = r22
            r8 = r23
            r9 = r26
            r10 = r30
            r2 = r0
            r0 = r39
            goto L_0x0060
        L_0x0519:
            r2 = r4
            r22 = r7
            r23 = r8
            r26 = r9
            r30 = r10
            r8 = r11
            r16 = 0
            r9 = r1
            boolean r0 = r5.isEmpty()     // Catch:{ Exception -> 0x05fc }
            java.lang.String r1 = ","
            if (r0 != 0) goto L_0x055a
            java.lang.String r0 = android.text.TextUtils.join(r1, r5)     // Catch:{ Exception -> 0x05fc }
            java.util.ArrayList r4 = new java.util.ArrayList     // Catch:{ Exception -> 0x05fc }
            r4.<init>()     // Catch:{ Exception -> 0x05fc }
            r12 = r38
            org.telegram.tgnet.TLRPC$messages_Dialogs r0 = r12.loadDialogsByIds(r0, r9, r3, r4)     // Catch:{ Exception -> 0x0600 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r4 = r0.dialogs     // Catch:{ Exception -> 0x0600 }
            int r4 = r4.size()     // Catch:{ Exception -> 0x0600 }
            r5 = 0
        L_0x0544:
            if (r5 >= r4) goto L_0x0561
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r7 = r0.dialogs     // Catch:{ Exception -> 0x0600 }
            java.lang.Object r7 = r7.get(r5)     // Catch:{ Exception -> 0x0600 }
            org.telegram.tgnet.TLRPC$Dialog r7 = (org.telegram.tgnet.TLRPC$Dialog) r7     // Catch:{ Exception -> 0x0600 }
            long r10 = r7.id     // Catch:{ Exception -> 0x0600 }
            java.lang.Long r7 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x0600 }
            r14.remove(r7)     // Catch:{ Exception -> 0x0600 }
            int r5 = r5 + 1
            goto L_0x0544
        L_0x055a:
            r12 = r38
            org.telegram.tgnet.TLRPC$TL_messages_dialogs r0 = new org.telegram.tgnet.TLRPC$TL_messages_dialogs     // Catch:{ Exception -> 0x0600 }
            r0.<init>()     // Catch:{ Exception -> 0x0600 }
        L_0x0561:
            r17 = r0
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x0600 }
            r0.<init>()     // Catch:{ Exception -> 0x0600 }
            boolean r4 = r9.isEmpty()     // Catch:{ Exception -> 0x0600 }
            if (r4 != 0) goto L_0x058e
            java.lang.String r4 = android.text.TextUtils.join(r1, r9)     // Catch:{ Exception -> 0x0600 }
            r12.getUsersInternal(r4, r0)     // Catch:{ Exception -> 0x0600 }
            int r4 = r0.size()     // Catch:{ Exception -> 0x0600 }
            r5 = 0
        L_0x057a:
            if (r5 >= r4) goto L_0x058e
            java.lang.Object r7 = r0.get(r5)     // Catch:{ Exception -> 0x0600 }
            org.telegram.tgnet.TLRPC$User r7 = (org.telegram.tgnet.TLRPC$User) r7     // Catch:{ Exception -> 0x0600 }
            long r9 = r7.id     // Catch:{ Exception -> 0x0600 }
            java.lang.Long r7 = java.lang.Long.valueOf(r9)     // Catch:{ Exception -> 0x0600 }
            r15.remove(r7)     // Catch:{ Exception -> 0x0600 }
            int r5 = r5 + 1
            goto L_0x057a
        L_0x058e:
            java.util.ArrayList r5 = new java.util.ArrayList     // Catch:{ Exception -> 0x0600 }
            r5.<init>()     // Catch:{ Exception -> 0x0600 }
            boolean r4 = r3.isEmpty()     // Catch:{ Exception -> 0x0600 }
            if (r4 != 0) goto L_0x05b9
            java.lang.String r1 = android.text.TextUtils.join(r1, r3)     // Catch:{ Exception -> 0x0600 }
            r12.getChatsInternal(r1, r5)     // Catch:{ Exception -> 0x0600 }
            int r1 = r5.size()     // Catch:{ Exception -> 0x0600 }
            r3 = 0
        L_0x05a5:
            if (r3 >= r1) goto L_0x05b9
            java.lang.Object r4 = r5.get(r3)     // Catch:{ Exception -> 0x0600 }
            org.telegram.tgnet.TLRPC$Chat r4 = (org.telegram.tgnet.TLRPC$Chat) r4     // Catch:{ Exception -> 0x0600 }
            long r9 = r4.id     // Catch:{ Exception -> 0x0600 }
            java.lang.Long r4 = java.lang.Long.valueOf(r9)     // Catch:{ Exception -> 0x0600 }
            r2.remove(r4)     // Catch:{ Exception -> 0x0600 }
            int r3 = r3 + 1
            goto L_0x05a5
        L_0x05b9:
            boolean r1 = r15.isEmpty()     // Catch:{ Exception -> 0x0600 }
            if (r1 == 0) goto L_0x05de
            boolean r1 = r2.isEmpty()     // Catch:{ Exception -> 0x0600 }
            if (r1 == 0) goto L_0x05de
            boolean r1 = r14.isEmpty()     // Catch:{ Exception -> 0x0600 }
            if (r1 == 0) goto L_0x05de
            r3 = 0
            r1 = r38
            r2 = r17
            r4 = r0
            r7 = r22
            r11 = r8
            r8 = r23
            r9 = r26
            r10 = r30
            r1.lambda$processLoadedFilterPeers$45(r2, r3, r4, r5, r6, r7, r8, r9, r10, r11)     // Catch:{ Exception -> 0x0600 }
            goto L_0x0604
        L_0x05de:
            r11 = r8
            org.telegram.messenger.MessagesController r13 = r38.getMessagesController()     // Catch:{ Exception -> 0x0600 }
            org.telegram.tgnet.TLRPC$TL_messages_dialogs r18 = new org.telegram.tgnet.TLRPC$TL_messages_dialogs     // Catch:{ Exception -> 0x0600 }
            r18.<init>()     // Catch:{ Exception -> 0x0600 }
            r1 = r30
            r16 = r2
            r19 = r0
            r20 = r5
            r21 = r6
            r24 = r26
            r25 = r1
            r26 = r11
            r13.loadFilterPeers(r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26)     // Catch:{ Exception -> 0x0600 }
            goto L_0x0604
        L_0x05fc:
            r0 = move-exception
            r12 = r38
            goto L_0x0601
        L_0x0600:
            r0 = move-exception
        L_0x0601:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x0604:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$checkLoadedRemoteFilters$43(org.telegram.tgnet.TLRPC$Vector):void");
    }

    /* access modifiers changed from: private */
    public static /* synthetic */ int lambda$checkLoadedRemoteFilters$42(LongSparseIntArray longSparseIntArray, Long l, Long l2) {
        int i = longSparseIntArray.get(l.longValue());
        int i2 = longSparseIntArray.get(l2.longValue());
        if (i > i2) {
            return 1;
        }
        return i < i2 ? -1 : 0;
    }

    /* access modifiers changed from: private */
    /* renamed from: processLoadedFilterPeersInternal */
    public void lambda$processLoadedFilterPeers$45(TLRPC$messages_Dialogs tLRPC$messages_Dialogs, TLRPC$messages_Dialogs tLRPC$messages_Dialogs2, ArrayList<TLRPC$User> arrayList, ArrayList<TLRPC$Chat> arrayList2, ArrayList<MessagesController.DialogFilter> arrayList3, SparseArray<MessagesController.DialogFilter> sparseArray, ArrayList<Integer> arrayList4, HashMap<Integer, HashSet<Long>> hashMap, HashMap<Integer, HashSet<Long>> hashMap2, HashSet<Integer> hashSet) {
        ArrayList<TLRPC$User> arrayList5 = arrayList;
        putUsersAndChats(arrayList, arrayList2, true, false);
        int size = sparseArray.size();
        int i = 0;
        boolean z = false;
        while (i < size) {
            lambda$deleteDialogFilter$46(sparseArray.valueAt(i));
            i++;
            z = true;
        }
        Iterator<Integer> it = hashSet.iterator();
        while (it.hasNext()) {
            MessagesController.DialogFilter dialogFilter = this.dialogFiltersMap.get(it.next().intValue());
            if (dialogFilter != null) {
                dialogFilter.pendingUnreadCount = -1;
            }
        }
        for (Map.Entry next : hashMap2.entrySet()) {
            MessagesController.DialogFilter dialogFilter2 = this.dialogFiltersMap.get(((Integer) next.getKey()).intValue());
            if (dialogFilter2 != null) {
                HashSet hashSet2 = (HashSet) next.getValue();
                dialogFilter2.alwaysShow.removeAll(hashSet2);
                dialogFilter2.neverShow.removeAll(hashSet2);
                z = true;
            }
        }
        for (Map.Entry next2 : hashMap.entrySet()) {
            MessagesController.DialogFilter dialogFilter3 = this.dialogFiltersMap.get(((Integer) next2.getKey()).intValue());
            if (dialogFilter3 != null) {
                Iterator it2 = ((HashSet) next2.getValue()).iterator();
                while (it2.hasNext()) {
                    dialogFilter3.pinnedDialogs.delete(((Long) it2.next()).longValue());
                }
                z = true;
            }
        }
        int size2 = arrayList3.size();
        int i2 = 0;
        while (i2 < size2) {
            saveDialogFilterInternal(arrayList3.get(i2), false, true);
            i2++;
            z = true;
        }
        int size3 = this.dialogFilters.size();
        boolean z2 = false;
        for (int i3 = 0; i3 < size3; i3++) {
            MessagesController.DialogFilter dialogFilter4 = this.dialogFilters.get(i3);
            int indexOf = arrayList4.indexOf(Integer.valueOf(dialogFilter4.id));
            if (dialogFilter4.order != indexOf) {
                dialogFilter4.order = indexOf;
                z2 = true;
                z = true;
            }
        }
        if (z2) {
            Collections.sort(this.dialogFilters, MessagesStorage$$ExternalSyntheticLambda199.INSTANCE);
            saveDialogFiltersOrderInternal();
        }
        int i4 = z ? 1 : 2;
        calcUnreadCounters(true);
        getMessagesController().processLoadedDialogFilters(new ArrayList(this.dialogFilters), tLRPC$messages_Dialogs, tLRPC$messages_Dialogs2, arrayList, arrayList2, (ArrayList<TLRPC$EncryptedChat>) null, i4);
    }

    /* access modifiers changed from: private */
    public static /* synthetic */ int lambda$processLoadedFilterPeersInternal$44(MessagesController.DialogFilter dialogFilter, MessagesController.DialogFilter dialogFilter2) {
        int i = dialogFilter.order;
        int i2 = dialogFilter2.order;
        if (i > i2) {
            return 1;
        }
        return i < i2 ? -1 : 0;
    }

    /* access modifiers changed from: protected */
    public void processLoadedFilterPeers(TLRPC$messages_Dialogs tLRPC$messages_Dialogs, TLRPC$messages_Dialogs tLRPC$messages_Dialogs2, ArrayList<TLRPC$User> arrayList, ArrayList<TLRPC$Chat> arrayList2, ArrayList<MessagesController.DialogFilter> arrayList3, SparseArray<MessagesController.DialogFilter> sparseArray, ArrayList<Integer> arrayList4, HashMap<Integer, HashSet<Long>> hashMap, HashMap<Integer, HashSet<Long>> hashMap2, HashSet<Integer> hashSet) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda180(this, tLRPC$messages_Dialogs, tLRPC$messages_Dialogs2, arrayList, arrayList2, arrayList3, sparseArray, arrayList4, hashMap, hashMap2, hashSet));
    }

    /* access modifiers changed from: private */
    /* renamed from: deleteDialogFilterInternal */
    public void lambda$deleteDialogFilter$46(MessagesController.DialogFilter dialogFilter) {
        try {
            this.dialogFilters.remove(dialogFilter);
            this.dialogFiltersMap.remove(dialogFilter.id);
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM dialog_filter WHERE id = " + dialogFilter.id).stepThis().dispose();
            SQLiteDatabase sQLiteDatabase2 = this.database;
            sQLiteDatabase2.executeFast("DELETE FROM dialog_filter_ep WHERE id = " + dialogFilter.id).stepThis().dispose();
            SQLiteDatabase sQLiteDatabase3 = this.database;
            sQLiteDatabase3.executeFast("DELETE FROM dialog_filter_pin_v2 WHERE id = " + dialogFilter.id).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void deleteDialogFilter(MessagesController.DialogFilter dialogFilter) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda152(this, dialogFilter));
    }

    public void saveDialogFilter(MessagesController.DialogFilter dialogFilter, boolean z, boolean z2) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda153(this, dialogFilter, z, z2));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$saveDialogFilter$48(MessagesController.DialogFilter dialogFilter, boolean z, boolean z2) {
        saveDialogFilterInternal(dialogFilter, z, z2);
        calcUnreadCounters(false);
        AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda13(this));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$saveDialogFilter$47() {
        ArrayList<MessagesController.DialogFilter> arrayList = getMessagesController().dialogFilters;
        int size = arrayList.size();
        for (int i = 0; i < size; i++) {
            arrayList.get(i).unreadCount = arrayList.get(i).pendingUnreadCount;
        }
        this.mainUnreadCount = this.pendingMainUnreadCount;
        this.archiveUnreadCount = this.pendingArchiveUnreadCount;
        getNotificationCenter().postNotificationName(NotificationCenter.updateInterfaces, Integer.valueOf(MessagesController.UPDATE_MASK_READ_DIALOG_MESSAGE));
    }

    public void saveDialogFiltersOrderInternal() {
        SQLitePreparedStatement sQLitePreparedStatement = null;
        try {
            SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE dialog_filter SET ord = ?, flags = ? WHERE id = ?");
            int size = this.dialogFilters.size();
            for (int i = 0; i < size; i++) {
                MessagesController.DialogFilter dialogFilter = this.dialogFilters.get(i);
                executeFast.requery();
                executeFast.bindInteger(1, dialogFilter.order);
                executeFast.bindInteger(2, dialogFilter.flags);
                executeFast.bindInteger(3, dialogFilter.id);
                executeFast.step();
            }
            executeFast.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (sQLitePreparedStatement != null) {
                sQLitePreparedStatement.dispose();
            }
        } catch (Throwable th) {
            if (sQLitePreparedStatement != null) {
                sQLitePreparedStatement.dispose();
            }
            throw th;
        }
    }

    public void saveDialogFiltersOrder() {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda127(this, new ArrayList(getMessagesController().dialogFilters)));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$saveDialogFiltersOrder$49(ArrayList arrayList) {
        this.dialogFilters.clear();
        this.dialogFiltersMap.clear();
        this.dialogFilters.addAll(arrayList);
        for (int i = 0; i < arrayList.size(); i++) {
            ((MessagesController.DialogFilter) arrayList.get(i)).order = i;
            this.dialogFiltersMap.put(((MessagesController.DialogFilter) arrayList.get(i)).id, (MessagesController.DialogFilter) arrayList.get(i));
        }
        saveDialogFiltersOrderInternal();
    }

    protected static void addReplyMessages(TLRPC$Message tLRPC$Message, LongSparseArray<SparseArray<ArrayList<TLRPC$Message>>> longSparseArray, LongSparseArray<ArrayList<Integer>> longSparseArray2) {
        int i = tLRPC$Message.reply_to.reply_to_msg_id;
        long replyToDialogId = MessageObject.getReplyToDialogId(tLRPC$Message);
        SparseArray sparseArray = longSparseArray.get(replyToDialogId);
        ArrayList arrayList = longSparseArray2.get(replyToDialogId);
        if (sparseArray == null) {
            sparseArray = new SparseArray();
            longSparseArray.put(replyToDialogId, sparseArray);
        }
        if (arrayList == null) {
            arrayList = new ArrayList();
            longSparseArray2.put(replyToDialogId, arrayList);
        }
        ArrayList arrayList2 = (ArrayList) sparseArray.get(tLRPC$Message.reply_to.reply_to_msg_id);
        if (arrayList2 == null) {
            arrayList2 = new ArrayList();
            sparseArray.put(tLRPC$Message.reply_to.reply_to_msg_id, arrayList2);
            if (!arrayList.contains(Integer.valueOf(tLRPC$Message.reply_to.reply_to_msg_id))) {
                arrayList.add(Integer.valueOf(tLRPC$Message.reply_to.reply_to_msg_id));
            }
        }
        arrayList2.add(tLRPC$Message);
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v3, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v4, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v7, resolved type: boolean} */
    /* access modifiers changed from: protected */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:45:0x00fd  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void loadReplyMessages(androidx.collection.LongSparseArray<android.util.SparseArray<java.util.ArrayList<org.telegram.tgnet.TLRPC$Message>>> r18, androidx.collection.LongSparseArray<java.util.ArrayList<java.lang.Integer>> r19, java.util.ArrayList<java.lang.Long> r20, java.util.ArrayList<java.lang.Long> r21, boolean r22) throws org.telegram.SQLite.SQLiteException {
        /*
            r17 = this;
            r1 = r17
            r0 = r18
            boolean r2 = r18.isEmpty()
            if (r2 == 0) goto L_0x000b
            return
        L_0x000b:
            int r2 = r18.size()
            r3 = 0
            r4 = 0
        L_0x0011:
            if (r4 >= r2) goto L_0x0101
            long r5 = r0.keyAt(r4)
            java.lang.Object r7 = r0.valueAt(r4)
            android.util.SparseArray r7 = (android.util.SparseArray) r7
            r8 = r19
            java.lang.Object r9 = r8.get(r5)
            java.util.ArrayList r9 = (java.util.ArrayList) r9
            if (r9 != 0) goto L_0x002d
            r10 = r20
            r11 = r21
            goto L_0x00e7
        L_0x002d:
            java.lang.String r10 = ","
            r12 = 2
            if (r22 == 0) goto L_0x005a
            org.telegram.SQLite.SQLiteDatabase r14 = r1.database     // Catch:{ Exception -> 0x0056, all -> 0x0052 }
            java.util.Locale r15 = java.util.Locale.US     // Catch:{ Exception -> 0x0056, all -> 0x0052 }
            java.lang.String r11 = "SELECT data, mid, date, uid FROM scheduled_messages_v2 WHERE mid IN(%s) AND uid = %d"
            java.lang.Object[] r13 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x0056, all -> 0x0052 }
            java.lang.String r9 = android.text.TextUtils.join(r10, r9)     // Catch:{ Exception -> 0x0056, all -> 0x0052 }
            r13[r3] = r9     // Catch:{ Exception -> 0x0056, all -> 0x0052 }
            java.lang.Long r5 = java.lang.Long.valueOf(r5)     // Catch:{ Exception -> 0x0056, all -> 0x0052 }
            r6 = 1
            r13[r6] = r5     // Catch:{ Exception -> 0x0056, all -> 0x0052 }
            java.lang.String r5 = java.lang.String.format(r15, r11, r13)     // Catch:{ Exception -> 0x0056, all -> 0x0052 }
            java.lang.Object[] r6 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x0056, all -> 0x0052 }
            org.telegram.SQLite.SQLiteCursor r5 = r14.queryFinalized(r5, r6)     // Catch:{ Exception -> 0x0056, all -> 0x0052 }
            goto L_0x0079
        L_0x0052:
            r0 = move-exception
            r11 = 0
            goto L_0x00fb
        L_0x0056:
            r0 = move-exception
            r11 = 0
            goto L_0x00f9
        L_0x005a:
            org.telegram.SQLite.SQLiteDatabase r11 = r1.database     // Catch:{ Exception -> 0x00f6, all -> 0x00f2 }
            java.util.Locale r13 = java.util.Locale.US     // Catch:{ Exception -> 0x00f6, all -> 0x00f2 }
            java.lang.String r14 = "SELECT data, mid, date, uid FROM messages_v2 WHERE mid IN(%s) AND uid = %d"
            java.lang.Object[] r15 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x00f6, all -> 0x00f2 }
            java.lang.String r9 = android.text.TextUtils.join(r10, r9)     // Catch:{ Exception -> 0x00f6, all -> 0x00f2 }
            r15[r3] = r9     // Catch:{ Exception -> 0x00f6, all -> 0x00f2 }
            java.lang.Long r5 = java.lang.Long.valueOf(r5)     // Catch:{ Exception -> 0x00f6, all -> 0x00f2 }
            r6 = 1
            r15[r6] = r5     // Catch:{ Exception -> 0x00f6, all -> 0x00f2 }
            java.lang.String r5 = java.lang.String.format(r13, r14, r15)     // Catch:{ Exception -> 0x00f6, all -> 0x00f2 }
            java.lang.Object[] r6 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x00f6, all -> 0x00f2 }
            org.telegram.SQLite.SQLiteCursor r5 = r11.queryFinalized(r5, r6)     // Catch:{ Exception -> 0x00f6, all -> 0x00f2 }
        L_0x0079:
            boolean r6 = r5.next()     // Catch:{ Exception -> 0x00ef, all -> 0x00ec }
            if (r6 == 0) goto L_0x00dd
            org.telegram.tgnet.NativeByteBuffer r6 = r5.byteBufferValue(r3)     // Catch:{ Exception -> 0x00ef, all -> 0x00ec }
            if (r6 == 0) goto L_0x00d6
            int r9 = r6.readInt32(r3)     // Catch:{ Exception -> 0x00ef, all -> 0x00ec }
            org.telegram.tgnet.TLRPC$Message r9 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r6, r9, r3)     // Catch:{ Exception -> 0x00ef, all -> 0x00ec }
            org.telegram.messenger.UserConfig r10 = r17.getUserConfig()     // Catch:{ Exception -> 0x00ef, all -> 0x00ec }
            long r10 = r10.clientUserId     // Catch:{ Exception -> 0x00ef, all -> 0x00ec }
            r9.readAttachPath(r6, r10)     // Catch:{ Exception -> 0x00ef, all -> 0x00ec }
            r6.reuse()     // Catch:{ Exception -> 0x00ef, all -> 0x00ec }
            r6 = 1
            int r10 = r5.intValue(r6)     // Catch:{ Exception -> 0x00ef, all -> 0x00ec }
            r9.id = r10     // Catch:{ Exception -> 0x00ef, all -> 0x00ec }
            int r10 = r5.intValue(r12)     // Catch:{ Exception -> 0x00ef, all -> 0x00ec }
            r9.date = r10     // Catch:{ Exception -> 0x00ef, all -> 0x00ec }
            r10 = 3
            long r10 = r5.longValue(r10)     // Catch:{ Exception -> 0x00ef, all -> 0x00ec }
            r9.dialog_id = r10     // Catch:{ Exception -> 0x00ef, all -> 0x00ec }
            r10 = r20
            r11 = r21
            r13 = 0
            addUsersAndChatsFromMessage(r9, r10, r11, r13)     // Catch:{ Exception -> 0x00ef, all -> 0x00ec }
            int r14 = r9.id     // Catch:{ Exception -> 0x00ef, all -> 0x00ec }
            java.lang.Object r14 = r7.get(r14)     // Catch:{ Exception -> 0x00ef, all -> 0x00ec }
            java.util.ArrayList r14 = (java.util.ArrayList) r14     // Catch:{ Exception -> 0x00ef, all -> 0x00ec }
            if (r14 == 0) goto L_0x00db
            int r15 = r14.size()     // Catch:{ Exception -> 0x00ef, all -> 0x00ec }
        L_0x00c3:
            if (r3 >= r15) goto L_0x00db
            java.lang.Object r16 = r14.get(r3)     // Catch:{ Exception -> 0x00ef, all -> 0x00ec }
            r6 = r16
            org.telegram.tgnet.TLRPC$Message r6 = (org.telegram.tgnet.TLRPC$Message) r6     // Catch:{ Exception -> 0x00ef, all -> 0x00ec }
            r6.replyMessage = r9     // Catch:{ Exception -> 0x00ef, all -> 0x00ec }
            org.telegram.messenger.MessageObject.getDialogId(r9)     // Catch:{ Exception -> 0x00ef, all -> 0x00ec }
            int r3 = r3 + 1
            r6 = 1
            goto L_0x00c3
        L_0x00d6:
            r10 = r20
            r11 = r21
            r13 = 0
        L_0x00db:
            r3 = 0
            goto L_0x0079
        L_0x00dd:
            r10 = r20
            r11 = r21
            r5.dispose()     // Catch:{ Exception -> 0x00ef, all -> 0x00ec }
            r5.dispose()
        L_0x00e7:
            int r4 = r4 + 1
            r3 = 0
            goto L_0x0011
        L_0x00ec:
            r0 = move-exception
            r11 = r5
            goto L_0x00fb
        L_0x00ef:
            r0 = move-exception
            r11 = r5
            goto L_0x00f9
        L_0x00f2:
            r0 = move-exception
            r13 = 0
            r11 = r13
            goto L_0x00fb
        L_0x00f6:
            r0 = move-exception
            r13 = 0
            r11 = r13
        L_0x00f9:
            throw r0     // Catch:{ all -> 0x00fa }
        L_0x00fa:
            r0 = move-exception
        L_0x00fb:
            if (r11 == 0) goto L_0x0100
            r11.dispose()
        L_0x0100:
            throw r0
        L_0x0101:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.loadReplyMessages(androidx.collection.LongSparseArray, androidx.collection.LongSparseArray, java.util.ArrayList, java.util.ArrayList, boolean):void");
    }

    public void loadUnreadMessages() {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda10(this));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:125:0x02d4 A[Catch:{ Exception -> 0x041f, all -> 0x041c }] */
    /* JADX WARNING: Removed duplicated region for block: B:128:0x02ea A[Catch:{ Exception -> 0x041f, all -> 0x041c }] */
    /* JADX WARNING: Removed duplicated region for block: B:135:0x0311 A[Catch:{ Exception -> 0x041f, all -> 0x041c }] */
    /* JADX WARNING: Removed duplicated region for block: B:136:0x0314 A[Catch:{ Exception -> 0x041f, all -> 0x041c }] */
    /* JADX WARNING: Removed duplicated region for block: B:139:0x031a A[Catch:{ Exception -> 0x041f, all -> 0x041c }] */
    /* JADX WARNING: Removed duplicated region for block: B:140:0x031d A[Catch:{ Exception -> 0x041f, all -> 0x041c }] */
    /* JADX WARNING: Removed duplicated region for block: B:143:0x0326 A[Catch:{ Exception -> 0x041f, all -> 0x041c }] */
    /* JADX WARNING: Removed duplicated region for block: B:144:0x0329 A[Catch:{ Exception -> 0x041f, all -> 0x041c }] */
    /* JADX WARNING: Removed duplicated region for block: B:199:0x044f  */
    /* JADX WARNING: Removed duplicated region for block: B:202:0x0456  */
    /* JADX WARNING: Removed duplicated region for block: B:227:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$loadUnreadMessages$51() {
        /*
            r34 = this;
            r9 = r34
            java.util.ArrayList r7 = new java.util.ArrayList     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            r7.<init>()     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            java.util.ArrayList r8 = new java.util.ArrayList     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            r8.<init>()     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            java.util.ArrayList r11 = new java.util.ArrayList     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            r11.<init>()     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            androidx.collection.LongSparseArray r12 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            r12.<init>()     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            org.telegram.SQLite.SQLiteDatabase r0 = r9.database     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            java.lang.String r1 = "SELECT d.did, d.unread_count, s.flags FROM dialogs as d LEFT JOIN dialog_settings as s ON d.did = s.did WHERE d.unread_count > 0"
            r13 = 0
            java.lang.Object[] r2 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            org.telegram.SQLite.SQLiteCursor r1 = r0.queryFinalized(r1, r2)     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            java.lang.StringBuilder r0 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0442, all -> 0x043f }
            r0.<init>()     // Catch:{ Exception -> 0x0442, all -> 0x043f }
            org.telegram.tgnet.ConnectionsManager r2 = r34.getConnectionsManager()     // Catch:{ Exception -> 0x0442, all -> 0x043f }
            int r2 = r2.getCurrentTime()     // Catch:{ Exception -> 0x0442, all -> 0x043f }
        L_0x002e:
            boolean r3 = r1.next()     // Catch:{ Exception -> 0x0442, all -> 0x043f }
            r4 = 0
            java.lang.String r14 = ","
            r6 = 2
            r15 = 1
            if (r3 == 0) goto L_0x00c5
            long r16 = r1.longValue(r6)     // Catch:{ Exception -> 0x0442, all -> 0x043f }
            r18 = 1
            long r18 = r16 & r18
            int r3 = (r18 > r4 ? 1 : (r18 == r4 ? 0 : -1))
            if (r3 == 0) goto L_0x0048
            r3 = 1
            goto L_0x0049
        L_0x0048:
            r3 = 0
        L_0x0049:
            r4 = 32
            long r4 = r16 >> r4
            int r5 = (int) r4     // Catch:{ Exception -> 0x0442, all -> 0x043f }
            boolean r4 = r1.isNull(r6)     // Catch:{ Exception -> 0x0442, all -> 0x043f }
            if (r4 != 0) goto L_0x005a
            if (r3 == 0) goto L_0x005a
            if (r5 == 0) goto L_0x002e
            if (r5 >= r2) goto L_0x002e
        L_0x005a:
            long r3 = r1.longValue(r13)     // Catch:{ Exception -> 0x0442, all -> 0x043f }
            boolean r5 = org.telegram.messenger.DialogObject.isFolderDialogId(r3)     // Catch:{ Exception -> 0x0442, all -> 0x043f }
            if (r5 == 0) goto L_0x0065
            goto L_0x002e
        L_0x0065:
            int r5 = r1.intValue(r15)     // Catch:{ Exception -> 0x0442, all -> 0x043f }
            java.lang.Integer r5 = java.lang.Integer.valueOf(r5)     // Catch:{ Exception -> 0x0442, all -> 0x043f }
            r12.put(r3, r5)     // Catch:{ Exception -> 0x0442, all -> 0x043f }
            int r5 = r0.length()     // Catch:{ Exception -> 0x0442, all -> 0x043f }
            if (r5 == 0) goto L_0x0079
            r0.append(r14)     // Catch:{ Exception -> 0x0442, all -> 0x043f }
        L_0x0079:
            r0.append(r3)     // Catch:{ Exception -> 0x0442, all -> 0x043f }
            boolean r5 = org.telegram.messenger.DialogObject.isEncryptedDialog(r3)     // Catch:{ Exception -> 0x0442, all -> 0x043f }
            if (r5 == 0) goto L_0x0098
            int r3 = org.telegram.messenger.DialogObject.getEncryptedChatId(r3)     // Catch:{ Exception -> 0x0442, all -> 0x043f }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x0442, all -> 0x043f }
            boolean r4 = r11.contains(r4)     // Catch:{ Exception -> 0x0442, all -> 0x043f }
            if (r4 != 0) goto L_0x002e
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x0442, all -> 0x043f }
            r11.add(r3)     // Catch:{ Exception -> 0x0442, all -> 0x043f }
            goto L_0x002e
        L_0x0098:
            boolean r5 = org.telegram.messenger.DialogObject.isUserDialog(r3)     // Catch:{ Exception -> 0x0442, all -> 0x043f }
            if (r5 == 0) goto L_0x00b1
            java.lang.Long r5 = java.lang.Long.valueOf(r3)     // Catch:{ Exception -> 0x0442, all -> 0x043f }
            boolean r5 = r7.contains(r5)     // Catch:{ Exception -> 0x0442, all -> 0x043f }
            if (r5 != 0) goto L_0x002e
            java.lang.Long r3 = java.lang.Long.valueOf(r3)     // Catch:{ Exception -> 0x0442, all -> 0x043f }
            r7.add(r3)     // Catch:{ Exception -> 0x0442, all -> 0x043f }
            goto L_0x002e
        L_0x00b1:
            long r3 = -r3
            java.lang.Long r5 = java.lang.Long.valueOf(r3)     // Catch:{ Exception -> 0x0442, all -> 0x043f }
            boolean r5 = r8.contains(r5)     // Catch:{ Exception -> 0x0442, all -> 0x043f }
            if (r5 != 0) goto L_0x002e
            java.lang.Long r3 = java.lang.Long.valueOf(r3)     // Catch:{ Exception -> 0x0442, all -> 0x043f }
            r8.add(r3)     // Catch:{ Exception -> 0x0442, all -> 0x043f }
            goto L_0x002e
        L_0x00c5:
            r1.dispose()     // Catch:{ Exception -> 0x0442, all -> 0x043f }
            androidx.collection.LongSparseArray r2 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            r2.<init>()     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            androidx.collection.LongSparseArray r3 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            r3.<init>()     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            java.util.ArrayList r1 = new java.util.ArrayList     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            r1.<init>()     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            java.util.ArrayList r4 = new java.util.ArrayList     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            r4.<init>()     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            java.util.ArrayList r5 = new java.util.ArrayList     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            r5.<init>()     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            java.util.ArrayList r6 = new java.util.ArrayList     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            r6.<init>()     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            r19 = r6
            java.util.ArrayList r6 = new java.util.ArrayList     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            r6.<init>()     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            int r20 = r0.length()     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            if (r20 <= 0) goto L_0x0424
            org.telegram.SQLite.SQLiteDatabase r10 = r9.database     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            java.lang.StringBuilder r15 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            r15.<init>()     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            java.lang.String r13 = "SELECT read_state, data, send_state, mid, date, uid, replydata FROM messages_v2 WHERE uid IN ("
            r15.append(r13)     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            java.lang.String r0 = r0.toString()     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            r15.append(r0)     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            java.lang.String r0 = ") AND out = 0 AND read_state IN(0,2) ORDER BY date DESC LIMIT 50"
            r15.append(r0)     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            java.lang.String r0 = r15.toString()     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            r13 = 0
            java.lang.Object[] r15 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            org.telegram.SQLite.SQLiteCursor r10 = r10.queryFinalized(r0, r15)     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            r0 = 0
        L_0x0117:
            boolean r13 = r10.next()     // Catch:{ Exception -> 0x0422 }
            if (r13 == 0) goto L_0x020c
            r13 = 1
            org.telegram.tgnet.NativeByteBuffer r15 = r10.byteBufferValue(r13)     // Catch:{ Exception -> 0x0422 }
            if (r15 == 0) goto L_0x0200
            r22 = r5
            r13 = 0
            int r5 = r15.readInt32(r13)     // Catch:{ Exception -> 0x0422 }
            org.telegram.tgnet.TLRPC$Message r5 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r15, r5, r13)     // Catch:{ Exception -> 0x0422 }
            org.telegram.messenger.UserConfig r13 = r34.getUserConfig()     // Catch:{ Exception -> 0x0422 }
            r23 = r12
            long r12 = r13.clientUserId     // Catch:{ Exception -> 0x0422 }
            r5.readAttachPath(r15, r12)     // Catch:{ Exception -> 0x0422 }
            r15.reuse()     // Catch:{ Exception -> 0x0422 }
            r12 = 0
            int r13 = r10.intValue(r12)     // Catch:{ Exception -> 0x0422 }
            org.telegram.messenger.MessageObject.setUnreadFlags(r5, r13)     // Catch:{ Exception -> 0x0422 }
            r12 = 3
            int r12 = r10.intValue(r12)     // Catch:{ Exception -> 0x0422 }
            r5.id = r12     // Catch:{ Exception -> 0x0422 }
            r12 = 4
            int r12 = r10.intValue(r12)     // Catch:{ Exception -> 0x0422 }
            r5.date = r12     // Catch:{ Exception -> 0x0422 }
            r15 = r14
            r12 = 5
            long r13 = r10.longValue(r12)     // Catch:{ Exception -> 0x0422 }
            r5.dialog_id = r13     // Catch:{ Exception -> 0x0422 }
            r1.add(r5)     // Catch:{ Exception -> 0x0422 }
            int r12 = r5.date     // Catch:{ Exception -> 0x0422 }
            int r12 = java.lang.Math.max(r0, r12)     // Catch:{ Exception -> 0x0422 }
            r13 = 0
            addUsersAndChatsFromMessage(r5, r7, r8, r13)     // Catch:{ Exception -> 0x0422 }
            r13 = 2
            int r0 = r10.intValue(r13)     // Catch:{ Exception -> 0x0422 }
            r5.send_state = r0     // Catch:{ Exception -> 0x0422 }
            org.telegram.tgnet.TLRPC$Peer r0 = r5.peer_id     // Catch:{ Exception -> 0x0422 }
            long r13 = r0.channel_id     // Catch:{ Exception -> 0x0422 }
            r16 = 0
            int r0 = (r13 > r16 ? 1 : (r13 == r16 ? 0 : -1))
            if (r0 != 0) goto L_0x0187
            boolean r0 = org.telegram.messenger.MessageObject.isUnread(r5)     // Catch:{ Exception -> 0x0422 }
            if (r0 != 0) goto L_0x0187
            long r13 = r5.dialog_id     // Catch:{ Exception -> 0x0422 }
            boolean r0 = org.telegram.messenger.DialogObject.isEncryptedDialog(r13)     // Catch:{ Exception -> 0x0422 }
            if (r0 == 0) goto L_0x018b
        L_0x0187:
            int r0 = r5.id     // Catch:{ Exception -> 0x0422 }
            if (r0 <= 0) goto L_0x018e
        L_0x018b:
            r13 = 0
            r5.send_state = r13     // Catch:{ Exception -> 0x0422 }
        L_0x018e:
            long r13 = r5.dialog_id     // Catch:{ Exception -> 0x0422 }
            boolean r0 = org.telegram.messenger.DialogObject.isEncryptedDialog(r13)     // Catch:{ Exception -> 0x0422 }
            if (r0 == 0) goto L_0x01a3
            r0 = 5
            boolean r13 = r10.isNull(r0)     // Catch:{ Exception -> 0x0422 }
            if (r13 != 0) goto L_0x01a3
            long r13 = r10.longValue(r0)     // Catch:{ Exception -> 0x0422 }
            r5.random_id = r13     // Catch:{ Exception -> 0x0422 }
        L_0x01a3:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r0 = r5.reply_to     // Catch:{ Exception -> 0x01f7 }
            if (r0 == 0) goto L_0x01f4
            int r0 = r0.reply_to_msg_id     // Catch:{ Exception -> 0x01f7 }
            if (r0 == 0) goto L_0x01f4
            org.telegram.tgnet.TLRPC$MessageAction r0 = r5.action     // Catch:{ Exception -> 0x01f7 }
            boolean r13 = r0 instanceof org.telegram.tgnet.TLRPC$TL_messageActionPinMessage     // Catch:{ Exception -> 0x01f7 }
            if (r13 != 0) goto L_0x01b9
            boolean r13 = r0 instanceof org.telegram.tgnet.TLRPC$TL_messageActionPaymentSent     // Catch:{ Exception -> 0x01f7 }
            if (r13 != 0) goto L_0x01b9
            boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC$TL_messageActionGameScore     // Catch:{ Exception -> 0x01f7 }
            if (r0 == 0) goto L_0x01f4
        L_0x01b9:
            r0 = 6
            boolean r13 = r10.isNull(r0)     // Catch:{ Exception -> 0x01f7 }
            if (r13 != 0) goto L_0x01e8
            org.telegram.tgnet.NativeByteBuffer r0 = r10.byteBufferValue(r0)     // Catch:{ Exception -> 0x01f7 }
            if (r0 == 0) goto L_0x01e8
            r13 = 0
            int r14 = r0.readInt32(r13)     // Catch:{ Exception -> 0x01f7 }
            org.telegram.tgnet.TLRPC$Message r14 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r0, r14, r13)     // Catch:{ Exception -> 0x01f7 }
            r5.replyMessage = r14     // Catch:{ Exception -> 0x01f7 }
            org.telegram.messenger.UserConfig r13 = r34.getUserConfig()     // Catch:{ Exception -> 0x01f7 }
            r21 = r12
            long r12 = r13.clientUserId     // Catch:{ Exception -> 0x01f2 }
            r14.readAttachPath(r0, r12)     // Catch:{ Exception -> 0x01f2 }
            r0.reuse()     // Catch:{ Exception -> 0x01f2 }
            org.telegram.tgnet.TLRPC$Message r0 = r5.replyMessage     // Catch:{ Exception -> 0x01f2 }
            if (r0 == 0) goto L_0x01ea
            r12 = 0
            addUsersAndChatsFromMessage(r0, r7, r8, r12)     // Catch:{ Exception -> 0x01f2 }
            goto L_0x01ea
        L_0x01e8:
            r21 = r12
        L_0x01ea:
            org.telegram.tgnet.TLRPC$Message r0 = r5.replyMessage     // Catch:{ Exception -> 0x01f2 }
            if (r0 != 0) goto L_0x01fd
            addReplyMessages(r5, r2, r3)     // Catch:{ Exception -> 0x01f2 }
            goto L_0x01fd
        L_0x01f2:
            r0 = move-exception
            goto L_0x01fa
        L_0x01f4:
            r21 = r12
            goto L_0x01fd
        L_0x01f7:
            r0 = move-exception
            r21 = r12
        L_0x01fa:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ Exception -> 0x0422 }
        L_0x01fd:
            r0 = r21
            goto L_0x0205
        L_0x0200:
            r22 = r5
            r23 = r12
            r15 = r14
        L_0x0205:
            r14 = r15
            r5 = r22
            r12 = r23
            goto L_0x0117
        L_0x020c:
            r22 = r5
            r23 = r12
            r15 = r14
            r10.dispose()     // Catch:{ Exception -> 0x0422 }
            org.telegram.SQLite.SQLiteDatabase r5 = r9.database     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            java.lang.StringBuilder r10 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            r10.<init>()     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            java.lang.String r12 = "DELETE FROM unread_push_messages WHERE date <= "
            r10.append(r12)     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            r10.append(r0)     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            java.lang.String r0 = r10.toString()     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r5.executeFast(r0)     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            r0.dispose()     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            org.telegram.SQLite.SQLiteDatabase r0 = r9.database     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            java.lang.String r5 = "SELECT data, mid, date, uid, random, fm, name, uname, flags FROM unread_push_messages WHERE 1 ORDER BY date DESC LIMIT 50"
            r10 = 0
            java.lang.Object[] r12 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            org.telegram.SQLite.SQLiteCursor r5 = r0.queryFinalized(r5, r12)     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
        L_0x023d:
            boolean r0 = r5.next()     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            if (r0 == 0) goto L_0x034b
            org.telegram.tgnet.NativeByteBuffer r0 = r5.byteBufferValue(r10)     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            if (r0 == 0) goto L_0x033e
            int r12 = r0.readInt32(r10)     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            org.telegram.tgnet.TLRPC$Message r12 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r0, r12, r10)     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r0.reuse()     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r10 = 1
            int r0 = r5.intValue(r10)     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r12.id = r0     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r10 = 2
            int r0 = r5.intValue(r10)     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r12.date = r0     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r0 = 3
            long r13 = r5.longValue(r0)     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r12.dialog_id = r13     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r14 = r1
            r13 = 4
            long r0 = r5.longValue(r13)     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r12.random_id = r0     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r0 = 5
            boolean r1 = r5.isNull(r0)     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            if (r1 == 0) goto L_0x027c
            r1 = 6
            r27 = 0
            goto L_0x0283
        L_0x027c:
            java.lang.String r1 = r5.stringValue(r0)     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r27 = r1
            r1 = 6
        L_0x0283:
            boolean r18 = r5.isNull(r1)     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            if (r18 == 0) goto L_0x028c
            r28 = 0
            goto L_0x0292
        L_0x028c:
            java.lang.String r18 = r5.stringValue(r1)     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r28 = r18
        L_0x0292:
            r0 = 7
            boolean r18 = r5.isNull(r0)     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            if (r18 == 0) goto L_0x029c
            r29 = 0
            goto L_0x02a2
        L_0x029c:
            java.lang.String r0 = r5.stringValue(r0)     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r29 = r0
        L_0x02a2:
            r0 = 8
            int r0 = r5.intValue(r0)     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            long r24 = org.telegram.messenger.MessageObject.getFromChatId(r12)     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r16 = 0
            int r18 = (r24 > r16 ? 1 : (r24 == r16 ? 0 : -1))
            if (r18 != 0) goto L_0x02c9
            r18 = r14
            long r13 = r12.dialog_id     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            boolean r13 = org.telegram.messenger.DialogObject.isUserDialog(r13)     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            if (r13 == 0) goto L_0x02cb
            org.telegram.tgnet.TLRPC$TL_peerUser r13 = new org.telegram.tgnet.TLRPC$TL_peerUser     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r13.<init>()     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r12.from_id = r13     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r14 = r11
            long r10 = r12.dialog_id     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r13.user_id = r10     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            goto L_0x02cc
        L_0x02c9:
            r18 = r14
        L_0x02cb:
            r14 = r11
        L_0x02cc:
            long r10 = r12.dialog_id     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            boolean r10 = org.telegram.messenger.DialogObject.isUserDialog(r10)     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            if (r10 == 0) goto L_0x02ea
            long r10 = r12.dialog_id     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            java.lang.Long r10 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            boolean r10 = r7.contains(r10)     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            if (r10 != 0) goto L_0x0309
            long r10 = r12.dialog_id     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            java.lang.Long r10 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r7.add(r10)     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            goto L_0x0309
        L_0x02ea:
            long r10 = r12.dialog_id     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            boolean r10 = org.telegram.messenger.DialogObject.isChatDialog(r10)     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            if (r10 == 0) goto L_0x0309
            long r10 = r12.dialog_id     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            long r10 = -r10
            java.lang.Long r10 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            boolean r10 = r8.contains(r10)     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            if (r10 != 0) goto L_0x0309
            long r10 = r12.dialog_id     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            long r10 = -r10
            java.lang.Long r10 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r8.add(r10)     // Catch:{ Exception -> 0x041f, all -> 0x041c }
        L_0x0309:
            org.telegram.messenger.MessageObject r10 = new org.telegram.messenger.MessageObject     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            int r11 = r9.currentAccount     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r13 = r0 & 1
            if (r13 == 0) goto L_0x0314
            r30 = 1
            goto L_0x0316
        L_0x0314:
            r30 = 0
        L_0x0316:
            r0 = r0 & 2
            if (r0 == 0) goto L_0x031d
            r31 = 1
            goto L_0x031f
        L_0x031d:
            r31 = 0
        L_0x031f:
            int r0 = r12.flags     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r13 = -2147483648(0xfffffffvar_, float:-0.0)
            r0 = r0 & r13
            if (r0 == 0) goto L_0x0329
            r32 = 1
            goto L_0x032b
        L_0x0329:
            r32 = 0
        L_0x032b:
            r33 = 0
            r24 = r10
            r25 = r11
            r26 = r12
            r24.<init>(r25, r26, r27, r28, r29, r30, r31, r32, r33)     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r4.add(r10)     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r10 = 0
            addUsersAndChatsFromMessage(r12, r7, r8, r10)     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            goto L_0x0345
        L_0x033e:
            r18 = r1
            r14 = r11
            r1 = 6
            r10 = 0
            r16 = 0
        L_0x0345:
            r11 = r14
            r1 = r18
            r10 = 0
            goto L_0x023d
        L_0x034b:
            r18 = r1
            r14 = r11
            r10 = 0
            r5.dispose()     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r0 = 0
            r11 = r18
            r1 = r34
            r12 = r4
            r4 = r7
            r13 = r22
            r5 = r8
            r16 = r15
            r10 = r19
            r15 = r6
            r6 = r0
            r1.loadReplyMessages(r2, r3, r4, r5, r6)     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            boolean r0 = r14.isEmpty()     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            r1 = r16
            if (r0 != 0) goto L_0x0374
            java.lang.String r0 = android.text.TextUtils.join(r1, r14)     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            r9.getEncryptedChatsInternal(r0, r15, r7)     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
        L_0x0374:
            boolean r0 = r7.isEmpty()     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            if (r0 != 0) goto L_0x0381
            java.lang.String r0 = android.text.TextUtils.join(r1, r7)     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            r9.getUsersInternal(r0, r13)     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
        L_0x0381:
            boolean r0 = r8.isEmpty()     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            if (r0 != 0) goto L_0x0419
            java.lang.String r0 = android.text.TextUtils.join(r1, r8)     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            r9.getChatsInternal(r0, r10)     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            r0 = 0
        L_0x038f:
            int r1 = r10.size()     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            if (r0 >= r1) goto L_0x0419
            java.lang.Object r1 = r10.get(r0)     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            org.telegram.tgnet.TLRPC$Chat r1 = (org.telegram.tgnet.TLRPC$Chat) r1     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            if (r1 == 0) goto L_0x0410
            boolean r2 = org.telegram.messenger.ChatObject.isNotInChat(r1)     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            if (r2 != 0) goto L_0x03ab
            boolean r2 = r1.min     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            if (r2 != 0) goto L_0x03ab
            org.telegram.tgnet.TLRPC$InputChannel r2 = r1.migrated_to     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            if (r2 == 0) goto L_0x0410
        L_0x03ab:
            long r1 = r1.id     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            long r1 = -r1
            org.telegram.SQLite.SQLiteDatabase r3 = r9.database     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            java.lang.StringBuilder r4 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            r4.<init>()     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            java.lang.String r5 = "UPDATE dialogs SET unread_count = 0 WHERE did = "
            r4.append(r5)     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            r4.append(r1)     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            java.lang.String r4 = r4.toString()     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.executeFast(r4)     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.stepThis()     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            r3.dispose()     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            org.telegram.SQLite.SQLiteDatabase r3 = r9.database     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            java.lang.String r5 = "UPDATE messages_v2 SET read_state = 3 WHERE uid = %d AND mid > 0 AND read_state IN(0,2) AND out = 0"
            r6 = 1
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            java.lang.Long r6 = java.lang.Long.valueOf(r1)     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            r8 = 0
            r7[r8] = r6     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            java.lang.String r4 = java.lang.String.format(r4, r5, r7)     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.executeFast(r4)     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.stepThis()     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            r3.dispose()     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            r10.remove(r0)     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            int r0 = r0 + -1
            r3 = r23
            r3.remove(r1)     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            r4 = 0
        L_0x03f6:
            int r5 = r11.size()     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            if (r4 >= r5) goto L_0x0413
            java.lang.Object r5 = r11.get(r4)     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            org.telegram.tgnet.TLRPC$Message r5 = (org.telegram.tgnet.TLRPC$Message) r5     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            long r5 = r5.dialog_id     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            int r7 = (r5 > r1 ? 1 : (r5 == r1 ? 0 : -1))
            if (r7 != 0) goto L_0x040d
            r11.remove(r4)     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            int r4 = r4 + -1
        L_0x040d:
            r5 = 1
            int r4 = r4 + r5
            goto L_0x03f6
        L_0x0410:
            r3 = r23
            r8 = 0
        L_0x0413:
            r1 = 1
            int r0 = r0 + r1
            r23 = r3
            goto L_0x038f
        L_0x0419:
            r3 = r23
            goto L_0x042b
        L_0x041c:
            r0 = move-exception
            r10 = r5
            goto L_0x0454
        L_0x041f:
            r0 = move-exception
            r10 = r5
            goto L_0x044a
        L_0x0422:
            r0 = move-exception
            goto L_0x044a
        L_0x0424:
            r11 = r1
            r13 = r5
            r15 = r6
            r3 = r12
            r10 = r19
            r12 = r4
        L_0x042b:
            java.util.Collections.reverse(r11)     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda121 r0 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda121     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            r1 = r0
            r2 = r34
            r4 = r11
            r5 = r12
            r6 = r13
            r7 = r10
            r8 = r15
            r1.<init>(r2, r3, r4, r5, r6, r7, r8)     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0)     // Catch:{ Exception -> 0x0448, all -> 0x0445 }
            goto L_0x0452
        L_0x043f:
            r0 = move-exception
            r10 = r1
            goto L_0x0454
        L_0x0442:
            r0 = move-exception
            r10 = r1
            goto L_0x044a
        L_0x0445:
            r0 = move-exception
            r10 = 0
            goto L_0x0454
        L_0x0448:
            r0 = move-exception
            r10 = 0
        L_0x044a:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0453 }
            if (r10 == 0) goto L_0x0452
            r10.dispose()
        L_0x0452:
            return
        L_0x0453:
            r0 = move-exception
        L_0x0454:
            if (r10 == 0) goto L_0x0459
            r10.dispose()
        L_0x0459:
            goto L_0x045b
        L_0x045a:
            throw r0
        L_0x045b:
            goto L_0x045a
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$loadUnreadMessages$51():void");
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$loadUnreadMessages$50(LongSparseArray longSparseArray, ArrayList arrayList, ArrayList arrayList2, ArrayList arrayList3, ArrayList arrayList4, ArrayList arrayList5) {
        getNotificationsController().processLoadedUnreadMessages(longSparseArray, arrayList, arrayList2, arrayList3, arrayList4, arrayList5);
    }

    public void putWallpapers(ArrayList<TLRPC$WallPaper> arrayList, int i) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda54(this, i, arrayList));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:37:0x0094  */
    /* JADX WARNING: Removed duplicated region for block: B:40:0x009f  */
    /* JADX WARNING: Removed duplicated region for block: B:48:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$putWallpapers$52(int r11, java.util.ArrayList r12) {
        /*
            r10 = this;
            r0 = 0
            r1 = 1
            if (r11 != r1) goto L_0x0013
            org.telegram.SQLite.SQLiteDatabase r2 = r10.database     // Catch:{ Exception -> 0x0089 }
            java.lang.String r3 = "DELETE FROM wallpapers2 WHERE num >= -1"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r3)     // Catch:{ Exception -> 0x0089 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.stepThis()     // Catch:{ Exception -> 0x0089 }
            r2.dispose()     // Catch:{ Exception -> 0x0089 }
        L_0x0013:
            org.telegram.SQLite.SQLiteDatabase r2 = r10.database     // Catch:{ Exception -> 0x0089 }
            r2.beginTransaction()     // Catch:{ Exception -> 0x0089 }
            if (r11 == 0) goto L_0x0023
            org.telegram.SQLite.SQLiteDatabase r2 = r10.database     // Catch:{ Exception -> 0x0089 }
            java.lang.String r3 = "REPLACE INTO wallpapers2 VALUES(?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r3)     // Catch:{ Exception -> 0x0089 }
            goto L_0x002b
        L_0x0023:
            org.telegram.SQLite.SQLiteDatabase r2 = r10.database     // Catch:{ Exception -> 0x0089 }
            java.lang.String r3 = "UPDATE wallpapers2 SET data = ? WHERE uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r3)     // Catch:{ Exception -> 0x0089 }
        L_0x002b:
            r3 = 0
            int r4 = r12.size()     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
        L_0x0030:
            if (r3 >= r4) goto L_0x0073
            java.lang.Object r5 = r12.get(r3)     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
            org.telegram.tgnet.TLRPC$WallPaper r5 = (org.telegram.tgnet.TLRPC$WallPaper) r5     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
            r2.requery()     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
            org.telegram.tgnet.NativeByteBuffer r6 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
            int r7 = r5.getObjectSize()     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
            r6.<init>((int) r7)     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
            r5.serializeToStream(r6)     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
            r7 = 2
            if (r11 == 0) goto L_0x0062
            long r8 = r5.id     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
            r2.bindLong(r1, r8)     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
            r2.bindByteBuffer((int) r7, (org.telegram.tgnet.NativeByteBuffer) r6)     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
            r5 = 3
            if (r11 >= 0) goto L_0x0059
            r2.bindInteger(r5, r11)     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
            goto L_0x006a
        L_0x0059:
            if (r11 != r7) goto L_0x005d
            r7 = -1
            goto L_0x005e
        L_0x005d:
            r7 = r3
        L_0x005e:
            r2.bindInteger(r5, r7)     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
            goto L_0x006a
        L_0x0062:
            r2.bindByteBuffer((int) r1, (org.telegram.tgnet.NativeByteBuffer) r6)     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
            long r8 = r5.id     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
            r2.bindLong(r7, r8)     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
        L_0x006a:
            r2.step()     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
            r6.reuse()     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
            int r3 = r3 + 1
            goto L_0x0030
        L_0x0073:
            r2.dispose()     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
            org.telegram.SQLite.SQLiteDatabase r11 = r10.database     // Catch:{ Exception -> 0x0089 }
            r11.commitTransaction()     // Catch:{ Exception -> 0x0089 }
            org.telegram.SQLite.SQLiteDatabase r11 = r10.database
            r11.commitTransaction()
            goto L_0x0097
        L_0x0081:
            r11 = move-exception
            r0 = r2
            goto L_0x0098
        L_0x0084:
            r11 = move-exception
            r0 = r2
            goto L_0x008a
        L_0x0087:
            r11 = move-exception
            goto L_0x0098
        L_0x0089:
            r11 = move-exception
        L_0x008a:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r11)     // Catch:{ all -> 0x0087 }
            org.telegram.SQLite.SQLiteDatabase r11 = r10.database
            r11.commitTransaction()
            if (r0 == 0) goto L_0x0097
            r0.dispose()
        L_0x0097:
            return
        L_0x0098:
            org.telegram.SQLite.SQLiteDatabase r12 = r10.database
            r12.commitTransaction()
            if (r0 == 0) goto L_0x00a2
            r0.dispose()
        L_0x00a2:
            goto L_0x00a4
        L_0x00a3:
            throw r11
        L_0x00a4:
            goto L_0x00a3
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$putWallpapers$52(int, java.util.ArrayList):void");
    }

    public void deleteWallpaper(long j) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda64(this, j));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$deleteWallpaper$53(long j) {
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM wallpapers2 WHERE uid = " + j).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void getWallpapers() {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda9(this));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$getWallpapers$55() {
        SQLiteCursor sQLiteCursor = null;
        try {
            sQLiteCursor = this.database.queryFinalized("SELECT data FROM wallpapers2 WHERE 1 ORDER BY num ASC", new Object[0]);
            ArrayList arrayList = new ArrayList();
            while (sQLiteCursor.next()) {
                NativeByteBuffer byteBufferValue = sQLiteCursor.byteBufferValue(0);
                if (byteBufferValue != null) {
                    TLRPC$WallPaper TLdeserialize = TLRPC$WallPaper.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                    byteBufferValue.reuse();
                    if (TLdeserialize != null) {
                        arrayList.add(TLdeserialize);
                    }
                }
            }
            AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda0(arrayList));
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (sQLiteCursor == null) {
                return;
            }
        } catch (Throwable th) {
            if (sQLiteCursor != null) {
                sQLiteCursor.dispose();
            }
            throw th;
        }
        sQLiteCursor.dispose();
    }

    public void addRecentLocalFile(String str, String str2, TLRPC$Document tLRPC$Document) {
        if (str != null && str.length() != 0) {
            if ((str2 != null && str2.length() != 0) || tLRPC$Document != null) {
                this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda163(this, tLRPC$Document, str, str2));
            }
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$addRecentLocalFile$56(TLRPC$Document tLRPC$Document, String str, String str2) {
        SQLitePreparedStatement sQLitePreparedStatement = null;
        if (tLRPC$Document != null) {
            try {
                sQLitePreparedStatement = this.database.executeFast("UPDATE web_recent_v3 SET document = ? WHERE image_url = ?");
                sQLitePreparedStatement.requery();
                NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(tLRPC$Document.getObjectSize());
                tLRPC$Document.serializeToStream(nativeByteBuffer);
                sQLitePreparedStatement.bindByteBuffer(1, nativeByteBuffer);
                sQLitePreparedStatement.bindString(2, str);
                sQLitePreparedStatement.step();
                sQLitePreparedStatement.dispose();
                nativeByteBuffer.reuse();
            } catch (Exception e) {
                FileLog.e((Throwable) e);
                if (sQLitePreparedStatement == null) {
                    return;
                }
            } catch (Throwable th) {
                if (sQLitePreparedStatement != null) {
                    sQLitePreparedStatement.dispose();
                }
                throw th;
            }
        } else {
            sQLitePreparedStatement = this.database.executeFast("UPDATE web_recent_v3 SET local_url = ? WHERE image_url = ?");
            sQLitePreparedStatement.requery();
            sQLitePreparedStatement.bindString(1, str2);
            sQLitePreparedStatement.bindString(2, str);
            sQLitePreparedStatement.step();
            sQLitePreparedStatement.dispose();
        }
        sQLitePreparedStatement.dispose();
    }

    public void deleteUserChatHistory(long j, long j2) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda82(this, j, j2));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:27:0x008e, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:44:0x00e7, code lost:
        r0 = th;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:45:0x00e8, code lost:
        r11 = r7;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:46:0x00ea, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:47:0x00eb, code lost:
        r11 = r7;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:58:0x00fe, code lost:
        r11.dispose();
     */
    /* JADX WARNING: Failed to process nested try/catch */
    /* JADX WARNING: Removed duplicated region for block: B:39:0x00c2 A[Catch:{ Exception -> 0x00f0, all -> 0x00ed }] */
    /* JADX WARNING: Removed duplicated region for block: B:40:0x00c4 A[Catch:{ Exception -> 0x00f0, all -> 0x00ed }] */
    /* JADX WARNING: Removed duplicated region for block: B:43:0x00de A[Catch:{ Exception -> 0x00f0, all -> 0x00ed }] */
    /* JADX WARNING: Removed duplicated region for block: B:44:0x00e7 A[ExcHandler: all (th java.lang.Throwable), Splitter:B:3:0x0023] */
    /* JADX WARNING: Removed duplicated region for block: B:55:0x00f7  */
    /* JADX WARNING: Removed duplicated region for block: B:58:0x00fe  */
    /* JADX WARNING: Removed duplicated region for block: B:64:? A[RETURN, SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:65:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$deleteUserChatHistory$59(long r18, long r20) {
        /*
            r17 = this;
            r8 = r17
            r9 = r18
            java.util.ArrayList r12 = new java.util.ArrayList     // Catch:{ Exception -> 0x00f0, all -> 0x00ed }
            r12.<init>()     // Catch:{ Exception -> 0x00f0, all -> 0x00ed }
            org.telegram.SQLite.SQLiteDatabase r0 = r8.database     // Catch:{ Exception -> 0x00f0, all -> 0x00ed }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x00f0, all -> 0x00ed }
            r1.<init>()     // Catch:{ Exception -> 0x00f0, all -> 0x00ed }
            java.lang.String r2 = "SELECT data FROM messages_v2 WHERE uid = "
            r1.append(r2)     // Catch:{ Exception -> 0x00f0, all -> 0x00ed }
            r1.append(r9)     // Catch:{ Exception -> 0x00f0, all -> 0x00ed }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x00f0, all -> 0x00ed }
            r13 = 0
            java.lang.Object[] r2 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x00f0, all -> 0x00ed }
            org.telegram.SQLite.SQLiteCursor r7 = r0.queryFinalized(r1, r2)     // Catch:{ Exception -> 0x00f0, all -> 0x00ed }
            java.util.ArrayList r14 = new java.util.ArrayList     // Catch:{ Exception -> 0x00ea, all -> 0x00e7 }
            r14.<init>()     // Catch:{ Exception -> 0x00ea, all -> 0x00e7 }
            java.util.ArrayList r15 = new java.util.ArrayList     // Catch:{ Exception -> 0x00ea, all -> 0x00e7 }
            r15.<init>()     // Catch:{ Exception -> 0x00ea, all -> 0x00e7 }
            java.util.ArrayList r6 = new java.util.ArrayList     // Catch:{ Exception -> 0x00ea, all -> 0x00e7 }
            r6.<init>()     // Catch:{ Exception -> 0x00ea, all -> 0x00e7 }
        L_0x0032:
            r5 = 1
            boolean r0 = r7.next()     // Catch:{ Exception -> 0x0097, all -> 0x00e7 }
            if (r0 == 0) goto L_0x0094
            org.telegram.tgnet.NativeByteBuffer r0 = r7.byteBufferValue(r13)     // Catch:{ Exception -> 0x0097, all -> 0x00e7 }
            if (r0 == 0) goto L_0x0090
            int r1 = r0.readInt32(r13)     // Catch:{ Exception -> 0x0097, all -> 0x00e7 }
            org.telegram.tgnet.TLRPC$Message r2 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r0, r1, r13)     // Catch:{ Exception -> 0x0097, all -> 0x00e7 }
            if (r2 == 0) goto L_0x0088
            org.telegram.messenger.UserConfig r1 = r17.getUserConfig()     // Catch:{ Exception -> 0x0097, all -> 0x00e7 }
            long r3 = r1.clientUserId     // Catch:{ Exception -> 0x0097, all -> 0x00e7 }
            r2.readAttachPath(r0, r3)     // Catch:{ Exception -> 0x0097, all -> 0x00e7 }
            boolean r1 = org.telegram.messenger.UserObject.isReplyUser((long) r18)     // Catch:{ Exception -> 0x0097, all -> 0x00e7 }
            if (r1 == 0) goto L_0x0064
            org.telegram.tgnet.TLRPC$MessageFwdHeader r1 = r2.fwd_from     // Catch:{ Exception -> 0x0097, all -> 0x00e7 }
            org.telegram.tgnet.TLRPC$Peer r1 = r1.from_id     // Catch:{ Exception -> 0x0097, all -> 0x00e7 }
            long r3 = org.telegram.messenger.MessageObject.getPeerId(r1)     // Catch:{ Exception -> 0x0097, all -> 0x00e7 }
            int r1 = (r3 > r20 ? 1 : (r3 == r20 ? 0 : -1))
            if (r1 == 0) goto L_0x0070
        L_0x0064:
            long r3 = org.telegram.messenger.MessageObject.getFromChatId(r2)     // Catch:{ Exception -> 0x0097, all -> 0x00e7 }
            int r1 = (r3 > r20 ? 1 : (r3 == r20 ? 0 : -1))
            if (r1 != 0) goto L_0x0088
            int r1 = r2.id     // Catch:{ Exception -> 0x0097, all -> 0x00e7 }
            if (r1 == r5) goto L_0x0088
        L_0x0070:
            int r1 = r2.id     // Catch:{ Exception -> 0x0097, all -> 0x00e7 }
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x0097, all -> 0x00e7 }
            r12.add(r1)     // Catch:{ Exception -> 0x0097, all -> 0x00e7 }
            r16 = 0
            r1 = r17
            r3 = r14
            r4 = r6
            r11 = 1
            r5 = r15
            r13 = r6
            r6 = r16
            r1.addFilesToDelete(r2, r3, r4, r5, r6)     // Catch:{ Exception -> 0x008e, all -> 0x00e7 }
            goto L_0x008a
        L_0x0088:
            r13 = r6
            r11 = 1
        L_0x008a:
            r0.reuse()     // Catch:{ Exception -> 0x008e, all -> 0x00e7 }
            goto L_0x0091
        L_0x008e:
            r0 = move-exception
            goto L_0x009a
        L_0x0090:
            r13 = r6
        L_0x0091:
            r6 = r13
            r13 = 0
            goto L_0x0032
        L_0x0094:
            r13 = r6
            r11 = 1
            goto L_0x009d
        L_0x0097:
            r0 = move-exception
            r13 = r6
            r11 = 1
        L_0x009a:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ Exception -> 0x00ea, all -> 0x00e7 }
        L_0x009d:
            r7.dispose()     // Catch:{ Exception -> 0x00ea, all -> 0x00e7 }
            r8.deleteFromDownloadQueue(r13, r11)     // Catch:{ Exception -> 0x00f0, all -> 0x00ed }
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda142 r0 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda142     // Catch:{ Exception -> 0x00f0, all -> 0x00ed }
            r1 = r0
            r2 = r17
            r3 = r15
            r4 = r18
            r6 = r12
            r1.<init>(r2, r3, r4, r6)     // Catch:{ Exception -> 0x00f0, all -> 0x00ed }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0)     // Catch:{ Exception -> 0x00f0, all -> 0x00ed }
            r5 = 0
            r6 = 0
            r1 = r17
            r2 = r18
            r4 = r12
            r1.lambda$markMessagesAsDeleted$172(r2, r4, r5, r6)     // Catch:{ Exception -> 0x00f0, all -> 0x00ed }
            boolean r0 = org.telegram.messenger.DialogObject.isChatDialog(r18)     // Catch:{ Exception -> 0x00f0, all -> 0x00ed }
            if (r0 == 0) goto L_0x00c4
            long r0 = -r9
            goto L_0x00c6
        L_0x00c4:
            r0 = 0
        L_0x00c6:
            r4 = r0
            r7 = 0
            r1 = r17
            r2 = r18
            r6 = r12
            r1.lambda$updateDialogsWithDeletedMessages$171(r2, r4, r6, r7)     // Catch:{ Exception -> 0x00f0, all -> 0x00ed }
            org.telegram.messenger.FileLoader r0 = r17.getFileLoader()     // Catch:{ Exception -> 0x00f0, all -> 0x00ed }
            r1 = 0
            r0.deleteFiles(r14, r1)     // Catch:{ Exception -> 0x00f0, all -> 0x00ed }
            boolean r0 = r12.isEmpty()     // Catch:{ Exception -> 0x00f0, all -> 0x00ed }
            if (r0 != 0) goto L_0x00fa
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda141 r0 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda141     // Catch:{ Exception -> 0x00f0, all -> 0x00ed }
            r0.<init>(r8, r12, r9)     // Catch:{ Exception -> 0x00f0, all -> 0x00ed }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0)     // Catch:{ Exception -> 0x00f0, all -> 0x00ed }
            goto L_0x00fa
        L_0x00e7:
            r0 = move-exception
            r11 = r7
            goto L_0x00fc
        L_0x00ea:
            r0 = move-exception
            r11 = r7
            goto L_0x00f2
        L_0x00ed:
            r0 = move-exception
            r11 = 0
            goto L_0x00fc
        L_0x00f0:
            r0 = move-exception
            r11 = 0
        L_0x00f2:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x00fb }
            if (r11 == 0) goto L_0x00fa
            r11.dispose()
        L_0x00fa:
            return
        L_0x00fb:
            r0 = move-exception
        L_0x00fc:
            if (r11 == 0) goto L_0x0101
            r11.dispose()
        L_0x0101:
            goto L_0x0103
        L_0x0102:
            throw r0
        L_0x0103:
            goto L_0x0102
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$deleteUserChatHistory$59(long, long):void");
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$deleteUserChatHistory$57(ArrayList arrayList, long j, ArrayList arrayList2) {
        getFileLoader().cancelLoadFiles(arrayList);
        getMessagesController().markDialogMessageAsDeleted(j, arrayList2);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$deleteUserChatHistory$58(ArrayList arrayList, long j) {
        NotificationCenter notificationCenter = getNotificationCenter();
        int i = NotificationCenter.messagesDeleted;
        Object[] objArr = new Object[3];
        objArr[0] = arrayList;
        objArr[1] = Long.valueOf(DialogObject.isChatDialog(j) ? -j : 0);
        objArr[2] = Boolean.FALSE;
        notificationCenter.postNotificationName(i, objArr);
    }

    private boolean addFilesToDelete(TLRPC$Message tLRPC$Message, ArrayList<File> arrayList, ArrayList<Pair<Long, Integer>> arrayList2, ArrayList<String> arrayList3, boolean z) {
        int i;
        long j;
        int i2 = 0;
        if (tLRPC$Message == null) {
            return false;
        }
        TLRPC$Document document = MessageObject.getDocument(tLRPC$Message);
        TLRPC$Photo photo = MessageObject.getPhoto(tLRPC$Message);
        if (!MessageObject.isVoiceMessage(tLRPC$Message)) {
            if (MessageObject.isStickerMessage(tLRPC$Message) || MessageObject.isAnimatedStickerMessage(tLRPC$Message)) {
                if (document == null) {
                    return false;
                }
                j = document.id;
            } else if (MessageObject.isVideoMessage(tLRPC$Message) || MessageObject.isRoundVideoMessage(tLRPC$Message) || MessageObject.isGifMessage(tLRPC$Message)) {
                if (document == null) {
                    return false;
                }
                j = document.id;
                i = 4;
            } else if (document != null) {
                if (getMediaDataController().ringtoneDataStore.contains(document.id)) {
                    return false;
                }
                j = document.id;
                i = 8;
            } else if (photo == null || FileLoader.getClosestPhotoSizeWithSize(photo.sizes, AndroidUtilities.getPhotoSize()) == null) {
                j = 0;
                i = 0;
            } else {
                j = photo.id;
            }
            i = 1;
        } else if (document == null || getMediaDataController().ringtoneDataStore.contains(document.id)) {
            return false;
        } else {
            j = document.id;
            i = 2;
        }
        if (j != 0) {
            arrayList2.add(new Pair(Long.valueOf(j), Integer.valueOf(i)));
        }
        if (photo != null) {
            int size = photo.sizes.size();
            while (i2 < size) {
                TLRPC$PhotoSize tLRPC$PhotoSize = photo.sizes.get(i2);
                String attachFileName = FileLoader.getAttachFileName(tLRPC$PhotoSize);
                if (!TextUtils.isEmpty(attachFileName)) {
                    arrayList3.add(attachFileName);
                }
                File pathToAttach = getFileLoader().getPathToAttach(tLRPC$PhotoSize, z);
                if (pathToAttach.toString().length() > 0) {
                    arrayList.add(pathToAttach);
                }
                i2++;
            }
            return true;
        } else if (document == null) {
            return false;
        } else {
            String attachFileName2 = FileLoader.getAttachFileName(document);
            if (!TextUtils.isEmpty(attachFileName2)) {
                arrayList3.add(attachFileName2);
            }
            File pathToAttach2 = getFileLoader().getPathToAttach(document, z);
            if (pathToAttach2.toString().length() > 0) {
                arrayList.add(pathToAttach2);
            }
            int size2 = document.thumbs.size();
            while (i2 < size2) {
                File pathToAttach3 = getFileLoader().getPathToAttach(document.thumbs.get(i2));
                if (pathToAttach3.toString().length() > 0) {
                    arrayList.add(pathToAttach3);
                }
                i2++;
            }
            return true;
        }
    }

    public void deleteDialog(long j, int i) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda38(this, i, j));
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v0, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v0, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v0, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v1, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v1, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v1, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v2, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v2, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v2, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v3, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v3, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v3, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v4, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v5, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v6, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v7, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v8, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v9, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v91, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v10, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v16, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v92, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v11, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v12, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v13, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v110, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v111, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v112, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v39, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v113, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v114, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v41, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v115, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v116, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:100:0x01d2, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:101:0x01d3, code lost:
        r15 = r25;
        r3 = r0;
        r2 = r1;
        r1 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:136:0x0302, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:137:0x0303, code lost:
        r15 = r25;
        r3 = r0;
        r2 = r1;
        r1 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:183:0x0526, code lost:
        r15.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:185:0x052b, code lost:
        r2.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:187:0x0530, code lost:
        r18.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:189:0x0535, code lost:
        r1.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:193:0x053d, code lost:
        r15.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:195:0x0542, code lost:
        r2.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:197:0x0547, code lost:
        r18.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:199:0x054c, code lost:
        r1.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:207:?, code lost:
        return;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:208:?, code lost:
        return;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:94:0x01b9, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:95:0x01bb, code lost:
        r0 = e;
     */
    /* JADX WARNING: Failed to process nested try/catch */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:100:0x01d2 A[ExcHandler: all (r0v23 'th' java.lang.Throwable A[CUSTOM_DECLARE]), Splitter:B:77:0x0187] */
    /* JADX WARNING: Removed duplicated region for block: B:115:0x02c3 A[SYNTHETIC, Splitter:B:115:0x02c3] */
    /* JADX WARNING: Removed duplicated region for block: B:150:0x032c  */
    /* JADX WARNING: Removed duplicated region for block: B:183:0x0526  */
    /* JADX WARNING: Removed duplicated region for block: B:185:0x052b  */
    /* JADX WARNING: Removed duplicated region for block: B:187:0x0530  */
    /* JADX WARNING: Removed duplicated region for block: B:189:0x0535  */
    /* JADX WARNING: Removed duplicated region for block: B:193:0x053d  */
    /* JADX WARNING: Removed duplicated region for block: B:195:0x0542  */
    /* JADX WARNING: Removed duplicated region for block: B:197:0x0547  */
    /* JADX WARNING: Removed duplicated region for block: B:199:0x054c  */
    /* JADX WARNING: Removed duplicated region for block: B:208:? A[RETURN, SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:65:0x0126  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$deleteDialog$62(int r25, long r26) {
        /*
            r24 = this;
            r7 = r24
            r8 = r25
            r9 = r26
            java.lang.String r11 = " AND mid != "
            r12 = 3
            r14 = 0
            if (r8 != r12) goto L_0x0055
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x004c, all -> 0x0043 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x004c, all -> 0x0043 }
            r2.<init>()     // Catch:{ Exception -> 0x004c, all -> 0x0043 }
            java.lang.String r3 = "SELECT last_mid FROM dialogs WHERE did = "
            r2.append(r3)     // Catch:{ Exception -> 0x004c, all -> 0x0043 }
            r2.append(r9)     // Catch:{ Exception -> 0x004c, all -> 0x0043 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x004c, all -> 0x0043 }
            java.lang.Object[] r3 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x004c, all -> 0x0043 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r2, r3)     // Catch:{ Exception -> 0x004c, all -> 0x0043 }
            boolean r2 = r1.next()     // Catch:{ Exception -> 0x003d, all -> 0x0037 }
            if (r2 == 0) goto L_0x0030
            int r2 = r1.intValue(r14)     // Catch:{ Exception -> 0x003d, all -> 0x0037 }
            goto L_0x0031
        L_0x0030:
            r2 = -1
        L_0x0031:
            r1.dispose()     // Catch:{ Exception -> 0x003d, all -> 0x0037 }
            if (r2 == 0) goto L_0x0055
            return
        L_0x0037:
            r0 = move-exception
            r3 = r0
            r15 = r1
        L_0x003a:
            r1 = 0
        L_0x003b:
            r2 = 0
            goto L_0x0048
        L_0x003d:
            r0 = move-exception
            r3 = r0
            r15 = r1
        L_0x0040:
            r1 = 0
        L_0x0041:
            r2 = 0
            goto L_0x0051
        L_0x0043:
            r0 = move-exception
            r3 = r0
            r1 = 0
            r2 = 0
            r15 = 0
        L_0x0048:
            r18 = 0
            goto L_0x053b
        L_0x004c:
            r0 = move-exception
            r3 = r0
            r1 = 0
            r2 = 0
            r15 = 0
        L_0x0051:
            r18 = 0
            goto L_0x0521
        L_0x0055:
            boolean r1 = org.telegram.messenger.DialogObject.isEncryptedDialog(r26)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.String r5 = "SELECT data FROM messages_v2 WHERE uid = "
            r4 = 2
            if (r1 != 0) goto L_0x0068
            if (r8 != r4) goto L_0x0061
            goto L_0x0068
        L_0x0061:
            r21 = r5
            r17 = r11
            r11 = 1
            goto L_0x0113
        L_0x0068:
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r2.<init>()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r2.append(r5)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r2.append(r9)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.Object[] r3 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLiteCursor r3 = r1.queryFinalized(r2, r3)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.util.ArrayList r2 = new java.util.ArrayList     // Catch:{ Exception -> 0x0507, all -> 0x04fc }
            r2.<init>()     // Catch:{ Exception -> 0x0507, all -> 0x04fc }
            java.util.ArrayList r1 = new java.util.ArrayList     // Catch:{ Exception -> 0x0507, all -> 0x04fc }
            r1.<init>()     // Catch:{ Exception -> 0x0507, all -> 0x04fc }
            java.util.ArrayList r13 = new java.util.ArrayList     // Catch:{ Exception -> 0x0507, all -> 0x04fc }
            r13.<init>()     // Catch:{ Exception -> 0x0507, all -> 0x04fc }
        L_0x008e:
            boolean r16 = r3.next()     // Catch:{ Exception -> 0x00f0, all -> 0x00e8 }
            if (r16 == 0) goto L_0x00de
            org.telegram.tgnet.NativeByteBuffer r4 = r3.byteBufferValue(r14)     // Catch:{ Exception -> 0x00f0, all -> 0x00e8 }
            if (r4 == 0) goto L_0x00c9
            int r6 = r4.readInt32(r14)     // Catch:{ Exception -> 0x00f0, all -> 0x00e8 }
            org.telegram.tgnet.TLRPC$Message r6 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r4, r6, r14)     // Catch:{ Exception -> 0x00f0, all -> 0x00e8 }
            org.telegram.messenger.UserConfig r15 = r24.getUserConfig()     // Catch:{ Exception -> 0x00f0, all -> 0x00e8 }
            long r14 = r15.clientUserId     // Catch:{ Exception -> 0x00f0, all -> 0x00e8 }
            r6.readAttachPath(r4, r14)     // Catch:{ Exception -> 0x00f0, all -> 0x00e8 }
            r4.reuse()     // Catch:{ Exception -> 0x00f0, all -> 0x00e8 }
            r14 = 0
            r15 = r1
            r1 = r24
            r4 = r2
            r2 = r6
            r19 = r3
            r3 = r4
            r6 = r4
            r4 = r13
            r21 = r5
            r5 = r15
            r12 = r6
            r17 = r11
            r11 = 1
            r6 = r14
            r1.addFilesToDelete(r2, r3, r4, r5, r6)     // Catch:{ Exception -> 0x00c7, all -> 0x00c5 }
            goto L_0x00d2
        L_0x00c5:
            r0 = move-exception
            goto L_0x00eb
        L_0x00c7:
            r0 = move-exception
            goto L_0x00fa
        L_0x00c9:
            r15 = r1
            r12 = r2
            r19 = r3
            r21 = r5
            r17 = r11
            r11 = 1
        L_0x00d2:
            r2 = r12
            r1 = r15
            r11 = r17
            r3 = r19
            r5 = r21
            r4 = 2
            r12 = 3
            r14 = 0
            goto L_0x008e
        L_0x00de:
            r15 = r1
            r12 = r2
            r19 = r3
            r21 = r5
            r17 = r11
            r11 = 1
            goto L_0x00fe
        L_0x00e8:
            r0 = move-exception
            r19 = r3
        L_0x00eb:
            r3 = r0
            r15 = r19
            goto L_0x003a
        L_0x00f0:
            r0 = move-exception
            r15 = r1
            r12 = r2
            r19 = r3
            r21 = r5
            r17 = r11
            r11 = 1
        L_0x00fa:
            r1 = r0
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r1)     // Catch:{ Exception -> 0x04fa, all -> 0x04f8 }
        L_0x00fe:
            r19.dispose()     // Catch:{ Exception -> 0x04fa, all -> 0x04f8 }
            r7.deleteFromDownloadQueue(r13, r11)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda136 r1 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda136     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r1.<init>(r7, r15)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r1)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.messenger.FileLoader r1 = r24.getFileLoader()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r1.deleteFiles(r12, r8)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
        L_0x0113:
            java.lang.String r1 = "DELETE FROM media_holes_v2 WHERE uid = "
            java.lang.String r2 = "DELETE FROM messages_holes WHERE uid = "
            java.lang.String r3 = "DELETE FROM media_v4 WHERE uid = "
            java.lang.String r4 = "DELETE FROM media_counts_v2 WHERE uid = "
            java.lang.String r5 = "DELETE FROM bot_keyboard WHERE uid = "
            java.lang.String r6 = "DELETE FROM messages_v2 WHERE uid = "
            if (r8 == 0) goto L_0x032c
            r12 = 3
            if (r8 != r12) goto L_0x0126
            goto L_0x032c
        L_0x0126:
            r12 = 2
            if (r8 != r12) goto L_0x0324
            org.telegram.SQLite.SQLiteDatabase r8 = r7.database     // Catch:{ Exception -> 0x004c, all -> 0x0043 }
            java.lang.StringBuilder r12 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x004c, all -> 0x0043 }
            r12.<init>()     // Catch:{ Exception -> 0x004c, all -> 0x0043 }
            java.lang.String r13 = "SELECT last_mid_i, last_mid FROM dialogs WHERE did = "
            r12.append(r13)     // Catch:{ Exception -> 0x004c, all -> 0x0043 }
            r12.append(r9)     // Catch:{ Exception -> 0x004c, all -> 0x0043 }
            java.lang.String r12 = r12.toString()     // Catch:{ Exception -> 0x004c, all -> 0x0043 }
            r13 = 0
            java.lang.Object[] r14 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x004c, all -> 0x0043 }
            org.telegram.SQLite.SQLiteCursor r8 = r8.queryFinalized(r12, r14)     // Catch:{ Exception -> 0x004c, all -> 0x0043 }
            boolean r12 = r8.next()     // Catch:{ Exception -> 0x031c, all -> 0x0314 }
            if (r12 == 0) goto L_0x030a
            long r14 = r8.longValue(r13)     // Catch:{ Exception -> 0x031c, all -> 0x0314 }
            long r11 = r8.longValue(r11)     // Catch:{ Exception -> 0x031c, all -> 0x0314 }
            org.telegram.SQLite.SQLiteDatabase r13 = r7.database     // Catch:{ Exception -> 0x031c, all -> 0x0314 }
            r25 = r8
            java.lang.StringBuilder r8 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r8.<init>()     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r16 = r1
            r1 = r21
            r8.append(r1)     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r8.append(r9)     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            java.lang.String r1 = " AND mid IN ("
            r8.append(r1)     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r8.append(r14)     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            java.lang.String r1 = ","
            r8.append(r1)     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r8.append(r11)     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            java.lang.String r1 = ")"
            r8.append(r1)     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            java.lang.String r1 = r8.toString()     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r19 = r3
            r8 = 0
            java.lang.Object[] r3 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            org.telegram.SQLite.SQLiteCursor r1 = r13.queryFinalized(r1, r3)     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r3 = -1
        L_0x0187:
            boolean r13 = r1.next()     // Catch:{ Exception -> 0x01da, all -> 0x01d2 }
            if (r13 == 0) goto L_0x01cb
            org.telegram.tgnet.NativeByteBuffer r13 = r1.byteBufferValue(r8)     // Catch:{ Exception -> 0x01da, all -> 0x01d2 }
            if (r13 == 0) goto L_0x01bd
            r20 = r3
            int r3 = r13.readInt32(r8)     // Catch:{ Exception -> 0x01bb, all -> 0x01d2 }
            org.telegram.tgnet.TLRPC$Message r3 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r13, r3, r8)     // Catch:{ Exception -> 0x01bb, all -> 0x01d2 }
            if (r3 == 0) goto L_0x01ad
            org.telegram.messenger.UserConfig r8 = r24.getUserConfig()     // Catch:{ Exception -> 0x01bb, all -> 0x01d2 }
            r21 = r4
            r22 = r5
            long r4 = r8.clientUserId     // Catch:{ Exception -> 0x01b9, all -> 0x01d2 }
            r3.readAttachPath(r13, r4)     // Catch:{ Exception -> 0x01b9, all -> 0x01d2 }
            goto L_0x01b1
        L_0x01ad:
            r21 = r4
            r22 = r5
        L_0x01b1:
            r13.reuse()     // Catch:{ Exception -> 0x01b9, all -> 0x01d2 }
            if (r3 == 0) goto L_0x01c3
            int r3 = r3.id     // Catch:{ Exception -> 0x01b9, all -> 0x01d2 }
            goto L_0x01c5
        L_0x01b9:
            r0 = move-exception
            goto L_0x01e1
        L_0x01bb:
            r0 = move-exception
            goto L_0x01dd
        L_0x01bd:
            r20 = r3
            r21 = r4
            r22 = r5
        L_0x01c3:
            r3 = r20
        L_0x01c5:
            r4 = r21
            r5 = r22
            r8 = 0
            goto L_0x0187
        L_0x01cb:
            r20 = r3
            r21 = r4
            r22 = r5
            goto L_0x01e5
        L_0x01d2:
            r0 = move-exception
            r15 = r25
            r3 = r0
            r2 = r1
            r1 = 0
            goto L_0x0048
        L_0x01da:
            r0 = move-exception
            r20 = r3
        L_0x01dd:
            r21 = r4
            r22 = r5
        L_0x01e1:
            r3 = r0
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r3)     // Catch:{ Exception -> 0x0302, all -> 0x01d2 }
        L_0x01e5:
            r1.dispose()     // Catch:{ Exception -> 0x0302, all -> 0x01d2 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r3.<init>()     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r3.append(r6)     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r3.append(r9)     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r4 = r17
            r3.append(r4)     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r3.append(r14)     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r3.append(r4)     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r3.append(r11)     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r3)     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r1.dispose()     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r3.<init>()     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r3.append(r2)     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r3.append(r9)     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            java.lang.String r2 = r3.toString()     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r1.dispose()     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r2.<init>()     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r3 = r22
            r2.append(r3)     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r2.append(r9)     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r1.dispose()     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r2.<init>()     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r4 = r21
            r2.append(r4)     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r2.append(r9)     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r1.dispose()     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r2.<init>()     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r5 = r19
            r2.append(r5)     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r2.append(r9)     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r1.dispose()     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r2.<init>()     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r8 = r16
            r2.append(r8)     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r2.append(r9)     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r1.dispose()     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            org.telegram.messenger.MediaDataController r1 = r24.getMediaDataController()     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            r2 = 0
            r1.clearBotKeyboard(r9, r2)     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            java.lang.String r2 = "REPLACE INTO messages_holes VALUES(?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            org.telegram.SQLite.SQLiteDatabase r2 = r7.database     // Catch:{ Exception -> 0x02f8, all -> 0x02ee }
            java.lang.String r3 = "REPLACE INTO media_holes_v2 VALUES(?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r3)     // Catch:{ Exception -> 0x02f8, all -> 0x02ee }
            r3 = r20
            r4 = -1
            if (r3 == r4) goto L_0x02c6
            createFirstHoles(r9, r1, r2, r3)     // Catch:{ Exception -> 0x02e6, all -> 0x02de }
        L_0x02c6:
            r1.dispose()     // Catch:{ Exception -> 0x02e6, all -> 0x02de }
            r2.dispose()     // Catch:{ Exception -> 0x02d7, all -> 0x02d0 }
            r7.updateWidgets((long) r9)     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            goto L_0x030c
        L_0x02d0:
            r0 = move-exception
            r15 = r25
            r3 = r0
            r1 = r2
            goto L_0x003b
        L_0x02d7:
            r0 = move-exception
            r15 = r25
            r3 = r0
            r1 = r2
            goto L_0x0041
        L_0x02de:
            r0 = move-exception
            r15 = r25
            r3 = r0
            r18 = r1
            r1 = r2
            goto L_0x02f5
        L_0x02e6:
            r0 = move-exception
            r15 = r25
            r3 = r0
            r18 = r1
            r1 = r2
            goto L_0x02ff
        L_0x02ee:
            r0 = move-exception
            r15 = r25
            r3 = r0
            r18 = r1
            r1 = 0
        L_0x02f5:
            r2 = 0
            goto L_0x053b
        L_0x02f8:
            r0 = move-exception
            r15 = r25
            r3 = r0
            r18 = r1
            r1 = 0
        L_0x02ff:
            r2 = 0
            goto L_0x0521
        L_0x0302:
            r0 = move-exception
            r15 = r25
            r3 = r0
            r2 = r1
            r1 = 0
            goto L_0x0051
        L_0x030a:
            r25 = r8
        L_0x030c:
            r25.dispose()     // Catch:{ Exception -> 0x0312, all -> 0x0310 }
            return
        L_0x0310:
            r0 = move-exception
            goto L_0x0317
        L_0x0312:
            r0 = move-exception
            goto L_0x031f
        L_0x0314:
            r0 = move-exception
            r25 = r8
        L_0x0317:
            r15 = r25
            r3 = r0
            goto L_0x003a
        L_0x031c:
            r0 = move-exception
            r25 = r8
        L_0x031f:
            r15 = r25
            r3 = r0
            goto L_0x0040
        L_0x0324:
            r8 = r1
            r23 = r5
            r5 = r3
            r3 = r23
            goto L_0x0416
        L_0x032c:
            r8 = r1
            r23 = r5
            r5 = r3
            r3 = r23
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.StringBuilder r11 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r11.<init>()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.String r12 = "DELETE FROM dialogs WHERE did = "
            r11.append(r12)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r11.append(r9)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.String r11 = r11.toString()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r11)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r1.dispose()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.StringBuilder r11 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r11.<init>()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.String r12 = "DELETE FROM chat_pinned_v2 WHERE uid = "
            r11.append(r12)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r11.append(r9)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.String r11 = r11.toString()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r11)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r1.dispose()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.StringBuilder r11 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r11.<init>()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.String r12 = "DELETE FROM chat_pinned_count WHERE uid = "
            r11.append(r12)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r11.append(r9)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.String r11 = r11.toString()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r11)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r1.dispose()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.StringBuilder r11 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r11.<init>()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.String r12 = "DELETE FROM channel_users_v2 WHERE did = "
            r11.append(r12)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r11.append(r9)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.String r11 = r11.toString()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r11)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r1.dispose()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.StringBuilder r11 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r11.<init>()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.String r12 = "DELETE FROM search_recent WHERE did = "
            r11.append(r12)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r11.append(r9)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.String r11 = r11.toString()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r11)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r1.dispose()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            boolean r1 = org.telegram.messenger.DialogObject.isEncryptedDialog(r26)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            if (r1 != 0) goto L_0x03f4
            boolean r1 = org.telegram.messenger.DialogObject.isChatDialog(r26)     // Catch:{ Exception -> 0x004c, all -> 0x0043 }
            if (r1 == 0) goto L_0x0416
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x004c, all -> 0x0043 }
            java.lang.StringBuilder r11 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x004c, all -> 0x0043 }
            r11.<init>()     // Catch:{ Exception -> 0x004c, all -> 0x0043 }
            java.lang.String r12 = "DELETE FROM chat_settings_v2 WHERE uid = "
            r11.append(r12)     // Catch:{ Exception -> 0x004c, all -> 0x0043 }
            long r12 = -r9
            r11.append(r12)     // Catch:{ Exception -> 0x004c, all -> 0x0043 }
            java.lang.String r11 = r11.toString()     // Catch:{ Exception -> 0x004c, all -> 0x0043 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r11)     // Catch:{ Exception -> 0x004c, all -> 0x0043 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x004c, all -> 0x0043 }
            r1.dispose()     // Catch:{ Exception -> 0x004c, all -> 0x0043 }
            goto L_0x0416
        L_0x03f4:
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.StringBuilder r11 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r11.<init>()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.String r12 = "DELETE FROM enc_chats WHERE uid = "
            r11.append(r12)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            int r12 = org.telegram.messenger.DialogObject.getEncryptedChatId(r26)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r11.append(r12)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.String r11 = r11.toString()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r11)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r1.dispose()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
        L_0x0416:
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.StringBuilder r11 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r11.<init>()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.String r12 = "UPDATE dialogs SET unread_count = 0, unread_count_i = 0 WHERE did = "
            r11.append(r12)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r11.append(r9)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.String r11 = r11.toString()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r11)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r1.dispose()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.StringBuilder r11 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r11.<init>()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r11.append(r6)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r11.append(r9)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.String r6 = r11.toString()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r6)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r1.dispose()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.StringBuilder r6 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r6.<init>()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r6.append(r3)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r6.append(r9)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.String r3 = r6.toString()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r3)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r1.dispose()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r3.<init>()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r3.append(r4)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r3.append(r9)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r3)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r1.dispose()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r3.<init>()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r3.append(r5)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r3.append(r9)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r3)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r1.dispose()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r3.<init>()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r3.append(r2)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r3.append(r9)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.String r2 = r3.toString()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r1.dispose()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r2.<init>()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r2.append(r8)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r2.append(r9)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r1.dispose()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            org.telegram.messenger.MediaDataController r1 = r24.getMediaDataController()     // Catch:{ Exception -> 0x051a, all -> 0x0512 }
            r2 = 0
            r1.clearBotKeyboard(r9, r2)     // Catch:{ Exception -> 0x04f6, all -> 0x04f4 }
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda23 r1 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda23     // Catch:{ Exception -> 0x04f6, all -> 0x04f4 }
            r1.<init>(r7)     // Catch:{ Exception -> 0x04f6, all -> 0x04f4 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r1)     // Catch:{ Exception -> 0x04f6, all -> 0x04f4 }
            r1 = 0
            r7.resetAllUnreadCounters(r1)     // Catch:{ Exception -> 0x04f6, all -> 0x04f4 }
            r7.updateWidgets((long) r9)     // Catch:{ Exception -> 0x04f6, all -> 0x04f4 }
            goto L_0x0538
        L_0x04f4:
            r0 = move-exception
            goto L_0x0514
        L_0x04f6:
            r0 = move-exception
            goto L_0x051c
        L_0x04f8:
            r0 = move-exception
            goto L_0x04ff
        L_0x04fa:
            r0 = move-exception
            goto L_0x050a
        L_0x04fc:
            r0 = move-exception
            r19 = r3
        L_0x04ff:
            r2 = 0
            r3 = r0
            r1 = r2
            r18 = r1
            r15 = r19
            goto L_0x053b
        L_0x0507:
            r0 = move-exception
            r19 = r3
        L_0x050a:
            r2 = 0
            r3 = r0
            r1 = r2
            r18 = r1
            r15 = r19
            goto L_0x0521
        L_0x0512:
            r0 = move-exception
            r2 = 0
        L_0x0514:
            r3 = r0
            r1 = r2
            r15 = r1
            r18 = r15
            goto L_0x053b
        L_0x051a:
            r0 = move-exception
            r2 = 0
        L_0x051c:
            r3 = r0
            r1 = r2
            r15 = r1
            r18 = r15
        L_0x0521:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r3)     // Catch:{ all -> 0x0539 }
            if (r15 == 0) goto L_0x0529
            r15.dispose()
        L_0x0529:
            if (r2 == 0) goto L_0x052e
            r2.dispose()
        L_0x052e:
            if (r18 == 0) goto L_0x0533
            r18.dispose()
        L_0x0533:
            if (r1 == 0) goto L_0x0538
            r1.dispose()
        L_0x0538:
            return
        L_0x0539:
            r0 = move-exception
            r3 = r0
        L_0x053b:
            if (r15 == 0) goto L_0x0540
            r15.dispose()
        L_0x0540:
            if (r2 == 0) goto L_0x0545
            r2.dispose()
        L_0x0545:
            if (r18 == 0) goto L_0x054a
            r18.dispose()
        L_0x054a:
            if (r1 == 0) goto L_0x054f
            r1.dispose()
        L_0x054f:
            goto L_0x0551
        L_0x0550:
            throw r3
        L_0x0551:
            goto L_0x0550
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$deleteDialog$62(int, long):void");
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$deleteDialog$60(ArrayList arrayList) {
        getFileLoader().cancelLoadFiles(arrayList);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$deleteDialog$61() {
        getNotificationCenter().postNotificationName(NotificationCenter.needReloadRecentDialogsSearch, new Object[0]);
    }

    public void onDeleteQueryComplete(long j) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda67(this, j));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$onDeleteQueryComplete$63(long j) {
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM media_counts_v2 WHERE uid = " + j).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void getDialogPhotos(long j, int i, int i2, int i3) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda45(this, i2, j, i, i3));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:31:0x00b2  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$getDialogPhotos$65(int r14, long r15, int r17, int r18) {
        /*
            r13 = this;
            r10 = r13
            r0 = 1
            r1 = 2
            r11 = 0
            r2 = 0
            if (r14 == 0) goto L_0x002d
            org.telegram.SQLite.SQLiteDatabase r3 = r10.database     // Catch:{ Exception -> 0x00a6 }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x00a6 }
            java.lang.String r5 = "SELECT data FROM user_photos WHERE uid = %d AND id < %d ORDER BY rowid ASC LIMIT %d"
            r6 = 3
            java.lang.Object[] r6 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x00a6 }
            java.lang.Long r7 = java.lang.Long.valueOf(r15)     // Catch:{ Exception -> 0x00a6 }
            r6[r2] = r7     // Catch:{ Exception -> 0x00a6 }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r14)     // Catch:{ Exception -> 0x00a6 }
            r6[r0] = r7     // Catch:{ Exception -> 0x00a6 }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r17)     // Catch:{ Exception -> 0x00a6 }
            r6[r1] = r0     // Catch:{ Exception -> 0x00a6 }
            java.lang.String r0 = java.lang.String.format(r4, r5, r6)     // Catch:{ Exception -> 0x00a6 }
            java.lang.Object[] r1 = new java.lang.Object[r2]     // Catch:{ Exception -> 0x00a6 }
            org.telegram.SQLite.SQLiteCursor r0 = r3.queryFinalized(r0, r1)     // Catch:{ Exception -> 0x00a6 }
            goto L_0x004b
        L_0x002d:
            org.telegram.SQLite.SQLiteDatabase r3 = r10.database     // Catch:{ Exception -> 0x00a6 }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x00a6 }
            java.lang.String r5 = "SELECT data FROM user_photos WHERE uid = %d ORDER BY rowid ASC LIMIT %d"
            java.lang.Object[] r1 = new java.lang.Object[r1]     // Catch:{ Exception -> 0x00a6 }
            java.lang.Long r6 = java.lang.Long.valueOf(r15)     // Catch:{ Exception -> 0x00a6 }
            r1[r2] = r6     // Catch:{ Exception -> 0x00a6 }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r17)     // Catch:{ Exception -> 0x00a6 }
            r1[r0] = r6     // Catch:{ Exception -> 0x00a6 }
            java.lang.String r0 = java.lang.String.format(r4, r5, r1)     // Catch:{ Exception -> 0x00a6 }
            java.lang.Object[] r1 = new java.lang.Object[r2]     // Catch:{ Exception -> 0x00a6 }
            org.telegram.SQLite.SQLiteCursor r0 = r3.queryFinalized(r0, r1)     // Catch:{ Exception -> 0x00a6 }
        L_0x004b:
            r1 = r0
            org.telegram.tgnet.TLRPC$TL_photos_photos r3 = new org.telegram.tgnet.TLRPC$TL_photos_photos     // Catch:{ Exception -> 0x00a1, all -> 0x009e }
            r3.<init>()     // Catch:{ Exception -> 0x00a1, all -> 0x009e }
            java.util.ArrayList r4 = new java.util.ArrayList     // Catch:{ Exception -> 0x00a1, all -> 0x009e }
            r4.<init>()     // Catch:{ Exception -> 0x00a1, all -> 0x009e }
        L_0x0056:
            boolean r0 = r1.next()     // Catch:{ Exception -> 0x00a1, all -> 0x009e }
            if (r0 == 0) goto L_0x0088
            org.telegram.tgnet.NativeByteBuffer r0 = r1.byteBufferValue(r2)     // Catch:{ Exception -> 0x00a1, all -> 0x009e }
            if (r0 == 0) goto L_0x0056
            int r5 = r0.readInt32(r2)     // Catch:{ Exception -> 0x00a1, all -> 0x009e }
            org.telegram.tgnet.TLRPC$Photo r5 = org.telegram.tgnet.TLRPC$Photo.TLdeserialize(r0, r5, r2)     // Catch:{ Exception -> 0x00a1, all -> 0x009e }
            int r6 = r0.remaining()     // Catch:{ Exception -> 0x00a1, all -> 0x009e }
            if (r6 <= 0) goto L_0x007c
            int r6 = r0.readInt32(r2)     // Catch:{ Exception -> 0x00a1, all -> 0x009e }
            org.telegram.tgnet.TLRPC$Message r6 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r0, r6, r2)     // Catch:{ Exception -> 0x00a1, all -> 0x009e }
            r4.add(r6)     // Catch:{ Exception -> 0x00a1, all -> 0x009e }
            goto L_0x007f
        L_0x007c:
            r4.add(r11)     // Catch:{ Exception -> 0x00a1, all -> 0x009e }
        L_0x007f:
            r0.reuse()     // Catch:{ Exception -> 0x00a1, all -> 0x009e }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Photo> r0 = r3.photos     // Catch:{ Exception -> 0x00a1, all -> 0x009e }
            r0.add(r5)     // Catch:{ Exception -> 0x00a1, all -> 0x009e }
            goto L_0x0056
        L_0x0088:
            r1.dispose()     // Catch:{ Exception -> 0x00a1, all -> 0x009e }
            org.telegram.messenger.DispatchQueue r0 = org.telegram.messenger.Utilities.stageQueue     // Catch:{ Exception -> 0x00a6 }
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda181 r12 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda181     // Catch:{ Exception -> 0x00a6 }
            r1 = r12
            r2 = r13
            r5 = r15
            r7 = r17
            r8 = r14
            r9 = r18
            r1.<init>(r2, r3, r4, r5, r7, r8, r9)     // Catch:{ Exception -> 0x00a6 }
            r0.postRunnable(r12)     // Catch:{ Exception -> 0x00a6 }
            goto L_0x00af
        L_0x009e:
            r0 = move-exception
            r11 = r1
            goto L_0x00b0
        L_0x00a1:
            r0 = move-exception
            r11 = r1
            goto L_0x00a7
        L_0x00a4:
            r0 = move-exception
            goto L_0x00b0
        L_0x00a6:
            r0 = move-exception
        L_0x00a7:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x00a4 }
            if (r11 == 0) goto L_0x00af
            r11.dispose()
        L_0x00af:
            return
        L_0x00b0:
            if (r11 == 0) goto L_0x00b5
            r11.dispose()
        L_0x00b5:
            goto L_0x00b7
        L_0x00b6:
            throw r0
        L_0x00b7:
            goto L_0x00b6
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$getDialogPhotos$65(int, long, int, int):void");
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$getDialogPhotos$64(TLRPC$photos_Photos tLRPC$photos_Photos, ArrayList arrayList, long j, int i, int i2, int i3) {
        getMessagesController().processLoadedUserPhotos(tLRPC$photos_Photos, arrayList, j, i, i2, true, i3);
    }

    public void clearUserPhotos(long j) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda66(this, j));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$clearUserPhotos$66(long j) {
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM user_photos WHERE uid = " + j).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void clearUserPhoto(long j, long j2) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda84(this, j, j2));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$clearUserPhoto$67(long j, long j2) {
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM user_photos WHERE uid = " + j + " AND id = " + j2).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void resetDialogs(TLRPC$messages_Dialogs tLRPC$messages_Dialogs, int i, int i2, int i3, int i4, int i5, LongSparseArray<TLRPC$Dialog> longSparseArray, LongSparseArray<MessageObject> longSparseArray2, TLRPC$Message tLRPC$Message, int i6) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda179(this, tLRPC$messages_Dialogs, i6, i2, i3, i4, i5, tLRPC$Message, i, longSparseArray, longSparseArray2));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:121:? A[RETURN, SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:80:0x02d0 A[Catch:{ Exception -> 0x0325, all -> 0x0322 }, LOOP:7: B:78:0x02cd->B:80:0x02d0, LOOP_END] */
    /* JADX WARNING: Removed duplicated region for block: B:95:0x0331  */
    /* JADX WARNING: Removed duplicated region for block: B:99:0x033d  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$resetDialogs$69(org.telegram.tgnet.TLRPC$messages_Dialogs r33, int r34, int r35, int r36, int r37, int r38, org.telegram.tgnet.TLRPC$Message r39, int r40, androidx.collection.LongSparseArray r41, androidx.collection.LongSparseArray r42) {
        /*
            r32 = this;
            r1 = r32
            r0 = r33
            r11 = r39
            java.util.ArrayList r2 = new java.util.ArrayList     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r2.<init>()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r3 = r0.dialogs     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            int r3 = r3.size()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            int r3 = r3 - r34
            org.telegram.messenger.support.LongSparseIntArray r4 = new org.telegram.messenger.support.LongSparseIntArray     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r4.<init>()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.util.ArrayList r5 = new java.util.ArrayList     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r5.<init>()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.util.ArrayList r6 = new java.util.ArrayList     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r6.<init>()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r7 = r34
        L_0x0024:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r8 = r0.dialogs     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            int r8 = r8.size()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            if (r7 >= r8) goto L_0x0040
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r8 = r0.dialogs     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.Object r8 = r8.get(r7)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.tgnet.TLRPC$Dialog r8 = (org.telegram.tgnet.TLRPC$Dialog) r8     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            long r8 = r8.id     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.Long r8 = java.lang.Long.valueOf(r8)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r6.add(r8)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            int r7 = r7 + 1
            goto L_0x0024
        L_0x0040:
            org.telegram.SQLite.SQLiteDatabase r7 = r1.database     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.String r8 = "SELECT did, pinned FROM dialogs WHERE 1"
            r9 = 0
            java.lang.Object[] r10 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.SQLite.SQLiteCursor r7 = r7.queryFinalized(r8, r10)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r8 = 0
        L_0x004c:
            boolean r10 = r7.next()     // Catch:{ Exception -> 0x031f, all -> 0x031c }
            if (r10 == 0) goto L_0x0079
            long r13 = r7.longValue(r9)     // Catch:{ Exception -> 0x031f, all -> 0x031c }
            r10 = 1
            int r10 = r7.intValue(r10)     // Catch:{ Exception -> 0x031f, all -> 0x031c }
            boolean r15 = org.telegram.messenger.DialogObject.isEncryptedDialog(r13)     // Catch:{ Exception -> 0x031f, all -> 0x031c }
            if (r15 != 0) goto L_0x004c
            java.lang.Long r15 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x031f, all -> 0x031c }
            r2.add(r15)     // Catch:{ Exception -> 0x031f, all -> 0x031c }
            if (r10 <= 0) goto L_0x004c
            int r8 = java.lang.Math.max(r10, r8)     // Catch:{ Exception -> 0x031f, all -> 0x031c }
            r4.put(r13, r10)     // Catch:{ Exception -> 0x031f, all -> 0x031c }
            java.lang.Long r10 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x031f, all -> 0x031c }
            r5.add(r10)     // Catch:{ Exception -> 0x031f, all -> 0x031c }
            goto L_0x004c
        L_0x0079:
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda196 r10 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda196     // Catch:{ Exception -> 0x031f, all -> 0x031c }
            r10.<init>(r4)     // Catch:{ Exception -> 0x031f, all -> 0x031c }
            java.util.Collections.sort(r5, r10)     // Catch:{ Exception -> 0x031f, all -> 0x031c }
        L_0x0081:
            int r10 = r5.size()     // Catch:{ Exception -> 0x031f, all -> 0x031c }
            r13 = 0
            if (r10 >= r3) goto L_0x0091
            java.lang.Long r10 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x031f, all -> 0x031c }
            r5.add(r9, r10)     // Catch:{ Exception -> 0x031f, all -> 0x031c }
            goto L_0x0081
        L_0x0091:
            r7.dispose()     // Catch:{ Exception -> 0x031f, all -> 0x031c }
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r7.<init>()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.String r10 = "("
            r7.append(r10)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.String r10 = ","
            java.lang.String r2 = android.text.TextUtils.join(r10, r2)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r7.append(r2)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.String r2 = ")"
            r7.append(r2)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.String r2 = r7.toString()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.SQLite.SQLiteDatabase r7 = r1.database     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r7.beginTransaction()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.SQLite.SQLiteDatabase r7 = r1.database     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.StringBuilder r10 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r10.<init>()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.String r15 = "DELETE FROM chat_pinned_count WHERE uid IN "
            r10.append(r15)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r10.append(r2)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.String r10 = r10.toString()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.executeFast(r10)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.stepThis()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r7.dispose()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.SQLite.SQLiteDatabase r7 = r1.database     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.StringBuilder r10 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r10.<init>()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.String r15 = "DELETE FROM chat_pinned_v2 WHERE uid IN "
            r10.append(r15)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r10.append(r2)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.String r10 = r10.toString()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.executeFast(r10)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.stepThis()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r7.dispose()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.SQLite.SQLiteDatabase r7 = r1.database     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.StringBuilder r10 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r10.<init>()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.String r15 = "DELETE FROM dialogs WHERE did IN "
            r10.append(r15)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r10.append(r2)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.String r10 = r10.toString()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.executeFast(r10)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.stepThis()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r7.dispose()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.SQLite.SQLiteDatabase r7 = r1.database     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.StringBuilder r10 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r10.<init>()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.String r15 = "DELETE FROM messages_v2 WHERE uid IN "
            r10.append(r15)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r10.append(r2)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.String r10 = r10.toString()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.executeFast(r10)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.stepThis()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r7.dispose()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.SQLite.SQLiteDatabase r7 = r1.database     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.String r10 = "DELETE FROM polls_v2 WHERE 1"
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.executeFast(r10)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.stepThis()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r7.dispose()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.SQLite.SQLiteDatabase r7 = r1.database     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.StringBuilder r10 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r10.<init>()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.String r15 = "DELETE FROM bot_keyboard WHERE uid IN "
            r10.append(r15)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r10.append(r2)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.String r10 = r10.toString()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.executeFast(r10)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.stepThis()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r7.dispose()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.SQLite.SQLiteDatabase r7 = r1.database     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.StringBuilder r10 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r10.<init>()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.String r15 = "DELETE FROM media_v4 WHERE uid IN "
            r10.append(r15)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r10.append(r2)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.String r10 = r10.toString()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.executeFast(r10)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.stepThis()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r7.dispose()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.SQLite.SQLiteDatabase r7 = r1.database     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.StringBuilder r10 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r10.<init>()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.String r15 = "DELETE FROM messages_holes WHERE uid IN "
            r10.append(r15)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r10.append(r2)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.String r10 = r10.toString()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.executeFast(r10)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.stepThis()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r7.dispose()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.SQLite.SQLiteDatabase r7 = r1.database     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.StringBuilder r10 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r10.<init>()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.String r15 = "DELETE FROM media_holes_v2 WHERE uid IN "
            r10.append(r15)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r10.append(r2)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.String r2 = r10.toString()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r7.executeFast(r2)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.stepThis()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r2.dispose()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r2.commitTransaction()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r2 = 0
        L_0x01ba:
            if (r2 >= r3) goto L_0x0216
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r7 = r0.dialogs     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            int r10 = r34 + r2
            java.lang.Object r7 = r7.get(r10)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.tgnet.TLRPC$Dialog r7 = (org.telegram.tgnet.TLRPC$Dialog) r7     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            boolean r10 = r7 instanceof org.telegram.tgnet.TLRPC$TL_dialog     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            if (r10 == 0) goto L_0x01cf
            boolean r10 = r7.pinned     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            if (r10 != 0) goto L_0x01cf
            goto L_0x0210
        L_0x01cf:
            long r12 = r7.id     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.Long r10 = java.lang.Long.valueOf(r12)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            int r10 = r5.indexOf(r10)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            long r12 = r7.id     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.Long r12 = java.lang.Long.valueOf(r12)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            int r12 = r6.indexOf(r12)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r13 = -1
            if (r10 == r13) goto L_0x0207
            if (r12 == r13) goto L_0x0207
            if (r10 != r12) goto L_0x01f5
            long r9 = r7.id     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            int r9 = r4.get(r9, r13)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            if (r9 == r13) goto L_0x0207
            r7.pinnedNum = r9     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            goto L_0x0207
        L_0x01f5:
            java.lang.Object r9 = r5.get(r12)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.Long r9 = (java.lang.Long) r9     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            long r9 = r9.longValue()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            int r9 = r4.get(r9, r13)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            if (r9 == r13) goto L_0x0207
            r7.pinnedNum = r9     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
        L_0x0207:
            int r9 = r7.pinnedNum     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            if (r9 != 0) goto L_0x0210
            int r9 = r3 - r2
            int r9 = r9 + r8
            r7.pinnedNum = r9     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
        L_0x0210:
            int r2 = r2 + 1
            r9 = 0
            r13 = 0
            goto L_0x01ba
        L_0x0216:
            r2 = 0
            r1.putDialogsInternal(r0, r2)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r5 = r35
            r6 = r36
            r7 = r37
            r8 = r38
            r1.lambda$saveDiffParams$32(r5, r6, r7, r8)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.messenger.UserConfig r3 = r32.getUserConfig()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            int r3 = r3.getTotalDialogsCount(r2)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r2 = r0.dialogs     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            int r2 = r2.size()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            int r3 = r3 + r2
            int r2 = r11.id     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            int r4 = r11.date     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.tgnet.TLRPC$Peer r9 = r11.peer_id     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            long r12 = r9.channel_id     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r16 = 0
            int r10 = (r12 > r16 ? 1 : (r12 == r16 ? 0 : -1))
            if (r10 == 0) goto L_0x0269
            r9 = 0
        L_0x0243:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r10 = r0.chats     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            int r10 = r10.size()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            if (r9 >= r10) goto L_0x025f
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r10 = r0.chats     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.Object r10 = r10.get(r9)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.tgnet.TLRPC$Chat r10 = (org.telegram.tgnet.TLRPC$Chat) r10     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            long r14 = r10.id     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            int r18 = (r14 > r12 ? 1 : (r14 == r12 ? 0 : -1))
            if (r18 != 0) goto L_0x025c
            long r9 = r10.access_hash     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            goto L_0x0261
        L_0x025c:
            int r9 = r9 + 1
            goto L_0x0243
        L_0x025f:
            r9 = 0
        L_0x0261:
            r30 = r9
            r13 = r12
            r9 = 0
        L_0x0266:
            r16 = 0
            goto L_0x02cc
        L_0x0269:
            long r12 = r9.chat_id     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r14 = 0
            int r10 = (r12 > r14 ? 1 : (r12 == r14 ? 0 : -1))
            if (r10 == 0) goto L_0x0299
            r9 = 0
        L_0x0272:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r10 = r0.chats     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            int r10 = r10.size()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            if (r9 >= r10) goto L_0x028e
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r10 = r0.chats     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.Object r10 = r10.get(r9)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.tgnet.TLRPC$Chat r10 = (org.telegram.tgnet.TLRPC$Chat) r10     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            long r14 = r10.id     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            int r18 = (r14 > r12 ? 1 : (r14 == r12 ? 0 : -1))
            if (r18 != 0) goto L_0x028b
            long r9 = r10.access_hash     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            goto L_0x0290
        L_0x028b:
            int r9 = r9 + 1
            goto L_0x0272
        L_0x028e:
            r9 = 0
        L_0x0290:
            r30 = r9
            r16 = r12
            r9 = 0
            r13 = 0
            goto L_0x02cc
        L_0x0299:
            long r9 = r9.user_id     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r12 = 0
            int r14 = (r9 > r12 ? 1 : (r9 == r12 ? 0 : -1))
            if (r14 == 0) goto L_0x02c4
            r14 = 0
        L_0x02a2:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r15 = r0.users     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            int r15 = r15.size()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            if (r14 >= r15) goto L_0x02c6
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r15 = r0.users     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            java.lang.Object r15 = r15.get(r14)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.tgnet.TLRPC$User r15 = (org.telegram.tgnet.TLRPC$User) r15     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            long r12 = r15.id     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            int r18 = (r12 > r9 ? 1 : (r12 == r9 ? 0 : -1))
            if (r18 != 0) goto L_0x02bf
            long r12 = r15.access_hash     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r30 = r12
            r13 = 0
            goto L_0x0266
        L_0x02bf:
            int r14 = r14 + 1
            r12 = 0
            goto L_0x02a2
        L_0x02c4:
            r9 = 0
        L_0x02c6:
            r13 = 0
            r16 = 0
            r30 = 0
        L_0x02cc:
            r12 = 0
        L_0x02cd:
            r15 = 2
            if (r12 >= r15) goto L_0x02ef
            org.telegram.messenger.UserConfig r18 = r32.getUserConfig()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r19 = r12
            r20 = r2
            r21 = r4
            r22 = r9
            r24 = r16
            r26 = r13
            r28 = r30
            r18.setDialogsLoadOffset(r19, r20, r21, r22, r24, r26, r28)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.messenger.UserConfig r15 = r32.getUserConfig()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r15.setTotalDialogsCount(r12, r3)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            int r12 = r12 + 1
            goto L_0x02cd
        L_0x02ef:
            org.telegram.messenger.UserConfig r2 = r32.getUserConfig()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r3 = 0
            r2.draftsLoaded = r3     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.messenger.UserConfig r2 = r32.getUserConfig()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r2.saveConfig(r3)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.messenger.MessagesController r2 = r32.getMessagesController()     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            r3 = r33
            r4 = r40
            r5 = r35
            r6 = r36
            r7 = r37
            r8 = r38
            r9 = r41
            r10 = r42
            r11 = r39
            r2.completeDialogsReset(r3, r4, r5, r6, r7, r8, r9, r10, r11)     // Catch:{ Exception -> 0x0325, all -> 0x0322 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database
            r0.commitTransaction()
            goto L_0x0334
        L_0x031c:
            r0 = move-exception
            r12 = r7
            goto L_0x0336
        L_0x031f:
            r0 = move-exception
            r12 = r7
            goto L_0x0327
        L_0x0322:
            r0 = move-exception
            r12 = 0
            goto L_0x0336
        L_0x0325:
            r0 = move-exception
            r12 = 0
        L_0x0327:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0335 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database
            r0.commitTransaction()
            if (r12 == 0) goto L_0x0334
            r12.dispose()
        L_0x0334:
            return
        L_0x0335:
            r0 = move-exception
        L_0x0336:
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database
            r2.commitTransaction()
            if (r12 == 0) goto L_0x0340
            r12.dispose()
        L_0x0340:
            goto L_0x0342
        L_0x0341:
            throw r0
        L_0x0342:
            goto L_0x0341
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$resetDialogs$69(org.telegram.tgnet.TLRPC$messages_Dialogs, int, int, int, int, int, org.telegram.tgnet.TLRPC$Message, int, androidx.collection.LongSparseArray, androidx.collection.LongSparseArray):void");
    }

    /* access modifiers changed from: private */
    public static /* synthetic */ int lambda$resetDialogs$68(LongSparseIntArray longSparseIntArray, Long l, Long l2) {
        int i = longSparseIntArray.get(l.longValue());
        int i2 = longSparseIntArray.get(l2.longValue());
        if (i < i2) {
            return 1;
        }
        return i > i2 ? -1 : 0;
    }

    public void putDialogPhotos(long j, TLRPC$photos_Photos tLRPC$photos_Photos, ArrayList<TLRPC$Message> arrayList) {
        if (tLRPC$photos_Photos != null) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda109(this, j, tLRPC$photos_Photos, arrayList));
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$putDialogPhotos$70(long j, TLRPC$photos_Photos tLRPC$photos_Photos, ArrayList arrayList) {
        SQLitePreparedStatement sQLitePreparedStatement = null;
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM user_photos WHERE uid = " + j).stepThis().dispose();
            SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO user_photos VALUES(?, ?, ?)");
            int size = tLRPC$photos_Photos.photos.size();
            for (int i = 0; i < size; i++) {
                TLRPC$Photo tLRPC$Photo = tLRPC$photos_Photos.photos.get(i);
                if (!(tLRPC$Photo instanceof TLRPC$TL_photoEmpty)) {
                    executeFast.requery();
                    int objectSize = tLRPC$Photo.getObjectSize();
                    if (arrayList != null) {
                        objectSize += ((TLRPC$Message) arrayList.get(i)).getObjectSize();
                    }
                    NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(objectSize);
                    tLRPC$Photo.serializeToStream(nativeByteBuffer);
                    if (arrayList != null) {
                        ((TLRPC$Message) arrayList.get(i)).serializeToStream(nativeByteBuffer);
                    }
                    executeFast.bindLong(1, j);
                    executeFast.bindLong(2, tLRPC$Photo.id);
                    executeFast.bindByteBuffer(3, nativeByteBuffer);
                    executeFast.step();
                    nativeByteBuffer.reuse();
                }
            }
            executeFast.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (sQLitePreparedStatement != null) {
                sQLitePreparedStatement.dispose();
            }
        } catch (Throwable th) {
            if (sQLitePreparedStatement != null) {
                sQLitePreparedStatement.dispose();
            }
            throw th;
        }
    }

    public void emptyMessagesMedia(long j, ArrayList<Integer> arrayList) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda140(this, arrayList, j));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:102:0x0203  */
    /* JADX WARNING: Removed duplicated region for block: B:104:0x0208  */
    /* JADX WARNING: Removed duplicated region for block: B:113:0x01b7 A[SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:115:? A[RETURN, SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:42:0x012c A[Catch:{ Exception -> 0x01cd, all -> 0x01c8 }] */
    /* JADX WARNING: Removed duplicated region for block: B:43:0x0132 A[Catch:{ Exception -> 0x01cd, all -> 0x01c8 }] */
    /* JADX WARNING: Removed duplicated region for block: B:46:0x013d A[Catch:{ Exception -> 0x01cd, all -> 0x01c8 }] */
    /* JADX WARNING: Removed duplicated region for block: B:47:0x013f A[Catch:{ Exception -> 0x01cd, all -> 0x01c8 }] */
    /* JADX WARNING: Removed duplicated region for block: B:52:0x014f A[Catch:{ Exception -> 0x01cd, all -> 0x01c8 }] */
    /* JADX WARNING: Removed duplicated region for block: B:53:0x0151 A[Catch:{ Exception -> 0x01cd, all -> 0x01c8 }] */
    /* JADX WARNING: Removed duplicated region for block: B:56:0x0162 A[Catch:{ Exception -> 0x01cd, all -> 0x01c8 }] */
    /* JADX WARNING: Removed duplicated region for block: B:57:0x0176 A[Catch:{ Exception -> 0x01cd, all -> 0x01c8 }] */
    /* JADX WARNING: Removed duplicated region for block: B:60:0x0180 A[Catch:{ Exception -> 0x01cd, all -> 0x01c8 }] */
    /* JADX WARNING: Removed duplicated region for block: B:65:0x018b A[Catch:{ Exception -> 0x01cd, all -> 0x01c8 }] */
    /* JADX WARNING: Removed duplicated region for block: B:68:0x01a0 A[Catch:{ Exception -> 0x01cd, all -> 0x01c8 }] */
    /* JADX WARNING: Removed duplicated region for block: B:69:0x01a4 A[Catch:{ Exception -> 0x01cd, all -> 0x01c8 }] */
    /* JADX WARNING: Removed duplicated region for block: B:72:0x01af A[Catch:{ Exception -> 0x01cd, all -> 0x01c8 }] */
    /* JADX WARNING: Removed duplicated region for block: B:74:0x01b4 A[Catch:{ Exception -> 0x01cd, all -> 0x01c8 }] */
    /* JADX WARNING: Removed duplicated region for block: B:97:0x01f7  */
    /* JADX WARNING: Removed duplicated region for block: B:99:0x01fc  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$emptyMessagesMedia$73(java.util.ArrayList r19, long r20) {
        /*
            r18 = this;
            r7 = r18
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x01ee, all -> 0x01e9 }
            r0.<init>()     // Catch:{ Exception -> 0x01ee, all -> 0x01e9 }
            java.util.ArrayList r9 = new java.util.ArrayList     // Catch:{ Exception -> 0x01ee, all -> 0x01e9 }
            r9.<init>()     // Catch:{ Exception -> 0x01ee, all -> 0x01e9 }
            java.util.ArrayList r10 = new java.util.ArrayList     // Catch:{ Exception -> 0x01ee, all -> 0x01e9 }
            r10.<init>()     // Catch:{ Exception -> 0x01ee, all -> 0x01e9 }
            java.util.ArrayList r11 = new java.util.ArrayList     // Catch:{ Exception -> 0x01ee, all -> 0x01e9 }
            r11.<init>()     // Catch:{ Exception -> 0x01ee, all -> 0x01e9 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x01ee, all -> 0x01e9 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x01ee, all -> 0x01e9 }
            java.lang.String r3 = "SELECT data, mid, date, uid, custom_params FROM messages_v2 WHERE mid IN (%s) AND uid = %d"
            r12 = 2
            java.lang.Object[] r4 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x01ee, all -> 0x01e9 }
            java.lang.String r5 = ","
            r6 = r19
            java.lang.String r5 = android.text.TextUtils.join(r5, r6)     // Catch:{ Exception -> 0x01ee, all -> 0x01e9 }
            r13 = 0
            r4[r13] = r5     // Catch:{ Exception -> 0x01ee, all -> 0x01e9 }
            java.lang.Long r5 = java.lang.Long.valueOf(r20)     // Catch:{ Exception -> 0x01ee, all -> 0x01e9 }
            r14 = 1
            r4[r14] = r5     // Catch:{ Exception -> 0x01ee, all -> 0x01e9 }
            java.lang.String r2 = java.lang.String.format(r2, r3, r4)     // Catch:{ Exception -> 0x01ee, all -> 0x01e9 }
            java.lang.Object[] r3 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x01ee, all -> 0x01e9 }
            org.telegram.SQLite.SQLiteCursor r15 = r1.queryFinalized(r2, r3)     // Catch:{ Exception -> 0x01ee, all -> 0x01e9 }
        L_0x003b:
            boolean r1 = r15.next()     // Catch:{ Exception -> 0x01e6, all -> 0x01e3 }
            r6 = 4
            r5 = 3
            if (r1 == 0) goto L_0x00b9
            org.telegram.tgnet.NativeByteBuffer r1 = r15.byteBufferValue(r13)     // Catch:{ Exception -> 0x01e6, all -> 0x01e3 }
            if (r1 == 0) goto L_0x00b7
            int r2 = r1.readInt32(r13)     // Catch:{ Exception -> 0x01e6, all -> 0x01e3 }
            org.telegram.tgnet.TLRPC$Message r4 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r1, r2, r13)     // Catch:{ Exception -> 0x01e6, all -> 0x01e3 }
            org.telegram.messenger.UserConfig r2 = r18.getUserConfig()     // Catch:{ Exception -> 0x01e6, all -> 0x01e3 }
            long r2 = r2.clientUserId     // Catch:{ Exception -> 0x01e6, all -> 0x01e3 }
            r4.readAttachPath(r1, r2)     // Catch:{ Exception -> 0x01e6, all -> 0x01e3 }
            r1.reuse()     // Catch:{ Exception -> 0x01e6, all -> 0x01e3 }
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r4.media     // Catch:{ Exception -> 0x01e6, all -> 0x01e3 }
            if (r1 == 0) goto L_0x00b7
            r16 = 1
            r1 = r18
            r2 = r4
            r3 = r0
            r8 = r4
            r4 = r10
            r13 = 3
            r5 = r9
            r6 = r16
            boolean r1 = r1.addFilesToDelete(r2, r3, r4, r5, r6)     // Catch:{ Exception -> 0x01e6, all -> 0x01e3 }
            if (r1 != 0) goto L_0x0074
            goto L_0x00b7
        L_0x0074:
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r8.media     // Catch:{ Exception -> 0x01e6, all -> 0x01e3 }
            org.telegram.tgnet.TLRPC$Document r2 = r1.document     // Catch:{ Exception -> 0x01e6, all -> 0x01e3 }
            if (r2 == 0) goto L_0x0082
            org.telegram.tgnet.TLRPC$TL_documentEmpty r2 = new org.telegram.tgnet.TLRPC$TL_documentEmpty     // Catch:{ Exception -> 0x01e6, all -> 0x01e3 }
            r2.<init>()     // Catch:{ Exception -> 0x01e6, all -> 0x01e3 }
            r1.document = r2     // Catch:{ Exception -> 0x01e6, all -> 0x01e3 }
            goto L_0x008d
        L_0x0082:
            org.telegram.tgnet.TLRPC$Photo r2 = r1.photo     // Catch:{ Exception -> 0x01e6, all -> 0x01e3 }
            if (r2 == 0) goto L_0x008d
            org.telegram.tgnet.TLRPC$TL_photoEmpty r2 = new org.telegram.tgnet.TLRPC$TL_photoEmpty     // Catch:{ Exception -> 0x01e6, all -> 0x01e3 }
            r2.<init>()     // Catch:{ Exception -> 0x01e6, all -> 0x01e3 }
            r1.photo = r2     // Catch:{ Exception -> 0x01e6, all -> 0x01e3 }
        L_0x008d:
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r8.media     // Catch:{ Exception -> 0x01e6, all -> 0x01e3 }
            int r2 = r1.flags     // Catch:{ Exception -> 0x01e6, all -> 0x01e3 }
            r2 = r2 & -2
            r1.flags = r2     // Catch:{ Exception -> 0x01e6, all -> 0x01e3 }
            int r1 = r15.intValue(r14)     // Catch:{ Exception -> 0x01e6, all -> 0x01e3 }
            r8.id = r1     // Catch:{ Exception -> 0x01e6, all -> 0x01e3 }
            int r1 = r15.intValue(r12)     // Catch:{ Exception -> 0x01e6, all -> 0x01e3 }
            r8.date = r1     // Catch:{ Exception -> 0x01e6, all -> 0x01e3 }
            long r1 = r15.longValue(r13)     // Catch:{ Exception -> 0x01e6, all -> 0x01e3 }
            r8.dialog_id = r1     // Catch:{ Exception -> 0x01e6, all -> 0x01e3 }
            r1 = 4
            org.telegram.tgnet.NativeByteBuffer r1 = r15.byteBufferValue(r1)     // Catch:{ Exception -> 0x01e6, all -> 0x01e3 }
            if (r1 == 0) goto L_0x00b4
            org.telegram.messenger.MessageCustomParamsHelper.readLocalParams(r8, r1)     // Catch:{ Exception -> 0x01e6, all -> 0x01e3 }
            r1.reuse()     // Catch:{ Exception -> 0x01e6, all -> 0x01e3 }
        L_0x00b4:
            r11.add(r8)     // Catch:{ Exception -> 0x01e6, all -> 0x01e3 }
        L_0x00b7:
            r13 = 0
            goto L_0x003b
        L_0x00b9:
            r1 = 4
            r13 = 3
            r15.dispose()     // Catch:{ Exception -> 0x01e6, all -> 0x01e3 }
            r7.deleteFromDownloadQueue(r10, r14)     // Catch:{ Exception -> 0x01ee, all -> 0x01e9 }
            boolean r2 = r11.isEmpty()     // Catch:{ Exception -> 0x01ee, all -> 0x01e9 }
            if (r2 != 0) goto L_0x01d2
            org.telegram.SQLite.SQLiteDatabase r2 = r7.database     // Catch:{ Exception -> 0x01ee, all -> 0x01e9 }
            java.lang.String r3 = "REPLACE INTO messages_v2 VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?, ?, ?, ?, ?, ?, 0, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r3)     // Catch:{ Exception -> 0x01ee, all -> 0x01e9 }
            r3 = 0
        L_0x00d0:
            int r4 = r11.size()     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            if (r3 >= r4) goto L_0x01bc
            java.lang.Object r4 = r11.get(r3)     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            org.telegram.tgnet.TLRPC$Message r4 = (org.telegram.tgnet.TLRPC$Message) r4     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            org.telegram.tgnet.NativeByteBuffer r5 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            int r6 = r4.getObjectSize()     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            r5.<init>((int) r6)     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            r4.serializeToStream(r5)     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            r2.requery()     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            int r6 = r4.id     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            r2.bindInteger(r14, r6)     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            long r14 = r4.dialog_id     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            r2.bindLong(r12, r14)     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            int r6 = org.telegram.messenger.MessageObject.getUnreadFlags(r4)     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            r2.bindInteger(r13, r6)     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            int r6 = r4.send_state     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            r2.bindInteger(r1, r6)     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            r6 = 5
            int r8 = r4.date     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            r2.bindInteger(r6, r8)     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            r6 = 6
            r2.bindByteBuffer((int) r6, (org.telegram.tgnet.NativeByteBuffer) r5)     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            r6 = 7
            boolean r8 = org.telegram.messenger.MessageObject.isOut(r4)     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            if (r8 != 0) goto L_0x0119
            boolean r8 = r4.from_scheduled     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            if (r8 == 0) goto L_0x0117
            goto L_0x0119
        L_0x0117:
            r8 = 0
            goto L_0x011a
        L_0x0119:
            r8 = 1
        L_0x011a:
            r2.bindInteger(r6, r8)     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            r6 = 8
            int r8 = r4.ttl     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            r2.bindInteger(r6, r8)     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            int r6 = r4.flags     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            r6 = r6 & 1024(0x400, float:1.435E-42)
            r8 = 9
            if (r6 == 0) goto L_0x0132
            int r6 = r4.views     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            r2.bindInteger(r8, r6)     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            goto L_0x0139
        L_0x0132:
            int r6 = r7.getMessageMediaType(r4)     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            r2.bindInteger(r8, r6)     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
        L_0x0139:
            int r6 = r4.stickerVerified     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            if (r6 != 0) goto L_0x013f
            r6 = 1
            goto L_0x0144
        L_0x013f:
            if (r6 != r12) goto L_0x0143
            r6 = 2
            goto L_0x0144
        L_0x0143:
            r6 = 0
        L_0x0144:
            r8 = 10
            r2.bindInteger(r8, r6)     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            r6 = 11
            boolean r8 = r4.mentioned     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            if (r8 == 0) goto L_0x0151
            r8 = 1
            goto L_0x0152
        L_0x0151:
            r8 = 0
        L_0x0152:
            r2.bindInteger(r6, r8)     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            r6 = 12
            int r8 = r4.forwards     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            r2.bindInteger(r6, r8)     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            org.telegram.tgnet.TLRPC$MessageReplies r6 = r4.replies     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            r8 = 13
            if (r6 == 0) goto L_0x0176
            org.telegram.tgnet.NativeByteBuffer r6 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            org.telegram.tgnet.TLRPC$MessageReplies r10 = r4.replies     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            int r10 = r10.getObjectSize()     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            r6.<init>((int) r10)     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            org.telegram.tgnet.TLRPC$MessageReplies r10 = r4.replies     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            r10.serializeToStream(r6)     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            r2.bindByteBuffer((int) r8, (org.telegram.tgnet.NativeByteBuffer) r6)     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            goto L_0x017a
        L_0x0176:
            r2.bindNull(r8)     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            r6 = 0
        L_0x017a:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r8 = r4.reply_to     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            r10 = 14
            if (r8 == 0) goto L_0x018b
            int r14 = r8.reply_to_top_id     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            if (r14 == 0) goto L_0x0185
            goto L_0x0187
        L_0x0185:
            int r14 = r8.reply_to_msg_id     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
        L_0x0187:
            r2.bindInteger(r10, r14)     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            goto L_0x018f
        L_0x018b:
            r8 = 0
            r2.bindInteger(r10, r8)     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
        L_0x018f:
            r8 = 15
            long r14 = org.telegram.messenger.MessageObject.getChannelId(r4)     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            r2.bindLong(r8, r14)     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            org.telegram.tgnet.NativeByteBuffer r4 = org.telegram.messenger.MessageCustomParamsHelper.writeLocalParams(r4)     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            r8 = 16
            if (r4 == 0) goto L_0x01a4
            r2.bindByteBuffer((int) r8, (org.telegram.tgnet.NativeByteBuffer) r4)     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            goto L_0x01a7
        L_0x01a4:
            r2.bindNull(r8)     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
        L_0x01a7:
            r2.step()     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            r5.reuse()     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            if (r6 == 0) goto L_0x01b2
            r6.reuse()     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
        L_0x01b2:
            if (r4 == 0) goto L_0x01b7
            r4.reuse()     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
        L_0x01b7:
            int r3 = r3 + 1
            r14 = 1
            goto L_0x00d0
        L_0x01bc:
            r2.dispose()     // Catch:{ Exception -> 0x01cd, all -> 0x01c8 }
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda133 r1 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda133     // Catch:{ Exception -> 0x01ee, all -> 0x01e9 }
            r1.<init>(r7, r11)     // Catch:{ Exception -> 0x01ee, all -> 0x01e9 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r1)     // Catch:{ Exception -> 0x01ee, all -> 0x01e9 }
            goto L_0x01d2
        L_0x01c8:
            r0 = move-exception
            r17 = r2
            r8 = 0
            goto L_0x0201
        L_0x01cd:
            r0 = move-exception
            r17 = r2
            r8 = 0
            goto L_0x01f2
        L_0x01d2:
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda129 r1 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda129     // Catch:{ Exception -> 0x01ee, all -> 0x01e9 }
            r1.<init>(r7, r9)     // Catch:{ Exception -> 0x01ee, all -> 0x01e9 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r1)     // Catch:{ Exception -> 0x01ee, all -> 0x01e9 }
            org.telegram.messenger.FileLoader r1 = r18.getFileLoader()     // Catch:{ Exception -> 0x01ee, all -> 0x01e9 }
            r2 = 0
            r1.deleteFiles(r0, r2)     // Catch:{ Exception -> 0x01ee, all -> 0x01e9 }
            goto L_0x01ff
        L_0x01e3:
            r0 = move-exception
            r8 = r15
            goto L_0x01eb
        L_0x01e6:
            r0 = move-exception
            r8 = r15
            goto L_0x01f0
        L_0x01e9:
            r0 = move-exception
            r8 = 0
        L_0x01eb:
            r17 = 0
            goto L_0x0201
        L_0x01ee:
            r0 = move-exception
            r8 = 0
        L_0x01f0:
            r17 = 0
        L_0x01f2:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0200 }
            if (r8 == 0) goto L_0x01fa
            r8.dispose()
        L_0x01fa:
            if (r17 == 0) goto L_0x01ff
            r17.dispose()
        L_0x01ff:
            return
        L_0x0200:
            r0 = move-exception
        L_0x0201:
            if (r8 == 0) goto L_0x0206
            r8.dispose()
        L_0x0206:
            if (r17 == 0) goto L_0x020b
            r17.dispose()
        L_0x020b:
            goto L_0x020d
        L_0x020c:
            throw r0
        L_0x020d:
            goto L_0x020c
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$emptyMessagesMedia$73(java.util.ArrayList, long):void");
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$emptyMessagesMedia$71(ArrayList arrayList) {
        for (int i = 0; i < arrayList.size(); i++) {
            getNotificationCenter().postNotificationName(NotificationCenter.updateMessageMedia, arrayList.get(i));
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$emptyMessagesMedia$72(ArrayList arrayList) {
        getFileLoader().cancelLoadFiles(arrayList);
    }

    public void updateMessagePollResults(long j, TLRPC$Poll tLRPC$Poll, TLRPC$PollResults tLRPC$PollResults) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda107(this, j, tLRPC$Poll, tLRPC$PollResults));
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v0, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v2, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v4, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v7, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v8, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v10, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v15, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v24, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v25, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* access modifiers changed from: private */
    /* JADX WARNING: Failed to insert additional move for type inference */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:66:0x0172  */
    /* JADX WARNING: Removed duplicated region for block: B:77:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$updateMessagePollResults$74(long r21, org.telegram.tgnet.TLRPC$Poll r23, org.telegram.tgnet.TLRPC$PollResults r24) {
        /*
            r20 = this;
            r1 = r20
            r0 = r23
            r2 = r24
            r3 = 0
            org.telegram.SQLite.SQLiteDatabase r4 = r1.database     // Catch:{ Exception -> 0x0166 }
            java.util.Locale r5 = java.util.Locale.US     // Catch:{ Exception -> 0x0166 }
            java.lang.String r6 = "SELECT uid, mid FROM polls_v2 WHERE id = %d"
            r7 = 1
            java.lang.Object[] r8 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x0166 }
            java.lang.Long r9 = java.lang.Long.valueOf(r21)     // Catch:{ Exception -> 0x0166 }
            r10 = 0
            r8[r10] = r9     // Catch:{ Exception -> 0x0166 }
            java.lang.String r5 = java.lang.String.format(r5, r6, r8)     // Catch:{ Exception -> 0x0166 }
            java.lang.Object[] r6 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x0166 }
            org.telegram.SQLite.SQLiteCursor r4 = r4.queryFinalized(r5, r6)     // Catch:{ Exception -> 0x0166 }
            r5 = r3
        L_0x0022:
            boolean r6 = r4.next()     // Catch:{ Exception -> 0x0161, all -> 0x015e }
            if (r6 == 0) goto L_0x004f
            long r8 = r4.longValue(r10)     // Catch:{ Exception -> 0x0161, all -> 0x015e }
            if (r5 != 0) goto L_0x0033
            androidx.collection.LongSparseArray r5 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x0161, all -> 0x015e }
            r5.<init>()     // Catch:{ Exception -> 0x0161, all -> 0x015e }
        L_0x0033:
            java.lang.Object r6 = r5.get(r8)     // Catch:{ Exception -> 0x0161, all -> 0x015e }
            java.util.ArrayList r6 = (java.util.ArrayList) r6     // Catch:{ Exception -> 0x0161, all -> 0x015e }
            if (r6 != 0) goto L_0x0043
            java.util.ArrayList r6 = new java.util.ArrayList     // Catch:{ Exception -> 0x0161, all -> 0x015e }
            r6.<init>()     // Catch:{ Exception -> 0x0161, all -> 0x015e }
            r5.put(r8, r6)     // Catch:{ Exception -> 0x0161, all -> 0x015e }
        L_0x0043:
            int r8 = r4.intValue(r7)     // Catch:{ Exception -> 0x0161, all -> 0x015e }
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x0161, all -> 0x015e }
            r6.add(r8)     // Catch:{ Exception -> 0x0161, all -> 0x015e }
            goto L_0x0022
        L_0x004f:
            r4.dispose()     // Catch:{ Exception -> 0x0161, all -> 0x015e }
            if (r5 == 0) goto L_0x015b
            org.telegram.SQLite.SQLiteDatabase r4 = r1.database     // Catch:{ Exception -> 0x0166 }
            r4.beginTransaction()     // Catch:{ Exception -> 0x0166 }
            org.telegram.SQLite.SQLiteDatabase r4 = r1.database     // Catch:{ Exception -> 0x0166 }
            java.lang.String r6 = "UPDATE messages_v2 SET data = ? WHERE mid = ? AND uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r4 = r4.executeFast(r6)     // Catch:{ Exception -> 0x0166 }
            int r6 = r5.size()     // Catch:{ Exception -> 0x0166 }
            r8 = 0
        L_0x0066:
            if (r8 >= r6) goto L_0x0153
            long r11 = r5.keyAt(r8)     // Catch:{ Exception -> 0x0166 }
            java.lang.Object r9 = r5.valueAt(r8)     // Catch:{ Exception -> 0x0166 }
            java.util.ArrayList r9 = (java.util.ArrayList) r9     // Catch:{ Exception -> 0x0166 }
            int r13 = r9.size()     // Catch:{ Exception -> 0x0166 }
            r14 = 0
        L_0x0077:
            if (r14 >= r13) goto L_0x0144
            java.lang.Object r15 = r9.get(r14)     // Catch:{ Exception -> 0x0140, all -> 0x013c }
            java.lang.Integer r15 = (java.lang.Integer) r15     // Catch:{ Exception -> 0x0140, all -> 0x013c }
            org.telegram.SQLite.SQLiteDatabase r7 = r1.database     // Catch:{ Exception -> 0x0140, all -> 0x013c }
            java.util.Locale r10 = java.util.Locale.US     // Catch:{ Exception -> 0x0140, all -> 0x013c }
            r22 = r3
            java.lang.String r3 = "SELECT data FROM messages_v2 WHERE mid = %d AND uid = %d"
            r17 = r5
            r5 = 2
            r18 = r6
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x0138, all -> 0x0134 }
            r5 = 0
            r6[r5] = r15     // Catch:{ Exception -> 0x0138, all -> 0x0134 }
            java.lang.Long r19 = java.lang.Long.valueOf(r11)     // Catch:{ Exception -> 0x0138, all -> 0x0134 }
            r16 = 1
            r6[r16] = r19     // Catch:{ Exception -> 0x0138, all -> 0x0134 }
            java.lang.String r3 = java.lang.String.format(r10, r3, r6)     // Catch:{ Exception -> 0x0138, all -> 0x0134 }
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x0138, all -> 0x0134 }
            org.telegram.SQLite.SQLiteCursor r3 = r7.queryFinalized(r3, r6)     // Catch:{ Exception -> 0x0138, all -> 0x0134 }
            boolean r6 = r3.next()     // Catch:{ Exception -> 0x0166 }
            if (r6 == 0) goto L_0x0102
            org.telegram.tgnet.NativeByteBuffer r6 = r3.byteBufferValue(r5)     // Catch:{ Exception -> 0x0166 }
            if (r6 == 0) goto L_0x00fc
            int r7 = r6.readInt32(r5)     // Catch:{ Exception -> 0x0166 }
            org.telegram.tgnet.TLRPC$Message r7 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r6, r7, r5)     // Catch:{ Exception -> 0x0166 }
            org.telegram.messenger.UserConfig r5 = r20.getUserConfig()     // Catch:{ Exception -> 0x0166 }
            r19 = r9
            long r9 = r5.clientUserId     // Catch:{ Exception -> 0x0166 }
            r7.readAttachPath(r6, r9)     // Catch:{ Exception -> 0x0166 }
            r6.reuse()     // Catch:{ Exception -> 0x0166 }
            org.telegram.tgnet.TLRPC$MessageMedia r5 = r7.media     // Catch:{ Exception -> 0x0166 }
            boolean r6 = r5 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaPoll     // Catch:{ Exception -> 0x0166 }
            if (r6 == 0) goto L_0x00fe
            org.telegram.tgnet.TLRPC$TL_messageMediaPoll r5 = (org.telegram.tgnet.TLRPC$TL_messageMediaPoll) r5     // Catch:{ Exception -> 0x0166 }
            if (r0 == 0) goto L_0x00d1
            r5.poll = r0     // Catch:{ Exception -> 0x0166 }
        L_0x00d1:
            if (r2 == 0) goto L_0x00d6
            org.telegram.messenger.MessageObject.updatePollResults(r5, r2)     // Catch:{ Exception -> 0x0166 }
        L_0x00d6:
            org.telegram.tgnet.NativeByteBuffer r5 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0166 }
            int r6 = r7.getObjectSize()     // Catch:{ Exception -> 0x0166 }
            r5.<init>((int) r6)     // Catch:{ Exception -> 0x0166 }
            r7.serializeToStream(r5)     // Catch:{ Exception -> 0x0166 }
            r4.requery()     // Catch:{ Exception -> 0x0166 }
            r6 = 1
            r4.bindByteBuffer((int) r6, (org.telegram.tgnet.NativeByteBuffer) r5)     // Catch:{ Exception -> 0x0166 }
            int r6 = r15.intValue()     // Catch:{ Exception -> 0x0166 }
            r7 = 2
            r4.bindInteger(r7, r6)     // Catch:{ Exception -> 0x0166 }
            r6 = 3
            r4.bindLong(r6, r11)     // Catch:{ Exception -> 0x0166 }
            r4.step()     // Catch:{ Exception -> 0x0166 }
            r5.reuse()     // Catch:{ Exception -> 0x0166 }
            goto L_0x00fe
        L_0x00fc:
            r19 = r9
        L_0x00fe:
            r9 = 0
            r16 = 1
            goto L_0x0125
        L_0x0102:
            r19 = r9
            org.telegram.SQLite.SQLiteDatabase r5 = r1.database     // Catch:{ Exception -> 0x0166 }
            java.lang.String r6 = "DELETE FROM polls_v2 WHERE mid = %d AND uid = %d"
            r7 = 2
            java.lang.Object[] r7 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x0166 }
            r9 = 0
            r7[r9] = r15     // Catch:{ Exception -> 0x0166 }
            java.lang.Long r15 = java.lang.Long.valueOf(r11)     // Catch:{ Exception -> 0x0166 }
            r16 = 1
            r7[r16] = r15     // Catch:{ Exception -> 0x0166 }
            java.lang.String r6 = java.lang.String.format(r10, r6, r7)     // Catch:{ Exception -> 0x0166 }
            org.telegram.SQLite.SQLitePreparedStatement r5 = r5.executeFast(r6)     // Catch:{ Exception -> 0x0166 }
            org.telegram.SQLite.SQLitePreparedStatement r5 = r5.stepThis()     // Catch:{ Exception -> 0x0166 }
            r5.dispose()     // Catch:{ Exception -> 0x0166 }
        L_0x0125:
            r3.dispose()     // Catch:{ Exception -> 0x0166 }
            int r14 = r14 + 1
            r5 = r17
            r6 = r18
            r9 = r19
            r7 = 1
            r10 = 0
            goto L_0x0077
        L_0x0134:
            r0 = move-exception
            r3 = r22
            goto L_0x0170
        L_0x0138:
            r0 = move-exception
            r3 = r22
            goto L_0x0167
        L_0x013c:
            r0 = move-exception
            r22 = r3
            goto L_0x0170
        L_0x0140:
            r0 = move-exception
            r22 = r3
            goto L_0x0167
        L_0x0144:
            r22 = r3
            r17 = r5
            r18 = r6
            r9 = 0
            r16 = 1
            int r8 = r8 + 1
            r7 = 1
            r10 = 0
            goto L_0x0066
        L_0x0153:
            r4.dispose()     // Catch:{ Exception -> 0x0166 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0166 }
            r0.commitTransaction()     // Catch:{ Exception -> 0x0166 }
        L_0x015b:
            if (r3 == 0) goto L_0x016f
            goto L_0x016c
        L_0x015e:
            r0 = move-exception
            r3 = r4
            goto L_0x0170
        L_0x0161:
            r0 = move-exception
            r3 = r4
            goto L_0x0167
        L_0x0164:
            r0 = move-exception
            goto L_0x0170
        L_0x0166:
            r0 = move-exception
        L_0x0167:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0164 }
            if (r3 == 0) goto L_0x016f
        L_0x016c:
            r3.dispose()
        L_0x016f:
            return
        L_0x0170:
            if (r3 == 0) goto L_0x0175
            r3.dispose()
        L_0x0175:
            goto L_0x0177
        L_0x0176:
            throw r0
        L_0x0177:
            goto L_0x0176
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$updateMessagePollResults$74(long, org.telegram.tgnet.TLRPC$Poll, org.telegram.tgnet.TLRPC$PollResults):void");
    }

    public void updateMessageReactions(long j, int i, TLRPC$TL_messageReactions tLRPC$TL_messageReactions) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda50(this, i, j, tLRPC$TL_messageReactions));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:26:0x009b  */
    /* JADX WARNING: Removed duplicated region for block: B:29:0x00a6  */
    /* JADX WARNING: Removed duplicated region for block: B:33:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$updateMessageReactions$75(int r10, long r11, org.telegram.tgnet.TLRPC$TL_messageReactions r13) {
        /*
            r9 = this;
            r0 = 0
            org.telegram.SQLite.SQLiteDatabase r1 = r9.database     // Catch:{ Exception -> 0x0090 }
            r1.beginTransaction()     // Catch:{ Exception -> 0x0090 }
            org.telegram.SQLite.SQLiteDatabase r1 = r9.database     // Catch:{ Exception -> 0x0090 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x0090 }
            java.lang.String r3 = "SELECT data FROM messages_v2 WHERE mid = %d AND uid = %d"
            r4 = 2
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0090 }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r10)     // Catch:{ Exception -> 0x0090 }
            r7 = 0
            r5[r7] = r6     // Catch:{ Exception -> 0x0090 }
            java.lang.Long r6 = java.lang.Long.valueOf(r11)     // Catch:{ Exception -> 0x0090 }
            r8 = 1
            r5[r8] = r6     // Catch:{ Exception -> 0x0090 }
            java.lang.String r2 = java.lang.String.format(r2, r3, r5)     // Catch:{ Exception -> 0x0090 }
            java.lang.Object[] r3 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x0090 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r2, r3)     // Catch:{ Exception -> 0x0090 }
            boolean r2 = r1.next()     // Catch:{ Exception -> 0x008b, all -> 0x0088 }
            if (r2 == 0) goto L_0x007a
            org.telegram.tgnet.NativeByteBuffer r2 = r1.byteBufferValue(r7)     // Catch:{ Exception -> 0x008b, all -> 0x0088 }
            if (r2 == 0) goto L_0x007a
            int r3 = r2.readInt32(r7)     // Catch:{ Exception -> 0x008b, all -> 0x0088 }
            org.telegram.tgnet.TLRPC$Message r3 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r2, r3, r7)     // Catch:{ Exception -> 0x008b, all -> 0x0088 }
            if (r3 == 0) goto L_0x0077
            org.telegram.messenger.UserConfig r5 = r9.getUserConfig()     // Catch:{ Exception -> 0x008b, all -> 0x0088 }
            long r5 = r5.clientUserId     // Catch:{ Exception -> 0x008b, all -> 0x0088 }
            r3.readAttachPath(r2, r5)     // Catch:{ Exception -> 0x008b, all -> 0x0088 }
            r2.reuse()     // Catch:{ Exception -> 0x008b, all -> 0x0088 }
            org.telegram.messenger.MessageObject.updateReactions(r3, r13)     // Catch:{ Exception -> 0x008b, all -> 0x0088 }
            org.telegram.SQLite.SQLiteDatabase r13 = r9.database     // Catch:{ Exception -> 0x008b, all -> 0x0088 }
            java.lang.String r2 = "UPDATE messages_v2 SET data = ? WHERE mid = ? AND uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r13 = r13.executeFast(r2)     // Catch:{ Exception -> 0x008b, all -> 0x0088 }
            org.telegram.tgnet.NativeByteBuffer r2 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x008b, all -> 0x0088 }
            int r5 = r3.getObjectSize()     // Catch:{ Exception -> 0x008b, all -> 0x0088 }
            r2.<init>((int) r5)     // Catch:{ Exception -> 0x008b, all -> 0x0088 }
            r3.serializeToStream(r2)     // Catch:{ Exception -> 0x008b, all -> 0x0088 }
            r13.requery()     // Catch:{ Exception -> 0x008b, all -> 0x0088 }
            r13.bindByteBuffer((int) r8, (org.telegram.tgnet.NativeByteBuffer) r2)     // Catch:{ Exception -> 0x008b, all -> 0x0088 }
            r13.bindInteger(r4, r10)     // Catch:{ Exception -> 0x008b, all -> 0x0088 }
            r10 = 3
            r13.bindLong(r10, r11)     // Catch:{ Exception -> 0x008b, all -> 0x0088 }
            r13.step()     // Catch:{ Exception -> 0x008b, all -> 0x0088 }
            r2.reuse()     // Catch:{ Exception -> 0x008b, all -> 0x0088 }
            r13.dispose()     // Catch:{ Exception -> 0x008b, all -> 0x0088 }
            goto L_0x007a
        L_0x0077:
            r2.reuse()     // Catch:{ Exception -> 0x008b, all -> 0x0088 }
        L_0x007a:
            r1.dispose()     // Catch:{ Exception -> 0x008b, all -> 0x0088 }
            org.telegram.SQLite.SQLiteDatabase r10 = r9.database     // Catch:{ Exception -> 0x0090 }
            r10.commitTransaction()     // Catch:{ Exception -> 0x0090 }
            org.telegram.SQLite.SQLiteDatabase r10 = r9.database
            r10.commitTransaction()
            goto L_0x009e
        L_0x0088:
            r10 = move-exception
            r0 = r1
            goto L_0x009f
        L_0x008b:
            r10 = move-exception
            r0 = r1
            goto L_0x0091
        L_0x008e:
            r10 = move-exception
            goto L_0x009f
        L_0x0090:
            r10 = move-exception
        L_0x0091:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r10)     // Catch:{ all -> 0x008e }
            org.telegram.SQLite.SQLiteDatabase r10 = r9.database
            r10.commitTransaction()
            if (r0 == 0) goto L_0x009e
            r0.dispose()
        L_0x009e:
            return
        L_0x009f:
            org.telegram.SQLite.SQLiteDatabase r11 = r9.database
            r11.commitTransaction()
            if (r0 == 0) goto L_0x00a9
            r0.dispose()
        L_0x00a9:
            throw r10
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$updateMessageReactions$75(int, long, org.telegram.tgnet.TLRPC$TL_messageReactions):void");
    }

    public void updateMessageVoiceTranscriptionOpen(long j, int i, TLRPC$Message tLRPC$Message) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda48(this, i, j, tLRPC$Message));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:24:0x0064  */
    /* JADX WARNING: Removed duplicated region for block: B:27:0x006f  */
    /* JADX WARNING: Removed duplicated region for block: B:31:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$updateMessageVoiceTranscriptionOpen$76(int r5, long r6, org.telegram.tgnet.TLRPC$Message r8) {
        /*
            r4 = this;
            r0 = 0
            org.telegram.SQLite.SQLiteDatabase r1 = r4.database     // Catch:{ Exception -> 0x0059 }
            r1.beginTransaction()     // Catch:{ Exception -> 0x0059 }
            org.telegram.tgnet.TLRPC$Message r1 = r4.getMessageWithCustomParamsOnly(r5, r6)     // Catch:{ Exception -> 0x0059 }
            boolean r2 = r8.voiceTranscriptionOpen     // Catch:{ Exception -> 0x0059 }
            r1.voiceTranscriptionOpen = r2     // Catch:{ Exception -> 0x0059 }
            boolean r2 = r8.voiceTranscriptionRated     // Catch:{ Exception -> 0x0059 }
            r1.voiceTranscriptionRated = r2     // Catch:{ Exception -> 0x0059 }
            boolean r2 = r8.voiceTranscriptionFinal     // Catch:{ Exception -> 0x0059 }
            r1.voiceTranscriptionFinal = r2     // Catch:{ Exception -> 0x0059 }
            long r2 = r8.voiceTranscriptionId     // Catch:{ Exception -> 0x0059 }
            r1.voiceTranscriptionId = r2     // Catch:{ Exception -> 0x0059 }
            org.telegram.SQLite.SQLiteDatabase r8 = r4.database     // Catch:{ Exception -> 0x0059 }
            java.lang.String r2 = "UPDATE messages_v2 SET custom_params = ? WHERE mid = ? AND uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r8 = r8.executeFast(r2)     // Catch:{ Exception -> 0x0059 }
            r8.requery()     // Catch:{ Exception -> 0x0054, all -> 0x0051 }
            org.telegram.tgnet.NativeByteBuffer r1 = org.telegram.messenger.MessageCustomParamsHelper.writeLocalParams(r1)     // Catch:{ Exception -> 0x0054, all -> 0x0051 }
            r2 = 1
            if (r1 == 0) goto L_0x0030
            r8.bindByteBuffer((int) r2, (org.telegram.tgnet.NativeByteBuffer) r1)     // Catch:{ Exception -> 0x0054, all -> 0x0051 }
            goto L_0x0033
        L_0x0030:
            r8.bindNull(r2)     // Catch:{ Exception -> 0x0054, all -> 0x0051 }
        L_0x0033:
            r2 = 2
            r8.bindInteger(r2, r5)     // Catch:{ Exception -> 0x0054, all -> 0x0051 }
            r5 = 3
            r8.bindLong(r5, r6)     // Catch:{ Exception -> 0x0054, all -> 0x0051 }
            r8.step()     // Catch:{ Exception -> 0x0054, all -> 0x0051 }
            r8.dispose()     // Catch:{ Exception -> 0x0054, all -> 0x0051 }
            if (r1 == 0) goto L_0x0046
            r1.reuse()     // Catch:{ Exception -> 0x0059 }
        L_0x0046:
            org.telegram.SQLite.SQLiteDatabase r5 = r4.database     // Catch:{ Exception -> 0x0059 }
            r5.commitTransaction()     // Catch:{ Exception -> 0x0059 }
            org.telegram.SQLite.SQLiteDatabase r5 = r4.database
            r5.commitTransaction()
            goto L_0x0067
        L_0x0051:
            r5 = move-exception
            r0 = r8
            goto L_0x0068
        L_0x0054:
            r5 = move-exception
            r0 = r8
            goto L_0x005a
        L_0x0057:
            r5 = move-exception
            goto L_0x0068
        L_0x0059:
            r5 = move-exception
        L_0x005a:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r5)     // Catch:{ all -> 0x0057 }
            org.telegram.SQLite.SQLiteDatabase r5 = r4.database
            r5.commitTransaction()
            if (r0 == 0) goto L_0x0067
            r0.dispose()
        L_0x0067:
            return
        L_0x0068:
            org.telegram.SQLite.SQLiteDatabase r6 = r4.database
            r6.commitTransaction()
            if (r0 == 0) goto L_0x0072
            r0.dispose()
        L_0x0072:
            throw r5
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$updateMessageVoiceTranscriptionOpen$76(int, long, org.telegram.tgnet.TLRPC$Message):void");
    }

    public void updateMessageVoiceTranscription(long j, int i, String str, long j2, boolean z) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda51(this, i, j, z, j2, str));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:24:0x005a  */
    /* JADX WARNING: Removed duplicated region for block: B:27:0x0065  */
    /* JADX WARNING: Removed duplicated region for block: B:31:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$updateMessageVoiceTranscription$77(int r3, long r4, boolean r6, long r7, java.lang.String r9) {
        /*
            r2 = this;
            r0 = 0
            org.telegram.SQLite.SQLiteDatabase r1 = r2.database     // Catch:{ Exception -> 0x004f }
            r1.beginTransaction()     // Catch:{ Exception -> 0x004f }
            org.telegram.tgnet.TLRPC$Message r1 = r2.getMessageWithCustomParamsOnly(r3, r4)     // Catch:{ Exception -> 0x004f }
            r1.voiceTranscriptionFinal = r6     // Catch:{ Exception -> 0x004f }
            r1.voiceTranscriptionId = r7     // Catch:{ Exception -> 0x004f }
            r1.voiceTranscription = r9     // Catch:{ Exception -> 0x004f }
            org.telegram.SQLite.SQLiteDatabase r6 = r2.database     // Catch:{ Exception -> 0x004f }
            java.lang.String r7 = "UPDATE messages_v2 SET custom_params = ? WHERE mid = ? AND uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r6 = r6.executeFast(r7)     // Catch:{ Exception -> 0x004f }
            r6.requery()     // Catch:{ Exception -> 0x004a, all -> 0x0047 }
            org.telegram.tgnet.NativeByteBuffer r7 = org.telegram.messenger.MessageCustomParamsHelper.writeLocalParams(r1)     // Catch:{ Exception -> 0x004a, all -> 0x0047 }
            r8 = 1
            if (r7 == 0) goto L_0x0026
            r6.bindByteBuffer((int) r8, (org.telegram.tgnet.NativeByteBuffer) r7)     // Catch:{ Exception -> 0x004a, all -> 0x0047 }
            goto L_0x0029
        L_0x0026:
            r6.bindNull(r8)     // Catch:{ Exception -> 0x004a, all -> 0x0047 }
        L_0x0029:
            r8 = 2
            r6.bindInteger(r8, r3)     // Catch:{ Exception -> 0x004a, all -> 0x0047 }
            r3 = 3
            r6.bindLong(r3, r4)     // Catch:{ Exception -> 0x004a, all -> 0x0047 }
            r6.step()     // Catch:{ Exception -> 0x004a, all -> 0x0047 }
            r6.dispose()     // Catch:{ Exception -> 0x004a, all -> 0x0047 }
            org.telegram.SQLite.SQLiteDatabase r3 = r2.database     // Catch:{ Exception -> 0x004f }
            r3.commitTransaction()     // Catch:{ Exception -> 0x004f }
            if (r7 == 0) goto L_0x0041
            r7.reuse()     // Catch:{ Exception -> 0x004f }
        L_0x0041:
            org.telegram.SQLite.SQLiteDatabase r3 = r2.database
            r3.commitTransaction()
            goto L_0x005d
        L_0x0047:
            r3 = move-exception
            r0 = r6
            goto L_0x005e
        L_0x004a:
            r3 = move-exception
            r0 = r6
            goto L_0x0050
        L_0x004d:
            r3 = move-exception
            goto L_0x005e
        L_0x004f:
            r3 = move-exception
        L_0x0050:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r3)     // Catch:{ all -> 0x004d }
            org.telegram.SQLite.SQLiteDatabase r3 = r2.database
            r3.commitTransaction()
            if (r0 == 0) goto L_0x005d
            r0.dispose()
        L_0x005d:
            return
        L_0x005e:
            org.telegram.SQLite.SQLiteDatabase r4 = r2.database
            r4.commitTransaction()
            if (r0 == 0) goto L_0x0068
            r0.dispose()
        L_0x0068:
            throw r3
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$updateMessageVoiceTranscription$77(int, long, boolean, long, java.lang.String):void");
    }

    public void updateMessageVoiceTranscription(long j, int i, String str, TLRPC$Message tLRPC$Message) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda49(this, i, j, tLRPC$Message, str));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:24:0x0066  */
    /* JADX WARNING: Removed duplicated region for block: B:27:0x0071  */
    /* JADX WARNING: Removed duplicated region for block: B:31:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$updateMessageVoiceTranscription$78(int r5, long r6, org.telegram.tgnet.TLRPC$Message r8, java.lang.String r9) {
        /*
            r4 = this;
            r0 = 0
            org.telegram.SQLite.SQLiteDatabase r1 = r4.database     // Catch:{ Exception -> 0x005b }
            r1.beginTransaction()     // Catch:{ Exception -> 0x005b }
            org.telegram.tgnet.TLRPC$Message r1 = r4.getMessageWithCustomParamsOnly(r5, r6)     // Catch:{ Exception -> 0x005b }
            boolean r2 = r8.voiceTranscriptionOpen     // Catch:{ Exception -> 0x005b }
            r1.voiceTranscriptionOpen = r2     // Catch:{ Exception -> 0x005b }
            boolean r2 = r8.voiceTranscriptionRated     // Catch:{ Exception -> 0x005b }
            r1.voiceTranscriptionRated = r2     // Catch:{ Exception -> 0x005b }
            boolean r2 = r8.voiceTranscriptionFinal     // Catch:{ Exception -> 0x005b }
            r1.voiceTranscriptionFinal = r2     // Catch:{ Exception -> 0x005b }
            long r2 = r8.voiceTranscriptionId     // Catch:{ Exception -> 0x005b }
            r1.voiceTranscriptionId = r2     // Catch:{ Exception -> 0x005b }
            r1.voiceTranscription = r9     // Catch:{ Exception -> 0x005b }
            org.telegram.SQLite.SQLiteDatabase r8 = r4.database     // Catch:{ Exception -> 0x005b }
            java.lang.String r9 = "UPDATE messages_v2 SET custom_params = ? WHERE mid = ? AND uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r8 = r8.executeFast(r9)     // Catch:{ Exception -> 0x005b }
            r8.requery()     // Catch:{ Exception -> 0x0056, all -> 0x0053 }
            org.telegram.tgnet.NativeByteBuffer r9 = org.telegram.messenger.MessageCustomParamsHelper.writeLocalParams(r1)     // Catch:{ Exception -> 0x0056, all -> 0x0053 }
            r1 = 1
            if (r9 == 0) goto L_0x0032
            r8.bindByteBuffer((int) r1, (org.telegram.tgnet.NativeByteBuffer) r9)     // Catch:{ Exception -> 0x0056, all -> 0x0053 }
            goto L_0x0035
        L_0x0032:
            r8.bindNull(r1)     // Catch:{ Exception -> 0x0056, all -> 0x0053 }
        L_0x0035:
            r1 = 2
            r8.bindInteger(r1, r5)     // Catch:{ Exception -> 0x0056, all -> 0x0053 }
            r5 = 3
            r8.bindLong(r5, r6)     // Catch:{ Exception -> 0x0056, all -> 0x0053 }
            r8.step()     // Catch:{ Exception -> 0x0056, all -> 0x0053 }
            r8.dispose()     // Catch:{ Exception -> 0x0056, all -> 0x0053 }
            org.telegram.SQLite.SQLiteDatabase r5 = r4.database     // Catch:{ Exception -> 0x005b }
            r5.commitTransaction()     // Catch:{ Exception -> 0x005b }
            if (r9 == 0) goto L_0x004d
            r9.reuse()     // Catch:{ Exception -> 0x005b }
        L_0x004d:
            org.telegram.SQLite.SQLiteDatabase r5 = r4.database
            r5.commitTransaction()
            goto L_0x0069
        L_0x0053:
            r5 = move-exception
            r0 = r8
            goto L_0x006a
        L_0x0056:
            r5 = move-exception
            r0 = r8
            goto L_0x005c
        L_0x0059:
            r5 = move-exception
            goto L_0x006a
        L_0x005b:
            r5 = move-exception
        L_0x005c:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r5)     // Catch:{ all -> 0x0059 }
            org.telegram.SQLite.SQLiteDatabase r5 = r4.database
            r5.commitTransaction()
            if (r0 == 0) goto L_0x0069
            r0.dispose()
        L_0x0069:
            return
        L_0x006a:
            org.telegram.SQLite.SQLiteDatabase r6 = r4.database
            r6.commitTransaction()
            if (r0 == 0) goto L_0x0074
            r0.dispose()
        L_0x0074:
            throw r5
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$updateMessageVoiceTranscription$78(int, long, org.telegram.tgnet.TLRPC$Message, java.lang.String):void");
    }

    public void updateMessageCustomParams(long j, TLRPC$Message tLRPC$Message) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda171(this, tLRPC$Message, j));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:24:0x005b  */
    /* JADX WARNING: Removed duplicated region for block: B:27:0x0066  */
    /* JADX WARNING: Removed duplicated region for block: B:31:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$updateMessageCustomParams$79(org.telegram.tgnet.TLRPC$Message r5, long r6) {
        /*
            r4 = this;
            r0 = 0
            org.telegram.SQLite.SQLiteDatabase r1 = r4.database     // Catch:{ Exception -> 0x0050 }
            r1.beginTransaction()     // Catch:{ Exception -> 0x0050 }
            int r1 = r5.id     // Catch:{ Exception -> 0x0050 }
            org.telegram.tgnet.TLRPC$Message r1 = r4.getMessageWithCustomParamsOnly(r1, r6)     // Catch:{ Exception -> 0x0050 }
            org.telegram.messenger.MessageCustomParamsHelper.copyParams(r5, r1)     // Catch:{ Exception -> 0x0050 }
            org.telegram.SQLite.SQLiteDatabase r2 = r4.database     // Catch:{ Exception -> 0x0050 }
            java.lang.String r3 = "UPDATE messages_v2 SET custom_params = ? WHERE mid = ? AND uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r3)     // Catch:{ Exception -> 0x0050 }
            r2.requery()     // Catch:{ Exception -> 0x004b, all -> 0x0048 }
            org.telegram.tgnet.NativeByteBuffer r1 = org.telegram.messenger.MessageCustomParamsHelper.writeLocalParams(r1)     // Catch:{ Exception -> 0x004b, all -> 0x0048 }
            r3 = 1
            if (r1 == 0) goto L_0x0025
            r2.bindByteBuffer((int) r3, (org.telegram.tgnet.NativeByteBuffer) r1)     // Catch:{ Exception -> 0x004b, all -> 0x0048 }
            goto L_0x0028
        L_0x0025:
            r2.bindNull(r3)     // Catch:{ Exception -> 0x004b, all -> 0x0048 }
        L_0x0028:
            r3 = 2
            int r5 = r5.id     // Catch:{ Exception -> 0x004b, all -> 0x0048 }
            r2.bindInteger(r3, r5)     // Catch:{ Exception -> 0x004b, all -> 0x0048 }
            r5 = 3
            r2.bindLong(r5, r6)     // Catch:{ Exception -> 0x004b, all -> 0x0048 }
            r2.step()     // Catch:{ Exception -> 0x004b, all -> 0x0048 }
            r2.dispose()     // Catch:{ Exception -> 0x004b, all -> 0x0048 }
            org.telegram.SQLite.SQLiteDatabase r5 = r4.database     // Catch:{ Exception -> 0x0050 }
            r5.commitTransaction()     // Catch:{ Exception -> 0x0050 }
            if (r1 == 0) goto L_0x0042
            r1.reuse()     // Catch:{ Exception -> 0x0050 }
        L_0x0042:
            org.telegram.SQLite.SQLiteDatabase r5 = r4.database
            r5.commitTransaction()
            goto L_0x005e
        L_0x0048:
            r5 = move-exception
            r0 = r2
            goto L_0x005f
        L_0x004b:
            r5 = move-exception
            r0 = r2
            goto L_0x0051
        L_0x004e:
            r5 = move-exception
            goto L_0x005f
        L_0x0050:
            r5 = move-exception
        L_0x0051:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r5)     // Catch:{ all -> 0x004e }
            org.telegram.SQLite.SQLiteDatabase r5 = r4.database
            r5.commitTransaction()
            if (r0 == 0) goto L_0x005e
            r0.dispose()
        L_0x005e:
            return
        L_0x005f:
            org.telegram.SQLite.SQLiteDatabase r6 = r4.database
            r6.commitTransaction()
            if (r0 == 0) goto L_0x0069
            r0.dispose()
        L_0x0069:
            throw r5
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$updateMessageCustomParams$79(org.telegram.tgnet.TLRPC$Message, long):void");
    }

    private TLRPC$Message getMessageWithCustomParamsOnly(int i, long j) {
        TLRPC$TL_message tLRPC$TL_message = new TLRPC$TL_message();
        SQLiteCursor sQLiteCursor = null;
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            SQLiteCursor queryFinalized = sQLiteDatabase.queryFinalized("SELECT custom_params FROM messages_v2 WHERE mid = " + i + " AND uid = " + j, new Object[0]);
            if (queryFinalized.next()) {
                MessageCustomParamsHelper.readLocalParams(tLRPC$TL_message, queryFinalized.byteBufferValue(0));
            }
            queryFinalized.dispose();
        } catch (SQLiteException e) {
            FileLog.e((Throwable) e);
            if (sQLiteCursor != null) {
                sQLiteCursor.dispose();
            }
        } catch (Throwable th) {
            if (sQLiteCursor != null) {
                sQLiteCursor.dispose();
            }
            throw th;
        }
        return tLRPC$TL_message;
    }

    public void getNewTask(LongSparseArray<ArrayList<Integer>> longSparseArray, LongSparseArray<ArrayList<Integer>> longSparseArray2) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda119(this, longSparseArray, longSparseArray2));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:21:0x00a5, code lost:
        if (r15 > 0) goto L_0x00a7;
     */
    /* JADX WARNING: Removed duplicated region for block: B:27:0x00b0 A[Catch:{ Exception -> 0x00eb, all -> 0x00e7 }] */
    /* JADX WARNING: Removed duplicated region for block: B:30:0x00b9 A[Catch:{ Exception -> 0x00eb, all -> 0x00e7 }] */
    /* JADX WARNING: Removed duplicated region for block: B:35:0x00ca A[Catch:{ Exception -> 0x00eb, all -> 0x00e7 }] */
    /* JADX WARNING: Removed duplicated region for block: B:49:0x00f9  */
    /* JADX WARNING: Removed duplicated region for block: B:55:0x00d2 A[SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$getNewTask$80(androidx.collection.LongSparseArray r14, androidx.collection.LongSparseArray r15) {
        /*
            r13 = this;
            java.lang.String r0 = ","
            r1 = 2
            r2 = 0
            r3 = 1
            r4 = 0
            if (r14 == 0) goto L_0x0045
            int r5 = r14.size()     // Catch:{ Exception -> 0x0042 }
            r6 = 0
        L_0x000d:
            if (r6 >= r5) goto L_0x0045
            org.telegram.SQLite.SQLiteDatabase r7 = r13.database     // Catch:{ Exception -> 0x0042 }
            java.util.Locale r8 = java.util.Locale.US     // Catch:{ Exception -> 0x0042 }
            java.lang.String r9 = "DELETE FROM enc_tasks_v4 WHERE mid IN(%s) AND uid = %d AND media = 0"
            java.lang.Object[] r10 = new java.lang.Object[r1]     // Catch:{ Exception -> 0x0042 }
            java.lang.Object r11 = r14.valueAt(r6)     // Catch:{ Exception -> 0x0042 }
            java.lang.Iterable r11 = (java.lang.Iterable) r11     // Catch:{ Exception -> 0x0042 }
            java.lang.String r11 = android.text.TextUtils.join(r0, r11)     // Catch:{ Exception -> 0x0042 }
            r10[r4] = r11     // Catch:{ Exception -> 0x0042 }
            long r11 = r14.keyAt(r6)     // Catch:{ Exception -> 0x0042 }
            java.lang.Long r11 = java.lang.Long.valueOf(r11)     // Catch:{ Exception -> 0x0042 }
            r10[r3] = r11     // Catch:{ Exception -> 0x0042 }
            java.lang.String r8 = java.lang.String.format(r8, r9, r10)     // Catch:{ Exception -> 0x0042 }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.executeFast(r8)     // Catch:{ Exception -> 0x0042 }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.stepThis()     // Catch:{ Exception -> 0x0042 }
            r7.dispose()     // Catch:{ Exception -> 0x0042 }
            int r6 = r6 + 1
            goto L_0x000d
        L_0x003f:
            r14 = move-exception
            goto L_0x00f7
        L_0x0042:
            r14 = move-exception
            goto L_0x00ee
        L_0x0045:
            if (r15 == 0) goto L_0x007e
            int r14 = r15.size()     // Catch:{ Exception -> 0x0042 }
            r5 = 0
        L_0x004c:
            if (r5 >= r14) goto L_0x007e
            org.telegram.SQLite.SQLiteDatabase r6 = r13.database     // Catch:{ Exception -> 0x0042 }
            java.util.Locale r7 = java.util.Locale.US     // Catch:{ Exception -> 0x0042 }
            java.lang.String r8 = "DELETE FROM enc_tasks_v4 WHERE mid IN(%s) AND uid = %d AND media = 1"
            java.lang.Object[] r9 = new java.lang.Object[r1]     // Catch:{ Exception -> 0x0042 }
            java.lang.Object r10 = r15.valueAt(r5)     // Catch:{ Exception -> 0x0042 }
            java.lang.Iterable r10 = (java.lang.Iterable) r10     // Catch:{ Exception -> 0x0042 }
            java.lang.String r10 = android.text.TextUtils.join(r0, r10)     // Catch:{ Exception -> 0x0042 }
            r9[r4] = r10     // Catch:{ Exception -> 0x0042 }
            long r10 = r15.keyAt(r5)     // Catch:{ Exception -> 0x0042 }
            java.lang.Long r10 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x0042 }
            r9[r3] = r10     // Catch:{ Exception -> 0x0042 }
            java.lang.String r7 = java.lang.String.format(r7, r8, r9)     // Catch:{ Exception -> 0x0042 }
            org.telegram.SQLite.SQLitePreparedStatement r6 = r6.executeFast(r7)     // Catch:{ Exception -> 0x0042 }
            org.telegram.SQLite.SQLitePreparedStatement r6 = r6.stepThis()     // Catch:{ Exception -> 0x0042 }
            r6.dispose()     // Catch:{ Exception -> 0x0042 }
            int r5 = r5 + 1
            goto L_0x004c
        L_0x007e:
            org.telegram.SQLite.SQLiteDatabase r14 = r13.database     // Catch:{ Exception -> 0x0042 }
            java.lang.String r15 = "SELECT mid, date, media, uid FROM enc_tasks_v4 WHERE date = (SELECT min(date) FROM enc_tasks_v4)"
            java.lang.Object[] r0 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0042 }
            org.telegram.SQLite.SQLiteCursor r14 = r14.queryFinalized(r15, r0)     // Catch:{ Exception -> 0x0042 }
            r0 = r2
            r5 = r0
            r15 = 0
        L_0x008b:
            boolean r6 = r14.next()     // Catch:{ Exception -> 0x00eb, all -> 0x00e7 }
            if (r6 == 0) goto L_0x00dc
            int r15 = r14.intValue(r4)     // Catch:{ Exception -> 0x00eb, all -> 0x00e7 }
            int r6 = r14.intValue(r3)     // Catch:{ Exception -> 0x00eb, all -> 0x00e7 }
            int r7 = r14.intValue(r1)     // Catch:{ Exception -> 0x00eb, all -> 0x00e7 }
            r8 = 3
            long r8 = r14.longValue(r8)     // Catch:{ Exception -> 0x00eb, all -> 0x00e7 }
            r10 = -1
            if (r7 != r10) goto L_0x00ab
            if (r15 <= 0) goto L_0x00a9
        L_0x00a7:
            r7 = 1
            goto L_0x00ae
        L_0x00a9:
            r7 = 0
            goto L_0x00ae
        L_0x00ab:
            if (r7 == 0) goto L_0x00a9
            goto L_0x00a7
        L_0x00ae:
            if (r7 == 0) goto L_0x00b9
            if (r5 != 0) goto L_0x00b7
            androidx.collection.LongSparseArray r5 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x00eb, all -> 0x00e7 }
            r5.<init>()     // Catch:{ Exception -> 0x00eb, all -> 0x00e7 }
        L_0x00b7:
            r7 = r5
            goto L_0x00c2
        L_0x00b9:
            if (r0 != 0) goto L_0x00c0
            androidx.collection.LongSparseArray r0 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x00eb, all -> 0x00e7 }
            r0.<init>()     // Catch:{ Exception -> 0x00eb, all -> 0x00e7 }
        L_0x00c0:
            r7 = r5
            r5 = r0
        L_0x00c2:
            java.lang.Object r10 = r5.get(r8)     // Catch:{ Exception -> 0x00eb, all -> 0x00e7 }
            java.util.ArrayList r10 = (java.util.ArrayList) r10     // Catch:{ Exception -> 0x00eb, all -> 0x00e7 }
            if (r10 != 0) goto L_0x00d2
            java.util.ArrayList r10 = new java.util.ArrayList     // Catch:{ Exception -> 0x00eb, all -> 0x00e7 }
            r10.<init>()     // Catch:{ Exception -> 0x00eb, all -> 0x00e7 }
            r5.put(r8, r10)     // Catch:{ Exception -> 0x00eb, all -> 0x00e7 }
        L_0x00d2:
            java.lang.Integer r15 = java.lang.Integer.valueOf(r15)     // Catch:{ Exception -> 0x00eb, all -> 0x00e7 }
            r10.add(r15)     // Catch:{ Exception -> 0x00eb, all -> 0x00e7 }
            r15 = r6
            r5 = r7
            goto L_0x008b
        L_0x00dc:
            r14.dispose()     // Catch:{ Exception -> 0x00eb, all -> 0x00e7 }
            org.telegram.messenger.MessagesController r14 = r13.getMessagesController()     // Catch:{ Exception -> 0x0042 }
            r14.processLoadedDeleteTask(r15, r0, r5)     // Catch:{ Exception -> 0x0042 }
            goto L_0x00f6
        L_0x00e7:
            r15 = move-exception
            r2 = r14
            r14 = r15
            goto L_0x00f7
        L_0x00eb:
            r15 = move-exception
            r2 = r14
            r14 = r15
        L_0x00ee:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r14)     // Catch:{ all -> 0x003f }
            if (r2 == 0) goto L_0x00f6
            r2.dispose()
        L_0x00f6:
            return
        L_0x00f7:
            if (r2 == 0) goto L_0x00fc
            r2.dispose()
        L_0x00fc:
            goto L_0x00fe
        L_0x00fd:
            throw r14
        L_0x00fe:
            goto L_0x00fd
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$getNewTask$80(androidx.collection.LongSparseArray, androidx.collection.LongSparseArray):void");
    }

    public void markMentionMessageAsRead(long j, int i, long j2) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda47(this, i, j, j2));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:23:0x0098  */
    /* JADX WARNING: Removed duplicated region for block: B:25:0x009e  */
    /* JADX WARNING: Removed duplicated region for block: B:28:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$markMentionMessageAsRead$81(int r8, long r9, long r11) {
        /*
            r7 = this;
            r0 = 0
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0092 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x0092 }
            java.lang.String r3 = "UPDATE messages_v2 SET read_state = read_state | 2 WHERE mid = %d AND uid = %d"
            r4 = 2
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0092 }
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x0092 }
            r6 = 0
            r5[r6] = r8     // Catch:{ Exception -> 0x0092 }
            java.lang.Long r8 = java.lang.Long.valueOf(r9)     // Catch:{ Exception -> 0x0092 }
            r9 = 1
            r5[r9] = r8     // Catch:{ Exception -> 0x0092 }
            java.lang.String r8 = java.lang.String.format(r2, r3, r5)     // Catch:{ Exception -> 0x0092 }
            org.telegram.SQLite.SQLitePreparedStatement r8 = r1.executeFast(r8)     // Catch:{ Exception -> 0x0092 }
            org.telegram.SQLite.SQLitePreparedStatement r8 = r8.stepThis()     // Catch:{ Exception -> 0x0092 }
            r8.dispose()     // Catch:{ Exception -> 0x0092 }
            org.telegram.SQLite.SQLiteDatabase r8 = r7.database     // Catch:{ Exception -> 0x0092 }
            java.lang.StringBuilder r10 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0092 }
            r10.<init>()     // Catch:{ Exception -> 0x0092 }
            java.lang.String r1 = "SELECT unread_count_i FROM dialogs WHERE did = "
            r10.append(r1)     // Catch:{ Exception -> 0x0092 }
            r10.append(r11)     // Catch:{ Exception -> 0x0092 }
            java.lang.String r10 = r10.toString()     // Catch:{ Exception -> 0x0092 }
            java.lang.Object[] r1 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0092 }
            org.telegram.SQLite.SQLiteCursor r8 = r8.queryFinalized(r10, r1)     // Catch:{ Exception -> 0x0092 }
            boolean r10 = r8.next()     // Catch:{ Exception -> 0x008d, all -> 0x008a }
            if (r10 == 0) goto L_0x0050
            int r10 = r8.intValue(r6)     // Catch:{ Exception -> 0x008d, all -> 0x008a }
            int r10 = r10 - r9
            int r10 = java.lang.Math.max(r6, r10)     // Catch:{ Exception -> 0x008d, all -> 0x008a }
            goto L_0x0051
        L_0x0050:
            r10 = 0
        L_0x0051:
            r8.dispose()     // Catch:{ Exception -> 0x008d, all -> 0x008a }
            org.telegram.SQLite.SQLiteDatabase r8 = r7.database     // Catch:{ Exception -> 0x0092 }
            java.lang.String r1 = "UPDATE dialogs SET unread_count_i = %d WHERE did = %d"
            java.lang.Object[] r3 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0092 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r10)     // Catch:{ Exception -> 0x0092 }
            r3[r6] = r4     // Catch:{ Exception -> 0x0092 }
            java.lang.Long r4 = java.lang.Long.valueOf(r11)     // Catch:{ Exception -> 0x0092 }
            r3[r9] = r4     // Catch:{ Exception -> 0x0092 }
            java.lang.String r1 = java.lang.String.format(r2, r1, r3)     // Catch:{ Exception -> 0x0092 }
            org.telegram.SQLite.SQLitePreparedStatement r8 = r8.executeFast(r1)     // Catch:{ Exception -> 0x0092 }
            org.telegram.SQLite.SQLitePreparedStatement r8 = r8.stepThis()     // Catch:{ Exception -> 0x0092 }
            r8.dispose()     // Catch:{ Exception -> 0x0092 }
            org.telegram.messenger.support.LongSparseIntArray r8 = new org.telegram.messenger.support.LongSparseIntArray     // Catch:{ Exception -> 0x0092 }
            r8.<init>(r9)     // Catch:{ Exception -> 0x0092 }
            r8.put(r11, r10)     // Catch:{ Exception -> 0x0092 }
            if (r10 != 0) goto L_0x0082
            r7.updateFiltersReadCounter(r0, r8, r9)     // Catch:{ Exception -> 0x0092 }
        L_0x0082:
            org.telegram.messenger.MessagesController r9 = r7.getMessagesController()     // Catch:{ Exception -> 0x0092 }
            r9.processDialogsUpdateRead(r0, r8)     // Catch:{ Exception -> 0x0092 }
            goto L_0x009b
        L_0x008a:
            r9 = move-exception
            r0 = r8
            goto L_0x009c
        L_0x008d:
            r9 = move-exception
            r0 = r8
            goto L_0x0093
        L_0x0090:
            r9 = move-exception
            goto L_0x009c
        L_0x0092:
            r9 = move-exception
        L_0x0093:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r9)     // Catch:{ all -> 0x0090 }
            if (r0 == 0) goto L_0x009b
            r0.dispose()
        L_0x009b:
            return
        L_0x009c:
            if (r0 == 0) goto L_0x00a1
            r0.dispose()
        L_0x00a1:
            throw r9
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$markMentionMessageAsRead$81(int, long, long):void");
    }

    public void markMessageAsMention(long j, int i) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda40(this, i, j));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$markMessageAsMention$82(int i, long j) {
        try {
            this.database.executeFast(String.format(Locale.US, "UPDATE messages_v2 SET mention = 1, read_state = read_state & ~2 WHERE mid = %d AND uid = %d", new Object[]{Integer.valueOf(i), Long.valueOf(j)})).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void resetMentionsCount(long j, int i) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda68(this, j, i));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:27:0x0095  */
    /* JADX WARNING: Removed duplicated region for block: B:29:0x009b  */
    /* JADX WARNING: Removed duplicated region for block: B:34:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$resetMentionsCount$83(long r9, int r11) {
        /*
            r8 = this;
            r0 = 0
            org.telegram.SQLite.SQLiteDatabase r1 = r8.database     // Catch:{ Exception -> 0x008f }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x008f }
            r2.<init>()     // Catch:{ Exception -> 0x008f }
            java.lang.String r3 = "SELECT unread_count_i FROM dialogs WHERE did = "
            r2.append(r3)     // Catch:{ Exception -> 0x008f }
            r2.append(r9)     // Catch:{ Exception -> 0x008f }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x008f }
            r3 = 0
            java.lang.Object[] r4 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x008f }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r2, r4)     // Catch:{ Exception -> 0x008f }
            boolean r2 = r1.next()     // Catch:{ Exception -> 0x008a, all -> 0x0087 }
            if (r2 == 0) goto L_0x0026
            int r2 = r1.intValue(r3)     // Catch:{ Exception -> 0x008a, all -> 0x0087 }
            goto L_0x0027
        L_0x0026:
            r2 = 0
        L_0x0027:
            r1.dispose()     // Catch:{ Exception -> 0x008a, all -> 0x0087 }
            if (r2 != 0) goto L_0x002e
            if (r11 == 0) goto L_0x0098
        L_0x002e:
            r1 = 1
            if (r11 != 0) goto L_0x004e
            org.telegram.SQLite.SQLiteDatabase r2 = r8.database     // Catch:{ Exception -> 0x008f }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x008f }
            java.lang.String r5 = "UPDATE messages_v2 SET read_state = read_state | 2 WHERE uid = %d AND mention = 1 AND read_state IN(0, 1)"
            java.lang.Object[] r6 = new java.lang.Object[r1]     // Catch:{ Exception -> 0x008f }
            java.lang.Long r7 = java.lang.Long.valueOf(r9)     // Catch:{ Exception -> 0x008f }
            r6[r3] = r7     // Catch:{ Exception -> 0x008f }
            java.lang.String r4 = java.lang.String.format(r4, r5, r6)     // Catch:{ Exception -> 0x008f }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r4)     // Catch:{ Exception -> 0x008f }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.stepThis()     // Catch:{ Exception -> 0x008f }
            r2.dispose()     // Catch:{ Exception -> 0x008f }
        L_0x004e:
            org.telegram.SQLite.SQLiteDatabase r2 = r8.database     // Catch:{ Exception -> 0x008f }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x008f }
            java.lang.String r5 = "UPDATE dialogs SET unread_count_i = %d WHERE did = %d"
            r6 = 2
            java.lang.Object[] r6 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x008f }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r11)     // Catch:{ Exception -> 0x008f }
            r6[r3] = r7     // Catch:{ Exception -> 0x008f }
            java.lang.Long r3 = java.lang.Long.valueOf(r9)     // Catch:{ Exception -> 0x008f }
            r6[r1] = r3     // Catch:{ Exception -> 0x008f }
            java.lang.String r3 = java.lang.String.format(r4, r5, r6)     // Catch:{ Exception -> 0x008f }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r3)     // Catch:{ Exception -> 0x008f }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.stepThis()     // Catch:{ Exception -> 0x008f }
            r2.dispose()     // Catch:{ Exception -> 0x008f }
            org.telegram.messenger.support.LongSparseIntArray r2 = new org.telegram.messenger.support.LongSparseIntArray     // Catch:{ Exception -> 0x008f }
            r2.<init>(r1)     // Catch:{ Exception -> 0x008f }
            r2.put(r9, r11)     // Catch:{ Exception -> 0x008f }
            org.telegram.messenger.MessagesController r9 = r8.getMessagesController()     // Catch:{ Exception -> 0x008f }
            r9.processDialogsUpdateRead(r0, r2)     // Catch:{ Exception -> 0x008f }
            if (r11 != 0) goto L_0x0098
            r8.updateFiltersReadCounter(r0, r2, r1)     // Catch:{ Exception -> 0x008f }
            goto L_0x0098
        L_0x0087:
            r9 = move-exception
            r0 = r1
            goto L_0x0099
        L_0x008a:
            r9 = move-exception
            r0 = r1
            goto L_0x0090
        L_0x008d:
            r9 = move-exception
            goto L_0x0099
        L_0x008f:
            r9 = move-exception
        L_0x0090:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r9)     // Catch:{ all -> 0x008d }
            if (r0 == 0) goto L_0x0098
            r0.dispose()
        L_0x0098:
            return
        L_0x0099:
            if (r0 == 0) goto L_0x009e
            r0.dispose()
        L_0x009e:
            throw r9
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$resetMentionsCount$83(long, int):void");
    }

    public void createTaskForMid(long j, int i, int i2, int i3, int i4, boolean z) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda35(this, i2, i3, i4, i, z, j));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:26:0x00af  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$createTaskForMid$85(int r9, int r10, int r11, int r12, boolean r13, long r14) {
        /*
            r8 = this;
            r0 = 0
            int r9 = java.lang.Math.max(r9, r10)     // Catch:{ Exception -> 0x00a3 }
            int r9 = r9 + r11
            android.util.SparseArray r10 = new android.util.SparseArray     // Catch:{ Exception -> 0x00a3 }
            r10.<init>()     // Catch:{ Exception -> 0x00a3 }
            java.util.ArrayList r6 = new java.util.ArrayList     // Catch:{ Exception -> 0x00a3 }
            r6.<init>()     // Catch:{ Exception -> 0x00a3 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r12)     // Catch:{ Exception -> 0x00a3 }
            r6.add(r11)     // Catch:{ Exception -> 0x00a3 }
            r10.put(r9, r6)     // Catch:{ Exception -> 0x00a3 }
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda187 r11 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda187     // Catch:{ Exception -> 0x00a3 }
            r1 = r11
            r2 = r8
            r3 = r13
            r4 = r14
            r1.<init>(r2, r3, r4, r6)     // Catch:{ Exception -> 0x00a3 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r11)     // Catch:{ Exception -> 0x00a3 }
            org.telegram.SQLite.SQLiteDatabase r11 = r8.database     // Catch:{ Exception -> 0x00a3 }
            java.lang.String r13 = "REPLACE INTO enc_tasks_v4 VALUES(?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r11 = r11.executeFast(r13)     // Catch:{ Exception -> 0x00a3 }
            r13 = 0
            r1 = 0
        L_0x0030:
            int r2 = r10.size()     // Catch:{ Exception -> 0x009e, all -> 0x009b }
            r3 = 2
            r4 = 1
            if (r1 >= r2) goto L_0x006d
            int r2 = r10.keyAt(r1)     // Catch:{ Exception -> 0x009e, all -> 0x009b }
            java.lang.Object r5 = r10.get(r2)     // Catch:{ Exception -> 0x009e, all -> 0x009b }
            java.util.ArrayList r5 = (java.util.ArrayList) r5     // Catch:{ Exception -> 0x009e, all -> 0x009b }
            r6 = 0
        L_0x0043:
            int r7 = r5.size()     // Catch:{ Exception -> 0x009e, all -> 0x009b }
            if (r6 >= r7) goto L_0x006a
            r11.requery()     // Catch:{ Exception -> 0x009e, all -> 0x009b }
            java.lang.Object r7 = r5.get(r6)     // Catch:{ Exception -> 0x009e, all -> 0x009b }
            java.lang.Integer r7 = (java.lang.Integer) r7     // Catch:{ Exception -> 0x009e, all -> 0x009b }
            int r7 = r7.intValue()     // Catch:{ Exception -> 0x009e, all -> 0x009b }
            r11.bindInteger(r4, r7)     // Catch:{ Exception -> 0x009e, all -> 0x009b }
            r11.bindLong(r3, r14)     // Catch:{ Exception -> 0x009e, all -> 0x009b }
            r7 = 3
            r11.bindInteger(r7, r2)     // Catch:{ Exception -> 0x009e, all -> 0x009b }
            r7 = 4
            r11.bindInteger(r7, r4)     // Catch:{ Exception -> 0x009e, all -> 0x009b }
            r11.step()     // Catch:{ Exception -> 0x009e, all -> 0x009b }
            int r6 = r6 + 1
            goto L_0x0043
        L_0x006a:
            int r1 = r1 + 1
            goto L_0x0030
        L_0x006d:
            r11.dispose()     // Catch:{ Exception -> 0x009e, all -> 0x009b }
            org.telegram.SQLite.SQLiteDatabase r11 = r8.database     // Catch:{ Exception -> 0x00a3 }
            java.util.Locale r1 = java.util.Locale.US     // Catch:{ Exception -> 0x00a3 }
            java.lang.String r2 = "UPDATE messages_v2 SET ttl = 0 WHERE mid = %d AND uid = %d"
            java.lang.Object[] r3 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x00a3 }
            java.lang.Integer r12 = java.lang.Integer.valueOf(r12)     // Catch:{ Exception -> 0x00a3 }
            r3[r13] = r12     // Catch:{ Exception -> 0x00a3 }
            java.lang.Long r12 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x00a3 }
            r3[r4] = r12     // Catch:{ Exception -> 0x00a3 }
            java.lang.String r12 = java.lang.String.format(r1, r2, r3)     // Catch:{ Exception -> 0x00a3 }
            org.telegram.SQLite.SQLitePreparedStatement r11 = r11.executeFast(r12)     // Catch:{ Exception -> 0x00a3 }
            org.telegram.SQLite.SQLitePreparedStatement r11 = r11.stepThis()     // Catch:{ Exception -> 0x00a3 }
            r11.dispose()     // Catch:{ Exception -> 0x00a3 }
            org.telegram.messenger.MessagesController r11 = r8.getMessagesController()     // Catch:{ Exception -> 0x00a3 }
            r11.didAddedNewTask(r9, r14, r10)     // Catch:{ Exception -> 0x00a3 }
            goto L_0x00ac
        L_0x009b:
            r9 = move-exception
            r0 = r11
            goto L_0x00ad
        L_0x009e:
            r9 = move-exception
            r0 = r11
            goto L_0x00a4
        L_0x00a1:
            r9 = move-exception
            goto L_0x00ad
        L_0x00a3:
            r9 = move-exception
        L_0x00a4:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r9)     // Catch:{ all -> 0x00a1 }
            if (r0 == 0) goto L_0x00ac
            r0.dispose()
        L_0x00ac:
            return
        L_0x00ad:
            if (r0 == 0) goto L_0x00b2
            r0.dispose()
        L_0x00b2:
            goto L_0x00b4
        L_0x00b3:
            throw r9
        L_0x00b4:
            goto L_0x00b3
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$createTaskForMid$85(int, int, int, int, boolean, long):void");
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$createTaskForMid$84(boolean z, long j, ArrayList arrayList) {
        if (!z) {
            markMessagesContentAsRead(j, arrayList, 0);
        }
        getNotificationCenter().postNotificationName(NotificationCenter.messagesReadContent, Long.valueOf(j), arrayList);
    }

    public void createTaskForSecretChat(int i, int i2, int i3, int i4, ArrayList<Long> arrayList) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda56(this, i, arrayList, i4, i2, i3));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:62:0x015c  */
    /* JADX WARNING: Removed duplicated region for block: B:64:0x0161  */
    /* JADX WARNING: Removed duplicated region for block: B:68:0x016d  */
    /* JADX WARNING: Removed duplicated region for block: B:70:0x0172  */
    /* JADX WARNING: Removed duplicated region for block: B:80:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$createTaskForSecretChat$87(int r18, java.util.ArrayList r19, int r20, int r21, int r22) {
        /*
            r17 = this;
            r1 = r17
            r0 = r19
            r2 = r18
            long r2 = (long) r2
            long r2 = org.telegram.messenger.DialogObject.makeEncryptedDialogId(r2)     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            android.util.SparseArray r6 = new android.util.SparseArray     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            r6.<init>()     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            java.util.ArrayList r7 = new java.util.ArrayList     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            r7.<init>()     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            java.lang.StringBuilder r8 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            r8.<init>()     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            r9 = 3
            java.lang.String r10 = ","
            r11 = 2
            r12 = 1
            r13 = 0
            if (r0 != 0) goto L_0x0047
            org.telegram.SQLite.SQLiteDatabase r14 = r1.database     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            java.util.Locale r15 = java.util.Locale.US     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            java.lang.String r4 = "SELECT mid, ttl FROM messages_v2 WHERE uid = %d AND out = %d AND read_state > 0 AND ttl > 0 AND date <= %d AND send_state = 0 AND media != 1"
            java.lang.Object[] r5 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            java.lang.Long r16 = java.lang.Long.valueOf(r2)     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            r5[r13] = r16     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            java.lang.Integer r16 = java.lang.Integer.valueOf(r20)     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            r5[r12] = r16     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            java.lang.Integer r16 = java.lang.Integer.valueOf(r21)     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            r5[r11] = r16     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            java.lang.String r4 = java.lang.String.format(r15, r4, r5)     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            java.lang.Object[] r5 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            org.telegram.SQLite.SQLiteCursor r4 = r14.queryFinalized(r4, r5)     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            goto L_0x005f
        L_0x0047:
            java.lang.String r4 = android.text.TextUtils.join(r10, r0)     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            org.telegram.SQLite.SQLiteDatabase r5 = r1.database     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            java.util.Locale r14 = java.util.Locale.US     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            java.lang.String r15 = "SELECT m.mid, m.ttl FROM messages_v2 as m INNER JOIN randoms_v2 as r ON m.mid = r.mid AND m.uid = r.uid WHERE r.random_id IN (%s)"
            java.lang.Object[] r9 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            r9[r13] = r4     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            java.lang.String r4 = java.lang.String.format(r14, r15, r9)     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            java.lang.Object[] r9 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            org.telegram.SQLite.SQLiteCursor r4 = r5.queryFinalized(r4, r9)     // Catch:{ Exception -> 0x014f, all -> 0x014b }
        L_0x005f:
            r5 = 2147483647(0x7fffffff, float:NaN)
        L_0x0062:
            boolean r9 = r4.next()     // Catch:{ Exception -> 0x0148, all -> 0x0145 }
            if (r9 == 0) goto L_0x00a9
            int r9 = r4.intValue(r12)     // Catch:{ Exception -> 0x0148, all -> 0x0145 }
            int r14 = r4.intValue(r13)     // Catch:{ Exception -> 0x0148, all -> 0x0145 }
            if (r0 == 0) goto L_0x0079
            java.lang.Integer r15 = java.lang.Integer.valueOf(r14)     // Catch:{ Exception -> 0x0148, all -> 0x0145 }
            r7.add(r15)     // Catch:{ Exception -> 0x0148, all -> 0x0145 }
        L_0x0079:
            if (r9 > 0) goto L_0x007c
            goto L_0x0062
        L_0x007c:
            int r15 = java.lang.Math.max(r21, r22)     // Catch:{ Exception -> 0x0148, all -> 0x0145 }
            int r15 = r15 + r9
            int r5 = java.lang.Math.min(r5, r15)     // Catch:{ Exception -> 0x0148, all -> 0x0145 }
            java.lang.Object r9 = r6.get(r15)     // Catch:{ Exception -> 0x0148, all -> 0x0145 }
            java.util.ArrayList r9 = (java.util.ArrayList) r9     // Catch:{ Exception -> 0x0148, all -> 0x0145 }
            if (r9 != 0) goto L_0x0095
            java.util.ArrayList r9 = new java.util.ArrayList     // Catch:{ Exception -> 0x0148, all -> 0x0145 }
            r9.<init>()     // Catch:{ Exception -> 0x0148, all -> 0x0145 }
            r6.put(r15, r9)     // Catch:{ Exception -> 0x0148, all -> 0x0145 }
        L_0x0095:
            int r15 = r8.length()     // Catch:{ Exception -> 0x0148, all -> 0x0145 }
            if (r15 == 0) goto L_0x009e
            r8.append(r10)     // Catch:{ Exception -> 0x0148, all -> 0x0145 }
        L_0x009e:
            r8.append(r14)     // Catch:{ Exception -> 0x0148, all -> 0x0145 }
            java.lang.Integer r14 = java.lang.Integer.valueOf(r14)     // Catch:{ Exception -> 0x0148, all -> 0x0145 }
            r9.add(r14)     // Catch:{ Exception -> 0x0148, all -> 0x0145 }
            goto L_0x0062
        L_0x00a9:
            r4.dispose()     // Catch:{ Exception -> 0x0148, all -> 0x0145 }
            if (r0 == 0) goto L_0x00b6
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda94 r0 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda94     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            r0.<init>(r1, r2, r7)     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0)     // Catch:{ Exception -> 0x014f, all -> 0x014b }
        L_0x00b6:
            int r0 = r6.size()     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            if (r0 == 0) goto L_0x013f
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            r0.beginTransaction()     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            java.lang.String r4 = "REPLACE INTO enc_tasks_v4 VALUES(?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r4 = r0.executeFast(r4)     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            r0 = 0
        L_0x00ca:
            int r7 = r6.size()     // Catch:{ Exception -> 0x013c, all -> 0x0139 }
            if (r0 >= r7) goto L_0x0106
            int r7 = r6.keyAt(r0)     // Catch:{ Exception -> 0x013c, all -> 0x0139 }
            java.lang.Object r9 = r6.get(r7)     // Catch:{ Exception -> 0x013c, all -> 0x0139 }
            java.util.ArrayList r9 = (java.util.ArrayList) r9     // Catch:{ Exception -> 0x013c, all -> 0x0139 }
            r10 = 0
        L_0x00db:
            int r14 = r9.size()     // Catch:{ Exception -> 0x013c, all -> 0x0139 }
            if (r10 >= r14) goto L_0x0102
            r4.requery()     // Catch:{ Exception -> 0x013c, all -> 0x0139 }
            java.lang.Object r14 = r9.get(r10)     // Catch:{ Exception -> 0x013c, all -> 0x0139 }
            java.lang.Integer r14 = (java.lang.Integer) r14     // Catch:{ Exception -> 0x013c, all -> 0x0139 }
            int r14 = r14.intValue()     // Catch:{ Exception -> 0x013c, all -> 0x0139 }
            r4.bindInteger(r12, r14)     // Catch:{ Exception -> 0x013c, all -> 0x0139 }
            r4.bindLong(r11, r2)     // Catch:{ Exception -> 0x013c, all -> 0x0139 }
            r14 = 3
            r4.bindInteger(r14, r7)     // Catch:{ Exception -> 0x013c, all -> 0x0139 }
            r15 = 4
            r4.bindInteger(r15, r13)     // Catch:{ Exception -> 0x013c, all -> 0x0139 }
            r4.step()     // Catch:{ Exception -> 0x013c, all -> 0x0139 }
            int r10 = r10 + 1
            goto L_0x00db
        L_0x0102:
            r14 = 3
            int r0 = r0 + 1
            goto L_0x00ca
        L_0x0106:
            r4.dispose()     // Catch:{ Exception -> 0x013c, all -> 0x0139 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            r0.commitTransaction()     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            java.lang.String r7 = "UPDATE messages_v2 SET ttl = 0 WHERE mid IN(%s) AND uid = %d"
            java.lang.Object[] r9 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            java.lang.String r8 = r8.toString()     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            r9[r13] = r8     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            java.lang.Long r8 = java.lang.Long.valueOf(r2)     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            r9[r12] = r8     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            java.lang.String r4 = java.lang.String.format(r4, r7, r9)     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r4)     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            r0.dispose()     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            org.telegram.messenger.MessagesController r0 = r17.getMessagesController()     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            r0.didAddedNewTask(r5, r2, r6)     // Catch:{ Exception -> 0x014f, all -> 0x014b }
            goto L_0x013f
        L_0x0139:
            r0 = move-exception
            r2 = 0
            goto L_0x0166
        L_0x013c:
            r0 = move-exception
            r2 = 0
            goto L_0x0152
        L_0x013f:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database
            r0.commitTransaction()
            goto L_0x0164
        L_0x0145:
            r0 = move-exception
            r2 = r4
            goto L_0x014d
        L_0x0148:
            r0 = move-exception
            r2 = r4
            goto L_0x0151
        L_0x014b:
            r0 = move-exception
            r2 = 0
        L_0x014d:
            r4 = 0
            goto L_0x0166
        L_0x014f:
            r0 = move-exception
            r2 = 0
        L_0x0151:
            r4 = 0
        L_0x0152:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0165 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database
            r0.commitTransaction()
            if (r4 == 0) goto L_0x015f
            r4.dispose()
        L_0x015f:
            if (r2 == 0) goto L_0x0164
            r2.dispose()
        L_0x0164:
            return
        L_0x0165:
            r0 = move-exception
        L_0x0166:
            org.telegram.SQLite.SQLiteDatabase r3 = r1.database
            r3.commitTransaction()
            if (r4 == 0) goto L_0x0170
            r4.dispose()
        L_0x0170:
            if (r2 == 0) goto L_0x0175
            r2.dispose()
        L_0x0175:
            goto L_0x0177
        L_0x0176:
            throw r0
        L_0x0177:
            goto L_0x0176
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$createTaskForSecretChat$87(int, java.util.ArrayList, int, int, int):void");
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$createTaskForSecretChat$86(long j, ArrayList arrayList) {
        markMessagesContentAsRead(j, arrayList, 0);
        getNotificationCenter().postNotificationName(NotificationCenter.messagesReadContent, Long.valueOf(j), arrayList);
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v1, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v3, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v6, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v7, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v8, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v9, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v10, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v15, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v16, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v17, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v18, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v21, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v56, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v23, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v60, resolved type: int[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v61, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v62, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v26, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v12, resolved type: int[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v13, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v72, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v28, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v31, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v32, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v33, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v34, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v90, resolved type: int[][]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v73, resolved type: int[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v74, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v35, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v91, resolved type: int[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v92, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v36, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v37, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v16, resolved type: int[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v17, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v38, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v39, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v40, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v43, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v44, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v45, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v46, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v47, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v48, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v50, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v51, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v52, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v53, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v89, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v55, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v56, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v27, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v35, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v37, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v38, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v58, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v16, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v61, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v62, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v63, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v30, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v35, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v37, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v38, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v65, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v68, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v71, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v76, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v23, resolved type: int[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v24, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v79, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v82, resolved type: java.lang.Object[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v81, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v4, resolved type: int[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v10, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v82, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v83, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v84, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v30, resolved type: int[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v31, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v92, resolved type: java.lang.Object[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v87, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v5, resolved type: int[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v11, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v88, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v89, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v90, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v92, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v93, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v95, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v104, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v100, resolved type: int} */
    /* JADX WARNING: Code restructure failed: missing block: B:155:0x03bf, code lost:
        if (r9.indexOfKey(-r4.id) >= 0) goto L_0x03c1;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:316:0x0670, code lost:
        if (r1.dialogsWithMentions.indexOfKey(-r0.id) < 0) goto L_0x0683;
     */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:194:0x047f  */
    /* JADX WARNING: Removed duplicated region for block: B:208:0x04ba  */
    /* JADX WARNING: Removed duplicated region for block: B:256:0x057f  */
    /* JADX WARNING: Removed duplicated region for block: B:409:0x07e3  */
    /* JADX WARNING: Removed duplicated region for block: B:423:0x0819  */
    /* JADX WARNING: Removed duplicated region for block: B:471:0x08cf  */
    /* JADX WARNING: Removed duplicated region for block: B:579:0x0a9e  */
    /* JADX WARNING: Removed duplicated region for block: B:580:0x0aa5  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void updateFiltersReadCounter(org.telegram.messenger.support.LongSparseIntArray r26, org.telegram.messenger.support.LongSparseIntArray r27, boolean r28) throws java.lang.Exception {
        /*
            r25 = this;
            r0 = r25
            r1 = r27
            if (r26 == 0) goto L_0x000c
            int r2 = r26.size()
            if (r2 != 0) goto L_0x0016
        L_0x000c:
            if (r1 == 0) goto L_0x0acb
            int r2 = r27.size()
            if (r2 != 0) goto L_0x0016
            goto L_0x0acb
        L_0x0016:
            r2 = 0
            r3 = 0
        L_0x0018:
            r4 = 2
            if (r3 >= r4) goto L_0x004a
            r5 = 0
        L_0x001c:
            if (r5 >= r4) goto L_0x003f
            int[][] r6 = r0.contacts
            r6 = r6[r3]
            int[][] r7 = r0.nonContacts
            r7 = r7[r3]
            int[][] r8 = r0.bots
            r8 = r8[r3]
            int[][] r9 = r0.channels
            r9 = r9[r3]
            int[][] r10 = r0.groups
            r10 = r10[r3]
            r10[r5] = r2
            r9[r5] = r2
            r8[r5] = r2
            r7[r5] = r2
            r6[r5] = r2
            int r5 = r5 + 1
            goto L_0x001c
        L_0x003f:
            int[] r4 = r0.mentionChannels
            int[] r5 = r0.mentionGroups
            r5[r3] = r2
            r4[r3] = r2
            int r3 = r3 + 1
            goto L_0x0018
        L_0x004a:
            java.util.ArrayList r3 = new java.util.ArrayList
            r3.<init>()
            java.util.ArrayList r5 = new java.util.ArrayList
            r5.<init>()
            java.util.ArrayList r6 = new java.util.ArrayList
            r6.<init>()
            java.util.ArrayList r7 = new java.util.ArrayList
            r7.<init>()
            java.util.ArrayList r8 = new java.util.ArrayList
            r8.<init>()
            java.util.ArrayList r9 = new java.util.ArrayList
            r9.<init>()
            androidx.collection.LongSparseArray r10 = new androidx.collection.LongSparseArray
            r10.<init>()
            androidx.collection.LongSparseArray r11 = new androidx.collection.LongSparseArray
            r11.<init>()
            r12 = 0
        L_0x0073:
            if (r12 >= r4) goto L_0x017d
            if (r12 != 0) goto L_0x007a
            r13 = r26
            goto L_0x007b
        L_0x007a:
            r13 = r1
        L_0x007b:
            if (r13 != 0) goto L_0x0083
        L_0x007d:
            r17 = r5
            r20 = r11
            goto L_0x0173
        L_0x0083:
            r14 = 0
        L_0x0084:
            int r15 = r13.size()
            if (r14 >= r15) goto L_0x007d
            int r15 = r13.valueAt(r14)
            java.lang.Integer r15 = java.lang.Integer.valueOf(r15)
            if (r28 == 0) goto L_0x00a3
            int r16 = r15.intValue()
            if (r16 != 0) goto L_0x009b
            goto L_0x00a3
        L_0x009b:
            r17 = r5
            r20 = r11
            r19 = r13
            goto L_0x0167
        L_0x00a3:
            if (r28 != 0) goto L_0x00ac
            int r16 = r15.intValue()
            if (r16 != 0) goto L_0x00ac
            goto L_0x009b
        L_0x00ac:
            r17 = r5
            long r4 = r13.keyAt(r14)
            if (r28 == 0) goto L_0x00c2
            if (r12 != 0) goto L_0x00bc
            androidx.collection.LongSparseArray<java.lang.Integer> r15 = r0.dialogsWithUnread
            r15.remove(r4)
            goto L_0x00e2
        L_0x00bc:
            androidx.collection.LongSparseArray<java.lang.Integer> r15 = r0.dialogsWithMentions
            r15.remove(r4)
            goto L_0x00e2
        L_0x00c2:
            androidx.collection.LongSparseArray<java.lang.Integer> r2 = r0.dialogsWithMentions
            int r2 = r2.indexOfKey(r4)
            if (r2 >= 0) goto L_0x00d5
            androidx.collection.LongSparseArray<java.lang.Integer> r2 = r0.dialogsWithUnread
            int r2 = r2.indexOfKey(r4)
            if (r2 >= 0) goto L_0x00d5
            r11.put(r4, r15)
        L_0x00d5:
            if (r12 != 0) goto L_0x00dd
            androidx.collection.LongSparseArray<java.lang.Integer> r2 = r0.dialogsWithUnread
            r2.put(r4, r15)
            goto L_0x00e2
        L_0x00dd:
            androidx.collection.LongSparseArray<java.lang.Integer> r2 = r0.dialogsWithMentions
            r2.put(r4, r15)
        L_0x00e2:
            int r2 = r10.indexOfKey(r4)
            if (r2 >= 0) goto L_0x011d
            org.telegram.SQLite.SQLiteDatabase r2 = r0.database
            java.lang.StringBuilder r15 = new java.lang.StringBuilder
            r15.<init>()
            r19 = r13
            java.lang.String r13 = "SELECT folder_id FROM dialogs WHERE did = "
            r15.append(r13)
            r15.append(r4)
            java.lang.String r13 = r15.toString()
            r20 = r11
            r15 = 0
            java.lang.Object[] r11 = new java.lang.Object[r15]
            org.telegram.SQLite.SQLiteCursor r2 = r2.queryFinalized(r13, r11)
            boolean r11 = r2.next()
            if (r11 == 0) goto L_0x0111
            int r11 = r2.intValue(r15)
            goto L_0x0112
        L_0x0111:
            r11 = 0
        L_0x0112:
            r2.dispose()
            java.lang.Integer r2 = java.lang.Integer.valueOf(r11)
            r10.put(r4, r2)
            goto L_0x0121
        L_0x011d:
            r20 = r11
            r19 = r13
        L_0x0121:
            boolean r2 = org.telegram.messenger.DialogObject.isEncryptedDialog(r4)
            if (r2 == 0) goto L_0x013d
            int r2 = org.telegram.messenger.DialogObject.getEncryptedChatId(r4)
            java.lang.Integer r4 = java.lang.Integer.valueOf(r2)
            boolean r4 = r9.contains(r4)
            if (r4 != 0) goto L_0x0167
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r9.add(r2)
            goto L_0x0167
        L_0x013d:
            boolean r2 = org.telegram.messenger.DialogObject.isUserDialog(r4)
            if (r2 == 0) goto L_0x0155
            java.lang.Long r2 = java.lang.Long.valueOf(r4)
            boolean r2 = r7.contains(r2)
            if (r2 != 0) goto L_0x0167
            java.lang.Long r2 = java.lang.Long.valueOf(r4)
            r7.add(r2)
            goto L_0x0167
        L_0x0155:
            long r4 = -r4
            java.lang.Long r2 = java.lang.Long.valueOf(r4)
            boolean r2 = r8.contains(r2)
            if (r2 != 0) goto L_0x0167
            java.lang.Long r2 = java.lang.Long.valueOf(r4)
            r8.add(r2)
        L_0x0167:
            int r14 = r14 + 1
            r5 = r17
            r13 = r19
            r11 = r20
            r2 = 0
            r4 = 2
            goto L_0x0084
        L_0x0173:
            int r12 = r12 + 1
            r5 = r17
            r11 = r20
            r2 = 0
            r4 = 2
            goto L_0x0073
        L_0x017d:
            r17 = r5
            r20 = r11
            androidx.collection.LongSparseArray r2 = new androidx.collection.LongSparseArray
            r2.<init>()
            androidx.collection.LongSparseArray r4 = new androidx.collection.LongSparseArray
            r4.<init>()
            androidx.collection.LongSparseArray r5 = new androidx.collection.LongSparseArray
            r5.<init>()
            androidx.collection.LongSparseArray r11 = new androidx.collection.LongSparseArray
            r11.<init>()
            androidx.collection.LongSparseArray r12 = new androidx.collection.LongSparseArray
            r12.<init>()
            androidx.collection.LongSparseArray r13 = new androidx.collection.LongSparseArray
            r13.<init>()
            boolean r14 = r7.isEmpty()
            java.lang.String r15 = ","
            r26 = r4
            if (r14 != 0) goto L_0x022e
            java.lang.String r7 = android.text.TextUtils.join(r15, r7)
            r0.getUsersInternal(r7, r3)
            int r7 = r3.size()
            r14 = 0
        L_0x01b5:
            if (r14 >= r7) goto L_0x022e
            java.lang.Object r19 = r3.get(r14)
            r4 = r19
            org.telegram.tgnet.TLRPC$User r4 = (org.telegram.tgnet.TLRPC$User) r4
            r19 = r3
            org.telegram.messenger.MessagesController r3 = r25.getMessagesController()
            r21 = r6
            r22 = r7
            long r6 = r4.id
            boolean r3 = r3.isDialogMuted(r6)
            long r6 = r4.id
            java.lang.Object r6 = r10.get(r6)
            java.lang.Integer r6 = (java.lang.Integer) r6
            int r6 = r6.intValue()
            r23 = r8
            if (r3 == 0) goto L_0x01e6
            long r7 = r4.id
            java.lang.Boolean r1 = java.lang.Boolean.TRUE
            r12.put(r7, r1)
        L_0x01e6:
            r1 = 1
            if (r6 != r1) goto L_0x01f0
            long r7 = r4.id
            java.lang.Boolean r1 = java.lang.Boolean.TRUE
            r13.put(r7, r1)
        L_0x01f0:
            boolean r1 = r4.bot
            if (r1 == 0) goto L_0x01ff
            int[][] r1 = r0.bots
            r1 = r1[r6]
            r6 = r1[r3]
            r7 = 1
            int r6 = r6 + r7
            r1[r3] = r6
            goto L_0x021c
        L_0x01ff:
            r7 = 1
            boolean r1 = r4.self
            if (r1 != 0) goto L_0x0213
            boolean r1 = r4.contact
            if (r1 == 0) goto L_0x0209
            goto L_0x0213
        L_0x0209:
            int[][] r1 = r0.nonContacts
            r1 = r1[r6]
            r6 = r1[r3]
            int r6 = r6 + r7
            r1[r3] = r6
            goto L_0x021c
        L_0x0213:
            int[][] r1 = r0.contacts
            r1 = r1[r6]
            r6 = r1[r3]
            int r6 = r6 + r7
            r1[r3] = r6
        L_0x021c:
            long r6 = r4.id
            r2.put(r6, r4)
            int r14 = r14 + 1
            r1 = r27
            r3 = r19
            r6 = r21
            r7 = r22
            r8 = r23
            goto L_0x01b5
        L_0x022e:
            r21 = r6
            r23 = r8
            boolean r1 = r9.isEmpty()
            if (r1 != 0) goto L_0x02fd
            java.util.ArrayList r1 = new java.util.ArrayList
            r1.<init>()
            java.util.ArrayList r3 = new java.util.ArrayList
            r3.<init>()
            java.lang.String r4 = android.text.TextUtils.join(r15, r9)
            r0.getEncryptedChatsInternal(r4, r3, r1)
            boolean r4 = r1.isEmpty()
            if (r4 != 0) goto L_0x02fd
            java.lang.String r1 = android.text.TextUtils.join(r15, r1)
            r4 = r17
            r0.getUsersInternal(r1, r4)
            int r1 = r4.size()
            r6 = 0
        L_0x025d:
            if (r6 >= r1) goto L_0x026d
            java.lang.Object r7 = r4.get(r6)
            org.telegram.tgnet.TLRPC$User r7 = (org.telegram.tgnet.TLRPC$User) r7
            long r8 = r7.id
            r5.put(r8, r7)
            int r6 = r6 + 1
            goto L_0x025d
        L_0x026d:
            int r1 = r3.size()
            r4 = 0
        L_0x0272:
            if (r4 >= r1) goto L_0x02fd
            java.lang.Object r6 = r3.get(r4)
            org.telegram.tgnet.TLRPC$EncryptedChat r6 = (org.telegram.tgnet.TLRPC$EncryptedChat) r6
            long r7 = r6.user_id
            java.lang.Object r7 = r5.get(r7)
            org.telegram.tgnet.TLRPC$User r7 = (org.telegram.tgnet.TLRPC$User) r7
            if (r7 != 0) goto L_0x0289
            r14 = r1
            r9 = r2
            r17 = r3
            goto L_0x02f5
        L_0x0289:
            int r6 = r6.id
            long r8 = (long) r6
            long r8 = org.telegram.messenger.DialogObject.makeEncryptedDialogId(r8)
            org.telegram.messenger.MessagesController r6 = r25.getMessagesController()
            boolean r6 = r6.isDialogMuted(r8)
            java.lang.Object r8 = r10.get(r8)
            java.lang.Integer r8 = (java.lang.Integer) r8
            int r8 = r8.intValue()
            r14 = r1
            r9 = r2
            if (r6 == 0) goto L_0x02b0
            long r1 = r7.id
            r17 = r3
            java.lang.Boolean r3 = java.lang.Boolean.TRUE
            r12.put(r1, r3)
            goto L_0x02b2
        L_0x02b0:
            r17 = r3
        L_0x02b2:
            r1 = 1
            if (r8 != r1) goto L_0x02bc
            long r1 = r7.id
            java.lang.Boolean r3 = java.lang.Boolean.TRUE
            r13.put(r1, r3)
        L_0x02bc:
            boolean r1 = r7.self
            if (r1 != 0) goto L_0x02d0
            boolean r1 = r7.contact
            if (r1 == 0) goto L_0x02c5
            goto L_0x02d0
        L_0x02c5:
            int[][] r1 = r0.nonContacts
            r1 = r1[r8]
            r2 = r1[r6]
            r3 = 1
            int r2 = r2 + r3
            r1[r6] = r2
            goto L_0x02da
        L_0x02d0:
            r3 = 1
            int[][] r1 = r0.contacts
            r1 = r1[r8]
            r2 = r1[r6]
            int r2 = r2 + r3
            r1[r6] = r2
        L_0x02da:
            long r1 = r7.id
            r6 = 0
            java.lang.Integer r8 = java.lang.Integer.valueOf(r6)
            java.lang.Object r1 = r11.get(r1, r8)
            java.lang.Integer r1 = (java.lang.Integer) r1
            int r1 = r1.intValue()
            long r6 = r7.id
            int r1 = r1 + r3
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r11.put(r6, r1)
        L_0x02f5:
            int r4 = r4 + 1
            r2 = r9
            r1 = r14
            r3 = r17
            goto L_0x0272
        L_0x02fd:
            r9 = r2
            boolean r1 = r23.isEmpty()
            if (r1 != 0) goto L_0x0405
            r1 = r23
            java.lang.String r1 = android.text.TextUtils.join(r15, r1)
            r2 = r21
            r0.getChatsInternal(r1, r2)
            int r1 = r2.size()
            r3 = 0
        L_0x0314:
            if (r3 >= r1) goto L_0x0405
            java.lang.Object r4 = r2.get(r3)
            org.telegram.tgnet.TLRPC$Chat r4 = (org.telegram.tgnet.TLRPC$Chat) r4
            org.telegram.tgnet.TLRPC$InputChannel r6 = r4.migrated_to
            boolean r6 = r6 instanceof org.telegram.tgnet.TLRPC$TL_inputChannel
            if (r6 != 0) goto L_0x03eb
            boolean r6 = org.telegram.messenger.ChatObject.isNotInChat(r4)
            if (r6 == 0) goto L_0x032a
            goto L_0x03eb
        L_0x032a:
            org.telegram.messenger.MessagesController r6 = r25.getMessagesController()
            long r7 = r4.id
            long r7 = -r7
            boolean r6 = r6.isDialogMuted(r7, r4)
            androidx.collection.LongSparseArray<java.lang.Integer> r7 = r0.dialogsWithUnread
            long r14 = r4.id
            long r14 = -r14
            int r7 = r7.indexOfKey(r14)
            if (r7 < 0) goto L_0x0342
            r7 = 1
            goto L_0x0343
        L_0x0342:
            r7 = 0
        L_0x0343:
            androidx.collection.LongSparseArray<java.lang.Integer> r8 = r0.dialogsWithMentions
            long r14 = r4.id
            long r14 = -r14
            int r8 = r8.indexOfKey(r14)
            if (r8 < 0) goto L_0x0350
            r8 = 1
            goto L_0x0351
        L_0x0350:
            r8 = 0
        L_0x0351:
            long r14 = r4.id
            long r14 = -r14
            java.lang.Object r14 = r10.get(r14)
            java.lang.Integer r14 = (java.lang.Integer) r14
            int r14 = r14.intValue()
            r15 = r1
            r21 = r2
            if (r6 == 0) goto L_0x036e
            long r1 = r4.id
            long r1 = -r1
            r17 = r10
            java.lang.Boolean r10 = java.lang.Boolean.TRUE
            r12.put(r1, r10)
            goto L_0x0370
        L_0x036e:
            r17 = r10
        L_0x0370:
            r1 = 1
            if (r14 != r1) goto L_0x037b
            long r1 = r4.id
            long r1 = -r1
            java.lang.Boolean r10 = java.lang.Boolean.TRUE
            r13.put(r1, r10)
        L_0x037b:
            r1 = r27
            r2 = r9
            if (r6 == 0) goto L_0x03aa
            if (r1 == 0) goto L_0x03aa
            long r9 = r4.id
            long r9 = -r9
            int r9 = r1.indexOfKey(r9)
            if (r9 < 0) goto L_0x03aa
            boolean r9 = org.telegram.messenger.ChatObject.isChannel(r4)
            if (r9 == 0) goto L_0x03a0
            boolean r9 = r4.megagroup
            if (r9 != 0) goto L_0x03a0
            int[] r9 = r0.mentionChannels
            r10 = r9[r14]
            r19 = 1
            int r10 = r10 + 1
            r9[r14] = r10
            goto L_0x03aa
        L_0x03a0:
            r19 = 1
            int[] r9 = r0.mentionGroups
            r10 = r9[r14]
            int r10 = r10 + 1
            r9[r14] = r10
        L_0x03aa:
            if (r28 == 0) goto L_0x03b4
            if (r7 != 0) goto L_0x03b4
            if (r8 == 0) goto L_0x03b1
            goto L_0x03b4
        L_0x03b1:
            r9 = r20
            goto L_0x03c1
        L_0x03b4:
            if (r28 != 0) goto L_0x03e1
            long r7 = r4.id
            long r7 = -r7
            r9 = r20
            int r7 = r9.indexOfKey(r7)
            if (r7 < 0) goto L_0x03e3
        L_0x03c1:
            boolean r7 = org.telegram.messenger.ChatObject.isChannel(r4)
            if (r7 == 0) goto L_0x03d6
            boolean r7 = r4.megagroup
            if (r7 != 0) goto L_0x03d6
            int[][] r7 = r0.channels
            r7 = r7[r14]
            r8 = r7[r6]
            r10 = 1
            int r8 = r8 + r10
            r7[r6] = r8
            goto L_0x03e3
        L_0x03d6:
            r10 = 1
            int[][] r7 = r0.groups
            r7 = r7[r14]
            r8 = r7[r6]
            int r8 = r8 + r10
            r7[r6] = r8
            goto L_0x03e3
        L_0x03e1:
            r9 = r20
        L_0x03e3:
            long r6 = r4.id
            r8 = r26
            r8.put(r6, r4)
            goto L_0x03f7
        L_0x03eb:
            r8 = r26
            r15 = r1
            r21 = r2
            r2 = r9
            r17 = r10
            r9 = r20
            r1 = r27
        L_0x03f7:
            int r3 = r3 + 1
            r26 = r8
            r20 = r9
            r1 = r15
            r10 = r17
            r9 = r2
            r2 = r21
            goto L_0x0314
        L_0x0405:
            r8 = r26
            r1 = r27
            r2 = r9
            r9 = r20
            java.util.ArrayList<org.telegram.messenger.MessagesController$DialogFilter> r3 = r0.dialogFilters
            int r3 = r3.size()
            r15 = 0
        L_0x0413:
            int r4 = r3 + 2
            if (r15 >= r4) goto L_0x0ac1
            if (r15 >= r3) goto L_0x0435
            java.util.ArrayList<org.telegram.messenger.MessagesController$DialogFilter> r4 = r0.dialogFilters
            java.lang.Object r4 = r4.get(r15)
            org.telegram.messenger.MessagesController$DialogFilter r4 = (org.telegram.messenger.MessagesController.DialogFilter) r4
            int r6 = r4.pendingUnreadCount
            if (r6 >= 0) goto L_0x0430
            r1 = r0
            r0 = r3
            r10 = r5
            r6 = r9
            r26 = r13
            r7 = 0
            r9 = r2
            r2 = r15
            goto L_0x0ab4
        L_0x0430:
            int r6 = r4.pendingUnreadCount
            int r7 = r4.flags
            goto L_0x0454
        L_0x0435:
            r4 = 0
            int r6 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ALL_CHATS
            if (r15 != r3) goto L_0x044a
            int r7 = r0.pendingMainUnreadCount
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r6 = r6 | r10
            org.telegram.messenger.NotificationsController r10 = r25.getNotificationsController()
            boolean r10 = r10.showBadgeMuted
            if (r10 != 0) goto L_0x044f
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            goto L_0x044e
        L_0x044a:
            int r7 = r0.pendingArchiveUnreadCount
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED
        L_0x044e:
            r6 = r6 | r10
        L_0x044f:
            r24 = r7
            r7 = r6
            r6 = r24
        L_0x0454:
            if (r28 == 0) goto L_0x07b2
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CONTACTS
            r10 = r10 & r7
            if (r10 == 0) goto L_0x0491
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED
            r10 = r10 & r7
            if (r10 != 0) goto L_0x0477
            int[][] r10 = r0.contacts
            r14 = 0
            r17 = r10[r14]
            r17 = r17[r14]
            int r6 = r6 - r17
            int r17 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r17 = r7 & r17
            if (r17 != 0) goto L_0x0478
            r10 = r10[r14]
            r17 = 1
            r10 = r10[r17]
            int r6 = r6 - r10
            goto L_0x047a
        L_0x0477:
            r14 = 0
        L_0x0478:
            r17 = 1
        L_0x047a:
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r10 = r10 & r7
            if (r10 != 0) goto L_0x0491
            int[][] r10 = r0.contacts
            r18 = r10[r17]
            r19 = r18[r14]
            int r6 = r6 - r19
            int r14 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r14 = r14 & r7
            if (r14 != 0) goto L_0x0491
            r10 = r10[r17]
            r10 = r10[r17]
            int r6 = r6 - r10
        L_0x0491:
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_NON_CONTACTS
            r10 = r10 & r7
            if (r10 == 0) goto L_0x04cc
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED
            r10 = r10 & r7
            if (r10 != 0) goto L_0x04b2
            int[][] r10 = r0.nonContacts
            r14 = 0
            r17 = r10[r14]
            r17 = r17[r14]
            int r6 = r6 - r17
            int r17 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r17 = r7 & r17
            if (r17 != 0) goto L_0x04b3
            r10 = r10[r14]
            r17 = 1
            r10 = r10[r17]
            int r6 = r6 - r10
            goto L_0x04b5
        L_0x04b2:
            r14 = 0
        L_0x04b3:
            r17 = 1
        L_0x04b5:
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r10 = r10 & r7
            if (r10 != 0) goto L_0x04cc
            int[][] r10 = r0.nonContacts
            r18 = r10[r17]
            r19 = r18[r14]
            int r6 = r6 - r19
            int r14 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r14 = r14 & r7
            if (r14 != 0) goto L_0x04cc
            r10 = r10[r17]
            r10 = r10[r17]
            int r6 = r6 - r10
        L_0x04cc:
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_GROUPS
            r10 = r10 & r7
            if (r10 == 0) goto L_0x0511
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED
            r10 = r10 & r7
            if (r10 != 0) goto L_0x04f2
            int[][] r10 = r0.groups
            r14 = 0
            r17 = r10[r14]
            r17 = r17[r14]
            int r6 = r6 - r17
            int r17 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r17 = r7 & r17
            if (r17 != 0) goto L_0x04ec
            r10 = r10[r14]
            r17 = 1
            r10 = r10[r17]
            goto L_0x04f0
        L_0x04ec:
            int[] r10 = r0.mentionGroups
            r10 = r10[r14]
        L_0x04f0:
            int r6 = r6 - r10
            goto L_0x04f3
        L_0x04f2:
            r14 = 0
        L_0x04f3:
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r10 = r10 & r7
            if (r10 != 0) goto L_0x0511
            int[][] r10 = r0.groups
            r17 = 1
            r18 = r10[r17]
            r19 = r18[r14]
            int r6 = r6 - r19
            int r14 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r14 = r14 & r7
            if (r14 != 0) goto L_0x050c
            r10 = r10[r17]
            r10 = r10[r17]
            goto L_0x0510
        L_0x050c:
            int[] r10 = r0.mentionGroups
            r10 = r10[r17]
        L_0x0510:
            int r6 = r6 - r10
        L_0x0511:
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CHANNELS
            r10 = r10 & r7
            if (r10 == 0) goto L_0x0556
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED
            r10 = r10 & r7
            if (r10 != 0) goto L_0x0537
            int[][] r10 = r0.channels
            r14 = 0
            r17 = r10[r14]
            r17 = r17[r14]
            int r6 = r6 - r17
            int r17 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r17 = r7 & r17
            if (r17 != 0) goto L_0x0531
            r10 = r10[r14]
            r17 = 1
            r10 = r10[r17]
            goto L_0x0535
        L_0x0531:
            int[] r10 = r0.mentionChannels
            r10 = r10[r14]
        L_0x0535:
            int r6 = r6 - r10
            goto L_0x0538
        L_0x0537:
            r14 = 0
        L_0x0538:
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r10 = r10 & r7
            if (r10 != 0) goto L_0x0556
            int[][] r10 = r0.channels
            r17 = 1
            r18 = r10[r17]
            r19 = r18[r14]
            int r6 = r6 - r19
            int r14 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r14 = r14 & r7
            if (r14 != 0) goto L_0x0551
            r10 = r10[r17]
            r10 = r10[r17]
            goto L_0x0555
        L_0x0551:
            int[] r10 = r0.mentionChannels
            r10 = r10[r17]
        L_0x0555:
            int r6 = r6 - r10
        L_0x0556:
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_BOTS
            r10 = r10 & r7
            if (r10 == 0) goto L_0x0591
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED
            r10 = r10 & r7
            if (r10 != 0) goto L_0x0577
            int[][] r10 = r0.bots
            r14 = 0
            r17 = r10[r14]
            r17 = r17[r14]
            int r6 = r6 - r17
            int r17 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r17 = r7 & r17
            if (r17 != 0) goto L_0x0578
            r10 = r10[r14]
            r17 = 1
            r10 = r10[r17]
            int r6 = r6 - r10
            goto L_0x057a
        L_0x0577:
            r14 = 0
        L_0x0578:
            r17 = 1
        L_0x057a:
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r10 = r10 & r7
            if (r10 != 0) goto L_0x0591
            int[][] r10 = r0.bots
            r18 = r10[r17]
            r19 = r18[r14]
            int r6 = r6 - r19
            int r14 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r14 = r14 & r7
            if (r14 != 0) goto L_0x0591
            r10 = r10[r17]
            r10 = r10[r17]
            int r6 = r6 - r10
        L_0x0591:
            if (r4 == 0) goto L_0x0795
            java.util.ArrayList<java.lang.Long> r10 = r4.alwaysShow
            int r10 = r10.size()
            r14 = 0
        L_0x059a:
            if (r14 >= r10) goto L_0x0698
            r26 = r10
            java.util.ArrayList<java.lang.Long> r10 = r4.alwaysShow
            java.lang.Object r10 = r10.get(r14)
            java.lang.Long r10 = (java.lang.Long) r10
            r17 = r2
            r19 = r3
            long r2 = r10.longValue()
            boolean r10 = org.telegram.messenger.DialogObject.isUserDialog(r2)
            if (r10 == 0) goto L_0x0633
            r20 = r15
            r10 = 0
        L_0x05b7:
            r15 = 2
            if (r10 >= r15) goto L_0x062c
            if (r10 != 0) goto L_0x05bf
            r15 = r17
            goto L_0x05c0
        L_0x05bf:
            r15 = r5
        L_0x05c0:
            java.lang.Object r15 = r15.get(r2)
            org.telegram.tgnet.TLRPC$User r15 = (org.telegram.tgnet.TLRPC$User) r15
            if (r15 == 0) goto L_0x061d
            if (r10 != 0) goto L_0x05d0
            r21 = r5
            r22 = r9
            r5 = 1
            goto L_0x05e7
        L_0x05d0:
            r21 = r5
            r18 = 0
            java.lang.Integer r5 = java.lang.Integer.valueOf(r18)
            java.lang.Object r5 = r11.get(r2, r5)
            java.lang.Integer r5 = (java.lang.Integer) r5
            int r5 = r5.intValue()
            r22 = r9
            if (r5 != 0) goto L_0x05e7
            goto L_0x0621
        L_0x05e7:
            boolean r9 = r15.bot
            if (r9 == 0) goto L_0x05ee
            int r9 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_BOTS
            goto L_0x05fc
        L_0x05ee:
            boolean r9 = r15.self
            if (r9 != 0) goto L_0x05fa
            boolean r9 = r15.contact
            if (r9 == 0) goto L_0x05f7
            goto L_0x05fa
        L_0x05f7:
            int r9 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_NON_CONTACTS
            goto L_0x05fc
        L_0x05fa:
            int r9 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CONTACTS
        L_0x05fc:
            r9 = r9 & r7
            if (r9 != 0) goto L_0x0601
        L_0x05ff:
            int r6 = r6 - r5
            goto L_0x0621
        L_0x0601:
            int r9 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r9 = r9 & r7
            if (r9 == 0) goto L_0x060f
            long r0 = r15.id
            int r0 = r12.indexOfKey(r0)
            if (r0 < 0) goto L_0x060f
            goto L_0x05ff
        L_0x060f:
            int r0 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r0 = r0 & r7
            if (r0 == 0) goto L_0x0621
            long r0 = r15.id
            int r0 = r13.indexOfKey(r0)
            if (r0 < 0) goto L_0x0621
            goto L_0x05ff
        L_0x061d:
            r21 = r5
            r22 = r9
        L_0x0621:
            int r10 = r10 + 1
            r0 = r25
            r1 = r27
            r5 = r21
            r9 = r22
            goto L_0x05b7
        L_0x062c:
            r21 = r5
            r22 = r9
        L_0x0630:
            r1 = r25
            goto L_0x0685
        L_0x0633:
            r21 = r5
            r22 = r9
            r20 = r15
            long r0 = -r2
            java.lang.Object r0 = r8.get(r0)
            org.telegram.tgnet.TLRPC$Chat r0 = (org.telegram.tgnet.TLRPC$Chat) r0
            if (r0 == 0) goto L_0x0630
            boolean r1 = org.telegram.messenger.ChatObject.isChannel(r0)
            if (r1 == 0) goto L_0x064f
            boolean r1 = r0.megagroup
            if (r1 != 0) goto L_0x064f
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CHANNELS
            goto L_0x0651
        L_0x064f:
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_GROUPS
        L_0x0651:
            r1 = r1 & r7
            if (r1 != 0) goto L_0x0657
            int r6 = r6 + -1
            goto L_0x0630
        L_0x0657:
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r1 = r1 & r7
            if (r1 == 0) goto L_0x0673
            long r1 = r0.id
            long r1 = -r1
            int r1 = r12.indexOfKey(r1)
            if (r1 < 0) goto L_0x0673
            r1 = r25
            androidx.collection.LongSparseArray<java.lang.Integer> r2 = r1.dialogsWithMentions
            long r9 = r0.id
            long r9 = -r9
            int r2 = r2.indexOfKey(r9)
            if (r2 >= 0) goto L_0x0675
            goto L_0x0683
        L_0x0673:
            r1 = r25
        L_0x0675:
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r2 = r2 & r7
            if (r2 == 0) goto L_0x0685
            long r2 = r0.id
            long r2 = -r2
            int r0 = r13.indexOfKey(r2)
            if (r0 < 0) goto L_0x0685
        L_0x0683:
            int r6 = r6 + -1
        L_0x0685:
            int r14 = r14 + 1
            r10 = r26
            r0 = r1
            r2 = r17
            r3 = r19
            r15 = r20
            r5 = r21
            r9 = r22
            r1 = r27
            goto L_0x059a
        L_0x0698:
            r1 = r0
            r17 = r2
            r19 = r3
            r21 = r5
            r22 = r9
            r20 = r15
            java.util.ArrayList<java.lang.Long> r0 = r4.neverShow
            int r0 = r0.size()
            r2 = 0
        L_0x06aa:
            if (r2 >= r0) goto L_0x0793
            java.util.ArrayList<java.lang.Long> r3 = r4.neverShow
            java.lang.Object r3 = r3.get(r2)
            java.lang.Long r3 = (java.lang.Long) r3
            long r9 = r3.longValue()
            r3 = r27
            if (r3 == 0) goto L_0x06ca
            int r5 = r3.indexOfKey(r9)
            if (r5 < 0) goto L_0x06ca
            int r5 = r12.indexOfKey(r9)
            if (r5 >= 0) goto L_0x06ca
            goto L_0x0741
        L_0x06ca:
            boolean r5 = org.telegram.messenger.DialogObject.isUserDialog(r9)
            if (r5 == 0) goto L_0x0745
            r5 = 0
            r14 = 2
        L_0x06d2:
            if (r5 >= r14) goto L_0x0741
            if (r5 != 0) goto L_0x06d9
            r15 = r17
            goto L_0x06db
        L_0x06d9:
            r15 = r21
        L_0x06db:
            java.lang.Object r15 = r15.get(r9)
            org.telegram.tgnet.TLRPC$User r15 = (org.telegram.tgnet.TLRPC$User) r15
            if (r15 == 0) goto L_0x0735
            if (r5 != 0) goto L_0x06e9
            r26 = r0
            r14 = 1
            goto L_0x06fe
        L_0x06e9:
            r16 = 0
            java.lang.Integer r14 = java.lang.Integer.valueOf(r16)
            java.lang.Object r14 = r11.get(r9, r14)
            java.lang.Integer r14 = (java.lang.Integer) r14
            int r14 = r14.intValue()
            if (r14 != 0) goto L_0x06fc
            goto L_0x0735
        L_0x06fc:
            r26 = r0
        L_0x06fe:
            boolean r0 = r15.bot
            if (r0 == 0) goto L_0x0705
            int r0 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_BOTS
            goto L_0x0713
        L_0x0705:
            boolean r0 = r15.self
            if (r0 != 0) goto L_0x0711
            boolean r0 = r15.contact
            if (r0 == 0) goto L_0x070e
            goto L_0x0711
        L_0x070e:
            int r0 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_NON_CONTACTS
            goto L_0x0713
        L_0x0711:
            int r0 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CONTACTS
        L_0x0713:
            r0 = r0 & r7
            if (r0 == 0) goto L_0x0737
            int r0 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r0 = r0 & r7
            if (r0 == 0) goto L_0x0725
            r0 = r4
            long r3 = r15.id
            int r3 = r13.indexOfKey(r3)
            if (r3 >= 0) goto L_0x0738
            goto L_0x0726
        L_0x0725:
            r0 = r4
        L_0x0726:
            int r3 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r3 = r3 & r7
            if (r3 == 0) goto L_0x0733
            long r3 = r15.id
            int r3 = r12.indexOfKey(r3)
            if (r3 >= 0) goto L_0x0738
        L_0x0733:
            int r6 = r6 + r14
            goto L_0x0738
        L_0x0735:
            r26 = r0
        L_0x0737:
            r0 = r4
        L_0x0738:
            int r5 = r5 + 1
            r3 = r27
            r4 = r0
            r14 = 2
            r0 = r26
            goto L_0x06d2
        L_0x0741:
            r26 = r0
            r0 = r4
            goto L_0x078c
        L_0x0745:
            r26 = r0
            r0 = r4
            long r3 = -r9
            java.lang.Object r3 = r8.get(r3)
            org.telegram.tgnet.TLRPC$Chat r3 = (org.telegram.tgnet.TLRPC$Chat) r3
            if (r3 == 0) goto L_0x078c
            boolean r4 = org.telegram.messenger.ChatObject.isChannel(r3)
            if (r4 == 0) goto L_0x075e
            boolean r4 = r3.megagroup
            if (r4 != 0) goto L_0x075e
            int r4 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CHANNELS
            goto L_0x0760
        L_0x075e:
            int r4 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_GROUPS
        L_0x0760:
            r4 = r4 & r7
            if (r4 == 0) goto L_0x078c
            int r4 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r4 = r4 & r7
            if (r4 == 0) goto L_0x0771
            long r4 = r3.id
            long r4 = -r4
            int r4 = r13.indexOfKey(r4)
            if (r4 >= 0) goto L_0x078c
        L_0x0771:
            int r4 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r4 = r4 & r7
            if (r4 == 0) goto L_0x078a
            long r4 = r3.id
            long r4 = -r4
            int r4 = r12.indexOfKey(r4)
            if (r4 < 0) goto L_0x078a
            androidx.collection.LongSparseArray<java.lang.Integer> r4 = r1.dialogsWithMentions
            long r9 = r3.id
            long r9 = -r9
            int r3 = r4.indexOfKey(r9)
            if (r3 < 0) goto L_0x078c
        L_0x078a:
            int r6 = r6 + 1
        L_0x078c:
            int r2 = r2 + 1
            r4 = r0
            r0 = r26
            goto L_0x06aa
        L_0x0793:
            r0 = r4
            goto L_0x07a1
        L_0x0795:
            r1 = r0
            r17 = r2
            r19 = r3
            r0 = r4
            r21 = r5
            r22 = r9
            r20 = r15
        L_0x07a1:
            if (r6 >= 0) goto L_0x07af
            r26 = r13
            r9 = r17
            r10 = r21
            r6 = r22
            r7 = 0
            r15 = 0
            goto L_0x0a9c
        L_0x07af:
            r15 = r6
            goto L_0x0a93
        L_0x07b2:
            r1 = r0
            r17 = r2
            r19 = r3
            r0 = r4
            r21 = r5
            r22 = r9
            r20 = r15
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CONTACTS
            r2 = r2 & r7
            if (r2 == 0) goto L_0x07f4
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED
            r2 = r2 & r7
            if (r2 != 0) goto L_0x07dc
            int[][] r2 = r1.contacts
            r3 = 0
            r4 = r2[r3]
            r4 = r4[r3]
            int r6 = r6 + r4
            int r4 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r4 = r4 & r7
            if (r4 != 0) goto L_0x07dd
            r2 = r2[r3]
            r4 = 1
            r2 = r2[r4]
            int r6 = r6 + r2
            goto L_0x07de
        L_0x07dc:
            r3 = 0
        L_0x07dd:
            r4 = 1
        L_0x07de:
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r2 = r2 & r7
            if (r2 != 0) goto L_0x07f4
            int[][] r2 = r1.contacts
            r5 = r2[r4]
            r5 = r5[r3]
            int r6 = r6 + r5
            int r3 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r3 = r3 & r7
            if (r3 != 0) goto L_0x07f4
            r2 = r2[r4]
            r2 = r2[r4]
            int r6 = r6 + r2
        L_0x07f4:
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_NON_CONTACTS
            r2 = r2 & r7
            if (r2 == 0) goto L_0x082a
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED
            r2 = r2 & r7
            if (r2 != 0) goto L_0x0812
            int[][] r2 = r1.nonContacts
            r3 = 0
            r4 = r2[r3]
            r4 = r4[r3]
            int r6 = r6 + r4
            int r4 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r4 = r4 & r7
            if (r4 != 0) goto L_0x0813
            r2 = r2[r3]
            r4 = 1
            r2 = r2[r4]
            int r6 = r6 + r2
            goto L_0x0814
        L_0x0812:
            r3 = 0
        L_0x0813:
            r4 = 1
        L_0x0814:
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r2 = r2 & r7
            if (r2 != 0) goto L_0x082a
            int[][] r2 = r1.nonContacts
            r5 = r2[r4]
            r5 = r5[r3]
            int r6 = r6 + r5
            int r3 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r3 = r3 & r7
            if (r3 != 0) goto L_0x082a
            r2 = r2[r4]
            r2 = r2[r4]
            int r6 = r6 + r2
        L_0x082a:
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_GROUPS
            r2 = r2 & r7
            if (r2 == 0) goto L_0x086a
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED
            r2 = r2 & r7
            if (r2 != 0) goto L_0x084d
            int[][] r2 = r1.groups
            r3 = 0
            r4 = r2[r3]
            r4 = r4[r3]
            int r6 = r6 + r4
            int r4 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r4 = r4 & r7
            if (r4 != 0) goto L_0x0847
            r2 = r2[r3]
            r4 = 1
            r2 = r2[r4]
            goto L_0x084b
        L_0x0847:
            int[] r2 = r1.mentionGroups
            r2 = r2[r3]
        L_0x084b:
            int r6 = r6 + r2
            goto L_0x084e
        L_0x084d:
            r3 = 0
        L_0x084e:
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r2 = r2 & r7
            if (r2 != 0) goto L_0x086a
            int[][] r2 = r1.groups
            r4 = 1
            r5 = r2[r4]
            r5 = r5[r3]
            int r6 = r6 + r5
            int r3 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r3 = r3 & r7
            if (r3 != 0) goto L_0x0865
            r2 = r2[r4]
            r2 = r2[r4]
            goto L_0x0869
        L_0x0865:
            int[] r2 = r1.mentionGroups
            r2 = r2[r4]
        L_0x0869:
            int r6 = r6 + r2
        L_0x086a:
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CHANNELS
            r2 = r2 & r7
            if (r2 == 0) goto L_0x08aa
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED
            r2 = r2 & r7
            if (r2 != 0) goto L_0x088d
            int[][] r2 = r1.channels
            r3 = 0
            r4 = r2[r3]
            r4 = r4[r3]
            int r6 = r6 + r4
            int r4 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r4 = r4 & r7
            if (r4 != 0) goto L_0x0887
            r2 = r2[r3]
            r4 = 1
            r2 = r2[r4]
            goto L_0x088b
        L_0x0887:
            int[] r2 = r1.mentionChannels
            r2 = r2[r3]
        L_0x088b:
            int r6 = r6 + r2
            goto L_0x088e
        L_0x088d:
            r3 = 0
        L_0x088e:
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r2 = r2 & r7
            if (r2 != 0) goto L_0x08aa
            int[][] r2 = r1.channels
            r4 = 1
            r5 = r2[r4]
            r5 = r5[r3]
            int r6 = r6 + r5
            int r3 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r3 = r3 & r7
            if (r3 != 0) goto L_0x08a5
            r2 = r2[r4]
            r2 = r2[r4]
            goto L_0x08a9
        L_0x08a5:
            int[] r2 = r1.mentionChannels
            r2 = r2[r4]
        L_0x08a9:
            int r6 = r6 + r2
        L_0x08aa:
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_BOTS
            r2 = r2 & r7
            if (r2 == 0) goto L_0x08e1
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED
            r2 = r2 & r7
            if (r2 != 0) goto L_0x08c8
            int[][] r2 = r1.bots
            r3 = 0
            r4 = r2[r3]
            r4 = r4[r3]
            int r6 = r6 + r4
            int r4 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r4 = r4 & r7
            if (r4 != 0) goto L_0x08c9
            r2 = r2[r3]
            r4 = 1
            r2 = r2[r4]
            int r6 = r6 + r2
            goto L_0x08ca
        L_0x08c8:
            r3 = 0
        L_0x08c9:
            r4 = 1
        L_0x08ca:
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r2 = r2 & r7
            if (r2 != 0) goto L_0x08e2
            int[][] r2 = r1.bots
            r5 = r2[r4]
            r5 = r5[r3]
            int r6 = r6 + r5
            int r3 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r3 = r3 & r7
            if (r3 != 0) goto L_0x08e2
            r2 = r2[r4]
            r2 = r2[r4]
            int r6 = r6 + r2
            goto L_0x08e2
        L_0x08e1:
            r4 = 1
        L_0x08e2:
            r15 = r6
            if (r0 == 0) goto L_0x0a93
            java.util.ArrayList<java.lang.Long> r2 = r0.alwaysShow
            boolean r2 = r2.isEmpty()
            if (r2 != 0) goto L_0x0a38
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r2 = r2 & r7
            if (r2 == 0) goto L_0x0934
            int r2 = r27.size()
            r3 = 0
        L_0x08f7:
            if (r3 >= r2) goto L_0x0934
            r5 = r27
            long r9 = r5.keyAt(r3)
            long r4 = -r9
            java.lang.Object r4 = r8.get(r4)
            org.telegram.tgnet.TLRPC$Chat r4 = (org.telegram.tgnet.TLRPC$Chat) r4
            boolean r5 = org.telegram.messenger.ChatObject.isChannel(r4)
            if (r5 == 0) goto L_0x0916
            boolean r4 = r4.megagroup
            if (r4 != 0) goto L_0x0916
            int r4 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CHANNELS
            r4 = r4 & r7
            if (r4 != 0) goto L_0x091c
            goto L_0x0930
        L_0x0916:
            int r4 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_GROUPS
            r4 = r4 & r7
            if (r4 != 0) goto L_0x091c
            goto L_0x0930
        L_0x091c:
            int r4 = r12.indexOfKey(r9)
            if (r4 < 0) goto L_0x0930
            java.util.ArrayList<java.lang.Long> r4 = r0.alwaysShow
            java.lang.Long r5 = java.lang.Long.valueOf(r9)
            boolean r4 = r4.contains(r5)
            if (r4 == 0) goto L_0x0930
            int r15 = r15 + -1
        L_0x0930:
            int r3 = r3 + 1
            r4 = 1
            goto L_0x08f7
        L_0x0934:
            java.util.ArrayList<java.lang.Long> r2 = r0.alwaysShow
            int r2 = r2.size()
            r3 = r15
            r15 = 0
        L_0x093c:
            if (r15 >= r2) goto L_0x0a2e
            java.util.ArrayList<java.lang.Long> r4 = r0.alwaysShow
            java.lang.Object r4 = r4.get(r15)
            java.lang.Long r4 = (java.lang.Long) r4
            long r4 = r4.longValue()
            r6 = r22
            int r9 = r6.indexOfKey(r4)
            if (r9 >= 0) goto L_0x095c
            r16 = r2
            r26 = r13
            r9 = r17
            r10 = r21
            goto L_0x0a20
        L_0x095c:
            boolean r9 = org.telegram.messenger.DialogObject.isUserDialog(r4)
            if (r9 == 0) goto L_0x09e8
            r9 = r17
            java.lang.Object r10 = r9.get(r4)
            org.telegram.tgnet.TLRPC$User r10 = (org.telegram.tgnet.TLRPC$User) r10
            if (r10 == 0) goto L_0x099d
            int r14 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r14 = r14 & r7
            r26 = r13
            if (r14 == 0) goto L_0x097e
            long r13 = r10.id
            int r13 = r12.indexOfKey(r13)
            if (r13 < 0) goto L_0x097e
        L_0x097b:
            int r3 = r3 + 1
            goto L_0x099f
        L_0x097e:
            boolean r13 = r10.bot
            if (r13 == 0) goto L_0x0988
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_BOTS
            r10 = r10 & r7
            if (r10 != 0) goto L_0x099f
            goto L_0x097b
        L_0x0988:
            boolean r13 = r10.self
            if (r13 != 0) goto L_0x0997
            boolean r10 = r10.contact
            if (r10 == 0) goto L_0x0991
            goto L_0x0997
        L_0x0991:
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_NON_CONTACTS
            r10 = r10 & r7
            if (r10 != 0) goto L_0x099f
            goto L_0x097b
        L_0x0997:
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CONTACTS
            r10 = r10 & r7
            if (r10 != 0) goto L_0x099f
            goto L_0x097b
        L_0x099d:
            r26 = r13
        L_0x099f:
            r10 = r21
            java.lang.Object r13 = r10.get(r4)
            org.telegram.tgnet.TLRPC$User r13 = (org.telegram.tgnet.TLRPC$User) r13
            r16 = r2
            if (r13 == 0) goto L_0x0a20
            r14 = 0
            java.lang.Integer r2 = java.lang.Integer.valueOf(r14)
            java.lang.Object r2 = r11.get(r4, r2)
            java.lang.Integer r2 = (java.lang.Integer) r2
            int r2 = r2.intValue()
            int r4 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r4 = r4 & r7
            if (r4 == 0) goto L_0x09c9
            long r4 = r13.id
            int r4 = r12.indexOfKey(r4)
            if (r4 < 0) goto L_0x09c9
        L_0x09c7:
            int r3 = r3 + r2
            goto L_0x0a20
        L_0x09c9:
            boolean r4 = r13.bot
            if (r4 == 0) goto L_0x09d3
            int r4 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_BOTS
            r4 = r4 & r7
            if (r4 != 0) goto L_0x0a20
            goto L_0x09c7
        L_0x09d3:
            boolean r4 = r13.self
            if (r4 != 0) goto L_0x09e2
            boolean r4 = r13.contact
            if (r4 == 0) goto L_0x09dc
            goto L_0x09e2
        L_0x09dc:
            int r4 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_NON_CONTACTS
            r4 = r4 & r7
            if (r4 != 0) goto L_0x0a20
            goto L_0x09c7
        L_0x09e2:
            int r4 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CONTACTS
            r4 = r4 & r7
            if (r4 != 0) goto L_0x0a20
            goto L_0x09c7
        L_0x09e8:
            r16 = r2
            r26 = r13
            r9 = r17
            r10 = r21
            long r4 = -r4
            java.lang.Object r2 = r8.get(r4)
            org.telegram.tgnet.TLRPC$Chat r2 = (org.telegram.tgnet.TLRPC$Chat) r2
            if (r2 == 0) goto L_0x0a20
            int r4 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r4 = r4 & r7
            if (r4 == 0) goto L_0x0a0a
            long r4 = r2.id
            long r4 = -r4
            int r4 = r12.indexOfKey(r4)
            if (r4 < 0) goto L_0x0a0a
        L_0x0a07:
            int r3 = r3 + 1
            goto L_0x0a20
        L_0x0a0a:
            boolean r4 = org.telegram.messenger.ChatObject.isChannel(r2)
            if (r4 == 0) goto L_0x0a1a
            boolean r2 = r2.megagroup
            if (r2 != 0) goto L_0x0a1a
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CHANNELS
            r2 = r2 & r7
            if (r2 != 0) goto L_0x0a20
            goto L_0x0a07
        L_0x0a1a:
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_GROUPS
            r2 = r2 & r7
            if (r2 != 0) goto L_0x0a20
            goto L_0x0a07
        L_0x0a20:
            int r15 = r15 + 1
            r13 = r26
            r22 = r6
            r17 = r9
            r21 = r10
            r2 = r16
            goto L_0x093c
        L_0x0a2e:
            r26 = r13
            r9 = r17
            r10 = r21
            r6 = r22
            r15 = r3
            goto L_0x0a40
        L_0x0a38:
            r26 = r13
            r9 = r17
            r10 = r21
            r6 = r22
        L_0x0a40:
            java.util.ArrayList<java.lang.Long> r2 = r0.neverShow
            int r2 = r2.size()
            r3 = r15
            r15 = 0
        L_0x0a48:
            if (r15 >= r2) goto L_0x0a90
            java.util.ArrayList<java.lang.Long> r4 = r0.neverShow
            java.lang.Object r4 = r4.get(r15)
            java.lang.Long r4 = (java.lang.Long) r4
            long r4 = r4.longValue()
            boolean r7 = org.telegram.messenger.DialogObject.isUserDialog(r4)
            if (r7 == 0) goto L_0x0a81
            java.lang.Object r7 = r9.get(r4)
            org.telegram.tgnet.TLRPC$User r7 = (org.telegram.tgnet.TLRPC$User) r7
            if (r7 == 0) goto L_0x0a66
            int r3 = r3 + -1
        L_0x0a66:
            java.lang.Object r7 = r10.get(r4)
            org.telegram.tgnet.TLRPC$User r7 = (org.telegram.tgnet.TLRPC$User) r7
            if (r7 == 0) goto L_0x0a7f
            r7 = 0
            java.lang.Integer r13 = java.lang.Integer.valueOf(r7)
            java.lang.Object r4 = r11.get(r4, r13)
            java.lang.Integer r4 = (java.lang.Integer) r4
            int r4 = r4.intValue()
            int r3 = r3 - r4
            goto L_0x0a8d
        L_0x0a7f:
            r7 = 0
            goto L_0x0a8d
        L_0x0a81:
            r7 = 0
            long r4 = -r4
            java.lang.Object r4 = r8.get(r4)
            org.telegram.tgnet.TLRPC$Chat r4 = (org.telegram.tgnet.TLRPC$Chat) r4
            if (r4 == 0) goto L_0x0a8d
            int r3 = r3 + -1
        L_0x0a8d:
            int r15 = r15 + 1
            goto L_0x0a48
        L_0x0a90:
            r7 = 0
            r15 = r3
            goto L_0x0a9c
        L_0x0a93:
            r26 = r13
            r9 = r17
            r10 = r21
            r6 = r22
            r7 = 0
        L_0x0a9c:
            if (r0 == 0) goto L_0x0aa5
            r0.pendingUnreadCount = r15
            r0 = r19
            r2 = r20
            goto L_0x0ab4
        L_0x0aa5:
            r0 = r19
            r2 = r20
            if (r2 != r0) goto L_0x0aae
            r1.pendingMainUnreadCount = r15
            goto L_0x0ab4
        L_0x0aae:
            int r3 = r0 + 1
            if (r2 != r3) goto L_0x0ab4
            r1.pendingArchiveUnreadCount = r15
        L_0x0ab4:
            int r15 = r2 + 1
            r13 = r26
            r3 = r0
            r0 = r1
            r2 = r9
            r5 = r10
            r1 = r27
            r9 = r6
            goto L_0x0413
        L_0x0ac1:
            r1 = r0
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda12 r0 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda12
            r0.<init>(r1)
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0)
            return
        L_0x0acb:
            r1 = r0
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.updateFiltersReadCounter(org.telegram.messenger.support.LongSparseIntArray, org.telegram.messenger.support.LongSparseIntArray, boolean):void");
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$updateFiltersReadCounter$88() {
        ArrayList<MessagesController.DialogFilter> arrayList = getMessagesController().dialogFilters;
        int size = arrayList.size();
        for (int i = 0; i < size; i++) {
            arrayList.get(i).unreadCount = arrayList.get(i).pendingUnreadCount;
        }
        this.mainUnreadCount = this.pendingMainUnreadCount;
        this.archiveUnreadCount = this.pendingArchiveUnreadCount;
    }

    /* JADX WARNING: Removed duplicated region for block: B:100:0x02b7 A[Catch:{ Exception -> 0x02bf }] */
    /* JADX WARNING: Removed duplicated region for block: B:125:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void updateDialogsWithReadMessagesInternal(java.util.ArrayList<java.lang.Integer> r22, org.telegram.messenger.support.LongSparseIntArray r23, org.telegram.messenger.support.LongSparseIntArray r24, androidx.collection.LongSparseArray<java.util.ArrayList<java.lang.Integer>> r25) {
        /*
            r21 = this;
            r1 = r21
            r0 = r23
            r2 = r24
            org.telegram.messenger.support.LongSparseIntArray r3 = new org.telegram.messenger.support.LongSparseIntArray     // Catch:{ Exception -> 0x02bf }
            r3.<init>()     // Catch:{ Exception -> 0x02bf }
            org.telegram.messenger.support.LongSparseIntArray r4 = new org.telegram.messenger.support.LongSparseIntArray     // Catch:{ Exception -> 0x02bf }
            r4.<init>()     // Catch:{ Exception -> 0x02bf }
            java.util.ArrayList r5 = new java.util.ArrayList     // Catch:{ Exception -> 0x02bf }
            r5.<init>()     // Catch:{ Exception -> 0x02bf }
            boolean r6 = isEmpty((java.util.List<?>) r22)     // Catch:{ Exception -> 0x02bf }
            java.lang.String r7 = ","
            r8 = 2
            r9 = 1
            r10 = 0
            if (r6 != 0) goto L_0x0067
            r0 = r22
            java.lang.String r0 = android.text.TextUtils.join(r7, r0)     // Catch:{ Exception -> 0x02bf }
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database     // Catch:{ Exception -> 0x02bf }
            java.util.Locale r6 = java.util.Locale.US     // Catch:{ Exception -> 0x02bf }
            java.lang.String r7 = "SELECT uid, read_state, out FROM messages_v2 WHERE mid IN(%s) AND is_channel = 0"
            java.lang.Object[] r11 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x02bf }
            r11[r10] = r0     // Catch:{ Exception -> 0x02bf }
            java.lang.String r0 = java.lang.String.format(r6, r7, r11)     // Catch:{ Exception -> 0x02bf }
            java.lang.Object[] r6 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x02bf }
            org.telegram.SQLite.SQLiteCursor r0 = r2.queryFinalized(r0, r6)     // Catch:{ Exception -> 0x02bf }
        L_0x003a:
            boolean r2 = r0.next()     // Catch:{ Exception -> 0x02bf }
            if (r2 == 0) goto L_0x0062
            int r2 = r0.intValue(r8)     // Catch:{ Exception -> 0x02bf }
            if (r2 == 0) goto L_0x0047
            goto L_0x003a
        L_0x0047:
            int r2 = r0.intValue(r9)     // Catch:{ Exception -> 0x02bf }
            if (r2 == 0) goto L_0x004e
            goto L_0x003a
        L_0x004e:
            long r6 = r0.longValue(r10)     // Catch:{ Exception -> 0x02bf }
            int r2 = r3.get(r6)     // Catch:{ Exception -> 0x02bf }
            if (r2 != 0) goto L_0x005c
            r3.put(r6, r9)     // Catch:{ Exception -> 0x02bf }
            goto L_0x003a
        L_0x005c:
            int r2 = r2 + 1
            r3.put(r6, r2)     // Catch:{ Exception -> 0x02bf }
            goto L_0x003a
        L_0x0062:
            r0.dispose()     // Catch:{ Exception -> 0x02bf }
            goto L_0x01e5
        L_0x0067:
            boolean r6 = isEmpty((org.telegram.messenger.support.LongSparseIntArray) r23)     // Catch:{ Exception -> 0x02bf }
            if (r6 != 0) goto L_0x00d0
            r6 = 0
        L_0x006e:
            int r12 = r23.size()     // Catch:{ Exception -> 0x02bf }
            if (r6 >= r12) goto L_0x00d0
            long r12 = r0.keyAt(r6)     // Catch:{ Exception -> 0x02bf }
            int r14 = r0.get(r12)     // Catch:{ Exception -> 0x02bf }
            org.telegram.SQLite.SQLiteDatabase r15 = r1.database     // Catch:{ Exception -> 0x02bf }
            java.util.Locale r11 = java.util.Locale.US     // Catch:{ Exception -> 0x02bf }
            java.lang.String r9 = "SELECT COUNT(mid) FROM messages_v2 WHERE uid = %d AND mid > %d AND read_state IN(0,2) AND out = 0"
            java.lang.Object[] r10 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x02bf }
            java.lang.Long r18 = java.lang.Long.valueOf(r12)     // Catch:{ Exception -> 0x02bf }
            r8 = 0
            r10[r8] = r18     // Catch:{ Exception -> 0x02bf }
            java.lang.Integer r17 = java.lang.Integer.valueOf(r14)     // Catch:{ Exception -> 0x02bf }
            r16 = 1
            r10[r16] = r17     // Catch:{ Exception -> 0x02bf }
            java.lang.String r9 = java.lang.String.format(r11, r9, r10)     // Catch:{ Exception -> 0x02bf }
            java.lang.Object[] r10 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x02bf }
            org.telegram.SQLite.SQLiteCursor r9 = r15.queryFinalized(r9, r10)     // Catch:{ Exception -> 0x02bf }
            boolean r10 = r9.next()     // Catch:{ Exception -> 0x02bf }
            if (r10 == 0) goto L_0x00aa
            int r10 = r9.intValue(r8)     // Catch:{ Exception -> 0x02bf }
            r3.put(r12, r10)     // Catch:{ Exception -> 0x02bf }
        L_0x00aa:
            r9.dispose()     // Catch:{ Exception -> 0x02bf }
            org.telegram.SQLite.SQLiteDatabase r8 = r1.database     // Catch:{ Exception -> 0x02bf }
            java.lang.String r9 = "UPDATE dialogs SET inbox_max = max((SELECT inbox_max FROM dialogs WHERE did = ?), ?) WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r8 = r8.executeFast(r9)     // Catch:{ Exception -> 0x02bf }
            r8.requery()     // Catch:{ Exception -> 0x02bf }
            r9 = 1
            r8.bindLong(r9, r12)     // Catch:{ Exception -> 0x02bf }
            r9 = 2
            r8.bindInteger(r9, r14)     // Catch:{ Exception -> 0x02bf }
            r9 = 3
            r8.bindLong(r9, r12)     // Catch:{ Exception -> 0x02bf }
            r8.step()     // Catch:{ Exception -> 0x02bf }
            r8.dispose()     // Catch:{ Exception -> 0x02bf }
            int r6 = r6 + 1
            r8 = 2
            r9 = 1
            r10 = 0
            goto L_0x006e
        L_0x00d0:
            boolean r0 = isEmpty((androidx.collection.LongSparseArray<?>) r25)     // Catch:{ Exception -> 0x02bf }
            if (r0 != 0) goto L_0x01b0
            int r0 = r25.size()     // Catch:{ Exception -> 0x02bf }
            r8 = 0
        L_0x00db:
            if (r8 >= r0) goto L_0x01b0
            r6 = r25
            java.lang.Object r9 = r6.valueAt(r8)     // Catch:{ Exception -> 0x02bf }
            java.util.ArrayList r9 = (java.util.ArrayList) r9     // Catch:{ Exception -> 0x02bf }
            java.util.ArrayList r10 = new java.util.ArrayList     // Catch:{ Exception -> 0x02bf }
            r10.<init>(r9)     // Catch:{ Exception -> 0x02bf }
            java.lang.String r9 = android.text.TextUtils.join(r7, r9)     // Catch:{ Exception -> 0x02bf }
            org.telegram.SQLite.SQLiteDatabase r11 = r1.database     // Catch:{ Exception -> 0x02bf }
            java.util.Locale r12 = java.util.Locale.US     // Catch:{ Exception -> 0x02bf }
            java.lang.String r13 = "SELECT uid, read_state, out, mention, mid, is_channel FROM messages_v2 WHERE mid IN(%s)"
            r14 = 1
            java.lang.Object[] r15 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x02bf }
            r14 = 0
            r15[r14] = r9     // Catch:{ Exception -> 0x02bf }
            java.lang.String r9 = java.lang.String.format(r12, r13, r15)     // Catch:{ Exception -> 0x02bf }
            java.lang.Object[] r12 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x02bf }
            org.telegram.SQLite.SQLiteCursor r9 = r11.queryFinalized(r9, r12)     // Catch:{ Exception -> 0x02bf }
            r19 = 0
        L_0x0106:
            boolean r13 = r9.next()     // Catch:{ Exception -> 0x02bf }
            if (r13 == 0) goto L_0x0188
            long r11 = r9.longValue(r14)     // Catch:{ Exception -> 0x02bf }
            r13 = 4
            int r13 = r9.intValue(r13)     // Catch:{ Exception -> 0x02bf }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r13)     // Catch:{ Exception -> 0x02bf }
            r10.remove(r13)     // Catch:{ Exception -> 0x02bf }
            r13 = 1
            int r14 = r9.intValue(r13)     // Catch:{ Exception -> 0x02bf }
            r15 = 2
            if (r14 >= r15) goto L_0x017c
            int r14 = r9.intValue(r15)     // Catch:{ Exception -> 0x02bf }
            if (r14 != 0) goto L_0x017c
            r14 = 3
            int r15 = r9.intValue(r14)     // Catch:{ Exception -> 0x02bf }
            if (r15 != r13) goto L_0x017c
            r13 = -1
            int r13 = r4.get(r11, r13)     // Catch:{ Exception -> 0x02bf }
            if (r13 >= 0) goto L_0x016f
            org.telegram.SQLite.SQLiteDatabase r13 = r1.database     // Catch:{ Exception -> 0x02bf }
            java.lang.StringBuilder r14 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x02bf }
            r14.<init>()     // Catch:{ Exception -> 0x02bf }
            java.lang.String r15 = "SELECT unread_count_i FROM dialogs WHERE did = "
            r14.append(r15)     // Catch:{ Exception -> 0x02bf }
            r14.append(r11)     // Catch:{ Exception -> 0x02bf }
            java.lang.String r14 = r14.toString()     // Catch:{ Exception -> 0x02bf }
            r23 = r0
            r15 = 0
            java.lang.Object[] r0 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x02bf }
            org.telegram.SQLite.SQLiteCursor r0 = r13.queryFinalized(r14, r0)     // Catch:{ Exception -> 0x02bf }
            boolean r13 = r0.next()     // Catch:{ Exception -> 0x02bf }
            if (r13 == 0) goto L_0x015f
            int r17 = r0.intValue(r15)     // Catch:{ Exception -> 0x02bf }
            goto L_0x0161
        L_0x015f:
            r17 = 0
        L_0x0161:
            r0.dispose()     // Catch:{ Exception -> 0x02bf }
            r0 = 1
            int r13 = r17 + -1
            int r0 = java.lang.Math.max(r15, r13)     // Catch:{ Exception -> 0x02bf }
            r4.put(r11, r0)     // Catch:{ Exception -> 0x02bf }
            goto L_0x017e
        L_0x016f:
            r23 = r0
            int r13 = r13 + -1
            r0 = 0
            int r13 = java.lang.Math.max(r0, r13)     // Catch:{ Exception -> 0x02bf }
            r4.put(r11, r13)     // Catch:{ Exception -> 0x02bf }
            goto L_0x017e
        L_0x017c:
            r23 = r0
        L_0x017e:
            r0 = 5
            long r19 = r9.longValue(r0)     // Catch:{ Exception -> 0x02bf }
            r0 = r23
            r14 = 0
            goto L_0x0106
        L_0x0188:
            r23 = r0
            r9.dispose()     // Catch:{ Exception -> 0x02bf }
            boolean r0 = r10.isEmpty()     // Catch:{ Exception -> 0x02bf }
            if (r0 != 0) goto L_0x01aa
            r9 = 0
            int r0 = (r19 > r9 ? 1 : (r19 == r9 ? 0 : -1))
            if (r0 == 0) goto L_0x01aa
            java.lang.Long r0 = java.lang.Long.valueOf(r19)     // Catch:{ Exception -> 0x02bf }
            boolean r0 = r5.contains(r0)     // Catch:{ Exception -> 0x02bf }
            if (r0 != 0) goto L_0x01aa
            java.lang.Long r0 = java.lang.Long.valueOf(r19)     // Catch:{ Exception -> 0x02bf }
            r5.add(r0)     // Catch:{ Exception -> 0x02bf }
        L_0x01aa:
            int r8 = r8 + 1
            r0 = r23
            goto L_0x00db
        L_0x01b0:
            boolean r0 = isEmpty((org.telegram.messenger.support.LongSparseIntArray) r24)     // Catch:{ Exception -> 0x02bf }
            if (r0 != 0) goto L_0x01e5
            r8 = 0
        L_0x01b7:
            int r0 = r24.size()     // Catch:{ Exception -> 0x02bf }
            if (r8 >= r0) goto L_0x01e5
            long r6 = r2.keyAt(r8)     // Catch:{ Exception -> 0x02bf }
            int r0 = r2.get(r6)     // Catch:{ Exception -> 0x02bf }
            org.telegram.SQLite.SQLiteDatabase r9 = r1.database     // Catch:{ Exception -> 0x02bf }
            java.lang.String r10 = "UPDATE dialogs SET outbox_max = max((SELECT outbox_max FROM dialogs WHERE did = ?), ?) WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r9 = r9.executeFast(r10)     // Catch:{ Exception -> 0x02bf }
            r9.requery()     // Catch:{ Exception -> 0x02bf }
            r10 = 1
            r9.bindLong(r10, r6)     // Catch:{ Exception -> 0x02bf }
            r10 = 2
            r9.bindInteger(r10, r0)     // Catch:{ Exception -> 0x02bf }
            r0 = 3
            r9.bindLong(r0, r6)     // Catch:{ Exception -> 0x02bf }
            r9.step()     // Catch:{ Exception -> 0x02bf }
            r9.dispose()     // Catch:{ Exception -> 0x02bf }
            int r8 = r8 + 1
            goto L_0x01b7
        L_0x01e5:
            int r0 = r3.size()     // Catch:{ Exception -> 0x02bf }
            if (r0 > 0) goto L_0x01f5
            int r0 = r4.size()     // Catch:{ Exception -> 0x02bf }
            if (r0 <= 0) goto L_0x01f2
            goto L_0x01f5
        L_0x01f2:
            r0 = 1
            goto L_0x02a7
        L_0x01f5:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02bf }
            r0.beginTransaction()     // Catch:{ Exception -> 0x02bf }
            int r0 = r3.size()     // Catch:{ Exception -> 0x02bf }
            if (r0 <= 0) goto L_0x026e
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x02bf }
            r0.<init>()     // Catch:{ Exception -> 0x02bf }
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database     // Catch:{ Exception -> 0x02bf }
            java.lang.String r6 = "UPDATE dialogs SET unread_count = ? WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r6)     // Catch:{ Exception -> 0x02bf }
            r8 = 0
        L_0x020e:
            int r6 = r3.size()     // Catch:{ Exception -> 0x02bf }
            if (r8 >= r6) goto L_0x0266
            long r6 = r3.keyAt(r8)     // Catch:{ Exception -> 0x02bf }
            int r9 = r3.valueAt(r8)     // Catch:{ Exception -> 0x02bf }
            org.telegram.SQLite.SQLiteDatabase r10 = r1.database     // Catch:{ Exception -> 0x02bf }
            java.lang.StringBuilder r11 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x02bf }
            r11.<init>()     // Catch:{ Exception -> 0x02bf }
            java.lang.String r12 = "SELECT unread_count FROM dialogs WHERE did = "
            r11.append(r12)     // Catch:{ Exception -> 0x02bf }
            r11.append(r6)     // Catch:{ Exception -> 0x02bf }
            java.lang.String r11 = r11.toString()     // Catch:{ Exception -> 0x02bf }
            r12 = 0
            java.lang.Object[] r13 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x02bf }
            org.telegram.SQLite.SQLiteCursor r10 = r10.queryFinalized(r11, r13)     // Catch:{ Exception -> 0x02bf }
            boolean r11 = r10.next()     // Catch:{ Exception -> 0x02bf }
            if (r11 == 0) goto L_0x0241
            int r11 = r10.intValue(r12)     // Catch:{ Exception -> 0x02bf }
            goto L_0x0242
        L_0x0241:
            r11 = 0
        L_0x0242:
            r10.dispose()     // Catch:{ Exception -> 0x02bf }
            if (r11 != r9) goto L_0x024e
            r3.removeAt(r8)     // Catch:{ Exception -> 0x02bf }
            int r8 = r8 + -1
        L_0x024c:
            r6 = 1
            goto L_0x0264
        L_0x024e:
            r2.requery()     // Catch:{ Exception -> 0x02bf }
            r10 = 1
            r2.bindInteger(r10, r9)     // Catch:{ Exception -> 0x02bf }
            r9 = 2
            r2.bindLong(r9, r6)     // Catch:{ Exception -> 0x02bf }
            r2.step()     // Catch:{ Exception -> 0x02bf }
            java.lang.Long r6 = java.lang.Long.valueOf(r6)     // Catch:{ Exception -> 0x02bf }
            r0.add(r6)     // Catch:{ Exception -> 0x02bf }
            goto L_0x024c
        L_0x0264:
            int r8 = r8 + r6
            goto L_0x020e
        L_0x0266:
            r12 = 0
            r2.dispose()     // Catch:{ Exception -> 0x02bf }
            r1.updateWidgets((java.util.ArrayList<java.lang.Long>) r0)     // Catch:{ Exception -> 0x02bf }
            goto L_0x026f
        L_0x026e:
            r12 = 0
        L_0x026f:
            int r0 = r4.size()     // Catch:{ Exception -> 0x02bf }
            if (r0 <= 0) goto L_0x02a0
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02bf }
            java.lang.String r2 = "UPDATE dialogs SET unread_count_i = ? WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x02bf }
            r10 = 0
        L_0x027e:
            int r2 = r4.size()     // Catch:{ Exception -> 0x02bf }
            if (r10 >= r2) goto L_0x029d
            r0.requery()     // Catch:{ Exception -> 0x02bf }
            int r2 = r4.valueAt(r10)     // Catch:{ Exception -> 0x02bf }
            r6 = 1
            r0.bindInteger(r6, r2)     // Catch:{ Exception -> 0x02bf }
            long r6 = r4.keyAt(r10)     // Catch:{ Exception -> 0x02bf }
            r2 = 2
            r0.bindLong(r2, r6)     // Catch:{ Exception -> 0x02bf }
            r0.step()     // Catch:{ Exception -> 0x02bf }
            int r10 = r10 + 1
            goto L_0x027e
        L_0x029d:
            r0.dispose()     // Catch:{ Exception -> 0x02bf }
        L_0x02a0:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02bf }
            r0.commitTransaction()     // Catch:{ Exception -> 0x02bf }
            goto L_0x01f2
        L_0x02a7:
            r1.updateFiltersReadCounter(r3, r4, r0)     // Catch:{ Exception -> 0x02bf }
            org.telegram.messenger.MessagesController r0 = r21.getMessagesController()     // Catch:{ Exception -> 0x02bf }
            r0.processDialogsUpdateRead(r3, r4)     // Catch:{ Exception -> 0x02bf }
            boolean r0 = r5.isEmpty()     // Catch:{ Exception -> 0x02bf }
            if (r0 != 0) goto L_0x02c3
            org.telegram.messenger.MessagesController r0 = r21.getMessagesController()     // Catch:{ Exception -> 0x02bf }
            r0.reloadMentionsCountForChannels(r5)     // Catch:{ Exception -> 0x02bf }
            goto L_0x02c3
        L_0x02bf:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x02c3:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.updateDialogsWithReadMessagesInternal(java.util.ArrayList, org.telegram.messenger.support.LongSparseIntArray, org.telegram.messenger.support.LongSparseIntArray, androidx.collection.LongSparseArray):void");
    }

    private static boolean isEmpty(SparseArray<?> sparseArray) {
        return sparseArray == null || sparseArray.size() == 0;
    }

    private static boolean isEmpty(LongSparseIntArray longSparseIntArray) {
        return longSparseIntArray == null || longSparseIntArray.size() == 0;
    }

    private static boolean isEmpty(List<?> list) {
        return list == null || list.isEmpty();
    }

    private static boolean isEmpty(SparseIntArray sparseIntArray) {
        return sparseIntArray == null || sparseIntArray.size() == 0;
    }

    private static boolean isEmpty(LongSparseArray<?> longSparseArray) {
        return longSparseArray == null || longSparseArray.size() == 0;
    }

    public void updateDialogsWithReadMessages(LongSparseIntArray longSparseIntArray, LongSparseIntArray longSparseIntArray2, LongSparseArray<ArrayList<Integer>> longSparseArray, boolean z) {
        if (isEmpty(longSparseIntArray) && isEmpty(longSparseIntArray2) && isEmpty((LongSparseArray<?>) longSparseArray)) {
            return;
        }
        if (z) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda155(this, longSparseIntArray, longSparseIntArray2, longSparseArray));
        } else {
            updateDialogsWithReadMessagesInternal((ArrayList<Integer>) null, longSparseIntArray, longSparseIntArray2, longSparseArray);
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$updateDialogsWithReadMessages$89(LongSparseIntArray longSparseIntArray, LongSparseIntArray longSparseIntArray2, LongSparseArray longSparseArray) {
        updateDialogsWithReadMessagesInternal((ArrayList<Integer>) null, longSparseIntArray, longSparseIntArray2, longSparseArray);
    }

    public void updateChatParticipants(TLRPC$ChatParticipants tLRPC$ChatParticipants) {
        if (tLRPC$ChatParticipants != null) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda161(this, tLRPC$ChatParticipants));
        }
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:24:0x00ac  */
    /* JADX WARNING: Removed duplicated region for block: B:26:0x00b2  */
    /* JADX WARNING: Removed duplicated region for block: B:30:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$updateChatParticipants$91(org.telegram.tgnet.TLRPC$ChatParticipants r10) {
        /*
            r9 = this;
            r0 = 0
            org.telegram.SQLite.SQLiteDatabase r1 = r9.database     // Catch:{ Exception -> 0x00a6 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x00a6 }
            r2.<init>()     // Catch:{ Exception -> 0x00a6 }
            java.lang.String r3 = "SELECT info, pinned, online, inviter FROM chat_settings_v2 WHERE uid = "
            r2.append(r3)     // Catch:{ Exception -> 0x00a6 }
            long r3 = r10.chat_id     // Catch:{ Exception -> 0x00a6 }
            r2.append(r3)     // Catch:{ Exception -> 0x00a6 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x00a6 }
            r3 = 0
            java.lang.Object[] r4 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x00a6 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r2, r4)     // Catch:{ Exception -> 0x00a6 }
            java.util.ArrayList r2 = new java.util.ArrayList     // Catch:{ Exception -> 0x00a1, all -> 0x009e }
            r2.<init>()     // Catch:{ Exception -> 0x00a1, all -> 0x009e }
            boolean r2 = r1.next()     // Catch:{ Exception -> 0x00a1, all -> 0x009e }
            r4 = 3
            r5 = 2
            r6 = 1
            if (r2 == 0) goto L_0x004f
            org.telegram.tgnet.NativeByteBuffer r2 = r1.byteBufferValue(r3)     // Catch:{ Exception -> 0x00a1, all -> 0x009e }
            if (r2 == 0) goto L_0x004f
            int r7 = r2.readInt32(r3)     // Catch:{ Exception -> 0x00a1, all -> 0x009e }
            org.telegram.tgnet.TLRPC$ChatFull r3 = org.telegram.tgnet.TLRPC$ChatFull.TLdeserialize(r2, r7, r3)     // Catch:{ Exception -> 0x00a1, all -> 0x009e }
            r2.reuse()     // Catch:{ Exception -> 0x00a1, all -> 0x009e }
            int r2 = r1.intValue(r6)     // Catch:{ Exception -> 0x00a1, all -> 0x009e }
            r3.pinned_msg_id = r2     // Catch:{ Exception -> 0x00a1, all -> 0x009e }
            int r2 = r1.intValue(r5)     // Catch:{ Exception -> 0x00a1, all -> 0x009e }
            r3.online_count = r2     // Catch:{ Exception -> 0x00a1, all -> 0x009e }
            long r7 = r1.longValue(r4)     // Catch:{ Exception -> 0x00a1, all -> 0x009e }
            r3.inviterId = r7     // Catch:{ Exception -> 0x00a1, all -> 0x009e }
            goto L_0x0050
        L_0x004f:
            r3 = r0
        L_0x0050:
            r1.dispose()     // Catch:{ Exception -> 0x00a1, all -> 0x009e }
            boolean r1 = r3 instanceof org.telegram.tgnet.TLRPC$TL_chatFull     // Catch:{ Exception -> 0x00a6 }
            if (r1 == 0) goto L_0x00af
            r3.participants = r10     // Catch:{ Exception -> 0x00a6 }
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda159 r10 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda159     // Catch:{ Exception -> 0x00a6 }
            r10.<init>(r9, r3)     // Catch:{ Exception -> 0x00a6 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r10)     // Catch:{ Exception -> 0x00a6 }
            org.telegram.SQLite.SQLiteDatabase r10 = r9.database     // Catch:{ Exception -> 0x00a6 }
            java.lang.String r1 = "REPLACE INTO chat_settings_v2 VALUES(?, ?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r10 = r10.executeFast(r1)     // Catch:{ Exception -> 0x00a6 }
            org.telegram.tgnet.NativeByteBuffer r1 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x00a6 }
            int r2 = r3.getObjectSize()     // Catch:{ Exception -> 0x00a6 }
            r1.<init>((int) r2)     // Catch:{ Exception -> 0x00a6 }
            r3.serializeToStream(r1)     // Catch:{ Exception -> 0x00a6 }
            long r7 = r3.id     // Catch:{ Exception -> 0x00a6 }
            r10.bindLong(r6, r7)     // Catch:{ Exception -> 0x00a6 }
            r10.bindByteBuffer((int) r5, (org.telegram.tgnet.NativeByteBuffer) r1)     // Catch:{ Exception -> 0x00a6 }
            int r2 = r3.pinned_msg_id     // Catch:{ Exception -> 0x00a6 }
            r10.bindInteger(r4, r2)     // Catch:{ Exception -> 0x00a6 }
            r2 = 4
            int r4 = r3.online_count     // Catch:{ Exception -> 0x00a6 }
            r10.bindInteger(r2, r4)     // Catch:{ Exception -> 0x00a6 }
            r2 = 5
            long r4 = r3.inviterId     // Catch:{ Exception -> 0x00a6 }
            r10.bindLong(r2, r4)     // Catch:{ Exception -> 0x00a6 }
            r2 = 6
            int r3 = r3.invitesCount     // Catch:{ Exception -> 0x00a6 }
            r10.bindInteger(r2, r3)     // Catch:{ Exception -> 0x00a6 }
            r10.step()     // Catch:{ Exception -> 0x00a6 }
            r10.dispose()     // Catch:{ Exception -> 0x00a6 }
            r1.reuse()     // Catch:{ Exception -> 0x00a6 }
            goto L_0x00af
        L_0x009e:
            r10 = move-exception
            r0 = r1
            goto L_0x00b0
        L_0x00a1:
            r10 = move-exception
            r0 = r1
            goto L_0x00a7
        L_0x00a4:
            r10 = move-exception
            goto L_0x00b0
        L_0x00a6:
            r10 = move-exception
        L_0x00a7:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r10)     // Catch:{ all -> 0x00a4 }
            if (r0 == 0) goto L_0x00af
            r0.dispose()
        L_0x00af:
            return
        L_0x00b0:
            if (r0 == 0) goto L_0x00b5
            r0.dispose()
        L_0x00b5:
            throw r10
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$updateChatParticipants$91(org.telegram.tgnet.TLRPC$ChatParticipants):void");
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$updateChatParticipants$90(TLRPC$ChatFull tLRPC$ChatFull) {
        NotificationCenter notificationCenter = getNotificationCenter();
        int i = NotificationCenter.chatInfoDidLoad;
        Boolean bool = Boolean.FALSE;
        notificationCenter.postNotificationName(i, tLRPC$ChatFull, 0, bool, bool);
    }

    public void loadChannelAdmins(long j) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda65(this, j));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:26:0x0061  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$loadChannelAdmins$92(long r9) {
        /*
            r8 = this;
            r0 = 0
            org.telegram.SQLite.SQLiteDatabase r1 = r8.database     // Catch:{ Exception -> 0x0055 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0055 }
            r2.<init>()     // Catch:{ Exception -> 0x0055 }
            java.lang.String r3 = "SELECT uid, data FROM channel_admins_v3 WHERE did = "
            r2.append(r3)     // Catch:{ Exception -> 0x0055 }
            r2.append(r9)     // Catch:{ Exception -> 0x0055 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x0055 }
            r3 = 0
            java.lang.Object[] r4 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x0055 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r2, r4)     // Catch:{ Exception -> 0x0055 }
            androidx.collection.LongSparseArray r2 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x0050, all -> 0x004d }
            r2.<init>()     // Catch:{ Exception -> 0x0050, all -> 0x004d }
        L_0x0020:
            boolean r4 = r1.next()     // Catch:{ Exception -> 0x0050, all -> 0x004d }
            r5 = 1
            if (r4 == 0) goto L_0x0042
            org.telegram.tgnet.NativeByteBuffer r4 = r1.byteBufferValue(r5)     // Catch:{ Exception -> 0x0050, all -> 0x004d }
            if (r4 == 0) goto L_0x0020
            int r5 = r4.readInt32(r3)     // Catch:{ Exception -> 0x0050, all -> 0x004d }
            org.telegram.tgnet.TLRPC$ChannelParticipant r5 = org.telegram.tgnet.TLRPC$ChannelParticipant.TLdeserialize(r4, r5, r3)     // Catch:{ Exception -> 0x0050, all -> 0x004d }
            r4.reuse()     // Catch:{ Exception -> 0x0050, all -> 0x004d }
            if (r5 == 0) goto L_0x0020
            long r6 = r1.longValue(r3)     // Catch:{ Exception -> 0x0050, all -> 0x004d }
            r2.put(r6, r5)     // Catch:{ Exception -> 0x0050, all -> 0x004d }
            goto L_0x0020
        L_0x0042:
            r1.dispose()     // Catch:{ Exception -> 0x0050, all -> 0x004d }
            org.telegram.messenger.MessagesController r1 = r8.getMessagesController()     // Catch:{ Exception -> 0x0055 }
            r1.processLoadedChannelAdmins(r2, r9, r5)     // Catch:{ Exception -> 0x0055 }
            goto L_0x005e
        L_0x004d:
            r9 = move-exception
            r0 = r1
            goto L_0x005f
        L_0x0050:
            r9 = move-exception
            r0 = r1
            goto L_0x0056
        L_0x0053:
            r9 = move-exception
            goto L_0x005f
        L_0x0055:
            r9 = move-exception
        L_0x0056:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r9)     // Catch:{ all -> 0x0053 }
            if (r0 == 0) goto L_0x005e
            r0.dispose()
        L_0x005e:
            return
        L_0x005f:
            if (r0 == 0) goto L_0x0064
            r0.dispose()
        L_0x0064:
            goto L_0x0066
        L_0x0065:
            throw r9
        L_0x0066:
            goto L_0x0065
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$loadChannelAdmins$92(long):void");
    }

    public void putChannelAdmins(long j, LongSparseArray<TLRPC$ChannelParticipant> longSparseArray) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda92(this, j, longSparseArray));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:22:0x0082  */
    /* JADX WARNING: Removed duplicated region for block: B:25:0x008d  */
    /* JADX WARNING: Removed duplicated region for block: B:30:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$putChannelAdmins$93(long r7, androidx.collection.LongSparseArray r9) {
        /*
            r6 = this;
            r0 = 0
            org.telegram.SQLite.SQLiteDatabase r1 = r6.database     // Catch:{ Exception -> 0x0077 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0077 }
            r2.<init>()     // Catch:{ Exception -> 0x0077 }
            java.lang.String r3 = "DELETE FROM channel_admins_v3 WHERE did = "
            r2.append(r3)     // Catch:{ Exception -> 0x0077 }
            r2.append(r7)     // Catch:{ Exception -> 0x0077 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x0077 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0077 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x0077 }
            r1.dispose()     // Catch:{ Exception -> 0x0077 }
            org.telegram.SQLite.SQLiteDatabase r1 = r6.database     // Catch:{ Exception -> 0x0077 }
            r1.beginTransaction()     // Catch:{ Exception -> 0x0077 }
            org.telegram.SQLite.SQLiteDatabase r1 = r6.database     // Catch:{ Exception -> 0x0077 }
            java.lang.String r2 = "REPLACE INTO channel_admins_v3 VALUES(?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0077 }
            r2 = 0
        L_0x002d:
            int r3 = r9.size()     // Catch:{ Exception -> 0x0072, all -> 0x006f }
            if (r2 >= r3) goto L_0x0061
            r1.requery()     // Catch:{ Exception -> 0x0072, all -> 0x006f }
            r3 = 1
            r1.bindLong(r3, r7)     // Catch:{ Exception -> 0x0072, all -> 0x006f }
            r3 = 2
            long r4 = r9.keyAt(r2)     // Catch:{ Exception -> 0x0072, all -> 0x006f }
            r1.bindLong(r3, r4)     // Catch:{ Exception -> 0x0072, all -> 0x006f }
            java.lang.Object r3 = r9.valueAt(r2)     // Catch:{ Exception -> 0x0072, all -> 0x006f }
            org.telegram.tgnet.TLRPC$ChannelParticipant r3 = (org.telegram.tgnet.TLRPC$ChannelParticipant) r3     // Catch:{ Exception -> 0x0072, all -> 0x006f }
            org.telegram.tgnet.NativeByteBuffer r4 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0072, all -> 0x006f }
            int r5 = r3.getObjectSize()     // Catch:{ Exception -> 0x0072, all -> 0x006f }
            r4.<init>((int) r5)     // Catch:{ Exception -> 0x0072, all -> 0x006f }
            r3.serializeToStream(r4)     // Catch:{ Exception -> 0x0072, all -> 0x006f }
            r3 = 3
            r1.bindByteBuffer((int) r3, (org.telegram.tgnet.NativeByteBuffer) r4)     // Catch:{ Exception -> 0x0072, all -> 0x006f }
            r1.step()     // Catch:{ Exception -> 0x0072, all -> 0x006f }
            r4.reuse()     // Catch:{ Exception -> 0x0072, all -> 0x006f }
            int r2 = r2 + 1
            goto L_0x002d
        L_0x0061:
            r1.dispose()     // Catch:{ Exception -> 0x0072, all -> 0x006f }
            org.telegram.SQLite.SQLiteDatabase r7 = r6.database     // Catch:{ Exception -> 0x0077 }
            r7.commitTransaction()     // Catch:{ Exception -> 0x0077 }
            org.telegram.SQLite.SQLiteDatabase r7 = r6.database
            r7.commitTransaction()
            goto L_0x0085
        L_0x006f:
            r7 = move-exception
            r0 = r1
            goto L_0x0086
        L_0x0072:
            r7 = move-exception
            r0 = r1
            goto L_0x0078
        L_0x0075:
            r7 = move-exception
            goto L_0x0086
        L_0x0077:
            r7 = move-exception
        L_0x0078:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r7)     // Catch:{ all -> 0x0075 }
            org.telegram.SQLite.SQLiteDatabase r7 = r6.database
            r7.commitTransaction()
            if (r0 == 0) goto L_0x0085
            r0.dispose()
        L_0x0085:
            return
        L_0x0086:
            org.telegram.SQLite.SQLiteDatabase r8 = r6.database
            r8.commitTransaction()
            if (r0 == 0) goto L_0x0090
            r0.dispose()
        L_0x0090:
            goto L_0x0092
        L_0x0091:
            throw r7
        L_0x0092:
            goto L_0x0091
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$putChannelAdmins$93(long, androidx.collection.LongSparseArray):void");
    }

    public void updateChannelUsers(long j, ArrayList<TLRPC$ChannelParticipant> arrayList) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda95(this, j, arrayList));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:22:0x009c  */
    /* JADX WARNING: Removed duplicated region for block: B:25:0x00a7  */
    /* JADX WARNING: Removed duplicated region for block: B:30:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$updateChannelUsers$94(long r11, java.util.ArrayList r13) {
        /*
            r10 = this;
            long r0 = -r11
            r2 = 0
            org.telegram.SQLite.SQLiteDatabase r3 = r10.database     // Catch:{ Exception -> 0x0091 }
            java.lang.StringBuilder r4 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0091 }
            r4.<init>()     // Catch:{ Exception -> 0x0091 }
            java.lang.String r5 = "DELETE FROM channel_users_v2 WHERE did = "
            r4.append(r5)     // Catch:{ Exception -> 0x0091 }
            r4.append(r0)     // Catch:{ Exception -> 0x0091 }
            java.lang.String r4 = r4.toString()     // Catch:{ Exception -> 0x0091 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.executeFast(r4)     // Catch:{ Exception -> 0x0091 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.stepThis()     // Catch:{ Exception -> 0x0091 }
            r3.dispose()     // Catch:{ Exception -> 0x0091 }
            org.telegram.SQLite.SQLiteDatabase r3 = r10.database     // Catch:{ Exception -> 0x0091 }
            r3.beginTransaction()     // Catch:{ Exception -> 0x0091 }
            org.telegram.SQLite.SQLiteDatabase r3 = r10.database     // Catch:{ Exception -> 0x0091 }
            java.lang.String r4 = "REPLACE INTO channel_users_v2 VALUES(?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.executeFast(r4)     // Catch:{ Exception -> 0x0091 }
            long r4 = java.lang.System.currentTimeMillis()     // Catch:{ Exception -> 0x008c, all -> 0x0089 }
            r6 = 1000(0x3e8, double:4.94E-321)
            long r4 = r4 / r6
            int r5 = (int) r4     // Catch:{ Exception -> 0x008c, all -> 0x0089 }
            r4 = 0
        L_0x0036:
            int r6 = r13.size()     // Catch:{ Exception -> 0x008c, all -> 0x0089 }
            if (r4 >= r6) goto L_0x0072
            java.lang.Object r6 = r13.get(r4)     // Catch:{ Exception -> 0x008c, all -> 0x0089 }
            org.telegram.tgnet.TLRPC$ChannelParticipant r6 = (org.telegram.tgnet.TLRPC$ChannelParticipant) r6     // Catch:{ Exception -> 0x008c, all -> 0x0089 }
            r3.requery()     // Catch:{ Exception -> 0x008c, all -> 0x0089 }
            r7 = 1
            r3.bindLong(r7, r0)     // Catch:{ Exception -> 0x008c, all -> 0x0089 }
            r7 = 2
            org.telegram.tgnet.TLRPC$Peer r8 = r6.peer     // Catch:{ Exception -> 0x008c, all -> 0x0089 }
            long r8 = org.telegram.messenger.MessageObject.getPeerId(r8)     // Catch:{ Exception -> 0x008c, all -> 0x0089 }
            r3.bindLong(r7, r8)     // Catch:{ Exception -> 0x008c, all -> 0x0089 }
            r7 = 3
            r3.bindInteger(r7, r5)     // Catch:{ Exception -> 0x008c, all -> 0x0089 }
            org.telegram.tgnet.NativeByteBuffer r7 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x008c, all -> 0x0089 }
            int r8 = r6.getObjectSize()     // Catch:{ Exception -> 0x008c, all -> 0x0089 }
            r7.<init>((int) r8)     // Catch:{ Exception -> 0x008c, all -> 0x0089 }
            r6.serializeToStream(r7)     // Catch:{ Exception -> 0x008c, all -> 0x0089 }
            r6 = 4
            r3.bindByteBuffer((int) r6, (org.telegram.tgnet.NativeByteBuffer) r7)     // Catch:{ Exception -> 0x008c, all -> 0x0089 }
            r3.step()     // Catch:{ Exception -> 0x008c, all -> 0x0089 }
            r7.reuse()     // Catch:{ Exception -> 0x008c, all -> 0x0089 }
            int r5 = r5 + -1
            int r4 = r4 + 1
            goto L_0x0036
        L_0x0072:
            r3.dispose()     // Catch:{ Exception -> 0x008c, all -> 0x0089 }
            org.telegram.SQLite.SQLiteDatabase r13 = r10.database     // Catch:{ Exception -> 0x0091 }
            r13.commitTransaction()     // Catch:{ Exception -> 0x0091 }
            r6 = 1
            r7 = 0
            r8 = 0
            r9 = 1
            r3 = r10
            r4 = r11
            r3.loadChatInfo(r4, r6, r7, r8, r9)     // Catch:{ Exception -> 0x0091 }
            org.telegram.SQLite.SQLiteDatabase r11 = r10.database
            r11.commitTransaction()
            goto L_0x009f
        L_0x0089:
            r11 = move-exception
            r2 = r3
            goto L_0x00a0
        L_0x008c:
            r11 = move-exception
            r2 = r3
            goto L_0x0092
        L_0x008f:
            r11 = move-exception
            goto L_0x00a0
        L_0x0091:
            r11 = move-exception
        L_0x0092:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r11)     // Catch:{ all -> 0x008f }
            org.telegram.SQLite.SQLiteDatabase r11 = r10.database
            r11.commitTransaction()
            if (r2 == 0) goto L_0x009f
            r2.dispose()
        L_0x009f:
            return
        L_0x00a0:
            org.telegram.SQLite.SQLiteDatabase r12 = r10.database
            r12.commitTransaction()
            if (r2 == 0) goto L_0x00aa
            r2.dispose()
        L_0x00aa:
            goto L_0x00ac
        L_0x00ab:
            throw r11
        L_0x00ac:
            goto L_0x00ab
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$updateChannelUsers$94(long, java.util.ArrayList):void");
    }

    public void saveBotCache(String str, TLObject tLObject) {
        if (tLObject != null && !TextUtils.isEmpty(str)) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda156(this, tLObject, str));
        }
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:25:0x005c  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$saveBotCache$95(org.telegram.tgnet.TLObject r6, java.lang.String r7) {
        /*
            r5 = this;
            r0 = 0
            org.telegram.tgnet.ConnectionsManager r1 = r5.getConnectionsManager()     // Catch:{ Exception -> 0x0050 }
            int r1 = r1.getCurrentTime()     // Catch:{ Exception -> 0x0050 }
            boolean r2 = r6 instanceof org.telegram.tgnet.TLRPC$TL_messages_botCallbackAnswer     // Catch:{ Exception -> 0x0050 }
            if (r2 == 0) goto L_0x0014
            r2 = r6
            org.telegram.tgnet.TLRPC$TL_messages_botCallbackAnswer r2 = (org.telegram.tgnet.TLRPC$TL_messages_botCallbackAnswer) r2     // Catch:{ Exception -> 0x0050 }
            int r2 = r2.cache_time     // Catch:{ Exception -> 0x0050 }
        L_0x0012:
            int r1 = r1 + r2
            goto L_0x001e
        L_0x0014:
            boolean r2 = r6 instanceof org.telegram.tgnet.TLRPC$TL_messages_botResults     // Catch:{ Exception -> 0x0050 }
            if (r2 == 0) goto L_0x001e
            r2 = r6
            org.telegram.tgnet.TLRPC$TL_messages_botResults r2 = (org.telegram.tgnet.TLRPC$TL_messages_botResults) r2     // Catch:{ Exception -> 0x0050 }
            int r2 = r2.cache_time     // Catch:{ Exception -> 0x0050 }
            goto L_0x0012
        L_0x001e:
            org.telegram.SQLite.SQLiteDatabase r2 = r5.database     // Catch:{ Exception -> 0x0050 }
            java.lang.String r3 = "REPLACE INTO botcache VALUES(?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r3)     // Catch:{ Exception -> 0x0050 }
            org.telegram.tgnet.NativeByteBuffer r3 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x004b, all -> 0x0048 }
            int r4 = r6.getObjectSize()     // Catch:{ Exception -> 0x004b, all -> 0x0048 }
            r3.<init>((int) r4)     // Catch:{ Exception -> 0x004b, all -> 0x0048 }
            r6.serializeToStream(r3)     // Catch:{ Exception -> 0x004b, all -> 0x0048 }
            r6 = 1
            r2.bindString(r6, r7)     // Catch:{ Exception -> 0x004b, all -> 0x0048 }
            r6 = 2
            r2.bindInteger(r6, r1)     // Catch:{ Exception -> 0x004b, all -> 0x0048 }
            r6 = 3
            r2.bindByteBuffer((int) r6, (org.telegram.tgnet.NativeByteBuffer) r3)     // Catch:{ Exception -> 0x004b, all -> 0x0048 }
            r2.step()     // Catch:{ Exception -> 0x004b, all -> 0x0048 }
            r2.dispose()     // Catch:{ Exception -> 0x004b, all -> 0x0048 }
            r3.reuse()     // Catch:{ Exception -> 0x0050 }
            goto L_0x0059
        L_0x0048:
            r6 = move-exception
            r0 = r2
            goto L_0x005a
        L_0x004b:
            r6 = move-exception
            r0 = r2
            goto L_0x0051
        L_0x004e:
            r6 = move-exception
            goto L_0x005a
        L_0x0050:
            r6 = move-exception
        L_0x0051:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r6)     // Catch:{ all -> 0x004e }
            if (r0 == 0) goto L_0x0059
            r0.dispose()
        L_0x0059:
            return
        L_0x005a:
            if (r0 == 0) goto L_0x005f
            r0.dispose()
        L_0x005f:
            goto L_0x0061
        L_0x0060:
            throw r6
        L_0x0061:
            goto L_0x0060
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$saveBotCache$95(org.telegram.tgnet.TLObject, java.lang.String):void");
    }

    public void getBotCache(String str, RequestDelegate requestDelegate) {
        if (str != null && requestDelegate != null) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda52(this, getConnectionsManager().getCurrentTime(), str, requestDelegate));
        }
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:24:0x0060, code lost:
        r6 = th;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:25:0x0061, code lost:
        r1 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:26:0x0063, code lost:
        r6 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:27:0x0064, code lost:
        r1 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:40:0x007f, code lost:
        r5.dispose();
     */
    /* JADX WARNING: Failed to process nested try/catch */
    /* JADX WARNING: Removed duplicated region for block: B:24:0x0060 A[ExcHandler: all (th java.lang.Throwable), Splitter:B:3:0x002d] */
    /* JADX WARNING: Removed duplicated region for block: B:36:0x0075  */
    /* JADX WARNING: Removed duplicated region for block: B:40:0x007f  */
    /* JADX WARNING: Removed duplicated region for block: B:44:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$getBotCache$96(int r5, java.lang.String r6, org.telegram.tgnet.RequestDelegate r7) {
        /*
            r4 = this;
            r0 = 0
            org.telegram.SQLite.SQLiteDatabase r1 = r4.database     // Catch:{ Exception -> 0x006a, all -> 0x0066 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x006a, all -> 0x0066 }
            r2.<init>()     // Catch:{ Exception -> 0x006a, all -> 0x0066 }
            java.lang.String r3 = "DELETE FROM botcache WHERE date < "
            r2.append(r3)     // Catch:{ Exception -> 0x006a, all -> 0x0066 }
            r2.append(r5)     // Catch:{ Exception -> 0x006a, all -> 0x0066 }
            java.lang.String r5 = r2.toString()     // Catch:{ Exception -> 0x006a, all -> 0x0066 }
            org.telegram.SQLite.SQLitePreparedStatement r5 = r1.executeFast(r5)     // Catch:{ Exception -> 0x006a, all -> 0x0066 }
            org.telegram.SQLite.SQLitePreparedStatement r5 = r5.stepThis()     // Catch:{ Exception -> 0x006a, all -> 0x0066 }
            r5.dispose()     // Catch:{ Exception -> 0x006a, all -> 0x0066 }
            org.telegram.SQLite.SQLiteDatabase r5 = r4.database     // Catch:{ Exception -> 0x006a, all -> 0x0066 }
            java.lang.String r1 = "SELECT data FROM botcache WHERE id = ?"
            r2 = 1
            java.lang.Object[] r2 = new java.lang.Object[r2]     // Catch:{ Exception -> 0x006a, all -> 0x0066 }
            r3 = 0
            r2[r3] = r6     // Catch:{ Exception -> 0x006a, all -> 0x0066 }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r1, r2)     // Catch:{ Exception -> 0x006a, all -> 0x0066 }
            boolean r6 = r5.next()     // Catch:{ Exception -> 0x0063, all -> 0x0060 }
            if (r6 == 0) goto L_0x0056
            org.telegram.tgnet.NativeByteBuffer r6 = r5.byteBufferValue(r3)     // Catch:{ Exception -> 0x0050, all -> 0x0060 }
            if (r6 == 0) goto L_0x0056
            int r1 = r6.readInt32(r3)     // Catch:{ Exception -> 0x0050, all -> 0x0060 }
            int r2 = org.telegram.tgnet.TLRPC$TL_messages_botCallbackAnswer.constructor     // Catch:{ Exception -> 0x0050, all -> 0x0060 }
            if (r1 != r2) goto L_0x0046
            org.telegram.tgnet.TLRPC$TL_messages_botCallbackAnswer r1 = org.telegram.tgnet.TLRPC$TL_messages_botCallbackAnswer.TLdeserialize(r6, r1, r3)     // Catch:{ Exception -> 0x0050, all -> 0x0060 }
            goto L_0x004a
        L_0x0046:
            org.telegram.tgnet.TLRPC$messages_BotResults r1 = org.telegram.tgnet.TLRPC$messages_BotResults.TLdeserialize(r6, r1, r3)     // Catch:{ Exception -> 0x0050, all -> 0x0060 }
        L_0x004a:
            r6.reuse()     // Catch:{ Exception -> 0x004e }
            goto L_0x0057
        L_0x004e:
            r6 = move-exception
            goto L_0x0052
        L_0x0050:
            r6 = move-exception
            r1 = r0
        L_0x0052:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r6)     // Catch:{ Exception -> 0x005e }
            goto L_0x0057
        L_0x0056:
            r1 = r0
        L_0x0057:
            r5.dispose()     // Catch:{ Exception -> 0x005e }
            r7.run(r1, r0)
            goto L_0x0078
        L_0x005e:
            r6 = move-exception
            goto L_0x006d
        L_0x0060:
            r6 = move-exception
            r1 = r0
            goto L_0x007a
        L_0x0063:
            r6 = move-exception
            r1 = r0
            goto L_0x006d
        L_0x0066:
            r6 = move-exception
            r5 = r0
            r1 = r5
            goto L_0x007a
        L_0x006a:
            r6 = move-exception
            r5 = r0
            r1 = r5
        L_0x006d:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r6)     // Catch:{ all -> 0x0079 }
            r7.run(r1, r0)
            if (r5 == 0) goto L_0x0078
            r5.dispose()
        L_0x0078:
            return
        L_0x0079:
            r6 = move-exception
        L_0x007a:
            r7.run(r1, r0)
            if (r5 == 0) goto L_0x0082
            r5.dispose()
        L_0x0082:
            throw r6
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$getBotCache$96(int, java.lang.String, org.telegram.tgnet.RequestDelegate):void");
    }

    public void loadUserInfo(TLRPC$User tLRPC$User, boolean z, int i, int i2) {
        if (tLRPC$User != null) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda176(this, tLRPC$User, z, i));
        }
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:102:? A[RETURN, SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:92:0x018c  */
    /* JADX WARNING: Removed duplicated region for block: B:96:0x01a1  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$loadUserInfo$97(org.telegram.tgnet.TLRPC$User r20, boolean r21, int r22) {
        /*
            r19 = this;
            r1 = r19
            r3 = r20
            java.util.HashMap r9 = new java.util.HashMap
            r9.<init>()
            java.util.ArrayList r8 = new java.util.ArrayList
            r8.<init>()
            r2 = 0
            r4 = 0
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0174, all -> 0x016e }
            java.lang.StringBuilder r5 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0174, all -> 0x016e }
            r5.<init>()     // Catch:{ Exception -> 0x0174, all -> 0x016e }
            java.lang.String r6 = "SELECT info, pinned FROM user_settings WHERE uid = "
            r5.append(r6)     // Catch:{ Exception -> 0x0174, all -> 0x016e }
            long r6 = r3.id     // Catch:{ Exception -> 0x0174, all -> 0x016e }
            r5.append(r6)     // Catch:{ Exception -> 0x0174, all -> 0x016e }
            java.lang.String r5 = r5.toString()     // Catch:{ Exception -> 0x0174, all -> 0x016e }
            java.lang.Object[] r6 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0174, all -> 0x016e }
            org.telegram.SQLite.SQLiteCursor r5 = r0.queryFinalized(r5, r6)     // Catch:{ Exception -> 0x0174, all -> 0x016e }
            boolean r0 = r5.next()     // Catch:{ Exception -> 0x016a, all -> 0x0166 }
            r6 = 1
            if (r0 == 0) goto L_0x004a
            org.telegram.tgnet.NativeByteBuffer r0 = r5.byteBufferValue(r4)     // Catch:{ Exception -> 0x016a, all -> 0x0166 }
            if (r0 == 0) goto L_0x004a
            int r7 = r0.readInt32(r4)     // Catch:{ Exception -> 0x016a, all -> 0x0166 }
            org.telegram.tgnet.TLRPC$UserFull r7 = org.telegram.tgnet.TLRPC$UserFull.TLdeserialize(r0, r7, r4)     // Catch:{ Exception -> 0x016a, all -> 0x0166 }
            int r10 = r5.intValue(r6)     // Catch:{ Exception -> 0x0162, all -> 0x015e }
            r7.pinned_msg_id = r10     // Catch:{ Exception -> 0x0162, all -> 0x015e }
            r0.reuse()     // Catch:{ Exception -> 0x0162, all -> 0x015e }
            goto L_0x004b
        L_0x004a:
            r7 = r2
        L_0x004b:
            r5.dispose()     // Catch:{ Exception -> 0x0162, all -> 0x015e }
            org.telegram.messenger.MessagesStorage r0 = r19.getMessagesStorage()     // Catch:{ Exception -> 0x015b, all -> 0x0158 }
            org.telegram.SQLite.SQLiteDatabase r0 = r0.getDatabase()     // Catch:{ Exception -> 0x015b, all -> 0x0158 }
            java.util.Locale r5 = java.util.Locale.US     // Catch:{ Exception -> 0x015b, all -> 0x0158 }
            java.lang.String r10 = "SELECT mid FROM chat_pinned_v2 WHERE uid = %d ORDER BY mid DESC"
            java.lang.Object[] r11 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x015b, all -> 0x0158 }
            long r12 = r3.id     // Catch:{ Exception -> 0x015b, all -> 0x0158 }
            java.lang.Long r12 = java.lang.Long.valueOf(r12)     // Catch:{ Exception -> 0x015b, all -> 0x0158 }
            r11[r4] = r12     // Catch:{ Exception -> 0x015b, all -> 0x0158 }
            java.lang.String r5 = java.lang.String.format(r5, r10, r11)     // Catch:{ Exception -> 0x015b, all -> 0x0158 }
            java.lang.Object[] r10 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x015b, all -> 0x0158 }
            org.telegram.SQLite.SQLiteCursor r5 = r0.queryFinalized(r5, r10)     // Catch:{ Exception -> 0x015b, all -> 0x0158 }
        L_0x006e:
            boolean r0 = r5.next()     // Catch:{ Exception -> 0x0162, all -> 0x015e }
            if (r0 == 0) goto L_0x0087
            int r0 = r5.intValue(r4)     // Catch:{ Exception -> 0x0162, all -> 0x015e }
            java.lang.Integer r10 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x0162, all -> 0x015e }
            r8.add(r10)     // Catch:{ Exception -> 0x0162, all -> 0x015e }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x0162, all -> 0x015e }
            r9.put(r0, r2)     // Catch:{ Exception -> 0x0162, all -> 0x015e }
            goto L_0x006e
        L_0x0087:
            r5.dispose()     // Catch:{ Exception -> 0x0162, all -> 0x015e }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x015b, all -> 0x0158 }
            java.lang.StringBuilder r5 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x015b, all -> 0x0158 }
            r5.<init>()     // Catch:{ Exception -> 0x015b, all -> 0x0158 }
            java.lang.String r10 = "SELECT count, end FROM chat_pinned_count WHERE uid = "
            r5.append(r10)     // Catch:{ Exception -> 0x015b, all -> 0x0158 }
            long r10 = r3.id     // Catch:{ Exception -> 0x015b, all -> 0x0158 }
            r5.append(r10)     // Catch:{ Exception -> 0x015b, all -> 0x0158 }
            java.lang.String r5 = r5.toString()     // Catch:{ Exception -> 0x015b, all -> 0x0158 }
            java.lang.Object[] r10 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x015b, all -> 0x0158 }
            org.telegram.SQLite.SQLiteCursor r5 = r0.queryFinalized(r5, r10)     // Catch:{ Exception -> 0x015b, all -> 0x0158 }
            boolean r0 = r5.next()     // Catch:{ Exception -> 0x0162, all -> 0x015e }
            if (r0 == 0) goto L_0x00c6
            int r10 = r5.intValue(r4)     // Catch:{ Exception -> 0x0162, all -> 0x015e }
            int r0 = r5.intValue(r6)     // Catch:{ Exception -> 0x00c1, all -> 0x00bc }
            if (r0 == 0) goto L_0x00b6
            goto L_0x00b7
        L_0x00b6:
            r6 = 0
        L_0x00b7:
            r18 = r6
            r17 = r10
            goto L_0x00ca
        L_0x00bc:
            r0 = move-exception
            r12 = r5
            r4 = r7
            goto L_0x0172
        L_0x00c1:
            r0 = move-exception
            r12 = r5
            r4 = r7
            goto L_0x0178
        L_0x00c6:
            r17 = 0
            r18 = 0
        L_0x00ca:
            r5.dispose()     // Catch:{ Exception -> 0x0150, all -> 0x0148 }
            if (r7 == 0) goto L_0x00fc
            int r0 = r7.pinned_msg_id     // Catch:{ Exception -> 0x0145, all -> 0x0142 }
            if (r0 == 0) goto L_0x00fc
            boolean r0 = r8.isEmpty()     // Catch:{ Exception -> 0x0145, all -> 0x0142 }
            if (r0 != 0) goto L_0x00e7
            int r0 = r7.pinned_msg_id     // Catch:{ Exception -> 0x0145, all -> 0x0142 }
            java.lang.Object r5 = r8.get(r4)     // Catch:{ Exception -> 0x0145, all -> 0x0142 }
            java.lang.Integer r5 = (java.lang.Integer) r5     // Catch:{ Exception -> 0x0145, all -> 0x0142 }
            int r5 = r5.intValue()     // Catch:{ Exception -> 0x0145, all -> 0x0142 }
            if (r0 <= r5) goto L_0x00fc
        L_0x00e7:
            r8.clear()     // Catch:{ Exception -> 0x0145, all -> 0x0142 }
            int r0 = r7.pinned_msg_id     // Catch:{ Exception -> 0x0145, all -> 0x0142 }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x0145, all -> 0x0142 }
            r8.add(r0)     // Catch:{ Exception -> 0x0145, all -> 0x0142 }
            int r0 = r7.pinned_msg_id     // Catch:{ Exception -> 0x0145, all -> 0x0142 }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x0145, all -> 0x0142 }
            r9.put(r0, r2)     // Catch:{ Exception -> 0x0145, all -> 0x0142 }
        L_0x00fc:
            boolean r0 = r8.isEmpty()     // Catch:{ Exception -> 0x0145, all -> 0x0142 }
            if (r0 != 0) goto L_0x012d
            org.telegram.messenger.MediaDataController r10 = r19.getMediaDataController()     // Catch:{ Exception -> 0x0145, all -> 0x0142 }
            long r11 = r3.id     // Catch:{ Exception -> 0x0145, all -> 0x0142 }
            r13 = 0
            r16 = 0
            r15 = r8
            java.util.ArrayList r0 = r10.loadPinnedMessages(r11, r13, r15, r16)     // Catch:{ Exception -> 0x0145, all -> 0x0142 }
            if (r0 == 0) goto L_0x012d
            int r5 = r0.size()     // Catch:{ Exception -> 0x0145, all -> 0x0142 }
        L_0x0117:
            if (r4 >= r5) goto L_0x012d
            java.lang.Object r6 = r0.get(r4)     // Catch:{ Exception -> 0x0145, all -> 0x0142 }
            org.telegram.messenger.MessageObject r6 = (org.telegram.messenger.MessageObject) r6     // Catch:{ Exception -> 0x0145, all -> 0x0142 }
            int r10 = r6.getId()     // Catch:{ Exception -> 0x0145, all -> 0x0142 }
            java.lang.Integer r10 = java.lang.Integer.valueOf(r10)     // Catch:{ Exception -> 0x0145, all -> 0x0142 }
            r9.put(r10, r6)     // Catch:{ Exception -> 0x0145, all -> 0x0142 }
            int r4 = r4 + 1
            goto L_0x0117
        L_0x012d:
            org.telegram.messenger.MessagesController r2 = r19.getMessagesController()
            r5 = 1
            r3 = r20
            r4 = r7
            r6 = r21
            r7 = r22
            r10 = r17
            r11 = r18
            r2.processUserInfo(r3, r4, r5, r6, r7, r8, r9, r10, r11)
            goto L_0x018f
        L_0x0142:
            r0 = move-exception
            r12 = r2
            goto L_0x014a
        L_0x0145:
            r0 = move-exception
            r12 = r2
            goto L_0x0152
        L_0x0148:
            r0 = move-exception
            r12 = r5
        L_0x014a:
            r4 = r7
            r10 = r17
            r11 = r18
            goto L_0x0191
        L_0x0150:
            r0 = move-exception
            r12 = r5
        L_0x0152:
            r4 = r7
            r10 = r17
            r11 = r18
            goto L_0x0179
        L_0x0158:
            r0 = move-exception
            r12 = r2
            goto L_0x0160
        L_0x015b:
            r0 = move-exception
            r12 = r2
            goto L_0x0164
        L_0x015e:
            r0 = move-exception
            r12 = r5
        L_0x0160:
            r4 = r7
            goto L_0x0171
        L_0x0162:
            r0 = move-exception
            r12 = r5
        L_0x0164:
            r4 = r7
            goto L_0x0177
        L_0x0166:
            r0 = move-exception
            r4 = r2
            r12 = r5
            goto L_0x0171
        L_0x016a:
            r0 = move-exception
            r4 = r2
            r12 = r5
            goto L_0x0177
        L_0x016e:
            r0 = move-exception
            r4 = r2
            r12 = r4
        L_0x0171:
            r10 = 0
        L_0x0172:
            r11 = 0
            goto L_0x0191
        L_0x0174:
            r0 = move-exception
            r4 = r2
            r12 = r4
        L_0x0177:
            r10 = 0
        L_0x0178:
            r11 = 0
        L_0x0179:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0190 }
            org.telegram.messenger.MessagesController r2 = r19.getMessagesController()
            r5 = 1
            r3 = r20
            r6 = r21
            r7 = r22
            r2.processUserInfo(r3, r4, r5, r6, r7, r8, r9, r10, r11)
            if (r12 == 0) goto L_0x018f
            r12.dispose()
        L_0x018f:
            return
        L_0x0190:
            r0 = move-exception
        L_0x0191:
            org.telegram.messenger.MessagesController r2 = r19.getMessagesController()
            r5 = 1
            r3 = r20
            r6 = r21
            r7 = r22
            r2.processUserInfo(r3, r4, r5, r6, r7, r8, r9, r10, r11)
            if (r12 == 0) goto L_0x01a4
            r12.dispose()
        L_0x01a4:
            goto L_0x01a6
        L_0x01a5:
            throw r0
        L_0x01a6:
            goto L_0x01a5
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$loadUserInfo$97(org.telegram.tgnet.TLRPC$User, boolean, int):void");
    }

    public void updateUserInfo(TLRPC$UserFull tLRPC$UserFull, boolean z) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda192(this, z, tLRPC$UserFull));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:32:0x009b  */
    /* JADX WARNING: Removed duplicated region for block: B:34:0x00a0  */
    /* JADX WARNING: Removed duplicated region for block: B:37:0x00a7  */
    /* JADX WARNING: Removed duplicated region for block: B:39:0x00ac  */
    /* JADX WARNING: Removed duplicated region for block: B:43:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$updateUserInfo$98(boolean r8, org.telegram.tgnet.TLRPC$UserFull r9) {
        /*
            r7 = this;
            r0 = 0
            if (r8 == 0) goto L_0x002e
            org.telegram.SQLite.SQLiteDatabase r8 = r7.database     // Catch:{ Exception -> 0x0094, all -> 0x0091 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0094, all -> 0x0091 }
            r1.<init>()     // Catch:{ Exception -> 0x0094, all -> 0x0091 }
            java.lang.String r2 = "SELECT uid FROM user_settings WHERE uid = "
            r1.append(r2)     // Catch:{ Exception -> 0x0094, all -> 0x0091 }
            org.telegram.tgnet.TLRPC$User r2 = r9.user     // Catch:{ Exception -> 0x0094, all -> 0x0091 }
            long r2 = r2.id     // Catch:{ Exception -> 0x0094, all -> 0x0091 }
            r1.append(r2)     // Catch:{ Exception -> 0x0094, all -> 0x0091 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0094, all -> 0x0091 }
            r2 = 0
            java.lang.Object[] r2 = new java.lang.Object[r2]     // Catch:{ Exception -> 0x0094, all -> 0x0091 }
            org.telegram.SQLite.SQLiteCursor r8 = r8.queryFinalized(r1, r2)     // Catch:{ Exception -> 0x0094, all -> 0x0091 }
            boolean r1 = r8.next()     // Catch:{ Exception -> 0x002b }
            r8.dispose()     // Catch:{ Exception -> 0x002b }
            if (r1 != 0) goto L_0x002e
            return
        L_0x002b:
            r9 = move-exception
            goto L_0x0096
        L_0x002e:
            org.telegram.SQLite.SQLiteDatabase r8 = r7.database     // Catch:{ Exception -> 0x0094, all -> 0x0091 }
            java.lang.String r1 = "REPLACE INTO user_settings VALUES(?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r8 = r8.executeFast(r1)     // Catch:{ Exception -> 0x0094, all -> 0x0091 }
            org.telegram.tgnet.NativeByteBuffer r1 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x008c, all -> 0x0087 }
            int r2 = r9.getObjectSize()     // Catch:{ Exception -> 0x008c, all -> 0x0087 }
            r1.<init>((int) r2)     // Catch:{ Exception -> 0x008c, all -> 0x0087 }
            r9.serializeToStream(r1)     // Catch:{ Exception -> 0x008c, all -> 0x0087 }
            org.telegram.tgnet.TLRPC$User r2 = r9.user     // Catch:{ Exception -> 0x008c, all -> 0x0087 }
            long r2 = r2.id     // Catch:{ Exception -> 0x008c, all -> 0x0087 }
            r4 = 1
            r8.bindLong(r4, r2)     // Catch:{ Exception -> 0x008c, all -> 0x0087 }
            r2 = 2
            r8.bindByteBuffer((int) r2, (org.telegram.tgnet.NativeByteBuffer) r1)     // Catch:{ Exception -> 0x008c, all -> 0x0087 }
            r3 = 3
            int r5 = r9.pinned_msg_id     // Catch:{ Exception -> 0x008c, all -> 0x0087 }
            r8.bindInteger(r3, r5)     // Catch:{ Exception -> 0x008c, all -> 0x0087 }
            r8.step()     // Catch:{ Exception -> 0x008c, all -> 0x0087 }
            r8.dispose()     // Catch:{ Exception -> 0x008c, all -> 0x0087 }
            r1.reuse()     // Catch:{ Exception -> 0x0094, all -> 0x0091 }
            int r8 = r9.flags     // Catch:{ Exception -> 0x0094, all -> 0x0091 }
            r8 = r8 & 2048(0x800, float:2.87E-42)
            if (r8 == 0) goto L_0x00a3
            org.telegram.SQLite.SQLiteDatabase r8 = r7.database     // Catch:{ Exception -> 0x0094, all -> 0x0091 }
            java.lang.String r1 = "UPDATE dialogs SET folder_id = ? WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r8 = r8.executeFast(r1)     // Catch:{ Exception -> 0x0094, all -> 0x0091 }
            int r1 = r9.folder_id     // Catch:{ Exception -> 0x008c, all -> 0x0087 }
            r8.bindInteger(r4, r1)     // Catch:{ Exception -> 0x008c, all -> 0x0087 }
            org.telegram.tgnet.TLRPC$User r1 = r9.user     // Catch:{ Exception -> 0x008c, all -> 0x0087 }
            long r3 = r1.id     // Catch:{ Exception -> 0x008c, all -> 0x0087 }
            r8.bindLong(r2, r3)     // Catch:{ Exception -> 0x008c, all -> 0x0087 }
            r8.step()     // Catch:{ Exception -> 0x008c, all -> 0x0087 }
            r8.dispose()     // Catch:{ Exception -> 0x008c, all -> 0x0087 }
            androidx.collection.LongSparseArray<java.lang.Boolean> r8 = r7.unknownDialogsIds     // Catch:{ Exception -> 0x0094, all -> 0x0091 }
            org.telegram.tgnet.TLRPC$User r9 = r9.user     // Catch:{ Exception -> 0x0094, all -> 0x0091 }
            long r1 = r9.id     // Catch:{ Exception -> 0x0094, all -> 0x0091 }
            r8.remove(r1)     // Catch:{ Exception -> 0x0094, all -> 0x0091 }
            goto L_0x00a3
        L_0x0087:
            r9 = move-exception
            r6 = r0
            r0 = r8
            r8 = r6
            goto L_0x00a5
        L_0x008c:
            r9 = move-exception
            r6 = r0
            r0 = r8
            r8 = r6
            goto L_0x0096
        L_0x0091:
            r9 = move-exception
            r8 = r0
            goto L_0x00a5
        L_0x0094:
            r9 = move-exception
            r8 = r0
        L_0x0096:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r9)     // Catch:{ all -> 0x00a4 }
            if (r0 == 0) goto L_0x009e
            r0.dispose()
        L_0x009e:
            if (r8 == 0) goto L_0x00a3
            r8.dispose()
        L_0x00a3:
            return
        L_0x00a4:
            r9 = move-exception
        L_0x00a5:
            if (r0 == 0) goto L_0x00aa
            r0.dispose()
        L_0x00aa:
            if (r8 == 0) goto L_0x00af
            r8.dispose()
        L_0x00af:
            throw r9
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$updateUserInfo$98(boolean, org.telegram.tgnet.TLRPC$UserFull):void");
    }

    public void saveChatInviter(long j, long j2) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda83(this, j2, j));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$saveChatInviter$99(long j, long j2) {
        SQLitePreparedStatement sQLitePreparedStatement = null;
        try {
            sQLitePreparedStatement = this.database.executeFast("UPDATE chat_settings_v2 SET inviter = ? WHERE uid = ?");
            sQLitePreparedStatement.requery();
            sQLitePreparedStatement.bindLong(1, j);
            sQLitePreparedStatement.bindLong(2, j2);
            sQLitePreparedStatement.step();
            sQLitePreparedStatement.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (sQLitePreparedStatement == null) {
                return;
            }
        } catch (Throwable th) {
            if (sQLitePreparedStatement != null) {
                sQLitePreparedStatement.dispose();
            }
            throw th;
        }
        sQLitePreparedStatement.dispose();
    }

    public void saveChatLinksCount(long j, int i) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda39(this, i, j));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$saveChatLinksCount$100(int i, long j) {
        SQLitePreparedStatement sQLitePreparedStatement = null;
        try {
            sQLitePreparedStatement = this.database.executeFast("UPDATE chat_settings_v2 SET links = ? WHERE uid = ?");
            sQLitePreparedStatement.requery();
            sQLitePreparedStatement.bindInteger(1, i);
            sQLitePreparedStatement.bindLong(2, j);
            sQLitePreparedStatement.step();
            sQLitePreparedStatement.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (sQLitePreparedStatement != null) {
                sQLitePreparedStatement.dispose();
            }
        } catch (Throwable th) {
            if (sQLitePreparedStatement != null) {
                sQLitePreparedStatement.dispose();
            }
            throw th;
        }
    }

    public void updateChatInfo(TLRPC$ChatFull tLRPC$ChatFull, boolean z) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda160(this, tLRPC$ChatFull, z));
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v1, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v2, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v7, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX WARNING: type inference failed for: r0v0 */
    /* JADX WARNING: type inference failed for: r0v3 */
    /* JADX WARNING: type inference failed for: r0v4 */
    /* JADX WARNING: type inference failed for: r0v5 */
    /* JADX WARNING: type inference failed for: r0v6 */
    /* JADX WARNING: type inference failed for: r0v8 */
    /* JADX WARNING: type inference failed for: r0v9 */
    /* JADX WARNING: type inference failed for: r0v10 */
    /* JADX WARNING: type inference failed for: r0v11 */
    /* JADX WARNING: type inference failed for: r0v12 */
    /* JADX WARNING: type inference failed for: r0v13 */
    /* JADX WARNING: type inference failed for: r0v14 */
    /* JADX WARNING: type inference failed for: r0v15 */
    /* access modifiers changed from: private */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:72:0x0144  */
    /* JADX WARNING: Removed duplicated region for block: B:74:0x0149  */
    /* JADX WARNING: Removed duplicated region for block: B:77:0x0150  */
    /* JADX WARNING: Removed duplicated region for block: B:79:0x0155  */
    /* JADX WARNING: Removed duplicated region for block: B:84:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$updateChatInfo$101(org.telegram.tgnet.TLRPC$ChatFull r12, boolean r13) {
        /*
            r11 = this;
            r0 = 0
            org.telegram.SQLite.SQLiteDatabase r1 = r11.database     // Catch:{ Exception -> 0x013d, all -> 0x013a }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x013d, all -> 0x013a }
            r2.<init>()     // Catch:{ Exception -> 0x013d, all -> 0x013a }
            java.lang.String r3 = "SELECT online, inviter, links FROM chat_settings_v2 WHERE uid = "
            r2.append(r3)     // Catch:{ Exception -> 0x013d, all -> 0x013a }
            long r3 = r12.id     // Catch:{ Exception -> 0x013d, all -> 0x013a }
            r2.append(r3)     // Catch:{ Exception -> 0x013d, all -> 0x013a }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x013d, all -> 0x013a }
            r3 = 0
            java.lang.Object[] r4 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x013d, all -> 0x013a }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r2, r4)     // Catch:{ Exception -> 0x013d, all -> 0x013a }
            boolean r2 = r1.next()     // Catch:{ Exception -> 0x0136, all -> 0x0132 }
            r4 = -1
            r5 = 2
            r6 = 1
            if (r2 == 0) goto L_0x0035
            int r2 = r1.intValue(r3)     // Catch:{ Exception -> 0x0136, all -> 0x0132 }
            long r7 = r1.longValue(r6)     // Catch:{ Exception -> 0x0136, all -> 0x0132 }
            r12.inviterId = r7     // Catch:{ Exception -> 0x0136, all -> 0x0132 }
            int r7 = r1.intValue(r5)     // Catch:{ Exception -> 0x0136, all -> 0x0132 }
            goto L_0x0037
        L_0x0035:
            r2 = -1
            r7 = 0
        L_0x0037:
            r1.dispose()     // Catch:{ Exception -> 0x0136, all -> 0x0132 }
            if (r13 == 0) goto L_0x003f
            if (r2 != r4) goto L_0x003f
            return
        L_0x003f:
            if (r2 < 0) goto L_0x0049
            int r13 = r12.flags     // Catch:{ Exception -> 0x013d, all -> 0x013a }
            r13 = r13 & 8192(0x2000, float:1.14794E-41)
            if (r13 != 0) goto L_0x0049
            r12.online_count = r2     // Catch:{ Exception -> 0x013d, all -> 0x013a }
        L_0x0049:
            if (r7 < 0) goto L_0x004d
            r12.invitesCount = r7     // Catch:{ Exception -> 0x013d, all -> 0x013a }
        L_0x004d:
            org.telegram.SQLite.SQLiteDatabase r13 = r11.database     // Catch:{ Exception -> 0x013d, all -> 0x013a }
            java.lang.String r1 = "REPLACE INTO chat_settings_v2 VALUES(?, ?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r13 = r13.executeFast(r1)     // Catch:{ Exception -> 0x013d, all -> 0x013a }
            org.telegram.tgnet.NativeByteBuffer r1 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0130 }
            int r2 = r12.getObjectSize()     // Catch:{ Exception -> 0x0130 }
            r1.<init>((int) r2)     // Catch:{ Exception -> 0x0130 }
            r12.serializeToStream(r1)     // Catch:{ Exception -> 0x0130 }
            long r7 = r12.id     // Catch:{ Exception -> 0x0130 }
            r13.bindLong(r6, r7)     // Catch:{ Exception -> 0x0130 }
            r13.bindByteBuffer((int) r5, (org.telegram.tgnet.NativeByteBuffer) r1)     // Catch:{ Exception -> 0x0130 }
            int r2 = r12.pinned_msg_id     // Catch:{ Exception -> 0x0130 }
            r4 = 3
            r13.bindInteger(r4, r2)     // Catch:{ Exception -> 0x0130 }
            int r2 = r12.online_count     // Catch:{ Exception -> 0x0130 }
            r7 = 4
            r13.bindInteger(r7, r2)     // Catch:{ Exception -> 0x0130 }
            r2 = 5
            long r8 = r12.inviterId     // Catch:{ Exception -> 0x0130 }
            r13.bindLong(r2, r8)     // Catch:{ Exception -> 0x0130 }
            r2 = 6
            int r8 = r12.invitesCount     // Catch:{ Exception -> 0x0130 }
            r13.bindInteger(r2, r8)     // Catch:{ Exception -> 0x0130 }
            r13.step()     // Catch:{ Exception -> 0x0130 }
            r13.dispose()     // Catch:{ Exception -> 0x0130 }
            r1.reuse()     // Catch:{ Exception -> 0x013d, all -> 0x013a }
            boolean r13 = r12 instanceof org.telegram.tgnet.TLRPC$TL_channelFull     // Catch:{ Exception -> 0x013d, all -> 0x013a }
            if (r13 == 0) goto L_0x00fa
            org.telegram.SQLite.SQLiteDatabase r13 = r11.database     // Catch:{ Exception -> 0x013d, all -> 0x013a }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x013d, all -> 0x013a }
            r1.<init>()     // Catch:{ Exception -> 0x013d, all -> 0x013a }
            java.lang.String r2 = "SELECT inbox_max, outbox_max FROM dialogs WHERE did = "
            r1.append(r2)     // Catch:{ Exception -> 0x013d, all -> 0x013a }
            long r8 = r12.id     // Catch:{ Exception -> 0x013d, all -> 0x013a }
            long r8 = -r8
            r1.append(r8)     // Catch:{ Exception -> 0x013d, all -> 0x013a }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x013d, all -> 0x013a }
            java.lang.Object[] r2 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x013d, all -> 0x013a }
            org.telegram.SQLite.SQLiteCursor r13 = r13.queryFinalized(r1, r2)     // Catch:{ Exception -> 0x013d, all -> 0x013a }
            boolean r1 = r13.next()     // Catch:{ Exception -> 0x00f5, all -> 0x00ef }
            if (r1 == 0) goto L_0x00e4
            int r1 = r13.intValue(r3)     // Catch:{ Exception -> 0x00f5, all -> 0x00ef }
            int r2 = r12.read_inbox_max_id     // Catch:{ Exception -> 0x00f5, all -> 0x00ef }
            if (r1 >= r2) goto L_0x00e4
            int r1 = r13.intValue(r6)     // Catch:{ Exception -> 0x00f5, all -> 0x00ef }
            org.telegram.SQLite.SQLiteDatabase r2 = r11.database     // Catch:{ Exception -> 0x00f5, all -> 0x00ef }
            java.lang.String r3 = "UPDATE dialogs SET unread_count = ?, inbox_max = ?, outbox_max = ? WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r3)     // Catch:{ Exception -> 0x00f5, all -> 0x00ef }
            int r3 = r12.unread_count     // Catch:{ Exception -> 0x00ec, all -> 0x00e9 }
            r2.bindInteger(r6, r3)     // Catch:{ Exception -> 0x00ec, all -> 0x00e9 }
            int r3 = r12.read_inbox_max_id     // Catch:{ Exception -> 0x00ec, all -> 0x00e9 }
            r2.bindInteger(r5, r3)     // Catch:{ Exception -> 0x00ec, all -> 0x00e9 }
            int r3 = r12.read_outbox_max_id     // Catch:{ Exception -> 0x00ec, all -> 0x00e9 }
            int r1 = java.lang.Math.max(r1, r3)     // Catch:{ Exception -> 0x00ec, all -> 0x00e9 }
            r2.bindInteger(r4, r1)     // Catch:{ Exception -> 0x00ec, all -> 0x00e9 }
            long r3 = r12.id     // Catch:{ Exception -> 0x00ec, all -> 0x00e9 }
            long r3 = -r3
            r2.bindLong(r7, r3)     // Catch:{ Exception -> 0x00ec, all -> 0x00e9 }
            r2.step()     // Catch:{ Exception -> 0x00ec, all -> 0x00e9 }
            r2.dispose()     // Catch:{ Exception -> 0x00ec, all -> 0x00e9 }
            goto L_0x00e5
        L_0x00e4:
            r2 = r0
        L_0x00e5:
            r13.dispose()     // Catch:{ Exception -> 0x00ec, all -> 0x00e9 }
            goto L_0x00fb
        L_0x00e9:
            r12 = move-exception
            r0 = r13
            goto L_0x012b
        L_0x00ec:
            r12 = move-exception
            r0 = r13
            goto L_0x012e
        L_0x00ef:
            r12 = move-exception
            r10 = r0
            r0 = r13
            r13 = r10
            goto L_0x014e
        L_0x00f5:
            r12 = move-exception
            r10 = r0
            r0 = r13
            r13 = r10
            goto L_0x013f
        L_0x00fa:
            r2 = r0
        L_0x00fb:
            int r13 = r12.flags     // Catch:{ Exception -> 0x012d, all -> 0x012a }
            r13 = r13 & 2048(0x800, float:2.87E-42)
            if (r13 == 0) goto L_0x0123
            org.telegram.SQLite.SQLiteDatabase r13 = r11.database     // Catch:{ Exception -> 0x012d, all -> 0x012a }
            java.lang.String r1 = "UPDATE dialogs SET folder_id = ? WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r13 = r13.executeFast(r1)     // Catch:{ Exception -> 0x012d, all -> 0x012a }
            int r1 = r12.folder_id     // Catch:{ Exception -> 0x0130 }
            r13.bindInteger(r6, r1)     // Catch:{ Exception -> 0x0130 }
            long r1 = r12.id     // Catch:{ Exception -> 0x0130 }
            long r1 = -r1
            r13.bindLong(r5, r1)     // Catch:{ Exception -> 0x0130 }
            r13.step()     // Catch:{ Exception -> 0x0130 }
            r13.dispose()     // Catch:{ Exception -> 0x0130 }
            androidx.collection.LongSparseArray<java.lang.Boolean> r13 = r11.unknownDialogsIds     // Catch:{ Exception -> 0x013d, all -> 0x013a }
            long r1 = r12.id     // Catch:{ Exception -> 0x013d, all -> 0x013a }
            long r1 = -r1
            r13.remove(r1)     // Catch:{ Exception -> 0x013d, all -> 0x013a }
            goto L_0x0124
        L_0x0123:
            r0 = r2
        L_0x0124:
            if (r0 == 0) goto L_0x014c
            r0.dispose()
            goto L_0x014c
        L_0x012a:
            r12 = move-exception
        L_0x012b:
            r13 = r2
            goto L_0x014e
        L_0x012d:
            r12 = move-exception
        L_0x012e:
            r13 = r2
            goto L_0x013f
        L_0x0130:
            r12 = move-exception
            goto L_0x013f
        L_0x0132:
            r12 = move-exception
            r13 = r0
            r0 = r1
            goto L_0x014e
        L_0x0136:
            r12 = move-exception
            r13 = r0
            r0 = r1
            goto L_0x013f
        L_0x013a:
            r12 = move-exception
            r13 = r0
            goto L_0x014e
        L_0x013d:
            r12 = move-exception
            r13 = r0
        L_0x013f:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r12)     // Catch:{ all -> 0x014d }
            if (r0 == 0) goto L_0x0147
            r0.dispose()
        L_0x0147:
            if (r13 == 0) goto L_0x014c
            r13.dispose()
        L_0x014c:
            return
        L_0x014d:
            r12 = move-exception
        L_0x014e:
            if (r0 == 0) goto L_0x0153
            r0.dispose()
        L_0x0153:
            if (r13 == 0) goto L_0x0158
            r13.dispose()
        L_0x0158:
            throw r12
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$updateChatInfo$101(org.telegram.tgnet.TLRPC$ChatFull, boolean):void");
    }

    public void updateChatOnlineCount(long j, int i) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda44(this, i, j));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$updateChatOnlineCount$102(int i, long j) {
        SQLitePreparedStatement sQLitePreparedStatement = null;
        try {
            sQLitePreparedStatement = this.database.executeFast("UPDATE chat_settings_v2 SET online = ? WHERE uid = ?");
            sQLitePreparedStatement.requery();
            sQLitePreparedStatement.bindInteger(1, i);
            sQLitePreparedStatement.bindLong(2, j);
            sQLitePreparedStatement.step();
            sQLitePreparedStatement.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (sQLitePreparedStatement != null) {
                sQLitePreparedStatement.dispose();
            }
        } catch (Throwable th) {
            if (sQLitePreparedStatement != null) {
                sQLitePreparedStatement.dispose();
            }
            throw th;
        }
    }

    public void updatePinnedMessages(long j, ArrayList<Integer> arrayList, boolean z, int i, int i2, boolean z2, HashMap<Integer, MessageObject> hashMap) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda191(this, z, hashMap, i2, j, arrayList, i, z2));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:141:0x0331  */
    /* JADX WARNING: Removed duplicated region for block: B:143:0x0336  */
    /* JADX WARNING: Removed duplicated region for block: B:147:0x0342  */
    /* JADX WARNING: Removed duplicated region for block: B:149:0x0347  */
    /* JADX WARNING: Removed duplicated region for block: B:156:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$updatePinnedMessages$105(boolean r19, java.util.HashMap r20, int r21, long r22, java.util.ArrayList r24, int r25, boolean r26) {
        /*
            r18 = this;
            r10 = r18
            r0 = r20
            r3 = r22
            r5 = r24
            java.lang.String r1 = "SELECT count, end FROM chat_pinned_count WHERE uid = %d"
            java.lang.String r2 = "REPLACE INTO chat_pinned_count VALUES(?, ?, ?)"
            java.lang.String r6 = "SELECT COUNT(mid) FROM chat_pinned_v2 WHERE uid = %d"
            java.lang.String r7 = "DELETE FROM chat_pinned_v2 WHERE uid = "
            java.lang.String r8 = ","
            r11 = 2
            r13 = 1
            r14 = 0
            if (r19 == 0) goto L_0x0188
            org.telegram.SQLite.SQLiteDatabase r15 = r10.database     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r15.beginTransaction()     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            if (r0 == 0) goto L_0x003e
            if (r21 != 0) goto L_0x003c
            org.telegram.SQLite.SQLiteDatabase r8 = r10.database     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.StringBuilder r15 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r15.<init>()     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r15.append(r7)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r15.append(r3)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.String r7 = r15.toString()     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r8.executeFast(r7)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.stepThis()     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r7.dispose()     // Catch:{ Exception -> 0x0182, all -> 0x017c }
        L_0x003c:
            r8 = 0
            goto L_0x006b
        L_0x003e:
            org.telegram.SQLite.SQLiteDatabase r7 = r10.database     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.util.Locale r15 = java.util.Locale.US     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.String r12 = "SELECT COUNT(mid) FROM chat_pinned_v2 WHERE uid = %d AND mid IN (%s)"
            java.lang.Object[] r9 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.Long r17 = java.lang.Long.valueOf(r22)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r9[r14] = r17     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.String r8 = android.text.TextUtils.join(r8, r5)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r9[r13] = r8     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.String r8 = java.lang.String.format(r15, r12, r9)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.Object[] r9 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            org.telegram.SQLite.SQLiteCursor r7 = r7.queryFinalized(r8, r9)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            boolean r8 = r7.next()     // Catch:{ Exception -> 0x0179, all -> 0x0176 }
            if (r8 == 0) goto L_0x0067
            int r8 = r7.intValue(r14)     // Catch:{ Exception -> 0x0179, all -> 0x0176 }
            goto L_0x0068
        L_0x0067:
            r8 = 0
        L_0x0068:
            r7.dispose()     // Catch:{ Exception -> 0x0179, all -> 0x0176 }
        L_0x006b:
            org.telegram.SQLite.SQLiteDatabase r7 = r10.database     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.String r9 = "REPLACE INTO chat_pinned_v2 VALUES(?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.executeFast(r9)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            int r9 = r24.size()     // Catch:{ Exception -> 0x0170, all -> 0x016a }
            r12 = 0
        L_0x0078:
            if (r12 >= r9) goto L_0x00c0
            java.lang.Object r15 = r5.get(r12)     // Catch:{ Exception -> 0x0170, all -> 0x016a }
            java.lang.Integer r15 = (java.lang.Integer) r15     // Catch:{ Exception -> 0x0170, all -> 0x016a }
            r7.requery()     // Catch:{ Exception -> 0x0170, all -> 0x016a }
            r7.bindLong(r13, r3)     // Catch:{ Exception -> 0x0170, all -> 0x016a }
            int r14 = r15.intValue()     // Catch:{ Exception -> 0x0170, all -> 0x016a }
            r7.bindInteger(r11, r14)     // Catch:{ Exception -> 0x0170, all -> 0x016a }
            if (r0 == 0) goto L_0x0096
            java.lang.Object r14 = r0.get(r15)     // Catch:{ Exception -> 0x0170, all -> 0x016a }
            org.telegram.messenger.MessageObject r14 = (org.telegram.messenger.MessageObject) r14     // Catch:{ Exception -> 0x0170, all -> 0x016a }
            goto L_0x0097
        L_0x0096:
            r14 = 0
        L_0x0097:
            if (r14 == 0) goto L_0x00ae
            org.telegram.tgnet.NativeByteBuffer r15 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0170, all -> 0x016a }
            org.telegram.tgnet.TLRPC$Message r11 = r14.messageOwner     // Catch:{ Exception -> 0x0170, all -> 0x016a }
            int r11 = r11.getObjectSize()     // Catch:{ Exception -> 0x0170, all -> 0x016a }
            r15.<init>((int) r11)     // Catch:{ Exception -> 0x0170, all -> 0x016a }
            org.telegram.tgnet.TLRPC$Message r11 = r14.messageOwner     // Catch:{ Exception -> 0x0170, all -> 0x016a }
            r11.serializeToStream(r15)     // Catch:{ Exception -> 0x0170, all -> 0x016a }
            r11 = 3
            r7.bindByteBuffer((int) r11, (org.telegram.tgnet.NativeByteBuffer) r15)     // Catch:{ Exception -> 0x0170, all -> 0x016a }
            goto L_0x00b3
        L_0x00ae:
            r11 = 3
            r7.bindNull(r11)     // Catch:{ Exception -> 0x0170, all -> 0x016a }
            r15 = 0
        L_0x00b3:
            r7.step()     // Catch:{ Exception -> 0x0170, all -> 0x016a }
            if (r15 == 0) goto L_0x00bb
            r15.reuse()     // Catch:{ Exception -> 0x0170, all -> 0x016a }
        L_0x00bb:
            int r12 = r12 + 1
            r11 = 2
            r14 = 0
            goto L_0x0078
        L_0x00c0:
            r7.dispose()     // Catch:{ Exception -> 0x0170, all -> 0x016a }
            org.telegram.SQLite.SQLiteDatabase r7 = r10.database     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r7.commitTransaction()     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            org.telegram.SQLite.SQLiteDatabase r7 = r10.database     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.util.Locale r9 = java.util.Locale.US     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.Object[] r11 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.Long r12 = java.lang.Long.valueOf(r22)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r14 = 0
            r11[r14] = r12     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.String r6 = java.lang.String.format(r9, r6, r11)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.Object[] r11 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            org.telegram.SQLite.SQLiteCursor r6 = r7.queryFinalized(r6, r11)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            boolean r7 = r6.next()     // Catch:{ Exception -> 0x0167, all -> 0x0164 }
            if (r7 == 0) goto L_0x00ea
            int r7 = r6.intValue(r14)     // Catch:{ Exception -> 0x0167, all -> 0x0164 }
            goto L_0x00eb
        L_0x00ea:
            r7 = 0
        L_0x00eb:
            r6.dispose()     // Catch:{ Exception -> 0x0167, all -> 0x0164 }
            if (r0 == 0) goto L_0x00fa
            r6 = r25
            int r1 = java.lang.Math.max(r6, r7)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r9 = r26
        L_0x00f8:
            r8 = r1
            goto L_0x0131
        L_0x00fa:
            org.telegram.SQLite.SQLiteDatabase r6 = r10.database     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.Object[] r11 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.Long r12 = java.lang.Long.valueOf(r22)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r14 = 0
            r11[r14] = r12     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.String r1 = java.lang.String.format(r9, r1, r11)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.Object[] r9 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            org.telegram.SQLite.SQLiteCursor r1 = r6.queryFinalized(r1, r9)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            boolean r6 = r1.next()     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            if (r6 == 0) goto L_0x0121
            int r6 = r1.intValue(r14)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            int r9 = r1.intValue(r13)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            if (r9 == 0) goto L_0x0122
            r9 = 1
            goto L_0x0123
        L_0x0121:
            r6 = 0
        L_0x0122:
            r9 = 0
        L_0x0123:
            r1.dispose()     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            int r1 = r24.size()     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            int r1 = r1 - r8
            int r6 = r6 + r1
            int r1 = java.lang.Math.max(r6, r7)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            goto L_0x00f8
        L_0x0131:
            org.telegram.SQLite.SQLiteDatabase r1 = r10.database     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r1.requery()     // Catch:{ Exception -> 0x031a, all -> 0x0315 }
            r1.bindLong(r13, r3)     // Catch:{ Exception -> 0x031a, all -> 0x0315 }
            r2 = 2
            r1.bindInteger(r2, r8)     // Catch:{ Exception -> 0x031a, all -> 0x0315 }
            r2 = 3
            if (r9 == 0) goto L_0x0145
            goto L_0x0146
        L_0x0145:
            r13 = 0
        L_0x0146:
            r1.bindInteger(r2, r13)     // Catch:{ Exception -> 0x031a, all -> 0x0315 }
            r1.step()     // Catch:{ Exception -> 0x031a, all -> 0x0315 }
            r1.dispose()     // Catch:{ Exception -> 0x031a, all -> 0x0315 }
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda98 r11 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda98     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r1 = r11
            r2 = r18
            r3 = r22
            r5 = r24
            r6 = r20
            r7 = r21
            r1.<init>(r2, r3, r5, r6, r7, r8, r9)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r11)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            goto L_0x030f
        L_0x0164:
            r0 = move-exception
            r12 = r6
            goto L_0x017e
        L_0x0167:
            r0 = move-exception
            r12 = r6
            goto L_0x0184
        L_0x016a:
            r0 = move-exception
            r16 = r7
        L_0x016d:
            r12 = 0
            goto L_0x033b
        L_0x0170:
            r0 = move-exception
            r16 = r7
        L_0x0173:
            r12 = 0
            goto L_0x0327
        L_0x0176:
            r0 = move-exception
            r12 = r7
            goto L_0x017e
        L_0x0179:
            r0 = move-exception
            r12 = r7
            goto L_0x0184
        L_0x017c:
            r0 = move-exception
            r12 = 0
        L_0x017e:
            r16 = 0
            goto L_0x033b
        L_0x0182:
            r0 = move-exception
            r12 = 0
        L_0x0184:
            r16 = 0
            goto L_0x0327
        L_0x0188:
            if (r5 != 0) goto L_0x01ef
            org.telegram.SQLite.SQLiteDatabase r1 = r10.database     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.StringBuilder r6 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r6.<init>()     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r6.append(r7)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r6.append(r3)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.String r6 = r6.toString()     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r6)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r1.dispose()     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            boolean r1 = org.telegram.messenger.DialogObject.isChatDialog(r22)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            if (r1 == 0) goto L_0x01cc
            org.telegram.SQLite.SQLiteDatabase r1 = r10.database     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.util.Locale r6 = java.util.Locale.US     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.String r7 = "UPDATE chat_settings_v2 SET pinned = 0 WHERE uid = %d"
            java.lang.Object[] r8 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            long r11 = -r3
            java.lang.Long r9 = java.lang.Long.valueOf(r11)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r11 = 0
            r8[r11] = r9     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.String r6 = java.lang.String.format(r6, r7, r8)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r6)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r1.dispose()     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            goto L_0x01ea
        L_0x01cc:
            org.telegram.SQLite.SQLiteDatabase r1 = r10.database     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.util.Locale r6 = java.util.Locale.US     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.String r7 = "UPDATE user_settings SET pinned = 0 WHERE uid = %d"
            java.lang.Object[] r8 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.Long r9 = java.lang.Long.valueOf(r22)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r11 = 0
            r8[r11] = r9     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.String r6 = java.lang.String.format(r6, r7, r8)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r6)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r1.dispose()     // Catch:{ Exception -> 0x0182, all -> 0x017c }
        L_0x01ea:
            r8 = 0
            r9 = 1
            r13 = 0
            goto L_0x02de
        L_0x01ef:
            java.lang.String r7 = android.text.TextUtils.join(r8, r5)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            boolean r8 = org.telegram.messenger.DialogObject.isChatDialog(r22)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            if (r8 == 0) goto L_0x021f
            org.telegram.SQLite.SQLiteDatabase r8 = r10.database     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.util.Locale r9 = java.util.Locale.US     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.String r11 = "UPDATE chat_settings_v2 SET pinned = 0 WHERE uid = %d AND pinned IN (%s)"
            r12 = 2
            java.lang.Object[] r14 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r15 = r14
            long r13 = -r3
            java.lang.Long r13 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r14 = 0
            r15[r14] = r13     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r12 = 1
            r15[r12] = r7     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r13 = r15
            java.lang.String r9 = java.lang.String.format(r9, r11, r13)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            org.telegram.SQLite.SQLitePreparedStatement r8 = r8.executeFast(r9)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            org.telegram.SQLite.SQLitePreparedStatement r8 = r8.stepThis()     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r8.dispose()     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            goto L_0x0241
        L_0x021f:
            org.telegram.SQLite.SQLiteDatabase r8 = r10.database     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.util.Locale r9 = java.util.Locale.US     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.String r11 = "UPDATE user_settings SET pinned = 0 WHERE uid = %d AND pinned IN (%s)"
            r13 = 2
            java.lang.Object[] r14 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.Long r13 = java.lang.Long.valueOf(r22)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r15 = 0
            r14[r15] = r13     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r12 = 1
            r14[r12] = r7     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.String r9 = java.lang.String.format(r9, r11, r14)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            org.telegram.SQLite.SQLitePreparedStatement r8 = r8.executeFast(r9)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            org.telegram.SQLite.SQLitePreparedStatement r8 = r8.stepThis()     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r8.dispose()     // Catch:{ Exception -> 0x0182, all -> 0x017c }
        L_0x0241:
            org.telegram.SQLite.SQLiteDatabase r8 = r10.database     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.util.Locale r9 = java.util.Locale.US     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.String r11 = "DELETE FROM chat_pinned_v2 WHERE uid = %d AND mid IN(%s)"
            r13 = 2
            java.lang.Object[] r14 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.Long r13 = java.lang.Long.valueOf(r22)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r15 = 0
            r14[r15] = r13     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r12 = 1
            r14[r12] = r7     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.String r7 = java.lang.String.format(r9, r11, r14)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r8.executeFast(r7)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.stepThis()     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r7.dispose()     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            org.telegram.SQLite.SQLiteDatabase r7 = r10.database     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.String r8 = "SELECT changes()"
            r11 = 0
            java.lang.Object[] r13 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            org.telegram.SQLite.SQLiteCursor r7 = r7.queryFinalized(r8, r13)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            boolean r8 = r7.next()     // Catch:{ Exception -> 0x0179, all -> 0x0176 }
            if (r8 == 0) goto L_0x027a
            int r8 = r7.intValue(r11)     // Catch:{ Exception -> 0x0179, all -> 0x0176 }
            r14 = r8
            goto L_0x027b
        L_0x027a:
            r14 = 0
        L_0x027b:
            r7.dispose()     // Catch:{ Exception -> 0x0179, all -> 0x0176 }
            org.telegram.SQLite.SQLiteDatabase r7 = r10.database     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r8 = 1
            java.lang.Object[] r11 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.Long r8 = java.lang.Long.valueOf(r22)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r13 = 0
            r11[r13] = r8     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.String r6 = java.lang.String.format(r9, r6, r11)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.Object[] r8 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            org.telegram.SQLite.SQLiteCursor r6 = r7.queryFinalized(r6, r8)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            boolean r7 = r6.next()     // Catch:{ Exception -> 0x0167, all -> 0x0164 }
            if (r7 == 0) goto L_0x029f
            int r7 = r6.intValue(r13)     // Catch:{ Exception -> 0x0167, all -> 0x0164 }
            goto L_0x02a0
        L_0x029f:
            r7 = 0
        L_0x02a0:
            r6.dispose()     // Catch:{ Exception -> 0x0167, all -> 0x0164 }
            org.telegram.SQLite.SQLiteDatabase r6 = r10.database     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r8 = 1
            java.lang.Object[] r11 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.Long r8 = java.lang.Long.valueOf(r22)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r13 = 0
            r11[r13] = r8     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.String r1 = java.lang.String.format(r9, r1, r11)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            java.lang.Object[] r8 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            org.telegram.SQLite.SQLiteCursor r1 = r6.queryFinalized(r1, r8)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            boolean r6 = r1.next()     // Catch:{ Exception -> 0x0323, all -> 0x031f }
            if (r6 == 0) goto L_0x02d3
            int r6 = r1.intValue(r13)     // Catch:{ Exception -> 0x0323, all -> 0x031f }
            int r6 = r6 - r14
            int r14 = java.lang.Math.max(r13, r6)     // Catch:{ Exception -> 0x0323, all -> 0x031f }
            r6 = 1
            int r8 = r1.intValue(r6)     // Catch:{ Exception -> 0x0323, all -> 0x031f }
            if (r8 == 0) goto L_0x02d1
            r6 = 1
            goto L_0x02d5
        L_0x02d1:
            r6 = 0
            goto L_0x02d5
        L_0x02d3:
            r6 = 0
            r14 = 0
        L_0x02d5:
            r1.dispose()     // Catch:{ Exception -> 0x0323, all -> 0x031f }
            int r1 = java.lang.Math.max(r7, r14)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r8 = r1
            r9 = r6
        L_0x02de:
            org.telegram.SQLite.SQLiteDatabase r1 = r10.database     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r1.requery()     // Catch:{ Exception -> 0x031a, all -> 0x0315 }
            r2 = 1
            r1.bindLong(r2, r3)     // Catch:{ Exception -> 0x031a, all -> 0x0315 }
            r6 = 2
            r1.bindInteger(r6, r8)     // Catch:{ Exception -> 0x031a, all -> 0x0315 }
            r2 = 3
            if (r9 == 0) goto L_0x02f3
            r13 = 1
        L_0x02f3:
            r1.bindInteger(r2, r13)     // Catch:{ Exception -> 0x031a, all -> 0x0315 }
            r1.step()     // Catch:{ Exception -> 0x031a, all -> 0x0315 }
            r1.dispose()     // Catch:{ Exception -> 0x031a, all -> 0x0315 }
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda97 r11 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda97     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            r1 = r11
            r2 = r18
            r3 = r22
            r5 = r24
            r6 = r20
            r7 = r21
            r1.<init>(r2, r3, r5, r6, r7, r8, r9)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r11)     // Catch:{ Exception -> 0x0182, all -> 0x017c }
        L_0x030f:
            org.telegram.SQLite.SQLiteDatabase r0 = r10.database
            r0.commitTransaction()
            goto L_0x0339
        L_0x0315:
            r0 = move-exception
            r16 = r1
            goto L_0x016d
        L_0x031a:
            r0 = move-exception
            r16 = r1
            goto L_0x0173
        L_0x031f:
            r0 = move-exception
            r12 = r1
            goto L_0x017e
        L_0x0323:
            r0 = move-exception
            r12 = r1
            goto L_0x0184
        L_0x0327:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x033a }
            org.telegram.SQLite.SQLiteDatabase r0 = r10.database
            r0.commitTransaction()
            if (r12 == 0) goto L_0x0334
            r12.dispose()
        L_0x0334:
            if (r16 == 0) goto L_0x0339
            r16.dispose()
        L_0x0339:
            return
        L_0x033a:
            r0 = move-exception
        L_0x033b:
            org.telegram.SQLite.SQLiteDatabase r1 = r10.database
            r1.commitTransaction()
            if (r12 == 0) goto L_0x0345
            r12.dispose()
        L_0x0345:
            if (r16 == 0) goto L_0x034a
            r16.dispose()
        L_0x034a:
            goto L_0x034c
        L_0x034b:
            throw r0
        L_0x034c:
            goto L_0x034b
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$updatePinnedMessages$105(boolean, java.util.HashMap, int, long, java.util.ArrayList, int, boolean):void");
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$updatePinnedMessages$103(long j, ArrayList arrayList, HashMap hashMap, int i, int i2, boolean z) {
        getNotificationCenter().postNotificationName(NotificationCenter.didLoadPinnedMessages, Long.valueOf(j), arrayList, Boolean.TRUE, null, hashMap, Integer.valueOf(i), Integer.valueOf(i2), Boolean.valueOf(z));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$updatePinnedMessages$104(long j, ArrayList arrayList, HashMap hashMap, int i, int i2, boolean z) {
        getNotificationCenter().postNotificationName(NotificationCenter.didLoadPinnedMessages, Long.valueOf(j), arrayList, Boolean.FALSE, null, hashMap, Integer.valueOf(i), Integer.valueOf(i2), Boolean.valueOf(z));
    }

    public void updateChatInfo(long j, long j2, int i, long j3, int i2) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda73(this, j, i, j2, j3, i2));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:52:0x015e  */
    /* JADX WARNING: Removed duplicated region for block: B:54:0x0164  */
    /* JADX WARNING: Removed duplicated region for block: B:64:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$updateChatInfo$107(long r17, int r19, long r20, long r22, int r24) {
        /*
            r16 = this;
            r1 = r16
            r2 = r17
            r0 = r19
            r4 = r20
            r6 = r22
            r8 = 0
            org.telegram.SQLite.SQLiteDatabase r9 = r1.database     // Catch:{ Exception -> 0x0158 }
            java.lang.StringBuilder r10 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0158 }
            r10.<init>()     // Catch:{ Exception -> 0x0158 }
            java.lang.String r11 = "SELECT info, pinned, online, inviter FROM chat_settings_v2 WHERE uid = "
            r10.append(r11)     // Catch:{ Exception -> 0x0158 }
            r10.append(r2)     // Catch:{ Exception -> 0x0158 }
            java.lang.String r10 = r10.toString()     // Catch:{ Exception -> 0x0158 }
            r11 = 0
            java.lang.Object[] r12 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x0158 }
            org.telegram.SQLite.SQLiteCursor r9 = r9.queryFinalized(r10, r12)     // Catch:{ Exception -> 0x0158 }
            java.util.ArrayList r10 = new java.util.ArrayList     // Catch:{ Exception -> 0x0153, all -> 0x0150 }
            r10.<init>()     // Catch:{ Exception -> 0x0153, all -> 0x0150 }
            boolean r10 = r9.next()     // Catch:{ Exception -> 0x0153, all -> 0x0150 }
            r12 = 3
            r13 = 2
            r14 = 1
            if (r10 == 0) goto L_0x0057
            org.telegram.tgnet.NativeByteBuffer r10 = r9.byteBufferValue(r11)     // Catch:{ Exception -> 0x0153, all -> 0x0150 }
            if (r10 == 0) goto L_0x0057
            int r15 = r10.readInt32(r11)     // Catch:{ Exception -> 0x0153, all -> 0x0150 }
            org.telegram.tgnet.TLRPC$ChatFull r15 = org.telegram.tgnet.TLRPC$ChatFull.TLdeserialize(r10, r15, r11)     // Catch:{ Exception -> 0x0153, all -> 0x0150 }
            r10.reuse()     // Catch:{ Exception -> 0x0153, all -> 0x0150 }
            int r10 = r9.intValue(r14)     // Catch:{ Exception -> 0x0153, all -> 0x0150 }
            r15.pinned_msg_id = r10     // Catch:{ Exception -> 0x0153, all -> 0x0150 }
            int r10 = r9.intValue(r13)     // Catch:{ Exception -> 0x0153, all -> 0x0150 }
            r15.online_count = r10     // Catch:{ Exception -> 0x0153, all -> 0x0150 }
            long r13 = r9.longValue(r12)     // Catch:{ Exception -> 0x0153, all -> 0x0150 }
            r15.inviterId = r13     // Catch:{ Exception -> 0x0153, all -> 0x0150 }
            goto L_0x0058
        L_0x0057:
            r15 = r8
        L_0x0058:
            r9.dispose()     // Catch:{ Exception -> 0x0153, all -> 0x0150 }
            boolean r9 = r15 instanceof org.telegram.tgnet.TLRPC$TL_chatFull     // Catch:{ Exception -> 0x0158 }
            if (r9 == 0) goto L_0x0161
            r9 = 1
            if (r0 != r9) goto L_0x0088
        L_0x0062:
            org.telegram.tgnet.TLRPC$ChatParticipants r0 = r15.participants     // Catch:{ Exception -> 0x0158 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$ChatParticipant> r0 = r0.participants     // Catch:{ Exception -> 0x0158 }
            int r0 = r0.size()     // Catch:{ Exception -> 0x0158 }
            if (r11 >= r0) goto L_0x0105
            org.telegram.tgnet.TLRPC$ChatParticipants r0 = r15.participants     // Catch:{ Exception -> 0x0158 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$ChatParticipant> r0 = r0.participants     // Catch:{ Exception -> 0x0158 }
            java.lang.Object r0 = r0.get(r11)     // Catch:{ Exception -> 0x0158 }
            org.telegram.tgnet.TLRPC$ChatParticipant r0 = (org.telegram.tgnet.TLRPC$ChatParticipant) r0     // Catch:{ Exception -> 0x0158 }
            long r6 = r0.user_id     // Catch:{ Exception -> 0x0158 }
            int r0 = (r6 > r4 ? 1 : (r6 == r4 ? 0 : -1))
            if (r0 != 0) goto L_0x0085
            org.telegram.tgnet.TLRPC$ChatParticipants r0 = r15.participants     // Catch:{ Exception -> 0x0158 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$ChatParticipant> r0 = r0.participants     // Catch:{ Exception -> 0x0158 }
            r0.remove(r11)     // Catch:{ Exception -> 0x0158 }
            goto L_0x0105
        L_0x0085:
            int r11 = r11 + 1
            goto L_0x0062
        L_0x0088:
            if (r0 != 0) goto L_0x00c0
            org.telegram.tgnet.TLRPC$ChatParticipants r0 = r15.participants     // Catch:{ Exception -> 0x0158 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$ChatParticipant> r0 = r0.participants     // Catch:{ Exception -> 0x0158 }
            java.util.Iterator r0 = r0.iterator()     // Catch:{ Exception -> 0x0158 }
        L_0x0092:
            boolean r9 = r0.hasNext()     // Catch:{ Exception -> 0x0158 }
            if (r9 == 0) goto L_0x00a5
            java.lang.Object r9 = r0.next()     // Catch:{ Exception -> 0x0158 }
            org.telegram.tgnet.TLRPC$ChatParticipant r9 = (org.telegram.tgnet.TLRPC$ChatParticipant) r9     // Catch:{ Exception -> 0x0158 }
            long r13 = r9.user_id     // Catch:{ Exception -> 0x0158 }
            int r9 = (r13 > r4 ? 1 : (r13 == r4 ? 0 : -1))
            if (r9 != 0) goto L_0x0092
            return
        L_0x00a5:
            org.telegram.tgnet.TLRPC$TL_chatParticipant r0 = new org.telegram.tgnet.TLRPC$TL_chatParticipant     // Catch:{ Exception -> 0x0158 }
            r0.<init>()     // Catch:{ Exception -> 0x0158 }
            r0.user_id = r4     // Catch:{ Exception -> 0x0158 }
            r0.inviter_id = r6     // Catch:{ Exception -> 0x0158 }
            org.telegram.tgnet.ConnectionsManager r4 = r16.getConnectionsManager()     // Catch:{ Exception -> 0x0158 }
            int r4 = r4.getCurrentTime()     // Catch:{ Exception -> 0x0158 }
            r0.date = r4     // Catch:{ Exception -> 0x0158 }
            org.telegram.tgnet.TLRPC$ChatParticipants r4 = r15.participants     // Catch:{ Exception -> 0x0158 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$ChatParticipant> r4 = r4.participants     // Catch:{ Exception -> 0x0158 }
            r4.add(r0)     // Catch:{ Exception -> 0x0158 }
            goto L_0x0105
        L_0x00c0:
            r9 = 2
            if (r0 != r9) goto L_0x0105
        L_0x00c3:
            org.telegram.tgnet.TLRPC$ChatParticipants r0 = r15.participants     // Catch:{ Exception -> 0x0158 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$ChatParticipant> r0 = r0.participants     // Catch:{ Exception -> 0x0158 }
            int r0 = r0.size()     // Catch:{ Exception -> 0x0158 }
            if (r11 >= r0) goto L_0x0105
            org.telegram.tgnet.TLRPC$ChatParticipants r0 = r15.participants     // Catch:{ Exception -> 0x0158 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$ChatParticipant> r0 = r0.participants     // Catch:{ Exception -> 0x0158 }
            java.lang.Object r0 = r0.get(r11)     // Catch:{ Exception -> 0x0158 }
            org.telegram.tgnet.TLRPC$ChatParticipant r0 = (org.telegram.tgnet.TLRPC$ChatParticipant) r0     // Catch:{ Exception -> 0x0158 }
            long r13 = r0.user_id     // Catch:{ Exception -> 0x0158 }
            int r9 = (r13 > r4 ? 1 : (r13 == r4 ? 0 : -1))
            if (r9 != 0) goto L_0x0102
            r4 = 1
            int r9 = (r6 > r4 ? 1 : (r6 == r4 ? 0 : -1))
            if (r9 != 0) goto L_0x00e9
            org.telegram.tgnet.TLRPC$TL_chatParticipantAdmin r4 = new org.telegram.tgnet.TLRPC$TL_chatParticipantAdmin     // Catch:{ Exception -> 0x0158 }
            r4.<init>()     // Catch:{ Exception -> 0x0158 }
            goto L_0x00ee
        L_0x00e9:
            org.telegram.tgnet.TLRPC$TL_chatParticipant r4 = new org.telegram.tgnet.TLRPC$TL_chatParticipant     // Catch:{ Exception -> 0x0158 }
            r4.<init>()     // Catch:{ Exception -> 0x0158 }
        L_0x00ee:
            long r5 = r0.user_id     // Catch:{ Exception -> 0x0158 }
            r4.user_id = r5     // Catch:{ Exception -> 0x0158 }
            int r5 = r0.date     // Catch:{ Exception -> 0x0158 }
            r4.date = r5     // Catch:{ Exception -> 0x0158 }
            long r5 = r0.inviter_id     // Catch:{ Exception -> 0x0158 }
            r4.inviter_id = r5     // Catch:{ Exception -> 0x0158 }
            org.telegram.tgnet.TLRPC$ChatParticipants r0 = r15.participants     // Catch:{ Exception -> 0x0158 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$ChatParticipant> r0 = r0.participants     // Catch:{ Exception -> 0x0158 }
            r0.set(r11, r4)     // Catch:{ Exception -> 0x0158 }
            goto L_0x0105
        L_0x0102:
            int r11 = r11 + 1
            goto L_0x00c3
        L_0x0105:
            org.telegram.tgnet.TLRPC$ChatParticipants r0 = r15.participants     // Catch:{ Exception -> 0x0158 }
            r4 = r24
            r0.version = r4     // Catch:{ Exception -> 0x0158 }
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda158 r0 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda158     // Catch:{ Exception -> 0x0158 }
            r0.<init>(r1, r15)     // Catch:{ Exception -> 0x0158 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0)     // Catch:{ Exception -> 0x0158 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0158 }
            java.lang.String r4 = "REPLACE INTO chat_settings_v2 VALUES(?, ?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r4)     // Catch:{ Exception -> 0x0158 }
            org.telegram.tgnet.NativeByteBuffer r4 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0158 }
            int r5 = r15.getObjectSize()     // Catch:{ Exception -> 0x0158 }
            r4.<init>((int) r5)     // Catch:{ Exception -> 0x0158 }
            r15.serializeToStream(r4)     // Catch:{ Exception -> 0x0158 }
            r5 = 1
            r0.bindLong(r5, r2)     // Catch:{ Exception -> 0x0158 }
            r2 = 2
            r0.bindByteBuffer((int) r2, (org.telegram.tgnet.NativeByteBuffer) r4)     // Catch:{ Exception -> 0x0158 }
            int r2 = r15.pinned_msg_id     // Catch:{ Exception -> 0x0158 }
            r0.bindInteger(r12, r2)     // Catch:{ Exception -> 0x0158 }
            r2 = 4
            int r3 = r15.online_count     // Catch:{ Exception -> 0x0158 }
            r0.bindInteger(r2, r3)     // Catch:{ Exception -> 0x0158 }
            r2 = 5
            long r5 = r15.inviterId     // Catch:{ Exception -> 0x0158 }
            r0.bindLong(r2, r5)     // Catch:{ Exception -> 0x0158 }
            r2 = 6
            int r3 = r15.invitesCount     // Catch:{ Exception -> 0x0158 }
            r0.bindInteger(r2, r3)     // Catch:{ Exception -> 0x0158 }
            r0.step()     // Catch:{ Exception -> 0x0158 }
            r0.dispose()     // Catch:{ Exception -> 0x0158 }
            r4.reuse()     // Catch:{ Exception -> 0x0158 }
            goto L_0x0161
        L_0x0150:
            r0 = move-exception
            r8 = r9
            goto L_0x0162
        L_0x0153:
            r0 = move-exception
            r8 = r9
            goto L_0x0159
        L_0x0156:
            r0 = move-exception
            goto L_0x0162
        L_0x0158:
            r0 = move-exception
        L_0x0159:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0156 }
            if (r8 == 0) goto L_0x0161
            r8.dispose()
        L_0x0161:
            return
        L_0x0162:
            if (r8 == 0) goto L_0x0167
            r8.dispose()
        L_0x0167:
            goto L_0x0169
        L_0x0168:
            throw r0
        L_0x0169:
            goto L_0x0168
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$updateChatInfo$107(long, int, long, long, int):void");
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$updateChatInfo$106(TLRPC$ChatFull tLRPC$ChatFull) {
        NotificationCenter notificationCenter = getNotificationCenter();
        int i = NotificationCenter.chatInfoDidLoad;
        Boolean bool = Boolean.FALSE;
        notificationCenter.postNotificationName(i, tLRPC$ChatFull, 0, bool, bool);
    }

    public boolean isMigratedChat(long j) {
        CountDownLatch countDownLatch = new CountDownLatch(1);
        boolean[] zArr = new boolean[1];
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda115(this, j, zArr, countDownLatch));
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return zArr[0];
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:28:0x005f  */
    /* JADX WARNING: Removed duplicated region for block: B:32:0x0068  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$isMigratedChat$108(long r6, boolean[] r8, java.util.concurrent.CountDownLatch r9) {
        /*
            r5 = this;
            r0 = 0
            org.telegram.SQLite.SQLiteDatabase r1 = r5.database     // Catch:{ Exception -> 0x0059 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0059 }
            r2.<init>()     // Catch:{ Exception -> 0x0059 }
            java.lang.String r3 = "SELECT info FROM chat_settings_v2 WHERE uid = "
            r2.append(r3)     // Catch:{ Exception -> 0x0059 }
            r2.append(r6)     // Catch:{ Exception -> 0x0059 }
            java.lang.String r6 = r2.toString()     // Catch:{ Exception -> 0x0059 }
            r7 = 0
            java.lang.Object[] r2 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x0059 }
            org.telegram.SQLite.SQLiteCursor r6 = r1.queryFinalized(r6, r2)     // Catch:{ Exception -> 0x0059 }
            java.util.ArrayList r1 = new java.util.ArrayList     // Catch:{ Exception -> 0x0054, all -> 0x0051 }
            r1.<init>()     // Catch:{ Exception -> 0x0054, all -> 0x0051 }
            boolean r1 = r6.next()     // Catch:{ Exception -> 0x0054, all -> 0x0051 }
            if (r1 == 0) goto L_0x0038
            org.telegram.tgnet.NativeByteBuffer r1 = r6.byteBufferValue(r7)     // Catch:{ Exception -> 0x0054, all -> 0x0051 }
            if (r1 == 0) goto L_0x0038
            int r2 = r1.readInt32(r7)     // Catch:{ Exception -> 0x0054, all -> 0x0051 }
            org.telegram.tgnet.TLRPC$ChatFull r2 = org.telegram.tgnet.TLRPC$ChatFull.TLdeserialize(r1, r2, r7)     // Catch:{ Exception -> 0x0054, all -> 0x0051 }
            r1.reuse()     // Catch:{ Exception -> 0x0054, all -> 0x0051 }
            goto L_0x0039
        L_0x0038:
            r2 = r0
        L_0x0039:
            r6.dispose()     // Catch:{ Exception -> 0x0054, all -> 0x0051 }
            boolean r6 = r2 instanceof org.telegram.tgnet.TLRPC$TL_channelFull     // Catch:{ Exception -> 0x0059 }
            if (r6 == 0) goto L_0x004a
            long r1 = r2.migrated_from_chat_id     // Catch:{ Exception -> 0x0059 }
            r3 = 0
            int r6 = (r1 > r3 ? 1 : (r1 == r3 ? 0 : -1))
            if (r6 == 0) goto L_0x004a
            r6 = 1
            goto L_0x004b
        L_0x004a:
            r6 = 0
        L_0x004b:
            r8[r7] = r6     // Catch:{ Exception -> 0x0059 }
            r9.countDown()     // Catch:{ Exception -> 0x0059 }
            goto L_0x0062
        L_0x0051:
            r7 = move-exception
            r0 = r6
            goto L_0x0066
        L_0x0054:
            r7 = move-exception
            r0 = r6
            goto L_0x005a
        L_0x0057:
            r7 = move-exception
            goto L_0x0066
        L_0x0059:
            r7 = move-exception
        L_0x005a:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r7)     // Catch:{ all -> 0x0057 }
            if (r0 == 0) goto L_0x0062
            r0.dispose()
        L_0x0062:
            r9.countDown()
            return
        L_0x0066:
            if (r0 == 0) goto L_0x006b
            r0.dispose()
        L_0x006b:
            r9.countDown()
            throw r7
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$isMigratedChat$108(long, boolean[], java.util.concurrent.CountDownLatch):void");
    }

    public boolean hasInviteMeMessage(long j) {
        CountDownLatch countDownLatch = new CountDownLatch(1);
        boolean[] zArr = new boolean[1];
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda116(this, j, zArr, countDownLatch));
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return zArr[0];
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$hasInviteMeMessage$109(long j, boolean[] zArr, CountDownLatch countDownLatch) {
        SQLiteCursor sQLiteCursor = null;
        try {
            long clientUserId = getUserConfig().getClientUserId();
            SQLiteDatabase sQLiteDatabase = this.database;
            SQLiteCursor queryFinalized = sQLiteDatabase.queryFinalized("SELECT data FROM messages_v2 WHERE uid = " + (-j) + " AND out = 0 ORDER BY mid DESC LIMIT 100", new Object[0]);
            while (true) {
                if (!queryFinalized.next()) {
                    break;
                }
                NativeByteBuffer byteBufferValue = queryFinalized.byteBufferValue(0);
                if (byteBufferValue != null) {
                    TLRPC$Message TLdeserialize = TLRPC$Message.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                    byteBufferValue.reuse();
                    TLRPC$MessageAction tLRPC$MessageAction = TLdeserialize.action;
                    if ((tLRPC$MessageAction instanceof TLRPC$TL_messageActionChatAddUser) && tLRPC$MessageAction.users.contains(Long.valueOf(clientUserId))) {
                        zArr[0] = true;
                        break;
                    }
                }
            }
            queryFinalized.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (sQLiteCursor != null) {
                sQLiteCursor.dispose();
            }
        } catch (Throwable th) {
            if (sQLiteCursor != null) {
                sQLiteCursor.dispose();
            }
            countDownLatch.countDown();
            throw th;
        }
        countDownLatch.countDown();
    }

    /* JADX WARNING: Code restructure failed: missing block: B:104:0x01c0, code lost:
        r0 = th;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:105:0x01c1, code lost:
        r2 = r8;
        r5 = r15;
        r12 = 0;
        r13 = false;
        r8 = r25;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:106:0x01c9, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:107:0x01ca, code lost:
        r2 = r8;
        r12 = 0;
        r13 = false;
        r8 = r25;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:255:0x03ad, code lost:
        r2.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:260:0x03c4, code lost:
        r2.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:83:0x0176, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:87:0x017d, code lost:
        r0 = e;
     */
    /* JADX WARNING: Failed to process nested try/catch */
    /* JADX WARNING: Removed duplicated region for block: B:104:0x01c0 A[Catch:{ Exception -> 0x01d6, all -> 0x01d1 }, ExcHandler: all (th java.lang.Throwable), Splitter:B:50:0x00ed] */
    /* JADX WARNING: Removed duplicated region for block: B:125:0x0223 A[SYNTHETIC, Splitter:B:125:0x0223] */
    /* JADX WARNING: Removed duplicated region for block: B:139:0x0263 A[SYNTHETIC, Splitter:B:139:0x0263] */
    /* JADX WARNING: Removed duplicated region for block: B:152:0x0282  */
    /* JADX WARNING: Removed duplicated region for block: B:156:0x028b A[SYNTHETIC, Splitter:B:156:0x028b] */
    /* JADX WARNING: Removed duplicated region for block: B:186:0x02e6 A[Catch:{ Exception -> 0x0344, all -> 0x0339 }] */
    /* JADX WARNING: Removed duplicated region for block: B:201:0x031f  */
    /* JADX WARNING: Removed duplicated region for block: B:255:0x03ad  */
    /* JADX WARNING: Removed duplicated region for block: B:260:0x03c4  */
    /* JADX WARNING: Removed duplicated region for block: B:29:0x0086 A[SYNTHETIC, Splitter:B:29:0x0086] */
    /* JADX WARNING: Removed duplicated region for block: B:45:0x00ca A[SYNTHETIC, Splitter:B:45:0x00ca] */
    /* JADX WARNING: Removed duplicated region for block: B:87:0x017d A[ExcHandler: Exception (e java.lang.Exception), Splitter:B:54:0x00fa] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private org.telegram.tgnet.TLRPC$ChatFull loadChatInfoInternal(long r25, boolean r27, boolean r28, boolean r29, int r30) {
        /*
            r24 = this;
            r1 = r24
            r3 = r25
            java.util.ArrayList r6 = new java.util.ArrayList
            r6.<init>()
            java.util.HashMap r11 = new java.util.HashMap
            r11.<init>()
            java.util.ArrayList r10 = new java.util.ArrayList
            r10.<init>()
            r5 = 0
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x03a2, all -> 0x039b }
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x03a2, all -> 0x039b }
            r7.<init>()     // Catch:{ Exception -> 0x03a2, all -> 0x039b }
            java.lang.String r8 = "SELECT info, pinned, online, inviter, links FROM chat_settings_v2 WHERE uid = "
            r7.append(r8)     // Catch:{ Exception -> 0x03a2, all -> 0x039b }
            r7.append(r3)     // Catch:{ Exception -> 0x03a2, all -> 0x039b }
            java.lang.String r7 = r7.toString()     // Catch:{ Exception -> 0x03a2, all -> 0x039b }
            java.lang.Object[] r8 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x03a2, all -> 0x039b }
            org.telegram.SQLite.SQLiteCursor r7 = r0.queryFinalized(r7, r8)     // Catch:{ Exception -> 0x03a2, all -> 0x039b }
            boolean r0 = r7.next()     // Catch:{ Exception -> 0x0395, all -> 0x038f }
            r8 = 3
            r9 = 2
            r12 = 1
            if (r0 == 0) goto L_0x007c
            org.telegram.tgnet.NativeByteBuffer r0 = r7.byteBufferValue(r5)     // Catch:{ Exception -> 0x0074, all -> 0x006e }
            if (r0 == 0) goto L_0x007c
            int r13 = r0.readInt32(r5)     // Catch:{ Exception -> 0x0074, all -> 0x006e }
            org.telegram.tgnet.TLRPC$ChatFull r13 = org.telegram.tgnet.TLRPC$ChatFull.TLdeserialize(r0, r13, r5)     // Catch:{ Exception -> 0x0074, all -> 0x006e }
            r0.reuse()     // Catch:{ Exception -> 0x0068, all -> 0x0062 }
            int r0 = r7.intValue(r12)     // Catch:{ Exception -> 0x0068, all -> 0x0062 }
            r13.pinned_msg_id = r0     // Catch:{ Exception -> 0x0068, all -> 0x0062 }
            int r0 = r7.intValue(r9)     // Catch:{ Exception -> 0x0068, all -> 0x0062 }
            r13.online_count = r0     // Catch:{ Exception -> 0x0068, all -> 0x0062 }
            long r14 = r7.longValue(r8)     // Catch:{ Exception -> 0x0068, all -> 0x0062 }
            r13.inviterId = r14     // Catch:{ Exception -> 0x0068, all -> 0x0062 }
            r0 = 4
            int r0 = r7.intValue(r0)     // Catch:{ Exception -> 0x0068, all -> 0x0062 }
            r13.invitesCount = r0     // Catch:{ Exception -> 0x0068, all -> 0x0062 }
            r15 = r13
            goto L_0x007d
        L_0x0062:
            r0 = move-exception
            r8 = r3
            r2 = r7
            r5 = r13
            goto L_0x039f
        L_0x0068:
            r0 = move-exception
            r8 = r3
            r2 = r7
            r15 = r13
            goto L_0x03a6
        L_0x006e:
            r0 = move-exception
            r8 = r3
            r2 = r7
            r5 = 0
            goto L_0x039f
        L_0x0074:
            r0 = move-exception
            r8 = r3
            r2 = r7
            r12 = 0
            r13 = 0
            r15 = 0
            goto L_0x03a8
        L_0x007c:
            r15 = 0
        L_0x007d:
            r7.dispose()     // Catch:{ Exception -> 0x038a, all -> 0x0382 }
            boolean r0 = r15 instanceof org.telegram.tgnet.TLRPC$TL_chatFull     // Catch:{ Exception -> 0x037c, all -> 0x0376 }
            java.lang.String r7 = ","
            if (r0 == 0) goto L_0x00ca
            java.lang.StringBuilder r0 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x00c6, all -> 0x00c0 }
            r0.<init>()     // Catch:{ Exception -> 0x00c6, all -> 0x00c0 }
            r8 = 0
        L_0x008c:
            org.telegram.tgnet.TLRPC$ChatParticipants r9 = r15.participants     // Catch:{ Exception -> 0x00c6, all -> 0x00c0 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$ChatParticipant> r9 = r9.participants     // Catch:{ Exception -> 0x00c6, all -> 0x00c0 }
            int r9 = r9.size()     // Catch:{ Exception -> 0x00c6, all -> 0x00c0 }
            if (r8 >= r9) goto L_0x00b1
            org.telegram.tgnet.TLRPC$ChatParticipants r9 = r15.participants     // Catch:{ Exception -> 0x00c6, all -> 0x00c0 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$ChatParticipant> r9 = r9.participants     // Catch:{ Exception -> 0x00c6, all -> 0x00c0 }
            java.lang.Object r9 = r9.get(r8)     // Catch:{ Exception -> 0x00c6, all -> 0x00c0 }
            org.telegram.tgnet.TLRPC$ChatParticipant r9 = (org.telegram.tgnet.TLRPC$ChatParticipant) r9     // Catch:{ Exception -> 0x00c6, all -> 0x00c0 }
            int r13 = r0.length()     // Catch:{ Exception -> 0x00c6, all -> 0x00c0 }
            if (r13 == 0) goto L_0x00a9
            r0.append(r7)     // Catch:{ Exception -> 0x00c6, all -> 0x00c0 }
        L_0x00a9:
            long r13 = r9.user_id     // Catch:{ Exception -> 0x00c6, all -> 0x00c0 }
            r0.append(r13)     // Catch:{ Exception -> 0x00c6, all -> 0x00c0 }
            int r8 = r8 + 1
            goto L_0x008c
        L_0x00b1:
            int r7 = r0.length()     // Catch:{ Exception -> 0x00c6, all -> 0x00c0 }
            if (r7 == 0) goto L_0x01db
            java.lang.String r0 = r0.toString()     // Catch:{ Exception -> 0x00c6, all -> 0x00c0 }
            r1.getUsersInternal(r0, r6)     // Catch:{ Exception -> 0x00c6, all -> 0x00c0 }
            goto L_0x01db
        L_0x00c0:
            r0 = move-exception
            r8 = r3
        L_0x00c2:
            r5 = r15
            r2 = 0
            goto L_0x039f
        L_0x00c6:
            r0 = move-exception
            r8 = r3
            goto L_0x0380
        L_0x00ca:
            boolean r0 = r15 instanceof org.telegram.tgnet.TLRPC$TL_channelFull     // Catch:{ Exception -> 0x037c, all -> 0x0376 }
            if (r0 == 0) goto L_0x01db
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x01d6, all -> 0x01d1 }
            java.lang.StringBuilder r13 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x01d6, all -> 0x01d1 }
            r13.<init>()     // Catch:{ Exception -> 0x01d6, all -> 0x01d1 }
            java.lang.String r14 = "SELECT us.data, us.status, cu.data, cu.date FROM channel_users_v2 as cu LEFT JOIN users as us ON us.uid = cu.uid WHERE cu.did = "
            r13.append(r14)     // Catch:{ Exception -> 0x01d6, all -> 0x01d1 }
            long r8 = -r3
            r13.append(r8)     // Catch:{ Exception -> 0x01d6, all -> 0x01d1 }
            java.lang.String r8 = " ORDER BY cu.date DESC"
            r13.append(r8)     // Catch:{ Exception -> 0x01d6, all -> 0x01d1 }
            java.lang.String r8 = r13.toString()     // Catch:{ Exception -> 0x01d6, all -> 0x01d1 }
            java.lang.Object[] r9 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x01d6, all -> 0x01d1 }
            org.telegram.SQLite.SQLiteCursor r8 = r0.queryFinalized(r8, r9)     // Catch:{ Exception -> 0x01d6, all -> 0x01d1 }
            org.telegram.tgnet.TLRPC$TL_chatParticipants r0 = new org.telegram.tgnet.TLRPC$TL_chatParticipants     // Catch:{ Exception -> 0x01c9, all -> 0x01c0 }
            r0.<init>()     // Catch:{ Exception -> 0x01c9, all -> 0x01c0 }
            r15.participants = r0     // Catch:{ Exception -> 0x01c9, all -> 0x01c0 }
        L_0x00f4:
            boolean r0 = r8.next()     // Catch:{ Exception -> 0x01c9, all -> 0x01c0 }
            if (r0 == 0) goto L_0x0188
            org.telegram.tgnet.NativeByteBuffer r0 = r8.byteBufferValue(r5)     // Catch:{ Exception -> 0x017d, all -> 0x01c0 }
            if (r0 == 0) goto L_0x0114
            int r9 = r0.readInt32(r5)     // Catch:{ Exception -> 0x017d, all -> 0x010c }
            org.telegram.tgnet.TLRPC$User r9 = org.telegram.tgnet.TLRPC$User.TLdeserialize(r0, r9, r5)     // Catch:{ Exception -> 0x017d, all -> 0x010c }
            r0.reuse()     // Catch:{ Exception -> 0x017d, all -> 0x010c }
            goto L_0x0115
        L_0x010c:
            r0 = move-exception
            r2 = r8
            r5 = r15
            r12 = 0
            r13 = 0
            r8 = r3
            goto L_0x03c2
        L_0x0114:
            r9 = 0
        L_0x0115:
            r13 = 2
            org.telegram.tgnet.NativeByteBuffer r0 = r8.byteBufferValue(r13)     // Catch:{ Exception -> 0x017a, all -> 0x01c0 }
            if (r0 == 0) goto L_0x0128
            int r14 = r0.readInt32(r5)     // Catch:{ Exception -> 0x017a, all -> 0x010c }
            org.telegram.tgnet.TLRPC$ChannelParticipant r14 = org.telegram.tgnet.TLRPC$ChannelParticipant.TLdeserialize(r0, r14, r5)     // Catch:{ Exception -> 0x017a, all -> 0x010c }
            r0.reuse()     // Catch:{ Exception -> 0x017a, all -> 0x010c }
            goto L_0x0129
        L_0x0128:
            r14 = 0
        L_0x0129:
            if (r14 == 0) goto L_0x013f
            long r2 = r14.user_id     // Catch:{ Exception -> 0x017a, all -> 0x01c0 }
            org.telegram.messenger.UserConfig r0 = r24.getUserConfig()     // Catch:{ Exception -> 0x017a, all -> 0x01c0 }
            long r4 = r0.clientUserId     // Catch:{ Exception -> 0x017a, all -> 0x01c0 }
            int r0 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1))
            if (r0 != 0) goto L_0x013f
            org.telegram.messenger.UserConfig r0 = r24.getUserConfig()     // Catch:{ Exception -> 0x017a, all -> 0x01c0 }
            org.telegram.tgnet.TLRPC$User r9 = r0.getCurrentUser()     // Catch:{ Exception -> 0x017a, all -> 0x01c0 }
        L_0x013f:
            if (r9 == 0) goto L_0x0178
            if (r14 == 0) goto L_0x0178
            org.telegram.tgnet.TLRPC$UserStatus r0 = r9.status     // Catch:{ Exception -> 0x017a, all -> 0x01c0 }
            if (r0 == 0) goto L_0x014d
            int r2 = r8.intValue(r12)     // Catch:{ Exception -> 0x017a, all -> 0x01c0 }
            r0.expires = r2     // Catch:{ Exception -> 0x017a, all -> 0x01c0 }
        L_0x014d:
            r6.add(r9)     // Catch:{ Exception -> 0x017a, all -> 0x01c0 }
            r2 = 3
            int r0 = r8.intValue(r2)     // Catch:{ Exception -> 0x0176, all -> 0x01c0 }
            r14.date = r0     // Catch:{ Exception -> 0x0176, all -> 0x01c0 }
            org.telegram.tgnet.TLRPC$TL_chatChannelParticipant r0 = new org.telegram.tgnet.TLRPC$TL_chatChannelParticipant     // Catch:{ Exception -> 0x0176, all -> 0x01c0 }
            r0.<init>()     // Catch:{ Exception -> 0x0176, all -> 0x01c0 }
            org.telegram.tgnet.TLRPC$Peer r3 = r14.peer     // Catch:{ Exception -> 0x0176, all -> 0x01c0 }
            long r3 = org.telegram.messenger.MessageObject.getPeerId(r3)     // Catch:{ Exception -> 0x0176, all -> 0x01c0 }
            r0.user_id = r3     // Catch:{ Exception -> 0x0176, all -> 0x01c0 }
            int r3 = r14.date     // Catch:{ Exception -> 0x0176, all -> 0x01c0 }
            r0.date = r3     // Catch:{ Exception -> 0x0176, all -> 0x01c0 }
            long r3 = r14.inviter_id     // Catch:{ Exception -> 0x0176, all -> 0x01c0 }
            r0.inviter_id = r3     // Catch:{ Exception -> 0x0176, all -> 0x01c0 }
            r0.channelParticipant = r14     // Catch:{ Exception -> 0x0176, all -> 0x01c0 }
            org.telegram.tgnet.TLRPC$ChatParticipants r3 = r15.participants     // Catch:{ Exception -> 0x0176, all -> 0x01c0 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$ChatParticipant> r3 = r3.participants     // Catch:{ Exception -> 0x0176, all -> 0x01c0 }
            r3.add(r0)     // Catch:{ Exception -> 0x0176, all -> 0x01c0 }
            goto L_0x0183
        L_0x0176:
            r0 = move-exception
            goto L_0x0180
        L_0x0178:
            r2 = 3
            goto L_0x0183
        L_0x017a:
            r0 = move-exception
            r2 = 3
            goto L_0x0180
        L_0x017d:
            r0 = move-exception
            r2 = 3
            r13 = 2
        L_0x0180:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ Exception -> 0x01c9, all -> 0x01c0 }
        L_0x0183:
            r3 = r25
            r5 = 0
            goto L_0x00f4
        L_0x0188:
            r8.dispose()     // Catch:{ Exception -> 0x01c9, all -> 0x01c0 }
            java.lang.StringBuilder r0 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x01d6, all -> 0x01d1 }
            r0.<init>()     // Catch:{ Exception -> 0x01d6, all -> 0x01d1 }
            r2 = 0
        L_0x0191:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$BotInfo> r3 = r15.bot_info     // Catch:{ Exception -> 0x01d6, all -> 0x01d1 }
            int r3 = r3.size()     // Catch:{ Exception -> 0x01d6, all -> 0x01d1 }
            if (r2 >= r3) goto L_0x01b2
            java.util.ArrayList<org.telegram.tgnet.TLRPC$BotInfo> r3 = r15.bot_info     // Catch:{ Exception -> 0x01d6, all -> 0x01d1 }
            java.lang.Object r3 = r3.get(r2)     // Catch:{ Exception -> 0x01d6, all -> 0x01d1 }
            org.telegram.tgnet.TLRPC$BotInfo r3 = (org.telegram.tgnet.TLRPC$BotInfo) r3     // Catch:{ Exception -> 0x01d6, all -> 0x01d1 }
            int r4 = r0.length()     // Catch:{ Exception -> 0x01d6, all -> 0x01d1 }
            if (r4 == 0) goto L_0x01aa
            r0.append(r7)     // Catch:{ Exception -> 0x01d6, all -> 0x01d1 }
        L_0x01aa:
            long r3 = r3.user_id     // Catch:{ Exception -> 0x01d6, all -> 0x01d1 }
            r0.append(r3)     // Catch:{ Exception -> 0x01d6, all -> 0x01d1 }
            int r2 = r2 + 1
            goto L_0x0191
        L_0x01b2:
            int r2 = r0.length()     // Catch:{ Exception -> 0x01d6, all -> 0x01d1 }
            if (r2 == 0) goto L_0x01db
            java.lang.String r0 = r0.toString()     // Catch:{ Exception -> 0x01d6, all -> 0x01d1 }
            r1.getUsersInternal(r0, r6)     // Catch:{ Exception -> 0x01d6, all -> 0x01d1 }
            goto L_0x01db
        L_0x01c0:
            r0 = move-exception
            r2 = r8
            r5 = r15
            r12 = 0
            r13 = 0
            r8 = r25
            goto L_0x03c2
        L_0x01c9:
            r0 = move-exception
            r2 = r8
            r12 = 0
            r13 = 0
            r8 = r25
            goto L_0x03a8
        L_0x01d1:
            r0 = move-exception
            r8 = r25
            goto L_0x00c2
        L_0x01d6:
            r0 = move-exception
            r8 = r25
            goto L_0x0380
        L_0x01db:
            r2 = 0
            if (r15 == 0) goto L_0x01fb
            long r4 = r15.inviterId     // Catch:{ Exception -> 0x01d6, all -> 0x01d1 }
            int r0 = (r4 > r2 ? 1 : (r4 == r2 ? 0 : -1))
            if (r0 == 0) goto L_0x01fb
            java.lang.StringBuilder r0 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x01d6, all -> 0x01d1 }
            r0.<init>()     // Catch:{ Exception -> 0x01d6, all -> 0x01d1 }
            java.lang.String r4 = ""
            r0.append(r4)     // Catch:{ Exception -> 0x01d6, all -> 0x01d1 }
            long r4 = r15.inviterId     // Catch:{ Exception -> 0x01d6, all -> 0x01d1 }
            r0.append(r4)     // Catch:{ Exception -> 0x01d6, all -> 0x01d1 }
            java.lang.String r0 = r0.toString()     // Catch:{ Exception -> 0x01d6, all -> 0x01d1 }
            r1.getUsersInternal(r0, r6)     // Catch:{ Exception -> 0x01d6, all -> 0x01d1 }
        L_0x01fb:
            org.telegram.messenger.MessagesStorage r0 = r24.getMessagesStorage()     // Catch:{ Exception -> 0x036e, all -> 0x0366 }
            org.telegram.SQLite.SQLiteDatabase r0 = r0.getDatabase()     // Catch:{ Exception -> 0x036e, all -> 0x0366 }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x036e, all -> 0x0366 }
            java.lang.String r5 = "SELECT mid FROM chat_pinned_v2 WHERE uid = %d ORDER BY mid DESC"
            java.lang.Object[] r7 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x036e, all -> 0x0366 }
            r8 = r25
            long r13 = -r8
            java.lang.Long r17 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x0364, all -> 0x0362 }
            r2 = 0
            r7[r2] = r17     // Catch:{ Exception -> 0x0364, all -> 0x0362 }
            java.lang.String r3 = java.lang.String.format(r4, r5, r7)     // Catch:{ Exception -> 0x0364, all -> 0x0362 }
            java.lang.Object[] r4 = new java.lang.Object[r2]     // Catch:{ Exception -> 0x0364, all -> 0x0362 }
            org.telegram.SQLite.SQLiteCursor r3 = r0.queryFinalized(r3, r4)     // Catch:{ Exception -> 0x0364, all -> 0x0362 }
        L_0x021d:
            boolean r0 = r3.next()     // Catch:{ Exception -> 0x035b, all -> 0x0355 }
            if (r0 == 0) goto L_0x0240
            int r0 = r3.intValue(r2)     // Catch:{ Exception -> 0x023d, all -> 0x0238 }
            java.lang.Integer r2 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x023d, all -> 0x0238 }
            r10.add(r2)     // Catch:{ Exception -> 0x023d, all -> 0x0238 }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x023d, all -> 0x0238 }
            r2 = 0
            r11.put(r0, r2)     // Catch:{ Exception -> 0x023d, all -> 0x0238 }
            r2 = 0
            goto L_0x021d
        L_0x0238:
            r0 = move-exception
            r2 = r3
        L_0x023a:
            r5 = r15
            goto L_0x039f
        L_0x023d:
            r0 = move-exception
            goto L_0x035f
        L_0x0240:
            r3.dispose()     // Catch:{ Exception -> 0x035b, all -> 0x0355 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0364, all -> 0x0362 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0364, all -> 0x0362 }
            r2.<init>()     // Catch:{ Exception -> 0x0364, all -> 0x0362 }
            java.lang.String r3 = "SELECT count, end FROM chat_pinned_count WHERE uid = "
            r2.append(r3)     // Catch:{ Exception -> 0x0364, all -> 0x0362 }
            r2.append(r13)     // Catch:{ Exception -> 0x0364, all -> 0x0362 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x0364, all -> 0x0362 }
            r3 = 0
            java.lang.Object[] r5 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x0364, all -> 0x0362 }
            org.telegram.SQLite.SQLiteCursor r2 = r0.queryFinalized(r2, r5)     // Catch:{ Exception -> 0x0364, all -> 0x0362 }
            boolean r0 = r2.next()     // Catch:{ Exception -> 0x0351, all -> 0x034d }
            if (r0 == 0) goto L_0x0282
            int r5 = r2.intValue(r3)     // Catch:{ Exception -> 0x027f, all -> 0x027d }
            int r0 = r2.intValue(r12)     // Catch:{ Exception -> 0x0279, all -> 0x0274 }
            if (r0 == 0) goto L_0x026e
            goto L_0x026f
        L_0x026e:
            r12 = 0
        L_0x026f:
            r22 = r5
            r23 = r12
            goto L_0x0286
        L_0x0274:
            r0 = move-exception
            r12 = r5
            r5 = r15
            goto L_0x03a0
        L_0x0279:
            r0 = move-exception
            r12 = r5
            goto L_0x03a7
        L_0x027d:
            r0 = move-exception
            goto L_0x023a
        L_0x027f:
            r0 = move-exception
            goto L_0x03a6
        L_0x0282:
            r22 = 0
            r23 = 0
        L_0x0286:
            r2.dispose()     // Catch:{ Exception -> 0x0344, all -> 0x0339 }
            if (r15 == 0) goto L_0x02de
            int r0 = r15.pinned_msg_id     // Catch:{ Exception -> 0x02da, all -> 0x02d5 }
            if (r0 == 0) goto L_0x02de
            boolean r0 = r10.isEmpty()     // Catch:{ Exception -> 0x02da, all -> 0x02d5 }
            if (r0 != 0) goto L_0x02b8
            int r0 = r15.pinned_msg_id     // Catch:{ Exception -> 0x02b0, all -> 0x02a7 }
            r5 = 0
            java.lang.Object r2 = r10.get(r5)     // Catch:{ Exception -> 0x02b0, all -> 0x02a7 }
            java.lang.Integer r2 = (java.lang.Integer) r2     // Catch:{ Exception -> 0x02b0, all -> 0x02a7 }
            int r2 = r2.intValue()     // Catch:{ Exception -> 0x02b0, all -> 0x02a7 }
            if (r0 <= r2) goto L_0x02a5
            goto L_0x02b9
        L_0x02a5:
            r2 = 0
            goto L_0x02e0
        L_0x02a7:
            r0 = move-exception
            r5 = r15
            r12 = r22
            r13 = r23
            r2 = 0
            goto L_0x03c2
        L_0x02b0:
            r0 = move-exception
            r12 = r22
            r13 = r23
            r2 = 0
            goto L_0x03a8
        L_0x02b8:
            r5 = 0
        L_0x02b9:
            r10.clear()     // Catch:{ Exception -> 0x02da, all -> 0x02d5 }
            int r0 = r15.pinned_msg_id     // Catch:{ Exception -> 0x02da, all -> 0x02d5 }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x02da, all -> 0x02d5 }
            r10.add(r0)     // Catch:{ Exception -> 0x02da, all -> 0x02d5 }
            int r0 = r15.pinned_msg_id     // Catch:{ Exception -> 0x02da, all -> 0x02d5 }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x02da, all -> 0x02d5 }
            r2 = 0
            r11.put(r0, r2)     // Catch:{ Exception -> 0x02d2, all -> 0x02d0 }
            goto L_0x02e0
        L_0x02d0:
            r0 = move-exception
            goto L_0x02d7
        L_0x02d2:
            r0 = move-exception
            goto L_0x0347
        L_0x02d5:
            r0 = move-exception
            r2 = 0
        L_0x02d7:
            r5 = r15
            goto L_0x033e
        L_0x02da:
            r0 = move-exception
            r2 = 0
            goto L_0x0347
        L_0x02de:
            r2 = 0
            r5 = 0
        L_0x02e0:
            boolean r0 = r10.isEmpty()     // Catch:{ Exception -> 0x0344, all -> 0x0339 }
            if (r0 != 0) goto L_0x031f
            org.telegram.messenger.MediaDataController r12 = r24.getMediaDataController()     // Catch:{ Exception -> 0x0344, all -> 0x0339 }
            if (r27 == 0) goto L_0x02ef
            r20 = r8
            goto L_0x02f1
        L_0x02ef:
            r20 = 0
        L_0x02f1:
            r18 = 0
            r19 = r15
            r15 = r20
            r17 = r10
            java.util.ArrayList r0 = r12.loadPinnedMessages(r13, r15, r17, r18)     // Catch:{ Exception -> 0x031b, all -> 0x0319 }
            if (r0 == 0) goto L_0x0321
            int r3 = r0.size()     // Catch:{ Exception -> 0x031b, all -> 0x0319 }
        L_0x0303:
            if (r5 >= r3) goto L_0x0321
            java.lang.Object r4 = r0.get(r5)     // Catch:{ Exception -> 0x031b, all -> 0x0319 }
            org.telegram.messenger.MessageObject r4 = (org.telegram.messenger.MessageObject) r4     // Catch:{ Exception -> 0x031b, all -> 0x0319 }
            int r7 = r4.getId()     // Catch:{ Exception -> 0x031b, all -> 0x0319 }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r7)     // Catch:{ Exception -> 0x031b, all -> 0x0319 }
            r11.put(r7, r4)     // Catch:{ Exception -> 0x031b, all -> 0x0319 }
            int r5 = r5 + 1
            goto L_0x0303
        L_0x0319:
            r0 = move-exception
            goto L_0x033c
        L_0x031b:
            r0 = move-exception
            r15 = r19
            goto L_0x0347
        L_0x031f:
            r19 = r15
        L_0x0321:
            org.telegram.messenger.MessagesController r2 = r24.getMessagesController()
            r7 = 1
            r3 = r25
            r5 = r19
            r8 = r28
            r9 = r29
            r12 = r22
            r13 = r23
            r2.processChatInfo(r3, r5, r6, r7, r8, r9, r10, r11, r12, r13)
            r15 = r19
            goto L_0x03bf
        L_0x0339:
            r0 = move-exception
            r19 = r15
        L_0x033c:
            r5 = r19
        L_0x033e:
            r12 = r22
            r13 = r23
            goto L_0x03c2
        L_0x0344:
            r0 = move-exception
            r19 = r15
        L_0x0347:
            r12 = r22
            r13 = r23
            goto L_0x03a8
        L_0x034d:
            r0 = move-exception
            r19 = r15
            goto L_0x036c
        L_0x0351:
            r0 = move-exception
            r19 = r15
            goto L_0x0374
        L_0x0355:
            r0 = move-exception
            r19 = r15
            r5 = 0
            r2 = r3
            goto L_0x0387
        L_0x035b:
            r0 = move-exception
            r19 = r15
            r5 = 0
        L_0x035f:
            r2 = r3
            goto L_0x03a6
        L_0x0362:
            r0 = move-exception
            goto L_0x0369
        L_0x0364:
            r0 = move-exception
            goto L_0x0371
        L_0x0366:
            r0 = move-exception
            r8 = r25
        L_0x0369:
            r19 = r15
            r2 = 0
        L_0x036c:
            r5 = 0
            goto L_0x0387
        L_0x036e:
            r0 = move-exception
            r8 = r25
        L_0x0371:
            r19 = r15
            r2 = 0
        L_0x0374:
            r5 = 0
            goto L_0x03a6
        L_0x0376:
            r0 = move-exception
            r8 = r3
            r19 = r15
            r2 = 0
            goto L_0x0387
        L_0x037c:
            r0 = move-exception
            r8 = r3
            r19 = r15
        L_0x0380:
            r2 = 0
            goto L_0x03a6
        L_0x0382:
            r0 = move-exception
            r8 = r3
            r19 = r15
            r2 = r7
        L_0x0387:
            r5 = r19
            goto L_0x039f
        L_0x038a:
            r0 = move-exception
            r8 = r3
            r19 = r15
            goto L_0x0399
        L_0x038f:
            r0 = move-exception
            r8 = r3
            r2 = 0
            r5 = r2
            r2 = r7
            goto L_0x039f
        L_0x0395:
            r0 = move-exception
            r8 = r3
            r2 = 0
            r15 = r2
        L_0x0399:
            r2 = r7
            goto L_0x03a6
        L_0x039b:
            r0 = move-exception
            r8 = r3
            r2 = 0
            r5 = r2
        L_0x039f:
            r12 = 0
        L_0x03a0:
            r13 = 0
            goto L_0x03c2
        L_0x03a2:
            r0 = move-exception
            r8 = r3
            r2 = 0
            r15 = r2
        L_0x03a6:
            r12 = 0
        L_0x03a7:
            r13 = 0
        L_0x03a8:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x03c0 }
            if (r2 == 0) goto L_0x03b0
            r2.dispose()
        L_0x03b0:
            org.telegram.messenger.MessagesController r2 = r24.getMessagesController()
            r7 = 1
            r3 = r25
            r5 = r15
            r8 = r28
            r9 = r29
            r2.processChatInfo(r3, r5, r6, r7, r8, r9, r10, r11, r12, r13)
        L_0x03bf:
            return r15
        L_0x03c0:
            r0 = move-exception
            r5 = r15
        L_0x03c2:
            if (r2 == 0) goto L_0x03c7
            r2.dispose()
        L_0x03c7:
            org.telegram.messenger.MessagesController r2 = r24.getMessagesController()
            r7 = 1
            r3 = r25
            r8 = r28
            r9 = r29
            r2.processChatInfo(r3, r5, r6, r7, r8, r9, r10, r11, r12, r13)
            goto L_0x03d7
        L_0x03d6:
            throw r0
        L_0x03d7:
            goto L_0x03d6
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.loadChatInfoInternal(long, boolean, boolean, boolean, int):org.telegram.tgnet.TLRPC$ChatFull");
    }

    public TLRPC$ChatFull loadChatInfo(long j, boolean z, CountDownLatch countDownLatch, boolean z2, boolean z3) {
        return loadChatInfo(j, z, countDownLatch, z2, z3, 0);
    }

    public TLRPC$ChatFull loadChatInfo(long j, boolean z, CountDownLatch countDownLatch, boolean z2, boolean z3, int i) {
        TLRPC$ChatFull[] tLRPC$ChatFullArr = new TLRPC$ChatFull[1];
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda194(this, tLRPC$ChatFullArr, j, z, z2, z3, i, countDownLatch));
        if (countDownLatch != null) {
            try {
                countDownLatch.await();
            } catch (Throwable unused) {
            }
        }
        return tLRPC$ChatFullArr[0];
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$loadChatInfo$110(TLRPC$ChatFull[] tLRPC$ChatFullArr, long j, boolean z, boolean z2, boolean z3, int i, CountDownLatch countDownLatch) {
        tLRPC$ChatFullArr[0] = loadChatInfoInternal(j, z, z2, z3, i);
        if (countDownLatch != null) {
            countDownLatch.countDown();
        }
    }

    public void processPendingRead(long j, int i, int i2, int i3) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda71(this, j, i, i3, this.lastSavedDate, i2));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:116:0x01a1, code lost:
        if (r4 == null) goto L_0x01a6;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:117:0x01a3, code lost:
        r4.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:118:0x01a6, code lost:
        r1.database.commitTransaction();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:119:0x01ab, code lost:
        return;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:91:0x016f, code lost:
        if (r4 != null) goto L_0x01a3;
     */
    /* JADX WARNING: Removed duplicated region for block: B:115:0x019e  */
    /* JADX WARNING: Removed duplicated region for block: B:122:0x01af  */
    /* JADX WARNING: Removed duplicated region for block: B:124:0x01b4  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$processPendingRead$111(long r19, int r21, int r22, int r23, int r24) {
        /*
            r18 = this;
            r1 = r18
            r2 = r19
            r0 = r24
            r4 = 0
            org.telegram.SQLite.SQLiteDatabase r7 = r1.database     // Catch:{ Exception -> 0x0195, all -> 0x0190 }
            java.lang.StringBuilder r8 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0195, all -> 0x0190 }
            r8.<init>()     // Catch:{ Exception -> 0x0195, all -> 0x0190 }
            java.lang.String r9 = "SELECT unread_count, inbox_max, last_mid FROM dialogs WHERE did = "
            r8.append(r9)     // Catch:{ Exception -> 0x0195, all -> 0x0190 }
            r8.append(r2)     // Catch:{ Exception -> 0x0195, all -> 0x0190 }
            java.lang.String r8 = r8.toString()     // Catch:{ Exception -> 0x0195, all -> 0x0190 }
            r9 = 0
            java.lang.Object[] r10 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x0195, all -> 0x0190 }
            org.telegram.SQLite.SQLiteCursor r7 = r7.queryFinalized(r8, r10)     // Catch:{ Exception -> 0x0195, all -> 0x0190 }
            boolean r8 = r7.next()     // Catch:{ Exception -> 0x018b, all -> 0x0186 }
            r10 = 2
            r11 = 1
            if (r8 == 0) goto L_0x0048
            int r4 = r7.intValue(r9)     // Catch:{ Exception -> 0x0043, all -> 0x003e }
            int r5 = r7.intValue(r11)     // Catch:{ Exception -> 0x0043, all -> 0x003e }
            long r12 = r7.longValue(r10)     // Catch:{ Exception -> 0x0043, all -> 0x003e }
            r8 = r4
            r16 = r12
            r12 = r8
            r13 = r5
            r4 = r16
            goto L_0x004b
        L_0x003e:
            r0 = move-exception
            r4 = r7
        L_0x0040:
            r6 = 0
            goto L_0x01ad
        L_0x0043:
            r0 = move-exception
            r4 = r7
        L_0x0045:
            r6 = 0
            goto L_0x0199
        L_0x0048:
            r8 = 0
            r12 = 0
            r13 = 0
        L_0x004b:
            r7.dispose()     // Catch:{ Exception -> 0x018b, all -> 0x0186 }
            org.telegram.SQLite.SQLiteDatabase r7 = r1.database     // Catch:{ Exception -> 0x0195, all -> 0x0190 }
            r7.beginTransaction()     // Catch:{ Exception -> 0x0195, all -> 0x0190 }
            boolean r7 = org.telegram.messenger.DialogObject.isEncryptedDialog(r19)     // Catch:{ Exception -> 0x0195, all -> 0x0190 }
            java.lang.String r14 = "SELECT changes()"
            if (r7 != 0) goto L_0x00f8
            r7 = r21
            int r0 = java.lang.Math.max(r13, r7)     // Catch:{ Exception -> 0x00f4, all -> 0x00f0 }
            org.telegram.SQLite.SQLiteDatabase r7 = r1.database     // Catch:{ Exception -> 0x00f4, all -> 0x00f0 }
            java.lang.String r13 = "UPDATE messages_v2 SET read_state = read_state | 1 WHERE uid = ? AND mid <= ? AND read_state IN(0,2) AND out = 0"
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.executeFast(r13)     // Catch:{ Exception -> 0x00f4, all -> 0x00f0 }
            r7.requery()     // Catch:{ Exception -> 0x00e8, all -> 0x00e0 }
            r7.bindLong(r11, r2)     // Catch:{ Exception -> 0x00e8, all -> 0x00e0 }
            r7.bindInteger(r10, r0)     // Catch:{ Exception -> 0x00e8, all -> 0x00e0 }
            r7.step()     // Catch:{ Exception -> 0x00e8, all -> 0x00e0 }
            r7.dispose()     // Catch:{ Exception -> 0x00e8, all -> 0x00e0 }
            r21 = r7
            long r6 = (long) r0
            int r15 = (r6 > r4 ? 1 : (r6 == r4 ? 0 : -1))
            if (r15 < 0) goto L_0x0081
            r4 = 0
            goto L_0x00a0
        L_0x0081:
            org.telegram.SQLite.SQLiteDatabase r4 = r1.database     // Catch:{ Exception -> 0x00de, all -> 0x00dc }
            java.lang.Object[] r5 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x00de, all -> 0x00dc }
            org.telegram.SQLite.SQLiteCursor r4 = r4.queryFinalized(r14, r5)     // Catch:{ Exception -> 0x00de, all -> 0x00dc }
            boolean r5 = r4.next()     // Catch:{ Exception -> 0x00d7, all -> 0x00d2 }
            if (r5 == 0) goto L_0x0096
            int r5 = r4.intValue(r9)     // Catch:{ Exception -> 0x00d7, all -> 0x00d2 }
            int r5 = r5 + r22
            goto L_0x0097
        L_0x0096:
            r5 = 0
        L_0x0097:
            r4.dispose()     // Catch:{ Exception -> 0x00d7, all -> 0x00d2 }
            int r8 = r8 - r5
            int r5 = java.lang.Math.max(r9, r8)     // Catch:{ Exception -> 0x00d7, all -> 0x00d2 }
            r9 = r5
        L_0x00a0:
            org.telegram.SQLite.SQLiteDatabase r5 = r1.database     // Catch:{ Exception -> 0x00d7, all -> 0x00d2 }
            java.lang.String r6 = "DELETE FROM unread_push_messages WHERE uid = ? AND mid <= ?"
            org.telegram.SQLite.SQLitePreparedStatement r5 = r5.executeFast(r6)     // Catch:{ Exception -> 0x00d7, all -> 0x00d2 }
            r5.requery()     // Catch:{ Exception -> 0x0174, all -> 0x0172 }
            r5.bindLong(r11, r2)     // Catch:{ Exception -> 0x0174, all -> 0x0172 }
            r5.bindInteger(r10, r0)     // Catch:{ Exception -> 0x0174, all -> 0x0172 }
            r5.step()     // Catch:{ Exception -> 0x0174, all -> 0x0172 }
            r5.dispose()     // Catch:{ Exception -> 0x0174, all -> 0x0172 }
            org.telegram.SQLite.SQLiteDatabase r6 = r1.database     // Catch:{ Exception -> 0x0174, all -> 0x0172 }
            java.lang.String r7 = "DELETE FROM unread_push_messages WHERE uid = ? AND date <= ?"
            org.telegram.SQLite.SQLitePreparedStatement r5 = r6.executeFast(r7)     // Catch:{ Exception -> 0x0174, all -> 0x0172 }
            r5.requery()     // Catch:{ Exception -> 0x0174, all -> 0x0172 }
            r5.bindLong(r11, r2)     // Catch:{ Exception -> 0x0174, all -> 0x0172 }
            r6 = r23
            r5.bindInteger(r10, r6)     // Catch:{ Exception -> 0x0174, all -> 0x0172 }
            r5.step()     // Catch:{ Exception -> 0x0174, all -> 0x0172 }
            r5.dispose()     // Catch:{ Exception -> 0x0174, all -> 0x0172 }
            goto L_0x013a
        L_0x00d2:
            r0 = move-exception
            r6 = r21
            goto L_0x01ad
        L_0x00d7:
            r0 = move-exception
            r6 = r21
            goto L_0x0199
        L_0x00dc:
            r0 = move-exception
            goto L_0x00e3
        L_0x00de:
            r0 = move-exception
            goto L_0x00eb
        L_0x00e0:
            r0 = move-exception
            r21 = r7
        L_0x00e3:
            r6 = r21
            r4 = 0
            goto L_0x01ad
        L_0x00e8:
            r0 = move-exception
            r21 = r7
        L_0x00eb:
            r6 = r21
            r4 = 0
            goto L_0x0199
        L_0x00f0:
            r0 = move-exception
            r4 = 0
            goto L_0x0040
        L_0x00f4:
            r0 = move-exception
            r4 = 0
            goto L_0x0045
        L_0x00f8:
            org.telegram.SQLite.SQLiteDatabase r6 = r1.database     // Catch:{ Exception -> 0x0195, all -> 0x0190 }
            java.lang.String r7 = "UPDATE messages_v2 SET read_state = read_state | 1 WHERE uid = ? AND mid >= ? AND read_state IN(0,2) AND out = 0"
            org.telegram.SQLite.SQLitePreparedStatement r6 = r6.executeFast(r7)     // Catch:{ Exception -> 0x0195, all -> 0x0190 }
            r6.requery()     // Catch:{ Exception -> 0x0182, all -> 0x017e }
            r6.bindLong(r11, r2)     // Catch:{ Exception -> 0x0182, all -> 0x017e }
            r6.bindInteger(r10, r0)     // Catch:{ Exception -> 0x0182, all -> 0x017e }
            r6.step()     // Catch:{ Exception -> 0x0182, all -> 0x017e }
            r6.dispose()     // Catch:{ Exception -> 0x0182, all -> 0x017e }
            long r6 = (long) r0
            int r15 = (r6 > r4 ? 1 : (r6 == r4 ? 0 : -1))
            if (r15 > 0) goto L_0x0116
            r4 = 0
            goto L_0x013a
        L_0x0116:
            org.telegram.SQLite.SQLiteDatabase r4 = r1.database     // Catch:{ Exception -> 0x0195, all -> 0x0190 }
            java.lang.Object[] r5 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x0195, all -> 0x0190 }
            org.telegram.SQLite.SQLiteCursor r4 = r4.queryFinalized(r14, r5)     // Catch:{ Exception -> 0x0195, all -> 0x0190 }
            boolean r5 = r4.next()     // Catch:{ Exception -> 0x017a, all -> 0x0176 }
            if (r5 == 0) goto L_0x0131
            int r5 = r4.intValue(r9)     // Catch:{ Exception -> 0x012e, all -> 0x012b }
            int r5 = r5 + r22
            goto L_0x0132
        L_0x012b:
            r0 = move-exception
            goto L_0x0040
        L_0x012e:
            r0 = move-exception
            goto L_0x0045
        L_0x0131:
            r5 = 0
        L_0x0132:
            r4.dispose()     // Catch:{ Exception -> 0x017a, all -> 0x0176 }
            int r8 = r8 - r5
            int r9 = java.lang.Math.max(r9, r8)     // Catch:{ Exception -> 0x017a, all -> 0x0176 }
        L_0x013a:
            org.telegram.SQLite.SQLiteDatabase r5 = r1.database     // Catch:{ Exception -> 0x017a, all -> 0x0176 }
            java.lang.String r6 = "UPDATE dialogs SET unread_count = ?, inbox_max = ? WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r5 = r5.executeFast(r6)     // Catch:{ Exception -> 0x017a, all -> 0x0176 }
            r5.requery()     // Catch:{ Exception -> 0x0174, all -> 0x0172 }
            r5.bindInteger(r11, r9)     // Catch:{ Exception -> 0x0174, all -> 0x0172 }
            r5.bindInteger(r10, r0)     // Catch:{ Exception -> 0x0174, all -> 0x0172 }
            r0 = 3
            r5.bindLong(r0, r2)     // Catch:{ Exception -> 0x0174, all -> 0x0172 }
            r5.step()     // Catch:{ Exception -> 0x0174, all -> 0x0172 }
            r5.dispose()     // Catch:{ Exception -> 0x0174, all -> 0x0172 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x017a, all -> 0x0176 }
            r0.commitTransaction()     // Catch:{ Exception -> 0x017a, all -> 0x0176 }
            if (r12 == 0) goto L_0x016b
            if (r9 != 0) goto L_0x016b
            org.telegram.messenger.support.LongSparseIntArray r0 = new org.telegram.messenger.support.LongSparseIntArray     // Catch:{ Exception -> 0x017a, all -> 0x0176 }
            r0.<init>()     // Catch:{ Exception -> 0x017a, all -> 0x0176 }
            r0.put(r2, r9)     // Catch:{ Exception -> 0x017a, all -> 0x0176 }
            r5 = 0
            r1.updateFiltersReadCounter(r0, r5, r11)     // Catch:{ Exception -> 0x0174, all -> 0x0172 }
            goto L_0x016c
        L_0x016b:
            r5 = 0
        L_0x016c:
            r18.updateWidgets((long) r19)     // Catch:{ Exception -> 0x0174, all -> 0x0172 }
            if (r4 == 0) goto L_0x01a6
            goto L_0x01a3
        L_0x0172:
            r0 = move-exception
            goto L_0x0178
        L_0x0174:
            r0 = move-exception
            goto L_0x017c
        L_0x0176:
            r0 = move-exception
            r5 = 0
        L_0x0178:
            r6 = r5
            goto L_0x01ad
        L_0x017a:
            r0 = move-exception
            r5 = 0
        L_0x017c:
            r6 = r5
            goto L_0x0199
        L_0x017e:
            r0 = move-exception
            r5 = 0
            r4 = r5
            goto L_0x01ad
        L_0x0182:
            r0 = move-exception
            r5 = 0
            r4 = r5
            goto L_0x0199
        L_0x0186:
            r0 = move-exception
            r5 = 0
            r6 = r5
            r4 = r7
            goto L_0x01ad
        L_0x018b:
            r0 = move-exception
            r5 = 0
            r6 = r5
            r4 = r7
            goto L_0x0199
        L_0x0190:
            r0 = move-exception
            r5 = 0
            r4 = r5
            r6 = r4
            goto L_0x01ad
        L_0x0195:
            r0 = move-exception
            r5 = 0
            r4 = r5
            r6 = r4
        L_0x0199:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x01ac }
            if (r6 == 0) goto L_0x01a1
            r6.dispose()
        L_0x01a1:
            if (r4 == 0) goto L_0x01a6
        L_0x01a3:
            r4.dispose()
        L_0x01a6:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database
            r0.commitTransaction()
            return
        L_0x01ac:
            r0 = move-exception
        L_0x01ad:
            if (r6 == 0) goto L_0x01b2
            r6.dispose()
        L_0x01b2:
            if (r4 == 0) goto L_0x01b7
            r4.dispose()
        L_0x01b7:
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database
            r2.commitTransaction()
            goto L_0x01be
        L_0x01bd:
            throw r0
        L_0x01be:
            goto L_0x01bd
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$processPendingRead$111(long, int, int, int, int):void");
    }

    public void putContacts(ArrayList<TLRPC$TL_contact> arrayList, boolean z) {
        if (!arrayList.isEmpty() || z) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda190(this, z, new ArrayList(arrayList)));
        }
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:30:0x006a  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$putContacts$112(boolean r8, java.util.ArrayList r9) {
        /*
            r7 = this;
            r0 = 0
            if (r8 == 0) goto L_0x0012
            org.telegram.SQLite.SQLiteDatabase r8 = r7.database     // Catch:{ Exception -> 0x0059 }
            java.lang.String r1 = "DELETE FROM contacts WHERE 1"
            org.telegram.SQLite.SQLitePreparedStatement r8 = r8.executeFast(r1)     // Catch:{ Exception -> 0x0059 }
            org.telegram.SQLite.SQLitePreparedStatement r8 = r8.stepThis()     // Catch:{ Exception -> 0x0059 }
            r8.dispose()     // Catch:{ Exception -> 0x0059 }
        L_0x0012:
            org.telegram.SQLite.SQLiteDatabase r8 = r7.database     // Catch:{ Exception -> 0x0059 }
            r8.beginTransaction()     // Catch:{ Exception -> 0x0059 }
            org.telegram.SQLite.SQLiteDatabase r8 = r7.database     // Catch:{ Exception -> 0x0059 }
            java.lang.String r1 = "REPLACE INTO contacts VALUES(?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r8 = r8.executeFast(r1)     // Catch:{ Exception -> 0x0059 }
            r1 = 0
            r2 = 0
        L_0x0021:
            int r3 = r9.size()     // Catch:{ Exception -> 0x0053, all -> 0x004f }
            if (r2 >= r3) goto L_0x0046
            java.lang.Object r3 = r9.get(r2)     // Catch:{ Exception -> 0x0053, all -> 0x004f }
            org.telegram.tgnet.TLRPC$TL_contact r3 = (org.telegram.tgnet.TLRPC$TL_contact) r3     // Catch:{ Exception -> 0x0053, all -> 0x004f }
            r8.requery()     // Catch:{ Exception -> 0x0053, all -> 0x004f }
            long r4 = r3.user_id     // Catch:{ Exception -> 0x0053, all -> 0x004f }
            r6 = 1
            r8.bindLong(r6, r4)     // Catch:{ Exception -> 0x0053, all -> 0x004f }
            r4 = 2
            boolean r3 = r3.mutual     // Catch:{ Exception -> 0x0053, all -> 0x004f }
            if (r3 == 0) goto L_0x003c
            goto L_0x003d
        L_0x003c:
            r6 = 0
        L_0x003d:
            r8.bindInteger(r4, r6)     // Catch:{ Exception -> 0x0053, all -> 0x004f }
            r8.step()     // Catch:{ Exception -> 0x0053, all -> 0x004f }
            int r2 = r2 + 1
            goto L_0x0021
        L_0x0046:
            r8.dispose()     // Catch:{ Exception -> 0x0053, all -> 0x004f }
            org.telegram.SQLite.SQLiteDatabase r8 = r7.database     // Catch:{ Exception -> 0x0059 }
            r8.commitTransaction()     // Catch:{ Exception -> 0x0059 }
            goto L_0x0062
        L_0x004f:
            r9 = move-exception
            r0 = r8
            r8 = r9
            goto L_0x0068
        L_0x0053:
            r9 = move-exception
            r0 = r8
            r8 = r9
            goto L_0x005a
        L_0x0057:
            r8 = move-exception
            goto L_0x0068
        L_0x0059:
            r8 = move-exception
        L_0x005a:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r8)     // Catch:{ all -> 0x0057 }
            if (r0 == 0) goto L_0x0062
            r0.dispose()
        L_0x0062:
            org.telegram.SQLite.SQLiteDatabase r8 = r7.database
            r8.commitTransaction()
            return
        L_0x0068:
            if (r0 == 0) goto L_0x006d
            r0.dispose()
        L_0x006d:
            org.telegram.SQLite.SQLiteDatabase r9 = r7.database
            r9.commitTransaction()
            goto L_0x0074
        L_0x0073:
            throw r8
        L_0x0074:
            goto L_0x0073
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$putContacts$112(boolean, java.util.ArrayList):void");
    }

    public void deleteContacts(ArrayList<Long> arrayList) {
        if (arrayList != null && !arrayList.isEmpty()) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda137(this, arrayList));
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$deleteContacts$113(ArrayList arrayList) {
        try {
            String join = TextUtils.join(",", arrayList);
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM contacts WHERE uid IN(" + join + ")").stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void applyPhoneBookUpdates(String str, String str2) {
        if (!TextUtils.isEmpty(str)) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda124(this, str, str2));
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$applyPhoneBookUpdates$114(String str, String str2) {
        try {
            if (str.length() != 0) {
                this.database.executeFast(String.format(Locale.US, "UPDATE user_phones_v7 SET deleted = 0 WHERE sphone IN(%s)", new Object[]{str})).stepThis().dispose();
            }
            if (str2.length() != 0) {
                this.database.executeFast(String.format(Locale.US, "UPDATE user_phones_v7 SET deleted = 1 WHERE sphone IN(%s)", new Object[]{str2})).stepThis().dispose();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void putCachedPhoneBook(HashMap<String, ContactsController.Contact> hashMap, boolean z, boolean z2) {
        if (hashMap == null) {
            return;
        }
        if (!hashMap.isEmpty() || z || z2) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda149(this, hashMap, z));
        }
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:44:0x0127  */
    /* JADX WARNING: Removed duplicated region for block: B:46:0x012c  */
    /* JADX WARNING: Removed duplicated region for block: B:51:0x0138  */
    /* JADX WARNING: Removed duplicated region for block: B:53:0x013d  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$putCachedPhoneBook$115(java.util.HashMap r12, boolean r13) {
        /*
            r11 = this;
            r0 = 0
            boolean r1 = org.telegram.messenger.BuildVars.LOGS_ENABLED     // Catch:{ Exception -> 0x0120, all -> 0x011d }
            if (r1 == 0) goto L_0x0022
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0120, all -> 0x011d }
            r1.<init>()     // Catch:{ Exception -> 0x0120, all -> 0x011d }
            int r2 = r11.currentAccount     // Catch:{ Exception -> 0x0120, all -> 0x011d }
            r1.append(r2)     // Catch:{ Exception -> 0x0120, all -> 0x011d }
            java.lang.String r2 = " save contacts to db "
            r1.append(r2)     // Catch:{ Exception -> 0x0120, all -> 0x011d }
            int r2 = r12.size()     // Catch:{ Exception -> 0x0120, all -> 0x011d }
            r1.append(r2)     // Catch:{ Exception -> 0x0120, all -> 0x011d }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0120, all -> 0x011d }
            org.telegram.messenger.FileLog.d(r1)     // Catch:{ Exception -> 0x0120, all -> 0x011d }
        L_0x0022:
            org.telegram.SQLite.SQLiteDatabase r1 = r11.database     // Catch:{ Exception -> 0x0120, all -> 0x011d }
            java.lang.String r2 = "DELETE FROM user_contacts_v7 WHERE 1"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0120, all -> 0x011d }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x0120, all -> 0x011d }
            r1.dispose()     // Catch:{ Exception -> 0x0120, all -> 0x011d }
            org.telegram.SQLite.SQLiteDatabase r1 = r11.database     // Catch:{ Exception -> 0x0120, all -> 0x011d }
            java.lang.String r2 = "DELETE FROM user_phones_v7 WHERE 1"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0120, all -> 0x011d }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x0120, all -> 0x011d }
            r1.dispose()     // Catch:{ Exception -> 0x0120, all -> 0x011d }
            org.telegram.SQLite.SQLiteDatabase r1 = r11.database     // Catch:{ Exception -> 0x0120, all -> 0x011d }
            r1.beginTransaction()     // Catch:{ Exception -> 0x0120, all -> 0x011d }
            org.telegram.SQLite.SQLiteDatabase r1 = r11.database     // Catch:{ Exception -> 0x0120, all -> 0x011d }
            java.lang.String r2 = "REPLACE INTO user_contacts_v7 VALUES(?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0120, all -> 0x011d }
            org.telegram.SQLite.SQLiteDatabase r2 = r11.database     // Catch:{ Exception -> 0x0119, all -> 0x0115 }
            java.lang.String r3 = "REPLACE INTO user_phones_v7 VALUES(?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r3)     // Catch:{ Exception -> 0x0119, all -> 0x0115 }
            java.util.Set r12 = r12.entrySet()     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            java.util.Iterator r12 = r12.iterator()     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
        L_0x005d:
            boolean r3 = r12.hasNext()     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            r4 = 0
            if (r3 == 0) goto L_0x00e0
            java.lang.Object r3 = r12.next()     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            java.util.Map$Entry r3 = (java.util.Map.Entry) r3     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            java.lang.Object r3 = r3.getValue()     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            org.telegram.messenger.ContactsController$Contact r3 = (org.telegram.messenger.ContactsController.Contact) r3     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            java.util.ArrayList<java.lang.String> r5 = r3.phones     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            boolean r5 = r5.isEmpty()     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            if (r5 != 0) goto L_0x005d
            java.util.ArrayList<java.lang.String> r5 = r3.shortPhones     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            boolean r5 = r5.isEmpty()     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            if (r5 == 0) goto L_0x0081
            goto L_0x005d
        L_0x0081:
            r1.requery()     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            java.lang.String r5 = r3.key     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            r6 = 1
            r1.bindString(r6, r5)     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            int r5 = r3.contact_id     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            r7 = 2
            r1.bindInteger(r7, r5)     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            java.lang.String r5 = r3.first_name     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            r8 = 3
            r1.bindString(r8, r5)     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            java.lang.String r5 = r3.last_name     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            r9 = 4
            r1.bindString(r9, r5)     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            r5 = 5
            int r10 = r3.imported     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            r1.bindInteger(r5, r10)     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            r1.step()     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
        L_0x00a5:
            java.util.ArrayList<java.lang.String> r5 = r3.phones     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            int r5 = r5.size()     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            if (r4 >= r5) goto L_0x005d
            r2.requery()     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            java.lang.String r5 = r3.key     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            r2.bindString(r6, r5)     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            java.util.ArrayList<java.lang.String> r5 = r3.phones     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            java.lang.Object r5 = r5.get(r4)     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            java.lang.String r5 = (java.lang.String) r5     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            r2.bindString(r7, r5)     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            java.util.ArrayList<java.lang.String> r5 = r3.shortPhones     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            java.lang.Object r5 = r5.get(r4)     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            java.lang.String r5 = (java.lang.String) r5     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            r2.bindString(r8, r5)     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            java.util.ArrayList<java.lang.Integer> r5 = r3.phoneDeleted     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            java.lang.Object r5 = r5.get(r4)     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            java.lang.Integer r5 = (java.lang.Integer) r5     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            int r5 = r5.intValue()     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            r2.bindInteger(r9, r5)     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            r2.step()     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            int r4 = r4 + 1
            goto L_0x00a5
        L_0x00e0:
            r1.dispose()     // Catch:{ Exception -> 0x0113, all -> 0x0111 }
            r2.dispose()     // Catch:{ Exception -> 0x010f }
            org.telegram.SQLite.SQLiteDatabase r12 = r11.database     // Catch:{ Exception -> 0x0120, all -> 0x011d }
            r12.commitTransaction()     // Catch:{ Exception -> 0x0120, all -> 0x011d }
            if (r13 == 0) goto L_0x012f
            org.telegram.SQLite.SQLiteDatabase r12 = r11.database     // Catch:{ Exception -> 0x0120, all -> 0x011d }
            java.lang.String r13 = "DROP TABLE IF EXISTS user_contacts_v6;"
            org.telegram.SQLite.SQLitePreparedStatement r12 = r12.executeFast(r13)     // Catch:{ Exception -> 0x0120, all -> 0x011d }
            org.telegram.SQLite.SQLitePreparedStatement r12 = r12.stepThis()     // Catch:{ Exception -> 0x0120, all -> 0x011d }
            r12.dispose()     // Catch:{ Exception -> 0x0120, all -> 0x011d }
            org.telegram.SQLite.SQLiteDatabase r12 = r11.database     // Catch:{ Exception -> 0x0120, all -> 0x011d }
            java.lang.String r13 = "DROP TABLE IF EXISTS user_phones_v6;"
            org.telegram.SQLite.SQLitePreparedStatement r12 = r12.executeFast(r13)     // Catch:{ Exception -> 0x0120, all -> 0x011d }
            org.telegram.SQLite.SQLitePreparedStatement r12 = r12.stepThis()     // Catch:{ Exception -> 0x0120, all -> 0x011d }
            r12.dispose()     // Catch:{ Exception -> 0x0120, all -> 0x011d }
            r11.getCachedPhoneBook(r4)     // Catch:{ Exception -> 0x0120, all -> 0x011d }
            goto L_0x012f
        L_0x010f:
            r12 = move-exception
            goto L_0x0122
        L_0x0111:
            r12 = move-exception
            goto L_0x0117
        L_0x0113:
            r12 = move-exception
            goto L_0x011b
        L_0x0115:
            r12 = move-exception
            r2 = r0
        L_0x0117:
            r0 = r1
            goto L_0x0136
        L_0x0119:
            r12 = move-exception
            r2 = r0
        L_0x011b:
            r0 = r1
            goto L_0x0122
        L_0x011d:
            r12 = move-exception
            r2 = r0
            goto L_0x0136
        L_0x0120:
            r12 = move-exception
            r2 = r0
        L_0x0122:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r12)     // Catch:{ all -> 0x0135 }
            if (r0 == 0) goto L_0x012a
            r0.dispose()
        L_0x012a:
            if (r2 == 0) goto L_0x012f
            r2.dispose()
        L_0x012f:
            org.telegram.SQLite.SQLiteDatabase r12 = r11.database
            r12.commitTransaction()
            return
        L_0x0135:
            r12 = move-exception
        L_0x0136:
            if (r0 == 0) goto L_0x013b
            r0.dispose()
        L_0x013b:
            if (r2 == 0) goto L_0x0140
            r2.dispose()
        L_0x0140:
            org.telegram.SQLite.SQLiteDatabase r13 = r11.database
            r13.commitTransaction()
            goto L_0x0147
        L_0x0146:
            throw r12
        L_0x0147:
            goto L_0x0146
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$putCachedPhoneBook$115(java.util.HashMap, boolean):void");
    }

    public void getCachedPhoneBook(boolean z) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda183(this, z));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:78:0x013a, code lost:
        if (r10 == null) goto L_0x013d;
     */
    /* JADX WARNING: Removed duplicated region for block: B:55:0x00e6  */
    /* JADX WARNING: Removed duplicated region for block: B:59:0x00f9 A[Catch:{ all -> 0x0132 }] */
    /* JADX WARNING: Removed duplicated region for block: B:71:0x012a  */
    /* JADX WARNING: Removed duplicated region for block: B:81:0x0144 A[SYNTHETIC, Splitter:B:81:0x0144] */
    /* JADX WARNING: Removed duplicated region for block: B:83:0x015e A[Catch:{ Exception -> 0x01f0, all -> 0x01ee }] */
    /* JADX WARNING: Removed duplicated region for block: B:87:0x016f A[Catch:{ Exception -> 0x01f0, all -> 0x01ee }] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$getCachedPhoneBook$116(boolean r25) {
        /*
            r24 = this;
            r1 = r24
            java.lang.String r2 = ""
            r3 = 6
            r4 = 3
            r5 = 2
            r6 = 5
            r7 = 4
            r9 = 1
            r11 = 8
            r12 = 5000(0x1388, float:7.006E-42)
            r13 = 0
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ all -> 0x00df }
            java.lang.String r14 = "SELECT name FROM sqlite_master WHERE type='table' AND name='user_contacts_v6'"
            java.lang.Object[] r15 = new java.lang.Object[r13]     // Catch:{ all -> 0x00df }
            org.telegram.SQLite.SQLiteCursor r14 = r0.queryFinalized(r14, r15)     // Catch:{ all -> 0x00df }
            boolean r0 = r14.next()     // Catch:{ all -> 0x00dc }
            r14.dispose()     // Catch:{ all -> 0x00dc }
            if (r0 == 0) goto L_0x00da
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ all -> 0x00df }
            java.lang.String r14 = "SELECT COUNT(uid) FROM user_contacts_v6 WHERE 1"
            java.lang.Object[] r15 = new java.lang.Object[r13]     // Catch:{ all -> 0x00df }
            org.telegram.SQLite.SQLiteCursor r14 = r0.queryFinalized(r14, r15)     // Catch:{ all -> 0x00df }
            boolean r0 = r14.next()     // Catch:{ all -> 0x00dc }
            if (r0 == 0) goto L_0x003b
            int r0 = r14.intValue(r13)     // Catch:{ all -> 0x00dc }
            int r0 = java.lang.Math.min(r12, r0)     // Catch:{ all -> 0x00dc }
            goto L_0x003d
        L_0x003b:
            r0 = 16
        L_0x003d:
            r14.dispose()     // Catch:{ all -> 0x00dc }
            android.util.SparseArray r15 = new android.util.SparseArray     // Catch:{ all -> 0x00dc }
            r15.<init>(r0)     // Catch:{ all -> 0x00dc }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ all -> 0x00dc }
            java.lang.String r8 = "SELECT us.uid, us.fname, us.sname, up.phone, up.sphone, up.deleted, us.imported FROM user_contacts_v6 as us LEFT JOIN user_phones_v6 as up ON us.uid = up.uid WHERE 1"
            java.lang.Object[] r10 = new java.lang.Object[r13]     // Catch:{ all -> 0x00dc }
            org.telegram.SQLite.SQLiteCursor r8 = r0.queryFinalized(r8, r10)     // Catch:{ all -> 0x00dc }
        L_0x004f:
            boolean r0 = r8.next()     // Catch:{ all -> 0x00d7 }
            if (r0 == 0) goto L_0x00cc
            int r0 = r8.intValue(r13)     // Catch:{ all -> 0x00d7 }
            java.lang.Object r10 = r15.get(r0)     // Catch:{ all -> 0x00d7 }
            org.telegram.messenger.ContactsController$Contact r10 = (org.telegram.messenger.ContactsController.Contact) r10     // Catch:{ all -> 0x00d7 }
            if (r10 != 0) goto L_0x0089
            org.telegram.messenger.ContactsController$Contact r10 = new org.telegram.messenger.ContactsController$Contact     // Catch:{ all -> 0x00d7 }
            r10.<init>()     // Catch:{ all -> 0x00d7 }
            java.lang.String r14 = r8.stringValue(r9)     // Catch:{ all -> 0x00d7 }
            r10.first_name = r14     // Catch:{ all -> 0x00d7 }
            java.lang.String r14 = r8.stringValue(r5)     // Catch:{ all -> 0x00d7 }
            r10.last_name = r14     // Catch:{ all -> 0x00d7 }
            int r14 = r8.intValue(r3)     // Catch:{ all -> 0x00d7 }
            r10.imported = r14     // Catch:{ all -> 0x00d7 }
            java.lang.String r14 = r10.first_name     // Catch:{ all -> 0x00d7 }
            if (r14 != 0) goto L_0x007e
            r10.first_name = r2     // Catch:{ all -> 0x00d7 }
        L_0x007e:
            java.lang.String r14 = r10.last_name     // Catch:{ all -> 0x00d7 }
            if (r14 != 0) goto L_0x0084
            r10.last_name = r2     // Catch:{ all -> 0x00d7 }
        L_0x0084:
            r10.contact_id = r0     // Catch:{ all -> 0x00d7 }
            r15.put(r0, r10)     // Catch:{ all -> 0x00d7 }
        L_0x0089:
            java.lang.String r0 = r8.stringValue(r4)     // Catch:{ all -> 0x00d7 }
            if (r0 != 0) goto L_0x0090
            goto L_0x004f
        L_0x0090:
            java.util.ArrayList<java.lang.String> r14 = r10.phones     // Catch:{ all -> 0x00d7 }
            r14.add(r0)     // Catch:{ all -> 0x00d7 }
            java.lang.String r14 = r8.stringValue(r7)     // Catch:{ all -> 0x00d7 }
            if (r14 != 0) goto L_0x009c
            goto L_0x004f
        L_0x009c:
            int r3 = r14.length()     // Catch:{ all -> 0x00d7 }
            if (r3 != r11) goto L_0x00ac
            int r3 = r0.length()     // Catch:{ all -> 0x00d7 }
            if (r3 == r11) goto L_0x00ac
            java.lang.String r14 = org.telegram.PhoneFormat.PhoneFormat.stripExceptNumbers(r0)     // Catch:{ all -> 0x00d7 }
        L_0x00ac:
            java.util.ArrayList<java.lang.String> r0 = r10.shortPhones     // Catch:{ all -> 0x00d7 }
            r0.add(r14)     // Catch:{ all -> 0x00d7 }
            java.util.ArrayList<java.lang.Integer> r0 = r10.phoneDeleted     // Catch:{ all -> 0x00d7 }
            int r3 = r8.intValue(r6)     // Catch:{ all -> 0x00d7 }
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)     // Catch:{ all -> 0x00d7 }
            r0.add(r3)     // Catch:{ all -> 0x00d7 }
            java.util.ArrayList<java.lang.String> r0 = r10.phoneTypes     // Catch:{ all -> 0x00d7 }
            r0.add(r2)     // Catch:{ all -> 0x00d7 }
            int r0 = r15.size()     // Catch:{ all -> 0x00d7 }
            if (r0 != r12) goto L_0x00ca
            goto L_0x00cc
        L_0x00ca:
            r3 = 6
            goto L_0x004f
        L_0x00cc:
            r8.dispose()     // Catch:{ all -> 0x00d7 }
            org.telegram.messenger.ContactsController r0 = r24.getContactsController()     // Catch:{ all -> 0x00df }
            r0.migratePhoneBookToV7(r15)     // Catch:{ all -> 0x00df }
            return
        L_0x00d7:
            r0 = move-exception
            r10 = r8
            goto L_0x00e1
        L_0x00da:
            r10 = 0
            goto L_0x00e9
        L_0x00dc:
            r0 = move-exception
            r10 = r14
            goto L_0x00e1
        L_0x00df:
            r0 = move-exception
            r10 = 0
        L_0x00e1:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0220 }
            if (r10 == 0) goto L_0x00e9
            r10.dispose()
        L_0x00e9:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ all -> 0x0132 }
            java.lang.String r3 = "SELECT COUNT(key) FROM user_contacts_v7 WHERE 1"
            java.lang.Object[] r8 = new java.lang.Object[r13]     // Catch:{ all -> 0x0132 }
            org.telegram.SQLite.SQLiteCursor r10 = r0.queryFinalized(r3, r8)     // Catch:{ all -> 0x0132 }
            boolean r0 = r10.next()     // Catch:{ all -> 0x0132 }
            if (r0 == 0) goto L_0x012a
            int r3 = r10.intValue(r13)     // Catch:{ all -> 0x0132 }
            int r8 = java.lang.Math.min(r12, r3)     // Catch:{ all -> 0x0128 }
            if (r3 <= r12) goto L_0x0107
            int r0 = r3 + -5000
            r14 = r0
            goto L_0x0108
        L_0x0107:
            r14 = 0
        L_0x0108:
            boolean r0 = org.telegram.messenger.BuildVars.LOGS_ENABLED     // Catch:{ all -> 0x0126 }
            if (r0 == 0) goto L_0x012e
            java.lang.StringBuilder r0 = new java.lang.StringBuilder     // Catch:{ all -> 0x0126 }
            r0.<init>()     // Catch:{ all -> 0x0126 }
            int r15 = r1.currentAccount     // Catch:{ all -> 0x0126 }
            r0.append(r15)     // Catch:{ all -> 0x0126 }
            java.lang.String r15 = " current cached contacts count = "
            r0.append(r15)     // Catch:{ all -> 0x0126 }
            r0.append(r3)     // Catch:{ all -> 0x0126 }
            java.lang.String r0 = r0.toString()     // Catch:{ all -> 0x0126 }
            org.telegram.messenger.FileLog.d(r0)     // Catch:{ all -> 0x0126 }
            goto L_0x012e
        L_0x0126:
            r0 = move-exception
            goto L_0x0137
        L_0x0128:
            r0 = move-exception
            goto L_0x0134
        L_0x012a:
            r3 = 0
            r8 = 16
            r14 = 0
        L_0x012e:
            r10.dispose()
            goto L_0x013d
        L_0x0132:
            r0 = move-exception
            r3 = 0
        L_0x0134:
            r8 = 16
            r14 = 0
        L_0x0137:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0218 }
            if (r10 == 0) goto L_0x013d
            goto L_0x012e
        L_0x013d:
            java.util.HashMap r15 = new java.util.HashMap
            r15.<init>(r8)
            if (r14 == 0) goto L_0x015e
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x01f0 }
            java.lang.StringBuilder r8 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x01f0 }
            r8.<init>()     // Catch:{ Exception -> 0x01f0 }
            java.lang.String r14 = "SELECT us.key, us.uid, us.fname, us.sname, up.phone, up.sphone, up.deleted, us.imported FROM user_contacts_v7 as us LEFT JOIN user_phones_v7 as up ON us.key = up.key WHERE 1 LIMIT 0,"
            r8.append(r14)     // Catch:{ Exception -> 0x01f0 }
            r8.append(r3)     // Catch:{ Exception -> 0x01f0 }
            java.lang.String r3 = r8.toString()     // Catch:{ Exception -> 0x01f0 }
            java.lang.Object[] r8 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x01f0 }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r3, r8)     // Catch:{ Exception -> 0x01f0 }
            goto L_0x0168
        L_0x015e:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x01f0 }
            java.lang.String r3 = "SELECT us.key, us.uid, us.fname, us.sname, up.phone, up.sphone, up.deleted, us.imported FROM user_contacts_v7 as us LEFT JOIN user_phones_v7 as up ON us.key = up.key WHERE 1"
            java.lang.Object[] r8 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x01f0 }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r3, r8)     // Catch:{ Exception -> 0x01f0 }
        L_0x0168:
            r10 = r0
        L_0x0169:
            boolean r0 = r10.next()     // Catch:{ Exception -> 0x01f0 }
            if (r0 == 0) goto L_0x01ea
            java.lang.String r0 = r10.stringValue(r13)     // Catch:{ Exception -> 0x01f0 }
            java.lang.Object r3 = r15.get(r0)     // Catch:{ Exception -> 0x01f0 }
            org.telegram.messenger.ContactsController$Contact r3 = (org.telegram.messenger.ContactsController.Contact) r3     // Catch:{ Exception -> 0x01f0 }
            if (r3 != 0) goto L_0x01a8
            org.telegram.messenger.ContactsController$Contact r3 = new org.telegram.messenger.ContactsController$Contact     // Catch:{ Exception -> 0x01f0 }
            r3.<init>()     // Catch:{ Exception -> 0x01f0 }
            int r8 = r10.intValue(r9)     // Catch:{ Exception -> 0x01f0 }
            r3.contact_id = r8     // Catch:{ Exception -> 0x01f0 }
            java.lang.String r8 = r10.stringValue(r5)     // Catch:{ Exception -> 0x01f0 }
            r3.first_name = r8     // Catch:{ Exception -> 0x01f0 }
            java.lang.String r8 = r10.stringValue(r4)     // Catch:{ Exception -> 0x01f0 }
            r3.last_name = r8     // Catch:{ Exception -> 0x01f0 }
            r8 = 7
            int r8 = r10.intValue(r8)     // Catch:{ Exception -> 0x01f0 }
            r3.imported = r8     // Catch:{ Exception -> 0x01f0 }
            java.lang.String r8 = r3.first_name     // Catch:{ Exception -> 0x01f0 }
            if (r8 != 0) goto L_0x019f
            r3.first_name = r2     // Catch:{ Exception -> 0x01f0 }
        L_0x019f:
            java.lang.String r8 = r3.last_name     // Catch:{ Exception -> 0x01f0 }
            if (r8 != 0) goto L_0x01a5
            r3.last_name = r2     // Catch:{ Exception -> 0x01f0 }
        L_0x01a5:
            r15.put(r0, r3)     // Catch:{ Exception -> 0x01f0 }
        L_0x01a8:
            java.lang.String r0 = r10.stringValue(r7)     // Catch:{ Exception -> 0x01f0 }
            if (r0 != 0) goto L_0x01b0
        L_0x01ae:
            r8 = 6
            goto L_0x0169
        L_0x01b0:
            java.util.ArrayList<java.lang.String> r8 = r3.phones     // Catch:{ Exception -> 0x01f0 }
            r8.add(r0)     // Catch:{ Exception -> 0x01f0 }
            java.lang.String r8 = r10.stringValue(r6)     // Catch:{ Exception -> 0x01f0 }
            if (r8 != 0) goto L_0x01bc
            goto L_0x01ae
        L_0x01bc:
            int r14 = r8.length()     // Catch:{ Exception -> 0x01f0 }
            if (r14 != r11) goto L_0x01cc
            int r14 = r0.length()     // Catch:{ Exception -> 0x01f0 }
            if (r14 == r11) goto L_0x01cc
            java.lang.String r8 = org.telegram.PhoneFormat.PhoneFormat.stripExceptNumbers(r0)     // Catch:{ Exception -> 0x01f0 }
        L_0x01cc:
            java.util.ArrayList<java.lang.String> r0 = r3.shortPhones     // Catch:{ Exception -> 0x01f0 }
            r0.add(r8)     // Catch:{ Exception -> 0x01f0 }
            java.util.ArrayList<java.lang.Integer> r0 = r3.phoneDeleted     // Catch:{ Exception -> 0x01f0 }
            r8 = 6
            int r14 = r10.intValue(r8)     // Catch:{ Exception -> 0x01f0 }
            java.lang.Integer r14 = java.lang.Integer.valueOf(r14)     // Catch:{ Exception -> 0x01f0 }
            r0.add(r14)     // Catch:{ Exception -> 0x01f0 }
            java.util.ArrayList<java.lang.String> r0 = r3.phoneTypes     // Catch:{ Exception -> 0x01f0 }
            r0.add(r2)     // Catch:{ Exception -> 0x01f0 }
            int r0 = r15.size()     // Catch:{ Exception -> 0x01f0 }
            if (r0 != r12) goto L_0x0169
        L_0x01ea:
            r10.dispose()     // Catch:{ Exception -> 0x01f0 }
            goto L_0x01fc
        L_0x01ee:
            r0 = move-exception
            goto L_0x0212
        L_0x01f0:
            r0 = move-exception
            r15.clear()     // Catch:{ all -> 0x01ee }
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x01ee }
            if (r10 == 0) goto L_0x01fc
            r10.dispose()
        L_0x01fc:
            org.telegram.messenger.ContactsController r16 = r24.getContactsController()
            r18 = 1
            r19 = 1
            r20 = 0
            r21 = 0
            r22 = r25 ^ 1
            r23 = 0
            r17 = r15
            r16.performSyncPhoneBook(r17, r18, r19, r20, r21, r22, r23)
            return
        L_0x0212:
            if (r10 == 0) goto L_0x0217
            r10.dispose()
        L_0x0217:
            throw r0
        L_0x0218:
            r0 = move-exception
            r2 = r0
            if (r10 == 0) goto L_0x021f
            r10.dispose()
        L_0x021f:
            throw r2
        L_0x0220:
            r0 = move-exception
            r2 = r0
            if (r10 == 0) goto L_0x0227
            r10.dispose()
        L_0x0227:
            goto L_0x0229
        L_0x0228:
            throw r2
        L_0x0229:
            goto L_0x0228
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$getCachedPhoneBook$116(boolean):void");
    }

    public void getContacts() {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda20(this));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:27:0x0071  */
    /* JADX WARNING: Removed duplicated region for block: B:33:0x0080  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$getContacts$117() {
        /*
            r11 = this;
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            java.util.ArrayList r1 = new java.util.ArrayList
            r1.<init>()
            r2 = 0
            r3 = 1
            org.telegram.SQLite.SQLiteDatabase r4 = r11.database     // Catch:{ Exception -> 0x0062, all -> 0x0060 }
            java.lang.String r5 = "SELECT * FROM contacts WHERE 1"
            r6 = 0
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0062, all -> 0x0060 }
            org.telegram.SQLite.SQLiteCursor r4 = r4.queryFinalized(r5, r7)     // Catch:{ Exception -> 0x0062, all -> 0x0060 }
            java.lang.StringBuilder r5 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x005e }
            r5.<init>()     // Catch:{ Exception -> 0x005e }
        L_0x001c:
            boolean r7 = r4.next()     // Catch:{ Exception -> 0x005e }
            if (r7 == 0) goto L_0x004d
            int r7 = r4.intValue(r6)     // Catch:{ Exception -> 0x005e }
            long r7 = (long) r7     // Catch:{ Exception -> 0x005e }
            org.telegram.tgnet.TLRPC$TL_contact r9 = new org.telegram.tgnet.TLRPC$TL_contact     // Catch:{ Exception -> 0x005e }
            r9.<init>()     // Catch:{ Exception -> 0x005e }
            r9.user_id = r7     // Catch:{ Exception -> 0x005e }
            int r7 = r4.intValue(r3)     // Catch:{ Exception -> 0x005e }
            if (r7 != r3) goto L_0x0036
            r7 = 1
            goto L_0x0037
        L_0x0036:
            r7 = 0
        L_0x0037:
            r9.mutual = r7     // Catch:{ Exception -> 0x005e }
            int r7 = r5.length()     // Catch:{ Exception -> 0x005e }
            if (r7 == 0) goto L_0x0044
            java.lang.String r7 = ","
            r5.append(r7)     // Catch:{ Exception -> 0x005e }
        L_0x0044:
            r0.add(r9)     // Catch:{ Exception -> 0x005e }
            long r7 = r9.user_id     // Catch:{ Exception -> 0x005e }
            r5.append(r7)     // Catch:{ Exception -> 0x005e }
            goto L_0x001c
        L_0x004d:
            r4.dispose()     // Catch:{ Exception -> 0x005e }
            int r4 = r5.length()     // Catch:{ Exception -> 0x0062, all -> 0x0060 }
            if (r4 == 0) goto L_0x0074
            java.lang.String r4 = r5.toString()     // Catch:{ Exception -> 0x0062, all -> 0x0060 }
            r11.getUsersInternal(r4, r1)     // Catch:{ Exception -> 0x0062, all -> 0x0060 }
            goto L_0x0074
        L_0x005e:
            r2 = move-exception
            goto L_0x0066
        L_0x0060:
            r0 = move-exception
            goto L_0x007e
        L_0x0062:
            r4 = move-exception
            r10 = r4
            r4 = r2
            r2 = r10
        L_0x0066:
            r0.clear()     // Catch:{ all -> 0x007c }
            r1.clear()     // Catch:{ all -> 0x007c }
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r2)     // Catch:{ all -> 0x007c }
            if (r4 == 0) goto L_0x0074
            r4.dispose()
        L_0x0074:
            org.telegram.messenger.ContactsController r2 = r11.getContactsController()
            r2.processLoadedContacts(r0, r1, r3)
            return
        L_0x007c:
            r0 = move-exception
            r2 = r4
        L_0x007e:
            if (r2 == 0) goto L_0x0083
            r2.dispose()
        L_0x0083:
            goto L_0x0085
        L_0x0084:
            throw r0
        L_0x0085:
            goto L_0x0084
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$getContacts$117():void");
    }

    public void getUnsentMessages(int i) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda27(this, i));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:116:0x02b5  */
    /* JADX WARNING: Removed duplicated region for block: B:119:0x02bc  */
    /* JADX WARNING: Removed duplicated region for block: B:136:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$getUnsentMessages$118(int r20) {
        /*
            r19 = this;
            r1 = r19
            android.util.SparseArray r0 = new android.util.SparseArray     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            r0.<init>()     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            java.util.ArrayList r4 = new java.util.ArrayList     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            r4.<init>()     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            java.util.ArrayList r5 = new java.util.ArrayList     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            r5.<init>()     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            java.util.ArrayList r6 = new java.util.ArrayList     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            r6.<init>()     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            java.util.ArrayList r7 = new java.util.ArrayList     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            r7.<init>()     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            java.util.ArrayList r8 = new java.util.ArrayList     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            r8.<init>()     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            java.util.ArrayList r3 = new java.util.ArrayList     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            r3.<init>()     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            java.util.ArrayList r9 = new java.util.ArrayList     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            r9.<init>()     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            java.util.ArrayList r10 = new java.util.ArrayList     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            r10.<init>()     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            org.telegram.SQLite.SQLiteDatabase r11 = r1.database     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            java.lang.StringBuilder r12 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            r12.<init>()     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            java.lang.String r13 = "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.uid, s.seq_in, s.seq_out, m.ttl FROM messages_v2 as m LEFT JOIN randoms_v2 as r ON r.mid = m.mid AND r.uid = m.uid LEFT JOIN messages_seq as s ON m.mid = s.mid WHERE (m.mid < 0 AND m.send_state = 1) OR (m.mid > 0 AND m.send_state = 3) ORDER BY m.mid DESC LIMIT "
            r12.append(r13)     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            r13 = r20
            r12.append(r13)     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            java.lang.String r12 = r12.toString()     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            r13 = 0
            java.lang.Object[] r14 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            org.telegram.SQLite.SQLiteCursor r11 = r11.queryFinalized(r12, r14)     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
        L_0x004b:
            boolean r12 = r11.next()     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r15 = 2
            r2 = 1
            if (r12 == 0) goto L_0x0142
            org.telegram.tgnet.NativeByteBuffer r2 = r11.byteBufferValue(r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            if (r2 == 0) goto L_0x004b
            int r12 = r2.readInt32(r13)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            org.telegram.tgnet.TLRPC$Message r12 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r2, r12, r13)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            int r15 = r11.intValue(r15)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r12.send_state = r15     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            org.telegram.messenger.UserConfig r15 = r19.getUserConfig()     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            long r14 = r15.clientUserId     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r12.readAttachPath(r2, r14)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r2.reuse()     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            int r2 = r12.id     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            int r2 = r0.indexOfKey(r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            if (r2 >= 0) goto L_0x004b
            int r2 = r11.intValue(r13)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            org.telegram.messenger.MessageObject.setUnreadFlags(r12, r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r2 = 3
            int r14 = r11.intValue(r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r12.id = r14     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r2 = 4
            int r2 = r11.intValue(r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r12.date = r2     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r2 = 5
            boolean r14 = r11.isNull(r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            if (r14 != 0) goto L_0x009d
            long r14 = r11.longValue(r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r12.random_id = r14     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
        L_0x009d:
            r2 = 6
            long r14 = r11.longValue(r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r12.dialog_id = r14     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r2 = 7
            int r2 = r11.intValue(r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r12.seq_in = r2     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r2 = 8
            int r2 = r11.intValue(r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r12.seq_out = r2     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r2 = 9
            int r2 = r11.intValue(r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r12.ttl = r2     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r4.add(r12)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            int r2 = r12.id     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r0.put(r2, r12)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            long r14 = r12.dialog_id     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            boolean r2 = org.telegram.messenger.DialogObject.isEncryptedDialog(r14)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            if (r2 == 0) goto L_0x00e4
            long r14 = r12.dialog_id     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            int r2 = org.telegram.messenger.DialogObject.getEncryptedChatId(r14)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            java.lang.Integer r14 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            boolean r14 = r10.contains(r14)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            if (r14 != 0) goto L_0x00e2
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r10.add(r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
        L_0x00e2:
            r2 = 0
            goto L_0x011a
        L_0x00e4:
            long r14 = r12.dialog_id     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            boolean r2 = org.telegram.messenger.DialogObject.isUserDialog(r14)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            if (r2 == 0) goto L_0x0102
            long r14 = r12.dialog_id     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            java.lang.Long r2 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            boolean r2 = r3.contains(r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            if (r2 != 0) goto L_0x00e2
            long r14 = r12.dialog_id     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            java.lang.Long r2 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r3.add(r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            goto L_0x00e2
        L_0x0102:
            long r14 = r12.dialog_id     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            long r14 = -r14
            java.lang.Long r2 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            boolean r2 = r9.contains(r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            if (r2 != 0) goto L_0x00e2
            long r14 = r12.dialog_id     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            long r14 = -r14
            java.lang.Long r2 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r9.add(r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            goto L_0x00e2
        L_0x011a:
            addUsersAndChatsFromMessage(r12, r3, r9, r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            int r2 = r12.send_state     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r14 = 3
            if (r2 == r14) goto L_0x004b
            org.telegram.tgnet.TLRPC$Peer r2 = r12.peer_id     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            long r14 = r2.channel_id     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r16 = 0
            int r2 = (r14 > r16 ? 1 : (r14 == r16 ? 0 : -1))
            if (r2 != 0) goto L_0x013a
            boolean r2 = org.telegram.messenger.MessageObject.isUnread(r12)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            if (r2 != 0) goto L_0x013a
            long r14 = r12.dialog_id     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            boolean r2 = org.telegram.messenger.DialogObject.isEncryptedDialog(r14)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            if (r2 == 0) goto L_0x013e
        L_0x013a:
            int r2 = r12.id     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            if (r2 <= 0) goto L_0x004b
        L_0x013e:
            r12.send_state = r13     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            goto L_0x004b
        L_0x0142:
            r11.dispose()     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            org.telegram.SQLite.SQLiteDatabase r11 = r1.database     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            java.lang.String r12 = "SELECT m.data, m.send_state, m.mid, m.date, r.random_id, m.uid, m.ttl FROM scheduled_messages_v2 as m LEFT JOIN randoms_v2 as r ON r.mid = m.mid AND r.uid = m.uid WHERE (m.mid < 0 AND m.send_state = 1) OR (m.mid > 0 AND m.send_state = 3) ORDER BY date ASC"
            java.lang.Object[] r14 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            org.telegram.SQLite.SQLiteCursor r11 = r11.queryFinalized(r12, r14)     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
        L_0x014f:
            boolean r12 = r11.next()     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            if (r12 == 0) goto L_0x0248
            org.telegram.tgnet.NativeByteBuffer r12 = r11.byteBufferValue(r13)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            if (r12 == 0) goto L_0x023c
            int r14 = r12.readInt32(r13)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            org.telegram.tgnet.TLRPC$Message r14 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r12, r14, r13)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            int r13 = r11.intValue(r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r14.send_state = r13     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            org.telegram.messenger.UserConfig r13 = r19.getUserConfig()     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r18 = r3
            long r2 = r13.clientUserId     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r14.readAttachPath(r12, r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r12.reuse()     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            int r2 = r14.id     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            int r2 = r0.indexOfKey(r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            if (r2 >= 0) goto L_0x023e
            int r2 = r11.intValue(r15)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r14.id = r2     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r2 = 3
            int r3 = r11.intValue(r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r14.date = r3     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r2 = 4
            boolean r3 = r11.isNull(r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            if (r3 != 0) goto L_0x0199
            long r12 = r11.longValue(r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r14.random_id = r12     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
        L_0x0199:
            r3 = 5
            long r12 = r11.longValue(r3)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r14.dialog_id = r12     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r12 = 6
            int r13 = r11.intValue(r12)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r14.ttl = r13     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r5.add(r14)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            int r13 = r14.id     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r0.put(r13, r14)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            long r2 = r14.dialog_id     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            boolean r2 = org.telegram.messenger.DialogObject.isEncryptedDialog(r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            if (r2 == 0) goto L_0x01d2
            long r2 = r14.dialog_id     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            int r2 = org.telegram.messenger.DialogObject.getEncryptedChatId(r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            java.lang.Integer r3 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            boolean r3 = r10.contains(r3)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            if (r3 != 0) goto L_0x01ce
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r10.add(r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
        L_0x01ce:
            r3 = r18
        L_0x01d0:
            r2 = 0
            goto L_0x020c
        L_0x01d2:
            long r2 = r14.dialog_id     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            boolean r2 = org.telegram.messenger.DialogObject.isUserDialog(r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            if (r2 == 0) goto L_0x01f2
            long r2 = r14.dialog_id     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            java.lang.Long r2 = java.lang.Long.valueOf(r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r3 = r18
            boolean r2 = r3.contains(r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            if (r2 != 0) goto L_0x01d0
            long r12 = r14.dialog_id     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            java.lang.Long r2 = java.lang.Long.valueOf(r12)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r3.add(r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            goto L_0x01d0
        L_0x01f2:
            r3 = r18
            long r12 = r14.dialog_id     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            long r12 = -r12
            java.lang.Long r2 = java.lang.Long.valueOf(r12)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            boolean r2 = r9.contains(r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            if (r2 != 0) goto L_0x01d0
            long r12 = r14.dialog_id     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            long r12 = -r12
            java.lang.Long r2 = java.lang.Long.valueOf(r12)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r9.add(r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            goto L_0x01d0
        L_0x020c:
            addUsersAndChatsFromMessage(r14, r3, r9, r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            int r12 = r14.send_state     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r13 = 3
            if (r12 == r13) goto L_0x0238
            org.telegram.tgnet.TLRPC$Peer r12 = r14.peer_id     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r18 = r3
            long r2 = r12.channel_id     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            r16 = 0
            int r12 = (r2 > r16 ? 1 : (r2 == r16 ? 0 : -1))
            if (r12 != 0) goto L_0x022e
            boolean r2 = org.telegram.messenger.MessageObject.isUnread(r14)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            if (r2 != 0) goto L_0x022e
            long r2 = r14.dialog_id     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            boolean r2 = org.telegram.messenger.DialogObject.isEncryptedDialog(r2)     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            if (r2 == 0) goto L_0x0232
        L_0x022e:
            int r2 = r14.id     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            if (r2 <= 0) goto L_0x0236
        L_0x0232:
            r2 = 0
            r14.send_state = r2     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            goto L_0x0242
        L_0x0236:
            r2 = 0
            goto L_0x0242
        L_0x0238:
            r18 = r3
            r2 = 0
            goto L_0x0240
        L_0x023c:
            r18 = r3
        L_0x023e:
            r2 = 0
            r13 = 3
        L_0x0240:
            r16 = 0
        L_0x0242:
            r3 = r18
            r2 = 1
            r13 = 0
            goto L_0x014f
        L_0x0248:
            r18 = r3
            r2 = 0
            r11.dispose()     // Catch:{ Exception -> 0x02a8, all -> 0x02a5 }
            boolean r0 = r10.isEmpty()     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            java.lang.String r3 = ","
            if (r0 != 0) goto L_0x0260
            java.lang.String r0 = android.text.TextUtils.join(r3, r10)     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            r10 = r18
            r1.getEncryptedChatsInternal(r0, r8, r10)     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            goto L_0x0262
        L_0x0260:
            r10 = r18
        L_0x0262:
            boolean r0 = r10.isEmpty()     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            if (r0 != 0) goto L_0x026f
            java.lang.String r0 = android.text.TextUtils.join(r3, r10)     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            r1.getUsersInternal(r0, r6)     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
        L_0x026f:
            boolean r0 = r9.isEmpty()     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            if (r0 != 0) goto L_0x029d
            java.lang.StringBuilder r0 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            r0.<init>()     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            r13 = 0
        L_0x027b:
            int r2 = r9.size()     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            if (r13 >= r2) goto L_0x0296
            java.lang.Object r2 = r9.get(r13)     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            java.lang.Long r2 = (java.lang.Long) r2     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            int r10 = r0.length()     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            if (r10 == 0) goto L_0x0290
            r0.append(r3)     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
        L_0x0290:
            r0.append(r2)     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            int r13 = r13 + 1
            goto L_0x027b
        L_0x0296:
            java.lang.String r0 = r0.toString()     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            r1.getChatsInternal(r0, r7)     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
        L_0x029d:
            org.telegram.messenger.SendMessagesHelper r3 = r19.getSendMessagesHelper()     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            r3.processUnsentMessages(r4, r5, r6, r7, r8)     // Catch:{ Exception -> 0x02ae, all -> 0x02ab }
            goto L_0x02b8
        L_0x02a5:
            r0 = move-exception
            r2 = r11
            goto L_0x02ba
        L_0x02a8:
            r0 = move-exception
            r2 = r11
            goto L_0x02b0
        L_0x02ab:
            r0 = move-exception
            r2 = 0
            goto L_0x02ba
        L_0x02ae:
            r0 = move-exception
            r2 = 0
        L_0x02b0:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x02b9 }
            if (r2 == 0) goto L_0x02b8
            r2.dispose()
        L_0x02b8:
            return
        L_0x02b9:
            r0 = move-exception
        L_0x02ba:
            if (r2 == 0) goto L_0x02bf
            r2.dispose()
        L_0x02bf:
            goto L_0x02c1
        L_0x02c0:
            throw r0
        L_0x02c1:
            goto L_0x02c0
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$getUnsentMessages$118(int):void");
    }

    public boolean checkMessageByRandomId(long j) {
        boolean[] zArr = new boolean[1];
        CountDownLatch countDownLatch = new CountDownLatch(1);
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda114(this, j, zArr, countDownLatch));
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return zArr[0];
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:9:0x002a, code lost:
        if (r0 == null) goto L_0x002f;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$checkMessageByRandomId$119(long r7, boolean[] r9, java.util.concurrent.CountDownLatch r10) {
        /*
            r6 = this;
            r0 = 0
            org.telegram.SQLite.SQLiteDatabase r1 = r6.database     // Catch:{ Exception -> 0x0026 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x0026 }
            java.lang.String r3 = "SELECT random_id FROM randoms_v2 WHERE random_id = %d"
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0026 }
            java.lang.Long r7 = java.lang.Long.valueOf(r7)     // Catch:{ Exception -> 0x0026 }
            r8 = 0
            r5[r8] = r7     // Catch:{ Exception -> 0x0026 }
            java.lang.String r7 = java.lang.String.format(r2, r3, r5)     // Catch:{ Exception -> 0x0026 }
            java.lang.Object[] r2 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x0026 }
            org.telegram.SQLite.SQLiteCursor r0 = r1.queryFinalized(r7, r2)     // Catch:{ Exception -> 0x0026 }
            boolean r7 = r0.next()     // Catch:{ Exception -> 0x0026 }
            if (r7 == 0) goto L_0x002c
            r9[r8] = r4     // Catch:{ Exception -> 0x0026 }
            goto L_0x002c
        L_0x0024:
            r7 = move-exception
            goto L_0x0033
        L_0x0026:
            r7 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r7)     // Catch:{ all -> 0x0024 }
            if (r0 == 0) goto L_0x002f
        L_0x002c:
            r0.dispose()
        L_0x002f:
            r10.countDown()
            return
        L_0x0033:
            if (r0 == 0) goto L_0x0038
            r0.dispose()
        L_0x0038:
            throw r7
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$checkMessageByRandomId$119(long, boolean[], java.util.concurrent.CountDownLatch):void");
    }

    public boolean checkMessageId(long j, int i) {
        boolean[] zArr = new boolean[1];
        CountDownLatch countDownLatch = new CountDownLatch(1);
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda81(this, j, i, zArr, countDownLatch));
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return zArr[0];
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:9:0x0031, code lost:
        if (r0 == null) goto L_0x0036;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$checkMessageId$120(long r6, int r8, boolean[] r9, java.util.concurrent.CountDownLatch r10) {
        /*
            r5 = this;
            r0 = 0
            org.telegram.SQLite.SQLiteDatabase r1 = r5.database     // Catch:{ Exception -> 0x002d }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x002d }
            java.lang.String r3 = "SELECT mid FROM messages_v2 WHERE uid = %d AND mid = %d"
            r4 = 2
            java.lang.Object[] r4 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x002d }
            java.lang.Long r6 = java.lang.Long.valueOf(r6)     // Catch:{ Exception -> 0x002d }
            r7 = 0
            r4[r7] = r6     // Catch:{ Exception -> 0x002d }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x002d }
            r8 = 1
            r4[r8] = r6     // Catch:{ Exception -> 0x002d }
            java.lang.String r6 = java.lang.String.format(r2, r3, r4)     // Catch:{ Exception -> 0x002d }
            java.lang.Object[] r2 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x002d }
            org.telegram.SQLite.SQLiteCursor r0 = r1.queryFinalized(r6, r2)     // Catch:{ Exception -> 0x002d }
            boolean r6 = r0.next()     // Catch:{ Exception -> 0x002d }
            if (r6 == 0) goto L_0x0033
            r9[r7] = r8     // Catch:{ Exception -> 0x002d }
            goto L_0x0033
        L_0x002b:
            r6 = move-exception
            goto L_0x003a
        L_0x002d:
            r6 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r6)     // Catch:{ all -> 0x002b }
            if (r0 == 0) goto L_0x0036
        L_0x0033:
            r0.dispose()
        L_0x0036:
            r10.countDown()
            return
        L_0x003a:
            if (r0 == 0) goto L_0x003f
            r0.dispose()
        L_0x003f:
            throw r6
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$checkMessageId$120(long, int, boolean[], java.util.concurrent.CountDownLatch):void");
    }

    public void getUnreadMention(long j, IntCallback intCallback) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda104(this, j, intCallback));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$getUnreadMention$122(long j, IntCallback intCallback) {
        SQLiteCursor sQLiteCursor = null;
        try {
            int i = 0;
            sQLiteCursor = this.database.queryFinalized(String.format(Locale.US, "SELECT MIN(mid) FROM messages_v2 WHERE uid = %d AND mention = 1 AND read_state IN(0, 1)", new Object[]{Long.valueOf(j)}), new Object[0]);
            if (sQLiteCursor.next()) {
                i = sQLiteCursor.intValue(0);
            }
            sQLiteCursor.dispose();
            AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda1(intCallback, i));
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (sQLiteCursor == null) {
                return;
            }
        } catch (Throwable th) {
            if (sQLiteCursor != null) {
                sQLiteCursor.dispose();
            }
            throw th;
        }
        sQLiteCursor.dispose();
    }

    public void getMessagesCount(long j, IntCallback intCallback) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda102(this, j, intCallback));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$getMessagesCount$124(long j, IntCallback intCallback) {
        SQLiteCursor sQLiteCursor = null;
        try {
            int i = 0;
            sQLiteCursor = this.database.queryFinalized(String.format(Locale.US, "SELECT COUNT(mid) FROM messages_v2 WHERE uid = %d", new Object[]{Long.valueOf(j)}), new Object[0]);
            if (sQLiteCursor.next()) {
                i = sQLiteCursor.intValue(0);
            }
            sQLiteCursor.dispose();
            AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda2(intCallback, i));
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        } catch (Throwable th) {
            sQLiteCursor.dispose();
            throw th;
        }
        sQLiteCursor.dispose();
    }

    /* JADX WARNING: Code restructure failed: missing block: B:1003:0x1602, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1004:0x1603, code lost:
        r3 = r41;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1005:0x1606, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1006:0x1607, code lost:
        r1 = r0;
        r12 = r23;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1007:0x160c, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1008:0x160d, code lost:
        r3 = r7;
        r54 = r9;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1009:0x1610, code lost:
        r2 = r54;
        r4 = r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1012:0x1623, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1013:0x1624, code lost:
        r3 = r7;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1014:0x1626, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1015:0x1627, code lost:
        r3 = r7;
        r27 = r13;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1016:0x162a, code lost:
        r13 = r54;
        r2 = r55;
        r10 = r57;
        r36 = r4;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1017:0x1632, code lost:
        r38 = r15;
        r1 = r23;
        r18 = r27;
        r37 = r32;
        r5 = r45;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1018:0x163d, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1019:0x163e, code lost:
        r4 = r11;
        r3 = r41;
        r11 = r50;
        r13 = r55;
        r35 = r4;
        r10 = r6;
        r37 = r32;
        r1 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1025:0x1668, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1026:0x1669, code lost:
        r4 = r11;
        r3 = r41;
        r11 = r50;
        r13 = r55;
        r35 = r4;
        r37 = r32;
        r1 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1035:0x168f, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1036:0x1690, code lost:
        r2 = r1;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1037:0x1691, code lost:
        r11 = r7;
        r3 = r9;
        r14 = r15;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1038:0x1695, code lost:
        r0 = th;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1039:0x1696, code lost:
        r14 = r15;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1052:0x16cb, code lost:
        r1.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1065:0x1735, code lost:
        r12.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:110:0x02a6, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:111:0x02a7, code lost:
        r2 = r54;
        r13 = r55;
        r4 = r0;
        r11 = r7;
        r3 = r9;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:176:0x03b5, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:177:0x03b6, code lost:
        r2 = r54;
        r13 = r55;
        r4 = r0;
        r35 = r3;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:185:0x03de, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:186:0x03e0, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:187:0x03e1, code lost:
        r38 = r11;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:188:0x03e3, code lost:
        r2 = r54;
        r13 = r55;
        r4 = r0;
        r11 = r7;
        r3 = r9;
        r22 = r15;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:224:0x04b5, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:225:0x04b6, code lost:
        r2 = r54;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:253:0x0544, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:289:0x066e, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:290:0x066f, code lost:
        r13 = r55;
        r4 = r0;
        r5 = r6;
        r11 = r7;
        r3 = r41;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:333:0x086e, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:334:0x0870, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:335:0x0871, code lost:
        r57 = r4;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:336:0x0873, code lost:
        r13 = r55;
        r10 = r57;
        r4 = r0;
        r5 = r6;
        r11 = r7;
        r3 = r41;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:408:0x09b2, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:409:0x09b4, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:410:0x09b5, code lost:
        r45 = r6;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:411:0x09b9, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:412:0x09ba, code lost:
        r45 = r6;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:413:0x09bc, code lost:
        r13 = r55;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:414:0x09be, code lost:
        r4 = r0;
        r11 = r7;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:415:0x09c0, code lost:
        r3 = r41;
        r5 = r45;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:416:0x09c4, code lost:
        r1 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:433:0x0a0d, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:434:0x0a0e, code lost:
        r54 = r1;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:435:0x0a10, code lost:
        r13 = r54;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:465:0x0b4d, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:483:0x0bdc, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:484:0x0bdd, code lost:
        r13 = r54;
        r4 = r0;
        r11 = r7;
        r22 = r15;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:489:0x0bed, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:490:0x0bee, code lost:
        r15 = r22;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:495:0x0CLASSNAME, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:496:0x0CLASSNAME, code lost:
        r45 = r6;
        r15 = r22;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:497:0x0c0a, code lost:
        r13 = r55;
        r4 = r0;
        r11 = r7;
        r1 = r9;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:499:0x0CLASSNAME, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:500:0x0CLASSNAME, code lost:
        r1 = r0;
        r12 = r9;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:503:0x0CLASSNAME, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:504:0x0c2a, code lost:
        r15 = r22;
        r13 = r55;
        r4 = r0;
        r11 = r7;
        r3 = r41;
        r5 = r6;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:505:0x0CLASSNAME, code lost:
        r1 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:506:0x0CLASSNAME, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:507:0x0CLASSNAME, code lost:
        r15 = r22;
        r13 = r55;
        r1 = r4;
        r11 = r7;
        r3 = r41;
        r5 = r6;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:508:0x0CLASSNAME, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:509:0x0CLASSNAME, code lost:
        r1 = r0;
        r12 = r4;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:510:0x0c4b, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:511:0x0c4c, code lost:
        r15 = r22;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:512:0x0c4e, code lost:
        r13 = r55;
        r1 = r4;
        r11 = r7;
        r3 = r41;
        r5 = false;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:514:0x0c5a, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:515:0x0c5b, code lost:
        r15 = r22;
        r13 = r55;
        r4 = r0;
        r11 = r7;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:516:0x0CLASSNAME, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:517:0x0CLASSNAME, code lost:
        r13 = r55;
        r4 = r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:518:0x0CLASSNAME, code lost:
        r11 = r7;
        r22 = r15;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:519:0x0CLASSNAME, code lost:
        r3 = r41;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:520:0x0c6b, code lost:
        r1 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:562:0x0d1e, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:563:0x0d1f, code lost:
        r13 = r55;
        r4 = r0;
        r1 = r7;
        r22 = r8;
        r35 = r12;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:566:0x0d35, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:567:0x0d37, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:568:0x0d38, code lost:
        r32 = r15;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:569:0x0d3a, code lost:
        r13 = r55;
        r4 = r0;
        r35 = r12;
        r37 = r32;
        r3 = r41;
        r1 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:572:0x0d56, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:573:0x0d57, code lost:
        r11 = r50;
        r13 = r55;
        r4 = r0;
        r1 = r7;
        r35 = r22;
        r37 = r15;
        r3 = r41;
        r5 = true;
        r10 = 0;
        r18 = 0;
        r22 = 0;
        r36 = 0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:574:0x0d6f, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:575:0x0d71, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:576:0x0d73, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:577:0x0d74, code lost:
        r22 = r8;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:578:0x0d76, code lost:
        r11 = r50;
        r13 = r55;
        r4 = r0;
        r35 = r22;
        r3 = r41;
        r1 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:579:0x0d81, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:580:0x0d82, code lost:
        r22 = r8;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:581:0x0d84, code lost:
        r11 = r50;
        r13 = r55;
        r4 = r0;
        r1 = r7;
        r35 = r22;
        r3 = r41;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:582:0x0d8e, code lost:
        r5 = true;
        r10 = 0;
        r18 = 0;
        r22 = 0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:583:0x0d96, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:584:0x0d97, code lost:
        r1 = r0;
        r12 = r7;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:587:0x0da6, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:588:0x0da7, code lost:
        r11 = r50;
        r13 = r55;
        r4 = r0;
        r3 = r41;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:600:0x0e0c, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:601:0x0e0d, code lost:
        r13 = r55;
        r4 = r0;
        r22 = r8;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:602:0x0e12, code lost:
        r35 = r11;
        r37 = r32;
        r3 = r41;
        r1 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:646:0x0f3d, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:647:0x0f3e, code lost:
        r13 = r55;
        r1 = r4;
        r10 = r7;
        r35 = r11;
        r37 = r32;
        r3 = r41;
        r5 = true;
        r18 = 0;
        r36 = 0;
        r38 = false;
        r11 = r50;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:648:0x0var_, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:649:0x0var_, code lost:
        r13 = r55;
        r4 = r0;
        r10 = r7;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:650:0x0f5a, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:651:0x0f5b, code lost:
        r13 = r55;
        r4 = r0;
        r1 = r6;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:654:0x0var_, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:655:0x0var_, code lost:
        r1 = r0;
        r12 = r6;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:658:0x0var_, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:659:0x0var_, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:660:0x0var_, code lost:
        r22 = r8;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:661:0x0var_, code lost:
        r13 = r55;
        r4 = r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:66:0x01b7, code lost:
        r0 = th;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:675:0x0fe7, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:676:0x0fe8, code lost:
        r13 = r55;
        r4 = r0;
        r2 = r1;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:677:0x0fed, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:678:0x0fee, code lost:
        r13 = r55;
        r4 = r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:679:0x0ff1, code lost:
        r10 = r7;
        r22 = r8;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:680:0x0ff4, code lost:
        r35 = r11;
        r37 = r32;
        r3 = r41;
        r1 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:738:0x1107, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:847:0x12ba, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:848:0x12bb, code lost:
        r24 = r11;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:854:0x12cd, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:855:0x12ce, code lost:
        r11 = r50;
        r13 = r54;
        r2 = r55;
        r10 = r57;
        r1 = r3;
        r3 = r8;
        r38 = r15;
        r37 = r32;
        r18 = r36;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:856:0x12e0, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:857:0x12e2, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:858:0x12e4, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:859:0x12e5, code lost:
        r57 = r6;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:860:0x12e7, code lost:
        r15 = r11;
        r36 = r12;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:861:0x12ea, code lost:
        r11 = r50;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:862:0x12ec, code lost:
        r13 = r54;
        r2 = r55;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:865:0x1326, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:866:0x1327, code lost:
        r55 = r2;
        r57 = r6;
        r15 = r11;
        r36 = r12;
        r11 = r50;
        r13 = r54;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:867:0x1332, code lost:
        r10 = r57;
        r1 = r3;
        r38 = r15;
        r37 = r32;
        r18 = r36;
        r3 = r41;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:868:0x133d, code lost:
        r5 = r45;
        r36 = r4;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:873:0x1366, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:874:0x1367, code lost:
        r2 = r55;
        r10 = r57;
        r1 = r3;
        r36 = r4;
        r3 = r7;
        r18 = r13;
        r38 = r15;
        r37 = r32;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:875:0x1376, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:876:0x1377, code lost:
        r1 = r0;
        r12 = r3;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:877:0x137b, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:878:0x137c, code lost:
        r54 = r1;
        r55 = r2;
        r15 = r11;
        r11 = r50;
        r10 = r6;
        r1 = r3;
        r36 = r4;
        r18 = r12;
        r38 = r15;
        r37 = r32;
        r3 = r41;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:879:0x1393, code lost:
        r5 = r45;
        r13 = r54;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:920:0x1451, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:921:0x1452, code lost:
        r13 = r54;
        r2 = r55;
        r10 = r57;
        r36 = r4;
        r3 = r7;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:964:0x1545, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:965:0x1546, code lost:
        r2 = r54;
        r4 = r0;
        r36 = r15;
        r10 = r27;
        r38 = r28;
        r18 = r31;
        r37 = r32;
        r3 = r41;
        r5 = r45;
        r1 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:966:0x155a, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:967:0x155b, code lost:
        r4 = r0;
        r1 = r2;
        r36 = r15;
        r10 = r27;
        r38 = r28;
        r18 = r31;
        r37 = r32;
        r3 = r41;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:968:0x156a, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:969:0x156b, code lost:
        r1 = r0;
        r12 = r2;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:970:0x156f, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:971:0x1570, code lost:
        r4 = r0;
        r1 = r2;
        r3 = r7;
        r36 = r15;
        r10 = r27;
        r38 = r28;
        r18 = r31;
        r37 = r32;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:972:0x157d, code lost:
        r5 = r45;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:975:0x1585, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:976:0x1586, code lost:
        r54 = r9;
     */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:12:0x0051, B:146:0x032e] */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:12:0x0051, B:149:0x0332] */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:12:0x0051, B:152:0x033d] */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:12:0x0051, B:164:0x036b] */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:12:0x0051, B:234:0x04ee] */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:12:0x0051, B:243:0x0520] */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:12:0x0051, B:277:0x05a4] */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:12:0x0051, B:316:0x07b5] */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:12:0x0051, B:319:0x07c3] */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:12:0x0051, B:343:0x0893] */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:12:0x0051, B:359:0x08c8] */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:12:0x0051, B:374:0x090f] */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:12:0x0051, B:423:0x09d6] */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:12:0x0051, B:426:0x09dd] */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:12:0x0051, B:468:0x0b55] */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:12:0x0051, B:480:0x0b80] */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:12:0x0051, B:527:0x0CLASSNAME] */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:12:0x0051, B:536:0x0cba] */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:12:0x0051, B:539:0x0cc6] */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:12:0x0051, B:549:0x0ce9] */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:12:0x0051, B:552:0x0cee] */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:12:0x0051, B:595:0x0dc1] */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:12:0x0051, B:612:0x0eab] */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:12:0x0051, B:615:0x0eb9] */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:12:0x0051, B:624:0x0ed4] */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:12:0x0051, B:667:0x0var_] */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:12:0x0051, B:672:0x0f9c] */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:12:0x0051, B:683:0x1000] */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:12:0x0051, B:697:0x1033] */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:12:0x0051, B:80:0x01ea] */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:245:0x0535, B:626:0x0eea] */
    /* JADX WARNING: Failed to process nested try/catch */
    /* JADX WARNING: Removed duplicated region for block: B:1005:0x1606 A[ExcHandler: all (r0v6 'th' java.lang.Throwable A[CUSTOM_DECLARE]), PHI: r23 
      PHI: (r23v3 org.telegram.SQLite.SQLiteCursor) = (r23v4 org.telegram.SQLite.SQLiteCursor), (r23v4 org.telegram.SQLite.SQLiteCursor), (r23v4 org.telegram.SQLite.SQLiteCursor), (r23v4 org.telegram.SQLite.SQLiteCursor), (r23v4 org.telegram.SQLite.SQLiteCursor), (r23v4 org.telegram.SQLite.SQLiteCursor), (r23v7 org.telegram.SQLite.SQLiteCursor), (r23v7 org.telegram.SQLite.SQLiteCursor), (r23v7 org.telegram.SQLite.SQLiteCursor), (r23v7 org.telegram.SQLite.SQLiteCursor) binds: [B:924:0x1468, B:979:0x15a3, B:980:?, B:928:0x1470, B:929:?, B:931:0x1479, B:881:0x13ba, B:882:?, B:884:0x13be, B:896:0x13d9] A[DONT_GENERATE, DONT_INLINE], Splitter:B:881:0x13ba] */
    /* JADX WARNING: Removed duplicated region for block: B:1038:0x1695 A[ExcHandler: all (th java.lang.Throwable), Splitter:B:5:0x0022] */
    /* JADX WARNING: Removed duplicated region for block: B:1052:0x16cb  */
    /* JADX WARNING: Removed duplicated region for block: B:1056:0x16e4  */
    /* JADX WARNING: Removed duplicated region for block: B:1058:0x1708  */
    /* JADX WARNING: Removed duplicated region for block: B:1059:0x1710  */
    /* JADX WARNING: Removed duplicated region for block: B:1065:0x1735  */
    /* JADX WARNING: Removed duplicated region for block: B:348:0x08af A[SYNTHETIC, Splitter:B:348:0x08af] */
    /* JADX WARNING: Removed duplicated region for block: B:353:0x08bf  */
    /* JADX WARNING: Removed duplicated region for block: B:420:0x09d1  */
    /* JADX WARNING: Removed duplicated region for block: B:421:0x09d3  */
    /* JADX WARNING: Removed duplicated region for block: B:423:0x09d6 A[SYNTHETIC, Splitter:B:423:0x09d6] */
    /* JADX WARNING: Removed duplicated region for block: B:436:0x0a13  */
    /* JADX WARNING: Removed duplicated region for block: B:438:0x0a17 A[SYNTHETIC, Splitter:B:438:0x0a17] */
    /* JADX WARNING: Removed duplicated region for block: B:466:0x0b50  */
    /* JADX WARNING: Removed duplicated region for block: B:499:0x0CLASSNAME A[ExcHandler: all (r0v92 'th' java.lang.Throwable A[CUSTOM_DECLARE]), PHI: r9 
      PHI: (r9v47 org.telegram.SQLite.SQLiteCursor) = (r9v46 org.telegram.SQLite.SQLiteCursor), (r9v46 org.telegram.SQLite.SQLiteCursor), (r9v46 org.telegram.SQLite.SQLiteCursor), (r9v53 org.telegram.SQLite.SQLiteCursor), (r9v53 org.telegram.SQLite.SQLiteCursor), (r9v53 org.telegram.SQLite.SQLiteCursor), (r9v53 org.telegram.SQLite.SQLiteCursor), (r9v46 org.telegram.SQLite.SQLiteCursor) binds: [B:345:0x08a9, B:354:0x08c0, B:355:?, B:361:0x08ea, B:369:0x08fe, B:370:?, B:364:0x08f0, B:348:0x08af] A[DONT_GENERATE, DONT_INLINE], Splitter:B:354:0x08c0] */
    /* JADX WARNING: Removed duplicated region for block: B:508:0x0CLASSNAME A[ExcHandler: all (r0v84 'th' java.lang.Throwable A[CUSTOM_DECLARE]), PHI: r4 
      PHI: (r4v93 org.telegram.SQLite.SQLiteCursor) = (r4v69 org.telegram.SQLite.SQLiteCursor), (r4v105 org.telegram.SQLite.SQLiteCursor), (r4v108 org.telegram.SQLite.SQLiteCursor), (r4v108 org.telegram.SQLite.SQLiteCursor), (r4v202 org.telegram.SQLite.SQLiteCursor), (r4v207 org.telegram.SQLite.SQLiteCursor), (r4v105 org.telegram.SQLite.SQLiteCursor), (r4v105 org.telegram.SQLite.SQLiteCursor), (r4v212 org.telegram.SQLite.SQLiteCursor), (r4v212 org.telegram.SQLite.SQLiteCursor), (r4v105 org.telegram.SQLite.SQLiteCursor) binds: [B:626:0x0eea, B:245:0x0535, B:266:0x058d, B:267:?, B:294:0x069a, B:279:0x05d2, B:254:0x0547, B:255:?, B:258:0x0562, B:261:0x0568, B:248:0x053b] A[DONT_GENERATE, DONT_INLINE], Splitter:B:245:0x0535] */
    /* JADX WARNING: Removed duplicated region for block: B:583:0x0d96 A[ExcHandler: all (r0v71 'th' java.lang.Throwable A[CUSTOM_DECLARE]), PHI: r7 
      PHI: (r7v66 org.telegram.SQLite.SQLiteCursor) = (r7v65 org.telegram.SQLite.SQLiteCursor), (r7v65 org.telegram.SQLite.SQLiteCursor), (r7v65 org.telegram.SQLite.SQLiteCursor), (r7v69 org.telegram.SQLite.SQLiteCursor), (r7v69 org.telegram.SQLite.SQLiteCursor), (r7v69 org.telegram.SQLite.SQLiteCursor), (r7v72 org.telegram.SQLite.SQLiteCursor), (r7v72 org.telegram.SQLite.SQLiteCursor), (r7v72 org.telegram.SQLite.SQLiteCursor) binds: [B:529:0x0cab, B:534:0x0cb7, B:535:?, B:541:0x0cd2, B:546:0x0ce4, B:547:?, B:554:0x0d0b, B:559:0x0d17, B:560:?] A[DONT_GENERATE, DONT_INLINE], Splitter:B:534:0x0cb7] */
    /* JADX WARNING: Removed duplicated region for block: B:654:0x0var_ A[ExcHandler: all (r0v62 'th' java.lang.Throwable A[CUSTOM_DECLARE]), Splitter:B:617:0x0ec5] */
    /* JADX WARNING: Removed duplicated region for block: B:66:0x01b7 A[ExcHandler: all (th java.lang.Throwable), Splitter:B:12:0x0051] */
    /* JADX WARNING: Removed duplicated region for block: B:832:0x1269 A[Catch:{ Exception -> 0x12e0, all -> 0x1376 }] */
    /* JADX WARNING: Removed duplicated region for block: B:835:0x1277 A[Catch:{ Exception -> 0x12e0, all -> 0x1376 }] */
    /* JADX WARNING: Removed duplicated region for block: B:838:0x127e A[SYNTHETIC, Splitter:B:838:0x127e] */
    /* JADX WARNING: Removed duplicated region for block: B:852:0x12c2  */
    /* JADX WARNING: Removed duplicated region for block: B:875:0x1376 A[ExcHandler: all (r0v32 'th' java.lang.Throwable A[CUSTOM_DECLARE]), Splitter:B:703:0x10a0] */
    /* JADX WARNING: Removed duplicated region for block: B:968:0x156a A[ExcHandler: all (r0v7 'th' java.lang.Throwable A[CUSTOM_DECLARE]), PHI: r2 
      PHI: (r2v15 org.telegram.SQLite.SQLiteCursor) = (r2v31 org.telegram.SQLite.SQLiteCursor), (r2v31 org.telegram.SQLite.SQLiteCursor), (r2v46 org.telegram.SQLite.SQLiteCursor) binds: [B:933:0x1490, B:940:0x14a8, B:910:0x1420] A[DONT_GENERATE, DONT_INLINE], Splitter:B:910:0x1420] */
    /* JADX WARNING: Unknown top exception splitter block from list: {B:343:0x0893=Splitter:B:343:0x0893, B:672:0x0f9c=Splitter:B:672:0x0f9c} */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public java.lang.Runnable getMessagesInternal(long r50, long r52, int r54, int r55, int r56, int r57, int r58, int r59, boolean r60, int r61, int r62, boolean r63) {
        /*
            r49 = this;
            r15 = r49
            r7 = r50
            r1 = r54
            r14 = r59
            org.telegram.tgnet.TLRPC$TL_messages_messages r9 = new org.telegram.tgnet.TLRPC$TL_messages_messages
            r9.<init>()
            org.telegram.messenger.UserConfig r2 = r49.getUserConfig()
            long r2 = r2.clientUserId
            r10 = 777000(0xbdb28, double:3.83889E-318)
            int r6 = (r7 > r10 ? 1 : (r7 == r10 ? 0 : -1))
            if (r6 != 0) goto L_0x001d
            r6 = 10
            goto L_0x001e
        L_0x001d:
            r6 = 1
        L_0x001e:
            long r10 = android.os.SystemClock.elapsedRealtime()
            java.util.ArrayList r12 = new java.util.ArrayList     // Catch:{ Exception -> 0x169b, all -> 0x1695 }
            r12.<init>()     // Catch:{ Exception -> 0x169b, all -> 0x1695 }
            java.util.ArrayList r4 = new java.util.ArrayList     // Catch:{ Exception -> 0x169b, all -> 0x1695 }
            r4.<init>()     // Catch:{ Exception -> 0x169b, all -> 0x1695 }
            java.util.ArrayList r13 = new java.util.ArrayList     // Catch:{ Exception -> 0x169b, all -> 0x1695 }
            r13.<init>()     // Catch:{ Exception -> 0x169b, all -> 0x1695 }
            androidx.collection.LongSparseArray r5 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x169b, all -> 0x1695 }
            r5.<init>()     // Catch:{ Exception -> 0x169b, all -> 0x1695 }
            r20 = r10
            androidx.collection.LongSparseArray r10 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x168f, all -> 0x1695 }
            r10.<init>()     // Catch:{ Exception -> 0x168f, all -> 0x1695 }
            androidx.collection.LongSparseArray r11 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x168f, all -> 0x1695 }
            r11.<init>()     // Catch:{ Exception -> 0x168f, all -> 0x1695 }
            r22 = r6
            java.util.ArrayList r6 = new java.util.ArrayList     // Catch:{ Exception -> 0x168f, all -> 0x1695 }
            r6.<init>()     // Catch:{ Exception -> 0x168f, all -> 0x1695 }
            java.lang.String r1 = "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention, m.imp, m.forwards, m.replies_data, m.custom_params FROM messages_v2 as m LEFT JOIN randoms_v2 as r ON r.mid = m.mid AND r.uid = m.uid"
            r23 = r5
            r24 = r6
            if (r60 == 0) goto L_0x01c8
            org.telegram.SQLite.SQLiteDatabase r1 = r15.database     // Catch:{ Exception -> 0x01ba, all -> 0x01b7 }
            java.util.Locale r6 = java.util.Locale.US     // Catch:{ Exception -> 0x01ba, all -> 0x01b7 }
            java.lang.String r5 = "SELECT m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.ttl FROM scheduled_messages_v2 as m LEFT JOIN randoms_v2 as r ON r.mid = m.mid AND r.uid = m.uid WHERE m.uid = %d ORDER BY m.date DESC"
            r15 = 1
            java.lang.Object[] r14 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x01ba, all -> 0x01b7 }
            java.lang.Long r15 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x01ba, all -> 0x01b7 }
            r30 = r11
            r11 = 0
            r14[r11] = r15     // Catch:{ Exception -> 0x01ba, all -> 0x01b7 }
            java.lang.String r5 = java.lang.String.format(r6, r5, r14)     // Catch:{ Exception -> 0x01ba, all -> 0x01b7 }
            java.lang.Object[] r6 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x01ba, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r5, r6)     // Catch:{ Exception -> 0x01ba, all -> 0x01b7 }
        L_0x006d:
            boolean r5 = r1.next()     // Catch:{ Exception -> 0x01ac }
            if (r5 == 0) goto L_0x0179
            org.telegram.tgnet.NativeByteBuffer r5 = r1.byteBufferValue(r11)     // Catch:{ Exception -> 0x01ac }
            if (r5 == 0) goto L_0x0164
            int r6 = r5.readInt32(r11)     // Catch:{ Exception -> 0x01ac }
            org.telegram.tgnet.TLRPC$Message r6 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r5, r6, r11)     // Catch:{ Exception -> 0x01ac }
            r11 = 1
            int r14 = r1.intValue(r11)     // Catch:{ Exception -> 0x01ac }
            r6.send_state = r14     // Catch:{ Exception -> 0x01ac }
            r11 = 2
            int r14 = r1.intValue(r11)     // Catch:{ Exception -> 0x01ac }
            r6.id = r14     // Catch:{ Exception -> 0x01ac }
            if (r14 <= 0) goto L_0x009b
            int r11 = r6.send_state     // Catch:{ Exception -> 0x01ac }
            if (r11 == 0) goto L_0x009b
            r14 = 3
            if (r11 == r14) goto L_0x009b
            r11 = 0
            r6.send_state = r11     // Catch:{ Exception -> 0x01ac }
        L_0x009b:
            int r11 = (r7 > r2 ? 1 : (r7 == r2 ? 0 : -1))
            if (r11 != 0) goto L_0x00a6
            r11 = 1
            r6.out = r11     // Catch:{ Exception -> 0x01ac }
            r11 = 0
            r6.unread = r11     // Catch:{ Exception -> 0x01ac }
            goto L_0x00a9
        L_0x00a6:
            r11 = 1
            r6.unread = r11     // Catch:{ Exception -> 0x01ac }
        L_0x00a9:
            r6.readAttachPath(r5, r2)     // Catch:{ Exception -> 0x01ac }
            r5.reuse()     // Catch:{ Exception -> 0x01ac }
            r5 = 3
            int r11 = r1.intValue(r5)     // Catch:{ Exception -> 0x01ac }
            r6.date = r11     // Catch:{ Exception -> 0x01ac }
            r6.dialog_id = r7     // Catch:{ Exception -> 0x01ac }
            int r5 = r6.ttl     // Catch:{ Exception -> 0x01ac }
            if (r5 != 0) goto L_0x00c3
            r5 = 6
            int r11 = r1.intValue(r5)     // Catch:{ Exception -> 0x01ac }
            r6.ttl = r11     // Catch:{ Exception -> 0x01ac }
        L_0x00c3:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r5 = r9.messages     // Catch:{ Exception -> 0x01ac }
            r5.add(r6)     // Catch:{ Exception -> 0x01ac }
            addUsersAndChatsFromMessage(r6, r12, r4, r13)     // Catch:{ Exception -> 0x01ac }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r5 = r6.reply_to     // Catch:{ Exception -> 0x01ac }
            if (r5 == 0) goto L_0x0164
            int r11 = r5.reply_to_msg_id     // Catch:{ Exception -> 0x01ac }
            if (r11 != 0) goto L_0x00db
            long r14 = r5.reply_to_random_id     // Catch:{ Exception -> 0x01ac }
            r25 = 0
            int r5 = (r14 > r25 ? 1 : (r14 == r25 ? 0 : -1))
            if (r5 == 0) goto L_0x0164
        L_0x00db:
            r5 = 5
            boolean r11 = r1.isNull(r5)     // Catch:{ Exception -> 0x01ac }
            if (r11 != 0) goto L_0x0100
            org.telegram.tgnet.NativeByteBuffer r11 = r1.byteBufferValue(r5)     // Catch:{ Exception -> 0x01ac }
            if (r11 == 0) goto L_0x0100
            r5 = 0
            int r14 = r11.readInt32(r5)     // Catch:{ Exception -> 0x01ac }
            org.telegram.tgnet.TLRPC$Message r14 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r11, r14, r5)     // Catch:{ Exception -> 0x01ac }
            r6.replyMessage = r14     // Catch:{ Exception -> 0x01ac }
            r14.readAttachPath(r11, r2)     // Catch:{ Exception -> 0x01ac }
            r11.reuse()     // Catch:{ Exception -> 0x01ac }
            org.telegram.tgnet.TLRPC$Message r5 = r6.replyMessage     // Catch:{ Exception -> 0x01ac }
            if (r5 == 0) goto L_0x0100
            addUsersAndChatsFromMessage(r5, r12, r4, r13)     // Catch:{ Exception -> 0x01ac }
        L_0x0100:
            org.telegram.tgnet.TLRPC$Message r5 = r6.replyMessage     // Catch:{ Exception -> 0x01ac }
            if (r5 != 0) goto L_0x0164
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r5 = r6.reply_to     // Catch:{ Exception -> 0x01ac }
            int r11 = r5.reply_to_msg_id     // Catch:{ Exception -> 0x01ac }
            if (r11 == 0) goto L_0x011b
            r11 = r23
            addReplyMessages(r6, r11, r10)     // Catch:{ Exception -> 0x01ac }
            r15 = r4
            r23 = r10
            r48 = r30
            r30 = r11
            r11 = r24
            r24 = r48
            goto L_0x016d
        L_0x011b:
            r11 = r23
            long r14 = r5.reply_to_random_id     // Catch:{ Exception -> 0x01ac }
            r5 = r30
            java.lang.Object r14 = r5.get(r14)     // Catch:{ Exception -> 0x01ac }
            java.util.ArrayList r14 = (java.util.ArrayList) r14     // Catch:{ Exception -> 0x01ac }
            if (r14 != 0) goto L_0x013a
            java.util.ArrayList r14 = new java.util.ArrayList     // Catch:{ Exception -> 0x01ac }
            r14.<init>()     // Catch:{ Exception -> 0x01ac }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r15 = r6.reply_to     // Catch:{ Exception -> 0x01ac }
            r23 = r10
            r30 = r11
            long r10 = r15.reply_to_random_id     // Catch:{ Exception -> 0x01ac }
            r5.put(r10, r14)     // Catch:{ Exception -> 0x01ac }
            goto L_0x013e
        L_0x013a:
            r23 = r10
            r30 = r11
        L_0x013e:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r10 = r6.reply_to     // Catch:{ Exception -> 0x01ac }
            long r10 = r10.reply_to_random_id     // Catch:{ Exception -> 0x01ac }
            java.lang.Long r10 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x01ac }
            r11 = r24
            boolean r10 = r11.contains(r10)     // Catch:{ Exception -> 0x01ac }
            if (r10 != 0) goto L_0x015d
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r10 = r6.reply_to     // Catch:{ Exception -> 0x01ac }
            r15 = r4
            r24 = r5
            long r4 = r10.reply_to_random_id     // Catch:{ Exception -> 0x01ac }
            java.lang.Long r4 = java.lang.Long.valueOf(r4)     // Catch:{ Exception -> 0x01ac }
            r11.add(r4)     // Catch:{ Exception -> 0x01ac }
            goto L_0x0160
        L_0x015d:
            r15 = r4
            r24 = r5
        L_0x0160:
            r14.add(r6)     // Catch:{ Exception -> 0x01ac }
            goto L_0x016d
        L_0x0164:
            r15 = r4
            r11 = r24
            r24 = r30
            r30 = r23
            r23 = r10
        L_0x016d:
            r4 = r15
            r10 = r23
            r23 = r30
            r30 = r24
            r24 = r11
            r11 = 0
            goto L_0x006d
        L_0x0179:
            r15 = r4
            r11 = r24
            r24 = r30
            r30 = r23
            r23 = r10
            r1.dispose()     // Catch:{ Exception -> 0x01ac }
            r14 = r49
            r43 = r2
            r10 = r12
            r40 = r13
            r17 = r23
            r1 = r24
            r22 = 0
            r23 = 0
            r27 = 0
            r28 = 0
            r31 = 0
            r32 = 0
            r35 = 0
            r45 = 1
            r13 = r55
            r24 = r11
            r11 = r7
            r7 = r9
            r8 = r15
            r15 = 0
            r9 = r54
            goto L_0x1468
        L_0x01ac:
            r0 = move-exception
            r14 = r49
            r2 = r54
            r13 = r55
            r4 = r0
            r11 = r7
            r3 = r9
            goto L_0x01c5
        L_0x01b7:
            r0 = move-exception
            goto L_0x1697
        L_0x01ba:
            r0 = move-exception
            r14 = r49
            r2 = r54
            r13 = r55
            r4 = r0
            r11 = r7
            r3 = r9
        L_0x01c4:
            r1 = 0
        L_0x01c5:
            r5 = 1
            goto L_0x16a7
        L_0x01c8:
            r15 = r4
            r30 = r23
            r23 = r10
            r48 = r24
            r24 = r11
            r11 = r48
            boolean r4 = org.telegram.messenger.DialogObject.isEncryptedDialog(r50)     // Catch:{ Exception -> 0x1683, all -> 0x167f }
            java.lang.String r6 = "SELECT * FROM ("
            java.lang.String r10 = ""
            if (r4 != 0) goto L_0x0CLASSNAME
            java.lang.String r4 = "SELECT inbox_max, unread_count, date, unread_count_i FROM dialogs WHERE did = "
            r5 = r59
            r14 = 3
            if (r5 != r14) goto L_0x02b0
            if (r57 != 0) goto L_0x02b0
            r14 = r49
            r32 = r1
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x02a6, all -> 0x01b7 }
            r33 = r15
            java.lang.StringBuilder r15 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x02a6, all -> 0x01b7 }
            r15.<init>()     // Catch:{ Exception -> 0x02a6, all -> 0x01b7 }
            r15.append(r4)     // Catch:{ Exception -> 0x02a6, all -> 0x01b7 }
            r15.append(r7)     // Catch:{ Exception -> 0x02a6, all -> 0x01b7 }
            java.lang.String r4 = r15.toString()     // Catch:{ Exception -> 0x02a6, all -> 0x01b7 }
            r34 = r11
            r15 = 0
            java.lang.Object[] r11 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x02a6, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r4, r11)     // Catch:{ Exception -> 0x02a6, all -> 0x01b7 }
            boolean r4 = r1.next()     // Catch:{ Exception -> 0x029c }
            if (r4 == 0) goto L_0x0262
            int r4 = r1.intValue(r15)     // Catch:{ Exception -> 0x029c }
            r11 = 1
            int r4 = java.lang.Math.max(r11, r4)     // Catch:{ Exception -> 0x029c }
            int r4 = r4 + r11
            int r15 = r1.intValue(r11)     // Catch:{ Exception -> 0x024d }
            r11 = 2
            int r22 = r1.intValue(r11)     // Catch:{ Exception -> 0x023d }
            r11 = 3
            int r35 = r1.intValue(r11)     // Catch:{ Exception -> 0x0225 }
            goto L_0x0268
        L_0x0225:
            r0 = move-exception
            r2 = r54
            r13 = r55
            r35 = r4
            r11 = r7
            r3 = r9
            r37 = r22
            r5 = 0
            r10 = 0
            r18 = 0
            r36 = 0
            r38 = 0
            r4 = r0
            r22 = r15
            goto L_0x16b4
        L_0x023d:
            r0 = move-exception
            r2 = r54
            r13 = r55
            r35 = r4
            r11 = r7
            r3 = r9
            r22 = r15
            r5 = 0
            r10 = 0
            r18 = 0
            goto L_0x025c
        L_0x024d:
            r0 = move-exception
            r2 = r54
            r13 = r55
            r35 = r4
            r11 = r7
            r3 = r9
            r5 = 0
            r10 = 0
            r18 = 0
            r22 = 0
        L_0x025c:
            r36 = 0
            r37 = 0
            goto L_0x167b
        L_0x0262:
            r4 = 0
            r15 = 0
            r22 = 0
            r35 = 0
        L_0x0268:
            r1.dispose()     // Catch:{ Exception -> 0x0285 }
            r1 = r55
            r42 = r2
            r41 = r9
            r39 = r12
            r40 = r13
            r37 = r22
            r3 = r32
            r36 = r35
            r9 = 0
            r38 = 0
            r2 = r54
            r35 = r4
            r4 = r1
            goto L_0x0515
        L_0x0285:
            r0 = move-exception
            r2 = r54
            r13 = r55
            r11 = r7
            r3 = r9
            r37 = r22
            r36 = r35
            r5 = 0
            r10 = 0
            r18 = 0
            r38 = 0
            r35 = r4
            r22 = r15
            goto L_0x167d
        L_0x029c:
            r0 = move-exception
            r2 = r54
            r13 = r55
            r4 = r0
            r11 = r7
            r3 = r9
            goto L_0x16a6
        L_0x02a6:
            r0 = move-exception
            r2 = r54
            r13 = r55
            r4 = r0
            r11 = r7
            r3 = r9
            goto L_0x16a5
        L_0x02b0:
            r14 = r49
            r32 = r1
            r34 = r11
            r33 = r15
            r1 = 1
            if (r5 == r1) goto L_0x04fc
            r1 = 3
            if (r5 == r1) goto L_0x04fc
            r1 = 4
            if (r5 == r1) goto L_0x04fc
            if (r57 != 0) goto L_0x04fc
            r1 = 2
            if (r5 != r1) goto L_0x04c8
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x02a6, all -> 0x01b7 }
            java.lang.StringBuilder r11 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x02a6, all -> 0x01b7 }
            r11.<init>()     // Catch:{ Exception -> 0x02a6, all -> 0x01b7 }
            r11.append(r4)     // Catch:{ Exception -> 0x02a6, all -> 0x01b7 }
            r11.append(r7)     // Catch:{ Exception -> 0x02a6, all -> 0x01b7 }
            java.lang.String r4 = r11.toString()     // Catch:{ Exception -> 0x02a6, all -> 0x01b7 }
            r11 = 0
            java.lang.Object[] r15 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x02a6, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r4, r15)     // Catch:{ Exception -> 0x02a6, all -> 0x01b7 }
            boolean r4 = r1.next()     // Catch:{ Exception -> 0x029c }
            if (r4 == 0) goto L_0x031f
            int r4 = r1.intValue(r11)     // Catch:{ Exception -> 0x029c }
            r11 = 1
            int r4 = java.lang.Math.max(r11, r4)     // Catch:{ Exception -> 0x029c }
            int r15 = r1.intValue(r11)     // Catch:{ Exception -> 0x024d }
            r11 = 2
            int r35 = r1.intValue(r11)     // Catch:{ Exception -> 0x023d }
            r11 = 3
            int r36 = r1.intValue(r11)     // Catch:{ Exception -> 0x0308 }
            int r11 = (r7 > r2 ? 1 : (r7 == r2 ? 0 : -1))
            r37 = r35
            if (r11 != 0) goto L_0x0304
            r11 = 1
            r15 = 0
            goto L_0x0305
        L_0x0304:
            r11 = 1
        L_0x0305:
            r35 = r4
            goto L_0x0329
        L_0x0308:
            r0 = move-exception
            r2 = r54
            r13 = r55
            r11 = r7
            r3 = r9
            r22 = r15
            r37 = r35
            r5 = 0
            r10 = 0
            r18 = 0
            r36 = 0
            r38 = 0
            r35 = r4
            goto L_0x167d
        L_0x031f:
            r4 = r55
            r11 = 0
            r15 = 0
            r35 = 0
            r36 = 0
            r37 = 0
        L_0x0329:
            r1.dispose()     // Catch:{ Exception -> 0x04ba }
            if (r11 != 0) goto L_0x03ee
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x03e0, all -> 0x01b7 }
            r38 = r11
            java.util.Locale r11 = java.util.Locale.US     // Catch:{ Exception -> 0x03de, all -> 0x01b7 }
            r39 = r12
            java.lang.String r12 = "SELECT min(mid), max(date) FROM messages_v2 WHERE uid = %d AND out = 0 AND read_state IN(0,2) AND mid > 0"
            r41 = r9
            r40 = r13
            r13 = 1
            java.lang.Object[] r9 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            java.lang.Long r13 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            r42 = r2
            r2 = 0
            r9[r2] = r13     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            java.lang.String r3 = java.lang.String.format(r11, r12, r9)     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            java.lang.Object[] r9 = new java.lang.Object[r2]     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r3, r9)     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            boolean r3 = r1.next()     // Catch:{ Exception -> 0x03d1 }
            if (r3 == 0) goto L_0x0364
            int r3 = r1.intValue(r2)     // Catch:{ Exception -> 0x03d1 }
            r2 = 1
            int r9 = r1.intValue(r2)     // Catch:{ Exception -> 0x03c8 }
            r37 = r9
            goto L_0x0366
        L_0x0364:
            r3 = r35
        L_0x0366:
            r1.dispose()     // Catch:{ Exception -> 0x03c8 }
            if (r3 == 0) goto L_0x03bf
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x03b5, all -> 0x01b7 }
            java.lang.String r2 = "SELECT COUNT(*) FROM messages_v2 WHERE uid = %d AND mid >= %d AND out = 0 AND read_state IN(0,2)"
            r9 = 2
            java.lang.Object[] r12 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x03b5, all -> 0x01b7 }
            java.lang.Long r9 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x03b5, all -> 0x01b7 }
            r13 = 0
            r12[r13] = r9     // Catch:{ Exception -> 0x03b5, all -> 0x01b7 }
            java.lang.Integer r9 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x03b5, all -> 0x01b7 }
            r18 = 1
            r12[r18] = r9     // Catch:{ Exception -> 0x03b5, all -> 0x01b7 }
            java.lang.String r2 = java.lang.String.format(r11, r2, r12)     // Catch:{ Exception -> 0x03b5, all -> 0x01b7 }
            java.lang.Object[] r9 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x03b5, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r2, r9)     // Catch:{ Exception -> 0x03b5, all -> 0x01b7 }
            boolean r2 = r1.next()     // Catch:{ Exception -> 0x03c8 }
            if (r2 == 0) goto L_0x0396
            int r2 = r1.intValue(r13)     // Catch:{ Exception -> 0x03c8 }
            goto L_0x0397
        L_0x0396:
            r2 = r15
        L_0x0397:
            r1.dispose()     // Catch:{ Exception -> 0x03a4 }
            r15 = r2
            r35 = r3
            r1 = r4
            r3 = r32
            r2 = r54
            goto L_0x04e0
        L_0x03a4:
            r0 = move-exception
            r13 = r55
            r4 = r0
            r22 = r2
            r35 = r3
            r11 = r7
            r3 = r41
            r5 = 0
            r10 = 0
            r18 = 0
            goto L_0x157f
        L_0x03b5:
            r0 = move-exception
            r2 = r54
            r13 = r55
            r4 = r0
            r35 = r3
            goto L_0x0CLASSNAME
        L_0x03bf:
            r2 = r54
            r35 = r3
        L_0x03c3:
            r1 = r4
            r3 = r32
            goto L_0x04e0
        L_0x03c8:
            r0 = move-exception
            r2 = r54
            r13 = r55
            r4 = r0
            r35 = r3
            goto L_0x03d7
        L_0x03d1:
            r0 = move-exception
            r2 = r54
            r13 = r55
            r4 = r0
        L_0x03d7:
            r11 = r7
            r22 = r15
            r3 = r41
            goto L_0x0c6c
        L_0x03de:
            r0 = move-exception
            goto L_0x03e3
        L_0x03e0:
            r0 = move-exception
            r38 = r11
        L_0x03e3:
            r2 = r54
            r13 = r55
            r4 = r0
            r11 = r7
            r3 = r9
            r22 = r15
            goto L_0x0c6b
        L_0x03ee:
            r42 = r2
            r41 = r9
            r38 = r11
            r39 = r12
            r40 = r13
            if (r4 != 0) goto L_0x0450
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            java.lang.String r3 = "SELECT COUNT(*) FROM messages_v2 WHERE uid = %d AND mid > 0 AND out = 0 AND read_state IN(0,2)"
            r9 = 1
            java.lang.Object[] r11 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            java.lang.Long r9 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            r12 = 0
            r11[r12] = r9     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            java.lang.String r3 = java.lang.String.format(r2, r3, r11)     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            java.lang.Object[] r9 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r3, r9)     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            boolean r3 = r1.next()     // Catch:{ Exception -> 0x03d1 }
            if (r3 == 0) goto L_0x041f
            int r3 = r1.intValue(r12)     // Catch:{ Exception -> 0x03d1 }
            goto L_0x0420
        L_0x041f:
            r3 = 0
        L_0x0420:
            r1.dispose()     // Catch:{ Exception -> 0x03d1 }
            if (r3 != r15) goto L_0x044c
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            java.lang.String r3 = "SELECT min(mid) FROM messages_v2 WHERE uid = %d AND out = 0 AND read_state IN(0,2) AND mid > 0"
            r9 = 1
            java.lang.Object[] r11 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            java.lang.Long r9 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            r12 = 0
            r11[r12] = r9     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            java.lang.String r2 = java.lang.String.format(r2, r3, r11)     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            java.lang.Object[] r3 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r2, r3)     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            boolean r2 = r1.next()     // Catch:{ Exception -> 0x03d1 }
            if (r2 == 0) goto L_0x0449
            int r4 = r1.intValue(r12)     // Catch:{ Exception -> 0x03d1 }
            r35 = r4
        L_0x0449:
            r1.dispose()     // Catch:{ Exception -> 0x03d1 }
        L_0x044c:
            r2 = r54
            goto L_0x03c3
        L_0x0450:
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            java.lang.String r3 = "SELECT start, end FROM messages_holes WHERE uid = %d AND start < %d AND end > %d"
            r9 = 3
            java.lang.Object[] r11 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            java.lang.Long r9 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            r12 = 0
            r11[r12] = r9     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            java.lang.Integer r9 = java.lang.Integer.valueOf(r4)     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            r12 = 1
            r11[r12] = r9     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            java.lang.Integer r9 = java.lang.Integer.valueOf(r4)     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            r12 = 2
            r11[r12] = r9     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            java.lang.String r3 = java.lang.String.format(r2, r3, r11)     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            r9 = 0
            java.lang.Object[] r11 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r3, r11)     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            boolean r3 = r1.next()     // Catch:{ Exception -> 0x03d1 }
            if (r3 != 0) goto L_0x0481
            r3 = 1
            goto L_0x0482
        L_0x0481:
            r3 = 0
        L_0x0482:
            r1.dispose()     // Catch:{ Exception -> 0x03d1 }
            if (r3 == 0) goto L_0x044c
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            java.lang.String r3 = "SELECT min(mid) FROM messages_v2 WHERE uid = %d AND out = 0 AND read_state IN(0,2) AND mid > %d"
            r9 = 2
            java.lang.Object[] r11 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            java.lang.Long r9 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            r12 = 0
            r11[r12] = r9     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            java.lang.Integer r9 = java.lang.Integer.valueOf(r4)     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            r13 = 1
            r11[r13] = r9     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            java.lang.String r2 = java.lang.String.format(r2, r3, r11)     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            java.lang.Object[] r3 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r2, r3)     // Catch:{ Exception -> 0x04b5, all -> 0x01b7 }
            boolean r2 = r1.next()     // Catch:{ Exception -> 0x03d1 }
            if (r2 == 0) goto L_0x04b1
            int r2 = r1.intValue(r12)     // Catch:{ Exception -> 0x03d1 }
            r4 = r2
        L_0x04b1:
            r1.dispose()     // Catch:{ Exception -> 0x03d1 }
            goto L_0x044c
        L_0x04b5:
            r0 = move-exception
            r2 = r54
            goto L_0x0CLASSNAME
        L_0x04ba:
            r0 = move-exception
            r38 = r11
            r2 = r54
            r13 = r55
            r4 = r0
            r11 = r7
            r3 = r9
            r22 = r15
            goto L_0x0c6c
        L_0x04c8:
            r42 = r2
            r41 = r9
            r39 = r12
            r40 = r13
            r2 = r54
            r1 = r55
            r4 = r1
            r3 = r32
            r15 = 0
            r35 = 0
            r36 = 0
            r37 = 0
            r38 = 0
        L_0x04e0:
            r9 = r22
            if (r2 > r15) goto L_0x04ec
            if (r15 >= r9) goto L_0x04e7
            goto L_0x04ec
        L_0x04e7:
            int r9 = r15 - r2
            int r2 = r2 + 10
            goto L_0x0515
        L_0x04ec:
            int r11 = r15 + 10
            int r2 = java.lang.Math.max(r2, r11)     // Catch:{ Exception -> 0x0CLASSNAME, all -> 0x01b7 }
            if (r15 >= r9) goto L_0x04fa
            r1 = 0
            r9 = 0
            r15 = 0
            r35 = 0
            goto L_0x0513
        L_0x04fa:
            r9 = 0
            goto L_0x0515
        L_0x04fc:
            r42 = r2
            r41 = r9
            r39 = r12
            r40 = r13
            r3 = r32
            r2 = r54
            r1 = r55
            r4 = r1
            r9 = 0
            r15 = 0
            r35 = 0
            r36 = 0
            r37 = 0
        L_0x0513:
            r38 = 0
        L_0x0515:
            org.telegram.SQLite.SQLiteDatabase r11 = r14.database     // Catch:{ Exception -> 0x0CLASSNAME, all -> 0x01b7 }
            java.util.Locale r12 = java.util.Locale.US     // Catch:{ Exception -> 0x0CLASSNAME, all -> 0x01b7 }
            java.lang.String r13 = "SELECT start FROM messages_holes WHERE uid = %d AND start IN (0, 1)"
            r54 = r4
            r22 = r15
            r4 = 1
            java.lang.Object[] r15 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0c5a, all -> 0x01b7 }
            java.lang.Long r4 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x0c5a, all -> 0x01b7 }
            r32 = r6
            r6 = 0
            r15[r6] = r4     // Catch:{ Exception -> 0x0c5a, all -> 0x01b7 }
            java.lang.String r4 = java.lang.String.format(r12, r13, r15)     // Catch:{ Exception -> 0x0c5a, all -> 0x01b7 }
            java.lang.Object[] r13 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0c5a, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r4 = r11.queryFinalized(r4, r13)     // Catch:{ Exception -> 0x0c5a, all -> 0x01b7 }
            boolean r11 = r4.next()     // Catch:{ Exception -> 0x0c4b, all -> 0x0CLASSNAME }
            if (r11 == 0) goto L_0x0547
            int r11 = r4.intValue(r6)     // Catch:{ Exception -> 0x0544, all -> 0x0CLASSNAME }
            r6 = 1
            if (r11 != r6) goto L_0x058c
            r6 = 1
            goto L_0x058d
        L_0x0544:
            r0 = move-exception
            goto L_0x0c4e
        L_0x0547:
            r4.dispose()     // Catch:{ Exception -> 0x0c4b, all -> 0x0CLASSNAME }
            org.telegram.SQLite.SQLiteDatabase r4 = r14.database     // Catch:{ Exception -> 0x0c5a, all -> 0x01b7 }
            java.lang.String r6 = "SELECT min(mid) FROM messages_v2 WHERE uid = %d AND mid > 0"
            r11 = 1
            java.lang.Object[] r13 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x0c5a, all -> 0x01b7 }
            java.lang.Long r11 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x0c5a, all -> 0x01b7 }
            r15 = 0
            r13[r15] = r11     // Catch:{ Exception -> 0x0c5a, all -> 0x01b7 }
            java.lang.String r6 = java.lang.String.format(r12, r6, r13)     // Catch:{ Exception -> 0x0c5a, all -> 0x01b7 }
            java.lang.Object[] r11 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x0c5a, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r4 = r4.queryFinalized(r6, r11)     // Catch:{ Exception -> 0x0c5a, all -> 0x01b7 }
            boolean r6 = r4.next()     // Catch:{ Exception -> 0x0c4b, all -> 0x0CLASSNAME }
            if (r6 == 0) goto L_0x058c
            int r6 = r4.intValue(r15)     // Catch:{ Exception -> 0x0544, all -> 0x0CLASSNAME }
            if (r6 == 0) goto L_0x058c
            org.telegram.SQLite.SQLiteDatabase r11 = r14.database     // Catch:{ Exception -> 0x0544, all -> 0x0CLASSNAME }
            java.lang.String r13 = "REPLACE INTO messages_holes VALUES(?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r11 = r11.executeFast(r13)     // Catch:{ Exception -> 0x0544, all -> 0x0CLASSNAME }
            r11.requery()     // Catch:{ Exception -> 0x0544, all -> 0x0CLASSNAME }
            r13 = 1
            r11.bindLong(r13, r7)     // Catch:{ Exception -> 0x0544, all -> 0x0CLASSNAME }
            r13 = 2
            r15 = 0
            r11.bindInteger(r13, r15)     // Catch:{ Exception -> 0x0544, all -> 0x0CLASSNAME }
            r13 = 3
            r11.bindInteger(r13, r6)     // Catch:{ Exception -> 0x0544, all -> 0x0CLASSNAME }
            r11.step()     // Catch:{ Exception -> 0x0544, all -> 0x0CLASSNAME }
            r11.dispose()     // Catch:{ Exception -> 0x0544, all -> 0x0CLASSNAME }
        L_0x058c:
            r6 = 0
        L_0x058d:
            r4.dispose()     // Catch:{ Exception -> 0x0CLASSNAME, all -> 0x0CLASSNAME }
            java.lang.String r4 = "SELECT end FROM messages_holes WHERE uid = %d AND end <= %d ORDER BY end DESC LIMIT 1"
            java.lang.String r11 = "SELECT max(mid) FROM messages_v2 WHERE uid = %d AND mid > 0"
            r13 = 3
            if (r5 == r13) goto L_0x0893
            r13 = 4
            if (r5 == r13) goto L_0x0893
            if (r38 == 0) goto L_0x05a1
            r13 = 2
            if (r5 != r13) goto L_0x05a1
            goto L_0x0893
        L_0x05a1:
            r13 = 1
            if (r5 != r13) goto L_0x0678
            org.telegram.SQLite.SQLiteDatabase r4 = r14.database     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.String r9 = "SELECT start, end FROM messages_holes WHERE uid = %d AND (start >= %d AND start != 1 AND end != 1 OR start < %d AND end > %d) ORDER BY start ASC LIMIT 1"
            r11 = 4
            java.lang.Object[] r13 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.Long r11 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r15 = 0
            r13[r15] = r11     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r55)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r15 = 1
            r13[r15] = r11     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r55)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r15 = 2
            r13[r15] = r11     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r55)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r15 = 3
            r13[r15] = r11     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.String r9 = java.lang.String.format(r12, r9, r13)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r11 = 0
            java.lang.Object[] r13 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r4 = r4.queryFinalized(r9, r13)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            boolean r9 = r4.next()     // Catch:{ Exception -> 0x0735, all -> 0x0CLASSNAME }
            if (r9 == 0) goto L_0x05dd
            int r9 = r4.intValue(r11)     // Catch:{ Exception -> 0x0735, all -> 0x0CLASSNAME }
            goto L_0x05de
        L_0x05dd:
            r9 = 0
        L_0x05de:
            r4.dispose()     // Catch:{ Exception -> 0x0735, all -> 0x0CLASSNAME }
            if (r9 == 0) goto L_0x062c
            org.telegram.SQLite.SQLiteDatabase r4 = r14.database     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.StringBuilder r11 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r11.<init>()     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r11.append(r10)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r11.append(r3)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.String r3 = " WHERE m.uid = %d AND m.date >= %d AND m.mid > %d AND m.mid <= %d ORDER BY m.date ASC, m.mid ASC LIMIT %d"
            r11.append(r3)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.String r3 = r11.toString()     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r10 = 5
            java.lang.Object[] r11 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.Long r10 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r13 = 0
            r11[r13] = r10     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.Integer r10 = java.lang.Integer.valueOf(r57)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r13 = 1
            r11[r13] = r10     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r10 = 2
            r11[r10] = r1     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.Integer r1 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r9 = 3
            r11[r9] = r1     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.Integer r1 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r9 = 4
            r11[r9] = r1     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.String r1 = java.lang.String.format(r12, r3, r11)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r3 = 0
            java.lang.Object[] r9 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r1 = r4.queryFinalized(r1, r9)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            goto L_0x077f
        L_0x062c:
            org.telegram.SQLite.SQLiteDatabase r4 = r14.database     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.StringBuilder r9 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r9.<init>()     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r9.append(r10)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r9.append(r3)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.String r3 = " WHERE m.uid = %d AND m.date >= %d AND m.mid > %d ORDER BY m.date ASC, m.mid ASC LIMIT %d"
            r9.append(r3)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.String r3 = r9.toString()     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r9 = 4
            java.lang.Object[] r10 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.Long r9 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r11 = 0
            r10[r11] = r9     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.Integer r9 = java.lang.Integer.valueOf(r57)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r11 = 1
            r10[r11] = r9     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r9 = 2
            r10[r9] = r1     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.Integer r1 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r9 = 3
            r10[r9] = r1     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.String r1 = java.lang.String.format(r12, r3, r10)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r3 = 0
            java.lang.Object[] r9 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r1 = r4.queryFinalized(r1, r9)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            goto L_0x077f
        L_0x066e:
            r0 = move-exception
            r13 = r55
            r4 = r0
            r5 = r6
            r11 = r7
            r3 = r41
            goto L_0x0CLASSNAME
        L_0x0678:
            if (r57 == 0) goto L_0x0790
            if (r1 == 0) goto L_0x073f
            org.telegram.SQLite.SQLiteDatabase r9 = r14.database     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r11 = 2
            java.lang.Object[] r13 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.Long r11 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r15 = 0
            r13[r15] = r11     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r55)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r18 = 1
            r13[r18] = r11     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.String r4 = java.lang.String.format(r12, r4, r13)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.Object[] r11 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r4 = r9.queryFinalized(r4, r11)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            boolean r9 = r4.next()     // Catch:{ Exception -> 0x0735, all -> 0x0CLASSNAME }
            if (r9 == 0) goto L_0x06a5
            int r9 = r4.intValue(r15)     // Catch:{ Exception -> 0x0735, all -> 0x0CLASSNAME }
            goto L_0x06a6
        L_0x06a5:
            r9 = 0
        L_0x06a6:
            r4.dispose()     // Catch:{ Exception -> 0x0735, all -> 0x0CLASSNAME }
            if (r9 == 0) goto L_0x06f4
            org.telegram.SQLite.SQLiteDatabase r4 = r14.database     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.StringBuilder r11 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r11.<init>()     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r11.append(r10)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r11.append(r3)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.String r3 = " WHERE m.uid = %d AND m.date <= %d AND m.mid < %d AND (m.mid >= %d OR m.mid < 0) ORDER BY m.date DESC, m.mid DESC LIMIT %d"
            r11.append(r3)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.String r3 = r11.toString()     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r10 = 5
            java.lang.Object[] r11 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.Long r10 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r13 = 0
            r11[r13] = r10     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.Integer r10 = java.lang.Integer.valueOf(r57)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r13 = 1
            r11[r13] = r10     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r10 = 2
            r11[r10] = r1     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.Integer r1 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r9 = 3
            r11[r9] = r1     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.Integer r1 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r9 = 4
            r11[r9] = r1     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.String r1 = java.lang.String.format(r12, r3, r11)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r3 = 0
            java.lang.Object[] r9 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r1 = r4.queryFinalized(r1, r9)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            goto L_0x077f
        L_0x06f4:
            org.telegram.SQLite.SQLiteDatabase r4 = r14.database     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.StringBuilder r9 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r9.<init>()     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r9.append(r10)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r9.append(r3)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.String r3 = " WHERE m.uid = %d AND m.date <= %d AND m.mid < %d ORDER BY m.date DESC, m.mid DESC LIMIT %d"
            r9.append(r3)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.String r3 = r9.toString()     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r9 = 4
            java.lang.Object[] r10 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.Long r9 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r11 = 0
            r10[r11] = r9     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.Integer r9 = java.lang.Integer.valueOf(r57)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r11 = 1
            r10[r11] = r9     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r9 = 2
            r10[r9] = r1     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.Integer r1 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r9 = 3
            r10[r9] = r1     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.String r1 = java.lang.String.format(r12, r3, r10)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r3 = 0
            java.lang.Object[] r9 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r1 = r4.queryFinalized(r1, r9)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            goto L_0x077f
        L_0x0735:
            r0 = move-exception
            r13 = r55
            r1 = r4
            r5 = r6
            r11 = r7
            r3 = r41
            goto L_0x0CLASSNAME
        L_0x073f:
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.StringBuilder r4 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r4.<init>()     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r4.append(r10)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r4.append(r3)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.String r3 = " WHERE m.uid = %d AND m.date <= %d ORDER BY m.date DESC, m.mid DESC LIMIT %d,%d"
            r4.append(r3)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.String r3 = r4.toString()     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r4 = 4
            java.lang.Object[] r10 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.Long r4 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r11 = 0
            r10[r11] = r4     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r57)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r11 = 1
            r10[r11] = r4     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r9 = 2
            r10[r9] = r4     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r9 = 3
            r10[r9] = r4     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.String r3 = java.lang.String.format(r12, r3, r10)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r4 = 0
            java.lang.Object[] r9 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r3, r9)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
        L_0x077f:
            r9 = r54
            r3 = r1
            r45 = r6
            r4 = r36
            r32 = r37
            r11 = r38
            r6 = 0
            r7 = 0
            r1 = r55
            goto L_0x1097
        L_0x0790:
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r4 = 1
            java.lang.Object[] r13 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.Long r4 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            r15 = 0
            r13[r15] = r4     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.String r4 = java.lang.String.format(r12, r11, r13)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            java.lang.Object[] r11 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r4, r11)     // Catch:{ Exception -> 0x066e, all -> 0x01b7 }
            boolean r4 = r1.next()     // Catch:{ Exception -> 0x088c }
            if (r4 == 0) goto L_0x07b1
            int r4 = r1.intValue(r15)     // Catch:{ Exception -> 0x088c }
            goto L_0x07b2
        L_0x07b1:
            r4 = 0
        L_0x07b2:
            r1.dispose()     // Catch:{ Exception -> 0x087e }
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x0870, all -> 0x01b7 }
            java.lang.String r11 = "SELECT max(end) FROM messages_holes WHERE uid = %d"
            r13 = 1
            java.lang.Object[] r15 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0870, all -> 0x01b7 }
            java.lang.Long r13 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x0870, all -> 0x01b7 }
            r57 = r4
            r4 = 0
            r15[r4] = r13     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            java.lang.String r11 = java.lang.String.format(r12, r11, r15)     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            java.lang.Object[] r13 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r11, r13)     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            boolean r11 = r1.next()     // Catch:{ Exception -> 0x086c }
            if (r11 == 0) goto L_0x07da
            int r11 = r1.intValue(r4)     // Catch:{ Exception -> 0x086c }
            goto L_0x07db
        L_0x07da:
            r11 = 0
        L_0x07db:
            r1.dispose()     // Catch:{ Exception -> 0x086c }
            if (r11 == 0) goto L_0x0821
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            java.lang.StringBuilder r4 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            r4.<init>()     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            r4.append(r10)     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            r4.append(r3)     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            java.lang.String r3 = " WHERE m.uid = %d AND (m.mid >= %d OR m.mid < 0) ORDER BY m.date DESC, m.mid DESC LIMIT %d,%d"
            r4.append(r3)     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            java.lang.String r3 = r4.toString()     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            r4 = 4
            java.lang.Object[] r10 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            java.lang.Long r4 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            r13 = 0
            r10[r13] = r4     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r11)     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            r11 = 1
            r10[r11] = r4     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            r9 = 2
            r10[r9] = r4     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            r9 = 3
            r10[r9] = r4     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            java.lang.String r3 = java.lang.String.format(r12, r3, r10)     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            r4 = 0
            java.lang.Object[] r9 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r3, r9)     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            goto L_0x085a
        L_0x0821:
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            java.lang.StringBuilder r4 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            r4.<init>()     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            r4.append(r10)     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            r4.append(r3)     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            java.lang.String r3 = " WHERE m.uid = %d ORDER BY m.date DESC, m.mid DESC LIMIT %d,%d"
            r4.append(r3)     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            java.lang.String r3 = r4.toString()     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            r4 = 3
            java.lang.Object[] r10 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            java.lang.Long r4 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            r11 = 0
            r10[r11] = r4     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            r9 = 1
            r10[r9] = r4     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            r9 = 2
            r10[r9] = r4     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            java.lang.String r3 = java.lang.String.format(r12, r3, r10)     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            r4 = 0
            java.lang.Object[] r9 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r3, r9)     // Catch:{ Exception -> 0x086e, all -> 0x01b7 }
        L_0x085a:
            r9 = r54
            r3 = r1
            r45 = r6
            r4 = r36
            r32 = r37
            r11 = r38
            r7 = 0
            r1 = r55
            r6 = r57
            goto L_0x1097
        L_0x086c:
            r0 = move-exception
            goto L_0x0881
        L_0x086e:
            r0 = move-exception
            goto L_0x0873
        L_0x0870:
            r0 = move-exception
            r57 = r4
        L_0x0873:
            r13 = r55
            r10 = r57
            r4 = r0
            r5 = r6
            r11 = r7
            r3 = r41
            goto L_0x09c4
        L_0x087e:
            r0 = move-exception
            r57 = r4
        L_0x0881:
            r13 = r55
            r10 = r57
            r4 = r0
            r5 = r6
            r11 = r7
        L_0x0888:
            r3 = r41
            goto L_0x0c6e
        L_0x088c:
            r0 = move-exception
            r13 = r55
            r4 = r0
            r5 = r6
            r11 = r7
            goto L_0x08bb
        L_0x0893:
            org.telegram.SQLite.SQLiteDatabase r9 = r14.database     // Catch:{ Exception -> 0x0CLASSNAME, all -> 0x01b7 }
            r10 = 1
            java.lang.Object[] r13 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x0CLASSNAME, all -> 0x01b7 }
            java.lang.Long r10 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x0CLASSNAME, all -> 0x01b7 }
            r15 = 0
            r13[r15] = r10     // Catch:{ Exception -> 0x0CLASSNAME, all -> 0x01b7 }
            java.lang.String r10 = java.lang.String.format(r12, r11, r13)     // Catch:{ Exception -> 0x0CLASSNAME, all -> 0x01b7 }
            java.lang.Object[] r11 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x0CLASSNAME, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r9 = r9.queryFinalized(r10, r11)     // Catch:{ Exception -> 0x0CLASSNAME, all -> 0x01b7 }
            boolean r10 = r9.next()     // Catch:{ Exception -> 0x0c1a, all -> 0x0CLASSNAME }
            if (r10 == 0) goto L_0x08bf
            int r10 = r9.intValue(r15)     // Catch:{ Exception -> 0x08b4, all -> 0x0CLASSNAME }
            goto L_0x08c0
        L_0x08b4:
            r0 = move-exception
            r13 = r55
            r4 = r0
            r5 = r6
            r11 = r7
            r1 = r9
        L_0x08bb:
            r3 = r41
            goto L_0x0c6d
        L_0x08bf:
            r10 = 0
        L_0x08c0:
            r9.dispose()     // Catch:{ Exception -> 0x0CLASSNAME, all -> 0x0CLASSNAME }
            r9 = 4
            if (r5 != r9) goto L_0x09c7
            if (r56 == 0) goto L_0x09c7
            org.telegram.SQLite.SQLiteDatabase r9 = r14.database     // Catch:{ Exception -> 0x09b9, all -> 0x01b7 }
            java.lang.String r11 = "SELECT max(mid) FROM messages_v2 WHERE uid = %d AND date <= %d AND mid > 0"
            r13 = 2
            java.lang.Object[] r15 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x09b9, all -> 0x01b7 }
            java.lang.Long r13 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x09b9, all -> 0x01b7 }
            r44 = r1
            r1 = 0
            r15[r1] = r13     // Catch:{ Exception -> 0x09b9, all -> 0x01b7 }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r56)     // Catch:{ Exception -> 0x09b9, all -> 0x01b7 }
            r18 = 1
            r15[r18] = r13     // Catch:{ Exception -> 0x09b9, all -> 0x01b7 }
            java.lang.String r11 = java.lang.String.format(r12, r11, r15)     // Catch:{ Exception -> 0x09b9, all -> 0x01b7 }
            java.lang.Object[] r13 = new java.lang.Object[r1]     // Catch:{ Exception -> 0x09b9, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r9 = r9.queryFinalized(r11, r13)     // Catch:{ Exception -> 0x09b9, all -> 0x01b7 }
            boolean r11 = r9.next()     // Catch:{ Exception -> 0x09b4, all -> 0x0CLASSNAME }
            if (r11 == 0) goto L_0x08fd
            int r11 = r9.intValue(r1)     // Catch:{ Exception -> 0x08f5, all -> 0x0CLASSNAME }
            goto L_0x08fe
        L_0x08f5:
            r0 = move-exception
            r13 = r55
            r4 = r0
            r5 = r6
            r11 = r7
            r1 = r9
            goto L_0x0888
        L_0x08fd:
            r11 = -1
        L_0x08fe:
            r9.dispose()     // Catch:{ Exception -> 0x09b4, all -> 0x0CLASSNAME }
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x09b9, all -> 0x01b7 }
            java.lang.String r9 = "SELECT min(mid) FROM messages_v2 WHERE uid = %d AND date >= %d AND mid > 0"
            r15 = 2
            java.lang.Object[] r13 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x09b9, all -> 0x01b7 }
            java.lang.Long r15 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x09b9, all -> 0x01b7 }
            r45 = r6
            r6 = 0
            r13[r6] = r15     // Catch:{ Exception -> 0x09b2, all -> 0x01b7 }
            java.lang.Integer r15 = java.lang.Integer.valueOf(r56)     // Catch:{ Exception -> 0x09b2, all -> 0x01b7 }
            r18 = 1
            r13[r18] = r15     // Catch:{ Exception -> 0x09b2, all -> 0x01b7 }
            java.lang.String r9 = java.lang.String.format(r12, r9, r13)     // Catch:{ Exception -> 0x09b2, all -> 0x01b7 }
            java.lang.Object[] r13 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x09b2, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r9, r13)     // Catch:{ Exception -> 0x09b2, all -> 0x01b7 }
            boolean r9 = r1.next()     // Catch:{ Exception -> 0x09ad }
            if (r9 == 0) goto L_0x092e
            int r9 = r1.intValue(r6)     // Catch:{ Exception -> 0x09ad }
            goto L_0x092f
        L_0x092e:
            r9 = -1
        L_0x092f:
            r1.dispose()     // Catch:{ Exception -> 0x09ad }
            r1 = -1
            if (r11 == r1) goto L_0x09cb
            if (r9 == r1) goto L_0x09cb
            if (r11 != r9) goto L_0x093e
            r1 = r55
            r9 = r11
            goto L_0x09cf
        L_0x093e:
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x09b2, all -> 0x01b7 }
            java.lang.String r6 = "SELECT start FROM messages_holes WHERE uid = %d AND start <= %d AND end > %d"
            r13 = 3
            java.lang.Object[] r15 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x09b2, all -> 0x01b7 }
            java.lang.Long r13 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x09b2, all -> 0x01b7 }
            r18 = 0
            r15[r18] = r13     // Catch:{ Exception -> 0x09b2, all -> 0x01b7 }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r11)     // Catch:{ Exception -> 0x09b2, all -> 0x01b7 }
            r19 = 1
            r15[r19] = r13     // Catch:{ Exception -> 0x09b2, all -> 0x01b7 }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r11)     // Catch:{ Exception -> 0x09b2, all -> 0x01b7 }
            r29 = 2
            r15[r29] = r13     // Catch:{ Exception -> 0x09b2, all -> 0x01b7 }
            java.lang.String r6 = java.lang.String.format(r12, r6, r15)     // Catch:{ Exception -> 0x09b2, all -> 0x01b7 }
            r13 = 0
            java.lang.Object[] r15 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x09b2, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r6, r15)     // Catch:{ Exception -> 0x09b2, all -> 0x01b7 }
            boolean r6 = r1.next()     // Catch:{ Exception -> 0x09ad }
            if (r6 == 0) goto L_0x096f
            r11 = -1
        L_0x096f:
            r1.dispose()     // Catch:{ Exception -> 0x09ad }
            r1 = -1
            if (r11 == r1) goto L_0x09cb
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x09b2, all -> 0x01b7 }
            java.lang.String r6 = "SELECT start FROM messages_holes WHERE uid = %d AND start <= %d AND end > %d"
            r11 = 3
            java.lang.Object[] r13 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x09b2, all -> 0x01b7 }
            java.lang.Long r11 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x09b2, all -> 0x01b7 }
            r15 = 0
            r13[r15] = r11     // Catch:{ Exception -> 0x09b2, all -> 0x01b7 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x09b2, all -> 0x01b7 }
            r15 = 1
            r13[r15] = r11     // Catch:{ Exception -> 0x09b2, all -> 0x01b7 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x09b2, all -> 0x01b7 }
            r15 = 2
            r13[r15] = r11     // Catch:{ Exception -> 0x09b2, all -> 0x01b7 }
            java.lang.String r6 = java.lang.String.format(r12, r6, r13)     // Catch:{ Exception -> 0x09b2, all -> 0x01b7 }
            r11 = 0
            java.lang.Object[] r13 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x09b2, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r6, r13)     // Catch:{ Exception -> 0x09b2, all -> 0x01b7 }
            boolean r6 = r1.next()     // Catch:{ Exception -> 0x09ad }
            if (r6 == 0) goto L_0x09a3
            r9 = -1
        L_0x09a3:
            r1.dispose()     // Catch:{ Exception -> 0x09ad }
            r1 = -1
            if (r9 == r1) goto L_0x09cb
            r1 = r9
            r44 = r1
            goto L_0x09cf
        L_0x09ad:
            r0 = move-exception
            r13 = r55
            goto L_0x0bea
        L_0x09b2:
            r0 = move-exception
            goto L_0x09bc
        L_0x09b4:
            r0 = move-exception
            r45 = r6
            goto L_0x0c0a
        L_0x09b9:
            r0 = move-exception
            r45 = r6
        L_0x09bc:
            r13 = r55
        L_0x09be:
            r4 = r0
            r11 = r7
        L_0x09c0:
            r3 = r41
            r5 = r45
        L_0x09c4:
            r1 = 0
            goto L_0x0c6e
        L_0x09c7:
            r44 = r1
            r45 = r6
        L_0x09cb:
            r9 = r54
            r1 = r55
        L_0x09cf:
            if (r9 == 0) goto L_0x09d3
            r6 = 1
            goto L_0x09d4
        L_0x09d3:
            r6 = 0
        L_0x09d4:
            if (r6 == 0) goto L_0x0a13
            org.telegram.SQLite.SQLiteDatabase r11 = r14.database     // Catch:{ Exception -> 0x0a0d, all -> 0x01b7 }
            java.lang.String r13 = "SELECT start FROM messages_holes WHERE uid = %d AND start < %d AND end > %d"
            r54 = r1
            r15 = 3
            java.lang.Object[] r1 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            java.lang.Long r15 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r18 = 0
            r1[r18] = r15     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            java.lang.Integer r15 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r19 = 1
            r1[r19] = r15     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            java.lang.Integer r15 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r29 = 2
            r1[r29] = r15     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            java.lang.String r1 = java.lang.String.format(r12, r13, r1)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r13 = 0
            java.lang.Object[] r15 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r1 = r11.queryFinalized(r1, r15)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            boolean r11 = r1.next()     // Catch:{ Exception -> 0x0b4a }
            if (r11 == 0) goto L_0x0a09
            r6 = 0
        L_0x0a09:
            r1.dispose()     // Catch:{ Exception -> 0x0b4a }
            goto L_0x0a15
        L_0x0a0d:
            r0 = move-exception
            r54 = r1
        L_0x0a10:
            r13 = r54
            goto L_0x09be
        L_0x0a13:
            r54 = r1
        L_0x0a15:
            if (r6 == 0) goto L_0x0b50
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            java.lang.String r6 = "SELECT start FROM messages_holes WHERE uid = %d AND start >= %d ORDER BY start ASC LIMIT 1"
            r11 = 2
            java.lang.Object[] r13 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            java.lang.Long r11 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r15 = 0
            r13[r15] = r11     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r18 = 1
            r13[r18] = r11     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            java.lang.String r6 = java.lang.String.format(r12, r6, r13)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            java.lang.Object[] r11 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r6, r11)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            boolean r6 = r1.next()     // Catch:{ Exception -> 0x0b4a }
            if (r6 == 0) goto L_0x0a42
            int r6 = r1.intValue(r15)     // Catch:{ Exception -> 0x0b4a }
            goto L_0x0a43
        L_0x0a42:
            r6 = 0
        L_0x0a43:
            r1.dispose()     // Catch:{ Exception -> 0x0b4a }
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r11 = 2
            java.lang.Object[] r13 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            java.lang.Long r11 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r15 = 0
            r13[r15] = r11     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r18 = 1
            r13[r18] = r11     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            java.lang.String r4 = java.lang.String.format(r12, r4, r13)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            java.lang.Object[] r11 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r4, r11)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            boolean r4 = r1.next()     // Catch:{ Exception -> 0x0b4a }
            if (r4 == 0) goto L_0x0a6f
            int r4 = r1.intValue(r15)     // Catch:{ Exception -> 0x0b4a }
            goto L_0x0a70
        L_0x0a6f:
            r4 = 1
        L_0x0a70:
            r1.dispose()     // Catch:{ Exception -> 0x0b4a }
            if (r6 != 0) goto L_0x0ad6
            r1 = 1
            if (r4 == r1) goto L_0x0a79
            goto L_0x0ad6
        L_0x0a79:
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            java.lang.StringBuilder r4 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r4.<init>()     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r11 = r32
            r4.append(r11)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r4.append(r3)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            java.lang.String r6 = " WHERE m.uid = %d AND m.mid <= %d ORDER BY m.date DESC, m.mid DESC LIMIT %d) UNION SELECT * FROM ("
            r4.append(r6)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r4.append(r3)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            java.lang.String r3 = " WHERE m.uid = %d AND m.mid > %d ORDER BY m.date ASC, m.mid ASC LIMIT %d)"
            r4.append(r3)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            java.lang.String r3 = r4.toString()     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r4 = 6
            java.lang.Object[] r6 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            java.lang.Long r4 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r11 = 0
            r6[r11] = r4     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r44)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r11 = 1
            r6[r11] = r4     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            int r4 = r2 / 2
            java.lang.Integer r4 = java.lang.Integer.valueOf(r4)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r11 = 2
            r6[r11] = r4     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            java.lang.Long r4 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r11 = 3
            r6[r11] = r4     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r44)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r11 = 4
            r6[r11] = r4     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            int r4 = r2 / 2
            java.lang.Integer r4 = java.lang.Integer.valueOf(r4)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r11 = 5
            r6[r11] = r4     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            java.lang.String r3 = java.lang.String.format(r12, r3, r6)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r4 = 0
            java.lang.Object[] r6 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r3, r6)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            goto L_0x0b46
        L_0x0ad6:
            r11 = r32
            if (r6 != 0) goto L_0x0add
            r6 = 1000000000(0x3b9aca00, float:0.NUM)
        L_0x0add:
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            java.lang.StringBuilder r13 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r13.<init>()     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r13.append(r11)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r13.append(r3)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            java.lang.String r11 = " WHERE m.uid = %d AND m.mid <= %d AND (m.mid >= %d OR m.mid < 0) ORDER BY m.date DESC, m.mid DESC LIMIT %d) UNION SELECT * FROM ("
            r13.append(r11)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r13.append(r3)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            java.lang.String r3 = " WHERE m.uid = %d AND m.mid > %d AND (m.mid <= %d OR m.mid < 0) ORDER BY m.date ASC, m.mid ASC LIMIT %d)"
            r13.append(r3)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            java.lang.String r3 = r13.toString()     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r11 = 8
            java.lang.Object[] r11 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            java.lang.Long r13 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r15 = 0
            r11[r15] = r13     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r44)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r15 = 1
            r11[r15] = r13     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r4)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r13 = 2
            r11[r13] = r4     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            int r4 = r2 / 2
            java.lang.Integer r4 = java.lang.Integer.valueOf(r4)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r13 = 3
            r11[r13] = r4     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            java.lang.Long r4 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r13 = 4
            r11[r13] = r4     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r44)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r13 = 5
            r11[r13] = r4     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r6 = 6
            r11[r6] = r4     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            int r4 = r2 / 2
            java.lang.Integer r4 = java.lang.Integer.valueOf(r4)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r6 = 7
            r11[r6] = r4     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            java.lang.String r3 = java.lang.String.format(r12, r3, r11)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            r4 = 0
            java.lang.Object[] r6 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r3, r6)     // Catch:{ Exception -> 0x0b4d, all -> 0x01b7 }
        L_0x0b46:
            r15 = r22
            goto L_0x0bf5
        L_0x0b4a:
            r0 = move-exception
            goto L_0x0be8
        L_0x0b4d:
            r0 = move-exception
            goto L_0x0a10
        L_0x0b50:
            r11 = r32
            r1 = 2
            if (r5 != r1) goto L_0x0bf2
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x0bed, all -> 0x01b7 }
            java.lang.String r4 = "SELECT COUNT(*) FROM messages_v2 WHERE uid = %d AND mid != 0 AND out = 0 AND read_state IN(0,2)"
            r6 = 1
            java.lang.Object[] r13 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0bed, all -> 0x01b7 }
            java.lang.Long r6 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x0bed, all -> 0x01b7 }
            r15 = 0
            r13[r15] = r6     // Catch:{ Exception -> 0x0bed, all -> 0x01b7 }
            java.lang.String r4 = java.lang.String.format(r12, r4, r13)     // Catch:{ Exception -> 0x0bed, all -> 0x01b7 }
            java.lang.Object[] r6 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x0bed, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r4, r6)     // Catch:{ Exception -> 0x0bed, all -> 0x01b7 }
            boolean r4 = r1.next()     // Catch:{ Exception -> 0x0be5 }
            if (r4 == 0) goto L_0x0b78
            int r4 = r1.intValue(r15)     // Catch:{ Exception -> 0x0b4a }
            goto L_0x0b79
        L_0x0b78:
            r4 = 0
        L_0x0b79:
            r1.dispose()     // Catch:{ Exception -> 0x0be5 }
            r15 = r22
            if (r4 != r15) goto L_0x0bf4
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x0bdc, all -> 0x01b7 }
            java.lang.StringBuilder r4 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0bdc, all -> 0x01b7 }
            r4.<init>()     // Catch:{ Exception -> 0x0bdc, all -> 0x01b7 }
            r4.append(r11)     // Catch:{ Exception -> 0x0bdc, all -> 0x01b7 }
            r4.append(r3)     // Catch:{ Exception -> 0x0bdc, all -> 0x01b7 }
            java.lang.String r6 = " WHERE m.uid = %d AND m.mid <= %d ORDER BY m.date DESC, m.mid DESC LIMIT %d) UNION SELECT * FROM ("
            r4.append(r6)     // Catch:{ Exception -> 0x0bdc, all -> 0x01b7 }
            r4.append(r3)     // Catch:{ Exception -> 0x0bdc, all -> 0x01b7 }
            java.lang.String r3 = " WHERE m.uid = %d AND m.mid > %d ORDER BY m.date ASC, m.mid ASC LIMIT %d)"
            r4.append(r3)     // Catch:{ Exception -> 0x0bdc, all -> 0x01b7 }
            java.lang.String r3 = r4.toString()     // Catch:{ Exception -> 0x0bdc, all -> 0x01b7 }
            r4 = 6
            java.lang.Object[] r6 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0bdc, all -> 0x01b7 }
            java.lang.Long r4 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x0bdc, all -> 0x01b7 }
            r11 = 0
            r6[r11] = r4     // Catch:{ Exception -> 0x0bdc, all -> 0x01b7 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r44)     // Catch:{ Exception -> 0x0bdc, all -> 0x01b7 }
            r11 = 1
            r6[r11] = r4     // Catch:{ Exception -> 0x0bdc, all -> 0x01b7 }
            int r4 = r2 / 2
            java.lang.Integer r4 = java.lang.Integer.valueOf(r4)     // Catch:{ Exception -> 0x0bdc, all -> 0x01b7 }
            r11 = 2
            r6[r11] = r4     // Catch:{ Exception -> 0x0bdc, all -> 0x01b7 }
            java.lang.Long r4 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x0bdc, all -> 0x01b7 }
            r11 = 3
            r6[r11] = r4     // Catch:{ Exception -> 0x0bdc, all -> 0x01b7 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r44)     // Catch:{ Exception -> 0x0bdc, all -> 0x01b7 }
            r11 = 4
            r6[r11] = r4     // Catch:{ Exception -> 0x0bdc, all -> 0x01b7 }
            int r4 = r2 / 2
            java.lang.Integer r4 = java.lang.Integer.valueOf(r4)     // Catch:{ Exception -> 0x0bdc, all -> 0x01b7 }
            r11 = 5
            r6[r11] = r4     // Catch:{ Exception -> 0x0bdc, all -> 0x01b7 }
            java.lang.String r3 = java.lang.String.format(r12, r3, r6)     // Catch:{ Exception -> 0x0bdc, all -> 0x01b7 }
            r4 = 0
            java.lang.Object[] r6 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0bdc, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r3, r6)     // Catch:{ Exception -> 0x0bdc, all -> 0x01b7 }
            r3 = 1
            goto L_0x0bf6
        L_0x0bdc:
            r0 = move-exception
            r13 = r54
            r4 = r0
            r11 = r7
            r22 = r15
            goto L_0x09c0
        L_0x0be5:
            r0 = move-exception
            r15 = r22
        L_0x0be8:
            r13 = r54
        L_0x0bea:
            r4 = r0
            r11 = r7
            goto L_0x0c0f
        L_0x0bed:
            r0 = move-exception
            r15 = r22
            goto L_0x0a10
        L_0x0bf2:
            r15 = r22
        L_0x0bf4:
            r1 = 0
        L_0x0bf5:
            r3 = 0
        L_0x0bf6:
            r7 = r3
            r6 = r10
            r22 = r15
            r4 = r36
            r32 = r37
            r11 = r38
            r3 = r1
            r1 = r54
            goto L_0x1097
        L_0x0CLASSNAME:
            r0 = move-exception
            r45 = r6
            r15 = r22
        L_0x0c0a:
            r13 = r55
            r4 = r0
            r11 = r7
            r1 = r9
        L_0x0c0f:
            r3 = r41
            r5 = r45
            goto L_0x0c6e
        L_0x0CLASSNAME:
            r0 = move-exception
            r1 = r0
            r12 = r9
            goto L_0x1733
        L_0x0c1a:
            r0 = move-exception
            r45 = r6
            r15 = r22
            r13 = r55
            r4 = r0
            r11 = r7
            r1 = r9
            r3 = r41
            r5 = r45
            goto L_0x0c6d
        L_0x0CLASSNAME:
            r0 = move-exception
            r45 = r6
            r15 = r22
            r13 = r55
            r4 = r0
            r11 = r7
            r3 = r41
            r5 = r45
        L_0x0CLASSNAME:
            r1 = 0
            goto L_0x0c6d
        L_0x0CLASSNAME:
            r0 = move-exception
            r45 = r6
            r15 = r22
            r13 = r55
            r1 = r4
            r11 = r7
            r3 = r41
            r5 = r45
            goto L_0x0CLASSNAME
        L_0x0CLASSNAME:
            r0 = move-exception
            r1 = r0
            r12 = r4
            goto L_0x1733
        L_0x0c4b:
            r0 = move-exception
            r15 = r22
        L_0x0c4e:
            r13 = r55
            r1 = r4
            r11 = r7
            r3 = r41
            r5 = 0
        L_0x0CLASSNAME:
            r10 = 0
            r18 = 0
            goto L_0x167d
        L_0x0c5a:
            r0 = move-exception
            r15 = r22
            r13 = r55
            r4 = r0
            r11 = r7
            goto L_0x0CLASSNAME
        L_0x0CLASSNAME:
            r0 = move-exception
        L_0x0CLASSNAME:
            r13 = r55
            r4 = r0
        L_0x0CLASSNAME:
            r11 = r7
            r22 = r15
        L_0x0CLASSNAME:
            r3 = r41
        L_0x0c6b:
            r1 = 0
        L_0x0c6c:
            r5 = 0
        L_0x0c6d:
            r10 = 0
        L_0x0c6e:
            r18 = 0
            goto L_0x16b4
        L_0x0CLASSNAME:
            r14 = r49
            r5 = r59
            r42 = r2
            r41 = r9
            r34 = r11
            r39 = r12
            r40 = r13
            r33 = r15
            r9 = r22
            r2 = r54
            r3 = r1
            r11 = r6
            java.lang.String r1 = "SELECT COUNT(*) FROM messages_v2 WHERE uid = %d AND mid <= %d AND out = 0 AND read_state IN(0,2)"
            java.lang.String r4 = "SELECT max(mid), max(date) FROM messages_v2 WHERE uid = %d AND out = 0 AND read_state IN(0,2) AND mid < 0"
            java.lang.String r6 = "SELECT min(mid) FROM messages_v2 WHERE uid = %d AND mid < 0"
            r12 = 3
            if (r5 != r12) goto L_0x0db0
            if (r57 != 0) goto L_0x0db0
            org.telegram.SQLite.SQLiteDatabase r12 = r14.database     // Catch:{ Exception -> 0x0da6, all -> 0x01b7 }
            java.util.Locale r13 = java.util.Locale.US     // Catch:{ Exception -> 0x0da6, all -> 0x01b7 }
            r15 = 1
            java.lang.Object[] r7 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x0da6, all -> 0x01b7 }
            java.lang.Long r8 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x0da6, all -> 0x01b7 }
            r15 = 0
            r7[r15] = r8     // Catch:{ Exception -> 0x0da6, all -> 0x01b7 }
            java.lang.String r7 = java.lang.String.format(r13, r6, r7)     // Catch:{ Exception -> 0x0da6, all -> 0x01b7 }
            java.lang.Object[] r8 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x0da6, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r7 = r12.queryFinalized(r7, r8)     // Catch:{ Exception -> 0x0da6, all -> 0x01b7 }
            boolean r8 = r7.next()     // Catch:{ Exception -> 0x0d9b, all -> 0x0d96 }
            if (r8 == 0) goto L_0x0cb6
            int r8 = r7.intValue(r15)     // Catch:{ Exception -> 0x0d9b, all -> 0x0d96 }
            goto L_0x0cb7
        L_0x0cb6:
            r8 = 0
        L_0x0cb7:
            r7.dispose()     // Catch:{ Exception -> 0x0d81, all -> 0x0d96 }
            org.telegram.SQLite.SQLiteDatabase r7 = r14.database     // Catch:{ Exception -> 0x0d73, all -> 0x01b7 }
            r12 = 1
            java.lang.Object[] r15 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x0d73, all -> 0x01b7 }
            java.lang.Long r12 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x0d73, all -> 0x01b7 }
            r22 = r8
            r8 = 0
            r15[r8] = r12     // Catch:{ Exception -> 0x0d71, all -> 0x01b7 }
            java.lang.String r12 = java.lang.String.format(r13, r4, r15)     // Catch:{ Exception -> 0x0d71, all -> 0x01b7 }
            java.lang.Object[] r15 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x0d71, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r7 = r7.queryFinalized(r12, r15)     // Catch:{ Exception -> 0x0d71, all -> 0x01b7 }
            boolean r12 = r7.next()     // Catch:{ Exception -> 0x0d6f, all -> 0x0d96 }
            if (r12 == 0) goto L_0x0ce2
            int r12 = r7.intValue(r8)     // Catch:{ Exception -> 0x0d6f, all -> 0x0d96 }
            r8 = 1
            int r15 = r7.intValue(r8)     // Catch:{ Exception -> 0x0d6f, all -> 0x0d96 }
            goto L_0x0ce4
        L_0x0ce2:
            r12 = 0
            r15 = 0
        L_0x0ce4:
            r7.dispose()     // Catch:{ Exception -> 0x0d56, all -> 0x0d96 }
            if (r12 == 0) goto L_0x0d4c
            org.telegram.SQLite.SQLiteDatabase r7 = r14.database     // Catch:{ Exception -> 0x0d37, all -> 0x01b7 }
            r32 = r15
            r8 = 2
            java.lang.Object[] r15 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x0d35, all -> 0x01b7 }
            java.lang.Long r8 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x0d35, all -> 0x01b7 }
            r35 = r11
            r11 = 0
            r15[r11] = r8     // Catch:{ Exception -> 0x0d35, all -> 0x01b7 }
            java.lang.Integer r8 = java.lang.Integer.valueOf(r12)     // Catch:{ Exception -> 0x0d35, all -> 0x01b7 }
            r18 = 1
            r15[r18] = r8     // Catch:{ Exception -> 0x0d35, all -> 0x01b7 }
            java.lang.String r8 = java.lang.String.format(r13, r1, r15)     // Catch:{ Exception -> 0x0d35, all -> 0x01b7 }
            java.lang.Object[] r13 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x0d35, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r7 = r7.queryFinalized(r8, r13)     // Catch:{ Exception -> 0x0d35, all -> 0x01b7 }
            boolean r8 = r7.next()     // Catch:{ Exception -> 0x0d29, all -> 0x0d96 }
            if (r8 == 0) goto L_0x0d16
            int r8 = r7.intValue(r11)     // Catch:{ Exception -> 0x0d29, all -> 0x0d96 }
            goto L_0x0d17
        L_0x0d16:
            r8 = 0
        L_0x0d17:
            r7.dispose()     // Catch:{ Exception -> 0x0d1e, all -> 0x0d96 }
            r11 = r12
            r7 = 3
            goto L_0x0db7
        L_0x0d1e:
            r0 = move-exception
            r13 = r55
            r4 = r0
            r1 = r7
            r22 = r8
            r35 = r12
            goto L_0x1029
        L_0x0d29:
            r0 = move-exception
            r13 = r55
            r4 = r0
            r1 = r7
            r35 = r12
            r37 = r32
            r3 = r41
            goto L_0x0d44
        L_0x0d35:
            r0 = move-exception
            goto L_0x0d3a
        L_0x0d37:
            r0 = move-exception
            r32 = r15
        L_0x0d3a:
            r13 = r55
            r4 = r0
            r35 = r12
            r37 = r32
            r3 = r41
            r1 = 0
        L_0x0d44:
            r5 = 1
            r10 = 0
            r18 = 0
            r22 = 0
            goto L_0x0e1d
        L_0x0d4c:
            r35 = r11
            r32 = r15
            r11 = r22
            r7 = 3
            r8 = 0
            goto L_0x0db7
        L_0x0d56:
            r0 = move-exception
            r32 = r15
            r11 = r50
            r13 = r55
            r4 = r0
            r1 = r7
            r35 = r22
            r37 = r32
            r3 = r41
            r5 = 1
            r10 = 0
            r18 = 0
            r22 = 0
            r36 = 0
            goto L_0x16b2
        L_0x0d6f:
            r0 = move-exception
            goto L_0x0d84
        L_0x0d71:
            r0 = move-exception
            goto L_0x0d76
        L_0x0d73:
            r0 = move-exception
            r22 = r8
        L_0x0d76:
            r11 = r50
            r13 = r55
            r4 = r0
            r35 = r22
            r3 = r41
            r1 = 0
            goto L_0x0d8e
        L_0x0d81:
            r0 = move-exception
            r22 = r8
        L_0x0d84:
            r11 = r50
            r13 = r55
            r4 = r0
            r1 = r7
            r35 = r22
            r3 = r41
        L_0x0d8e:
            r5 = 1
            r10 = 0
            r18 = 0
            r22 = 0
            goto L_0x16ae
        L_0x0d96:
            r0 = move-exception
            r1 = r0
            r12 = r7
            goto L_0x1733
        L_0x0d9b:
            r0 = move-exception
            r11 = r50
            r13 = r55
            r4 = r0
            r1 = r7
            r3 = r41
            goto L_0x01c5
        L_0x0da6:
            r0 = move-exception
            r11 = r50
            r13 = r55
            r4 = r0
            r3 = r41
            goto L_0x01c4
        L_0x0db0:
            r35 = r11
            r7 = 3
            r8 = 0
            r11 = 0
            r32 = 0
        L_0x0db7:
            if (r5 == r7) goto L_0x0ffe
            r7 = 4
            if (r5 != r7) goto L_0x0dbe
            goto L_0x0ffe
        L_0x0dbe:
            r7 = 1
            if (r5 != r7) goto L_0x0e25
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            java.lang.StringBuilder r6 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            r6.<init>()     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            r6.append(r10)     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            r6.append(r3)     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            java.lang.String r3 = " WHERE m.uid = %d AND m.mid < %d ORDER BY m.mid DESC LIMIT %d"
            r6.append(r3)     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            java.lang.String r3 = r6.toString()     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            r6 = 3
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            java.lang.Long r6 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            r9 = 0
            r7[r9] = r6     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r55)     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            r9 = 1
            r7[r9] = r6     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r54)     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            r9 = 2
            r7[r9] = r6     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            java.lang.String r3 = java.lang.String.format(r4, r3, r7)     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            r4 = 0
            java.lang.Object[] r6 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r3, r6)     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
        L_0x0dfc:
            r9 = r55
            r3 = r1
            r22 = r8
            r35 = r11
            r4 = 0
            r6 = 0
        L_0x0e05:
            r7 = 0
            r11 = 0
            r45 = 1
        L_0x0e09:
            r1 = r9
            goto L_0x1097
        L_0x0e0c:
            r0 = move-exception
            r13 = r55
            r4 = r0
            r22 = r8
        L_0x0e12:
            r35 = r11
            r37 = r32
            r3 = r41
            r1 = 0
        L_0x0e19:
            r5 = 1
            r10 = 0
        L_0x0e1b:
            r18 = 0
        L_0x0e1d:
            r36 = 0
            r38 = 0
            r11 = r50
            goto L_0x16b4
        L_0x0e25:
            if (r57 == 0) goto L_0x0ea8
            if (r55 == 0) goto L_0x0e65
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            java.lang.StringBuilder r6 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            r6.<init>()     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            r6.append(r10)     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            r6.append(r3)     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            java.lang.String r3 = " WHERE m.uid = %d AND m.mid > %d ORDER BY m.mid ASC LIMIT %d"
            r6.append(r3)     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            java.lang.String r3 = r6.toString()     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            r6 = 3
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            java.lang.Long r6 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            r9 = 0
            r7[r9] = r6     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r55)     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            r9 = 1
            r7[r9] = r6     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r54)     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            r9 = 2
            r7[r9] = r6     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            java.lang.String r3 = java.lang.String.format(r4, r3, r7)     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            r4 = 0
            java.lang.Object[] r6 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r3, r6)     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            goto L_0x0dfc
        L_0x0e65:
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            java.lang.StringBuilder r6 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            r6.<init>()     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            r6.append(r10)     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            r6.append(r3)     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            java.lang.String r3 = " WHERE m.uid = %d AND m.date <= %d ORDER BY m.mid ASC LIMIT %d,%d"
            r6.append(r3)     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            java.lang.String r3 = r6.toString()     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            r6 = 4
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            java.lang.Long r6 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            r9 = 0
            r7[r9] = r6     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r57)     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            r10 = 1
            r7[r10] = r6     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            r10 = 2
            r7[r10] = r6     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r54)     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            r10 = 3
            r7[r10] = r6     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            java.lang.String r3 = java.lang.String.format(r4, r3, r7)     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            java.lang.Object[] r4 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r3, r4)     // Catch:{ Exception -> 0x0e0c, all -> 0x01b7 }
            goto L_0x0dfc
        L_0x0ea8:
            r7 = 2
            if (r5 != r7) goto L_0x0f7e
            org.telegram.SQLite.SQLiteDatabase r7 = r14.database     // Catch:{ Exception -> 0x0var_, all -> 0x01b7 }
            java.util.Locale r12 = java.util.Locale.US     // Catch:{ Exception -> 0x0var_, all -> 0x01b7 }
            r13 = 1
            java.lang.Object[] r15 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0var_, all -> 0x01b7 }
            java.lang.Long r13 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x0var_, all -> 0x01b7 }
            r22 = r8
            r8 = 0
            r15[r8] = r13     // Catch:{ Exception -> 0x0var_, all -> 0x01b7 }
            java.lang.String r6 = java.lang.String.format(r12, r6, r15)     // Catch:{ Exception -> 0x0var_, all -> 0x01b7 }
            java.lang.Object[] r13 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x0var_, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r6 = r7.queryFinalized(r6, r13)     // Catch:{ Exception -> 0x0var_, all -> 0x01b7 }
            boolean r7 = r6.next()     // Catch:{ Exception -> 0x0f6d, all -> 0x0var_ }
            if (r7 == 0) goto L_0x0ed0
            int r7 = r6.intValue(r8)     // Catch:{ Exception -> 0x0f6d, all -> 0x0var_ }
            goto L_0x0ed1
        L_0x0ed0:
            r7 = 0
        L_0x0ed1:
            r6.dispose()     // Catch:{ Exception -> 0x0f5a, all -> 0x0var_ }
            org.telegram.SQLite.SQLiteDatabase r6 = r14.database     // Catch:{ Exception -> 0x0var_, all -> 0x01b7 }
            r8 = 1
            java.lang.Object[] r13 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x0var_, all -> 0x01b7 }
            java.lang.Long r8 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x0var_, all -> 0x01b7 }
            r15 = 0
            r13[r15] = r8     // Catch:{ Exception -> 0x0var_, all -> 0x01b7 }
            java.lang.String r4 = java.lang.String.format(r12, r4, r13)     // Catch:{ Exception -> 0x0var_, all -> 0x01b7 }
            java.lang.Object[] r8 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x0var_, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r4 = r6.queryFinalized(r4, r8)     // Catch:{ Exception -> 0x0var_, all -> 0x01b7 }
            boolean r6 = r4.next()     // Catch:{ Exception -> 0x0f3d, all -> 0x0CLASSNAME }
            if (r6 == 0) goto L_0x0ef9
            int r11 = r4.intValue(r15)     // Catch:{ Exception -> 0x0f3d, all -> 0x0CLASSNAME }
            r6 = 1
            int r32 = r4.intValue(r6)     // Catch:{ Exception -> 0x0f3d, all -> 0x0CLASSNAME }
        L_0x0ef9:
            r4.dispose()     // Catch:{ Exception -> 0x0f3d, all -> 0x0CLASSNAME }
            if (r11 == 0) goto L_0x0f3a
            org.telegram.SQLite.SQLiteDatabase r4 = r14.database     // Catch:{ Exception -> 0x0var_, all -> 0x01b7 }
            r6 = 2
            java.lang.Object[] r8 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0var_, all -> 0x01b7 }
            java.lang.Long r6 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x0var_, all -> 0x01b7 }
            r13 = 0
            r8[r13] = r6     // Catch:{ Exception -> 0x0var_, all -> 0x01b7 }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r11)     // Catch:{ Exception -> 0x0var_, all -> 0x01b7 }
            r15 = 1
            r8[r15] = r6     // Catch:{ Exception -> 0x0var_, all -> 0x01b7 }
            java.lang.String r1 = java.lang.String.format(r12, r1, r8)     // Catch:{ Exception -> 0x0var_, all -> 0x01b7 }
            java.lang.Object[] r6 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0var_, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r1 = r4.queryFinalized(r1, r6)     // Catch:{ Exception -> 0x0var_, all -> 0x01b7 }
            boolean r4 = r1.next()     // Catch:{ Exception -> 0x0var_ }
            if (r4 == 0) goto L_0x0var_
            int r8 = r1.intValue(r13)     // Catch:{ Exception -> 0x0var_ }
            goto L_0x0var_
        L_0x0var_:
            r8 = r22
        L_0x0var_:
            r1.dispose()     // Catch:{ Exception -> 0x0f2d }
            goto L_0x0var_
        L_0x0f2d:
            r0 = move-exception
            r13 = r55
            r4 = r0
            r10 = r7
            r22 = r8
            goto L_0x0var_
        L_0x0var_:
            r0 = move-exception
            r13 = r55
            r4 = r0
            goto L_0x0f5f
        L_0x0f3a:
            r8 = r22
            goto L_0x0var_
        L_0x0f3d:
            r0 = move-exception
            r13 = r55
            r1 = r4
            r10 = r7
            r35 = r11
            r37 = r32
            r3 = r41
            r5 = 1
            r18 = 0
            r36 = 0
            r38 = 0
            r11 = r50
            goto L_0x167d
        L_0x0var_:
            r0 = move-exception
            r13 = r55
            r4 = r0
            r10 = r7
            goto L_0x0ff4
        L_0x0f5a:
            r0 = move-exception
            r13 = r55
            r4 = r0
            r1 = r6
        L_0x0f5f:
            r10 = r7
        L_0x0var_:
            r35 = r11
            r37 = r32
            r3 = r41
            goto L_0x0ffb
        L_0x0var_:
            r0 = move-exception
            r1 = r0
            r12 = r6
            goto L_0x1733
        L_0x0f6d:
            r0 = move-exception
            r13 = r55
            r4 = r0
            r1 = r6
            goto L_0x1027
        L_0x0var_:
            r0 = move-exception
            goto L_0x0var_
        L_0x0var_:
            r0 = move-exception
            r22 = r8
        L_0x0var_:
            r13 = r55
            r4 = r0
            goto L_0x0e12
        L_0x0f7e:
            r22 = r8
            r7 = 0
        L_0x0var_:
            if (r2 > r8) goto L_0x0var_
            if (r8 >= r9) goto L_0x0var_
            goto L_0x0var_
        L_0x0var_:
            int r1 = r8 - r2
            int r2 = r2 + 10
            r48 = r2
            r2 = r1
            r1 = r48
            goto L_0x0f9c
        L_0x0var_:
            int r1 = r8 + 10
            int r1 = java.lang.Math.max(r2, r1)     // Catch:{ Exception -> 0x0fed, all -> 0x01b7 }
            r2 = 0
            if (r8 >= r9) goto L_0x0f9c
            r7 = 0
            r8 = 0
            r11 = 0
        L_0x0f9c:
            org.telegram.SQLite.SQLiteDatabase r4 = r14.database     // Catch:{ Exception -> 0x0fe7, all -> 0x01b7 }
            java.util.Locale r6 = java.util.Locale.US     // Catch:{ Exception -> 0x0fe7, all -> 0x01b7 }
            java.lang.StringBuilder r9 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0fe7, all -> 0x01b7 }
            r9.<init>()     // Catch:{ Exception -> 0x0fe7, all -> 0x01b7 }
            r9.append(r10)     // Catch:{ Exception -> 0x0fe7, all -> 0x01b7 }
            r9.append(r3)     // Catch:{ Exception -> 0x0fe7, all -> 0x01b7 }
            java.lang.String r3 = " WHERE m.uid = %d ORDER BY m.mid ASC LIMIT %d,%d"
            r9.append(r3)     // Catch:{ Exception -> 0x0fe7, all -> 0x01b7 }
            java.lang.String r3 = r9.toString()     // Catch:{ Exception -> 0x0fe7, all -> 0x01b7 }
            r9 = 3
            java.lang.Object[] r10 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x0fe7, all -> 0x01b7 }
            java.lang.Long r9 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x0fe7, all -> 0x01b7 }
            r12 = 0
            r10[r12] = r9     // Catch:{ Exception -> 0x0fe7, all -> 0x01b7 }
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x0fe7, all -> 0x01b7 }
            r9 = 1
            r10[r9] = r2     // Catch:{ Exception -> 0x0fe7, all -> 0x01b7 }
            java.lang.Integer r2 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x0fe7, all -> 0x01b7 }
            r9 = 2
            r10[r9] = r2     // Catch:{ Exception -> 0x0fe7, all -> 0x01b7 }
            java.lang.String r2 = java.lang.String.format(r6, r3, r10)     // Catch:{ Exception -> 0x0fe7, all -> 0x01b7 }
            r3 = 0
            java.lang.Object[] r6 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x0fe7, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r2 = r4.queryFinalized(r2, r6)     // Catch:{ Exception -> 0x0fe7, all -> 0x01b7 }
            r9 = r55
            r3 = r2
            r6 = r7
            r22 = r8
            r35 = r11
            r4 = 0
            r7 = 0
            r11 = 0
            r45 = 1
            r2 = r1
            goto L_0x0e09
        L_0x0fe7:
            r0 = move-exception
            r13 = r55
            r4 = r0
            r2 = r1
            goto L_0x0ff1
        L_0x0fed:
            r0 = move-exception
            r13 = r55
            r4 = r0
        L_0x0ff1:
            r10 = r7
            r22 = r8
        L_0x0ff4:
            r35 = r11
            r37 = r32
            r3 = r41
            r1 = 0
        L_0x0ffb:
            r5 = 1
            goto L_0x0e1b
        L_0x0ffe:
            r22 = r8
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x1668, all -> 0x01b7 }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x1668, all -> 0x01b7 }
            r7 = 1
            java.lang.Object[] r8 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x1668, all -> 0x01b7 }
            java.lang.Long r7 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x1668, all -> 0x01b7 }
            r9 = 0
            r8[r9] = r7     // Catch:{ Exception -> 0x1668, all -> 0x01b7 }
            java.lang.String r6 = java.lang.String.format(r4, r6, r8)     // Catch:{ Exception -> 0x1668, all -> 0x01b7 }
            java.lang.Object[] r7 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x1668, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r6, r7)     // Catch:{ Exception -> 0x1668, all -> 0x01b7 }
            boolean r6 = r1.next()     // Catch:{ Exception -> 0x165b }
            if (r6 == 0) goto L_0x102f
            int r6 = r1.intValue(r9)     // Catch:{ Exception -> 0x1023 }
            goto L_0x1030
        L_0x1023:
            r0 = move-exception
            r13 = r55
            r4 = r0
        L_0x1027:
            r35 = r11
        L_0x1029:
            r37 = r32
            r3 = r41
            goto L_0x0e19
        L_0x102f:
            r6 = 0
        L_0x1030:
            r1.dispose()     // Catch:{ Exception -> 0x164c }
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x163d, all -> 0x01b7 }
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x163d, all -> 0x01b7 }
            r7.<init>()     // Catch:{ Exception -> 0x163d, all -> 0x01b7 }
            r8 = r35
            r7.append(r8)     // Catch:{ Exception -> 0x163d, all -> 0x01b7 }
            r7.append(r3)     // Catch:{ Exception -> 0x163d, all -> 0x01b7 }
            java.lang.String r8 = " WHERE m.uid = %d AND m.mid <= %d ORDER BY m.mid DESC LIMIT %d) UNION SELECT * FROM ("
            r7.append(r8)     // Catch:{ Exception -> 0x163d, all -> 0x01b7 }
            r7.append(r3)     // Catch:{ Exception -> 0x163d, all -> 0x01b7 }
            java.lang.String r3 = " WHERE m.uid = %d AND m.mid > %d ORDER BY m.mid ASC LIMIT %d)"
            r7.append(r3)     // Catch:{ Exception -> 0x163d, all -> 0x01b7 }
            java.lang.String r3 = r7.toString()     // Catch:{ Exception -> 0x163d, all -> 0x01b7 }
            r7 = 6
            java.lang.Object[] r8 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x163d, all -> 0x01b7 }
            java.lang.Long r7 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x163d, all -> 0x01b7 }
            r9 = 0
            r8[r9] = r7     // Catch:{ Exception -> 0x163d, all -> 0x01b7 }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r55)     // Catch:{ Exception -> 0x163d, all -> 0x01b7 }
            r9 = 1
            r8[r9] = r7     // Catch:{ Exception -> 0x163d, all -> 0x01b7 }
            int r7 = r2 / 2
            java.lang.Integer r7 = java.lang.Integer.valueOf(r7)     // Catch:{ Exception -> 0x163d, all -> 0x01b7 }
            r9 = 2
            r8[r9] = r7     // Catch:{ Exception -> 0x163d, all -> 0x01b7 }
            java.lang.Long r7 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x163d, all -> 0x01b7 }
            r9 = 3
            r8[r9] = r7     // Catch:{ Exception -> 0x163d, all -> 0x01b7 }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r55)     // Catch:{ Exception -> 0x163d, all -> 0x01b7 }
            r9 = 4
            r8[r9] = r7     // Catch:{ Exception -> 0x163d, all -> 0x01b7 }
            int r7 = r2 / 2
            java.lang.Integer r7 = java.lang.Integer.valueOf(r7)     // Catch:{ Exception -> 0x163d, all -> 0x01b7 }
            r9 = 5
            r8[r9] = r7     // Catch:{ Exception -> 0x163d, all -> 0x01b7 }
            java.lang.String r3 = java.lang.String.format(r4, r3, r8)     // Catch:{ Exception -> 0x163d, all -> 0x01b7 }
            r4 = 0
            java.lang.Object[] r7 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x163d, all -> 0x01b7 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r3, r7)     // Catch:{ Exception -> 0x163d, all -> 0x01b7 }
            r9 = r55
            r3 = r1
            r35 = r11
            r4 = 0
            goto L_0x0e05
        L_0x1097:
            r8 = 2147483647(0x7fffffff, float:NaN)
            r10 = -2147483648(0xfffffffvar_, float:-0.0)
            if (r3 == 0) goto L_0x1399
            r12 = 0
            r13 = 0
        L_0x10a0:
            boolean r15 = r3.next()     // Catch:{ Exception -> 0x137b, all -> 0x1376 }
            if (r15 == 0) goto L_0x1343
            int r12 = r12 + 1
            if (r63 != 0) goto L_0x10ab
            goto L_0x10a0
        L_0x10ab:
            r54 = r1
            r15 = 1
            org.telegram.tgnet.NativeByteBuffer r1 = r3.byteBufferValue(r15)     // Catch:{ Exception -> 0x1326, all -> 0x1376 }
            if (r1 == 0) goto L_0x12f1
            r55 = r2
            r15 = 0
            int r2 = r1.readInt32(r15)     // Catch:{ Exception -> 0x12e4, all -> 0x1376 }
            org.telegram.tgnet.TLRPC$Message r2 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r1, r2, r15)     // Catch:{ Exception -> 0x12e4, all -> 0x1376 }
            r57 = r6
            r15 = 2
            int r6 = r3.intValue(r15)     // Catch:{ Exception -> 0x12e2, all -> 0x1376 }
            r2.send_state = r6     // Catch:{ Exception -> 0x12e2, all -> 0x1376 }
            r15 = r11
            r36 = r12
            r6 = 3
            long r11 = r3.longValue(r6)     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            int r6 = (int) r11     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            r2.id = r6     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            r37 = -4294967296(0xfffffffvar_, double:NaN)
            long r46 = r11 & r37
            int r44 = (r46 > r37 ? 1 : (r46 == r37 ? 0 : -1))
            if (r44 != 0) goto L_0x10ef
            if (r6 <= 0) goto L_0x10ef
            if (r13 != 0) goto L_0x10e8
            java.util.ArrayList r6 = new java.util.ArrayList     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            r6.<init>()     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            r13 = r6
        L_0x10e8:
            java.lang.Long r6 = java.lang.Long.valueOf(r11)     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            r13.add(r6)     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
        L_0x10ef:
            int r6 = r2.id     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            if (r6 <= 0) goto L_0x10fd
            int r6 = r2.send_state     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            if (r6 == 0) goto L_0x10fd
            r11 = 3
            if (r6 == r11) goto L_0x10fd
            r6 = 0
            r2.send_state = r6     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
        L_0x10fd:
            r11 = r50
            int r6 = (r11 > r42 ? 1 : (r11 == r42 ? 0 : -1))
            if (r6 != 0) goto L_0x110a
            r6 = 1
            r2.out = r6     // Catch:{ Exception -> 0x1107, all -> 0x1376 }
            goto L_0x110a
        L_0x1107:
            r0 = move-exception
            goto L_0x12ec
        L_0x110a:
            r37 = r7
            r6 = r42
            r2.readAttachPath(r1, r6)     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            r1.reuse()     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            r38 = r13
            r1 = 0
            int r13 = r3.intValue(r1)     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            org.telegram.messenger.MessageObject.setUnreadFlags(r2, r13)     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            int r1 = r2.id     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            if (r1 <= 0) goto L_0x112c
            int r8 = java.lang.Math.min(r1, r8)     // Catch:{ Exception -> 0x1107, all -> 0x1376 }
            int r1 = r2.id     // Catch:{ Exception -> 0x1107, all -> 0x1376 }
            int r10 = java.lang.Math.max(r1, r10)     // Catch:{ Exception -> 0x1107, all -> 0x1376 }
        L_0x112c:
            r1 = 4
            int r13 = r3.intValue(r1)     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            r2.date = r13     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            r2.dialog_id = r11     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            int r1 = r2.flags     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            r1 = r1 & 1024(0x400, float:1.435E-42)
            if (r1 == 0) goto L_0x114b
            r1 = 7
            int r13 = r3.intValue(r1)     // Catch:{ Exception -> 0x1107, all -> 0x1376 }
            r2.views = r13     // Catch:{ Exception -> 0x1107, all -> 0x1376 }
            r13 = 11
            int r13 = r3.intValue(r13)     // Catch:{ Exception -> 0x1107, all -> 0x1376 }
            r2.forwards = r13     // Catch:{ Exception -> 0x1107, all -> 0x1376 }
            goto L_0x114c
        L_0x114b:
            r1 = 7
        L_0x114c:
            r13 = 12
            org.telegram.tgnet.NativeByteBuffer r13 = r3.byteBufferValue(r13)     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            if (r13 == 0) goto L_0x1167
            r42 = r8
            r1 = 0
            int r8 = r13.readInt32(r1)     // Catch:{ Exception -> 0x1107, all -> 0x1376 }
            org.telegram.tgnet.TLRPC$MessageReplies r8 = org.telegram.tgnet.TLRPC$MessageReplies.TLdeserialize(r13, r8, r1)     // Catch:{ Exception -> 0x1107, all -> 0x1376 }
            if (r8 == 0) goto L_0x1163
            r2.replies = r8     // Catch:{ Exception -> 0x1107, all -> 0x1376 }
        L_0x1163:
            r13.reuse()     // Catch:{ Exception -> 0x1107, all -> 0x1376 }
            goto L_0x1169
        L_0x1167:
            r42 = r8
        L_0x1169:
            boolean r1 = org.telegram.messenger.DialogObject.isEncryptedDialog(r50)     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            if (r1 != 0) goto L_0x117b
            int r1 = r2.ttl     // Catch:{ Exception -> 0x1107, all -> 0x1376 }
            if (r1 != 0) goto L_0x117b
            r1 = 8
            int r1 = r3.intValue(r1)     // Catch:{ Exception -> 0x1107, all -> 0x1376 }
            r2.ttl = r1     // Catch:{ Exception -> 0x1107, all -> 0x1376 }
        L_0x117b:
            r1 = 9
            int r1 = r3.intValue(r1)     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            if (r1 == 0) goto L_0x1186
            r1 = 1
            r2.mentioned = r1     // Catch:{ Exception -> 0x1107, all -> 0x1376 }
        L_0x1186:
            r1 = 10
            int r8 = r3.intValue(r1)     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            r13 = r8 & 1
            if (r13 == 0) goto L_0x1194
            r13 = 0
            r2.stickerVerified = r13     // Catch:{ Exception -> 0x1107, all -> 0x1376 }
            goto L_0x119b
        L_0x1194:
            r8 = r8 & 2
            if (r8 == 0) goto L_0x119b
            r8 = 2
            r2.stickerVerified = r8     // Catch:{ Exception -> 0x1107, all -> 0x1376 }
        L_0x119b:
            r8 = 13
            org.telegram.tgnet.NativeByteBuffer r8 = r3.byteBufferValue(r8)     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            if (r8 == 0) goto L_0x11a9
            org.telegram.messenger.MessageCustomParamsHelper.readLocalParams(r2, r8)     // Catch:{ Exception -> 0x1107, all -> 0x1376 }
            r8.reuse()     // Catch:{ Exception -> 0x1107, all -> 0x1376 }
        L_0x11a9:
            r8 = r41
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r13 = r8.messages     // Catch:{ Exception -> 0x12cd, all -> 0x1376 }
            r13.add(r2)     // Catch:{ Exception -> 0x12cd, all -> 0x1376 }
            r41 = r8
            r17 = r10
            r8 = r33
            r13 = r39
            r10 = r40
            addUsersAndChatsFromMessage(r2, r13, r8, r10)     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r1 = r2.reply_to     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            if (r1 == 0) goto L_0x1259
            int r11 = r1.reply_to_msg_id     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            if (r11 != 0) goto L_0x11cd
            long r11 = r1.reply_to_random_id     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            r25 = 0
            int r1 = (r11 > r25 ? 1 : (r11 == r25 ? 0 : -1))
            if (r1 == 0) goto L_0x1259
        L_0x11cd:
            r1 = 6
            boolean r11 = r3.isNull(r1)     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            if (r11 != 0) goto L_0x11f2
            org.telegram.tgnet.NativeByteBuffer r11 = r3.byteBufferValue(r1)     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            if (r11 == 0) goto L_0x11f2
            r12 = 0
            int r1 = r11.readInt32(r12)     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            org.telegram.tgnet.TLRPC$Message r1 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r11, r1, r12)     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            r2.replyMessage = r1     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            r1.readAttachPath(r11, r6)     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            r11.reuse()     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            org.telegram.tgnet.TLRPC$Message r1 = r2.replyMessage     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            if (r1 == 0) goto L_0x11f2
            addUsersAndChatsFromMessage(r1, r13, r8, r10)     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
        L_0x11f2:
            org.telegram.tgnet.TLRPC$Message r1 = r2.replyMessage     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            if (r1 != 0) goto L_0x1259
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r1 = r2.reply_to     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            int r11 = r1.reply_to_msg_id     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            if (r11 == 0) goto L_0x120c
            r12 = r23
            r11 = r30
            addReplyMessages(r2, r11, r12)     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            r43 = r6
            r40 = r10
            r30 = r11
            r23 = r12
            goto L_0x125d
        L_0x120c:
            r12 = r23
            r11 = r30
            r23 = r12
            r39 = r13
            long r12 = r1.reply_to_random_id     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            r1 = r24
            java.lang.Object r12 = r1.get(r12)     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            java.util.ArrayList r12 = (java.util.ArrayList) r12     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            if (r12 != 0) goto L_0x1231
            java.util.ArrayList r12 = new java.util.ArrayList     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            r12.<init>()     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r13 = r2.reply_to     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            r40 = r10
            r30 = r11
            long r10 = r13.reply_to_random_id     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            r1.put(r10, r12)     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            goto L_0x1235
        L_0x1231:
            r40 = r10
            r30 = r11
        L_0x1235:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r10 = r2.reply_to     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            long r10 = r10.reply_to_random_id     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            java.lang.Long r10 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            r11 = r34
            boolean r10 = r11.contains(r10)     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            if (r10 != 0) goto L_0x1253
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r10 = r2.reply_to     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            r43 = r6
            long r6 = r10.reply_to_random_id     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            java.lang.Long r6 = java.lang.Long.valueOf(r6)     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            r11.add(r6)     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            goto L_0x1255
        L_0x1253:
            r43 = r6
        L_0x1255:
            r12.add(r2)     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            goto L_0x1263
        L_0x1259:
            r43 = r6
            r40 = r10
        L_0x125d:
            r39 = r13
            r1 = r24
            r11 = r34
        L_0x1263:
            boolean r6 = org.telegram.messenger.DialogObject.isEncryptedDialog(r50)     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            if (r6 == 0) goto L_0x1277
            r6 = 5
            boolean r7 = r3.isNull(r6)     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            if (r7 != 0) goto L_0x1278
            long r12 = r3.longValue(r6)     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            r2.random_id = r12     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            goto L_0x1278
        L_0x1277:
            r6 = 5
        L_0x1278:
            boolean r7 = org.telegram.messenger.MessageObject.isSecretMedia(r2)     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            if (r7 == 0) goto L_0x12c2
            org.telegram.SQLite.SQLiteDatabase r7 = r14.database     // Catch:{ Exception -> 0x12ba, all -> 0x1376 }
            java.util.Locale r10 = java.util.Locale.US     // Catch:{ Exception -> 0x12ba, all -> 0x1376 }
            java.lang.String r12 = "SELECT date FROM enc_tasks_v4 WHERE mid = %d AND uid = %d AND media = 1"
            r13 = 2
            java.lang.Object[] r6 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x12ba, all -> 0x1376 }
            int r13 = r2.id     // Catch:{ Exception -> 0x12ba, all -> 0x1376 }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r13)     // Catch:{ Exception -> 0x12ba, all -> 0x1376 }
            r24 = r11
            r11 = 0
            r6[r11] = r13     // Catch:{ Exception -> 0x12b8, all -> 0x1376 }
            long r46 = org.telegram.messenger.MessageObject.getDialogId(r2)     // Catch:{ Exception -> 0x12b8, all -> 0x1376 }
            java.lang.Long r13 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x12b8, all -> 0x1376 }
            r18 = 1
            r6[r18] = r13     // Catch:{ Exception -> 0x12b8, all -> 0x1376 }
            java.lang.String r6 = java.lang.String.format(r10, r12, r6)     // Catch:{ Exception -> 0x12b8, all -> 0x1376 }
            java.lang.Object[] r10 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x12b8, all -> 0x1376 }
            org.telegram.SQLite.SQLiteCursor r6 = r7.queryFinalized(r6, r10)     // Catch:{ Exception -> 0x12b8, all -> 0x1376 }
            boolean r7 = r6.next()     // Catch:{ Exception -> 0x12b8, all -> 0x1376 }
            if (r7 == 0) goto L_0x12b4
            int r7 = r6.intValue(r11)     // Catch:{ Exception -> 0x12b8, all -> 0x1376 }
            r2.destroyTime = r7     // Catch:{ Exception -> 0x12b8, all -> 0x1376 }
        L_0x12b4:
            r6.dispose()     // Catch:{ Exception -> 0x12b8, all -> 0x1376 }
            goto L_0x12c4
        L_0x12b8:
            r0 = move-exception
            goto L_0x12bd
        L_0x12ba:
            r0 = move-exception
            r24 = r11
        L_0x12bd:
            r2 = r0
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r2)     // Catch:{ Exception -> 0x12e0, all -> 0x1376 }
            goto L_0x12c4
        L_0x12c2:
            r24 = r11
        L_0x12c4:
            r13 = r38
            r10 = r39
            r7 = r41
            r2 = r42
            goto L_0x130a
        L_0x12cd:
            r0 = move-exception
            r11 = r50
            r13 = r54
            r2 = r55
            r10 = r57
            r1 = r3
            r3 = r8
            r38 = r15
            r37 = r32
            r18 = r36
            goto L_0x133d
        L_0x12e0:
            r0 = move-exception
            goto L_0x12ea
        L_0x12e2:
            r0 = move-exception
            goto L_0x12e7
        L_0x12e4:
            r0 = move-exception
            r57 = r6
        L_0x12e7:
            r15 = r11
            r36 = r12
        L_0x12ea:
            r11 = r50
        L_0x12ec:
            r13 = r54
            r2 = r55
            goto L_0x1332
        L_0x12f1:
            r55 = r2
            r57 = r6
            r37 = r7
            r2 = r8
            r6 = r10
            r15 = r11
            r36 = r12
            r1 = r24
            r8 = r33
            r24 = r34
            r10 = r39
            r7 = r41
            r43 = r42
            r17 = r6
        L_0x130a:
            r6 = r57
            r41 = r7
            r33 = r8
            r39 = r10
            r11 = r15
            r10 = r17
            r34 = r24
            r12 = r36
            r7 = r37
            r42 = r43
            r24 = r1
            r8 = r2
            r1 = r54
            r2 = r55
            goto L_0x10a0
        L_0x1326:
            r0 = move-exception
            r55 = r2
            r57 = r6
            r15 = r11
            r36 = r12
            r11 = r50
            r13 = r54
        L_0x1332:
            r10 = r57
            r1 = r3
            r38 = r15
            r37 = r32
            r18 = r36
            r3 = r41
        L_0x133d:
            r5 = r45
            r36 = r4
            goto L_0x167d
        L_0x1343:
            r54 = r1
            r55 = r2
            r57 = r6
            r37 = r7
            r2 = r8
            r6 = r10
            r15 = r11
            r13 = r12
            r17 = r23
            r1 = r24
            r8 = r33
            r24 = r34
            r10 = r39
            r7 = r41
            r43 = r42
            r11 = r50
            r3.dispose()     // Catch:{ Exception -> 0x1366, all -> 0x1376 }
            r23 = 0
            goto L_0x13ba
        L_0x1366:
            r0 = move-exception
            r2 = r55
            r10 = r57
            r1 = r3
            r36 = r4
            r3 = r7
            r18 = r13
            r38 = r15
            r37 = r32
            goto L_0x1393
        L_0x1376:
            r0 = move-exception
            r1 = r0
            r12 = r3
            goto L_0x1733
        L_0x137b:
            r0 = move-exception
            r54 = r1
            r55 = r2
            r57 = r6
            r15 = r11
            r13 = r12
            r11 = r50
            r10 = r57
            r1 = r3
            r36 = r4
            r18 = r13
            r38 = r15
            r37 = r32
            r3 = r41
        L_0x1393:
            r5 = r45
            r13 = r54
            goto L_0x167d
        L_0x1399:
            r54 = r1
            r55 = r2
            r57 = r6
            r37 = r7
            r15 = r11
            r17 = r23
            r1 = r24
            r8 = r33
            r24 = r34
            r10 = r39
            r7 = r41
            r43 = r42
            r2 = 2147483647(0x7fffffff, float:NaN)
            r6 = -2147483648(0xfffffffvar_, float:-0.0)
            r11 = r50
            r23 = r3
            r13 = 0
        L_0x13ba:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r3 = r7.messages     // Catch:{ Exception -> 0x1626, all -> 0x1606 }
            r27 = r13
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda200 r13 = org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda200.INSTANCE     // Catch:{ Exception -> 0x1623, all -> 0x1606 }
            java.util.Collections.sort(r3, r13)     // Catch:{ Exception -> 0x1623, all -> 0x1606 }
            boolean r3 = org.telegram.messenger.DialogObject.isEncryptedDialog(r50)     // Catch:{ Exception -> 0x1623, all -> 0x1606 }
            if (r3 != 0) goto L_0x1404
            r3 = 3
            if (r5 == r3) goto L_0x13d9
            r3 = 4
            if (r5 == r3) goto L_0x13d9
            r3 = 2
            if (r5 != r3) goto L_0x13d7
            if (r15 == 0) goto L_0x13d7
            if (r37 != 0) goto L_0x13d7
            goto L_0x13d9
        L_0x13d7:
            r2 = 4
            goto L_0x13f1
        L_0x13d9:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r3 = r7.messages     // Catch:{ Exception -> 0x1451, all -> 0x1606 }
            boolean r3 = r3.isEmpty()     // Catch:{ Exception -> 0x1451, all -> 0x1606 }
            if (r3 != 0) goto L_0x13d7
            if (r2 > r9) goto L_0x13e5
            if (r6 >= r9) goto L_0x13d7
        L_0x13e5:
            r10.clear()     // Catch:{ Exception -> 0x1451, all -> 0x1606 }
            r8.clear()     // Catch:{ Exception -> 0x1451, all -> 0x1606 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r2 = r7.messages     // Catch:{ Exception -> 0x1451, all -> 0x1606 }
            r2.clear()     // Catch:{ Exception -> 0x1451, all -> 0x1606 }
            goto L_0x13d7
        L_0x13f1:
            if (r5 == r2) goto L_0x13f6
            r2 = 3
            if (r5 != r2) goto L_0x1404
        L_0x13f6:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r2 = r7.messages     // Catch:{ Exception -> 0x1451, all -> 0x1606 }
            int r2 = r2.size()     // Catch:{ Exception -> 0x1451, all -> 0x1606 }
            r3 = 1
            if (r2 != r3) goto L_0x1404
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r2 = r7.messages     // Catch:{ Exception -> 0x1451, all -> 0x1606 }
            r2.clear()     // Catch:{ Exception -> 0x1451, all -> 0x1606 }
        L_0x1404:
            if (r4 == 0) goto L_0x145d
            org.telegram.SQLite.SQLiteDatabase r2 = r14.database     // Catch:{ Exception -> 0x1451, all -> 0x1606 }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x1451, all -> 0x1606 }
            java.lang.String r6 = "SELECT COUNT(mid) FROM messages_v2 WHERE uid = %d AND mention = 1 AND read_state IN(0, 1)"
            r9 = 1
            java.lang.Object[] r13 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x1451, all -> 0x1606 }
            java.lang.Long r9 = java.lang.Long.valueOf(r50)     // Catch:{ Exception -> 0x1451, all -> 0x1606 }
            r5 = 0
            r13[r5] = r9     // Catch:{ Exception -> 0x1451, all -> 0x1606 }
            java.lang.String r3 = java.lang.String.format(r3, r6, r13)     // Catch:{ Exception -> 0x1451, all -> 0x1606 }
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x1451, all -> 0x1606 }
            org.telegram.SQLite.SQLiteCursor r2 = r2.queryFinalized(r3, r6)     // Catch:{ Exception -> 0x1451, all -> 0x1606 }
            boolean r3 = r2.next()     // Catch:{ Exception -> 0x143c, all -> 0x156a }
            if (r3 == 0) goto L_0x142c
            int r3 = r2.intValue(r5)     // Catch:{ Exception -> 0x143c, all -> 0x156a }
            if (r4 == r3) goto L_0x142e
        L_0x142c:
            int r4 = r4 * -1
        L_0x142e:
            r2.dispose()     // Catch:{ Exception -> 0x143c, all -> 0x156a }
            r13 = r54
            r9 = r55
            r28 = r15
            r31 = r27
            r23 = 0
            goto L_0x1465
        L_0x143c:
            r0 = move-exception
            r13 = r54
            r10 = r57
            r1 = r2
            r36 = r4
            r3 = r7
            r38 = r15
            r18 = r27
            r37 = r32
            r5 = r45
            r2 = r55
            goto L_0x167d
        L_0x1451:
            r0 = move-exception
            r13 = r54
            r2 = r55
            r10 = r57
            r36 = r4
            r3 = r7
            goto L_0x1632
        L_0x145d:
            r13 = r54
            r9 = r55
            r28 = r15
            r31 = r27
        L_0x1465:
            r27 = r57
            r15 = r4
        L_0x1468:
            boolean r2 = r1.isEmpty()     // Catch:{ Exception -> 0x160c, all -> 0x1606 }
            java.lang.String r6 = ","
            if (r2 != 0) goto L_0x158e
            org.telegram.SQLite.SQLiteDatabase r2 = r14.database     // Catch:{ Exception -> 0x1585, all -> 0x1606 }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x1585, all -> 0x1606 }
            java.lang.String r4 = "SELECT m.data, m.mid, m.date, r.random_id FROM randoms_v2 as r INNER JOIN messages_v2 as m ON r.mid = m.mid AND r.uid = m.uid WHERE r.random_id IN(%s)"
            r54 = r9
            r5 = 1
            java.lang.Object[] r9 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x1583, all -> 0x1606 }
            r5 = r24
            java.lang.String r5 = android.text.TextUtils.join(r6, r5)     // Catch:{ Exception -> 0x1583, all -> 0x1606 }
            r55 = r6
            r6 = 0
            r9[r6] = r5     // Catch:{ Exception -> 0x1583, all -> 0x1606 }
            java.lang.String r3 = java.lang.String.format(r3, r4, r9)     // Catch:{ Exception -> 0x1583, all -> 0x1606 }
            java.lang.Object[] r4 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x1583, all -> 0x1606 }
            org.telegram.SQLite.SQLiteCursor r2 = r2.queryFinalized(r3, r4)     // Catch:{ Exception -> 0x1583, all -> 0x1606 }
        L_0x1490:
            boolean r3 = r2.next()     // Catch:{ Exception -> 0x156f, all -> 0x156a }
            if (r3 == 0) goto L_0x14fe
            org.telegram.tgnet.NativeByteBuffer r3 = r2.byteBufferValue(r6)     // Catch:{ Exception -> 0x156f, all -> 0x156a }
            if (r3 == 0) goto L_0x14f0
            int r4 = r3.readInt32(r6)     // Catch:{ Exception -> 0x156f, all -> 0x156a }
            org.telegram.tgnet.TLRPC$Message r4 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r3, r4, r6)     // Catch:{ Exception -> 0x156f, all -> 0x156a }
            r41 = r7
            r6 = r43
            r4.readAttachPath(r3, r6)     // Catch:{ Exception -> 0x155a, all -> 0x156a }
            r3.reuse()     // Catch:{ Exception -> 0x155a, all -> 0x156a }
            r3 = 1
            int r5 = r2.intValue(r3)     // Catch:{ Exception -> 0x155a, all -> 0x156a }
            r4.id = r5     // Catch:{ Exception -> 0x155a, all -> 0x156a }
            r5 = 2
            int r9 = r2.intValue(r5)     // Catch:{ Exception -> 0x155a, all -> 0x156a }
            r4.date = r9     // Catch:{ Exception -> 0x155a, all -> 0x156a }
            r4.dialog_id = r11     // Catch:{ Exception -> 0x155a, all -> 0x156a }
            r9 = r40
            addUsersAndChatsFromMessage(r4, r10, r8, r9)     // Catch:{ Exception -> 0x155a, all -> 0x156a }
            r42 = r6
            r3 = 3
            long r5 = r2.longValue(r3)     // Catch:{ Exception -> 0x155a, all -> 0x156a }
            java.lang.Object r7 = r1.get(r5)     // Catch:{ Exception -> 0x155a, all -> 0x156a }
            java.util.ArrayList r7 = (java.util.ArrayList) r7     // Catch:{ Exception -> 0x155a, all -> 0x156a }
            r1.remove(r5)     // Catch:{ Exception -> 0x155a, all -> 0x156a }
            if (r7 == 0) goto L_0x14f6
            r5 = 0
        L_0x14d6:
            int r6 = r7.size()     // Catch:{ Exception -> 0x155a, all -> 0x156a }
            if (r5 >= r6) goto L_0x14f6
            java.lang.Object r6 = r7.get(r5)     // Catch:{ Exception -> 0x155a, all -> 0x156a }
            org.telegram.tgnet.TLRPC$Message r6 = (org.telegram.tgnet.TLRPC$Message) r6     // Catch:{ Exception -> 0x155a, all -> 0x156a }
            r6.replyMessage = r4     // Catch:{ Exception -> 0x155a, all -> 0x156a }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r6 = r6.reply_to     // Catch:{ Exception -> 0x155a, all -> 0x156a }
            if (r6 == 0) goto L_0x14ec
            int r3 = r4.id     // Catch:{ Exception -> 0x155a, all -> 0x156a }
            r6.reply_to_msg_id = r3     // Catch:{ Exception -> 0x155a, all -> 0x156a }
        L_0x14ec:
            int r5 = r5 + 1
            r3 = 3
            goto L_0x14d6
        L_0x14f0:
            r41 = r7
            r9 = r40
            r42 = r43
        L_0x14f6:
            r40 = r9
            r7 = r41
            r43 = r42
            r6 = 0
            goto L_0x1490
        L_0x14fe:
            r41 = r7
            r9 = r40
            r2.dispose()     // Catch:{ Exception -> 0x155a, all -> 0x156a }
            int r2 = r1.size()     // Catch:{ Exception -> 0x1545, all -> 0x01b7 }
            r3 = 0
        L_0x150a:
            if (r3 >= r2) goto L_0x153f
            java.lang.Object r4 = r1.valueAt(r3)     // Catch:{ Exception -> 0x1545, all -> 0x01b7 }
            java.util.ArrayList r4 = (java.util.ArrayList) r4     // Catch:{ Exception -> 0x1545, all -> 0x01b7 }
            int r5 = r4.size()     // Catch:{ Exception -> 0x1545, all -> 0x01b7 }
            r6 = 0
        L_0x1517:
            if (r6 >= r5) goto L_0x1532
            java.lang.Object r7 = r4.get(r6)     // Catch:{ Exception -> 0x1545, all -> 0x01b7 }
            org.telegram.tgnet.TLRPC$Message r7 = (org.telegram.tgnet.TLRPC$Message) r7     // Catch:{ Exception -> 0x1545, all -> 0x01b7 }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r7 = r7.reply_to     // Catch:{ Exception -> 0x1545, all -> 0x01b7 }
            r24 = r1
            r57 = r2
            r1 = 0
            if (r7 == 0) goto L_0x152b
            r7.reply_to_random_id = r1     // Catch:{ Exception -> 0x1545, all -> 0x01b7 }
        L_0x152b:
            int r6 = r6 + 1
            r2 = r57
            r1 = r24
            goto L_0x1517
        L_0x1532:
            r24 = r1
            r57 = r2
            r1 = 0
            int r3 = r3 + 1
            r2 = r57
            r1 = r24
            goto L_0x150a
        L_0x153f:
            r7 = r8
            r1 = 0
            r8 = r55
            goto L_0x15a8
        L_0x1545:
            r0 = move-exception
            r2 = r54
            r4 = r0
            r36 = r15
            r10 = r27
            r38 = r28
            r18 = r31
            r37 = r32
            r3 = r41
            r5 = r45
            r1 = 0
            goto L_0x16b4
        L_0x155a:
            r0 = move-exception
            r4 = r0
            r1 = r2
            r36 = r15
            r10 = r27
            r38 = r28
            r18 = r31
            r37 = r32
            r3 = r41
            goto L_0x157d
        L_0x156a:
            r0 = move-exception
            r1 = r0
            r12 = r2
            goto L_0x1733
        L_0x156f:
            r0 = move-exception
            r4 = r0
            r1 = r2
            r3 = r7
            r36 = r15
            r10 = r27
            r38 = r28
            r18 = r31
            r37 = r32
        L_0x157d:
            r5 = r45
        L_0x157f:
            r2 = r54
            goto L_0x16b4
        L_0x1583:
            r0 = move-exception
            goto L_0x1588
        L_0x1585:
            r0 = move-exception
            r54 = r9
        L_0x1588:
            r2 = r54
            r4 = r0
            r3 = r7
            goto L_0x1613
        L_0x158e:
            r55 = r6
            r41 = r7
            r54 = r9
            r9 = r40
            r1 = r49
            r2 = r30
            r3 = r17
            r7 = r8
            r4 = r10
            r5 = r7
            r8 = r55
            r6 = r60
            r1.loadReplyMessages(r2, r3, r4, r5, r6)     // Catch:{ Exception -> 0x1602, all -> 0x1606 }
            r1 = r23
        L_0x15a8:
            boolean r2 = r10.isEmpty()     // Catch:{ Exception -> 0x15f9 }
            if (r2 != 0) goto L_0x15ba
            java.lang.String r2 = android.text.TextUtils.join(r8, r10)     // Catch:{ Exception -> 0x15f9 }
            r3 = r41
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r4 = r3.users     // Catch:{ Exception -> 0x15f7 }
            r14.getUsersInternal(r2, r4)     // Catch:{ Exception -> 0x15f7 }
            goto L_0x15bc
        L_0x15ba:
            r3 = r41
        L_0x15bc:
            boolean r2 = r7.isEmpty()     // Catch:{ Exception -> 0x15f7 }
            if (r2 != 0) goto L_0x15cb
            java.lang.String r2 = android.text.TextUtils.join(r8, r7)     // Catch:{ Exception -> 0x15f7 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r4 = r3.chats     // Catch:{ Exception -> 0x15f7 }
            r14.getChatsInternal(r2, r4)     // Catch:{ Exception -> 0x15f7 }
        L_0x15cb:
            boolean r2 = r9.isEmpty()     // Catch:{ Exception -> 0x15f7 }
            if (r2 != 0) goto L_0x15e1
            java.util.ArrayList r2 = new java.util.ArrayList     // Catch:{ Exception -> 0x15f7 }
            r2.<init>()     // Catch:{ Exception -> 0x15f7 }
            r3.animatedEmoji = r2     // Catch:{ Exception -> 0x15f7 }
            java.lang.String r2 = android.text.TextUtils.join(r8, r9)     // Catch:{ Exception -> 0x15f7 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Document> r4 = r3.animatedEmoji     // Catch:{ Exception -> 0x15f7 }
            r14.getAnimatedEmoji(r2, r4)     // Catch:{ Exception -> 0x15f7 }
        L_0x15e1:
            if (r1 == 0) goto L_0x15e6
            r1.dispose()
        L_0x15e6:
            r9 = r54
            r10 = r13
            r23 = r15
            r15 = r22
            r22 = r28
            r16 = r32
            r13 = r35
            r18 = r45
            goto L_0x16e0
        L_0x15f7:
            r0 = move-exception
            goto L_0x15fc
        L_0x15f9:
            r0 = move-exception
            r3 = r41
        L_0x15fc:
            r2 = r54
            r4 = r0
            r36 = r15
            goto L_0x1617
        L_0x1602:
            r0 = move-exception
            r3 = r41
            goto L_0x1610
        L_0x1606:
            r0 = move-exception
            r1 = r0
            r12 = r23
            goto L_0x1733
        L_0x160c:
            r0 = move-exception
            r3 = r7
            r54 = r9
        L_0x1610:
            r2 = r54
            r4 = r0
        L_0x1613:
            r36 = r15
            r1 = r23
        L_0x1617:
            r10 = r27
            r38 = r28
            r18 = r31
            r37 = r32
            r5 = r45
            goto L_0x16b4
        L_0x1623:
            r0 = move-exception
            r3 = r7
            goto L_0x162a
        L_0x1626:
            r0 = move-exception
            r3 = r7
            r27 = r13
        L_0x162a:
            r13 = r54
            r2 = r55
            r10 = r57
            r36 = r4
        L_0x1632:
            r38 = r15
            r1 = r23
            r18 = r27
            r37 = r32
            r5 = r45
            goto L_0x167d
        L_0x163d:
            r0 = move-exception
            r4 = r11
            r3 = r41
            r11 = r50
            r13 = r55
            r35 = r4
            r10 = r6
            r37 = r32
            r1 = 0
            goto L_0x1659
        L_0x164c:
            r0 = move-exception
            r4 = r11
            r3 = r41
            r11 = r50
            r13 = r55
            r35 = r4
            r10 = r6
            r37 = r32
        L_0x1659:
            r5 = 1
            goto L_0x1677
        L_0x165b:
            r0 = move-exception
            r4 = r11
            r3 = r41
            r11 = r50
            r13 = r55
            r35 = r4
            r37 = r32
            goto L_0x1675
        L_0x1668:
            r0 = move-exception
            r4 = r11
            r3 = r41
            r11 = r50
            r13 = r55
            r35 = r4
            r37 = r32
            r1 = 0
        L_0x1675:
            r5 = 1
            r10 = 0
        L_0x1677:
            r18 = 0
            r36 = 0
        L_0x167b:
            r38 = 0
        L_0x167d:
            r4 = r0
            goto L_0x16b4
        L_0x167f:
            r0 = move-exception
            r14 = r49
            goto L_0x1697
        L_0x1683:
            r0 = move-exception
            r14 = r49
            r2 = r54
            r11 = r7
            r3 = r9
            goto L_0x16a2
        L_0x168b:
            r0 = move-exception
            r2 = r54
            goto L_0x1691
        L_0x168f:
            r0 = move-exception
            r2 = r1
        L_0x1691:
            r11 = r7
            r3 = r9
            r14 = r15
            goto L_0x16a2
        L_0x1695:
            r0 = move-exception
            r14 = r15
        L_0x1697:
            r1 = r0
            r12 = 0
            goto L_0x1733
        L_0x169b:
            r0 = move-exception
            r2 = r1
            r3 = r9
            r20 = r10
            r14 = r15
            r11 = r7
        L_0x16a2:
            r13 = r55
            r4 = r0
        L_0x16a5:
            r1 = 0
        L_0x16a6:
            r5 = 0
        L_0x16a7:
            r10 = 0
            r18 = 0
            r22 = 0
            r35 = 0
        L_0x16ae:
            r36 = 0
            r37 = 0
        L_0x16b2:
            r38 = 0
        L_0x16b4:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r6 = r3.messages     // Catch:{ all -> 0x1730 }
            r6.clear()     // Catch:{ all -> 0x1730 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r6 = r3.chats     // Catch:{ all -> 0x1730 }
            r6.clear()     // Catch:{ all -> 0x1730 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r6 = r3.users     // Catch:{ all -> 0x1730 }
            r6.clear()     // Catch:{ all -> 0x1730 }
            r6 = 0
            r3.animatedEmoji = r6     // Catch:{ all -> 0x1730 }
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r4)     // Catch:{ all -> 0x1730 }
            if (r1 == 0) goto L_0x16ce
            r1.dispose()
        L_0x16ce:
            r9 = r2
            r27 = r10
            r10 = r13
            r31 = r18
            r15 = r22
            r13 = r35
            r23 = r36
            r16 = r37
            r22 = r38
            r18 = r5
        L_0x16e0:
            boolean r1 = org.telegram.messenger.BuildVars.LOGS_ENABLED
            if (r1 == 0) goto L_0x1706
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            java.lang.String r2 = "messages load time = "
            r1.append(r2)
            long r4 = android.os.SystemClock.elapsedRealtime()
            long r4 = r4 - r20
            r1.append(r4)
            java.lang.String r2 = " for dialog = "
            r1.append(r2)
            r1.append(r11)
            java.lang.String r1 = r1.toString()
            org.telegram.messenger.FileLog.d(r1)
        L_0x1706:
            if (r60 == 0) goto L_0x1710
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r3.messages
            int r1 = r1.size()
            r4 = r1
            goto L_0x1712
        L_0x1710:
            r4 = r31
        L_0x1712:
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda174 r25 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda174
            r1 = r25
            r2 = r49
            r5 = r50
            r7 = r52
            r11 = r56
            r12 = r58
            r14 = r27
            r17 = r59
            r19 = r60
            r20 = r61
            r21 = r62
            r24 = r63
            r1.<init>(r2, r3, r4, r5, r7, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24)
            return r25
        L_0x1730:
            r0 = move-exception
            r12 = r1
            r1 = r0
        L_0x1733:
            if (r12 == 0) goto L_0x1738
            r12.dispose()
        L_0x1738:
            goto L_0x173a
        L_0x1739:
            throw r1
        L_0x173a:
            goto L_0x1739
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.getMessagesInternal(long, long, int, int, int, int, int, int, boolean, int, int, boolean):java.lang.Runnable");
    }

    /* access modifiers changed from: private */
    public static /* synthetic */ int lambda$getMessagesInternal$125(TLRPC$Message tLRPC$Message, TLRPC$Message tLRPC$Message2) {
        int i;
        int i2;
        int i3 = tLRPC$Message.id;
        if (i3 <= 0 || (i2 = tLRPC$Message2.id) <= 0) {
            if (i3 >= 0 || (i = tLRPC$Message2.id) >= 0) {
                int i4 = tLRPC$Message.date;
                int i5 = tLRPC$Message2.date;
                if (i4 > i5) {
                    return -1;
                }
                if (i4 < i5) {
                    return 1;
                }
                return 0;
            } else if (i3 < i) {
                return -1;
            } else {
                if (i3 > i) {
                    return 1;
                }
                return 0;
            }
        } else if (i3 > i2) {
            return -1;
        } else {
            if (i3 < i2) {
                return 1;
            }
            return 0;
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$getMessagesInternal$126(TLRPC$TL_messages_messages tLRPC$TL_messages_messages, int i, long j, long j2, int i2, int i3, int i4, int i5, int i6, int i7, int i8, int i9, int i10, boolean z, boolean z2, int i11, int i12, boolean z3, int i13, boolean z4) {
        getMessagesController().processLoadedMessages(tLRPC$TL_messages_messages, i, j, j2, i2, i3, i4, true, i5, i6, i7, i8, i9, i10, z, z2 ? 1 : 0, i11, i12, z3, i13, z4);
    }

    private void getAnimatedEmoji(String str, ArrayList<TLRPC$Document> arrayList) {
        SQLiteCursor sQLiteCursor = null;
        try {
            sQLiteCursor = this.database.queryFinalized(String.format(Locale.US, "SELECT data FROM animated_emoji WHERE document_id IN (%s)", new Object[]{str}), new Object[0]);
            while (sQLiteCursor.next()) {
                NativeByteBuffer byteBufferValue = sQLiteCursor.byteBufferValue(0);
                try {
                    TLRPC$Document TLdeserialize = TLRPC$Document.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(true), true);
                    if (!(TLdeserialize == null || TLdeserialize.id == 0)) {
                        arrayList.add(TLdeserialize);
                    }
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                }
                if (byteBufferValue != null) {
                    byteBufferValue.reuse();
                }
            }
        } catch (SQLiteException e2) {
            e2.printStackTrace();
            if (sQLiteCursor == null) {
                return;
            }
        } catch (Throwable th) {
            if (sQLiteCursor != null) {
                sQLiteCursor.dispose();
            }
            throw th;
        }
        sQLiteCursor.dispose();
    }

    public void getMessages(long j, long j2, boolean z, int i, int i2, int i3, int i4, int i5, int i6, boolean z2, int i7, int i8, boolean z3) {
        MessagesStorage$$ExternalSyntheticLambda86 messagesStorage$$ExternalSyntheticLambda86 = r0;
        DispatchQueue dispatchQueue = this.storageQueue;
        MessagesStorage$$ExternalSyntheticLambda86 messagesStorage$$ExternalSyntheticLambda862 = new MessagesStorage$$ExternalSyntheticLambda86(this, j, j2, i, i2, i3, i4, i5, i6, z2, i7, i8, z3);
        dispatchQueue.postRunnable(messagesStorage$$ExternalSyntheticLambda86);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$getMessages$127(long j, long j2, int i, int i2, int i3, int i4, int i5, int i6, boolean z, int i7, int i8, boolean z2) {
        Utilities.stageQueue.postRunnable(getMessagesInternal(j, j2, i, i2, i3, i4, i5, i6, z, i7, i8, z2));
    }

    public void clearSentMedia() {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda19(this));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$clearSentMedia$128() {
        try {
            this.database.executeFast("DELETE FROM sent_files_v2 WHERE 1").stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public Object[] getSentFile(String str, int i) {
        if (str == null || str.toLowerCase().endsWith("attheme")) {
            return null;
        }
        CountDownLatch countDownLatch = new CountDownLatch(1);
        Object[] objArr = new Object[2];
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda123(this, str, i, objArr, countDownLatch));
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        if (objArr[0] != null) {
            return objArr;
        }
        return null;
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$getSentFile$129(String str, int i, Object[] objArr, CountDownLatch countDownLatch) {
        NativeByteBuffer byteBufferValue;
        try {
            String MD5 = Utilities.MD5(str);
            if (MD5 != null) {
                SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT data, parent FROM sent_files_v2 WHERE uid = '%s' AND type = %d", new Object[]{MD5, Integer.valueOf(i)}), new Object[0]);
                if (queryFinalized.next() && (byteBufferValue = queryFinalized.byteBufferValue(0)) != null) {
                    TLRPC$MessageMedia TLdeserialize = TLRPC$MessageMedia.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                    byteBufferValue.reuse();
                    if (TLdeserialize instanceof TLRPC$TL_messageMediaDocument) {
                        objArr[0] = ((TLRPC$TL_messageMediaDocument) TLdeserialize).document;
                    } else if (TLdeserialize instanceof TLRPC$TL_messageMediaPhoto) {
                        objArr[0] = ((TLRPC$TL_messageMediaPhoto) TLdeserialize).photo;
                    }
                    if (objArr[0] != null) {
                        objArr[1] = queryFinalized.stringValue(1);
                    }
                }
                queryFinalized.dispose();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        } catch (Throwable th) {
            countDownLatch.countDown();
            throw th;
        }
        countDownLatch.countDown();
    }

    private void updateWidgets(long j) {
        ArrayList arrayList = new ArrayList();
        arrayList.add(Long.valueOf(j));
        updateWidgets((ArrayList<Long>) arrayList);
    }

    private void updateWidgets(ArrayList<Long> arrayList) {
        if (!arrayList.isEmpty()) {
            AppWidgetManager appWidgetManager = null;
            try {
                TextUtils.join(",", arrayList);
                SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT DISTINCT id FROM shortcut_widget WHERE did IN(%s,-1)", new Object[]{TextUtils.join(",", arrayList)}), new Object[0]);
                while (queryFinalized.next()) {
                    if (appWidgetManager == null) {
                        appWidgetManager = AppWidgetManager.getInstance(ApplicationLoader.applicationContext);
                    }
                    appWidgetManager.notifyAppWidgetViewDataChanged(queryFinalized.intValue(0), NUM);
                }
                queryFinalized.dispose();
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        }
    }

    public void putWidgetDialogs(int i, ArrayList<Long> arrayList) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda55(this, i, arrayList));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$putWidgetDialogs$130(int i, ArrayList arrayList) {
        try {
            this.database.beginTransaction();
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM shortcut_widget WHERE id = " + i).stepThis().dispose();
            SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO shortcut_widget VALUES(?, ?, ?)");
            if (arrayList.isEmpty()) {
                executeFast.requery();
                executeFast.bindInteger(1, i);
                executeFast.bindLong(2, -1);
                executeFast.bindInteger(3, 0);
                executeFast.step();
            } else {
                int size = arrayList.size();
                for (int i2 = 0; i2 < size; i2++) {
                    long longValue = ((Long) arrayList.get(i2)).longValue();
                    executeFast.requery();
                    executeFast.bindInteger(1, i);
                    executeFast.bindLong(2, longValue);
                    executeFast.bindInteger(3, i2);
                    executeFast.step();
                }
            }
            executeFast.dispose();
            this.database.commitTransaction();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void clearWidgetDialogs(int i) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda28(this, i));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$clearWidgetDialogs$131(int i) {
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM shortcut_widget WHERE id = " + i).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void getWidgetDialogIds(int i, int i2, ArrayList<Long> arrayList, ArrayList<TLRPC$User> arrayList2, ArrayList<TLRPC$Chat> arrayList3, boolean z) {
        CountDownLatch countDownLatch = new CountDownLatch(1);
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda60(this, i, arrayList, arrayList2, arrayList3, z, i2, countDownLatch));
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:70:0x011b  */
    /* JADX WARNING: Removed duplicated region for block: B:74:0x0124  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$getWidgetDialogIds$132(int r15, java.util.ArrayList r16, java.util.ArrayList r17, java.util.ArrayList r18, boolean r19, int r20, java.util.concurrent.CountDownLatch r21) {
        /*
            r14 = this;
            r1 = r14
            r0 = r16
            r2 = r17
            r3 = r18
            r4 = 0
            java.util.ArrayList r5 = new java.util.ArrayList     // Catch:{ Exception -> 0x0115 }
            r5.<init>()     // Catch:{ Exception -> 0x0115 }
            java.util.ArrayList r6 = new java.util.ArrayList     // Catch:{ Exception -> 0x0115 }
            r6.<init>()     // Catch:{ Exception -> 0x0115 }
            org.telegram.SQLite.SQLiteDatabase r7 = r1.database     // Catch:{ Exception -> 0x0115 }
            java.util.Locale r8 = java.util.Locale.US     // Catch:{ Exception -> 0x0115 }
            java.lang.String r9 = "SELECT did FROM shortcut_widget WHERE id = %d ORDER BY ord ASC"
            r10 = 1
            java.lang.Object[] r10 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x0115 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r15)     // Catch:{ Exception -> 0x0115 }
            r12 = 0
            r10[r12] = r11     // Catch:{ Exception -> 0x0115 }
            java.lang.String r8 = java.lang.String.format(r8, r9, r10)     // Catch:{ Exception -> 0x0115 }
            java.lang.Object[] r9 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x0115 }
            org.telegram.SQLite.SQLiteCursor r7 = r7.queryFinalized(r8, r9)     // Catch:{ Exception -> 0x0115 }
        L_0x002c:
            boolean r8 = r7.next()     // Catch:{ Exception -> 0x0110, all -> 0x010d }
            if (r8 == 0) goto L_0x005f
            long r8 = r7.longValue(r12)     // Catch:{ Exception -> 0x0110, all -> 0x010d }
            r10 = -1
            int r13 = (r8 > r10 ? 1 : (r8 == r10 ? 0 : -1))
            if (r13 != 0) goto L_0x003d
            goto L_0x002c
        L_0x003d:
            java.lang.Long r10 = java.lang.Long.valueOf(r8)     // Catch:{ Exception -> 0x0110, all -> 0x010d }
            r0.add(r10)     // Catch:{ Exception -> 0x0110, all -> 0x010d }
            if (r2 == 0) goto L_0x002c
            if (r3 == 0) goto L_0x002c
            boolean r10 = org.telegram.messenger.DialogObject.isUserDialog(r8)     // Catch:{ Exception -> 0x0110, all -> 0x010d }
            if (r10 == 0) goto L_0x0056
            java.lang.Long r8 = java.lang.Long.valueOf(r8)     // Catch:{ Exception -> 0x0110, all -> 0x010d }
            r5.add(r8)     // Catch:{ Exception -> 0x0110, all -> 0x010d }
            goto L_0x002c
        L_0x0056:
            long r8 = -r8
            java.lang.Long r8 = java.lang.Long.valueOf(r8)     // Catch:{ Exception -> 0x0110, all -> 0x010d }
            r6.add(r8)     // Catch:{ Exception -> 0x0110, all -> 0x010d }
            goto L_0x002c
        L_0x005f:
            r7.dispose()     // Catch:{ Exception -> 0x0110, all -> 0x010d }
            if (r19 != 0) goto L_0x00ec
            boolean r7 = r16.isEmpty()     // Catch:{ Exception -> 0x0115 }
            if (r7 == 0) goto L_0x00ec
            if (r20 != 0) goto L_0x00ad
            org.telegram.SQLite.SQLiteDatabase r7 = r1.database     // Catch:{ Exception -> 0x0115 }
            java.lang.String r8 = "SELECT did FROM dialogs WHERE folder_id = 0 ORDER BY pinned DESC, date DESC LIMIT 0,10"
            java.lang.Object[] r9 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x0115 }
            org.telegram.SQLite.SQLiteCursor r7 = r7.queryFinalized(r8, r9)     // Catch:{ Exception -> 0x0115 }
        L_0x0076:
            boolean r8 = r7.next()     // Catch:{ Exception -> 0x0110, all -> 0x010d }
            if (r8 == 0) goto L_0x00a9
            long r8 = r7.longValue(r12)     // Catch:{ Exception -> 0x0110, all -> 0x010d }
            boolean r10 = org.telegram.messenger.DialogObject.isFolderDialogId(r8)     // Catch:{ Exception -> 0x0110, all -> 0x010d }
            if (r10 == 0) goto L_0x0087
            goto L_0x0076
        L_0x0087:
            java.lang.Long r10 = java.lang.Long.valueOf(r8)     // Catch:{ Exception -> 0x0110, all -> 0x010d }
            r0.add(r10)     // Catch:{ Exception -> 0x0110, all -> 0x010d }
            if (r2 == 0) goto L_0x0076
            if (r3 == 0) goto L_0x0076
            boolean r10 = org.telegram.messenger.DialogObject.isUserDialog(r8)     // Catch:{ Exception -> 0x0110, all -> 0x010d }
            if (r10 == 0) goto L_0x00a0
            java.lang.Long r8 = java.lang.Long.valueOf(r8)     // Catch:{ Exception -> 0x0110, all -> 0x010d }
            r5.add(r8)     // Catch:{ Exception -> 0x0110, all -> 0x010d }
            goto L_0x0076
        L_0x00a0:
            long r8 = -r8
            java.lang.Long r8 = java.lang.Long.valueOf(r8)     // Catch:{ Exception -> 0x0110, all -> 0x010d }
            r6.add(r8)     // Catch:{ Exception -> 0x0110, all -> 0x010d }
            goto L_0x0076
        L_0x00a9:
            r7.dispose()     // Catch:{ Exception -> 0x0110, all -> 0x010d }
            goto L_0x00ec
        L_0x00ad:
            org.telegram.messenger.MessagesStorage r7 = r14.getMessagesStorage()     // Catch:{ Exception -> 0x0115 }
            org.telegram.SQLite.SQLiteDatabase r7 = r7.getDatabase()     // Catch:{ Exception -> 0x0115 }
            java.lang.String r8 = "SELECT did FROM chat_hints WHERE type = 0 ORDER BY rating DESC LIMIT 4"
            java.lang.Object[] r9 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x0115 }
            org.telegram.SQLite.SQLiteCursor r7 = r7.queryFinalized(r8, r9)     // Catch:{ Exception -> 0x0115 }
        L_0x00bd:
            boolean r8 = r7.next()     // Catch:{ Exception -> 0x0110, all -> 0x010d }
            if (r8 == 0) goto L_0x00e9
            long r8 = r7.longValue(r12)     // Catch:{ Exception -> 0x0110, all -> 0x010d }
            java.lang.Long r10 = java.lang.Long.valueOf(r8)     // Catch:{ Exception -> 0x0110, all -> 0x010d }
            r0.add(r10)     // Catch:{ Exception -> 0x0110, all -> 0x010d }
            if (r2 == 0) goto L_0x00bd
            if (r3 == 0) goto L_0x00bd
            boolean r10 = org.telegram.messenger.DialogObject.isUserDialog(r8)     // Catch:{ Exception -> 0x0110, all -> 0x010d }
            if (r10 == 0) goto L_0x00e0
            java.lang.Long r8 = java.lang.Long.valueOf(r8)     // Catch:{ Exception -> 0x0110, all -> 0x010d }
            r5.add(r8)     // Catch:{ Exception -> 0x0110, all -> 0x010d }
            goto L_0x00bd
        L_0x00e0:
            long r8 = -r8
            java.lang.Long r8 = java.lang.Long.valueOf(r8)     // Catch:{ Exception -> 0x0110, all -> 0x010d }
            r6.add(r8)     // Catch:{ Exception -> 0x0110, all -> 0x010d }
            goto L_0x00bd
        L_0x00e9:
            r7.dispose()     // Catch:{ Exception -> 0x0110, all -> 0x010d }
        L_0x00ec:
            if (r2 == 0) goto L_0x011e
            if (r3 == 0) goto L_0x011e
            boolean r0 = r6.isEmpty()     // Catch:{ Exception -> 0x0115 }
            java.lang.String r7 = ","
            if (r0 != 0) goto L_0x00ff
            java.lang.String r0 = android.text.TextUtils.join(r7, r6)     // Catch:{ Exception -> 0x0115 }
            r14.getChatsInternal(r0, r3)     // Catch:{ Exception -> 0x0115 }
        L_0x00ff:
            boolean r0 = r5.isEmpty()     // Catch:{ Exception -> 0x0115 }
            if (r0 != 0) goto L_0x011e
            java.lang.String r0 = android.text.TextUtils.join(r7, r5)     // Catch:{ Exception -> 0x0115 }
            r14.getUsersInternal(r0, r2)     // Catch:{ Exception -> 0x0115 }
            goto L_0x011e
        L_0x010d:
            r0 = move-exception
            r4 = r7
            goto L_0x0122
        L_0x0110:
            r0 = move-exception
            r4 = r7
            goto L_0x0116
        L_0x0113:
            r0 = move-exception
            goto L_0x0122
        L_0x0115:
            r0 = move-exception
        L_0x0116:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0113 }
            if (r4 == 0) goto L_0x011e
            r4.dispose()
        L_0x011e:
            r21.countDown()
            return
        L_0x0122:
            if (r4 == 0) goto L_0x0127
            r4.dispose()
        L_0x0127:
            r21.countDown()
            goto L_0x012c
        L_0x012b:
            throw r0
        L_0x012c:
            goto L_0x012b
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$getWidgetDialogIds$132(int, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, boolean, int, java.util.concurrent.CountDownLatch):void");
    }

    public void getWidgetDialogs(int i, int i2, ArrayList<Long> arrayList, LongSparseArray<TLRPC$Dialog> longSparseArray, LongSparseArray<TLRPC$Message> longSparseArray2, ArrayList<TLRPC$User> arrayList2, ArrayList<TLRPC$Chat> arrayList3) {
        CountDownLatch countDownLatch = new CountDownLatch(1);
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda57(this, i, arrayList, i2, longSparseArray, longSparseArray2, arrayList3, arrayList2, countDownLatch));
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:84:0x01e9  */
    /* JADX WARNING: Removed duplicated region for block: B:88:0x01f2  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$getWidgetDialogs$133(int r17, java.util.ArrayList r18, int r19, androidx.collection.LongSparseArray r20, androidx.collection.LongSparseArray r21, java.util.ArrayList r22, java.util.ArrayList r23, java.util.concurrent.CountDownLatch r24) {
        /*
            r16 = this;
            r1 = r16
            r0 = r18
            r2 = r20
            r3 = 0
            java.util.ArrayList r4 = new java.util.ArrayList     // Catch:{ Exception -> 0x01e3 }
            r4.<init>()     // Catch:{ Exception -> 0x01e3 }
            java.util.ArrayList r5 = new java.util.ArrayList     // Catch:{ Exception -> 0x01e3 }
            r5.<init>()     // Catch:{ Exception -> 0x01e3 }
            org.telegram.SQLite.SQLiteDatabase r6 = r1.database     // Catch:{ Exception -> 0x01e3 }
            java.util.Locale r7 = java.util.Locale.US     // Catch:{ Exception -> 0x01e3 }
            java.lang.String r8 = "SELECT did FROM shortcut_widget WHERE id = %d ORDER BY ord ASC"
            r9 = 1
            java.lang.Object[] r10 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x01e3 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r17)     // Catch:{ Exception -> 0x01e3 }
            r12 = 0
            r10[r12] = r11     // Catch:{ Exception -> 0x01e3 }
            java.lang.String r7 = java.lang.String.format(r7, r8, r10)     // Catch:{ Exception -> 0x01e3 }
            java.lang.Object[] r8 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x01e3 }
            org.telegram.SQLite.SQLiteCursor r6 = r6.queryFinalized(r7, r8)     // Catch:{ Exception -> 0x01e3 }
        L_0x002b:
            boolean r7 = r6.next()     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            if (r7 == 0) goto L_0x005a
            long r7 = r6.longValue(r12)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            r10 = -1
            int r13 = (r7 > r10 ? 1 : (r7 == r10 ? 0 : -1))
            if (r13 != 0) goto L_0x003c
            goto L_0x002b
        L_0x003c:
            java.lang.Long r10 = java.lang.Long.valueOf(r7)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            r0.add(r10)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            boolean r10 = org.telegram.messenger.DialogObject.isUserDialog(r7)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            if (r10 == 0) goto L_0x0051
            java.lang.Long r7 = java.lang.Long.valueOf(r7)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            r4.add(r7)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            goto L_0x002b
        L_0x0051:
            long r7 = -r7
            java.lang.Long r7 = java.lang.Long.valueOf(r7)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            r5.add(r7)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            goto L_0x002b
        L_0x005a:
            r6.dispose()     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            boolean r6 = r18.isEmpty()     // Catch:{ Exception -> 0x01e3 }
            if (r6 == 0) goto L_0x00a2
            r6 = r19
            if (r6 != r9) goto L_0x00a2
            org.telegram.messenger.MessagesStorage r6 = r16.getMessagesStorage()     // Catch:{ Exception -> 0x01e3 }
            org.telegram.SQLite.SQLiteDatabase r6 = r6.getDatabase()     // Catch:{ Exception -> 0x01e3 }
            java.lang.String r7 = "SELECT did FROM chat_hints WHERE type = 0 ORDER BY rating DESC LIMIT 4"
            java.lang.Object[] r8 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x01e3 }
            org.telegram.SQLite.SQLiteCursor r6 = r6.queryFinalized(r7, r8)     // Catch:{ Exception -> 0x01e3 }
        L_0x0077:
            boolean r7 = r6.next()     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            if (r7 == 0) goto L_0x009f
            long r7 = r6.longValue(r12)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            java.lang.Long r10 = java.lang.Long.valueOf(r7)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            r0.add(r10)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            boolean r10 = org.telegram.messenger.DialogObject.isUserDialog(r7)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            if (r10 == 0) goto L_0x0096
            java.lang.Long r7 = java.lang.Long.valueOf(r7)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            r4.add(r7)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            goto L_0x0077
        L_0x0096:
            long r7 = -r7
            java.lang.Long r7 = java.lang.Long.valueOf(r7)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            r5.add(r7)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            goto L_0x0077
        L_0x009f:
            r6.dispose()     // Catch:{ Exception -> 0x01de, all -> 0x01db }
        L_0x00a2:
            boolean r6 = r18.isEmpty()     // Catch:{ Exception -> 0x01e3 }
            java.lang.String r7 = ","
            if (r6 == 0) goto L_0x00b6
            org.telegram.SQLite.SQLiteDatabase r6 = r1.database     // Catch:{ Exception -> 0x01e3 }
            java.lang.String r8 = "SELECT d.did, d.last_mid, d.unread_count, d.date, m.data, m.read_state, m.mid, m.send_state, m.date FROM dialogs as d LEFT JOIN messages_v2 as m ON d.last_mid = m.mid AND d.did = m.uid WHERE d.folder_id = 0 ORDER BY d.pinned DESC, d.date DESC LIMIT 0,10"
            java.lang.Object[] r10 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x01e3 }
            org.telegram.SQLite.SQLiteCursor r6 = r6.queryFinalized(r8, r10)     // Catch:{ Exception -> 0x01e3 }
            r8 = 1
            goto L_0x00cf
        L_0x00b6:
            org.telegram.SQLite.SQLiteDatabase r6 = r1.database     // Catch:{ Exception -> 0x01e3 }
            java.util.Locale r8 = java.util.Locale.US     // Catch:{ Exception -> 0x01e3 }
            java.lang.String r10 = "SELECT d.did, d.last_mid, d.unread_count, d.date, m.data, m.read_state, m.mid, m.send_state, m.date FROM dialogs as d LEFT JOIN messages_v2 as m ON d.last_mid = m.mid AND d.did = m.uid WHERE d.did IN(%s)"
            java.lang.Object[] r11 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x01e3 }
            java.lang.String r13 = android.text.TextUtils.join(r7, r0)     // Catch:{ Exception -> 0x01e3 }
            r11[r12] = r13     // Catch:{ Exception -> 0x01e3 }
            java.lang.String r8 = java.lang.String.format(r8, r10, r11)     // Catch:{ Exception -> 0x01e3 }
            java.lang.Object[] r10 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x01e3 }
            org.telegram.SQLite.SQLiteCursor r6 = r6.queryFinalized(r8, r10)     // Catch:{ Exception -> 0x01e3 }
            r8 = 0
        L_0x00cf:
            boolean r10 = r6.next()     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            if (r10 == 0) goto L_0x0156
            long r10 = r6.longValue(r12)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            boolean r13 = org.telegram.messenger.DialogObject.isFolderDialogId(r10)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            if (r13 == 0) goto L_0x00e0
            goto L_0x0152
        L_0x00e0:
            if (r8 == 0) goto L_0x00e9
            java.lang.Long r13 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            r0.add(r13)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
        L_0x00e9:
            org.telegram.tgnet.TLRPC$TL_dialog r13 = new org.telegram.tgnet.TLRPC$TL_dialog     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            r13.<init>()     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            r13.id = r10     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            int r10 = r6.intValue(r9)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            r13.top_message = r10     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            r10 = 2
            int r10 = r6.intValue(r10)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            r13.unread_count = r10     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            r10 = 3
            int r10 = r6.intValue(r10)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            r13.last_message_date = r10     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            long r10 = r13.id     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            r2.put(r10, r13)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            r10 = 4
            org.telegram.tgnet.NativeByteBuffer r10 = r6.byteBufferValue(r10)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            if (r10 == 0) goto L_0x0152
            int r11 = r10.readInt32(r12)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            org.telegram.tgnet.TLRPC$Message r11 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r10, r11, r12)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            org.telegram.messenger.UserConfig r14 = r16.getUserConfig()     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            long r14 = r14.clientUserId     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            r11.readAttachPath(r10, r14)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            r10.reuse()     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            r10 = 5
            int r10 = r6.intValue(r10)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            org.telegram.messenger.MessageObject.setUnreadFlags(r11, r10)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            r10 = 6
            int r10 = r6.intValue(r10)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            r11.id = r10     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            r10 = 7
            int r10 = r6.intValue(r10)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            r11.send_state = r10     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            r10 = 8
            int r10 = r6.intValue(r10)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            if (r10 == 0) goto L_0x0144
            r13.last_message_date = r10     // Catch:{ Exception -> 0x01de, all -> 0x01db }
        L_0x0144:
            long r13 = r13.id     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            r11.dialog_id = r13     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            r10 = r21
            r10.put(r13, r11)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            addUsersAndChatsFromMessage(r11, r4, r5, r3)     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            goto L_0x00cf
        L_0x0152:
            r10 = r21
            goto L_0x00cf
        L_0x0156:
            r6.dispose()     // Catch:{ Exception -> 0x01de, all -> 0x01db }
            if (r8 != 0) goto L_0x01bc
            int r6 = r18.size()     // Catch:{ Exception -> 0x01e3 }
            int r8 = r20.size()     // Catch:{ Exception -> 0x01e3 }
            if (r6 <= r8) goto L_0x01bc
            int r6 = r18.size()     // Catch:{ Exception -> 0x01e3 }
        L_0x0169:
            if (r12 >= r6) goto L_0x01bc
            java.lang.Object r8 = r0.get(r12)     // Catch:{ Exception -> 0x01e3 }
            java.lang.Long r8 = (java.lang.Long) r8     // Catch:{ Exception -> 0x01e3 }
            long r8 = r8.longValue()     // Catch:{ Exception -> 0x01e3 }
            java.lang.Object r10 = r0.get(r12)     // Catch:{ Exception -> 0x01e3 }
            java.lang.Long r10 = (java.lang.Long) r10     // Catch:{ Exception -> 0x01e3 }
            long r10 = r10.longValue()     // Catch:{ Exception -> 0x01e3 }
            java.lang.Object r10 = r2.get(r10)     // Catch:{ Exception -> 0x01e3 }
            if (r10 != 0) goto L_0x01b9
            org.telegram.tgnet.TLRPC$TL_dialog r10 = new org.telegram.tgnet.TLRPC$TL_dialog     // Catch:{ Exception -> 0x01e3 }
            r10.<init>()     // Catch:{ Exception -> 0x01e3 }
            r10.id = r8     // Catch:{ Exception -> 0x01e3 }
            r2.put(r8, r10)     // Catch:{ Exception -> 0x01e3 }
            boolean r10 = org.telegram.messenger.DialogObject.isChatDialog(r8)     // Catch:{ Exception -> 0x01e3 }
            if (r10 == 0) goto L_0x01a8
            long r8 = -r8
            java.lang.Long r10 = java.lang.Long.valueOf(r8)     // Catch:{ Exception -> 0x01e3 }
            boolean r10 = r5.contains(r10)     // Catch:{ Exception -> 0x01e3 }
            if (r10 == 0) goto L_0x01b9
            java.lang.Long r8 = java.lang.Long.valueOf(r8)     // Catch:{ Exception -> 0x01e3 }
            r5.add(r8)     // Catch:{ Exception -> 0x01e3 }
            goto L_0x01b9
        L_0x01a8:
            java.lang.Long r10 = java.lang.Long.valueOf(r8)     // Catch:{ Exception -> 0x01e3 }
            boolean r10 = r4.contains(r10)     // Catch:{ Exception -> 0x01e3 }
            if (r10 == 0) goto L_0x01b9
            java.lang.Long r8 = java.lang.Long.valueOf(r8)     // Catch:{ Exception -> 0x01e3 }
            r4.add(r8)     // Catch:{ Exception -> 0x01e3 }
        L_0x01b9:
            int r12 = r12 + 1
            goto L_0x0169
        L_0x01bc:
            boolean r0 = r5.isEmpty()     // Catch:{ Exception -> 0x01e3 }
            if (r0 != 0) goto L_0x01cb
            java.lang.String r0 = android.text.TextUtils.join(r7, r5)     // Catch:{ Exception -> 0x01e3 }
            r2 = r22
            r1.getChatsInternal(r0, r2)     // Catch:{ Exception -> 0x01e3 }
        L_0x01cb:
            boolean r0 = r4.isEmpty()     // Catch:{ Exception -> 0x01e3 }
            if (r0 != 0) goto L_0x01ec
            java.lang.String r0 = android.text.TextUtils.join(r7, r4)     // Catch:{ Exception -> 0x01e3 }
            r2 = r23
            r1.getUsersInternal(r0, r2)     // Catch:{ Exception -> 0x01e3 }
            goto L_0x01ec
        L_0x01db:
            r0 = move-exception
            r3 = r6
            goto L_0x01f0
        L_0x01de:
            r0 = move-exception
            r3 = r6
            goto L_0x01e4
        L_0x01e1:
            r0 = move-exception
            goto L_0x01f0
        L_0x01e3:
            r0 = move-exception
        L_0x01e4:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x01e1 }
            if (r3 == 0) goto L_0x01ec
            r3.dispose()
        L_0x01ec:
            r24.countDown()
            return
        L_0x01f0:
            if (r3 == 0) goto L_0x01f5
            r3.dispose()
        L_0x01f5:
            r24.countDown()
            goto L_0x01fa
        L_0x01f9:
            throw r0
        L_0x01fa:
            goto L_0x01f9
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$getWidgetDialogs$133(int, java.util.ArrayList, int, androidx.collection.LongSparseArray, androidx.collection.LongSparseArray, java.util.ArrayList, java.util.ArrayList, java.util.concurrent.CountDownLatch):void");
    }

    public void putSentFile(String str, TLObject tLObject, int i, String str2) {
        if (str != null && tLObject != null && str2 != null) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda125(this, str, tLObject, i, str2));
        }
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v6, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v7, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPhoto} */
    /* JADX WARNING: type inference failed for: r1v1, types: [org.telegram.tgnet.TLObject] */
    /* JADX WARNING: type inference failed for: r1v3 */
    /* access modifiers changed from: private */
    /* JADX WARNING: Multi-variable type inference failed */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$putSentFile$134(java.lang.String r5, org.telegram.tgnet.TLObject r6, int r7, java.lang.String r8) {
        /*
            r4 = this;
            r0 = 0
            java.lang.String r5 = org.telegram.messenger.Utilities.MD5(r5)     // Catch:{ Exception -> 0x0066 }
            if (r5 == 0) goto L_0x005e
            boolean r1 = r6 instanceof org.telegram.tgnet.TLRPC$Photo     // Catch:{ Exception -> 0x0066 }
            r2 = 1
            if (r1 == 0) goto L_0x001b
            org.telegram.tgnet.TLRPC$TL_messageMediaPhoto r1 = new org.telegram.tgnet.TLRPC$TL_messageMediaPhoto     // Catch:{ Exception -> 0x0066 }
            r1.<init>()     // Catch:{ Exception -> 0x0066 }
            org.telegram.tgnet.TLRPC$Photo r6 = (org.telegram.tgnet.TLRPC$Photo) r6     // Catch:{ Exception -> 0x0066 }
            r1.photo = r6     // Catch:{ Exception -> 0x0066 }
            int r6 = r1.flags     // Catch:{ Exception -> 0x0066 }
            r6 = r6 | r2
            r1.flags = r6     // Catch:{ Exception -> 0x0066 }
            goto L_0x002f
        L_0x001b:
            boolean r1 = r6 instanceof org.telegram.tgnet.TLRPC$Document     // Catch:{ Exception -> 0x0066 }
            if (r1 == 0) goto L_0x002e
            org.telegram.tgnet.TLRPC$TL_messageMediaDocument r1 = new org.telegram.tgnet.TLRPC$TL_messageMediaDocument     // Catch:{ Exception -> 0x0066 }
            r1.<init>()     // Catch:{ Exception -> 0x0066 }
            org.telegram.tgnet.TLRPC$Document r6 = (org.telegram.tgnet.TLRPC$Document) r6     // Catch:{ Exception -> 0x0066 }
            r1.document = r6     // Catch:{ Exception -> 0x0066 }
            int r6 = r1.flags     // Catch:{ Exception -> 0x0066 }
            r6 = r6 | r2
            r1.flags = r6     // Catch:{ Exception -> 0x0066 }
            goto L_0x002f
        L_0x002e:
            r1 = r0
        L_0x002f:
            if (r1 != 0) goto L_0x0032
            return
        L_0x0032:
            org.telegram.SQLite.SQLiteDatabase r6 = r4.database     // Catch:{ Exception -> 0x0066 }
            java.lang.String r3 = "REPLACE INTO sent_files_v2 VALUES(?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r6.executeFast(r3)     // Catch:{ Exception -> 0x0066 }
            r0.requery()     // Catch:{ Exception -> 0x0066 }
            org.telegram.tgnet.NativeByteBuffer r6 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0066 }
            int r3 = r1.getObjectSize()     // Catch:{ Exception -> 0x0066 }
            r6.<init>((int) r3)     // Catch:{ Exception -> 0x0066 }
            r1.serializeToStream(r6)     // Catch:{ Exception -> 0x0066 }
            r0.bindString(r2, r5)     // Catch:{ Exception -> 0x0066 }
            r5 = 2
            r0.bindInteger(r5, r7)     // Catch:{ Exception -> 0x0066 }
            r5 = 3
            r0.bindByteBuffer((int) r5, (org.telegram.tgnet.NativeByteBuffer) r6)     // Catch:{ Exception -> 0x0066 }
            r5 = 4
            r0.bindString(r5, r8)     // Catch:{ Exception -> 0x0066 }
            r0.step()     // Catch:{ Exception -> 0x0066 }
            r6.reuse()     // Catch:{ Exception -> 0x0066 }
        L_0x005e:
            if (r0 == 0) goto L_0x006d
        L_0x0060:
            r0.dispose()
            goto L_0x006d
        L_0x0064:
            r5 = move-exception
            goto L_0x006e
        L_0x0066:
            r5 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r5)     // Catch:{ all -> 0x0064 }
            if (r0 == 0) goto L_0x006d
            goto L_0x0060
        L_0x006d:
            return
        L_0x006e:
            if (r0 == 0) goto L_0x0073
            r0.dispose()
        L_0x0073:
            goto L_0x0075
        L_0x0074:
            throw r5
        L_0x0075:
            goto L_0x0074
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$putSentFile$134(java.lang.String, org.telegram.tgnet.TLObject, int, java.lang.String):void");
    }

    public void updateEncryptedChatSeq(TLRPC$EncryptedChat tLRPC$EncryptedChat, boolean z) {
        if (tLRPC$EncryptedChat != null) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda168(this, tLRPC$EncryptedChat, z));
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$updateEncryptedChatSeq$135(TLRPC$EncryptedChat tLRPC$EncryptedChat, boolean z) {
        SQLitePreparedStatement sQLitePreparedStatement = null;
        try {
            sQLitePreparedStatement = this.database.executeFast("UPDATE enc_chats SET seq_in = ?, seq_out = ?, use_count = ?, in_seq_no = ?, mtproto_seq = ? WHERE uid = ?");
            sQLitePreparedStatement.bindInteger(1, tLRPC$EncryptedChat.seq_in);
            sQLitePreparedStatement.bindInteger(2, tLRPC$EncryptedChat.seq_out);
            sQLitePreparedStatement.bindInteger(3, (tLRPC$EncryptedChat.key_use_count_in << 16) | tLRPC$EncryptedChat.key_use_count_out);
            sQLitePreparedStatement.bindInteger(4, tLRPC$EncryptedChat.in_seq_no);
            sQLitePreparedStatement.bindInteger(5, tLRPC$EncryptedChat.mtproto_seq);
            sQLitePreparedStatement.bindInteger(6, tLRPC$EncryptedChat.id);
            sQLitePreparedStatement.step();
            if (z && tLRPC$EncryptedChat.in_seq_no != 0) {
                long encryptedChatId = (long) DialogObject.getEncryptedChatId((long) tLRPC$EncryptedChat.id);
                this.database.executeFast(String.format(Locale.US, "DELETE FROM messages_v2 WHERE mid IN (SELECT m.mid FROM messages_v2 as m LEFT JOIN messages_seq as s ON m.mid = s.mid WHERE m.uid = %d AND m.date = 0 AND m.mid < 0 AND s.seq_out <= %d) AND uid = %d", new Object[]{Long.valueOf(encryptedChatId), Integer.valueOf(tLRPC$EncryptedChat.in_seq_no), Long.valueOf(encryptedChatId)})).stepThis().dispose();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (sQLitePreparedStatement == null) {
                return;
            }
        } catch (Throwable th) {
            if (sQLitePreparedStatement != null) {
                sQLitePreparedStatement.dispose();
            }
            throw th;
        }
        sQLitePreparedStatement.dispose();
    }

    public void updateEncryptedChatTTL(TLRPC$EncryptedChat tLRPC$EncryptedChat) {
        if (tLRPC$EncryptedChat != null) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda165(this, tLRPC$EncryptedChat));
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$updateEncryptedChatTTL$136(TLRPC$EncryptedChat tLRPC$EncryptedChat) {
        SQLitePreparedStatement sQLitePreparedStatement = null;
        try {
            sQLitePreparedStatement = this.database.executeFast("UPDATE enc_chats SET ttl = ? WHERE uid = ?");
            sQLitePreparedStatement.bindInteger(1, tLRPC$EncryptedChat.ttl);
            sQLitePreparedStatement.bindInteger(2, tLRPC$EncryptedChat.id);
            sQLitePreparedStatement.step();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (sQLitePreparedStatement == null) {
                return;
            }
        } catch (Throwable th) {
            if (sQLitePreparedStatement != null) {
                sQLitePreparedStatement.dispose();
            }
            throw th;
        }
        sQLitePreparedStatement.dispose();
    }

    public void updateEncryptedChatLayer(TLRPC$EncryptedChat tLRPC$EncryptedChat) {
        if (tLRPC$EncryptedChat != null) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda164(this, tLRPC$EncryptedChat));
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$updateEncryptedChatLayer$137(TLRPC$EncryptedChat tLRPC$EncryptedChat) {
        SQLitePreparedStatement sQLitePreparedStatement = null;
        try {
            sQLitePreparedStatement = this.database.executeFast("UPDATE enc_chats SET layer = ? WHERE uid = ?");
            sQLitePreparedStatement.bindInteger(1, tLRPC$EncryptedChat.layer);
            sQLitePreparedStatement.bindInteger(2, tLRPC$EncryptedChat.id);
            sQLitePreparedStatement.step();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (sQLitePreparedStatement == null) {
                return;
            }
        } catch (Throwable th) {
            if (sQLitePreparedStatement != null) {
                sQLitePreparedStatement.dispose();
            }
            throw th;
        }
        sQLitePreparedStatement.dispose();
    }

    public void updateEncryptedChat(TLRPC$EncryptedChat tLRPC$EncryptedChat) {
        if (tLRPC$EncryptedChat != null) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda166(this, tLRPC$EncryptedChat));
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$updateEncryptedChat$138(TLRPC$EncryptedChat tLRPC$EncryptedChat) {
        byte[] bArr;
        SQLitePreparedStatement sQLitePreparedStatement = null;
        try {
            byte[] bArr2 = tLRPC$EncryptedChat.key_hash;
            if ((bArr2 == null || bArr2.length < 16) && (bArr = tLRPC$EncryptedChat.auth_key) != null) {
                tLRPC$EncryptedChat.key_hash = AndroidUtilities.calcAuthKeyHash(bArr);
            }
            sQLitePreparedStatement = this.database.executeFast("UPDATE enc_chats SET data = ?, g = ?, authkey = ?, ttl = ?, layer = ?, seq_in = ?, seq_out = ?, use_count = ?, exchange_id = ?, key_date = ?, fprint = ?, fauthkey = ?, khash = ?, in_seq_no = ?, admin_id = ?, mtproto_seq = ? WHERE uid = ?");
            NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(tLRPC$EncryptedChat.getObjectSize());
            byte[] bArr3 = tLRPC$EncryptedChat.a_or_b;
            NativeByteBuffer nativeByteBuffer2 = new NativeByteBuffer(bArr3 != null ? bArr3.length : 1);
            byte[] bArr4 = tLRPC$EncryptedChat.auth_key;
            NativeByteBuffer nativeByteBuffer3 = new NativeByteBuffer(bArr4 != null ? bArr4.length : 1);
            byte[] bArr5 = tLRPC$EncryptedChat.future_auth_key;
            NativeByteBuffer nativeByteBuffer4 = new NativeByteBuffer(bArr5 != null ? bArr5.length : 1);
            byte[] bArr6 = tLRPC$EncryptedChat.key_hash;
            NativeByteBuffer nativeByteBuffer5 = new NativeByteBuffer(bArr6 != null ? bArr6.length : 1);
            tLRPC$EncryptedChat.serializeToStream(nativeByteBuffer);
            sQLitePreparedStatement.bindByteBuffer(1, nativeByteBuffer);
            byte[] bArr7 = tLRPC$EncryptedChat.a_or_b;
            if (bArr7 != null) {
                nativeByteBuffer2.writeBytes(bArr7);
            }
            byte[] bArr8 = tLRPC$EncryptedChat.auth_key;
            if (bArr8 != null) {
                nativeByteBuffer3.writeBytes(bArr8);
            }
            byte[] bArr9 = tLRPC$EncryptedChat.future_auth_key;
            if (bArr9 != null) {
                nativeByteBuffer4.writeBytes(bArr9);
            }
            byte[] bArr10 = tLRPC$EncryptedChat.key_hash;
            if (bArr10 != null) {
                nativeByteBuffer5.writeBytes(bArr10);
            }
            sQLitePreparedStatement.bindByteBuffer(2, nativeByteBuffer2);
            sQLitePreparedStatement.bindByteBuffer(3, nativeByteBuffer3);
            sQLitePreparedStatement.bindInteger(4, tLRPC$EncryptedChat.ttl);
            sQLitePreparedStatement.bindInteger(5, tLRPC$EncryptedChat.layer);
            sQLitePreparedStatement.bindInteger(6, tLRPC$EncryptedChat.seq_in);
            sQLitePreparedStatement.bindInteger(7, tLRPC$EncryptedChat.seq_out);
            sQLitePreparedStatement.bindInteger(8, (tLRPC$EncryptedChat.key_use_count_in << 16) | tLRPC$EncryptedChat.key_use_count_out);
            sQLitePreparedStatement.bindLong(9, tLRPC$EncryptedChat.exchange_id);
            sQLitePreparedStatement.bindInteger(10, tLRPC$EncryptedChat.key_create_date);
            sQLitePreparedStatement.bindLong(11, tLRPC$EncryptedChat.future_key_fingerprint);
            sQLitePreparedStatement.bindByteBuffer(12, nativeByteBuffer4);
            sQLitePreparedStatement.bindByteBuffer(13, nativeByteBuffer5);
            sQLitePreparedStatement.bindInteger(14, tLRPC$EncryptedChat.in_seq_no);
            sQLitePreparedStatement.bindLong(15, tLRPC$EncryptedChat.admin_id);
            sQLitePreparedStatement.bindInteger(16, tLRPC$EncryptedChat.mtproto_seq);
            sQLitePreparedStatement.bindInteger(17, tLRPC$EncryptedChat.id);
            sQLitePreparedStatement.step();
            nativeByteBuffer.reuse();
            nativeByteBuffer2.reuse();
            nativeByteBuffer3.reuse();
            nativeByteBuffer4.reuse();
            nativeByteBuffer5.reuse();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (sQLitePreparedStatement == null) {
                return;
            }
        } catch (Throwable th) {
            if (sQLitePreparedStatement != null) {
                sQLitePreparedStatement.dispose();
            }
            throw th;
        }
        sQLitePreparedStatement.dispose();
    }

    public void isDialogHasTopMessage(long j, Runnable runnable) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda93(this, j, runnable));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:12:0x0032, code lost:
        if (r1 == null) goto L_0x0035;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$isDialogHasTopMessage$139(long r8, java.lang.Runnable r10) {
        /*
            r7 = this;
            r0 = 0
            r1 = 0
            org.telegram.SQLite.SQLiteDatabase r2 = r7.database     // Catch:{ Exception -> 0x002e }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x002e }
            java.lang.String r4 = "SELECT last_mid FROM dialogs WHERE did = %d"
            r5 = 1
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x002e }
            java.lang.Long r8 = java.lang.Long.valueOf(r8)     // Catch:{ Exception -> 0x002e }
            r6[r0] = r8     // Catch:{ Exception -> 0x002e }
            java.lang.String r8 = java.lang.String.format(r3, r4, r6)     // Catch:{ Exception -> 0x002e }
            java.lang.Object[] r9 = new java.lang.Object[r0]     // Catch:{ Exception -> 0x002e }
            org.telegram.SQLite.SQLiteCursor r1 = r2.queryFinalized(r8, r9)     // Catch:{ Exception -> 0x002e }
            boolean r8 = r1.next()     // Catch:{ Exception -> 0x002e }
            if (r8 == 0) goto L_0x0028
            int r8 = r1.intValue(r0)     // Catch:{ Exception -> 0x002e }
            if (r8 == 0) goto L_0x0028
            r0 = 1
        L_0x0028:
            r1.dispose()
            goto L_0x0035
        L_0x002c:
            r8 = move-exception
            goto L_0x003b
        L_0x002e:
            r8 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r8)     // Catch:{ all -> 0x002c }
            if (r1 == 0) goto L_0x0035
            goto L_0x0028
        L_0x0035:
            if (r0 != 0) goto L_0x003a
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r10)
        L_0x003a:
            return
        L_0x003b:
            if (r1 == 0) goto L_0x0040
            r1.dispose()
        L_0x0040:
            goto L_0x0042
        L_0x0041:
            throw r8
        L_0x0042:
            goto L_0x0041
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$isDialogHasTopMessage$139(long, java.lang.Runnable):void");
    }

    public boolean hasAuthMessage(int i) {
        CountDownLatch countDownLatch = new CountDownLatch(1);
        boolean[] zArr = new boolean[1];
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda62(this, i, zArr, countDownLatch));
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return zArr[0];
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$hasAuthMessage$140(int i, boolean[] zArr, CountDownLatch countDownLatch) {
        try {
            this.database.queryFinalized(String.format(Locale.US, "SELECT mid FROM messages_v2 WHERE uid = 777000 AND date = %d AND mid < 0 LIMIT 1", new Object[]{Integer.valueOf(i)}), new Object[0]);
            throw null;
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            countDownLatch.countDown();
        } catch (Throwable th) {
            countDownLatch.countDown();
            throw th;
        }
    }

    public void getEncryptedChat(long j, CountDownLatch countDownLatch, ArrayList<TLObject> arrayList) {
        if (countDownLatch != null && arrayList != null) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda99(this, j, arrayList, countDownLatch));
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$getEncryptedChat$141(long j, ArrayList arrayList, CountDownLatch countDownLatch) {
        try {
            ArrayList arrayList2 = new ArrayList();
            ArrayList arrayList3 = new ArrayList();
            getEncryptedChatsInternal("" + j, arrayList3, arrayList2);
            if (!arrayList3.isEmpty() && !arrayList2.isEmpty()) {
                ArrayList arrayList4 = new ArrayList();
                getUsersInternal(TextUtils.join(",", arrayList2), arrayList4);
                if (!arrayList4.isEmpty()) {
                    arrayList.add((TLObject) arrayList3.get(0));
                    arrayList.add((TLObject) arrayList4.get(0));
                }
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        } catch (Throwable th) {
            countDownLatch.countDown();
            throw th;
        }
        countDownLatch.countDown();
    }

    public void putEncryptedChat(TLRPC$EncryptedChat tLRPC$EncryptedChat, TLRPC$User tLRPC$User, TLRPC$Dialog tLRPC$Dialog) {
        if (tLRPC$EncryptedChat != null) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda167(this, tLRPC$EncryptedChat, tLRPC$User, tLRPC$Dialog));
        }
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:60:0x0187  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$putEncryptedChat$142(org.telegram.tgnet.TLRPC$EncryptedChat r17, org.telegram.tgnet.TLRPC$User r18, org.telegram.tgnet.TLRPC$Dialog r19) {
        /*
            r16 = this;
            r1 = r16
            r0 = r17
            r2 = r18
            r3 = r19
            byte[] r5 = r0.key_hash     // Catch:{ Exception -> 0x0179, all -> 0x0176 }
            r6 = 16
            if (r5 == 0) goto L_0x0011
            int r5 = r5.length     // Catch:{ Exception -> 0x0179, all -> 0x0176 }
            if (r5 >= r6) goto L_0x001b
        L_0x0011:
            byte[] r5 = r0.auth_key     // Catch:{ Exception -> 0x0179, all -> 0x0176 }
            if (r5 == 0) goto L_0x001b
            byte[] r5 = org.telegram.messenger.AndroidUtilities.calcAuthKeyHash(r5)     // Catch:{ Exception -> 0x0179, all -> 0x0176 }
            r0.key_hash = r5     // Catch:{ Exception -> 0x0179, all -> 0x0176 }
        L_0x001b:
            org.telegram.SQLite.SQLiteDatabase r5 = r1.database     // Catch:{ Exception -> 0x0179, all -> 0x0176 }
            java.lang.String r7 = "REPLACE INTO enc_chats VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r5 = r5.executeFast(r7)     // Catch:{ Exception -> 0x0179, all -> 0x0176 }
            org.telegram.tgnet.NativeByteBuffer r7 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            int r8 = r17.getObjectSize()     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r7.<init>((int) r8)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            org.telegram.tgnet.NativeByteBuffer r8 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            byte[] r9 = r0.a_or_b     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r10 = 1
            if (r9 == 0) goto L_0x0035
            int r9 = r9.length     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            goto L_0x0036
        L_0x0035:
            r9 = 1
        L_0x0036:
            r8.<init>((int) r9)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            org.telegram.tgnet.NativeByteBuffer r9 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            byte[] r11 = r0.auth_key     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            if (r11 == 0) goto L_0x0041
            int r11 = r11.length     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            goto L_0x0042
        L_0x0041:
            r11 = 1
        L_0x0042:
            r9.<init>((int) r11)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            org.telegram.tgnet.NativeByteBuffer r11 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            byte[] r12 = r0.future_auth_key     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            if (r12 == 0) goto L_0x004d
            int r12 = r12.length     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            goto L_0x004e
        L_0x004d:
            r12 = 1
        L_0x004e:
            r11.<init>((int) r12)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            org.telegram.tgnet.NativeByteBuffer r12 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            byte[] r13 = r0.key_hash     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            if (r13 == 0) goto L_0x0059
            int r13 = r13.length     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            goto L_0x005a
        L_0x0059:
            r13 = 1
        L_0x005a:
            r12.<init>((int) r13)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r0.serializeToStream(r7)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            int r13 = r0.id     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r5.bindInteger(r10, r13)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            long r13 = r2.id     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r15 = 2
            r5.bindLong(r15, r13)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            java.lang.String r2 = r1.formatUserSearchName(r2)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r13 = 3
            r5.bindString(r13, r2)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r2 = 4
            r5.bindByteBuffer((int) r2, (org.telegram.tgnet.NativeByteBuffer) r7)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            byte[] r14 = r0.a_or_b     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            if (r14 == 0) goto L_0x007e
            r8.writeBytes((byte[]) r14)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
        L_0x007e:
            byte[] r14 = r0.auth_key     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            if (r14 == 0) goto L_0x0085
            r9.writeBytes((byte[]) r14)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
        L_0x0085:
            byte[] r14 = r0.future_auth_key     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            if (r14 == 0) goto L_0x008c
            r11.writeBytes((byte[]) r14)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
        L_0x008c:
            byte[] r14 = r0.key_hash     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            if (r14 == 0) goto L_0x0093
            r12.writeBytes((byte[]) r14)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
        L_0x0093:
            r14 = 5
            r5.bindByteBuffer((int) r14, (org.telegram.tgnet.NativeByteBuffer) r8)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r4 = 6
            r5.bindByteBuffer((int) r4, (org.telegram.tgnet.NativeByteBuffer) r9)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            int r4 = r0.ttl     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r14 = 7
            r5.bindInteger(r14, r4)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            int r4 = r0.layer     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r14 = 8
            r5.bindInteger(r14, r4)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            int r4 = r0.seq_in     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r14 = 9
            r5.bindInteger(r14, r4)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            int r4 = r0.seq_out     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r14 = 10
            r5.bindInteger(r14, r4)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            short r4 = r0.key_use_count_in     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            int r4 = r4 << r6
            short r14 = r0.key_use_count_out     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r4 = r4 | r14
            r14 = 11
            r5.bindInteger(r14, r4)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            long r13 = r0.exchange_id     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r4 = 12
            r5.bindLong(r4, r13)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            int r13 = r0.key_create_date     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r14 = 13
            r5.bindInteger(r14, r13)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            long r14 = r0.future_key_fingerprint     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r13 = 14
            r5.bindLong(r13, r14)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r14 = 15
            r5.bindByteBuffer((int) r14, (org.telegram.tgnet.NativeByteBuffer) r11)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r5.bindByteBuffer((int) r6, (org.telegram.tgnet.NativeByteBuffer) r12)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r6 = 17
            int r15 = r0.in_seq_no     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r5.bindInteger(r6, r15)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r6 = 18
            long r14 = r0.admin_id     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r5.bindLong(r6, r14)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r6 = 19
            int r0 = r0.mtproto_seq     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r5.bindInteger(r6, r0)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r5.step()     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r5.dispose()     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r7.reuse()     // Catch:{ Exception -> 0x0179, all -> 0x0176 }
            r8.reuse()     // Catch:{ Exception -> 0x0179, all -> 0x0176 }
            r9.reuse()     // Catch:{ Exception -> 0x0179, all -> 0x0176 }
            r11.reuse()     // Catch:{ Exception -> 0x0179, all -> 0x0176 }
            r12.reuse()     // Catch:{ Exception -> 0x0179, all -> 0x0176 }
            if (r3 == 0) goto L_0x0183
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0179, all -> 0x0176 }
            java.lang.String r5 = "REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r5 = r0.executeFast(r5)     // Catch:{ Exception -> 0x0179, all -> 0x0176 }
            long r6 = r3.id     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r5.bindLong(r10, r6)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            int r0 = r3.last_message_date     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r6 = 2
            r5.bindInteger(r6, r0)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            int r0 = r3.unread_count     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r6 = 3
            r5.bindInteger(r6, r0)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            int r0 = r3.top_message     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r5.bindInteger(r2, r0)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            int r0 = r3.read_inbox_max_id     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r2 = 5
            r5.bindInteger(r2, r0)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            int r0 = r3.read_outbox_max_id     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r2 = 6
            r5.bindInteger(r2, r0)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r0 = 0
            r2 = 7
            r5.bindInteger(r2, r0)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            int r2 = r3.unread_mentions_count     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r6 = 8
            r5.bindInteger(r6, r2)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            int r2 = r3.pts     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r6 = 9
            r5.bindInteger(r6, r2)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r2 = 10
            r5.bindInteger(r2, r0)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            int r0 = r3.pinnedNum     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r2 = 11
            r5.bindInteger(r2, r0)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            int r0 = r3.flags     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r5.bindInteger(r4, r0)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            int r0 = r3.folder_id     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r2 = 13
            r5.bindInteger(r2, r0)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r5.bindNull(r13)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            int r0 = r3.unread_reactions_count     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r2 = 15
            r5.bindInteger(r2, r0)     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r5.step()     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            r5.dispose()     // Catch:{ Exception -> 0x0173, all -> 0x0170 }
            goto L_0x0183
        L_0x0170:
            r0 = move-exception
            r4 = r5
            goto L_0x0185
        L_0x0173:
            r0 = move-exception
            r4 = r5
            goto L_0x017b
        L_0x0176:
            r0 = move-exception
            r4 = 0
            goto L_0x0185
        L_0x0179:
            r0 = move-exception
            r4 = 0
        L_0x017b:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0184 }
            if (r4 == 0) goto L_0x0183
            r4.dispose()
        L_0x0183:
            return
        L_0x0184:
            r0 = move-exception
        L_0x0185:
            if (r4 == 0) goto L_0x018a
            r4.dispose()
        L_0x018a:
            throw r0
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$putEncryptedChat$142(org.telegram.tgnet.TLRPC$EncryptedChat, org.telegram.tgnet.TLRPC$User, org.telegram.tgnet.TLRPC$Dialog):void");
    }

    private String formatUserSearchName(TLRPC$User tLRPC$User) {
        StringBuilder sb = new StringBuilder();
        String str = tLRPC$User.first_name;
        if (str != null && str.length() > 0) {
            sb.append(tLRPC$User.first_name);
        }
        String str2 = tLRPC$User.last_name;
        if (str2 != null && str2.length() > 0) {
            if (sb.length() > 0) {
                sb.append(" ");
            }
            sb.append(tLRPC$User.last_name);
        }
        sb.append(";;;");
        String str3 = tLRPC$User.username;
        if (str3 != null && str3.length() > 0) {
            sb.append(tLRPC$User.username);
        }
        return sb.toString().toLowerCase();
    }

    private void putUsersInternal(ArrayList<TLRPC$User> arrayList) throws Exception {
        if (arrayList != null && !arrayList.isEmpty()) {
            SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO users VALUES(?, ?, ?, ?)");
            for (int i = 0; i < arrayList.size(); i++) {
                TLRPC$User tLRPC$User = arrayList.get(i);
                if (tLRPC$User.min) {
                    SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT data FROM users WHERE uid = %d", new Object[]{Long.valueOf(tLRPC$User.id)}), new Object[0]);
                    if (queryFinalized.next()) {
                        try {
                            NativeByteBuffer byteBufferValue = queryFinalized.byteBufferValue(0);
                            if (byteBufferValue != null) {
                                TLRPC$User TLdeserialize = TLRPC$User.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                                byteBufferValue.reuse();
                                if (TLdeserialize != null) {
                                    String str = tLRPC$User.username;
                                    if (str != null) {
                                        TLdeserialize.username = str;
                                        TLdeserialize.flags |= 8;
                                    } else {
                                        TLdeserialize.username = null;
                                        TLdeserialize.flags &= -9;
                                    }
                                    if (tLRPC$User.apply_min_photo) {
                                        TLRPC$UserProfilePhoto tLRPC$UserProfilePhoto = tLRPC$User.photo;
                                        if (tLRPC$UserProfilePhoto != null) {
                                            TLdeserialize.photo = tLRPC$UserProfilePhoto;
                                            TLdeserialize.flags |= 32;
                                        } else {
                                            TLdeserialize.photo = null;
                                            TLdeserialize.flags &= -33;
                                        }
                                    }
                                    tLRPC$User = TLdeserialize;
                                }
                            }
                        } catch (Exception e) {
                            FileLog.e((Throwable) e);
                        }
                    }
                    queryFinalized.dispose();
                }
                executeFast.requery();
                NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(tLRPC$User.getObjectSize());
                tLRPC$User.serializeToStream(nativeByteBuffer);
                executeFast.bindLong(1, tLRPC$User.id);
                executeFast.bindString(2, formatUserSearchName(tLRPC$User));
                TLRPC$UserStatus tLRPC$UserStatus = tLRPC$User.status;
                if (tLRPC$UserStatus != null) {
                    if (tLRPC$UserStatus instanceof TLRPC$TL_userStatusRecently) {
                        tLRPC$UserStatus.expires = -100;
                    } else if (tLRPC$UserStatus instanceof TLRPC$TL_userStatusLastWeek) {
                        tLRPC$UserStatus.expires = -101;
                    } else if (tLRPC$UserStatus instanceof TLRPC$TL_userStatusLastMonth) {
                        tLRPC$UserStatus.expires = -102;
                    }
                    executeFast.bindInteger(3, tLRPC$UserStatus.expires);
                } else {
                    executeFast.bindInteger(3, 0);
                }
                executeFast.bindByteBuffer(4, nativeByteBuffer);
                executeFast.step();
                nativeByteBuffer.reuse();
            }
            executeFast.dispose();
        }
    }

    public void updateChatDefaultBannedRights(long j, TLRPC$TL_chatBannedRights tLRPC$TL_chatBannedRights, int i) {
        if (tLRPC$TL_chatBannedRights != null && j != 0) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda78(this, j, i, tLRPC$TL_chatBannedRights));
        }
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:33:0x008b  */
    /* JADX WARNING: Removed duplicated region for block: B:35:0x0090  */
    /* JADX WARNING: Removed duplicated region for block: B:38:0x0097  */
    /* JADX WARNING: Removed duplicated region for block: B:40:0x009c  */
    /* JADX WARNING: Removed duplicated region for block: B:45:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$updateChatDefaultBannedRights$143(long r8, int r10, org.telegram.tgnet.TLRPC$TL_chatBannedRights r11) {
        /*
            r7 = this;
            r0 = 0
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
            java.lang.String r3 = "SELECT data FROM chats WHERE uid = %d"
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
            java.lang.Long r8 = java.lang.Long.valueOf(r8)     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
            r9 = 0
            r5[r9] = r8     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
            java.lang.String r8 = java.lang.String.format(r2, r3, r5)     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
            java.lang.Object[] r2 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
            org.telegram.SQLite.SQLiteCursor r8 = r1.queryFinalized(r8, r2)     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
            boolean r1 = r8.next()     // Catch:{ Exception -> 0x007c, all -> 0x0077 }
            if (r1 == 0) goto L_0x0033
            org.telegram.tgnet.NativeByteBuffer r1 = r8.byteBufferValue(r9)     // Catch:{ Exception -> 0x007c, all -> 0x0077 }
            if (r1 == 0) goto L_0x0033
            int r2 = r1.readInt32(r9)     // Catch:{ Exception -> 0x007c, all -> 0x0077 }
            org.telegram.tgnet.TLRPC$Chat r9 = org.telegram.tgnet.TLRPC$Chat.TLdeserialize(r1, r2, r9)     // Catch:{ Exception -> 0x007c, all -> 0x0077 }
            r1.reuse()     // Catch:{ Exception -> 0x007c, all -> 0x0077 }
            goto L_0x0034
        L_0x0033:
            r9 = r0
        L_0x0034:
            r8.dispose()     // Catch:{ Exception -> 0x007c, all -> 0x0077 }
            if (r9 == 0) goto L_0x0076
            org.telegram.tgnet.TLRPC$TL_chatBannedRights r8 = r9.default_banned_rights     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
            if (r8 == 0) goto L_0x0042
            int r8 = r9.version     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
            if (r10 >= r8) goto L_0x0042
            goto L_0x0076
        L_0x0042:
            r9.default_banned_rights = r11     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
            int r8 = r9.flags     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
            r11 = 262144(0x40000, float:3.67342E-40)
            r8 = r8 | r11
            r9.flags = r8     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
            r9.version = r10     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
            org.telegram.SQLite.SQLiteDatabase r8 = r7.database     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
            java.lang.String r10 = "UPDATE chats SET data = ? WHERE uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r8 = r8.executeFast(r10)     // Catch:{ Exception -> 0x0084, all -> 0x0081 }
            org.telegram.tgnet.NativeByteBuffer r10 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0074 }
            int r11 = r9.getObjectSize()     // Catch:{ Exception -> 0x0074 }
            r10.<init>((int) r11)     // Catch:{ Exception -> 0x0074 }
            r9.serializeToStream(r10)     // Catch:{ Exception -> 0x0074 }
            r8.bindByteBuffer((int) r4, (org.telegram.tgnet.NativeByteBuffer) r10)     // Catch:{ Exception -> 0x0074 }
            r11 = 2
            long r1 = r9.id     // Catch:{ Exception -> 0x0074 }
            r8.bindLong(r11, r1)     // Catch:{ Exception -> 0x0074 }
            r8.step()     // Catch:{ Exception -> 0x0074 }
            r10.reuse()     // Catch:{ Exception -> 0x0074 }
            r8.dispose()     // Catch:{ Exception -> 0x0074 }
            goto L_0x0093
        L_0x0074:
            r9 = move-exception
            goto L_0x0086
        L_0x0076:
            return
        L_0x0077:
            r9 = move-exception
            r6 = r0
            r0 = r8
            r8 = r6
            goto L_0x0095
        L_0x007c:
            r9 = move-exception
            r6 = r0
            r0 = r8
            r8 = r6
            goto L_0x0086
        L_0x0081:
            r9 = move-exception
            r8 = r0
            goto L_0x0095
        L_0x0084:
            r9 = move-exception
            r8 = r0
        L_0x0086:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r9)     // Catch:{ all -> 0x0094 }
            if (r0 == 0) goto L_0x008e
            r0.dispose()
        L_0x008e:
            if (r8 == 0) goto L_0x0093
            r8.dispose()
        L_0x0093:
            return
        L_0x0094:
            r9 = move-exception
        L_0x0095:
            if (r0 == 0) goto L_0x009a
            r0.dispose()
        L_0x009a:
            if (r8 == 0) goto L_0x009f
            r8.dispose()
        L_0x009f:
            throw r9
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$updateChatDefaultBannedRights$143(long, int, org.telegram.tgnet.TLRPC$TL_chatBannedRights):void");
    }

    private void putChatsInternal(ArrayList<TLRPC$Chat> arrayList) throws Exception {
        if (arrayList != null && !arrayList.isEmpty()) {
            SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO chats VALUES(?, ?, ?)");
            for (int i = 0; i < arrayList.size(); i++) {
                TLRPC$Chat tLRPC$Chat = arrayList.get(i);
                if (tLRPC$Chat.min) {
                    SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT data FROM chats WHERE uid = %d", new Object[]{Long.valueOf(tLRPC$Chat.id)}), new Object[0]);
                    if (queryFinalized.next()) {
                        try {
                            NativeByteBuffer byteBufferValue = queryFinalized.byteBufferValue(0);
                            if (byteBufferValue != null) {
                                TLRPC$Chat TLdeserialize = TLRPC$Chat.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                                byteBufferValue.reuse();
                                if (TLdeserialize != null) {
                                    TLdeserialize.title = tLRPC$Chat.title;
                                    TLdeserialize.photo = tLRPC$Chat.photo;
                                    TLdeserialize.broadcast = tLRPC$Chat.broadcast;
                                    TLdeserialize.verified = tLRPC$Chat.verified;
                                    TLdeserialize.megagroup = tLRPC$Chat.megagroup;
                                    TLdeserialize.call_not_empty = tLRPC$Chat.call_not_empty;
                                    TLdeserialize.call_active = tLRPC$Chat.call_active;
                                    TLRPC$TL_chatBannedRights tLRPC$TL_chatBannedRights = tLRPC$Chat.default_banned_rights;
                                    if (tLRPC$TL_chatBannedRights != null) {
                                        TLdeserialize.default_banned_rights = tLRPC$TL_chatBannedRights;
                                        TLdeserialize.flags |= 262144;
                                    }
                                    TLRPC$TL_chatAdminRights tLRPC$TL_chatAdminRights = tLRPC$Chat.admin_rights;
                                    if (tLRPC$TL_chatAdminRights != null) {
                                        TLdeserialize.admin_rights = tLRPC$TL_chatAdminRights;
                                        TLdeserialize.flags |= 16384;
                                    }
                                    TLRPC$TL_chatBannedRights tLRPC$TL_chatBannedRights2 = tLRPC$Chat.banned_rights;
                                    if (tLRPC$TL_chatBannedRights2 != null) {
                                        TLdeserialize.banned_rights = tLRPC$TL_chatBannedRights2;
                                        TLdeserialize.flags |= 32768;
                                    }
                                    String str = tLRPC$Chat.username;
                                    if (str != null) {
                                        TLdeserialize.username = str;
                                        TLdeserialize.flags |= 64;
                                    } else {
                                        TLdeserialize.username = null;
                                        TLdeserialize.flags &= -65;
                                    }
                                    tLRPC$Chat = TLdeserialize;
                                }
                            }
                        } catch (Exception e) {
                            FileLog.e((Throwable) e);
                        }
                    }
                    queryFinalized.dispose();
                }
                executeFast.requery();
                tLRPC$Chat.flags |= 131072;
                NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(tLRPC$Chat.getObjectSize());
                tLRPC$Chat.serializeToStream(nativeByteBuffer);
                executeFast.bindLong(1, tLRPC$Chat.id);
                String str2 = tLRPC$Chat.title;
                if (str2 != null) {
                    executeFast.bindString(2, str2.toLowerCase());
                } else {
                    executeFast.bindString(2, "");
                }
                executeFast.bindByteBuffer(3, nativeByteBuffer);
                executeFast.step();
                nativeByteBuffer.reuse();
            }
            executeFast.dispose();
        }
    }

    public void getUsersInternal(String str, ArrayList<TLRPC$User> arrayList) throws Exception {
        if (str != null && str.length() != 0 && arrayList != null) {
            SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT data, status FROM users WHERE uid IN(%s)", new Object[]{str}), new Object[0]);
            while (queryFinalized.next()) {
                try {
                    NativeByteBuffer byteBufferValue = queryFinalized.byteBufferValue(0);
                    if (byteBufferValue != null) {
                        TLRPC$User TLdeserialize = TLRPC$User.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                        byteBufferValue.reuse();
                        if (TLdeserialize != null) {
                            TLRPC$UserStatus tLRPC$UserStatus = TLdeserialize.status;
                            if (tLRPC$UserStatus != null) {
                                tLRPC$UserStatus.expires = queryFinalized.intValue(1);
                            }
                            arrayList.add(TLdeserialize);
                        }
                    }
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                }
            }
            queryFinalized.dispose();
        }
    }

    public void getChatsInternal(String str, ArrayList<TLRPC$Chat> arrayList) throws Exception {
        if (str != null && str.length() != 0 && arrayList != null) {
            SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT data FROM chats WHERE uid IN(%s)", new Object[]{str}), new Object[0]);
            while (queryFinalized.next()) {
                try {
                    NativeByteBuffer byteBufferValue = queryFinalized.byteBufferValue(0);
                    if (byteBufferValue != null) {
                        TLRPC$Chat TLdeserialize = TLRPC$Chat.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                        byteBufferValue.reuse();
                        if (TLdeserialize != null) {
                            arrayList.add(TLdeserialize);
                        }
                    }
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                }
            }
            queryFinalized.dispose();
        }
    }

    public void getEncryptedChatsInternal(String str, ArrayList<TLRPC$EncryptedChat> arrayList, ArrayList<Long> arrayList2) throws Exception {
        if (str != null && str.length() != 0 && arrayList != null) {
            SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT data, user, g, authkey, ttl, layer, seq_in, seq_out, use_count, exchange_id, key_date, fprint, fauthkey, khash, in_seq_no, admin_id, mtproto_seq FROM enc_chats WHERE uid IN(%s)", new Object[]{str}), new Object[0]);
            while (queryFinalized.next()) {
                try {
                    NativeByteBuffer byteBufferValue = queryFinalized.byteBufferValue(0);
                    if (byteBufferValue != null) {
                        TLRPC$EncryptedChat TLdeserialize = TLRPC$EncryptedChat.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                        byteBufferValue.reuse();
                        if (TLdeserialize != null) {
                            long longValue = queryFinalized.longValue(1);
                            TLdeserialize.user_id = longValue;
                            if (arrayList2 != null && !arrayList2.contains(Long.valueOf(longValue))) {
                                arrayList2.add(Long.valueOf(TLdeserialize.user_id));
                            }
                            TLdeserialize.a_or_b = queryFinalized.byteArrayValue(2);
                            TLdeserialize.auth_key = queryFinalized.byteArrayValue(3);
                            TLdeserialize.ttl = queryFinalized.intValue(4);
                            TLdeserialize.layer = queryFinalized.intValue(5);
                            TLdeserialize.seq_in = queryFinalized.intValue(6);
                            TLdeserialize.seq_out = queryFinalized.intValue(7);
                            int intValue = queryFinalized.intValue(8);
                            TLdeserialize.key_use_count_in = (short) (intValue >> 16);
                            TLdeserialize.key_use_count_out = (short) intValue;
                            TLdeserialize.exchange_id = queryFinalized.longValue(9);
                            TLdeserialize.key_create_date = queryFinalized.intValue(10);
                            TLdeserialize.future_key_fingerprint = queryFinalized.longValue(11);
                            TLdeserialize.future_auth_key = queryFinalized.byteArrayValue(12);
                            TLdeserialize.key_hash = queryFinalized.byteArrayValue(13);
                            TLdeserialize.in_seq_no = queryFinalized.intValue(14);
                            long longValue2 = queryFinalized.longValue(15);
                            if (longValue2 != 0) {
                                TLdeserialize.admin_id = longValue2;
                            }
                            TLdeserialize.mtproto_seq = queryFinalized.intValue(16);
                            arrayList.add(TLdeserialize);
                        }
                    }
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                }
            }
            queryFinalized.dispose();
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: putUsersAndChatsInternal */
    public void lambda$putUsersAndChats$144(ArrayList<TLRPC$User> arrayList, ArrayList<TLRPC$Chat> arrayList2, boolean z) {
        if (z) {
            try {
                this.database.beginTransaction();
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            } catch (Throwable th) {
                this.database.commitTransaction();
                throw th;
            }
        }
        putUsersInternal(arrayList);
        putChatsInternal(arrayList2);
        this.database.commitTransaction();
    }

    public void putUsersAndChats(ArrayList<TLRPC$User> arrayList, ArrayList<TLRPC$Chat> arrayList2, boolean z, boolean z2) {
        if (arrayList != null && arrayList.isEmpty() && arrayList2 != null && arrayList2.isEmpty()) {
            return;
        }
        if (z2) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda146(this, arrayList, arrayList2, z));
        } else {
            lambda$putUsersAndChats$144(arrayList, arrayList2, z);
        }
    }

    public void removeFromDownloadQueue(long j, int i, boolean z) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda185(this, z, i, j));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:23:0x008c  */
    /* JADX WARNING: Removed duplicated region for block: B:25:0x0092  */
    /* JADX WARNING: Removed duplicated region for block: B:30:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$removeFromDownloadQueue$145(boolean r9, int r10, long r11) {
        /*
            r8 = this;
            r0 = 2
            r1 = 0
            r2 = 1
            r3 = 0
            if (r9 == 0) goto L_0x0060
            org.telegram.SQLite.SQLiteDatabase r9 = r8.database     // Catch:{ Exception -> 0x0086 }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x0086 }
            java.lang.String r5 = "SELECT min(date) FROM download_queue WHERE type = %d"
            java.lang.Object[] r6 = new java.lang.Object[r2]     // Catch:{ Exception -> 0x0086 }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r10)     // Catch:{ Exception -> 0x0086 }
            r6[r3] = r7     // Catch:{ Exception -> 0x0086 }
            java.lang.String r5 = java.lang.String.format(r4, r5, r6)     // Catch:{ Exception -> 0x0086 }
            java.lang.Object[] r6 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x0086 }
            org.telegram.SQLite.SQLiteCursor r9 = r9.queryFinalized(r5, r6)     // Catch:{ Exception -> 0x0086 }
            boolean r5 = r9.next()     // Catch:{ Exception -> 0x005d, all -> 0x005a }
            r6 = -1
            if (r5 == 0) goto L_0x002a
            int r5 = r9.intValue(r3)     // Catch:{ Exception -> 0x005d, all -> 0x005a }
            goto L_0x002b
        L_0x002a:
            r5 = -1
        L_0x002b:
            r9.dispose()     // Catch:{ Exception -> 0x005d, all -> 0x005a }
            if (r5 == r6) goto L_0x008f
            org.telegram.SQLite.SQLiteDatabase r9 = r8.database     // Catch:{ Exception -> 0x0086 }
            java.lang.String r6 = "UPDATE download_queue SET date = %d WHERE uid = %d AND type = %d"
            r7 = 3
            java.lang.Object[] r7 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x0086 }
            int r5 = r5 - r2
            java.lang.Integer r5 = java.lang.Integer.valueOf(r5)     // Catch:{ Exception -> 0x0086 }
            r7[r3] = r5     // Catch:{ Exception -> 0x0086 }
            java.lang.Long r11 = java.lang.Long.valueOf(r11)     // Catch:{ Exception -> 0x0086 }
            r7[r2] = r11     // Catch:{ Exception -> 0x0086 }
            java.lang.Integer r10 = java.lang.Integer.valueOf(r10)     // Catch:{ Exception -> 0x0086 }
            r7[r0] = r10     // Catch:{ Exception -> 0x0086 }
            java.lang.String r10 = java.lang.String.format(r4, r6, r7)     // Catch:{ Exception -> 0x0086 }
            org.telegram.SQLite.SQLitePreparedStatement r9 = r9.executeFast(r10)     // Catch:{ Exception -> 0x0086 }
            org.telegram.SQLite.SQLitePreparedStatement r9 = r9.stepThis()     // Catch:{ Exception -> 0x0086 }
            r9.dispose()     // Catch:{ Exception -> 0x0086 }
            goto L_0x008f
        L_0x005a:
            r10 = move-exception
            r1 = r9
            goto L_0x0090
        L_0x005d:
            r10 = move-exception
            r1 = r9
            goto L_0x0087
        L_0x0060:
            org.telegram.SQLite.SQLiteDatabase r9 = r8.database     // Catch:{ Exception -> 0x0086 }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x0086 }
            java.lang.String r5 = "DELETE FROM download_queue WHERE uid = %d AND type = %d"
            java.lang.Object[] r0 = new java.lang.Object[r0]     // Catch:{ Exception -> 0x0086 }
            java.lang.Long r11 = java.lang.Long.valueOf(r11)     // Catch:{ Exception -> 0x0086 }
            r0[r3] = r11     // Catch:{ Exception -> 0x0086 }
            java.lang.Integer r10 = java.lang.Integer.valueOf(r10)     // Catch:{ Exception -> 0x0086 }
            r0[r2] = r10     // Catch:{ Exception -> 0x0086 }
            java.lang.String r10 = java.lang.String.format(r4, r5, r0)     // Catch:{ Exception -> 0x0086 }
            org.telegram.SQLite.SQLitePreparedStatement r9 = r9.executeFast(r10)     // Catch:{ Exception -> 0x0086 }
            org.telegram.SQLite.SQLitePreparedStatement r9 = r9.stepThis()     // Catch:{ Exception -> 0x0086 }
            r9.dispose()     // Catch:{ Exception -> 0x0086 }
            goto L_0x008f
        L_0x0084:
            r10 = move-exception
            goto L_0x0090
        L_0x0086:
            r10 = move-exception
        L_0x0087:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r10)     // Catch:{ all -> 0x0084 }
            if (r1 == 0) goto L_0x008f
            r1.dispose()
        L_0x008f:
            return
        L_0x0090:
            if (r1 == 0) goto L_0x0095
            r1.dispose()
        L_0x0095:
            throw r10
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$removeFromDownloadQueue$145(boolean, int, long):void");
    }

    /* JADX WARNING: Removed duplicated region for block: B:28:0x006b  */
    /* JADX WARNING: Removed duplicated region for block: B:32:0x0078  */
    /* JADX WARNING: Removed duplicated region for block: B:34:0x007d  */
    /* JADX WARNING: Removed duplicated region for block: B:39:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void deleteFromDownloadQueue(java.util.ArrayList<android.util.Pair<java.lang.Long, java.lang.Integer>> r9, boolean r10) {
        /*
            r8 = this;
            if (r9 == 0) goto L_0x0083
            boolean r0 = r9.isEmpty()
            if (r0 == 0) goto L_0x000a
            goto L_0x0083
        L_0x000a:
            r0 = 0
            if (r10 == 0) goto L_0x0012
            org.telegram.SQLite.SQLiteDatabase r1 = r8.database     // Catch:{ Exception -> 0x0065 }
            r1.beginTransaction()     // Catch:{ Exception -> 0x0065 }
        L_0x0012:
            org.telegram.SQLite.SQLiteDatabase r1 = r8.database     // Catch:{ Exception -> 0x0065 }
            java.lang.String r2 = "DELETE FROM download_queue WHERE uid = ? AND type = ?"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0065 }
            r2 = 0
            int r3 = r9.size()     // Catch:{ Exception -> 0x0060, all -> 0x005d }
        L_0x001f:
            if (r2 >= r3) goto L_0x0048
            java.lang.Object r4 = r9.get(r2)     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            android.util.Pair r4 = (android.util.Pair) r4     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            r1.requery()     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            java.lang.Object r5 = r4.first     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            java.lang.Long r5 = (java.lang.Long) r5     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            long r5 = r5.longValue()     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            r7 = 1
            r1.bindLong(r7, r5)     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            r5 = 2
            java.lang.Object r4 = r4.second     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            java.lang.Integer r4 = (java.lang.Integer) r4     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            int r4 = r4.intValue()     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            r1.bindInteger(r5, r4)     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            r1.step()     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            int r2 = r2 + 1
            goto L_0x001f
        L_0x0048:
            r1.dispose()     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            if (r10 == 0) goto L_0x0052
            org.telegram.SQLite.SQLiteDatabase r1 = r8.database     // Catch:{ Exception -> 0x0065 }
            r1.commitTransaction()     // Catch:{ Exception -> 0x0065 }
        L_0x0052:
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda138 r1 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda138     // Catch:{ Exception -> 0x0065 }
            r1.<init>(r8, r9)     // Catch:{ Exception -> 0x0065 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r1)     // Catch:{ Exception -> 0x0065 }
            if (r10 == 0) goto L_0x0075
            goto L_0x0070
        L_0x005d:
            r9 = move-exception
            r0 = r1
            goto L_0x0076
        L_0x0060:
            r9 = move-exception
            r0 = r1
            goto L_0x0066
        L_0x0063:
            r9 = move-exception
            goto L_0x0076
        L_0x0065:
            r9 = move-exception
        L_0x0066:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r9)     // Catch:{ all -> 0x0063 }
            if (r0 == 0) goto L_0x006e
            r0.dispose()
        L_0x006e:
            if (r10 == 0) goto L_0x0075
        L_0x0070:
            org.telegram.SQLite.SQLiteDatabase r9 = r8.database
            r9.commitTransaction()
        L_0x0075:
            return
        L_0x0076:
            if (r0 == 0) goto L_0x007b
            r0.dispose()
        L_0x007b:
            if (r10 == 0) goto L_0x0082
            org.telegram.SQLite.SQLiteDatabase r10 = r8.database
            r10.commitTransaction()
        L_0x0082:
            throw r9
        L_0x0083:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.deleteFromDownloadQueue(java.util.ArrayList, boolean):void");
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$deleteFromDownloadQueue$146(ArrayList arrayList) {
        getDownloadController().cancelDownloading(arrayList);
    }

    public void clearDownloadQueue(int i) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda32(this, i));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$clearDownloadQueue$147(int i) {
        if (i == 0) {
            try {
                this.database.executeFast("DELETE FROM download_queue WHERE 1").stepThis().dispose();
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        } else {
            this.database.executeFast(String.format(Locale.US, "DELETE FROM download_queue WHERE type = %d", new Object[]{Integer.valueOf(i)})).stepThis().dispose();
        }
    }

    public void getDownloadQueue(int i) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda30(this, i));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:12:0x005e, code lost:
        r4 = r6.ttl_seconds;
     */
    /* JADX WARNING: Removed duplicated region for block: B:46:0x00ab  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$getDownloadQueue$149(int r10) {
        /*
            r9 = this;
            r0 = 0
            java.util.ArrayList r1 = new java.util.ArrayList     // Catch:{ Exception -> 0x009f }
            r1.<init>()     // Catch:{ Exception -> 0x009f }
            org.telegram.SQLite.SQLiteDatabase r2 = r9.database     // Catch:{ Exception -> 0x009f }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x009f }
            java.lang.String r4 = "SELECT uid, type, data, parent FROM download_queue WHERE type = %d ORDER BY date DESC LIMIT 3"
            r5 = 1
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x009f }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r10)     // Catch:{ Exception -> 0x009f }
            r8 = 0
            r6[r8] = r7     // Catch:{ Exception -> 0x009f }
            java.lang.String r3 = java.lang.String.format(r3, r4, r6)     // Catch:{ Exception -> 0x009f }
            java.lang.Object[] r4 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x009f }
            org.telegram.SQLite.SQLiteCursor r2 = r2.queryFinalized(r3, r4)     // Catch:{ Exception -> 0x009f }
        L_0x0020:
            boolean r3 = r2.next()     // Catch:{ Exception -> 0x009a, all -> 0x0097 }
            if (r3 == 0) goto L_0x008b
            org.telegram.messenger.DownloadObject r3 = new org.telegram.messenger.DownloadObject     // Catch:{ Exception -> 0x009a, all -> 0x0097 }
            r3.<init>()     // Catch:{ Exception -> 0x009a, all -> 0x0097 }
            int r4 = r2.intValue(r5)     // Catch:{ Exception -> 0x009a, all -> 0x0097 }
            r3.type = r4     // Catch:{ Exception -> 0x009a, all -> 0x0097 }
            long r6 = r2.longValue(r8)     // Catch:{ Exception -> 0x009a, all -> 0x0097 }
            r3.id = r6     // Catch:{ Exception -> 0x009a, all -> 0x0097 }
            r4 = 3
            java.lang.String r4 = r2.stringValue(r4)     // Catch:{ Exception -> 0x009a, all -> 0x0097 }
            r3.parent = r4     // Catch:{ Exception -> 0x009a, all -> 0x0097 }
            r4 = 2
            org.telegram.tgnet.NativeByteBuffer r4 = r2.byteBufferValue(r4)     // Catch:{ Exception -> 0x009a, all -> 0x0097 }
            if (r4 == 0) goto L_0x0087
            int r6 = r4.readInt32(r8)     // Catch:{ Exception -> 0x009a, all -> 0x0097 }
            org.telegram.tgnet.TLRPC$MessageMedia r6 = org.telegram.tgnet.TLRPC$MessageMedia.TLdeserialize(r4, r6, r8)     // Catch:{ Exception -> 0x009a, all -> 0x0097 }
            r4.reuse()     // Catch:{ Exception -> 0x009a, all -> 0x0097 }
            org.telegram.tgnet.TLRPC$Document r4 = r6.document     // Catch:{ Exception -> 0x009a, all -> 0x0097 }
            r7 = 60
            if (r4 == 0) goto L_0x006a
            r3.object = r4     // Catch:{ Exception -> 0x009a, all -> 0x0097 }
            boolean r4 = org.telegram.messenger.MessageObject.isVideoDocument(r4)     // Catch:{ Exception -> 0x009a, all -> 0x0097 }
            if (r4 == 0) goto L_0x0066
            int r4 = r6.ttl_seconds     // Catch:{ Exception -> 0x009a, all -> 0x0097 }
            if (r4 <= 0) goto L_0x0066
            if (r4 > r7) goto L_0x0066
            r4 = 1
            goto L_0x0067
        L_0x0066:
            r4 = 0
        L_0x0067:
            r3.secret = r4     // Catch:{ Exception -> 0x009a, all -> 0x0097 }
            goto L_0x007b
        L_0x006a:
            org.telegram.tgnet.TLRPC$Photo r4 = r6.photo     // Catch:{ Exception -> 0x009a, all -> 0x0097 }
            if (r4 == 0) goto L_0x007b
            r3.object = r4     // Catch:{ Exception -> 0x009a, all -> 0x0097 }
            int r4 = r6.ttl_seconds     // Catch:{ Exception -> 0x009a, all -> 0x0097 }
            if (r4 <= 0) goto L_0x0078
            if (r4 > r7) goto L_0x0078
            r4 = 1
            goto L_0x0079
        L_0x0078:
            r4 = 0
        L_0x0079:
            r3.secret = r4     // Catch:{ Exception -> 0x009a, all -> 0x0097 }
        L_0x007b:
            int r4 = r6.flags     // Catch:{ Exception -> 0x009a, all -> 0x0097 }
            r6 = -2147483648(0xfffffffvar_, float:-0.0)
            r4 = r4 & r6
            if (r4 == 0) goto L_0x0084
            r4 = 1
            goto L_0x0085
        L_0x0084:
            r4 = 0
        L_0x0085:
            r3.forceCache = r4     // Catch:{ Exception -> 0x009a, all -> 0x0097 }
        L_0x0087:
            r1.add(r3)     // Catch:{ Exception -> 0x009a, all -> 0x0097 }
            goto L_0x0020
        L_0x008b:
            r2.dispose()     // Catch:{ Exception -> 0x009a, all -> 0x0097 }
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda53 r2 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda53     // Catch:{ Exception -> 0x009f }
            r2.<init>(r9, r10, r1)     // Catch:{ Exception -> 0x009f }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r2)     // Catch:{ Exception -> 0x009f }
            goto L_0x00a8
        L_0x0097:
            r10 = move-exception
            r0 = r2
            goto L_0x00a9
        L_0x009a:
            r10 = move-exception
            r0 = r2
            goto L_0x00a0
        L_0x009d:
            r10 = move-exception
            goto L_0x00a9
        L_0x009f:
            r10 = move-exception
        L_0x00a0:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r10)     // Catch:{ all -> 0x009d }
            if (r0 == 0) goto L_0x00a8
            r0.dispose()
        L_0x00a8:
            return
        L_0x00a9:
            if (r0 == 0) goto L_0x00ae
            r0.dispose()
        L_0x00ae:
            goto L_0x00b0
        L_0x00af:
            throw r10
        L_0x00b0:
            goto L_0x00af
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$getDownloadQueue$149(int):void");
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$getDownloadQueue$148(int i, ArrayList arrayList) {
        getDownloadController().processDownloadObjects(i, arrayList);
    }

    private int getMessageMediaType(TLRPC$Message tLRPC$Message) {
        if (!(tLRPC$Message instanceof TLRPC$TL_message_secret)) {
            if (tLRPC$Message instanceof TLRPC$TL_message) {
                TLRPC$MessageMedia tLRPC$MessageMedia = tLRPC$Message.media;
                if (((tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaPhoto) || (tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaDocument)) && tLRPC$MessageMedia.ttl_seconds != 0) {
                    return 1;
                }
            }
            if ((tLRPC$Message.media instanceof TLRPC$TL_messageMediaPhoto) || MessageObject.isVideoMessage(tLRPC$Message)) {
                return 0;
            }
            return -1;
        } else if (!(tLRPC$Message.media instanceof TLRPC$TL_messageMediaPhoto) && !MessageObject.isGifMessage(tLRPC$Message) && !MessageObject.isVoiceMessage(tLRPC$Message) && !MessageObject.isVideoMessage(tLRPC$Message) && !MessageObject.isRoundVideoMessage(tLRPC$Message)) {
            return -1;
        } else {
            int i = tLRPC$Message.ttl;
            return (i <= 0 || i > 60) ? 0 : 1;
        }
    }

    public void putWebPages(LongSparseArray<TLRPC$WebPage> longSparseArray) {
        if (!isEmpty((LongSparseArray<?>) longSparseArray)) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda118(this, longSparseArray));
        }
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:82:0x019f  */
    /* JADX WARNING: Removed duplicated region for block: B:84:0x01a4  */
    /* JADX WARNING: Removed duplicated region for block: B:86:0x01a9  */
    /* JADX WARNING: Removed duplicated region for block: B:91:0x01b5  */
    /* JADX WARNING: Removed duplicated region for block: B:93:0x01ba  */
    /* JADX WARNING: Removed duplicated region for block: B:95:0x01bf  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$putWebPages$151(androidx.collection.LongSparseArray r18) {
        /*
            r17 = this;
            r1 = r17
            r0 = r18
            java.util.ArrayList r3 = new java.util.ArrayList     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            r3.<init>()     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            int r4 = r18.size()     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            r5 = 0
            r6 = 0
        L_0x000f:
            r7 = 2
            r8 = 1
            if (r6 >= r4) goto L_0x00ef
            org.telegram.SQLite.SQLiteDatabase r9 = r1.database     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            java.lang.StringBuilder r10 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            r10.<init>()     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            java.lang.String r11 = "SELECT mid, uid FROM webpage_pending_v2 WHERE id = "
            r10.append(r11)     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            long r11 = r0.keyAt(r6)     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            r10.append(r11)     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            java.lang.String r10 = r10.toString()     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            java.lang.Object[] r11 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            org.telegram.SQLite.SQLiteCursor r9 = r9.queryFinalized(r10, r11)     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            androidx.collection.LongSparseArray r10 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x00eb, all -> 0x00e7 }
            r10.<init>()     // Catch:{ Exception -> 0x00eb, all -> 0x00e7 }
        L_0x0035:
            boolean r11 = r9.next()     // Catch:{ Exception -> 0x00eb, all -> 0x00e7 }
            if (r11 == 0) goto L_0x005b
            long r11 = r9.longValue(r8)     // Catch:{ Exception -> 0x00eb, all -> 0x00e7 }
            java.lang.Object r13 = r10.get(r11)     // Catch:{ Exception -> 0x00eb, all -> 0x00e7 }
            java.util.ArrayList r13 = (java.util.ArrayList) r13     // Catch:{ Exception -> 0x00eb, all -> 0x00e7 }
            if (r13 != 0) goto L_0x004f
            java.util.ArrayList r13 = new java.util.ArrayList     // Catch:{ Exception -> 0x00eb, all -> 0x00e7 }
            r13.<init>()     // Catch:{ Exception -> 0x00eb, all -> 0x00e7 }
            r10.put(r11, r13)     // Catch:{ Exception -> 0x00eb, all -> 0x00e7 }
        L_0x004f:
            int r11 = r9.intValue(r5)     // Catch:{ Exception -> 0x00eb, all -> 0x00e7 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r11)     // Catch:{ Exception -> 0x00eb, all -> 0x00e7 }
            r13.add(r11)     // Catch:{ Exception -> 0x00eb, all -> 0x00e7 }
            goto L_0x0035
        L_0x005b:
            r9.dispose()     // Catch:{ Exception -> 0x00eb, all -> 0x00e7 }
            boolean r9 = r10.isEmpty()     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            if (r9 == 0) goto L_0x0067
        L_0x0064:
            r14 = 0
            goto L_0x00e2
        L_0x0067:
            int r9 = r10.size()     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            r11 = 0
        L_0x006c:
            if (r11 >= r9) goto L_0x0064
            long r12 = r10.keyAt(r11)     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            java.lang.Object r14 = r10.valueAt(r11)     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            java.util.ArrayList r14 = (java.util.ArrayList) r14     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            org.telegram.SQLite.SQLiteDatabase r15 = r1.database     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            java.lang.String r8 = "SELECT mid, data FROM messages_v2 WHERE mid IN (%s) AND uid = %d"
            java.lang.Object[] r5 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            java.lang.String r7 = ","
            java.lang.String r7 = android.text.TextUtils.join(r7, r14)     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            r14 = 0
            r5[r14] = r7     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            java.lang.Long r7 = java.lang.Long.valueOf(r12)     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            r12 = 1
            r5[r12] = r7     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            java.lang.String r2 = java.lang.String.format(r2, r8, r5)     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            java.lang.Object[] r5 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            org.telegram.SQLite.SQLiteCursor r2 = r15.queryFinalized(r2, r5)     // Catch:{ Exception -> 0x0195, all -> 0x018f }
        L_0x009a:
            boolean r5 = r2.next()     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            if (r5 == 0) goto L_0x00d3
            int r5 = r2.intValue(r14)     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            r7 = 1
            org.telegram.tgnet.NativeByteBuffer r8 = r2.byteBufferValue(r7)     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            if (r8 == 0) goto L_0x009a
            int r7 = r8.readInt32(r14)     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            org.telegram.tgnet.TLRPC$Message r7 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r8, r7, r14)     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            org.telegram.messenger.UserConfig r12 = r17.getUserConfig()     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            long r12 = r12.clientUserId     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            r7.readAttachPath(r8, r12)     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            r8.reuse()     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            org.telegram.tgnet.TLRPC$MessageMedia r8 = r7.media     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            boolean r12 = r8 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaWebPage     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            if (r12 == 0) goto L_0x009a
            r7.id = r5     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            java.lang.Object r5 = r0.valueAt(r6)     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            org.telegram.tgnet.TLRPC$WebPage r5 = (org.telegram.tgnet.TLRPC$WebPage) r5     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            r8.webpage = r5     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            r3.add(r7)     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            goto L_0x009a
        L_0x00d3:
            r2.dispose()     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            int r11 = r11 + 1
            r5 = 0
            r7 = 2
            r8 = 1
            goto L_0x006c
        L_0x00dc:
            r0 = move-exception
            goto L_0x0191
        L_0x00df:
            r0 = move-exception
            goto L_0x0197
        L_0x00e2:
            int r6 = r6 + 1
            r5 = 0
            goto L_0x000f
        L_0x00e7:
            r0 = move-exception
            r2 = r9
            goto L_0x0191
        L_0x00eb:
            r0 = move-exception
            r2 = r9
            goto L_0x0197
        L_0x00ef:
            r14 = 0
            boolean r0 = r3.isEmpty()     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            if (r0 == 0) goto L_0x00fc
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database
            r0.commitTransaction()
            return
        L_0x00fc:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            r0.beginTransaction()     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            java.lang.String r2 = "UPDATE messages_v2 SET data = ? WHERE mid = ? AND uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r0.executeFast(r2)     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0189, all -> 0x0183 }
            java.lang.String r4 = "UPDATE media_v4 SET data = ? WHERE mid = ? AND uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r4 = r0.executeFast(r4)     // Catch:{ Exception -> 0x0189, all -> 0x0183 }
            r5 = 0
        L_0x0112:
            int r0 = r3.size()     // Catch:{ Exception -> 0x017e, all -> 0x0179 }
            if (r5 >= r0) goto L_0x015f
            java.lang.Object r0 = r3.get(r5)     // Catch:{ Exception -> 0x017e, all -> 0x0179 }
            org.telegram.tgnet.TLRPC$Message r0 = (org.telegram.tgnet.TLRPC$Message) r0     // Catch:{ Exception -> 0x017e, all -> 0x0179 }
            org.telegram.tgnet.NativeByteBuffer r6 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x017e, all -> 0x0179 }
            int r7 = r0.getObjectSize()     // Catch:{ Exception -> 0x017e, all -> 0x0179 }
            r6.<init>((int) r7)     // Catch:{ Exception -> 0x017e, all -> 0x0179 }
            r0.serializeToStream(r6)     // Catch:{ Exception -> 0x017e, all -> 0x0179 }
            r2.requery()     // Catch:{ Exception -> 0x017e, all -> 0x0179 }
            r7 = 1
            r2.bindByteBuffer((int) r7, (org.telegram.tgnet.NativeByteBuffer) r6)     // Catch:{ Exception -> 0x017e, all -> 0x0179 }
            int r7 = r0.id     // Catch:{ Exception -> 0x017e, all -> 0x0179 }
            r8 = 2
            r2.bindInteger(r8, r7)     // Catch:{ Exception -> 0x017e, all -> 0x0179 }
            long r7 = org.telegram.messenger.MessageObject.getDialogId(r0)     // Catch:{ Exception -> 0x017e, all -> 0x0179 }
            r9 = 3
            r2.bindLong(r9, r7)     // Catch:{ Exception -> 0x017e, all -> 0x0179 }
            r2.step()     // Catch:{ Exception -> 0x017e, all -> 0x0179 }
            r4.requery()     // Catch:{ Exception -> 0x017e, all -> 0x0179 }
            r7 = 1
            r4.bindByteBuffer((int) r7, (org.telegram.tgnet.NativeByteBuffer) r6)     // Catch:{ Exception -> 0x017e, all -> 0x0179 }
            int r8 = r0.id     // Catch:{ Exception -> 0x017e, all -> 0x0179 }
            r10 = 2
            r4.bindInteger(r10, r8)     // Catch:{ Exception -> 0x017e, all -> 0x0179 }
            long r11 = org.telegram.messenger.MessageObject.getDialogId(r0)     // Catch:{ Exception -> 0x017e, all -> 0x0179 }
            r4.bindLong(r9, r11)     // Catch:{ Exception -> 0x017e, all -> 0x0179 }
            r4.step()     // Catch:{ Exception -> 0x017e, all -> 0x0179 }
            r6.reuse()     // Catch:{ Exception -> 0x017e, all -> 0x0179 }
            int r5 = r5 + 1
            goto L_0x0112
        L_0x015f:
            r2.dispose()     // Catch:{ Exception -> 0x017e, all -> 0x0179 }
            r4.dispose()     // Catch:{ Exception -> 0x0176, all -> 0x0173 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            r0.commitTransaction()     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda131 r0 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda131     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            r0.<init>(r1, r3)     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0)     // Catch:{ Exception -> 0x0195, all -> 0x018f }
            goto L_0x01ac
        L_0x0173:
            r0 = move-exception
            r2 = 0
            goto L_0x0192
        L_0x0176:
            r0 = move-exception
            r2 = 0
            goto L_0x0198
        L_0x0179:
            r0 = move-exception
            r16 = r2
            r2 = 0
            goto L_0x01b3
        L_0x017e:
            r0 = move-exception
            r16 = r2
            r2 = 0
            goto L_0x019a
        L_0x0183:
            r0 = move-exception
            r16 = r2
            r2 = 0
            r4 = 0
            goto L_0x01b3
        L_0x0189:
            r0 = move-exception
            r16 = r2
            r2 = 0
            r4 = 0
            goto L_0x019a
        L_0x018f:
            r0 = move-exception
            r2 = 0
        L_0x0191:
            r4 = 0
        L_0x0192:
            r16 = 0
            goto L_0x01b3
        L_0x0195:
            r0 = move-exception
            r2 = 0
        L_0x0197:
            r4 = 0
        L_0x0198:
            r16 = 0
        L_0x019a:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x01b2 }
            if (r2 == 0) goto L_0x01a2
            r2.dispose()
        L_0x01a2:
            if (r16 == 0) goto L_0x01a7
            r16.dispose()
        L_0x01a7:
            if (r4 == 0) goto L_0x01ac
            r4.dispose()
        L_0x01ac:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database
            r0.commitTransaction()
            return
        L_0x01b2:
            r0 = move-exception
        L_0x01b3:
            if (r2 == 0) goto L_0x01b8
            r2.dispose()
        L_0x01b8:
            if (r16 == 0) goto L_0x01bd
            r16.dispose()
        L_0x01bd:
            if (r4 == 0) goto L_0x01c2
            r4.dispose()
        L_0x01c2:
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database
            r2.commitTransaction()
            goto L_0x01c9
        L_0x01c8:
            throw r0
        L_0x01c9:
            goto L_0x01c8
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$putWebPages$151(androidx.collection.LongSparseArray):void");
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$putWebPages$150(ArrayList arrayList) {
        getNotificationCenter().postNotificationName(NotificationCenter.didReceivedWebpages, arrayList);
    }

    public void overwriteChannel(long j, TLRPC$TL_updates_channelDifferenceTooLong tLRPC$TL_updates_channelDifferenceTooLong, int i) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda79(this, j, i, tLRPC$TL_updates_channelDifferenceTooLong));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:15:0x0157 A[Catch:{ Exception -> 0x01a2, all -> 0x019f }] */
    /* JADX WARNING: Removed duplicated region for block: B:16:0x0159 A[Catch:{ Exception -> 0x01a2, all -> 0x019f }] */
    /* JADX WARNING: Removed duplicated region for block: B:19:0x0186 A[Catch:{ Exception -> 0x01a2, all -> 0x019f }] */
    /* JADX WARNING: Removed duplicated region for block: B:33:0x01a9  */
    /* JADX WARNING: Removed duplicated region for block: B:36:0x01b0  */
    /* JADX WARNING: Removed duplicated region for block: B:39:? A[RETURN, SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:41:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$overwriteChannel$153(long r20, int r22, org.telegram.tgnet.TLRPC$TL_updates_channelDifferenceTooLong r23) {
        /*
            r19 = this;
            r9 = r19
            r10 = r20
            r0 = r22
            r12 = r23
            long r13 = -r10
            r15 = 0
            org.telegram.SQLite.SQLiteDatabase r1 = r9.database     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r2.<init>()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.lang.String r3 = "SELECT pinned FROM dialogs WHERE did = "
            r2.append(r3)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r2.append(r13)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r8 = 0
            java.lang.Object[] r3 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r2, r3)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            boolean r2 = r1.next()     // Catch:{ Exception -> 0x019c, all -> 0x0199 }
            r7 = 1
            if (r2 != 0) goto L_0x0034
            r2 = 0
            if (r0 == 0) goto L_0x0031
            r16 = 1
            goto L_0x0039
        L_0x0031:
            r16 = 0
            goto L_0x0039
        L_0x0034:
            int r2 = r1.intValue(r8)     // Catch:{ Exception -> 0x019c, all -> 0x0199 }
            goto L_0x0031
        L_0x0039:
            r1.dispose()     // Catch:{ Exception -> 0x019c, all -> 0x0199 }
            org.telegram.SQLite.SQLiteDatabase r1 = r9.database     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r3.<init>()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.lang.String r4 = "DELETE FROM chat_pinned_count WHERE uid = "
            r3.append(r4)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r3.append(r13)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r3)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r1.dispose()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            org.telegram.SQLite.SQLiteDatabase r1 = r9.database     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r3.<init>()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.lang.String r4 = "DELETE FROM chat_pinned_v2 WHERE uid = "
            r3.append(r4)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r3.append(r13)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r3)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r1.dispose()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            org.telegram.SQLite.SQLiteDatabase r1 = r9.database     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r3.<init>()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.lang.String r4 = "DELETE FROM messages_v2 WHERE uid = "
            r3.append(r4)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r3.append(r13)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r3)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r1.dispose()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            org.telegram.SQLite.SQLiteDatabase r1 = r9.database     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r3.<init>()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.lang.String r4 = "DELETE FROM bot_keyboard WHERE uid = "
            r3.append(r4)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r3.append(r13)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r3)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r1.dispose()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            org.telegram.SQLite.SQLiteDatabase r1 = r9.database     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r3.<init>()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.lang.String r4 = "UPDATE media_counts_v2 SET old = 1 WHERE uid = "
            r3.append(r4)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r3.append(r13)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r3)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r1.dispose()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            org.telegram.SQLite.SQLiteDatabase r1 = r9.database     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r3.<init>()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.lang.String r4 = "DELETE FROM media_v4 WHERE uid = "
            r3.append(r4)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r3.append(r13)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r3)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r1.dispose()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            org.telegram.SQLite.SQLiteDatabase r1 = r9.database     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r3.<init>()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.lang.String r4 = "DELETE FROM messages_holes WHERE uid = "
            r3.append(r4)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r3.append(r13)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r3)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r1.dispose()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            org.telegram.SQLite.SQLiteDatabase r1 = r9.database     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r3.<init>()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.lang.String r4 = "DELETE FROM media_holes_v2 WHERE uid = "
            r3.append(r4)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r3.append(r13)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r3)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r1.dispose()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            org.telegram.messenger.MediaDataController r1 = r19.getMediaDataController()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r1.clearBotKeyboard(r13, r15)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            org.telegram.tgnet.TLRPC$TL_messages_dialogs r1 = new org.telegram.tgnet.TLRPC$TL_messages_dialogs     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r1.<init>()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r3 = r1.chats     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r4 = r12.chats     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r3.addAll(r4)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r3 = r1.users     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r4 = r12.users     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r3.addAll(r4)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r3 = r1.messages     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r4 = r12.messages     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r3.addAll(r4)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            org.telegram.tgnet.TLRPC$Dialog r3 = r12.dialog     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r3.id = r13     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r3.flags = r7     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r3.notify_settings = r15     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            if (r2 == 0) goto L_0x0159
            r4 = 1
            goto L_0x015a
        L_0x0159:
            r4 = 0
        L_0x015a:
            r3.pinned = r4     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r3.pinnedNum = r2     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r2 = r1.dialogs     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r2.add(r3)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r9.putDialogsInternal(r1, r8)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            java.util.ArrayList r6 = new java.util.ArrayList     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r6.<init>()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r17 = 0
            r18 = 0
            r1 = r19
            r2 = r13
            r4 = r20
            r15 = 1
            r7 = r17
            r8 = r18
            r1.updateDialogsWithDeletedMessages(r2, r4, r6, r7, r8)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda108 r1 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda108     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r1.<init>(r9, r13, r12)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r1)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            if (r16 == 0) goto L_0x01ac
            if (r0 != r15) goto L_0x0190
            org.telegram.messenger.MessagesController r0 = r19.getMessagesController()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r0.checkChatInviter(r10, r15)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            goto L_0x01ac
        L_0x0190:
            org.telegram.messenger.MessagesController r0 = r19.getMessagesController()     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            r1 = 0
            r0.generateJoinMessage(r10, r1)     // Catch:{ Exception -> 0x01a2, all -> 0x019f }
            goto L_0x01ac
        L_0x0199:
            r0 = move-exception
            r15 = r1
            goto L_0x01ae
        L_0x019c:
            r0 = move-exception
            r15 = r1
            goto L_0x01a4
        L_0x019f:
            r0 = move-exception
            r15 = 0
            goto L_0x01ae
        L_0x01a2:
            r0 = move-exception
            r15 = 0
        L_0x01a4:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x01ad }
            if (r15 == 0) goto L_0x01ac
            r15.dispose()
        L_0x01ac:
            return
        L_0x01ad:
            r0 = move-exception
        L_0x01ae:
            if (r15 == 0) goto L_0x01b3
            r15.dispose()
        L_0x01b3:
            goto L_0x01b5
        L_0x01b4:
            throw r0
        L_0x01b5:
            goto L_0x01b4
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$overwriteChannel$153(long, int, org.telegram.tgnet.TLRPC$TL_updates_channelDifferenceTooLong):void");
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$overwriteChannel$152(long j, TLRPC$TL_updates_channelDifferenceTooLong tLRPC$TL_updates_channelDifferenceTooLong) {
        getNotificationCenter().postNotificationName(NotificationCenter.removeAllMessagesFromDialog, Long.valueOf(j), Boolean.TRUE, tLRPC$TL_updates_channelDifferenceTooLong);
    }

    public void putChannelViews(LongSparseArray<SparseIntArray> longSparseArray, LongSparseArray<SparseIntArray> longSparseArray2, LongSparseArray<SparseArray<TLRPC$MessageReplies>> longSparseArray3, boolean z) {
        if (!isEmpty((LongSparseArray<?>) longSparseArray) || !isEmpty((LongSparseArray<?>) longSparseArray2) || !isEmpty((LongSparseArray<?>) longSparseArray3)) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda120(this, longSparseArray, longSparseArray2, longSparseArray3, z));
        }
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:139:0x023e  */
    /* JADX WARNING: Removed duplicated region for block: B:141:0x0245  */
    /* JADX WARNING: Removed duplicated region for block: B:144:0x024c  */
    /* JADX WARNING: Removed duplicated region for block: B:146:0x0253  */
    /* JADX WARNING: Removed duplicated region for block: B:162:? A[RETURN, SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:64:0x0136 A[Catch:{ Exception -> 0x0219, all -> 0x0215 }] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$putChannelViews$154(androidx.collection.LongSparseArray r23, androidx.collection.LongSparseArray r24, androidx.collection.LongSparseArray r25, boolean r26) {
        /*
            r22 = this;
            r1 = r22
            r0 = r23
            r2 = r24
            r3 = r25
            r5 = 1
            org.telegram.SQLite.SQLiteDatabase r7 = r1.database     // Catch:{ Exception -> 0x0236, all -> 0x0232 }
            r7.beginTransaction()     // Catch:{ Exception -> 0x0236, all -> 0x0232 }
            boolean r7 = isEmpty((androidx.collection.LongSparseArray<?>) r23)     // Catch:{ Exception -> 0x022d, all -> 0x0228 }
            r10 = 3
            r11 = 2
            if (r7 != 0) goto L_0x006d
            org.telegram.SQLite.SQLiteDatabase r7 = r1.database     // Catch:{ Exception -> 0x006a, all -> 0x0067 }
            java.lang.String r12 = "UPDATE messages_v2 SET media = max((SELECT media FROM messages_v2 WHERE mid = ? AND uid = ?), ?) WHERE mid = ? AND uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.executeFast(r12)     // Catch:{ Exception -> 0x006a, all -> 0x0067 }
            r12 = 0
        L_0x001f:
            int r13 = r23.size()     // Catch:{ Exception -> 0x0063, all -> 0x005f }
            if (r12 >= r13) goto L_0x005b
            long r13 = r0.keyAt(r12)     // Catch:{ Exception -> 0x0063, all -> 0x005f }
            java.lang.Object r15 = r0.valueAt(r12)     // Catch:{ Exception -> 0x0063, all -> 0x005f }
            android.util.SparseIntArray r15 = (android.util.SparseIntArray) r15     // Catch:{ Exception -> 0x0063, all -> 0x005f }
            int r4 = r15.size()     // Catch:{ Exception -> 0x0063, all -> 0x005f }
            r6 = 0
        L_0x0034:
            if (r6 >= r4) goto L_0x0058
            int r8 = r15.valueAt(r6)     // Catch:{ Exception -> 0x0063, all -> 0x005f }
            int r9 = r15.keyAt(r6)     // Catch:{ Exception -> 0x0063, all -> 0x005f }
            r7.requery()     // Catch:{ Exception -> 0x0063, all -> 0x005f }
            r7.bindInteger(r5, r9)     // Catch:{ Exception -> 0x0063, all -> 0x005f }
            r7.bindLong(r11, r13)     // Catch:{ Exception -> 0x0063, all -> 0x005f }
            r7.bindInteger(r10, r8)     // Catch:{ Exception -> 0x0063, all -> 0x005f }
            r8 = 4
            r7.bindInteger(r8, r9)     // Catch:{ Exception -> 0x0063, all -> 0x005f }
            r8 = 5
            r7.bindLong(r8, r13)     // Catch:{ Exception -> 0x0063, all -> 0x005f }
            r7.step()     // Catch:{ Exception -> 0x0063, all -> 0x005f }
            int r6 = r6 + 1
            goto L_0x0034
        L_0x0058:
            int r12 = r12 + 1
            goto L_0x001f
        L_0x005b:
            r7.dispose()     // Catch:{ Exception -> 0x0063, all -> 0x005f }
            goto L_0x006d
        L_0x005f:
            r0 = move-exception
            r4 = r7
            goto L_0x024a
        L_0x0063:
            r0 = move-exception
            r4 = r7
            goto L_0x0239
        L_0x0067:
            r0 = move-exception
            goto L_0x0234
        L_0x006a:
            r0 = move-exception
            goto L_0x0238
        L_0x006d:
            boolean r0 = isEmpty((androidx.collection.LongSparseArray<?>) r24)     // Catch:{ Exception -> 0x022d, all -> 0x0228 }
            if (r0 != 0) goto L_0x00c1
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x006a, all -> 0x0067 }
            java.lang.String r4 = "UPDATE messages_v2 SET forwards = max((SELECT forwards FROM messages_v2 WHERE mid = ? AND uid = ?), ?) WHERE mid = ? AND uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r4 = r0.executeFast(r4)     // Catch:{ Exception -> 0x006a, all -> 0x0067 }
            r0 = 0
        L_0x007c:
            int r6 = r24.size()     // Catch:{ Exception -> 0x00be }
            if (r0 >= r6) goto L_0x00ba
            long r6 = r2.keyAt(r0)     // Catch:{ Exception -> 0x00be }
            java.lang.Object r8 = r2.valueAt(r0)     // Catch:{ Exception -> 0x00be }
            android.util.SparseIntArray r8 = (android.util.SparseIntArray) r8     // Catch:{ Exception -> 0x00be }
            int r9 = r8.size()     // Catch:{ Exception -> 0x00be }
            r12 = 0
        L_0x0091:
            if (r12 >= r9) goto L_0x00b5
            int r13 = r8.valueAt(r12)     // Catch:{ Exception -> 0x00be }
            int r14 = r8.keyAt(r12)     // Catch:{ Exception -> 0x00be }
            r4.requery()     // Catch:{ Exception -> 0x00be }
            r4.bindInteger(r5, r14)     // Catch:{ Exception -> 0x00be }
            r4.bindLong(r11, r6)     // Catch:{ Exception -> 0x00be }
            r4.bindInteger(r10, r13)     // Catch:{ Exception -> 0x00be }
            r13 = 4
            r4.bindInteger(r13, r14)     // Catch:{ Exception -> 0x00be }
            r14 = 5
            r4.bindLong(r14, r6)     // Catch:{ Exception -> 0x00be }
            r4.step()     // Catch:{ Exception -> 0x00be }
            int r12 = r12 + 1
            goto L_0x0091
        L_0x00b5:
            r13 = 4
            r14 = 5
            int r0 = r0 + 1
            goto L_0x007c
        L_0x00ba:
            r4.dispose()     // Catch:{ Exception -> 0x00be }
            goto L_0x00c1
        L_0x00be:
            r0 = move-exception
            goto L_0x0239
        L_0x00c1:
            boolean r0 = isEmpty((androidx.collection.LongSparseArray<?>) r25)     // Catch:{ Exception -> 0x022d, all -> 0x0228 }
            if (r0 != 0) goto L_0x021d
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x022d, all -> 0x0228 }
            java.lang.String r2 = "UPDATE messages_v2 SET replies_data = ? WHERE mid = ? AND uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r0.executeFast(r2)     // Catch:{ Exception -> 0x022d, all -> 0x0228 }
            r0 = 0
        L_0x00d0:
            int r4 = r25.size()     // Catch:{ Exception -> 0x0219, all -> 0x0215 }
            if (r0 >= r4) goto L_0x020c
            long r6 = r3.keyAt(r0)     // Catch:{ Exception -> 0x0219, all -> 0x0215 }
            java.lang.Object r4 = r3.valueAt(r0)     // Catch:{ Exception -> 0x0219, all -> 0x0215 }
            android.util.SparseArray r4 = (android.util.SparseArray) r4     // Catch:{ Exception -> 0x0219, all -> 0x0215 }
            int r8 = r4.size()     // Catch:{ Exception -> 0x0219, all -> 0x0215 }
            r9 = 0
        L_0x00e5:
            if (r9 >= r8) goto L_0x0201
            int r12 = r4.keyAt(r9)     // Catch:{ Exception -> 0x0219, all -> 0x0215 }
            org.telegram.SQLite.SQLiteDatabase r13 = r1.database     // Catch:{ Exception -> 0x0219, all -> 0x0215 }
            java.util.Locale r14 = java.util.Locale.US     // Catch:{ Exception -> 0x0219, all -> 0x0215 }
            java.lang.String r15 = "SELECT replies_data FROM messages_v2 WHERE mid = %d AND uid = %d"
            java.lang.Object[] r10 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x0219, all -> 0x0215 }
            java.lang.Integer r17 = java.lang.Integer.valueOf(r12)     // Catch:{ Exception -> 0x0219, all -> 0x0215 }
            r11 = 0
            r10[r11] = r17     // Catch:{ Exception -> 0x0219, all -> 0x0215 }
            java.lang.Long r16 = java.lang.Long.valueOf(r6)     // Catch:{ Exception -> 0x0219, all -> 0x0215 }
            r10[r5] = r16     // Catch:{ Exception -> 0x0219, all -> 0x0215 }
            java.lang.String r10 = java.lang.String.format(r14, r15, r10)     // Catch:{ Exception -> 0x0219, all -> 0x0215 }
            java.lang.Object[] r14 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x0219, all -> 0x0215 }
            org.telegram.SQLite.SQLiteCursor r10 = r13.queryFinalized(r10, r14)     // Catch:{ Exception -> 0x0219, all -> 0x0215 }
            boolean r13 = r10.next()     // Catch:{ Exception -> 0x0219, all -> 0x0215 }
            if (r13 == 0) goto L_0x012a
            org.telegram.tgnet.NativeByteBuffer r14 = r10.byteBufferValue(r11)     // Catch:{ Exception -> 0x0126, all -> 0x0122 }
            if (r14 == 0) goto L_0x012a
            int r15 = r14.readInt32(r11)     // Catch:{ Exception -> 0x0126, all -> 0x0122 }
            org.telegram.tgnet.TLRPC$MessageReplies r15 = org.telegram.tgnet.TLRPC$MessageReplies.TLdeserialize(r14, r15, r11)     // Catch:{ Exception -> 0x0126, all -> 0x0122 }
            r14.reuse()     // Catch:{ Exception -> 0x0126, all -> 0x0122 }
            goto L_0x012b
        L_0x0122:
            r0 = move-exception
            r4 = r2
            goto L_0x024a
        L_0x0126:
            r0 = move-exception
            r4 = r2
            goto L_0x0239
        L_0x012a:
            r15 = 0
        L_0x012b:
            r10.dispose()     // Catch:{ Exception -> 0x0219, all -> 0x0215 }
            if (r13 != 0) goto L_0x0136
        L_0x0130:
            r5 = 0
            r10 = 1
            r11 = 2
            r12 = 3
            goto L_0x01f9
        L_0x0136:
            int r10 = r4.keyAt(r9)     // Catch:{ Exception -> 0x0219, all -> 0x0215 }
            java.lang.Object r10 = r4.get(r10)     // Catch:{ Exception -> 0x0219, all -> 0x0215 }
            org.telegram.tgnet.TLRPC$MessageReplies r10 = (org.telegram.tgnet.TLRPC$MessageReplies) r10     // Catch:{ Exception -> 0x0219, all -> 0x0215 }
            if (r26 != 0) goto L_0x0159
            if (r15 == 0) goto L_0x0159
            int r11 = r15.replies_pts     // Catch:{ Exception -> 0x0126, all -> 0x0122 }
            if (r11 == 0) goto L_0x0159
            int r13 = r10.replies_pts     // Catch:{ Exception -> 0x0126, all -> 0x0122 }
            if (r13 > r11) goto L_0x0159
            int r11 = r10.read_max_id     // Catch:{ Exception -> 0x0126, all -> 0x0122 }
            int r13 = r15.read_max_id     // Catch:{ Exception -> 0x0126, all -> 0x0122 }
            if (r11 > r13) goto L_0x0159
            int r11 = r10.max_id     // Catch:{ Exception -> 0x0126, all -> 0x0122 }
            int r13 = r15.max_id     // Catch:{ Exception -> 0x0126, all -> 0x0122 }
            if (r11 > r13) goto L_0x0159
            goto L_0x0130
        L_0x0159:
            if (r26 == 0) goto L_0x01cd
            if (r15 != 0) goto L_0x0169
            org.telegram.tgnet.TLRPC$TL_messageReplies r11 = new org.telegram.tgnet.TLRPC$TL_messageReplies     // Catch:{ Exception -> 0x0126, all -> 0x0122 }
            r11.<init>()     // Catch:{ Exception -> 0x0126, all -> 0x0122 }
            int r13 = r11.flags     // Catch:{ Exception -> 0x0126, all -> 0x0122 }
            r14 = 2
            r13 = r13 | r14
            r11.flags = r13     // Catch:{ Exception -> 0x0126, all -> 0x0122 }
            r15 = r11
        L_0x0169:
            int r11 = r15.replies     // Catch:{ Exception -> 0x0213, all -> 0x0211 }
            int r13 = r10.replies     // Catch:{ Exception -> 0x0213, all -> 0x0211 }
            int r11 = r11 + r13
            r15.replies = r11     // Catch:{ Exception -> 0x0213, all -> 0x0211 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Peer> r11 = r10.recent_repliers     // Catch:{ Exception -> 0x0213, all -> 0x0211 }
            int r11 = r11.size()     // Catch:{ Exception -> 0x0213, all -> 0x0211 }
            r13 = 0
        L_0x0177:
            if (r13 >= r11) goto L_0x01b2
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Peer> r14 = r10.recent_repliers     // Catch:{ Exception -> 0x0213, all -> 0x0211 }
            java.lang.Object r14 = r14.get(r13)     // Catch:{ Exception -> 0x0213, all -> 0x0211 }
            org.telegram.tgnet.TLRPC$Peer r14 = (org.telegram.tgnet.TLRPC$Peer) r14     // Catch:{ Exception -> 0x0213, all -> 0x0211 }
            long r18 = org.telegram.messenger.MessageObject.getPeerId(r14)     // Catch:{ Exception -> 0x0213, all -> 0x0211 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Peer> r14 = r15.recent_repliers     // Catch:{ Exception -> 0x0213, all -> 0x0211 }
            int r14 = r14.size()     // Catch:{ Exception -> 0x0213, all -> 0x0211 }
            r5 = 0
        L_0x018c:
            if (r5 >= r14) goto L_0x01ac
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Peer> r3 = r15.recent_repliers     // Catch:{ Exception -> 0x0213, all -> 0x0211 }
            java.lang.Object r3 = r3.get(r5)     // Catch:{ Exception -> 0x0213, all -> 0x0211 }
            org.telegram.tgnet.TLRPC$Peer r3 = (org.telegram.tgnet.TLRPC$Peer) r3     // Catch:{ Exception -> 0x0213, all -> 0x0211 }
            long r20 = org.telegram.messenger.MessageObject.getPeerId(r3)     // Catch:{ Exception -> 0x0213, all -> 0x0211 }
            int r3 = (r18 > r20 ? 1 : (r18 == r20 ? 0 : -1))
            if (r3 != 0) goto L_0x01a7
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Peer> r3 = r15.recent_repliers     // Catch:{ Exception -> 0x0213, all -> 0x0211 }
            r3.remove(r5)     // Catch:{ Exception -> 0x0213, all -> 0x0211 }
            int r5 = r5 + -1
            int r14 = r14 + -1
        L_0x01a7:
            r3 = 1
            int r5 = r5 + r3
            r3 = r25
            goto L_0x018c
        L_0x01ac:
            int r13 = r13 + 1
            r3 = r25
            r5 = 1
            goto L_0x0177
        L_0x01b2:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Peer> r3 = r15.recent_repliers     // Catch:{ Exception -> 0x0213, all -> 0x0211 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Peer> r5 = r10.recent_repliers     // Catch:{ Exception -> 0x0213, all -> 0x0211 }
            r10 = 0
            r3.addAll(r10, r5)     // Catch:{ Exception -> 0x0213, all -> 0x0211 }
        L_0x01ba:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Peer> r3 = r15.recent_repliers     // Catch:{ Exception -> 0x0213, all -> 0x0211 }
            int r3 = r3.size()     // Catch:{ Exception -> 0x0213, all -> 0x0211 }
            r5 = 3
            if (r3 <= r5) goto L_0x01ca
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Peer> r3 = r15.recent_repliers     // Catch:{ Exception -> 0x0213, all -> 0x0211 }
            r5 = 0
            r3.remove(r5)     // Catch:{ Exception -> 0x0213, all -> 0x0211 }
            goto L_0x01ba
        L_0x01ca:
            r5 = 0
            r10 = r15
            goto L_0x01ce
        L_0x01cd:
            r5 = 0
        L_0x01ce:
            if (r15 == 0) goto L_0x01d8
            int r3 = r15.read_max_id     // Catch:{ Exception -> 0x0213, all -> 0x0211 }
            int r11 = r10.read_max_id     // Catch:{ Exception -> 0x0213, all -> 0x0211 }
            if (r3 <= r11) goto L_0x01d8
            r10.read_max_id = r3     // Catch:{ Exception -> 0x0213, all -> 0x0211 }
        L_0x01d8:
            r2.requery()     // Catch:{ Exception -> 0x0219, all -> 0x0215 }
            org.telegram.tgnet.NativeByteBuffer r3 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0219, all -> 0x0215 }
            int r11 = r10.getObjectSize()     // Catch:{ Exception -> 0x0219, all -> 0x0215 }
            r3.<init>((int) r11)     // Catch:{ Exception -> 0x0219, all -> 0x0215 }
            r10.serializeToStream(r3)     // Catch:{ Exception -> 0x0219, all -> 0x0215 }
            r10 = 1
            r2.bindByteBuffer((int) r10, (org.telegram.tgnet.NativeByteBuffer) r3)     // Catch:{ Exception -> 0x0213, all -> 0x0211 }
            r11 = 2
            r2.bindInteger(r11, r12)     // Catch:{ Exception -> 0x0213, all -> 0x0211 }
            r12 = 3
            r2.bindLong(r12, r6)     // Catch:{ Exception -> 0x0213, all -> 0x0211 }
            r2.step()     // Catch:{ Exception -> 0x0213, all -> 0x0211 }
            r3.reuse()     // Catch:{ Exception -> 0x0213, all -> 0x0211 }
        L_0x01f9:
            int r9 = r9 + 1
            r3 = r25
            r5 = 1
            r10 = 3
            goto L_0x00e5
        L_0x0201:
            r5 = 0
            r10 = 1
            r12 = 3
            int r0 = r0 + 1
            r3 = r25
            r5 = 1
            r10 = 3
            goto L_0x00d0
        L_0x020c:
            r10 = 1
            r2.dispose()     // Catch:{ Exception -> 0x0213, all -> 0x0211 }
            goto L_0x021e
        L_0x0211:
            r0 = move-exception
            goto L_0x0217
        L_0x0213:
            r0 = move-exception
            goto L_0x021b
        L_0x0215:
            r0 = move-exception
            r10 = 1
        L_0x0217:
            r4 = r2
            goto L_0x022b
        L_0x0219:
            r0 = move-exception
            r10 = 1
        L_0x021b:
            r4 = r2
            goto L_0x0230
        L_0x021d:
            r10 = 1
        L_0x021e:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0226, all -> 0x0224 }
            r0.commitTransaction()     // Catch:{ Exception -> 0x0226, all -> 0x0224 }
            goto L_0x0248
        L_0x0224:
            r0 = move-exception
            goto L_0x022a
        L_0x0226:
            r0 = move-exception
            goto L_0x022f
        L_0x0228:
            r0 = move-exception
            r10 = 1
        L_0x022a:
            r4 = 0
        L_0x022b:
            r5 = 1
            goto L_0x024a
        L_0x022d:
            r0 = move-exception
            r10 = 1
        L_0x022f:
            r4 = 0
        L_0x0230:
            r5 = 1
            goto L_0x0239
        L_0x0232:
            r0 = move-exception
            r5 = 0
        L_0x0234:
            r4 = 0
            goto L_0x024a
        L_0x0236:
            r0 = move-exception
            r5 = 0
        L_0x0238:
            r4 = 0
        L_0x0239:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0249 }
            if (r5 == 0) goto L_0x0243
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database
            r0.commitTransaction()
        L_0x0243:
            if (r4 == 0) goto L_0x0248
            r4.dispose()
        L_0x0248:
            return
        L_0x0249:
            r0 = move-exception
        L_0x024a:
            if (r5 == 0) goto L_0x0251
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database
            r2.commitTransaction()
        L_0x0251:
            if (r4 == 0) goto L_0x0256
            r4.dispose()
        L_0x0256:
            goto L_0x0258
        L_0x0257:
            throw r0
        L_0x0258:
            goto L_0x0257
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$putChannelViews$154(androidx.collection.LongSparseArray, androidx.collection.LongSparseArray, androidx.collection.LongSparseArray, boolean):void");
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:32:0x0084  */
    /* JADX WARNING: Removed duplicated region for block: B:34:0x0089  */
    /* JADX WARNING: Removed duplicated region for block: B:37:0x0090  */
    /* JADX WARNING: Removed duplicated region for block: B:39:0x0095  */
    /* JADX WARNING: Removed duplicated region for block: B:42:? A[RETURN, SYNTHETIC] */
    /* renamed from: updateRepliesMaxReadIdInternal */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void lambda$updateRepliesMaxReadId$155(long r11, int r13, int r14) {
        /*
            r10 = this;
            long r11 = -r11
            r0 = 0
            org.telegram.SQLite.SQLiteDatabase r1 = r10.database     // Catch:{ Exception -> 0x007d, all -> 0x007a }
            java.lang.String r2 = "UPDATE messages_v2 SET replies_data = ? WHERE mid = ? AND uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x007d, all -> 0x007a }
            org.telegram.SQLite.SQLiteDatabase r2 = r10.database     // Catch:{ Exception -> 0x0076, all -> 0x0072 }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x0076, all -> 0x0072 }
            java.lang.String r4 = "SELECT replies_data FROM messages_v2 WHERE mid = %d AND uid = %d"
            r5 = 2
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x0076, all -> 0x0072 }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r13)     // Catch:{ Exception -> 0x0076, all -> 0x0072 }
            r8 = 0
            r6[r8] = r7     // Catch:{ Exception -> 0x0076, all -> 0x0072 }
            java.lang.Long r7 = java.lang.Long.valueOf(r11)     // Catch:{ Exception -> 0x0076, all -> 0x0072 }
            r9 = 1
            r6[r9] = r7     // Catch:{ Exception -> 0x0076, all -> 0x0072 }
            java.lang.String r3 = java.lang.String.format(r3, r4, r6)     // Catch:{ Exception -> 0x0076, all -> 0x0072 }
            java.lang.Object[] r4 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x0076, all -> 0x0072 }
            org.telegram.SQLite.SQLiteCursor r2 = r2.queryFinalized(r3, r4)     // Catch:{ Exception -> 0x0076, all -> 0x0072 }
            boolean r3 = r2.next()     // Catch:{ Exception -> 0x0070, all -> 0x006e }
            if (r3 == 0) goto L_0x0043
            org.telegram.tgnet.NativeByteBuffer r3 = r2.byteBufferValue(r8)     // Catch:{ Exception -> 0x0070, all -> 0x006e }
            if (r3 == 0) goto L_0x0043
            int r4 = r3.readInt32(r8)     // Catch:{ Exception -> 0x0070, all -> 0x006e }
            org.telegram.tgnet.TLRPC$MessageReplies r4 = org.telegram.tgnet.TLRPC$MessageReplies.TLdeserialize(r3, r4, r8)     // Catch:{ Exception -> 0x0070, all -> 0x006e }
            r3.reuse()     // Catch:{ Exception -> 0x0070, all -> 0x006e }
            goto L_0x0044
        L_0x0043:
            r4 = r0
        L_0x0044:
            r2.dispose()     // Catch:{ Exception -> 0x0070, all -> 0x006e }
            if (r4 == 0) goto L_0x006a
            r4.read_max_id = r14     // Catch:{ Exception -> 0x0076, all -> 0x0072 }
            r1.requery()     // Catch:{ Exception -> 0x0076, all -> 0x0072 }
            org.telegram.tgnet.NativeByteBuffer r14 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0076, all -> 0x0072 }
            int r2 = r4.getObjectSize()     // Catch:{ Exception -> 0x0076, all -> 0x0072 }
            r14.<init>((int) r2)     // Catch:{ Exception -> 0x0076, all -> 0x0072 }
            r4.serializeToStream(r14)     // Catch:{ Exception -> 0x0076, all -> 0x0072 }
            r1.bindByteBuffer((int) r9, (org.telegram.tgnet.NativeByteBuffer) r14)     // Catch:{ Exception -> 0x0076, all -> 0x0072 }
            r1.bindInteger(r5, r13)     // Catch:{ Exception -> 0x0076, all -> 0x0072 }
            r13 = 3
            r1.bindLong(r13, r11)     // Catch:{ Exception -> 0x0076, all -> 0x0072 }
            r1.step()     // Catch:{ Exception -> 0x0076, all -> 0x0072 }
            r14.reuse()     // Catch:{ Exception -> 0x0076, all -> 0x0072 }
        L_0x006a:
            r1.dispose()     // Catch:{ Exception -> 0x0076, all -> 0x0072 }
            goto L_0x008c
        L_0x006e:
            r11 = move-exception
            goto L_0x0074
        L_0x0070:
            r11 = move-exception
            goto L_0x0078
        L_0x0072:
            r11 = move-exception
            r2 = r0
        L_0x0074:
            r0 = r1
            goto L_0x008e
        L_0x0076:
            r11 = move-exception
            r2 = r0
        L_0x0078:
            r0 = r1
            goto L_0x007f
        L_0x007a:
            r11 = move-exception
            r2 = r0
            goto L_0x008e
        L_0x007d:
            r11 = move-exception
            r2 = r0
        L_0x007f:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r11)     // Catch:{ all -> 0x008d }
            if (r0 == 0) goto L_0x0087
            r0.dispose()
        L_0x0087:
            if (r2 == 0) goto L_0x008c
            r2.dispose()
        L_0x008c:
            return
        L_0x008d:
            r11 = move-exception
        L_0x008e:
            if (r0 == 0) goto L_0x0093
            r0.dispose()
        L_0x0093:
            if (r2 == 0) goto L_0x0098
            r2.dispose()
        L_0x0098:
            throw r11
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$updateRepliesMaxReadId$155(long, int, int):void");
    }

    public void updateRepliesMaxReadId(long j, int i, int i2, boolean z) {
        if (z) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda70(this, j, i, i2));
        } else {
            lambda$updateRepliesMaxReadId$155(j, i, i2);
        }
    }

    public void updateRepliesCount(long j, int i, ArrayList<TLRPC$Peer> arrayList, int i2, int i3) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda46(this, i, j, i3, arrayList, i2));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:39:0x00a2  */
    /* JADX WARNING: Removed duplicated region for block: B:41:0x00a7  */
    /* JADX WARNING: Removed duplicated region for block: B:44:0x00ae  */
    /* JADX WARNING: Removed duplicated region for block: B:46:0x00b3  */
    /* JADX WARNING: Removed duplicated region for block: B:49:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$updateRepliesCount$156(int r16, long r17, int r19, java.util.ArrayList r20, int r21) {
        /*
            r15 = this;
            r1 = r15
            r0 = r20
            r2 = r21
            r3 = 0
            org.telegram.SQLite.SQLiteDatabase r4 = r1.database     // Catch:{ Exception -> 0x009b, all -> 0x0098 }
            java.lang.String r5 = "UPDATE messages_v2 SET replies_data = ? WHERE mid = ? AND uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r4 = r4.executeFast(r5)     // Catch:{ Exception -> 0x009b, all -> 0x0098 }
            org.telegram.SQLite.SQLiteDatabase r5 = r1.database     // Catch:{ Exception -> 0x0094, all -> 0x0090 }
            java.util.Locale r6 = java.util.Locale.ENGLISH     // Catch:{ Exception -> 0x0094, all -> 0x0090 }
            java.lang.String r7 = "SELECT replies_data FROM messages_v2 WHERE mid = %d AND uid = %d"
            r8 = 2
            java.lang.Object[] r9 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x0094, all -> 0x0090 }
            java.lang.Integer r10 = java.lang.Integer.valueOf(r16)     // Catch:{ Exception -> 0x0094, all -> 0x0090 }
            r11 = 0
            r9[r11] = r10     // Catch:{ Exception -> 0x0094, all -> 0x0090 }
            r12 = r17
            long r12 = -r12
            java.lang.Long r10 = java.lang.Long.valueOf(r12)     // Catch:{ Exception -> 0x0094, all -> 0x0090 }
            r14 = 1
            r9[r14] = r10     // Catch:{ Exception -> 0x0094, all -> 0x0090 }
            java.lang.String r6 = java.lang.String.format(r6, r7, r9)     // Catch:{ Exception -> 0x0094, all -> 0x0090 }
            java.lang.Object[] r7 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x0094, all -> 0x0090 }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r6, r7)     // Catch:{ Exception -> 0x0094, all -> 0x0090 }
            boolean r6 = r5.next()     // Catch:{ Exception -> 0x008e, all -> 0x008c }
            if (r6 == 0) goto L_0x004a
            org.telegram.tgnet.NativeByteBuffer r6 = r5.byteBufferValue(r11)     // Catch:{ Exception -> 0x008e, all -> 0x008c }
            if (r6 == 0) goto L_0x004a
            int r7 = r6.readInt32(r11)     // Catch:{ Exception -> 0x008e, all -> 0x008c }
            org.telegram.tgnet.TLRPC$MessageReplies r7 = org.telegram.tgnet.TLRPC$MessageReplies.TLdeserialize(r6, r7, r11)     // Catch:{ Exception -> 0x008e, all -> 0x008c }
            r6.reuse()     // Catch:{ Exception -> 0x008e, all -> 0x008c }
            goto L_0x004b
        L_0x004a:
            r7 = r3
        L_0x004b:
            r5.dispose()     // Catch:{ Exception -> 0x008e, all -> 0x008c }
            if (r7 == 0) goto L_0x0088
            int r5 = r7.replies     // Catch:{ Exception -> 0x0094, all -> 0x0090 }
            int r5 = r5 + r19
            r7.replies = r5     // Catch:{ Exception -> 0x0094, all -> 0x0090 }
            if (r5 >= 0) goto L_0x005a
            r7.replies = r11     // Catch:{ Exception -> 0x0094, all -> 0x0090 }
        L_0x005a:
            if (r0 == 0) goto L_0x0063
            r7.recent_repliers = r0     // Catch:{ Exception -> 0x0094, all -> 0x0090 }
            int r0 = r7.flags     // Catch:{ Exception -> 0x0094, all -> 0x0090 }
            r0 = r0 | r8
            r7.flags = r0     // Catch:{ Exception -> 0x0094, all -> 0x0090 }
        L_0x0063:
            if (r2 == 0) goto L_0x0067
            r7.max_id = r2     // Catch:{ Exception -> 0x0094, all -> 0x0090 }
        L_0x0067:
            r4.requery()     // Catch:{ Exception -> 0x0094, all -> 0x0090 }
            org.telegram.tgnet.NativeByteBuffer r0 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0094, all -> 0x0090 }
            int r2 = r7.getObjectSize()     // Catch:{ Exception -> 0x0094, all -> 0x0090 }
            r0.<init>((int) r2)     // Catch:{ Exception -> 0x0094, all -> 0x0090 }
            r7.serializeToStream(r0)     // Catch:{ Exception -> 0x0094, all -> 0x0090 }
            r4.bindByteBuffer((int) r14, (org.telegram.tgnet.NativeByteBuffer) r0)     // Catch:{ Exception -> 0x0094, all -> 0x0090 }
            r2 = r16
            r4.bindInteger(r8, r2)     // Catch:{ Exception -> 0x0094, all -> 0x0090 }
            r2 = 3
            r4.bindLong(r2, r12)     // Catch:{ Exception -> 0x0094, all -> 0x0090 }
            r4.step()     // Catch:{ Exception -> 0x0094, all -> 0x0090 }
            r0.reuse()     // Catch:{ Exception -> 0x0094, all -> 0x0090 }
        L_0x0088:
            r4.dispose()     // Catch:{ Exception -> 0x0094, all -> 0x0090 }
            goto L_0x00aa
        L_0x008c:
            r0 = move-exception
            goto L_0x0092
        L_0x008e:
            r0 = move-exception
            goto L_0x0096
        L_0x0090:
            r0 = move-exception
            r5 = r3
        L_0x0092:
            r3 = r4
            goto L_0x00ac
        L_0x0094:
            r0 = move-exception
            r5 = r3
        L_0x0096:
            r3 = r4
            goto L_0x009d
        L_0x0098:
            r0 = move-exception
            r5 = r3
            goto L_0x00ac
        L_0x009b:
            r0 = move-exception
            r5 = r3
        L_0x009d:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x00ab }
            if (r3 == 0) goto L_0x00a5
            r3.dispose()
        L_0x00a5:
            if (r5 == 0) goto L_0x00aa
            r5.dispose()
        L_0x00aa:
            return
        L_0x00ab:
            r0 = move-exception
        L_0x00ac:
            if (r3 == 0) goto L_0x00b1
            r3.dispose()
        L_0x00b1:
            if (r5 == 0) goto L_0x00b6
            r5.dispose()
        L_0x00b6:
            throw r0
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$updateRepliesCount$156(int, long, int, java.util.ArrayList, int):void");
    }

    private boolean isValidKeyboardToSave(TLRPC$Message tLRPC$Message) {
        TLRPC$ReplyMarkup tLRPC$ReplyMarkup = tLRPC$Message.reply_markup;
        return tLRPC$ReplyMarkup != null && !(tLRPC$ReplyMarkup instanceof TLRPC$TL_replyInlineMarkup) && (!tLRPC$ReplyMarkup.selective || tLRPC$Message.mentioned);
    }

    public void updateMessageVerifyFlags(ArrayList<TLRPC$Message> arrayList) {
        Utilities.stageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda130(this, arrayList));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:25:0x0057  */
    /* JADX WARNING: Removed duplicated region for block: B:27:0x005e  */
    /* JADX WARNING: Removed duplicated region for block: B:33:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$updateMessageVerifyFlags$157(java.util.ArrayList r11) {
        /*
            r10 = this;
            r0 = 0
            r1 = 0
            r2 = 1
            org.telegram.SQLite.SQLiteDatabase r3 = r10.database     // Catch:{ Exception -> 0x0051 }
            r3.beginTransaction()     // Catch:{ Exception -> 0x0051 }
            org.telegram.SQLite.SQLiteDatabase r3 = r10.database     // Catch:{ Exception -> 0x004e }
            java.lang.String r4 = "UPDATE messages_v2 SET imp = ? WHERE mid = ? AND uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.executeFast(r4)     // Catch:{ Exception -> 0x004e }
            int r4 = r11.size()     // Catch:{ Exception -> 0x004b }
            r5 = 0
        L_0x0015:
            if (r5 >= r4) goto L_0x0042
            java.lang.Object r6 = r11.get(r5)     // Catch:{ Exception -> 0x004b }
            org.telegram.tgnet.TLRPC$Message r6 = (org.telegram.tgnet.TLRPC$Message) r6     // Catch:{ Exception -> 0x004b }
            r3.requery()     // Catch:{ Exception -> 0x004b }
            int r7 = r6.stickerVerified     // Catch:{ Exception -> 0x004b }
            r8 = 2
            if (r7 != 0) goto L_0x0027
            r7 = 1
            goto L_0x002c
        L_0x0027:
            if (r7 != r8) goto L_0x002b
            r7 = 2
            goto L_0x002c
        L_0x002b:
            r7 = 0
        L_0x002c:
            r3.bindInteger(r2, r7)     // Catch:{ Exception -> 0x004b }
            int r7 = r6.id     // Catch:{ Exception -> 0x004b }
            r3.bindInteger(r8, r7)     // Catch:{ Exception -> 0x004b }
            r7 = 3
            long r8 = org.telegram.messenger.MessageObject.getDialogId(r6)     // Catch:{ Exception -> 0x004b }
            r3.bindLong(r7, r8)     // Catch:{ Exception -> 0x004b }
            r3.step()     // Catch:{ Exception -> 0x004b }
            int r5 = r5 + 1
            goto L_0x0015
        L_0x0042:
            r3.dispose()     // Catch:{ Exception -> 0x004b }
            org.telegram.SQLite.SQLiteDatabase r11 = r10.database     // Catch:{ Exception -> 0x004e }
            r11.commitTransaction()     // Catch:{ Exception -> 0x004e }
            goto L_0x0061
        L_0x004b:
            r11 = move-exception
            r0 = r3
            goto L_0x004f
        L_0x004e:
            r11 = move-exception
        L_0x004f:
            r1 = 1
            goto L_0x0052
        L_0x0051:
            r11 = move-exception
        L_0x0052:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r11)
            if (r1 == 0) goto L_0x005c
            org.telegram.SQLite.SQLiteDatabase r11 = r10.database
            r11.commitTransaction()
        L_0x005c:
            if (r0 == 0) goto L_0x0061
            r0.dispose()
        L_0x0061:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$updateMessageVerifyFlags$157(java.util.ArrayList):void");
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v1, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v1, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v1, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v2, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v2, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v2, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v3, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v3, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v3, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v4, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v4, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v5, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v5, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v5, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v6, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v6, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v6, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v7, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v7, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v8, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v8, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v7, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v9, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v8, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v10, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v10, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v9, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v11, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v11, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v10, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v12, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v12, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v13, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v13, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v11, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v14, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v12, resolved type: androidx.collection.LongSparseArray} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v15, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v16, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v13, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v17, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v17, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v19, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v18, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v14, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v15, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v19, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v20, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v22, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v20, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v16, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v24, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v21, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v17, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v26, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v22, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v18, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v19, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v24, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v27, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v28, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v25, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v20, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v21, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v26, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v30, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v31, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v27, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v22, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v23, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v24, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v38, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v31, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v25, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v40, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v32, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v26, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v28, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v33, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v34, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v29, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v30, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v35, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v36, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v31, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v37, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v32, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v38, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v33, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v39, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v34, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v40, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v35, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v41, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v36, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v42, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v37, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v38, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v44, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v39, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v45, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v40, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v46, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v41, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v47, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v49, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v42, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v43, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v44, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v45, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v55, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v46, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v56, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v47, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v56, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v57, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v58, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v59, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v62, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v63, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v69, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v70, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v71, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v72, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v73, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v74, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v81, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v77, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v111, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v78, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v112, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v129, resolved type: androidx.collection.LongSparseArray} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v0, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v131, resolved type: androidx.collection.LongSparseArray} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v105, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v82, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v132, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v106, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v83, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v133, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v125, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v124, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v134, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v125, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v126, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v127, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v126, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v135, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v127, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v128, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v128, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v129, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v129, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v130, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v131, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v130, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v136, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v131, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v132, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v133, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v132, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v137, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v133, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v134, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v134, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v135, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v135, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v136, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v144, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v145, resolved type: androidx.collection.LongSparseArray} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v148, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v153, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v154, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v158, resolved type: char} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v172, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX WARNING: type inference failed for: r12v83 */
    /* JADX WARNING: type inference failed for: r12v90 */
    /* JADX WARNING: type inference failed for: r12v161 */
    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:470:0x0900, code lost:
        if (r15.post != false) goto L_0x0902;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:482:0x0927, code lost:
        if ((r7 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaWebPage) == false) goto L_0x0a5b;
     */
    /* JADX WARNING: Failed to insert additional move for type inference */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:151:0x032d A[Catch:{ Exception -> 0x03cd, all -> 0x03cb }] */
    /* JADX WARNING: Removed duplicated region for block: B:167:0x039b A[Catch:{ Exception -> 0x03cd, all -> 0x03cb }] */
    /* JADX WARNING: Removed duplicated region for block: B:170:0x03a4 A[Catch:{ Exception -> 0x03cd, all -> 0x03cb }] */
    /* JADX WARNING: Removed duplicated region for block: B:175:0x03bc  */
    /* JADX WARNING: Removed duplicated region for block: B:301:0x068a A[Catch:{ Exception -> 0x063d, all -> 0x0636 }] */
    /* JADX WARNING: Removed duplicated region for block: B:313:0x06b0  */
    /* JADX WARNING: Removed duplicated region for block: B:318:0x06de A[SYNTHETIC, Splitter:B:318:0x06de] */
    /* JADX WARNING: Removed duplicated region for block: B:332:0x0703 A[SYNTHETIC, Splitter:B:332:0x0703] */
    /* JADX WARNING: Removed duplicated region for block: B:334:0x070b A[SYNTHETIC, Splitter:B:334:0x070b] */
    /* JADX WARNING: Removed duplicated region for block: B:338:0x0718 A[Catch:{ Exception -> 0x0ab7, all -> 0x0aaf }] */
    /* JADX WARNING: Removed duplicated region for block: B:339:0x071a A[Catch:{ Exception -> 0x0ab7, all -> 0x0aaf }] */
    /* JADX WARNING: Removed duplicated region for block: B:345:0x0727 A[Catch:{ Exception -> 0x0ab7, all -> 0x0aaf }] */
    /* JADX WARNING: Removed duplicated region for block: B:346:0x0729 A[Catch:{ Exception -> 0x0ab7, all -> 0x0aaf }] */
    /* JADX WARNING: Removed duplicated region for block: B:349:0x073a A[SYNTHETIC, Splitter:B:349:0x073a] */
    /* JADX WARNING: Removed duplicated region for block: B:352:0x0751  */
    /* JADX WARNING: Removed duplicated region for block: B:357:0x075b A[SYNTHETIC, Splitter:B:357:0x075b] */
    /* JADX WARNING: Removed duplicated region for block: B:363:0x0768  */
    /* JADX WARNING: Removed duplicated region for block: B:370:0x077f  */
    /* JADX WARNING: Removed duplicated region for block: B:375:0x078b  */
    /* JADX WARNING: Removed duplicated region for block: B:381:0x079c A[SYNTHETIC, Splitter:B:381:0x079c] */
    /* JADX WARNING: Removed duplicated region for block: B:395:0x07c6  */
    /* JADX WARNING: Removed duplicated region for block: B:399:0x07d0  */
    /* JADX WARNING: Removed duplicated region for block: B:412:0x0827  */
    /* JADX WARNING: Removed duplicated region for block: B:416:0x082f A[SYNTHETIC, Splitter:B:416:0x082f] */
    /* JADX WARNING: Removed duplicated region for block: B:425:0x086b  */
    /* JADX WARNING: Removed duplicated region for block: B:441:0x08a7  */
    /* JADX WARNING: Removed duplicated region for block: B:455:0x08d6 A[Catch:{ Exception -> 0x08e2, all -> 0x08da }] */
    /* JADX WARNING: Removed duplicated region for block: B:461:0x08ec A[Catch:{ Exception -> 0x08e2, all -> 0x08da }] */
    /* JADX WARNING: Removed duplicated region for block: B:465:0x08f4 A[Catch:{ Exception -> 0x0a76, all -> 0x0a72 }] */
    /* JADX WARNING: Removed duplicated region for block: B:522:0x09df A[Catch:{ Exception -> 0x0a76, all -> 0x0a72 }] */
    /* JADX WARNING: Removed duplicated region for block: B:897:0x115b  */
    /* JADX WARNING: Removed duplicated region for block: B:899:0x1162  */
    /* JADX WARNING: Removed duplicated region for block: B:901:0x1167  */
    /* JADX WARNING: Removed duplicated region for block: B:903:0x116c  */
    /* JADX WARNING: Removed duplicated region for block: B:905:0x1171  */
    /* JADX WARNING: Removed duplicated region for block: B:907:0x1176  */
    /* JADX WARNING: Removed duplicated region for block: B:909:0x117b  */
    /* JADX WARNING: Removed duplicated region for block: B:911:0x1180  */
    /* JADX WARNING: Removed duplicated region for block: B:913:0x1185  */
    /* JADX WARNING: Removed duplicated region for block: B:915:0x118a  */
    /* JADX WARNING: Removed duplicated region for block: B:919:0x1192  */
    /* JADX WARNING: Removed duplicated region for block: B:921:0x1199  */
    /* JADX WARNING: Removed duplicated region for block: B:923:0x119e  */
    /* JADX WARNING: Removed duplicated region for block: B:925:0x11a3  */
    /* JADX WARNING: Removed duplicated region for block: B:927:0x11a8  */
    /* JADX WARNING: Removed duplicated region for block: B:929:0x11ad  */
    /* JADX WARNING: Removed duplicated region for block: B:931:0x11b2  */
    /* JADX WARNING: Removed duplicated region for block: B:933:0x11b7  */
    /* JADX WARNING: Removed duplicated region for block: B:935:0x11bc  */
    /* JADX WARNING: Removed duplicated region for block: B:937:0x11c1  */
    /* JADX WARNING: Removed duplicated region for block: B:976:? A[RETURN, SYNTHETIC] */
    /* renamed from: putMessagesInternal */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void lambda$putMessages$159(java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r44, boolean r45, boolean r46, int r47, boolean r48, boolean r49) {
        /*
            r43 = this;
            r1 = r43
            r2 = r44
            java.lang.String r3 = "REPLACE INTO randoms_v2 VALUES(?, ?, ?)"
            r6 = 4
            r12 = 1
            if (r49 == 0) goto L_0x013d
            if (r45 == 0) goto L_0x0013
            org.telegram.SQLite.SQLiteDatabase r14 = r1.database     // Catch:{ Exception -> 0x0193, all -> 0x017f }
            r14.beginTransaction()     // Catch:{ Exception -> 0x0193, all -> 0x017f }
            r14 = 1
            goto L_0x0014
        L_0x0013:
            r14 = 0
        L_0x0014:
            org.telegram.SQLite.SQLiteDatabase r15 = r1.database     // Catch:{ Exception -> 0x0130, all -> 0x0123 }
            java.lang.String r11 = "REPLACE INTO scheduled_messages_v2 VALUES(?, ?, ?, ?, ?, ?, NULL, 0)"
            org.telegram.SQLite.SQLitePreparedStatement r11 = r15.executeFast(r11)     // Catch:{ Exception -> 0x0130, all -> 0x0123 }
            org.telegram.SQLite.SQLiteDatabase r15 = r1.database     // Catch:{ Exception -> 0x011a, all -> 0x0111 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r15.executeFast(r3)     // Catch:{ Exception -> 0x011a, all -> 0x0111 }
            java.util.ArrayList r15 = new java.util.ArrayList     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            r15.<init>()     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            r13 = 0
        L_0x0028:
            int r7 = r44.size()     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            if (r13 >= r7) goto L_0x00ad
            java.lang.Object r7 = r2.get(r13)     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            org.telegram.tgnet.TLRPC$Message r7 = (org.telegram.tgnet.TLRPC$Message) r7     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            boolean r8 = r7 instanceof org.telegram.tgnet.TLRPC$TL_messageEmpty     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            if (r8 == 0) goto L_0x0039
            goto L_0x00a7
        L_0x0039:
            r1.fixUnsupportedMedia(r7)     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            r11.requery()     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            int r8 = r7.id     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            int r4 = r7.local_id     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            if (r4 == 0) goto L_0x0046
            r8 = r4
        L_0x0046:
            org.telegram.tgnet.NativeByteBuffer r4 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            int r5 = r7.getObjectSize()     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            r4.<init>((int) r5)     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            r7.serializeToStream(r4)     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            long r9 = org.telegram.messenger.MessageObject.getDialogId(r7)     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            r11.bindInteger(r12, r8)     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            r5 = 2
            r11.bindLong(r5, r9)     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            int r5 = r7.send_state     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            r12 = 3
            r11.bindInteger(r12, r5)     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            int r12 = r7.date     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            r11.bindInteger(r6, r12)     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            r12 = 5
            r11.bindByteBuffer((int) r12, (org.telegram.tgnet.NativeByteBuffer) r4)     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            int r12 = r7.ttl     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            r5 = 6
            r11.bindInteger(r5, r12)     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            r11.step()     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            long r5 = r7.random_id     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            r18 = 0
            int r21 = (r5 > r18 ? 1 : (r5 == r18 ? 0 : -1))
            if (r21 == 0) goto L_0x0093
            r3.requery()     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            long r5 = r7.random_id     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            r12 = 1
            r3.bindLong(r12, r5)     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            r5 = 2
            r3.bindInteger(r5, r8)     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            long r5 = r7.dialog_id     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            r7 = 3
            r3.bindLong(r7, r5)     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            r3.step()     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
        L_0x0093:
            r4.reuse()     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            java.lang.Long r4 = java.lang.Long.valueOf(r9)     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            boolean r4 = r15.contains(r4)     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            if (r4 != 0) goto L_0x00a7
            java.lang.Long r4 = java.lang.Long.valueOf(r9)     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            r15.add(r4)     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
        L_0x00a7:
            int r13 = r13 + 1
            r6 = 4
            r12 = 1
            goto L_0x0028
        L_0x00ad:
            r11.dispose()     // Catch:{ Exception -> 0x00fe, all -> 0x00ec }
            r3.dispose()     // Catch:{ Exception -> 0x00e1, all -> 0x00d6 }
            if (r45 == 0) goto L_0x00bb
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database     // Catch:{ Exception -> 0x0130, all -> 0x0123 }
            r2.commitTransaction()     // Catch:{ Exception -> 0x0130, all -> 0x0123 }
            r14 = 0
        L_0x00bb:
            int r2 = r15.size()     // Catch:{ Exception -> 0x0130, all -> 0x0123 }
            r13 = 0
        L_0x00c0:
            if (r13 >= r2) goto L_0x00ce
            java.lang.Object r3 = r15.get(r13)     // Catch:{ Exception -> 0x0130, all -> 0x0123 }
            java.lang.Long r3 = (java.lang.Long) r3     // Catch:{ Exception -> 0x0130, all -> 0x0123 }
            r1.broadcastScheduledMessagesChange(r3)     // Catch:{ Exception -> 0x0130, all -> 0x0123 }
            int r13 = r13 + 1
            goto L_0x00c0
        L_0x00ce:
            r13 = r1
            r1 = 0
            r2 = 0
            r11 = 0
            r16 = 0
            goto L_0x0ed1
        L_0x00d6:
            r0 = move-exception
            r13 = r1
            r26 = r3
            r17 = r14
            r1 = 0
            r2 = 0
            r10 = 0
            r11 = 0
            goto L_0x00f5
        L_0x00e1:
            r0 = move-exception
            r13 = r1
            r26 = r3
            r17 = r14
            r1 = 0
            r2 = 0
            r10 = 0
            r11 = 0
            goto L_0x0107
        L_0x00ec:
            r0 = move-exception
            r13 = r1
            r26 = r3
            r17 = r14
            r1 = 0
            r2 = 0
            r10 = 0
        L_0x00f5:
            r12 = 0
            r16 = 0
            r24 = 0
            r25 = 0
            goto L_0x118f
        L_0x00fe:
            r0 = move-exception
            r13 = r1
            r26 = r3
            r17 = r14
            r1 = 0
            r2 = 0
            r10 = 0
        L_0x0107:
            r12 = 0
            r16 = 0
            r24 = 0
            r25 = 0
            r3 = r0
            goto L_0x1156
        L_0x0111:
            r0 = move-exception
            r3 = r0
            r13 = r1
            r17 = r14
            r1 = 0
            r2 = 0
            r10 = 0
            goto L_0x012c
        L_0x011a:
            r0 = move-exception
            r3 = r0
            r13 = r1
            r17 = r14
            r1 = 0
            r2 = 0
            r10 = 0
            goto L_0x0139
        L_0x0123:
            r0 = move-exception
            r3 = r0
            r13 = r1
            r17 = r14
            r1 = 0
            r2 = 0
            r10 = 0
            r11 = 0
        L_0x012c:
            r12 = 0
            r16 = 0
            goto L_0x018b
        L_0x0130:
            r0 = move-exception
            r3 = r0
            r13 = r1
            r17 = r14
            r1 = 0
            r2 = 0
            r10 = 0
            r11 = 0
        L_0x0139:
            r12 = 0
            r16 = 0
            goto L_0x019f
        L_0x013d:
            if (r48 == 0) goto L_0x01a7
            r6 = 0
            java.lang.Object r7 = r2.get(r6)     // Catch:{ Exception -> 0x0193, all -> 0x017f }
            org.telegram.tgnet.TLRPC$Message r7 = (org.telegram.tgnet.TLRPC$Message) r7     // Catch:{ Exception -> 0x0193, all -> 0x017f }
            long r8 = r7.dialog_id     // Catch:{ Exception -> 0x0193, all -> 0x017f }
            r10 = 0
            int r6 = (r8 > r10 ? 1 : (r8 == r10 ? 0 : -1))
            if (r6 != 0) goto L_0x0151
            org.telegram.messenger.MessageObject.getDialogId(r7)     // Catch:{ Exception -> 0x0193, all -> 0x017f }
        L_0x0151:
            org.telegram.SQLite.SQLiteDatabase r6 = r1.database     // Catch:{ Exception -> 0x0193, all -> 0x017f }
            java.lang.StringBuilder r8 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0193, all -> 0x017f }
            r8.<init>()     // Catch:{ Exception -> 0x0193, all -> 0x017f }
            java.lang.String r9 = "SELECT last_mid FROM dialogs WHERE did = "
            r8.append(r9)     // Catch:{ Exception -> 0x0193, all -> 0x017f }
            long r9 = r7.dialog_id     // Catch:{ Exception -> 0x0193, all -> 0x017f }
            r8.append(r9)     // Catch:{ Exception -> 0x0193, all -> 0x017f }
            java.lang.String r7 = r8.toString()     // Catch:{ Exception -> 0x0193, all -> 0x017f }
            r8 = 0
            java.lang.Object[] r9 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x0193, all -> 0x017f }
            org.telegram.SQLite.SQLiteCursor r6 = r6.queryFinalized(r7, r9)     // Catch:{ Exception -> 0x0193, all -> 0x017f }
            boolean r7 = r6.next()     // Catch:{ Exception -> 0x0193, all -> 0x017f }
            if (r7 == 0) goto L_0x0178
            int r7 = r6.intValue(r8)     // Catch:{ Exception -> 0x0193, all -> 0x017f }
            goto L_0x0179
        L_0x0178:
            r7 = -1
        L_0x0179:
            r6.dispose()     // Catch:{ Exception -> 0x0193, all -> 0x017f }
            if (r7 == 0) goto L_0x01a7
            return
        L_0x017f:
            r0 = move-exception
            r3 = r0
            r13 = r1
        L_0x0182:
            r1 = 0
            r2 = 0
            r10 = 0
            r11 = 0
        L_0x0186:
            r12 = 0
            r16 = 0
        L_0x0189:
            r17 = 0
        L_0x018b:
            r24 = 0
            r25 = 0
        L_0x018f:
            r26 = 0
            goto L_0x1190
        L_0x0193:
            r0 = move-exception
            r3 = r0
            r13 = r1
        L_0x0196:
            r1 = 0
            r2 = 0
            r10 = 0
            r11 = 0
        L_0x019a:
            r12 = 0
            r16 = 0
        L_0x019d:
            r17 = 0
        L_0x019f:
            r24 = 0
            r25 = 0
        L_0x01a3:
            r26 = 0
            goto L_0x1156
        L_0x01a7:
            if (r45 == 0) goto L_0x01ae
            org.telegram.SQLite.SQLiteDatabase r6 = r1.database     // Catch:{ Exception -> 0x0193, all -> 0x017f }
            r6.beginTransaction()     // Catch:{ Exception -> 0x0193, all -> 0x017f }
        L_0x01ae:
            androidx.collection.LongSparseArray r6 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x1150, all -> 0x114a }
            r6.<init>()     // Catch:{ Exception -> 0x1150, all -> 0x114a }
            org.telegram.messenger.support.LongSparseIntArray r7 = new org.telegram.messenger.support.LongSparseIntArray     // Catch:{ Exception -> 0x1150, all -> 0x114a }
            r7.<init>()     // Catch:{ Exception -> 0x1150, all -> 0x114a }
            org.telegram.messenger.support.LongSparseIntArray r8 = new org.telegram.messenger.support.LongSparseIntArray     // Catch:{ Exception -> 0x1150, all -> 0x114a }
            r8.<init>()     // Catch:{ Exception -> 0x1150, all -> 0x114a }
            org.telegram.messenger.support.LongSparseIntArray r9 = new org.telegram.messenger.support.LongSparseIntArray     // Catch:{ Exception -> 0x1150, all -> 0x114a }
            r9.<init>()     // Catch:{ Exception -> 0x1150, all -> 0x114a }
            org.telegram.messenger.support.LongSparseIntArray r10 = new org.telegram.messenger.support.LongSparseIntArray     // Catch:{ Exception -> 0x1150, all -> 0x114a }
            r10.<init>()     // Catch:{ Exception -> 0x1150, all -> 0x114a }
            androidx.collection.LongSparseArray r11 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x1150, all -> 0x114a }
            r11.<init>()     // Catch:{ Exception -> 0x1150, all -> 0x114a }
            androidx.collection.LongSparseArray r12 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x1150, all -> 0x114a }
            r12.<init>()     // Catch:{ Exception -> 0x1150, all -> 0x114a }
            org.telegram.messenger.support.LongSparseIntArray r13 = new org.telegram.messenger.support.LongSparseIntArray     // Catch:{ Exception -> 0x1150, all -> 0x114a }
            r13.<init>()     // Catch:{ Exception -> 0x1150, all -> 0x114a }
            androidx.collection.LongSparseArray r14 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x1150, all -> 0x114a }
            r14.<init>()     // Catch:{ Exception -> 0x1150, all -> 0x114a }
            androidx.collection.LongSparseArray r15 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x1150, all -> 0x114a }
            r15.<init>()     // Catch:{ Exception -> 0x1150, all -> 0x114a }
            org.telegram.SQLite.SQLiteDatabase r5 = r1.database     // Catch:{ Exception -> 0x1150, all -> 0x114a }
            java.lang.String r4 = "REPLACE INTO messages_v2 VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?, ?, ?, ?, ?, ?, 0, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r4 = r5.executeFast(r4)     // Catch:{ Exception -> 0x1150, all -> 0x114a }
            org.telegram.SQLite.SQLiteDatabase r5 = r1.database     // Catch:{ Exception -> 0x113d, all -> 0x1130 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r5.executeFast(r3)     // Catch:{ Exception -> 0x113d, all -> 0x1130 }
            org.telegram.SQLite.SQLiteDatabase r5 = r1.database     // Catch:{ Exception -> 0x1118, all -> 0x10ff }
            r48 = r9
            java.lang.String r9 = "REPLACE INTO download_queue VALUES(?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r9 = r5.executeFast(r9)     // Catch:{ Exception -> 0x1118, all -> 0x10ff }
            org.telegram.SQLite.SQLiteDatabase r5 = r1.database     // Catch:{ Exception -> 0x10e8, all -> 0x10d1 }
            r22 = r8
            java.lang.String r8 = "REPLACE INTO webpage_pending_v2 VALUES(?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r8 = r5.executeFast(r8)     // Catch:{ Exception -> 0x10e8, all -> 0x10d1 }
            r26 = r3
            r27 = r6
            r25 = r8
            r24 = r9
            r3 = 0
            r5 = 0
            r8 = 0
            r9 = 0
        L_0x020e:
            int r6 = r44.size()     // Catch:{ Exception -> 0x10b9, all -> 0x10a1 }
            if (r5 >= r6) goto L_0x03dd
            java.lang.Object r6 = r2.get(r5)     // Catch:{ Exception -> 0x03d6, all -> 0x03cf }
            org.telegram.tgnet.TLRPC$Message r6 = (org.telegram.tgnet.TLRPC$Message) r6     // Catch:{ Exception -> 0x03d6, all -> 0x03cf }
            r28 = r4
            int r4 = r6.id     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            org.telegram.messenger.MessageObject.getDialogId(r6)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            boolean r2 = r6.mentioned     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            if (r2 == 0) goto L_0x024f
            boolean r2 = r6.media_unread     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            if (r2 == 0) goto L_0x024f
            r2 = r7
            r29 = r8
            long r7 = r6.dialog_id     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            java.lang.Object r7 = r15.get(r7)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            java.util.ArrayList r7 = (java.util.ArrayList) r7     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            if (r7 != 0) goto L_0x0244
            java.util.ArrayList r7 = new java.util.ArrayList     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r7.<init>()     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r30 = r2
            r8 = r3
            long r2 = r6.dialog_id     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r15.put(r2, r7)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            goto L_0x0247
        L_0x0244:
            r30 = r2
            r8 = r3
        L_0x0247:
            java.lang.Integer r2 = java.lang.Integer.valueOf(r4)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r7.add(r2)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            goto L_0x0254
        L_0x024f:
            r30 = r7
            r29 = r8
            r8 = r3
        L_0x0254:
            org.telegram.tgnet.TLRPC$MessageAction r2 = r6.action     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            boolean r2 = r2 instanceof org.telegram.tgnet.TLRPC$TL_messageActionHistoryClear     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            java.lang.String r3 = ","
            if (r2 != 0) goto L_0x0322
            boolean r2 = org.telegram.messenger.MessageObject.isOut(r6)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            if (r2 == 0) goto L_0x0266
            boolean r2 = r6.from_scheduled     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            if (r2 == 0) goto L_0x0322
        L_0x0266:
            int r2 = r6.id     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            if (r2 > 0) goto L_0x0270
            boolean r2 = org.telegram.messenger.MessageObject.isUnread(r6)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            if (r2 == 0) goto L_0x0322
        L_0x0270:
            r2 = r8
            long r7 = r6.dialog_id     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r31 = r10
            r10 = -1
            int r7 = r13.get(r7, r10)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            if (r7 != r10) goto L_0x02b6
            org.telegram.SQLite.SQLiteDatabase r7 = r1.database     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            java.lang.StringBuilder r8 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r8.<init>()     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            java.lang.String r10 = "SELECT last_mid, inbox_max FROM dialogs WHERE did = "
            r8.append(r10)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r32 = r11
            long r10 = r6.dialog_id     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r8.append(r10)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            java.lang.String r8 = r8.toString()     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r10 = 0
            java.lang.Object[] r11 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            org.telegram.SQLite.SQLiteCursor r7 = r7.queryFinalized(r8, r11)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            boolean r8 = r7.next()     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            if (r8 == 0) goto L_0x02ab
            int r8 = r7.intValue(r10)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r10 = 1
            int r11 = r7.intValue(r10)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            if (r11 <= r8) goto L_0x02ac
        L_0x02ab:
            r11 = 0
        L_0x02ac:
            r7.dispose()     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            long r7 = r6.dialog_id     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r13.put(r7, r11)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r7 = r11
            goto L_0x02b8
        L_0x02b6:
            r32 = r11
        L_0x02b8:
            java.lang.StringBuilder r8 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r8.<init>()     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            java.lang.String r10 = "update messageRead currentMaxId = "
            r8.append(r10)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r8.append(r7)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            java.lang.String r8 = r8.toString()     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            org.telegram.messenger.FileLog.d(r8)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            int r8 = r6.id     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            if (r8 < 0) goto L_0x02d2
            if (r7 >= r8) goto L_0x0327
        L_0x02d2:
            long r7 = r6.dialog_id     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            java.lang.Object r7 = r12.get(r7)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            java.lang.StringBuilder r7 = (java.lang.StringBuilder) r7     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            if (r7 != 0) goto L_0x02e6
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r7.<init>()     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            long r10 = r6.dialog_id     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r12.put(r10, r7)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
        L_0x02e6:
            int r8 = r7.length()     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            if (r8 <= 0) goto L_0x02ef
            r7.append(r3)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
        L_0x02ef:
            r7.append(r4)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            long r7 = r6.dialog_id     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            java.lang.Object r7 = r14.get(r7)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            java.util.ArrayList r7 = (java.util.ArrayList) r7     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            if (r7 != 0) goto L_0x0306
            java.util.ArrayList r7 = new java.util.ArrayList     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r7.<init>()     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            long r10 = r6.dialog_id     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r14.put(r10, r7)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
        L_0x0306:
            java.lang.Integer r8 = java.lang.Integer.valueOf(r4)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r7.add(r8)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r7.<init>()     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            java.lang.String r8 = "addMessage = "
            r7.append(r8)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r7.append(r4)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            java.lang.String r7 = r7.toString()     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            org.telegram.messenger.FileLog.d(r7)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            goto L_0x0327
        L_0x0322:
            r2 = r8
            r31 = r10
            r32 = r11
        L_0x0327:
            boolean r7 = org.telegram.messenger.MediaDataController.canAddMessageToMedia(r6)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            if (r7 == 0) goto L_0x039b
            if (r9 != 0) goto L_0x0341
            androidx.collection.LongSparseArray r2 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r2.<init>()     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            androidx.collection.LongSparseArray r8 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r8.<init>()     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            androidx.collection.LongSparseArray r7 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r7.<init>()     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r9 = r2
            r2 = r7
            goto L_0x0343
        L_0x0341:
            r8 = r29
        L_0x0343:
            long r10 = r6.dialog_id     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            java.lang.Object r7 = r9.get(r10)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            java.lang.StringBuilder r7 = (java.lang.StringBuilder) r7     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            if (r7 != 0) goto L_0x0357
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r7.<init>()     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            long r10 = r6.dialog_id     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r9.put(r10, r7)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
        L_0x0357:
            int r10 = r7.length()     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            if (r10 <= 0) goto L_0x0360
            r7.append(r3)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
        L_0x0360:
            r7.append(r4)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            long r10 = r6.dialog_id     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            java.lang.Object r3 = r8.get(r10)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            java.util.ArrayList r3 = (java.util.ArrayList) r3     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            if (r3 != 0) goto L_0x0377
            java.util.ArrayList r3 = new java.util.ArrayList     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r3.<init>()     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            long r10 = r6.dialog_id     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r8.put(r10, r3)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
        L_0x0377:
            java.lang.Integer r7 = java.lang.Integer.valueOf(r4)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r3.add(r7)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            long r10 = r6.dialog_id     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            java.lang.Object r3 = r2.get(r10)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            android.util.SparseIntArray r3 = (android.util.SparseIntArray) r3     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            if (r3 != 0) goto L_0x0392
            android.util.SparseIntArray r3 = new android.util.SparseIntArray     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r3.<init>()     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            long r10 = r6.dialog_id     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r2.put(r10, r3)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
        L_0x0392:
            int r7 = org.telegram.messenger.MediaDataController.getMediaType(r6)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r3.put(r4, r7)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r3 = r2
            goto L_0x039e
        L_0x039b:
            r3 = r2
            r8 = r29
        L_0x039e:
            boolean r2 = r1.isValidKeyboardToSave(r6)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            if (r2 == 0) goto L_0x03bc
            long r10 = r6.dialog_id     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r4 = r32
            java.lang.Object r2 = r4.get(r10)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            org.telegram.tgnet.TLRPC$Message r2 = (org.telegram.tgnet.TLRPC$Message) r2     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            if (r2 == 0) goto L_0x03b6
            int r2 = r2.id     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            int r7 = r6.id     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            if (r2 >= r7) goto L_0x03be
        L_0x03b6:
            long r10 = r6.dialog_id     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r4.put(r10, r6)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            goto L_0x03be
        L_0x03bc:
            r4 = r32
        L_0x03be:
            int r5 = r5 + 1
            r2 = r44
            r11 = r4
            r4 = r28
            r7 = r30
            r10 = r31
            goto L_0x020e
        L_0x03cb:
            r0 = move-exception
            goto L_0x03d2
        L_0x03cd:
            r0 = move-exception
            goto L_0x03d9
        L_0x03cf:
            r0 = move-exception
            r28 = r4
        L_0x03d2:
            r3 = r0
            r13 = r1
            goto L_0x10ad
        L_0x03d6:
            r0 = move-exception
            r28 = r4
        L_0x03d9:
            r3 = r0
            r13 = r1
            goto L_0x10c5
        L_0x03dd:
            r2 = r3
            r28 = r4
            r30 = r7
            r29 = r8
            r31 = r10
            r4 = r11
            r3 = 0
        L_0x03e8:
            int r5 = r4.size()     // Catch:{ Exception -> 0x109e, all -> 0x109b }
            if (r3 >= r5) goto L_0x0402
            org.telegram.messenger.MediaDataController r5 = r43.getMediaDataController()     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            long r6 = r4.keyAt(r3)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            java.lang.Object r8 = r4.valueAt(r3)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            org.telegram.tgnet.TLRPC$Message r8 = (org.telegram.tgnet.TLRPC$Message) r8     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            r5.putBotKeyboard(r6, r8)     // Catch:{ Exception -> 0x03cd, all -> 0x03cb }
            int r3 = r3 + 1
            goto L_0x03e8
        L_0x0402:
            if (r9 == 0) goto L_0x053d
            int r4 = r9.size()     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            r5 = 0
            r6 = 0
            r7 = 0
        L_0x040b:
            if (r5 >= r4) goto L_0x053e
            long r10 = r9.keyAt(r5)     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            java.lang.Object r8 = r9.valueAt(r5)     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            java.lang.StringBuilder r8 = (java.lang.StringBuilder) r8     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            java.lang.Object r13 = r2.get(r10)     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            android.util.SparseIntArray r13 = (android.util.SparseIntArray) r13     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            r3 = r29
            java.lang.Object r29 = r3.get(r10)     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            r33 = r2
            r2 = r29
            java.util.ArrayList r2 = (java.util.ArrayList) r2     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            r29 = r3
            org.telegram.SQLite.SQLiteDatabase r3 = r1.database     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            r34 = r4
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            r35 = r7
            java.lang.String r7 = "SELECT mid, type FROM media_v4 WHERE mid IN(%s) AND uid = %d"
            r36 = r9
            r9 = 2
            java.lang.Object[] r1 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            java.lang.String r8 = r8.toString()     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            r9 = 0
            r1[r9] = r8     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            java.lang.Long r8 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            r17 = 1
            r1[r17] = r8     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            java.lang.String r1 = java.lang.String.format(r4, r7, r1)     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            java.lang.Object[] r4 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            org.telegram.SQLite.SQLiteCursor r1 = r3.queryFinalized(r1, r4)     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            r7 = r35
            r3 = 0
        L_0x0456:
            boolean r4 = r1.next()     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            if (r4 == 0) goto L_0x0492
            int r4 = r1.intValue(r9)     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            r8 = 1
            int r9 = r1.intValue(r8)     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            int r8 = r13.get(r4)     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            if (r9 != r8) goto L_0x0473
            java.lang.Integer r4 = java.lang.Integer.valueOf(r4)     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            r2.remove(r4)     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            goto L_0x0490
        L_0x0473:
            if (r3 != 0) goto L_0x048d
            if (r7 != 0) goto L_0x047d
            androidx.collection.LongSparseArray r3 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            r3.<init>()     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            r7 = r3
        L_0x047d:
            java.lang.Object r3 = r7.get(r10)     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            android.util.SparseIntArray r3 = (android.util.SparseIntArray) r3     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            if (r3 != 0) goto L_0x048d
            android.util.SparseIntArray r3 = new android.util.SparseIntArray     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            r3.<init>()     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            r7.put(r10, r3)     // Catch:{ Exception -> 0x052d, all -> 0x051d }
        L_0x048d:
            r3.put(r4, r9)     // Catch:{ Exception -> 0x052d, all -> 0x051d }
        L_0x0490:
            r9 = 0
            goto L_0x0456
        L_0x0492:
            r1.dispose()     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            if (r6 != 0) goto L_0x049c
            android.util.SparseArray r6 = new android.util.SparseArray     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            r6.<init>()     // Catch:{ Exception -> 0x052d, all -> 0x051d }
        L_0x049c:
            int r1 = r2.size()     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            r4 = 0
        L_0x04a1:
            if (r4 >= r1) goto L_0x0511
            java.lang.Object r8 = r2.get(r4)     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            java.lang.Integer r8 = (java.lang.Integer) r8     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            int r8 = r8.intValue()     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            int r9 = r13.get(r8)     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            java.lang.Object r35 = r6.get(r9)     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            r37 = r1
            r1 = r35
            org.telegram.messenger.support.LongSparseIntArray r1 = (org.telegram.messenger.support.LongSparseIntArray) r1     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            if (r1 != 0) goto L_0x04cb
            org.telegram.messenger.support.LongSparseIntArray r1 = new org.telegram.messenger.support.LongSparseIntArray     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            r1.<init>()     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            r6.put(r9, r1)     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            r35 = r2
            r2 = 0
            r9 = -2147483648(0xfffffffvar_, float:-0.0)
            goto L_0x04d5
        L_0x04cb:
            r9 = -2147483648(0xfffffffvar_, float:-0.0)
            int r32 = r1.get(r10, r9)     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            r35 = r2
            r2 = r32
        L_0x04d5:
            if (r2 != r9) goto L_0x04d8
            r2 = 0
        L_0x04d8:
            r9 = 1
            int r2 = r2 + r9
            r1.put(r10, r2)     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            if (r3 == 0) goto L_0x050a
            r1 = -1
            int r2 = r3.get(r8, r1)     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            if (r2 < 0) goto L_0x050a
            java.lang.Object r1 = r6.get(r2)     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            org.telegram.messenger.support.LongSparseIntArray r1 = (org.telegram.messenger.support.LongSparseIntArray) r1     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            if (r1 != 0) goto L_0x04fa
            org.telegram.messenger.support.LongSparseIntArray r1 = new org.telegram.messenger.support.LongSparseIntArray     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            r1.<init>()     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            r6.put(r2, r1)     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            r2 = -2147483648(0xfffffffvar_, float:-0.0)
            r8 = 0
            goto L_0x0500
        L_0x04fa:
            r2 = -2147483648(0xfffffffvar_, float:-0.0)
            int r8 = r1.get(r10, r2)     // Catch:{ Exception -> 0x052d, all -> 0x051d }
        L_0x0500:
            if (r8 != r2) goto L_0x0505
            r2 = -1
            r8 = 0
            goto L_0x0506
        L_0x0505:
            r2 = -1
        L_0x0506:
            int r8 = r8 + r2
            r1.put(r10, r8)     // Catch:{ Exception -> 0x052d, all -> 0x051d }
        L_0x050a:
            int r4 = r4 + 1
            r2 = r35
            r1 = r37
            goto L_0x04a1
        L_0x0511:
            int r5 = r5 + 1
            r1 = r43
            r2 = r33
            r4 = r34
            r9 = r36
            goto L_0x040b
        L_0x051d:
            r0 = move-exception
            r1 = 0
            r2 = 0
            r10 = 0
            r12 = 0
            r16 = 0
            r17 = 0
            r13 = r43
            r3 = r0
            r11 = r28
            goto L_0x1190
        L_0x052d:
            r0 = move-exception
            r1 = 0
            r2 = 0
            r10 = 0
            r12 = 0
            r16 = 0
            r17 = 0
            r13 = r43
            r3 = r0
            r11 = r28
            goto L_0x1156
        L_0x053d:
            r6 = 0
        L_0x053e:
            boolean r1 = r12.isEmpty()     // Catch:{ Exception -> 0x1090, all -> 0x1085 }
            if (r1 != 0) goto L_0x05e5
            int r1 = r12.size()     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            r2 = 0
        L_0x0549:
            if (r2 >= r1) goto L_0x05e5
            long r3 = r12.keyAt(r2)     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            java.lang.Object r5 = r12.valueAt(r2)     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            java.lang.StringBuilder r5 = (java.lang.StringBuilder) r5     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            java.lang.Object r7 = r14.get(r3)     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            java.util.ArrayList r7 = (java.util.ArrayList) r7     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            java.lang.Object r8 = r15.get(r3)     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            java.util.ArrayList r8 = (java.util.ArrayList) r8     // Catch:{ Exception -> 0x052d, all -> 0x051d }
            r9 = r43
            org.telegram.SQLite.SQLiteDatabase r10 = r9.database     // Catch:{ Exception -> 0x05e0, all -> 0x05db }
            java.util.Locale r11 = java.util.Locale.US     // Catch:{ Exception -> 0x05e0, all -> 0x05db }
            java.lang.String r13 = "SELECT mid FROM messages_v2 WHERE mid IN(%s) AND uid = %d"
            r29 = r1
            r33 = r12
            r1 = 2
            java.lang.Object[] r12 = new java.lang.Object[r1]     // Catch:{ Exception -> 0x05e0, all -> 0x05db }
            java.lang.String r1 = r5.toString()     // Catch:{ Exception -> 0x05e0, all -> 0x05db }
            r5 = 0
            r12[r5] = r1     // Catch:{ Exception -> 0x05e0, all -> 0x05db }
            java.lang.Long r1 = java.lang.Long.valueOf(r3)     // Catch:{ Exception -> 0x05e0, all -> 0x05db }
            r17 = 1
            r12[r17] = r1     // Catch:{ Exception -> 0x05e0, all -> 0x05db }
            java.lang.String r1 = java.lang.String.format(r11, r13, r12)     // Catch:{ Exception -> 0x05e0, all -> 0x05db }
            java.lang.Object[] r11 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x05e0, all -> 0x05db }
            org.telegram.SQLite.SQLiteCursor r1 = r10.queryFinalized(r1, r11)     // Catch:{ Exception -> 0x05e0, all -> 0x05db }
        L_0x0589:
            boolean r10 = r1.next()     // Catch:{ Exception -> 0x05e0, all -> 0x05db }
            if (r10 == 0) goto L_0x05a3
            int r10 = r1.intValue(r5)     // Catch:{ Exception -> 0x05e0, all -> 0x05db }
            java.lang.Integer r5 = java.lang.Integer.valueOf(r10)     // Catch:{ Exception -> 0x05e0, all -> 0x05db }
            if (r7 == 0) goto L_0x059c
            r7.remove(r5)     // Catch:{ Exception -> 0x05e0, all -> 0x05db }
        L_0x059c:
            if (r8 == 0) goto L_0x05a1
            r8.remove(r5)     // Catch:{ Exception -> 0x05e0, all -> 0x05db }
        L_0x05a1:
            r5 = 0
            goto L_0x0589
        L_0x05a3:
            r1.dispose()     // Catch:{ Exception -> 0x05e0, all -> 0x05db }
            r1 = r30
            r5 = -1
            int r10 = r1.get(r3, r5)     // Catch:{ Exception -> 0x05e0, all -> 0x05db }
            if (r10 >= 0) goto L_0x05b0
            r10 = 0
        L_0x05b0:
            int r5 = r7.size()     // Catch:{ Exception -> 0x05e0, all -> 0x05db }
            int r10 = r10 + r5
            r1.put(r3, r10)     // Catch:{ Exception -> 0x05e0, all -> 0x05db }
            if (r8 == 0) goto L_0x05cd
            r7 = r31
            r5 = -1
            int r10 = r7.get(r3, r5)     // Catch:{ Exception -> 0x05e0, all -> 0x05db }
            if (r10 >= 0) goto L_0x05c4
            r10 = 0
        L_0x05c4:
            int r5 = r8.size()     // Catch:{ Exception -> 0x05e0, all -> 0x05db }
            int r10 = r10 + r5
            r7.put(r3, r10)     // Catch:{ Exception -> 0x05e0, all -> 0x05db }
            goto L_0x05cf
        L_0x05cd:
            r7 = r31
        L_0x05cf:
            int r2 = r2 + 1
            r30 = r1
            r31 = r7
            r1 = r29
            r12 = r33
            goto L_0x0549
        L_0x05db:
            r0 = move-exception
            r3 = r0
            r13 = r9
            goto L_0x10ad
        L_0x05e0:
            r0 = move-exception
            r3 = r0
            r13 = r9
            goto L_0x10c5
        L_0x05e5:
            r9 = r43
            r1 = r30
            r7 = r31
            r2 = 2147483647(0x7fffffff, float:NaN)
            r3 = 0
            r4 = 0
            r8 = 0
            r10 = 0
            r11 = 0
        L_0x05f3:
            int r5 = r44.size()     // Catch:{ Exception -> 0x1071, all -> 0x105d }
            if (r4 >= r5) goto L_0x0ae9
            r5 = r44
            java.lang.Object r34 = r5.get(r4)     // Catch:{ Exception -> 0x0ad4, all -> 0x0abf }
            r15 = r34
            org.telegram.tgnet.TLRPC$Message r15 = (org.telegram.tgnet.TLRPC$Message) r15     // Catch:{ Exception -> 0x0ad4, all -> 0x0abf }
            r9.fixUnsupportedMedia(r15)     // Catch:{ Exception -> 0x0ad4, all -> 0x0abf }
            r28.requery()     // Catch:{ Exception -> 0x0ad4, all -> 0x0abf }
            int r13 = r15.id     // Catch:{ Exception -> 0x0ad4, all -> 0x0abf }
            int r14 = r15.local_id     // Catch:{ Exception -> 0x0ad4, all -> 0x0abf }
            if (r14 == 0) goto L_0x0610
            r13 = r14
        L_0x0610:
            org.telegram.tgnet.NativeByteBuffer r14 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0ad4, all -> 0x0abf }
            int r12 = r15.getObjectSize()     // Catch:{ Exception -> 0x0ad4, all -> 0x0abf }
            r14.<init>((int) r12)     // Catch:{ Exception -> 0x0ad4, all -> 0x0abf }
            r15.serializeToStream(r14)     // Catch:{ Exception -> 0x0ad4, all -> 0x0abf }
            org.telegram.tgnet.TLRPC$MessageAction r12 = r15.action     // Catch:{ Exception -> 0x0ad4, all -> 0x0abf }
            boolean r5 = r12 instanceof org.telegram.tgnet.TLRPC$TL_messageEncryptedAction     // Catch:{ Exception -> 0x0ad4, all -> 0x0abf }
            if (r5 == 0) goto L_0x0644
            org.telegram.tgnet.TLRPC$DecryptedMessageAction r5 = r12.encryptedAction     // Catch:{ Exception -> 0x063d, all -> 0x0636 }
            boolean r12 = r5 instanceof org.telegram.tgnet.TLRPC$TL_decryptedMessageActionSetMessageTTL     // Catch:{ Exception -> 0x063d, all -> 0x0636 }
            if (r12 != 0) goto L_0x0644
            boolean r5 = r5 instanceof org.telegram.tgnet.TLRPC$TL_decryptedMessageActionScreenshotMessages     // Catch:{ Exception -> 0x063d, all -> 0x0636 }
            if (r5 != 0) goto L_0x0644
            r39 = r1
            r41 = r4
            r38 = r6
            r40 = r7
            r4 = 0
            goto L_0x0688
        L_0x0636:
            r0 = move-exception
            r3 = r0
            r16 = r8
            r13 = r9
            goto L_0x106b
        L_0x063d:
            r0 = move-exception
            r3 = r0
            r16 = r8
            r13 = r9
            goto L_0x107f
        L_0x0644:
            boolean r5 = r15.out     // Catch:{ Exception -> 0x0ad4, all -> 0x0abf }
            if (r5 == 0) goto L_0x067f
            org.telegram.SQLite.SQLiteDatabase r5 = r9.database     // Catch:{ Exception -> 0x063d, all -> 0x0636 }
            java.util.Locale r12 = java.util.Locale.US     // Catch:{ Exception -> 0x063d, all -> 0x0636 }
            r38 = r6
            java.lang.String r6 = "SELECT mid FROM messages_v2 WHERE mid = %d AND uid = %d"
            r39 = r1
            r40 = r7
            r1 = 2
            java.lang.Object[] r7 = new java.lang.Object[r1]     // Catch:{ Exception -> 0x063d, all -> 0x0636 }
            java.lang.Integer r1 = java.lang.Integer.valueOf(r13)     // Catch:{ Exception -> 0x063d, all -> 0x0636 }
            r41 = r4
            r4 = 0
            r7[r4] = r1     // Catch:{ Exception -> 0x063d, all -> 0x0636 }
            r1 = r5
            long r4 = r15.dialog_id     // Catch:{ Exception -> 0x063d, all -> 0x0636 }
            java.lang.Long r4 = java.lang.Long.valueOf(r4)     // Catch:{ Exception -> 0x063d, all -> 0x0636 }
            r5 = 1
            r7[r5] = r4     // Catch:{ Exception -> 0x063d, all -> 0x0636 }
            java.lang.String r4 = java.lang.String.format(r12, r6, r7)     // Catch:{ Exception -> 0x063d, all -> 0x0636 }
            r5 = 0
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x063d, all -> 0x0636 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r4, r6)     // Catch:{ Exception -> 0x063d, all -> 0x0636 }
            boolean r4 = r1.next()     // Catch:{ Exception -> 0x063d, all -> 0x0636 }
            r5 = 1
            r4 = r4 ^ r5
            r1.dispose()     // Catch:{ Exception -> 0x063d, all -> 0x0636 }
            goto L_0x0688
        L_0x067f:
            r39 = r1
            r41 = r4
            r38 = r6
            r40 = r7
            r4 = 1
        L_0x0688:
            if (r4 == 0) goto L_0x06b0
            long r4 = r15.dialog_id     // Catch:{ Exception -> 0x063d, all -> 0x0636 }
            r1 = r27
            java.lang.Object r4 = r1.get(r4)     // Catch:{ Exception -> 0x063d, all -> 0x0636 }
            org.telegram.tgnet.TLRPC$Message r4 = (org.telegram.tgnet.TLRPC$Message) r4     // Catch:{ Exception -> 0x063d, all -> 0x0636 }
            if (r4 == 0) goto L_0x06aa
            int r5 = r15.date     // Catch:{ Exception -> 0x063d, all -> 0x0636 }
            int r6 = r4.date     // Catch:{ Exception -> 0x063d, all -> 0x0636 }
            if (r5 > r6) goto L_0x06aa
            int r4 = r4.id     // Catch:{ Exception -> 0x063d, all -> 0x0636 }
            if (r4 <= 0) goto L_0x06a4
            int r5 = r15.id     // Catch:{ Exception -> 0x063d, all -> 0x0636 }
            if (r5 > r4) goto L_0x06aa
        L_0x06a4:
            if (r4 >= 0) goto L_0x06b2
            int r5 = r15.id     // Catch:{ Exception -> 0x063d, all -> 0x0636 }
            if (r5 >= r4) goto L_0x06b2
        L_0x06aa:
            long r4 = r15.dialog_id     // Catch:{ Exception -> 0x063d, all -> 0x0636 }
            r1.put(r4, r15)     // Catch:{ Exception -> 0x063d, all -> 0x0636 }
            goto L_0x06b2
        L_0x06b0:
            r1 = r27
        L_0x06b2:
            r4 = r28
            r5 = 1
            r4.bindInteger(r5, r13)     // Catch:{ Exception -> 0x0ab7, all -> 0x0aaf }
            long r5 = r15.dialog_id     // Catch:{ Exception -> 0x0ab7, all -> 0x0aaf }
            r7 = 2
            r4.bindLong(r7, r5)     // Catch:{ Exception -> 0x0ab7, all -> 0x0aaf }
            int r5 = org.telegram.messenger.MessageObject.getUnreadFlags(r15)     // Catch:{ Exception -> 0x0ab7, all -> 0x0aaf }
            r6 = 3
            r4.bindInteger(r6, r5)     // Catch:{ Exception -> 0x0ab7, all -> 0x0aaf }
            int r6 = r15.send_state     // Catch:{ Exception -> 0x0ab7, all -> 0x0aaf }
            r7 = 4
            r4.bindInteger(r7, r6)     // Catch:{ Exception -> 0x0ab7, all -> 0x0aaf }
            r6 = 10
            int r12 = r15.date     // Catch:{ Exception -> 0x0ab7, all -> 0x0aaf }
            r5 = 5
            r4.bindInteger(r5, r12)     // Catch:{ Exception -> 0x0ab7, all -> 0x0aaf }
            r5 = 6
            r4.bindByteBuffer((int) r5, (org.telegram.tgnet.NativeByteBuffer) r14)     // Catch:{ Exception -> 0x0ab7, all -> 0x0aaf }
            boolean r5 = org.telegram.messenger.MessageObject.isOut(r15)     // Catch:{ Exception -> 0x0ab7, all -> 0x0aaf }
            if (r5 != 0) goto L_0x06f1
            boolean r5 = r15.from_scheduled     // Catch:{ Exception -> 0x06eb, all -> 0x06e5 }
            if (r5 == 0) goto L_0x06e3
            goto L_0x06f1
        L_0x06e3:
            r5 = 0
            goto L_0x06f2
        L_0x06e5:
            r0 = move-exception
            r3 = r0
            r16 = r8
            goto L_0x0acb
        L_0x06eb:
            r0 = move-exception
            r3 = r0
            r16 = r8
            goto L_0x0ae0
        L_0x06f1:
            r5 = 1
        L_0x06f2:
            r12 = 7
            r4.bindInteger(r12, r5)     // Catch:{ Exception -> 0x0ab7, all -> 0x0aaf }
            int r5 = r15.ttl     // Catch:{ Exception -> 0x0ab7, all -> 0x0aaf }
            r12 = 8
            r4.bindInteger(r12, r5)     // Catch:{ Exception -> 0x0ab7, all -> 0x0aaf }
            int r5 = r15.flags     // Catch:{ Exception -> 0x0ab7, all -> 0x0aaf }
            r5 = r5 & 1024(0x400, float:1.435E-42)
            if (r5 == 0) goto L_0x070b
            int r5 = r15.views     // Catch:{ Exception -> 0x06eb, all -> 0x06e5 }
            r12 = 9
            r4.bindInteger(r12, r5)     // Catch:{ Exception -> 0x06eb, all -> 0x06e5 }
            goto L_0x0714
        L_0x070b:
            int r5 = r9.getMessageMediaType(r15)     // Catch:{ Exception -> 0x0ab7, all -> 0x0aaf }
            r12 = 9
            r4.bindInteger(r12, r5)     // Catch:{ Exception -> 0x0ab7, all -> 0x0aaf }
        L_0x0714:
            int r5 = r15.stickerVerified     // Catch:{ Exception -> 0x0ab7, all -> 0x0aaf }
            if (r5 != 0) goto L_0x071a
            r5 = 1
            goto L_0x0720
        L_0x071a:
            r12 = 2
            if (r5 != r12) goto L_0x071f
            r5 = 2
            goto L_0x0720
        L_0x071f:
            r5 = 0
        L_0x0720:
            r4.bindInteger(r6, r5)     // Catch:{ Exception -> 0x0ab7, all -> 0x0aaf }
            boolean r5 = r15.mentioned     // Catch:{ Exception -> 0x0ab7, all -> 0x0aaf }
            if (r5 == 0) goto L_0x0729
            r5 = 1
            goto L_0x072a
        L_0x0729:
            r5 = 0
        L_0x072a:
            r6 = 11
            r4.bindInteger(r6, r5)     // Catch:{ Exception -> 0x0ab7, all -> 0x0aaf }
            int r5 = r15.forwards     // Catch:{ Exception -> 0x0ab7, all -> 0x0aaf }
            r6 = 12
            r4.bindInteger(r6, r5)     // Catch:{ Exception -> 0x0ab7, all -> 0x0aaf }
            org.telegram.tgnet.TLRPC$MessageReplies r5 = r15.replies     // Catch:{ Exception -> 0x0ab7, all -> 0x0aaf }
            if (r5 == 0) goto L_0x0751
            org.telegram.tgnet.NativeByteBuffer r5 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x06eb, all -> 0x06e5 }
            org.telegram.tgnet.TLRPC$MessageReplies r6 = r15.replies     // Catch:{ Exception -> 0x06eb, all -> 0x06e5 }
            int r6 = r6.getObjectSize()     // Catch:{ Exception -> 0x06eb, all -> 0x06e5 }
            r5.<init>((int) r6)     // Catch:{ Exception -> 0x06eb, all -> 0x06e5 }
            org.telegram.tgnet.TLRPC$MessageReplies r6 = r15.replies     // Catch:{ Exception -> 0x06eb, all -> 0x06e5 }
            r6.serializeToStream(r5)     // Catch:{ Exception -> 0x06eb, all -> 0x06e5 }
            r6 = 13
            r4.bindByteBuffer((int) r6, (org.telegram.tgnet.NativeByteBuffer) r5)     // Catch:{ Exception -> 0x06eb, all -> 0x06e5 }
            r6 = r5
            goto L_0x0757
        L_0x0751:
            r5 = 13
            r4.bindNull(r5)     // Catch:{ Exception -> 0x0ab7, all -> 0x0aaf }
            r6 = 0
        L_0x0757:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r5 = r15.reply_to     // Catch:{ Exception -> 0x0ab7, all -> 0x0aaf }
            if (r5 == 0) goto L_0x0768
            int r12 = r5.reply_to_top_id     // Catch:{ Exception -> 0x06eb, all -> 0x06e5 }
            if (r12 == 0) goto L_0x0760
            goto L_0x0762
        L_0x0760:
            int r12 = r5.reply_to_msg_id     // Catch:{ Exception -> 0x06eb, all -> 0x06e5 }
        L_0x0762:
            r5 = 14
            r4.bindInteger(r5, r12)     // Catch:{ Exception -> 0x06eb, all -> 0x06e5 }
            goto L_0x076e
        L_0x0768:
            r5 = 14
            r12 = 0
            r4.bindInteger(r5, r12)     // Catch:{ Exception -> 0x0ab7, all -> 0x0aaf }
        L_0x076e:
            r49 = r8
            long r7 = org.telegram.messenger.MessageObject.getChannelId(r15)     // Catch:{ Exception -> 0x0aad, all -> 0x0aab }
            r5 = 15
            r4.bindLong(r5, r7)     // Catch:{ Exception -> 0x0aad, all -> 0x0aab }
            org.telegram.tgnet.NativeByteBuffer r7 = org.telegram.messenger.MessageCustomParamsHelper.writeLocalParams(r15)     // Catch:{ Exception -> 0x0aad, all -> 0x0aab }
            if (r7 == 0) goto L_0x078b
            r5 = 16
            r4.bindByteBuffer((int) r5, (org.telegram.tgnet.NativeByteBuffer) r7)     // Catch:{ Exception -> 0x0788, all -> 0x0785 }
            goto L_0x0790
        L_0x0785:
            r0 = move-exception
            goto L_0x0ac8
        L_0x0788:
            r0 = move-exception
            goto L_0x0add
        L_0x078b:
            r5 = 16
            r4.bindNull(r5)     // Catch:{ Exception -> 0x0aad, all -> 0x0aab }
        L_0x0790:
            r4.step()     // Catch:{ Exception -> 0x0aad, all -> 0x0aab }
            r8 = r13
            long r12 = r15.random_id     // Catch:{ Exception -> 0x0aad, all -> 0x0aab }
            r18 = 0
            int r5 = (r12 > r18 ? 1 : (r12 == r18 ? 0 : -1))
            if (r5 == 0) goto L_0x07c6
            r26.requery()     // Catch:{ Exception -> 0x07c3, all -> 0x07c0 }
            long r12 = r15.random_id     // Catch:{ Exception -> 0x07c3, all -> 0x07c0 }
            r27 = r1
            r5 = r26
            r1 = 1
            r5.bindLong(r1, r12)     // Catch:{ Exception -> 0x07bc, all -> 0x07b8 }
            r1 = 2
            r5.bindInteger(r1, r8)     // Catch:{ Exception -> 0x07bc, all -> 0x07b8 }
            long r12 = r15.dialog_id     // Catch:{ Exception -> 0x07bc, all -> 0x07b8 }
            r1 = 3
            r5.bindLong(r1, r12)     // Catch:{ Exception -> 0x07bc, all -> 0x07b8 }
            r1 = r5
            r1.step()     // Catch:{ Exception -> 0x07df, all -> 0x07dc }
            goto L_0x07ca
        L_0x07b8:
            r0 = move-exception
            r1 = r5
            goto L_0x0a9c
        L_0x07bc:
            r0 = move-exception
            r1 = r5
            goto L_0x0aa5
        L_0x07c0:
            r0 = move-exception
            goto L_0x0ab4
        L_0x07c3:
            r0 = move-exception
            goto L_0x0abc
        L_0x07c6:
            r27 = r1
            r1 = r26
        L_0x07ca:
            boolean r12 = org.telegram.messenger.MediaDataController.canAddMessageToMedia(r15)     // Catch:{ Exception -> 0x0aa2, all -> 0x0a99 }
            if (r12 == 0) goto L_0x0827
            if (r49 != 0) goto L_0x07e2
            org.telegram.SQLite.SQLiteDatabase r12 = r9.database     // Catch:{ Exception -> 0x07df, all -> 0x07dc }
            java.lang.String r13 = "REPLACE INTO media_v4 VALUES(?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r12 = r12.executeFast(r13)     // Catch:{ Exception -> 0x07df, all -> 0x07dc }
            r13 = r12
            goto L_0x07e4
        L_0x07dc:
            r0 = move-exception
            goto L_0x0a9c
        L_0x07df:
            r0 = move-exception
            goto L_0x0aa5
        L_0x07e2:
            r13 = r49
        L_0x07e4:
            r13.requery()     // Catch:{ Exception -> 0x0818, all -> 0x0809 }
            r12 = 1
            r13.bindInteger(r12, r8)     // Catch:{ Exception -> 0x0818, all -> 0x0809 }
            r21 = r6
            long r5 = r15.dialog_id     // Catch:{ Exception -> 0x0818, all -> 0x0809 }
            r12 = 2
            r13.bindLong(r12, r5)     // Catch:{ Exception -> 0x0818, all -> 0x0809 }
            int r5 = r15.date     // Catch:{ Exception -> 0x0818, all -> 0x0809 }
            r6 = 3
            r13.bindInteger(r6, r5)     // Catch:{ Exception -> 0x0818, all -> 0x0809 }
            int r6 = org.telegram.messenger.MediaDataController.getMediaType(r15)     // Catch:{ Exception -> 0x0818, all -> 0x0809 }
            r12 = 4
            r13.bindInteger(r12, r6)     // Catch:{ Exception -> 0x0818, all -> 0x0809 }
            r6 = 5
            r13.bindByteBuffer((int) r6, (org.telegram.tgnet.NativeByteBuffer) r14)     // Catch:{ Exception -> 0x0818, all -> 0x0809 }
            r13.step()     // Catch:{ Exception -> 0x0818, all -> 0x0809 }
            goto L_0x082b
        L_0x0809:
            r0 = move-exception
            r3 = r0
            r26 = r1
            r1 = r11
            r16 = r13
            r2 = 0
            r12 = 0
            r17 = 0
            r11 = r4
            r13 = r9
            goto L_0x1190
        L_0x0818:
            r0 = move-exception
            r3 = r0
            r26 = r1
            r1 = r11
            r16 = r13
            r2 = 0
            r12 = 0
            r17 = 0
            r11 = r4
            r13 = r9
            goto L_0x1156
        L_0x0827:
            r21 = r6
            r13 = r49
        L_0x082b:
            int r6 = r15.ttl_period     // Catch:{ Exception -> 0x0a8b, all -> 0x0a7e }
            if (r6 == 0) goto L_0x0865
            int r6 = r15.id     // Catch:{ Exception -> 0x0818, all -> 0x0809 }
            if (r6 <= 0) goto L_0x0865
            if (r10 != 0) goto L_0x083e
            org.telegram.SQLite.SQLiteDatabase r6 = r9.database     // Catch:{ Exception -> 0x0818, all -> 0x0809 }
            java.lang.String r5 = "REPLACE INTO enc_tasks_v4 VALUES(?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r5 = r6.executeFast(r5)     // Catch:{ Exception -> 0x0818, all -> 0x0809 }
            r10 = r5
        L_0x083e:
            r10.requery()     // Catch:{ Exception -> 0x0818, all -> 0x0809 }
            r5 = 1
            r10.bindInteger(r5, r8)     // Catch:{ Exception -> 0x0818, all -> 0x0809 }
            long r5 = r15.dialog_id     // Catch:{ Exception -> 0x0818, all -> 0x0809 }
            r12 = 2
            r10.bindLong(r12, r5)     // Catch:{ Exception -> 0x0818, all -> 0x0809 }
            int r5 = r15.date     // Catch:{ Exception -> 0x0818, all -> 0x0809 }
            int r6 = r15.ttl_period     // Catch:{ Exception -> 0x0818, all -> 0x0809 }
            int r5 = r5 + r6
            r6 = 3
            r10.bindInteger(r6, r5)     // Catch:{ Exception -> 0x0818, all -> 0x0809 }
            r6 = 4
            r12 = 0
            r10.bindInteger(r6, r12)     // Catch:{ Exception -> 0x0818, all -> 0x0809 }
            r10.step()     // Catch:{ Exception -> 0x0818, all -> 0x0809 }
            int r6 = r15.date     // Catch:{ Exception -> 0x0818, all -> 0x0809 }
            int r5 = r15.ttl_period     // Catch:{ Exception -> 0x0818, all -> 0x0809 }
            int r6 = r6 + r5
            int r2 = java.lang.Math.min(r2, r6)     // Catch:{ Exception -> 0x0818, all -> 0x0809 }
        L_0x0865:
            org.telegram.tgnet.TLRPC$MessageMedia r6 = r15.media     // Catch:{ Exception -> 0x0a8b, all -> 0x0a7e }
            boolean r5 = r6 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaPoll     // Catch:{ Exception -> 0x0a8b, all -> 0x0a7e }
            if (r5 == 0) goto L_0x08a7
            if (r11 != 0) goto L_0x0876
            org.telegram.SQLite.SQLiteDatabase r5 = r9.database     // Catch:{ Exception -> 0x0818, all -> 0x0809 }
            java.lang.String r6 = "REPLACE INTO polls_v2 VALUES(?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r5 = r5.executeFast(r6)     // Catch:{ Exception -> 0x0818, all -> 0x0809 }
            r11 = r5
        L_0x0876:
            org.telegram.tgnet.TLRPC$MessageMedia r5 = r15.media     // Catch:{ Exception -> 0x08a2, all -> 0x089d }
            org.telegram.tgnet.TLRPC$TL_messageMediaPoll r5 = (org.telegram.tgnet.TLRPC$TL_messageMediaPoll) r5     // Catch:{ Exception -> 0x08a2, all -> 0x089d }
            r11.requery()     // Catch:{ Exception -> 0x08a2, all -> 0x089d }
            r6 = 1
            r11.bindInteger(r6, r8)     // Catch:{ Exception -> 0x08a2, all -> 0x089d }
            r23 = r13
            long r12 = r15.dialog_id     // Catch:{ Exception -> 0x089a, all -> 0x0897 }
            r6 = 2
            r11.bindLong(r6, r12)     // Catch:{ Exception -> 0x089a, all -> 0x0897 }
            org.telegram.tgnet.TLRPC$Poll r5 = r5.poll     // Catch:{ Exception -> 0x089a, all -> 0x0897 }
            long r5 = r5.id     // Catch:{ Exception -> 0x089a, all -> 0x0897 }
            r8 = 3
            r11.bindLong(r8, r5)     // Catch:{ Exception -> 0x089a, all -> 0x0897 }
            r11.step()     // Catch:{ Exception -> 0x089a, all -> 0x0897 }
        L_0x0894:
            r6 = r25
            goto L_0x08d4
        L_0x0897:
            r0 = move-exception
            goto L_0x0a83
        L_0x089a:
            r0 = move-exception
            goto L_0x0a90
        L_0x089d:
            r0 = move-exception
            r23 = r13
            goto L_0x0a83
        L_0x08a2:
            r0 = move-exception
            r23 = r13
            goto L_0x0a90
        L_0x08a7:
            r23 = r13
            boolean r6 = r6 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaWebPage     // Catch:{ Exception -> 0x0a7c, all -> 0x0a7a }
            if (r6 == 0) goto L_0x0894
            r25.requery()     // Catch:{ Exception -> 0x08cf, all -> 0x08ca }
            org.telegram.tgnet.TLRPC$MessageMedia r6 = r15.media     // Catch:{ Exception -> 0x08cf, all -> 0x08ca }
            org.telegram.tgnet.TLRPC$WebPage r6 = r6.webpage     // Catch:{ Exception -> 0x08cf, all -> 0x08ca }
            long r12 = r6.id     // Catch:{ Exception -> 0x08cf, all -> 0x08ca }
            r6 = r25
            r5 = 1
            r6.bindLong(r5, r12)     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            r5 = 2
            r6.bindInteger(r5, r8)     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            long r12 = r15.dialog_id     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            r5 = 3
            r6.bindLong(r5, r12)     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            r6.step()     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            goto L_0x08d4
        L_0x08ca:
            r0 = move-exception
            r6 = r25
            goto L_0x0a83
        L_0x08cf:
            r0 = move-exception
            r6 = r25
            goto L_0x0a90
        L_0x08d4:
            if (r21 == 0) goto L_0x08ea
            r21.reuse()     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            goto L_0x08ea
        L_0x08da:
            r0 = move-exception
            r3 = r0
            r26 = r1
            r25 = r6
            goto L_0x0a86
        L_0x08e2:
            r0 = move-exception
            r3 = r0
            r26 = r1
            r25 = r6
            goto L_0x0a93
        L_0x08ea:
            if (r7 == 0) goto L_0x08ef
            r7.reuse()     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
        L_0x08ef:
            r14.reuse()     // Catch:{ Exception -> 0x0a76, all -> 0x0a72 }
            if (r47 == 0) goto L_0x0a5b
            org.telegram.tgnet.TLRPC$Peer r7 = r15.peer_id     // Catch:{ Exception -> 0x0a76, all -> 0x0a72 }
            long r7 = r7.channel_id     // Catch:{ Exception -> 0x0a76, all -> 0x0a72 }
            r12 = 0
            int r14 = (r7 > r12 ? 1 : (r7 == r12 ? 0 : -1))
            if (r14 == 0) goto L_0x0902
            boolean r7 = r15.post     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            if (r7 == 0) goto L_0x0a5b
        L_0x0902:
            int r7 = r15.date     // Catch:{ Exception -> 0x0a76, all -> 0x0a72 }
            org.telegram.tgnet.ConnectionsManager r8 = r43.getConnectionsManager()     // Catch:{ Exception -> 0x0a76, all -> 0x0a72 }
            int r8 = r8.getCurrentTime()     // Catch:{ Exception -> 0x0a76, all -> 0x0a72 }
            int r8 = r8 + -3600
            if (r7 < r8) goto L_0x0a5b
            org.telegram.messenger.DownloadController r7 = r43.getDownloadController()     // Catch:{ Exception -> 0x0a76, all -> 0x0a72 }
            int r7 = r7.canDownloadMedia((org.telegram.tgnet.TLRPC$Message) r15)     // Catch:{ Exception -> 0x0a76, all -> 0x0a72 }
            r8 = 1
            if (r7 != r8) goto L_0x0a5b
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r15.media     // Catch:{ Exception -> 0x0a76, all -> 0x0a72 }
            boolean r8 = r7 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaPhoto     // Catch:{ Exception -> 0x0a76, all -> 0x0a72 }
            if (r8 != 0) goto L_0x0929
            boolean r8 = r7 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaDocument     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            if (r8 != 0) goto L_0x0929
            boolean r7 = r7 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaWebPage     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            if (r7 == 0) goto L_0x0a5b
        L_0x0929:
            org.telegram.tgnet.TLRPC$Document r7 = org.telegram.messenger.MessageObject.getDocument(r15)     // Catch:{ Exception -> 0x0a76, all -> 0x0a72 }
            org.telegram.tgnet.TLRPC$Photo r8 = org.telegram.messenger.MessageObject.getPhoto(r15)     // Catch:{ Exception -> 0x0a76, all -> 0x0a72 }
            boolean r12 = org.telegram.messenger.MessageObject.isVoiceMessage(r15)     // Catch:{ Exception -> 0x0a76, all -> 0x0a72 }
            if (r12 == 0) goto L_0x094b
            long r12 = r7.id     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            org.telegram.tgnet.TLRPC$TL_messageMediaDocument r8 = new org.telegram.tgnet.TLRPC$TL_messageMediaDocument     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            r8.<init>()     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            r8.document = r7     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            int r7 = r8.flags     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            r14 = 1
            r7 = r7 | r14
            r8.flags = r7     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            r7 = 2
        L_0x0947:
            r14 = -2147483648(0xfffffffvar_, float:-0.0)
            goto L_0x09dd
        L_0x094b:
            boolean r12 = org.telegram.messenger.MessageObject.isStickerMessage(r15)     // Catch:{ Exception -> 0x0a76, all -> 0x0a72 }
            if (r12 != 0) goto L_0x09c9
            boolean r12 = org.telegram.messenger.MessageObject.isAnimatedStickerMessage(r15)     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            if (r12 == 0) goto L_0x0959
            goto L_0x09c9
        L_0x0959:
            boolean r12 = org.telegram.messenger.MessageObject.isVideoMessage(r15)     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            if (r12 != 0) goto L_0x09b4
            boolean r12 = org.telegram.messenger.MessageObject.isRoundVideoMessage(r15)     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            if (r12 != 0) goto L_0x09b4
            boolean r12 = org.telegram.messenger.MessageObject.isGifMessage(r15)     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            if (r12 == 0) goto L_0x096c
            goto L_0x09b4
        L_0x096c:
            if (r7 == 0) goto L_0x0980
            long r12 = r7.id     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            org.telegram.tgnet.TLRPC$TL_messageMediaDocument r8 = new org.telegram.tgnet.TLRPC$TL_messageMediaDocument     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            r8.<init>()     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            r8.document = r7     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            int r7 = r8.flags     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            r14 = 1
            r7 = r7 | r14
            r8.flags = r7     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            r7 = 8
            goto L_0x0947
        L_0x0980:
            if (r8 == 0) goto L_0x09ad
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r7 = r8.sizes     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            int r12 = org.telegram.messenger.AndroidUtilities.getPhotoSize()     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            org.telegram.tgnet.TLRPC$PhotoSize r7 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r7, r12)     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            if (r7 == 0) goto L_0x09ad
            long r12 = r8.id     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            org.telegram.tgnet.TLRPC$TL_messageMediaPhoto r7 = new org.telegram.tgnet.TLRPC$TL_messageMediaPhoto     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            r7.<init>()     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            r7.photo = r8     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            int r8 = r7.flags     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            r14 = 1
            r8 = r8 | r14
            r7.flags = r8     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            org.telegram.tgnet.TLRPC$MessageMedia r14 = r15.media     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            boolean r14 = r14 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaWebPage     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            if (r14 == 0) goto L_0x09a9
            r14 = -2147483648(0xfffffffvar_, float:-0.0)
            r8 = r8 | r14
            r7.flags = r8     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            goto L_0x09ab
        L_0x09a9:
            r14 = -2147483648(0xfffffffvar_, float:-0.0)
        L_0x09ab:
            r8 = r7
            goto L_0x09dc
        L_0x09ad:
            r14 = -2147483648(0xfffffffvar_, float:-0.0)
            r7 = 0
            r8 = 0
            r12 = 0
            goto L_0x09dd
        L_0x09b4:
            r14 = -2147483648(0xfffffffvar_, float:-0.0)
            long r12 = r7.id     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            org.telegram.tgnet.TLRPC$TL_messageMediaDocument r8 = new org.telegram.tgnet.TLRPC$TL_messageMediaDocument     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            r8.<init>()     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            r8.document = r7     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            int r7 = r8.flags     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            r20 = 1
            r7 = r7 | 1
            r8.flags = r7     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            r7 = 4
            goto L_0x09dd
        L_0x09c9:
            r14 = -2147483648(0xfffffffvar_, float:-0.0)
            long r12 = r7.id     // Catch:{ Exception -> 0x0a76, all -> 0x0a72 }
            org.telegram.tgnet.TLRPC$TL_messageMediaDocument r8 = new org.telegram.tgnet.TLRPC$TL_messageMediaDocument     // Catch:{ Exception -> 0x0a76, all -> 0x0a72 }
            r8.<init>()     // Catch:{ Exception -> 0x0a76, all -> 0x0a72 }
            r8.document = r7     // Catch:{ Exception -> 0x0a76, all -> 0x0a72 }
            int r7 = r8.flags     // Catch:{ Exception -> 0x0a76, all -> 0x0a72 }
            r20 = 1
            r7 = r7 | 1
            r8.flags = r7     // Catch:{ Exception -> 0x0a76, all -> 0x0a72 }
        L_0x09dc:
            r7 = 1
        L_0x09dd:
            if (r8 == 0) goto L_0x0a5b
            org.telegram.tgnet.TLRPC$MessageMedia r5 = r15.media     // Catch:{ Exception -> 0x0a76, all -> 0x0a72 }
            int r5 = r5.ttl_seconds     // Catch:{ Exception -> 0x0a76, all -> 0x0a72 }
            if (r5 == 0) goto L_0x09ef
            r8.ttl_seconds = r5     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            int r5 = r8.flags     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
            r25 = 4
            r5 = r5 | 4
            r8.flags = r5     // Catch:{ Exception -> 0x08e2, all -> 0x08da }
        L_0x09ef:
            r3 = r3 | r7
            r24.requery()     // Catch:{ Exception -> 0x0a76, all -> 0x0a72 }
            org.telegram.tgnet.NativeByteBuffer r5 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0a76, all -> 0x0a72 }
            int r14 = r8.getObjectSize()     // Catch:{ Exception -> 0x0a76, all -> 0x0a72 }
            r5.<init>((int) r14)     // Catch:{ Exception -> 0x0a76, all -> 0x0a72 }
            r8.serializeToStream(r5)     // Catch:{ Exception -> 0x0a76, all -> 0x0a72 }
            r8 = r24
            r14 = 1
            r8.bindLong(r14, r12)     // Catch:{ Exception -> 0x0a52, all -> 0x0a49 }
            r12 = 2
            r8.bindInteger(r12, r7)     // Catch:{ Exception -> 0x0a52, all -> 0x0a49 }
            int r7 = r15.date     // Catch:{ Exception -> 0x0a52, all -> 0x0a49 }
            r12 = 3
            r8.bindInteger(r12, r7)     // Catch:{ Exception -> 0x0a52, all -> 0x0a49 }
            r7 = r5
            r12 = 4
            r8.bindByteBuffer((int) r12, (org.telegram.tgnet.NativeByteBuffer) r7)     // Catch:{ Exception -> 0x0a52, all -> 0x0a49 }
            java.lang.StringBuilder r13 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0a52, all -> 0x0a49 }
            r13.<init>()     // Catch:{ Exception -> 0x0a52, all -> 0x0a49 }
            java.lang.String r14 = "sent_"
            r13.append(r14)     // Catch:{ Exception -> 0x0a52, all -> 0x0a49 }
            org.telegram.tgnet.TLRPC$Peer r14 = r15.peer_id     // Catch:{ Exception -> 0x0a52, all -> 0x0a49 }
            r25 = r6
            if (r14 == 0) goto L_0x0a27
            long r5 = r14.channel_id     // Catch:{ Exception -> 0x0a47, all -> 0x0a45 }
            goto L_0x0a29
        L_0x0a27:
            r5 = 0
        L_0x0a29:
            r13.append(r5)     // Catch:{ Exception -> 0x0a47, all -> 0x0a45 }
            java.lang.String r5 = "_"
            r13.append(r5)     // Catch:{ Exception -> 0x0a47, all -> 0x0a45 }
            int r5 = r15.id     // Catch:{ Exception -> 0x0a47, all -> 0x0a45 }
            r13.append(r5)     // Catch:{ Exception -> 0x0a47, all -> 0x0a45 }
            java.lang.String r5 = r13.toString()     // Catch:{ Exception -> 0x0a47, all -> 0x0a45 }
            r6 = 5
            r8.bindString(r6, r5)     // Catch:{ Exception -> 0x0a47, all -> 0x0a45 }
            r8.step()     // Catch:{ Exception -> 0x0a47, all -> 0x0a45 }
            r7.reuse()     // Catch:{ Exception -> 0x0a47, all -> 0x0a45 }
            goto L_0x0a5f
        L_0x0a45:
            r0 = move-exception
            goto L_0x0a4c
        L_0x0a47:
            r0 = move-exception
            goto L_0x0a55
        L_0x0a49:
            r0 = move-exception
            r25 = r6
        L_0x0a4c:
            r3 = r0
            r26 = r1
            r24 = r8
            goto L_0x0a86
        L_0x0a52:
            r0 = move-exception
            r25 = r6
        L_0x0a55:
            r3 = r0
            r26 = r1
            r24 = r8
            goto L_0x0a93
        L_0x0a5b:
            r25 = r6
            r8 = r24
        L_0x0a5f:
            int r5 = r41 + 1
            r26 = r1
            r28 = r4
            r4 = r5
            r24 = r8
            r8 = r23
            r6 = r38
            r1 = r39
            r7 = r40
            goto L_0x05f3
        L_0x0a72:
            r0 = move-exception
            r25 = r6
            goto L_0x0a81
        L_0x0a76:
            r0 = move-exception
            r25 = r6
            goto L_0x0a8e
        L_0x0a7a:
            r0 = move-exception
            goto L_0x0a81
        L_0x0a7c:
            r0 = move-exception
            goto L_0x0a8e
        L_0x0a7e:
            r0 = move-exception
            r23 = r13
        L_0x0a81:
            r8 = r24
        L_0x0a83:
            r3 = r0
            r26 = r1
        L_0x0a86:
            r13 = r9
            r1 = r11
            r16 = r23
            goto L_0x0acd
        L_0x0a8b:
            r0 = move-exception
            r23 = r13
        L_0x0a8e:
            r8 = r24
        L_0x0a90:
            r3 = r0
            r26 = r1
        L_0x0a93:
            r13 = r9
            r1 = r11
            r16 = r23
            goto L_0x0ae2
        L_0x0a99:
            r0 = move-exception
            r8 = r24
        L_0x0a9c:
            r16 = r49
            r3 = r0
            r26 = r1
            goto L_0x0acb
        L_0x0aa2:
            r0 = move-exception
            r8 = r24
        L_0x0aa5:
            r16 = r49
            r3 = r0
            r26 = r1
            goto L_0x0ae0
        L_0x0aab:
            r0 = move-exception
            goto L_0x0ab2
        L_0x0aad:
            r0 = move-exception
            goto L_0x0aba
        L_0x0aaf:
            r0 = move-exception
            r49 = r8
        L_0x0ab2:
            r8 = r24
        L_0x0ab4:
            r1 = r26
            goto L_0x0ac8
        L_0x0ab7:
            r0 = move-exception
            r49 = r8
        L_0x0aba:
            r8 = r24
        L_0x0abc:
            r1 = r26
            goto L_0x0add
        L_0x0abf:
            r0 = move-exception
            r49 = r8
            r8 = r24
            r1 = r26
            r4 = r28
        L_0x0ac8:
            r16 = r49
            r3 = r0
        L_0x0acb:
            r13 = r9
            r1 = r11
        L_0x0acd:
            r2 = 0
            r12 = 0
        L_0x0acf:
            r17 = 0
            r11 = r4
            goto L_0x1190
        L_0x0ad4:
            r0 = move-exception
            r49 = r8
            r8 = r24
            r1 = r26
            r4 = r28
        L_0x0add:
            r16 = r49
            r3 = r0
        L_0x0ae0:
            r13 = r9
            r1 = r11
        L_0x0ae2:
            r2 = 0
            r12 = 0
        L_0x0ae4:
            r17 = 0
            r11 = r4
            goto L_0x1156
        L_0x0ae9:
            r39 = r1
            r38 = r6
            r40 = r7
            r49 = r8
            r8 = r24
            r5 = r25
            r1 = r26
            r4 = r28
            r6 = 10
            r4.dispose()     // Catch:{ Exception -> 0x104e, all -> 0x103f }
            if (r49 == 0) goto L_0x0b1b
            r49.dispose()     // Catch:{ Exception -> 0x0b10, all -> 0x0b05 }
            r7 = 0
            goto L_0x0b1d
        L_0x0b05:
            r0 = move-exception
            r16 = r49
            r3 = r0
            r26 = r1
            r25 = r5
            r24 = r8
            goto L_0x0acb
        L_0x0b10:
            r0 = move-exception
            r16 = r49
            r3 = r0
            r26 = r1
            r25 = r5
            r24 = r8
            goto L_0x0ae0
        L_0x0b1b:
            r7 = r49
        L_0x0b1d:
            if (r10 == 0) goto L_0x0b4c
            r10.dispose()     // Catch:{ Exception -> 0x0b3d, all -> 0x0b2e }
            org.telegram.messenger.MessagesController r13 = r43.getMessagesController()     // Catch:{ Exception -> 0x0b3d, all -> 0x0b2e }
            r12 = 0
            r14 = 0
            r13.didAddedNewTask(r2, r14, r12)     // Catch:{ Exception -> 0x0b56, all -> 0x0b54 }
            r10 = r12
            goto L_0x0b4d
        L_0x0b2e:
            r0 = move-exception
            r12 = 0
        L_0x0b30:
            r3 = r0
            r26 = r1
            r25 = r5
            r16 = r7
            r24 = r8
            r13 = r9
            r1 = r11
            r2 = r12
            goto L_0x0acf
        L_0x0b3d:
            r0 = move-exception
            r12 = 0
        L_0x0b3f:
            r3 = r0
            r26 = r1
            r25 = r5
            r16 = r7
            r24 = r8
            r13 = r9
            r1 = r11
            r2 = r12
            goto L_0x0ae4
        L_0x0b4c:
            r12 = 0
        L_0x0b4d:
            if (r11 == 0) goto L_0x0b58
            r11.dispose()     // Catch:{ Exception -> 0x0b56, all -> 0x0b54 }
            r11 = r12
            goto L_0x0b58
        L_0x0b54:
            r0 = move-exception
            goto L_0x0b30
        L_0x0b56:
            r0 = move-exception
            goto L_0x0b3f
        L_0x0b58:
            r1.dispose()     // Catch:{ Exception -> 0x1021, all -> 0x1003 }
            r8.dispose()     // Catch:{ Exception -> 0x0fe7, all -> 0x0fcb }
            r5.dispose()     // Catch:{ Exception -> 0x0faf, all -> 0x0var_ }
            org.telegram.SQLite.SQLiteDatabase r1 = r9.database     // Catch:{ Exception -> 0x0f7d, all -> 0x0var_ }
            java.lang.String r2 = "REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0f7d, all -> 0x0var_ }
            org.telegram.SQLite.SQLiteDatabase r2 = r9.database     // Catch:{ Exception -> 0x0f4b, all -> 0x0f2f }
            java.lang.String r5 = "UPDATE dialogs SET date = ?, unread_count = ?, last_mid = ?, unread_count_i = ? WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r5)     // Catch:{ Exception -> 0x0f4b, all -> 0x0f2f }
            java.util.ArrayList r8 = new java.util.ArrayList     // Catch:{ Exception -> 0x0f1d, all -> 0x0f0b }
            r8.<init>()     // Catch:{ Exception -> 0x0f1d, all -> 0x0f0b }
            r13 = 0
        L_0x0b77:
            int r5 = r27.size()     // Catch:{ Exception -> 0x0f1d, all -> 0x0f0b }
            if (r13 >= r5) goto L_0x0dab
            r44 = r7
            r14 = r27
            long r6 = r14.keyAt(r13)     // Catch:{ Exception -> 0x0da1, all -> 0x0d97 }
            r15 = 0
            int r5 = (r6 > r15 ? 1 : (r6 == r15 ? 0 : -1))
            if (r5 != 0) goto L_0x0ba7
            r41 = r3
            r28 = r4
            r47 = r10
            r49 = r11
            r24 = r13
            r27 = r22
            r22 = r40
            r10 = 10
            r11 = 7
            r12 = 9
            r15 = 6
            r13 = r9
            r40 = r14
            r9 = 5
            r14 = 8
            goto L_0x0d54
        L_0x0ba7:
            java.lang.Object r5 = r14.valueAt(r13)     // Catch:{ Exception -> 0x0da1, all -> 0x0d97 }
            r15 = r5
            org.telegram.tgnet.TLRPC$Message r15 = (org.telegram.tgnet.TLRPC$Message) r15     // Catch:{ Exception -> 0x0da1, all -> 0x0d97 }
            r24 = r13
            long r12 = org.telegram.messenger.MessageObject.getChannelId(r15)     // Catch:{ Exception -> 0x0da1, all -> 0x0d97 }
            org.telegram.SQLite.SQLiteDatabase r5 = r9.database     // Catch:{ Exception -> 0x0da1, all -> 0x0d97 }
            r28 = r4
            java.lang.StringBuilder r4 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0d95, all -> 0x0d93 }
            r4.<init>()     // Catch:{ Exception -> 0x0d95, all -> 0x0d93 }
            r47 = r10
            java.lang.String r10 = "SELECT date, unread_count, last_mid, unread_count_i FROM dialogs WHERE did = "
            r4.append(r10)     // Catch:{ Exception -> 0x0d8d, all -> 0x0d87 }
            r4.append(r6)     // Catch:{ Exception -> 0x0d8d, all -> 0x0d87 }
            java.lang.String r4 = r4.toString()     // Catch:{ Exception -> 0x0d8d, all -> 0x0d87 }
            r49 = r11
            r10 = 0
            java.lang.Object[] r11 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x0d83, all -> 0x0d7f }
            org.telegram.SQLite.SQLiteCursor r4 = r5.queryFinalized(r4, r11)     // Catch:{ Exception -> 0x0d83, all -> 0x0d7f }
            boolean r11 = r4.next()     // Catch:{ Exception -> 0x0d83, all -> 0x0d7f }
            if (r11 == 0) goto L_0x0c0e
            int r26 = r4.intValue(r10)     // Catch:{ Exception -> 0x0CLASSNAME, all -> 0x0bfa }
            r5 = 1
            int r10 = r4.intValue(r5)     // Catch:{ Exception -> 0x0CLASSNAME, all -> 0x0bfa }
            r5 = 0
            int r10 = java.lang.Math.max(r5, r10)     // Catch:{ Exception -> 0x0CLASSNAME, all -> 0x0bfa }
            r5 = 2
            int r27 = r4.intValue(r5)     // Catch:{ Exception -> 0x0CLASSNAME, all -> 0x0bfa }
            r21 = r10
            r5 = 3
            int r10 = r4.intValue(r5)     // Catch:{ Exception -> 0x0CLASSNAME, all -> 0x0bfa }
            r5 = 0
            int r10 = java.lang.Math.max(r5, r10)     // Catch:{ Exception -> 0x0CLASSNAME, all -> 0x0bfa }
            goto L_0x0CLASSNAME
        L_0x0bfa:
            r0 = move-exception
            r16 = r44
            r10 = r47
            r3 = r0
            r12 = r1
            r13 = r9
            goto L_0x0f1a
        L_0x0CLASSNAME:
            r0 = move-exception
            r16 = r44
            r10 = r47
            r3 = r0
            r12 = r1
            r13 = r9
            goto L_0x0f2c
        L_0x0c0e:
            r18 = 0
            int r5 = (r12 > r18 ? 1 : (r12 == r18 ? 0 : -1))
            if (r5 == 0) goto L_0x0c1c
            org.telegram.messenger.MessagesController r5 = r43.getMessagesController()     // Catch:{ Exception -> 0x0CLASSNAME, all -> 0x0bfa }
            r10 = 1
            r5.checkChatInviter(r12, r10)     // Catch:{ Exception -> 0x0CLASSNAME, all -> 0x0bfa }
        L_0x0c1c:
            r10 = 0
            r21 = 0
            r26 = 0
            r27 = 0
        L_0x0CLASSNAME:
            r4.dispose()     // Catch:{ Exception -> 0x0d83, all -> 0x0d7f }
            r4 = r40
            r5 = -1
            r40 = r14
            int r14 = r4.get(r6, r5)     // Catch:{ Exception -> 0x0d83, all -> 0x0d7f }
            r41 = r3
            r3 = r39
            int r9 = r3.get(r6, r5)     // Catch:{ Exception -> 0x0d7a, all -> 0x0d75 }
            if (r9 != r5) goto L_0x0c3b
            r9 = 0
            goto L_0x0CLASSNAME
        L_0x0c3b:
            int r5 = r9 + r21
            r3.put(r6, r5)     // Catch:{ Exception -> 0x0d7a, all -> 0x0d75 }
            r5 = -1
        L_0x0CLASSNAME:
            if (r14 != r5) goto L_0x0CLASSNAME
            r14 = 0
            goto L_0x0c4a
        L_0x0CLASSNAME:
            int r5 = r14 + r10
            r4.put(r6, r5)     // Catch:{ Exception -> 0x0d7a, all -> 0x0d75 }
        L_0x0c4a:
            if (r15 == 0) goto L_0x0c7b
            int r5 = r15.id     // Catch:{ Exception -> 0x0CLASSNAME, all -> 0x0CLASSNAME }
            r27 = r5
            goto L_0x0c7b
        L_0x0CLASSNAME:
            r0 = move-exception
            r17 = 0
            r24 = 0
            r25 = 0
            r26 = 0
            r13 = r43
            r16 = r44
            r10 = r47
            r3 = r0
            r12 = r1
            r11 = r28
            goto L_0x101d
        L_0x0CLASSNAME:
            r0 = move-exception
            r17 = 0
            r24 = 0
            r25 = 0
            r26 = 0
            r13 = r43
            r16 = r44
            r10 = r47
            r3 = r0
            r12 = r1
            r11 = r28
            goto L_0x103b
        L_0x0c7b:
            if (r15 == 0) goto L_0x0CLASSNAME
            int r5 = r15.local_id     // Catch:{ Exception -> 0x0CLASSNAME, all -> 0x0CLASSNAME }
            if (r5 == 0) goto L_0x0CLASSNAME
            goto L_0x0CLASSNAME
        L_0x0CLASSNAME:
            r5 = r27
        L_0x0CLASSNAME:
            if (r21 != 0) goto L_0x0CLASSNAME
            if (r9 == 0) goto L_0x0CLASSNAME
            r39 = r3
            r3 = r22
            r3.put(r6, r9)     // Catch:{ Exception -> 0x0CLASSNAME, all -> 0x0CLASSNAME }
            goto L_0x0CLASSNAME
        L_0x0CLASSNAME:
            r39 = r3
            r3 = r22
        L_0x0CLASSNAME:
            if (r10 != 0) goto L_0x0ca0
            if (r14 == 0) goto L_0x0ca0
            r22 = r4
            r4 = r48
            r4.put(r6, r14)     // Catch:{ Exception -> 0x0CLASSNAME, all -> 0x0CLASSNAME }
            goto L_0x0ca4
        L_0x0ca0:
            r22 = r4
            r4 = r48
        L_0x0ca4:
            r27 = r3
            java.lang.Long r3 = java.lang.Long.valueOf(r6)     // Catch:{ Exception -> 0x0d7a, all -> 0x0d75 }
            r8.add(r3)     // Catch:{ Exception -> 0x0d7a, all -> 0x0d75 }
            if (r11 == 0) goto L_0x0ce5
            r2.requery()     // Catch:{ Exception -> 0x0CLASSNAME, all -> 0x0CLASSNAME }
            if (r15 == 0) goto L_0x0cbb
            if (r46 == 0) goto L_0x0cb8
            if (r26 != 0) goto L_0x0cbb
        L_0x0cb8:
            int r3 = r15.date     // Catch:{ Exception -> 0x0CLASSNAME, all -> 0x0CLASSNAME }
            goto L_0x0cbd
        L_0x0cbb:
            r3 = r26
        L_0x0cbd:
            r11 = 1
            r2.bindInteger(r11, r3)     // Catch:{ Exception -> 0x0CLASSNAME, all -> 0x0CLASSNAME }
            int r3 = r21 + r9
            r9 = 2
            r2.bindInteger(r9, r3)     // Catch:{ Exception -> 0x0CLASSNAME, all -> 0x0CLASSNAME }
            r3 = 3
            r2.bindInteger(r3, r5)     // Catch:{ Exception -> 0x0CLASSNAME, all -> 0x0CLASSNAME }
            int r10 = r10 + r14
            r3 = 4
            r2.bindInteger(r3, r10)     // Catch:{ Exception -> 0x0CLASSNAME, all -> 0x0CLASSNAME }
            r9 = 5
            r2.bindLong(r9, r6)     // Catch:{ Exception -> 0x0CLASSNAME, all -> 0x0CLASSNAME }
            r2.step()     // Catch:{ Exception -> 0x0CLASSNAME, all -> 0x0CLASSNAME }
            r9 = 5
            r10 = 10
            r11 = 7
            r12 = 9
            r14 = 8
            r15 = 6
            r13 = r43
            r48 = r4
            goto L_0x0d54
        L_0x0ce5:
            r11 = r5
            r1.requery()     // Catch:{ Exception -> 0x0d7a, all -> 0x0d75 }
            r3 = 1
            r1.bindLong(r3, r6)     // Catch:{ Exception -> 0x0d7a, all -> 0x0d75 }
            if (r15 == 0) goto L_0x0cf6
            if (r46 == 0) goto L_0x0cf3
            if (r26 != 0) goto L_0x0cf6
        L_0x0cf3:
            int r3 = r15.date     // Catch:{ Exception -> 0x0CLASSNAME, all -> 0x0CLASSNAME }
            goto L_0x0cf8
        L_0x0cf6:
            r3 = r26
        L_0x0cf8:
            r15 = 2
            r1.bindInteger(r15, r3)     // Catch:{ Exception -> 0x0d7a, all -> 0x0d75 }
            int r3 = r21 + r9
            r5 = 3
            r1.bindInteger(r5, r3)     // Catch:{ Exception -> 0x0d7a, all -> 0x0d75 }
            r3 = 4
            r1.bindInteger(r3, r11)     // Catch:{ Exception -> 0x0d7a, all -> 0x0d75 }
            r9 = 5
            r11 = 0
            r1.bindInteger(r9, r11)     // Catch:{ Exception -> 0x0d7a, all -> 0x0d75 }
            r15 = 6
            r1.bindInteger(r15, r11)     // Catch:{ Exception -> 0x0d7a, all -> 0x0d75 }
            r48 = r4
            r3 = 0
            r11 = 7
            r1.bindLong(r11, r3)     // Catch:{ Exception -> 0x0d7a, all -> 0x0d75 }
            int r10 = r10 + r14
            r14 = 8
            r1.bindInteger(r14, r10)     // Catch:{ Exception -> 0x0d7a, all -> 0x0d75 }
            int r10 = (r12 > r3 ? 1 : (r12 == r3 ? 0 : -1))
            if (r10 == 0) goto L_0x0d23
            r10 = 1
            goto L_0x0d24
        L_0x0d23:
            r10 = 0
        L_0x0d24:
            r12 = 9
            r1.bindInteger(r12, r10)     // Catch:{ Exception -> 0x0d7a, all -> 0x0d75 }
            r10 = 10
            r13 = 0
            r1.bindInteger(r10, r13)     // Catch:{ Exception -> 0x0d7a, all -> 0x0d75 }
            r3 = 11
            r1.bindInteger(r3, r13)     // Catch:{ Exception -> 0x0d7a, all -> 0x0d75 }
            r4 = 12
            r1.bindInteger(r4, r13)     // Catch:{ Exception -> 0x0d7a, all -> 0x0d75 }
            r3 = 13
            r1.bindInteger(r3, r13)     // Catch:{ Exception -> 0x0d7a, all -> 0x0d75 }
            r3 = 14
            r1.bindNull(r3)     // Catch:{ Exception -> 0x0d7a, all -> 0x0d75 }
            r3 = 15
            r1.bindInteger(r3, r13)     // Catch:{ Exception -> 0x0d7a, all -> 0x0d75 }
            r1.step()     // Catch:{ Exception -> 0x0d7a, all -> 0x0d75 }
            r13 = r43
            androidx.collection.LongSparseArray<java.lang.Boolean> r3 = r13.unknownDialogsIds     // Catch:{ Exception -> 0x0d72, all -> 0x0d6f }
            java.lang.Boolean r4 = java.lang.Boolean.TRUE     // Catch:{ Exception -> 0x0d72, all -> 0x0d6f }
            r3.put(r6, r4)     // Catch:{ Exception -> 0x0d72, all -> 0x0d6f }
        L_0x0d54:
            int r3 = r24 + 1
            r7 = r44
            r10 = r47
            r11 = r49
            r9 = r13
            r4 = r28
            r6 = 10
            r12 = 0
            r13 = r3
            r3 = r41
            r42 = r40
            r40 = r22
            r22 = r27
            r27 = r42
            goto L_0x0b77
        L_0x0d6f:
            r0 = move-exception
            goto L_0x0eff
        L_0x0d72:
            r0 = move-exception
            goto L_0x0var_
        L_0x0d75:
            r0 = move-exception
            r13 = r43
            goto L_0x0eff
        L_0x0d7a:
            r0 = move-exception
            r13 = r43
            goto L_0x0var_
        L_0x0d7f:
            r0 = move-exception
            r13 = r9
            goto L_0x0eff
        L_0x0d83:
            r0 = move-exception
            r13 = r9
            goto L_0x0var_
        L_0x0d87:
            r0 = move-exception
            r13 = r9
            r49 = r11
            goto L_0x0eff
        L_0x0d8d:
            r0 = move-exception
            r13 = r9
            r49 = r11
            goto L_0x0var_
        L_0x0d93:
            r0 = move-exception
            goto L_0x0d9a
        L_0x0d95:
            r0 = move-exception
            goto L_0x0da4
        L_0x0d97:
            r0 = move-exception
            r28 = r4
        L_0x0d9a:
            r13 = r9
            r47 = r10
            r49 = r11
            goto L_0x0var_
        L_0x0da1:
            r0 = move-exception
            r28 = r4
        L_0x0da4:
            r13 = r9
            r47 = r10
            r49 = r11
            goto L_0x0var_
        L_0x0dab:
            r41 = r3
            r28 = r4
            r44 = r7
            r13 = r9
            r47 = r10
            r49 = r11
            r27 = r22
            r22 = r40
            r2.dispose()     // Catch:{ Exception -> 0x0var_, all -> 0x0efd }
            r1.dispose()     // Catch:{ Exception -> 0x0ef5, all -> 0x0eee }
            if (r38 == 0) goto L_0x0e9f
            org.telegram.SQLite.SQLiteDatabase r1 = r13.database     // Catch:{ Exception -> 0x0e98, all -> 0x0e91 }
            java.lang.String r2 = "REPLACE INTO media_counts_v2 VALUES(?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0e98, all -> 0x0e91 }
            int r2 = r38.size()     // Catch:{ Exception -> 0x0e7d, all -> 0x0e69 }
            r6 = 0
        L_0x0dcf:
            if (r6 >= r2) goto L_0x0e65
            r3 = r38
            int r4 = r3.keyAt(r6)     // Catch:{ Exception -> 0x0e7d, all -> 0x0e69 }
            java.lang.Object r7 = r3.valueAt(r6)     // Catch:{ Exception -> 0x0e7d, all -> 0x0e69 }
            org.telegram.messenger.support.LongSparseIntArray r7 = (org.telegram.messenger.support.LongSparseIntArray) r7     // Catch:{ Exception -> 0x0e7d, all -> 0x0e69 }
            int r9 = r7.size()     // Catch:{ Exception -> 0x0e7d, all -> 0x0e69 }
            r10 = 0
        L_0x0de2:
            if (r10 >= r9) goto L_0x0e56
            long r11 = r7.keyAt(r10)     // Catch:{ Exception -> 0x0e7d, all -> 0x0e69 }
            org.telegram.SQLite.SQLiteDatabase r14 = r13.database     // Catch:{ Exception -> 0x0e7d, all -> 0x0e69 }
            java.util.Locale r15 = java.util.Locale.US     // Catch:{ Exception -> 0x0e7d, all -> 0x0e69 }
            java.lang.String r5 = "SELECT count, old FROM media_counts_v2 WHERE uid = %d AND type = %d LIMIT 1"
            r46 = r2
            r38 = r3
            r2 = 2
            java.lang.Object[] r3 = new java.lang.Object[r2]     // Catch:{ Exception -> 0x0e7d, all -> 0x0e69 }
            java.lang.Long r2 = java.lang.Long.valueOf(r11)     // Catch:{ Exception -> 0x0e7d, all -> 0x0e69 }
            r18 = r9
            r9 = 0
            r3[r9] = r2     // Catch:{ Exception -> 0x0e7d, all -> 0x0e69 }
            java.lang.Integer r2 = java.lang.Integer.valueOf(r4)     // Catch:{ Exception -> 0x0e7d, all -> 0x0e69 }
            r17 = 1
            r3[r17] = r2     // Catch:{ Exception -> 0x0e7d, all -> 0x0e69 }
            java.lang.String r2 = java.lang.String.format(r15, r5, r3)     // Catch:{ Exception -> 0x0e7d, all -> 0x0e69 }
            java.lang.Object[] r3 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x0e7d, all -> 0x0e69 }
            org.telegram.SQLite.SQLiteCursor r2 = r14.queryFinalized(r2, r3)     // Catch:{ Exception -> 0x0e7d, all -> 0x0e69 }
            boolean r3 = r2.next()     // Catch:{ Exception -> 0x0e7d, all -> 0x0e69 }
            if (r3 == 0) goto L_0x0e20
            int r3 = r2.intValue(r9)     // Catch:{ Exception -> 0x0e7d, all -> 0x0e69 }
            r5 = 1
            int r9 = r2.intValue(r5)     // Catch:{ Exception -> 0x0e7d, all -> 0x0e69 }
            goto L_0x0e22
        L_0x0e20:
            r3 = -1
            r9 = 0
        L_0x0e22:
            r2.dispose()     // Catch:{ Exception -> 0x0e7d, all -> 0x0e69 }
            r2 = -1
            if (r3 == r2) goto L_0x0e49
            r1.requery()     // Catch:{ Exception -> 0x0e7d, all -> 0x0e69 }
            int r5 = r7.valueAt(r10)     // Catch:{ Exception -> 0x0e7d, all -> 0x0e69 }
            int r3 = r3 + r5
            r5 = 1
            r1.bindLong(r5, r11)     // Catch:{ Exception -> 0x0e7d, all -> 0x0e69 }
            r11 = 2
            r1.bindInteger(r11, r4)     // Catch:{ Exception -> 0x0e7d, all -> 0x0e69 }
            r12 = 0
            int r3 = java.lang.Math.max(r12, r3)     // Catch:{ Exception -> 0x0e7d, all -> 0x0e69 }
            r12 = 3
            r1.bindInteger(r12, r3)     // Catch:{ Exception -> 0x0e7d, all -> 0x0e69 }
            r3 = 4
            r1.bindInteger(r3, r9)     // Catch:{ Exception -> 0x0e7d, all -> 0x0e69 }
            r1.step()     // Catch:{ Exception -> 0x0e7d, all -> 0x0e69 }
            goto L_0x0e4d
        L_0x0e49:
            r3 = 4
            r5 = 1
            r11 = 2
            r12 = 3
        L_0x0e4d:
            int r10 = r10 + 1
            r2 = r46
            r9 = r18
            r3 = r38
            goto L_0x0de2
        L_0x0e56:
            r46 = r2
            r38 = r3
            r2 = -1
            r3 = 4
            r5 = 1
            r11 = 2
            r12 = 3
            int r6 = r6 + 1
            r2 = r46
            goto L_0x0dcf
        L_0x0e65:
            r1.dispose()     // Catch:{ Exception -> 0x0e7d, all -> 0x0e69 }
            goto L_0x0e9f
        L_0x0e69:
            r0 = move-exception
            r16 = r44
            r10 = r47
            r3 = r0
            r26 = r1
            r11 = r28
            r2 = 0
            r12 = 0
            r17 = 0
            r24 = 0
            r25 = 0
            goto L_0x101d
        L_0x0e7d:
            r0 = move-exception
            r16 = r44
            r10 = r47
            r3 = r0
            r26 = r1
            r11 = r28
            r2 = 0
            r12 = 0
            r17 = 0
            r24 = 0
            r25 = 0
            goto L_0x103b
        L_0x0e91:
            r0 = move-exception
            r16 = r44
            r10 = r47
            goto L_0x0var_
        L_0x0e98:
            r0 = move-exception
            r16 = r44
            r10 = r47
            goto L_0x0f8a
        L_0x0e9f:
            if (r45 == 0) goto L_0x0ea6
            org.telegram.SQLite.SQLiteDatabase r1 = r13.database     // Catch:{ Exception -> 0x0e98, all -> 0x0e91 }
            r1.commitTransaction()     // Catch:{ Exception -> 0x0e98, all -> 0x0e91 }
        L_0x0ea6:
            r2 = r48
            r1 = r27
            r3 = 0
            r13.updateFiltersReadCounter(r1, r2, r3)     // Catch:{ Exception -> 0x0e98, all -> 0x0e91 }
            org.telegram.messenger.MessagesController r1 = r43.getMessagesController()     // Catch:{ Exception -> 0x0e98, all -> 0x0e91 }
            r4 = r22
            r2 = r39
            r1.processDialogsUpdateRead(r2, r4)     // Catch:{ Exception -> 0x0e98, all -> 0x0e91 }
            if (r41 == 0) goto L_0x0ec5
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda29 r1 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda29     // Catch:{ Exception -> 0x0e98, all -> 0x0e91 }
            r2 = r41
            r1.<init>(r13, r2)     // Catch:{ Exception -> 0x0e98, all -> 0x0e91 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r1)     // Catch:{ Exception -> 0x0e98, all -> 0x0e91 }
        L_0x0ec5:
            r13.updateWidgets((java.util.ArrayList<java.lang.Long>) r8)     // Catch:{ Exception -> 0x0e98, all -> 0x0e91 }
            r16 = r44
            r2 = r47
            r1 = r49
            r11 = r28
            r14 = 0
        L_0x0ed1:
            if (r14 == 0) goto L_0x0ed8
            org.telegram.SQLite.SQLiteDatabase r3 = r13.database
            r3.commitTransaction()
        L_0x0ed8:
            if (r11 == 0) goto L_0x0edd
            r11.dispose()
        L_0x0edd:
            if (r16 == 0) goto L_0x0ee2
            r16.dispose()
        L_0x0ee2:
            if (r1 == 0) goto L_0x0ee7
            r1.dispose()
        L_0x0ee7:
            if (r2 == 0) goto L_0x118d
            r2.dispose()
            goto L_0x118d
        L_0x0eee:
            r0 = move-exception
            r3 = 0
            r16 = r44
            r10 = r47
            goto L_0x0f3c
        L_0x0ef5:
            r0 = move-exception
            r3 = 0
            r16 = r44
            r10 = r47
            goto L_0x0var_
        L_0x0efd:
            r0 = move-exception
            r3 = 0
        L_0x0eff:
            r16 = r44
            r10 = r47
            goto L_0x0var_
        L_0x0var_:
            r0 = move-exception
            r3 = 0
        L_0x0var_:
            r16 = r44
            r10 = r47
            goto L_0x0f2a
        L_0x0f0b:
            r0 = move-exception
            r28 = r4
            r44 = r7
            r13 = r9
            r47 = r10
            r49 = r11
            r3 = 0
        L_0x0var_:
            r16 = r44
        L_0x0var_:
            r3 = r0
            r12 = r1
        L_0x0f1a:
            r11 = r28
            goto L_0x0var_
        L_0x0f1d:
            r0 = move-exception
            r28 = r4
            r44 = r7
            r13 = r9
            r47 = r10
            r49 = r11
            r3 = 0
        L_0x0var_:
            r16 = r44
        L_0x0f2a:
            r3 = r0
            r12 = r1
        L_0x0f2c:
            r11 = r28
            goto L_0x0f5d
        L_0x0f2f:
            r0 = move-exception
            r28 = r4
            r44 = r7
            r13 = r9
            r47 = r10
            r49 = r11
            r3 = 0
            r16 = r44
        L_0x0f3c:
            r3 = r0
            r12 = r1
            r11 = r28
            r2 = 0
        L_0x0var_:
            r17 = 0
            r24 = 0
            r25 = 0
            r26 = 0
            goto L_0x101d
        L_0x0f4b:
            r0 = move-exception
            r28 = r4
            r44 = r7
            r13 = r9
            r47 = r10
            r49 = r11
            r3 = 0
            r16 = r44
        L_0x0var_:
            r3 = r0
            r12 = r1
            r11 = r28
            r2 = 0
        L_0x0f5d:
            r17 = 0
            r24 = 0
            r25 = 0
            r26 = 0
            goto L_0x103b
        L_0x0var_:
            r0 = move-exception
            r28 = r4
            r44 = r7
            r13 = r9
            r47 = r10
            r49 = r11
            r3 = 0
            r16 = r44
        L_0x0var_:
            r1 = r49
            r3 = r0
            r11 = r28
            r2 = 0
            r12 = 0
            goto L_0x0189
        L_0x0f7d:
            r0 = move-exception
            r28 = r4
            r44 = r7
            r13 = r9
            r47 = r10
            r49 = r11
            r3 = 0
            r16 = r44
        L_0x0f8a:
            r1 = r49
            r3 = r0
            r11 = r28
            r2 = 0
            r12 = 0
            goto L_0x019d
        L_0x0var_:
            r0 = move-exception
            r28 = r4
            r44 = r7
            r13 = r9
            r47 = r10
            r49 = r11
            r3 = 0
            r16 = r44
            r1 = r49
            r3 = r0
            r25 = r5
            r11 = r28
            r2 = 0
            r12 = 0
            r17 = 0
            r24 = 0
            goto L_0x018f
        L_0x0faf:
            r0 = move-exception
            r28 = r4
            r44 = r7
            r13 = r9
            r47 = r10
            r49 = r11
            r3 = 0
            r16 = r44
            r1 = r49
            r3 = r0
            r25 = r5
            r11 = r28
            r2 = 0
            r12 = 0
            r17 = 0
            r24 = 0
            goto L_0x01a3
        L_0x0fcb:
            r0 = move-exception
            r28 = r4
            r44 = r7
            r13 = r9
            r47 = r10
            r49 = r11
            r3 = 0
            r16 = r44
            r1 = r49
            r3 = r0
            r25 = r5
            r24 = r8
            r11 = r28
            r2 = 0
            r12 = 0
            r17 = 0
            goto L_0x018f
        L_0x0fe7:
            r0 = move-exception
            r28 = r4
            r44 = r7
            r13 = r9
            r47 = r10
            r49 = r11
            r3 = 0
            r16 = r44
            r1 = r49
            r3 = r0
            r25 = r5
            r24 = r8
            r11 = r28
            r2 = 0
            r12 = 0
            r17 = 0
            goto L_0x01a3
        L_0x1003:
            r0 = move-exception
            r28 = r4
            r44 = r7
            r13 = r9
            r47 = r10
            r49 = r11
            r3 = 0
            r16 = r44
            r3 = r0
            r26 = r1
            r25 = r5
            r24 = r8
            r11 = r28
            r2 = 0
            r12 = 0
            r17 = 0
        L_0x101d:
            r1 = r49
            goto L_0x1190
        L_0x1021:
            r0 = move-exception
            r28 = r4
            r44 = r7
            r13 = r9
            r47 = r10
            r49 = r11
            r3 = 0
            r16 = r44
            r3 = r0
            r26 = r1
            r25 = r5
            r24 = r8
            r11 = r28
            r2 = 0
            r12 = 0
            r17 = 0
        L_0x103b:
            r1 = r49
            goto L_0x1156
        L_0x103f:
            r0 = move-exception
            r28 = r4
            r13 = r9
            r3 = 0
            r16 = r49
            r3 = r0
            r26 = r1
            r25 = r5
            r24 = r8
            goto L_0x106b
        L_0x104e:
            r0 = move-exception
            r28 = r4
            r13 = r9
            r3 = 0
            r16 = r49
            r3 = r0
            r26 = r1
            r25 = r5
            r24 = r8
            goto L_0x107f
        L_0x105d:
            r0 = move-exception
            r49 = r8
            r13 = r9
            r8 = r24
            r5 = r25
            r1 = r26
            r3 = 0
            r16 = r49
            r3 = r0
        L_0x106b:
            r1 = r11
            r11 = r28
            r2 = 0
            r12 = 0
            goto L_0x10b5
        L_0x1071:
            r0 = move-exception
            r49 = r8
            r13 = r9
            r8 = r24
            r5 = r25
            r1 = r26
            r3 = 0
            r16 = r49
            r3 = r0
        L_0x107f:
            r1 = r11
            r11 = r28
            r2 = 0
            r12 = 0
            goto L_0x10cd
        L_0x1085:
            r0 = move-exception
            r3 = 0
            r13 = r43
            r8 = r24
            r5 = r25
            r1 = r26
            goto L_0x10ac
        L_0x1090:
            r0 = move-exception
            r3 = 0
            r13 = r43
            r8 = r24
            r5 = r25
            r1 = r26
            goto L_0x10c4
        L_0x109b:
            r0 = move-exception
            r13 = r1
            goto L_0x10a5
        L_0x109e:
            r0 = move-exception
            r13 = r1
            goto L_0x10bd
        L_0x10a1:
            r0 = move-exception
            r13 = r1
            r28 = r4
        L_0x10a5:
            r8 = r24
            r5 = r25
            r1 = r26
            r3 = 0
        L_0x10ac:
            r3 = r0
        L_0x10ad:
            r11 = r28
            r1 = 0
            r2 = 0
            r10 = 0
            r12 = 0
            r16 = 0
        L_0x10b5:
            r17 = 0
            goto L_0x1190
        L_0x10b9:
            r0 = move-exception
            r13 = r1
            r28 = r4
        L_0x10bd:
            r8 = r24
            r5 = r25
            r1 = r26
            r3 = 0
        L_0x10c4:
            r3 = r0
        L_0x10c5:
            r11 = r28
            r1 = 0
            r2 = 0
            r10 = 0
            r12 = 0
            r16 = 0
        L_0x10cd:
            r17 = 0
            goto L_0x1156
        L_0x10d1:
            r0 = move-exception
            r13 = r1
            r1 = r3
            r28 = r4
            r8 = r9
            r3 = 0
            r3 = r0
            r26 = r1
            r24 = r8
            r11 = r28
            r1 = 0
            r2 = 0
            r10 = 0
            r12 = 0
            r16 = 0
            r17 = 0
            goto L_0x1114
        L_0x10e8:
            r0 = move-exception
            r13 = r1
            r1 = r3
            r28 = r4
            r8 = r9
            r3 = 0
            r3 = r0
            r26 = r1
            r24 = r8
            r11 = r28
            r1 = 0
            r2 = 0
            r10 = 0
            r12 = 0
            r16 = 0
            r17 = 0
            goto L_0x112d
        L_0x10ff:
            r0 = move-exception
            r13 = r1
            r1 = r3
            r28 = r4
            r3 = 0
            r3 = r0
            r26 = r1
            r11 = r28
            r1 = 0
            r2 = 0
            r10 = 0
            r12 = 0
            r16 = 0
            r17 = 0
            r24 = 0
        L_0x1114:
            r25 = 0
            goto L_0x1190
        L_0x1118:
            r0 = move-exception
            r13 = r1
            r1 = r3
            r28 = r4
            r3 = 0
            r3 = r0
            r26 = r1
            r11 = r28
            r1 = 0
            r2 = 0
            r10 = 0
            r12 = 0
            r16 = 0
            r17 = 0
            r24 = 0
        L_0x112d:
            r25 = 0
            goto L_0x1156
        L_0x1130:
            r0 = move-exception
            r13 = r1
            r28 = r4
            r3 = 0
            r3 = r0
            r11 = r28
            r1 = 0
            r2 = 0
            r10 = 0
            goto L_0x0186
        L_0x113d:
            r0 = move-exception
            r13 = r1
            r28 = r4
            r3 = 0
            r3 = r0
            r11 = r28
            r1 = 0
            r2 = 0
            r10 = 0
            goto L_0x019a
        L_0x114a:
            r0 = move-exception
            r13 = r1
            r3 = 0
            r3 = r0
            goto L_0x0182
        L_0x1150:
            r0 = move-exception
            r13 = r1
            r3 = 0
            r3 = r0
            goto L_0x0196
        L_0x1156:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r3)     // Catch:{ all -> 0x118e }
            if (r17 == 0) goto L_0x1160
            org.telegram.SQLite.SQLiteDatabase r3 = r13.database
            r3.commitTransaction()
        L_0x1160:
            if (r11 == 0) goto L_0x1165
            r11.dispose()
        L_0x1165:
            if (r26 == 0) goto L_0x116a
            r26.dispose()
        L_0x116a:
            if (r24 == 0) goto L_0x116f
            r24.dispose()
        L_0x116f:
            if (r25 == 0) goto L_0x1174
            r25.dispose()
        L_0x1174:
            if (r16 == 0) goto L_0x1179
            r16.dispose()
        L_0x1179:
            if (r1 == 0) goto L_0x117e
            r1.dispose()
        L_0x117e:
            if (r10 == 0) goto L_0x1183
            r10.dispose()
        L_0x1183:
            if (r12 == 0) goto L_0x1188
            r12.dispose()
        L_0x1188:
            if (r2 == 0) goto L_0x118d
            r2.dispose()
        L_0x118d:
            return
        L_0x118e:
            r0 = move-exception
        L_0x118f:
            r3 = r0
        L_0x1190:
            if (r17 == 0) goto L_0x1197
            org.telegram.SQLite.SQLiteDatabase r4 = r13.database
            r4.commitTransaction()
        L_0x1197:
            if (r11 == 0) goto L_0x119c
            r11.dispose()
        L_0x119c:
            if (r26 == 0) goto L_0x11a1
            r26.dispose()
        L_0x11a1:
            if (r24 == 0) goto L_0x11a6
            r24.dispose()
        L_0x11a6:
            if (r25 == 0) goto L_0x11ab
            r25.dispose()
        L_0x11ab:
            if (r16 == 0) goto L_0x11b0
            r16.dispose()
        L_0x11b0:
            if (r1 == 0) goto L_0x11b5
            r1.dispose()
        L_0x11b5:
            if (r10 == 0) goto L_0x11ba
            r10.dispose()
        L_0x11ba:
            if (r12 == 0) goto L_0x11bf
            r12.dispose()
        L_0x11bf:
            if (r2 == 0) goto L_0x11c4
            r2.dispose()
        L_0x11c4:
            goto L_0x11c6
        L_0x11c5:
            throw r3
        L_0x11c6:
            goto L_0x11c5
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$putMessages$159(java.util.ArrayList, boolean, boolean, int, boolean, boolean):void");
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$putMessagesInternal$158(int i) {
        getDownloadController().newDownloadObjectsAvailable(i);
    }

    public void putMessages(ArrayList<TLRPC$Message> arrayList, boolean z, boolean z2, boolean z3, int i, boolean z4) {
        putMessages(arrayList, z, z2, z3, i, false, z4);
    }

    public void putMessages(ArrayList<TLRPC$Message> arrayList, boolean z, boolean z2, boolean z3, int i, boolean z4, boolean z5) {
        if (arrayList.size() != 0) {
            if (z2) {
                this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda148(this, arrayList, z, z3, i, z4, z5));
                return;
            }
            lambda$putMessages$159(arrayList, z, z3, i, z4, z5);
        }
    }

    public void markMessageAsSendError(TLRPC$Message tLRPC$Message, boolean z) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda172(this, tLRPC$Message, z));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$markMessageAsSendError$160(TLRPC$Message tLRPC$Message, boolean z) {
        try {
            long j = (long) tLRPC$Message.id;
            if (z) {
                this.database.executeFast(String.format(Locale.US, "UPDATE scheduled_messages_v2 SET send_state = 2 WHERE mid = %d AND uid = %d", new Object[]{Long.valueOf(j), Long.valueOf(MessageObject.getDialogId(tLRPC$Message))})).stepThis().dispose();
                return;
            }
            this.database.executeFast(String.format(Locale.US, "UPDATE messages_v2 SET send_state = 2 WHERE mid = %d AND uid = %d", new Object[]{Long.valueOf(j), Long.valueOf(MessageObject.getDialogId(tLRPC$Message))})).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void setMessageSeq(int i, int i2, int i3) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda33(this, i, i2, i3));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$setMessageSeq$161(int i, int i2, int i3) {
        SQLitePreparedStatement sQLitePreparedStatement = null;
        try {
            sQLitePreparedStatement = this.database.executeFast("REPLACE INTO messages_seq VALUES(?, ?, ?)");
            sQLitePreparedStatement.requery();
            sQLitePreparedStatement.bindInteger(1, i);
            sQLitePreparedStatement.bindInteger(2, i2);
            sQLitePreparedStatement.bindInteger(3, i3);
            sQLitePreparedStatement.step();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (sQLitePreparedStatement == null) {
                return;
            }
        } catch (Throwable th) {
            if (sQLitePreparedStatement != null) {
                sQLitePreparedStatement.dispose();
            }
            throw th;
        }
        sQLitePreparedStatement.dispose();
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v1, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v2, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v4, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v11, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v13, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v15, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v18, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX WARNING: type inference failed for: r5v0, types: [long[], org.telegram.SQLite.SQLitePreparedStatement] */
    /* JADX WARNING: type inference failed for: r5v5 */
    /* JADX WARNING: type inference failed for: r5v9 */
    /* JADX WARNING: type inference failed for: r5v10 */
    /* JADX WARNING: type inference failed for: r5v14 */
    /* JADX WARNING: type inference failed for: r5v16 */
    /* JADX WARNING: type inference failed for: r5v17 */
    /* JADX WARNING: type inference failed for: r5v23 */
    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:104:0x019e, code lost:
        if (r8 == null) goto L_0x01a3;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:120:0x01d8, code lost:
        if (r5 == 0) goto L_0x01dd;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:143:0x0255, code lost:
        if (r3 != null) goto L_0x0257;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:144:0x0257, code lost:
        r3.dispose();
        r3 = r5;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:146:?, code lost:
        r3 = r1.database.executeFast("UPDATE media_v4 SET mid = ? WHERE mid = ? AND uid = ?");
        r3.bindInteger(1, r2);
        r3.bindInteger(2, r12);
        r3.bindLong(3, r7);
        r3.step();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:147:0x0273, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:149:?, code lost:
        r1.database.executeFast(java.lang.String.format(java.util.Locale.US, "DELETE FROM media_v4 WHERE mid = %d AND uid = %d", new java.lang.Object[]{java.lang.Integer.valueOf(r12), java.lang.Long.valueOf(r7)})).stepThis().dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:150:0x029b, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:152:?, code lost:
        org.telegram.messenger.FileLog.e((java.lang.Throwable) r0);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:153:0x029f, code lost:
        if (r3 == null) goto L_0x02a5;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:154:0x02a1, code lost:
        r3.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:155:0x02a5, code lost:
        r5 = r3;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:156:0x02a6, code lost:
        r5 = r5;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:157:?, code lost:
        r5 = r1.database.executeFast("UPDATE dialogs SET last_mid = ? WHERE last_mid = ?");
        r5.bindInteger(1, r2);
        r5.bindInteger(2, r12);
        r5.step();
        r5 = r5;
        r5 = r5;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:158:0x02ba, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:159:0x02bc, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:161:?, code lost:
        org.telegram.messenger.FileLog.e((java.lang.Throwable) r0);
        r5 = r5;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:162:0x02c0, code lost:
        if (r5 == null) goto L_0x0321;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:163:0x02c2, code lost:
        r5.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:164:0x02c6, code lost:
        if (r5 != null) goto L_0x02c8;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:165:0x02c8, code lost:
        r5.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:166:0x02cb, code lost:
        throw r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:167:0x02cc, code lost:
        if (r3 != null) goto L_0x02ce;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:168:0x02ce, code lost:
        r3.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:169:0x02d1, code lost:
        throw r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:181:0x031c, code lost:
        if (r5 != 0) goto L_0x031e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:182:0x031e, code lost:
        r5.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:49:0x009c, code lost:
        if (r10 != null) goto L_0x009e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:93:0x016c, code lost:
        if (r4 == 1) goto L_0x0170;
     */
    /* JADX WARNING: Failed to insert additional move for type inference */
    /* JADX WARNING: Failed to process nested try/catch */
    /* JADX WARNING: Missing exception handler attribute for start block: B:136:0x020b */
    /* JADX WARNING: Missing exception handler attribute for start block: B:148:0x0275 */
    /* JADX WARNING: Missing exception handler attribute for start block: B:176:0x02f2 */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:108:0x01a9 A[RETURN] */
    /* JADX WARNING: Removed duplicated region for block: B:109:0x01aa  */
    /* JADX WARNING: Removed duplicated region for block: B:171:0x02d4  */
    /* JADX WARNING: Removed duplicated region for block: B:193:0x033e  */
    /* JADX WARNING: Removed duplicated region for block: B:21:0x0051  */
    /* JADX WARNING: Removed duplicated region for block: B:24:0x0058 A[RETURN] */
    /* JADX WARNING: Removed duplicated region for block: B:28:0x005d  */
    /* JADX WARNING: Removed duplicated region for block: B:33:0x0072 A[ADDED_TO_REGION] */
    /* JADX WARNING: Removed duplicated region for block: B:54:0x00a7  */
    /* JADX WARNING: Removed duplicated region for block: B:58:0x00b5  */
    /* JADX WARNING: Removed duplicated region for block: B:70:0x0122 A[ADDED_TO_REGION] */
    /* JADX WARNING: Removed duplicated region for block: B:78:0x0149 A[Catch:{ Exception -> 0x0156 }] */
    /* JADX WARNING: Removed duplicated region for block: B:80:0x014f  */
    /* JADX WARNING: Removed duplicated region for block: B:90:0x0165  */
    /* JADX WARNING: Removed duplicated region for block: B:92:0x016b  */
    /* JADX WARNING: Removed duplicated region for block: B:94:0x016f  */
    /* JADX WARNING: Removed duplicated region for block: B:98:0x018f A[Catch:{ Exception -> 0x019a, all -> 0x0197 }] */
    /* renamed from: updateMessageStateAndIdInternal */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public long[] lambda$updateMessageStateAndId$163(long r20, long r22, java.lang.Integer r24, int r25, int r26, int r27) {
        /*
            r19 = this;
            r1 = r19
            r2 = r25
            r3 = r26
            r4 = r27
            r5 = 0
            r6 = 0
            r7 = 1
            if (r24 != 0) goto L_0x0061
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0048, all -> 0x0046 }
            java.util.Locale r8 = java.util.Locale.US     // Catch:{ Exception -> 0x0048, all -> 0x0046 }
            java.lang.String r9 = "SELECT mid, uid FROM randoms_v2 WHERE random_id = %d LIMIT 1"
            java.lang.Object[] r10 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x0048, all -> 0x0046 }
            java.lang.Long r11 = java.lang.Long.valueOf(r20)     // Catch:{ Exception -> 0x0048, all -> 0x0046 }
            r10[r6] = r11     // Catch:{ Exception -> 0x0048, all -> 0x0046 }
            java.lang.String r8 = java.lang.String.format(r8, r9, r10)     // Catch:{ Exception -> 0x0048, all -> 0x0046 }
            java.lang.Object[] r9 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0048, all -> 0x0046 }
            org.telegram.SQLite.SQLiteCursor r8 = r0.queryFinalized(r8, r9)     // Catch:{ Exception -> 0x0048, all -> 0x0046 }
            boolean r0 = r8.next()     // Catch:{ Exception -> 0x0042 }
            if (r0 == 0) goto L_0x003a
            int r0 = r8.intValue(r6)     // Catch:{ Exception -> 0x0042 }
            java.lang.Integer r9 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x0042 }
            long r10 = r8.longValue(r7)     // Catch:{ Exception -> 0x0038 }
            goto L_0x003e
        L_0x0038:
            r0 = move-exception
            goto L_0x004c
        L_0x003a:
            r10 = r22
            r9 = r24
        L_0x003e:
            r8.dispose()
            goto L_0x0056
        L_0x0042:
            r0 = move-exception
            r9 = r24
            goto L_0x004c
        L_0x0046:
            r0 = move-exception
            goto L_0x005b
        L_0x0048:
            r0 = move-exception
            r9 = r24
            r8 = r5
        L_0x004c:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0059 }
            if (r8 == 0) goto L_0x0054
            r8.dispose()
        L_0x0054:
            r10 = r22
        L_0x0056:
            if (r9 != 0) goto L_0x0066
            return r5
        L_0x0059:
            r0 = move-exception
            r5 = r8
        L_0x005b:
            if (r5 == 0) goto L_0x0060
            r5.dispose()
        L_0x0060:
            throw r0
        L_0x0061:
            r10 = r22
            r9 = r24
            r8 = r5
        L_0x0066:
            int r12 = r9.intValue()
            int r0 = r9.intValue()
            r13 = 3
            r14 = 2
            if (r0 >= 0) goto L_0x00ab
            if (r4 != r7) goto L_0x00ab
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0095, all -> 0x0093 }
            java.lang.String r10 = "UPDATE randoms_v2 SET mid = ? WHERE random_id = ? AND mid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r10 = r0.executeFast(r10)     // Catch:{ Exception -> 0x0095, all -> 0x0093 }
            r10.bindInteger(r7, r2)     // Catch:{ Exception -> 0x008f }
            r22 = r8
            r7 = r20
            r10.bindLong(r14, r7)     // Catch:{ Exception -> 0x008d }
            r10.bindInteger(r13, r12)     // Catch:{ Exception -> 0x008d }
            r10.step()     // Catch:{ Exception -> 0x008d }
            goto L_0x009e
        L_0x008d:
            r0 = move-exception
            goto L_0x0099
        L_0x008f:
            r0 = move-exception
            r22 = r8
            goto L_0x0099
        L_0x0093:
            r0 = move-exception
            goto L_0x00a5
        L_0x0095:
            r0 = move-exception
            r22 = r8
            r10 = r5
        L_0x0099:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x00a3 }
            if (r10 == 0) goto L_0x011d
        L_0x009e:
            r10.dispose()
            goto L_0x011d
        L_0x00a3:
            r0 = move-exception
            r5 = r10
        L_0x00a5:
            if (r5 == 0) goto L_0x00aa
            r5.dispose()
        L_0x00aa:
            throw r0
        L_0x00ab:
            r22 = r8
            r7 = r20
            int r0 = r9.intValue()
            if (r0 <= 0) goto L_0x011d
            org.telegram.tgnet.TLRPC$TL_updateDeleteScheduledMessages r0 = new org.telegram.tgnet.TLRPC$TL_updateDeleteScheduledMessages
            r0.<init>()
            java.util.ArrayList<java.lang.Integer> r2 = r0.messages
            java.lang.Integer r3 = java.lang.Integer.valueOf(r12)
            r2.add(r3)
            boolean r2 = org.telegram.messenger.DialogObject.isChatDialog(r10)
            if (r2 == 0) goto L_0x00d4
            org.telegram.tgnet.TLRPC$TL_peerChannel r2 = new org.telegram.tgnet.TLRPC$TL_peerChannel
            r2.<init>()
            r0.peer = r2
            long r3 = -r10
            r2.channel_id = r3
            goto L_0x00dd
        L_0x00d4:
            org.telegram.tgnet.TLRPC$TL_peerUser r2 = new org.telegram.tgnet.TLRPC$TL_peerUser
            r2.<init>()
            r0.peer = r2
            r2.user_id = r10
        L_0x00dd:
            org.telegram.tgnet.TLRPC$TL_updates r2 = new org.telegram.tgnet.TLRPC$TL_updates
            r2.<init>()
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Update> r3 = r2.updates
            r3.add(r0)
            org.telegram.messenger.DispatchQueue r0 = org.telegram.messenger.Utilities.stageQueue
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda175 r3 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda175
            r3.<init>(r1, r2)
            r0.postRunnable(r3)
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0118 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x0118 }
            java.lang.String r3 = "DELETE FROM randoms_v2 WHERE random_id = %d AND mid = %d AND uid = %d"
            java.lang.Object[] r4 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0118 }
            java.lang.Long r7 = java.lang.Long.valueOf(r20)     // Catch:{ Exception -> 0x0118 }
            r4[r6] = r7     // Catch:{ Exception -> 0x0118 }
            r6 = 1
            r4[r6] = r9     // Catch:{ Exception -> 0x0118 }
            java.lang.Long r6 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x0118 }
            r4[r14] = r6     // Catch:{ Exception -> 0x0118 }
            java.lang.String r2 = java.lang.String.format(r2, r3, r4)     // Catch:{ Exception -> 0x0118 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x0118 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0118 }
            r0.dispose()     // Catch:{ Exception -> 0x0118 }
            goto L_0x011c
        L_0x0118:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x011c:
            return r5
        L_0x011d:
            r7 = -1
            r10 = 0
            if (r4 == r7) goto L_0x012a
            if (r4 != 0) goto L_0x0125
            goto L_0x012a
        L_0x0125:
            r8 = r22
        L_0x0127:
            r16 = r10
            goto L_0x0169
        L_0x012a:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x015d, all -> 0x0158 }
            java.util.Locale r8 = java.util.Locale.US     // Catch:{ Exception -> 0x015d, all -> 0x0158 }
            java.lang.String r15 = "SELECT uid FROM messages_v2 WHERE mid = %d LIMIT 1"
            r13 = 1
            java.lang.Object[] r14 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x015d, all -> 0x0158 }
            java.lang.Integer r16 = java.lang.Integer.valueOf(r12)     // Catch:{ Exception -> 0x015d, all -> 0x0158 }
            r14[r6] = r16     // Catch:{ Exception -> 0x015d, all -> 0x0158 }
            java.lang.String r8 = java.lang.String.format(r8, r15, r14)     // Catch:{ Exception -> 0x015d, all -> 0x0158 }
            java.lang.Object[] r14 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x015d, all -> 0x0158 }
            org.telegram.SQLite.SQLiteCursor r8 = r0.queryFinalized(r8, r14)     // Catch:{ Exception -> 0x015d, all -> 0x0158 }
            boolean r0 = r8.next()     // Catch:{ Exception -> 0x0156 }
            if (r0 == 0) goto L_0x014f
            long r14 = r8.longValue(r6)     // Catch:{ Exception -> 0x0156 }
            r4 = 0
            goto L_0x0150
        L_0x014f:
            r14 = r10
        L_0x0150:
            r8.dispose()
            r16 = r14
            goto L_0x0169
        L_0x0156:
            r0 = move-exception
            goto L_0x0160
        L_0x0158:
            r0 = move-exception
            r8 = r22
            goto L_0x033c
        L_0x015d:
            r0 = move-exception
            r8 = r22
        L_0x0160:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x033b }
            if (r8 == 0) goto L_0x0127
            r8.dispose()
            goto L_0x0127
        L_0x0169:
            if (r4 == r7) goto L_0x016f
            r7 = 1
            if (r4 != r7) goto L_0x01a3
            goto L_0x0170
        L_0x016f:
            r7 = 1
        L_0x0170:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x019a }
            java.util.Locale r13 = java.util.Locale.US     // Catch:{ Exception -> 0x019a }
            java.lang.String r14 = "SELECT uid FROM scheduled_messages_v2 WHERE mid = %d LIMIT 1"
            java.lang.Object[] r15 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x019a }
            r7 = r15
            java.lang.Integer r18 = java.lang.Integer.valueOf(r12)     // Catch:{ Exception -> 0x019a }
            r7[r6] = r18     // Catch:{ Exception -> 0x019a }
            java.lang.String r7 = java.lang.String.format(r13, r14, r7)     // Catch:{ Exception -> 0x019a }
            java.lang.Object[] r13 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x019a }
            org.telegram.SQLite.SQLiteCursor r8 = r0.queryFinalized(r7, r13)     // Catch:{ Exception -> 0x019a }
            boolean r0 = r8.next()     // Catch:{ Exception -> 0x019a }
            if (r0 == 0) goto L_0x01a0
            long r13 = r8.longValue(r6)     // Catch:{ Exception -> 0x019a }
            r16 = r13
            r4 = 1
            goto L_0x01a0
        L_0x0197:
            r0 = move-exception
            goto L_0x0335
        L_0x019a:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0197 }
            if (r8 == 0) goto L_0x01a3
        L_0x01a0:
            r8.dispose()
        L_0x01a3:
            r7 = r16
            int r0 = (r7 > r10 ? 1 : (r7 == r10 ? 0 : -1))
            if (r0 != 0) goto L_0x01aa
            return r5
        L_0x01aa:
            if (r12 != r2) goto L_0x01ed
            if (r3 == 0) goto L_0x01ed
            if (r4 != 0) goto L_0x01b9
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x01d4 }
            java.lang.String r4 = "UPDATE messages_v2 SET send_state = 0, date = ? WHERE mid = ? AND uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r4)     // Catch:{ Exception -> 0x01d4 }
            goto L_0x01c1
        L_0x01b9:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x01d4 }
            java.lang.String r4 = "UPDATE scheduled_messages_v2 SET send_state = 0, date = ? WHERE mid = ? AND uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r4)     // Catch:{ Exception -> 0x01d4 }
        L_0x01c1:
            r5 = r0
            r4 = 1
            r5.bindInteger(r4, r3)     // Catch:{ Exception -> 0x01d4 }
            r3 = 2
            r5.bindInteger(r3, r2)     // Catch:{ Exception -> 0x01d4 }
            r3 = 3
            r5.bindLong(r3, r7)     // Catch:{ Exception -> 0x01d4 }
            r5.step()     // Catch:{ Exception -> 0x01d4 }
            goto L_0x01da
        L_0x01d2:
            r0 = move-exception
            goto L_0x01e7
        L_0x01d4:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x01d2 }
            if (r5 == 0) goto L_0x01dd
        L_0x01da:
            r5.dispose()
        L_0x01dd:
            r3 = 2
            long[] r0 = new long[r3]
            r0[r6] = r7
            long r2 = (long) r2
            r4 = 1
            r0[r4] = r2
            return r0
        L_0x01e7:
            if (r5 == 0) goto L_0x01ec
            r5.dispose()
        L_0x01ec:
            throw r0
        L_0x01ed:
            if (r4 != 0) goto L_0x02d8
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x020a, all -> 0x0207 }
            java.lang.String r3 = "UPDATE messages_v2 SET mid = ?, send_state = 0 WHERE mid = ? AND uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r3 = r0.executeFast(r3)     // Catch:{ Exception -> 0x020a, all -> 0x0207 }
            r4 = 1
            r3.bindInteger(r4, r2)     // Catch:{ Exception -> 0x020b }
            r4 = 2
            r3.bindInteger(r4, r12)     // Catch:{ Exception -> 0x020b }
            r4 = 3
            r3.bindLong(r4, r7)     // Catch:{ Exception -> 0x020b }
            r3.step()     // Catch:{ Exception -> 0x020b }
            goto L_0x0257
        L_0x0207:
            r0 = move-exception
            goto L_0x02d2
        L_0x020a:
            r3 = r5
        L_0x020b:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0251 }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x0251 }
            java.lang.String r10 = "DELETE FROM messages_v2 WHERE mid = %d AND uid = %d"
            r11 = 2
            java.lang.Object[] r13 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x0251 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r12)     // Catch:{ Exception -> 0x0251 }
            r13[r6] = r11     // Catch:{ Exception -> 0x0251 }
            java.lang.Long r11 = java.lang.Long.valueOf(r7)     // Catch:{ Exception -> 0x0251 }
            r14 = 1
            r13[r14] = r11     // Catch:{ Exception -> 0x0251 }
            java.lang.String r10 = java.lang.String.format(r4, r10, r13)     // Catch:{ Exception -> 0x0251 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r10)     // Catch:{ Exception -> 0x0251 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0251 }
            r0.dispose()     // Catch:{ Exception -> 0x0251 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0251 }
            java.lang.String r10 = "DELETE FROM messages_seq WHERE mid = %d"
            r11 = 1
            java.lang.Object[] r13 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x0251 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r12)     // Catch:{ Exception -> 0x0251 }
            r13[r6] = r11     // Catch:{ Exception -> 0x0251 }
            java.lang.String r4 = java.lang.String.format(r4, r10, r13)     // Catch:{ Exception -> 0x0251 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r4)     // Catch:{ Exception -> 0x0251 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0251 }
            r0.dispose()     // Catch:{ Exception -> 0x0251 }
            goto L_0x0255
        L_0x024d:
            r0 = move-exception
            r5 = r3
            goto L_0x02d2
        L_0x0251:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x024d }
        L_0x0255:
            if (r3 == 0) goto L_0x025b
        L_0x0257:
            r3.dispose()
            r3 = r5
        L_0x025b:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0275 }
            java.lang.String r4 = "UPDATE media_v4 SET mid = ? WHERE mid = ? AND uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r3 = r0.executeFast(r4)     // Catch:{ Exception -> 0x0275 }
            r4 = 1
            r3.bindInteger(r4, r2)     // Catch:{ Exception -> 0x0275 }
            r4 = 2
            r3.bindInteger(r4, r12)     // Catch:{ Exception -> 0x0275 }
            r4 = 3
            r3.bindLong(r4, r7)     // Catch:{ Exception -> 0x0275 }
            r3.step()     // Catch:{ Exception -> 0x0275 }
            goto L_0x02a1
        L_0x0273:
            r0 = move-exception
            goto L_0x02cc
        L_0x0275:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x029b }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x029b }
            java.lang.String r10 = "DELETE FROM media_v4 WHERE mid = %d AND uid = %d"
            r11 = 2
            java.lang.Object[] r13 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x029b }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r12)     // Catch:{ Exception -> 0x029b }
            r13[r6] = r11     // Catch:{ Exception -> 0x029b }
            java.lang.Long r11 = java.lang.Long.valueOf(r7)     // Catch:{ Exception -> 0x029b }
            r14 = 1
            r13[r14] = r11     // Catch:{ Exception -> 0x029b }
            java.lang.String r4 = java.lang.String.format(r4, r10, r13)     // Catch:{ Exception -> 0x029b }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r4)     // Catch:{ Exception -> 0x029b }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x029b }
            r0.dispose()     // Catch:{ Exception -> 0x029b }
            goto L_0x029f
        L_0x029b:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0273 }
        L_0x029f:
            if (r3 == 0) goto L_0x02a5
        L_0x02a1:
            r3.dispose()
            goto L_0x02a6
        L_0x02a5:
            r5 = r3
        L_0x02a6:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02bc }
            java.lang.String r3 = "UPDATE dialogs SET last_mid = ? WHERE last_mid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r5 = r0.executeFast(r3)     // Catch:{ Exception -> 0x02bc }
            r3 = 1
            r5.bindInteger(r3, r2)     // Catch:{ Exception -> 0x02bc }
            r2 = 2
            r5.bindInteger(r2, r12)     // Catch:{ Exception -> 0x02bc }
            r5.step()     // Catch:{ Exception -> 0x02bc }
            goto L_0x02c2
        L_0x02ba:
            r0 = move-exception
            goto L_0x02c6
        L_0x02bc:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x02ba }
            if (r5 == 0) goto L_0x0321
        L_0x02c2:
            r5.dispose()
            goto L_0x0321
        L_0x02c6:
            if (r5 == 0) goto L_0x02cb
            r5.dispose()
        L_0x02cb:
            throw r0
        L_0x02cc:
            if (r3 == 0) goto L_0x02d1
            r3.dispose()
        L_0x02d1:
            throw r0
        L_0x02d2:
            if (r5 == 0) goto L_0x02d7
            r5.dispose()
        L_0x02d7:
            throw r0
        L_0x02d8:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02f2 }
            java.lang.String r3 = "UPDATE scheduled_messages_v2 SET mid = ?, send_state = 0 WHERE mid = ? AND uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r5 = r0.executeFast(r3)     // Catch:{ Exception -> 0x02f2 }
            r3 = 1
            r5.bindInteger(r3, r2)     // Catch:{ Exception -> 0x02f2 }
            r2 = 2
            r5.bindInteger(r2, r12)     // Catch:{ Exception -> 0x02f2 }
            r2 = 3
            r5.bindLong(r2, r7)     // Catch:{ Exception -> 0x02f2 }
            r5.step()     // Catch:{ Exception -> 0x02f2 }
            goto L_0x031e
        L_0x02f0:
            r0 = move-exception
            goto L_0x032f
        L_0x02f2:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0318 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x0318 }
            java.lang.String r3 = "DELETE FROM scheduled_messages_v2 WHERE mid = %d AND uid = %d"
            r4 = 2
            java.lang.Object[] r10 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0318 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r12)     // Catch:{ Exception -> 0x0318 }
            r10[r6] = r4     // Catch:{ Exception -> 0x0318 }
            java.lang.Long r4 = java.lang.Long.valueOf(r7)     // Catch:{ Exception -> 0x0318 }
            r11 = 1
            r10[r11] = r4     // Catch:{ Exception -> 0x0318 }
            java.lang.String r2 = java.lang.String.format(r2, r3, r10)     // Catch:{ Exception -> 0x0318 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x0318 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0318 }
            r0.dispose()     // Catch:{ Exception -> 0x0318 }
            goto L_0x031c
        L_0x0318:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x02f0 }
        L_0x031c:
            if (r5 == 0) goto L_0x0321
        L_0x031e:
            r5.dispose()
        L_0x0321:
            r2 = 2
            long[] r0 = new long[r2]
            r0[r6] = r7
            int r2 = r9.intValue()
            long r2 = (long) r2
            r4 = 1
            r0[r4] = r2
            return r0
        L_0x032f:
            if (r5 == 0) goto L_0x0334
            r5.dispose()
        L_0x0334:
            throw r0
        L_0x0335:
            if (r8 == 0) goto L_0x033a
            r8.dispose()
        L_0x033a:
            throw r0
        L_0x033b:
            r0 = move-exception
        L_0x033c:
            if (r8 == 0) goto L_0x0341
            r8.dispose()
        L_0x0341:
            goto L_0x0343
        L_0x0342:
            throw r0
        L_0x0343:
            goto L_0x0342
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$updateMessageStateAndId$163(long, long, java.lang.Integer, int, int, int):long[]");
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$updateMessageStateAndIdInternal$162(TLRPC$TL_updates tLRPC$TL_updates) {
        getMessagesController().processUpdates(tLRPC$TL_updates, false);
    }

    public long[] updateMessageStateAndId(long j, long j2, Integer num, int i, int i2, boolean z, int i3) {
        if (z) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda87(this, j, j2, num, i, i2, i3));
            return null;
        }
        return lambda$updateMessageStateAndId$163(j, j2, num, i, i2, i3);
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:61:0x00f7  */
    /* JADX WARNING: Removed duplicated region for block: B:64:0x0102  */
    /* JADX WARNING: Removed duplicated region for block: B:80:? A[RETURN, SYNTHETIC] */
    /* renamed from: updateUsersInternal */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void lambda$updateUsers$164(java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r9, boolean r10, boolean r11) {
        /*
            r8 = this;
            r0 = 0
            r1 = 0
            if (r10 == 0) goto L_0x0051
            if (r11 == 0) goto L_0x000b
            org.telegram.SQLite.SQLiteDatabase r10 = r8.database     // Catch:{ Exception -> 0x00ec }
            r10.beginTransaction()     // Catch:{ Exception -> 0x00ec }
        L_0x000b:
            org.telegram.SQLite.SQLiteDatabase r10 = r8.database     // Catch:{ Exception -> 0x00ec }
            java.lang.String r2 = "UPDATE users SET status = ? WHERE uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r10 = r10.executeFast(r2)     // Catch:{ Exception -> 0x00ec }
            int r2 = r9.size()     // Catch:{ Exception -> 0x004d, all -> 0x0049 }
            r3 = 0
        L_0x0018:
            if (r3 >= r2) goto L_0x003d
            java.lang.Object r4 = r9.get(r3)     // Catch:{ Exception -> 0x004d, all -> 0x0049 }
            org.telegram.tgnet.TLRPC$User r4 = (org.telegram.tgnet.TLRPC$User) r4     // Catch:{ Exception -> 0x004d, all -> 0x0049 }
            r10.requery()     // Catch:{ Exception -> 0x004d, all -> 0x0049 }
            org.telegram.tgnet.TLRPC$UserStatus r5 = r4.status     // Catch:{ Exception -> 0x004d, all -> 0x0049 }
            r6 = 1
            if (r5 == 0) goto L_0x002e
            int r5 = r5.expires     // Catch:{ Exception -> 0x004d, all -> 0x0049 }
            r10.bindInteger(r6, r5)     // Catch:{ Exception -> 0x004d, all -> 0x0049 }
            goto L_0x0031
        L_0x002e:
            r10.bindInteger(r6, r1)     // Catch:{ Exception -> 0x004d, all -> 0x0049 }
        L_0x0031:
            r5 = 2
            long r6 = r4.id     // Catch:{ Exception -> 0x004d, all -> 0x0049 }
            r10.bindLong(r5, r6)     // Catch:{ Exception -> 0x004d, all -> 0x0049 }
            r10.step()     // Catch:{ Exception -> 0x004d, all -> 0x0049 }
            int r3 = r3 + 1
            goto L_0x0018
        L_0x003d:
            r10.dispose()     // Catch:{ Exception -> 0x004d, all -> 0x0049 }
            if (r11 == 0) goto L_0x00e4
            org.telegram.SQLite.SQLiteDatabase r9 = r8.database     // Catch:{ Exception -> 0x00ec }
            r9.commitTransaction()     // Catch:{ Exception -> 0x00ec }
            goto L_0x00e4
        L_0x0049:
            r9 = move-exception
            r0 = r10
            goto L_0x00fb
        L_0x004d:
            r9 = move-exception
            r0 = r10
            goto L_0x00ed
        L_0x0051:
            java.lang.StringBuilder r10 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x00ec }
            r10.<init>()     // Catch:{ Exception -> 0x00ec }
            androidx.collection.LongSparseArray r2 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x00ec }
            r2.<init>()     // Catch:{ Exception -> 0x00ec }
            int r3 = r9.size()     // Catch:{ Exception -> 0x00ec }
            r4 = 0
        L_0x0060:
            if (r4 >= r3) goto L_0x0080
            java.lang.Object r5 = r9.get(r4)     // Catch:{ Exception -> 0x00ec }
            org.telegram.tgnet.TLRPC$User r5 = (org.telegram.tgnet.TLRPC$User) r5     // Catch:{ Exception -> 0x00ec }
            int r6 = r10.length()     // Catch:{ Exception -> 0x00ec }
            if (r6 == 0) goto L_0x0073
            java.lang.String r6 = ","
            r10.append(r6)     // Catch:{ Exception -> 0x00ec }
        L_0x0073:
            long r6 = r5.id     // Catch:{ Exception -> 0x00ec }
            r10.append(r6)     // Catch:{ Exception -> 0x00ec }
            long r6 = r5.id     // Catch:{ Exception -> 0x00ec }
            r2.put(r6, r5)     // Catch:{ Exception -> 0x00ec }
            int r4 = r4 + 1
            goto L_0x0060
        L_0x0080:
            java.util.ArrayList r9 = new java.util.ArrayList     // Catch:{ Exception -> 0x00ec }
            r9.<init>()     // Catch:{ Exception -> 0x00ec }
            java.lang.String r10 = r10.toString()     // Catch:{ Exception -> 0x00ec }
            r8.getUsersInternal(r10, r9)     // Catch:{ Exception -> 0x00ec }
            int r10 = r9.size()     // Catch:{ Exception -> 0x00ec }
        L_0x0090:
            if (r1 >= r10) goto L_0x00cd
            java.lang.Object r3 = r9.get(r1)     // Catch:{ Exception -> 0x00ec }
            org.telegram.tgnet.TLRPC$User r3 = (org.telegram.tgnet.TLRPC$User) r3     // Catch:{ Exception -> 0x00ec }
            long r4 = r3.id     // Catch:{ Exception -> 0x00ec }
            java.lang.Object r4 = r2.get(r4)     // Catch:{ Exception -> 0x00ec }
            org.telegram.tgnet.TLRPC$User r4 = (org.telegram.tgnet.TLRPC$User) r4     // Catch:{ Exception -> 0x00ec }
            if (r4 == 0) goto L_0x00ca
            java.lang.String r5 = r4.first_name     // Catch:{ Exception -> 0x00ec }
            if (r5 == 0) goto L_0x00bd
            java.lang.String r5 = r4.last_name     // Catch:{ Exception -> 0x00ec }
            if (r5 == 0) goto L_0x00bd
            boolean r5 = org.telegram.messenger.UserObject.isContact(r3)     // Catch:{ Exception -> 0x00ec }
            if (r5 != 0) goto L_0x00b8
            java.lang.String r5 = r4.first_name     // Catch:{ Exception -> 0x00ec }
            r3.first_name = r5     // Catch:{ Exception -> 0x00ec }
            java.lang.String r5 = r4.last_name     // Catch:{ Exception -> 0x00ec }
            r3.last_name = r5     // Catch:{ Exception -> 0x00ec }
        L_0x00b8:
            java.lang.String r4 = r4.username     // Catch:{ Exception -> 0x00ec }
            r3.username = r4     // Catch:{ Exception -> 0x00ec }
            goto L_0x00ca
        L_0x00bd:
            org.telegram.tgnet.TLRPC$UserProfilePhoto r5 = r4.photo     // Catch:{ Exception -> 0x00ec }
            if (r5 == 0) goto L_0x00c4
            r3.photo = r5     // Catch:{ Exception -> 0x00ec }
            goto L_0x00ca
        L_0x00c4:
            java.lang.String r4 = r4.phone     // Catch:{ Exception -> 0x00ec }
            if (r4 == 0) goto L_0x00ca
            r3.phone = r4     // Catch:{ Exception -> 0x00ec }
        L_0x00ca:
            int r1 = r1 + 1
            goto L_0x0090
        L_0x00cd:
            boolean r10 = r9.isEmpty()     // Catch:{ Exception -> 0x00ec }
            if (r10 != 0) goto L_0x00e4
            if (r11 == 0) goto L_0x00da
            org.telegram.SQLite.SQLiteDatabase r10 = r8.database     // Catch:{ Exception -> 0x00ec }
            r10.beginTransaction()     // Catch:{ Exception -> 0x00ec }
        L_0x00da:
            r8.putUsersInternal(r9)     // Catch:{ Exception -> 0x00ec }
            if (r11 == 0) goto L_0x00e4
            org.telegram.SQLite.SQLiteDatabase r9 = r8.database     // Catch:{ Exception -> 0x00ec }
            r9.commitTransaction()     // Catch:{ Exception -> 0x00ec }
        L_0x00e4:
            org.telegram.SQLite.SQLiteDatabase r9 = r8.database
            r9.commitTransaction()
            goto L_0x00fa
        L_0x00ea:
            r9 = move-exception
            goto L_0x00fb
        L_0x00ec:
            r9 = move-exception
        L_0x00ed:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r9)     // Catch:{ all -> 0x00ea }
            org.telegram.SQLite.SQLiteDatabase r9 = r8.database
            r9.commitTransaction()
            if (r0 == 0) goto L_0x00fa
            r0.dispose()
        L_0x00fa:
            return
        L_0x00fb:
            org.telegram.SQLite.SQLiteDatabase r10 = r8.database
            r10.commitTransaction()
            if (r0 == 0) goto L_0x0105
            r0.dispose()
        L_0x0105:
            goto L_0x0107
        L_0x0106:
            throw r9
        L_0x0107:
            goto L_0x0106
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$updateUsers$164(java.util.ArrayList, boolean, boolean):void");
    }

    public void updateUsers(ArrayList<TLRPC$User> arrayList, boolean z, boolean z2, boolean z3) {
        if (arrayList != null && !arrayList.isEmpty()) {
            if (z3) {
                this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda147(this, arrayList, z, z2));
            } else {
                lambda$updateUsers$164(arrayList, z, z2);
            }
        }
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:42:0x00e6  */
    /* JADX WARNING: Removed duplicated region for block: B:45:0x00ed  */
    /* JADX WARNING: Removed duplicated region for block: B:53:? A[RETURN, SYNTHETIC] */
    /* renamed from: markMessagesAsReadInternal */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void lambda$markMessagesAsRead$166(org.telegram.messenger.support.LongSparseIntArray r18, org.telegram.messenger.support.LongSparseIntArray r19, android.util.SparseIntArray r20) {
        /*
            r17 = this;
            r1 = r17
            r0 = r18
            r2 = r19
            r3 = r20
            boolean r5 = isEmpty((org.telegram.messenger.support.LongSparseIntArray) r18)     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            r6 = 2
            r7 = 0
            r8 = 1
            if (r5 != 0) goto L_0x0066
            org.telegram.SQLite.SQLiteDatabase r5 = r1.database     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            java.lang.String r9 = "DELETE FROM unread_push_messages WHERE uid = ? AND mid <= ?"
            org.telegram.SQLite.SQLitePreparedStatement r5 = r5.executeFast(r9)     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            r9 = 0
        L_0x001a:
            int r10 = r18.size()     // Catch:{ Exception -> 0x0062, all -> 0x005e }
            if (r9 >= r10) goto L_0x005a
            long r10 = r0.keyAt(r9)     // Catch:{ Exception -> 0x0062, all -> 0x005e }
            int r12 = r0.get(r10)     // Catch:{ Exception -> 0x0062, all -> 0x005e }
            org.telegram.SQLite.SQLiteDatabase r13 = r1.database     // Catch:{ Exception -> 0x0062, all -> 0x005e }
            java.util.Locale r14 = java.util.Locale.US     // Catch:{ Exception -> 0x0062, all -> 0x005e }
            java.lang.String r15 = "UPDATE messages_v2 SET read_state = read_state | 1 WHERE uid = %d AND mid > 0 AND mid <= %d AND read_state IN(0,2) AND out = 0"
            java.lang.Object[] r4 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0062, all -> 0x005e }
            java.lang.Long r16 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x0062, all -> 0x005e }
            r4[r7] = r16     // Catch:{ Exception -> 0x0062, all -> 0x005e }
            java.lang.Integer r16 = java.lang.Integer.valueOf(r12)     // Catch:{ Exception -> 0x0062, all -> 0x005e }
            r4[r8] = r16     // Catch:{ Exception -> 0x0062, all -> 0x005e }
            java.lang.String r4 = java.lang.String.format(r14, r15, r4)     // Catch:{ Exception -> 0x0062, all -> 0x005e }
            org.telegram.SQLite.SQLitePreparedStatement r4 = r13.executeFast(r4)     // Catch:{ Exception -> 0x0062, all -> 0x005e }
            org.telegram.SQLite.SQLitePreparedStatement r4 = r4.stepThis()     // Catch:{ Exception -> 0x0062, all -> 0x005e }
            r4.dispose()     // Catch:{ Exception -> 0x0062, all -> 0x005e }
            r5.requery()     // Catch:{ Exception -> 0x0062, all -> 0x005e }
            r5.bindLong(r8, r10)     // Catch:{ Exception -> 0x0062, all -> 0x005e }
            r5.bindInteger(r6, r12)     // Catch:{ Exception -> 0x0062, all -> 0x005e }
            r5.step()     // Catch:{ Exception -> 0x0062, all -> 0x005e }
            int r9 = r9 + 1
            goto L_0x001a
        L_0x005a:
            r5.dispose()     // Catch:{ Exception -> 0x0062, all -> 0x005e }
            goto L_0x0066
        L_0x005e:
            r0 = move-exception
            r4 = r5
            goto L_0x00eb
        L_0x0062:
            r0 = move-exception
            r4 = r5
            goto L_0x00e1
        L_0x0066:
            boolean r0 = isEmpty((org.telegram.messenger.support.LongSparseIntArray) r19)     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            if (r0 != 0) goto L_0x00a1
            r0 = 0
        L_0x006d:
            int r4 = r19.size()     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            if (r0 >= r4) goto L_0x00a1
            long r4 = r2.keyAt(r0)     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            int r9 = r2.get(r4)     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            org.telegram.SQLite.SQLiteDatabase r10 = r1.database     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            java.util.Locale r11 = java.util.Locale.US     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            java.lang.String r12 = "UPDATE messages_v2 SET read_state = read_state | 1 WHERE uid = %d AND mid > 0 AND mid <= %d AND read_state IN(0,2) AND out = 1"
            java.lang.Object[] r13 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            java.lang.Long r4 = java.lang.Long.valueOf(r4)     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            r13[r7] = r4     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            r13[r8] = r4     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            java.lang.String r4 = java.lang.String.format(r11, r12, r13)     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            org.telegram.SQLite.SQLitePreparedStatement r4 = r10.executeFast(r4)     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            org.telegram.SQLite.SQLitePreparedStatement r4 = r4.stepThis()     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            r4.dispose()     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            int r0 = r0 + 1
            goto L_0x006d
        L_0x00a1:
            if (r3 == 0) goto L_0x00e9
            boolean r0 = isEmpty((android.util.SparseIntArray) r20)     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            if (r0 != 0) goto L_0x00e9
        L_0x00a9:
            int r0 = r20.size()     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            if (r7 >= r0) goto L_0x00e9
            int r0 = r3.keyAt(r7)     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            long r4 = (long) r0     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            long r4 = org.telegram.messenger.DialogObject.makeEncryptedDialogId(r4)     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            int r0 = r3.valueAt(r7)     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            java.lang.String r9 = "UPDATE messages_v2 SET read_state = read_state | 1 WHERE uid = ? AND date <= ? AND read_state IN(0,2) AND out = 1"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r9)     // Catch:{ Exception -> 0x00df, all -> 0x00dc }
            r2.requery()     // Catch:{ Exception -> 0x00d9, all -> 0x00d6 }
            r2.bindLong(r8, r4)     // Catch:{ Exception -> 0x00d9, all -> 0x00d6 }
            r2.bindInteger(r6, r0)     // Catch:{ Exception -> 0x00d9, all -> 0x00d6 }
            r2.step()     // Catch:{ Exception -> 0x00d9, all -> 0x00d6 }
            r2.dispose()     // Catch:{ Exception -> 0x00d9, all -> 0x00d6 }
            int r7 = r7 + 1
            goto L_0x00a9
        L_0x00d6:
            r0 = move-exception
            r4 = r2
            goto L_0x00eb
        L_0x00d9:
            r0 = move-exception
            r4 = r2
            goto L_0x00e1
        L_0x00dc:
            r0 = move-exception
            r4 = 0
            goto L_0x00eb
        L_0x00df:
            r0 = move-exception
            r4 = 0
        L_0x00e1:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x00ea }
            if (r4 == 0) goto L_0x00e9
            r4.dispose()
        L_0x00e9:
            return
        L_0x00ea:
            r0 = move-exception
        L_0x00eb:
            if (r4 == 0) goto L_0x00f0
            r4.dispose()
        L_0x00f0:
            goto L_0x00f2
        L_0x00f1:
            throw r0
        L_0x00f2:
            goto L_0x00f1
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$markMessagesAsRead$166(org.telegram.messenger.support.LongSparseIntArray, org.telegram.messenger.support.LongSparseIntArray, android.util.SparseIntArray):void");
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v2, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX WARNING: type inference failed for: r0v0 */
    /* JADX WARNING: type inference failed for: r0v3, types: [java.util.ArrayList] */
    /* JADX WARNING: type inference failed for: r0v4 */
    /* JADX WARNING: type inference failed for: r0v10 */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:23:0x0074  */
    /* JADX WARNING: Removed duplicated region for block: B:25:0x007a  */
    /* JADX WARNING: Removed duplicated region for block: B:32:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void markMessagesContentAsReadInternal(long r10, java.util.ArrayList<java.lang.Integer> r12, int r13) {
        /*
            r9 = this;
            r0 = 0
            java.lang.String r1 = ","
            java.lang.String r12 = android.text.TextUtils.join(r1, r12)     // Catch:{ Exception -> 0x006e }
            org.telegram.SQLite.SQLiteDatabase r1 = r9.database     // Catch:{ Exception -> 0x006e }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x006e }
            java.lang.String r3 = "UPDATE messages_v2 SET read_state = read_state | 2 WHERE mid IN (%s) AND uid = %d"
            r4 = 2
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x006e }
            r6 = 0
            r5[r6] = r12     // Catch:{ Exception -> 0x006e }
            java.lang.Long r7 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x006e }
            r8 = 1
            r5[r8] = r7     // Catch:{ Exception -> 0x006e }
            java.lang.String r3 = java.lang.String.format(r2, r3, r5)     // Catch:{ Exception -> 0x006e }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r3)     // Catch:{ Exception -> 0x006e }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x006e }
            r1.dispose()     // Catch:{ Exception -> 0x006e }
            if (r13 == 0) goto L_0x0077
            org.telegram.SQLite.SQLiteDatabase r13 = r9.database     // Catch:{ Exception -> 0x006e }
            java.lang.String r1 = "SELECT mid, ttl FROM messages_v2 WHERE mid IN (%s) AND uid = %d AND ttl > 0"
            java.lang.Object[] r3 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x006e }
            r3[r6] = r12     // Catch:{ Exception -> 0x006e }
            java.lang.Long r12 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x006e }
            r3[r8] = r12     // Catch:{ Exception -> 0x006e }
            java.lang.String r12 = java.lang.String.format(r2, r1, r3)     // Catch:{ Exception -> 0x006e }
            java.lang.Object[] r1 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x006e }
            org.telegram.SQLite.SQLiteCursor r12 = r13.queryFinalized(r12, r1)     // Catch:{ Exception -> 0x006e }
        L_0x0043:
            boolean r13 = r12.next()     // Catch:{ Exception -> 0x0069, all -> 0x0066 }
            if (r13 == 0) goto L_0x005d
            if (r0 != 0) goto L_0x0051
            java.util.ArrayList r13 = new java.util.ArrayList     // Catch:{ Exception -> 0x0069, all -> 0x0066 }
            r13.<init>()     // Catch:{ Exception -> 0x0069, all -> 0x0066 }
            r0 = r13
        L_0x0051:
            int r13 = r12.intValue(r6)     // Catch:{ Exception -> 0x0069, all -> 0x0066 }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r13)     // Catch:{ Exception -> 0x0069, all -> 0x0066 }
            r0.add(r13)     // Catch:{ Exception -> 0x0069, all -> 0x0066 }
            goto L_0x0043
        L_0x005d:
            if (r0 == 0) goto L_0x0062
            r9.emptyMessagesMedia(r10, r0)     // Catch:{ Exception -> 0x0069, all -> 0x0066 }
        L_0x0062:
            r12.dispose()     // Catch:{ Exception -> 0x0069, all -> 0x0066 }
            goto L_0x0077
        L_0x0066:
            r10 = move-exception
            r0 = r12
            goto L_0x0078
        L_0x0069:
            r10 = move-exception
            r0 = r12
            goto L_0x006f
        L_0x006c:
            r10 = move-exception
            goto L_0x0078
        L_0x006e:
            r10 = move-exception
        L_0x006f:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r10)     // Catch:{ all -> 0x006c }
            if (r0 == 0) goto L_0x0077
            r0.dispose()
        L_0x0077:
            return
        L_0x0078:
            if (r0 == 0) goto L_0x007d
            r0.dispose()
        L_0x007d:
            goto L_0x007f
        L_0x007e:
            throw r10
        L_0x007f:
            goto L_0x007e
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.markMessagesContentAsReadInternal(long, java.util.ArrayList, int):void");
    }

    public void markMessagesContentAsRead(long j, ArrayList<Integer> arrayList, int i) {
        if (!isEmpty((List<?>) arrayList)) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda96(this, j, arrayList, i));
        }
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:26:0x0075  */
    /* JADX WARNING: Removed duplicated region for block: B:29:0x007c  */
    /* JADX WARNING: Removed duplicated region for block: B:37:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$markMessagesContentAsRead$165(long r7, java.util.ArrayList r9, int r10) {
        /*
            r6 = this;
            r0 = 0
            int r2 = (r7 > r0 ? 1 : (r7 == r0 ? 0 : -1))
            if (r2 != 0) goto L_0x0080
            r7 = 0
            androidx.collection.LongSparseArray r8 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x006d, all -> 0x0069 }
            r8.<init>()     // Catch:{ Exception -> 0x006d, all -> 0x0069 }
            org.telegram.SQLite.SQLiteDatabase r0 = r6.database     // Catch:{ Exception -> 0x006d, all -> 0x0069 }
            java.util.Locale r1 = java.util.Locale.US     // Catch:{ Exception -> 0x006d, all -> 0x0069 }
            java.lang.String r2 = "SELECT uid, mid FROM messages_v2 WHERE mid IN (%s) AND is_channel = 0"
            r3 = 1
            java.lang.Object[] r4 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x006d, all -> 0x0069 }
            java.lang.String r5 = ","
            java.lang.String r9 = android.text.TextUtils.join(r5, r9)     // Catch:{ Exception -> 0x006d, all -> 0x0069 }
            r5 = 0
            r4[r5] = r9     // Catch:{ Exception -> 0x006d, all -> 0x0069 }
            java.lang.String r9 = java.lang.String.format(r1, r2, r4)     // Catch:{ Exception -> 0x006d, all -> 0x0069 }
            java.lang.Object[] r1 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x006d, all -> 0x0069 }
            org.telegram.SQLite.SQLiteCursor r9 = r0.queryFinalized(r9, r1)     // Catch:{ Exception -> 0x006d, all -> 0x0069 }
        L_0x0028:
            boolean r0 = r9.next()     // Catch:{ Exception -> 0x0067 }
            if (r0 == 0) goto L_0x004e
            long r0 = r9.longValue(r5)     // Catch:{ Exception -> 0x0067 }
            java.lang.Object r2 = r8.get(r0)     // Catch:{ Exception -> 0x0067 }
            java.util.ArrayList r2 = (java.util.ArrayList) r2     // Catch:{ Exception -> 0x0067 }
            if (r2 != 0) goto L_0x0042
            java.util.ArrayList r2 = new java.util.ArrayList     // Catch:{ Exception -> 0x0067 }
            r2.<init>()     // Catch:{ Exception -> 0x0067 }
            r8.put(r0, r2)     // Catch:{ Exception -> 0x0067 }
        L_0x0042:
            int r0 = r9.intValue(r3)     // Catch:{ Exception -> 0x0067 }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x0067 }
            r2.add(r0)     // Catch:{ Exception -> 0x0067 }
            goto L_0x0028
        L_0x004e:
            r9.dispose()     // Catch:{ Exception -> 0x0067 }
            int r9 = r8.size()     // Catch:{ Exception -> 0x006d, all -> 0x0069 }
        L_0x0055:
            if (r5 >= r9) goto L_0x0083
            long r0 = r8.keyAt(r5)     // Catch:{ Exception -> 0x006d, all -> 0x0069 }
            java.lang.Object r2 = r8.valueAt(r5)     // Catch:{ Exception -> 0x006d, all -> 0x0069 }
            java.util.ArrayList r2 = (java.util.ArrayList) r2     // Catch:{ Exception -> 0x006d, all -> 0x0069 }
            r6.markMessagesContentAsReadInternal(r0, r2, r10)     // Catch:{ Exception -> 0x006d, all -> 0x0069 }
            int r5 = r5 + 1
            goto L_0x0055
        L_0x0067:
            r7 = move-exception
            goto L_0x0070
        L_0x0069:
            r8 = move-exception
            r9 = r7
            r7 = r8
            goto L_0x007a
        L_0x006d:
            r8 = move-exception
            r9 = r7
            r7 = r8
        L_0x0070:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r7)     // Catch:{ all -> 0x0079 }
            if (r9 == 0) goto L_0x0083
            r9.dispose()
            goto L_0x0083
        L_0x0079:
            r7 = move-exception
        L_0x007a:
            if (r9 == 0) goto L_0x007f
            r9.dispose()
        L_0x007f:
            throw r7
        L_0x0080:
            r6.markMessagesContentAsReadInternal(r7, r9, r10)
        L_0x0083:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$markMessagesContentAsRead$165(long, java.util.ArrayList, int):void");
    }

    public void markMessagesAsRead(LongSparseIntArray longSparseIntArray, LongSparseIntArray longSparseIntArray2, SparseIntArray sparseIntArray, boolean z) {
        if (z) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda154(this, longSparseIntArray, longSparseIntArray2, sparseIntArray));
        } else {
            lambda$markMessagesAsRead$166(longSparseIntArray, longSparseIntArray2, sparseIntArray);
        }
    }

    public void markMessagesAsDeletedByRandoms(ArrayList<Long> arrayList) {
        if (!arrayList.isEmpty()) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda126(this, arrayList));
        }
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:28:0x0094  */
    /* JADX WARNING: Removed duplicated region for block: B:30:0x009a  */
    /* JADX WARNING: Removed duplicated region for block: B:38:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$markMessagesAsDeletedByRandoms$168(java.util.ArrayList r16) {
        /*
            r15 = this;
            r8 = r15
            r9 = 0
            java.lang.String r0 = ","
            r1 = r16
            java.lang.String r0 = android.text.TextUtils.join(r0, r1)     // Catch:{ Exception -> 0x008e }
            org.telegram.SQLite.SQLiteDatabase r1 = r8.database     // Catch:{ Exception -> 0x008e }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x008e }
            java.lang.String r3 = "SELECT mid, uid FROM randoms_v2 WHERE random_id IN(%s)"
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x008e }
            r6 = 0
            r5[r6] = r0     // Catch:{ Exception -> 0x008e }
            java.lang.String r0 = java.lang.String.format(r2, r3, r5)     // Catch:{ Exception -> 0x008e }
            java.lang.Object[] r2 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x008e }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r0, r2)     // Catch:{ Exception -> 0x008e }
            androidx.collection.LongSparseArray r0 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x0089, all -> 0x0086 }
            r0.<init>()     // Catch:{ Exception -> 0x0089, all -> 0x0086 }
        L_0x0025:
            boolean r2 = r1.next()     // Catch:{ Exception -> 0x0089, all -> 0x0086 }
            if (r2 == 0) goto L_0x004b
            long r2 = r1.longValue(r4)     // Catch:{ Exception -> 0x0089, all -> 0x0086 }
            java.lang.Object r5 = r0.get(r2)     // Catch:{ Exception -> 0x0089, all -> 0x0086 }
            java.util.ArrayList r5 = (java.util.ArrayList) r5     // Catch:{ Exception -> 0x0089, all -> 0x0086 }
            if (r5 != 0) goto L_0x003f
            java.util.ArrayList r5 = new java.util.ArrayList     // Catch:{ Exception -> 0x0089, all -> 0x0086 }
            r5.<init>()     // Catch:{ Exception -> 0x0089, all -> 0x0086 }
            r0.put(r2, r5)     // Catch:{ Exception -> 0x0089, all -> 0x0086 }
        L_0x003f:
            int r2 = r1.intValue(r6)     // Catch:{ Exception -> 0x0089, all -> 0x0086 }
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x0089, all -> 0x0086 }
            r5.add(r2)     // Catch:{ Exception -> 0x0089, all -> 0x0086 }
            goto L_0x0025
        L_0x004b:
            r1.dispose()     // Catch:{ Exception -> 0x0089, all -> 0x0086 }
            boolean r1 = r0.isEmpty()     // Catch:{ Exception -> 0x008e }
            if (r1 != 0) goto L_0x0097
            int r10 = r0.size()     // Catch:{ Exception -> 0x008e }
            r11 = 0
        L_0x0059:
            if (r11 >= r10) goto L_0x0097
            long r12 = r0.keyAt(r11)     // Catch:{ Exception -> 0x008e }
            java.lang.Object r1 = r0.valueAt(r11)     // Catch:{ Exception -> 0x008e }
            r7 = r1
            java.util.ArrayList r7 = (java.util.ArrayList) r7     // Catch:{ Exception -> 0x008e }
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda128 r1 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda128     // Catch:{ Exception -> 0x008e }
            r1.<init>(r15, r7)     // Catch:{ Exception -> 0x008e }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r1)     // Catch:{ Exception -> 0x008e }
            r15.updateDialogsWithReadMessagesInternal(r7, r9, r9, r9)     // Catch:{ Exception -> 0x008e }
            r5 = 1
            r6 = 0
            r1 = r15
            r2 = r12
            r4 = r7
            r1.lambda$markMessagesAsDeleted$172(r2, r4, r5, r6)     // Catch:{ Exception -> 0x008e }
            r4 = 0
            r14 = 0
            r1 = r15
            r2 = r12
            r6 = r7
            r7 = r14
            r1.lambda$updateDialogsWithDeletedMessages$171(r2, r4, r6, r7)     // Catch:{ Exception -> 0x008e }
            int r11 = r11 + 1
            goto L_0x0059
        L_0x0086:
            r0 = move-exception
            r9 = r1
            goto L_0x0098
        L_0x0089:
            r0 = move-exception
            r9 = r1
            goto L_0x008f
        L_0x008c:
            r0 = move-exception
            goto L_0x0098
        L_0x008e:
            r0 = move-exception
        L_0x008f:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x008c }
            if (r9 == 0) goto L_0x0097
            r9.dispose()
        L_0x0097:
            return
        L_0x0098:
            if (r9 == 0) goto L_0x009d
            r9.dispose()
        L_0x009d:
            goto L_0x009f
        L_0x009e:
            throw r0
        L_0x009f:
            goto L_0x009e
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$markMessagesAsDeletedByRandoms$168(java.util.ArrayList):void");
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$markMessagesAsDeletedByRandoms$167(ArrayList arrayList) {
        getNotificationCenter().postNotificationName(NotificationCenter.messagesDeleted, arrayList, 0L, Boolean.FALSE);
    }

    /* access modifiers changed from: protected */
    public void deletePushMessages(long j, ArrayList<Integer> arrayList) {
        try {
            this.database.executeFast(String.format(Locale.US, "DELETE FROM unread_push_messages WHERE uid = %d AND mid IN(%s)", new Object[]{Long.valueOf(j), TextUtils.join(",", arrayList)})).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* JADX WARNING: Removed duplicated region for block: B:21:0x0041  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void broadcastScheduledMessagesChange(java.lang.Long r7) {
        /*
            r6 = this;
            r0 = 0
            org.telegram.SQLite.SQLiteDatabase r1 = r6.database     // Catch:{ Exception -> 0x0035 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x0035 }
            java.lang.String r3 = "SELECT COUNT(mid) FROM scheduled_messages_v2 WHERE uid = %d"
            r4 = 1
            java.lang.Object[] r4 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0035 }
            r5 = 0
            r4[r5] = r7     // Catch:{ Exception -> 0x0035 }
            java.lang.String r2 = java.lang.String.format(r2, r3, r4)     // Catch:{ Exception -> 0x0035 }
            java.lang.Object[] r3 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x0035 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r2, r3)     // Catch:{ Exception -> 0x0035 }
            boolean r2 = r1.next()     // Catch:{ Exception -> 0x0030, all -> 0x002d }
            if (r2 == 0) goto L_0x0021
            int r5 = r1.intValue(r5)     // Catch:{ Exception -> 0x0030, all -> 0x002d }
        L_0x0021:
            r1.dispose()     // Catch:{ Exception -> 0x0030, all -> 0x002d }
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda122 r1 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda122     // Catch:{ Exception -> 0x0035 }
            r1.<init>(r6, r7, r5)     // Catch:{ Exception -> 0x0035 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r1)     // Catch:{ Exception -> 0x0035 }
            goto L_0x003e
        L_0x002d:
            r7 = move-exception
            r0 = r1
            goto L_0x003f
        L_0x0030:
            r7 = move-exception
            r0 = r1
            goto L_0x0036
        L_0x0033:
            r7 = move-exception
            goto L_0x003f
        L_0x0035:
            r7 = move-exception
        L_0x0036:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r7)     // Catch:{ all -> 0x0033 }
            if (r0 == 0) goto L_0x003e
            r0.dispose()
        L_0x003e:
            return
        L_0x003f:
            if (r0 == 0) goto L_0x0044
            r0.dispose()
        L_0x0044:
            throw r7
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.broadcastScheduledMessagesChange(java.lang.Long):void");
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$broadcastScheduledMessagesChange$169(Long l, int i) {
        getNotificationCenter().postNotificationName(NotificationCenter.scheduledMessagesUpdated, l, Integer.valueOf(i));
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v2, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v3, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v2, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v3, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v5, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v7, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v8, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v22, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v23, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v20, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v24, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v22, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v36, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v15, resolved type: java.lang.Integer} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v21, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v27, resolved type: java.lang.Object[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v28, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v22, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v23, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v24, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v25, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v54, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v55, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v59, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v60, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v61, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v62, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v57, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v58, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v59, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v60, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v61, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v62, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v63, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v64, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v66, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v67, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v26, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v27, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v28, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v29, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX WARNING: type inference failed for: r5v21 */
    /* JADX WARNING: type inference failed for: r5v34 */
    /* JADX WARNING: type inference failed for: r18v19, types: [boolean] */
    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:13:0x0051, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:14:0x0052, code lost:
        r1 = r0;
        r11 = r3;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:15:0x0056, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:18:?, code lost:
        org.telegram.messenger.FileLog.e((java.lang.Throwable) r0);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:323:0x07c2, code lost:
        r11.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:325:0x07c7, code lost:
        r16.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:80:0x01fa, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:82:0x020a, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:83:0x020b, code lost:
        r24 = r5;
        r25 = r13;
        r15 = r22;
        r22 = r23;
        r23 = r4;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:88:0x022f, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:89:0x0230, code lost:
        r1 = r0;
        r11 = r10;
     */
    /* JADX WARNING: Failed to process nested try/catch */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:122:0x02f9 A[Catch:{ Exception -> 0x079e, all -> 0x0798 }] */
    /* JADX WARNING: Removed duplicated region for block: B:13:0x0051 A[ExcHandler: all (r0v52 'th' java.lang.Throwable A[CUSTOM_DECLARE]), Splitter:B:7:0x0035] */
    /* JADX WARNING: Removed duplicated region for block: B:148:0x0396  */
    /* JADX WARNING: Removed duplicated region for block: B:284:0x0724 A[Catch:{ Exception -> 0x078c, all -> 0x0785 }] */
    /* JADX WARNING: Removed duplicated region for block: B:290:0x0768 A[Catch:{ Exception -> 0x078c, all -> 0x0785 }] */
    /* JADX WARNING: Removed duplicated region for block: B:295:0x077c  */
    /* JADX WARNING: Removed duplicated region for block: B:297:0x0781  */
    /* JADX WARNING: Removed duplicated region for block: B:315:0x07ac  */
    /* JADX WARNING: Removed duplicated region for block: B:317:0x07b1  */
    /* JADX WARNING: Removed duplicated region for block: B:323:0x07c2  */
    /* JADX WARNING: Removed duplicated region for block: B:325:0x07c7  */
    /* JADX WARNING: Removed duplicated region for block: B:347:? A[RETURN, SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:88:0x022f A[ExcHandler: all (r0v43 'th' java.lang.Throwable A[CUSTOM_DECLARE]), Splitter:B:69:0x01b2] */
    /* JADX WARNING: Removed duplicated region for block: B:99:0x0250 A[Catch:{ Exception -> 0x079e, all -> 0x0798 }] */
    /* JADX WARNING: Unknown variable types count: 1 */
    /* renamed from: markMessagesAsDeletedInternal */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public java.util.ArrayList<java.lang.Long> lambda$markMessagesAsDeleted$172(long r33, java.util.ArrayList<java.lang.Integer> r35, boolean r36, boolean r37) {
        /*
            r32 = this;
            r7 = r32
            r8 = r33
            r10 = r35
            java.util.ArrayList r12 = new java.util.ArrayList     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            r12.<init>()     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.lang.String r13 = ","
            r14 = 2
            r15 = 1
            r6 = 0
            if (r37 == 0) goto L_0x0099
            java.lang.String r1 = android.text.TextUtils.join(r13, r10)     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.util.ArrayList r2 = new java.util.ArrayList     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            r2.<init>()     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            org.telegram.SQLite.SQLiteDatabase r3 = r7.database     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.lang.String r5 = "SELECT uid FROM scheduled_messages_v2 WHERE mid IN(%s) AND uid = %d"
            java.lang.Object[] r10 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            r10[r6] = r1     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.lang.Long r13 = java.lang.Long.valueOf(r33)     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            r10[r15] = r13     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.lang.String r4 = java.lang.String.format(r4, r5, r10)     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.lang.Object[] r5 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            org.telegram.SQLite.SQLiteCursor r3 = r3.queryFinalized(r4, r5)     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
        L_0x0035:
            boolean r4 = r3.next()     // Catch:{ Exception -> 0x0056, all -> 0x0051 }
            if (r4 == 0) goto L_0x005b
            long r4 = r3.longValue(r6)     // Catch:{ Exception -> 0x0056, all -> 0x0051 }
            java.lang.Long r10 = java.lang.Long.valueOf(r4)     // Catch:{ Exception -> 0x0056, all -> 0x0051 }
            boolean r10 = r2.contains(r10)     // Catch:{ Exception -> 0x0056, all -> 0x0051 }
            if (r10 != 0) goto L_0x0035
            java.lang.Long r4 = java.lang.Long.valueOf(r4)     // Catch:{ Exception -> 0x0056, all -> 0x0051 }
            r2.add(r4)     // Catch:{ Exception -> 0x0056, all -> 0x0051 }
            goto L_0x0035
        L_0x0051:
            r0 = move-exception
            r1 = r0
            r11 = r3
            goto L_0x079b
        L_0x0056:
            r0 = move-exception
            r4 = r0
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r4)     // Catch:{ Exception -> 0x0094, all -> 0x0051 }
        L_0x005b:
            r3.dispose()     // Catch:{ Exception -> 0x0094, all -> 0x0051 }
            org.telegram.SQLite.SQLiteDatabase r3 = r7.database     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.lang.String r5 = "DELETE FROM scheduled_messages_v2 WHERE mid IN(%s) AND uid = %d"
            java.lang.Object[] r10 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            r10[r6] = r1     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.lang.Long r1 = java.lang.Long.valueOf(r33)     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            r10[r15] = r1     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.lang.String r1 = java.lang.String.format(r4, r5, r10)     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r3.executeFast(r1)     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            r1.dispose()     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            int r1 = r2.size()     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
        L_0x0081:
            if (r6 >= r1) goto L_0x008f
            java.lang.Object r3 = r2.get(r6)     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.lang.Long r3 = (java.lang.Long) r3     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            r7.broadcastScheduledMessagesChange(r3)     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            int r6 = r6 + 1
            goto L_0x0081
        L_0x008f:
            r1 = r12
            r2 = 0
            r11 = 0
            goto L_0x0775
        L_0x0094:
            r0 = move-exception
            r2 = r0
        L_0x0096:
            r1 = 0
            goto L_0x07a2
        L_0x0099:
            java.util.ArrayList r5 = new java.util.ArrayList     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            r5.<init>(r10)     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            androidx.collection.LongSparseArray r4 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            r4.<init>()     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            androidx.collection.LongSparseArray r3 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            r3.<init>()     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.lang.String r2 = android.text.TextUtils.join(r13, r10)     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.util.ArrayList r1 = new java.util.ArrayList     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            r1.<init>()     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.util.ArrayList r11 = new java.util.ArrayList     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            r11.<init>()     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.util.ArrayList r15 = new java.util.ArrayList     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            r15.<init>()     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            org.telegram.messenger.UserConfig r18 = r32.getUserConfig()     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            long r18 = r18.getClientUserId()     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            r37 = r15
            r14 = 0
            int r20 = (r8 > r14 ? 1 : (r8 == r14 ? 0 : -1))
            if (r20 == 0) goto L_0x00ee
            org.telegram.SQLite.SQLiteDatabase r14 = r7.database     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.util.Locale r15 = java.util.Locale.US     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.lang.String r6 = "SELECT uid, data, read_state, out, mention, mid FROM messages_v2 WHERE mid IN(%s) AND uid = %d"
            r22 = r1
            r1 = 2
            java.lang.Object[] r10 = new java.lang.Object[r1]     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            r1 = 0
            r10[r1] = r2     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.lang.Long r21 = java.lang.Long.valueOf(r33)     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            r17 = 1
            r10[r17] = r21     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.lang.String r6 = java.lang.String.format(r15, r6, r10)     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.lang.Object[] r10 = new java.lang.Object[r1]     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            org.telegram.SQLite.SQLiteCursor r1 = r14.queryFinalized(r6, r10)     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            r10 = r1
            r14 = 0
            goto L_0x0107
        L_0x00ee:
            r22 = r1
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.util.Locale r6 = java.util.Locale.US     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.lang.String r10 = "SELECT uid, data, read_state, out, mention, mid FROM messages_v2 WHERE mid IN(%s) AND is_channel = 0"
            r14 = 1
            java.lang.Object[] r15 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            r14 = 0
            r15[r14] = r2     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.lang.String r6 = java.lang.String.format(r6, r10, r15)     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.lang.Object[] r10 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r6, r10)     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            r10 = r1
        L_0x0107:
            boolean r1 = r10.next()     // Catch:{ Exception -> 0x0234, all -> 0x022f }
            if (r1 == 0) goto L_0x0223
            r6 = r2
            long r1 = r10.longValue(r14)     // Catch:{ Exception -> 0x0216, all -> 0x022f }
            r14 = 5
            int r14 = r10.intValue(r14)     // Catch:{ Exception -> 0x0216, all -> 0x022f }
            java.lang.Integer r15 = java.lang.Integer.valueOf(r14)     // Catch:{ Exception -> 0x0216, all -> 0x022f }
            r5.remove(r15)     // Catch:{ Exception -> 0x0216, all -> 0x022f }
            java.lang.Object r15 = r3.get(r1)     // Catch:{ Exception -> 0x0216, all -> 0x022f }
            java.util.ArrayList r15 = (java.util.ArrayList) r15     // Catch:{ Exception -> 0x0216, all -> 0x022f }
            if (r15 != 0) goto L_0x013e
            java.util.ArrayList r15 = new java.util.ArrayList     // Catch:{ Exception -> 0x012f, all -> 0x022f }
            r15.<init>()     // Catch:{ Exception -> 0x012f, all -> 0x022f }
            r3.put(r1, r15)     // Catch:{ Exception -> 0x012f, all -> 0x022f }
            goto L_0x013e
        L_0x012f:
            r0 = move-exception
            r1 = r0
            r23 = r4
            r24 = r5
            r25 = r13
            r15 = r22
            r22 = r3
        L_0x013b:
            r13 = r6
            goto L_0x0241
        L_0x013e:
            java.lang.Integer r14 = java.lang.Integer.valueOf(r14)     // Catch:{ Exception -> 0x0216, all -> 0x022f }
            r15.add(r14)     // Catch:{ Exception -> 0x0216, all -> 0x022f }
            int r14 = (r1 > r18 ? 1 : (r1 == r18 ? 0 : -1))
            if (r14 == 0) goto L_0x01b0
            r14 = 2
            int r15 = r10.intValue(r14)     // Catch:{ Exception -> 0x012f, all -> 0x022f }
            r14 = 3
            int r23 = r10.intValue(r14)     // Catch:{ Exception -> 0x012f, all -> 0x022f }
            if (r23 != 0) goto L_0x01b0
            java.lang.Object r14 = r4.get(r1)     // Catch:{ Exception -> 0x012f, all -> 0x022f }
            java.lang.Integer[] r14 = (java.lang.Integer[]) r14     // Catch:{ Exception -> 0x012f, all -> 0x022f }
            if (r14 != 0) goto L_0x0181
            r23 = r3
            r3 = 2
            java.lang.Integer[] r14 = new java.lang.Integer[r3]     // Catch:{ Exception -> 0x0174, all -> 0x022f }
            r3 = 0
            java.lang.Integer r21 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x0174, all -> 0x022f }
            r14[r3] = r21     // Catch:{ Exception -> 0x0174, all -> 0x022f }
            java.lang.Integer r24 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x0174, all -> 0x022f }
            r3 = 1
            r14[r3] = r24     // Catch:{ Exception -> 0x0174, all -> 0x022f }
            r4.put(r1, r14)     // Catch:{ Exception -> 0x0174, all -> 0x022f }
            goto L_0x0183
        L_0x0174:
            r0 = move-exception
            r1 = r0
            r24 = r5
            r25 = r13
            r15 = r22
            r22 = r23
            r23 = r4
            goto L_0x013b
        L_0x0181:
            r23 = r3
        L_0x0183:
            r3 = 2
            if (r15 >= r3) goto L_0x0197
            r3 = 1
            r17 = r14[r3]     // Catch:{ Exception -> 0x0174, all -> 0x022f }
            r17 = r14[r3]     // Catch:{ Exception -> 0x0174, all -> 0x022f }
            int r17 = r17.intValue()     // Catch:{ Exception -> 0x0174, all -> 0x022f }
            int r17 = r17 + 1
            java.lang.Integer r17 = java.lang.Integer.valueOf(r17)     // Catch:{ Exception -> 0x0174, all -> 0x022f }
            r14[r3] = r17     // Catch:{ Exception -> 0x0174, all -> 0x022f }
        L_0x0197:
            if (r15 == 0) goto L_0x019c
            r3 = 2
            if (r15 != r3) goto L_0x01b2
        L_0x019c:
            r3 = 0
            r15 = r14[r3]     // Catch:{ Exception -> 0x0174, all -> 0x022f }
            r15 = r14[r3]     // Catch:{ Exception -> 0x0174, all -> 0x022f }
            int r15 = r15.intValue()     // Catch:{ Exception -> 0x0174, all -> 0x022f }
            r17 = 1
            int r15 = r15 + 1
            java.lang.Integer r15 = java.lang.Integer.valueOf(r15)     // Catch:{ Exception -> 0x0174, all -> 0x022f }
            r14[r3] = r15     // Catch:{ Exception -> 0x0174, all -> 0x022f }
            goto L_0x01b2
        L_0x01b0:
            r23 = r3
        L_0x01b2:
            boolean r1 = org.telegram.messenger.DialogObject.isEncryptedDialog(r1)     // Catch:{ Exception -> 0x020a, all -> 0x022f }
            if (r1 != 0) goto L_0x01c6
            if (r36 != 0) goto L_0x01c6
        L_0x01ba:
            r24 = r5
            r25 = r13
            r15 = r22
            r22 = r23
            r23 = r4
            r13 = r6
            goto L_0x01fc
        L_0x01c6:
            r1 = 1
            org.telegram.tgnet.NativeByteBuffer r2 = r10.byteBufferValue(r1)     // Catch:{ Exception -> 0x020a, all -> 0x022f }
            if (r2 == 0) goto L_0x01ba
            r14 = 0
            int r1 = r2.readInt32(r14)     // Catch:{ Exception -> 0x020a, all -> 0x022f }
            org.telegram.tgnet.TLRPC$Message r3 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r2, r1, r14)     // Catch:{ Exception -> 0x020a, all -> 0x022f }
            org.telegram.messenger.UserConfig r1 = r32.getUserConfig()     // Catch:{ Exception -> 0x020a, all -> 0x022f }
            long r14 = r1.clientUserId     // Catch:{ Exception -> 0x020a, all -> 0x022f }
            r3.readAttachPath(r2, r14)     // Catch:{ Exception -> 0x020a, all -> 0x022f }
            r2.reuse()     // Catch:{ Exception -> 0x020a, all -> 0x022f }
            r14 = 0
            r15 = r22
            r1 = r32
            r2 = r3
            r22 = r23
            r3 = r15
            r23 = r4
            r4 = r37
            r24 = r5
            r5 = r11
            r25 = r13
            r13 = r6
            r6 = r14
            r1.addFilesToDelete(r2, r3, r4, r5, r6)     // Catch:{ Exception -> 0x01fa, all -> 0x022f }
            goto L_0x01fc
        L_0x01fa:
            r0 = move-exception
            goto L_0x0240
        L_0x01fc:
            r2 = r13
            r3 = r22
            r4 = r23
            r5 = r24
            r13 = r25
            r14 = 0
            r22 = r15
            goto L_0x0107
        L_0x020a:
            r0 = move-exception
            r24 = r5
            r25 = r13
            r15 = r22
            r22 = r23
            r23 = r4
            goto L_0x0221
        L_0x0216:
            r0 = move-exception
            r23 = r4
            r24 = r5
            r25 = r13
            r15 = r22
            r22 = r3
        L_0x0221:
            r13 = r6
            goto L_0x0240
        L_0x0223:
            r23 = r4
            r24 = r5
            r25 = r13
            r15 = r22
            r13 = r2
            r22 = r3
            goto L_0x0244
        L_0x022f:
            r0 = move-exception
            r1 = r0
            r11 = r10
            goto L_0x079b
        L_0x0234:
            r0 = move-exception
            r23 = r4
            r24 = r5
            r25 = r13
            r15 = r22
            r13 = r2
            r22 = r3
        L_0x0240:
            r1 = r0
        L_0x0241:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r1)     // Catch:{ Exception -> 0x0793, all -> 0x022f }
        L_0x0244:
            r10.dispose()     // Catch:{ Exception -> 0x0793, all -> 0x022f }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            r1.beginTransaction()     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            r1 = 2
            r6 = 0
        L_0x024e:
            if (r6 >= r1) goto L_0x02dc
            if (r6 != 0) goto L_0x0276
            r1 = 0
            int r3 = (r8 > r1 ? 1 : (r8 == r1 ? 0 : -1))
            if (r3 == 0) goto L_0x0267
            org.telegram.messenger.MessagesStorage r1 = r32.getMessagesStorage()     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            org.telegram.SQLite.SQLiteDatabase r1 = r1.getDatabase()     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.lang.String r2 = "UPDATE messages_v2 SET replydata = ? WHERE reply_to_message_id IN(?) AND uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            goto L_0x0299
        L_0x0267:
            org.telegram.messenger.MessagesStorage r1 = r32.getMessagesStorage()     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            org.telegram.SQLite.SQLiteDatabase r1 = r1.getDatabase()     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.lang.String r2 = "UPDATE messages_v2 SET replydata = ? WHERE reply_to_message_id IN(?) AND is_channel = 0"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            goto L_0x0299
        L_0x0276:
            r1 = 0
            int r3 = (r8 > r1 ? 1 : (r8 == r1 ? 0 : -1))
            if (r3 == 0) goto L_0x028b
            org.telegram.messenger.MessagesStorage r1 = r32.getMessagesStorage()     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            org.telegram.SQLite.SQLiteDatabase r1 = r1.getDatabase()     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.lang.String r2 = "UPDATE scheduled_messages_v2 SET replydata = ? WHERE reply_to_message_id IN(?) AND uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            goto L_0x0299
        L_0x028b:
            org.telegram.messenger.MessagesStorage r1 = r32.getMessagesStorage()     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            org.telegram.SQLite.SQLiteDatabase r1 = r1.getDatabase()     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.lang.String r2 = "UPDATE scheduled_messages_v2 SET replydata = ? WHERE reply_to_message_id IN(?)"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
        L_0x0299:
            org.telegram.tgnet.TLRPC$TL_messageEmpty r2 = new org.telegram.tgnet.TLRPC$TL_messageEmpty     // Catch:{ Exception -> 0x02d8, all -> 0x02d2 }
            r2.<init>()     // Catch:{ Exception -> 0x02d8, all -> 0x02d2 }
            org.telegram.tgnet.NativeByteBuffer r3 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x02d8, all -> 0x02d2 }
            int r4 = r2.getObjectSize()     // Catch:{ Exception -> 0x02d8, all -> 0x02d2 }
            r3.<init>((int) r4)     // Catch:{ Exception -> 0x02d8, all -> 0x02d2 }
            r2.serializeToStream(r3)     // Catch:{ Exception -> 0x02d8, all -> 0x02d2 }
            r1.requery()     // Catch:{ Exception -> 0x02d8, all -> 0x02d2 }
            r2 = 1
            r1.bindByteBuffer((int) r2, (org.telegram.tgnet.NativeByteBuffer) r3)     // Catch:{ Exception -> 0x02d8, all -> 0x02d2 }
            r2 = 2
            r1.bindString(r2, r13)     // Catch:{ Exception -> 0x02d8, all -> 0x02d2 }
            r4 = 0
            int r2 = (r8 > r4 ? 1 : (r8 == r4 ? 0 : -1))
            if (r2 == 0) goto L_0x02bf
            r2 = 3
            r1.bindLong(r2, r8)     // Catch:{ Exception -> 0x02d8, all -> 0x02d2 }
        L_0x02bf:
            r1.step()     // Catch:{ Exception -> 0x02d8, all -> 0x02d2 }
            r1.dispose()     // Catch:{ Exception -> 0x02d8, all -> 0x02d2 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            r1.commitTransaction()     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            r3.reuse()     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            int r6 = r6 + 1
            r1 = 2
            goto L_0x024e
        L_0x02d2:
            r0 = move-exception
            r16 = r1
            r11 = 0
            goto L_0x07ba
        L_0x02d8:
            r0 = move-exception
        L_0x02d9:
            r2 = r0
            goto L_0x07a1
        L_0x02dc:
            r1 = r37
            r2 = 1
            r7.deleteFromDownloadQueue(r1, r2)     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda132 r1 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda132     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            r1.<init>(r7, r11)     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r1)     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            org.telegram.messenger.FileLoader r1 = r32.getFileLoader()     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            r2 = 0
            r1.deleteFiles(r15, r2)     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            r6 = 0
        L_0x02f3:
            int r1 = r23.size()     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            if (r6 >= r1) goto L_0x038b
            r1 = r23
            long r2 = r1.keyAt(r6)     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.lang.Object r4 = r1.valueAt(r6)     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.lang.Integer[] r4 = (java.lang.Integer[]) r4     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            org.telegram.SQLite.SQLiteDatabase r5 = r7.database     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.lang.StringBuilder r10 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            r10.<init>()     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.lang.String r11 = "SELECT unread_count, unread_count_i FROM dialogs WHERE did = "
            r10.append(r11)     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            r10.append(r2)     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.lang.String r10 = r10.toString()     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            r11 = 0
            java.lang.Object[] r14 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r10, r14)     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            boolean r10 = r5.next()     // Catch:{ Exception -> 0x0386, all -> 0x0381 }
            if (r10 == 0) goto L_0x032f
            int r10 = r5.intValue(r11)     // Catch:{ Exception -> 0x0386, all -> 0x0381 }
            r11 = 1
            int r14 = r5.intValue(r11)     // Catch:{ Exception -> 0x0386, all -> 0x0381 }
            goto L_0x0331
        L_0x032f:
            r10 = 0
            r14 = 0
        L_0x0331:
            r5.dispose()     // Catch:{ Exception -> 0x0386, all -> 0x0381 }
            java.lang.Long r5 = java.lang.Long.valueOf(r2)     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            r12.add(r5)     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            org.telegram.SQLite.SQLiteDatabase r5 = r7.database     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            java.lang.String r11 = "UPDATE dialogs SET unread_count = ?, unread_count_i = ? WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r5 = r5.executeFast(r11)     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            r5.requery()     // Catch:{ Exception -> 0x037c, all -> 0x0375 }
            r11 = 0
            r15 = r4[r11]     // Catch:{ Exception -> 0x037c, all -> 0x0375 }
            int r15 = r15.intValue()     // Catch:{ Exception -> 0x037c, all -> 0x0375 }
            int r10 = r10 - r15
            int r10 = java.lang.Math.max(r11, r10)     // Catch:{ Exception -> 0x037c, all -> 0x0375 }
            r15 = 1
            r5.bindInteger(r15, r10)     // Catch:{ Exception -> 0x037c, all -> 0x0375 }
            r4 = r4[r15]     // Catch:{ Exception -> 0x037c, all -> 0x0375 }
            int r4 = r4.intValue()     // Catch:{ Exception -> 0x037c, all -> 0x0375 }
            int r14 = r14 - r4
            int r4 = java.lang.Math.max(r11, r14)     // Catch:{ Exception -> 0x037c, all -> 0x0375 }
            r10 = 2
            r5.bindInteger(r10, r4)     // Catch:{ Exception -> 0x037c, all -> 0x0375 }
            r4 = 3
            r5.bindLong(r4, r2)     // Catch:{ Exception -> 0x037c, all -> 0x0375 }
            r5.step()     // Catch:{ Exception -> 0x037c, all -> 0x0375 }
            r5.dispose()     // Catch:{ Exception -> 0x037c, all -> 0x0375 }
            int r6 = r6 + 1
            r23 = r1
            goto L_0x02f3
        L_0x0375:
            r0 = move-exception
            r1 = r0
            r16 = r5
        L_0x0379:
            r11 = 0
            goto L_0x07bb
        L_0x037c:
            r0 = move-exception
            r2 = r0
            r1 = r5
            goto L_0x07a1
        L_0x0381:
            r0 = move-exception
            r1 = r0
            r11 = r5
            goto L_0x079b
        L_0x0386:
            r0 = move-exception
            r2 = r0
            r3 = r5
            goto L_0x0096
        L_0x038b:
            r1 = r23
            int r2 = r22.size()     // Catch:{ Exception -> 0x079e, all -> 0x0798 }
            r3 = 0
            r4 = 0
            r6 = 0
        L_0x0394:
            if (r6 >= r2) goto L_0x06fb
            r5 = r22
            long r10 = r5.keyAt(r6)     // Catch:{ Exception -> 0x06f4, all -> 0x06ed }
            java.lang.Object r14 = r5.valueAt(r6)     // Catch:{ Exception -> 0x06f4, all -> 0x06ed }
            java.util.ArrayList r14 = (java.util.ArrayList) r14     // Catch:{ Exception -> 0x06f4, all -> 0x06ed }
            r15 = r25
            java.lang.String r14 = android.text.TextUtils.join(r15, r14)     // Catch:{ Exception -> 0x06f4, all -> 0x06ed }
            boolean r18 = org.telegram.messenger.DialogObject.isEncryptedDialog(r10)     // Catch:{ Exception -> 0x06f4, all -> 0x06ed }
            if (r18 != 0) goto L_0x0415
            boolean r18 = org.telegram.messenger.DialogObject.isChatDialog(r10)     // Catch:{ Exception -> 0x06f4, all -> 0x06ed }
            if (r18 == 0) goto L_0x03e8
            r36 = r2
            org.telegram.SQLite.SQLiteDatabase r2 = r7.database     // Catch:{ Exception -> 0x06f4, all -> 0x06ed }
            r37 = r3
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x03e5, all -> 0x03e2 }
            r18 = r4
            java.lang.String r4 = "UPDATE chat_settings_v2 SET pinned = 0 WHERE uid = %d AND pinned IN (%s)"
            r22 = r5
            r25 = r15
            r5 = 2
            java.lang.Object[] r15 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            long r8 = -r10
            java.lang.Long r5 = java.lang.Long.valueOf(r8)     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            r8 = 0
            r15[r8] = r5     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            r5 = 1
            r15[r5] = r14     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            java.lang.String r3 = java.lang.String.format(r3, r4, r15)     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r3)     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.stepThis()     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            r2.dispose()     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            goto L_0x041f
        L_0x03e2:
            r0 = move-exception
            goto L_0x06f0
        L_0x03e5:
            r0 = move-exception
            goto L_0x06f7
        L_0x03e8:
            r36 = r2
            r37 = r3
            r18 = r4
            r22 = r5
            r25 = r15
            org.telegram.SQLite.SQLiteDatabase r2 = r7.database     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            java.lang.String r4 = "UPDATE user_settings SET pinned = 0 WHERE uid = %d AND pinned IN (%s)"
            r5 = 2
            java.lang.Object[] r8 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            java.lang.Long r5 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            r9 = 0
            r8[r9] = r5     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            r5 = 1
            r8[r5] = r14     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            java.lang.String r3 = java.lang.String.format(r3, r4, r8)     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r3)     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.stepThis()     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            r2.dispose()     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            goto L_0x041f
        L_0x0415:
            r36 = r2
            r37 = r3
            r18 = r4
            r22 = r5
            r25 = r15
        L_0x041f:
            org.telegram.SQLite.SQLiteDatabase r2 = r7.database     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            java.lang.String r4 = "DELETE FROM chat_pinned_v2 WHERE uid = %d AND mid IN(%s)"
            r5 = 2
            java.lang.Object[] r8 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            java.lang.Long r5 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            r9 = 0
            r8[r9] = r5     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            r5 = 1
            r8[r5] = r14     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            java.lang.String r4 = java.lang.String.format(r3, r4, r8)     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r4)     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.stepThis()     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            r2.dispose()     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            org.telegram.SQLite.SQLiteDatabase r2 = r7.database     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            java.lang.String r4 = "SELECT changes()"
            r5 = 0
            java.lang.Object[] r8 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            org.telegram.SQLite.SQLiteCursor r2 = r2.queryFinalized(r4, r8)     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            boolean r4 = r2.next()     // Catch:{ Exception -> 0x06e6, all -> 0x06df }
            if (r4 == 0) goto L_0x0457
            int r4 = r2.intValue(r5)     // Catch:{ Exception -> 0x06e6, all -> 0x06df }
            goto L_0x0458
        L_0x0457:
            r4 = 0
        L_0x0458:
            r2.dispose()     // Catch:{ Exception -> 0x06e6, all -> 0x06df }
            if (r4 <= 0) goto L_0x04bc
            org.telegram.SQLite.SQLiteDatabase r2 = r7.database     // Catch:{ Exception -> 0x04b7, all -> 0x04b1 }
            java.lang.String r5 = "SELECT count FROM chat_pinned_count WHERE uid = %d"
            r8 = 1
            java.lang.Object[] r9 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x04b7, all -> 0x04b1 }
            java.lang.Long r8 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x04b7, all -> 0x04b1 }
            r14 = 0
            r9[r14] = r8     // Catch:{ Exception -> 0x04b7, all -> 0x04b1 }
            java.lang.String r5 = java.lang.String.format(r3, r5, r9)     // Catch:{ Exception -> 0x04b7, all -> 0x04b1 }
            java.lang.Object[] r8 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x04b7, all -> 0x04b1 }
            org.telegram.SQLite.SQLiteCursor r2 = r2.queryFinalized(r5, r8)     // Catch:{ Exception -> 0x04b7, all -> 0x04b1 }
            boolean r5 = r2.next()     // Catch:{ Exception -> 0x06e6, all -> 0x06df }
            if (r5 == 0) goto L_0x049f
            int r5 = r2.intValue(r14)     // Catch:{ Exception -> 0x06e6, all -> 0x06df }
            org.telegram.SQLite.SQLiteDatabase r8 = r7.database     // Catch:{ Exception -> 0x06e6, all -> 0x06df }
            java.lang.String r9 = "UPDATE chat_pinned_count SET count = ? WHERE uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r8 = r8.executeFast(r9)     // Catch:{ Exception -> 0x06e6, all -> 0x06df }
            r8.requery()     // Catch:{ Exception -> 0x04ac, all -> 0x04a5 }
            int r5 = r5 - r4
            r4 = 0
            int r5 = java.lang.Math.max(r4, r5)     // Catch:{ Exception -> 0x04ac, all -> 0x04a5 }
            r4 = 1
            r8.bindInteger(r4, r5)     // Catch:{ Exception -> 0x04ac, all -> 0x04a5 }
            r4 = 2
            r8.bindLong(r4, r10)     // Catch:{ Exception -> 0x04ac, all -> 0x04a5 }
            r8.step()     // Catch:{ Exception -> 0x04ac, all -> 0x04a5 }
            r8.dispose()     // Catch:{ Exception -> 0x04ac, all -> 0x04a5 }
            goto L_0x04a1
        L_0x049f:
            r8 = r37
        L_0x04a1:
            r2.dispose()     // Catch:{ Exception -> 0x04ac, all -> 0x04a5 }
            goto L_0x04be
        L_0x04a5:
            r0 = move-exception
            r1 = r0
            r11 = r2
        L_0x04a8:
            r16 = r8
            goto L_0x07bb
        L_0x04ac:
            r0 = move-exception
            r3 = r2
            r1 = r8
            goto L_0x06ea
        L_0x04b1:
            r0 = move-exception
            r16 = r37
            r1 = r0
            goto L_0x0379
        L_0x04b7:
            r0 = move-exception
            r1 = r37
            goto L_0x02d9
        L_0x04bc:
            r8 = r37
        L_0x04be:
            org.telegram.SQLite.SQLiteDatabase r2 = r7.database     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            java.lang.String r4 = "DELETE FROM messages_v2 WHERE mid IN(%s) AND uid = %d"
            r5 = 2
            java.lang.Object[] r9 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            r5 = 0
            r9[r5] = r13     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            java.lang.Long r5 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            r14 = 1
            r9[r14] = r5     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            java.lang.String r4 = java.lang.String.format(r3, r4, r9)     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r4)     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.stepThis()     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            r2.dispose()     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            org.telegram.SQLite.SQLiteDatabase r2 = r7.database     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            java.lang.String r4 = "DELETE FROM polls_v2 WHERE mid IN(%s) AND uid = %d"
            r5 = 2
            java.lang.Object[] r9 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            r5 = 0
            r9[r5] = r13     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            java.lang.Long r5 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            r14 = 1
            r9[r14] = r5     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            java.lang.String r4 = java.lang.String.format(r3, r4, r9)     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r4)     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.stepThis()     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            r2.dispose()     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            org.telegram.SQLite.SQLiteDatabase r2 = r7.database     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            java.lang.String r4 = "DELETE FROM bot_keyboard WHERE mid IN(%s) AND uid = %d"
            r5 = 2
            java.lang.Object[] r9 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            r5 = 0
            r9[r5] = r13     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            java.lang.Long r5 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            r14 = 1
            r9[r14] = r5     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            java.lang.String r4 = java.lang.String.format(r3, r4, r9)     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r4)     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.stepThis()     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            r2.dispose()     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            boolean r2 = r24.isEmpty()     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            if (r2 == 0) goto L_0x068d
            org.telegram.SQLite.SQLiteDatabase r2 = r7.database     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            java.lang.String r4 = "SELECT uid, type FROM media_v4 WHERE mid IN(%s) AND uid = %d"
            r5 = 2
            java.lang.Object[] r9 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            r5 = 0
            r9[r5] = r13     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            java.lang.Long r14 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            r15 = 1
            r9[r15] = r14     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            java.lang.String r3 = java.lang.String.format(r3, r4, r9)     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            java.lang.Object[] r4 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            org.telegram.SQLite.SQLiteCursor r3 = r2.queryFinalized(r3, r4)     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            r2 = 0
        L_0x0540:
            boolean r4 = r3.next()     // Catch:{ Exception -> 0x0688, all -> 0x0683 }
            if (r4 == 0) goto L_0x058a
            long r14 = r3.longValue(r5)     // Catch:{ Exception -> 0x0688, all -> 0x0683 }
            r4 = 1
            int r5 = r3.intValue(r4)     // Catch:{ Exception -> 0x0688, all -> 0x0683 }
            if (r2 != 0) goto L_0x0556
            android.util.SparseArray r2 = new android.util.SparseArray     // Catch:{ Exception -> 0x0688, all -> 0x0683 }
            r2.<init>()     // Catch:{ Exception -> 0x0688, all -> 0x0683 }
        L_0x0556:
            java.lang.Object r4 = r2.get(r5)     // Catch:{ Exception -> 0x0688, all -> 0x0683 }
            androidx.collection.LongSparseArray r4 = (androidx.collection.LongSparseArray) r4     // Catch:{ Exception -> 0x0688, all -> 0x0683 }
            if (r4 != 0) goto L_0x056c
            androidx.collection.LongSparseArray r4 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x0688, all -> 0x0683 }
            r4.<init>()     // Catch:{ Exception -> 0x0688, all -> 0x0683 }
            r9 = 0
            java.lang.Integer r18 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x0688, all -> 0x0683 }
            r2.put(r5, r4)     // Catch:{ Exception -> 0x0688, all -> 0x0683 }
            goto L_0x0574
        L_0x056c:
            java.lang.Object r5 = r4.get(r14)     // Catch:{ Exception -> 0x0688, all -> 0x0683 }
            r18 = r5
            java.lang.Integer r18 = (java.lang.Integer) r18     // Catch:{ Exception -> 0x0688, all -> 0x0683 }
        L_0x0574:
            if (r18 != 0) goto L_0x057b
            r5 = 0
            java.lang.Integer r18 = java.lang.Integer.valueOf(r5)     // Catch:{ Exception -> 0x0688, all -> 0x0683 }
        L_0x057b:
            int r5 = r18.intValue()     // Catch:{ Exception -> 0x0688, all -> 0x0683 }
            r9 = 1
            int r5 = r5 + r9
            java.lang.Integer r5 = java.lang.Integer.valueOf(r5)     // Catch:{ Exception -> 0x0688, all -> 0x0683 }
            r4.put(r14, r5)     // Catch:{ Exception -> 0x0688, all -> 0x0683 }
            r5 = 0
            goto L_0x0540
        L_0x058a:
            r3.dispose()     // Catch:{ Exception -> 0x0688, all -> 0x0683 }
            if (r2 == 0) goto L_0x068d
            org.telegram.SQLite.SQLiteDatabase r3 = r7.database     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            java.lang.String r4 = "REPLACE INTO media_counts_v2 VALUES(?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.executeFast(r4)     // Catch:{ Exception -> 0x06da, all -> 0x06d4 }
            int r4 = r2.size()     // Catch:{ Exception -> 0x067e, all -> 0x0678 }
            r5 = 0
            r8 = 0
        L_0x059d:
            if (r8 >= r4) goto L_0x066a
            int r9 = r2.keyAt(r8)     // Catch:{ Exception -> 0x06ce, all -> 0x06c7 }
            java.lang.Object r14 = r2.valueAt(r8)     // Catch:{ Exception -> 0x06ce, all -> 0x06c7 }
            androidx.collection.LongSparseArray r14 = (androidx.collection.LongSparseArray) r14     // Catch:{ Exception -> 0x06ce, all -> 0x06c7 }
            int r15 = r14.size()     // Catch:{ Exception -> 0x06ce, all -> 0x06c7 }
            r37 = r2
            r2 = 0
        L_0x05b0:
            if (r2 >= r15) goto L_0x0655
            r18 = r4
            r19 = r5
            long r4 = r14.keyAt(r2)     // Catch:{ Exception -> 0x064e, all -> 0x0646 }
            r23 = r15
            org.telegram.SQLite.SQLiteDatabase r15 = r7.database     // Catch:{ Exception -> 0x064e, all -> 0x0646 }
            r26 = r12
            java.util.Locale r12 = java.util.Locale.US     // Catch:{ Exception -> 0x064e, all -> 0x0646 }
            r27 = r1
            java.lang.String r1 = "SELECT count, old FROM media_counts_v2 WHERE uid = %d AND type = %d LIMIT 1"
            r28 = r6
            r29 = r10
            r6 = 2
            java.lang.Object[] r10 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x064e, all -> 0x0646 }
            java.lang.Long r6 = java.lang.Long.valueOf(r4)     // Catch:{ Exception -> 0x064e, all -> 0x0646 }
            r11 = 0
            r10[r11] = r6     // Catch:{ Exception -> 0x064e, all -> 0x0646 }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x064e, all -> 0x0646 }
            r17 = 1
            r10[r17] = r6     // Catch:{ Exception -> 0x064e, all -> 0x0646 }
            java.lang.String r1 = java.lang.String.format(r12, r1, r10)     // Catch:{ Exception -> 0x064e, all -> 0x0646 }
            java.lang.Object[] r6 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x064e, all -> 0x0646 }
            org.telegram.SQLite.SQLiteCursor r1 = r15.queryFinalized(r1, r6)     // Catch:{ Exception -> 0x064e, all -> 0x0646 }
            boolean r6 = r1.next()     // Catch:{ Exception -> 0x063d, all -> 0x0637 }
            r10 = -1
            if (r6 == 0) goto L_0x05f7
            int r6 = r1.intValue(r11)     // Catch:{ Exception -> 0x063d, all -> 0x0637 }
            r11 = 1
            int r12 = r1.intValue(r11)     // Catch:{ Exception -> 0x063d, all -> 0x0637 }
            goto L_0x05f9
        L_0x05f7:
            r6 = -1
            r12 = 0
        L_0x05f9:
            r1.dispose()     // Catch:{ Exception -> 0x063d, all -> 0x0637 }
            if (r6 == r10) goto L_0x0625
            r3.requery()     // Catch:{ Exception -> 0x063d, all -> 0x0637 }
            java.lang.Object r10 = r14.valueAt(r2)     // Catch:{ Exception -> 0x063d, all -> 0x0637 }
            java.lang.Integer r10 = (java.lang.Integer) r10     // Catch:{ Exception -> 0x063d, all -> 0x0637 }
            int r10 = r10.intValue()     // Catch:{ Exception -> 0x063d, all -> 0x0637 }
            int r6 = r6 - r10
            r10 = 0
            int r6 = java.lang.Math.max(r10, r6)     // Catch:{ Exception -> 0x063d, all -> 0x0637 }
            r10 = 1
            r3.bindLong(r10, r4)     // Catch:{ Exception -> 0x063d, all -> 0x0637 }
            r4 = 2
            r3.bindInteger(r4, r9)     // Catch:{ Exception -> 0x063d, all -> 0x0637 }
            r4 = 3
            r3.bindInteger(r4, r6)     // Catch:{ Exception -> 0x063d, all -> 0x0637 }
            r5 = 4
            r3.bindInteger(r5, r12)     // Catch:{ Exception -> 0x063d, all -> 0x0637 }
            r3.step()     // Catch:{ Exception -> 0x063d, all -> 0x0637 }
            goto L_0x0626
        L_0x0625:
            r4 = 3
        L_0x0626:
            int r2 = r2 + 1
            r5 = r1
            r4 = r18
            r15 = r23
            r12 = r26
            r1 = r27
            r6 = r28
            r10 = r29
            goto L_0x05b0
        L_0x0637:
            r0 = move-exception
            r11 = r1
            r16 = r3
            goto L_0x07ba
        L_0x063d:
            r0 = move-exception
            r2 = r0
            r31 = r3
            r3 = r1
            r1 = r31
            goto L_0x07a2
        L_0x0646:
            r0 = move-exception
            r1 = r0
            r16 = r3
            r11 = r19
            goto L_0x07bb
        L_0x064e:
            r0 = move-exception
            r2 = r0
            r1 = r3
            r3 = r19
            goto L_0x07a2
        L_0x0655:
            r27 = r1
            r18 = r4
            r19 = r5
            r28 = r6
            r29 = r10
            r26 = r12
            r4 = 3
            int r8 = r8 + 1
            r2 = r37
            r4 = r18
            goto L_0x059d
        L_0x066a:
            r27 = r1
            r28 = r6
            r29 = r10
            r26 = r12
            r4 = 3
            r3.dispose()     // Catch:{ Exception -> 0x06ce, all -> 0x06c7 }
            r3 = 0
            goto L_0x0698
        L_0x0678:
            r0 = move-exception
            r1 = r0
            r16 = r3
            goto L_0x0379
        L_0x067e:
            r0 = move-exception
            r2 = r0
            r1 = r3
            goto L_0x07a1
        L_0x0683:
            r0 = move-exception
            r1 = r0
            r11 = r3
            goto L_0x04a8
        L_0x0688:
            r0 = move-exception
            r2 = r0
            r1 = r8
            goto L_0x07a2
        L_0x068d:
            r27 = r1
            r28 = r6
            r29 = r10
            r26 = r12
            r4 = 3
            r3 = r8
            r5 = 0
        L_0x0698:
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x06ce, all -> 0x06c7 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x06ce, all -> 0x06c7 }
            java.lang.String r6 = "DELETE FROM media_v4 WHERE mid IN(%s) AND uid = %d"
            r8 = 2
            java.lang.Object[] r9 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x06ce, all -> 0x06c7 }
            r10 = 0
            r9[r10] = r13     // Catch:{ Exception -> 0x06ce, all -> 0x06c7 }
            java.lang.Long r10 = java.lang.Long.valueOf(r29)     // Catch:{ Exception -> 0x06ce, all -> 0x06c7 }
            r11 = 1
            r9[r11] = r10     // Catch:{ Exception -> 0x06ce, all -> 0x06c7 }
            java.lang.String r2 = java.lang.String.format(r2, r6, r9)     // Catch:{ Exception -> 0x06ce, all -> 0x06c7 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x06ce, all -> 0x06c7 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x06ce, all -> 0x06c7 }
            r1.dispose()     // Catch:{ Exception -> 0x06ce, all -> 0x06c7 }
            int r6 = r28 + 1
            r8 = r33
            r2 = r36
            r4 = r5
            r12 = r26
            r1 = r27
            goto L_0x0394
        L_0x06c7:
            r0 = move-exception
            r1 = r0
            r16 = r3
            r11 = r5
            goto L_0x07bb
        L_0x06ce:
            r0 = move-exception
            r2 = r0
            r1 = r3
            r3 = r5
            goto L_0x07a2
        L_0x06d4:
            r0 = move-exception
            r1 = r0
            r16 = r8
            goto L_0x0379
        L_0x06da:
            r0 = move-exception
            r2 = r0
            r1 = r8
            goto L_0x07a1
        L_0x06df:
            r0 = move-exception
            r16 = r37
            r1 = r0
            r11 = r2
            goto L_0x07bb
        L_0x06e6:
            r0 = move-exception
            r1 = r37
            r3 = r2
        L_0x06ea:
            r2 = r0
            goto L_0x07a2
        L_0x06ed:
            r0 = move-exception
            r37 = r3
        L_0x06f0:
            r18 = r4
            goto L_0x0786
        L_0x06f4:
            r0 = move-exception
            r37 = r3
        L_0x06f7:
            r18 = r4
            goto L_0x078d
        L_0x06fb:
            r27 = r1
            r37 = r3
            r18 = r4
            r26 = r12
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            java.lang.String r3 = "DELETE FROM messages_seq WHERE mid IN(%s)"
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            r4 = 0
            r5[r4] = r13     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            java.lang.String r3 = java.lang.String.format(r2, r3, r5)     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r3)     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            r1.dispose()     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            boolean r1 = r24.isEmpty()     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            if (r1 != 0) goto L_0x0757
            r3 = 0
            int r1 = (r33 > r3 ? 1 : (r33 == r3 ? 0 : -1))
            if (r1 != 0) goto L_0x073a
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            java.lang.String r2 = "UPDATE media_counts_v2 SET old = 1 WHERE 1"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            r1.dispose()     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            goto L_0x0757
        L_0x073a:
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            java.lang.String r3 = "UPDATE media_counts_v2 SET old = 1 WHERE uid = %d"
            r4 = 1
            java.lang.Object[] r4 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            java.lang.Long r5 = java.lang.Long.valueOf(r33)     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            r6 = 0
            r4[r6] = r5     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            java.lang.String r2 = java.lang.String.format(r2, r3, r4)     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            r1.dispose()     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
        L_0x0757:
            org.telegram.messenger.MediaDataController r1 = r32.getMediaDataController()     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            r2 = r35
            r3 = 0
            r1.clearBotKeyboard(r3, r2)     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            int r1 = r27.size()     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            if (r1 == 0) goto L_0x076c
            r1 = 0
            r7.resetAllUnreadCounters(r1)     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
        L_0x076c:
            r1 = r26
            r7.updateWidgets((java.util.ArrayList<java.lang.Long>) r1)     // Catch:{ Exception -> 0x078c, all -> 0x0785 }
            r2 = r37
            r11 = r18
        L_0x0775:
            org.telegram.SQLite.SQLiteDatabase r3 = r7.database
            r3.commitTransaction()
            if (r11 == 0) goto L_0x077f
            r11.dispose()
        L_0x077f:
            if (r2 == 0) goto L_0x0784
            r2.dispose()
        L_0x0784:
            return r1
        L_0x0785:
            r0 = move-exception
        L_0x0786:
            r16 = r37
            r1 = r0
            r11 = r18
            goto L_0x07bb
        L_0x078c:
            r0 = move-exception
        L_0x078d:
            r1 = r37
            r2 = r0
            r3 = r18
            goto L_0x07a2
        L_0x0793:
            r0 = move-exception
            r2 = r0
            r3 = r10
            goto L_0x0096
        L_0x0798:
            r0 = move-exception
            r1 = r0
            r11 = 0
        L_0x079b:
            r16 = 0
            goto L_0x07bb
        L_0x079e:
            r0 = move-exception
            r2 = r0
            r1 = 0
        L_0x07a1:
            r3 = 0
        L_0x07a2:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r2)     // Catch:{ all -> 0x07b6 }
            org.telegram.SQLite.SQLiteDatabase r2 = r7.database
            r2.commitTransaction()
            if (r3 == 0) goto L_0x07af
            r3.dispose()
        L_0x07af:
            if (r1 == 0) goto L_0x07b4
            r1.dispose()
        L_0x07b4:
            r1 = 0
            return r1
        L_0x07b6:
            r0 = move-exception
            r16 = r1
            r11 = r3
        L_0x07ba:
            r1 = r0
        L_0x07bb:
            org.telegram.SQLite.SQLiteDatabase r2 = r7.database
            r2.commitTransaction()
            if (r11 == 0) goto L_0x07c5
            r11.dispose()
        L_0x07c5:
            if (r16 == 0) goto L_0x07ca
            r16.dispose()
        L_0x07ca:
            goto L_0x07cc
        L_0x07cb:
            throw r1
        L_0x07cc:
            goto L_0x07cb
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$markMessagesAsDeleted$172(long, java.util.ArrayList, boolean, boolean):java.util.ArrayList");
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$markMessagesAsDeletedInternal$170(ArrayList arrayList) {
        getFileLoader().cancelLoadFiles(arrayList);
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v1, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v2, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v3, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v4, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v5, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v6, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v12, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v30, resolved type: org.telegram.tgnet.TLRPC$TL_dialog} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v46, resolved type: org.telegram.tgnet.TLRPC$TL_dialogFolder} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v27, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v28, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v35, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v36, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v37, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v38, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v39, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v57, resolved type: org.telegram.tgnet.TLRPC$TL_dialog} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v58, resolved type: org.telegram.tgnet.TLRPC$TL_dialog} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v59, resolved type: org.telegram.tgnet.TLRPC$TL_dialog} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v60, resolved type: org.telegram.tgnet.TLRPC$TL_dialog} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v40, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v41, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* access modifiers changed from: private */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:156:0x02e9  */
    /* JADX WARNING: Removed duplicated region for block: B:158:0x02ee  */
    /* JADX WARNING: Removed duplicated region for block: B:162:0x02fa  */
    /* JADX WARNING: Removed duplicated region for block: B:164:0x02ff  */
    /* JADX WARNING: Removed duplicated region for block: B:179:? A[RETURN, SYNTHETIC] */
    /* renamed from: updateDialogsWithDeletedMessagesInternal */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void lambda$updateDialogsWithDeletedMessages$171(long r21, long r23, java.util.ArrayList<java.lang.Integer> r25, java.util.ArrayList<java.lang.Long> r26) {
        /*
            r20 = this;
            r1 = r20
            r2 = r23
            r0 = r26
            java.util.ArrayList r5 = new java.util.ArrayList     // Catch:{ Exception -> 0x02dc, all -> 0x02d8 }
            r5.<init>()     // Catch:{ Exception -> 0x02dc, all -> 0x02d8 }
            boolean r6 = r25.isEmpty()     // Catch:{ Exception -> 0x02dc, all -> 0x02d8 }
            r7 = 3
            r8 = 2
            r9 = 0
            java.lang.String r11 = ","
            r12 = 1
            r13 = 0
            if (r6 != 0) goto L_0x00bc
            int r6 = (r2 > r9 ? 1 : (r2 == r9 ? 0 : -1))
            if (r6 == 0) goto L_0x0038
            long r14 = -r2
            java.lang.Long r6 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x0033, all -> 0x002e }
            r5.add(r6)     // Catch:{ Exception -> 0x0033, all -> 0x002e }
            org.telegram.SQLite.SQLiteDatabase r6 = r1.database     // Catch:{ Exception -> 0x0033, all -> 0x002e }
            java.lang.String r14 = "UPDATE dialogs SET last_mid = (SELECT mid FROM messages_v2 WHERE uid = ? AND date = (SELECT MAX(date) FROM messages_v2 WHERE uid = ?)) WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r6 = r6.executeFast(r14)     // Catch:{ Exception -> 0x0033, all -> 0x002e }
            goto L_0x0083
        L_0x002e:
            r0 = move-exception
            r2 = 0
        L_0x0030:
            r4 = 0
            goto L_0x02f3
        L_0x0033:
            r0 = move-exception
            r2 = 0
        L_0x0035:
            r4 = 0
            goto L_0x02df
        L_0x0038:
            int r6 = (r21 > r9 ? 1 : (r21 == r9 ? 0 : -1))
            if (r6 != 0) goto L_0x0074
            r6 = r25
            java.lang.String r6 = android.text.TextUtils.join(r11, r6)     // Catch:{ Exception -> 0x0033, all -> 0x002e }
            org.telegram.SQLite.SQLiteDatabase r14 = r1.database     // Catch:{ Exception -> 0x0033, all -> 0x002e }
            java.util.Locale r15 = java.util.Locale.US     // Catch:{ Exception -> 0x0033, all -> 0x002e }
            java.lang.String r4 = "SELECT did FROM dialogs WHERE last_mid IN(%s) AND flags = 0"
            java.lang.Object[] r9 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x0033, all -> 0x002e }
            r9[r13] = r6     // Catch:{ Exception -> 0x0033, all -> 0x002e }
            java.lang.String r4 = java.lang.String.format(r15, r4, r9)     // Catch:{ Exception -> 0x0033, all -> 0x002e }
            java.lang.Object[] r6 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0033, all -> 0x002e }
            org.telegram.SQLite.SQLiteCursor r4 = r14.queryFinalized(r4, r6)     // Catch:{ Exception -> 0x0033, all -> 0x002e }
        L_0x0056:
            boolean r6 = r4.next()     // Catch:{ Exception -> 0x0070, all -> 0x006c }
            if (r6 == 0) goto L_0x0068
            long r9 = r4.longValue(r13)     // Catch:{ Exception -> 0x0070, all -> 0x006c }
            java.lang.Long r6 = java.lang.Long.valueOf(r9)     // Catch:{ Exception -> 0x0070, all -> 0x006c }
            r5.add(r6)     // Catch:{ Exception -> 0x0070, all -> 0x006c }
            goto L_0x0056
        L_0x0068:
            r4.dispose()     // Catch:{ Exception -> 0x0070, all -> 0x006c }
            goto L_0x007b
        L_0x006c:
            r0 = move-exception
        L_0x006d:
            r2 = 0
            goto L_0x02f3
        L_0x0070:
            r0 = move-exception
        L_0x0071:
            r2 = 0
            goto L_0x02df
        L_0x0074:
            java.lang.Long r4 = java.lang.Long.valueOf(r21)     // Catch:{ Exception -> 0x0033, all -> 0x002e }
            r5.add(r4)     // Catch:{ Exception -> 0x0033, all -> 0x002e }
        L_0x007b:
            org.telegram.SQLite.SQLiteDatabase r4 = r1.database     // Catch:{ Exception -> 0x0033, all -> 0x002e }
            java.lang.String r6 = "UPDATE dialogs SET last_mid = (SELECT mid FROM messages_v2 WHERE uid = ? AND date = (SELECT MAX(date) FROM messages_v2 WHERE uid = ? AND date != 0)) WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r6 = r4.executeFast(r6)     // Catch:{ Exception -> 0x0033, all -> 0x002e }
        L_0x0083:
            org.telegram.SQLite.SQLiteDatabase r4 = r1.database     // Catch:{ Exception -> 0x00b8, all -> 0x00b4 }
            r4.beginTransaction()     // Catch:{ Exception -> 0x00b8, all -> 0x00b4 }
            r4 = 0
        L_0x0089:
            int r9 = r5.size()     // Catch:{ Exception -> 0x00b8, all -> 0x00b4 }
            if (r4 >= r9) goto L_0x00ab
            java.lang.Object r9 = r5.get(r4)     // Catch:{ Exception -> 0x00b8, all -> 0x00b4 }
            java.lang.Long r9 = (java.lang.Long) r9     // Catch:{ Exception -> 0x00b8, all -> 0x00b4 }
            long r9 = r9.longValue()     // Catch:{ Exception -> 0x00b8, all -> 0x00b4 }
            r6.requery()     // Catch:{ Exception -> 0x00b8, all -> 0x00b4 }
            r6.bindLong(r12, r9)     // Catch:{ Exception -> 0x00b8, all -> 0x00b4 }
            r6.bindLong(r8, r9)     // Catch:{ Exception -> 0x00b8, all -> 0x00b4 }
            r6.bindLong(r7, r9)     // Catch:{ Exception -> 0x00b8, all -> 0x00b4 }
            r6.step()     // Catch:{ Exception -> 0x00b8, all -> 0x00b4 }
            int r4 = r4 + 1
            goto L_0x0089
        L_0x00ab:
            r6.dispose()     // Catch:{ Exception -> 0x00b8, all -> 0x00b4 }
            org.telegram.SQLite.SQLiteDatabase r4 = r1.database     // Catch:{ Exception -> 0x0033, all -> 0x002e }
            r4.commitTransaction()     // Catch:{ Exception -> 0x0033, all -> 0x002e }
            goto L_0x00c4
        L_0x00b4:
            r0 = move-exception
            r2 = r6
            goto L_0x0030
        L_0x00b8:
            r0 = move-exception
            r2 = r6
            goto L_0x0035
        L_0x00bc:
            long r9 = -r2
            java.lang.Long r4 = java.lang.Long.valueOf(r9)     // Catch:{ Exception -> 0x02dc, all -> 0x02d8 }
            r5.add(r4)     // Catch:{ Exception -> 0x02dc, all -> 0x02d8 }
        L_0x00c4:
            if (r0 == 0) goto L_0x00df
            r4 = 0
        L_0x00c7:
            int r6 = r26.size()     // Catch:{ Exception -> 0x0033, all -> 0x002e }
            if (r4 >= r6) goto L_0x00df
            java.lang.Object r6 = r0.get(r4)     // Catch:{ Exception -> 0x0033, all -> 0x002e }
            java.lang.Long r6 = (java.lang.Long) r6     // Catch:{ Exception -> 0x0033, all -> 0x002e }
            boolean r9 = r5.contains(r6)     // Catch:{ Exception -> 0x0033, all -> 0x002e }
            if (r9 != 0) goto L_0x00dc
            r5.add(r6)     // Catch:{ Exception -> 0x0033, all -> 0x002e }
        L_0x00dc:
            int r4 = r4 + 1
            goto L_0x00c7
        L_0x00df:
            java.lang.String r0 = android.text.TextUtils.join(r11, r5)     // Catch:{ Exception -> 0x02dc, all -> 0x02d8 }
            org.telegram.tgnet.TLRPC$TL_messages_dialogs r4 = new org.telegram.tgnet.TLRPC$TL_messages_dialogs     // Catch:{ Exception -> 0x02dc, all -> 0x02d8 }
            r4.<init>()     // Catch:{ Exception -> 0x02dc, all -> 0x02d8 }
            java.util.ArrayList r5 = new java.util.ArrayList     // Catch:{ Exception -> 0x02dc, all -> 0x02d8 }
            r5.<init>()     // Catch:{ Exception -> 0x02dc, all -> 0x02d8 }
            java.util.ArrayList r6 = new java.util.ArrayList     // Catch:{ Exception -> 0x02dc, all -> 0x02d8 }
            r6.<init>()     // Catch:{ Exception -> 0x02dc, all -> 0x02d8 }
            java.util.ArrayList r9 = new java.util.ArrayList     // Catch:{ Exception -> 0x02dc, all -> 0x02d8 }
            r9.<init>()     // Catch:{ Exception -> 0x02dc, all -> 0x02d8 }
            java.util.ArrayList r10 = new java.util.ArrayList     // Catch:{ Exception -> 0x02dc, all -> 0x02d8 }
            r10.<init>()     // Catch:{ Exception -> 0x02dc, all -> 0x02d8 }
            org.telegram.SQLite.SQLiteDatabase r14 = r1.database     // Catch:{ Exception -> 0x02dc, all -> 0x02d8 }
            java.util.Locale r15 = java.util.Locale.US     // Catch:{ Exception -> 0x02dc, all -> 0x02d8 }
            java.lang.String r7 = "SELECT d.did, d.last_mid, d.unread_count, d.date, m.data, m.read_state, m.mid, m.send_state, m.date, d.pts, d.inbox_max, d.outbox_max, d.pinned, d.unread_count_i, d.flags, d.folder_id, d.data, d.unread_reactions FROM dialogs as d LEFT JOIN messages_v2 as m ON d.last_mid = m.mid AND d.did = m.uid WHERE d.did IN(%s)"
            java.lang.Object[] r8 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x02dc, all -> 0x02d8 }
            r8[r13] = r0     // Catch:{ Exception -> 0x02dc, all -> 0x02d8 }
            java.lang.String r0 = java.lang.String.format(r15, r7, r8)     // Catch:{ Exception -> 0x02dc, all -> 0x02d8 }
            java.lang.Object[] r7 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x02dc, all -> 0x02d8 }
            org.telegram.SQLite.SQLiteCursor r7 = r14.queryFinalized(r0, r7)     // Catch:{ Exception -> 0x02dc, all -> 0x02d8 }
        L_0x0110:
            boolean r0 = r7.next()     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            if (r0 == 0) goto L_0x027d
            long r14 = r7.longValue(r13)     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            boolean r0 = org.telegram.messenger.DialogObject.isFolderDialogId(r14)     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            if (r0 == 0) goto L_0x0159
            org.telegram.tgnet.TLRPC$TL_dialogFolder r0 = new org.telegram.tgnet.TLRPC$TL_dialogFolder     // Catch:{ Exception -> 0x0155, all -> 0x0151 }
            r0.<init>()     // Catch:{ Exception -> 0x0155, all -> 0x0151 }
            r12 = 16
            boolean r19 = r7.isNull(r12)     // Catch:{ Exception -> 0x0155, all -> 0x0151 }
            if (r19 != 0) goto L_0x015e
            org.telegram.tgnet.NativeByteBuffer r12 = r7.byteBufferValue(r12)     // Catch:{ Exception -> 0x0155, all -> 0x0151 }
            if (r12 == 0) goto L_0x0141
            int r8 = r12.readInt32(r13)     // Catch:{ Exception -> 0x0155, all -> 0x0151 }
            org.telegram.tgnet.TLRPC$TL_folder r8 = org.telegram.tgnet.TLRPC$TL_folder.TLdeserialize(r12, r8, r13)     // Catch:{ Exception -> 0x0155, all -> 0x0151 }
            r0.folder = r8     // Catch:{ Exception -> 0x0155, all -> 0x0151 }
            r12.reuse()     // Catch:{ Exception -> 0x0155, all -> 0x0151 }
            goto L_0x015e
        L_0x0141:
            org.telegram.tgnet.TLRPC$TL_folder r8 = new org.telegram.tgnet.TLRPC$TL_folder     // Catch:{ Exception -> 0x0155, all -> 0x0151 }
            r8.<init>()     // Catch:{ Exception -> 0x0155, all -> 0x0151 }
            r0.folder = r8     // Catch:{ Exception -> 0x0155, all -> 0x0151 }
            r12 = 15
            int r13 = r7.intValue(r12)     // Catch:{ Exception -> 0x0155, all -> 0x0151 }
            r8.id = r13     // Catch:{ Exception -> 0x0155, all -> 0x0151 }
            goto L_0x015e
        L_0x0151:
            r0 = move-exception
            r4 = r7
            goto L_0x006d
        L_0x0155:
            r0 = move-exception
            r4 = r7
            goto L_0x0071
        L_0x0159:
            org.telegram.tgnet.TLRPC$TL_dialog r0 = new org.telegram.tgnet.TLRPC$TL_dialog     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r0.<init>()     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
        L_0x015e:
            r0.id = r14     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r8 = 1
            int r12 = r7.intValue(r8)     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r0.top_message = r12     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r8 = 10
            int r8 = r7.intValue(r8)     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r0.read_inbox_max_id = r8     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r8 = 11
            int r8 = r7.intValue(r8)     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r0.read_outbox_max_id = r8     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r8 = 2
            int r12 = r7.intValue(r8)     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r0.unread_count = r12     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r12 = 13
            int r12 = r7.intValue(r12)     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r0.unread_mentions_count = r12     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r12 = 3
            int r13 = r7.intValue(r12)     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r0.last_message_date = r13     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r13 = 9
            int r13 = r7.intValue(r13)     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r0.pts = r13     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r16 = 0
            int r13 = (r2 > r16 ? 1 : (r2 == r16 ? 0 : -1))
            if (r13 != 0) goto L_0x019d
            r13 = 0
            goto L_0x019e
        L_0x019d:
            r13 = 1
        L_0x019e:
            r0.flags = r13     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r13 = 12
            int r13 = r7.intValue(r13)     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r0.pinnedNum = r13     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            if (r13 == 0) goto L_0x01ac
            r13 = 1
            goto L_0x01ad
        L_0x01ac:
            r13 = 0
        L_0x01ad:
            r0.pinned = r13     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r13 = 14
            int r13 = r7.intValue(r13)     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r18 = 1
            r13 = r13 & 1
            if (r13 == 0) goto L_0x01bd
            r13 = 1
            goto L_0x01be
        L_0x01bd:
            r13 = 0
        L_0x01be:
            r0.unread_mark = r13     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r13 = 15
            int r13 = r7.intValue(r13)     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r0.folder_id = r13     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r13 = 17
            int r13 = r7.intValue(r13)     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r0.unread_reactions_count = r13     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r13 = r4.dialogs     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r13.add(r0)     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r13 = 4
            org.telegram.tgnet.NativeByteBuffer r13 = r7.byteBufferValue(r13)     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            if (r13 == 0) goto L_0x021f
            r8 = 0
            int r12 = r13.readInt32(r8)     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            org.telegram.tgnet.TLRPC$Message r12 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r13, r12, r8)     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            org.telegram.messenger.UserConfig r8 = r20.getUserConfig()     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            long r2 = r8.clientUserId     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r12.readAttachPath(r13, r2)     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r13.reuse()     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r2 = 5
            int r2 = r7.intValue(r2)     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            org.telegram.messenger.MessageObject.setUnreadFlags(r12, r2)     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r2 = 6
            int r2 = r7.intValue(r2)     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r12.id = r2     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r2 = 7
            int r2 = r7.intValue(r2)     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r12.send_state = r2     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r2 = 8
            int r2 = r7.intValue(r2)     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            if (r2 == 0) goto L_0x0211
            r0.last_message_date = r2     // Catch:{ Exception -> 0x0155, all -> 0x0151 }
        L_0x0211:
            long r2 = r0.id     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r12.dialog_id = r2     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r2 = r4.messages     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r2.add(r12)     // Catch:{ Exception -> 0x02d4, all -> 0x02d0 }
            r2 = 0
            addUsersAndChatsFromMessage(r12, r6, r9, r2)     // Catch:{ Exception -> 0x02ce, all -> 0x02cc }
            goto L_0x0220
        L_0x021f:
            r2 = 0
        L_0x0220:
            boolean r3 = org.telegram.messenger.DialogObject.isEncryptedDialog(r14)     // Catch:{ Exception -> 0x02ce, all -> 0x02cc }
            if (r3 != 0) goto L_0x0230
            int r3 = r0.read_inbox_max_id     // Catch:{ Exception -> 0x02ce, all -> 0x02cc }
            int r8 = r0.top_message     // Catch:{ Exception -> 0x02ce, all -> 0x02cc }
            if (r3 <= r8) goto L_0x0230
            r3 = 0
            r0.read_inbox_max_id = r3     // Catch:{ Exception -> 0x02ce, all -> 0x02cc }
            goto L_0x0231
        L_0x0230:
            r3 = 0
        L_0x0231:
            boolean r0 = org.telegram.messenger.DialogObject.isEncryptedDialog(r14)     // Catch:{ Exception -> 0x02ce, all -> 0x02cc }
            if (r0 == 0) goto L_0x024d
            int r0 = org.telegram.messenger.DialogObject.getEncryptedChatId(r14)     // Catch:{ Exception -> 0x02ce, all -> 0x02cc }
            java.lang.Integer r8 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x02ce, all -> 0x02cc }
            boolean r8 = r10.contains(r8)     // Catch:{ Exception -> 0x02ce, all -> 0x02cc }
            if (r8 != 0) goto L_0x0277
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x02ce, all -> 0x02cc }
            r10.add(r0)     // Catch:{ Exception -> 0x02ce, all -> 0x02cc }
            goto L_0x0277
        L_0x024d:
            boolean r0 = org.telegram.messenger.DialogObject.isUserDialog(r14)     // Catch:{ Exception -> 0x02ce, all -> 0x02cc }
            if (r0 == 0) goto L_0x0265
            java.lang.Long r0 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x02ce, all -> 0x02cc }
            boolean r0 = r6.contains(r0)     // Catch:{ Exception -> 0x02ce, all -> 0x02cc }
            if (r0 != 0) goto L_0x0277
            java.lang.Long r0 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x02ce, all -> 0x02cc }
            r6.add(r0)     // Catch:{ Exception -> 0x02ce, all -> 0x02cc }
            goto L_0x0277
        L_0x0265:
            long r12 = -r14
            java.lang.Long r0 = java.lang.Long.valueOf(r12)     // Catch:{ Exception -> 0x02ce, all -> 0x02cc }
            boolean r0 = r9.contains(r0)     // Catch:{ Exception -> 0x02ce, all -> 0x02cc }
            if (r0 != 0) goto L_0x0277
            java.lang.Long r0 = java.lang.Long.valueOf(r12)     // Catch:{ Exception -> 0x02ce, all -> 0x02cc }
            r9.add(r0)     // Catch:{ Exception -> 0x02ce, all -> 0x02cc }
        L_0x0277:
            r2 = r23
            r12 = 1
            r13 = 0
            goto L_0x0110
        L_0x027d:
            r2 = 0
            r7.dispose()     // Catch:{ Exception -> 0x02ce, all -> 0x02cc }
            boolean r0 = r10.isEmpty()     // Catch:{ Exception -> 0x02ca, all -> 0x02c8 }
            if (r0 != 0) goto L_0x028e
            java.lang.String r0 = android.text.TextUtils.join(r11, r10)     // Catch:{ Exception -> 0x02ca, all -> 0x02c8 }
            r1.getEncryptedChatsInternal(r0, r5, r6)     // Catch:{ Exception -> 0x02ca, all -> 0x02c8 }
        L_0x028e:
            boolean r0 = r9.isEmpty()     // Catch:{ Exception -> 0x02ca, all -> 0x02c8 }
            if (r0 != 0) goto L_0x029d
            java.lang.String r0 = android.text.TextUtils.join(r11, r9)     // Catch:{ Exception -> 0x02ca, all -> 0x02c8 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r3 = r4.chats     // Catch:{ Exception -> 0x02ca, all -> 0x02c8 }
            r1.getChatsInternal(r0, r3)     // Catch:{ Exception -> 0x02ca, all -> 0x02c8 }
        L_0x029d:
            boolean r0 = r6.isEmpty()     // Catch:{ Exception -> 0x02ca, all -> 0x02c8 }
            if (r0 != 0) goto L_0x02ac
            java.lang.String r0 = android.text.TextUtils.join(r11, r6)     // Catch:{ Exception -> 0x02ca, all -> 0x02c8 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r3 = r4.users     // Catch:{ Exception -> 0x02ca, all -> 0x02c8 }
            r1.getUsersInternal(r0, r3)     // Catch:{ Exception -> 0x02ca, all -> 0x02c8 }
        L_0x02ac:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r0 = r4.dialogs     // Catch:{ Exception -> 0x02ca, all -> 0x02c8 }
            boolean r0 = r0.isEmpty()     // Catch:{ Exception -> 0x02ca, all -> 0x02c8 }
            if (r0 == 0) goto L_0x02ba
            boolean r0 = r5.isEmpty()     // Catch:{ Exception -> 0x02ca, all -> 0x02c8 }
            if (r0 != 0) goto L_0x02c2
        L_0x02ba:
            org.telegram.messenger.MessagesController r0 = r20.getMessagesController()     // Catch:{ Exception -> 0x02ca, all -> 0x02c8 }
            r3 = 1
            r0.processDialogsUpdate(r4, r5, r3)     // Catch:{ Exception -> 0x02ca, all -> 0x02c8 }
        L_0x02c2:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database
            r0.commitTransaction()
            goto L_0x02f1
        L_0x02c8:
            r0 = move-exception
            goto L_0x02da
        L_0x02ca:
            r0 = move-exception
            goto L_0x02de
        L_0x02cc:
            r0 = move-exception
            goto L_0x02d2
        L_0x02ce:
            r0 = move-exception
            goto L_0x02d6
        L_0x02d0:
            r0 = move-exception
            r2 = 0
        L_0x02d2:
            r4 = r7
            goto L_0x02f3
        L_0x02d4:
            r0 = move-exception
            r2 = 0
        L_0x02d6:
            r4 = r7
            goto L_0x02df
        L_0x02d8:
            r0 = move-exception
            r2 = 0
        L_0x02da:
            r4 = r2
            goto L_0x02f3
        L_0x02dc:
            r0 = move-exception
            r2 = 0
        L_0x02de:
            r4 = r2
        L_0x02df:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x02f2 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database
            r0.commitTransaction()
            if (r4 == 0) goto L_0x02ec
            r4.dispose()
        L_0x02ec:
            if (r2 == 0) goto L_0x02f1
            r2.dispose()
        L_0x02f1:
            return
        L_0x02f2:
            r0 = move-exception
        L_0x02f3:
            org.telegram.SQLite.SQLiteDatabase r3 = r1.database
            r3.commitTransaction()
            if (r4 == 0) goto L_0x02fd
            r4.dispose()
        L_0x02fd:
            if (r2 == 0) goto L_0x0302
            r2.dispose()
        L_0x0302:
            goto L_0x0304
        L_0x0303:
            throw r0
        L_0x0304:
            goto L_0x0303
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$updateDialogsWithDeletedMessages$171(long, long, java.util.ArrayList, java.util.ArrayList):void");
    }

    public void updateDialogsWithDeletedMessages(long j, long j2, ArrayList<Integer> arrayList, ArrayList<Long> arrayList2, boolean z) {
        if (z) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda88(this, j, j2, arrayList, arrayList2));
            return;
        }
        lambda$updateDialogsWithDeletedMessages$171(j, j2, arrayList, arrayList2);
    }

    public ArrayList<Long> markMessagesAsDeleted(long j, ArrayList<Integer> arrayList, boolean z, boolean z2, boolean z3) {
        if (arrayList.isEmpty()) {
            return null;
        }
        if (!z) {
            return lambda$markMessagesAsDeleted$172(j, arrayList, z2, z3);
        }
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda100(this, j, arrayList, z2, z3));
        return null;
    }

    /* JADX WARNING: type inference failed for: r7v4 */
    /* JADX WARNING: type inference failed for: r7v11 */
    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:126:0x0303, code lost:
        r8.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:128:0x0308, code lost:
        r16.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:43:0x0105, code lost:
        r0 = th;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:44:0x0106, code lost:
        r21 = r3;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:46:0x0110, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:47:0x0111, code lost:
        r21 = r3;
        r7 = true;
     */
    /* JADX WARNING: Failed to process nested try/catch */
    /* JADX WARNING: Incorrect type for immutable var: ssa=int, code=?, for r7v1, types: [boolean, int] */
    /* JADX WARNING: Removed duplicated region for block: B:120:0x02f3  */
    /* JADX WARNING: Removed duplicated region for block: B:122:0x02f8  */
    /* JADX WARNING: Removed duplicated region for block: B:126:0x0303  */
    /* JADX WARNING: Removed duplicated region for block: B:128:0x0308  */
    /* JADX WARNING: Removed duplicated region for block: B:136:? A[RETURN, SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:34:0x00cb A[Catch:{ Exception -> 0x0110, all -> 0x0105 }] */
    /* JADX WARNING: Removed duplicated region for block: B:40:0x00f4  */
    /* JADX WARNING: Removed duplicated region for block: B:46:0x0110 A[ExcHandler: Exception (e java.lang.Exception), Splitter:B:4:0x004b] */
    /* JADX WARNING: Removed duplicated region for block: B:56:0x0136 A[Catch:{ Exception -> 0x02d6, all -> 0x02d4 }] */
    /* JADX WARNING: Removed duplicated region for block: B:82:0x021b A[Catch:{ Exception -> 0x02d2, all -> 0x02cf }] */
    /* JADX WARNING: Removed duplicated region for block: B:83:0x0220 A[Catch:{ Exception -> 0x02d2, all -> 0x02cf }] */
    /* JADX WARNING: Removed duplicated region for block: B:86:0x0226 A[SYNTHETIC, Splitter:B:86:0x0226] */
    /* renamed from: markMessagesAsDeletedInternal */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public java.util.ArrayList<java.lang.Long> lambda$markMessagesAsDeleted$174(long r24, int r26, boolean r27) {
        /*
            r23 = this;
            r7 = r23
            java.util.ArrayList r9 = new java.util.ArrayList     // Catch:{ Exception -> 0x02ea, all -> 0x02e4 }
            r9.<init>()     // Catch:{ Exception -> 0x02ea, all -> 0x02e4 }
            androidx.collection.LongSparseArray r10 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x02ea, all -> 0x02e4 }
            r10.<init>()     // Catch:{ Exception -> 0x02ea, all -> 0x02e4 }
            java.util.ArrayList r11 = new java.util.ArrayList     // Catch:{ Exception -> 0x02ea, all -> 0x02e4 }
            r11.<init>()     // Catch:{ Exception -> 0x02ea, all -> 0x02e4 }
            java.util.ArrayList r12 = new java.util.ArrayList     // Catch:{ Exception -> 0x02ea, all -> 0x02e4 }
            r12.<init>()     // Catch:{ Exception -> 0x02ea, all -> 0x02e4 }
            java.util.ArrayList r13 = new java.util.ArrayList     // Catch:{ Exception -> 0x02ea, all -> 0x02e4 }
            r13.<init>()     // Catch:{ Exception -> 0x02ea, all -> 0x02e4 }
            org.telegram.messenger.UserConfig r0 = r23.getUserConfig()     // Catch:{ Exception -> 0x02ea, all -> 0x02e4 }
            long r14 = r0.getClientUserId()     // Catch:{ Exception -> 0x02ea, all -> 0x02e4 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x02ea, all -> 0x02e4 }
            java.util.Locale r1 = java.util.Locale.US     // Catch:{ Exception -> 0x02ea, all -> 0x02e4 }
            java.lang.String r2 = "SELECT uid, data, read_state, out, mention FROM messages_v2 WHERE uid = %d AND mid <= %d"
            r6 = 2
            java.lang.Object[] r3 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x02ea, all -> 0x02e4 }
            r4 = r24
            r17 = r9
            long r8 = -r4
            java.lang.Long r18 = java.lang.Long.valueOf(r8)     // Catch:{ Exception -> 0x02ea, all -> 0x02e4 }
            r6 = 0
            r3[r6] = r18     // Catch:{ Exception -> 0x02ea, all -> 0x02e4 }
            java.lang.Integer r18 = java.lang.Integer.valueOf(r26)     // Catch:{ Exception -> 0x02ea, all -> 0x02e4 }
            r6 = 1
            r3[r6] = r18     // Catch:{ Exception -> 0x02ea, all -> 0x02e4 }
            java.lang.String r1 = java.lang.String.format(r1, r2, r3)     // Catch:{ Exception -> 0x02ea, all -> 0x02e4 }
            r2 = 0
            java.lang.Object[] r3 = new java.lang.Object[r2]     // Catch:{ Exception -> 0x02ea, all -> 0x02e4 }
            org.telegram.SQLite.SQLiteCursor r3 = r0.queryFinalized(r1, r3)     // Catch:{ Exception -> 0x02ea, all -> 0x02e4 }
        L_0x004a:
            r1 = 3
            boolean r0 = r3.next()     // Catch:{ Exception -> 0x0110, all -> 0x0105 }
            if (r0 == 0) goto L_0x0101
            long r6 = r3.longValue(r2)     // Catch:{ Exception -> 0x0110, all -> 0x0105 }
            int r0 = (r6 > r14 ? 1 : (r6 == r14 ? 0 : -1))
            if (r0 == 0) goto L_0x00b6
            r2 = 2
            int r0 = r3.intValue(r2)     // Catch:{ Exception -> 0x0110, all -> 0x00ae }
            int r2 = r3.intValue(r1)     // Catch:{ Exception -> 0x0110, all -> 0x00ae }
            if (r2 != 0) goto L_0x00b6
            java.lang.Object r2 = r10.get(r6)     // Catch:{ Exception -> 0x0110, all -> 0x00ae }
            java.lang.Integer[] r2 = (java.lang.Integer[]) r2     // Catch:{ Exception -> 0x0110, all -> 0x00ae }
            if (r2 != 0) goto L_0x0080
            r1 = 2
            java.lang.Integer[] r2 = new java.lang.Integer[r1]     // Catch:{ Exception -> 0x0110, all -> 0x00ae }
            r1 = 0
            java.lang.Integer r20 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x0110, all -> 0x00ae }
            r2[r1] = r20     // Catch:{ Exception -> 0x0110, all -> 0x00ae }
            java.lang.Integer r22 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x0110, all -> 0x00ae }
            r1 = 1
            r2[r1] = r22     // Catch:{ Exception -> 0x0110, all -> 0x00ae }
            r10.put(r6, r2)     // Catch:{ Exception -> 0x0110, all -> 0x00ae }
        L_0x0080:
            r1 = 2
            if (r0 >= r1) goto L_0x0094
            r1 = 1
            r18 = r2[r1]     // Catch:{ Exception -> 0x0110, all -> 0x00ae }
            r18 = r2[r1]     // Catch:{ Exception -> 0x0110, all -> 0x00ae }
            int r18 = r18.intValue()     // Catch:{ Exception -> 0x0110, all -> 0x00ae }
            int r18 = r18 + 1
            java.lang.Integer r18 = java.lang.Integer.valueOf(r18)     // Catch:{ Exception -> 0x0110, all -> 0x00ae }
            r2[r1] = r18     // Catch:{ Exception -> 0x0110, all -> 0x00ae }
        L_0x0094:
            r1 = 2
            if (r0 == 0) goto L_0x0099
            if (r0 != r1) goto L_0x00b7
        L_0x0099:
            r19 = 0
            r0 = r2[r19]     // Catch:{ Exception -> 0x0110, all -> 0x00ae }
            r0 = r2[r19]     // Catch:{ Exception -> 0x0110, all -> 0x00ae }
            int r0 = r0.intValue()     // Catch:{ Exception -> 0x0110, all -> 0x00ae }
            r18 = 1
            int r0 = r0 + 1
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x0110, all -> 0x00ae }
            r2[r19] = r0     // Catch:{ Exception -> 0x0110, all -> 0x00ae }
            goto L_0x00b7
        L_0x00ae:
            r0 = move-exception
            r16 = 0
            r1 = r23
            r8 = r3
            goto L_0x0301
        L_0x00b6:
            r1 = 2
        L_0x00b7:
            boolean r0 = org.telegram.messenger.DialogObject.isEncryptedDialog(r6)     // Catch:{ Exception -> 0x0110, all -> 0x0105 }
            if (r0 != 0) goto L_0x00c4
            if (r27 != 0) goto L_0x00c4
            r2 = 0
            r6 = 1
            r7 = r23
            goto L_0x004a
        L_0x00c4:
            r6 = 1
            org.telegram.tgnet.NativeByteBuffer r0 = r3.byteBufferValue(r6)     // Catch:{ Exception -> 0x0110, all -> 0x0105 }
            if (r0 == 0) goto L_0x00f4
            r7 = 0
            int r2 = r0.readInt32(r7)     // Catch:{ Exception -> 0x0110, all -> 0x0105 }
            org.telegram.tgnet.TLRPC$Message r2 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r0, r2, r7)     // Catch:{ Exception -> 0x0110, all -> 0x0105 }
            org.telegram.messenger.UserConfig r1 = r23.getUserConfig()     // Catch:{ Exception -> 0x0110, all -> 0x0105 }
            long r6 = r1.clientUserId     // Catch:{ Exception -> 0x0110, all -> 0x0105 }
            r2.readAttachPath(r0, r6)     // Catch:{ Exception -> 0x0110, all -> 0x0105 }
            r0.reuse()     // Catch:{ Exception -> 0x0110, all -> 0x0105 }
            r6 = 0
            r7 = 3
            r19 = 2
            r1 = r23
            r21 = r3
            r3 = r11
            r4 = r13
            r5 = r12
            r7 = 1
            r1.addFilesToDelete(r2, r3, r4, r5, r6)     // Catch:{ Exception -> 0x00f2, all -> 0x00f0 }
            goto L_0x00f7
        L_0x00f0:
            r0 = move-exception
            goto L_0x0108
        L_0x00f2:
            r0 = move-exception
            goto L_0x0114
        L_0x00f4:
            r21 = r3
            r7 = 1
        L_0x00f7:
            r7 = r23
            r4 = r24
            r3 = r21
            r2 = 0
            r6 = 1
            goto L_0x004a
        L_0x0101:
            r21 = r3
            r7 = 1
            goto L_0x0117
        L_0x0105:
            r0 = move-exception
            r21 = r3
        L_0x0108:
            r16 = 0
            r1 = r23
            r8 = r21
            goto L_0x0301
        L_0x0110:
            r0 = move-exception
            r21 = r3
            r7 = 1
        L_0x0114:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ Exception -> 0x02de, all -> 0x02d8 }
        L_0x0117:
            r21.dispose()     // Catch:{ Exception -> 0x02de, all -> 0x02d8 }
            r1 = r23
            r1.deleteFromDownloadQueue(r13, r7)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda134 r0 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda134     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            r0.<init>(r1, r12)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            org.telegram.messenger.FileLoader r0 = r23.getFileLoader()     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            r2 = 0
            r0.deleteFiles(r11, r2)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            r6 = 0
        L_0x0130:
            int r0 = r10.size()     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            if (r6 >= r0) goto L_0x01c1
            long r2 = r10.keyAt(r6)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            java.lang.Object r0 = r10.valueAt(r6)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            java.lang.Integer[] r0 = (java.lang.Integer[]) r0     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            org.telegram.SQLite.SQLiteDatabase r4 = r1.database     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            java.lang.StringBuilder r5 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            r5.<init>()     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            java.lang.String r11 = "SELECT unread_count, unread_count_i FROM dialogs WHERE did = "
            r5.append(r11)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            r5.append(r2)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            java.lang.String r5 = r5.toString()     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            r11 = 0
            java.lang.Object[] r12 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            org.telegram.SQLite.SQLiteCursor r4 = r4.queryFinalized(r5, r12)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            boolean r5 = r4.next()     // Catch:{ Exception -> 0x01bd, all -> 0x01b9 }
            if (r5 == 0) goto L_0x0169
            int r5 = r4.intValue(r11)     // Catch:{ Exception -> 0x01bd, all -> 0x01b9 }
            int r11 = r4.intValue(r7)     // Catch:{ Exception -> 0x01bd, all -> 0x01b9 }
            goto L_0x016b
        L_0x0169:
            r5 = 0
            r11 = 0
        L_0x016b:
            r4.dispose()     // Catch:{ Exception -> 0x01bd, all -> 0x01b9 }
            java.lang.Long r4 = java.lang.Long.valueOf(r2)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            r12 = r17
            r12.add(r4)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            org.telegram.SQLite.SQLiteDatabase r4 = r1.database     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            java.lang.String r13 = "UPDATE dialogs SET unread_count = ?, unread_count_i = ? WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r4 = r4.executeFast(r13)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            r4.requery()     // Catch:{ Exception -> 0x01b5, all -> 0x01af }
            r13 = 0
            r14 = r0[r13]     // Catch:{ Exception -> 0x01b5, all -> 0x01af }
            int r14 = r14.intValue()     // Catch:{ Exception -> 0x01b5, all -> 0x01af }
            int r5 = r5 - r14
            int r5 = java.lang.Math.max(r13, r5)     // Catch:{ Exception -> 0x01b5, all -> 0x01af }
            r4.bindInteger(r7, r5)     // Catch:{ Exception -> 0x01b5, all -> 0x01af }
            r0 = r0[r7]     // Catch:{ Exception -> 0x01b5, all -> 0x01af }
            int r0 = r0.intValue()     // Catch:{ Exception -> 0x01b5, all -> 0x01af }
            int r11 = r11 - r0
            int r0 = java.lang.Math.max(r13, r11)     // Catch:{ Exception -> 0x01b5, all -> 0x01af }
            r5 = 2
            r4.bindInteger(r5, r0)     // Catch:{ Exception -> 0x01b5, all -> 0x01af }
            r11 = 3
            r4.bindLong(r11, r2)     // Catch:{ Exception -> 0x01b5, all -> 0x01af }
            r4.step()     // Catch:{ Exception -> 0x01b5, all -> 0x01af }
            r4.dispose()     // Catch:{ Exception -> 0x01b5, all -> 0x01af }
            int r6 = r6 + 1
            r17 = r12
            goto L_0x0130
        L_0x01af:
            r0 = move-exception
            r16 = r4
            r8 = 0
            goto L_0x0301
        L_0x01b5:
            r0 = move-exception
            r3 = 0
            goto L_0x02ee
        L_0x01b9:
            r0 = move-exception
            r8 = r4
            goto L_0x02e7
        L_0x01bd:
            r0 = move-exception
            r3 = r4
            goto L_0x02ed
        L_0x01c1:
            r12 = r17
            r5 = 2
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            java.lang.String r3 = "UPDATE chat_settings_v2 SET pinned = 0 WHERE uid = %d AND pinned <= %d"
            java.lang.Object[] r4 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            java.lang.Long r6 = java.lang.Long.valueOf(r24)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            r10 = 0
            r4[r10] = r6     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r26)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            r4[r7] = r6     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            java.lang.String r3 = java.lang.String.format(r2, r3, r4)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r3)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            r0.dispose()     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            java.lang.String r3 = "DELETE FROM chat_pinned_v2 WHERE uid = %d AND mid <= %d"
            java.lang.Object[] r4 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            java.lang.Long r6 = java.lang.Long.valueOf(r24)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            r10 = 0
            r4[r10] = r6     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r26)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            r4[r7] = r6     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            java.lang.String r3 = java.lang.String.format(r2, r3, r4)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r3)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            r0.dispose()     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            java.lang.String r3 = "SELECT changes()"
            r4 = 0
            java.lang.Object[] r6 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            org.telegram.SQLite.SQLiteCursor r3 = r0.queryFinalized(r3, r6)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            boolean r0 = r3.next()     // Catch:{ Exception -> 0x02d2, all -> 0x02cf }
            if (r0 == 0) goto L_0x0220
            int r6 = r3.intValue(r4)     // Catch:{ Exception -> 0x02d2, all -> 0x02cf }
            goto L_0x0221
        L_0x0220:
            r6 = 0
        L_0x0221:
            r3.dispose()     // Catch:{ Exception -> 0x02d2, all -> 0x02cf }
            if (r6 <= 0) goto L_0x026b
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            java.lang.String r3 = "SELECT count FROM chat_pinned_count WHERE uid = %d"
            java.lang.Object[] r4 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            java.lang.Long r10 = java.lang.Long.valueOf(r8)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            r11 = 0
            r4[r11] = r10     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            java.lang.String r3 = java.lang.String.format(r2, r3, r4)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            java.lang.Object[] r4 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            org.telegram.SQLite.SQLiteCursor r3 = r0.queryFinalized(r3, r4)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            boolean r0 = r3.next()     // Catch:{ Exception -> 0x02d2, all -> 0x02cf }
            if (r0 == 0) goto L_0x0268
            int r0 = r3.intValue(r11)     // Catch:{ Exception -> 0x02d2, all -> 0x02cf }
            org.telegram.SQLite.SQLiteDatabase r4 = r1.database     // Catch:{ Exception -> 0x02d2, all -> 0x02cf }
            java.lang.String r10 = "UPDATE chat_pinned_count SET count = ? WHERE uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r4 = r4.executeFast(r10)     // Catch:{ Exception -> 0x02d2, all -> 0x02cf }
            r4.requery()     // Catch:{ Exception -> 0x0265 }
            int r0 = r0 - r6
            r6 = 0
            int r0 = java.lang.Math.max(r6, r0)     // Catch:{ Exception -> 0x0265 }
            r4.bindInteger(r7, r0)     // Catch:{ Exception -> 0x0265 }
            r4.bindLong(r5, r8)     // Catch:{ Exception -> 0x0265 }
            r4.step()     // Catch:{ Exception -> 0x0265 }
            r4.dispose()     // Catch:{ Exception -> 0x0265 }
            goto L_0x0268
        L_0x0265:
            r0 = move-exception
            goto L_0x02ee
        L_0x0268:
            r3.dispose()     // Catch:{ Exception -> 0x02d2, all -> 0x02cf }
        L_0x026b:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            java.lang.String r3 = "DELETE FROM messages_v2 WHERE uid = %d AND mid <= %d"
            java.lang.Object[] r4 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            java.lang.Long r6 = java.lang.Long.valueOf(r8)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            r10 = 0
            r4[r10] = r6     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r26)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            r4[r7] = r6     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            java.lang.String r3 = java.lang.String.format(r2, r3, r4)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r3)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            r0.dispose()     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            java.lang.String r3 = "DELETE FROM media_v4 WHERE uid = %d AND mid <= %d"
            java.lang.Object[] r4 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            java.lang.Long r5 = java.lang.Long.valueOf(r8)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            r6 = 0
            r4[r6] = r5     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            java.lang.Integer r5 = java.lang.Integer.valueOf(r26)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            r4[r7] = r5     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            java.lang.String r3 = java.lang.String.format(r2, r3, r4)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r3)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            r0.dispose()     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            java.lang.String r3 = "UPDATE media_counts_v2 SET old = 1 WHERE uid = %d"
            java.lang.Object[] r4 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            java.lang.Long r5 = java.lang.Long.valueOf(r8)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            r6 = 0
            r4[r6] = r5     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            java.lang.String r2 = java.lang.String.format(r2, r3, r4)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            r0.dispose()     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            r1.updateWidgets((java.util.ArrayList<java.lang.Long>) r12)     // Catch:{ Exception -> 0x02d6, all -> 0x02d4 }
            return r12
        L_0x02cf:
            r0 = move-exception
            r8 = r3
            goto L_0x02e7
        L_0x02d2:
            r0 = move-exception
            goto L_0x02ed
        L_0x02d4:
            r0 = move-exception
            goto L_0x02e6
        L_0x02d6:
            r0 = move-exception
            goto L_0x02ec
        L_0x02d8:
            r0 = move-exception
            r1 = r23
            r8 = r21
            goto L_0x02e7
        L_0x02de:
            r0 = move-exception
            r1 = r23
            r3 = r21
            goto L_0x02ed
        L_0x02e4:
            r0 = move-exception
            r1 = r7
        L_0x02e6:
            r8 = 0
        L_0x02e7:
            r16 = 0
            goto L_0x0301
        L_0x02ea:
            r0 = move-exception
            r1 = r7
        L_0x02ec:
            r3 = 0
        L_0x02ed:
            r4 = 0
        L_0x02ee:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x02fd }
            if (r3 == 0) goto L_0x02f6
            r3.dispose()
        L_0x02f6:
            if (r4 == 0) goto L_0x02fb
            r4.dispose()
        L_0x02fb:
            r2 = 0
            return r2
        L_0x02fd:
            r0 = move-exception
            r8 = r3
            r16 = r4
        L_0x0301:
            if (r8 == 0) goto L_0x0306
            r8.dispose()
        L_0x0306:
            if (r16 == 0) goto L_0x030b
            r16.dispose()
        L_0x030b:
            goto L_0x030d
        L_0x030c:
            throw r0
        L_0x030d:
            goto L_0x030c
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$markMessagesAsDeleted$174(long, int, boolean):java.util.ArrayList");
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$markMessagesAsDeletedInternal$173(ArrayList arrayList) {
        getFileLoader().cancelLoadFiles(arrayList);
    }

    public ArrayList<Long> markMessagesAsDeleted(long j, int i, boolean z, boolean z2) {
        if (!z) {
            return lambda$markMessagesAsDeleted$174(j, i, z2);
        }
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda80(this, j, i, z2));
        return null;
    }

    private void fixUnsupportedMedia(TLRPC$Message tLRPC$Message) {
        if (tLRPC$Message != null) {
            TLRPC$MessageMedia tLRPC$MessageMedia = tLRPC$Message.media;
            if (tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaUnsupported_old) {
                if (tLRPC$MessageMedia.bytes.length == 0) {
                    tLRPC$MessageMedia.bytes = Utilities.intToBytes(144);
                }
            } else if (tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaUnsupported) {
                TLRPC$TL_messageMediaUnsupported_old tLRPC$TL_messageMediaUnsupported_old = new TLRPC$TL_messageMediaUnsupported_old();
                tLRPC$Message.media = tLRPC$TL_messageMediaUnsupported_old;
                tLRPC$TL_messageMediaUnsupported_old.bytes = Utilities.intToBytes(144);
                tLRPC$Message.flags |= 512;
            }
        }
    }

    private void doneHolesInTable(String str, long j, int i) throws Exception {
        if (i == 0) {
            SQLiteDatabase sQLiteDatabase = this.database;
            Locale locale = Locale.US;
            sQLiteDatabase.executeFast(String.format(locale, "DELETE FROM " + str + " WHERE uid = %d", new Object[]{Long.valueOf(j)})).stepThis().dispose();
        } else {
            SQLiteDatabase sQLiteDatabase2 = this.database;
            Locale locale2 = Locale.US;
            sQLiteDatabase2.executeFast(String.format(locale2, "DELETE FROM " + str + " WHERE uid = %d AND start = 0", new Object[]{Long.valueOf(j)})).stepThis().dispose();
        }
        SQLitePreparedStatement sQLitePreparedStatement = null;
        try {
            SQLiteDatabase sQLiteDatabase3 = this.database;
            sQLitePreparedStatement = sQLiteDatabase3.executeFast("REPLACE INTO " + str + " VALUES(?, ?, ?)");
            sQLitePreparedStatement.requery();
            sQLitePreparedStatement.bindLong(1, j);
            sQLitePreparedStatement.bindInteger(2, 1);
            sQLitePreparedStatement.bindInteger(3, 1);
            sQLitePreparedStatement.step();
            sQLitePreparedStatement.dispose();
        } catch (Exception e) {
            throw e;
        } catch (Throwable th) {
            if (sQLitePreparedStatement != null) {
                sQLitePreparedStatement.dispose();
            }
            throw th;
        }
    }

    public void doneHolesInMedia(long j, int i, int i2) throws Exception {
        SQLitePreparedStatement sQLitePreparedStatement = null;
        if (i2 == -1) {
            if (i == 0) {
                this.database.executeFast(String.format(Locale.US, "DELETE FROM media_holes_v2 WHERE uid = %d", new Object[]{Long.valueOf(j)})).stepThis().dispose();
            } else {
                this.database.executeFast(String.format(Locale.US, "DELETE FROM media_holes_v2 WHERE uid = %d AND start = 0", new Object[]{Long.valueOf(j)})).stepThis().dispose();
            }
            try {
                SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO media_holes_v2 VALUES(?, ?, ?, ?)");
                for (int i3 = 0; i3 < 8; i3++) {
                    executeFast.requery();
                    executeFast.bindLong(1, j);
                    executeFast.bindInteger(2, i3);
                    executeFast.bindInteger(3, 1);
                    executeFast.bindInteger(4, 1);
                    executeFast.step();
                }
                if (executeFast != null) {
                    executeFast.dispose();
                }
            } catch (Exception e) {
                throw e;
            } catch (Throwable th) {
                if (sQLitePreparedStatement != null) {
                    sQLitePreparedStatement.dispose();
                }
                throw th;
            }
        } else {
            if (i == 0) {
                this.database.executeFast(String.format(Locale.US, "DELETE FROM media_holes_v2 WHERE uid = %d AND type = %d", new Object[]{Long.valueOf(j), Integer.valueOf(i2)})).stepThis().dispose();
            } else {
                this.database.executeFast(String.format(Locale.US, "DELETE FROM media_holes_v2 WHERE uid = %d AND type = %d AND start = 0", new Object[]{Long.valueOf(j), Integer.valueOf(i2)})).stepThis().dispose();
            }
            try {
                sQLitePreparedStatement = this.database.executeFast("REPLACE INTO media_holes_v2 VALUES(?, ?, ?, ?)");
                sQLitePreparedStatement.requery();
                sQLitePreparedStatement.bindLong(1, j);
                sQLitePreparedStatement.bindInteger(2, i2);
                sQLitePreparedStatement.bindInteger(3, 1);
                sQLitePreparedStatement.bindInteger(4, 1);
                sQLitePreparedStatement.step();
                sQLitePreparedStatement.dispose();
                sQLitePreparedStatement.dispose();
            } catch (Exception e2) {
                throw e2;
            } catch (Throwable th2) {
                if (sQLitePreparedStatement != null) {
                    sQLitePreparedStatement.dispose();
                }
                throw th2;
            }
        }
    }

    private static class Hole {
        public int end;
        public int start;
        public int type;

        public Hole(int i, int i2) {
            this.start = i;
            this.end = i2;
        }

        public Hole(int i, int i2, int i3) {
            this.type = i;
            this.start = i2;
            this.end = i3;
        }
    }

    /* JADX WARNING: Code restructure failed: missing block: B:36:0x017c, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:38:?, code lost:
        org.telegram.messenger.FileLog.e((java.lang.Throwable) r0, false);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:61:0x0257, code lost:
        r0 = th;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:62:0x0258, code lost:
        r10 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:64:0x025c, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:65:0x025d, code lost:
        r10 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:66:0x025e, code lost:
        r16 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:70:0x0265, code lost:
        r10.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:72:0x026a, code lost:
        r16.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:75:0x0271, code lost:
        r10.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:77:0x0276, code lost:
        r16.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:85:?, code lost:
        return;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:87:?, code lost:
        return;
     */
    /* JADX WARNING: Failed to process nested try/catch */
    /* JADX WARNING: Removed duplicated region for block: B:61:0x0257 A[ExcHandler: all (th java.lang.Throwable), Splitter:B:2:0x0013] */
    /* JADX WARNING: Removed duplicated region for block: B:70:0x0265  */
    /* JADX WARNING: Removed duplicated region for block: B:72:0x026a  */
    /* JADX WARNING: Removed duplicated region for block: B:75:0x0271  */
    /* JADX WARNING: Removed duplicated region for block: B:77:0x0276  */
    /* JADX WARNING: Removed duplicated region for block: B:87:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void closeHolesInMedia(long r22, int r24, int r25, int r26) {
        /*
            r21 = this;
            r1 = r21
            r2 = r22
            r4 = r24
            r5 = r25
            r7 = 6
            r8 = 9
            r9 = 5
            r11 = 4
            r12 = 3
            r13 = 2
            r14 = 0
            r15 = 1
            if (r26 >= 0) goto L_0x0061
            org.telegram.SQLite.SQLiteDatabase r10 = r1.database     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.util.Locale r0 = java.util.Locale.US     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.String r6 = "SELECT type, start, end FROM media_holes_v2 WHERE uid = %d AND type >= 0 AND ((end >= %d AND end <= %d) OR (start >= %d AND start <= %d) OR (start >= %d AND end <= %d) OR (start <= %d AND end >= %d))"
            java.lang.Object[] r8 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.Long r19 = java.lang.Long.valueOf(r22)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            r8[r14] = r19     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.Integer r19 = java.lang.Integer.valueOf(r24)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            r8[r15] = r19     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.Integer r19 = java.lang.Integer.valueOf(r25)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            r8[r13] = r19     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.Integer r19 = java.lang.Integer.valueOf(r24)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            r8[r12] = r19     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.Integer r19 = java.lang.Integer.valueOf(r25)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            r8[r11] = r19     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.Integer r19 = java.lang.Integer.valueOf(r24)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            r8[r9] = r19     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.Integer r19 = java.lang.Integer.valueOf(r25)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            r8[r7] = r19     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r24)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            r18 = 7
            r8[r18] = r7     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r25)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            r17 = 8
            r8[r17] = r7     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.String r0 = java.lang.String.format(r0, r6, r8)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.Object[] r6 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            org.telegram.SQLite.SQLiteCursor r0 = r10.queryFinalized(r0, r6)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
        L_0x005f:
            r6 = r0
            goto L_0x00b8
        L_0x0061:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.util.Locale r6 = java.util.Locale.US     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.String r10 = "SELECT type, start, end FROM media_holes_v2 WHERE uid = %d AND type = %d AND ((end >= %d AND end <= %d) OR (start >= %d AND start <= %d) OR (start >= %d AND end <= %d) OR (start <= %d AND end >= %d))"
            r8 = 10
            java.lang.Object[] r8 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.Long r20 = java.lang.Long.valueOf(r22)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            r8[r14] = r20     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.Integer r20 = java.lang.Integer.valueOf(r26)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            r8[r15] = r20     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.Integer r20 = java.lang.Integer.valueOf(r24)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            r8[r13] = r20     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.Integer r20 = java.lang.Integer.valueOf(r25)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            r8[r12] = r20     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.Integer r20 = java.lang.Integer.valueOf(r24)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            r8[r11] = r20     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.Integer r20 = java.lang.Integer.valueOf(r25)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            r8[r9] = r20     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.Integer r20 = java.lang.Integer.valueOf(r24)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            r8[r7] = r20     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r25)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            r18 = 7
            r8[r18] = r7     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r24)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            r17 = 8
            r8[r17] = r7     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r25)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            r17 = 9
            r8[r17] = r7     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.String r6 = java.lang.String.format(r6, r10, r8)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.Object[] r7 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r6, r7)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            goto L_0x005f
        L_0x00b8:
            r7 = 0
        L_0x00b9:
            boolean r0 = r6.next()     // Catch:{ Exception -> 0x0252, all -> 0x024d }
            if (r0 == 0) goto L_0x00e1
            if (r7 != 0) goto L_0x00c6
            java.util.ArrayList r7 = new java.util.ArrayList     // Catch:{ Exception -> 0x0252, all -> 0x024d }
            r7.<init>()     // Catch:{ Exception -> 0x0252, all -> 0x024d }
        L_0x00c6:
            int r0 = r6.intValue(r14)     // Catch:{ Exception -> 0x0252, all -> 0x024d }
            int r8 = r6.intValue(r15)     // Catch:{ Exception -> 0x0252, all -> 0x024d }
            int r10 = r6.intValue(r13)     // Catch:{ Exception -> 0x0252, all -> 0x024d }
            if (r8 != r10) goto L_0x00d7
            if (r8 != r15) goto L_0x00d7
            goto L_0x00df
        L_0x00d7:
            org.telegram.messenger.MessagesStorage$Hole r9 = new org.telegram.messenger.MessagesStorage$Hole     // Catch:{ Exception -> 0x0252, all -> 0x024d }
            r9.<init>(r0, r8, r10)     // Catch:{ Exception -> 0x0252, all -> 0x024d }
            r7.add(r9)     // Catch:{ Exception -> 0x0252, all -> 0x024d }
        L_0x00df:
            r9 = 5
            goto L_0x00b9
        L_0x00e1:
            r6.dispose()     // Catch:{ Exception -> 0x0252, all -> 0x024d }
            if (r7 == 0) goto L_0x026d
            r6 = 0
        L_0x00e7:
            int r0 = r7.size()     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            if (r6 >= r0) goto L_0x026d
            java.lang.Object r0 = r7.get(r6)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            org.telegram.messenger.MessagesStorage$Hole r0 = (org.telegram.messenger.MessagesStorage.Hole) r0     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            int r8 = r0.end     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            int r9 = r8 + -1
            java.lang.String r10 = "DELETE FROM media_holes_v2 WHERE uid = %d AND type = %d AND start = %d AND end = %d"
            if (r5 < r9) goto L_0x0136
            int r9 = r0.start     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            int r9 = r9 + r15
            if (r4 > r9) goto L_0x0136
            org.telegram.SQLite.SQLiteDatabase r8 = r1.database     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.util.Locale r9 = java.util.Locale.US     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.Object[] r12 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.Long r19 = java.lang.Long.valueOf(r22)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            r12[r14] = r19     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            int r11 = r0.type     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r11)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            r12[r15] = r11     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            int r11 = r0.start     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r11)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            r12[r13] = r11     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            int r0 = r0.end     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            r11 = 3
            r12[r11] = r0     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.String r0 = java.lang.String.format(r9, r10, r12)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r8.executeFast(r0)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            r0.dispose()     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            goto L_0x01cd
        L_0x0136:
            int r9 = r8 + -1
            if (r5 < r9) goto L_0x0181
            if (r8 == r4) goto L_0x01cd
            org.telegram.SQLite.SQLiteDatabase r8 = r1.database     // Catch:{ Exception -> 0x017c, all -> 0x0257 }
            java.util.Locale r9 = java.util.Locale.US     // Catch:{ Exception -> 0x017c, all -> 0x0257 }
            java.lang.String r10 = "UPDATE media_holes_v2 SET end = %d WHERE uid = %d AND type = %d AND start = %d AND end = %d"
            r11 = 5
            java.lang.Object[] r12 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x017c, all -> 0x0257 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r24)     // Catch:{ Exception -> 0x017c, all -> 0x0257 }
            r12[r14] = r11     // Catch:{ Exception -> 0x017c, all -> 0x0257 }
            java.lang.Long r11 = java.lang.Long.valueOf(r22)     // Catch:{ Exception -> 0x017c, all -> 0x0257 }
            r12[r15] = r11     // Catch:{ Exception -> 0x017c, all -> 0x0257 }
            int r11 = r0.type     // Catch:{ Exception -> 0x017c, all -> 0x0257 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r11)     // Catch:{ Exception -> 0x017c, all -> 0x0257 }
            r12[r13] = r11     // Catch:{ Exception -> 0x017c, all -> 0x0257 }
            int r11 = r0.start     // Catch:{ Exception -> 0x017c, all -> 0x0257 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r11)     // Catch:{ Exception -> 0x017c, all -> 0x0257 }
            r18 = 3
            r12[r18] = r11     // Catch:{ Exception -> 0x017c, all -> 0x0257 }
            int r0 = r0.end     // Catch:{ Exception -> 0x017c, all -> 0x0257 }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x017c, all -> 0x0257 }
            r11 = 4
            r12[r11] = r0     // Catch:{ Exception -> 0x017c, all -> 0x0257 }
            java.lang.String r0 = java.lang.String.format(r9, r10, r12)     // Catch:{ Exception -> 0x017c, all -> 0x0257 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r8.executeFast(r0)     // Catch:{ Exception -> 0x017c, all -> 0x0257 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x017c, all -> 0x0257 }
            r0.dispose()     // Catch:{ Exception -> 0x017c, all -> 0x0257 }
            goto L_0x01cd
        L_0x017c:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0, (boolean) r14)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            goto L_0x01cd
        L_0x0181:
            int r8 = r0.start     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            int r9 = r8 + 1
            if (r4 > r9) goto L_0x01d0
            if (r8 == r5) goto L_0x01cd
            org.telegram.SQLite.SQLiteDatabase r8 = r1.database     // Catch:{ Exception -> 0x01c9, all -> 0x0257 }
            java.util.Locale r9 = java.util.Locale.US     // Catch:{ Exception -> 0x01c9, all -> 0x0257 }
            java.lang.String r10 = "UPDATE media_holes_v2 SET start = %d WHERE uid = %d AND type = %d AND start = %d AND end = %d"
            r11 = 5
            java.lang.Object[] r12 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x01c9, all -> 0x0257 }
            java.lang.Integer r17 = java.lang.Integer.valueOf(r25)     // Catch:{ Exception -> 0x01c9, all -> 0x0257 }
            r12[r14] = r17     // Catch:{ Exception -> 0x01c9, all -> 0x0257 }
            java.lang.Long r17 = java.lang.Long.valueOf(r22)     // Catch:{ Exception -> 0x01c9, all -> 0x0257 }
            r12[r15] = r17     // Catch:{ Exception -> 0x01c9, all -> 0x0257 }
            int r11 = r0.type     // Catch:{ Exception -> 0x01c9, all -> 0x0257 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r11)     // Catch:{ Exception -> 0x01c9, all -> 0x0257 }
            r12[r13] = r11     // Catch:{ Exception -> 0x01c9, all -> 0x0257 }
            int r11 = r0.start     // Catch:{ Exception -> 0x01c9, all -> 0x0257 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r11)     // Catch:{ Exception -> 0x01c9, all -> 0x0257 }
            r18 = 3
            r12[r18] = r11     // Catch:{ Exception -> 0x01c9, all -> 0x0257 }
            int r0 = r0.end     // Catch:{ Exception -> 0x01c9, all -> 0x0257 }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x01c9, all -> 0x0257 }
            r11 = 4
            r12[r11] = r0     // Catch:{ Exception -> 0x01c9, all -> 0x0257 }
            java.lang.String r0 = java.lang.String.format(r9, r10, r12)     // Catch:{ Exception -> 0x01c9, all -> 0x0257 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r8.executeFast(r0)     // Catch:{ Exception -> 0x01c9, all -> 0x0257 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x01c9, all -> 0x0257 }
            r0.dispose()     // Catch:{ Exception -> 0x01c9, all -> 0x0257 }
            goto L_0x01cd
        L_0x01c9:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0, (boolean) r14)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
        L_0x01cd:
            r9 = 3
            r10 = 4
            goto L_0x0241
        L_0x01d0:
            org.telegram.SQLite.SQLiteDatabase r8 = r1.database     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.util.Locale r9 = java.util.Locale.US     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            r11 = 4
            java.lang.Object[] r12 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.Long r11 = java.lang.Long.valueOf(r22)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            r12[r14] = r11     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            int r11 = r0.type     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r11)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            r12[r15] = r11     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            int r11 = r0.start     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r11)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            r12[r13] = r11     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            int r11 = r0.end     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r11)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            r18 = 3
            r12[r18] = r11     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.String r9 = java.lang.String.format(r9, r10, r12)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            org.telegram.SQLite.SQLitePreparedStatement r8 = r8.executeFast(r9)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            org.telegram.SQLite.SQLitePreparedStatement r8 = r8.stepThis()     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            r8.dispose()     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            org.telegram.SQLite.SQLiteDatabase r8 = r1.database     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            java.lang.String r9 = "REPLACE INTO media_holes_v2 VALUES(?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r8 = r8.executeFast(r9)     // Catch:{ Exception -> 0x025c, all -> 0x0257 }
            r8.requery()     // Catch:{ Exception -> 0x024a, all -> 0x0247 }
            r8.bindLong(r15, r2)     // Catch:{ Exception -> 0x024a, all -> 0x0247 }
            int r9 = r0.type     // Catch:{ Exception -> 0x024a, all -> 0x0247 }
            r8.bindInteger(r13, r9)     // Catch:{ Exception -> 0x024a, all -> 0x0247 }
            int r9 = r0.start     // Catch:{ Exception -> 0x024a, all -> 0x0247 }
            r10 = 3
            r8.bindInteger(r10, r9)     // Catch:{ Exception -> 0x024a, all -> 0x0247 }
            r9 = 4
            r8.bindInteger(r9, r4)     // Catch:{ Exception -> 0x024a, all -> 0x0247 }
            r8.step()     // Catch:{ Exception -> 0x024a, all -> 0x0247 }
            r8.requery()     // Catch:{ Exception -> 0x024a, all -> 0x0247 }
            r8.bindLong(r15, r2)     // Catch:{ Exception -> 0x024a, all -> 0x0247 }
            int r9 = r0.type     // Catch:{ Exception -> 0x024a, all -> 0x0247 }
            r8.bindInteger(r13, r9)     // Catch:{ Exception -> 0x024a, all -> 0x0247 }
            r9 = 3
            r8.bindInteger(r9, r5)     // Catch:{ Exception -> 0x024a, all -> 0x0247 }
            int r0 = r0.end     // Catch:{ Exception -> 0x024a, all -> 0x0247 }
            r10 = 4
            r8.bindInteger(r10, r0)     // Catch:{ Exception -> 0x024a, all -> 0x0247 }
            r8.step()     // Catch:{ Exception -> 0x024a, all -> 0x0247 }
            r8.dispose()     // Catch:{ Exception -> 0x024a, all -> 0x0247 }
        L_0x0241:
            int r6 = r6 + 1
            r11 = 4
            r12 = 3
            goto L_0x00e7
        L_0x0247:
            r0 = move-exception
            r10 = r8
            goto L_0x0259
        L_0x024a:
            r0 = move-exception
            r10 = r8
            goto L_0x025e
        L_0x024d:
            r0 = move-exception
            r16 = r6
            r10 = 0
            goto L_0x026f
        L_0x0252:
            r0 = move-exception
            r16 = r6
            r10 = 0
            goto L_0x0260
        L_0x0257:
            r0 = move-exception
            r10 = 0
        L_0x0259:
            r16 = 0
            goto L_0x026f
        L_0x025c:
            r0 = move-exception
            r10 = 0
        L_0x025e:
            r16 = 0
        L_0x0260:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x026e }
            if (r10 == 0) goto L_0x0268
            r10.dispose()
        L_0x0268:
            if (r16 == 0) goto L_0x026d
            r16.dispose()
        L_0x026d:
            return
        L_0x026e:
            r0 = move-exception
        L_0x026f:
            if (r10 == 0) goto L_0x0274
            r10.dispose()
        L_0x0274:
            if (r16 == 0) goto L_0x0279
            r16.dispose()
        L_0x0279:
            goto L_0x027b
        L_0x027a:
            throw r0
        L_0x027b:
            goto L_0x027a
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.closeHolesInMedia(long, int, int, int):void");
    }

    /* JADX WARNING: Code restructure failed: missing block: B:32:0x014c, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:34:?, code lost:
        org.telegram.messenger.FileLog.e((java.lang.Throwable) r0, false);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:55:0x0247, code lost:
        r0 = th;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:56:0x0248, code lost:
        r7 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:58:0x024c, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:59:0x024d, code lost:
        r7 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:60:0x024e, code lost:
        r16 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:64:0x0255, code lost:
        r7.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:66:0x025a, code lost:
        r16.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:69:0x0261, code lost:
        r7.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:71:0x0266, code lost:
        r16.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:80:?, code lost:
        return;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:82:?, code lost:
        return;
     */
    /* JADX WARNING: Failed to process nested try/catch */
    /* JADX WARNING: Removed duplicated region for block: B:55:0x0247 A[ExcHandler: all (th java.lang.Throwable), Splitter:B:1:0x000a] */
    /* JADX WARNING: Removed duplicated region for block: B:64:0x0255  */
    /* JADX WARNING: Removed duplicated region for block: B:66:0x025a  */
    /* JADX WARNING: Removed duplicated region for block: B:69:0x0261  */
    /* JADX WARNING: Removed duplicated region for block: B:71:0x0266  */
    /* JADX WARNING: Removed duplicated region for block: B:82:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void closeHolesInTable(java.lang.String r21, long r22, int r24, int r25) {
        /*
            r20 = this;
            r1 = r20
            r2 = r21
            r3 = r22
            r5 = r24
            r6 = r25
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            java.util.Locale r8 = java.util.Locale.US     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            java.lang.StringBuilder r9 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r9.<init>()     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            java.lang.String r10 = "SELECT start, end FROM "
            r9.append(r10)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r9.append(r2)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            java.lang.String r10 = " WHERE uid = %d AND ((end >= %d AND end <= %d) OR (start >= %d AND start <= %d) OR (start >= %d AND end <= %d) OR (start <= %d AND end >= %d))"
            r9.append(r10)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            java.lang.String r9 = r9.toString()     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r10 = 9
            java.lang.Object[] r10 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            java.lang.Long r11 = java.lang.Long.valueOf(r22)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r12 = 0
            r10[r12] = r11     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r24)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r13 = 1
            r10[r13] = r11     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r25)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r14 = 2
            r10[r14] = r11     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r24)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r15 = 3
            r10[r15] = r11     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r25)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r7 = 4
            r10[r7] = r11     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r11 = 5
            java.lang.Integer r17 = java.lang.Integer.valueOf(r24)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r10[r11] = r17     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r11 = 6
            java.lang.Integer r17 = java.lang.Integer.valueOf(r25)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r10[r11] = r17     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r11 = 7
            java.lang.Integer r17 = java.lang.Integer.valueOf(r24)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r10[r11] = r17     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r11 = 8
            java.lang.Integer r17 = java.lang.Integer.valueOf(r25)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r10[r11] = r17     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            java.lang.String r8 = java.lang.String.format(r8, r9, r10)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            java.lang.Object[] r9 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            org.telegram.SQLite.SQLiteCursor r8 = r0.queryFinalized(r8, r9)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r9 = 0
        L_0x0073:
            boolean r0 = r8.next()     // Catch:{ Exception -> 0x0242, all -> 0x023d }
            if (r0 == 0) goto L_0x0096
            if (r9 != 0) goto L_0x0080
            java.util.ArrayList r9 = new java.util.ArrayList     // Catch:{ Exception -> 0x0242, all -> 0x023d }
            r9.<init>()     // Catch:{ Exception -> 0x0242, all -> 0x023d }
        L_0x0080:
            int r0 = r8.intValue(r12)     // Catch:{ Exception -> 0x0242, all -> 0x023d }
            int r10 = r8.intValue(r13)     // Catch:{ Exception -> 0x0242, all -> 0x023d }
            if (r0 != r10) goto L_0x008d
            if (r0 != r13) goto L_0x008d
            goto L_0x0073
        L_0x008d:
            org.telegram.messenger.MessagesStorage$Hole r11 = new org.telegram.messenger.MessagesStorage$Hole     // Catch:{ Exception -> 0x0242, all -> 0x023d }
            r11.<init>(r0, r10)     // Catch:{ Exception -> 0x0242, all -> 0x023d }
            r9.add(r11)     // Catch:{ Exception -> 0x0242, all -> 0x023d }
            goto L_0x0073
        L_0x0096:
            r8.dispose()     // Catch:{ Exception -> 0x0242, all -> 0x023d }
            if (r9 == 0) goto L_0x025d
            r8 = 0
        L_0x009c:
            int r0 = r9.size()     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            if (r8 >= r0) goto L_0x025d
            java.lang.Object r0 = r9.get(r8)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            org.telegram.messenger.MessagesStorage$Hole r0 = (org.telegram.messenger.MessagesStorage.Hole) r0     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            int r10 = r0.end     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            int r11 = r10 + -1
            java.lang.String r7 = " WHERE uid = %d AND start = %d AND end = %d"
            java.lang.String r14 = "DELETE FROM "
            if (r6 < r11) goto L_0x00f9
            int r11 = r0.start     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            int r11 = r11 + r13
            if (r5 > r11) goto L_0x00f9
            org.telegram.SQLite.SQLiteDatabase r10 = r1.database     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            java.util.Locale r11 = java.util.Locale.US     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            java.lang.StringBuilder r13 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r13.<init>()     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r13.append(r14)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r13.append(r2)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r13.append(r7)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            java.lang.String r7 = r13.toString()     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            java.lang.Object[] r13 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            java.lang.Long r14 = java.lang.Long.valueOf(r22)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r13[r12] = r14     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            int r14 = r0.start     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            java.lang.Integer r14 = java.lang.Integer.valueOf(r14)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r19 = 1
            r13[r19] = r14     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            int r0 = r0.end     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r14 = 2
            r13[r14] = r0     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            java.lang.String r0 = java.lang.String.format(r11, r7, r13)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r10.executeFast(r0)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r0.dispose()     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            goto L_0x01a8
        L_0x00f9:
            int r11 = r10 + -1
            java.lang.String r13 = "UPDATE "
            if (r6 < r11) goto L_0x0151
            if (r10 == r5) goto L_0x01a8
            org.telegram.SQLite.SQLiteDatabase r7 = r1.database     // Catch:{ Exception -> 0x014c, all -> 0x0247 }
            java.util.Locale r10 = java.util.Locale.US     // Catch:{ Exception -> 0x014c, all -> 0x0247 }
            java.lang.StringBuilder r11 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x014c, all -> 0x0247 }
            r11.<init>()     // Catch:{ Exception -> 0x014c, all -> 0x0247 }
            r11.append(r13)     // Catch:{ Exception -> 0x014c, all -> 0x0247 }
            r11.append(r2)     // Catch:{ Exception -> 0x014c, all -> 0x0247 }
            java.lang.String r13 = " SET end = %d WHERE uid = %d AND start = %d AND end = %d"
            r11.append(r13)     // Catch:{ Exception -> 0x014c, all -> 0x0247 }
            java.lang.String r11 = r11.toString()     // Catch:{ Exception -> 0x014c, all -> 0x0247 }
            r13 = 4
            java.lang.Object[] r14 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x014c, all -> 0x0247 }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r24)     // Catch:{ Exception -> 0x014c, all -> 0x0247 }
            r14[r12] = r13     // Catch:{ Exception -> 0x014c, all -> 0x0247 }
            java.lang.Long r13 = java.lang.Long.valueOf(r22)     // Catch:{ Exception -> 0x014c, all -> 0x0247 }
            r19 = 1
            r14[r19] = r13     // Catch:{ Exception -> 0x014c, all -> 0x0247 }
            int r13 = r0.start     // Catch:{ Exception -> 0x014c, all -> 0x0247 }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r13)     // Catch:{ Exception -> 0x014c, all -> 0x0247 }
            r18 = 2
            r14[r18] = r13     // Catch:{ Exception -> 0x014c, all -> 0x0247 }
            int r0 = r0.end     // Catch:{ Exception -> 0x014c, all -> 0x0247 }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x014c, all -> 0x0247 }
            r14[r15] = r0     // Catch:{ Exception -> 0x014c, all -> 0x0247 }
            java.lang.String r0 = java.lang.String.format(r10, r11, r14)     // Catch:{ Exception -> 0x014c, all -> 0x0247 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r7.executeFast(r0)     // Catch:{ Exception -> 0x014c, all -> 0x0247 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x014c, all -> 0x0247 }
            r0.dispose()     // Catch:{ Exception -> 0x014c, all -> 0x0247 }
            goto L_0x01a8
        L_0x014c:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0, (boolean) r12)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            goto L_0x01a8
        L_0x0151:
            int r10 = r0.start     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            int r11 = r10 + 1
            if (r5 > r11) goto L_0x01ac
            if (r10 == r6) goto L_0x01a8
            org.telegram.SQLite.SQLiteDatabase r7 = r1.database     // Catch:{ Exception -> 0x01a4, all -> 0x0247 }
            java.util.Locale r10 = java.util.Locale.US     // Catch:{ Exception -> 0x01a4, all -> 0x0247 }
            java.lang.StringBuilder r11 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x01a4, all -> 0x0247 }
            r11.<init>()     // Catch:{ Exception -> 0x01a4, all -> 0x0247 }
            r11.append(r13)     // Catch:{ Exception -> 0x01a4, all -> 0x0247 }
            r11.append(r2)     // Catch:{ Exception -> 0x01a4, all -> 0x0247 }
            java.lang.String r13 = " SET start = %d WHERE uid = %d AND start = %d AND end = %d"
            r11.append(r13)     // Catch:{ Exception -> 0x01a4, all -> 0x0247 }
            java.lang.String r11 = r11.toString()     // Catch:{ Exception -> 0x01a4, all -> 0x0247 }
            r13 = 4
            java.lang.Object[] r14 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x01a4, all -> 0x0247 }
            java.lang.Integer r17 = java.lang.Integer.valueOf(r25)     // Catch:{ Exception -> 0x01a4, all -> 0x0247 }
            r14[r12] = r17     // Catch:{ Exception -> 0x01a4, all -> 0x0247 }
            java.lang.Long r17 = java.lang.Long.valueOf(r22)     // Catch:{ Exception -> 0x01a4, all -> 0x0247 }
            r19 = 1
            r14[r19] = r17     // Catch:{ Exception -> 0x01a4, all -> 0x0247 }
            int r13 = r0.start     // Catch:{ Exception -> 0x01a4, all -> 0x0247 }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r13)     // Catch:{ Exception -> 0x01a4, all -> 0x0247 }
            r18 = 2
            r14[r18] = r13     // Catch:{ Exception -> 0x01a4, all -> 0x0247 }
            int r0 = r0.end     // Catch:{ Exception -> 0x01a4, all -> 0x0247 }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x01a4, all -> 0x0247 }
            r14[r15] = r0     // Catch:{ Exception -> 0x01a4, all -> 0x0247 }
            java.lang.String r0 = java.lang.String.format(r10, r11, r14)     // Catch:{ Exception -> 0x01a4, all -> 0x0247 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r7.executeFast(r0)     // Catch:{ Exception -> 0x01a4, all -> 0x0247 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x01a4, all -> 0x0247 }
            r0.dispose()     // Catch:{ Exception -> 0x01a4, all -> 0x0247 }
            goto L_0x01a8
        L_0x01a4:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0, (boolean) r12)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
        L_0x01a8:
            r10 = 1
            r11 = 2
            goto L_0x0232
        L_0x01ac:
            org.telegram.SQLite.SQLiteDatabase r10 = r1.database     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            java.util.Locale r11 = java.util.Locale.US     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            java.lang.StringBuilder r13 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r13.<init>()     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r13.append(r14)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r13.append(r2)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r13.append(r7)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            java.lang.String r7 = r13.toString()     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            java.lang.Object[] r13 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            java.lang.Long r14 = java.lang.Long.valueOf(r22)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r13[r12] = r14     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            int r14 = r0.start     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            java.lang.Integer r14 = java.lang.Integer.valueOf(r14)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r19 = 1
            r13[r19] = r14     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            int r14 = r0.end     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            java.lang.Integer r14 = java.lang.Integer.valueOf(r14)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r18 = 2
            r13[r18] = r14     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            java.lang.String r7 = java.lang.String.format(r11, r7, r13)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r10.executeFast(r7)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.stepThis()     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r7.dispose()     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            org.telegram.SQLite.SQLiteDatabase r7 = r1.database     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            java.lang.StringBuilder r10 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r10.<init>()     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            java.lang.String r11 = "REPLACE INTO "
            r10.append(r11)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r10.append(r2)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            java.lang.String r11 = " VALUES(?, ?, ?)"
            r10.append(r11)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            java.lang.String r10 = r10.toString()     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.executeFast(r10)     // Catch:{ Exception -> 0x024c, all -> 0x0247 }
            r7.requery()     // Catch:{ Exception -> 0x023b, all -> 0x0239 }
            r10 = 1
            r7.bindLong(r10, r3)     // Catch:{ Exception -> 0x023b, all -> 0x0239 }
            int r10 = r0.start     // Catch:{ Exception -> 0x023b, all -> 0x0239 }
            r11 = 2
            r7.bindInteger(r11, r10)     // Catch:{ Exception -> 0x023b, all -> 0x0239 }
            r7.bindInteger(r15, r5)     // Catch:{ Exception -> 0x023b, all -> 0x0239 }
            r7.step()     // Catch:{ Exception -> 0x023b, all -> 0x0239 }
            r7.requery()     // Catch:{ Exception -> 0x023b, all -> 0x0239 }
            r10 = 1
            r7.bindLong(r10, r3)     // Catch:{ Exception -> 0x023b, all -> 0x0239 }
            r11 = 2
            r7.bindInteger(r11, r6)     // Catch:{ Exception -> 0x023b, all -> 0x0239 }
            int r0 = r0.end     // Catch:{ Exception -> 0x023b, all -> 0x0239 }
            r7.bindInteger(r15, r0)     // Catch:{ Exception -> 0x023b, all -> 0x0239 }
            r7.step()     // Catch:{ Exception -> 0x023b, all -> 0x0239 }
            r7.dispose()     // Catch:{ Exception -> 0x023b, all -> 0x0239 }
        L_0x0232:
            int r8 = r8 + 1
            r7 = 4
            r13 = 1
            r14 = 2
            goto L_0x009c
        L_0x0239:
            r0 = move-exception
            goto L_0x0249
        L_0x023b:
            r0 = move-exception
            goto L_0x024e
        L_0x023d:
            r0 = move-exception
            r16 = r8
            r7 = 0
            goto L_0x025f
        L_0x0242:
            r0 = move-exception
            r16 = r8
            r7 = 0
            goto L_0x0250
        L_0x0247:
            r0 = move-exception
            r7 = 0
        L_0x0249:
            r16 = 0
            goto L_0x025f
        L_0x024c:
            r0 = move-exception
            r7 = 0
        L_0x024e:
            r16 = 0
        L_0x0250:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x025e }
            if (r7 == 0) goto L_0x0258
            r7.dispose()
        L_0x0258:
            if (r16 == 0) goto L_0x025d
            r16.dispose()
        L_0x025d:
            return
        L_0x025e:
            r0 = move-exception
        L_0x025f:
            if (r7 == 0) goto L_0x0264
            r7.dispose()
        L_0x0264:
            if (r16 == 0) goto L_0x0269
            r16.dispose()
        L_0x0269:
            goto L_0x026b
        L_0x026a:
            throw r0
        L_0x026b:
            goto L_0x026a
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.closeHolesInTable(java.lang.String, long, int, int):void");
    }

    public void replaceMessageIfExists(TLRPC$Message tLRPC$Message, ArrayList<TLRPC$User> arrayList, ArrayList<TLRPC$Chat> arrayList2, boolean z) {
        if (tLRPC$Message != null) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda173(this, tLRPC$Message, z, arrayList, arrayList2));
        }
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:113:0x0202 A[SYNTHETIC, Splitter:B:113:0x0202] */
    /* JADX WARNING: Removed duplicated region for block: B:120:0x0210  */
    /* JADX WARNING: Removed duplicated region for block: B:122:0x0215  */
    /* JADX WARNING: Removed duplicated region for block: B:126:0x0221  */
    /* JADX WARNING: Removed duplicated region for block: B:128:0x0226  */
    /* JADX WARNING: Removed duplicated region for block: B:134:? A[RETURN, SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:26:0x0056 A[SYNTHETIC, Splitter:B:26:0x0056] */
    /* JADX WARNING: Removed duplicated region for block: B:35:0x0077 A[Catch:{ Exception -> 0x01ec, all -> 0x01e9 }] */
    /* JADX WARNING: Removed duplicated region for block: B:38:0x00b1 A[Catch:{ Exception -> 0x01ec, all -> 0x01e9 }] */
    /* JADX WARNING: Removed duplicated region for block: B:45:0x00cb A[Catch:{ Exception -> 0x01ec, all -> 0x01e9 }] */
    /* JADX WARNING: Removed duplicated region for block: B:46:0x00d1 A[Catch:{ Exception -> 0x01ec, all -> 0x01e9 }] */
    /* JADX WARNING: Removed duplicated region for block: B:49:0x00dc A[Catch:{ Exception -> 0x01ec, all -> 0x01e9 }] */
    /* JADX WARNING: Removed duplicated region for block: B:50:0x00de A[Catch:{ Exception -> 0x01ec, all -> 0x01e9 }] */
    /* JADX WARNING: Removed duplicated region for block: B:55:0x00ee A[Catch:{ Exception -> 0x01ec, all -> 0x01e9 }] */
    /* JADX WARNING: Removed duplicated region for block: B:56:0x00f0 A[Catch:{ Exception -> 0x01ec, all -> 0x01e9 }] */
    /* JADX WARNING: Removed duplicated region for block: B:59:0x0101 A[Catch:{ Exception -> 0x01ec, all -> 0x01e9 }] */
    /* JADX WARNING: Removed duplicated region for block: B:60:0x0115 A[Catch:{ Exception -> 0x01ec, all -> 0x01e9 }] */
    /* JADX WARNING: Removed duplicated region for block: B:63:0x011f A[Catch:{ Exception -> 0x01ec, all -> 0x01e9 }] */
    /* JADX WARNING: Removed duplicated region for block: B:68:0x012a A[Catch:{ Exception -> 0x01ec, all -> 0x01e9 }] */
    /* JADX WARNING: Removed duplicated region for block: B:71:0x013a A[Catch:{ Exception -> 0x01ec, all -> 0x01e9 }] */
    /* JADX WARNING: Removed duplicated region for block: B:72:0x013e A[Catch:{ Exception -> 0x01ec, all -> 0x01e9 }] */
    /* JADX WARNING: Removed duplicated region for block: B:75:0x014a A[Catch:{ Exception -> 0x01ec, all -> 0x01e9 }] */
    /* JADX WARNING: Removed duplicated region for block: B:77:0x016b A[Catch:{ Exception -> 0x01ec, all -> 0x01e9 }] */
    /* JADX WARNING: Removed duplicated region for block: B:79:0x0170 A[Catch:{ Exception -> 0x01ec, all -> 0x01e9 }] */
    /* JADX WARNING: Removed duplicated region for block: B:86:0x0183 A[Catch:{ Exception -> 0x01fb, all -> 0x01f7 }] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$replaceMessageIfExists$176(org.telegram.tgnet.TLRPC$Message r17, boolean r18, java.util.ArrayList r19, java.util.ArrayList r20) {
        /*
            r16 = this;
            r1 = r16
            r4 = r17
            r2 = 2
            r3 = 1
            r5 = 0
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x004e, all -> 0x004a }
            java.util.Locale r6 = java.util.Locale.US     // Catch:{ Exception -> 0x004e, all -> 0x004a }
            java.lang.String r7 = "SELECT uid, read_state, custom_params FROM messages_v2 WHERE mid = %d AND uid = %d LIMIT 1"
            java.lang.Object[] r8 = new java.lang.Object[r2]     // Catch:{ Exception -> 0x004e, all -> 0x004a }
            int r10 = r4.id     // Catch:{ Exception -> 0x004e, all -> 0x004a }
            java.lang.Integer r10 = java.lang.Integer.valueOf(r10)     // Catch:{ Exception -> 0x004e, all -> 0x004a }
            r8[r5] = r10     // Catch:{ Exception -> 0x004e, all -> 0x004a }
            long r10 = org.telegram.messenger.MessageObject.getDialogId(r17)     // Catch:{ Exception -> 0x004e, all -> 0x004a }
            java.lang.Long r10 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x004e, all -> 0x004a }
            r8[r3] = r10     // Catch:{ Exception -> 0x004e, all -> 0x004a }
            java.lang.String r6 = java.lang.String.format(r6, r7, r8)     // Catch:{ Exception -> 0x004e, all -> 0x004a }
            java.lang.Object[] r7 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x004e, all -> 0x004a }
            org.telegram.SQLite.SQLiteCursor r6 = r0.queryFinalized(r6, r7)     // Catch:{ Exception -> 0x004e, all -> 0x004a }
            boolean r0 = r6.next()     // Catch:{ Exception -> 0x0048 }
            if (r0 != 0) goto L_0x003a
            r6.dispose()     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database
            r0.commitTransaction()
            return
        L_0x003a:
            int r7 = r6.intValue(r3)     // Catch:{ Exception -> 0x0048 }
            org.telegram.tgnet.NativeByteBuffer r0 = r6.byteBufferValue(r2)     // Catch:{ Exception -> 0x0046 }
            r6.dispose()     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
            goto L_0x005a
        L_0x0046:
            r0 = move-exception
            goto L_0x0051
        L_0x0048:
            r0 = move-exception
            goto L_0x0050
        L_0x004a:
            r0 = move-exception
            r6 = 0
            goto L_0x0200
        L_0x004e:
            r0 = move-exception
            r6 = 0
        L_0x0050:
            r7 = 0
        L_0x0051:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x01ff }
            if (r6 == 0) goto L_0x0059
            r6.dispose()     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
        L_0x0059:
            r0 = 0
        L_0x005a:
            org.telegram.SQLite.SQLiteDatabase r6 = r1.database     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
            r6.beginTransaction()     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
            org.telegram.SQLite.SQLiteDatabase r6 = r1.database     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
            java.lang.String r8 = "REPLACE INTO messages_v2 VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?, ?, ?, ?, ?, ?, 0, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r6 = r6.executeFast(r8)     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
            org.telegram.SQLite.SQLiteDatabase r8 = r1.database     // Catch:{ Exception -> 0x01f3, all -> 0x01ef }
            java.lang.String r10 = "REPLACE INTO media_v4 VALUES(?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r8 = r8.executeFast(r10)     // Catch:{ Exception -> 0x01f3, all -> 0x01ef }
            long r10 = r4.dialog_id     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r12 = 0
            int r14 = (r10 > r12 ? 1 : (r10 == r12 ? 0 : -1))
            if (r14 != 0) goto L_0x007a
            org.telegram.messenger.MessageObject.getDialogId(r17)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
        L_0x007a:
            r16.fixUnsupportedMedia(r17)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r6.requery()     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            org.telegram.tgnet.NativeByteBuffer r10 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            int r11 = r17.getObjectSize()     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r10.<init>((int) r11)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r4.serializeToStream(r10)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            int r11 = r4.id     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r6.bindInteger(r3, r11)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            long r11 = r4.dialog_id     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r6.bindLong(r2, r11)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r11 = 3
            r6.bindInteger(r11, r7)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            int r7 = r4.send_state     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r12 = 4
            r6.bindInteger(r12, r7)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            int r7 = r4.date     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r13 = 5
            r6.bindInteger(r13, r7)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r7 = 6
            r6.bindByteBuffer((int) r7, (org.telegram.tgnet.NativeByteBuffer) r10)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r7 = 7
            boolean r14 = org.telegram.messenger.MessageObject.isOut(r17)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            if (r14 != 0) goto L_0x00b8
            boolean r14 = r4.from_scheduled     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            if (r14 == 0) goto L_0x00b6
            goto L_0x00b8
        L_0x00b6:
            r14 = 0
            goto L_0x00b9
        L_0x00b8:
            r14 = 1
        L_0x00b9:
            r6.bindInteger(r7, r14)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r7 = 8
            int r14 = r4.ttl     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r6.bindInteger(r7, r14)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            int r7 = r4.flags     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r7 = r7 & 1024(0x400, float:1.435E-42)
            r14 = 9
            if (r7 == 0) goto L_0x00d1
            int r7 = r4.views     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r6.bindInteger(r14, r7)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            goto L_0x00d8
        L_0x00d1:
            int r7 = r16.getMessageMediaType(r17)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r6.bindInteger(r14, r7)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
        L_0x00d8:
            int r7 = r4.stickerVerified     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            if (r7 != 0) goto L_0x00de
            r7 = 1
            goto L_0x00e3
        L_0x00de:
            if (r7 != r2) goto L_0x00e2
            r7 = 2
            goto L_0x00e3
        L_0x00e2:
            r7 = 0
        L_0x00e3:
            r14 = 10
            r6.bindInteger(r14, r7)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r7 = 11
            boolean r14 = r4.mentioned     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            if (r14 == 0) goto L_0x00f0
            r14 = 1
            goto L_0x00f1
        L_0x00f0:
            r14 = 0
        L_0x00f1:
            r6.bindInteger(r7, r14)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r7 = 12
            int r14 = r4.forwards     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r6.bindInteger(r7, r14)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            org.telegram.tgnet.TLRPC$MessageReplies r7 = r4.replies     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r14 = 13
            if (r7 == 0) goto L_0x0115
            org.telegram.tgnet.NativeByteBuffer r7 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            org.telegram.tgnet.TLRPC$MessageReplies r15 = r4.replies     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            int r15 = r15.getObjectSize()     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r7.<init>((int) r15)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            org.telegram.tgnet.TLRPC$MessageReplies r15 = r4.replies     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r15.serializeToStream(r7)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r6.bindByteBuffer((int) r14, (org.telegram.tgnet.NativeByteBuffer) r7)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            goto L_0x0119
        L_0x0115:
            r6.bindNull(r14)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r7 = 0
        L_0x0119:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r14 = r4.reply_to     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r15 = 14
            if (r14 == 0) goto L_0x012a
            int r9 = r14.reply_to_top_id     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            if (r9 == 0) goto L_0x0124
            goto L_0x0126
        L_0x0124:
            int r9 = r14.reply_to_msg_id     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
        L_0x0126:
            r6.bindInteger(r15, r9)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            goto L_0x012d
        L_0x012a:
            r6.bindInteger(r15, r5)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
        L_0x012d:
            r9 = 15
            long r14 = org.telegram.messenger.MessageObject.getChannelId(r17)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r6.bindLong(r9, r14)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r9 = 16
            if (r0 == 0) goto L_0x013e
            r6.bindByteBuffer((int) r9, (org.telegram.tgnet.NativeByteBuffer) r0)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            goto L_0x0141
        L_0x013e:
            r6.bindNull(r9)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
        L_0x0141:
            r6.step()     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            boolean r9 = org.telegram.messenger.MediaDataController.canAddMessageToMedia(r17)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            if (r9 == 0) goto L_0x0169
            r8.requery()     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            int r9 = r4.id     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r8.bindInteger(r3, r9)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            long r14 = r4.dialog_id     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r8.bindLong(r2, r14)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            int r2 = r4.date     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r8.bindInteger(r11, r2)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            int r2 = org.telegram.messenger.MediaDataController.getMediaType(r17)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r8.bindInteger(r12, r2)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r8.bindByteBuffer((int) r13, (org.telegram.tgnet.NativeByteBuffer) r10)     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r8.step()     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
        L_0x0169:
            if (r7 == 0) goto L_0x016e
            r7.reuse()     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
        L_0x016e:
            if (r0 == 0) goto L_0x0173
            r0.reuse()     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
        L_0x0173:
            r10.reuse()     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r6.dispose()     // Catch:{ Exception -> 0x01ec, all -> 0x01e9 }
            r8.dispose()     // Catch:{ Exception -> 0x01e7, all -> 0x01e5 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
            r0.commitTransaction()     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
            if (r18 == 0) goto L_0x01df
            java.util.HashMap r0 = new java.util.HashMap     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
            r0.<init>()     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
            java.util.HashMap r6 = new java.util.HashMap     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
            r6.<init>()     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
            r2 = 0
        L_0x018e:
            int r3 = r19.size()     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
            if (r2 >= r3) goto L_0x01a8
            r3 = r19
            java.lang.Object r7 = r3.get(r2)     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
            org.telegram.tgnet.TLRPC$User r7 = (org.telegram.tgnet.TLRPC$User) r7     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
            long r8 = r7.id     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
            java.lang.Long r8 = java.lang.Long.valueOf(r8)     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
            r0.put(r8, r7)     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
            int r2 = r2 + 1
            goto L_0x018e
        L_0x01a8:
            int r2 = r20.size()     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
            if (r5 >= r2) goto L_0x01c2
            r2 = r20
            java.lang.Object r3 = r2.get(r5)     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
            org.telegram.tgnet.TLRPC$Chat r3 = (org.telegram.tgnet.TLRPC$Chat) r3     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
            long r7 = r3.id     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
            java.lang.Long r7 = java.lang.Long.valueOf(r7)     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
            r6.put(r7, r3)     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
            int r5 = r5 + 1
            goto L_0x01a8
        L_0x01c2:
            org.telegram.messenger.MessageObject r9 = new org.telegram.messenger.MessageObject     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
            int r3 = r1.currentAccount     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
            r7 = 1
            r8 = 1
            r2 = r9
            r4 = r17
            r5 = r0
            r2.<init>((int) r3, (org.telegram.tgnet.TLRPC$Message) r4, (java.util.AbstractMap<java.lang.Long, org.telegram.tgnet.TLRPC$User>) r5, (java.util.AbstractMap<java.lang.Long, org.telegram.tgnet.TLRPC$Chat>) r6, (boolean) r7, (boolean) r8)     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
            r0.<init>()     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
            r0.add(r9)     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda151 r2 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda151     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
            r2.<init>(r1, r9, r0)     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r2)     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
        L_0x01df:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database
            r0.commitTransaction()
            goto L_0x0218
        L_0x01e5:
            r0 = move-exception
            goto L_0x01f9
        L_0x01e7:
            r0 = move-exception
            goto L_0x01fd
        L_0x01e9:
            r0 = move-exception
            r9 = r6
            goto L_0x021a
        L_0x01ec:
            r0 = move-exception
            r9 = r6
            goto L_0x0206
        L_0x01ef:
            r0 = move-exception
            r9 = r6
            r8 = 0
            goto L_0x021a
        L_0x01f3:
            r0 = move-exception
            r9 = r6
            r8 = 0
            goto L_0x0206
        L_0x01f7:
            r0 = move-exception
            r8 = 0
        L_0x01f9:
            r9 = 0
            goto L_0x021a
        L_0x01fb:
            r0 = move-exception
            r8 = 0
        L_0x01fd:
            r9 = 0
            goto L_0x0206
        L_0x01ff:
            r0 = move-exception
        L_0x0200:
            if (r6 == 0) goto L_0x0205
            r6.dispose()     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
        L_0x0205:
            throw r0     // Catch:{ Exception -> 0x01fb, all -> 0x01f7 }
        L_0x0206:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0219 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database
            r0.commitTransaction()
            if (r9 == 0) goto L_0x0213
            r9.dispose()
        L_0x0213:
            if (r8 == 0) goto L_0x0218
            r8.dispose()
        L_0x0218:
            return
        L_0x0219:
            r0 = move-exception
        L_0x021a:
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database
            r2.commitTransaction()
            if (r9 == 0) goto L_0x0224
            r9.dispose()
        L_0x0224:
            if (r8 == 0) goto L_0x0229
            r8.dispose()
        L_0x0229:
            goto L_0x022b
        L_0x022a:
            throw r0
        L_0x022b:
            goto L_0x022a
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$replaceMessageIfExists$176(org.telegram.tgnet.TLRPC$Message, boolean, java.util.ArrayList, java.util.ArrayList):void");
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$replaceMessageIfExists$175(MessageObject messageObject, ArrayList arrayList) {
        getNotificationCenter().postNotificationName(NotificationCenter.replaceMessagesObjects, Long.valueOf(messageObject.getDialogId()), arrayList);
    }

    public void putMessages(TLRPC$messages_Messages tLRPC$messages_Messages, long j, int i, int i2, boolean z, boolean z2) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda188(this, z2, j, tLRPC$messages_Messages, i, i2, z));
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v0, resolved type: org.telegram.tgnet.TLRPC$messages_Messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v0, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v0, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v0, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v0, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v1, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v1, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v0, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v0, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v1, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v1, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v1, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v1, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v2, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v1, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v2, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v2, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v2, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v2, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v2, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v3, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v3, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v3, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v3, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v2, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v1, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v4, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v4, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v3, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v3, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v5, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v5, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v4, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v4, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v3, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v6, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v6, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v4, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v8, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v7, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v5, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v8, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v5, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v4, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v5, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v5, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v4, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v5, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v6, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v6, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v9, resolved type: org.telegram.tgnet.TLRPC$messages_Messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v9, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v5, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v6, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v6, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v10, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v10, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v2, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v11, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v11, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v7, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v12, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v8, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v13, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v13, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v9, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v14, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v14, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v10, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v7, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v7, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v15, resolved type: org.telegram.messenger.support.LongSparseIntArray} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v6, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v17, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v7, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v16, resolved type: org.telegram.messenger.support.LongSparseIntArray} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v19, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v21, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v11, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v3, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v20, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v21, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v22, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v12, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v22, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v8, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v23, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v24, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v13, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v24, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v25, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v8, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v8, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v8, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v9, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v9, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v9, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v26, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v25, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v14, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v4, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v9, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v10, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v10, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v27, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v26, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v15, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v5, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v10, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v11, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v11, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v27, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v28, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v11, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v12, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v12, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v10, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v28, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v6, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v11, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v12, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v13, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v13, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v12, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v29, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v29, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v13, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v13, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v14, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v14, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v14, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v30, resolved type: org.telegram.tgnet.TLRPC$messages_Messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v7, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v8, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v9, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v31, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v10, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v32, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v15, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v11, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v14, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v15, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v15, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v18, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v19, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v20, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v15, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v16, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v16, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v21, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v22, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v23, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v24, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v16, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v17, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v45, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v17, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v17, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v18, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v46, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v18, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v47, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v18, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v19, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v19, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v20, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v19, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v74, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v20, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v21, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v12, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v33, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v16, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v21, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v22, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v34, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v17, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v22, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v75, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v77, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v26, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v15, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v23, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v16, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v17, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v24, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v21, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v20, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v22, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v27, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v29, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v50, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v51, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v52, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v53, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v25, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v26, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v27, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v42, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v43, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v71, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v18, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v44, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v73, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v19, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v45, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v75, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v77, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v79, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v13, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v14, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v80, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v29, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v15, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v16, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v17, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v18, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v20, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v46, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v21, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v22, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v47, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v23, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v24, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v32, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v25, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v26, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v27, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v28, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v30, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v48, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v31, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v49, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v33, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v32, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v34, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v23, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v25, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v23, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v20, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v50, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v94, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v33, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v95, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v51, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v21, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v24, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v26, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v24, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v96, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v52, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v38, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v22, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v25, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v27, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v25, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v34, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v26, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v28, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v26, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v23, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v53, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v27, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v29, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v27, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v24, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v39, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v54, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v55, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v25, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v28, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v30, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v28, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r32v35, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v56, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v40, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r19v26, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v29, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v31, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v29, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v30, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v32, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v57, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v58, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v59, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v60, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX WARNING: type inference failed for: r10v17 */
    /* JADX WARNING: type inference failed for: r10v18 */
    /* JADX WARNING: type inference failed for: r10v23 */
    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:110:0x029e, code lost:
        if (r4.id == r2.id) goto L_0x02a0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:111:0x02a0, code lost:
        r4 = true;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:112:0x02a2, code lost:
        r4 = false;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:113:0x02a3, code lost:
        r2 = r4;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:126:0x02bd, code lost:
        if (r1.id == r2.id) goto L_0x02a0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:291:0x0626, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:292:0x0627, code lost:
        r31 = r12;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:361:0x0755, code lost:
        r0 = th;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:362:0x0757, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:363:0x0758, code lost:
        r1 = r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:50:0x0165, code lost:
        if (r11 == 4) goto L_0x0169;
     */
    /* JADX WARNING: Failed to process nested try/catch */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:235:0x051a A[SYNTHETIC, Splitter:B:235:0x051a] */
    /* JADX WARNING: Removed duplicated region for block: B:237:0x0520 A[SYNTHETIC, Splitter:B:237:0x0520] */
    /* JADX WARNING: Removed duplicated region for block: B:241:0x052b A[Catch:{ Exception -> 0x075d, all -> 0x075b }] */
    /* JADX WARNING: Removed duplicated region for block: B:242:0x052f A[Catch:{ Exception -> 0x075d, all -> 0x075b }] */
    /* JADX WARNING: Removed duplicated region for block: B:248:0x0540 A[Catch:{ Exception -> 0x075d, all -> 0x075b }] */
    /* JADX WARNING: Removed duplicated region for block: B:249:0x0542 A[Catch:{ Exception -> 0x075d, all -> 0x075b }] */
    /* JADX WARNING: Removed duplicated region for block: B:252:0x0553 A[SYNTHETIC, Splitter:B:252:0x0553] */
    /* JADX WARNING: Removed duplicated region for block: B:254:0x0569  */
    /* JADX WARNING: Removed duplicated region for block: B:259:0x0573 A[SYNTHETIC, Splitter:B:259:0x0573] */
    /* JADX WARNING: Removed duplicated region for block: B:265:0x0580  */
    /* JADX WARNING: Removed duplicated region for block: B:271:0x0597 A[SYNTHETIC, Splitter:B:271:0x0597] */
    /* JADX WARNING: Removed duplicated region for block: B:273:0x059b A[SYNTHETIC, Splitter:B:273:0x059b] */
    /* JADX WARNING: Removed duplicated region for block: B:277:0x05a7 A[Catch:{ Exception -> 0x075d, all -> 0x075b }] */
    /* JADX WARNING: Removed duplicated region for block: B:281:0x05cc A[Catch:{ Exception -> 0x0757, all -> 0x0755 }] */
    /* JADX WARNING: Removed duplicated region for block: B:298:0x0632 A[Catch:{ Exception -> 0x0757, all -> 0x0755 }] */
    /* JADX WARNING: Removed duplicated region for block: B:300:0x0637 A[Catch:{ Exception -> 0x0757, all -> 0x0755 }] */
    /* JADX WARNING: Removed duplicated region for block: B:305:0x0645 A[Catch:{ Exception -> 0x0757, all -> 0x0755 }] */
    /* JADX WARNING: Removed duplicated region for block: B:311:0x067f A[Catch:{ Exception -> 0x0750, all -> 0x074b }] */
    /* JADX WARNING: Removed duplicated region for block: B:314:0x068c A[Catch:{ Exception -> 0x0750, all -> 0x074b }] */
    /* JADX WARNING: Removed duplicated region for block: B:331:0x06d2 A[SYNTHETIC, Splitter:B:331:0x06d2] */
    /* JADX WARNING: Removed duplicated region for block: B:346:0x071d A[SYNTHETIC, Splitter:B:346:0x071d] */
    /* JADX WARNING: Removed duplicated region for block: B:361:0x0755 A[ExcHandler: all (th java.lang.Throwable), PHI: r15 
      PHI: (r15v23 org.telegram.SQLite.SQLitePreparedStatement) = (r15v26 org.telegram.SQLite.SQLitePreparedStatement), (r15v26 org.telegram.SQLite.SQLitePreparedStatement), (r15v26 org.telegram.SQLite.SQLitePreparedStatement), (r15v26 org.telegram.SQLite.SQLitePreparedStatement), (r15v26 org.telegram.SQLite.SQLitePreparedStatement), (r15v27 org.telegram.SQLite.SQLitePreparedStatement) binds: [B:285:0x05d9, B:294:0x062a, B:286:?, B:288:0x05e2, B:289:?, B:279:0x05af] A[DONT_GENERATE, DONT_INLINE], Splitter:B:279:0x05af] */
    /* JADX WARNING: Removed duplicated region for block: B:456:0x08cc  */
    /* JADX WARNING: Removed duplicated region for block: B:458:0x08d1  */
    /* JADX WARNING: Removed duplicated region for block: B:460:0x08d6  */
    /* JADX WARNING: Removed duplicated region for block: B:462:0x08db  */
    /* JADX WARNING: Removed duplicated region for block: B:464:0x08e0  */
    /* JADX WARNING: Removed duplicated region for block: B:466:0x08e5  */
    /* JADX WARNING: Removed duplicated region for block: B:468:0x08ea  */
    /* JADX WARNING: Removed duplicated region for block: B:473:0x08f9  */
    /* JADX WARNING: Removed duplicated region for block: B:475:0x08fe  */
    /* JADX WARNING: Removed duplicated region for block: B:477:0x0903  */
    /* JADX WARNING: Removed duplicated region for block: B:479:0x0908  */
    /* JADX WARNING: Removed duplicated region for block: B:481:0x090d  */
    /* JADX WARNING: Removed duplicated region for block: B:483:0x0912  */
    /* JADX WARNING: Removed duplicated region for block: B:485:0x0917  */
    /* JADX WARNING: Removed duplicated region for block: B:497:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$putMessages$178(boolean r40, long r41, org.telegram.tgnet.TLRPC$messages_Messages r43, int r44, int r45, boolean r46) {
        /*
            r39 = this;
            r9 = r39
            r7 = r41
            r10 = r43
            r11 = r44
            r12 = r45
            r14 = 5
            r15 = 4
            r6 = 3
            r5 = 2
            r4 = 1
            r2 = 0
            if (r40 == 0) goto L_0x00e0
            org.telegram.SQLite.SQLiteDatabase r1 = r9.database     // Catch:{ Exception -> 0x00d0, all -> 0x00c1 }
            java.util.Locale r11 = java.util.Locale.US     // Catch:{ Exception -> 0x00d0, all -> 0x00c1 }
            java.lang.String r12 = "DELETE FROM scheduled_messages_v2 WHERE uid = %d AND mid > 0"
            java.lang.Object[] r3 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x00d0, all -> 0x00c1 }
            java.lang.Long r16 = java.lang.Long.valueOf(r41)     // Catch:{ Exception -> 0x00d0, all -> 0x00c1 }
            r3[r2] = r16     // Catch:{ Exception -> 0x00d0, all -> 0x00c1 }
            java.lang.String r3 = java.lang.String.format(r11, r12, r3)     // Catch:{ Exception -> 0x00d0, all -> 0x00c1 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r3)     // Catch:{ Exception -> 0x00d0, all -> 0x00c1 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x00d0, all -> 0x00c1 }
            r1.dispose()     // Catch:{ Exception -> 0x00d0, all -> 0x00c1 }
            org.telegram.SQLite.SQLiteDatabase r1 = r9.database     // Catch:{ Exception -> 0x00d0, all -> 0x00c1 }
            java.lang.String r3 = "REPLACE INTO scheduled_messages_v2 VALUES(?, ?, ?, ?, ?, ?, NULL, 0)"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r3)     // Catch:{ Exception -> 0x00d0, all -> 0x00c1 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r3 = r10.messages     // Catch:{ Exception -> 0x00b1, all -> 0x00a2 }
            int r3 = r3.size()     // Catch:{ Exception -> 0x00b1, all -> 0x00a2 }
        L_0x003d:
            if (r2 >= r3) goto L_0x0082
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r11 = r10.messages     // Catch:{ Exception -> 0x00b1, all -> 0x00a2 }
            java.lang.Object r11 = r11.get(r2)     // Catch:{ Exception -> 0x00b1, all -> 0x00a2 }
            org.telegram.tgnet.TLRPC$Message r11 = (org.telegram.tgnet.TLRPC$Message) r11     // Catch:{ Exception -> 0x00b1, all -> 0x00a2 }
            boolean r12 = r11 instanceof org.telegram.tgnet.TLRPC$TL_messageEmpty     // Catch:{ Exception -> 0x00b1, all -> 0x00a2 }
            if (r12 == 0) goto L_0x004c
            goto L_0x007f
        L_0x004c:
            r9.fixUnsupportedMedia(r11)     // Catch:{ Exception -> 0x00b1, all -> 0x00a2 }
            r1.requery()     // Catch:{ Exception -> 0x00b1, all -> 0x00a2 }
            org.telegram.tgnet.NativeByteBuffer r12 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x00b1, all -> 0x00a2 }
            int r13 = r11.getObjectSize()     // Catch:{ Exception -> 0x00b1, all -> 0x00a2 }
            r12.<init>((int) r13)     // Catch:{ Exception -> 0x00b1, all -> 0x00a2 }
            r11.serializeToStream(r12)     // Catch:{ Exception -> 0x00b1, all -> 0x00a2 }
            int r13 = r11.id     // Catch:{ Exception -> 0x00b1, all -> 0x00a2 }
            r1.bindInteger(r4, r13)     // Catch:{ Exception -> 0x00b1, all -> 0x00a2 }
            r1.bindLong(r5, r7)     // Catch:{ Exception -> 0x00b1, all -> 0x00a2 }
            int r13 = r11.send_state     // Catch:{ Exception -> 0x00b1, all -> 0x00a2 }
            r1.bindInteger(r6, r13)     // Catch:{ Exception -> 0x00b1, all -> 0x00a2 }
            int r13 = r11.date     // Catch:{ Exception -> 0x00b1, all -> 0x00a2 }
            r1.bindInteger(r15, r13)     // Catch:{ Exception -> 0x00b1, all -> 0x00a2 }
            r1.bindByteBuffer((int) r14, (org.telegram.tgnet.NativeByteBuffer) r12)     // Catch:{ Exception -> 0x00b1, all -> 0x00a2 }
            int r11 = r11.ttl     // Catch:{ Exception -> 0x00b1, all -> 0x00a2 }
            r13 = 6
            r1.bindInteger(r13, r11)     // Catch:{ Exception -> 0x00b1, all -> 0x00a2 }
            r1.step()     // Catch:{ Exception -> 0x00b1, all -> 0x00a2 }
            r12.reuse()     // Catch:{ Exception -> 0x00b1, all -> 0x00a2 }
        L_0x007f:
            int r2 = r2 + 1
            goto L_0x003d
        L_0x0082:
            r1.dispose()     // Catch:{ Exception -> 0x00b1, all -> 0x00a2 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r1 = r10.users     // Catch:{ Exception -> 0x00d0, all -> 0x00c1 }
            r9.putUsersInternal(r1)     // Catch:{ Exception -> 0x00d0, all -> 0x00c1 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r1 = r10.chats     // Catch:{ Exception -> 0x00d0, all -> 0x00c1 }
            r9.putChatsInternal(r1)     // Catch:{ Exception -> 0x00d0, all -> 0x00c1 }
            org.telegram.SQLite.SQLiteDatabase r1 = r9.database     // Catch:{ Exception -> 0x00d0, all -> 0x00c1 }
            r1.commitTransaction()     // Catch:{ Exception -> 0x00d0, all -> 0x00c1 }
            java.lang.Long r1 = java.lang.Long.valueOf(r41)     // Catch:{ Exception -> 0x00d0, all -> 0x00c1 }
            r9.broadcastScheduledMessagesChange(r1)     // Catch:{ Exception -> 0x00d0, all -> 0x00c1 }
            r3 = 0
            r20 = 0
            r21 = 0
            goto L_0x0863
        L_0x00a2:
            r0 = move-exception
            r3 = r1
            r10 = 0
            r15 = 0
            r19 = 0
            r20 = 0
            r21 = 0
            r24 = 0
        L_0x00ae:
            r1 = r0
            goto L_0x08f2
        L_0x00b1:
            r0 = move-exception
            r3 = r1
            r10 = 0
            r19 = 0
            r20 = 0
            r21 = 0
            r24 = 0
            r32 = 0
        L_0x00be:
            r1 = r0
            goto L_0x08c2
        L_0x00c1:
            r0 = move-exception
            r1 = r0
            r3 = 0
            r10 = 0
            r15 = 0
            r19 = 0
            r20 = 0
            r21 = 0
            r24 = 0
            goto L_0x08f2
        L_0x00d0:
            r0 = move-exception
            r1 = r0
            r3 = 0
            r10 = 0
            r19 = 0
            r20 = 0
            r21 = 0
            r24 = 0
        L_0x00dc:
            r32 = 0
            goto L_0x08c2
        L_0x00e0:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r10.messages     // Catch:{ Exception -> 0x08b4, all -> 0x08a6 }
            boolean r1 = r1.isEmpty()     // Catch:{ Exception -> 0x08b4, all -> 0x08a6 }
            r13 = -1
            if (r1 == 0) goto L_0x00f9
            if (r11 != 0) goto L_0x00f3
            java.lang.String r1 = "messages_holes"
            r9.doneHolesInTable(r1, r7, r12)     // Catch:{ Exception -> 0x00d0, all -> 0x00c1 }
            r9.doneHolesInMedia(r7, r12, r13)     // Catch:{ Exception -> 0x00d0, all -> 0x00c1 }
        L_0x00f3:
            org.telegram.SQLite.SQLiteDatabase r1 = r9.database
            r1.commitTransaction()
            return
        L_0x00f9:
            org.telegram.SQLite.SQLiteDatabase r1 = r9.database     // Catch:{ Exception -> 0x08b4, all -> 0x08a6 }
            r1.beginTransaction()     // Catch:{ Exception -> 0x08b4, all -> 0x08a6 }
            r3 = 2147483647(0x7fffffff, float:NaN)
            if (r11 != 0) goto L_0x0136
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r10.messages     // Catch:{ Exception -> 0x00d0, all -> 0x00c1 }
            int r17 = r1.size()     // Catch:{ Exception -> 0x00d0, all -> 0x00c1 }
            int r2 = r17 + -1
            java.lang.Object r1 = r1.get(r2)     // Catch:{ Exception -> 0x00d0, all -> 0x00c1 }
            org.telegram.tgnet.TLRPC$Message r1 = (org.telegram.tgnet.TLRPC$Message) r1     // Catch:{ Exception -> 0x00d0, all -> 0x00c1 }
            int r2 = r1.id     // Catch:{ Exception -> 0x00d0, all -> 0x00c1 }
            java.lang.String r17 = "messages_holes"
            r1 = r39
            r18 = r2
            r13 = 0
            r2 = r17
            r14 = 1
            r3 = r41
            r15 = 2
            r5 = r18
            r15 = 3
            r6 = r45
            r1.closeHolesInTable(r2, r3, r5, r6)     // Catch:{ Exception -> 0x00d0, all -> 0x00c1 }
            r6 = -1
            r1 = r39
            r2 = r41
            r4 = r18
            r5 = r45
            r1.closeHolesInMedia(r2, r4, r5, r6)     // Catch:{ Exception -> 0x00d0, all -> 0x00c1 }
            goto L_0x01a3
        L_0x0136:
            r13 = 0
            r14 = 1
            r15 = 3
            if (r11 != r14) goto L_0x015f
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r10.messages     // Catch:{ Exception -> 0x00d0, all -> 0x00c1 }
            java.lang.Object r1 = r1.get(r13)     // Catch:{ Exception -> 0x00d0, all -> 0x00c1 }
            org.telegram.tgnet.TLRPC$Message r1 = (org.telegram.tgnet.TLRPC$Message) r1     // Catch:{ Exception -> 0x00d0, all -> 0x00c1 }
            int r6 = r1.id     // Catch:{ Exception -> 0x00d0, all -> 0x00c1 }
            java.lang.String r2 = "messages_holes"
            r1 = r39
            r3 = r41
            r5 = r45
            r18 = r6
            r1.closeHolesInTable(r2, r3, r5, r6)     // Catch:{ Exception -> 0x00d0, all -> 0x00c1 }
            r6 = -1
            r1 = r39
            r2 = r41
            r4 = r45
            r5 = r18
            r1.closeHolesInMedia(r2, r4, r5, r6)     // Catch:{ Exception -> 0x00d0, all -> 0x00c1 }
            goto L_0x01a3
        L_0x015f:
            if (r11 == r15) goto L_0x0168
            r1 = 2
            if (r11 == r1) goto L_0x0168
            r1 = 4
            if (r11 != r1) goto L_0x01a3
            goto L_0x0169
        L_0x0168:
            r1 = 4
        L_0x0169:
            if (r12 != 0) goto L_0x0171
            if (r11 == r1) goto L_0x0171
            r12 = 2147483647(0x7fffffff, float:NaN)
            goto L_0x017c
        L_0x0171:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r10.messages     // Catch:{ Exception -> 0x08b4, all -> 0x08a6 }
            java.lang.Object r1 = r1.get(r13)     // Catch:{ Exception -> 0x08b4, all -> 0x08a6 }
            org.telegram.tgnet.TLRPC$Message r1 = (org.telegram.tgnet.TLRPC$Message) r1     // Catch:{ Exception -> 0x08b4, all -> 0x08a6 }
            int r1 = r1.id     // Catch:{ Exception -> 0x08b4, all -> 0x08a6 }
            r12 = r1
        L_0x017c:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r10.messages     // Catch:{ Exception -> 0x08b4, all -> 0x08a6 }
            int r2 = r1.size()     // Catch:{ Exception -> 0x08b4, all -> 0x08a6 }
            int r2 = r2 - r14
            java.lang.Object r1 = r1.get(r2)     // Catch:{ Exception -> 0x08b4, all -> 0x08a6 }
            org.telegram.tgnet.TLRPC$Message r1 = (org.telegram.tgnet.TLRPC$Message) r1     // Catch:{ Exception -> 0x08b4, all -> 0x08a6 }
            int r6 = r1.id     // Catch:{ Exception -> 0x08b4, all -> 0x08a6 }
            java.lang.String r2 = "messages_holes"
            r1 = r39
            r3 = r41
            r5 = r6
            r18 = r6
            r6 = r12
            r1.closeHolesInTable(r2, r3, r5, r6)     // Catch:{ Exception -> 0x08b4, all -> 0x08a6 }
            r6 = -1
            r1 = r39
            r2 = r41
            r4 = r18
            r5 = r12
            r1.closeHolesInMedia(r2, r4, r5, r6)     // Catch:{ Exception -> 0x08b4, all -> 0x08a6 }
        L_0x01a3:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r10.messages     // Catch:{ Exception -> 0x08b4, all -> 0x08a6 }
            int r12 = r1.size()     // Catch:{ Exception -> 0x08b4, all -> 0x08a6 }
            java.util.ArrayList r6 = new java.util.ArrayList     // Catch:{ Exception -> 0x08b4, all -> 0x08a6 }
            r6.<init>()     // Catch:{ Exception -> 0x08b4, all -> 0x08a6 }
            java.util.ArrayList r5 = new java.util.ArrayList     // Catch:{ Exception -> 0x08b4, all -> 0x08a6 }
            r5.<init>()     // Catch:{ Exception -> 0x08b4, all -> 0x08a6 }
            java.util.ArrayList r4 = new java.util.ArrayList     // Catch:{ Exception -> 0x08b4, all -> 0x08a6 }
            r4.<init>()     // Catch:{ Exception -> 0x08b4, all -> 0x08a6 }
            org.telegram.SQLite.SQLiteDatabase r1 = r9.database     // Catch:{ Exception -> 0x08b4, all -> 0x08a6 }
            java.lang.String r2 = "REPLACE INTO messages_v2  VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?, ?, ?, ?, ?, ?, 0, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r3 = r1.executeFast(r2)     // Catch:{ Exception -> 0x08b4, all -> 0x08a6 }
            org.telegram.SQLite.SQLiteDatabase r1 = r9.database     // Catch:{ Exception -> 0x089f, all -> 0x0899 }
            java.lang.String r2 = "REPLACE INTO media_v4 VALUES(?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r1.executeFast(r2)     // Catch:{ Exception -> 0x089f, all -> 0x0899 }
            r14 = 0
            r26 = r14
            r1 = 0
            r20 = 0
            r21 = 0
            r22 = 2147483647(0x7fffffff, float:NaN)
            r23 = 0
            r24 = 0
            r25 = 2147483647(0x7fffffff, float:NaN)
        L_0x01db:
            if (r1 >= r12) goto L_0x0783
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r13 = r10.messages     // Catch:{ Exception -> 0x0778, all -> 0x076f }
            java.lang.Object r13 = r13.get(r1)     // Catch:{ Exception -> 0x0778, all -> 0x076f }
            org.telegram.tgnet.TLRPC$Message r13 = (org.telegram.tgnet.TLRPC$Message) r13     // Catch:{ Exception -> 0x0778, all -> 0x076f }
            int r29 = (r26 > r14 ? 1 : (r26 == r14 ? 0 : -1))
            if (r29 != 0) goto L_0x01fb
            org.telegram.tgnet.TLRPC$Peer r14 = r13.peer_id     // Catch:{ Exception -> 0x01f5, all -> 0x01f0 }
            long r14 = r14.channel_id     // Catch:{ Exception -> 0x01f5, all -> 0x01f0 }
            r26 = r14
            goto L_0x01fb
        L_0x01f0:
            r0 = move-exception
            r1 = r0
            r15 = r2
            goto L_0x0773
        L_0x01f5:
            r0 = move-exception
            r1 = r0
            r32 = r2
            goto L_0x077e
        L_0x01fb:
            r14 = -2
            if (r11 != r14) goto L_0x03a4
            org.telegram.SQLite.SQLiteDatabase r14 = r9.database     // Catch:{ Exception -> 0x039c, all -> 0x0392 }
            java.util.Locale r15 = java.util.Locale.US     // Catch:{ Exception -> 0x039c, all -> 0x0392 }
            r45 = r1
            java.lang.String r1 = "SELECT mid, data, ttl, mention, read_state, send_state, custom_params FROM messages_v2 WHERE mid = %d AND uid = %d"
            r30 = r2
            r31 = r3
            r2 = 2
            java.lang.Object[] r3 = new java.lang.Object[r2]     // Catch:{ Exception -> 0x038d, all -> 0x0388 }
            int r2 = r13.id     // Catch:{ Exception -> 0x038d, all -> 0x0388 }
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x038d, all -> 0x0388 }
            r32 = r4
            r4 = 0
            r3[r4] = r2     // Catch:{ Exception -> 0x038d, all -> 0x0388 }
            long r33 = org.telegram.messenger.MessageObject.getDialogId(r13)     // Catch:{ Exception -> 0x038d, all -> 0x0388 }
            java.lang.Long r2 = java.lang.Long.valueOf(r33)     // Catch:{ Exception -> 0x038d, all -> 0x0388 }
            r18 = 1
            r3[r18] = r2     // Catch:{ Exception -> 0x038d, all -> 0x0388 }
            java.lang.String r1 = java.lang.String.format(r15, r1, r3)     // Catch:{ Exception -> 0x038d, all -> 0x0388 }
            java.lang.Object[] r2 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x038d, all -> 0x0388 }
            org.telegram.SQLite.SQLiteCursor r14 = r14.queryFinalized(r1, r2)     // Catch:{ Exception -> 0x038d, all -> 0x0388 }
            boolean r15 = r14.next()     // Catch:{ Exception -> 0x0381, all -> 0x037a }
            if (r15 == 0) goto L_0x035d
            r1 = 1
            org.telegram.tgnet.NativeByteBuffer r2 = r14.byteBufferValue(r1)     // Catch:{ Exception -> 0x0381, all -> 0x037a }
            if (r2 == 0) goto L_0x02fb
            r1 = 0
            int r3 = r2.readInt32(r1)     // Catch:{ Exception -> 0x0381, all -> 0x037a }
            org.telegram.tgnet.TLRPC$Message r3 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r2, r3, r1)     // Catch:{ Exception -> 0x0381, all -> 0x037a }
            org.telegram.messenger.UserConfig r1 = r39.getUserConfig()     // Catch:{ Exception -> 0x0381, all -> 0x037a }
            r33 = r5
            long r4 = r1.clientUserId     // Catch:{ Exception -> 0x0381, all -> 0x037a }
            r3.readAttachPath(r2, r4)     // Catch:{ Exception -> 0x0381, all -> 0x037a }
            r2.reuse()     // Catch:{ Exception -> 0x0381, all -> 0x037a }
            r1 = 5
            int r2 = r14.intValue(r1)     // Catch:{ Exception -> 0x0381, all -> 0x037a }
            r1 = 3
            if (r2 == r1) goto L_0x0284
            java.lang.String r1 = org.telegram.messenger.MessageObject.getFileName(r3)     // Catch:{ Exception -> 0x027d, all -> 0x0274 }
            java.lang.String r2 = org.telegram.messenger.MessageObject.getFileName(r13)     // Catch:{ Exception -> 0x027d, all -> 0x0274 }
            boolean r1 = r1.equals(r2)     // Catch:{ Exception -> 0x027d, all -> 0x0274 }
            if (r1 == 0) goto L_0x026c
            java.lang.String r1 = r3.attachPath     // Catch:{ Exception -> 0x027d, all -> 0x0274 }
            r13.attachPath = r1     // Catch:{ Exception -> 0x027d, all -> 0x0274 }
        L_0x026c:
            r1 = 2
            int r2 = r14.intValue(r1)     // Catch:{ Exception -> 0x027d, all -> 0x0274 }
            r13.ttl = r2     // Catch:{ Exception -> 0x027d, all -> 0x0274 }
            goto L_0x0284
        L_0x0274:
            r0 = move-exception
            r1 = r0
            r10 = r14
            r15 = r30
            r3 = r31
            goto L_0x0774
        L_0x027d:
            r0 = move-exception
            r1 = r0
            r10 = r14
            r32 = r30
            goto L_0x04af
        L_0x0284:
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r3.media     // Catch:{ Exception -> 0x0381, all -> 0x037a }
            boolean r2 = r1 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaPhoto     // Catch:{ Exception -> 0x0381, all -> 0x037a }
            if (r2 == 0) goto L_0x02a5
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r13.media     // Catch:{ Exception -> 0x027d, all -> 0x0274 }
            boolean r4 = r2 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaPhoto     // Catch:{ Exception -> 0x027d, all -> 0x0274 }
            if (r4 == 0) goto L_0x02a5
            org.telegram.tgnet.TLRPC$Photo r4 = r1.photo     // Catch:{ Exception -> 0x027d, all -> 0x0274 }
            if (r4 == 0) goto L_0x02a5
            org.telegram.tgnet.TLRPC$Photo r2 = r2.photo     // Catch:{ Exception -> 0x027d, all -> 0x0274 }
            if (r2 == 0) goto L_0x02a5
            long r4 = r4.id     // Catch:{ Exception -> 0x027d, all -> 0x0274 }
            long r1 = r2.id     // Catch:{ Exception -> 0x027d, all -> 0x0274 }
            int r34 = (r4 > r1 ? 1 : (r4 == r1 ? 0 : -1))
            if (r34 != 0) goto L_0x02a2
        L_0x02a0:
            r4 = 1
            goto L_0x02a3
        L_0x02a2:
            r4 = 0
        L_0x02a3:
            r2 = r4
            goto L_0x02c1
        L_0x02a5:
            boolean r2 = r1 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaDocument     // Catch:{ Exception -> 0x0381, all -> 0x037a }
            if (r2 == 0) goto L_0x02c0
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r13.media     // Catch:{ Exception -> 0x027d, all -> 0x0274 }
            boolean r4 = r2 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaDocument     // Catch:{ Exception -> 0x027d, all -> 0x0274 }
            if (r4 == 0) goto L_0x02c0
            org.telegram.tgnet.TLRPC$Document r1 = r1.document     // Catch:{ Exception -> 0x027d, all -> 0x0274 }
            if (r1 == 0) goto L_0x02c0
            org.telegram.tgnet.TLRPC$Document r2 = r2.document     // Catch:{ Exception -> 0x027d, all -> 0x0274 }
            if (r2 == 0) goto L_0x02c0
            long r4 = r1.id     // Catch:{ Exception -> 0x027d, all -> 0x0274 }
            long r1 = r2.id     // Catch:{ Exception -> 0x027d, all -> 0x0274 }
            int r34 = (r4 > r1 ? 1 : (r4 == r1 ? 0 : -1))
            if (r34 != 0) goto L_0x02a2
            goto L_0x02a0
        L_0x02c0:
            r2 = 0
        L_0x02c1:
            if (r2 != 0) goto L_0x02e2
            r34 = 0
            r35 = r45
            r1 = r39
            r5 = r30
            r2 = r3
            r4 = r31
            r3 = r6
            r45 = r32
            r4 = r45
            r32 = r5
            r30 = r33
            r5 = r30
            r33 = r12
            r12 = r6
            r6 = r34
            r1.addFilesToDelete(r2, r3, r4, r5, r6)     // Catch:{ Exception -> 0x0378, all -> 0x0376 }
            goto L_0x02ed
        L_0x02e2:
            r35 = r45
            r45 = r32
            r32 = r30
            r30 = r33
            r33 = r12
            r12 = r6
        L_0x02ed:
            r1 = 6
            org.telegram.tgnet.NativeByteBuffer r2 = r14.byteBufferValue(r1)     // Catch:{ Exception -> 0x0378, all -> 0x0376 }
            org.telegram.messenger.MessageCustomParamsHelper.readLocalParams(r13, r2)     // Catch:{ Exception -> 0x0378, all -> 0x0376 }
            if (r2 == 0) goto L_0x0306
            r2.reuse()     // Catch:{ Exception -> 0x0378, all -> 0x0376 }
            goto L_0x0306
        L_0x02fb:
            r35 = r45
            r33 = r12
            r45 = r32
            r12 = r6
            r32 = r30
            r30 = r5
        L_0x0306:
            r1 = 3
            int r2 = r14.intValue(r1)     // Catch:{ Exception -> 0x0378, all -> 0x0376 }
            r1 = 4
            if (r2 == 0) goto L_0x0310
            r4 = 1
            goto L_0x0311
        L_0x0310:
            r4 = 0
        L_0x0311:
            int r2 = r14.intValue(r1)     // Catch:{ Exception -> 0x0378, all -> 0x0376 }
            boolean r1 = r13.mentioned     // Catch:{ Exception -> 0x0378, all -> 0x0376 }
            if (r4 == r1) goto L_0x0368
            r1 = r25
            r3 = 2147483647(0x7fffffff, float:NaN)
            if (r1 != r3) goto L_0x034c
            org.telegram.SQLite.SQLiteDatabase r5 = r9.database     // Catch:{ Exception -> 0x0378, all -> 0x0376 }
            java.lang.StringBuilder r6 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0378, all -> 0x0376 }
            r6.<init>()     // Catch:{ Exception -> 0x0378, all -> 0x0376 }
            java.lang.String r3 = "SELECT unread_count_i FROM dialogs WHERE did = "
            r6.append(r3)     // Catch:{ Exception -> 0x0378, all -> 0x0376 }
            r6.append(r7)     // Catch:{ Exception -> 0x0378, all -> 0x0376 }
            java.lang.String r3 = r6.toString()     // Catch:{ Exception -> 0x0378, all -> 0x0376 }
            r25 = r1
            r6 = 0
            java.lang.Object[] r1 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0378, all -> 0x0376 }
            org.telegram.SQLite.SQLiteCursor r1 = r5.queryFinalized(r3, r1)     // Catch:{ Exception -> 0x0378, all -> 0x0376 }
            boolean r3 = r1.next()     // Catch:{ Exception -> 0x0378, all -> 0x0376 }
            if (r3 == 0) goto L_0x0348
            int r3 = r1.intValue(r6)     // Catch:{ Exception -> 0x0378, all -> 0x0376 }
            r25 = r3
        L_0x0348:
            r1.dispose()     // Catch:{ Exception -> 0x0378, all -> 0x0376 }
            goto L_0x034e
        L_0x034c:
            r25 = r1
        L_0x034e:
            if (r4 == 0) goto L_0x0356
            r1 = 1
            if (r2 > r1) goto L_0x0368
            int r25 = r25 + -1
            goto L_0x0368
        L_0x0356:
            boolean r1 = r13.media_unread     // Catch:{ Exception -> 0x0378, all -> 0x0376 }
            if (r1 == 0) goto L_0x0368
            int r25 = r25 + 1
            goto L_0x0368
        L_0x035d:
            r35 = r45
            r33 = r12
            r45 = r32
            r12 = r6
            r32 = r30
            r30 = r5
        L_0x0368:
            r14.dispose()     // Catch:{ Exception -> 0x0378, all -> 0x0376 }
            if (r15 != 0) goto L_0x03b1
            r6 = r31
            r15 = r32
            r2 = 3
            r31 = r12
            goto L_0x0738
        L_0x0376:
            r0 = move-exception
            goto L_0x037d
        L_0x0378:
            r0 = move-exception
            goto L_0x0384
        L_0x037a:
            r0 = move-exception
            r32 = r30
        L_0x037d:
            r1 = r0
            r10 = r14
            goto L_0x04a6
        L_0x0381:
            r0 = move-exception
            r32 = r30
        L_0x0384:
            r1 = r0
            r10 = r14
            goto L_0x04af
        L_0x0388:
            r0 = move-exception
            r32 = r30
            goto L_0x04b4
        L_0x038d:
            r0 = move-exception
            r32 = r30
            goto L_0x04ba
        L_0x0392:
            r0 = move-exception
            r32 = r2
            r31 = r3
            r1 = r0
        L_0x0398:
            r15 = r32
            goto L_0x0773
        L_0x039c:
            r0 = move-exception
            r32 = r2
            r31 = r3
            r1 = r0
            goto L_0x077e
        L_0x03a4:
            r35 = r1
            r32 = r2
            r31 = r3
            r45 = r4
            r30 = r5
            r33 = r12
            r12 = r6
        L_0x03b1:
            r5 = 8
            r15 = 9
            r1 = 7
            if (r35 != 0) goto L_0x04bf
            if (r46 == 0) goto L_0x04bf
            org.telegram.SQLite.SQLiteDatabase r6 = r9.database     // Catch:{ Exception -> 0x04b9, all -> 0x04b3 }
            java.lang.StringBuilder r14 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x04b9, all -> 0x04b3 }
            r14.<init>()     // Catch:{ Exception -> 0x04b9, all -> 0x04b3 }
            java.lang.String r2 = "SELECT pinned, unread_count_i, flags FROM dialogs WHERE did = "
            r14.append(r2)     // Catch:{ Exception -> 0x04b9, all -> 0x04b3 }
            r14.append(r7)     // Catch:{ Exception -> 0x04b9, all -> 0x04b3 }
            java.lang.String r2 = r14.toString()     // Catch:{ Exception -> 0x04b9, all -> 0x04b3 }
            r14 = 0
            java.lang.Object[] r3 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x04b9, all -> 0x04b3 }
            org.telegram.SQLite.SQLiteCursor r3 = r6.queryFinalized(r2, r3)     // Catch:{ Exception -> 0x04b9, all -> 0x04b3 }
            boolean r2 = r3.next()     // Catch:{ Exception -> 0x04ac, all -> 0x04a3 }
            if (r2 == 0) goto L_0x03ee
            int r6 = r3.intValue(r14)     // Catch:{ Exception -> 0x04ac, all -> 0x04a3 }
            r14 = 1
            int r36 = r3.intValue(r14)     // Catch:{ Exception -> 0x04ac, all -> 0x04a3 }
            r14 = 2
            int r37 = r3.intValue(r14)     // Catch:{ Exception -> 0x04ac, all -> 0x04a3 }
            r14 = r6
            r6 = r36
            r38 = r37
            goto L_0x03f2
        L_0x03ee:
            r6 = 0
            r14 = 0
            r38 = 0
        L_0x03f2:
            r3.dispose()     // Catch:{ Exception -> 0x04ac, all -> 0x04a3 }
            if (r2 == 0) goto L_0x0428
            org.telegram.SQLite.SQLiteDatabase r2 = r9.database     // Catch:{ Exception -> 0x04b9, all -> 0x04b3 }
            java.lang.String r3 = "UPDATE dialogs SET date = ?, last_mid = ?, inbox_max = ?, last_mid_i = ?, pts = ?, date_i = ? WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r3 = r2.executeFast(r3)     // Catch:{ Exception -> 0x04b9, all -> 0x04b3 }
            int r2 = r13.date     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            r6 = 1
            r3.bindInteger(r6, r2)     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            int r2 = r13.id     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            r6 = 2
            r3.bindInteger(r6, r2)     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            int r2 = r13.id     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            r6 = 3
            r3.bindInteger(r6, r2)     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            int r2 = r13.id     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            r6 = 4
            r3.bindInteger(r6, r2)     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            int r2 = r10.pts     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            r6 = 5
            r3.bindInteger(r6, r2)     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            int r2 = r13.date     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            r6 = 6
            r3.bindInteger(r6, r2)     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            r3.bindLong(r1, r7)     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            r4 = -1
            goto L_0x0488
        L_0x0428:
            org.telegram.SQLite.SQLiteDatabase r2 = r9.database     // Catch:{ Exception -> 0x04b9, all -> 0x04b3 }
            java.lang.String r3 = "REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r3 = r2.executeFast(r3)     // Catch:{ Exception -> 0x04b9, all -> 0x04b3 }
            r2 = 1
            r3.bindLong(r2, r7)     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            int r2 = r13.date     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            r4 = 2
            r3.bindInteger(r4, r2)     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            r2 = 3
            r4 = 0
            r3.bindInteger(r2, r4)     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            int r2 = r13.id     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            r4 = 4
            r3.bindInteger(r4, r2)     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            int r2 = r13.id     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            r4 = 5
            r3.bindInteger(r4, r2)     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            r2 = 6
            r4 = 0
            r3.bindInteger(r2, r4)     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            int r2 = r13.id     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            r3.bindInteger(r1, r2)     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            r3.bindInteger(r5, r6)     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            int r2 = r10.pts     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            r3.bindInteger(r15, r2)     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            int r2 = r13.date     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            r4 = 10
            r3.bindInteger(r4, r2)     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            r2 = 11
            r3.bindInteger(r2, r14)     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            r2 = r38
            r4 = 12
            r3.bindInteger(r4, r2)     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            r2 = 13
            r4 = -1
            r3.bindInteger(r2, r4)     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            r2 = 14
            r3.bindNull(r2)     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            r2 = 15
            r6 = 0
            r3.bindInteger(r2, r6)     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            androidx.collection.LongSparseArray<java.lang.Boolean> r2 = r9.unknownDialogsIds     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            java.lang.Boolean r6 = java.lang.Boolean.TRUE     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            r2.put(r7, r6)     // Catch:{ Exception -> 0x049a, all -> 0x048f }
        L_0x0488:
            r3.step()     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            r3.dispose()     // Catch:{ Exception -> 0x049a, all -> 0x048f }
            goto L_0x04c0
        L_0x048f:
            r0 = move-exception
            r1 = r0
            r19 = r3
            r3 = r31
            r15 = r32
            r10 = 0
            goto L_0x08f2
        L_0x049a:
            r0 = move-exception
            r1 = r0
            r19 = r3
            r3 = r31
            r10 = 0
            goto L_0x08c2
        L_0x04a3:
            r0 = move-exception
            r1 = r0
            r10 = r3
        L_0x04a6:
            r3 = r31
            r15 = r32
            goto L_0x0774
        L_0x04ac:
            r0 = move-exception
            r1 = r0
            r10 = r3
        L_0x04af:
            r3 = r31
            goto L_0x077f
        L_0x04b3:
            r0 = move-exception
        L_0x04b4:
            r1 = r0
            r3 = r31
            goto L_0x0398
        L_0x04b9:
            r0 = move-exception
        L_0x04ba:
            r1 = r0
            r3 = r31
            goto L_0x077e
        L_0x04bf:
            r4 = -1
        L_0x04c0:
            r9.fixUnsupportedMedia(r13)     // Catch:{ Exception -> 0x0767, all -> 0x075f }
            r31.requery()     // Catch:{ Exception -> 0x0767, all -> 0x075f }
            org.telegram.tgnet.NativeByteBuffer r2 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0767, all -> 0x075f }
            int r3 = r13.getObjectSize()     // Catch:{ Exception -> 0x0767, all -> 0x075f }
            r2.<init>((int) r3)     // Catch:{ Exception -> 0x0767, all -> 0x075f }
            r13.serializeToStream(r2)     // Catch:{ Exception -> 0x0767, all -> 0x075f }
            int r3 = r13.id     // Catch:{ Exception -> 0x0767, all -> 0x075f }
            r6 = r31
            r14 = 1
            r6.bindInteger(r14, r3)     // Catch:{ Exception -> 0x075d, all -> 0x075b }
            r3 = 2
            r6.bindLong(r3, r7)     // Catch:{ Exception -> 0x075d, all -> 0x075b }
            int r3 = org.telegram.messenger.MessageObject.getUnreadFlags(r13)     // Catch:{ Exception -> 0x075d, all -> 0x075b }
            r14 = 3
            r6.bindInteger(r14, r3)     // Catch:{ Exception -> 0x075d, all -> 0x075b }
            int r3 = r13.send_state     // Catch:{ Exception -> 0x075d, all -> 0x075b }
            r14 = 4
            r6.bindInteger(r14, r3)     // Catch:{ Exception -> 0x075d, all -> 0x075b }
            int r3 = r13.date     // Catch:{ Exception -> 0x075d, all -> 0x075b }
            r14 = 5
            r6.bindInteger(r14, r3)     // Catch:{ Exception -> 0x075d, all -> 0x075b }
            r3 = 6
            r6.bindByteBuffer((int) r3, (org.telegram.tgnet.NativeByteBuffer) r2)     // Catch:{ Exception -> 0x075d, all -> 0x075b }
            boolean r14 = org.telegram.messenger.MessageObject.isOut(r13)     // Catch:{ Exception -> 0x075d, all -> 0x075b }
            if (r14 != 0) goto L_0x050b
            boolean r14 = r13.from_scheduled     // Catch:{ Exception -> 0x0508, all -> 0x0503 }
            if (r14 == 0) goto L_0x0501
            goto L_0x050b
        L_0x0501:
            r14 = 0
            goto L_0x050c
        L_0x0503:
            r0 = move-exception
            r1 = r0
            r3 = r6
            goto L_0x0398
        L_0x0508:
            r0 = move-exception
            goto L_0x076c
        L_0x050b:
            r14 = 1
        L_0x050c:
            r6.bindInteger(r1, r14)     // Catch:{ Exception -> 0x075d, all -> 0x075b }
            int r1 = r13.ttl     // Catch:{ Exception -> 0x075d, all -> 0x075b }
            r6.bindInteger(r5, r1)     // Catch:{ Exception -> 0x075d, all -> 0x075b }
            int r1 = r13.flags     // Catch:{ Exception -> 0x075d, all -> 0x075b }
            r1 = r1 & 1024(0x400, float:1.435E-42)
            if (r1 == 0) goto L_0x0520
            int r1 = r13.views     // Catch:{ Exception -> 0x0508, all -> 0x0503 }
            r6.bindInteger(r15, r1)     // Catch:{ Exception -> 0x0508, all -> 0x0503 }
            goto L_0x0527
        L_0x0520:
            int r1 = r9.getMessageMediaType(r13)     // Catch:{ Exception -> 0x075d, all -> 0x075b }
            r6.bindInteger(r15, r1)     // Catch:{ Exception -> 0x075d, all -> 0x075b }
        L_0x0527:
            int r1 = r13.stickerVerified     // Catch:{ Exception -> 0x075d, all -> 0x075b }
            if (r1 != 0) goto L_0x052f
            r1 = 10
            r5 = 1
            goto L_0x0539
        L_0x052f:
            r5 = 2
            if (r1 != r5) goto L_0x0536
            r1 = 10
            r5 = 2
            goto L_0x0539
        L_0x0536:
            r1 = 10
            r5 = 0
        L_0x0539:
            r6.bindInteger(r1, r5)     // Catch:{ Exception -> 0x075d, all -> 0x075b }
            boolean r1 = r13.mentioned     // Catch:{ Exception -> 0x075d, all -> 0x075b }
            if (r1 == 0) goto L_0x0542
            r1 = 1
            goto L_0x0543
        L_0x0542:
            r1 = 0
        L_0x0543:
            r5 = 11
            r6.bindInteger(r5, r1)     // Catch:{ Exception -> 0x075d, all -> 0x075b }
            int r1 = r13.forwards     // Catch:{ Exception -> 0x075d, all -> 0x075b }
            r5 = 12
            r6.bindInteger(r5, r1)     // Catch:{ Exception -> 0x075d, all -> 0x075b }
            org.telegram.tgnet.TLRPC$MessageReplies r1 = r13.replies     // Catch:{ Exception -> 0x075d, all -> 0x075b }
            if (r1 == 0) goto L_0x0569
            org.telegram.tgnet.NativeByteBuffer r1 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0508, all -> 0x0503 }
            org.telegram.tgnet.TLRPC$MessageReplies r5 = r13.replies     // Catch:{ Exception -> 0x0508, all -> 0x0503 }
            int r5 = r5.getObjectSize()     // Catch:{ Exception -> 0x0508, all -> 0x0503 }
            r1.<init>((int) r5)     // Catch:{ Exception -> 0x0508, all -> 0x0503 }
            org.telegram.tgnet.TLRPC$MessageReplies r5 = r13.replies     // Catch:{ Exception -> 0x0508, all -> 0x0503 }
            r5.serializeToStream(r1)     // Catch:{ Exception -> 0x0508, all -> 0x0503 }
            r5 = 13
            r6.bindByteBuffer((int) r5, (org.telegram.tgnet.NativeByteBuffer) r1)     // Catch:{ Exception -> 0x0508, all -> 0x0503 }
            goto L_0x056f
        L_0x0569:
            r1 = 13
            r6.bindNull(r1)     // Catch:{ Exception -> 0x075d, all -> 0x075b }
            r1 = 0
        L_0x056f:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r5 = r13.reply_to     // Catch:{ Exception -> 0x075d, all -> 0x075b }
            if (r5 == 0) goto L_0x0580
            int r14 = r5.reply_to_top_id     // Catch:{ Exception -> 0x0508, all -> 0x0503 }
            if (r14 == 0) goto L_0x0578
            goto L_0x057a
        L_0x0578:
            int r14 = r5.reply_to_msg_id     // Catch:{ Exception -> 0x0508, all -> 0x0503 }
        L_0x057a:
            r5 = 14
            r6.bindInteger(r5, r14)     // Catch:{ Exception -> 0x0508, all -> 0x0503 }
            goto L_0x0586
        L_0x0580:
            r5 = 14
            r14 = 0
            r6.bindInteger(r5, r14)     // Catch:{ Exception -> 0x075d, all -> 0x075b }
        L_0x0586:
            long r14 = org.telegram.messenger.MessageObject.getChannelId(r13)     // Catch:{ Exception -> 0x075d, all -> 0x075b }
            r5 = 15
            r6.bindLong(r5, r14)     // Catch:{ Exception -> 0x075d, all -> 0x075b }
            org.telegram.tgnet.NativeByteBuffer r5 = org.telegram.messenger.MessageCustomParamsHelper.writeLocalParams(r13)     // Catch:{ Exception -> 0x075d, all -> 0x075b }
            r14 = 16
            if (r5 != 0) goto L_0x059b
            r6.bindNull(r14)     // Catch:{ Exception -> 0x0508, all -> 0x0503 }
            goto L_0x059e
        L_0x059b:
            r6.bindByteBuffer((int) r14, (org.telegram.tgnet.NativeByteBuffer) r5)     // Catch:{ Exception -> 0x075d, all -> 0x075b }
        L_0x059e:
            r6.step()     // Catch:{ Exception -> 0x075d, all -> 0x075b }
            boolean r14 = org.telegram.messenger.MediaDataController.canAddMessageToMedia(r13)     // Catch:{ Exception -> 0x075d, all -> 0x075b }
            if (r14 == 0) goto L_0x05cc
            r32.requery()     // Catch:{ Exception -> 0x075d, all -> 0x075b }
            int r14 = r13.id     // Catch:{ Exception -> 0x075d, all -> 0x075b }
            r15 = r32
            r3 = 1
            r15.bindInteger(r3, r14)     // Catch:{ Exception -> 0x0757, all -> 0x0755 }
            r3 = 2
            r15.bindLong(r3, r7)     // Catch:{ Exception -> 0x0757, all -> 0x0755 }
            int r3 = r13.date     // Catch:{ Exception -> 0x0757, all -> 0x0755 }
            r14 = 3
            r15.bindInteger(r14, r3)     // Catch:{ Exception -> 0x0757, all -> 0x0755 }
            int r3 = org.telegram.messenger.MediaDataController.getMediaType(r13)     // Catch:{ Exception -> 0x0757, all -> 0x0755 }
            r14 = 4
            r15.bindInteger(r14, r3)     // Catch:{ Exception -> 0x0757, all -> 0x0755 }
            r3 = 5
            r15.bindByteBuffer((int) r3, (org.telegram.tgnet.NativeByteBuffer) r2)     // Catch:{ Exception -> 0x0757, all -> 0x0755 }
            r15.step()     // Catch:{ Exception -> 0x0757, all -> 0x0755 }
            goto L_0x062e
        L_0x05cc:
            r15 = r32
            r3 = 5
            boolean r14 = r13 instanceof org.telegram.tgnet.TLRPC$TL_messageService     // Catch:{ Exception -> 0x0757, all -> 0x0755 }
            if (r14 == 0) goto L_0x062e
            org.telegram.tgnet.TLRPC$MessageAction r14 = r13.action     // Catch:{ Exception -> 0x0757, all -> 0x0755 }
            boolean r14 = r14 instanceof org.telegram.tgnet.TLRPC$TL_messageActionHistoryClear     // Catch:{ Exception -> 0x0757, all -> 0x0755 }
            if (r14 == 0) goto L_0x062e
            org.telegram.SQLite.SQLiteDatabase r14 = r9.database     // Catch:{ Exception -> 0x0626, all -> 0x0755 }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x0626, all -> 0x0755 }
            java.lang.String r4 = "DELETE FROM media_v4 WHERE mid = %d AND uid = %d"
            r31 = r12
            r10 = 2
            java.lang.Object[] r12 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x0624, all -> 0x0755 }
            int r10 = r13.id     // Catch:{ Exception -> 0x0624, all -> 0x0755 }
            java.lang.Integer r10 = java.lang.Integer.valueOf(r10)     // Catch:{ Exception -> 0x0624, all -> 0x0755 }
            r28 = 0
            r12[r28] = r10     // Catch:{ Exception -> 0x0624, all -> 0x0755 }
            java.lang.Long r10 = java.lang.Long.valueOf(r41)     // Catch:{ Exception -> 0x0624, all -> 0x0755 }
            r18 = 1
            r12[r18] = r10     // Catch:{ Exception -> 0x0624, all -> 0x0755 }
            java.lang.String r3 = java.lang.String.format(r3, r4, r12)     // Catch:{ Exception -> 0x0624, all -> 0x0755 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r14.executeFast(r3)     // Catch:{ Exception -> 0x0624, all -> 0x0755 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.stepThis()     // Catch:{ Exception -> 0x0624, all -> 0x0755 }
            r3.dispose()     // Catch:{ Exception -> 0x0624, all -> 0x0755 }
            org.telegram.SQLite.SQLiteDatabase r3 = r9.database     // Catch:{ Exception -> 0x0624, all -> 0x0755 }
            java.lang.StringBuilder r4 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0624, all -> 0x0755 }
            r4.<init>()     // Catch:{ Exception -> 0x0624, all -> 0x0755 }
            java.lang.String r10 = "DELETE FROM media_counts_v2 WHERE uid = "
            r4.append(r10)     // Catch:{ Exception -> 0x0624, all -> 0x0755 }
            r4.append(r7)     // Catch:{ Exception -> 0x0624, all -> 0x0755 }
            java.lang.String r4 = r4.toString()     // Catch:{ Exception -> 0x0624, all -> 0x0755 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.executeFast(r4)     // Catch:{ Exception -> 0x0624, all -> 0x0755 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.stepThis()     // Catch:{ Exception -> 0x0624, all -> 0x0755 }
            r3.dispose()     // Catch:{ Exception -> 0x0624, all -> 0x0755 }
            goto L_0x0630
        L_0x0624:
            r0 = move-exception
            goto L_0x0629
        L_0x0626:
            r0 = move-exception
            r31 = r12
        L_0x0629:
            r3 = r0
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r3)     // Catch:{ Exception -> 0x0757, all -> 0x0755 }
            goto L_0x0630
        L_0x062e:
            r31 = r12
        L_0x0630:
            if (r1 == 0) goto L_0x0635
            r1.reuse()     // Catch:{ Exception -> 0x0757, all -> 0x0755 }
        L_0x0635:
            if (r5 == 0) goto L_0x063a
            r5.reuse()     // Catch:{ Exception -> 0x0757, all -> 0x0755 }
        L_0x063a:
            r2.reuse()     // Catch:{ Exception -> 0x0757, all -> 0x0755 }
            int r1 = r13.ttl_period     // Catch:{ Exception -> 0x0757, all -> 0x0755 }
            if (r1 == 0) goto L_0x067f
            int r1 = r13.id     // Catch:{ Exception -> 0x0757, all -> 0x0755 }
            if (r1 <= 0) goto L_0x067f
            if (r21 != 0) goto L_0x0651
            org.telegram.SQLite.SQLiteDatabase r1 = r9.database     // Catch:{ Exception -> 0x0757, all -> 0x0755 }
            java.lang.String r2 = "REPLACE INTO enc_tasks_v4 VALUES(?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0757, all -> 0x0755 }
            r3 = r1
            goto L_0x0653
        L_0x0651:
            r3 = r21
        L_0x0653:
            r3.requery()     // Catch:{ Exception -> 0x0750, all -> 0x074b }
            int r1 = r13.id     // Catch:{ Exception -> 0x0750, all -> 0x074b }
            r2 = 1
            r3.bindInteger(r2, r1)     // Catch:{ Exception -> 0x0750, all -> 0x074b }
            long r1 = r13.dialog_id     // Catch:{ Exception -> 0x0750, all -> 0x074b }
            r4 = 2
            r3.bindLong(r4, r1)     // Catch:{ Exception -> 0x0750, all -> 0x074b }
            int r1 = r13.date     // Catch:{ Exception -> 0x0750, all -> 0x074b }
            int r2 = r13.ttl_period     // Catch:{ Exception -> 0x0750, all -> 0x074b }
            int r1 = r1 + r2
            r2 = 3
            r3.bindInteger(r2, r1)     // Catch:{ Exception -> 0x0750, all -> 0x074b }
            r1 = 4
            r2 = 0
            r3.bindInteger(r1, r2)     // Catch:{ Exception -> 0x0750, all -> 0x074b }
            r3.step()     // Catch:{ Exception -> 0x0750, all -> 0x074b }
            int r2 = r13.date     // Catch:{ Exception -> 0x0750, all -> 0x074b }
            int r4 = r13.ttl_period     // Catch:{ Exception -> 0x0750, all -> 0x074b }
            int r2 = r2 + r4
            r4 = r22
            int r22 = java.lang.Math.min(r4, r2)     // Catch:{ Exception -> 0x0750, all -> 0x074b }
            goto L_0x0686
        L_0x067f:
            r4 = r22
            r1 = 4
            r22 = r4
            r3 = r21
        L_0x0686:
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r13.media     // Catch:{ Exception -> 0x0750, all -> 0x074b }
            boolean r4 = r2 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaPoll     // Catch:{ Exception -> 0x0750, all -> 0x074b }
            if (r4 == 0) goto L_0x06d2
            if (r24 != 0) goto L_0x0697
            org.telegram.SQLite.SQLiteDatabase r2 = r9.database     // Catch:{ Exception -> 0x0750, all -> 0x074b }
            java.lang.String r4 = "REPLACE INTO polls_v2 VALUES(?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r4)     // Catch:{ Exception -> 0x0750, all -> 0x074b }
            goto L_0x0699
        L_0x0697:
            r2 = r24
        L_0x0699:
            org.telegram.tgnet.TLRPC$MessageMedia r4 = r13.media     // Catch:{ Exception -> 0x06c9, all -> 0x06c0 }
            org.telegram.tgnet.TLRPC$TL_messageMediaPoll r4 = (org.telegram.tgnet.TLRPC$TL_messageMediaPoll) r4     // Catch:{ Exception -> 0x06c9, all -> 0x06c0 }
            r2.requery()     // Catch:{ Exception -> 0x06c9, all -> 0x06c0 }
            int r5 = r13.id     // Catch:{ Exception -> 0x06c9, all -> 0x06c0 }
            r10 = 1
            r2.bindInteger(r10, r5)     // Catch:{ Exception -> 0x06c9, all -> 0x06c0 }
            r5 = r2
            long r1 = r13.dialog_id     // Catch:{ Exception -> 0x06be, all -> 0x06bc }
            r10 = 2
            r5.bindLong(r10, r1)     // Catch:{ Exception -> 0x06be, all -> 0x06bc }
            org.telegram.tgnet.TLRPC$Poll r1 = r4.poll     // Catch:{ Exception -> 0x06be, all -> 0x06bc }
            long r1 = r1.id     // Catch:{ Exception -> 0x06be, all -> 0x06bc }
            r4 = 3
            r5.bindLong(r4, r1)     // Catch:{ Exception -> 0x06be, all -> 0x06bc }
            r5.step()     // Catch:{ Exception -> 0x06be, all -> 0x06bc }
            r24 = r5
            goto L_0x071a
        L_0x06bc:
            r0 = move-exception
            goto L_0x06c2
        L_0x06be:
            r0 = move-exception
            goto L_0x06cb
        L_0x06c0:
            r0 = move-exception
            r5 = r2
        L_0x06c2:
            r1 = r0
            r21 = r3
            r24 = r5
            goto L_0x0765
        L_0x06c9:
            r0 = move-exception
            r5 = r2
        L_0x06cb:
            r1 = r0
            r21 = r3
            r24 = r5
            goto L_0x0759
        L_0x06d2:
            boolean r1 = r2 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaWebPage     // Catch:{ Exception -> 0x0750, all -> 0x074b }
            if (r1 == 0) goto L_0x071a
            if (r20 != 0) goto L_0x06e1
            org.telegram.SQLite.SQLiteDatabase r1 = r9.database     // Catch:{ Exception -> 0x0750, all -> 0x074b }
            java.lang.String r2 = "REPLACE INTO webpage_pending_v2 VALUES(?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0750, all -> 0x074b }
            goto L_0x06e3
        L_0x06e1:
            r1 = r20
        L_0x06e3:
            r1.requery()     // Catch:{ Exception -> 0x070d, all -> 0x0702 }
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r13.media     // Catch:{ Exception -> 0x070d, all -> 0x0702 }
            org.telegram.tgnet.TLRPC$WebPage r2 = r2.webpage     // Catch:{ Exception -> 0x070d, all -> 0x0702 }
            long r4 = r2.id     // Catch:{ Exception -> 0x070d, all -> 0x0702 }
            r2 = 1
            r1.bindLong(r2, r4)     // Catch:{ Exception -> 0x070d, all -> 0x0702 }
            int r2 = r13.id     // Catch:{ Exception -> 0x070d, all -> 0x0702 }
            r4 = 2
            r1.bindInteger(r4, r2)     // Catch:{ Exception -> 0x070d, all -> 0x0702 }
            long r4 = r13.dialog_id     // Catch:{ Exception -> 0x070d, all -> 0x0702 }
            r2 = 3
            r1.bindLong(r2, r4)     // Catch:{ Exception -> 0x070d, all -> 0x0702 }
            r1.step()     // Catch:{ Exception -> 0x070d, all -> 0x0702 }
            r20 = r1
            goto L_0x071b
        L_0x0702:
            r0 = move-exception
            r20 = r1
            r21 = r3
            r3 = r6
            r10 = 0
            r19 = 0
            goto L_0x00ae
        L_0x070d:
            r0 = move-exception
            r20 = r1
            r21 = r3
            r3 = r6
            r32 = r15
            r10 = 0
            r19 = 0
            goto L_0x00be
        L_0x071a:
            r2 = 3
        L_0x071b:
            if (r11 != 0) goto L_0x0732
            boolean r1 = r9.isValidKeyboardToSave(r13)     // Catch:{ Exception -> 0x0750, all -> 0x074b }
            if (r1 == 0) goto L_0x0732
            r1 = r23
            if (r1 == 0) goto L_0x072d
            int r4 = r1.id     // Catch:{ Exception -> 0x0750, all -> 0x074b }
            int r5 = r13.id     // Catch:{ Exception -> 0x0750, all -> 0x074b }
            if (r4 >= r5) goto L_0x0734
        L_0x072d:
            r21 = r3
            r23 = r13
            goto L_0x0738
        L_0x0732:
            r1 = r23
        L_0x0734:
            r23 = r1
            r21 = r3
        L_0x0738:
            int r1 = r35 + 1
            r10 = r43
            r4 = r45
            r3 = r6
            r2 = r15
            r5 = r30
            r6 = r31
            r12 = r33
            r13 = 0
            r14 = 0
            goto L_0x01db
        L_0x074b:
            r0 = move-exception
            r1 = r0
            r21 = r3
            goto L_0x0765
        L_0x0750:
            r0 = move-exception
            r1 = r0
            r21 = r3
            goto L_0x0759
        L_0x0755:
            r0 = move-exception
            goto L_0x0764
        L_0x0757:
            r0 = move-exception
            r1 = r0
        L_0x0759:
            r3 = r6
            goto L_0x077c
        L_0x075b:
            r0 = move-exception
            goto L_0x0762
        L_0x075d:
            r0 = move-exception
            goto L_0x076a
        L_0x075f:
            r0 = move-exception
            r6 = r31
        L_0x0762:
            r15 = r32
        L_0x0764:
            r1 = r0
        L_0x0765:
            r3 = r6
            goto L_0x0773
        L_0x0767:
            r0 = move-exception
            r6 = r31
        L_0x076a:
            r15 = r32
        L_0x076c:
            r1 = r0
            r3 = r6
            goto L_0x077e
        L_0x076f:
            r0 = move-exception
            r15 = r2
            r6 = r3
            r1 = r0
        L_0x0773:
            r10 = 0
        L_0x0774:
            r19 = 0
            goto L_0x08f2
        L_0x0778:
            r0 = move-exception
            r15 = r2
            r6 = r3
            r1 = r0
        L_0x077c:
            r32 = r15
        L_0x077e:
            r10 = 0
        L_0x077f:
            r19 = 0
            goto L_0x08c2
        L_0x0783:
            r15 = r2
            r45 = r4
            r30 = r5
            r31 = r6
            r4 = r22
            r1 = r23
            r6 = r3
            r6.dispose()     // Catch:{ Exception -> 0x0890, all -> 0x0888 }
            r15.dispose()     // Catch:{ Exception -> 0x0881, all -> 0x0879 }
            if (r20 == 0) goto L_0x07ab
            r20.dispose()     // Catch:{ Exception -> 0x07a3, all -> 0x079d }
            r20 = 0
            goto L_0x07ab
        L_0x079d:
            r0 = move-exception
            r1 = r0
            r3 = 0
            r10 = 0
            r15 = 0
            goto L_0x0774
        L_0x07a3:
            r0 = move-exception
            r1 = r0
            r3 = 0
            r10 = 0
            r19 = 0
            goto L_0x00dc
        L_0x07ab:
            if (r21 == 0) goto L_0x07d0
            r21.dispose()     // Catch:{ Exception -> 0x07c6, all -> 0x07bd }
            org.telegram.messenger.MessagesController r2 = r39.getMessagesController()     // Catch:{ Exception -> 0x07c6, all -> 0x07bd }
            r5 = 0
            r10 = 0
            r2.didAddedNewTask(r4, r5, r10)     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
            r21 = r10
            goto L_0x07d1
        L_0x07bd:
            r0 = move-exception
            r10 = 0
        L_0x07bf:
            r1 = r0
            r3 = r10
            r15 = r3
            r19 = r15
            goto L_0x08f2
        L_0x07c6:
            r0 = move-exception
            r10 = 0
        L_0x07c8:
            r1 = r0
            r3 = r10
            r19 = r3
            r32 = r19
            goto L_0x08c2
        L_0x07d0:
            r10 = 0
        L_0x07d1:
            if (r24 == 0) goto L_0x07dd
            r24.dispose()     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
            r24 = r10
            goto L_0x07dd
        L_0x07d9:
            r0 = move-exception
            goto L_0x07bf
        L_0x07db:
            r0 = move-exception
            goto L_0x07c8
        L_0x07dd:
            if (r1 == 0) goto L_0x07e6
            org.telegram.messenger.MediaDataController r2 = r39.getMediaDataController()     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
            r2.putBotKeyboard(r7, r1)     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
        L_0x07e6:
            r1 = r45
            r2 = 0
            r9.deleteFromDownloadQueue(r1, r2)     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda135 r1 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda135     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
            r3 = r30
            r1.<init>(r9, r3)     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r1)     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
            org.telegram.messenger.FileLoader r1 = r39.getFileLoader()     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
            r3 = r31
            r1.deleteFiles(r3, r2)     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
            r1 = r43
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r2 = r1.users     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
            r9.putUsersInternal(r2)     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r1 = r1.chats     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
            r9.putChatsInternal(r1)     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
            r1 = r25
            r2 = 2147483647(0x7fffffff, float:NaN)
            if (r1 == r2) goto L_0x0848
            org.telegram.SQLite.SQLiteDatabase r2 = r9.database     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
            java.lang.String r4 = "UPDATE dialogs SET unread_count_i = %d WHERE did = %d"
            r5 = 2
            java.lang.Object[] r5 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
            r11 = 0
            r5[r11] = r6     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
            java.lang.Long r6 = java.lang.Long.valueOf(r41)     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
            r11 = 1
            r5[r11] = r6     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
            java.lang.String r3 = java.lang.String.format(r3, r4, r5)     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r3)     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.stepThis()     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
            r2.dispose()     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
            org.telegram.messenger.support.LongSparseIntArray r2 = new org.telegram.messenger.support.LongSparseIntArray     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
            r3 = 1
            r2.<init>(r3)     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
            r2.put(r7, r1)     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
            org.telegram.messenger.MessagesController r1 = r39.getMessagesController()     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
            r1.processDialogsUpdateRead(r10, r2)     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
        L_0x0848:
            org.telegram.SQLite.SQLiteDatabase r1 = r9.database     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
            r1.commitTransaction()     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
            if (r46 == 0) goto L_0x0861
            java.util.ArrayList r6 = new java.util.ArrayList     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
            r6.<init>()     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
            r11 = 0
            r12 = 0
            r1 = r39
            r2 = r41
            r4 = r26
            r7 = r11
            r8 = r12
            r1.updateDialogsWithDeletedMessages(r2, r4, r6, r7, r8)     // Catch:{ Exception -> 0x07db, all -> 0x07d9 }
        L_0x0861:
            r3 = r24
        L_0x0863:
            org.telegram.SQLite.SQLiteDatabase r1 = r9.database
            r1.commitTransaction()
            if (r3 == 0) goto L_0x086d
            r3.dispose()
        L_0x086d:
            if (r20 == 0) goto L_0x0872
            r20.dispose()
        L_0x0872:
            if (r21 == 0) goto L_0x08ed
            r21.dispose()
            goto L_0x08ed
        L_0x0879:
            r0 = move-exception
            r10 = 0
            r1 = r0
            r3 = r10
            r19 = r3
            goto L_0x08f2
        L_0x0881:
            r0 = move-exception
            r10 = 0
            r1 = r0
            r3 = r10
            r19 = r3
            goto L_0x0896
        L_0x0888:
            r0 = move-exception
            r10 = 0
            r1 = r0
            r3 = r6
            r19 = r10
            goto L_0x08f2
        L_0x0890:
            r0 = move-exception
            r10 = 0
            r1 = r0
            r3 = r6
            r19 = r10
        L_0x0896:
            r32 = r15
            goto L_0x08c2
        L_0x0899:
            r0 = move-exception
            r6 = r3
            r10 = 0
            r1 = r0
            r15 = r10
            goto L_0x08ab
        L_0x089f:
            r0 = move-exception
            r6 = r3
            r10 = 0
            r1 = r0
            r19 = r10
            goto L_0x08ba
        L_0x08a6:
            r0 = move-exception
            r10 = 0
            r1 = r0
            r3 = r10
            r15 = r3
        L_0x08ab:
            r19 = r15
            r20 = r19
            r21 = r20
            r24 = r21
            goto L_0x08f2
        L_0x08b4:
            r0 = move-exception
            r10 = 0
            r1 = r0
            r3 = r10
            r19 = r3
        L_0x08ba:
            r20 = r19
            r21 = r20
            r24 = r21
            r32 = r24
        L_0x08c2:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r1)     // Catch:{ all -> 0x08ee }
            org.telegram.SQLite.SQLiteDatabase r1 = r9.database
            r1.commitTransaction()
            if (r3 == 0) goto L_0x08cf
            r3.dispose()
        L_0x08cf:
            if (r32 == 0) goto L_0x08d4
            r32.dispose()
        L_0x08d4:
            if (r24 == 0) goto L_0x08d9
            r24.dispose()
        L_0x08d9:
            if (r20 == 0) goto L_0x08de
            r20.dispose()
        L_0x08de:
            if (r21 == 0) goto L_0x08e3
            r21.dispose()
        L_0x08e3:
            if (r19 == 0) goto L_0x08e8
            r19.dispose()
        L_0x08e8:
            if (r10 == 0) goto L_0x08ed
            r10.dispose()
        L_0x08ed:
            return
        L_0x08ee:
            r0 = move-exception
            r1 = r0
            r15 = r32
        L_0x08f2:
            org.telegram.SQLite.SQLiteDatabase r2 = r9.database
            r2.commitTransaction()
            if (r3 == 0) goto L_0x08fc
            r3.dispose()
        L_0x08fc:
            if (r15 == 0) goto L_0x0901
            r15.dispose()
        L_0x0901:
            if (r24 == 0) goto L_0x0906
            r24.dispose()
        L_0x0906:
            if (r20 == 0) goto L_0x090b
            r20.dispose()
        L_0x090b:
            if (r21 == 0) goto L_0x0910
            r21.dispose()
        L_0x0910:
            if (r19 == 0) goto L_0x0915
            r19.dispose()
        L_0x0915:
            if (r10 == 0) goto L_0x091a
            r10.dispose()
        L_0x091a:
            goto L_0x091c
        L_0x091b:
            throw r1
        L_0x091c:
            goto L_0x091b
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$putMessages$178(boolean, long, org.telegram.tgnet.TLRPC$messages_Messages, int, int, boolean):void");
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$putMessages$177(ArrayList arrayList) {
        getFileLoader().cancelLoadFiles(arrayList);
    }

    public static void addUsersAndChatsFromMessage(TLRPC$Message tLRPC$Message, ArrayList<Long> arrayList, ArrayList<Long> arrayList2, ArrayList<Long> arrayList3) {
        String str;
        TLRPC$Peer tLRPC$Peer;
        long fromChatId = MessageObject.getFromChatId(tLRPC$Message);
        if (DialogObject.isUserDialog(fromChatId)) {
            if (!arrayList.contains(Long.valueOf(fromChatId))) {
                arrayList.add(Long.valueOf(fromChatId));
            }
        } else if (DialogObject.isChatDialog(fromChatId)) {
            long j = -fromChatId;
            if (!arrayList2.contains(Long.valueOf(j))) {
                arrayList2.add(Long.valueOf(j));
            }
        }
        long j2 = tLRPC$Message.via_bot_id;
        if (j2 != 0 && !arrayList.contains(Long.valueOf(j2))) {
            arrayList.add(Long.valueOf(tLRPC$Message.via_bot_id));
        }
        TLRPC$MessageAction tLRPC$MessageAction = tLRPC$Message.action;
        if (tLRPC$MessageAction != null) {
            long j3 = tLRPC$MessageAction.user_id;
            if (j3 != 0 && !arrayList.contains(Long.valueOf(j3))) {
                arrayList.add(Long.valueOf(tLRPC$Message.action.user_id));
            }
            long j4 = tLRPC$Message.action.channel_id;
            if (j4 != 0 && !arrayList2.contains(Long.valueOf(j4))) {
                arrayList2.add(Long.valueOf(tLRPC$Message.action.channel_id));
            }
            long j5 = tLRPC$Message.action.chat_id;
            if (j5 != 0 && !arrayList2.contains(Long.valueOf(j5))) {
                arrayList2.add(Long.valueOf(tLRPC$Message.action.chat_id));
            }
            TLRPC$MessageAction tLRPC$MessageAction2 = tLRPC$Message.action;
            if (tLRPC$MessageAction2 instanceof TLRPC$TL_messageActionGeoProximityReached) {
                TLRPC$TL_messageActionGeoProximityReached tLRPC$TL_messageActionGeoProximityReached = (TLRPC$TL_messageActionGeoProximityReached) tLRPC$MessageAction2;
                long peerId = MessageObject.getPeerId(tLRPC$TL_messageActionGeoProximityReached.from_id);
                if (!DialogObject.isUserDialog(peerId)) {
                    long j6 = -peerId;
                    if (!arrayList2.contains(Long.valueOf(j6))) {
                        arrayList2.add(Long.valueOf(j6));
                    }
                } else if (!arrayList.contains(Long.valueOf(peerId))) {
                    arrayList.add(Long.valueOf(peerId));
                }
                long peerId2 = MessageObject.getPeerId(tLRPC$TL_messageActionGeoProximityReached.to_id);
                if (peerId2 <= 0) {
                    long j7 = -peerId2;
                    if (!arrayList2.contains(Long.valueOf(j7))) {
                        arrayList2.add(Long.valueOf(j7));
                    }
                } else if (!arrayList.contains(Long.valueOf(peerId2))) {
                    arrayList.add(Long.valueOf(peerId2));
                }
            }
            if (!tLRPC$Message.action.users.isEmpty()) {
                for (int i = 0; i < tLRPC$Message.action.users.size(); i++) {
                    Long l = tLRPC$Message.action.users.get(i);
                    if (!arrayList.contains(l)) {
                        arrayList.add(l);
                    }
                }
            }
        }
        if (!tLRPC$Message.entities.isEmpty()) {
            for (int i2 = 0; i2 < tLRPC$Message.entities.size(); i2++) {
                TLRPC$MessageEntity tLRPC$MessageEntity = tLRPC$Message.entities.get(i2);
                if (tLRPC$MessageEntity instanceof TLRPC$TL_messageEntityMentionName) {
                    arrayList.add(Long.valueOf(((TLRPC$TL_messageEntityMentionName) tLRPC$MessageEntity).user_id));
                } else if (tLRPC$MessageEntity instanceof TLRPC$TL_inputMessageEntityMentionName) {
                    arrayList.add(Long.valueOf(((TLRPC$TL_inputMessageEntityMentionName) tLRPC$MessageEntity).user_id.user_id));
                } else if (arrayList3 != null && (tLRPC$MessageEntity instanceof TLRPC$TL_messageEntityCustomEmoji)) {
                    arrayList3.add(Long.valueOf(((TLRPC$TL_messageEntityCustomEmoji) tLRPC$MessageEntity).document_id));
                }
            }
        }
        TLRPC$MessageMedia tLRPC$MessageMedia = tLRPC$Message.media;
        if (tLRPC$MessageMedia != null) {
            long j8 = tLRPC$MessageMedia.user_id;
            if (j8 != 0 && !arrayList.contains(Long.valueOf(j8))) {
                arrayList.add(Long.valueOf(tLRPC$Message.media.user_id));
            }
            TLRPC$MessageMedia tLRPC$MessageMedia2 = tLRPC$Message.media;
            if (tLRPC$MessageMedia2 instanceof TLRPC$TL_messageMediaPoll) {
                TLRPC$TL_messageMediaPoll tLRPC$TL_messageMediaPoll = (TLRPC$TL_messageMediaPoll) tLRPC$MessageMedia2;
                if (!tLRPC$TL_messageMediaPoll.results.recent_voters.isEmpty()) {
                    arrayList.addAll(tLRPC$TL_messageMediaPoll.results.recent_voters);
                }
            }
        }
        TLRPC$MessageReplies tLRPC$MessageReplies = tLRPC$Message.replies;
        if (tLRPC$MessageReplies != null) {
            int size = tLRPC$MessageReplies.recent_repliers.size();
            for (int i3 = 0; i3 < size; i3++) {
                long peerId3 = MessageObject.getPeerId(tLRPC$Message.replies.recent_repliers.get(i3));
                if (DialogObject.isUserDialog(peerId3)) {
                    if (!arrayList.contains(Long.valueOf(peerId3))) {
                        arrayList.add(Long.valueOf(peerId3));
                    }
                } else if (DialogObject.isChatDialog(peerId3)) {
                    long j9 = -peerId3;
                    if (!arrayList2.contains(Long.valueOf(j9))) {
                        arrayList2.add(Long.valueOf(j9));
                    }
                }
            }
        }
        TLRPC$TL_messageReplyHeader tLRPC$TL_messageReplyHeader = tLRPC$Message.reply_to;
        if (!(tLRPC$TL_messageReplyHeader == null || (tLRPC$Peer = tLRPC$TL_messageReplyHeader.reply_to_peer_id) == null)) {
            long peerId4 = MessageObject.getPeerId(tLRPC$Peer);
            if (DialogObject.isUserDialog(peerId4)) {
                if (!arrayList.contains(Long.valueOf(peerId4))) {
                    arrayList.add(Long.valueOf(peerId4));
                }
            } else if (DialogObject.isChatDialog(peerId4)) {
                long j10 = -peerId4;
                if (!arrayList2.contains(Long.valueOf(j10))) {
                    arrayList2.add(Long.valueOf(j10));
                }
            }
        }
        TLRPC$MessageFwdHeader tLRPC$MessageFwdHeader = tLRPC$Message.fwd_from;
        if (tLRPC$MessageFwdHeader != null) {
            TLRPC$Peer tLRPC$Peer2 = tLRPC$MessageFwdHeader.from_id;
            if (tLRPC$Peer2 instanceof TLRPC$TL_peerUser) {
                if (!arrayList.contains(Long.valueOf(tLRPC$Peer2.user_id))) {
                    arrayList.add(Long.valueOf(tLRPC$Message.fwd_from.from_id.user_id));
                }
            } else if (tLRPC$Peer2 instanceof TLRPC$TL_peerChannel) {
                if (!arrayList2.contains(Long.valueOf(tLRPC$Peer2.channel_id))) {
                    arrayList2.add(Long.valueOf(tLRPC$Message.fwd_from.from_id.channel_id));
                }
            } else if ((tLRPC$Peer2 instanceof TLRPC$TL_peerChat) && !arrayList2.contains(Long.valueOf(tLRPC$Peer2.chat_id))) {
                arrayList2.add(Long.valueOf(tLRPC$Message.fwd_from.from_id.chat_id));
            }
            TLRPC$Peer tLRPC$Peer3 = tLRPC$Message.fwd_from.saved_from_peer;
            if (tLRPC$Peer3 != null) {
                long j11 = tLRPC$Peer3.user_id;
                if (j11 == 0) {
                    long j12 = tLRPC$Peer3.channel_id;
                    if (j12 == 0) {
                        long j13 = tLRPC$Peer3.chat_id;
                        if (j13 != 0 && !arrayList2.contains(Long.valueOf(j13))) {
                            arrayList2.add(Long.valueOf(tLRPC$Message.fwd_from.saved_from_peer.chat_id));
                        }
                    } else if (!arrayList2.contains(Long.valueOf(j12))) {
                        arrayList2.add(Long.valueOf(tLRPC$Message.fwd_from.saved_from_peer.channel_id));
                    }
                } else if (!arrayList2.contains(Long.valueOf(j11))) {
                    arrayList.add(Long.valueOf(tLRPC$Message.fwd_from.saved_from_peer.user_id));
                }
            }
        }
        HashMap<String, String> hashMap = tLRPC$Message.params;
        if (hashMap != null && (str = hashMap.get("fwd_peer")) != null) {
            long longValue = Utilities.parseLong(str).longValue();
            if (longValue < 0) {
                long j14 = -longValue;
                if (!arrayList2.contains(Long.valueOf(j14))) {
                    arrayList2.add(Long.valueOf(j14));
                }
            }
        }
    }

    /* JADX WARNING: Code restructure failed: missing block: B:2:0x0003, code lost:
        r11 = getMediaDataController().getDrafts();
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void getDialogs(int r8, int r9, int r10, boolean r11) {
        /*
            r7 = this;
            r0 = 0
            if (r11 == 0) goto L_0x002d
            org.telegram.messenger.MediaDataController r11 = r7.getMediaDataController()
            androidx.collection.LongSparseArray r11 = r11.getDrafts()
            int r1 = r11.size()
            if (r1 <= 0) goto L_0x002d
            long[] r0 = new long[r1]
            r2 = 0
            r3 = 0
        L_0x0015:
            if (r3 >= r1) goto L_0x002d
            java.lang.Object r4 = r11.valueAt(r3)
            android.util.SparseArray r4 = (android.util.SparseArray) r4
            java.lang.Object r4 = r4.get(r2)
            if (r4 != 0) goto L_0x0024
            goto L_0x002a
        L_0x0024:
            long r4 = r11.keyAt(r3)
            r0[r3] = r4
        L_0x002a:
            int r3 = r3 + 1
            goto L_0x0015
        L_0x002d:
            r6 = r0
            org.telegram.messenger.DispatchQueue r11 = r7.storageQueue
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda36 r0 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda36
            r1 = r0
            r2 = r7
            r3 = r8
            r4 = r9
            r5 = r10
            r1.<init>(r2, r3, r4, r5, r6)
            r11.postRunnable(r0)
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.getDialogs(int, int, int, boolean):void");
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v113, resolved type: org.telegram.tgnet.TLRPC$TL_dialog} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v114, resolved type: org.telegram.tgnet.TLRPC$TL_dialogFolder} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v115, resolved type: org.telegram.tgnet.TLRPC$TL_dialogFolder} */
    /* JADX WARNING: type inference failed for: r0v37 */
    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:123:0x02df, code lost:
        r0 = th;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:124:0x02e0, code lost:
        r3 = r24;
        r18 = r5;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:127:0x02ed, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:128:0x02ee, code lost:
        r3 = r24;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:193:0x0411, code lost:
        r0 = th;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:194:0x0412, code lost:
        r3 = r24;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:207:0x044e, code lost:
        r18.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:210:0x0455, code lost:
        r18.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:226:?, code lost:
        return;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:227:?, code lost:
        return;
     */
    /* JADX WARNING: Failed to insert additional move for type inference */
    /* JADX WARNING: Failed to process nested try/catch */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:107:0x0270 A[Catch:{ Exception -> 0x02e6, all -> 0x02df }] */
    /* JADX WARNING: Removed duplicated region for block: B:110:0x0288 A[Catch:{ Exception -> 0x02e6, all -> 0x02df }] */
    /* JADX WARNING: Removed duplicated region for block: B:123:0x02df A[ExcHandler: all (th java.lang.Throwable), Splitter:B:95:0x0249] */
    /* JADX WARNING: Removed duplicated region for block: B:193:0x0411 A[ExcHandler: all (th java.lang.Throwable), Splitter:B:5:0x0056] */
    /* JADX WARNING: Removed duplicated region for block: B:207:0x044e  */
    /* JADX WARNING: Removed duplicated region for block: B:210:0x0455  */
    /* JADX WARNING: Removed duplicated region for block: B:227:? A[RETURN, SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:39:0x0144 A[Catch:{ Exception -> 0x02e6, all -> 0x02df }] */
    /* JADX WARNING: Removed duplicated region for block: B:40:0x0146 A[Catch:{ Exception -> 0x02e6, all -> 0x02df }] */
    /* JADX WARNING: Removed duplicated region for block: B:43:0x015b A[Catch:{ Exception -> 0x02e6, all -> 0x02df }] */
    /* JADX WARNING: Removed duplicated region for block: B:44:0x015d A[Catch:{ Exception -> 0x02e6, all -> 0x02df }] */
    /* JADX WARNING: Removed duplicated region for block: B:47:0x0174 A[Catch:{ Exception -> 0x02e6, all -> 0x02df }] */
    /* JADX WARNING: Removed duplicated region for block: B:52:0x0198 A[Catch:{ Exception -> 0x02e6, all -> 0x02df }] */
    /* JADX WARNING: Removed duplicated region for block: B:53:0x01a2 A[Catch:{ Exception -> 0x02e6, all -> 0x02df }] */
    /* JADX WARNING: Removed duplicated region for block: B:56:0x01ab A[Catch:{ Exception -> 0x02e6, all -> 0x02df }] */
    /* JADX WARNING: Removed duplicated region for block: B:98:0x0256 A[Catch:{ Exception -> 0x02e6, all -> 0x02df }] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$getDialogs$180(int r25, int r26, int r27, long[] r28) {
        /*
            r24 = this;
            r7 = r24
            r8 = r28
            org.telegram.tgnet.TLRPC$TL_messages_dialogs r15 = new org.telegram.tgnet.TLRPC$TL_messages_dialogs
            r15.<init>()
            java.util.ArrayList r14 = new java.util.ArrayList
            r14.<init>()
            r18 = 0
            java.util.ArrayList r9 = new java.util.ArrayList     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r9.<init>()     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            org.telegram.messenger.UserConfig r0 = r24.getUserConfig()     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            long r0 = r0.getClientUserId()     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            java.lang.Long r0 = java.lang.Long.valueOf(r0)     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r9.add(r0)     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            java.util.ArrayList r10 = new java.util.ArrayList     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r10.<init>()     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            java.util.ArrayList r11 = new java.util.ArrayList     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r11.<init>()     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            java.util.ArrayList r12 = new java.util.ArrayList     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r12.<init>()     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            java.util.ArrayList r1 = new java.util.ArrayList     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r1.<init>()     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            androidx.collection.LongSparseArray r2 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r2.<init>()     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            androidx.collection.LongSparseArray r3 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r3.<init>()     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            java.util.ArrayList r4 = new java.util.ArrayList     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r5 = 2
            r4.<init>(r5)     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r25)     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r4.add(r0)     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            r6 = 0
        L_0x0050:
            int r0 = r4.size()     // Catch:{ Exception -> 0x041f, all -> 0x041c }
            if (r6 >= r0) goto L_0x02f2
            java.lang.Object r0 = r4.get(r6)     // Catch:{ Exception -> 0x02ed, all -> 0x0411 }
            java.lang.Integer r0 = (java.lang.Integer) r0     // Catch:{ Exception -> 0x02ed, all -> 0x0411 }
            int r0 = r0.intValue()     // Catch:{ Exception -> 0x02ed, all -> 0x0411 }
            if (r6 != 0) goto L_0x0067
            r19 = r26
            r17 = r27
            goto L_0x006b
        L_0x0067:
            r17 = 100
            r19 = 0
        L_0x006b:
            org.telegram.SQLite.SQLiteDatabase r5 = r7.database     // Catch:{ Exception -> 0x02ed, all -> 0x0411 }
            java.util.Locale r13 = java.util.Locale.US     // Catch:{ Exception -> 0x02ed, all -> 0x0411 }
            r22 = r14
            java.lang.String r14 = "SELECT d.did, d.last_mid, d.unread_count, d.date, m.data, m.read_state, m.mid, m.send_state, s.flags, m.date, d.pts, d.inbox_max, d.outbox_max, m.replydata, d.pinned, d.unread_count_i, d.flags, d.folder_id, d.data, d.unread_reactions FROM dialogs as d LEFT JOIN messages_v2 as m ON d.last_mid = m.mid AND d.did = m.uid LEFT JOIN dialog_settings as s ON d.did = s.did WHERE d.folder_id = %d ORDER BY d.pinned DESC, d.date DESC LIMIT %d,%d"
            r7 = 3
            r23 = r11
            java.lang.Object[] r11 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x0415, all -> 0x0411 }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x0415, all -> 0x0411 }
            r21 = 0
            r11[r21] = r0     // Catch:{ Exception -> 0x0415, all -> 0x0411 }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r19)     // Catch:{ Exception -> 0x0415, all -> 0x0411 }
            r19 = 1
            r11[r19] = r0     // Catch:{ Exception -> 0x0415, all -> 0x0411 }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r17)     // Catch:{ Exception -> 0x0415, all -> 0x0411 }
            r16 = 2
            r11[r16] = r0     // Catch:{ Exception -> 0x0415, all -> 0x0411 }
            java.lang.String r0 = java.lang.String.format(r13, r14, r11)     // Catch:{ Exception -> 0x0415, all -> 0x0411 }
            r11 = 0
            java.lang.Object[] r13 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x0415, all -> 0x0411 }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r0, r13)     // Catch:{ Exception -> 0x0415, all -> 0x0411 }
        L_0x009b:
            boolean r0 = r5.next()     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            if (r0 == 0) goto L_0x02c6
            long r13 = r5.longValue(r11)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            boolean r0 = org.telegram.messenger.DialogObject.isFolderDialogId(r13)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            if (r0 == 0) goto L_0x00ef
            org.telegram.tgnet.TLRPC$TL_dialogFolder r0 = new org.telegram.tgnet.TLRPC$TL_dialogFolder     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r0.<init>()     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r11 = 18
            boolean r17 = r5.isNull(r11)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            if (r17 != 0) goto L_0x00df
            org.telegram.tgnet.NativeByteBuffer r11 = r5.byteBufferValue(r11)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            if (r11 == 0) goto L_0x00cf
            r19 = r2
            r7 = 0
            int r2 = r11.readInt32(r7)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            org.telegram.tgnet.TLRPC$TL_folder r2 = org.telegram.tgnet.TLRPC$TL_folder.TLdeserialize(r11, r2, r7)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r0.folder = r2     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r11.reuse()     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            goto L_0x00e1
        L_0x00cf:
            r19 = r2
            org.telegram.tgnet.TLRPC$TL_folder r2 = new org.telegram.tgnet.TLRPC$TL_folder     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r2.<init>()     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r0.folder = r2     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            int r7 = org.telegram.messenger.DialogObject.getFolderId(r13)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r2.id = r7     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            goto L_0x00e1
        L_0x00df:
            r19 = r2
        L_0x00e1:
            if (r6 != 0) goto L_0x00f6
            org.telegram.tgnet.TLRPC$TL_folder r2 = r0.folder     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            int r2 = r2.id     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r4.add(r2)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            goto L_0x00f6
        L_0x00ef:
            r19 = r2
            org.telegram.tgnet.TLRPC$TL_dialog r0 = new org.telegram.tgnet.TLRPC$TL_dialog     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r0.<init>()     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
        L_0x00f6:
            r2 = r0
            r2.id = r13     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r7 = 1
            int r0 = r5.intValue(r7)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r2.top_message = r0     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r7 = 2
            int r0 = r5.intValue(r7)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r2.unread_count = r0     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r11 = 3
            int r0 = r5.intValue(r11)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r2.last_message_date = r0     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r0 = 10
            int r0 = r5.intValue(r0)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r2.pts = r0     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            if (r0 == 0) goto L_0x0125
            r16 = r12
            long r11 = r2.id     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            boolean r0 = org.telegram.messenger.DialogObject.isUserDialog(r11)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            if (r0 == 0) goto L_0x0123
            goto L_0x0127
        L_0x0123:
            r0 = 1
            goto L_0x0128
        L_0x0125:
            r16 = r12
        L_0x0127:
            r0 = 0
        L_0x0128:
            r2.flags = r0     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r0 = 11
            int r0 = r5.intValue(r0)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r2.read_inbox_max_id = r0     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r0 = 12
            int r0 = r5.intValue(r0)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r2.read_outbox_max_id = r0     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r0 = 14
            int r0 = r5.intValue(r0)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r2.pinnedNum = r0     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            if (r0 == 0) goto L_0x0146
            r0 = 1
            goto L_0x0147
        L_0x0146:
            r0 = 0
        L_0x0147:
            r2.pinned = r0     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r0 = 15
            int r0 = r5.intValue(r0)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r2.unread_mentions_count = r0     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r0 = 16
            int r0 = r5.intValue(r0)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r11 = 1
            r0 = r0 & r11
            if (r0 == 0) goto L_0x015d
            r0 = 1
            goto L_0x015e
        L_0x015d:
            r0 = 0
        L_0x015e:
            r2.unread_mark = r0     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r0 = 8
            long r11 = r5.longValue(r0)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            int r0 = (int) r11     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            org.telegram.tgnet.TLRPC$TL_peerNotifySettings r7 = new org.telegram.tgnet.TLRPC$TL_peerNotifySettings     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r7.<init>()     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r2.notify_settings = r7     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r20 = 1
            r0 = r0 & 1
            if (r0 == 0) goto L_0x0181
            r0 = 32
            long r11 = r11 >> r0
            int r0 = (int) r11     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r7.mute_until = r0     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            if (r0 != 0) goto L_0x0181
            r0 = 2147483647(0x7fffffff, float:NaN)
            r7.mute_until = r0     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
        L_0x0181:
            r0 = 17
            int r0 = r5.intValue(r0)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r2.folder_id = r0     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r0 = 19
            int r0 = r5.intValue(r0)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r2.unread_reactions_count = r0     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r0 = r15.dialogs     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r0.add(r2)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            if (r8 == 0) goto L_0x01a2
            java.lang.Long r0 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r7 = r16
            r7.add(r0)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            goto L_0x01a4
        L_0x01a2:
            r7 = r16
        L_0x01a4:
            r0 = 4
            org.telegram.tgnet.NativeByteBuffer r0 = r5.byteBufferValue(r0)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            if (r0 == 0) goto L_0x0256
            r11 = 0
            int r12 = r0.readInt32(r11)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            org.telegram.tgnet.TLRPC$Message r12 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r0, r12, r11)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            if (r12 == 0) goto L_0x024d
            org.telegram.messenger.UserConfig r11 = r24.getUserConfig()     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r16 = r7
            long r7 = r11.clientUserId     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r12.readAttachPath(r0, r7)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r0.reuse()     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r0 = 5
            int r0 = r5.intValue(r0)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            org.telegram.messenger.MessageObject.setUnreadFlags(r12, r0)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r0 = 6
            int r0 = r5.intValue(r0)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r12.id = r0     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r0 = 9
            int r0 = r5.intValue(r0)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            if (r0 == 0) goto L_0x01dd
            r2.last_message_date = r0     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
        L_0x01dd:
            r0 = 7
            int r0 = r5.intValue(r0)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r12.send_state = r0     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            long r7 = r2.id     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r12.dialog_id = r7     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r0 = r15.messages     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r0.add(r12)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            addUsersAndChatsFromMessage(r12, r9, r10, r1)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r0 = r12.reply_to     // Catch:{ Exception -> 0x0245, all -> 0x02df }
            if (r0 == 0) goto L_0x0243
            int r0 = r0.reply_to_msg_id     // Catch:{ Exception -> 0x0245, all -> 0x02df }
            if (r0 == 0) goto L_0x0243
            org.telegram.tgnet.TLRPC$MessageAction r0 = r12.action     // Catch:{ Exception -> 0x0245, all -> 0x02df }
            boolean r7 = r0 instanceof org.telegram.tgnet.TLRPC$TL_messageActionPinMessage     // Catch:{ Exception -> 0x0245, all -> 0x02df }
            if (r7 != 0) goto L_0x0206
            boolean r7 = r0 instanceof org.telegram.tgnet.TLRPC$TL_messageActionPaymentSent     // Catch:{ Exception -> 0x0245, all -> 0x02df }
            if (r7 != 0) goto L_0x0206
            boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC$TL_messageActionGameScore     // Catch:{ Exception -> 0x0245, all -> 0x02df }
            if (r0 == 0) goto L_0x0243
        L_0x0206:
            r0 = 13
            boolean r7 = r5.isNull(r0)     // Catch:{ Exception -> 0x0245, all -> 0x02df }
            if (r7 != 0) goto L_0x0234
            org.telegram.tgnet.NativeByteBuffer r0 = r5.byteBufferValue(r0)     // Catch:{ Exception -> 0x0245, all -> 0x02df }
            if (r0 == 0) goto L_0x0234
            r7 = 0
            int r8 = r0.readInt32(r7)     // Catch:{ Exception -> 0x0245, all -> 0x02df }
            org.telegram.tgnet.TLRPC$Message r8 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r0, r8, r7)     // Catch:{ Exception -> 0x0245, all -> 0x02df }
            r12.replyMessage = r8     // Catch:{ Exception -> 0x0245, all -> 0x02df }
            org.telegram.messenger.UserConfig r7 = r24.getUserConfig()     // Catch:{ Exception -> 0x0245, all -> 0x02df }
            r11 = r6
            long r6 = r7.clientUserId     // Catch:{ Exception -> 0x0241, all -> 0x02df }
            r8.readAttachPath(r0, r6)     // Catch:{ Exception -> 0x0241, all -> 0x02df }
            r0.reuse()     // Catch:{ Exception -> 0x0241, all -> 0x02df }
            org.telegram.tgnet.TLRPC$Message r0 = r12.replyMessage     // Catch:{ Exception -> 0x0241, all -> 0x02df }
            if (r0 == 0) goto L_0x0235
            addUsersAndChatsFromMessage(r0, r9, r10, r1)     // Catch:{ Exception -> 0x0241, all -> 0x02df }
            goto L_0x0235
        L_0x0234:
            r11 = r6
        L_0x0235:
            org.telegram.tgnet.TLRPC$Message r0 = r12.replyMessage     // Catch:{ Exception -> 0x0241, all -> 0x02df }
            if (r0 != 0) goto L_0x0259
            r6 = r19
            addReplyMessages(r12, r6, r3)     // Catch:{ Exception -> 0x023f, all -> 0x02df }
            goto L_0x025b
        L_0x023f:
            r0 = move-exception
            goto L_0x0249
        L_0x0241:
            r0 = move-exception
            goto L_0x0247
        L_0x0243:
            r11 = r6
            goto L_0x0259
        L_0x0245:
            r0 = move-exception
            r11 = r6
        L_0x0247:
            r6 = r19
        L_0x0249:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            goto L_0x025b
        L_0x024d:
            r11 = r6
            r16 = r7
            r6 = r19
            r0.reuse()     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            goto L_0x025b
        L_0x0256:
            r11 = r6
            r16 = r7
        L_0x0259:
            r6 = r19
        L_0x025b:
            boolean r0 = org.telegram.messenger.DialogObject.isEncryptedDialog(r13)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            if (r0 != 0) goto L_0x026a
            int r0 = r2.read_inbox_max_id     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            int r7 = r2.top_message     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            if (r0 <= r7) goto L_0x026a
            r7 = 0
            r2.read_inbox_max_id = r7     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
        L_0x026a:
            boolean r0 = org.telegram.messenger.DialogObject.isEncryptedDialog(r13)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            if (r0 == 0) goto L_0x0288
            int r0 = org.telegram.messenger.DialogObject.getEncryptedChatId(r13)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            java.lang.Integer r2 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r7 = r23
            boolean r2 = r7.contains(r2)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            if (r2 != 0) goto L_0x02ba
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r7.add(r0)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            goto L_0x02ba
        L_0x0288:
            r7 = r23
            boolean r0 = org.telegram.messenger.DialogObject.isUserDialog(r13)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            if (r0 == 0) goto L_0x02a2
            java.lang.Long r0 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            boolean r0 = r9.contains(r0)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            if (r0 != 0) goto L_0x02ba
            java.lang.Long r0 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r9.add(r0)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            goto L_0x02ba
        L_0x02a2:
            boolean r0 = org.telegram.messenger.DialogObject.isChatDialog(r13)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            if (r0 == 0) goto L_0x02ba
            long r12 = -r13
            java.lang.Long r0 = java.lang.Long.valueOf(r12)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            boolean r0 = r10.contains(r0)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            if (r0 != 0) goto L_0x02ba
            java.lang.Long r0 = java.lang.Long.valueOf(r12)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            r10.add(r0)     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
        L_0x02ba:
            r8 = r28
            r2 = r6
            r23 = r7
            r6 = r11
            r12 = r16
            r7 = 3
            r11 = 0
            goto L_0x009b
        L_0x02c6:
            r11 = r6
            r16 = r12
            r7 = r23
            r6 = r2
            r5.dispose()     // Catch:{ Exception -> 0x02e6, all -> 0x02df }
            int r0 = r11 + 1
            r8 = r28
            r2 = r6
            r11 = r7
            r12 = r16
            r14 = r22
            r5 = 2
            r7 = r24
            r6 = r0
            goto L_0x0050
        L_0x02df:
            r0 = move-exception
            r3 = r24
            r18 = r5
            goto L_0x0453
        L_0x02e6:
            r0 = move-exception
            r3 = r24
            r18 = r5
            goto L_0x0418
        L_0x02ed:
            r0 = move-exception
            r3 = r24
            goto L_0x0421
        L_0x02f2:
            r6 = r2
            r7 = r11
            r16 = r12
            r22 = r14
            r20 = 1
            r0 = 0
            r1 = r24
            r4 = r9
            r8 = 1
            r5 = r10
            r6 = r0
            r1.loadReplyMessages(r2, r3, r4, r5, r6)     // Catch:{ Exception -> 0x0415, all -> 0x0411 }
            java.lang.String r0 = ","
            r1 = r28
            if (r1 == 0) goto L_0x03bf
            java.util.ArrayList r2 = new java.util.ArrayList     // Catch:{ Exception -> 0x0415, all -> 0x0411 }
            r2.<init>()     // Catch:{ Exception -> 0x0415, all -> 0x0411 }
            r3 = 0
        L_0x0310:
            int r4 = r1.length     // Catch:{ Exception -> 0x0415, all -> 0x0411 }
            if (r3 >= r4) goto L_0x0364
            r4 = r1[r3]     // Catch:{ Exception -> 0x0415, all -> 0x0411 }
            boolean r6 = org.telegram.messenger.DialogObject.isEncryptedDialog(r4)     // Catch:{ Exception -> 0x0415, all -> 0x0411 }
            if (r6 == 0) goto L_0x031e
            r5 = r16
            goto L_0x035f
        L_0x031e:
            r11 = 0
            int r6 = (r4 > r11 ? 1 : (r4 == r11 ? 0 : -1))
            if (r6 <= 0) goto L_0x0336
            java.lang.Long r6 = java.lang.Long.valueOf(r4)     // Catch:{ Exception -> 0x0415, all -> 0x0411 }
            boolean r6 = r9.contains(r6)     // Catch:{ Exception -> 0x0415, all -> 0x0411 }
            if (r6 != 0) goto L_0x0348
            java.lang.Long r4 = java.lang.Long.valueOf(r4)     // Catch:{ Exception -> 0x0415, all -> 0x0411 }
            r9.add(r4)     // Catch:{ Exception -> 0x0415, all -> 0x0411 }
            goto L_0x0348
        L_0x0336:
            long r4 = -r4
            java.lang.Long r6 = java.lang.Long.valueOf(r4)     // Catch:{ Exception -> 0x0415, all -> 0x0411 }
            boolean r6 = r10.contains(r6)     // Catch:{ Exception -> 0x0415, all -> 0x0411 }
            if (r6 != 0) goto L_0x0348
            java.lang.Long r4 = java.lang.Long.valueOf(r4)     // Catch:{ Exception -> 0x0415, all -> 0x0411 }
            r10.add(r4)     // Catch:{ Exception -> 0x0415, all -> 0x0411 }
        L_0x0348:
            r4 = r1[r3]     // Catch:{ Exception -> 0x0415, all -> 0x0411 }
            java.lang.Long r4 = java.lang.Long.valueOf(r4)     // Catch:{ Exception -> 0x0415, all -> 0x0411 }
            r5 = r16
            boolean r4 = r5.contains(r4)     // Catch:{ Exception -> 0x0415, all -> 0x0411 }
            if (r4 != 0) goto L_0x035f
            r11 = r1[r3]     // Catch:{ Exception -> 0x0415, all -> 0x0411 }
            java.lang.Long r4 = java.lang.Long.valueOf(r11)     // Catch:{ Exception -> 0x0415, all -> 0x0411 }
            r2.add(r4)     // Catch:{ Exception -> 0x0415, all -> 0x0411 }
        L_0x035f:
            int r3 = r3 + 1
            r16 = r5
            goto L_0x0310
        L_0x0364:
            boolean r1 = r2.isEmpty()     // Catch:{ Exception -> 0x0415, all -> 0x0411 }
            if (r1 != 0) goto L_0x03b2
            androidx.collection.LongSparseArray r1 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x0415, all -> 0x0411 }
            int r3 = r2.size()     // Catch:{ Exception -> 0x0415, all -> 0x0411 }
            r1.<init>(r3)     // Catch:{ Exception -> 0x0415, all -> 0x0411 }
            r3 = r24
            org.telegram.SQLite.SQLiteDatabase r4 = r3.database     // Catch:{ Exception -> 0x040f }
            java.util.Locale r5 = java.util.Locale.US     // Catch:{ Exception -> 0x040f }
            java.lang.String r6 = "SELECT did, folder_id FROM dialogs WHERE did IN(%s)"
            java.lang.Object[] r11 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x040f }
            java.lang.String r2 = android.text.TextUtils.join(r0, r2)     // Catch:{ Exception -> 0x040f }
            r12 = 0
            r11[r12] = r2     // Catch:{ Exception -> 0x040f }
            java.lang.String r2 = java.lang.String.format(r5, r6, r11)     // Catch:{ Exception -> 0x040f }
            java.lang.Object[] r5 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x040f }
            org.telegram.SQLite.SQLiteCursor r2 = r4.queryFinalized(r2, r5)     // Catch:{ Exception -> 0x040f }
        L_0x038e:
            boolean r4 = r2.next()     // Catch:{ Exception -> 0x03ad, all -> 0x03a8 }
            if (r4 == 0) goto L_0x03a4
            long r4 = r2.longValue(r12)     // Catch:{ Exception -> 0x03ad, all -> 0x03a8 }
            int r6 = r2.intValue(r8)     // Catch:{ Exception -> 0x03ad, all -> 0x03a8 }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x03ad, all -> 0x03a8 }
            r1.put(r4, r6)     // Catch:{ Exception -> 0x03ad, all -> 0x03a8 }
            goto L_0x038e
        L_0x03a4:
            r2.dispose()     // Catch:{ Exception -> 0x03ad, all -> 0x03a8 }
            goto L_0x03b6
        L_0x03a8:
            r0 = move-exception
            r18 = r2
            goto L_0x0453
        L_0x03ad:
            r0 = move-exception
            r18 = r2
            goto L_0x0418
        L_0x03b2:
            r3 = r24
            r1 = r18
        L_0x03b6:
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda117 r2 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda117     // Catch:{ Exception -> 0x040f }
            r2.<init>(r3, r1)     // Catch:{ Exception -> 0x040f }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r2)     // Catch:{ Exception -> 0x040f }
            goto L_0x03c1
        L_0x03bf:
            r3 = r24
        L_0x03c1:
            boolean r1 = r7.isEmpty()     // Catch:{ Exception -> 0x040f }
            if (r1 != 0) goto L_0x03d1
            java.lang.String r1 = android.text.TextUtils.join(r0, r7)     // Catch:{ Exception -> 0x040f }
            r2 = r22
            r3.getEncryptedChatsInternal(r1, r2, r9)     // Catch:{ Exception -> 0x040c }
            goto L_0x03d3
        L_0x03d1:
            r2 = r22
        L_0x03d3:
            boolean r1 = r10.isEmpty()     // Catch:{ Exception -> 0x040c }
            if (r1 != 0) goto L_0x03e2
            java.lang.String r1 = android.text.TextUtils.join(r0, r10)     // Catch:{ Exception -> 0x040c }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r4 = r15.chats     // Catch:{ Exception -> 0x040c }
            r3.getChatsInternal(r1, r4)     // Catch:{ Exception -> 0x040c }
        L_0x03e2:
            boolean r1 = r9.isEmpty()     // Catch:{ Exception -> 0x040c }
            if (r1 != 0) goto L_0x03f1
            java.lang.String r0 = android.text.TextUtils.join(r0, r9)     // Catch:{ Exception -> 0x040c }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r1 = r15.users     // Catch:{ Exception -> 0x040c }
            r3.getUsersInternal(r0, r1)     // Catch:{ Exception -> 0x040c }
        L_0x03f1:
            org.telegram.messenger.MessagesController r8 = r24.getMessagesController()     // Catch:{ Exception -> 0x040c }
            r14 = 1
            r0 = 0
            r16 = 0
            r17 = 1
            r9 = r15
            r10 = r2
            r11 = r25
            r12 = r26
            r13 = r27
            r1 = r2
            r2 = r15
            r15 = r0
            r8.processLoadedDialogs(r9, r10, r11, r12, r13, r14, r15, r16, r17)     // Catch:{ Exception -> 0x040a }
            goto L_0x0451
        L_0x040a:
            r0 = move-exception
            goto L_0x0423
        L_0x040c:
            r0 = move-exception
            r1 = r2
            goto L_0x0422
        L_0x040f:
            r0 = move-exception
            goto L_0x0418
        L_0x0411:
            r0 = move-exception
            r3 = r24
            goto L_0x0453
        L_0x0415:
            r0 = move-exception
            r3 = r24
        L_0x0418:
            r2 = r15
            r1 = r22
            goto L_0x0423
        L_0x041c:
            r0 = move-exception
            r3 = r7
            goto L_0x0453
        L_0x041f:
            r0 = move-exception
            r3 = r7
        L_0x0421:
            r1 = r14
        L_0x0422:
            r2 = r15
        L_0x0423:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r4 = r2.dialogs     // Catch:{ all -> 0x0452 }
            r4.clear()     // Catch:{ all -> 0x0452 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r4 = r2.users     // Catch:{ all -> 0x0452 }
            r4.clear()     // Catch:{ all -> 0x0452 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r4 = r2.chats     // Catch:{ all -> 0x0452 }
            r4.clear()     // Catch:{ all -> 0x0452 }
            r1.clear()     // Catch:{ all -> 0x0452 }
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0452 }
            org.telegram.messenger.MessagesController r8 = r24.getMessagesController()     // Catch:{ all -> 0x0452 }
            r12 = 0
            r13 = 100
            r14 = 1
            r15 = 1
            r16 = 0
            r17 = 1
            r9 = r2
            r10 = r1
            r11 = r25
            r8.processLoadedDialogs(r9, r10, r11, r12, r13, r14, r15, r16, r17)     // Catch:{ all -> 0x0452 }
            if (r18 == 0) goto L_0x0451
            r18.dispose()
        L_0x0451:
            return
        L_0x0452:
            r0 = move-exception
        L_0x0453:
            if (r18 == 0) goto L_0x0458
            r18.dispose()
        L_0x0458:
            goto L_0x045a
        L_0x0459:
            throw r0
        L_0x045a:
            goto L_0x0459
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$getDialogs$180(int, int, int, long[]):void");
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$getDialogs$179(LongSparseArray longSparseArray) {
        MediaDataController mediaDataController = getMediaDataController();
        mediaDataController.clearDraftsFolderIds();
        if (longSparseArray != null) {
            int size = longSparseArray.size();
            for (int i = 0; i < size; i++) {
                mediaDataController.setDraftFolderId(longSparseArray.keyAt(i), ((Integer) longSparseArray.valueAt(i)).intValue());
            }
        }
    }

    public static void createFirstHoles(long j, SQLitePreparedStatement sQLitePreparedStatement, SQLitePreparedStatement sQLitePreparedStatement2, int i) throws Exception {
        sQLitePreparedStatement.requery();
        sQLitePreparedStatement.bindLong(1, j);
        sQLitePreparedStatement.bindInteger(2, i == 1 ? 1 : 0);
        sQLitePreparedStatement.bindInteger(3, i);
        sQLitePreparedStatement.step();
        for (int i2 = 0; i2 < 8; i2++) {
            sQLitePreparedStatement2.requery();
            sQLitePreparedStatement2.bindLong(1, j);
            sQLitePreparedStatement2.bindInteger(2, i2);
            sQLitePreparedStatement2.bindInteger(3, i == 1 ? 1 : 0);
            sQLitePreparedStatement2.bindInteger(4, i);
            sQLitePreparedStatement2.step();
        }
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v0, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v0, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v0, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v0, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v0, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v0, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v0, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v1, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v1, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v1, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v1, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v1, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v1, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v1, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v1, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v2, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v2, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v2, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v2, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v2, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v2, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v2, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v2, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v3, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v3, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v3, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v3, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v3, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v3, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v3, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v4, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v3, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v5, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v4, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v4, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v4, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v4, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v4, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v4, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v5, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v5, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v5, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v5, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v5, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v5, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v6, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v4, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v7, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v6, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v6, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v6, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v6, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v6, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v7, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v8, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v12, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v7, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v7, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v8, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v7, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v7, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v3, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v9, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v8, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v9, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v8, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v4, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v15, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v9, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v10, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v9, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v10, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v8, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v8, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v5, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v11, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v10, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v11, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v10, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v6, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v18, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v9, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v15, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v9, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v11, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v12, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v11, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v12, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v5, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v10, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v10, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v12, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v13, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v12, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v13, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v16, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v11, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v14, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v13, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v14, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v13, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v11, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v12, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v17, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v12, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v14, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v15, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v14, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v15, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v6, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v13, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v13, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v15, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v16, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v15, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v16, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v18, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v14, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v17, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v16, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v17, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v16, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v14, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v25, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v17, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v15, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v18, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v17, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v18, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v15, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v16, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v19, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v18, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v19, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v16, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v28, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v17, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v20, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v19, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v20, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v19, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v18, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v21, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v20, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v21, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v20, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v31, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v13, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v7, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v19, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v21, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v22, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v22, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v21, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v20, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v8, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v23, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v22, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v9, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v21, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v23, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v24, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v23, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v22, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v22, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v10, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v25, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v24, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v36, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v26, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v11, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v25, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v27, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v24, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v12, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v26, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v23, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v24, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v24, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v18, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v5, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v25, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v25, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v29, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v6, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v13, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v27, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v30, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v7, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v26, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v26, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v27, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v27, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v31, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v14, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v28, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v32, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v9, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v28, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v29, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v29, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v33, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v10, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v31, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v30, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v32, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v31, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v33, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v18, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v32, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v18, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v34, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v19, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v33, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v19, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v35, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v20, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v18, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v34, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v20, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v36, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v21, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v19, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v35, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v37, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v34, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v22, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v38, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v39, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v35, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v23, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v40, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v36, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v41, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v37, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v42, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v36, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v37, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v38, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v21, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v36, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v25, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v30, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v38, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v43, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v37, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v26, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v31, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v39, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v11, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v22, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v32, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v40, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v12, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v33, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v23, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v38, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v27, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v34, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v41, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v44, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v39, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v28, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v35, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v42, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v13, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v24, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v36, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v43, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v14, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v37, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v47, resolved type: org.telegram.tgnet.TLRPC$Dialog} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v38, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v40, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v29, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v44, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v15, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v39, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v0, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v25, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v48, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v46, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v1, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v26, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v49, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v47, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v2, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v27, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v41, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v30, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v48, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v42, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v49, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v43, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v31, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v50, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v44, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v51, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v45, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v32, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v52, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v23, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v24, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v53, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v46, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v47, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v48, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v49, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v50, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v51, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v33, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v68, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v34, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v69, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v35, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v70, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v36, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v71, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v37, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v72, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v73, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v75, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v76, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v52, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v39, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v77, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v53, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v52, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v53, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v54, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v55, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v56, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v57, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v57, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v58, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v4, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v28, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v58, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v5, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v29, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v59, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v6, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v30, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v7, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v31, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v60, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v89, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v8, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v32, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v61, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v9, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v33, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v62, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v90, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v10, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v34, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v63, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v11, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v35, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v59, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v12, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v36, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v60, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v13, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v37, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v75, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v91, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v14, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v38, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v15, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v39, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v16, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v40, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v92, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v61, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v40, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v24, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v20, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v41, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v64, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v41, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v93, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v62, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v41, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r14v25, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v21, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v42, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v65, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r20v42, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v78, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v79, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v43, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v45, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v90, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v91, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v92, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v93, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v94, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v95, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v46, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v47, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v98, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v99, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v100, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v101, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v104, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v105, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v106, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v107, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v110, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v111, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v114, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v115, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v118, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v119, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v122, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v123, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v125, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v126, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v129, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v130, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX WARNING: type inference failed for: r10v51, types: [org.telegram.tgnet.TLRPC$Dialog] */
    /* JADX WARNING: type inference failed for: r10v54 */
    /* JADX WARNING: type inference failed for: r10v56, types: [org.telegram.tgnet.TLRPC$Dialog] */
    /* JADX WARNING: type inference failed for: r10v65 */
    /* JADX WARNING: Code restructure failed: missing block: B:45:0x00d9, code lost:
        if (r4 != false) goto L_0x00db;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:84:0x016c, code lost:
        if (r4 < 0) goto L_0x00db;
     */
    /* JADX WARNING: Failed to insert additional move for type inference */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:121:0x0209 A[SYNTHETIC, Splitter:B:121:0x0209] */
    /* JADX WARNING: Removed duplicated region for block: B:123:0x020c  */
    /* JADX WARNING: Removed duplicated region for block: B:128:0x0216 A[Catch:{ Exception -> 0x03ac, all -> 0x03a7 }] */
    /* JADX WARNING: Removed duplicated region for block: B:130:0x021a A[Catch:{ Exception -> 0x03ac, all -> 0x03a7 }] */
    /* JADX WARNING: Removed duplicated region for block: B:136:0x0228 A[Catch:{ Exception -> 0x03ac, all -> 0x03a7 }] */
    /* JADX WARNING: Removed duplicated region for block: B:137:0x022a A[Catch:{ Exception -> 0x03ac, all -> 0x03a7 }] */
    /* JADX WARNING: Removed duplicated region for block: B:140:0x023b A[SYNTHETIC, Splitter:B:140:0x023b] */
    /* JADX WARNING: Removed duplicated region for block: B:143:0x0252  */
    /* JADX WARNING: Removed duplicated region for block: B:148:0x025c A[SYNTHETIC, Splitter:B:148:0x025c] */
    /* JADX WARNING: Removed duplicated region for block: B:154:0x0269  */
    /* JADX WARNING: Removed duplicated region for block: B:159:0x0283 A[SYNTHETIC, Splitter:B:159:0x0283] */
    /* JADX WARNING: Removed duplicated region for block: B:168:0x02b6 A[Catch:{ Exception -> 0x013c, all -> 0x013a }] */
    /* JADX WARNING: Removed duplicated region for block: B:170:0x02bd A[Catch:{ Exception -> 0x013c, all -> 0x013a }] */
    /* JADX WARNING: Removed duplicated region for block: B:174:0x02c7 A[SYNTHETIC, Splitter:B:174:0x02c7] */
    /* JADX WARNING: Removed duplicated region for block: B:185:0x0308  */
    /* JADX WARNING: Removed duplicated region for block: B:200:0x0353  */
    /* JADX WARNING: Removed duplicated region for block: B:202:0x0356  */
    /* JADX WARNING: Removed duplicated region for block: B:208:0x037a A[Catch:{ Exception -> 0x0391, all -> 0x038f }] */
    /* JADX WARNING: Removed duplicated region for block: B:224:0x03b7  */
    /* JADX WARNING: Removed duplicated region for block: B:228:0x0412  */
    /* JADX WARNING: Removed duplicated region for block: B:233:0x0430  */
    /* JADX WARNING: Removed duplicated region for block: B:238:0x0442 A[SYNTHETIC, Splitter:B:238:0x0442] */
    /* JADX WARNING: Removed duplicated region for block: B:243:0x0449 A[Catch:{ Exception -> 0x047d, all -> 0x0479 }] */
    /* JADX WARNING: Removed duplicated region for block: B:253:0x046a  */
    /* JADX WARNING: Removed duplicated region for block: B:386:0x0646  */
    /* JADX WARNING: Removed duplicated region for block: B:388:0x064b  */
    /* JADX WARNING: Removed duplicated region for block: B:390:0x0650  */
    /* JADX WARNING: Removed duplicated region for block: B:392:0x0655  */
    /* JADX WARNING: Removed duplicated region for block: B:394:0x065a  */
    /* JADX WARNING: Removed duplicated region for block: B:396:0x065f  */
    /* JADX WARNING: Removed duplicated region for block: B:398:0x0664  */
    /* JADX WARNING: Removed duplicated region for block: B:400:0x0669  */
    /* JADX WARNING: Removed duplicated region for block: B:402:0x066e  */
    /* JADX WARNING: Removed duplicated region for block: B:409:0x0680  */
    /* JADX WARNING: Removed duplicated region for block: B:411:0x0685  */
    /* JADX WARNING: Removed duplicated region for block: B:413:0x068a  */
    /* JADX WARNING: Removed duplicated region for block: B:415:0x068f  */
    /* JADX WARNING: Removed duplicated region for block: B:417:0x0694  */
    /* JADX WARNING: Removed duplicated region for block: B:419:0x0699  */
    /* JADX WARNING: Removed duplicated region for block: B:421:0x069e  */
    /* JADX WARNING: Removed duplicated region for block: B:423:0x06a3  */
    /* JADX WARNING: Removed duplicated region for block: B:425:0x06a8  */
    /* JADX WARNING: Removed duplicated region for block: B:427:0x06ad  */
    /* JADX WARNING: Removed duplicated region for block: B:435:? A[RETURN, SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:89:0x017c A[SYNTHETIC, Splitter:B:89:0x017c] */
    /* JADX WARNING: Unknown variable types count: 2 */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void putDialogsInternal(org.telegram.tgnet.TLRPC$messages_Dialogs r25, int r26) {
        /*
            r24 = this;
            r7 = r24
            r8 = r25
            r9 = r26
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x062d, all -> 0x061d }
            r1.beginTransaction()     // Catch:{ Exception -> 0x062d, all -> 0x061d }
            androidx.collection.LongSparseArray r11 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x062d, all -> 0x061d }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r8.messages     // Catch:{ Exception -> 0x062d, all -> 0x061d }
            int r1 = r1.size()     // Catch:{ Exception -> 0x062d, all -> 0x061d }
            r11.<init>(r1)     // Catch:{ Exception -> 0x062d, all -> 0x061d }
            r1 = 0
        L_0x0017:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r2 = r8.messages     // Catch:{ Exception -> 0x062d, all -> 0x061d }
            int r2 = r2.size()     // Catch:{ Exception -> 0x062d, all -> 0x061d }
            if (r1 >= r2) goto L_0x0051
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r2 = r8.messages     // Catch:{ Exception -> 0x0041, all -> 0x0031 }
            java.lang.Object r2 = r2.get(r1)     // Catch:{ Exception -> 0x0041, all -> 0x0031 }
            org.telegram.tgnet.TLRPC$Message r2 = (org.telegram.tgnet.TLRPC$Message) r2     // Catch:{ Exception -> 0x0041, all -> 0x0031 }
            long r3 = org.telegram.messenger.MessageObject.getDialogId(r2)     // Catch:{ Exception -> 0x0041, all -> 0x0031 }
            r11.put(r3, r2)     // Catch:{ Exception -> 0x0041, all -> 0x0031 }
            int r1 = r1 + 1
            goto L_0x0017
        L_0x0031:
            r0 = move-exception
            r1 = r0
            r2 = 0
            r8 = 0
            r10 = 0
            r13 = 0
            r14 = 0
            r15 = 0
            r16 = 0
            r17 = 0
            r20 = 0
            goto L_0x0679
        L_0x0041:
            r0 = move-exception
            r1 = r0
            r2 = 0
            r8 = 0
            r10 = 0
            r13 = 0
            r14 = 0
            r15 = 0
            r16 = 0
            r17 = 0
            r20 = 0
            goto L_0x063c
        L_0x0051:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r1 = r8.dialogs     // Catch:{ Exception -> 0x062d, all -> 0x061d }
            boolean r1 = r1.isEmpty()     // Catch:{ Exception -> 0x062d, all -> 0x061d }
            if (r1 != 0) goto L_0x05e2
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x062d, all -> 0x061d }
            java.lang.String r2 = "REPLACE INTO messages_v2 VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?, ?, ?, ?, ?, ?, 0, NULL)"
            org.telegram.SQLite.SQLitePreparedStatement r13 = r1.executeFast(r2)     // Catch:{ Exception -> 0x062d, all -> 0x061d }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x05d1, all -> 0x05c0 }
            java.lang.String r2 = "REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r14 = r1.executeFast(r2)     // Catch:{ Exception -> 0x05d1, all -> 0x05c0 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x05b5, all -> 0x05aa }
            java.lang.String r2 = "REPLACE INTO media_v4 VALUES(?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r15 = r1.executeFast(r2)     // Catch:{ Exception -> 0x05b5, all -> 0x05aa }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x059e, all -> 0x0592 }
            java.lang.String r2 = "REPLACE INTO dialog_settings VALUES(?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r6 = r1.executeFast(r2)     // Catch:{ Exception -> 0x059e, all -> 0x0592 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0582, all -> 0x0572 }
            java.lang.String r2 = "REPLACE INTO messages_holes VALUES(?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r5 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0582, all -> 0x0572 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0566, all -> 0x055a }
            java.lang.String r2 = "REPLACE INTO media_holes_v2 VALUES(?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r3 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0566, all -> 0x055a }
            r1 = 2147483647(0x7fffffff, float:NaN)
            r2 = 0
            r4 = 0
            r16 = 0
        L_0x0090:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r10 = r8.dialogs     // Catch:{ Exception -> 0x054d, all -> 0x0540 }
            int r10 = r10.size()     // Catch:{ Exception -> 0x054d, all -> 0x0540 }
            r17 = r13
            if (r4 >= r10) goto L_0x04a7
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r10 = r8.dialogs     // Catch:{ Exception -> 0x049d, all -> 0x0493 }
            java.lang.Object r10 = r10.get(r4)     // Catch:{ Exception -> 0x049d, all -> 0x0493 }
            org.telegram.tgnet.TLRPC$Dialog r10 = (org.telegram.tgnet.TLRPC$Dialog) r10     // Catch:{ Exception -> 0x049d, all -> 0x0493 }
            org.telegram.messenger.DialogObject.initDialog(r10)     // Catch:{ Exception -> 0x049d, all -> 0x0493 }
            androidx.collection.LongSparseArray<java.lang.Boolean> r12 = r7.unknownDialogsIds     // Catch:{ Exception -> 0x049d, all -> 0x0493 }
            r13 = r3
            r18 = r4
            long r3 = r10.id     // Catch:{ Exception -> 0x0491, all -> 0x048f }
            r12.remove(r3)     // Catch:{ Exception -> 0x0491, all -> 0x048f }
            r4 = 1
            if (r9 != r4) goto L_0x00ff
            org.telegram.SQLite.SQLiteDatabase r4 = r7.database     // Catch:{ Exception -> 0x00f5, all -> 0x00eb }
            java.lang.StringBuilder r12 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x00f5, all -> 0x00eb }
            r12.<init>()     // Catch:{ Exception -> 0x00f5, all -> 0x00eb }
            java.lang.String r3 = "SELECT did FROM dialogs WHERE did = "
            r12.append(r3)     // Catch:{ Exception -> 0x00f5, all -> 0x00eb }
            r21 = r5
            r20 = r6
            long r5 = r10.id     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            r12.append(r5)     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            java.lang.String r3 = r12.toString()     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            r5 = 0
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            org.telegram.SQLite.SQLiteCursor r3 = r4.queryFinalized(r3, r6)     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            boolean r4 = r3.next()     // Catch:{ Exception -> 0x00e6, all -> 0x00e1 }
            r3.dispose()     // Catch:{ Exception -> 0x00e6, all -> 0x00e1 }
            if (r4 == 0) goto L_0x0171
        L_0x00db:
            r5 = r20
            r8 = r21
            goto L_0x046c
        L_0x00e1:
            r0 = move-exception
            r1 = r0
            r10 = r3
            goto L_0x0198
        L_0x00e6:
            r0 = move-exception
            r1 = r0
            r10 = r3
            goto L_0x01a1
        L_0x00eb:
            r0 = move-exception
            r21 = r5
            r20 = r6
        L_0x00f0:
            r1 = r0
        L_0x00f1:
            r8 = r21
            goto L_0x049a
        L_0x00f5:
            r0 = move-exception
            r21 = r5
            r20 = r6
        L_0x00fa:
            r1 = r0
        L_0x00fb:
            r8 = r21
            goto L_0x04a4
        L_0x00ff:
            r21 = r5
            r20 = r6
            r3 = 2
            if (r9 != r3) goto L_0x013e
            org.telegram.SQLite.SQLiteDatabase r3 = r7.database     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            java.lang.StringBuilder r4 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            r4.<init>()     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            java.lang.String r5 = "SELECT pinned FROM dialogs WHERE did = "
            r4.append(r5)     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            long r5 = r10.id     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            r4.append(r5)     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            java.lang.String r4 = r4.toString()     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            r5 = 0
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            org.telegram.SQLite.SQLiteCursor r3 = r3.queryFinalized(r4, r6)     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            boolean r4 = r3.next()     // Catch:{ Exception -> 0x00e6, all -> 0x00e1 }
            if (r4 == 0) goto L_0x0135
            boolean r4 = r10.pinned     // Catch:{ Exception -> 0x00e6, all -> 0x00e1 }
            if (r4 == 0) goto L_0x0133
            r4 = 0
            int r5 = r3.intValue(r4)     // Catch:{ Exception -> 0x00e6, all -> 0x00e1 }
            r10.pinnedNum = r5     // Catch:{ Exception -> 0x00e6, all -> 0x00e1 }
        L_0x0133:
            r4 = 1
            goto L_0x0136
        L_0x0135:
            r4 = 0
        L_0x0136:
            r3.dispose()     // Catch:{ Exception -> 0x00e6, all -> 0x00e1 }
            goto L_0x0171
        L_0x013a:
            r0 = move-exception
            goto L_0x00f0
        L_0x013c:
            r0 = move-exception
            goto L_0x00fa
        L_0x013e:
            r3 = 3
            if (r9 != r3) goto L_0x0170
            org.telegram.SQLite.SQLiteDatabase r3 = r7.database     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            java.lang.StringBuilder r4 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            r4.<init>()     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            java.lang.String r5 = "SELECT last_mid FROM dialogs WHERE did = "
            r4.append(r5)     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            long r5 = r10.id     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            r4.append(r5)     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            java.lang.String r4 = r4.toString()     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            r5 = 0
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            org.telegram.SQLite.SQLiteCursor r3 = r3.queryFinalized(r4, r6)     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            boolean r4 = r3.next()     // Catch:{ Exception -> 0x00e6, all -> 0x00e1 }
            if (r4 == 0) goto L_0x0168
            int r4 = r3.intValue(r5)     // Catch:{ Exception -> 0x00e6, all -> 0x00e1 }
            goto L_0x0169
        L_0x0168:
            r4 = 0
        L_0x0169:
            r3.dispose()     // Catch:{ Exception -> 0x00e6, all -> 0x00e1 }
            if (r4 >= 0) goto L_0x0170
            goto L_0x00db
        L_0x0170:
            r4 = 0
        L_0x0171:
            long r5 = r10.id     // Catch:{ Exception -> 0x0488, all -> 0x0481 }
            java.lang.Object r3 = r11.get(r5)     // Catch:{ Exception -> 0x0488, all -> 0x0481 }
            r12 = r3
            org.telegram.tgnet.TLRPC$Message r12 = (org.telegram.tgnet.TLRPC$Message) r12     // Catch:{ Exception -> 0x0488, all -> 0x0481 }
            if (r12 == 0) goto L_0x03b7
            int r5 = r12.date     // Catch:{ Exception -> 0x03b4, all -> 0x03b1 }
            r3 = 0
            int r23 = java.lang.Math.max(r5, r3)     // Catch:{ Exception -> 0x03b4, all -> 0x03b1 }
            boolean r3 = r7.isValidKeyboardToSave(r12)     // Catch:{ Exception -> 0x03b4, all -> 0x03b1 }
            if (r3 == 0) goto L_0x01a5
            org.telegram.messenger.MediaDataController r3 = r24.getMediaDataController()     // Catch:{ Exception -> 0x019c, all -> 0x0193 }
            long r6 = r10.id     // Catch:{ Exception -> 0x019c, all -> 0x0193 }
            r3.putBotKeyboard(r6, r12)     // Catch:{ Exception -> 0x019c, all -> 0x0193 }
            goto L_0x01a5
        L_0x0193:
            r0 = move-exception
            r10 = 0
            r7 = r24
            r1 = r0
        L_0x0198:
            r8 = r21
            goto L_0x0679
        L_0x019c:
            r0 = move-exception
            r10 = 0
            r7 = r24
            r1 = r0
        L_0x01a1:
            r8 = r21
            goto L_0x063c
        L_0x01a5:
            r7 = r24
            r7.fixUnsupportedMedia(r12)     // Catch:{ Exception -> 0x03b4, all -> 0x03b1 }
            org.telegram.tgnet.NativeByteBuffer r3 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x03b4, all -> 0x03b1 }
            int r5 = r12.getObjectSize()     // Catch:{ Exception -> 0x03b4, all -> 0x03b1 }
            r3.<init>((int) r5)     // Catch:{ Exception -> 0x03b4, all -> 0x03b1 }
            r12.serializeToStream(r3)     // Catch:{ Exception -> 0x03b4, all -> 0x03b1 }
            r17.requery()     // Catch:{ Exception -> 0x03b4, all -> 0x03b1 }
            int r5 = r12.id     // Catch:{ Exception -> 0x03b4, all -> 0x03b1 }
            r6 = r17
            r9 = 1
            r6.bindInteger(r9, r5)     // Catch:{ Exception -> 0x03ac, all -> 0x03a7 }
            long r8 = r10.id     // Catch:{ Exception -> 0x03ac, all -> 0x03a7 }
            r5 = 2
            r6.bindLong(r5, r8)     // Catch:{ Exception -> 0x03ac, all -> 0x03a7 }
            int r5 = org.telegram.messenger.MessageObject.getUnreadFlags(r12)     // Catch:{ Exception -> 0x03ac, all -> 0x03a7 }
            r8 = 3
            r6.bindInteger(r8, r5)     // Catch:{ Exception -> 0x03ac, all -> 0x03a7 }
            int r5 = r12.send_state     // Catch:{ Exception -> 0x03ac, all -> 0x03a7 }
            r8 = 4
            r6.bindInteger(r8, r5)     // Catch:{ Exception -> 0x03ac, all -> 0x03a7 }
            int r5 = r12.date     // Catch:{ Exception -> 0x03ac, all -> 0x03a7 }
            r8 = 5
            r6.bindInteger(r8, r5)     // Catch:{ Exception -> 0x03ac, all -> 0x03a7 }
            r5 = 6
            r6.bindByteBuffer((int) r5, (org.telegram.tgnet.NativeByteBuffer) r3)     // Catch:{ Exception -> 0x03ac, all -> 0x03a7 }
            boolean r8 = org.telegram.messenger.MessageObject.isOut(r12)     // Catch:{ Exception -> 0x03ac, all -> 0x03a7 }
            if (r8 != 0) goto L_0x01f8
            boolean r8 = r12.from_scheduled     // Catch:{ Exception -> 0x01f2, all -> 0x01ec }
            if (r8 == 0) goto L_0x01ea
            goto L_0x01f8
        L_0x01ea:
            r8 = 0
            goto L_0x01f9
        L_0x01ec:
            r0 = move-exception
            r1 = r0
            r17 = r6
            goto L_0x00f1
        L_0x01f2:
            r0 = move-exception
            r1 = r0
            r17 = r6
            goto L_0x00fb
        L_0x01f8:
            r8 = 1
        L_0x01f9:
            r9 = 7
            r6.bindInteger(r9, r8)     // Catch:{ Exception -> 0x03ac, all -> 0x03a7 }
            r5 = 0
            r8 = 8
            r6.bindInteger(r8, r5)     // Catch:{ Exception -> 0x03ac, all -> 0x03a7 }
            int r5 = r12.flags     // Catch:{ Exception -> 0x03ac, all -> 0x03a7 }
            r5 = r5 & 1024(0x400, float:1.435E-42)
            if (r5 == 0) goto L_0x020c
            int r5 = r12.views     // Catch:{ Exception -> 0x01f2, all -> 0x01ec }
            goto L_0x020d
        L_0x020c:
            r5 = 0
        L_0x020d:
            r8 = 9
            r6.bindInteger(r8, r5)     // Catch:{ Exception -> 0x03ac, all -> 0x03a7 }
            int r5 = r12.stickerVerified     // Catch:{ Exception -> 0x03ac, all -> 0x03a7 }
            if (r5 != 0) goto L_0x021a
            r5 = 1
        L_0x0217:
            r8 = 10
            goto L_0x0221
        L_0x021a:
            r8 = 2
            if (r5 != r8) goto L_0x021f
            r5 = 2
            goto L_0x0217
        L_0x021f:
            r5 = 0
            goto L_0x0217
        L_0x0221:
            r6.bindInteger(r8, r5)     // Catch:{ Exception -> 0x03ac, all -> 0x03a7 }
            boolean r5 = r12.mentioned     // Catch:{ Exception -> 0x03ac, all -> 0x03a7 }
            if (r5 == 0) goto L_0x022a
            r5 = 1
            goto L_0x022b
        L_0x022a:
            r5 = 0
        L_0x022b:
            r8 = 11
            r6.bindInteger(r8, r5)     // Catch:{ Exception -> 0x03ac, all -> 0x03a7 }
            int r5 = r12.forwards     // Catch:{ Exception -> 0x03ac, all -> 0x03a7 }
            r8 = 12
            r6.bindInteger(r8, r5)     // Catch:{ Exception -> 0x03ac, all -> 0x03a7 }
            org.telegram.tgnet.TLRPC$MessageReplies r5 = r12.replies     // Catch:{ Exception -> 0x03ac, all -> 0x03a7 }
            if (r5 == 0) goto L_0x0252
            org.telegram.tgnet.NativeByteBuffer r5 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x01f2, all -> 0x01ec }
            org.telegram.tgnet.TLRPC$MessageReplies r8 = r12.replies     // Catch:{ Exception -> 0x01f2, all -> 0x01ec }
            int r8 = r8.getObjectSize()     // Catch:{ Exception -> 0x01f2, all -> 0x01ec }
            r5.<init>((int) r8)     // Catch:{ Exception -> 0x01f2, all -> 0x01ec }
            org.telegram.tgnet.TLRPC$MessageReplies r8 = r12.replies     // Catch:{ Exception -> 0x01f2, all -> 0x01ec }
            r8.serializeToStream(r5)     // Catch:{ Exception -> 0x01f2, all -> 0x01ec }
            r8 = 13
            r6.bindByteBuffer((int) r8, (org.telegram.tgnet.NativeByteBuffer) r5)     // Catch:{ Exception -> 0x01f2, all -> 0x01ec }
            r8 = r5
            goto L_0x0258
        L_0x0252:
            r5 = 13
            r6.bindNull(r5)     // Catch:{ Exception -> 0x03ac, all -> 0x03a7 }
            r8 = 0
        L_0x0258:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r5 = r12.reply_to     // Catch:{ Exception -> 0x03ac, all -> 0x03a7 }
            if (r5 == 0) goto L_0x0269
            int r9 = r5.reply_to_top_id     // Catch:{ Exception -> 0x01f2, all -> 0x01ec }
            if (r9 == 0) goto L_0x0261
            goto L_0x0263
        L_0x0261:
            int r9 = r5.reply_to_msg_id     // Catch:{ Exception -> 0x01f2, all -> 0x01ec }
        L_0x0263:
            r5 = 14
            r6.bindInteger(r5, r9)     // Catch:{ Exception -> 0x01f2, all -> 0x01ec }
            goto L_0x026f
        L_0x0269:
            r5 = 0
            r9 = 14
            r6.bindInteger(r9, r5)     // Catch:{ Exception -> 0x03ac, all -> 0x03a7 }
        L_0x026f:
            r17 = r10
            long r9 = org.telegram.messenger.MessageObject.getChannelId(r12)     // Catch:{ Exception -> 0x03ac, all -> 0x03a7 }
            r5 = 15
            r6.bindLong(r5, r9)     // Catch:{ Exception -> 0x03ac, all -> 0x03a7 }
            r6.step()     // Catch:{ Exception -> 0x03ac, all -> 0x03a7 }
            boolean r9 = org.telegram.messenger.MediaDataController.canAddMessageToMedia(r12)     // Catch:{ Exception -> 0x03ac, all -> 0x03a7 }
            if (r9 == 0) goto L_0x02b6
            r15.requery()     // Catch:{ Exception -> 0x02b1, all -> 0x02ac }
            int r9 = r12.id     // Catch:{ Exception -> 0x02b1, all -> 0x02ac }
            r10 = 1
            r15.bindInteger(r10, r9)     // Catch:{ Exception -> 0x02b1, all -> 0x02ac }
            r10 = r17
            r17 = r6
            long r5 = r10.id     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            r9 = 2
            r15.bindLong(r9, r5)     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            int r5 = r12.date     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            r6 = 3
            r15.bindInteger(r6, r5)     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            int r5 = org.telegram.messenger.MediaDataController.getMediaType(r12)     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            r6 = 4
            r15.bindInteger(r6, r5)     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            r5 = 5
            r15.bindByteBuffer((int) r5, (org.telegram.tgnet.NativeByteBuffer) r3)     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            r15.step()     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            goto L_0x02bb
        L_0x02ac:
            r0 = move-exception
            r17 = r6
            goto L_0x00f0
        L_0x02b1:
            r0 = move-exception
            r17 = r6
            goto L_0x00fa
        L_0x02b6:
            r10 = r17
            r5 = 5
            r17 = r6
        L_0x02bb:
            if (r8 == 0) goto L_0x02c0
            r8.reuse()     // Catch:{ Exception -> 0x013c, all -> 0x013a }
        L_0x02c0:
            r3.reuse()     // Catch:{ Exception -> 0x03b4, all -> 0x03b1 }
            int r3 = r12.ttl_period     // Catch:{ Exception -> 0x03b4, all -> 0x03b1 }
            if (r3 == 0) goto L_0x02ff
            int r3 = r12.id     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            if (r3 <= 0) goto L_0x02ff
            if (r2 != 0) goto L_0x02d5
            org.telegram.SQLite.SQLiteDatabase r3 = r7.database     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            java.lang.String r6 = "REPLACE INTO enc_tasks_v4 VALUES(?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r3.executeFast(r6)     // Catch:{ Exception -> 0x013c, all -> 0x013a }
        L_0x02d5:
            r2.requery()     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            int r3 = r12.id     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            r6 = 1
            r2.bindInteger(r6, r3)     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            long r8 = r12.dialog_id     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            r3 = 2
            r2.bindLong(r3, r8)     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            int r3 = r12.date     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            int r6 = r12.ttl_period     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            int r3 = r3 + r6
            r6 = 3
            r2.bindInteger(r6, r3)     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            r3 = 0
            r6 = 4
            r2.bindInteger(r6, r3)     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            r2.step()     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            int r3 = r12.date     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            int r8 = r12.ttl_period     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            int r3 = r3 + r8
            int r1 = java.lang.Math.min(r1, r3)     // Catch:{ Exception -> 0x013c, all -> 0x013a }
            goto L_0x0300
        L_0x02ff:
            r6 = 4
        L_0x0300:
            r8 = r1
            r9 = r2
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r12.media     // Catch:{ Exception -> 0x039d, all -> 0x0393 }
            boolean r1 = r1 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaPoll     // Catch:{ Exception -> 0x039d, all -> 0x0393 }
            if (r1 == 0) goto L_0x0353
            if (r16 != 0) goto L_0x031d
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0318, all -> 0x0313 }
            java.lang.String r2 = "REPLACE INTO polls_v2 VALUES(?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0318, all -> 0x0313 }
            goto L_0x031f
        L_0x0313:
            r0 = move-exception
            r1 = r0
            r2 = r9
            goto L_0x00f1
        L_0x0318:
            r0 = move-exception
            r1 = r0
            r2 = r9
            goto L_0x00fb
        L_0x031d:
            r1 = r16
        L_0x031f:
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r12.media     // Catch:{ Exception -> 0x0349, all -> 0x0340 }
            org.telegram.tgnet.TLRPC$TL_messageMediaPoll r2 = (org.telegram.tgnet.TLRPC$TL_messageMediaPoll) r2     // Catch:{ Exception -> 0x0349, all -> 0x0340 }
            r1.requery()     // Catch:{ Exception -> 0x0349, all -> 0x0340 }
            int r3 = r12.id     // Catch:{ Exception -> 0x0349, all -> 0x0340 }
            r5 = 1
            r1.bindInteger(r5, r3)     // Catch:{ Exception -> 0x0349, all -> 0x0340 }
            long r5 = r12.dialog_id     // Catch:{ Exception -> 0x0349, all -> 0x0340 }
            r3 = 2
            r1.bindLong(r3, r5)     // Catch:{ Exception -> 0x0349, all -> 0x0340 }
            org.telegram.tgnet.TLRPC$Poll r2 = r2.poll     // Catch:{ Exception -> 0x0349, all -> 0x0340 }
            long r5 = r2.id     // Catch:{ Exception -> 0x0349, all -> 0x0340 }
            r2 = 3
            r1.bindLong(r2, r5)     // Catch:{ Exception -> 0x0349, all -> 0x0340 }
            r1.step()     // Catch:{ Exception -> 0x0349, all -> 0x0340 }
            r16 = r1
            goto L_0x0354
        L_0x0340:
            r0 = move-exception
            r16 = r1
            r2 = r9
            r8 = r21
            r10 = 0
            goto L_0x0678
        L_0x0349:
            r0 = move-exception
            r16 = r1
            r2 = r9
            r8 = r21
            r10 = 0
            r1 = r0
            goto L_0x063c
        L_0x0353:
            r3 = 2
        L_0x0354:
            if (r4 == 0) goto L_0x037a
            java.lang.String r2 = "messages_holes"
            long r4 = r10.id     // Catch:{ Exception -> 0x039d, all -> 0x0393 }
            int r6 = r12.id     // Catch:{ Exception -> 0x039d, all -> 0x0393 }
            r1 = r24
            r19 = r8
            r8 = 2
            r3 = r4
            r22 = r9
            r8 = r21
            r9 = 6
            r21 = 15
            r5 = r6
            r9 = 4
            r1.closeHolesInTable(r2, r3, r5, r6)     // Catch:{ Exception -> 0x0391, all -> 0x038f }
            long r2 = r10.id     // Catch:{ Exception -> 0x0391, all -> 0x038f }
            int r5 = r12.id     // Catch:{ Exception -> 0x0391, all -> 0x038f }
            r6 = -1
            r1 = r24
            r4 = r5
            r1.closeHolesInMedia(r2, r4, r5, r6)     // Catch:{ Exception -> 0x0391, all -> 0x038f }
            goto L_0x0388
        L_0x037a:
            r19 = r8
            r22 = r9
            r8 = r21
            r9 = 4
            long r1 = r10.id     // Catch:{ Exception -> 0x0391, all -> 0x038f }
            int r3 = r12.id     // Catch:{ Exception -> 0x0391, all -> 0x038f }
            createFirstHoles(r1, r8, r13, r3)     // Catch:{ Exception -> 0x0391, all -> 0x038f }
        L_0x0388:
            r1 = r19
            r2 = r22
            r3 = r23
            goto L_0x03bb
        L_0x038f:
            r0 = move-exception
            goto L_0x0398
        L_0x0391:
            r0 = move-exception
            goto L_0x03a2
        L_0x0393:
            r0 = move-exception
            r22 = r9
            r8 = r21
        L_0x0398:
            r1 = r0
            r2 = r22
            goto L_0x049a
        L_0x039d:
            r0 = move-exception
            r22 = r9
            r8 = r21
        L_0x03a2:
            r1 = r0
            r2 = r22
            goto L_0x04a4
        L_0x03a7:
            r0 = move-exception
            r17 = r6
            goto L_0x0484
        L_0x03ac:
            r0 = move-exception
            r17 = r6
            goto L_0x048b
        L_0x03b1:
            r0 = move-exception
            goto L_0x0484
        L_0x03b4:
            r0 = move-exception
            goto L_0x048b
        L_0x03b7:
            r8 = r21
            r9 = 4
            r3 = 0
        L_0x03bb:
            r14.requery()     // Catch:{ Exception -> 0x047d, all -> 0x0479 }
            long r4 = r10.id     // Catch:{ Exception -> 0x047d, all -> 0x0479 }
            r6 = 1
            r14.bindLong(r6, r4)     // Catch:{ Exception -> 0x047d, all -> 0x0479 }
            r4 = 2
            r14.bindInteger(r4, r3)     // Catch:{ Exception -> 0x047d, all -> 0x0479 }
            int r3 = r10.unread_count     // Catch:{ Exception -> 0x047d, all -> 0x0479 }
            r4 = 3
            r14.bindInteger(r4, r3)     // Catch:{ Exception -> 0x047d, all -> 0x0479 }
            int r3 = r10.top_message     // Catch:{ Exception -> 0x047d, all -> 0x0479 }
            r14.bindInteger(r9, r3)     // Catch:{ Exception -> 0x047d, all -> 0x0479 }
            int r3 = r10.read_inbox_max_id     // Catch:{ Exception -> 0x047d, all -> 0x0479 }
            r4 = 5
            r14.bindInteger(r4, r3)     // Catch:{ Exception -> 0x047d, all -> 0x0479 }
            int r3 = r10.read_outbox_max_id     // Catch:{ Exception -> 0x047d, all -> 0x0479 }
            r4 = 6
            r14.bindInteger(r4, r3)     // Catch:{ Exception -> 0x047d, all -> 0x0479 }
            r3 = 7
            r4 = 0
            r14.bindLong(r3, r4)     // Catch:{ Exception -> 0x047d, all -> 0x0479 }
            int r3 = r10.unread_mentions_count     // Catch:{ Exception -> 0x047d, all -> 0x0479 }
            r4 = 8
            r14.bindInteger(r4, r3)     // Catch:{ Exception -> 0x047d, all -> 0x0479 }
            int r3 = r10.pts     // Catch:{ Exception -> 0x047d, all -> 0x0479 }
            r4 = 9
            r14.bindInteger(r4, r3)     // Catch:{ Exception -> 0x047d, all -> 0x0479 }
            r3 = 10
            r4 = 0
            r14.bindInteger(r3, r4)     // Catch:{ Exception -> 0x047d, all -> 0x0479 }
            int r3 = r10.pinnedNum     // Catch:{ Exception -> 0x047d, all -> 0x0479 }
            r4 = 11
            r14.bindInteger(r4, r3)     // Catch:{ Exception -> 0x047d, all -> 0x0479 }
            boolean r3 = r10.unread_mark     // Catch:{ Exception -> 0x047d, all -> 0x0479 }
            r4 = 12
            r14.bindInteger(r4, r3)     // Catch:{ Exception -> 0x047d, all -> 0x0479 }
            int r3 = r10.folder_id     // Catch:{ Exception -> 0x047d, all -> 0x0479 }
            r4 = 13
            r14.bindInteger(r4, r3)     // Catch:{ Exception -> 0x047d, all -> 0x0479 }
            boolean r3 = r10 instanceof org.telegram.tgnet.TLRPC$TL_dialogFolder     // Catch:{ Exception -> 0x047d, all -> 0x0479 }
            if (r3 == 0) goto L_0x0430
            r3 = r10
            org.telegram.tgnet.TLRPC$TL_dialogFolder r3 = (org.telegram.tgnet.TLRPC$TL_dialogFolder) r3     // Catch:{ Exception -> 0x042d, all -> 0x042b }
            org.telegram.tgnet.NativeByteBuffer r4 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x042d, all -> 0x042b }
            org.telegram.tgnet.TLRPC$TL_folder r5 = r3.folder     // Catch:{ Exception -> 0x042d, all -> 0x042b }
            int r5 = r5.getObjectSize()     // Catch:{ Exception -> 0x042d, all -> 0x042b }
            r4.<init>((int) r5)     // Catch:{ Exception -> 0x042d, all -> 0x042b }
            org.telegram.tgnet.TLRPC$TL_folder r3 = r3.folder     // Catch:{ Exception -> 0x042d, all -> 0x042b }
            r3.serializeToStream(r4)     // Catch:{ Exception -> 0x042d, all -> 0x042b }
            r3 = 14
            r14.bindByteBuffer((int) r3, (org.telegram.tgnet.NativeByteBuffer) r4)     // Catch:{ Exception -> 0x042d, all -> 0x042b }
            goto L_0x0436
        L_0x042b:
            r0 = move-exception
            goto L_0x0486
        L_0x042d:
            r0 = move-exception
            goto L_0x048d
        L_0x0430:
            r3 = 14
            r14.bindNull(r3)     // Catch:{ Exception -> 0x047d, all -> 0x0479 }
            r4 = 0
        L_0x0436:
            int r3 = r10.unread_reactions_count     // Catch:{ Exception -> 0x047d, all -> 0x0479 }
            r5 = 15
            r14.bindInteger(r5, r3)     // Catch:{ Exception -> 0x047d, all -> 0x0479 }
            r14.step()     // Catch:{ Exception -> 0x047d, all -> 0x0479 }
            if (r4 == 0) goto L_0x0445
            r4.reuse()     // Catch:{ Exception -> 0x042d, all -> 0x042b }
        L_0x0445:
            org.telegram.tgnet.TLRPC$PeerNotifySettings r3 = r10.notify_settings     // Catch:{ Exception -> 0x047d, all -> 0x0479 }
            if (r3 == 0) goto L_0x046a
            r20.requery()     // Catch:{ Exception -> 0x047d, all -> 0x0479 }
            long r3 = r10.id     // Catch:{ Exception -> 0x047d, all -> 0x0479 }
            r5 = r20
            r6 = 1
            r5.bindLong(r6, r3)     // Catch:{ Exception -> 0x0468, all -> 0x0466 }
            org.telegram.tgnet.TLRPC$PeerNotifySettings r3 = r10.notify_settings     // Catch:{ Exception -> 0x0468, all -> 0x0466 }
            int r3 = r3.mute_until     // Catch:{ Exception -> 0x0468, all -> 0x0466 }
            if (r3 == 0) goto L_0x045d
            r3 = 2
            r4 = 1
            goto L_0x045f
        L_0x045d:
            r3 = 2
            r4 = 0
        L_0x045f:
            r5.bindInteger(r3, r4)     // Catch:{ Exception -> 0x0468, all -> 0x0466 }
            r5.step()     // Catch:{ Exception -> 0x0468, all -> 0x0466 }
            goto L_0x046c
        L_0x0466:
            r0 = move-exception
            goto L_0x0497
        L_0x0468:
            r0 = move-exception
            goto L_0x04a1
        L_0x046a:
            r5 = r20
        L_0x046c:
            int r4 = r18 + 1
            r9 = r26
            r6 = r5
            r5 = r8
            r3 = r13
            r13 = r17
            r8 = r25
            goto L_0x0090
        L_0x0479:
            r0 = move-exception
            r5 = r20
            goto L_0x0486
        L_0x047d:
            r0 = move-exception
            r5 = r20
            goto L_0x048d
        L_0x0481:
            r0 = move-exception
            r5 = r20
        L_0x0484:
            r8 = r21
        L_0x0486:
            r1 = r0
            goto L_0x049a
        L_0x0488:
            r0 = move-exception
            r5 = r20
        L_0x048b:
            r8 = r21
        L_0x048d:
            r1 = r0
            goto L_0x04a4
        L_0x048f:
            r0 = move-exception
            goto L_0x0495
        L_0x0491:
            r0 = move-exception
            goto L_0x049f
        L_0x0493:
            r0 = move-exception
            r13 = r3
        L_0x0495:
            r8 = r5
            r5 = r6
        L_0x0497:
            r1 = r0
            r20 = r5
        L_0x049a:
            r10 = 0
            goto L_0x0679
        L_0x049d:
            r0 = move-exception
            r13 = r3
        L_0x049f:
            r8 = r5
            r5 = r6
        L_0x04a1:
            r1 = r0
            r20 = r5
        L_0x04a4:
            r10 = 0
            goto L_0x063c
        L_0x04a7:
            r13 = r3
            r8 = r5
            r5 = r6
            r17.dispose()     // Catch:{ Exception -> 0x053d, all -> 0x053a }
            r14.dispose()     // Catch:{ Exception -> 0x0530, all -> 0x0526 }
            r15.dispose()     // Catch:{ Exception -> 0x051b, all -> 0x0510 }
            r5.dispose()     // Catch:{ Exception -> 0x0504, all -> 0x04f8 }
            r8.dispose()     // Catch:{ Exception -> 0x04f1, all -> 0x04ea }
            r13.dispose()     // Catch:{ Exception -> 0x04e4, all -> 0x04de }
            if (r2 == 0) goto L_0x04d4
            r2.dispose()     // Catch:{ Exception -> 0x04d0, all -> 0x04cc }
            org.telegram.messenger.MessagesController r3 = r24.getMessagesController()     // Catch:{ Exception -> 0x04d0, all -> 0x04cc }
            r4 = 0
            r6 = 0
            r3.didAddedNewTask(r1, r4, r6)     // Catch:{ Exception -> 0x0613, all -> 0x0609 }
            goto L_0x04d5
        L_0x04cc:
            r0 = move-exception
            r6 = 0
            goto L_0x060a
        L_0x04d0:
            r0 = move-exception
            r6 = 0
            goto L_0x0614
        L_0x04d4:
            r6 = 0
        L_0x04d5:
            if (r16 == 0) goto L_0x04da
            r16.dispose()     // Catch:{ Exception -> 0x0613, all -> 0x0609 }
        L_0x04da:
            r1 = r25
            goto L_0x05e8
        L_0x04de:
            r0 = move-exception
            r6 = 0
            r1 = r0
            r8 = r6
            r10 = r8
            goto L_0x04ee
        L_0x04e4:
            r0 = move-exception
            r6 = 0
            r1 = r0
            r8 = r6
            r10 = r8
            goto L_0x04f5
        L_0x04ea:
            r0 = move-exception
            r6 = 0
            r1 = r0
            r10 = r6
        L_0x04ee:
            r14 = r10
            goto L_0x060f
        L_0x04f1:
            r0 = move-exception
            r6 = 0
            r1 = r0
            r10 = r6
        L_0x04f5:
            r14 = r10
            goto L_0x0619
        L_0x04f8:
            r0 = move-exception
            r6 = 0
            r1 = r0
            r20 = r5
            r10 = r6
            r14 = r10
            r15 = r14
            r17 = r15
            goto L_0x0679
        L_0x0504:
            r0 = move-exception
            r6 = 0
            r1 = r0
            r20 = r5
            r10 = r6
            r14 = r10
            r15 = r14
            r17 = r15
            goto L_0x063c
        L_0x0510:
            r0 = move-exception
            r6 = 0
            r1 = r0
            r20 = r5
            r10 = r6
            r14 = r10
            r17 = r14
            goto L_0x0679
        L_0x051b:
            r0 = move-exception
            r6 = 0
            r1 = r0
            r20 = r5
            r10 = r6
            r14 = r10
            r17 = r14
            goto L_0x063c
        L_0x0526:
            r0 = move-exception
            r6 = 0
            r1 = r0
            r20 = r5
            r10 = r6
            r17 = r10
            goto L_0x0679
        L_0x0530:
            r0 = move-exception
            r6 = 0
            r1 = r0
            r20 = r5
            r10 = r6
            r17 = r10
            goto L_0x063c
        L_0x053a:
            r0 = move-exception
            r6 = 0
            goto L_0x0547
        L_0x053d:
            r0 = move-exception
            r6 = 0
            goto L_0x0554
        L_0x0540:
            r0 = move-exception
            r8 = r5
            r5 = r6
            r17 = r13
            r6 = 0
            r13 = r3
        L_0x0547:
            r1 = r0
            r20 = r5
            r10 = r6
            goto L_0x0679
        L_0x054d:
            r0 = move-exception
            r8 = r5
            r5 = r6
            r17 = r13
            r6 = 0
            r13 = r3
        L_0x0554:
            r1 = r0
            r20 = r5
            r10 = r6
            goto L_0x063c
        L_0x055a:
            r0 = move-exception
            r8 = r5
            r5 = r6
            r17 = r13
            r6 = 0
            r1 = r0
            r20 = r5
            r2 = r6
            r10 = r2
            goto L_0x057d
        L_0x0566:
            r0 = move-exception
            r8 = r5
            r5 = r6
            r17 = r13
            r6 = 0
            r1 = r0
            r20 = r5
            r2 = r6
            r10 = r2
            goto L_0x058d
        L_0x0572:
            r0 = move-exception
            r5 = r6
            r17 = r13
            r6 = 0
            r1 = r0
            r20 = r5
            r2 = r6
            r8 = r2
            r10 = r8
        L_0x057d:
            r13 = r10
            r16 = r13
            goto L_0x0679
        L_0x0582:
            r0 = move-exception
            r5 = r6
            r17 = r13
            r6 = 0
            r1 = r0
            r20 = r5
            r2 = r6
            r8 = r2
            r10 = r8
        L_0x058d:
            r13 = r10
            r16 = r13
            goto L_0x063c
        L_0x0592:
            r0 = move-exception
            r17 = r13
            r6 = 0
            r1 = r0
            r2 = r6
            r8 = r2
            r10 = r8
            r13 = r10
            r16 = r13
            goto L_0x05cd
        L_0x059e:
            r0 = move-exception
            r17 = r13
            r6 = 0
            r1 = r0
            r2 = r6
            r8 = r2
            r10 = r8
            r13 = r10
            r16 = r13
            goto L_0x05de
        L_0x05aa:
            r0 = move-exception
            r17 = r13
            r6 = 0
            r1 = r0
            r2 = r6
            r8 = r2
            r10 = r8
            r13 = r10
            r15 = r13
            goto L_0x05cb
        L_0x05b5:
            r0 = move-exception
            r17 = r13
            r6 = 0
            r1 = r0
            r2 = r6
            r8 = r2
            r10 = r8
            r13 = r10
            r15 = r13
            goto L_0x05dc
        L_0x05c0:
            r0 = move-exception
            r17 = r13
            r6 = 0
            r1 = r0
            r2 = r6
            r8 = r2
            r10 = r8
            r13 = r10
            r14 = r13
            r15 = r14
        L_0x05cb:
            r16 = r15
        L_0x05cd:
            r20 = r16
            goto L_0x0679
        L_0x05d1:
            r0 = move-exception
            r17 = r13
            r6 = 0
            r1 = r0
            r2 = r6
            r8 = r2
            r10 = r8
            r13 = r10
            r14 = r13
            r15 = r14
        L_0x05dc:
            r16 = r15
        L_0x05de:
            r20 = r16
            goto L_0x063c
        L_0x05e2:
            r6 = 0
            r1 = r25
            r2 = r6
            r16 = r2
        L_0x05e8:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r3 = r1.users     // Catch:{ Exception -> 0x0613, all -> 0x0609 }
            r7.putUsersInternal(r3)     // Catch:{ Exception -> 0x0613, all -> 0x0609 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r1 = r1.chats     // Catch:{ Exception -> 0x0613, all -> 0x0609 }
            r7.putChatsInternal(r1)     // Catch:{ Exception -> 0x0613, all -> 0x0609 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0613, all -> 0x0609 }
            r1.commitTransaction()     // Catch:{ Exception -> 0x0613, all -> 0x0609 }
            r1 = 0
            r7.resetAllUnreadCounters(r1)     // Catch:{ Exception -> 0x0613, all -> 0x0609 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database
            r1.commitTransaction()
            if (r16 == 0) goto L_0x0605
            r16.dispose()
        L_0x0605:
            if (r2 == 0) goto L_0x0676
            goto L_0x0673
        L_0x0609:
            r0 = move-exception
        L_0x060a:
            r1 = r0
            r8 = r6
            r10 = r8
            r13 = r10
            r14 = r13
        L_0x060f:
            r15 = r14
            r17 = r15
            goto L_0x062a
        L_0x0613:
            r0 = move-exception
        L_0x0614:
            r1 = r0
            r8 = r6
            r10 = r8
            r13 = r10
            r14 = r13
        L_0x0619:
            r15 = r14
            r17 = r15
            goto L_0x063a
        L_0x061d:
            r0 = move-exception
            r6 = 0
            r1 = r0
            r2 = r6
            r8 = r2
            r10 = r8
            r13 = r10
            r14 = r13
            r15 = r14
            r16 = r15
            r17 = r16
        L_0x062a:
            r20 = r17
            goto L_0x0679
        L_0x062d:
            r0 = move-exception
            r6 = 0
            r1 = r0
            r2 = r6
            r8 = r2
            r10 = r8
            r13 = r10
            r14 = r13
            r15 = r14
            r16 = r15
            r17 = r16
        L_0x063a:
            r20 = r17
        L_0x063c:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r1)     // Catch:{ all -> 0x0677 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database
            r1.commitTransaction()
            if (r10 == 0) goto L_0x0649
            r10.dispose()
        L_0x0649:
            if (r17 == 0) goto L_0x064e
            r17.dispose()
        L_0x064e:
            if (r14 == 0) goto L_0x0653
            r14.dispose()
        L_0x0653:
            if (r15 == 0) goto L_0x0658
            r15.dispose()
        L_0x0658:
            if (r20 == 0) goto L_0x065d
            r20.dispose()
        L_0x065d:
            if (r8 == 0) goto L_0x0662
            r8.dispose()
        L_0x0662:
            if (r8 == 0) goto L_0x0667
            r8.dispose()
        L_0x0667:
            if (r13 == 0) goto L_0x066c
            r13.dispose()
        L_0x066c:
            if (r16 == 0) goto L_0x0671
            r16.dispose()
        L_0x0671:
            if (r2 == 0) goto L_0x0676
        L_0x0673:
            r2.dispose()
        L_0x0676:
            return
        L_0x0677:
            r0 = move-exception
        L_0x0678:
            r1 = r0
        L_0x0679:
            org.telegram.SQLite.SQLiteDatabase r3 = r7.database
            r3.commitTransaction()
            if (r10 == 0) goto L_0x0683
            r10.dispose()
        L_0x0683:
            if (r17 == 0) goto L_0x0688
            r17.dispose()
        L_0x0688:
            if (r14 == 0) goto L_0x068d
            r14.dispose()
        L_0x068d:
            if (r15 == 0) goto L_0x0692
            r15.dispose()
        L_0x0692:
            if (r20 == 0) goto L_0x0697
            r20.dispose()
        L_0x0697:
            if (r8 == 0) goto L_0x069c
            r8.dispose()
        L_0x069c:
            if (r8 == 0) goto L_0x06a1
            r8.dispose()
        L_0x06a1:
            if (r13 == 0) goto L_0x06a6
            r13.dispose()
        L_0x06a6:
            if (r16 == 0) goto L_0x06ab
            r16.dispose()
        L_0x06ab:
            if (r2 == 0) goto L_0x06b0
            r2.dispose()
        L_0x06b0:
            goto L_0x06b2
        L_0x06b1:
            throw r1
        L_0x06b2:
            goto L_0x06b1
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.putDialogsInternal(org.telegram.tgnet.TLRPC$messages_Dialogs, int):void");
    }

    public void getDialogFolderId(long j, IntCallback intCallback) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda103(this, j, intCallback));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$getDialogFolderId$182(long j, IntCallback intCallback) {
        SQLiteCursor sQLiteCursor = null;
        try {
            int i = -1;
            if (this.unknownDialogsIds.get(j) == null) {
                sQLiteCursor = this.database.queryFinalized("SELECT folder_id FROM dialogs WHERE did = ?", Long.valueOf(j));
                if (sQLiteCursor.next()) {
                    i = sQLiteCursor.intValue(0);
                }
                sQLiteCursor.dispose();
            }
            AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda3(intCallback, i));
            if (sQLiteCursor == null) {
                return;
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (sQLiteCursor == null) {
                return;
            }
        } catch (Throwable th) {
            if (sQLiteCursor != null) {
                sQLiteCursor.dispose();
            }
            throw th;
        }
        sQLiteCursor.dispose();
    }

    public void setDialogsFolderId(ArrayList<TLRPC$TL_folderPeer> arrayList, ArrayList<TLRPC$TL_inputFolderPeer> arrayList2, long j, int i) {
        if (arrayList != null || arrayList2 != null || j != 0) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda144(this, arrayList, arrayList2, i, j));
        }
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:28:0x00a4  */
    /* JADX WARNING: Removed duplicated region for block: B:31:0x00af  */
    /* JADX WARNING: Removed duplicated region for block: B:37:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$setDialogsFolderId$183(java.util.ArrayList r9, java.util.ArrayList r10, int r11, long r12) {
        /*
            r8 = this;
            r0 = 0
            org.telegram.SQLite.SQLiteDatabase r1 = r8.database     // Catch:{ Exception -> 0x0099 }
            r1.beginTransaction()     // Catch:{ Exception -> 0x0099 }
            org.telegram.SQLite.SQLiteDatabase r1 = r8.database     // Catch:{ Exception -> 0x0099 }
            java.lang.String r2 = "UPDATE dialogs SET folder_id = ?, pinned = ? WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0099 }
            r2 = 3
            r3 = 2
            r4 = 1
            r5 = 0
            if (r9 == 0) goto L_0x0046
            int r10 = r9.size()     // Catch:{ Exception -> 0x0043, all -> 0x0040 }
            r11 = 0
        L_0x0019:
            if (r11 >= r10) goto L_0x0083
            java.lang.Object r12 = r9.get(r11)     // Catch:{ Exception -> 0x0043, all -> 0x0040 }
            org.telegram.tgnet.TLRPC$TL_folderPeer r12 = (org.telegram.tgnet.TLRPC$TL_folderPeer) r12     // Catch:{ Exception -> 0x0043, all -> 0x0040 }
            org.telegram.tgnet.TLRPC$Peer r13 = r12.peer     // Catch:{ Exception -> 0x0043, all -> 0x0040 }
            long r6 = org.telegram.messenger.DialogObject.getPeerDialogId((org.telegram.tgnet.TLRPC$Peer) r13)     // Catch:{ Exception -> 0x0043, all -> 0x0040 }
            r1.requery()     // Catch:{ Exception -> 0x0043, all -> 0x0040 }
            int r12 = r12.folder_id     // Catch:{ Exception -> 0x0043, all -> 0x0040 }
            r1.bindInteger(r4, r12)     // Catch:{ Exception -> 0x0043, all -> 0x0040 }
            r1.bindInteger(r3, r5)     // Catch:{ Exception -> 0x0043, all -> 0x0040 }
            r1.bindLong(r2, r6)     // Catch:{ Exception -> 0x0043, all -> 0x0040 }
            r1.step()     // Catch:{ Exception -> 0x0043, all -> 0x0040 }
            androidx.collection.LongSparseArray<java.lang.Boolean> r12 = r8.unknownDialogsIds     // Catch:{ Exception -> 0x0043, all -> 0x0040 }
            r12.remove(r6)     // Catch:{ Exception -> 0x0043, all -> 0x0040 }
            int r11 = r11 + 1
            goto L_0x0019
        L_0x0040:
            r9 = move-exception
            r0 = r1
            goto L_0x00a8
        L_0x0043:
            r9 = move-exception
            r0 = r1
            goto L_0x009a
        L_0x0046:
            if (r10 == 0) goto L_0x0074
            int r9 = r10.size()     // Catch:{ Exception -> 0x0043, all -> 0x0040 }
            r11 = 0
        L_0x004d:
            if (r11 >= r9) goto L_0x0083
            java.lang.Object r12 = r10.get(r11)     // Catch:{ Exception -> 0x0043, all -> 0x0040 }
            org.telegram.tgnet.TLRPC$TL_inputFolderPeer r12 = (org.telegram.tgnet.TLRPC$TL_inputFolderPeer) r12     // Catch:{ Exception -> 0x0043, all -> 0x0040 }
            org.telegram.tgnet.TLRPC$InputPeer r13 = r12.peer     // Catch:{ Exception -> 0x0043, all -> 0x0040 }
            long r6 = org.telegram.messenger.DialogObject.getPeerDialogId((org.telegram.tgnet.TLRPC$InputPeer) r13)     // Catch:{ Exception -> 0x0043, all -> 0x0040 }
            r1.requery()     // Catch:{ Exception -> 0x0043, all -> 0x0040 }
            int r12 = r12.folder_id     // Catch:{ Exception -> 0x0043, all -> 0x0040 }
            r1.bindInteger(r4, r12)     // Catch:{ Exception -> 0x0043, all -> 0x0040 }
            r1.bindInteger(r3, r5)     // Catch:{ Exception -> 0x0043, all -> 0x0040 }
            r1.bindLong(r2, r6)     // Catch:{ Exception -> 0x0043, all -> 0x0040 }
            r1.step()     // Catch:{ Exception -> 0x0043, all -> 0x0040 }
            androidx.collection.LongSparseArray<java.lang.Boolean> r12 = r8.unknownDialogsIds     // Catch:{ Exception -> 0x0043, all -> 0x0040 }
            r12.remove(r6)     // Catch:{ Exception -> 0x0043, all -> 0x0040 }
            int r11 = r11 + 1
            goto L_0x004d
        L_0x0074:
            r1.requery()     // Catch:{ Exception -> 0x0043, all -> 0x0040 }
            r1.bindInteger(r4, r11)     // Catch:{ Exception -> 0x0043, all -> 0x0040 }
            r1.bindInteger(r3, r5)     // Catch:{ Exception -> 0x0043, all -> 0x0040 }
            r1.bindLong(r2, r12)     // Catch:{ Exception -> 0x0043, all -> 0x0040 }
            r1.step()     // Catch:{ Exception -> 0x0043, all -> 0x0040 }
        L_0x0083:
            r1.dispose()     // Catch:{ Exception -> 0x0043, all -> 0x0040 }
            org.telegram.SQLite.SQLiteDatabase r9 = r8.database     // Catch:{ Exception -> 0x0099 }
            r9.commitTransaction()     // Catch:{ Exception -> 0x0099 }
            r8.lambda$checkIfFolderEmpty$185(r4)     // Catch:{ Exception -> 0x0099 }
            r8.resetAllUnreadCounters(r5)     // Catch:{ Exception -> 0x0099 }
            org.telegram.SQLite.SQLiteDatabase r9 = r8.database
            r9.commitTransaction()
            goto L_0x00a7
        L_0x0097:
            r9 = move-exception
            goto L_0x00a8
        L_0x0099:
            r9 = move-exception
        L_0x009a:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r9)     // Catch:{ all -> 0x0097 }
            org.telegram.SQLite.SQLiteDatabase r9 = r8.database
            r9.commitTransaction()
            if (r0 == 0) goto L_0x00a7
            r0.dispose()
        L_0x00a7:
            return
        L_0x00a8:
            org.telegram.SQLite.SQLiteDatabase r10 = r8.database
            r10.commitTransaction()
            if (r0 == 0) goto L_0x00b2
            r0.dispose()
        L_0x00b2:
            goto L_0x00b4
        L_0x00b3:
            throw r9
        L_0x00b4:
            goto L_0x00b3
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$setDialogsFolderId$183(java.util.ArrayList, java.util.ArrayList, int, long):void");
    }

    /* access modifiers changed from: private */
    /* renamed from: checkIfFolderEmptyInternal */
    public void lambda$checkIfFolderEmpty$185(int i) {
        SQLiteCursor sQLiteCursor = null;
        try {
            boolean z = true;
            sQLiteCursor = this.database.queryFinalized("SELECT did FROM dialogs WHERE folder_id = ?", Integer.valueOf(i));
            while (true) {
                if (!sQLiteCursor.next()) {
                    break;
                }
                long longValue = sQLiteCursor.longValue(0);
                if (!DialogObject.isUserDialog(longValue)) {
                    if (!DialogObject.isEncryptedDialog(longValue)) {
                        TLRPC$Chat chat = getChat(-longValue);
                        if (!ChatObject.isNotInChat(chat) && chat.migrated_to == null) {
                            break;
                        }
                    } else {
                        break;
                    }
                } else {
                    break;
                }
            }
            z = false;
            sQLiteCursor.dispose();
            if (z) {
                AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda31(this, i));
                SQLiteDatabase sQLiteDatabase = this.database;
                sQLiteDatabase.executeFast("DELETE FROM dialogs WHERE did = " + DialogObject.makeFolderDialogId(i)).stepThis().dispose();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (sQLiteCursor == null) {
                return;
            }
        } catch (Throwable th) {
            if (sQLiteCursor != null) {
                sQLiteCursor.dispose();
            }
            throw th;
        }
        sQLiteCursor.dispose();
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$checkIfFolderEmptyInternal$184(int i) {
        getMessagesController().onFolderEmpty(i);
    }

    public void checkIfFolderEmpty(int i) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda26(this, i));
    }

    public void unpinAllDialogsExceptNew(ArrayList<Long> arrayList, int i) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda139(this, arrayList, i));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:36:0x0096  */
    /* JADX WARNING: Removed duplicated region for block: B:38:0x009b  */
    /* JADX WARNING: Removed duplicated region for block: B:41:0x00a2  */
    /* JADX WARNING: Removed duplicated region for block: B:43:0x00a7  */
    /* JADX WARNING: Removed duplicated region for block: B:54:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$unpinAllDialogsExceptNew$186(java.util.ArrayList r10, int r11) {
        /*
            r9 = this;
            r0 = 0
            java.util.ArrayList r1 = new java.util.ArrayList     // Catch:{ Exception -> 0x008f, all -> 0x008c }
            r1.<init>()     // Catch:{ Exception -> 0x008f, all -> 0x008c }
            org.telegram.SQLite.SQLiteDatabase r2 = r9.database     // Catch:{ Exception -> 0x008f, all -> 0x008c }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x008f, all -> 0x008c }
            java.lang.String r4 = "SELECT did, folder_id FROM dialogs WHERE pinned > 0 AND did NOT IN (%s)"
            r5 = 1
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x008f, all -> 0x008c }
            java.lang.String r7 = ","
            java.lang.String r10 = android.text.TextUtils.join(r7, r10)     // Catch:{ Exception -> 0x008f, all -> 0x008c }
            r7 = 0
            r6[r7] = r10     // Catch:{ Exception -> 0x008f, all -> 0x008c }
            java.lang.String r10 = java.lang.String.format(r3, r4, r6)     // Catch:{ Exception -> 0x008f, all -> 0x008c }
            java.lang.Object[] r3 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x008f, all -> 0x008c }
            org.telegram.SQLite.SQLiteCursor r10 = r2.queryFinalized(r10, r3)     // Catch:{ Exception -> 0x008f, all -> 0x008c }
        L_0x0022:
            boolean r2 = r10.next()     // Catch:{ Exception -> 0x0087, all -> 0x0082 }
            if (r2 == 0) goto L_0x004a
            long r2 = r10.longValue(r7)     // Catch:{ Exception -> 0x0087, all -> 0x0082 }
            int r4 = r10.intValue(r5)     // Catch:{ Exception -> 0x0087, all -> 0x0082 }
            if (r4 != r11) goto L_0x0022
            boolean r4 = org.telegram.messenger.DialogObject.isEncryptedDialog(r2)     // Catch:{ Exception -> 0x0087, all -> 0x0082 }
            if (r4 != 0) goto L_0x0022
            boolean r2 = org.telegram.messenger.DialogObject.isFolderDialogId(r2)     // Catch:{ Exception -> 0x0087, all -> 0x0082 }
            if (r2 != 0) goto L_0x0022
            long r2 = r10.longValue(r7)     // Catch:{ Exception -> 0x0087, all -> 0x0082 }
            java.lang.Long r2 = java.lang.Long.valueOf(r2)     // Catch:{ Exception -> 0x0087, all -> 0x0082 }
            r1.add(r2)     // Catch:{ Exception -> 0x0087, all -> 0x0082 }
            goto L_0x0022
        L_0x004a:
            r10.dispose()     // Catch:{ Exception -> 0x0087, all -> 0x0082 }
            boolean r10 = r1.isEmpty()     // Catch:{ Exception -> 0x008f, all -> 0x008c }
            if (r10 != 0) goto L_0x009e
            org.telegram.SQLite.SQLiteDatabase r10 = r9.database     // Catch:{ Exception -> 0x008f, all -> 0x008c }
            java.lang.String r11 = "UPDATE dialogs SET pinned = ? WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r10 = r10.executeFast(r11)     // Catch:{ Exception -> 0x008f, all -> 0x008c }
            r11 = 0
        L_0x005c:
            int r2 = r1.size()     // Catch:{ Exception -> 0x0080 }
            if (r11 >= r2) goto L_0x007c
            java.lang.Object r2 = r1.get(r11)     // Catch:{ Exception -> 0x0080 }
            java.lang.Long r2 = (java.lang.Long) r2     // Catch:{ Exception -> 0x0080 }
            long r2 = r2.longValue()     // Catch:{ Exception -> 0x0080 }
            r10.requery()     // Catch:{ Exception -> 0x0080 }
            r10.bindInteger(r5, r7)     // Catch:{ Exception -> 0x0080 }
            r4 = 2
            r10.bindLong(r4, r2)     // Catch:{ Exception -> 0x0080 }
            r10.step()     // Catch:{ Exception -> 0x0080 }
            int r11 = r11 + 1
            goto L_0x005c
        L_0x007c:
            r10.dispose()     // Catch:{ Exception -> 0x0080 }
            goto L_0x009e
        L_0x0080:
            r11 = move-exception
            goto L_0x0091
        L_0x0082:
            r11 = move-exception
            r8 = r0
            r0 = r10
            r10 = r8
            goto L_0x00a0
        L_0x0087:
            r11 = move-exception
            r8 = r0
            r0 = r10
            r10 = r8
            goto L_0x0091
        L_0x008c:
            r11 = move-exception
            r10 = r0
            goto L_0x00a0
        L_0x008f:
            r11 = move-exception
            r10 = r0
        L_0x0091:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r11)     // Catch:{ all -> 0x009f }
            if (r0 == 0) goto L_0x0099
            r0.dispose()
        L_0x0099:
            if (r10 == 0) goto L_0x009e
            r10.dispose()
        L_0x009e:
            return
        L_0x009f:
            r11 = move-exception
        L_0x00a0:
            if (r0 == 0) goto L_0x00a5
            r0.dispose()
        L_0x00a5:
            if (r10 == 0) goto L_0x00aa
            r10.dispose()
        L_0x00aa:
            goto L_0x00ac
        L_0x00ab:
            throw r11
        L_0x00ac:
            goto L_0x00ab
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$unpinAllDialogsExceptNew$186(java.util.ArrayList, int):void");
    }

    public void setDialogUnread(long j, boolean z) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda110(this, j, z));
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v0, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v1, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v0, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v2, resolved type: org.telegram.SQLite.SQLitePreparedStatement} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v2, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v3, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v4, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v7, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v8, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* access modifiers changed from: private */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:18:0x0037 A[SYNTHETIC, Splitter:B:18:0x0037] */
    /* JADX WARNING: Removed duplicated region for block: B:27:0x0043 A[Catch:{ Exception -> 0x003d, all -> 0x003b }] */
    /* JADX WARNING: Removed duplicated region for block: B:28:0x0046 A[Catch:{ Exception -> 0x003d, all -> 0x003b }] */
    /* JADX WARNING: Removed duplicated region for block: B:32:0x0064 A[Catch:{ Exception -> 0x003d, all -> 0x003b }] */
    /* JADX WARNING: Unknown top exception splitter block from list: {B:15:0x0032=Splitter:B:15:0x0032, B:8:0x0027=Splitter:B:8:0x0027} */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$setDialogUnread$187(long r6, boolean r8) {
        /*
            r5 = this;
            r0 = 0
            r1 = 0
            org.telegram.SQLite.SQLiteDatabase r2 = r5.database     // Catch:{ Exception -> 0x0030, all -> 0x002d }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0030, all -> 0x002d }
            r3.<init>()     // Catch:{ Exception -> 0x0030, all -> 0x002d }
            java.lang.String r4 = "SELECT flags FROM dialogs WHERE did = "
            r3.append(r4)     // Catch:{ Exception -> 0x0030, all -> 0x002d }
            r3.append(r6)     // Catch:{ Exception -> 0x0030, all -> 0x002d }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x0030, all -> 0x002d }
            java.lang.Object[] r4 = new java.lang.Object[r1]     // Catch:{ Exception -> 0x0030, all -> 0x002d }
            org.telegram.SQLite.SQLiteCursor r2 = r2.queryFinalized(r3, r4)     // Catch:{ Exception -> 0x0030, all -> 0x002d }
            boolean r3 = r2.next()     // Catch:{ Exception -> 0x002b }
            if (r3 == 0) goto L_0x0026
            int r3 = r2.intValue(r1)     // Catch:{ Exception -> 0x002b }
            goto L_0x0027
        L_0x0026:
            r3 = 0
        L_0x0027:
            r2.dispose()     // Catch:{ Exception -> 0x003d }
            goto L_0x0040
        L_0x002b:
            r3 = move-exception
            goto L_0x0032
        L_0x002d:
            r6 = move-exception
            r2 = r0
            goto L_0x0062
        L_0x0030:
            r3 = move-exception
            r2 = r0
        L_0x0032:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r3)     // Catch:{ all -> 0x0061 }
            if (r2 == 0) goto L_0x003f
            r2.dispose()     // Catch:{ Exception -> 0x003d }
            goto L_0x003f
        L_0x003b:
            r6 = move-exception
            goto L_0x0071
        L_0x003d:
            r6 = move-exception
            goto L_0x0068
        L_0x003f:
            r3 = 0
        L_0x0040:
            r2 = 1
            if (r8 == 0) goto L_0x0046
            r8 = r3 | 1
            goto L_0x0048
        L_0x0046:
            r8 = r3 & -2
        L_0x0048:
            org.telegram.SQLite.SQLiteDatabase r3 = r5.database     // Catch:{ Exception -> 0x003d }
            java.lang.String r4 = "UPDATE dialogs SET flags = ? WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r3.executeFast(r4)     // Catch:{ Exception -> 0x003d }
            r0.bindInteger(r2, r8)     // Catch:{ Exception -> 0x003d }
            r8 = 2
            r0.bindLong(r8, r6)     // Catch:{ Exception -> 0x003d }
            r0.step()     // Catch:{ Exception -> 0x003d }
            r0.dispose()     // Catch:{ Exception -> 0x003d }
            r5.resetAllUnreadCounters(r1)     // Catch:{ Exception -> 0x003d }
            goto L_0x006d
        L_0x0061:
            r6 = move-exception
        L_0x0062:
            if (r2 == 0) goto L_0x0067
            r2.dispose()     // Catch:{ Exception -> 0x003d }
        L_0x0067:
            throw r6     // Catch:{ Exception -> 0x003d }
        L_0x0068:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r6)     // Catch:{ all -> 0x003b }
            if (r0 == 0) goto L_0x0070
        L_0x006d:
            r0.dispose()
        L_0x0070:
            return
        L_0x0071:
            if (r0 == 0) goto L_0x0076
            r0.dispose()
        L_0x0076:
            throw r6
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$setDialogUnread$187(long, boolean):void");
    }

    private void resetAllUnreadCounters(boolean z) {
        int size = this.dialogFilters.size();
        for (int i = 0; i < size; i++) {
            MessagesController.DialogFilter dialogFilter = this.dialogFilters.get(i);
            if (!z) {
                dialogFilter.pendingUnreadCount = -1;
            } else if ((dialogFilter.flags & MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED) != 0) {
                dialogFilter.pendingUnreadCount = -1;
            }
        }
        calcUnreadCounters(false);
        AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda22(this));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$resetAllUnreadCounters$188() {
        ArrayList<MessagesController.DialogFilter> arrayList = getMessagesController().dialogFilters;
        int size = arrayList.size();
        for (int i = 0; i < size; i++) {
            arrayList.get(i).unreadCount = arrayList.get(i).pendingUnreadCount;
        }
        this.mainUnreadCount = this.pendingMainUnreadCount;
        this.archiveUnreadCount = this.pendingArchiveUnreadCount;
        getNotificationCenter().postNotificationName(NotificationCenter.updateInterfaces, Integer.valueOf(MessagesController.UPDATE_MASK_READ_DIALOG_MESSAGE));
    }

    public void setDialogPinned(long j, int i) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda43(this, i, j));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$setDialogPinned$189(int i, long j) {
        SQLitePreparedStatement sQLitePreparedStatement = null;
        try {
            sQLitePreparedStatement = this.database.executeFast("UPDATE dialogs SET pinned = ? WHERE did = ?");
            sQLitePreparedStatement.bindInteger(1, i);
            sQLitePreparedStatement.bindLong(2, j);
            sQLitePreparedStatement.step();
            sQLitePreparedStatement.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (sQLitePreparedStatement != null) {
                sQLitePreparedStatement.dispose();
            }
        } catch (Throwable th) {
            if (sQLitePreparedStatement != null) {
                sQLitePreparedStatement.dispose();
            }
            throw th;
        }
    }

    public void setDialogsPinned(ArrayList<Long> arrayList, ArrayList<Integer> arrayList2) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda143(this, arrayList, arrayList2));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$setDialogsPinned$190(ArrayList arrayList, ArrayList arrayList2) {
        SQLitePreparedStatement sQLitePreparedStatement = null;
        try {
            SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE dialogs SET pinned = ? WHERE did = ?");
            int size = arrayList.size();
            for (int i = 0; i < size; i++) {
                executeFast.requery();
                executeFast.bindInteger(1, ((Integer) arrayList2.get(i)).intValue());
                executeFast.bindLong(2, ((Long) arrayList.get(i)).longValue());
                executeFast.step();
            }
            executeFast.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (sQLitePreparedStatement != null) {
                sQLitePreparedStatement.dispose();
            }
        } catch (Throwable th) {
            if (sQLitePreparedStatement != null) {
                sQLitePreparedStatement.dispose();
            }
            throw th;
        }
    }

    public void putDialogs(TLRPC$messages_Dialogs tLRPC$messages_Dialogs, int i) {
        if (!tLRPC$messages_Dialogs.dialogs.isEmpty()) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda178(this, tLRPC$messages_Dialogs, i));
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$putDialogs$191(TLRPC$messages_Dialogs tLRPC$messages_Dialogs, int i) {
        putDialogsInternal(tLRPC$messages_Dialogs, i);
        try {
            loadUnreadMessages();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void getDialogMaxMessageId(long j, IntCallback intCallback) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda101(this, j, intCallback));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:9:0x0031, code lost:
        if (r1 == null) goto L_0x0036;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$getDialogMaxMessageId$193(long r6, org.telegram.messenger.MessagesStorage.IntCallback r8) {
        /*
            r5 = this;
            r0 = 1
            int[] r0 = new int[r0]
            r1 = 0
            org.telegram.SQLite.SQLiteDatabase r2 = r5.database     // Catch:{ Exception -> 0x002d }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x002d }
            r3.<init>()     // Catch:{ Exception -> 0x002d }
            java.lang.String r4 = "SELECT MAX(mid) FROM messages_v2 WHERE uid = "
            r3.append(r4)     // Catch:{ Exception -> 0x002d }
            r3.append(r6)     // Catch:{ Exception -> 0x002d }
            java.lang.String r6 = r3.toString()     // Catch:{ Exception -> 0x002d }
            r7 = 0
            java.lang.Object[] r3 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x002d }
            org.telegram.SQLite.SQLiteCursor r1 = r2.queryFinalized(r6, r3)     // Catch:{ Exception -> 0x002d }
            boolean r6 = r1.next()     // Catch:{ Exception -> 0x002d }
            if (r6 == 0) goto L_0x0033
            int r6 = r1.intValue(r7)     // Catch:{ Exception -> 0x002d }
            r0[r7] = r6     // Catch:{ Exception -> 0x002d }
            goto L_0x0033
        L_0x002b:
            r6 = move-exception
            goto L_0x003f
        L_0x002d:
            r6 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r6)     // Catch:{ all -> 0x002b }
            if (r1 == 0) goto L_0x0036
        L_0x0033:
            r1.dispose()
        L_0x0036:
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda4 r6 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda4
            r6.<init>(r8, r0)
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r6)
            return
        L_0x003f:
            if (r1 == 0) goto L_0x0044
            r1.dispose()
        L_0x0044:
            throw r6
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$getDialogMaxMessageId$193(long, org.telegram.messenger.MessagesStorage$IntCallback):void");
    }

    public int getDialogReadMax(boolean z, long j) {
        CountDownLatch countDownLatch = new CountDownLatch(1);
        Integer[] numArr = {0};
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda189(this, z, j, numArr, countDownLatch));
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return numArr[0].intValue();
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:16:0x006c, code lost:
        if (r1 == null) goto L_0x0071;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$getDialogReadMax$194(boolean r5, long r6, java.lang.Integer[] r8, java.util.concurrent.CountDownLatch r9) {
        /*
            r4 = this;
            r0 = 0
            r1 = 0
            if (r5 == 0) goto L_0x002e
            org.telegram.SQLite.SQLiteDatabase r5 = r4.database     // Catch:{ Exception -> 0x0068 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0068 }
            r2.<init>()     // Catch:{ Exception -> 0x0068 }
            java.lang.String r3 = "SELECT outbox_max FROM dialogs WHERE did = "
            r2.append(r3)     // Catch:{ Exception -> 0x0068 }
            r2.append(r6)     // Catch:{ Exception -> 0x0068 }
            java.lang.String r6 = r2.toString()     // Catch:{ Exception -> 0x0068 }
            java.lang.Object[] r7 = new java.lang.Object[r0]     // Catch:{ Exception -> 0x0068 }
            org.telegram.SQLite.SQLiteCursor r1 = r5.queryFinalized(r6, r7)     // Catch:{ Exception -> 0x0068 }
            boolean r5 = r1.next()     // Catch:{ Exception -> 0x0068 }
            if (r5 == 0) goto L_0x006e
            int r5 = r1.intValue(r0)     // Catch:{ Exception -> 0x0068 }
            java.lang.Integer r5 = java.lang.Integer.valueOf(r5)     // Catch:{ Exception -> 0x0068 }
            r8[r0] = r5     // Catch:{ Exception -> 0x0068 }
            goto L_0x006e
        L_0x002e:
            org.telegram.SQLite.SQLiteDatabase r5 = r4.database     // Catch:{ Exception -> 0x0068 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0068 }
            r2.<init>()     // Catch:{ Exception -> 0x0068 }
            java.lang.String r3 = "SELECT last_mid, inbox_max FROM dialogs WHERE did = "
            r2.append(r3)     // Catch:{ Exception -> 0x0068 }
            r2.append(r6)     // Catch:{ Exception -> 0x0068 }
            java.lang.String r6 = r2.toString()     // Catch:{ Exception -> 0x0068 }
            java.lang.Object[] r7 = new java.lang.Object[r0]     // Catch:{ Exception -> 0x0068 }
            org.telegram.SQLite.SQLiteCursor r1 = r5.queryFinalized(r6, r7)     // Catch:{ Exception -> 0x0068 }
            boolean r5 = r1.next()     // Catch:{ Exception -> 0x0068 }
            if (r5 == 0) goto L_0x006e
            int r5 = r1.intValue(r0)     // Catch:{ Exception -> 0x0068 }
            r6 = 1
            int r6 = r1.intValue(r6)     // Catch:{ Exception -> 0x0068 }
            if (r6 <= r5) goto L_0x005f
            java.lang.Integer r5 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x0068 }
            r8[r0] = r5     // Catch:{ Exception -> 0x0068 }
            goto L_0x006e
        L_0x005f:
            java.lang.Integer r5 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x0068 }
            r8[r0] = r5     // Catch:{ Exception -> 0x0068 }
            goto L_0x006e
        L_0x0066:
            r5 = move-exception
            goto L_0x0075
        L_0x0068:
            r5 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r5)     // Catch:{ all -> 0x0066 }
            if (r1 == 0) goto L_0x0071
        L_0x006e:
            r1.dispose()
        L_0x0071:
            r9.countDown()
            return
        L_0x0075:
            if (r1 == 0) goto L_0x007a
            r1.dispose()
        L_0x007a:
            throw r5
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$getDialogReadMax$194(boolean, long, java.lang.Integer[], java.util.concurrent.CountDownLatch):void");
    }

    public int getChannelPtsSync(long j) {
        CountDownLatch countDownLatch = new CountDownLatch(1);
        Integer[] numArr = {0};
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda113(this, j, numArr, countDownLatch));
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return numArr[0].intValue();
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:9:0x0033, code lost:
        if (r0 == null) goto L_0x0038;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$getChannelPtsSync$195(long r5, java.lang.Integer[] r7, java.util.concurrent.CountDownLatch r8) {
        /*
            r4 = this;
            r0 = 0
            org.telegram.SQLite.SQLiteDatabase r1 = r4.database     // Catch:{ Exception -> 0x002f }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x002f }
            r2.<init>()     // Catch:{ Exception -> 0x002f }
            java.lang.String r3 = "SELECT pts FROM dialogs WHERE did = "
            r2.append(r3)     // Catch:{ Exception -> 0x002f }
            long r5 = -r5
            r2.append(r5)     // Catch:{ Exception -> 0x002f }
            java.lang.String r5 = r2.toString()     // Catch:{ Exception -> 0x002f }
            r6 = 0
            java.lang.Object[] r2 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x002f }
            org.telegram.SQLite.SQLiteCursor r0 = r1.queryFinalized(r5, r2)     // Catch:{ Exception -> 0x002f }
            boolean r5 = r0.next()     // Catch:{ Exception -> 0x002f }
            if (r5 == 0) goto L_0x0035
            int r5 = r0.intValue(r6)     // Catch:{ Exception -> 0x002f }
            java.lang.Integer r5 = java.lang.Integer.valueOf(r5)     // Catch:{ Exception -> 0x002f }
            r7[r6] = r5     // Catch:{ Exception -> 0x002f }
            goto L_0x0035
        L_0x002d:
            r5 = move-exception
            goto L_0x0041
        L_0x002f:
            r5 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r5)     // Catch:{ all -> 0x002d }
            if (r0 == 0) goto L_0x0038
        L_0x0035:
            r0.dispose()
        L_0x0038:
            r8.countDown()     // Catch:{ Exception -> 0x003c }
            goto L_0x0040
        L_0x003c:
            r5 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r5)
        L_0x0040:
            return
        L_0x0041:
            if (r0 == 0) goto L_0x0046
            r0.dispose()
        L_0x0046:
            throw r5
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$getChannelPtsSync$195(long, java.lang.Integer[], java.util.concurrent.CountDownLatch):void");
    }

    public TLRPC$User getUserSync(long j) {
        CountDownLatch countDownLatch = new CountDownLatch(1);
        TLRPC$User[] tLRPC$UserArr = new TLRPC$User[1];
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda195(this, tLRPC$UserArr, j, countDownLatch));
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return tLRPC$UserArr[0];
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$getUserSync$196(TLRPC$User[] tLRPC$UserArr, long j, CountDownLatch countDownLatch) {
        tLRPC$UserArr[0] = getUser(j);
        countDownLatch.countDown();
    }

    public TLRPC$Chat getChatSync(long j) {
        CountDownLatch countDownLatch = new CountDownLatch(1);
        TLRPC$Chat[] tLRPC$ChatArr = new TLRPC$Chat[1];
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda193(this, tLRPC$ChatArr, j, countDownLatch));
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return tLRPC$ChatArr[0];
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$getChatSync$197(TLRPC$Chat[] tLRPC$ChatArr, long j, CountDownLatch countDownLatch) {
        tLRPC$ChatArr[0] = getChat(j);
        countDownLatch.countDown();
    }

    public TLRPC$User getUser(long j) {
        try {
            ArrayList arrayList = new ArrayList();
            getUsersInternal("" + j, arrayList);
            if (!arrayList.isEmpty()) {
                return (TLRPC$User) arrayList.get(0);
            }
            return null;
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            return null;
        }
    }

    public ArrayList<TLRPC$User> getUsers(ArrayList<Long> arrayList) {
        ArrayList<TLRPC$User> arrayList2 = new ArrayList<>();
        try {
            getUsersInternal(TextUtils.join(",", arrayList), arrayList2);
        } catch (Exception e) {
            arrayList2.clear();
            FileLog.e((Throwable) e);
        }
        return arrayList2;
    }

    public TLRPC$Chat getChat(long j) {
        try {
            ArrayList arrayList = new ArrayList();
            getChatsInternal("" + j, arrayList);
            if (!arrayList.isEmpty()) {
                return (TLRPC$Chat) arrayList.get(0);
            }
            return null;
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            return null;
        }
    }

    public TLRPC$EncryptedChat getEncryptedChat(long j) {
        try {
            ArrayList arrayList = new ArrayList();
            getEncryptedChatsInternal("" + j, arrayList, (ArrayList<Long>) null);
            if (!arrayList.isEmpty()) {
                return (TLRPC$EncryptedChat) arrayList.get(0);
            }
            return null;
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            return null;
        }
    }

    /* JADX WARNING: type inference failed for: r9v18 */
    /* JADX WARNING: type inference failed for: r9v24 */
    /* JADX WARNING: type inference failed for: r9v28 */
    /* JADX WARNING: type inference failed for: r9v30 */
    /* JADX WARNING: Code restructure failed: missing block: B:144:0x02ec, code lost:
        r7 = r12;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:244:0x05a1, code lost:
        r13 = r30;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:70:0x014a, code lost:
        if (r10.startsWith(r9) == false) goto L_0x014c;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:86:0x0186, code lost:
        if (r22.startsWith(r9) == false) goto L_0x01c5;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:9:0x0051, code lost:
        if (r15.length() == 0) goto L_0x005e;
     */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:142:0x02d7 A[Catch:{ Exception -> 0x0309, all -> 0x0305 }, LOOP:2: B:112:0x0221->B:142:0x02d7, LOOP_END] */
    /* JADX WARNING: Removed duplicated region for block: B:243:0x059b A[Catch:{ Exception -> 0x0309, all -> 0x0305 }, LOOP:6: B:205:0x0426->B:243:0x059b, LOOP_END] */
    /* JADX WARNING: Removed duplicated region for block: B:312:0x06e5 A[Catch:{ Exception -> 0x0309, all -> 0x0305 }, LOOP:10: B:284:0x063f->B:312:0x06e5, LOOP_END] */
    /* JADX WARNING: Removed duplicated region for block: B:327:0x070f  */
    /* JADX WARNING: Removed duplicated region for block: B:331:0x0717  */
    /* JADX WARNING: Removed duplicated region for block: B:349:0x0272 A[SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:368:0x0470 A[SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:377:0x0689 A[SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:381:? A[RETURN, SYNTHETIC] */
    /* JADX WARNING: Unknown variable types count: 1 */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void localSearch(int r26, java.lang.String r27, java.util.ArrayList<java.lang.Object> r28, java.util.ArrayList<java.lang.CharSequence> r29, java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r30, int r31) {
        /*
            r25 = this;
            r1 = r25
            r2 = r26
            r3 = r28
            r4 = r29
            java.lang.String r5 = "RepliesTitle"
            int r6 = r1.currentAccount
            org.telegram.messenger.UserConfig r6 = org.telegram.messenger.UserConfig.getInstance(r6)
            long r6 = r6.getClientUserId()
            java.lang.String r9 = r27.trim()     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            java.lang.String r9 = r9.toLowerCase()     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            boolean r10 = android.text.TextUtils.isEmpty(r9)     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            if (r10 == 0) goto L_0x0023
            return
        L_0x0023:
            java.lang.String r10 = "SavedMessages"
            r11 = 2131628140(0x7f0e106c, float:1.8883564E38)
            java.lang.String r10 = org.telegram.messenger.LocaleController.getString(r10, r11)     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            java.lang.String r10 = r10.toLowerCase()     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            java.lang.String r11 = "saved messages"
            r12 = 2131627982(0x7f0e0fce, float:1.8883244E38)
            java.lang.String r13 = org.telegram.messenger.LocaleController.getString(r5, r12)     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            java.lang.String r13 = r13.toLowerCase()     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            java.lang.String r14 = "replies"
            org.telegram.messenger.LocaleController r15 = org.telegram.messenger.LocaleController.getInstance()     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            java.lang.String r15 = r15.getTranslitString(r9)     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            boolean r16 = r9.equals(r15)     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            if (r16 != 0) goto L_0x005e
            int r16 = r15.length()     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            if (r16 != 0) goto L_0x005f
            goto L_0x005e
        L_0x0054:
            r0 = move-exception
            r1 = r0
            r8 = 0
            goto L_0x0715
        L_0x0059:
            r0 = move-exception
            r1 = r0
            r8 = 0
            goto L_0x070a
        L_0x005e:
            r15 = 0
        L_0x005f:
            r8 = 1
            if (r15 == 0) goto L_0x0065
            r17 = 1
            goto L_0x0067
        L_0x0065:
            r17 = 0
        L_0x0067:
            int r12 = r8 + r17
            java.lang.String[] r8 = new java.lang.String[r12]     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            r18 = 0
            r8[r18] = r9     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            if (r15 == 0) goto L_0x0075
            r17 = 1
            r8[r17] = r15     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
        L_0x0075:
            java.util.ArrayList r15 = new java.util.ArrayList     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            r15.<init>()     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            java.util.ArrayList r4 = new java.util.ArrayList     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            r4.<init>()     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            java.util.ArrayList r3 = new java.util.ArrayList     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            r3.<init>()     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            r19 = r8
            androidx.collection.LongSparseArray r8 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            r8.<init>()     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            if (r31 < 0) goto L_0x00ab
            r20 = r12
            org.telegram.SQLite.SQLiteDatabase r12 = r25.getDatabase()     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            r21 = r5
            java.lang.String r5 = "SELECT did, date FROM dialogs WHERE folder_id = ? ORDER BY date DESC LIMIT 600"
            r23 = r13
            r22 = r14
            r14 = 1
            java.lang.Object[] r13 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            java.lang.Integer r14 = java.lang.Integer.valueOf(r31)     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            r18 = 0
            r13[r18] = r14     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            org.telegram.SQLite.SQLiteCursor r5 = r12.queryFinalized(r5, r13)     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            goto L_0x00c0
        L_0x00ab:
            r21 = r5
            r20 = r12
            r23 = r13
            r22 = r14
            org.telegram.SQLite.SQLiteDatabase r5 = r25.getDatabase()     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            java.lang.String r12 = "SELECT did, date FROM dialogs ORDER BY date DESC LIMIT 600"
            r13 = 0
            java.lang.Object[] r14 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r12, r14)     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
        L_0x00c0:
            boolean r12 = r5.next()     // Catch:{ Exception -> 0x06fd, all -> 0x06f9 }
            if (r12 == 0) goto L_0x013b
            r12 = 0
            long r13 = r5.longValue(r12)     // Catch:{ Exception -> 0x06fd, all -> 0x06f9 }
            org.telegram.ui.Adapters.DialogsSearchAdapter$DialogSearchResult r12 = new org.telegram.ui.Adapters.DialogsSearchAdapter$DialogSearchResult     // Catch:{ Exception -> 0x06fd, all -> 0x06f9 }
            r12.<init>()     // Catch:{ Exception -> 0x06fd, all -> 0x06f9 }
            r24 = r11
            r1 = 1
            int r11 = r5.intValue(r1)     // Catch:{ Exception -> 0x06fd, all -> 0x06f9 }
            r12.date = r11     // Catch:{ Exception -> 0x06fd, all -> 0x06f9 }
            r8.put(r13, r12)     // Catch:{ Exception -> 0x06fd, all -> 0x06f9 }
            boolean r1 = org.telegram.messenger.DialogObject.isEncryptedDialog(r13)     // Catch:{ Exception -> 0x06fd, all -> 0x06f9 }
            if (r1 != 0) goto L_0x011c
            boolean r1 = org.telegram.messenger.DialogObject.isUserDialog(r13)     // Catch:{ Exception -> 0x06fd, all -> 0x06f9 }
            if (r1 == 0) goto L_0x0105
            r1 = 4
            if (r2 != r1) goto L_0x00f0
            int r1 = (r13 > r6 ? 1 : (r13 == r6 ? 0 : -1))
            if (r1 != 0) goto L_0x00f0
            goto L_0x0136
        L_0x00f0:
            r1 = 2
            if (r2 == r1) goto L_0x0136
            java.lang.Long r1 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x06fd, all -> 0x06f9 }
            boolean r1 = r15.contains(r1)     // Catch:{ Exception -> 0x06fd, all -> 0x06f9 }
            if (r1 != 0) goto L_0x0136
            java.lang.Long r1 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x06fd, all -> 0x06f9 }
            r15.add(r1)     // Catch:{ Exception -> 0x06fd, all -> 0x06f9 }
            goto L_0x0136
        L_0x0105:
            r1 = 4
            if (r2 != r1) goto L_0x0109
            goto L_0x0136
        L_0x0109:
            long r11 = -r13
            java.lang.Long r1 = java.lang.Long.valueOf(r11)     // Catch:{ Exception -> 0x06fd, all -> 0x06f9 }
            boolean r1 = r4.contains(r1)     // Catch:{ Exception -> 0x06fd, all -> 0x06f9 }
            if (r1 != 0) goto L_0x0136
            java.lang.Long r1 = java.lang.Long.valueOf(r11)     // Catch:{ Exception -> 0x06fd, all -> 0x06f9 }
            r4.add(r1)     // Catch:{ Exception -> 0x06fd, all -> 0x06f9 }
            goto L_0x0136
        L_0x011c:
            if (r2 == 0) goto L_0x0121
            r1 = 3
            if (r2 != r1) goto L_0x0136
        L_0x0121:
            int r1 = org.telegram.messenger.DialogObject.getEncryptedChatId(r13)     // Catch:{ Exception -> 0x06fd, all -> 0x06f9 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x06fd, all -> 0x06f9 }
            boolean r11 = r3.contains(r11)     // Catch:{ Exception -> 0x06fd, all -> 0x06f9 }
            if (r11 != 0) goto L_0x0136
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x06fd, all -> 0x06f9 }
            r3.add(r1)     // Catch:{ Exception -> 0x06fd, all -> 0x06f9 }
        L_0x0136:
            r1 = r25
            r11 = r24
            goto L_0x00c0
        L_0x013b:
            r24 = r11
            r5.dispose()     // Catch:{ Exception -> 0x06fd, all -> 0x06f9 }
            r1 = 2147483647(0x7fffffff, float:NaN)
            r5 = 4
            if (r2 == r5) goto L_0x014c
            boolean r5 = r10.startsWith(r9)     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            if (r5 != 0) goto L_0x0154
        L_0x014c:
            r5 = r24
            boolean r5 = r5.startsWith(r9)     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            if (r5 == 0) goto L_0x0172
        L_0x0154:
            r6 = r25
            int r5 = r6.currentAccount     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            org.telegram.messenger.UserConfig r5 = org.telegram.messenger.UserConfig.getInstance(r5)     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            org.telegram.tgnet.TLRPC$User r5 = r5.getCurrentUser()     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            org.telegram.ui.Adapters.DialogsSearchAdapter$DialogSearchResult r7 = new org.telegram.ui.Adapters.DialogsSearchAdapter$DialogSearchResult     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            r7.<init>()     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            r7.date = r1     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            r7.name = r10     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            r7.object = r5     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            long r10 = r5.id     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            r8.put(r10, r7)     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            r5 = 1
            goto L_0x0175
        L_0x0172:
            r6 = r25
            r5 = 0
        L_0x0175:
            r7 = 4
            if (r2 == r7) goto L_0x0180
            r7 = r23
            boolean r7 = r7.startsWith(r9)     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            if (r7 != 0) goto L_0x0188
        L_0x0180:
            r7 = r22
            boolean r7 = r7.startsWith(r9)     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            if (r7 == 0) goto L_0x01c5
        L_0x0188:
            org.telegram.messenger.MessagesController r7 = r25.getMessagesController()     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            r9 = 708513(0xacfa1, double:3.50052E-318)
            java.lang.Long r9 = java.lang.Long.valueOf(r9)     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            org.telegram.tgnet.TLRPC$User r7 = r7.getUser(r9)     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            if (r7 != 0) goto L_0x01a8
            org.telegram.messenger.MessagesController r7 = r25.getMessagesController()     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            r9 = 1271266957(0x4bc5fe8d, double:6.2808933E-315)
            java.lang.Long r9 = java.lang.Long.valueOf(r9)     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            org.telegram.tgnet.TLRPC$User r7 = r7.getUser(r9)     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
        L_0x01a8:
            if (r7 == 0) goto L_0x01c5
            org.telegram.ui.Adapters.DialogsSearchAdapter$DialogSearchResult r9 = new org.telegram.ui.Adapters.DialogsSearchAdapter$DialogSearchResult     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            r9.<init>()     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            r9.date = r1     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            r1 = r21
            r10 = 2131627982(0x7f0e0fce, float:1.8883244E38)
            java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r1, r10)     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            r9.name = r1     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            r9.object = r7     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            long r10 = r7.id     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            r8.put(r10, r9)     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            int r5 = r5 + 1
        L_0x01c5:
            boolean r1 = r15.isEmpty()     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            java.lang.String r9 = ";;;"
            java.lang.String r10 = ","
            java.lang.String r11 = "@"
            java.lang.String r12 = " "
            if (r1 != 0) goto L_0x030e
            org.telegram.SQLite.SQLiteDatabase r1 = r25.getDatabase()     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            java.util.Locale r13 = java.util.Locale.US     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            java.lang.String r14 = "SELECT data, status, name FROM users WHERE uid IN(%s)"
            r21 = r5
            r7 = 1
            java.lang.Object[] r5 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            java.lang.String r7 = android.text.TextUtils.join(r10, r15)     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            r15 = 0
            r5[r15] = r7     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            java.lang.String r5 = java.lang.String.format(r13, r14, r5)     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            java.lang.Object[] r7 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r5, r7)     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            r5 = r21
        L_0x01f3:
            boolean r7 = r1.next()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r7 == 0) goto L_0x02fa
            r7 = 2
            java.lang.String r13 = r1.stringValue(r7)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            org.telegram.messenger.LocaleController r7 = org.telegram.messenger.LocaleController.getInstance()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.String r7 = r7.getTranslitString(r13)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            boolean r14 = r13.equals(r7)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r14 == 0) goto L_0x020d
            r7 = 0
        L_0x020d:
            int r14 = r13.lastIndexOf(r9)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r15 = -1
            if (r14 == r15) goto L_0x021b
            int r14 = r14 + 3
            java.lang.String r14 = r13.substring(r14)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            goto L_0x021c
        L_0x021b:
            r14 = 0
        L_0x021c:
            r6 = r20
            r15 = 0
            r20 = 0
        L_0x0221:
            if (r15 >= r6) goto L_0x02e8
            r2 = r19[r15]     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            boolean r21 = r13.startsWith(r2)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r21 != 0) goto L_0x026d
            r22 = r9
            java.lang.StringBuilder r9 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r9.<init>()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r9.append(r12)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r9.append(r2)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.String r9 = r9.toString()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            boolean r9 = r13.contains(r9)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r9 != 0) goto L_0x026f
            if (r7 == 0) goto L_0x0260
            boolean r9 = r7.startsWith(r2)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r9 != 0) goto L_0x026f
            java.lang.StringBuilder r9 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r9.<init>()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r9.append(r12)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r9.append(r2)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.String r9 = r9.toString()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            boolean r9 = r7.contains(r9)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r9 == 0) goto L_0x0260
            goto L_0x026f
        L_0x0260:
            if (r14 == 0) goto L_0x026a
            boolean r9 = r14.startsWith(r2)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r9 == 0) goto L_0x026a
            r9 = 2
            goto L_0x0270
        L_0x026a:
            r9 = r20
            goto L_0x0270
        L_0x026d:
            r22 = r9
        L_0x026f:
            r9 = 1
        L_0x0270:
            if (r9 == 0) goto L_0x02d7
            r7 = 0
            org.telegram.tgnet.NativeByteBuffer r13 = r1.byteBufferValue(r7)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r13 == 0) goto L_0x02d4
            int r14 = r13.readInt32(r7)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            org.telegram.tgnet.TLRPC$User r14 = org.telegram.tgnet.TLRPC$User.TLdeserialize(r13, r14, r7)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r13.reuse()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r7 = r12
            long r12 = r14.id     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.Object r12 = r8.get(r12)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            org.telegram.ui.Adapters.DialogsSearchAdapter$DialogSearchResult r12 = (org.telegram.ui.Adapters.DialogsSearchAdapter.DialogSearchResult) r12     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            org.telegram.tgnet.TLRPC$UserStatus r13 = r14.status     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r23 = r3
            if (r13 == 0) goto L_0x029a
            r15 = 1
            int r3 = r1.intValue(r15)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r13.expires = r3     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
        L_0x029a:
            r3 = 1
            if (r9 != r3) goto L_0x02a8
            java.lang.String r3 = r14.first_name     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.String r9 = r14.last_name     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.CharSequence r2 = org.telegram.messenger.AndroidUtilities.generateSearchName(r3, r9, r2)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r12.name = r2     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            goto L_0x02cf
        L_0x02a8:
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r3.<init>()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r3.append(r11)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.String r9 = r14.username     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r3.append(r9)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.StringBuilder r9 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r9.<init>()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r9.append(r11)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r9.append(r2)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.String r2 = r9.toString()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r9 = 0
            java.lang.CharSequence r2 = org.telegram.messenger.AndroidUtilities.generateSearchName(r3, r9, r2)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r12.name = r2     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
        L_0x02cf:
            r12.object = r14     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            int r5 = r5 + 1
            goto L_0x02ed
        L_0x02d4:
            r23 = r3
            goto L_0x02ec
        L_0x02d7:
            r23 = r3
            r20 = r7
            r7 = r12
            int r15 = r15 + 1
            r2 = r26
            r7 = r20
            r20 = r9
            r9 = r22
            goto L_0x0221
        L_0x02e8:
            r23 = r3
            r22 = r9
        L_0x02ec:
            r7 = r12
        L_0x02ed:
            r2 = r26
            r20 = r6
            r12 = r7
            r9 = r22
            r3 = r23
            r6 = r25
            goto L_0x01f3
        L_0x02fa:
            r23 = r3
            r22 = r9
            r7 = r12
            r6 = r20
            r1.dispose()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            goto L_0x0317
        L_0x0305:
            r0 = move-exception
            r8 = r1
            goto L_0x0714
        L_0x0309:
            r0 = move-exception
            r8 = r1
            r1 = r0
            goto L_0x070a
        L_0x030e:
            r23 = r3
            r21 = r5
            r22 = r9
            r7 = r12
            r6 = r20
        L_0x0317:
            boolean r1 = r4.isEmpty()     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            if (r1 != 0) goto L_0x03d3
            org.telegram.SQLite.SQLiteDatabase r1 = r25.getDatabase()     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            java.lang.String r3 = "SELECT data, name FROM chats WHERE uid IN(%s)"
            r9 = 1
            java.lang.Object[] r12 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            java.lang.String r4 = android.text.TextUtils.join(r10, r4)     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            r9 = 0
            r12[r9] = r4     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            java.lang.String r2 = java.lang.String.format(r2, r3, r12)     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            java.lang.Object[] r3 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r2, r3)     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
        L_0x0339:
            boolean r2 = r1.next()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r2 == 0) goto L_0x03d0
            r2 = 1
            java.lang.String r3 = r1.stringValue(r2)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            org.telegram.messenger.LocaleController r2 = org.telegram.messenger.LocaleController.getInstance()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.String r2 = r2.getTranslitString(r3)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            boolean r4 = r3.equals(r2)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r4 == 0) goto L_0x0353
            r2 = 0
        L_0x0353:
            r4 = 0
        L_0x0354:
            if (r4 >= r6) goto L_0x0339
            r9 = r19[r4]     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            boolean r12 = r3.startsWith(r9)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r12 != 0) goto L_0x0394
            java.lang.StringBuilder r12 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r12.<init>()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r12.append(r7)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r12.append(r9)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.String r12 = r12.toString()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            boolean r12 = r3.contains(r12)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r12 != 0) goto L_0x0394
            if (r2 == 0) goto L_0x0391
            boolean r12 = r2.startsWith(r9)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r12 != 0) goto L_0x0394
            java.lang.StringBuilder r12 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r12.<init>()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r12.append(r7)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r12.append(r9)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.String r12 = r12.toString()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            boolean r12 = r2.contains(r12)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r12 == 0) goto L_0x0391
            goto L_0x0394
        L_0x0391:
            int r4 = r4 + 1
            goto L_0x0354
        L_0x0394:
            r2 = 0
            org.telegram.tgnet.NativeByteBuffer r3 = r1.byteBufferValue(r2)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r3 == 0) goto L_0x0339
            int r4 = r3.readInt32(r2)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            org.telegram.tgnet.TLRPC$Chat r4 = org.telegram.tgnet.TLRPC$Chat.TLdeserialize(r3, r4, r2)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r3.reuse()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r4 == 0) goto L_0x0339
            boolean r2 = r4.deactivated     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r2 != 0) goto L_0x0339
            boolean r2 = org.telegram.messenger.ChatObject.isChannel(r4)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r2 == 0) goto L_0x03b8
            boolean r2 = org.telegram.messenger.ChatObject.isNotInChat(r4)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r2 != 0) goto L_0x0339
        L_0x03b8:
            long r2 = r4.id     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            long r2 = -r2
            java.lang.Object r2 = r8.get(r2)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            org.telegram.ui.Adapters.DialogsSearchAdapter$DialogSearchResult r2 = (org.telegram.ui.Adapters.DialogsSearchAdapter.DialogSearchResult) r2     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.String r3 = r4.title     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r12 = 0
            java.lang.CharSequence r3 = org.telegram.messenger.AndroidUtilities.generateSearchName(r3, r12, r9)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r2.name = r3     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r2.object = r4     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            int r5 = r5 + 1
            goto L_0x0339
        L_0x03d0:
            r1.dispose()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
        L_0x03d3:
            boolean r1 = r23.isEmpty()     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            if (r1 != 0) goto L_0x05ad
            org.telegram.SQLite.SQLiteDatabase r1 = r25.getDatabase()     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            java.lang.String r3 = "SELECT q.data, u.name, q.user, q.g, q.authkey, q.ttl, u.data, u.status, q.layer, q.seq_in, q.seq_out, q.use_count, q.exchange_id, q.key_date, q.fprint, q.fauthkey, q.khash, q.in_seq_no, q.admin_id, q.mtproto_seq FROM enc_chats as q INNER JOIN users as u ON q.user = u.uid WHERE q.uid IN(%s)"
            r4 = 1
            java.lang.Object[] r9 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            r4 = r23
            java.lang.String r4 = android.text.TextUtils.join(r10, r4)     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            r10 = 0
            r9[r10] = r4     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            java.lang.String r2 = java.lang.String.format(r2, r3, r9)     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            java.lang.Object[] r3 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r2, r3)     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
        L_0x03f7:
            boolean r2 = r1.next()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r2 == 0) goto L_0x05a7
            r2 = 1
            java.lang.String r3 = r1.stringValue(r2)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            org.telegram.messenger.LocaleController r2 = org.telegram.messenger.LocaleController.getInstance()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.String r2 = r2.getTranslitString(r3)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            boolean r4 = r3.equals(r2)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r4 == 0) goto L_0x0412
            r9 = 0
            goto L_0x0413
        L_0x0412:
            r9 = r2
        L_0x0413:
            r2 = r22
            int r4 = r3.lastIndexOf(r2)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r10 = -1
            if (r4 == r10) goto L_0x0423
            int r4 = r4 + 2
            java.lang.String r4 = r3.substring(r4)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            goto L_0x0424
        L_0x0423:
            r4 = 0
        L_0x0424:
            r10 = 0
            r12 = 0
        L_0x0426:
            if (r10 >= r6) goto L_0x05a1
            r13 = r19[r10]     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            boolean r14 = r3.startsWith(r13)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r14 != 0) goto L_0x046d
            java.lang.StringBuilder r14 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r14.<init>()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r14.append(r7)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r14.append(r13)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.String r14 = r14.toString()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            boolean r14 = r3.contains(r14)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r14 != 0) goto L_0x046d
            if (r9 == 0) goto L_0x0463
            boolean r14 = r9.startsWith(r13)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r14 != 0) goto L_0x046d
            java.lang.StringBuilder r14 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r14.<init>()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r14.append(r7)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r14.append(r13)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.String r14 = r14.toString()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            boolean r14 = r9.contains(r14)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r14 == 0) goto L_0x0463
            goto L_0x046d
        L_0x0463:
            if (r4 == 0) goto L_0x046e
            boolean r14 = r4.startsWith(r13)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r14 == 0) goto L_0x046e
            r12 = 2
            goto L_0x046e
        L_0x046d:
            r12 = 1
        L_0x046e:
            if (r12 == 0) goto L_0x059b
            r14 = 0
            org.telegram.tgnet.NativeByteBuffer r3 = r1.byteBufferValue(r14)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r3 == 0) goto L_0x0484
            int r4 = r3.readInt32(r14)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            org.telegram.tgnet.TLRPC$EncryptedChat r4 = org.telegram.tgnet.TLRPC$EncryptedChat.TLdeserialize(r3, r4, r14)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r3.reuse()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r9 = r4
            goto L_0x0485
        L_0x0484:
            r9 = 0
        L_0x0485:
            r3 = 6
            org.telegram.tgnet.NativeByteBuffer r3 = r1.byteBufferValue(r3)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r3 == 0) goto L_0x0499
            r4 = 0
            int r10 = r3.readInt32(r4)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            org.telegram.tgnet.TLRPC$User r10 = org.telegram.tgnet.TLRPC$User.TLdeserialize(r3, r10, r4)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r3.reuse()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            goto L_0x049a
        L_0x0499:
            r10 = 0
        L_0x049a:
            if (r9 == 0) goto L_0x05a1
            if (r10 == 0) goto L_0x05a1
            int r3 = r9.id     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            long r3 = (long) r3     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            long r3 = org.telegram.messenger.DialogObject.makeEncryptedDialogId(r3)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.Object r3 = r8.get(r3)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            org.telegram.ui.Adapters.DialogsSearchAdapter$DialogSearchResult r3 = (org.telegram.ui.Adapters.DialogsSearchAdapter.DialogSearchResult) r3     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r4 = 2
            long r14 = r1.longValue(r4)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r9.user_id = r14     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r4 = 3
            byte[] r14 = r1.byteArrayValue(r4)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r9.a_or_b = r14     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r14 = 4
            byte[] r4 = r1.byteArrayValue(r14)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r9.auth_key = r4     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r4 = 5
            int r4 = r1.intValue(r4)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r9.ttl = r4     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r4 = 8
            int r4 = r1.intValue(r4)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r9.layer = r4     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r4 = 9
            int r4 = r1.intValue(r4)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r9.seq_in = r4     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r4 = 10
            int r4 = r1.intValue(r4)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r9.seq_out = r4     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r4 = 11
            int r4 = r1.intValue(r4)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            int r15 = r4 >> 16
            short r15 = (short) r15     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r9.key_use_count_in = r15     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            short r4 = (short) r4     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r9.key_use_count_out = r4     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r4 = 12
            long r14 = r1.longValue(r4)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r9.exchange_id = r14     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r4 = 13
            int r4 = r1.intValue(r4)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r9.key_create_date = r4     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r4 = 14
            long r14 = r1.longValue(r4)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r9.future_key_fingerprint = r14     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r4 = 15
            byte[] r4 = r1.byteArrayValue(r4)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r9.future_auth_key = r4     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r4 = 16
            byte[] r4 = r1.byteArrayValue(r4)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r9.key_hash = r4     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r4 = 17
            int r4 = r1.intValue(r4)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r9.in_seq_no = r4     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r4 = 18
            long r14 = r1.longValue(r4)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r20 = 0
            int r4 = (r14 > r20 ? 1 : (r14 == r20 ? 0 : -1))
            if (r4 == 0) goto L_0x052b
            r9.admin_id = r14     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
        L_0x052b:
            r4 = 19
            int r4 = r1.intValue(r4)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r9.mtproto_seq = r4     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            org.telegram.tgnet.TLRPC$UserStatus r4 = r10.status     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r4 == 0) goto L_0x053e
            r14 = 7
            int r14 = r1.intValue(r14)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r4.expires = r14     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
        L_0x053e:
            r4 = 1
            if (r12 != r4) goto L_0x056a
            android.text.SpannableStringBuilder r4 = new android.text.SpannableStringBuilder     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.String r12 = r10.first_name     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.String r13 = r10.last_name     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.String r12 = org.telegram.messenger.ContactsController.formatName(r12, r13)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r4.<init>(r12)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r3.name = r4     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            android.text.SpannableStringBuilder r4 = (android.text.SpannableStringBuilder) r4     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            android.text.style.ForegroundColorSpan r12 = new android.text.style.ForegroundColorSpan     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.String r13 = "chats_secretName"
            int r13 = org.telegram.ui.ActionBar.Theme.getColor(r13)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r12.<init>(r13)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.CharSequence r13 = r3.name     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            int r13 = r13.length()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r14 = 33
            r15 = 0
            r4.setSpan(r12, r15, r13, r14)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            goto L_0x0591
        L_0x056a:
            java.lang.StringBuilder r4 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r4.<init>()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r4.append(r11)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.String r12 = r10.username     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r4.append(r12)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.String r4 = r4.toString()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.StringBuilder r12 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r12.<init>()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r12.append(r11)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r12.append(r13)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.String r12 = r12.toString()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r13 = 0
            java.lang.CharSequence r4 = org.telegram.messenger.AndroidUtilities.generateSearchName(r4, r13, r12)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r3.name = r4     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
        L_0x0591:
            r3.object = r9     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r13 = r30
            r13.add(r10)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            int r5 = r5 + 1
            goto L_0x05a3
        L_0x059b:
            r13 = r30
            int r10 = r10 + 1
            goto L_0x0426
        L_0x05a1:
            r13 = r30
        L_0x05a3:
            r22 = r2
            goto L_0x03f7
        L_0x05a7:
            r2 = r22
            r1.dispose()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            goto L_0x05af
        L_0x05ad:
            r2 = r22
        L_0x05af:
            java.util.ArrayList r1 = new java.util.ArrayList     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            r1.<init>(r5)     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            r3 = 0
        L_0x05b5:
            int r4 = r8.size()     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            if (r3 >= r4) goto L_0x05cf
            java.lang.Object r4 = r8.valueAt(r3)     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            org.telegram.ui.Adapters.DialogsSearchAdapter$DialogSearchResult r4 = (org.telegram.ui.Adapters.DialogsSearchAdapter.DialogSearchResult) r4     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            org.telegram.tgnet.TLObject r5 = r4.object     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            if (r5 == 0) goto L_0x05cc
            java.lang.CharSequence r5 = r4.name     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            if (r5 == 0) goto L_0x05cc
            r1.add(r4)     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
        L_0x05cc:
            int r3 = r3 + 1
            goto L_0x05b5
        L_0x05cf:
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda201 r3 = org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda201.INSTANCE     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            java.util.Collections.sort(r1, r3)     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            r3 = 0
        L_0x05d5:
            int r4 = r1.size()     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            if (r3 >= r4) goto L_0x05f2
            java.lang.Object r4 = r1.get(r3)     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            org.telegram.ui.Adapters.DialogsSearchAdapter$DialogSearchResult r4 = (org.telegram.ui.Adapters.DialogsSearchAdapter.DialogSearchResult) r4     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            org.telegram.tgnet.TLObject r5 = r4.object     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            r9 = r28
            r9.add(r5)     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            java.lang.CharSequence r4 = r4.name     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            r5 = r29
            r5.add(r4)     // Catch:{ Exception -> 0x0059, all -> 0x0054 }
            int r3 = r3 + 1
            goto L_0x05d5
        L_0x05f2:
            r1 = r26
            r9 = r28
            r5 = r29
            r3 = 2
            if (r1 == r3) goto L_0x0712
            org.telegram.SQLite.SQLiteDatabase r1 = r25.getDatabase()     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            java.lang.String r3 = "SELECT u.data, u.status, u.name, u.uid FROM users as u INNER JOIN contacts as c ON u.uid = c.uid"
            r4 = 0
            java.lang.Object[] r10 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r3, r10)     // Catch:{ Exception -> 0x0706, all -> 0x0701 }
        L_0x0608:
            boolean r3 = r1.next()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r3 == 0) goto L_0x06f5
            r3 = 3
            long r12 = r1.longValue(r3)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            int r4 = r8.indexOfKey(r12)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r4 < 0) goto L_0x061a
            goto L_0x0608
        L_0x061a:
            r4 = 2
            java.lang.String r10 = r1.stringValue(r4)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            org.telegram.messenger.LocaleController r12 = org.telegram.messenger.LocaleController.getInstance()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.String r12 = r12.getTranslitString(r10)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            boolean r13 = r10.equals(r12)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r13 == 0) goto L_0x062e
            r12 = 0
        L_0x062e:
            int r13 = r10.lastIndexOf(r2)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r14 = -1
            if (r13 == r14) goto L_0x063c
            int r13 = r13 + 3
            java.lang.String r13 = r10.substring(r13)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            goto L_0x063d
        L_0x063c:
            r13 = 0
        L_0x063d:
            r3 = 0
            r15 = 0
        L_0x063f:
            if (r3 >= r6) goto L_0x06ef
            r4 = r19[r3]     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            boolean r20 = r10.startsWith(r4)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r20 != 0) goto L_0x0686
            java.lang.StringBuilder r14 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r14.<init>()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r14.append(r7)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r14.append(r4)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.String r14 = r14.toString()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            boolean r14 = r10.contains(r14)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r14 != 0) goto L_0x0686
            if (r12 == 0) goto L_0x067c
            boolean r14 = r12.startsWith(r4)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r14 != 0) goto L_0x0686
            java.lang.StringBuilder r14 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r14.<init>()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r14.append(r7)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r14.append(r4)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.String r14 = r14.toString()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            boolean r14 = r12.contains(r14)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r14 == 0) goto L_0x067c
            goto L_0x0686
        L_0x067c:
            if (r13 == 0) goto L_0x0687
            boolean r14 = r13.startsWith(r4)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r14 == 0) goto L_0x0687
            r15 = 2
            goto L_0x0687
        L_0x0686:
            r15 = 1
        L_0x0687:
            if (r15 == 0) goto L_0x06e5
            r14 = 0
            org.telegram.tgnet.NativeByteBuffer r3 = r1.byteBufferValue(r14)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r3 == 0) goto L_0x06e3
            int r10 = r3.readInt32(r14)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            org.telegram.tgnet.TLRPC$User r10 = org.telegram.tgnet.TLRPC$User.TLdeserialize(r3, r10, r14)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r3.reuse()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            org.telegram.tgnet.TLRPC$UserStatus r3 = r10.status     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            if (r3 == 0) goto L_0x06a6
            r12 = 1
            int r13 = r1.intValue(r12)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r3.expires = r13     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
        L_0x06a6:
            r3 = 1
            if (r15 != r3) goto L_0x06b6
            java.lang.String r12 = r10.first_name     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.String r13 = r10.last_name     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.CharSequence r4 = org.telegram.messenger.AndroidUtilities.generateSearchName(r12, r13, r4)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r5.add(r4)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r13 = 0
            goto L_0x06de
        L_0x06b6:
            java.lang.StringBuilder r12 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r12.<init>()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r12.append(r11)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.String r13 = r10.username     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r12.append(r13)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.String r12 = r12.toString()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.StringBuilder r13 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r13.<init>()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r13.append(r11)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r13.append(r4)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            java.lang.String r4 = r13.toString()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r13 = 0
            java.lang.CharSequence r4 = org.telegram.messenger.AndroidUtilities.generateSearchName(r12, r13, r4)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r5.add(r4)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
        L_0x06de:
            r9.add(r10)     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            r4 = r13
            goto L_0x06f1
        L_0x06e3:
            r4 = 0
            goto L_0x06f1
        L_0x06e5:
            r4 = 0
            r14 = 0
            r16 = 1
            int r3 = r3 + 1
            r4 = 2
            r14 = -1
            goto L_0x063f
        L_0x06ef:
            r4 = 0
            r14 = 0
        L_0x06f1:
            r16 = 1
            goto L_0x0608
        L_0x06f5:
            r1.dispose()     // Catch:{ Exception -> 0x0309, all -> 0x0305 }
            goto L_0x0712
        L_0x06f9:
            r0 = move-exception
            r1 = r0
            r8 = r5
            goto L_0x0715
        L_0x06fd:
            r0 = move-exception
            r1 = r0
            r8 = r5
            goto L_0x070a
        L_0x0701:
            r0 = move-exception
            r4 = 0
            r1 = r0
            r8 = r4
            goto L_0x0715
        L_0x0706:
            r0 = move-exception
            r4 = 0
            r1 = r0
            r8 = r4
        L_0x070a:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r1)     // Catch:{ all -> 0x0713 }
            if (r8 == 0) goto L_0x0712
            r8.dispose()
        L_0x0712:
            return
        L_0x0713:
            r0 = move-exception
        L_0x0714:
            r1 = r0
        L_0x0715:
            if (r8 == 0) goto L_0x071a
            r8.dispose()
        L_0x071a:
            goto L_0x071c
        L_0x071b:
            throw r1
        L_0x071c:
            goto L_0x071b
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.localSearch(int, java.lang.String, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, int):void");
    }

    /* access modifiers changed from: private */
    public static /* synthetic */ int lambda$localSearch$198(DialogsSearchAdapter.DialogSearchResult dialogSearchResult, DialogsSearchAdapter.DialogSearchResult dialogSearchResult2) {
        int i = dialogSearchResult.date;
        int i2 = dialogSearchResult2.date;
        if (i < i2) {
            return 1;
        }
        return i > i2 ? -1 : 0;
    }

    /* JADX WARNING: Code restructure failed: missing block: B:15:0x004e, code lost:
        if (r1 == null) goto L_0x0053;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public java.util.ArrayList<java.lang.Integer> getCachedMessagesInRange(long r7, int r9, int r10) {
        /*
            r6 = this;
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            r1 = 0
            org.telegram.SQLite.SQLiteDatabase r2 = r6.database     // Catch:{ Exception -> 0x004a }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x004a }
            java.lang.String r4 = "SELECT mid FROM messages_v2 WHERE uid = %d AND date >= %d AND date <= %d"
            r5 = 3
            java.lang.Object[] r5 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x004a }
            java.lang.Long r7 = java.lang.Long.valueOf(r7)     // Catch:{ Exception -> 0x004a }
            r8 = 0
            r5[r8] = r7     // Catch:{ Exception -> 0x004a }
            r7 = 1
            java.lang.Integer r9 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x004a }
            r5[r7] = r9     // Catch:{ Exception -> 0x004a }
            r7 = 2
            java.lang.Integer r9 = java.lang.Integer.valueOf(r10)     // Catch:{ Exception -> 0x004a }
            r5[r7] = r9     // Catch:{ Exception -> 0x004a }
            java.lang.String r7 = java.lang.String.format(r3, r4, r5)     // Catch:{ Exception -> 0x004a }
            java.lang.Object[] r9 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x004a }
            org.telegram.SQLite.SQLiteCursor r1 = r2.queryFinalized(r7, r9)     // Catch:{ Exception -> 0x004a }
        L_0x002e:
            boolean r7 = r1.next()     // Catch:{ Exception -> 0x0040 }
            if (r7 == 0) goto L_0x0044
            int r7 = r1.intValue(r8)     // Catch:{ Exception -> 0x0040 }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r7)     // Catch:{ Exception -> 0x0040 }
            r0.add(r7)     // Catch:{ Exception -> 0x0040 }
            goto L_0x002e
        L_0x0040:
            r7 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r7)     // Catch:{ Exception -> 0x004a }
        L_0x0044:
            r1.dispose()     // Catch:{ Exception -> 0x004a }
            goto L_0x0050
        L_0x0048:
            r7 = move-exception
            goto L_0x0054
        L_0x004a:
            r7 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r7)     // Catch:{ all -> 0x0048 }
            if (r1 == 0) goto L_0x0053
        L_0x0050:
            r1.dispose()
        L_0x0053:
            return r0
        L_0x0054:
            if (r1 == 0) goto L_0x0059
            r1.dispose()
        L_0x0059:
            goto L_0x005b
        L_0x005a:
            throw r7
        L_0x005b:
            goto L_0x005a
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.getCachedMessagesInRange(long, int, int):java.util.ArrayList");
    }

    public void updateUnreadReactionsCount(long j, int i) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda42(this, i, j));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:20:0x0044  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$updateUnreadReactionsCount$199(int r5, long r6) {
        /*
            r4 = this;
            r0 = 0
            org.telegram.SQLite.SQLiteDatabase r1 = r4.database     // Catch:{ SQLiteException -> 0x0038 }
            java.lang.String r2 = "UPDATE dialogs SET unread_reactions = ? WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ SQLiteException -> 0x0038 }
            r2 = 0
            int r2 = java.lang.Math.max(r5, r2)     // Catch:{ SQLiteException -> 0x0033, all -> 0x0030 }
            r3 = 1
            r1.bindInteger(r3, r2)     // Catch:{ SQLiteException -> 0x0033, all -> 0x0030 }
            r2 = 2
            r1.bindLong(r2, r6)     // Catch:{ SQLiteException -> 0x0033, all -> 0x0030 }
            r1.step()     // Catch:{ SQLiteException -> 0x0033, all -> 0x0030 }
            r1.dispose()     // Catch:{ SQLiteException -> 0x0033, all -> 0x0030 }
            if (r5 != 0) goto L_0x0041
            org.telegram.SQLite.SQLiteDatabase r5 = r4.database     // Catch:{ SQLiteException -> 0x0038 }
            java.lang.String r1 = "UPDATE reaction_mentions SET state = 0 WHERE dialog_id = ?"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r5.executeFast(r1)     // Catch:{ SQLiteException -> 0x0038 }
            r0.bindLong(r3, r6)     // Catch:{ SQLiteException -> 0x0038 }
            r0.step()     // Catch:{ SQLiteException -> 0x0038 }
            r0.dispose()     // Catch:{ SQLiteException -> 0x0038 }
            goto L_0x0041
        L_0x0030:
            r5 = move-exception
            r0 = r1
            goto L_0x0042
        L_0x0033:
            r5 = move-exception
            r0 = r1
            goto L_0x0039
        L_0x0036:
            r5 = move-exception
            goto L_0x0042
        L_0x0038:
            r5 = move-exception
        L_0x0039:
            r5.printStackTrace()     // Catch:{ all -> 0x0036 }
            if (r0 == 0) goto L_0x0041
            r0.dispose()
        L_0x0041:
            return
        L_0x0042:
            if (r0 == 0) goto L_0x0047
            r0.dispose()
        L_0x0047:
            throw r5
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$updateUnreadReactionsCount$199(int, long):void");
    }

    public void markMessageReactionsAsRead(long j, int i, boolean z) {
        if (z) {
            getStorageQueue().postRunnable(new MessagesStorage$$ExternalSyntheticLambda69(this, j, i));
        } else {
            lambda$markMessageReactionsAsRead$200(j, i);
        }
    }

    /* JADX WARNING: Code restructure failed: missing block: B:28:0x00bf, code lost:
        r12 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:29:0x00c0, code lost:
        r1 = null;
        r0 = r11;
        r11 = r12;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:30:0x00c4, code lost:
        r12 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:32:?, code lost:
        org.telegram.messenger.FileLog.e((java.lang.Throwable) r12);
     */
    /* JADX WARNING: Failed to process nested try/catch */
    /* JADX WARNING: Removed duplicated region for block: B:28:0x00bf A[ExcHandler: all (r12v2 'th' java.lang.Throwable A[CUSTOM_DECLARE]), Splitter:B:26:0x00a6] */
    /* JADX WARNING: Removed duplicated region for block: B:50:0x00eb  */
    /* JADX WARNING: Removed duplicated region for block: B:52:0x00f0  */
    /* JADX WARNING: Removed duplicated region for block: B:55:0x00f7  */
    /* JADX WARNING: Removed duplicated region for block: B:57:0x00fc  */
    /* JADX WARNING: Removed duplicated region for block: B:63:? A[RETURN, SYNTHETIC] */
    /* renamed from: markMessageReactionsAsReadInternal */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void lambda$markMessageReactionsAsRead$200(long r11, int r13) {
        /*
            r10 = this;
            r0 = 0
            org.telegram.messenger.MessagesStorage r1 = r10.getMessagesStorage()     // Catch:{ SQLiteException -> 0x00e4, all -> 0x00e1 }
            org.telegram.SQLite.SQLiteDatabase r1 = r1.getDatabase()     // Catch:{ SQLiteException -> 0x00e4, all -> 0x00e1 }
            java.lang.String r2 = "UPDATE reaction_mentions SET state = 0 WHERE message_id = ? AND dialog_id = ?"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ SQLiteException -> 0x00e4, all -> 0x00e1 }
            r2 = 1
            r1.bindInteger(r2, r13)     // Catch:{ SQLiteException -> 0x00dc, all -> 0x00d7 }
            r3 = 2
            r1.bindLong(r3, r11)     // Catch:{ SQLiteException -> 0x00dc, all -> 0x00d7 }
            r1.step()     // Catch:{ SQLiteException -> 0x00dc, all -> 0x00d7 }
            r1.dispose()     // Catch:{ SQLiteException -> 0x00dc, all -> 0x00d7 }
            org.telegram.SQLite.SQLiteDatabase r1 = r10.database     // Catch:{ SQLiteException -> 0x00e4, all -> 0x00e1 }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ SQLiteException -> 0x00e4, all -> 0x00e1 }
            java.lang.String r5 = "SELECT data FROM messages_v2 WHERE uid = %d AND mid = %d"
            java.lang.Object[] r6 = new java.lang.Object[r3]     // Catch:{ SQLiteException -> 0x00e4, all -> 0x00e1 }
            java.lang.Long r7 = java.lang.Long.valueOf(r11)     // Catch:{ SQLiteException -> 0x00e4, all -> 0x00e1 }
            r8 = 0
            r6[r8] = r7     // Catch:{ SQLiteException -> 0x00e4, all -> 0x00e1 }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r13)     // Catch:{ SQLiteException -> 0x00e4, all -> 0x00e1 }
            r6[r2] = r7     // Catch:{ SQLiteException -> 0x00e4, all -> 0x00e1 }
            java.lang.String r4 = java.lang.String.format(r4, r5, r6)     // Catch:{ SQLiteException -> 0x00e4, all -> 0x00e1 }
            java.lang.Object[] r5 = new java.lang.Object[r8]     // Catch:{ SQLiteException -> 0x00e4, all -> 0x00e1 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r4, r5)     // Catch:{ SQLiteException -> 0x00e4, all -> 0x00e1 }
            boolean r4 = r1.next()     // Catch:{ SQLiteException -> 0x00d5 }
            if (r4 == 0) goto L_0x007e
            org.telegram.tgnet.NativeByteBuffer r4 = r1.byteBufferValue(r8)     // Catch:{ SQLiteException -> 0x00d5 }
            if (r4 == 0) goto L_0x007e
            int r5 = r4.readInt32(r8)     // Catch:{ SQLiteException -> 0x00d5 }
            org.telegram.tgnet.TLRPC$Message r5 = org.telegram.tgnet.TLRPC$Message.TLdeserialize(r4, r5, r8)     // Catch:{ SQLiteException -> 0x00d5 }
            org.telegram.messenger.UserConfig r6 = r10.getUserConfig()     // Catch:{ SQLiteException -> 0x00d5 }
            long r6 = r6.clientUserId     // Catch:{ SQLiteException -> 0x00d5 }
            r5.readAttachPath(r4, r6)     // Catch:{ SQLiteException -> 0x00d5 }
            r4.reuse()     // Catch:{ SQLiteException -> 0x00d5 }
            org.telegram.tgnet.TLRPC$TL_messageReactions r4 = r5.reactions     // Catch:{ SQLiteException -> 0x00d5 }
            if (r4 == 0) goto L_0x007f
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_messagePeerReaction> r4 = r4.recent_reactions     // Catch:{ SQLiteException -> 0x00d5 }
            if (r4 == 0) goto L_0x007f
            r4 = 0
        L_0x0065:
            org.telegram.tgnet.TLRPC$TL_messageReactions r6 = r5.reactions     // Catch:{ SQLiteException -> 0x00d5 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_messagePeerReaction> r6 = r6.recent_reactions     // Catch:{ SQLiteException -> 0x00d5 }
            int r6 = r6.size()     // Catch:{ SQLiteException -> 0x00d5 }
            if (r4 >= r6) goto L_0x007f
            org.telegram.tgnet.TLRPC$TL_messageReactions r6 = r5.reactions     // Catch:{ SQLiteException -> 0x00d5 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_messagePeerReaction> r6 = r6.recent_reactions     // Catch:{ SQLiteException -> 0x00d5 }
            java.lang.Object r6 = r6.get(r4)     // Catch:{ SQLiteException -> 0x00d5 }
            org.telegram.tgnet.TLRPC$TL_messagePeerReaction r6 = (org.telegram.tgnet.TLRPC$TL_messagePeerReaction) r6     // Catch:{ SQLiteException -> 0x00d5 }
            r6.unread = r8     // Catch:{ SQLiteException -> 0x00d5 }
            int r4 = r4 + 1
            goto L_0x0065
        L_0x007e:
            r5 = r0
        L_0x007f:
            r1.dispose()     // Catch:{ SQLiteException -> 0x00d5 }
            if (r5 == 0) goto L_0x00cf
            org.telegram.messenger.MessagesStorage r1 = r10.getMessagesStorage()     // Catch:{ SQLiteException -> 0x00e4, all -> 0x00e1 }
            org.telegram.SQLite.SQLiteDatabase r1 = r1.getDatabase()     // Catch:{ SQLiteException -> 0x00e4, all -> 0x00e1 }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ SQLiteException -> 0x00e4, all -> 0x00e1 }
            java.lang.String r6 = "UPDATE messages_v2 SET data = ? WHERE uid = %d AND mid = %d"
            java.lang.Object[] r3 = new java.lang.Object[r3]     // Catch:{ SQLiteException -> 0x00e4, all -> 0x00e1 }
            java.lang.Long r11 = java.lang.Long.valueOf(r11)     // Catch:{ SQLiteException -> 0x00e4, all -> 0x00e1 }
            r3[r8] = r11     // Catch:{ SQLiteException -> 0x00e4, all -> 0x00e1 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r13)     // Catch:{ SQLiteException -> 0x00e4, all -> 0x00e1 }
            r3[r2] = r11     // Catch:{ SQLiteException -> 0x00e4, all -> 0x00e1 }
            java.lang.String r11 = java.lang.String.format(r4, r6, r3)     // Catch:{ SQLiteException -> 0x00e4, all -> 0x00e1 }
            org.telegram.SQLite.SQLitePreparedStatement r11 = r1.executeFast(r11)     // Catch:{ SQLiteException -> 0x00e4, all -> 0x00e1 }
            org.telegram.tgnet.NativeByteBuffer r12 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x00c4, all -> 0x00bf }
            int r13 = r5.getObjectSize()     // Catch:{ Exception -> 0x00c4, all -> 0x00bf }
            r12.<init>((int) r13)     // Catch:{ Exception -> 0x00c4, all -> 0x00bf }
            r5.serializeToStream(r12)     // Catch:{ Exception -> 0x00c4, all -> 0x00bf }
            r11.bindByteBuffer((int) r2, (org.telegram.tgnet.NativeByteBuffer) r12)     // Catch:{ Exception -> 0x00c4, all -> 0x00bf }
            r11.step()     // Catch:{ Exception -> 0x00c4, all -> 0x00bf }
            r11.dispose()     // Catch:{ Exception -> 0x00c4, all -> 0x00bf }
            r12.reuse()     // Catch:{ Exception -> 0x00c4, all -> 0x00bf }
            goto L_0x00c8
        L_0x00bf:
            r12 = move-exception
            r1 = r0
            r0 = r11
            r11 = r12
            goto L_0x00f5
        L_0x00c4:
            r12 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r12)     // Catch:{ SQLiteException -> 0x00ca, all -> 0x00bf }
        L_0x00c8:
            r0 = r11
            goto L_0x00cf
        L_0x00ca:
            r12 = move-exception
            r1 = r0
            r0 = r11
            r11 = r12
            goto L_0x00e6
        L_0x00cf:
            if (r0 == 0) goto L_0x00f3
            r0.dispose()
            goto L_0x00f3
        L_0x00d5:
            r11 = move-exception
            goto L_0x00e6
        L_0x00d7:
            r11 = move-exception
            r9 = r1
            r1 = r0
            r0 = r9
            goto L_0x00f5
        L_0x00dc:
            r11 = move-exception
            r9 = r1
            r1 = r0
            r0 = r9
            goto L_0x00e6
        L_0x00e1:
            r11 = move-exception
            r1 = r0
            goto L_0x00f5
        L_0x00e4:
            r11 = move-exception
            r1 = r0
        L_0x00e6:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r11)     // Catch:{ all -> 0x00f4 }
            if (r0 == 0) goto L_0x00ee
            r0.dispose()
        L_0x00ee:
            if (r1 == 0) goto L_0x00f3
            r1.dispose()
        L_0x00f3:
            return
        L_0x00f4:
            r11 = move-exception
        L_0x00f5:
            if (r0 == 0) goto L_0x00fa
            r0.dispose()
        L_0x00fa:
            if (r1 == 0) goto L_0x00ff
            r1.dispose()
        L_0x00ff:
            goto L_0x0101
        L_0x0100:
            throw r11
        L_0x0101:
            goto L_0x0100
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$markMessageReactionsAsRead$200(long, int):void");
    }

    public void updateDialogUnreadReactions(long j, int i, boolean z) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda186(this, z, j, i));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:27:0x0063  */
    /* JADX WARNING: Removed duplicated region for block: B:29:0x0068  */
    /* JADX WARNING: Removed duplicated region for block: B:32:0x006f  */
    /* JADX WARNING: Removed duplicated region for block: B:34:0x0074  */
    /* JADX WARNING: Removed duplicated region for block: B:37:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$updateDialogUnreadReactions$201(boolean r6, long r7, int r9) {
        /*
            r5 = this;
            r0 = 0
            r1 = 0
            if (r6 == 0) goto L_0x0031
            org.telegram.SQLite.SQLiteDatabase r6 = r5.database     // Catch:{ SQLiteException -> 0x005c, all -> 0x0059 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ SQLiteException -> 0x005c, all -> 0x0059 }
            r2.<init>()     // Catch:{ SQLiteException -> 0x005c, all -> 0x0059 }
            java.lang.String r3 = "SELECT unread_reactions FROM dialogs WHERE did = "
            r2.append(r3)     // Catch:{ SQLiteException -> 0x005c, all -> 0x0059 }
            r2.append(r7)     // Catch:{ SQLiteException -> 0x005c, all -> 0x0059 }
            java.lang.String r2 = r2.toString()     // Catch:{ SQLiteException -> 0x005c, all -> 0x0059 }
            java.lang.Object[] r3 = new java.lang.Object[r1]     // Catch:{ SQLiteException -> 0x005c, all -> 0x0059 }
            org.telegram.SQLite.SQLiteCursor r6 = r6.queryFinalized(r2, r3)     // Catch:{ SQLiteException -> 0x005c, all -> 0x0059 }
            boolean r2 = r6.next()     // Catch:{ SQLiteException -> 0x002f }
            if (r2 == 0) goto L_0x002b
            int r2 = r6.intValue(r1)     // Catch:{ SQLiteException -> 0x002f }
            int r1 = java.lang.Math.max(r1, r2)     // Catch:{ SQLiteException -> 0x002f }
        L_0x002b:
            r6.dispose()     // Catch:{ SQLiteException -> 0x002f }
            goto L_0x0031
        L_0x002f:
            r7 = move-exception
            goto L_0x005e
        L_0x0031:
            int r1 = r1 + r9
            org.telegram.messenger.MessagesStorage r6 = r5.getMessagesStorage()     // Catch:{ SQLiteException -> 0x005c, all -> 0x0059 }
            org.telegram.SQLite.SQLiteDatabase r6 = r6.getDatabase()     // Catch:{ SQLiteException -> 0x005c, all -> 0x0059 }
            java.lang.String r9 = "UPDATE dialogs SET unread_reactions = ? WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r6 = r6.executeFast(r9)     // Catch:{ SQLiteException -> 0x005c, all -> 0x0059 }
            r9 = 1
            r6.bindInteger(r9, r1)     // Catch:{ SQLiteException -> 0x0054, all -> 0x004f }
            r9 = 2
            r6.bindLong(r9, r7)     // Catch:{ SQLiteException -> 0x0054, all -> 0x004f }
            r6.step()     // Catch:{ SQLiteException -> 0x0054, all -> 0x004f }
            r6.dispose()     // Catch:{ SQLiteException -> 0x0054, all -> 0x004f }
            goto L_0x006b
        L_0x004f:
            r7 = move-exception
            r4 = r0
            r0 = r6
            r6 = r4
            goto L_0x006d
        L_0x0054:
            r7 = move-exception
            r4 = r0
            r0 = r6
            r6 = r4
            goto L_0x005e
        L_0x0059:
            r7 = move-exception
            r6 = r0
            goto L_0x006d
        L_0x005c:
            r7 = move-exception
            r6 = r0
        L_0x005e:
            r7.printStackTrace()     // Catch:{ all -> 0x006c }
            if (r0 == 0) goto L_0x0066
            r0.dispose()
        L_0x0066:
            if (r6 == 0) goto L_0x006b
            r6.dispose()
        L_0x006b:
            return
        L_0x006c:
            r7 = move-exception
        L_0x006d:
            if (r0 == 0) goto L_0x0072
            r0.dispose()
        L_0x0072:
            if (r6 == 0) goto L_0x0077
            r6.dispose()
        L_0x0077:
            throw r7
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$updateDialogUnreadReactions$201(boolean, long, int):void");
    }
}
