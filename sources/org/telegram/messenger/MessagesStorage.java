package org.telegram.messenger;

import android.appwidget.AppWidgetManager;
import android.text.TextUtils;
import android.util.Pair;
import android.util.SparseArray;
import android.util.SparseIntArray;
import androidx.collection.LongSparseArray;
import java.io.File;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.atomic.AtomicLong;
import org.telegram.SQLite.SQLiteCursor;
import org.telegram.SQLite.SQLiteDatabase;
import org.telegram.SQLite.SQLiteException;
import org.telegram.SQLite.SQLitePreparedStatement;
import org.telegram.messenger.ContactsController;
import org.telegram.messenger.MessagesController;
import org.telegram.messenger.support.LongSparseIntArray;
import org.telegram.tgnet.NativeByteBuffer;
import org.telegram.tgnet.RequestDelegate;
import org.telegram.tgnet.TLObject;
import org.telegram.tgnet.TLRPC;
import org.telegram.ui.ActionBar.Theme;
import org.telegram.ui.Adapters.DialogsSearchAdapter;

public class MessagesStorage extends BaseController {
    private static volatile MessagesStorage[] Instance = new MessagesStorage[3];
    private static final int LAST_DB_VERSION = 93;
    private int archiveUnreadCount;
    private int[][] bots = {new int[2], new int[2]};
    private File cacheFile;
    private int[][] channels = {new int[2], new int[2]};
    private int[][] contacts = {new int[2], new int[2]};
    private SQLiteDatabase database;
    private boolean databaseMigrationInProgress;
    private ArrayList<MessagesController.DialogFilter> dialogFilters = new ArrayList<>();
    private SparseArray<MessagesController.DialogFilter> dialogFiltersMap = new SparseArray<>();
    private LongSparseArray<Integer> dialogsWithMentions = new LongSparseArray<>();
    private LongSparseArray<Integer> dialogsWithUnread = new LongSparseArray<>();
    private int[][] groups = {new int[2], new int[2]};
    private int lastDateValue = 0;
    private int lastPtsValue = 0;
    private int lastQtsValue = 0;
    private int lastSavedDate = 0;
    private int lastSavedPts = 0;
    private int lastSavedQts = 0;
    private int lastSavedSeq = 0;
    private int lastSecretVersion = 0;
    private int lastSeqValue = 0;
    private AtomicLong lastTaskId = new AtomicLong(System.currentTimeMillis());
    private int mainUnreadCount;
    private int[] mentionChannels = new int[2];
    private int[] mentionGroups = new int[2];
    private int[][] nonContacts = {new int[2], new int[2]};
    private CountDownLatch openSync = new CountDownLatch(1);
    private volatile int pendingArchiveUnreadCount;
    private volatile int pendingMainUnreadCount;
    private int secretG = 0;
    private byte[] secretPBytes = null;
    private File shmCacheFile;
    public boolean showClearDatabaseAlert;
    private DispatchQueue storageQueue = new DispatchQueue("storageQueue");
    private SparseArray<ArrayList<Runnable>> tasks = new SparseArray<>();
    private LongSparseArray<Boolean> unknownDialogsIds = new LongSparseArray<>();
    private File walCacheFile;

    public interface BooleanCallback {
        void run(boolean z);
    }

    public interface IntCallback {
        void run(int i);
    }

    public interface LongCallback {
        void run(long j);
    }

    public interface StringCallback {
        void run(String str);
    }

    public static MessagesStorage getInstance(int num) {
        MessagesStorage localInstance = Instance[num];
        if (localInstance == null) {
            synchronized (MessagesStorage.class) {
                localInstance = Instance[num];
                if (localInstance == null) {
                    MessagesStorage[] messagesStorageArr = Instance;
                    MessagesStorage messagesStorage = new MessagesStorage(num);
                    localInstance = messagesStorage;
                    messagesStorageArr[num] = messagesStorage;
                }
            }
        }
        return localInstance;
    }

    private void ensureOpened() {
        try {
            this.openSync.await();
        } catch (Throwable th) {
        }
    }

    public int getLastDateValue() {
        ensureOpened();
        return this.lastDateValue;
    }

    public void setLastDateValue(int value) {
        ensureOpened();
        this.lastDateValue = value;
    }

    public int getLastPtsValue() {
        ensureOpened();
        return this.lastPtsValue;
    }

    public int getMainUnreadCount() {
        return this.mainUnreadCount;
    }

    public int getArchiveUnreadCount() {
        return this.archiveUnreadCount;
    }

    public void setLastPtsValue(int value) {
        ensureOpened();
        this.lastPtsValue = value;
    }

    public int getLastQtsValue() {
        ensureOpened();
        return this.lastQtsValue;
    }

    public void setLastQtsValue(int value) {
        ensureOpened();
        this.lastQtsValue = value;
    }

    public int getLastSeqValue() {
        ensureOpened();
        return this.lastSeqValue;
    }

    public void setLastSeqValue(int value) {
        ensureOpened();
        this.lastSeqValue = value;
    }

    public int getLastSecretVersion() {
        ensureOpened();
        return this.lastSecretVersion;
    }

    public void setLastSecretVersion(int value) {
        ensureOpened();
        this.lastSecretVersion = value;
    }

    public byte[] getSecretPBytes() {
        ensureOpened();
        return this.secretPBytes;
    }

    public void setSecretPBytes(byte[] value) {
        ensureOpened();
        this.secretPBytes = value;
    }

    public int getSecretG() {
        ensureOpened();
        return this.secretG;
    }

    public void setSecretG(int value) {
        ensureOpened();
        this.secretG = value;
    }

    public MessagesStorage(int instance) {
        super(instance);
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda77(this));
    }

    /* renamed from: lambda$new$0$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m950lambda$new$0$orgtelegrammessengerMessagesStorage() {
        openDatabase(1);
    }

    public SQLiteDatabase getDatabase() {
        return this.database;
    }

    public DispatchQueue getStorageQueue() {
        return this.storageQueue;
    }

    public void bindTaskToGuid(Runnable task, int guid) {
        ArrayList<Runnable> arrayList = this.tasks.get(guid);
        if (arrayList == null) {
            arrayList = new ArrayList<>();
            this.tasks.put(guid, arrayList);
        }
        arrayList.add(task);
    }

    public void cancelTasksForGuid(int guid) {
        ArrayList<Runnable> arrayList = this.tasks.get(guid);
        if (arrayList != null) {
            int N = arrayList.size();
            for (int a = 0; a < N; a++) {
                this.storageQueue.cancelRunnable(arrayList.get(a));
            }
            this.tasks.remove(guid);
        }
    }

    public void completeTaskForGuid(Runnable runnable, int guid) {
        ArrayList<Runnable> arrayList = this.tasks.get(guid);
        if (arrayList != null) {
            arrayList.remove(runnable);
            if (arrayList.isEmpty()) {
                this.tasks.remove(guid);
            }
        }
    }

    public long getDatabaseSize() {
        long size = 0;
        File file = this.cacheFile;
        if (file != null) {
            size = 0 + file.length();
        }
        File file2 = this.shmCacheFile;
        if (file2 != null) {
            return size + file2.length();
        }
        return size;
    }

    public void openDatabase(int openTries) {
        int i = openTries;
        File filesDir = ApplicationLoader.getFilesDirFixed();
        if (this.currentAccount != 0) {
            filesDir = new File(filesDir, "account" + this.currentAccount + "/");
            filesDir.mkdirs();
        }
        this.cacheFile = new File(filesDir, "cache4.db");
        this.walCacheFile = new File(filesDir, "cache4.db-wal");
        this.shmCacheFile = new File(filesDir, "cache4.db-shm");
        boolean createTable = false;
        if (!this.cacheFile.exists()) {
            createTable = true;
        }
        int i2 = 3;
        try {
            SQLiteDatabase sQLiteDatabase = new SQLiteDatabase(this.cacheFile.getPath());
            this.database = sQLiteDatabase;
            sQLiteDatabase.executeFast("PRAGMA secure_delete = ON").stepThis().dispose();
            this.database.executeFast("PRAGMA temp_store = MEMORY").stepThis().dispose();
            this.database.executeFast("PRAGMA journal_mode = WAL").stepThis().dispose();
            this.database.executeFast("PRAGMA journal_size_limit = 10485760").stepThis().dispose();
            if (createTable) {
                if (BuildVars.LOGS_ENABLED) {
                    FileLog.d("create new database");
                }
                this.database.executeFast("CREATE TABLE messages_holes(uid INTEGER, start INTEGER, end INTEGER, PRIMARY KEY(uid, start));").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_end_messages_holes ON messages_holes(uid, end);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE media_holes_v2(uid INTEGER, type INTEGER, start INTEGER, end INTEGER, PRIMARY KEY(uid, type, start));").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_end_media_holes_v2 ON media_holes_v2(uid, type, end);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE scheduled_messages_v2(mid INTEGER, uid INTEGER, send_state INTEGER, date INTEGER, data BLOB, ttl INTEGER, replydata BLOB, reply_to_message_id INTEGER, PRIMARY KEY(mid, uid))").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS send_state_idx_scheduled_messages_v2 ON scheduled_messages_v2(mid, send_state, date);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_date_idx_scheduled_messages_v2 ON scheduled_messages_v2(uid, date);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS reply_to_idx_scheduled_messages_v2 ON scheduled_messages_v2(mid, reply_to_message_id);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE messages_v2(mid INTEGER, uid INTEGER, read_state INTEGER, send_state INTEGER, date INTEGER, data BLOB, out INTEGER, ttl INTEGER, media INTEGER, replydata BLOB, imp INTEGER, mention INTEGER, forwards INTEGER, replies_data BLOB, thread_reply_id INTEGER, is_channel INTEGER, reply_to_message_id INTEGER, PRIMARY KEY(mid, uid))").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_mid_read_out_idx_messages_v2 ON messages_v2(uid, mid, read_state, out);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_date_mid_idx_messages_v2 ON messages_v2(uid, date, mid);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS mid_out_idx_messages_v2 ON messages_v2(mid, out);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS task_idx_messages_v2 ON messages_v2(uid, out, read_state, ttl, date, send_state);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS send_state_idx_messages_v2 ON messages_v2(mid, send_state, date);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_mention_idx_messages_v2 ON messages_v2(uid, mention, read_state);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS is_channel_idx_messages_v2 ON messages_v2(mid, is_channel);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS reply_to_idx_messages_v2 ON messages_v2(mid, reply_to_message_id);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE download_queue(uid INTEGER, type INTEGER, date INTEGER, data BLOB, parent TEXT, PRIMARY KEY (uid, type));").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS type_date_idx_download_queue ON download_queue(type, date);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE user_contacts_v7(key TEXT PRIMARY KEY, uid INTEGER, fname TEXT, sname TEXT, imported INTEGER)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE user_phones_v7(key TEXT, phone TEXT, sphone TEXT, deleted INTEGER, PRIMARY KEY (key, phone))").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS sphone_deleted_idx_user_phones ON user_phones_v7(sphone, deleted);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE dialogs(did INTEGER PRIMARY KEY, date INTEGER, unread_count INTEGER, last_mid INTEGER, inbox_max INTEGER, outbox_max INTEGER, last_mid_i INTEGER, unread_count_i INTEGER, pts INTEGER, date_i INTEGER, pinned INTEGER, flags INTEGER, folder_id INTEGER, data BLOB, unread_reactions INTEGER)").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS date_idx_dialogs ON dialogs(date);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS last_mid_idx_dialogs ON dialogs(last_mid);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS unread_count_idx_dialogs ON dialogs(unread_count);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS last_mid_i_idx_dialogs ON dialogs(last_mid_i);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS unread_count_i_idx_dialogs ON dialogs(unread_count_i);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS folder_id_idx_dialogs ON dialogs(folder_id);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS flags_idx_dialogs ON dialogs(flags);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE dialog_filter(id INTEGER PRIMARY KEY, ord INTEGER, unread_count INTEGER, flags INTEGER, title TEXT)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE dialog_filter_ep(id INTEGER, peer INTEGER, PRIMARY KEY (id, peer))").stepThis().dispose();
                this.database.executeFast("CREATE TABLE dialog_filter_pin_v2(id INTEGER, peer INTEGER, pin INTEGER, PRIMARY KEY (id, peer))").stepThis().dispose();
                this.database.executeFast("CREATE TABLE randoms_v2(random_id INTEGER, mid INTEGER, uid INTEGER, PRIMARY KEY (random_id, mid, uid))").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS mid_idx_randoms_v2 ON randoms_v2(mid, uid);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE enc_tasks_v4(mid INTEGER, uid INTEGER, date INTEGER, media INTEGER, PRIMARY KEY(mid, uid, media))").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS date_idx_enc_tasks_v4 ON enc_tasks_v4(date);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE messages_seq(mid INTEGER PRIMARY KEY, seq_in INTEGER, seq_out INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS seq_idx_messages_seq ON messages_seq(seq_in, seq_out);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE params(id INTEGER PRIMARY KEY, seq INTEGER, pts INTEGER, date INTEGER, qts INTEGER, lsv INTEGER, sg INTEGER, pbytes BLOB)").stepThis().dispose();
                this.database.executeFast("INSERT INTO params VALUES(1, 0, 0, 0, 0, 0, 0, NULL)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE media_v4(mid INTEGER, uid INTEGER, date INTEGER, type INTEGER, data BLOB, PRIMARY KEY(mid, uid, type))").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_mid_type_date_idx_media_v4 ON media_v4(uid, mid, type, date);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE bot_keyboard(uid INTEGER PRIMARY KEY, mid INTEGER, info BLOB)").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS bot_keyboard_idx_mid_v2 ON bot_keyboard(mid, uid);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE chat_settings_v2(uid INTEGER PRIMARY KEY, info BLOB, pinned INTEGER, online INTEGER, inviter INTEGER, links INTEGER)").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS chat_settings_pinned_idx ON chat_settings_v2(uid, pinned) WHERE pinned != 0;").stepThis().dispose();
                this.database.executeFast("CREATE TABLE user_settings(uid INTEGER PRIMARY KEY, info BLOB, pinned INTEGER)").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS user_settings_pinned_idx ON user_settings(uid, pinned) WHERE pinned != 0;").stepThis().dispose();
                this.database.executeFast("CREATE TABLE chat_pinned_v2(uid INTEGER, mid INTEGER, data BLOB, PRIMARY KEY (uid, mid));").stepThis().dispose();
                this.database.executeFast("CREATE TABLE chat_pinned_count(uid INTEGER PRIMARY KEY, count INTEGER, end INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE chat_hints(did INTEGER, type INTEGER, rating REAL, date INTEGER, PRIMARY KEY(did, type))").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS chat_hints_rating_idx ON chat_hints(rating);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE botcache(id TEXT PRIMARY KEY, date INTEGER, data BLOB)").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS botcache_date_idx ON botcache(date);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE users_data(uid INTEGER PRIMARY KEY, about TEXT)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE users(uid INTEGER PRIMARY KEY, name TEXT, status INTEGER, data BLOB)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE chats(uid INTEGER PRIMARY KEY, name TEXT, data BLOB)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE enc_chats(uid INTEGER PRIMARY KEY, user INTEGER, name TEXT, data BLOB, g BLOB, authkey BLOB, ttl INTEGER, layer INTEGER, seq_in INTEGER, seq_out INTEGER, use_count INTEGER, exchange_id INTEGER, key_date INTEGER, fprint INTEGER, fauthkey BLOB, khash BLOB, in_seq_no INTEGER, admin_id INTEGER, mtproto_seq INTEGER)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE channel_users_v2(did INTEGER, uid INTEGER, date INTEGER, data BLOB, PRIMARY KEY(did, uid))").stepThis().dispose();
                this.database.executeFast("CREATE TABLE channel_admins_v3(did INTEGER, uid INTEGER, data BLOB, PRIMARY KEY(did, uid))").stepThis().dispose();
                this.database.executeFast("CREATE TABLE contacts(uid INTEGER PRIMARY KEY, mutual INTEGER)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE user_photos(uid INTEGER, id INTEGER, data BLOB, PRIMARY KEY (uid, id))").stepThis().dispose();
                this.database.executeFast("CREATE TABLE dialog_settings(did INTEGER PRIMARY KEY, flags INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE web_recent_v3(id TEXT, type INTEGER, image_url TEXT, thumb_url TEXT, local_url TEXT, width INTEGER, height INTEGER, size INTEGER, date INTEGER, document BLOB, PRIMARY KEY (id, type));").stepThis().dispose();
                this.database.executeFast("CREATE TABLE stickers_v2(id INTEGER PRIMARY KEY, data BLOB, date INTEGER, hash INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE stickers_featured(id INTEGER PRIMARY KEY, data BLOB, unread BLOB, date INTEGER, hash INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE stickers_dice(emoji TEXT PRIMARY KEY, data BLOB, date INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE hashtag_recent_v2(id TEXT PRIMARY KEY, date INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE webpage_pending_v2(id INTEGER, mid INTEGER, uid INTEGER, PRIMARY KEY (id, mid, uid));").stepThis().dispose();
                this.database.executeFast("CREATE TABLE sent_files_v2(uid TEXT, type INTEGER, data BLOB, parent TEXT, PRIMARY KEY (uid, type))").stepThis().dispose();
                this.database.executeFast("CREATE TABLE search_recent(did INTEGER PRIMARY KEY, date INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE media_counts_v2(uid INTEGER, type INTEGER, count INTEGER, old INTEGER, PRIMARY KEY(uid, type))").stepThis().dispose();
                this.database.executeFast("CREATE TABLE keyvalue(id TEXT PRIMARY KEY, value TEXT)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE bot_info_v2(uid INTEGER, dialogId INTEGER, info BLOB, PRIMARY KEY(uid, dialogId))").stepThis().dispose();
                this.database.executeFast("CREATE TABLE pending_tasks(id INTEGER PRIMARY KEY, data BLOB);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE requested_holes(uid INTEGER, seq_out_start INTEGER, seq_out_end INTEGER, PRIMARY KEY (uid, seq_out_start, seq_out_end));").stepThis().dispose();
                this.database.executeFast("CREATE TABLE sharing_locations(uid INTEGER PRIMARY KEY, mid INTEGER, date INTEGER, period INTEGER, message BLOB, proximity INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE shortcut_widget(id INTEGER, did INTEGER, ord INTEGER, PRIMARY KEY (id, did));").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS shortcut_widget_did ON shortcut_widget(did);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE emoji_keywords_v2(lang TEXT, keyword TEXT, emoji TEXT, PRIMARY KEY(lang, keyword, emoji));").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS emoji_keywords_v2_keyword ON emoji_keywords_v2(keyword);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE emoji_keywords_info_v2(lang TEXT PRIMARY KEY, alias TEXT, version INTEGER, date INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE wallpapers2(uid INTEGER PRIMARY KEY, data BLOB, num INTEGER)").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS wallpapers_num ON wallpapers2(num);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE unread_push_messages(uid INTEGER, mid INTEGER, random INTEGER, date INTEGER, data BLOB, fm TEXT, name TEXT, uname TEXT, flags INTEGER, PRIMARY KEY(uid, mid))").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS unread_push_messages_idx_date ON unread_push_messages(date);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS unread_push_messages_idx_random ON unread_push_messages(random);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE polls_v2(mid INTEGER, uid INTEGER, id INTEGER, PRIMARY KEY (mid, uid));").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS polls_id_v2 ON polls_v2(id);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE reactions(data BLOB, hash INTEGER, date INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE reaction_mentions(message_id INTEGER, state INTEGER, dialog_id INTEGER, PRIMARY KEY(message_id, dialog_id))").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS reaction_mentions_did ON reaction_mentions(dialog_id);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE downloading_documents(data BLOB, hash INTEGER, id INTEGER, state INTEGER, date INTEGER, PRIMARY KEY(hash, id));").stepThis().dispose();
                this.database.executeFast("CREATE TABLE attach_menu_bots(data BLOB, hash INTEGER, date INTEGER);").stepThis().dispose();
                this.database.executeFast("PRAGMA user_version = 93").stepThis().dispose();
            } else {
                int version = this.database.executeInt("PRAGMA user_version", new Object[0]).intValue();
                if (BuildVars.LOGS_ENABLED) {
                    FileLog.d("current db version = " + version);
                }
                if (version != 0) {
                    SQLiteCursor cursor = this.database.queryFinalized("SELECT seq, pts, date, qts, lsv, sg, pbytes FROM params WHERE id = 1", new Object[0]);
                    if (cursor.next()) {
                        this.lastSeqValue = cursor.intValue(0);
                        this.lastPtsValue = cursor.intValue(1);
                        this.lastDateValue = cursor.intValue(2);
                        this.lastQtsValue = cursor.intValue(3);
                        this.lastSecretVersion = cursor.intValue(4);
                        this.secretG = cursor.intValue(5);
                        if (cursor.isNull(6)) {
                            this.secretPBytes = null;
                        } else {
                            byte[] byteArrayValue = cursor.byteArrayValue(6);
                            this.secretPBytes = byteArrayValue;
                            if (byteArrayValue != null && byteArrayValue.length == 1) {
                                this.secretPBytes = null;
                            }
                        }
                    }
                    cursor.dispose();
                    if (version < 93) {
                        updateDbToLastVersion(version);
                    }
                } else {
                    throw new Exception("malformed");
                }
            }
        } catch (Exception e) {
            Exception e2 = e;
            if (BuildVars.DEBUG_PRIVATE_VERSION) {
                throw e2;
            }
            FileLog.e((Throwable) e2);
            throw new RuntimeException("malformed");
        } catch (Exception e3) {
            Exception e4 = e3;
            if (e4.getMessage() != null) {
                if (e4.getMessage().contains("malformed")) {
                    throw new RuntimeException("malformed");
                }
            }
            FileLog.e((Throwable) e4);
            try {
                this.database.executeFast("CREATE TABLE IF NOT EXISTS params(id INTEGER PRIMARY KEY, seq INTEGER, pts INTEGER, date INTEGER, qts INTEGER, lsv INTEGER, sg INTEGER, pbytes BLOB)").stepThis().dispose();
                this.database.executeFast("INSERT INTO params VALUES(1, 0, 0, 0, 0, 0, 0, NULL)").stepThis().dispose();
            } catch (Exception e5) {
                FileLog.e((Throwable) e5);
            }
        } catch (Exception e6) {
            Exception e7 = e6;
            FileLog.e((Throwable) e7);
            if (BuildVars.DEBUG_PRIVATE_VERSION) {
                throw new RuntimeException(e7);
            } else if (i < 3 && e7.getMessage() != null && e7.getMessage().contains("malformed")) {
                if (i == 2) {
                    cleanupInternal(true);
                    for (int a = 0; a < 2; a++) {
                        getUserConfig().setDialogsLoadOffset(a, 0, 0, 0, 0, 0, 0);
                        getUserConfig().setTotalDialogsCount(a, 0);
                    }
                    getUserConfig().saveConfig(false);
                } else {
                    cleanupInternal(false);
                }
                if (i == 1) {
                    i2 = 2;
                }
                openDatabase(i2);
            }
        }
        AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda88(this));
        loadDialogFilters();
        loadUnreadMessages();
        loadPendingTasks();
        try {
            this.openSync.countDown();
        } catch (Throwable th) {
        }
        AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda99(this));
    }

    /* renamed from: lambda$openDatabase$1$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m952lambda$openDatabase$1$orgtelegrammessengerMessagesStorage() {
        if (this.databaseMigrationInProgress) {
            this.databaseMigrationInProgress = false;
            NotificationCenter.getInstance(this.currentAccount).postNotificationName(NotificationCenter.onDatabaseMigration, false);
        }
    }

    /* renamed from: lambda$openDatabase$2$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m953lambda$openDatabase$2$orgtelegrammessengerMessagesStorage() {
        this.showClearDatabaseAlert = false;
        NotificationCenter.getInstance(this.currentAccount).postNotificationName(NotificationCenter.onDatabaseOpened, new Object[0]);
    }

    public boolean isDatabaseMigrationInProgress() {
        return this.databaseMigrationInProgress;
    }

    private void updateDbToLastVersion(int currentVersion) throws Exception {
        int version;
        MessagesStorage messagesStorage;
        SQLiteCursor cursor;
        SQLiteCursor cursor2;
        int channelId;
        int sendState;
        NativeByteBuffer repliesdata;
        SQLiteCursor cursor3;
        SQLiteCursor cursor4;
        SQLiteCursor cursor5;
        SQLiteCursor cursor6;
        SQLiteCursor cursor7;
        NativeByteBuffer data;
        SQLiteCursor cursor8;
        AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda111(this));
        int version2 = currentVersion;
        FileLog.d("MessagesStorage start db migration from " + version2 + " to " + 93);
        int i = 4;
        if (version2 < 4) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS user_photos(uid INTEGER, id INTEGER, data BLOB, PRIMARY KEY (uid, id))").stepThis().dispose();
            this.database.executeFast("DROP INDEX IF EXISTS read_state_out_idx_messages;").stepThis().dispose();
            this.database.executeFast("DROP INDEX IF EXISTS ttl_idx_messages;").stepThis().dispose();
            this.database.executeFast("DROP INDEX IF EXISTS date_idx_messages;").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS mid_out_idx_messages ON messages(mid, out);").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS task_idx_messages ON messages(uid, out, read_state, ttl, date, send_state);").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_date_mid_idx_messages ON messages(uid, date, mid);").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS user_contacts_v6(uid INTEGER PRIMARY KEY, fname TEXT, sname TEXT)").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS user_phones_v6(uid INTEGER, phone TEXT, sphone TEXT, deleted INTEGER, PRIMARY KEY (uid, phone))").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS sphone_deleted_idx_user_phones ON user_phones_v6(sphone, deleted);").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS mid_idx_randoms ON randoms(mid);").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS sent_files_v2(uid TEXT, type INTEGER, data BLOB, PRIMARY KEY (uid, type))").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS download_queue(uid INTEGER, type INTEGER, date INTEGER, data BLOB, PRIMARY KEY (uid, type));").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS type_date_idx_download_queue ON download_queue(type, date);").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS dialog_settings(did INTEGER PRIMARY KEY, flags INTEGER);").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS unread_count_idx_dialogs ON dialogs(unread_count);").stepThis().dispose();
            this.database.executeFast("UPDATE messages SET send_state = 2 WHERE mid < 0 AND send_state = 1").stepThis().dispose();
            fixNotificationSettings();
            this.database.executeFast("PRAGMA user_version = 4").stepThis().dispose();
            version2 = 4;
        }
        int i2 = 2;
        int i3 = 0;
        int i4 = 1;
        if (version2 == 4) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS enc_tasks_v2(mid INTEGER PRIMARY KEY, date INTEGER)").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS date_idx_enc_tasks_v2 ON enc_tasks_v2(date);").stepThis().dispose();
            this.database.beginTransaction();
            SQLiteCursor cursor9 = this.database.queryFinalized("SELECT date, data FROM enc_tasks WHERE 1", new Object[0]);
            SQLitePreparedStatement state = this.database.executeFast("REPLACE INTO enc_tasks_v2 VALUES(?, ?)");
            if (cursor9.next()) {
                int date = cursor9.intValue(0);
                NativeByteBuffer data2 = cursor9.byteBufferValue(1);
                if (data2 != null) {
                    int length = data2.limit();
                    for (int a = 0; a < length / 4; a++) {
                        state.requery();
                        state.bindInteger(1, data2.readInt32(false));
                        state.bindInteger(2, date);
                        state.step();
                    }
                    data2.reuse();
                }
            }
            state.dispose();
            cursor9.dispose();
            this.database.commitTransaction();
            this.database.executeFast("DROP INDEX IF EXISTS date_idx_enc_tasks;").stepThis().dispose();
            this.database.executeFast("DROP TABLE IF EXISTS enc_tasks;").stepThis().dispose();
            this.database.executeFast("ALTER TABLE messages ADD COLUMN media INTEGER default 0").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 6").stepThis().dispose();
            version2 = 6;
        }
        if (version2 == 6) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS messages_seq(mid INTEGER PRIMARY KEY, seq_in INTEGER, seq_out INTEGER);").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS seq_idx_messages_seq ON messages_seq(seq_in, seq_out);").stepThis().dispose();
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN layer INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN seq_in INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN seq_out INTEGER default 0").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 7").stepThis().dispose();
            version2 = 7;
        }
        if (version2 == 7 || version2 == 8 || version2 == 9) {
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN use_count INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN exchange_id INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN key_date INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN fprint INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN fauthkey BLOB default NULL").stepThis().dispose();
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN khash BLOB default NULL").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 10").stepThis().dispose();
            version2 = 10;
        }
        if (version2 == 10) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS web_recent_v3(id TEXT, type INTEGER, image_url TEXT, thumb_url TEXT, local_url TEXT, width INTEGER, height INTEGER, size INTEGER, date INTEGER, PRIMARY KEY (id, type));").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 11").stepThis().dispose();
            version2 = 11;
        }
        if (version2 == 11 || version2 == 12) {
            this.database.executeFast("DROP INDEX IF EXISTS uid_mid_idx_media;").stepThis().dispose();
            this.database.executeFast("DROP INDEX IF EXISTS mid_idx_media;").stepThis().dispose();
            this.database.executeFast("DROP INDEX IF EXISTS uid_date_mid_idx_media;").stepThis().dispose();
            this.database.executeFast("DROP TABLE IF EXISTS media;").stepThis().dispose();
            this.database.executeFast("DROP TABLE IF EXISTS media_counts;").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS media_v2(mid INTEGER PRIMARY KEY, uid INTEGER, date INTEGER, type INTEGER, data BLOB)").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS media_counts_v2(uid INTEGER, type INTEGER, count INTEGER, PRIMARY KEY(uid, type))").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_mid_type_date_idx_media ON media_v2(uid, mid, type, date);").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS keyvalue(id TEXT PRIMARY KEY, value TEXT)").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 13").stepThis().dispose();
            version2 = 13;
        }
        if (version2 == 13) {
            this.database.executeFast("ALTER TABLE messages ADD COLUMN replydata BLOB default NULL").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 14").stepThis().dispose();
            version2 = 14;
        }
        if (version2 == 14) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS hashtag_recent_v2(id TEXT PRIMARY KEY, date INTEGER);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 15").stepThis().dispose();
            version2 = 15;
        }
        if (version2 == 15) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS webpage_pending(id INTEGER, mid INTEGER, PRIMARY KEY (id, mid));").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 16").stepThis().dispose();
            version2 = 16;
        }
        if (version2 == 16) {
            this.database.executeFast("ALTER TABLE dialogs ADD COLUMN inbox_max INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE dialogs ADD COLUMN outbox_max INTEGER default 0").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 17").stepThis().dispose();
            version2 = 17;
        }
        if (version2 == 17) {
            this.database.executeFast("PRAGMA user_version = 18").stepThis().dispose();
            version2 = 18;
        }
        if (version2 == 18) {
            this.database.executeFast("DROP TABLE IF EXISTS stickers;").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS stickers_v2(id INTEGER PRIMARY KEY, data BLOB, date INTEGER, hash INTEGER);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 19").stepThis().dispose();
            version2 = 19;
        }
        if (version2 == 19) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS bot_keyboard(uid INTEGER PRIMARY KEY, mid INTEGER, info BLOB)").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS bot_keyboard_idx_mid ON bot_keyboard(mid);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 20").stepThis().dispose();
            version2 = 20;
        }
        if (version2 == 20) {
            this.database.executeFast("CREATE TABLE search_recent(did INTEGER PRIMARY KEY, date INTEGER);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 21").stepThis().dispose();
            version2 = 21;
        }
        if (version2 == 21) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS chat_settings_v2(uid INTEGER PRIMARY KEY, info BLOB)").stepThis().dispose();
            SQLiteCursor cursor10 = this.database.queryFinalized("SELECT uid, participants FROM chat_settings WHERE uid < 0", new Object[0]);
            SQLitePreparedStatement state2 = this.database.executeFast("REPLACE INTO chat_settings_v2 VALUES(?, ?)");
            while (cursor10.next()) {
                long chatId = (long) cursor10.intValue(0);
                NativeByteBuffer data3 = cursor10.byteBufferValue(1);
                if (data3 != null) {
                    TLRPC.ChatParticipants participants = TLRPC.ChatParticipants.TLdeserialize(data3, data3.readInt32(false), false);
                    data3.reuse();
                    if (participants != null) {
                        TLRPC.TL_chatFull chatFull = new TLRPC.TL_chatFull();
                        chatFull.id = chatId;
                        chatFull.chat_photo = new TLRPC.TL_photoEmpty();
                        chatFull.notify_settings = new TLRPC.TL_peerNotifySettingsEmpty_layer77();
                        chatFull.exported_invite = null;
                        chatFull.participants = participants;
                        NativeByteBuffer data22 = new NativeByteBuffer(chatFull.getObjectSize());
                        chatFull.serializeToStream(data22);
                        state2.requery();
                        state2.bindLong(1, chatId);
                        state2.bindByteBuffer(2, data22);
                        state2.step();
                        data22.reuse();
                    }
                }
            }
            state2.dispose();
            cursor10.dispose();
            this.database.executeFast("DROP TABLE IF EXISTS chat_settings;").stepThis().dispose();
            this.database.executeFast("ALTER TABLE dialogs ADD COLUMN last_mid_i INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE dialogs ADD COLUMN unread_count_i INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE dialogs ADD COLUMN pts INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE dialogs ADD COLUMN date_i INTEGER default 0").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS last_mid_i_idx_dialogs ON dialogs(last_mid_i);").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS unread_count_i_idx_dialogs ON dialogs(unread_count_i);").stepThis().dispose();
            this.database.executeFast("ALTER TABLE messages ADD COLUMN imp INTEGER default 0").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS messages_holes(uid INTEGER, start INTEGER, end INTEGER, PRIMARY KEY(uid, start));").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_end_messages_holes ON messages_holes(uid, end);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 22").stepThis().dispose();
            version2 = 22;
        }
        if (version2 == 22) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS media_holes_v2(uid INTEGER, type INTEGER, start INTEGER, end INTEGER, PRIMARY KEY(uid, type, start));").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_end_media_holes_v2 ON media_holes_v2(uid, type, end);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 23").stepThis().dispose();
            version2 = 23;
        }
        if (version2 == 23 || version2 == 24) {
            this.database.executeFast("DELETE FROM media_holes_v2 WHERE uid != 0 AND type >= 0 AND start IN (0, 1)").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 25").stepThis().dispose();
            version2 = 25;
        }
        if (version2 == 25 || version2 == 26) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS channel_users_v2(did INTEGER, uid INTEGER, date INTEGER, data BLOB, PRIMARY KEY(did, uid))").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 27").stepThis().dispose();
            version2 = 27;
        }
        if (version2 == 27) {
            this.database.executeFast("ALTER TABLE web_recent_v3 ADD COLUMN document BLOB default NULL").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 28").stepThis().dispose();
            version2 = 28;
        }
        if (version2 == 28 || version2 == 29) {
            this.database.executeFast("DELETE FROM sent_files_v2 WHERE 1").stepThis().dispose();
            this.database.executeFast("DELETE FROM download_queue WHERE 1").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 30").stepThis().dispose();
            version2 = 30;
        }
        if (version2 == 30) {
            this.database.executeFast("ALTER TABLE chat_settings_v2 ADD COLUMN pinned INTEGER default 0").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS chat_settings_pinned_idx ON chat_settings_v2(uid, pinned) WHERE pinned != 0;").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS users_data(uid INTEGER PRIMARY KEY, about TEXT)").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 31").stepThis().dispose();
            version2 = 31;
        }
        if (version2 == 31) {
            this.database.executeFast("DROP TABLE IF EXISTS bot_recent;").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS chat_hints(did INTEGER, type INTEGER, rating REAL, date INTEGER, PRIMARY KEY(did, type))").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS chat_hints_rating_idx ON chat_hints(rating);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 32").stepThis().dispose();
            version2 = 32;
        }
        if (version2 == 32) {
            this.database.executeFast("DROP INDEX IF EXISTS uid_mid_idx_imp_messages;").stepThis().dispose();
            this.database.executeFast("DROP INDEX IF EXISTS uid_date_mid_imp_idx_messages;").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 33").stepThis().dispose();
            version2 = 33;
        }
        if (version2 == 33) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS pending_tasks(id INTEGER PRIMARY KEY, data BLOB);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 34").stepThis().dispose();
            version2 = 34;
        }
        if (version2 == 34) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS stickers_featured(id INTEGER PRIMARY KEY, data BLOB, unread BLOB, date INTEGER, hash INTEGER);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 35").stepThis().dispose();
            version2 = 35;
        }
        if (version2 == 35) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS requested_holes(uid INTEGER, seq_out_start INTEGER, seq_out_end INTEGER, PRIMARY KEY (uid, seq_out_start, seq_out_end));").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 36").stepThis().dispose();
            version2 = 36;
        }
        if (version2 == 36) {
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN in_seq_no INTEGER default 0").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 37").stepThis().dispose();
            version2 = 37;
        }
        if (version2 == 37) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS botcache(id TEXT PRIMARY KEY, date INTEGER, data BLOB)").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS botcache_date_idx ON botcache(date);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 38").stepThis().dispose();
            version2 = 38;
        }
        if (version2 == 38) {
            this.database.executeFast("ALTER TABLE dialogs ADD COLUMN pinned INTEGER default 0").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 39").stepThis().dispose();
            version2 = 39;
        }
        if (version2 == 39) {
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN admin_id INTEGER default 0").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 40").stepThis().dispose();
            version2 = 40;
        }
        if (version2 == 40) {
            fixNotificationSettings();
            this.database.executeFast("PRAGMA user_version = 41").stepThis().dispose();
            version2 = 41;
        }
        if (version2 == 41) {
            this.database.executeFast("ALTER TABLE messages ADD COLUMN mention INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE user_contacts_v6 ADD COLUMN imported INTEGER default 0").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_mention_idx_messages ON messages(uid, mention, read_state);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 42").stepThis().dispose();
            version2 = 42;
        }
        if (version2 == 42) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS sharing_locations(uid INTEGER PRIMARY KEY, mid INTEGER, date INTEGER, period INTEGER, message BLOB);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 43").stepThis().dispose();
            version2 = 43;
        }
        if (version2 == 43) {
            this.database.executeFast("PRAGMA user_version = 44").stepThis().dispose();
            version2 = 44;
        }
        if (version2 == 44) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS user_contacts_v7(key TEXT PRIMARY KEY, uid INTEGER, fname TEXT, sname TEXT, imported INTEGER)").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS user_phones_v7(key TEXT, phone TEXT, sphone TEXT, deleted INTEGER, PRIMARY KEY (key, phone))").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS sphone_deleted_idx_user_phones ON user_phones_v7(sphone, deleted);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 45").stepThis().dispose();
            version2 = 45;
        }
        if (version2 == 45) {
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN mtproto_seq INTEGER default 0").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 46").stepThis().dispose();
            version2 = 46;
        }
        if (version2 == 46) {
            this.database.executeFast("DELETE FROM botcache WHERE 1").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 47").stepThis().dispose();
            version2 = 47;
        }
        if (version2 == 47) {
            this.database.executeFast("ALTER TABLE dialogs ADD COLUMN flags INTEGER default 0").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 48").stepThis().dispose();
            version2 = 48;
        }
        if (version2 == 48) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS unread_push_messages(uid INTEGER, mid INTEGER, random INTEGER, date INTEGER, data BLOB, fm TEXT, name TEXT, uname TEXT, flags INTEGER, PRIMARY KEY(uid, mid))").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS unread_push_messages_idx_date ON unread_push_messages(date);").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS unread_push_messages_idx_random ON unread_push_messages(random);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 49").stepThis().dispose();
            version2 = 49;
        }
        if (version2 == 49) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS user_settings(uid INTEGER PRIMARY KEY, info BLOB, pinned INTEGER)").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS user_settings_pinned_idx ON user_settings(uid, pinned) WHERE pinned != 0;").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 50").stepThis().dispose();
            version2 = 50;
        }
        if (version2 == 50) {
            this.database.executeFast("DELETE FROM sent_files_v2 WHERE 1").stepThis().dispose();
            this.database.executeFast("ALTER TABLE sent_files_v2 ADD COLUMN parent TEXT").stepThis().dispose();
            this.database.executeFast("DELETE FROM download_queue WHERE 1").stepThis().dispose();
            this.database.executeFast("ALTER TABLE download_queue ADD COLUMN parent TEXT").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 51").stepThis().dispose();
            version2 = 51;
        }
        if (version2 == 51) {
            this.database.executeFast("ALTER TABLE media_counts_v2 ADD COLUMN old INTEGER").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 52").stepThis().dispose();
            version2 = 52;
        }
        if (version2 == 52) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS polls_v2(mid INTEGER, uid INTEGER, id INTEGER, PRIMARY KEY (mid, uid));").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS polls_id ON polls_v2(id);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 53").stepThis().dispose();
            version2 = 53;
        }
        if (version2 == 53) {
            this.database.executeFast("ALTER TABLE chat_settings_v2 ADD COLUMN online INTEGER default 0").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 54").stepThis().dispose();
            version2 = 54;
        }
        if (version2 == 54) {
            this.database.executeFast("DROP TABLE IF EXISTS wallpapers;").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 55").stepThis().dispose();
            version2 = 55;
        }
        if (version2 == 55) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS wallpapers2(uid INTEGER PRIMARY KEY, data BLOB, num INTEGER)").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS wallpapers_num ON wallpapers2(num);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 56").stepThis().dispose();
            version2 = 56;
        }
        if (version2 == 56 || version2 == 57) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS emoji_keywords_v2(lang TEXT, keyword TEXT, emoji TEXT, PRIMARY KEY(lang, keyword, emoji));").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS emoji_keywords_info_v2(lang TEXT PRIMARY KEY, alias TEXT, version INTEGER);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 58").stepThis().dispose();
            version2 = 58;
        }
        if (version2 == 58) {
            this.database.executeFast("CREATE INDEX IF NOT EXISTS emoji_keywords_v2_keyword ON emoji_keywords_v2(keyword);").stepThis().dispose();
            this.database.executeFast("ALTER TABLE emoji_keywords_info_v2 ADD COLUMN date INTEGER default 0").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 59").stepThis().dispose();
            version2 = 59;
        }
        if (version2 == 59) {
            this.database.executeFast("ALTER TABLE dialogs ADD COLUMN folder_id INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE dialogs ADD COLUMN data BLOB default NULL").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS folder_id_idx_dialogs ON dialogs(folder_id);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 60").stepThis().dispose();
            version2 = 60;
        }
        if (version2 == 60) {
            this.database.executeFast("DROP TABLE IF EXISTS channel_admins;").stepThis().dispose();
            this.database.executeFast("DROP TABLE IF EXISTS blocked_users;").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 61").stepThis().dispose();
            version2 = 61;
        }
        if (version2 == 61) {
            this.database.executeFast("DROP INDEX IF EXISTS send_state_idx_messages;").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS send_state_idx_messages2 ON messages(mid, send_state, date);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 62").stepThis().dispose();
            version2 = 62;
        }
        if (version2 == 62) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS scheduled_messages(mid INTEGER PRIMARY KEY, uid INTEGER, send_state INTEGER, date INTEGER, data BLOB, ttl INTEGER, replydata BLOB)").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS send_state_idx_scheduled_messages ON scheduled_messages(mid, send_state, date);").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_date_idx_scheduled_messages ON scheduled_messages(uid, date);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 63").stepThis().dispose();
            version2 = 63;
        }
        if (version2 == 63) {
            this.database.executeFast("DELETE FROM download_queue WHERE 1").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 64").stepThis().dispose();
            version2 = 64;
        }
        if (version2 == 64) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS dialog_filter(id INTEGER PRIMARY KEY, ord INTEGER, unread_count INTEGER, flags INTEGER, title TEXT)").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS dialog_filter_ep(id INTEGER, peer INTEGER, PRIMARY KEY (id, peer))").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 65").stepThis().dispose();
            version2 = 65;
        }
        if (version2 == 65) {
            this.database.executeFast("CREATE INDEX IF NOT EXISTS flags_idx_dialogs ON dialogs(flags);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 66").stepThis().dispose();
            version2 = 66;
        }
        if (version2 == 66) {
            this.database.executeFast("CREATE TABLE dialog_filter_pin_v2(id INTEGER, peer INTEGER, pin INTEGER, PRIMARY KEY (id, peer))").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 67").stepThis().dispose();
            version2 = 67;
        }
        if (version2 == 67) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS stickers_dice(emoji TEXT PRIMARY KEY, data BLOB, date INTEGER);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 68").stepThis().dispose();
            version2 = 68;
        }
        if (version2 == 68) {
            executeNoException("ALTER TABLE messages ADD COLUMN forwards INTEGER default 0");
            this.database.executeFast("PRAGMA user_version = 69").stepThis().dispose();
            version2 = 69;
        }
        if (version2 == 69) {
            executeNoException("ALTER TABLE messages ADD COLUMN replies_data BLOB default NULL");
            executeNoException("ALTER TABLE messages ADD COLUMN thread_reply_id INTEGER default 0");
            this.database.executeFast("PRAGMA user_version = 70").stepThis().dispose();
            version2 = 70;
        }
        if (version2 == 70) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS chat_pinned_v2(uid INTEGER, mid INTEGER, data BLOB, PRIMARY KEY (uid, mid));").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 71").stepThis().dispose();
            version2 = 71;
        }
        if (version2 == 71) {
            executeNoException("ALTER TABLE sharing_locations ADD COLUMN proximity INTEGER default 0");
            this.database.executeFast("PRAGMA user_version = 72").stepThis().dispose();
            version2 = 72;
        }
        if (version2 == 72) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS chat_pinned_count(uid INTEGER PRIMARY KEY, count INTEGER, end INTEGER);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 73").stepThis().dispose();
            version2 = 73;
        }
        if (version2 == 73) {
            executeNoException("ALTER TABLE chat_settings_v2 ADD COLUMN inviter INTEGER default 0");
            this.database.executeFast("PRAGMA user_version = 74").stepThis().dispose();
            version2 = 74;
        }
        if (version2 == 74) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS shortcut_widget(id INTEGER, did INTEGER, ord INTEGER, PRIMARY KEY (id, did));").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS shortcut_widget_did ON shortcut_widget(did);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 75").stepThis().dispose();
            version2 = 75;
        }
        if (version2 == 75) {
            executeNoException("ALTER TABLE chat_settings_v2 ADD COLUMN links INTEGER default 0");
            this.database.executeFast("PRAGMA user_version = 76").stepThis().dispose();
            version2 = 76;
        }
        if (version2 == 76) {
            executeNoException("ALTER TABLE enc_tasks_v2 ADD COLUMN media INTEGER default -1");
            this.database.executeFast("PRAGMA user_version = 77").stepThis().dispose();
            version2 = 77;
        }
        if (version2 == 77) {
            this.database.executeFast("DROP TABLE IF EXISTS channel_admins_v2;").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS channel_admins_v3(did INTEGER, uid INTEGER, data BLOB, PRIMARY KEY(did, uid))").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 78").stepThis().dispose();
            version2 = 78;
        }
        if (version2 == 78) {
            this.database.executeFast("DROP TABLE IF EXISTS bot_info;").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS bot_info_v2(uid INTEGER, dialogId INTEGER, info BLOB, PRIMARY KEY(uid, dialogId))").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 79").stepThis().dispose();
            version2 = 79;
        }
        int i5 = 3;
        if (version2 == 79) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS enc_tasks_v3(mid INTEGER, date INTEGER, media INTEGER, PRIMARY KEY(mid, media))").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS date_idx_enc_tasks_v3 ON enc_tasks_v3(date);").stepThis().dispose();
            this.database.beginTransaction();
            SQLiteCursor cursor11 = this.database.queryFinalized("SELECT mid, date, media FROM enc_tasks_v2 WHERE 1", new Object[0]);
            SQLitePreparedStatement state3 = this.database.executeFast("REPLACE INTO enc_tasks_v3 VALUES(?, ?, ?)");
            if (cursor11.next()) {
                long mid = cursor11.longValue(0);
                int date2 = cursor11.intValue(1);
                int media = cursor11.intValue(2);
                state3.requery();
                state3.bindLong(1, mid);
                state3.bindInteger(2, date2);
                state3.bindInteger(3, media);
                state3.step();
            }
            state3.dispose();
            cursor11.dispose();
            this.database.commitTransaction();
            this.database.executeFast("DROP INDEX IF EXISTS date_idx_enc_tasks_v2;").stepThis().dispose();
            this.database.executeFast("DROP TABLE IF EXISTS enc_tasks_v2;").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 80").stepThis().dispose();
            version = 80;
        } else {
            version = version2;
        }
        int i6 = 5;
        if (version == 80) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS scheduled_messages_v2(mid INTEGER, uid INTEGER, send_state INTEGER, date INTEGER, data BLOB, ttl INTEGER, replydata BLOB, PRIMARY KEY(mid, uid))").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS send_state_idx_scheduled_messages_v2 ON scheduled_messages_v2(mid, send_state, date);").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_date_idx_scheduled_messages_v2 ON scheduled_messages_v2(uid, date);").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS bot_keyboard_idx_mid_v2 ON bot_keyboard(mid, uid);").stepThis().dispose();
            this.database.executeFast("DROP INDEX IF EXISTS bot_keyboard_idx_mid;").stepThis().dispose();
            this.database.beginTransaction();
            try {
                cursor8 = this.database.queryFinalized("SELECT mid, uid, send_state, date, data, ttl, replydata FROM scheduled_messages_v2 WHERE 1", new Object[0]);
            } catch (Exception e) {
                FileLog.e((Throwable) e);
                cursor8 = null;
            }
            if (cursor8 != null) {
                SQLitePreparedStatement statement = this.database.executeFast("REPLACE INTO scheduled_messages_v2 VALUES(?, ?, ?, ?, ?, ?, ?)");
                while (cursor8.next()) {
                    NativeByteBuffer data4 = cursor8.byteBufferValue(i);
                    if (data4 != null) {
                        int mid2 = cursor8.intValue(i3);
                        int version3 = version;
                        long uid = cursor8.longValue(1);
                        int sendState2 = cursor8.intValue(2);
                        int date3 = cursor8.intValue(i5);
                        int ttl = cursor8.intValue(i6);
                        NativeByteBuffer replydata = cursor8.byteBufferValue(6);
                        statement.requery();
                        statement.bindInteger(1, mid2);
                        statement.bindLong(2, uid);
                        statement.bindInteger(i5, sendState2);
                        statement.bindByteBuffer(4, data4);
                        statement.bindInteger(5, date3);
                        statement.bindInteger(6, ttl);
                        if (replydata != null) {
                            statement.bindByteBuffer(7, replydata);
                        } else {
                            statement.bindNull(7);
                        }
                        statement.step();
                        if (replydata != null) {
                            replydata.reuse();
                        }
                        data4.reuse();
                        version = version3;
                        i = 4;
                        i3 = 0;
                        i5 = 3;
                        i6 = 5;
                    }
                }
                cursor8.dispose();
                statement.dispose();
            }
            this.database.executeFast("DROP INDEX IF EXISTS send_state_idx_scheduled_messages;").stepThis().dispose();
            this.database.executeFast("DROP INDEX IF EXISTS uid_date_idx_scheduled_messages;").stepThis().dispose();
            this.database.executeFast("DROP TABLE IF EXISTS scheduled_messages;").stepThis().dispose();
            this.database.commitTransaction();
            this.database.executeFast("PRAGMA user_version = 81").stepThis().dispose();
            version = 81;
        } else {
            int i7 = version;
        }
        if (version == 81) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS media_v3(mid INTEGER, uid INTEGER, date INTEGER, type INTEGER, data BLOB, PRIMARY KEY(mid, uid))").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_mid_type_date_idx_media_v3 ON media_v3(uid, mid, type, date);").stepThis().dispose();
            this.database.beginTransaction();
            try {
                cursor7 = this.database.queryFinalized("SELECT mid, uid, date, type, data FROM media_v2 WHERE 1", new Object[0]);
            } catch (Exception e2) {
                FileLog.e((Throwable) e2);
                cursor7 = null;
            }
            if (cursor7 != null) {
                SQLitePreparedStatement statement2 = this.database.executeFast("REPLACE INTO media_v3 VALUES(?, ?, ?, ?, ?)");
                while (cursor7.next()) {
                    NativeByteBuffer data5 = cursor7.byteBufferValue(4);
                    if (data5 != null) {
                        int mid3 = cursor7.intValue(0);
                        long uid2 = cursor7.longValue(1);
                        if (((int) uid2) == 0) {
                            data = data5;
                            uid2 = DialogObject.makeEncryptedDialogId((long) ((int) (uid2 >> 32)));
                        } else {
                            data = data5;
                        }
                        int date4 = cursor7.intValue(2);
                        int type = cursor7.intValue(3);
                        statement2.requery();
                        statement2.bindInteger(1, mid3);
                        statement2.bindLong(2, uid2);
                        statement2.bindInteger(3, date4);
                        statement2.bindInteger(4, type);
                        NativeByteBuffer data6 = data;
                        statement2.bindByteBuffer(5, data6);
                        statement2.step();
                        data6.reuse();
                    }
                }
                cursor7.dispose();
                statement2.dispose();
            }
            this.database.executeFast("DROP INDEX IF EXISTS uid_mid_type_date_idx_media;").stepThis().dispose();
            this.database.executeFast("DROP TABLE IF EXISTS media_v2;").stepThis().dispose();
            this.database.commitTransaction();
            this.database.executeFast("PRAGMA user_version = 82").stepThis().dispose();
            version = 82;
        }
        if (version == 82) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS randoms_v2(random_id INTEGER, mid INTEGER, uid INTEGER, PRIMARY KEY (random_id, mid, uid))").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS mid_idx_randoms_v2 ON randoms_v2(mid, uid);").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS enc_tasks_v4(mid INTEGER, uid INTEGER, date INTEGER, media INTEGER, PRIMARY KEY(mid, uid, media))").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS date_idx_enc_tasks_v4 ON enc_tasks_v4(date);").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS polls_v2(mid INTEGER, uid INTEGER, id INTEGER, PRIMARY KEY (mid, uid));").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS polls_id_v2 ON polls_v2(id);").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS webpage_pending_v2(id INTEGER, mid INTEGER, uid INTEGER, PRIMARY KEY (id, mid, uid));").stepThis().dispose();
            this.database.beginTransaction();
            try {
                cursor3 = this.database.queryFinalized("SELECT r.random_id, r.mid, m.uid FROM randoms as r INNER JOIN messages as m ON r.mid = m.mid WHERE 1", new Object[0]);
            } catch (Exception e3) {
                cursor3 = null;
                FileLog.e((Throwable) e3);
            }
            if (cursor3 != null) {
                SQLitePreparedStatement statement3 = this.database.executeFast("REPLACE INTO randoms_v2 VALUES(?, ?, ?)");
                while (cursor3.next()) {
                    long randomId = cursor3.longValue(0);
                    int mid4 = cursor3.intValue(1);
                    long uid3 = cursor3.longValue(2);
                    if (((int) uid3) == 0) {
                        uid3 = DialogObject.makeEncryptedDialogId((long) ((int) (uid3 >> 32)));
                    }
                    statement3.requery();
                    statement3.bindLong(1, randomId);
                    statement3.bindInteger(2, mid4);
                    statement3.bindLong(3, uid3);
                    statement3.step();
                }
                cursor3.dispose();
                statement3.dispose();
            }
            try {
                cursor4 = this.database.queryFinalized("SELECT p.mid, m.uid, p.id FROM polls as p INNER JOIN messages as m ON p.mid = m.mid WHERE 1", new Object[0]);
            } catch (Exception e4) {
                cursor4 = null;
                FileLog.e((Throwable) e4);
            }
            if (cursor4 != null) {
                SQLitePreparedStatement statement4 = this.database.executeFast("REPLACE INTO polls_v2 VALUES(?, ?, ?)");
                while (cursor4.next()) {
                    int mid5 = cursor4.intValue(0);
                    long uid4 = cursor4.longValue(1);
                    long id = cursor4.longValue(2);
                    if (((int) uid4) == 0) {
                        uid4 = DialogObject.makeEncryptedDialogId((long) ((int) (uid4 >> 32)));
                    }
                    statement4.requery();
                    statement4.bindInteger(1, mid5);
                    statement4.bindLong(2, uid4);
                    statement4.bindLong(3, id);
                    statement4.step();
                }
                cursor4.dispose();
                statement4.dispose();
            }
            try {
                cursor5 = this.database.queryFinalized("SELECT wp.id, wp.mid, m.uid FROM webpage_pending as wp INNER JOIN messages as m ON wp.mid = m.mid WHERE 1", new Object[0]);
            } catch (Exception e5) {
                cursor5 = null;
                FileLog.e((Throwable) e5);
            }
            if (cursor5 != null) {
                SQLitePreparedStatement statement5 = this.database.executeFast("REPLACE INTO webpage_pending_v2 VALUES(?, ?, ?)");
                while (cursor5.next()) {
                    long id2 = cursor5.longValue(0);
                    int mid6 = cursor5.intValue(1);
                    long uid5 = cursor5.longValue(2);
                    if (((int) uid5) == 0) {
                        uid5 = DialogObject.makeEncryptedDialogId((long) ((int) (uid5 >> 32)));
                    }
                    statement5.requery();
                    statement5.bindLong(1, id2);
                    statement5.bindInteger(2, mid6);
                    statement5.bindLong(3, uid5);
                    statement5.step();
                }
                cursor5.dispose();
                statement5.dispose();
            }
            try {
                cursor6 = this.database.queryFinalized("SELECT et.mid, m.uid, et.date, et.media FROM enc_tasks_v3 as et INNER JOIN messages as m ON et.mid = m.mid WHERE 1", new Object[0]);
            } catch (Exception e6) {
                FileLog.e((Throwable) e6);
                cursor6 = null;
            }
            if (cursor6 != null) {
                SQLitePreparedStatement statement6 = this.database.executeFast("REPLACE INTO enc_tasks_v4 VALUES(?, ?, ?, ?)");
                while (cursor6.next()) {
                    int mid7 = cursor6.intValue(0);
                    long uid6 = cursor6.longValue(1);
                    int date5 = cursor6.intValue(2);
                    int media2 = cursor6.intValue(3);
                    if (((int) uid6) == 0) {
                        uid6 = DialogObject.makeEncryptedDialogId((long) ((int) (uid6 >> 32)));
                    }
                    statement6.requery();
                    statement6.bindInteger(1, mid7);
                    statement6.bindLong(2, uid6);
                    statement6.bindInteger(3, date5);
                    statement6.bindInteger(4, media2);
                    statement6.step();
                }
                cursor6.dispose();
                statement6.dispose();
            }
            this.database.executeFast("DROP INDEX IF EXISTS mid_idx_randoms;").stepThis().dispose();
            this.database.executeFast("DROP TABLE IF EXISTS randoms;").stepThis().dispose();
            this.database.executeFast("DROP INDEX IF EXISTS date_idx_enc_tasks_v3;").stepThis().dispose();
            this.database.executeFast("DROP TABLE IF EXISTS enc_tasks_v3;").stepThis().dispose();
            this.database.executeFast("DROP INDEX IF EXISTS polls_id;").stepThis().dispose();
            this.database.executeFast("DROP TABLE IF EXISTS polls;").stepThis().dispose();
            this.database.executeFast("DROP TABLE IF EXISTS webpage_pending;").stepThis().dispose();
            this.database.commitTransaction();
            this.database.executeFast("PRAGMA user_version = 83").stepThis().dispose();
            version = 83;
        }
        if (version == 83) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS messages_v2(mid INTEGER, uid INTEGER, read_state INTEGER, send_state INTEGER, date INTEGER, data BLOB, out INTEGER, ttl INTEGER, media INTEGER, replydata BLOB, imp INTEGER, mention INTEGER, forwards INTEGER, replies_data BLOB, thread_reply_id INTEGER, is_channel INTEGER, PRIMARY KEY(mid, uid))").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_mid_read_out_idx_messages_v2 ON messages_v2(uid, mid, read_state, out);").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_date_mid_idx_messages_v2 ON messages_v2(uid, date, mid);").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS mid_out_idx_messages_v2 ON messages_v2(mid, out);").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS task_idx_messages_v2 ON messages_v2(uid, out, read_state, ttl, date, send_state);").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS send_state_idx_messages_v2 ON messages_v2(mid, send_state, date);").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_mention_idx_messages_v2 ON messages_v2(uid, mention, read_state);").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS is_channel_idx_messages_v2 ON messages_v2(mid, is_channel);").stepThis().dispose();
            this.database.beginTransaction();
            try {
                cursor2 = this.database.queryFinalized("SELECT mid, uid, read_state, send_state, date, data, out, ttl, media, replydata, imp, mention, forwards, replies_data, thread_reply_id FROM messages WHERE 1", new Object[0]);
            } catch (Exception e7) {
                FileLog.e((Throwable) e7);
                cursor2 = null;
            }
            if (cursor2 != null) {
                SQLitePreparedStatement statement7 = this.database.executeFast("REPLACE INTO messages_v2 VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                int num = 0;
                while (cursor2.next()) {
                    NativeByteBuffer data7 = cursor2.byteBufferValue(5);
                    if (data7 != null) {
                        int num2 = num + 1;
                        long mid8 = (long) cursor2.intValue(0);
                        long uid7 = cursor2.longValue(i4);
                        int lowerId = (int) uid7;
                        if (lowerId == 0) {
                            int i8 = lowerId;
                            uid7 = DialogObject.makeEncryptedDialogId((long) ((int) (uid7 >> 32)));
                        }
                        int readState = cursor2.intValue(i2);
                        int sendState3 = cursor2.intValue(3);
                        int date6 = cursor2.intValue(4);
                        int out = cursor2.intValue(6);
                        int date7 = date6;
                        int ttl2 = cursor2.intValue(7);
                        int num3 = num2;
                        int media3 = cursor2.intValue(8);
                        int version4 = version;
                        NativeByteBuffer replydata2 = cursor2.byteBufferValue(9);
                        int imp = cursor2.intValue(10);
                        int mention = cursor2.intValue(11);
                        int forwards = cursor2.intValue(12);
                        NativeByteBuffer repliesdata2 = cursor2.byteBufferValue(13);
                        SQLiteCursor cursor12 = cursor2;
                        int thread_reply_id = cursor2.intValue(14);
                        int channelId2 = (int) (uid7 >> 32);
                        if (ttl2 < 0) {
                            TLRPC.Message message = TLRPC.Message.TLdeserialize(data7, data7.readInt32(false), false);
                            if (message != null) {
                                sendState = sendState3;
                                message.readAttachPath(data7, getUserConfig().clientUserId);
                                if (message.params == null) {
                                    message.params = new HashMap<>();
                                    HashMap<String, String> hashMap = message.params;
                                    StringBuilder sb = new StringBuilder();
                                    channelId = channelId2;
                                    sb.append("");
                                    sb.append(ttl2);
                                    hashMap.put("fwd_peer", sb.toString());
                                } else {
                                    channelId = channelId2;
                                }
                                data7.reuse();
                                NativeByteBuffer data8 = new NativeByteBuffer(message.getObjectSize());
                                message.serializeToStream(data8);
                                data7 = data8;
                            } else {
                                channelId = channelId2;
                                sendState = sendState3;
                            }
                            ttl2 = 0;
                        } else {
                            channelId = channelId2;
                            sendState = sendState3;
                        }
                        statement7.requery();
                        statement7.bindInteger(1, (int) mid8);
                        statement7.bindLong(2, uid7);
                        statement7.bindInteger(3, readState);
                        statement7.bindInteger(4, sendState);
                        statement7.bindInteger(5, date7);
                        statement7.bindByteBuffer(6, data7);
                        statement7.bindInteger(7, out);
                        statement7.bindInteger(8, ttl2);
                        statement7.bindInteger(9, media3);
                        if (replydata2 != null) {
                            statement7.bindByteBuffer(10, replydata2);
                        } else {
                            statement7.bindNull(10);
                        }
                        statement7.bindInteger(11, imp);
                        statement7.bindInteger(12, mention);
                        statement7.bindInteger(13, forwards);
                        if (repliesdata2 != null) {
                            int i9 = ttl2;
                            repliesdata = repliesdata2;
                            statement7.bindByteBuffer(14, repliesdata);
                        } else {
                            repliesdata = repliesdata2;
                            statement7.bindNull(14);
                        }
                        int i10 = media3;
                        int thread_reply_id2 = thread_reply_id;
                        statement7.bindInteger(15, thread_reply_id2);
                        int i11 = thread_reply_id2;
                        statement7.bindInteger(16, channelId > 0 ? 1 : 0);
                        statement7.step();
                        if (replydata2 != null) {
                            replydata2.reuse();
                        }
                        if (repliesdata != null) {
                            repliesdata.reuse();
                        }
                        data7.reuse();
                        cursor2 = cursor12;
                        num = num3;
                        version = version4;
                        i2 = 2;
                        i4 = 1;
                    }
                }
                int i12 = version;
                cursor2.dispose();
                statement7.dispose();
            } else {
                int i13 = version;
            }
            ArrayList<Integer> secretChatsToUpdate = null;
            ArrayList<Integer> foldersToUpdate = null;
            messagesStorage = this;
            SQLiteCursor cursor13 = messagesStorage.database.queryFinalized("SELECT did, last_mid, last_mid_i FROM dialogs WHERE 1", new Object[0]);
            SQLitePreparedStatement statement42 = messagesStorage.database.executeFast("UPDATE dialogs SET last_mid = ?, last_mid_i = ? WHERE did = ?");
            while (cursor13.next()) {
                long did = cursor13.longValue(0);
                int lowerId2 = (int) did;
                int highId = (int) (did >> 32);
                if (lowerId2 == 0) {
                    if (secretChatsToUpdate == null) {
                        secretChatsToUpdate = new ArrayList<>();
                    }
                    secretChatsToUpdate.add(Integer.valueOf(highId));
                } else if (highId == 2) {
                    if (foldersToUpdate == null) {
                        foldersToUpdate = new ArrayList<>();
                    }
                    foldersToUpdate.add(Integer.valueOf(lowerId2));
                }
                statement42.requery();
                statement42.bindInteger(1, cursor13.intValue(1));
                statement42.bindInteger(2, cursor13.intValue(2));
                statement42.bindLong(3, did);
                statement42.step();
            }
            statement42.dispose();
            cursor13.dispose();
            SQLiteCursor cursor14 = messagesStorage.database.queryFinalized("SELECT uid, mid FROM unread_push_messages WHERE 1", new Object[0]);
            SQLitePreparedStatement statement43 = messagesStorage.database.executeFast("UPDATE unread_push_messages SET mid = ? WHERE uid = ? AND mid = ?");
            while (cursor14.next()) {
                long did2 = cursor14.longValue(0);
                int mid9 = cursor14.intValue(1);
                statement43.requery();
                statement43.bindInteger(1, mid9);
                statement43.bindLong(2, did2);
                statement43.bindInteger(3, mid9);
                statement43.step();
            }
            statement43.dispose();
            cursor14.dispose();
            if (secretChatsToUpdate != null) {
                SQLitePreparedStatement statement8 = messagesStorage.database.executeFast("UPDATE dialogs SET did = ? WHERE did = ?");
                SQLitePreparedStatement statement22 = messagesStorage.database.executeFast("UPDATE dialog_filter_pin_v2 SET peer = ? WHERE peer = ?");
                SQLitePreparedStatement statement32 = messagesStorage.database.executeFast("UPDATE dialog_filter_ep SET peer = ? WHERE peer = ?");
                int a2 = 0;
                int N = secretChatsToUpdate.size();
                while (a2 < N) {
                    int sid = secretChatsToUpdate.get(a2).intValue();
                    long newId = DialogObject.makeEncryptedDialogId((long) sid);
                    SQLiteCursor cursor15 = cursor14;
                    long oldId = ((long) sid) << 32;
                    statement8.requery();
                    statement8.bindLong(1, newId);
                    statement8.bindLong(2, oldId);
                    statement8.step();
                    statement22.requery();
                    statement22.bindLong(1, newId);
                    statement22.bindLong(2, oldId);
                    statement22.step();
                    statement32.requery();
                    statement32.bindLong(1, newId);
                    statement32.bindLong(2, oldId);
                    statement32.step();
                    a2++;
                    cursor14 = cursor15;
                    statement43 = statement43;
                }
                SQLitePreparedStatement sQLitePreparedStatement = statement43;
                statement8.dispose();
                statement22.dispose();
                statement32.dispose();
            } else {
                SQLitePreparedStatement sQLitePreparedStatement2 = statement43;
            }
            if (foldersToUpdate != null) {
                SQLitePreparedStatement statement9 = messagesStorage.database.executeFast("UPDATE dialogs SET did = ? WHERE did = ?");
                int N2 = foldersToUpdate.size();
                for (int a3 = 0; a3 < N2; a3++) {
                    int fid = foldersToUpdate.get(a3).intValue();
                    long newId2 = DialogObject.makeFolderDialogId(fid);
                    statement9.requery();
                    statement9.bindLong(1, newId2);
                    statement9.bindLong(2, 8589934592L | ((long) fid));
                    statement9.step();
                }
                statement9.dispose();
            }
            messagesStorage.database.executeFast("DROP INDEX IF EXISTS uid_mid_read_out_idx_messages;").stepThis().dispose();
            messagesStorage.database.executeFast("DROP INDEX IF EXISTS uid_date_mid_idx_messages;").stepThis().dispose();
            messagesStorage.database.executeFast("DROP INDEX IF EXISTS mid_out_idx_messages;").stepThis().dispose();
            messagesStorage.database.executeFast("DROP INDEX IF EXISTS task_idx_messages;").stepThis().dispose();
            messagesStorage.database.executeFast("DROP INDEX IF EXISTS send_state_idx_messages2;").stepThis().dispose();
            messagesStorage.database.executeFast("DROP INDEX IF EXISTS uid_mention_idx_messages;").stepThis().dispose();
            messagesStorage.database.executeFast("DROP TABLE IF EXISTS messages;").stepThis().dispose();
            messagesStorage.database.commitTransaction();
            messagesStorage.database.executeFast("PRAGMA user_version = 84").stepThis().dispose();
            version = 84;
        } else {
            messagesStorage = this;
            int i14 = version;
        }
        if (version == 84) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS media_v4(mid INTEGER, uid INTEGER, date INTEGER, type INTEGER, data BLOB, PRIMARY KEY(mid, uid, type))").stepThis().dispose();
            messagesStorage.database.beginTransaction();
            try {
                cursor = messagesStorage.database.queryFinalized("SELECT mid, uid, date, type, data FROM media_v3 WHERE 1", new Object[0]);
            } catch (Exception e8) {
                FileLog.e((Throwable) e8);
                cursor = null;
            }
            if (cursor != null) {
                SQLitePreparedStatement statement10 = messagesStorage.database.executeFast("REPLACE INTO media_v4 VALUES(?, ?, ?, ?, ?)");
                while (cursor.next()) {
                    NativeByteBuffer data9 = cursor.byteBufferValue(4);
                    if (data9 != null) {
                        int mid10 = cursor.intValue(0);
                        long uid8 = cursor.longValue(1);
                        if (((int) uid8) == 0) {
                            uid8 = DialogObject.makeEncryptedDialogId((long) ((int) (uid8 >> 32)));
                        }
                        int date8 = cursor.intValue(2);
                        int type2 = cursor.intValue(3);
                        statement10.requery();
                        statement10.bindInteger(1, mid10);
                        statement10.bindLong(2, uid8);
                        statement10.bindInteger(3, date8);
                        statement10.bindInteger(4, type2);
                        statement10.bindByteBuffer(5, data9);
                        statement10.step();
                        data9.reuse();
                    }
                }
                cursor.dispose();
                statement10.dispose();
            }
            messagesStorage.database.commitTransaction();
            messagesStorage.database.executeFast("DROP TABLE IF EXISTS media_v3;").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 85").stepThis().dispose();
            version = 85;
        }
        if (version == 85) {
            messagesStorage.executeNoException("ALTER TABLE messages_v2 ADD COLUMN reply_to_message_id INTEGER default 0");
            messagesStorage.executeNoException("ALTER TABLE scheduled_messages_v2 ADD COLUMN reply_to_message_id INTEGER default 0");
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS reply_to_idx_messages_v2 ON messages_v2(mid, reply_to_message_id);").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS reply_to_idx_scheduled_messages_v2 ON scheduled_messages_v2(mid, reply_to_message_id);").stepThis().dispose();
            messagesStorage.executeNoException("UPDATE messages_v2 SET replydata = NULL");
            messagesStorage.executeNoException("UPDATE scheduled_messages_v2 SET replydata = NULL");
            messagesStorage.database.executeFast("PRAGMA user_version = 86").stepThis().dispose();
            version = 86;
        }
        if (version == 86) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS reactions(data BLOB, hash INTEGER, date INTEGER);").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 87").stepThis().dispose();
            version = 87;
        }
        if (version == 87) {
            messagesStorage.database.executeFast("ALTER TABLE dialogs ADD COLUMN unread_reactions INTEGER default 0").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE TABLE reaction_mentions(message_id INTEGER PRIMARY KEY, state INTEGER);").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 88").stepThis().dispose();
            version = 88;
        }
        if (version == 88 || version == 89) {
            messagesStorage.database.executeFast("DROP TABLE IF EXISTS reaction_mentions;").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS reaction_mentions(message_id INTEGER, state INTEGER, dialog_id INTEGER, PRIMARY KEY(dialog_id, message_id));").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS reaction_mentions_did ON reaction_mentions(dialog_id);").stepThis().dispose();
            messagesStorage.database.executeFast("DROP INDEX IF EXISTS uid_mid_type_date_idx_media_v3").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE INDEX IF NOT EXISTS uid_mid_type_date_idx_media_v4 ON media_v4(uid, mid, type, date);").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 90").stepThis().dispose();
            version = 90;
        }
        if (version == 90 || version == 91) {
            messagesStorage.database.executeFast("DROP TABLE IF EXISTS downloading_documents;").stepThis().dispose();
            messagesStorage.database.executeFast("CREATE TABLE downloading_documents(data BLOB, hash INTEGER, id INTEGER, state INTEGER, date INTEGER, PRIMARY KEY(hash, id));").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 92").stepThis().dispose();
            version = 92;
        }
        if (version == 92) {
            messagesStorage.database.executeFast("CREATE TABLE IF NOT EXISTS attach_menu_bots(data BLOB, hash INTEGER, date INTEGER);").stepThis().dispose();
            messagesStorage.database.executeFast("PRAGMA user_version = 93").stepThis().dispose();
        }
        FileLog.d("MessagesStorage db migration finished");
        AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda112(messagesStorage));
    }

    /* renamed from: lambda$updateDbToLastVersion$3$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m1008x9var_a4() {
        this.databaseMigrationInProgress = true;
        NotificationCenter.getInstance(this.currentAccount).postNotificationName(NotificationCenter.onDatabaseMigration, true);
    }

    /* renamed from: lambda$updateDbToLastVersion$4$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m1009xf6a46183() {
        this.databaseMigrationInProgress = false;
        NotificationCenter.getInstance(this.currentAccount).postNotificationName(NotificationCenter.onDatabaseMigration, false);
    }

    private void executeNoException(String query) {
        try {
            this.database.executeFast(query).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    private void cleanupInternal(boolean deleteFiles) {
        this.lastDateValue = 0;
        this.lastSeqValue = 0;
        this.lastPtsValue = 0;
        this.lastQtsValue = 0;
        this.lastSecretVersion = 0;
        this.mainUnreadCount = 0;
        this.archiveUnreadCount = 0;
        this.pendingMainUnreadCount = 0;
        this.pendingArchiveUnreadCount = 0;
        this.dialogFilters.clear();
        this.dialogFiltersMap.clear();
        this.unknownDialogsIds.clear();
        this.lastSavedSeq = 0;
        this.lastSavedPts = 0;
        this.lastSavedDate = 0;
        this.lastSavedQts = 0;
        this.secretPBytes = null;
        this.secretG = 0;
        SQLiteDatabase sQLiteDatabase = this.database;
        if (sQLiteDatabase != null) {
            sQLiteDatabase.close();
            this.database = null;
        }
        if (deleteFiles) {
            File file = this.cacheFile;
            if (file != null) {
                file.delete();
                this.cacheFile = null;
            }
            File file2 = this.walCacheFile;
            if (file2 != null) {
                file2.delete();
                this.walCacheFile = null;
            }
            File file3 = this.shmCacheFile;
            if (file3 != null) {
                file3.delete();
                this.shmCacheFile = null;
            }
        }
    }

    public void cleanup(boolean isLogin) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda87(this, isLogin));
    }

    /* renamed from: lambda$cleanup$6$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m855lambda$cleanup$6$orgtelegrammessengerMessagesStorage(boolean isLogin) {
        cleanupInternal(true);
        openDatabase(1);
        if (isLogin) {
            Utilities.stageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda153(this));
        }
    }

    /* renamed from: lambda$cleanup$5$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m854lambda$cleanup$5$orgtelegrammessengerMessagesStorage() {
        getMessagesController().getDifference();
    }

    public void saveSecretParams(int lsv, int sg, byte[] pbytes) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda129(this, lsv, sg, pbytes));
    }

    /* renamed from: lambda$saveSecretParams$7$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m992lambda$saveSecretParams$7$orgtelegrammessengerMessagesStorage(int lsv, int sg, byte[] pbytes) {
        try {
            SQLitePreparedStatement state = this.database.executeFast("UPDATE params SET lsv = ?, sg = ?, pbytes = ? WHERE id = 1");
            int i = 1;
            state.bindInteger(1, lsv);
            state.bindInteger(2, sg);
            if (pbytes != null) {
                i = pbytes.length;
            }
            NativeByteBuffer data = new NativeByteBuffer(i);
            if (pbytes != null) {
                data.writeBytes(pbytes);
            }
            state.bindByteBuffer(3, data);
            state.step();
            state.dispose();
            data.reuse();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    private void fixNotificationSettings() {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda11(this));
    }

    /* renamed from: lambda$fixNotificationSettings$8$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m881x7b3dd33c() {
        long flags;
        try {
            LongSparseArray<Long> ids = new LongSparseArray<>();
            Map<String, ?> values = MessagesController.getNotificationsSettings(this.currentAccount).getAll();
            for (Map.Entry<String, ?> entry : values.entrySet()) {
                String key = entry.getKey();
                if (key.startsWith("notify2_")) {
                    Integer value = (Integer) entry.getValue();
                    if (value.intValue() == 2 || value.intValue() == 3) {
                        String key2 = key.replace("notify2_", "");
                        if (value.intValue() == 2) {
                            flags = 1;
                        } else {
                            Integer time = (Integer) values.get("notifyuntil_" + key2);
                            if (time != null) {
                                flags = (((long) time.intValue()) << 32) | 1;
                            } else {
                                flags = 1;
                            }
                        }
                        ids.put(Long.parseLong(key2), Long.valueOf(flags));
                    }
                }
            }
            try {
                this.database.beginTransaction();
                SQLitePreparedStatement state = this.database.executeFast("REPLACE INTO dialog_settings VALUES(?, ?)");
                for (int a = 0; a < ids.size(); a++) {
                    state.requery();
                    state.bindLong(1, ids.keyAt(a));
                    state.bindLong(2, ids.valueAt(a).longValue());
                    state.step();
                }
                state.dispose();
                this.database.commitTransaction();
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        } catch (Exception e2) {
            e2.printStackTrace();
        } catch (Throwable e3) {
            FileLog.e(e3);
        }
    }

    public long createPendingTask(NativeByteBuffer data) {
        if (data == null) {
            return 0;
        }
        long id = this.lastTaskId.getAndAdd(1);
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda4(this, id, data));
        return id;
    }

    /* renamed from: lambda$createPendingTask$9$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m863xvar_f3e(long id, NativeByteBuffer data) {
        try {
            SQLitePreparedStatement state = this.database.executeFast("REPLACE INTO pending_tasks VALUES(?, ?)");
            state.bindLong(1, id);
            state.bindByteBuffer(2, data);
            state.step();
            state.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        } catch (Throwable th) {
            data.reuse();
            throw th;
        }
        data.reuse();
    }

    public void removePendingTask(long id) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda159(this, id));
    }

    /* renamed from: lambda$removePendingTask$10$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m979x73f8e42e(long id) {
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM pending_tasks WHERE id = " + id).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    private void loadPendingTasks() {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda55(this));
    }

    /* renamed from: lambda$loadPendingTasks$30$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m934x5var_def() {
        SQLiteCursor cursor;
        NativeByteBuffer data;
        TLObject request;
        TLRPC.InputChannel inputChannel;
        TLRPC.InputChannel inputChannel2;
        TLObject request2;
        try {
            boolean z = false;
            SQLiteCursor cursor2 = this.database.queryFinalized("SELECT id, data FROM pending_tasks WHERE 1", new Object[0]);
            while (cursor2.next()) {
                long taskId = cursor2.longValue(z ? 1 : 0);
                NativeByteBuffer data2 = cursor2.byteBufferValue(1);
                if (data2 != null) {
                    int type = data2.readInt32(z);
                    switch (type) {
                        case 0:
                            cursor = cursor2;
                            data = data2;
                            int i = type;
                            TLRPC.Chat chat = TLRPC.Chat.TLdeserialize(data, data.readInt32(false), false);
                            if (chat != null) {
                                Utilities.stageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda60(this, chat, taskId));
                                break;
                            }
                            break;
                        case 1:
                            cursor = cursor2;
                            data = data2;
                            int i2 = type;
                            Utilities.stageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda165(this, (long) data.readInt32(false), data.readInt32(false), taskId));
                            break;
                        case 2:
                        case 5:
                        case 8:
                        case 10:
                        case 14:
                            cursor = cursor2;
                            data = data2;
                            TLRPC.Dialog dialog = new TLRPC.TL_dialog();
                            dialog.id = data.readInt64(false);
                            dialog.top_message = data.readInt32(false);
                            dialog.read_inbox_max_id = data.readInt32(false);
                            dialog.read_outbox_max_id = data.readInt32(false);
                            dialog.unread_count = data.readInt32(false);
                            dialog.last_message_date = data.readInt32(false);
                            dialog.pts = data.readInt32(false);
                            dialog.flags = data.readInt32(false);
                            int type2 = type;
                            if (type2 >= 5) {
                                dialog.pinned = data.readBool(false);
                                dialog.pinnedNum = data.readInt32(false);
                            }
                            if (type2 >= 8) {
                                dialog.unread_mentions_count = data.readInt32(false);
                            }
                            if (type2 >= 10) {
                                dialog.unread_mark = data.readBool(false);
                            }
                            if (type2 >= 14) {
                                dialog.folder_id = data.readInt32(false);
                            }
                            AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda65(this, dialog, TLRPC.InputPeer.TLdeserialize(data, data.readInt32(false), false), taskId));
                            break;
                        case 3:
                            cursor = cursor2;
                            data = data2;
                            getSendMessagesHelper().sendGame(TLRPC.InputPeer.TLdeserialize(data, data.readInt32(false), false), (TLRPC.TL_inputMediaGame) TLRPC.InputMedia.TLdeserialize(data, data.readInt32(false), false), data.readInt64(false), taskId);
                            int i3 = type;
                            break;
                        case 4:
                            cursor = cursor2;
                            data = data2;
                            AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda12(this, data.readInt64(false), data.readBool(false), TLRPC.InputPeer.TLdeserialize(data, data.readInt32(false), false), taskId));
                            int i4 = type;
                            break;
                        case 6:
                            cursor = cursor2;
                            data = data2;
                            Utilities.stageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda167(this, (long) data.readInt32(false), data.readInt32(false), taskId, TLRPC.InputChannel.TLdeserialize(data, data.readInt32(false), false)));
                            int i5 = type;
                            break;
                        case 7:
                            cursor = cursor2;
                            data = data2;
                            int type3 = type;
                            long channelId = (long) data.readInt32(false);
                            int constructor = data.readInt32(false);
                            TLObject request3 = TLRPC.TL_messages_deleteMessages.TLdeserialize(data, constructor, false);
                            if (request3 == null) {
                                request = TLRPC.TL_channels_deleteMessages.TLdeserialize(data, constructor, false);
                            } else {
                                request = request3;
                            }
                            if (request != null) {
                                AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda183(this, channelId, taskId, request));
                                int i6 = type3;
                                break;
                            } else {
                                removePendingTask(taskId);
                                int i7 = type3;
                                break;
                            }
                        case 9:
                            cursor = cursor2;
                            data = data2;
                            AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda5(this, data.readInt64(false), TLRPC.InputPeer.TLdeserialize(data, data.readInt32(false), false), taskId));
                            int i8 = type;
                            break;
                        case 11:
                            cursor = cursor2;
                            data = data2;
                            int type4 = type;
                            int mid = data.readInt32(false);
                            long channelId2 = (long) data.readInt32(false);
                            int ttl = data.readInt32(false);
                            if (channelId2 != 0) {
                                inputChannel = TLRPC.InputChannel.TLdeserialize(data, data.readInt32(false), false);
                            } else {
                                inputChannel = null;
                            }
                            AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda169(this, channelId2, mid, inputChannel, ttl, taskId));
                            int i9 = type4;
                            break;
                        case 12:
                        case 19:
                        case 20:
                            cursor = cursor2;
                            data = data2;
                            removePendingTask(taskId);
                            int i10 = type;
                            break;
                        case 13:
                            cursor = cursor2;
                            data = data2;
                            AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda10(this, data2.readInt64(false), data2.readBool(false), data2.readInt32(false), data2.readInt32(false), data2.readBool(false), TLRPC.InputPeer.TLdeserialize(data2, data2.readInt32(false), false), taskId));
                            int i11 = type;
                            break;
                        case 15:
                            Utilities.stageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda73(this, TLRPC.InputPeer.TLdeserialize(data2, data2.readInt32(false), false), taskId));
                            cursor = cursor2;
                            data = data2;
                            int i12 = type;
                            break;
                        case 16:
                            int folderId = data2.readInt32(false);
                            int count = data2.readInt32(false);
                            ArrayList<TLRPC.InputDialogPeer> peers = new ArrayList<>();
                            for (int a = 0; a < count; a++) {
                                peers.add(TLRPC.InputDialogPeer.TLdeserialize(data2, data2.readInt32(false), false));
                            }
                            AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda149(this, folderId, peers, taskId));
                            cursor = cursor2;
                            data = data2;
                            int i13 = type;
                            break;
                        case 17:
                            int folderId2 = data2.readInt32(false);
                            int count2 = data2.readInt32(false);
                            ArrayList<TLRPC.TL_inputFolderPeer> peers2 = new ArrayList<>();
                            for (int a2 = 0; a2 < count2; a2++) {
                                peers2.add(TLRPC.TL_inputFolderPeer.TLdeserialize(data2, data2.readInt32(false), false));
                            }
                            AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda150(this, folderId2, peers2, taskId));
                            cursor = cursor2;
                            data = data2;
                            int i14 = type;
                            break;
                        case 18:
                            long dialogId = data2.readInt64(false);
                            data2.readInt32(false);
                            TLObject request4 = TLRPC.TL_messages_deleteScheduledMessages.TLdeserialize(data2, data2.readInt32(false), false);
                            if (request4 != null) {
                                AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda185(this, dialogId, taskId, request4));
                                cursor = cursor2;
                                data = data2;
                                int constructor2 = type;
                                break;
                            } else {
                                removePendingTask(taskId);
                                cursor = cursor2;
                                data = data2;
                                int constructor3 = type;
                                break;
                            }
                        case 21:
                            Theme.OverrideWallpaperInfo info = new Theme.OverrideWallpaperInfo();
                            long readInt64 = data2.readInt64(false);
                            info.isBlurred = data2.readBool(false);
                            info.isMotion = data2.readBool(false);
                            info.color = data2.readInt32(false);
                            info.gradientColor1 = data2.readInt32(false);
                            info.rotation = data2.readInt32(false);
                            info.intensity = (float) data2.readDouble(false);
                            boolean install = data2.readBool(false);
                            info.slug = data2.readString(false);
                            info.originalFileName = data2.readString(false);
                            AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda86(this, info, install, taskId));
                            cursor = cursor2;
                            data = data2;
                            int i15 = type;
                            break;
                        case 22:
                            AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda74(this, TLRPC.InputPeer.TLdeserialize(data2, data2.readInt32(false), false), taskId));
                            cursor = cursor2;
                            data = data2;
                            int i16 = type;
                            break;
                        case 23:
                            long dialogId2 = data2.readInt64(false);
                            int mid2 = data2.readInt32(false);
                            int ttl2 = data2.readInt32(false);
                            if (DialogObject.isEncryptedDialog(dialogId2) || !DialogObject.isChatDialog(dialogId2) || !data2.hasRemaining()) {
                                inputChannel2 = null;
                            } else {
                                inputChannel2 = TLRPC.InputChannel.TLdeserialize(data2, data2.readInt32(false), false);
                            }
                            AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda170(this, dialogId2, mid2, inputChannel2, ttl2, taskId));
                            cursor = cursor2;
                            data = data2;
                            int i17 = type;
                            break;
                        case 24:
                            long dialogId3 = data2.readInt64(false);
                            int constructor4 = data2.readInt32(false);
                            TLObject request5 = TLRPC.TL_messages_deleteMessages.TLdeserialize(data2, constructor4, false);
                            if (request5 == null) {
                                request2 = TLRPC.TL_channels_deleteMessages.TLdeserialize(data2, constructor4, false);
                            } else {
                                request2 = request5;
                            }
                            if (request2 != null) {
                                AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda184(this, dialogId3, taskId, request2));
                                cursor = cursor2;
                                data = data2;
                                int constructor5 = type;
                                break;
                            } else {
                                removePendingTask(taskId);
                                cursor = cursor2;
                                data = data2;
                                int constructor6 = type;
                                break;
                            }
                        case 25:
                            long channelId3 = data2.readInt64(z);
                            int newDialogType = data2.readInt32(z);
                            TLRPC.InputChannel inputChannel3 = TLRPC.InputChannel.TLdeserialize(data2, data2.readInt32(z), z);
                            DispatchQueue dispatchQueue = Utilities.stageQueue;
                            MessagesStorage$$ExternalSyntheticLambda168 messagesStorage$$ExternalSyntheticLambda168 = r1;
                            MessagesStorage$$ExternalSyntheticLambda168 messagesStorage$$ExternalSyntheticLambda1682 = new MessagesStorage$$ExternalSyntheticLambda168(this, channelId3, newDialogType, taskId, inputChannel3);
                            dispatchQueue.postRunnable(messagesStorage$$ExternalSyntheticLambda168);
                            cursor = cursor2;
                            data = data2;
                            int i18 = type;
                            break;
                        case 100:
                            AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda152(this, data2.readInt32(z), data2.readBool(z), taskId));
                            cursor = cursor2;
                            data = data2;
                            int i19 = type;
                            break;
                        default:
                            cursor = cursor2;
                            data = data2;
                            int i20 = type;
                            break;
                    }
                    data.reuse();
                } else {
                    cursor = cursor2;
                    NativeByteBuffer nativeByteBuffer = data2;
                }
                cursor2 = cursor;
                z = false;
            }
            cursor2.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* renamed from: lambda$loadPendingTasks$11$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m915x9d30c8cc(TLRPC.Chat chat, long taskId) {
        getMessagesController().loadUnknownChannel(chat, taskId);
    }

    /* renamed from: lambda$loadPendingTasks$12$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m916xvar_eb9ab(long channelId, int newDialogType, long taskId) {
        getMessagesController().getChannelDifference(channelId, newDialogType, taskId, (TLRPC.InputChannel) null);
    }

    /* renamed from: lambda$loadPendingTasks$13$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m917x4b6caa8a(TLRPC.Dialog dialog, TLRPC.InputPeer peer, long taskId) {
        getMessagesController().checkLastDialogMessage(dialog, peer, taskId);
    }

    /* renamed from: lambda$loadPendingTasks$14$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m918xa28a9b69(long did, boolean pin, TLRPC.InputPeer peer, long taskId) {
        getMessagesController().pinDialog(did, pin, peer, taskId);
    }

    /* renamed from: lambda$loadPendingTasks$15$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m919xf9a88CLASSNAME(long channelId, int newDialogType, long taskId, TLRPC.InputChannel inputChannel) {
        getMessagesController().getChannelDifference(channelId, newDialogType, taskId, inputChannel);
    }

    /* renamed from: lambda$loadPendingTasks$16$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m920x50CLASSNAMEd27(long channelId, int newDialogType, long taskId, TLRPC.InputChannel inputChannel) {
        getMessagesController().getChannelDifference(channelId, newDialogType, taskId, inputChannel);
    }

    /* renamed from: lambda$loadPendingTasks$17$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m921xa7e46e06(long channelId, long taskId, TLObject finalRequest) {
        getMessagesController().deleteMessages((ArrayList<Integer>) null, (ArrayList<Long>) null, (TLRPC.EncryptedChat) null, -channelId, true, false, false, taskId, finalRequest);
    }

    /* renamed from: lambda$loadPendingTasks$18$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m922xfvar_ee5(long dialogId, long taskId, TLObject finalRequest) {
        getMessagesController().deleteMessages((ArrayList<Integer>) null, (ArrayList<Long>) null, (TLRPC.EncryptedChat) null, dialogId, true, false, false, taskId, finalRequest);
    }

    /* renamed from: lambda$loadPendingTasks$19$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m923x56204fc4(long did, TLRPC.InputPeer peer, long taskId) {
        getMessagesController().markDialogAsUnread(did, peer, taskId);
    }

    /* renamed from: lambda$loadPendingTasks$20$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m924xd2b302ee(long channelId, int mid, TLRPC.InputChannel inputChannel, int ttl, long taskId) {
        getMessagesController().markMessageAsRead2(-channelId, mid, inputChannel, ttl, taskId);
    }

    /* renamed from: lambda$loadPendingTasks$21$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m925x29d0f3cd(long dialogId, int mid, TLRPC.InputChannel inputChannel, int ttl, long taskId) {
        getMessagesController().markMessageAsRead2(dialogId, mid, inputChannel, ttl, taskId);
    }

    /* renamed from: lambda$loadPendingTasks$22$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m926x80eee4ac(Theme.OverrideWallpaperInfo info, boolean install, long taskId) {
        getMessagesController().saveWallpaperToServer((File) null, info, install, taskId);
    }

    /* renamed from: lambda$loadPendingTasks$23$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m927xd80cd58b(long did, boolean first, int onlyHistory, int maxIdDelete, boolean revoke, TLRPC.InputPeer inputPeer, long taskId) {
        getMessagesController().deleteDialog(did, first ? 1 : 0, onlyHistory, maxIdDelete, revoke, inputPeer, taskId);
    }

    /* renamed from: lambda$loadPendingTasks$24$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m928x2f2aCLASSNAMEa(TLRPC.InputPeer inputPeer, long taskId) {
        getMessagesController().loadUnknownDialog(inputPeer, taskId);
    }

    /* renamed from: lambda$loadPendingTasks$25$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m929x8648b749(int folderId, ArrayList peers, long taskId) {
        getMessagesController().reorderPinnedDialogs(folderId, peers, taskId);
    }

    /* renamed from: lambda$loadPendingTasks$26$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m930xdd66a828(int folderId, ArrayList peers, long taskId) {
        getMessagesController().addDialogToFolder((ArrayList<Long>) null, folderId, -1, peers, taskId);
    }

    /* renamed from: lambda$loadPendingTasks$27$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m931x34849907(long dialogId, long taskId, TLObject request) {
        getMessagesController().deleteMessages((ArrayList<Integer>) null, (ArrayList<Long>) null, (TLRPC.EncryptedChat) null, dialogId, true, true, false, taskId, request);
    }

    /* renamed from: lambda$loadPendingTasks$28$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m932x8ba289e6(TLRPC.InputPeer inputPeer, long taskId) {
        getMessagesController().reloadMentionsCountForChannel(inputPeer, taskId);
    }

    /* renamed from: lambda$loadPendingTasks$29$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m933xe2CLASSNAMEac5(int chatId, boolean revoke, long taskId) {
        getSecretChatHelper().declineSecretChat(chatId, revoke, taskId);
    }

    public void saveChannelPts(long channelId, int pts) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda133(this, pts, channelId));
    }

    /* renamed from: lambda$saveChannelPts$31$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m986lambda$saveChannelPts$31$orgtelegrammessengerMessagesStorage(int pts, long channelId) {
        try {
            SQLitePreparedStatement state = this.database.executeFast("UPDATE dialogs SET pts = ? WHERE did = ?");
            state.bindInteger(1, pts);
            state.bindLong(2, -channelId);
            state.step();
            state.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: saveDiffParamsInternal */
    public void m991lambda$saveDiffParams$32$orgtelegrammessengerMessagesStorage(int seq, int pts, int date, int qts) {
        try {
            if (this.lastSavedSeq != seq || this.lastSavedPts != pts || this.lastSavedDate != date || this.lastQtsValue != qts) {
                SQLitePreparedStatement state = this.database.executeFast("UPDATE params SET seq = ?, pts = ?, date = ?, qts = ? WHERE id = 1");
                state.bindInteger(1, seq);
                state.bindInteger(2, pts);
                state.bindInteger(3, date);
                state.bindInteger(4, qts);
                state.step();
                state.dispose();
                this.lastSavedSeq = seq;
                this.lastSavedPts = pts;
                this.lastSavedDate = date;
                this.lastSavedQts = qts;
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void saveDiffParams(int seq, int pts, int date, int qts) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda126(this, seq, pts, date, qts));
    }

    /* renamed from: lambda$updateMutedDialogsFiltersCounters$33$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m1023xCLASSNAMEb591e() {
        resetAllUnreadCounters(true);
    }

    public void updateMutedDialogsFiltersCounters() {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda114(this));
    }

    public void setDialogFlags(long did, long flags) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda179(this, did, flags));
    }

    /* renamed from: lambda$setDialogFlags$34$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m993lambda$setDialogFlags$34$orgtelegrammessengerMessagesStorage(long did, long flags) {
        int oldFlags = 0;
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            SQLiteCursor cursor = sQLiteDatabase.queryFinalized("SELECT flags FROM dialog_settings WHERE did = " + did, new Object[0]);
            if (cursor.next()) {
                oldFlags = cursor.intValue(0);
            }
            cursor.dispose();
            if (flags != ((long) oldFlags)) {
                this.database.executeFast(String.format(Locale.US, "REPLACE INTO dialog_settings VALUES(%d, %d)", new Object[]{Long.valueOf(did), Long.valueOf(flags)})).stepThis().dispose();
                resetAllUnreadCounters(true);
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void putPushMessage(MessageObject message) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda52(this, message));
    }

    /* renamed from: lambda$putPushMessage$35$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m969lambda$putPushMessage$35$orgtelegrammessengerMessagesStorage(MessageObject message) {
        try {
            NativeByteBuffer data = new NativeByteBuffer(message.messageOwner.getObjectSize());
            message.messageOwner.serializeToStream(data);
            int flags = 0;
            if (message.localType == 2) {
                flags = 0 | 1;
            }
            if (message.localChannel) {
                flags |= 2;
            }
            SQLitePreparedStatement state = this.database.executeFast("REPLACE INTO unread_push_messages VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?)");
            state.requery();
            state.bindLong(1, message.getDialogId());
            state.bindInteger(2, message.getId());
            state.bindLong(3, message.messageOwner.random_id);
            state.bindInteger(4, message.messageOwner.date);
            state.bindByteBuffer(5, data);
            if (message.messageText == null) {
                state.bindNull(6);
            } else {
                state.bindString(6, message.messageText.toString());
            }
            if (message.localName == null) {
                state.bindNull(7);
            } else {
                state.bindString(7, message.localName);
            }
            if (message.localUserName == null) {
                state.bindNull(8);
            } else {
                state.bindString(8, message.localUserName);
            }
            state.bindInteger(9, flags);
            state.step();
            data.reuse();
            state.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void clearLocalDatabase() {
        getInstance(this.currentAccount).getStorageQueue().postRunnable(new MessagesStorage$$ExternalSyntheticLambda175(this));
    }

    /* JADX WARNING: Removed duplicated region for block: B:49:0x0239 A[Catch:{ Exception -> 0x029b, all -> 0x0299 }] */
    /* JADX WARNING: Removed duplicated region for block: B:50:0x0245 A[Catch:{ Exception -> 0x029b, all -> 0x0299 }] */
    /* renamed from: lambda$clearLocalDatabase$37$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void m858x6abde44() {
        /*
            r24 = this;
            r1 = r24
            java.lang.String r2 = " AND mid != "
            int r0 = r1.currentAccount     // Catch:{ Exception -> 0x029b }
            org.telegram.messenger.MessagesStorage r0 = getInstance(r0)     // Catch:{ Exception -> 0x029b }
            org.telegram.SQLite.SQLiteDatabase r0 = r0.getDatabase()     // Catch:{ Exception -> 0x029b }
            r3 = r0
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x029b }
            r0.<init>()     // Catch:{ Exception -> 0x029b }
            r4 = r0
            java.lang.String r0 = "DELETE FROM reaction_mentions"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r3.executeFast(r0)     // Catch:{ Exception -> 0x029b }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x029b }
            r0.dispose()     // Catch:{ Exception -> 0x029b }
            java.lang.String r0 = "DELETE FROM downloading_documents"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r3.executeFast(r0)     // Catch:{ Exception -> 0x029b }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x029b }
            r0.dispose()     // Catch:{ Exception -> 0x029b }
            java.lang.String r0 = "DELETE FROM attach_menu_bots"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r3.executeFast(r0)     // Catch:{ Exception -> 0x029b }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x029b }
            r0.dispose()     // Catch:{ Exception -> 0x029b }
            java.lang.String r0 = "SELECT did FROM dialogs WHERE 1"
            r5 = 0
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x029b }
            org.telegram.SQLite.SQLiteCursor r0 = r3.queryFinalized(r0, r6)     // Catch:{ Exception -> 0x029b }
            java.lang.StringBuilder r6 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x029b }
            r6.<init>()     // Catch:{ Exception -> 0x029b }
        L_0x004a:
            boolean r7 = r0.next()     // Catch:{ Exception -> 0x029b }
            if (r7 == 0) goto L_0x0062
            long r7 = r0.longValue(r5)     // Catch:{ Exception -> 0x029b }
            boolean r9 = org.telegram.messenger.DialogObject.isEncryptedDialog(r7)     // Catch:{ Exception -> 0x029b }
            if (r9 != 0) goto L_0x0061
            java.lang.Long r9 = java.lang.Long.valueOf(r7)     // Catch:{ Exception -> 0x029b }
            r4.add(r9)     // Catch:{ Exception -> 0x029b }
        L_0x0061:
            goto L_0x004a
        L_0x0062:
            r0.dispose()     // Catch:{ Exception -> 0x029b }
            java.lang.String r7 = "REPLACE INTO messages_holes VALUES(?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r7 = r3.executeFast(r7)     // Catch:{ Exception -> 0x029b }
            java.lang.String r8 = "REPLACE INTO media_holes_v2 VALUES(?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r8 = r3.executeFast(r8)     // Catch:{ Exception -> 0x029b }
            r3.beginTransaction()     // Catch:{ Exception -> 0x029b }
            r9 = 0
        L_0x0075:
            int r10 = r4.size()     // Catch:{ Exception -> 0x029b }
            if (r9 >= r10) goto L_0x025f
            java.lang.Object r10 = r4.get(r9)     // Catch:{ Exception -> 0x029b }
            java.lang.Long r10 = (java.lang.Long) r10     // Catch:{ Exception -> 0x029b }
            r11 = 0
            java.lang.StringBuilder r12 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x029b }
            r12.<init>()     // Catch:{ Exception -> 0x029b }
            java.lang.String r13 = "SELECT COUNT(mid) FROM messages_v2 WHERE uid = "
            r12.append(r13)     // Catch:{ Exception -> 0x029b }
            r12.append(r10)     // Catch:{ Exception -> 0x029b }
            java.lang.String r12 = r12.toString()     // Catch:{ Exception -> 0x029b }
            java.lang.Object[] r13 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x029b }
            org.telegram.SQLite.SQLiteCursor r12 = r3.queryFinalized(r12, r13)     // Catch:{ Exception -> 0x029b }
            r0 = r12
            boolean r12 = r0.next()     // Catch:{ Exception -> 0x029b }
            if (r12 == 0) goto L_0x00a5
            int r12 = r0.intValue(r5)     // Catch:{ Exception -> 0x029b }
            r11 = r12
        L_0x00a5:
            r0.dispose()     // Catch:{ Exception -> 0x029b }
            r12 = 2
            if (r11 > r12) goto L_0x00b1
            r19 = r4
            r18 = r6
            goto L_0x0256
        L_0x00b1:
            java.lang.StringBuilder r12 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x029b }
            r12.<init>()     // Catch:{ Exception -> 0x029b }
            java.lang.String r13 = "SELECT last_mid_i, last_mid FROM dialogs WHERE did = "
            r12.append(r13)     // Catch:{ Exception -> 0x029b }
            r12.append(r10)     // Catch:{ Exception -> 0x029b }
            java.lang.String r12 = r12.toString()     // Catch:{ Exception -> 0x029b }
            java.lang.Object[] r13 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x029b }
            org.telegram.SQLite.SQLiteCursor r12 = r3.queryFinalized(r12, r13)     // Catch:{ Exception -> 0x029b }
            r0 = -1
            boolean r13 = r12.next()     // Catch:{ Exception -> 0x029b }
            if (r13 == 0) goto L_0x024a
            long r13 = r12.longValue(r5)     // Catch:{ Exception -> 0x029b }
            r15 = 1
            long r15 = r12.longValue(r15)     // Catch:{ Exception -> 0x029b }
            r17 = r15
            java.lang.StringBuilder r15 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x029b }
            r15.<init>()     // Catch:{ Exception -> 0x029b }
            java.lang.String r5 = "SELECT data FROM messages_v2 WHERE uid = "
            r15.append(r5)     // Catch:{ Exception -> 0x029b }
            r15.append(r10)     // Catch:{ Exception -> 0x029b }
            java.lang.String r5 = " AND mid IN ("
            r15.append(r5)     // Catch:{ Exception -> 0x029b }
            r15.append(r13)     // Catch:{ Exception -> 0x029b }
            java.lang.String r5 = ","
            r15.append(r5)     // Catch:{ Exception -> 0x029b }
            r19 = r4
            r4 = r17
            r15.append(r4)     // Catch:{ Exception -> 0x029b }
            r17 = r0
            java.lang.String r0 = ")"
            r15.append(r0)     // Catch:{ Exception -> 0x029b }
            java.lang.String r0 = r15.toString()     // Catch:{ Exception -> 0x029b }
            r18 = r6
            r15 = 0
            java.lang.Object[] r6 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x029b }
            org.telegram.SQLite.SQLiteCursor r0 = r3.queryFinalized(r0, r6)     // Catch:{ Exception -> 0x029b }
            r6 = r0
        L_0x0110:
            boolean r0 = r6.next()     // Catch:{ Exception -> 0x0163 }
            if (r0 == 0) goto L_0x015a
            r15 = 0
            org.telegram.tgnet.NativeByteBuffer r0 = r6.byteBufferValue(r15)     // Catch:{ Exception -> 0x0163 }
            if (r0 == 0) goto L_0x014d
            r16 = r11
            int r11 = r0.readInt32(r15)     // Catch:{ Exception -> 0x0147 }
            org.telegram.tgnet.TLRPC$Message r11 = org.telegram.tgnet.TLRPC.Message.TLdeserialize(r0, r11, r15)     // Catch:{ Exception -> 0x0147 }
            if (r11 == 0) goto L_0x013d
            int r15 = r11.id     // Catch:{ Exception -> 0x0147 }
            r17 = r15
            int r15 = r1.currentAccount     // Catch:{ Exception -> 0x0147 }
            org.telegram.messenger.UserConfig r15 = org.telegram.messenger.UserConfig.getInstance(r15)     // Catch:{ Exception -> 0x0147 }
            r20 = r7
            r21 = r8
            long r7 = r15.clientUserId     // Catch:{ Exception -> 0x0145 }
            r11.readAttachPath(r0, r7)     // Catch:{ Exception -> 0x0145 }
            goto L_0x0141
        L_0x013d:
            r20 = r7
            r21 = r8
        L_0x0141:
            r0.reuse()     // Catch:{ Exception -> 0x0145 }
            goto L_0x0153
        L_0x0145:
            r0 = move-exception
            goto L_0x016a
        L_0x0147:
            r0 = move-exception
            r20 = r7
            r21 = r8
            goto L_0x016a
        L_0x014d:
            r20 = r7
            r21 = r8
            r16 = r11
        L_0x0153:
            r11 = r16
            r7 = r20
            r8 = r21
            goto L_0x0110
        L_0x015a:
            r20 = r7
            r21 = r8
            r16 = r11
            r0 = r17
            goto L_0x016f
        L_0x0163:
            r0 = move-exception
            r20 = r7
            r21 = r8
            r16 = r11
        L_0x016a:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ Exception -> 0x029b }
            r0 = r17
        L_0x016f:
            r6.dispose()     // Catch:{ Exception -> 0x029b }
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x029b }
            r7.<init>()     // Catch:{ Exception -> 0x029b }
            java.lang.String r8 = "DELETE FROM messages_v2 WHERE uid = "
            r7.append(r8)     // Catch:{ Exception -> 0x029b }
            r7.append(r10)     // Catch:{ Exception -> 0x029b }
            r7.append(r2)     // Catch:{ Exception -> 0x029b }
            r7.append(r13)     // Catch:{ Exception -> 0x029b }
            r7.append(r2)     // Catch:{ Exception -> 0x029b }
            r7.append(r4)     // Catch:{ Exception -> 0x029b }
            java.lang.String r7 = r7.toString()     // Catch:{ Exception -> 0x029b }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r3.executeFast(r7)     // Catch:{ Exception -> 0x029b }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.stepThis()     // Catch:{ Exception -> 0x029b }
            r7.dispose()     // Catch:{ Exception -> 0x029b }
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x029b }
            r7.<init>()     // Catch:{ Exception -> 0x029b }
            java.lang.String r8 = "DELETE FROM messages_holes WHERE uid = "
            r7.append(r8)     // Catch:{ Exception -> 0x029b }
            r7.append(r10)     // Catch:{ Exception -> 0x029b }
            java.lang.String r7 = r7.toString()     // Catch:{ Exception -> 0x029b }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r3.executeFast(r7)     // Catch:{ Exception -> 0x029b }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.stepThis()     // Catch:{ Exception -> 0x029b }
            r7.dispose()     // Catch:{ Exception -> 0x029b }
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x029b }
            r7.<init>()     // Catch:{ Exception -> 0x029b }
            java.lang.String r8 = "DELETE FROM bot_keyboard WHERE uid = "
            r7.append(r8)     // Catch:{ Exception -> 0x029b }
            r7.append(r10)     // Catch:{ Exception -> 0x029b }
            java.lang.String r7 = r7.toString()     // Catch:{ Exception -> 0x029b }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r3.executeFast(r7)     // Catch:{ Exception -> 0x029b }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.stepThis()     // Catch:{ Exception -> 0x029b }
            r7.dispose()     // Catch:{ Exception -> 0x029b }
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x029b }
            r7.<init>()     // Catch:{ Exception -> 0x029b }
            java.lang.String r8 = "DELETE FROM media_counts_v2 WHERE uid = "
            r7.append(r8)     // Catch:{ Exception -> 0x029b }
            r7.append(r10)     // Catch:{ Exception -> 0x029b }
            java.lang.String r7 = r7.toString()     // Catch:{ Exception -> 0x029b }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r3.executeFast(r7)     // Catch:{ Exception -> 0x029b }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.stepThis()     // Catch:{ Exception -> 0x029b }
            r7.dispose()     // Catch:{ Exception -> 0x029b }
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x029b }
            r7.<init>()     // Catch:{ Exception -> 0x029b }
            java.lang.String r8 = "DELETE FROM media_v4 WHERE uid = "
            r7.append(r8)     // Catch:{ Exception -> 0x029b }
            r7.append(r10)     // Catch:{ Exception -> 0x029b }
            java.lang.String r7 = r7.toString()     // Catch:{ Exception -> 0x029b }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r3.executeFast(r7)     // Catch:{ Exception -> 0x029b }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.stepThis()     // Catch:{ Exception -> 0x029b }
            r7.dispose()     // Catch:{ Exception -> 0x029b }
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x029b }
            r7.<init>()     // Catch:{ Exception -> 0x029b }
            java.lang.String r8 = "DELETE FROM media_holes_v2 WHERE uid = "
            r7.append(r8)     // Catch:{ Exception -> 0x029b }
            r7.append(r10)     // Catch:{ Exception -> 0x029b }
            java.lang.String r7 = r7.toString()     // Catch:{ Exception -> 0x029b }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r3.executeFast(r7)     // Catch:{ Exception -> 0x029b }
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.stepThis()     // Catch:{ Exception -> 0x029b }
            r7.dispose()     // Catch:{ Exception -> 0x029b }
            int r7 = r1.currentAccount     // Catch:{ Exception -> 0x029b }
            org.telegram.messenger.MediaDataController r7 = org.telegram.messenger.MediaDataController.getInstance(r7)     // Catch:{ Exception -> 0x029b }
            r22 = r4
            long r4 = r10.longValue()     // Catch:{ Exception -> 0x029b }
            r8 = 0
            r7.clearBotKeyboard(r4, r8)     // Catch:{ Exception -> 0x029b }
            r4 = -1
            if (r0 == r4) goto L_0x0245
            long r4 = r10.longValue()     // Catch:{ Exception -> 0x029b }
            r7 = r20
            r8 = r21
            createFirstHoles(r4, r7, r8, r0)     // Catch:{ Exception -> 0x029b }
            goto L_0x0252
        L_0x0245:
            r7 = r20
            r8 = r21
            goto L_0x0252
        L_0x024a:
            r17 = r0
            r19 = r4
            r18 = r6
            r16 = r11
        L_0x0252:
            r12.dispose()     // Catch:{ Exception -> 0x029b }
            r0 = r12
        L_0x0256:
            int r9 = r9 + 1
            r6 = r18
            r4 = r19
            r5 = 0
            goto L_0x0075
        L_0x025f:
            r19 = r4
            r18 = r6
            r7.dispose()     // Catch:{ Exception -> 0x029b }
            r8.dispose()     // Catch:{ Exception -> 0x029b }
            r3.commitTransaction()     // Catch:{ Exception -> 0x029b }
            java.lang.String r2 = "PRAGMA journal_size_limit = 0"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r3.executeFast(r2)     // Catch:{ Exception -> 0x029b }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.stepThis()     // Catch:{ Exception -> 0x029b }
            r2.dispose()     // Catch:{ Exception -> 0x029b }
            java.lang.String r2 = "VACUUM"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r3.executeFast(r2)     // Catch:{ Exception -> 0x029b }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.stepThis()     // Catch:{ Exception -> 0x029b }
            r2.dispose()     // Catch:{ Exception -> 0x029b }
            java.lang.String r2 = "PRAGMA journal_size_limit = -1"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r3.executeFast(r2)     // Catch:{ Exception -> 0x029b }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.stepThis()     // Catch:{ Exception -> 0x029b }
            r2.dispose()     // Catch:{ Exception -> 0x029b }
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda164 r0 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda164
            r0.<init>(r1)
            goto L_0x02a4
        L_0x0299:
            r0 = move-exception
            goto L_0x02a9
        L_0x029b:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0299 }
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda164 r0 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda164
            r0.<init>(r1)
        L_0x02a4:
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0)
            return
        L_0x02a9:
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda164 r2 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda164
            r2.<init>(r1)
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r2)
            goto L_0x02b3
        L_0x02b2:
            throw r0
        L_0x02b3:
            goto L_0x02b2
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.m858x6abde44():void");
    }

    /* renamed from: lambda$clearLocalDatabase$36$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m857xaf8ded65() {
        NotificationCenter.getInstance(this.currentAccount).postNotificationName(NotificationCenter.didClearDatabase, new Object[0]);
        getMediaDataController().loadAttachMenuBots(false, true);
    }

    private static class ReadDialog {
        public int date;
        public int lastMid;
        public int unreadCount;

        private ReadDialog() {
        }
    }

    public void readAllDialogs(int folderId) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda124(this, folderId));
    }

    /* renamed from: lambda$readAllDialogs$39$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m977lambda$readAllDialogs$39$orgtelegrammessengerMessagesStorage(int folderId) {
        SQLiteCursor cursor;
        try {
            ArrayList<Long> usersToLoad = new ArrayList<>();
            ArrayList arrayList = new ArrayList();
            ArrayList arrayList2 = new ArrayList();
            LongSparseArray<ReadDialog> dialogs = new LongSparseArray<>();
            if (folderId >= 0) {
                cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT did, last_mid, unread_count, date FROM dialogs WHERE unread_count > 0 AND folder_id = %1$d", new Object[]{Integer.valueOf(folderId)}), new Object[0]);
            } else {
                cursor = this.database.queryFinalized("SELECT did, last_mid, unread_count, date FROM dialogs WHERE unread_count > 0", new Object[0]);
            }
            while (cursor.next()) {
                long did = cursor.longValue(0);
                if (!DialogObject.isFolderDialogId(did)) {
                    ReadDialog dialog = new ReadDialog();
                    dialog.lastMid = cursor.intValue(1);
                    dialog.unreadCount = cursor.intValue(2);
                    dialog.date = cursor.intValue(3);
                    dialogs.put(did, dialog);
                    if (DialogObject.isEncryptedDialog(did)) {
                        int encryptedChatId = DialogObject.getEncryptedChatId(did);
                        if (!arrayList2.contains(Integer.valueOf(encryptedChatId))) {
                            arrayList2.add(Integer.valueOf(encryptedChatId));
                        }
                    } else if (DialogObject.isChatDialog(did)) {
                        if (!arrayList.contains(Long.valueOf(-did))) {
                            arrayList.add(Long.valueOf(-did));
                        }
                    } else if (!usersToLoad.contains(Long.valueOf(did))) {
                        usersToLoad.add(Long.valueOf(did));
                    }
                }
            }
            cursor.dispose();
            ArrayList<TLRPC.User> users = new ArrayList<>();
            ArrayList<TLRPC.Chat> chats = new ArrayList<>();
            ArrayList<TLRPC.EncryptedChat> encryptedChats = new ArrayList<>();
            if (!arrayList2.isEmpty()) {
                getEncryptedChatsInternal(TextUtils.join(",", arrayList2), encryptedChats, usersToLoad);
            }
            if (!usersToLoad.isEmpty()) {
                getUsersInternal(TextUtils.join(",", usersToLoad), users);
            }
            if (!arrayList.isEmpty()) {
                getChatsInternal(TextUtils.join(",", arrayList), chats);
            }
            AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda47(this, users, chats, encryptedChats, dialogs));
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* renamed from: lambda$readAllDialogs$38$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m976lambda$readAllDialogs$38$orgtelegrammessengerMessagesStorage(ArrayList users, ArrayList chats, ArrayList encryptedChats, LongSparseArray dialogs) {
        LongSparseArray longSparseArray = dialogs;
        getMessagesController().putUsers(users, true);
        getMessagesController().putChats(chats, true);
        getMessagesController().putEncryptedChats(encryptedChats, true);
        for (int a = 0; a < dialogs.size(); a++) {
            long did = longSparseArray.keyAt(a);
            ReadDialog dialog = (ReadDialog) longSparseArray.valueAt(a);
            getMessagesController().markDialogAsRead(did, dialog.lastMid, dialog.lastMid, dialog.date, false, 0, dialog.unreadCount, true, 0);
        }
    }

    /* JADX WARNING: Removed duplicated region for block: B:72:0x01b8  */
    /* JADX WARNING: Removed duplicated region for block: B:75:0x01d0  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private org.telegram.tgnet.TLRPC.messages_Dialogs loadDialogsByIds(java.lang.String r24, java.util.ArrayList<java.lang.Long> r25, java.util.ArrayList<java.lang.Long> r26, java.util.ArrayList<java.lang.Integer> r27) throws java.lang.Exception {
        /*
            r23 = this;
            r1 = r23
            r2 = r25
            r3 = r26
            r4 = r27
            org.telegram.tgnet.TLRPC$TL_messages_dialogs r0 = new org.telegram.tgnet.TLRPC$TL_messages_dialogs
            r0.<init>()
            r5 = r0
            androidx.collection.LongSparseArray r0 = new androidx.collection.LongSparseArray
            r0.<init>()
            r6 = r0
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database
            java.util.Locale r7 = java.util.Locale.US
            r8 = 1
            java.lang.Object[] r9 = new java.lang.Object[r8]
            r10 = 0
            r9[r10] = r24
            java.lang.String r11 = "SELECT d.did, d.last_mid, d.unread_count, d.date, m.data, m.read_state, m.mid, m.send_state, s.flags, m.date, d.pts, d.inbox_max, d.outbox_max, m.replydata, d.pinned, d.unread_count_i, d.flags, d.folder_id, d.data, d.unread_reactions FROM dialogs as d LEFT JOIN messages_v2 as m ON d.last_mid = m.mid AND d.did = m.uid LEFT JOIN dialog_settings as s ON d.did = s.did WHERE d.did IN (%s) ORDER BY d.pinned DESC, d.date DESC"
            java.lang.String r7 = java.lang.String.format(r7, r11, r9)
            java.lang.Object[] r9 = new java.lang.Object[r10]
            org.telegram.SQLite.SQLiteCursor r7 = r0.queryFinalized(r7, r9)
        L_0x002a:
            boolean r0 = r7.next()
            r9 = 3
            r11 = 2
            if (r0 == 0) goto L_0x0204
            long r12 = r7.longValue(r10)
            org.telegram.tgnet.TLRPC$TL_dialog r0 = new org.telegram.tgnet.TLRPC$TL_dialog
            r0.<init>()
            r14 = r0
            r14.id = r12
            int r0 = r7.intValue(r8)
            r14.top_message = r0
            int r0 = r7.intValue(r11)
            r14.unread_count = r0
            int r0 = r7.intValue(r9)
            r14.last_message_date = r0
            r0 = 10
            int r0 = r7.intValue(r0)
            r14.pts = r0
            int r0 = r14.pts
            if (r0 == 0) goto L_0x0067
            long r8 = r14.id
            boolean r0 = org.telegram.messenger.DialogObject.isUserDialog(r8)
            if (r0 == 0) goto L_0x0065
            goto L_0x0067
        L_0x0065:
            r0 = 1
            goto L_0x0068
        L_0x0067:
            r0 = 0
        L_0x0068:
            r14.flags = r0
            r0 = 11
            int r0 = r7.intValue(r0)
            r14.read_inbox_max_id = r0
            r0 = 12
            int r0 = r7.intValue(r0)
            r14.read_outbox_max_id = r0
            r0 = 14
            int r0 = r7.intValue(r0)
            r14.pinnedNum = r0
            int r0 = r14.pinnedNum
            if (r0 == 0) goto L_0x0088
            r0 = 1
            goto L_0x0089
        L_0x0088:
            r0 = 0
        L_0x0089:
            r14.pinned = r0
            r0 = 15
            int r0 = r7.intValue(r0)
            r14.unread_mentions_count = r0
            r0 = 16
            int r8 = r7.intValue(r0)
            r0 = r8 & 1
            if (r0 == 0) goto L_0x009f
            r0 = 1
            goto L_0x00a0
        L_0x009f:
            r0 = 0
        L_0x00a0:
            r14.unread_mark = r0
            r0 = 8
            long r10 = r7.longValue(r0)
            int r9 = (int) r10
            org.telegram.tgnet.TLRPC$TL_peerNotifySettings r0 = new org.telegram.tgnet.TLRPC$TL_peerNotifySettings
            r0.<init>()
            r14.notify_settings = r0
            r0 = r9 & 1
            if (r0 == 0) goto L_0x00cf
            org.telegram.tgnet.TLRPC$PeerNotifySettings r0 = r14.notify_settings
            r17 = 32
            r18 = r8
            r19 = r9
            long r8 = r10 >> r17
            int r9 = (int) r8
            r0.mute_until = r9
            org.telegram.tgnet.TLRPC$PeerNotifySettings r0 = r14.notify_settings
            int r0 = r0.mute_until
            if (r0 != 0) goto L_0x00d3
            org.telegram.tgnet.TLRPC$PeerNotifySettings r0 = r14.notify_settings
            r8 = 2147483647(0x7fffffff, float:NaN)
            r0.mute_until = r8
            goto L_0x00d3
        L_0x00cf:
            r18 = r8
            r19 = r9
        L_0x00d3:
            r0 = 17
            int r0 = r7.intValue(r0)
            r14.folder_id = r0
            r0 = 19
            int r0 = r7.intValue(r0)
            r14.unread_reactions_count = r0
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r0 = r5.dialogs
            r0.add(r14)
            r0 = 4
            org.telegram.tgnet.NativeByteBuffer r8 = r7.byteBufferValue(r0)
            if (r8 == 0) goto L_0x01ae
            r9 = 0
            int r0 = r8.readInt32(r9)
            org.telegram.tgnet.TLRPC$Message r15 = org.telegram.tgnet.TLRPC.Message.TLdeserialize(r8, r0, r9)
            if (r15 == 0) goto L_0x01a6
            org.telegram.messenger.UserConfig r0 = r23.getUserConfig()
            r20 = r10
            long r9 = r0.clientUserId
            r15.readAttachPath(r8, r9)
            r8.reuse()
            r0 = 5
            int r0 = r7.intValue(r0)
            org.telegram.messenger.MessageObject.setUnreadFlags(r15, r0)
            r0 = 6
            int r0 = r7.intValue(r0)
            r15.id = r0
            r0 = 9
            int r9 = r7.intValue(r0)
            if (r9 == 0) goto L_0x0121
            r14.last_message_date = r9
        L_0x0121:
            r0 = 7
            int r0 = r7.intValue(r0)
            r15.send_state = r0
            long r10 = r14.id
            r15.dialog_id = r10
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r0 = r5.messages
            r0.add(r15)
            addUsersAndChatsFromMessage(r15, r2, r3)
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r0 = r15.reply_to     // Catch:{ Exception -> 0x019f }
            if (r0 == 0) goto L_0x019c
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r0 = r15.reply_to     // Catch:{ Exception -> 0x019f }
            int r0 = r0.reply_to_msg_id     // Catch:{ Exception -> 0x019f }
            if (r0 == 0) goto L_0x019c
            org.telegram.tgnet.TLRPC$MessageAction r0 = r15.action     // Catch:{ Exception -> 0x019f }
            boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC.TL_messageActionPinMessage     // Catch:{ Exception -> 0x019f }
            if (r0 != 0) goto L_0x0158
            org.telegram.tgnet.TLRPC$MessageAction r0 = r15.action     // Catch:{ Exception -> 0x0154 }
            boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC.TL_messageActionPaymentSent     // Catch:{ Exception -> 0x0154 }
            if (r0 != 0) goto L_0x0158
            org.telegram.tgnet.TLRPC$MessageAction r0 = r15.action     // Catch:{ Exception -> 0x0154 }
            boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC.TL_messageActionGameScore     // Catch:{ Exception -> 0x0154 }
            if (r0 == 0) goto L_0x0151
            goto L_0x0158
        L_0x0151:
            r22 = r5
            goto L_0x019e
        L_0x0154:
            r0 = move-exception
            r22 = r5
            goto L_0x01a2
        L_0x0158:
            r0 = 13
            boolean r10 = r7.isNull(r0)     // Catch:{ Exception -> 0x019f }
            if (r10 != 0) goto L_0x018e
            org.telegram.tgnet.NativeByteBuffer r0 = r7.byteBufferValue(r0)     // Catch:{ Exception -> 0x019f }
            if (r0 == 0) goto L_0x018b
            r10 = 0
            int r11 = r0.readInt32(r10)     // Catch:{ Exception -> 0x019f }
            org.telegram.tgnet.TLRPC$Message r11 = org.telegram.tgnet.TLRPC.Message.TLdeserialize(r0, r11, r10)     // Catch:{ Exception -> 0x019f }
            r15.replyMessage = r11     // Catch:{ Exception -> 0x019f }
            org.telegram.tgnet.TLRPC$Message r10 = r15.replyMessage     // Catch:{ Exception -> 0x019f }
            org.telegram.messenger.UserConfig r11 = r23.getUserConfig()     // Catch:{ Exception -> 0x019f }
            r22 = r5
            long r4 = r11.clientUserId     // Catch:{ Exception -> 0x019a }
            r10.readAttachPath(r0, r4)     // Catch:{ Exception -> 0x019a }
            r0.reuse()     // Catch:{ Exception -> 0x019a }
            org.telegram.tgnet.TLRPC$Message r4 = r15.replyMessage     // Catch:{ Exception -> 0x019a }
            if (r4 == 0) goto L_0x0190
            org.telegram.tgnet.TLRPC$Message r4 = r15.replyMessage     // Catch:{ Exception -> 0x019a }
            addUsersAndChatsFromMessage(r4, r2, r3)     // Catch:{ Exception -> 0x019a }
            goto L_0x0190
        L_0x018b:
            r22 = r5
            goto L_0x0190
        L_0x018e:
            r22 = r5
        L_0x0190:
            org.telegram.tgnet.TLRPC$Message r0 = r15.replyMessage     // Catch:{ Exception -> 0x019a }
            if (r0 != 0) goto L_0x019e
            long r4 = r14.id     // Catch:{ Exception -> 0x019a }
            r6.put(r4, r15)     // Catch:{ Exception -> 0x019a }
            goto L_0x019e
        L_0x019a:
            r0 = move-exception
            goto L_0x01a2
        L_0x019c:
            r22 = r5
        L_0x019e:
            goto L_0x01a5
        L_0x019f:
            r0 = move-exception
            r22 = r5
        L_0x01a2:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x01a5:
            goto L_0x01b2
        L_0x01a6:
            r22 = r5
            r20 = r10
            r8.reuse()
            goto L_0x01b2
        L_0x01ae:
            r22 = r5
            r20 = r10
        L_0x01b2:
            boolean r0 = org.telegram.messenger.DialogObject.isEncryptedDialog(r12)
            if (r0 == 0) goto L_0x01d0
            int r0 = org.telegram.messenger.DialogObject.getEncryptedChatId(r12)
            java.lang.Integer r4 = java.lang.Integer.valueOf(r0)
            r5 = r27
            boolean r4 = r5.contains(r4)
            if (r4 != 0) goto L_0x01cf
            java.lang.Integer r4 = java.lang.Integer.valueOf(r0)
            r5.add(r4)
        L_0x01cf:
            goto L_0x01fd
        L_0x01d0:
            r5 = r27
            boolean r0 = org.telegram.messenger.DialogObject.isUserDialog(r12)
            if (r0 == 0) goto L_0x01ea
            java.lang.Long r0 = java.lang.Long.valueOf(r12)
            boolean r0 = r2.contains(r0)
            if (r0 != 0) goto L_0x01fd
            java.lang.Long r0 = java.lang.Long.valueOf(r12)
            r2.add(r0)
            goto L_0x01fd
        L_0x01ea:
            long r9 = -r12
            java.lang.Long r0 = java.lang.Long.valueOf(r9)
            boolean r0 = r3.contains(r0)
            if (r0 != 0) goto L_0x01fd
            long r9 = -r12
            java.lang.Long r0 = java.lang.Long.valueOf(r9)
            r3.add(r0)
        L_0x01fd:
            r4 = r5
            r5 = r22
            r8 = 1
            r10 = 0
            goto L_0x002a
        L_0x0204:
            r22 = r5
            r5 = r4
            r7.dispose()
            boolean r0 = r6.isEmpty()
            if (r0 != 0) goto L_0x0299
            r0 = 0
            int r4 = r6.size()
        L_0x0215:
            if (r0 >= r4) goto L_0x0299
            long r12 = r6.keyAt(r0)
            java.lang.Object r8 = r6.valueAt(r0)
            org.telegram.tgnet.TLRPC$Message r8 = (org.telegram.tgnet.TLRPC.Message) r8
            org.telegram.SQLite.SQLiteDatabase r10 = r1.database
            java.util.Locale r14 = java.util.Locale.US
            java.lang.Object[] r15 = new java.lang.Object[r11]
            int r9 = r8.id
            java.lang.Integer r9 = java.lang.Integer.valueOf(r9)
            r11 = 0
            r15[r11] = r9
            java.lang.Long r9 = java.lang.Long.valueOf(r12)
            r16 = 1
            r15[r16] = r9
            r9 = r15
            java.lang.String r15 = "SELECT data, mid, date, uid FROM messages_v2 WHERE mid = %d and uid = %d"
            java.lang.String r9 = java.lang.String.format(r14, r15, r9)
            java.lang.Object[] r14 = new java.lang.Object[r11]
            org.telegram.SQLite.SQLiteCursor r9 = r10.queryFinalized(r9, r14)
        L_0x0245:
            boolean r10 = r9.next()
            if (r10 == 0) goto L_0x028d
            org.telegram.tgnet.NativeByteBuffer r10 = r9.byteBufferValue(r11)
            if (r10 == 0) goto L_0x0286
            int r14 = r10.readInt32(r11)
            org.telegram.tgnet.TLRPC$Message r14 = org.telegram.tgnet.TLRPC.Message.TLdeserialize(r10, r14, r11)
            org.telegram.messenger.UserConfig r15 = r23.getUserConfig()
            r20 = r12
            long r11 = r15.clientUserId
            r14.readAttachPath(r10, r11)
            r10.reuse()
            r11 = 1
            int r12 = r9.intValue(r11)
            r14.id = r12
            r12 = 2
            int r15 = r9.intValue(r12)
            r14.date = r15
            r15 = 3
            long r11 = r9.longValue(r15)
            r14.dialog_id = r11
            addUsersAndChatsFromMessage(r14, r2, r3)
            r8.replyMessage = r14
            long r11 = r8.dialog_id
            r14.dialog_id = r11
            goto L_0x0289
        L_0x0286:
            r20 = r12
            r15 = 3
        L_0x0289:
            r12 = r20
            r11 = 0
            goto L_0x0245
        L_0x028d:
            r20 = r12
            r15 = 3
            r9.dispose()
            int r0 = r0 + 1
            r9 = 3
            r11 = 2
            goto L_0x0215
        L_0x0299:
            return r22
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.loadDialogsByIds(java.lang.String, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList):org.telegram.tgnet.TLRPC$messages_Dialogs");
    }

    private void loadDialogFilters() {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda44(this));
    }

    /* renamed from: lambda$loadDialogFilters$41$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m914x9322d85() {
        TLRPC.messages_Dialogs dialogs;
        SQLiteCursor cursor2;
        int a;
        try {
            ArrayList<Long> usersToLoad = new ArrayList<>();
            ArrayList<Long> chatsToLoad = new ArrayList<>();
            ArrayList<Integer> encryptedToLoad = new ArrayList<>();
            ArrayList<Long> dialogsToLoad = new ArrayList<>();
            SparseArray<MessagesController.DialogFilter> filtersById = new SparseArray<>();
            usersToLoad.add(Long.valueOf(getUserConfig().getClientUserId()));
            int i = 0;
            SQLiteCursor filtersCursor = this.database.queryFinalized("SELECT id, ord, unread_count, flags, title FROM dialog_filter WHERE 1", new Object[0]);
            boolean updateCounters = false;
            while (true) {
                int i2 = 1;
                if (!filtersCursor.next()) {
                    break;
                }
                MessagesController.DialogFilter filter = new MessagesController.DialogFilter();
                filter.id = filtersCursor.intValue(i);
                filter.order = filtersCursor.intValue(1);
                filter.unreadCount = -1;
                filter.pendingUnreadCount = -1;
                filter.flags = filtersCursor.intValue(3);
                filter.name = filtersCursor.stringValue(4);
                this.dialogFilters.add(filter);
                this.dialogFiltersMap.put(filter.id, filter);
                filtersById.put(filter.id, filter);
                if (filter.pendingUnreadCount < 0) {
                    updateCounters = true;
                }
                int a2 = 0;
                while (a2 < 2) {
                    if (a2 == 0) {
                        SQLiteDatabase sQLiteDatabase = this.database;
                        cursor2 = sQLiteDatabase.queryFinalized("SELECT peer, pin FROM dialog_filter_pin_v2 WHERE id = " + filter.id, new Object[i]);
                    } else {
                        SQLiteDatabase sQLiteDatabase2 = this.database;
                        cursor2 = sQLiteDatabase2.queryFinalized("SELECT peer FROM dialog_filter_ep WHERE id = " + filter.id, new Object[i]);
                    }
                    while (cursor2.next()) {
                        long did = cursor2.longValue(i);
                        if (a2 == 0) {
                            if (!DialogObject.isEncryptedDialog(did)) {
                                filter.alwaysShow.add(Long.valueOf(did));
                            }
                            int pin = cursor2.intValue(i2);
                            if (pin != Integer.MIN_VALUE) {
                                filter.pinnedDialogs.put(did, pin);
                                if (!dialogsToLoad.contains(Long.valueOf(did))) {
                                    dialogsToLoad.add(Long.valueOf(did));
                                }
                            }
                        } else if (!DialogObject.isEncryptedDialog(did)) {
                            filter.neverShow.add(Long.valueOf(did));
                        }
                        if (DialogObject.isChatDialog(did)) {
                            a = a2;
                            if (!chatsToLoad.contains(Long.valueOf(-did))) {
                                chatsToLoad.add(Long.valueOf(-did));
                            }
                        } else {
                            a = a2;
                            if (!DialogObject.isUserDialog(did)) {
                                int encryptedChatId = DialogObject.getEncryptedChatId(did);
                                if (!encryptedToLoad.contains(Integer.valueOf(encryptedChatId))) {
                                    encryptedToLoad.add(Integer.valueOf(encryptedChatId));
                                }
                            } else if (!usersToLoad.contains(Long.valueOf(did))) {
                                usersToLoad.add(Long.valueOf(did));
                            }
                        }
                        a2 = a;
                        i = 0;
                        i2 = 1;
                    }
                    cursor2.dispose();
                    a2++;
                    i = 0;
                    i2 = 1;
                }
                int i3 = a2;
                i = 0;
            }
            filtersCursor.dispose();
            Collections.sort(this.dialogFilters, MessagesStorage$$ExternalSyntheticLambda104.INSTANCE);
            if (updateCounters) {
                calcUnreadCounters(true);
            }
            if (!dialogsToLoad.isEmpty()) {
                dialogs = loadDialogsByIds(TextUtils.join(",", dialogsToLoad), usersToLoad, chatsToLoad, encryptedToLoad);
            } else {
                dialogs = new TLRPC.TL_messages_dialogs();
            }
            ArrayList<TLRPC.Chat> users = new ArrayList<>();
            ArrayList<TLRPC.Chat> chats = new ArrayList<>();
            ArrayList<TLRPC.EncryptedChat> encryptedChats = new ArrayList<>();
            if (!encryptedToLoad.isEmpty()) {
                getEncryptedChatsInternal(TextUtils.join(",", encryptedToLoad), encryptedChats, usersToLoad);
            }
            if (!usersToLoad.isEmpty()) {
                getUsersInternal(TextUtils.join(",", usersToLoad), users);
            }
            if (!chatsToLoad.isEmpty()) {
                getChatsInternal(TextUtils.join(",", chatsToLoad), chats);
            }
            ArrayList<TLRPC.Chat> arrayList = users;
            getMessagesController().processLoadedDialogFilters(new ArrayList(this.dialogFilters), dialogs, (TLRPC.messages_Dialogs) null, users, chats, encryptedChats, 0);
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    static /* synthetic */ int lambda$loadDialogFilters$40(MessagesController.DialogFilter o1, MessagesController.DialogFilter o2) {
        if (o1.order > o2.order) {
            return 1;
        }
        if (o1.order < o2.order) {
            return -1;
        }
        return 0;
    }

    private void calcUnreadCounters(boolean apply) {
        int i;
        int i2;
        ArrayList<TLRPC.Chat> chats;
        String str;
        LongSparseArray<TLRPC.User> encUsersDict;
        LongSparseArray<TLRPC.Chat> chatsDict;
        ArrayList<TLRPC.User> encUsers;
        LongSparseArray<TLRPC.User> encUsersDict2;
        LongSparseArray<TLRPC.User> encUsersDict3;
        ArrayList<Long> chatsToLoad;
        String str2;
        LongSparseArray<TLRPC.Chat> chatsDict2;
        LongSparseIntArray dialogsByFolders;
        ArrayList<Long> chatsToLoad2;
        ArrayList<Integer> encryptedToLoad;
        int N;
        int a;
        int flags;
        MessagesController.DialogFilter filter;
        MessagesController.DialogFilter filter2;
        int N2;
        int flag;
        MessagesController.DialogFilter filter3;
        int N22;
        int count;
        int flag2;
        MessagesController.DialogFilter filter4;
        int N3;
        int a2;
        int N23;
        LongSparseIntArray dialogsByFolders2;
        ArrayList<Long> chatsToLoad3;
        ArrayList<Integer> encryptedToLoad2;
        int flag3;
        MessagesController.DialogFilter filter5;
        int N4;
        int a3;
        LongSparseIntArray dialogsByFolders3;
        int count2;
        int flag4;
        ArrayList<TLRPC.Chat> chats2;
        int N5;
        LongSparseArray<TLRPC.Chat> chatsDict3;
        ArrayList<TLRPC.Chat> chats3;
        int N6;
        LongSparseArray<TLRPC.User> encUsersDict4;
        int N7;
        ArrayList<TLRPC.EncryptedChat> encryptedChats;
        LongSparseArray<TLRPC.User> usersDict;
        int N8;
        String str3;
        LongSparseArray<TLRPC.User> encUsersDict5;
        ArrayList<TLRPC.Chat> chats4;
        int a4 = 0;
        while (true) {
            i = 2;
            i2 = 0;
            if (a4 >= 2) {
                break;
            }
            int b = 0;
            while (b < 2) {
                try {
                    int[] iArr = this.contacts[a4];
                    int[] iArr2 = this.nonContacts[a4];
                    int[] iArr3 = this.bots[a4];
                    int[] iArr4 = this.channels[a4];
                    this.groups[a4][b] = 0;
                    iArr4[b] = 0;
                    iArr3[b] = 0;
                    iArr2[b] = 0;
                    iArr[b] = 0;
                    b++;
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                    return;
                }
            }
            a4++;
        }
        this.dialogsWithMentions.clear();
        this.dialogsWithUnread.clear();
        ArrayList<TLRPC.User> users = new ArrayList<>();
        ArrayList<TLRPC.User> encUsers2 = new ArrayList<>();
        ArrayList<TLRPC.Chat> chats5 = new ArrayList<>();
        ArrayList<Long> usersToLoad = new ArrayList<>();
        ArrayList<Long> chatsToLoad4 = new ArrayList<>();
        ArrayList<Integer> encryptedToLoad3 = new ArrayList<>();
        LongSparseIntArray dialogsByFolders4 = new LongSparseIntArray();
        SQLiteCursor cursor = this.database.queryFinalized("SELECT did, folder_id, unread_count, unread_count_i FROM dialogs WHERE unread_count > 0 OR flags > 0 UNION ALL SELECT did, folder_id, unread_count, unread_count_i FROM dialogs WHERE unread_count_i > 0", new Object[0]);
        while (cursor.next()) {
            int folderId = cursor.intValue(1);
            long did = cursor.longValue(i2);
            int unread = cursor.intValue(i);
            int mentions = cursor.intValue(3);
            if (unread > 0) {
                this.dialogsWithUnread.put(did, Integer.valueOf(unread));
            }
            if (mentions > 0) {
                this.dialogsWithMentions.put(did, Integer.valueOf(mentions));
            }
            dialogsByFolders4.put(did, folderId);
            if (DialogObject.isEncryptedDialog(did)) {
                int encryptedChatId = DialogObject.getEncryptedChatId(did);
                if (!encryptedToLoad3.contains(Integer.valueOf(encryptedChatId))) {
                    encryptedToLoad3.add(Integer.valueOf(encryptedChatId));
                }
            } else if (DialogObject.isUserDialog(did)) {
                if (!usersToLoad.contains(Long.valueOf(did))) {
                    usersToLoad.add(Long.valueOf(did));
                }
            } else if (!chatsToLoad4.contains(Long.valueOf(-did))) {
                chatsToLoad4.add(Long.valueOf(-did));
            }
            i = 2;
            i2 = 0;
        }
        cursor.dispose();
        LongSparseArray<TLRPC.User> usersDict2 = new LongSparseArray<>();
        LongSparseArray<TLRPC.Chat> chatsDict4 = new LongSparseArray<>();
        LongSparseArray<TLRPC.User> encUsersDict6 = new LongSparseArray<>();
        LongSparseIntArray encryptedChatsByUsersCount = new LongSparseIntArray();
        LongSparseArray<Boolean> mutedDialogs = new LongSparseArray<>();
        LongSparseArray<Boolean> archivedDialogs = new LongSparseArray<>();
        String str4 = ",";
        if (!usersToLoad.isEmpty()) {
            SQLiteCursor sQLiteCursor = cursor;
            getUsersInternal(TextUtils.join(str4, usersToLoad), users);
            int a5 = 0;
            int N9 = users.size();
            while (true) {
                ArrayList<Long> usersToLoad2 = usersToLoad;
                N8 = N9;
                if (a5 >= N8) {
                    break;
                }
                ArrayList<TLRPC.User> users2 = users;
                LongSparseArray<TLRPC.Chat> chatsDict5 = chatsDict4;
                int N10 = N8;
                TLRPC.User user = users.get(a5);
                ArrayList<TLRPC.User> encUsers3 = encUsers2;
                boolean muted = getMessagesController().isDialogMuted(user.id);
                int idx1 = dialogsByFolders4.get(user.id);
                int idx2 = muted ? 1 : 0;
                if (muted) {
                    encUsersDict5 = encUsersDict6;
                    str3 = str4;
                    boolean z = muted;
                    mutedDialogs.put(user.id, true);
                } else {
                    encUsersDict5 = encUsersDict6;
                    str3 = str4;
                }
                if (idx1 == 1) {
                    chats4 = chats5;
                    archivedDialogs.put(user.id, true);
                } else {
                    chats4 = chats5;
                }
                if (user.bot) {
                    int[] iArr5 = this.bots[idx1];
                    iArr5[idx2] = iArr5[idx2] + 1;
                } else {
                    if (!user.self) {
                        if (!user.contact) {
                            int[] iArr6 = this.nonContacts[idx1];
                            iArr6[idx2] = iArr6[idx2] + 1;
                        }
                    }
                    int[] iArr7 = this.contacts[idx1];
                    iArr7[idx2] = iArr7[idx2] + 1;
                }
                usersDict2.put(user.id, user);
                a5++;
                usersToLoad = usersToLoad2;
                users = users2;
                encUsers2 = encUsers3;
                N9 = N10;
                chatsDict4 = chatsDict5;
                encUsersDict6 = encUsersDict5;
                str4 = str3;
                chats5 = chats4;
            }
            chatsDict = chatsDict4;
            encUsers = encUsers2;
            chats = chats5;
            int i3 = N8;
            encUsersDict = encUsersDict6;
            str = str4;
        } else {
            chatsDict = chatsDict4;
            encUsers = encUsers2;
            chats = chats5;
            ArrayList<Long> arrayList = usersToLoad;
            SQLiteCursor sQLiteCursor2 = cursor;
            encUsersDict = encUsersDict6;
            str = str4;
        }
        if (!encryptedToLoad3.isEmpty()) {
            ArrayList<Long> encUsersToLoad = new ArrayList<>();
            ArrayList<TLRPC.EncryptedChat> encryptedChats2 = new ArrayList<>();
            str2 = str;
            getEncryptedChatsInternal(TextUtils.join(str2, encryptedToLoad3), encryptedChats2, encUsersToLoad);
            if (!encUsersToLoad.isEmpty()) {
                ArrayList<TLRPC.User> encUsers4 = encUsers;
                getUsersInternal(TextUtils.join(str2, encUsersToLoad), encUsers4);
                int a6 = 0;
                int N11 = encUsers4.size();
                while (a6 < N11) {
                    TLRPC.User user2 = encUsers4.get(a6);
                    ArrayList<Long> encUsersToLoad2 = encUsersToLoad;
                    LongSparseArray<TLRPC.User> encUsersDict7 = encUsersDict;
                    encUsersDict7.put(user2.id, user2);
                    a6++;
                    encUsersDict = encUsersDict7;
                    chatsToLoad4 = chatsToLoad4;
                    encUsers4 = encUsers4;
                    encUsersToLoad = encUsersToLoad2;
                }
                ArrayList<TLRPC.User> arrayList2 = encUsers4;
                chatsToLoad = chatsToLoad4;
                LongSparseArray<TLRPC.User> encUsersDict8 = encUsersDict;
                int a7 = 0;
                int N12 = encryptedChats2.size();
                while (a7 < N12) {
                    TLRPC.EncryptedChat encryptedChat = encryptedChats2.get(a7);
                    TLRPC.User user3 = encUsersDict8.get(encryptedChat.user_id);
                    if (user3 == null) {
                        encUsersDict4 = encUsersDict8;
                        usersDict = usersDict2;
                        encryptedChats = encryptedChats2;
                        N7 = N12;
                    } else {
                        usersDict = usersDict2;
                        encryptedChats = encryptedChats2;
                        long did2 = DialogObject.makeEncryptedDialogId((long) encryptedChat.id);
                        boolean muted2 = getMessagesController().isDialogMuted(did2);
                        int idx12 = dialogsByFolders4.get(did2);
                        int idx22 = muted2 ? 1 : 0;
                        if (muted2) {
                            long j = did2;
                            encUsersDict4 = encUsersDict8;
                            mutedDialogs.put(user3.id, true);
                        } else {
                            encUsersDict4 = encUsersDict8;
                            long j2 = did2;
                        }
                        int idx13 = idx12;
                        if (idx13 == 1) {
                            N7 = N12;
                            archivedDialogs.put(user3.id, true);
                        } else {
                            N7 = N12;
                        }
                        if (!user3.self) {
                            if (!user3.contact) {
                                int[] iArr8 = this.nonContacts[idx13];
                                iArr8[idx22] = iArr8[idx22] + 1;
                                TLRPC.EncryptedChat encryptedChat2 = encryptedChat;
                                int i4 = idx13;
                                encryptedChatsByUsersCount.put(user3.id, encryptedChatsByUsersCount.get(user3.id, 0) + 1);
                            }
                        }
                        int[] iArr9 = this.contacts[idx13];
                        iArr9[idx22] = iArr9[idx22] + 1;
                        TLRPC.EncryptedChat encryptedChat22 = encryptedChat;
                        int i42 = idx13;
                        encryptedChatsByUsersCount.put(user3.id, encryptedChatsByUsersCount.get(user3.id, 0) + 1);
                    }
                    a7++;
                    usersDict2 = usersDict;
                    encryptedChats2 = encryptedChats;
                    N12 = N7;
                    encUsersDict8 = encUsersDict4;
                }
                encUsersDict2 = encUsersDict8;
                encUsersDict3 = usersDict2;
                ArrayList<TLRPC.EncryptedChat> arrayList3 = encryptedChats2;
                int i5 = N12;
            } else {
                ArrayList<TLRPC.EncryptedChat> arrayList4 = encryptedChats2;
                chatsToLoad = chatsToLoad4;
                encUsersDict2 = encUsersDict;
                encUsersDict3 = usersDict2;
            }
        } else {
            chatsToLoad = chatsToLoad4;
            encUsersDict2 = encUsersDict;
            str2 = str;
            encUsersDict3 = usersDict2;
        }
        if (!chatsToLoad.isEmpty()) {
            ArrayList<TLRPC.Chat> chats6 = chats;
            getChatsInternal(TextUtils.join(str2, chatsToLoad), chats6);
            int a8 = 0;
            int N13 = chats6.size();
            while (a8 < N13) {
                TLRPC.Chat chat = chats6.get(a8);
                if (chat.migrated_to instanceof TLRPC.TL_inputChannel) {
                    chats3 = chats6;
                    N6 = N13;
                    chatsDict3 = chatsDict;
                } else if (ChatObject.isNotInChat(chat)) {
                    chats3 = chats6;
                    N6 = N13;
                    chatsDict3 = chatsDict;
                } else {
                    boolean muted3 = getMessagesController().isDialogMuted(-chat.id, chat);
                    int idx14 = dialogsByFolders4.get(-chat.id);
                    int idx23 = (!muted3 || this.dialogsWithMentions.indexOfKey(-chat.id) >= 0) ? 0 : 1;
                    if (muted3) {
                        chats2 = chats6;
                        mutedDialogs.put(-chat.id, true);
                    } else {
                        chats2 = chats6;
                    }
                    if (idx14 == 1) {
                        N5 = N13;
                        archivedDialogs.put(-chat.id, true);
                    } else {
                        N5 = N13;
                    }
                    if (!ChatObject.isChannel(chat) || chat.megagroup) {
                        int[] iArr10 = this.groups[idx14];
                        iArr10[idx23] = iArr10[idx23] + 1;
                    } else {
                        int[] iArr11 = this.channels[idx14];
                        iArr11[idx23] = iArr11[idx23] + 1;
                    }
                    chatsDict3 = chatsDict;
                    chatsDict3.put(chat.id, chat);
                    a8++;
                    chatsDict = chatsDict3;
                    N13 = N5;
                    chats6 = chats2;
                }
                this.dialogsWithUnread.remove(-chat.id);
                this.dialogsWithMentions.remove(-chat.id);
                a8++;
                chatsDict = chatsDict3;
                N13 = N5;
                chats6 = chats2;
            }
            int i6 = N13;
            chatsDict2 = chatsDict;
        } else {
            chatsDict2 = chatsDict;
        }
        int a9 = 0;
        int N14 = this.dialogFilters.size();
        while (a9 < N14 + 2) {
            if (a9 < N14) {
                filter = this.dialogFilters.get(a9);
                if (filter.pendingUnreadCount >= 0) {
                    encryptedToLoad = encryptedToLoad3;
                    dialogsByFolders = dialogsByFolders4;
                    chatsToLoad2 = chatsToLoad;
                    int i7 = N14;
                    N = a9;
                    a = i7;
                    encryptedToLoad3 = encryptedToLoad;
                    chatsToLoad = chatsToLoad2;
                    dialogsByFolders4 = dialogsByFolders;
                    int i8 = N + 1;
                    N14 = a;
                    a9 = i8;
                } else {
                    flags = filter.flags;
                }
            } else {
                filter = null;
                int flags2 = MessagesController.DIALOG_FILTER_FLAG_ALL_CHATS;
                if (a9 == N14) {
                    if (!getNotificationsController().showBadgeMuted) {
                        flags2 |= MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED;
                    }
                    flags = flags2 | MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED;
                } else {
                    flags = flags2 | MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED;
                }
            }
            int unreadCount = 0;
            if ((MessagesController.DIALOG_FILTER_FLAG_CONTACTS & flags) != 0) {
                if ((MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED & flags) == 0) {
                    unreadCount = 0 + this.contacts[0][0];
                    if ((MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED & flags) == 0) {
                        unreadCount += this.contacts[0][1];
                    }
                }
                if ((MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED & flags) == 0) {
                    unreadCount += this.contacts[1][0];
                    if ((MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED & flags) == 0) {
                        unreadCount += this.contacts[1][1];
                    }
                }
            }
            if ((MessagesController.DIALOG_FILTER_FLAG_NON_CONTACTS & flags) != 0) {
                if ((MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED & flags) == 0) {
                    unreadCount += this.nonContacts[0][0];
                    if ((MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED & flags) == 0) {
                        unreadCount += this.nonContacts[0][1];
                    }
                }
                if ((MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED & flags) == 0) {
                    unreadCount += this.nonContacts[1][0];
                    if ((MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED & flags) == 0) {
                        unreadCount += this.nonContacts[1][1];
                    }
                }
            }
            if ((MessagesController.DIALOG_FILTER_FLAG_GROUPS & flags) != 0) {
                if ((MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED & flags) == 0) {
                    unreadCount += this.groups[0][0];
                    if ((MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED & flags) == 0) {
                        unreadCount += this.groups[0][1];
                    }
                }
                if ((MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED & flags) == 0) {
                    unreadCount += this.groups[1][0];
                    if ((MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED & flags) == 0) {
                        unreadCount += this.groups[1][1];
                    }
                }
            }
            if ((MessagesController.DIALOG_FILTER_FLAG_CHANNELS & flags) != 0) {
                if ((MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED & flags) == 0) {
                    unreadCount += this.channels[0][0];
                    if ((MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED & flags) == 0) {
                        unreadCount += this.channels[0][1];
                    }
                }
                if ((MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED & flags) == 0) {
                    unreadCount += this.channels[1][0];
                    if ((MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED & flags) == 0) {
                        unreadCount += this.channels[1][1];
                    }
                }
            }
            if ((MessagesController.DIALOG_FILTER_FLAG_BOTS & flags) != 0) {
                if ((MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED & flags) == 0) {
                    unreadCount += this.bots[0][0];
                    if ((MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED & flags) == 0) {
                        unreadCount += this.bots[0][1];
                    }
                }
                if ((MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED & flags) == 0) {
                    unreadCount += this.bots[1][0];
                    if ((MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED & flags) == 0) {
                        unreadCount += this.bots[1][1];
                    }
                }
            }
            if (filter != null) {
                int b2 = 0;
                int N24 = filter.alwaysShow.size();
                while (b2 < N24) {
                    long did3 = filter.alwaysShow.get(b2).longValue();
                    if (DialogObject.isUserDialog(did3)) {
                        int i9 = 0;
                        while (true) {
                            encryptedToLoad2 = encryptedToLoad3;
                            if (i9 >= 2) {
                                break;
                            }
                            LongSparseArray<TLRPC.User> dict = i9 == 0 ? encUsersDict3 : encUsersDict2;
                            int N25 = N24;
                            ArrayList<Long> chatsToLoad5 = chatsToLoad;
                            long did4 = did3;
                            LongSparseArray<TLRPC.User> longSparseArray = dict;
                            TLRPC.User user4 = dict.get(did4);
                            if (user4 != null) {
                                if (i9 == 0) {
                                    dialogsByFolders3 = dialogsByFolders4;
                                    count2 = 1;
                                } else {
                                    dialogsByFolders3 = dialogsByFolders4;
                                    count2 = encryptedChatsByUsersCount.get(did4, 0);
                                    if (count2 == 0) {
                                        a3 = a9;
                                        N4 = N14;
                                        filter5 = filter;
                                    }
                                }
                                a3 = a9;
                                if (user4.bot != 0) {
                                    flag4 = MessagesController.DIALOG_FILTER_FLAG_BOTS;
                                } else {
                                    if (user4.self == 0) {
                                        if (!user4.contact) {
                                            flag4 = MessagesController.DIALOG_FILTER_FLAG_NON_CONTACTS;
                                        }
                                    }
                                    flag4 = MessagesController.DIALOG_FILTER_FLAG_CONTACTS;
                                }
                                if ((flags & flag4) == 0) {
                                    unreadCount += count2;
                                    N4 = N14;
                                    filter5 = filter;
                                } else {
                                    if ((flags & MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED) != 0) {
                                        N4 = N14;
                                        filter5 = filter;
                                        if (mutedDialogs.indexOfKey(user4.id) >= 0) {
                                            unreadCount += count2;
                                        }
                                    } else {
                                        N4 = N14;
                                        filter5 = filter;
                                    }
                                    if ((MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED & flags) != 0 && archivedDialogs.indexOfKey(user4.id) >= 0) {
                                        unreadCount += count2;
                                    }
                                }
                            } else {
                                a3 = a9;
                                N4 = N14;
                                filter5 = filter;
                                dialogsByFolders3 = dialogsByFolders4;
                            }
                            i9++;
                            encryptedToLoad3 = encryptedToLoad2;
                            dialogsByFolders4 = dialogsByFolders3;
                            a9 = a3;
                            N14 = N4;
                            filter = filter5;
                            did3 = did4;
                            chatsToLoad = chatsToLoad5;
                            N24 = N25;
                        }
                        a2 = a9;
                        N3 = N14;
                        filter4 = filter;
                        N23 = N24;
                        chatsToLoad3 = chatsToLoad;
                        long j3 = did3;
                        dialogsByFolders2 = dialogsByFolders4;
                    } else {
                        a2 = a9;
                        N3 = N14;
                        filter4 = filter;
                        encryptedToLoad2 = encryptedToLoad3;
                        N23 = N24;
                        chatsToLoad3 = chatsToLoad;
                        dialogsByFolders2 = dialogsByFolders4;
                        TLRPC.Chat chat2 = chatsDict2.get(-did3);
                        if (chat2 != null) {
                            if (!ChatObject.isChannel(chat2) || chat2.megagroup) {
                                flag3 = MessagesController.DIALOG_FILTER_FLAG_GROUPS;
                            } else {
                                flag3 = MessagesController.DIALOG_FILTER_FLAG_CHANNELS;
                            }
                            if ((flags & flag3) == 0) {
                                unreadCount++;
                            } else if ((MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED & flags) != 0 && mutedDialogs.indexOfKey(-chat2.id) >= 0 && this.dialogsWithMentions.indexOfKey(-chat2.id) < 0) {
                                unreadCount++;
                            } else if ((MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED & flags) != 0 && archivedDialogs.indexOfKey(-chat2.id) >= 0) {
                                unreadCount++;
                            }
                        }
                    }
                    b2++;
                    encryptedToLoad3 = encryptedToLoad2;
                    chatsToLoad = chatsToLoad3;
                    dialogsByFolders4 = dialogsByFolders2;
                    N24 = N23;
                    a9 = a2;
                    N14 = N3;
                    filter = filter4;
                }
                int a10 = a9;
                int N15 = N14;
                MessagesController.DialogFilter dialogFilter = filter;
                encryptedToLoad = encryptedToLoad3;
                dialogsByFolders = dialogsByFolders4;
                int i10 = N24;
                chatsToLoad2 = chatsToLoad;
                int b3 = 0;
                int N26 = filter.neverShow.size();
                while (b3 < N26) {
                    long did5 = filter.neverShow.get(b3).longValue();
                    if (DialogObject.isUserDialog(did5)) {
                        int i11 = 0;
                        while (i11 < 2) {
                            TLRPC.User user5 = (i11 == 0 ? encUsersDict3 : encUsersDict2).get(did5);
                            if (user5 != null) {
                                if (i11 == 0) {
                                    count = 1;
                                } else {
                                    count = encryptedChatsByUsersCount.get(did5, 0);
                                    if (count == 0) {
                                        N22 = N26;
                                        filter3 = filter;
                                    }
                                }
                                if (user5.bot) {
                                    flag2 = MessagesController.DIALOG_FILTER_FLAG_BOTS;
                                } else {
                                    if (user5.self == 0) {
                                        if (!user5.contact) {
                                            flag2 = MessagesController.DIALOG_FILTER_FLAG_NON_CONTACTS;
                                        }
                                    }
                                    flag2 = MessagesController.DIALOG_FILTER_FLAG_CONTACTS;
                                }
                                if ((flags & flag2) != 0) {
                                    if ((flags & MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED) != 0) {
                                        N22 = N26;
                                        filter3 = filter;
                                        if (archivedDialogs.indexOfKey(user5.id) < 0) {
                                        }
                                    } else {
                                        N22 = N26;
                                        filter3 = filter;
                                    }
                                    if ((MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED & flags) == 0 || mutedDialogs.indexOfKey(user5.id) < 0) {
                                        unreadCount -= count;
                                    }
                                } else {
                                    N22 = N26;
                                    filter3 = filter;
                                }
                            } else {
                                N22 = N26;
                                filter3 = filter;
                            }
                            i11++;
                            N26 = N22;
                            filter = filter3;
                        }
                        N2 = N26;
                        filter2 = filter;
                    } else {
                        N2 = N26;
                        filter2 = filter;
                        TLRPC.Chat chat3 = chatsDict2.get(-did5);
                        if (chat3 != null) {
                            if (!ChatObject.isChannel(chat3) || chat3.megagroup) {
                                flag = MessagesController.DIALOG_FILTER_FLAG_GROUPS;
                            } else {
                                flag = MessagesController.DIALOG_FILTER_FLAG_CHANNELS;
                            }
                            if ((flags & flag) != 0 && (((MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED & flags) == 0 || archivedDialogs.indexOfKey(-chat3.id) < 0) && ((MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED & flags) == 0 || mutedDialogs.indexOfKey(-chat3.id) < 0 || this.dialogsWithMentions.indexOfKey(-chat3.id) >= 0))) {
                                unreadCount--;
                            }
                        }
                    }
                    b3++;
                    N26 = N2;
                    filter = filter2;
                }
                MessagesController.DialogFilter dialogFilter2 = filter;
                filter.pendingUnreadCount = unreadCount;
                if (apply) {
                    filter.unreadCount = unreadCount;
                    N = a10;
                    a = N15;
                } else {
                    N = a10;
                    a = N15;
                }
            } else {
                int N16 = N14;
                encryptedToLoad = encryptedToLoad3;
                dialogsByFolders = dialogsByFolders4;
                chatsToLoad2 = chatsToLoad;
                N = a9;
                a = N16;
                if (N == a) {
                    this.pendingMainUnreadCount = unreadCount;
                    if (apply) {
                        this.mainUnreadCount = unreadCount;
                    }
                } else if (N == a + 1) {
                    this.pendingArchiveUnreadCount = unreadCount;
                    if (apply) {
                        this.archiveUnreadCount = unreadCount;
                    }
                }
            }
            encryptedToLoad3 = encryptedToLoad;
            chatsToLoad = chatsToLoad2;
            dialogsByFolders4 = dialogsByFolders;
            int i82 = N + 1;
            N14 = a;
            a9 = i82;
        }
        LongSparseIntArray longSparseIntArray = dialogsByFolders4;
        ArrayList<Long> arrayList5 = chatsToLoad;
        int i12 = N14;
        int N17 = a9;
        int a11 = i12;
    }

    private void saveDialogFilterInternal(MessagesController.DialogFilter filter, boolean atBegin, boolean peers) {
        try {
            if (!this.dialogFilters.contains(filter)) {
                if (atBegin) {
                    this.dialogFilters.add(0, filter);
                } else {
                    this.dialogFilters.add(filter);
                }
                this.dialogFiltersMap.put(filter.id, filter);
            }
            SQLitePreparedStatement state = this.database.executeFast("REPLACE INTO dialog_filter VALUES(?, ?, ?, ?, ?)");
            state.bindInteger(1, filter.id);
            state.bindInteger(2, filter.order);
            state.bindInteger(3, filter.unreadCount);
            state.bindInteger(4, filter.flags);
            state.bindString(5, filter.name);
            state.step();
            state.dispose();
            if (peers) {
                SQLiteDatabase sQLiteDatabase = this.database;
                sQLiteDatabase.executeFast("DELETE FROM dialog_filter_ep WHERE id = " + filter.id).stepThis().dispose();
                SQLiteDatabase sQLiteDatabase2 = this.database;
                sQLiteDatabase2.executeFast("DELETE FROM dialog_filter_pin_v2 WHERE id = " + filter.id).stepThis().dispose();
                this.database.beginTransaction();
                SQLitePreparedStatement state2 = this.database.executeFast("REPLACE INTO dialog_filter_pin_v2 VALUES(?, ?, ?)");
                int N = filter.alwaysShow.size();
                for (int a = 0; a < N; a++) {
                    long key = filter.alwaysShow.get(a).longValue();
                    state2.requery();
                    state2.bindInteger(1, filter.id);
                    state2.bindLong(2, key);
                    state2.bindInteger(3, filter.pinnedDialogs.get(key, Integer.MIN_VALUE));
                    state2.step();
                }
                int N2 = filter.pinnedDialogs.size();
                for (int a2 = 0; a2 < N2; a2++) {
                    long key2 = filter.pinnedDialogs.keyAt(a2);
                    if (DialogObject.isEncryptedDialog(key2)) {
                        state2.requery();
                        state2.bindInteger(1, filter.id);
                        state2.bindLong(2, key2);
                        state2.bindInteger(3, filter.pinnedDialogs.valueAt(a2));
                        state2.step();
                    }
                }
                state2.dispose();
                SQLitePreparedStatement state3 = this.database.executeFast("REPLACE INTO dialog_filter_ep VALUES(?, ?)");
                int N3 = filter.neverShow.size();
                for (int a3 = 0; a3 < N3; a3++) {
                    state3.requery();
                    state3.bindInteger(1, filter.id);
                    state3.bindLong(2, filter.neverShow.get(a3).longValue());
                    state3.step();
                }
                state3.dispose();
                this.database.commitTransaction();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void checkLoadedRemoteFilters(TLRPC.Vector vector) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda81(this, vector));
    }

    /* JADX WARNING: Removed duplicated region for block: B:171:0x03aa A[Catch:{ Exception -> 0x0684 }] */
    /* JADX WARNING: Removed duplicated region for block: B:172:0x03ba A[Catch:{ Exception -> 0x0684 }] */
    /* JADX WARNING: Removed duplicated region for block: B:175:0x03c2 A[Catch:{ Exception -> 0x0684 }] */
    /* JADX WARNING: Removed duplicated region for block: B:176:0x03d0 A[Catch:{ Exception -> 0x0684 }] */
    /* JADX WARNING: Removed duplicated region for block: B:178:0x03d4 A[Catch:{ Exception -> 0x0684 }] */
    /* JADX WARNING: Removed duplicated region for block: B:179:0x03da A[Catch:{ Exception -> 0x0684 }] */
    /* JADX WARNING: Removed duplicated region for block: B:181:0x03de A[Catch:{ Exception -> 0x0684 }] */
    /* JADX WARNING: Removed duplicated region for block: B:182:0x03ea A[Catch:{ Exception -> 0x0684 }] */
    /* JADX WARNING: Removed duplicated region for block: B:90:0x01b0 A[Catch:{ Exception -> 0x0684 }] */
    /* JADX WARNING: Removed duplicated region for block: B:98:0x01d2 A[Catch:{ Exception -> 0x0684 }] */
    /* renamed from: lambda$checkLoadedRemoteFilters$43$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void m851x2a713var_(org.telegram.tgnet.TLRPC.Vector r41) {
        /*
            r40 = this;
            r12 = r40
            r13 = r41
            android.util.SparseArray r0 = new android.util.SparseArray     // Catch:{ Exception -> 0x0688 }
            r0.<init>()     // Catch:{ Exception -> 0x0688 }
            r1 = 0
            java.util.ArrayList<org.telegram.messenger.MessagesController$DialogFilter> r2 = r12.dialogFilters     // Catch:{ Exception -> 0x0688 }
            int r2 = r2.size()     // Catch:{ Exception -> 0x0688 }
        L_0x0010:
            if (r1 >= r2) goto L_0x0022
            java.util.ArrayList<org.telegram.messenger.MessagesController$DialogFilter> r3 = r12.dialogFilters     // Catch:{ Exception -> 0x0688 }
            java.lang.Object r3 = r3.get(r1)     // Catch:{ Exception -> 0x0688 }
            org.telegram.messenger.MessagesController$DialogFilter r3 = (org.telegram.messenger.MessagesController.DialogFilter) r3     // Catch:{ Exception -> 0x0688 }
            int r4 = r3.id     // Catch:{ Exception -> 0x0688 }
            r0.put(r4, r3)     // Catch:{ Exception -> 0x0688 }
            int r1 = r1 + 1
            goto L_0x0010
        L_0x0022:
            java.util.ArrayList r1 = new java.util.ArrayList     // Catch:{ Exception -> 0x0688 }
            r1.<init>()     // Catch:{ Exception -> 0x0688 }
            r15 = r1
            java.util.ArrayList r1 = new java.util.ArrayList     // Catch:{ Exception -> 0x0688 }
            r1.<init>()     // Catch:{ Exception -> 0x0688 }
            r14 = r1
            java.util.HashMap r1 = new java.util.HashMap     // Catch:{ Exception -> 0x0688 }
            r1.<init>()     // Catch:{ Exception -> 0x0688 }
            r11 = r1
            java.util.ArrayList r1 = new java.util.ArrayList     // Catch:{ Exception -> 0x0688 }
            r1.<init>()     // Catch:{ Exception -> 0x0688 }
            r10 = r1
            java.util.HashMap r1 = new java.util.HashMap     // Catch:{ Exception -> 0x0688 }
            r1.<init>()     // Catch:{ Exception -> 0x0688 }
            r9 = r1
            java.util.ArrayList r1 = new java.util.ArrayList     // Catch:{ Exception -> 0x0688 }
            r1.<init>()     // Catch:{ Exception -> 0x0688 }
            r8 = r1
            java.util.HashMap r1 = new java.util.HashMap     // Catch:{ Exception -> 0x0688 }
            r1.<init>()     // Catch:{ Exception -> 0x0688 }
            r7 = r1
            java.util.ArrayList r1 = new java.util.ArrayList     // Catch:{ Exception -> 0x0688 }
            r1.<init>()     // Catch:{ Exception -> 0x0688 }
            r6 = r1
            java.util.HashMap r1 = new java.util.HashMap     // Catch:{ Exception -> 0x0688 }
            r1.<init>()     // Catch:{ Exception -> 0x0688 }
            r5 = r1
            java.util.HashMap r1 = new java.util.HashMap     // Catch:{ Exception -> 0x0688 }
            r1.<init>()     // Catch:{ Exception -> 0x0688 }
            r4 = r1
            java.util.HashSet r1 = new java.util.HashSet     // Catch:{ Exception -> 0x0688 }
            r1.<init>()     // Catch:{ Exception -> 0x0688 }
            r3 = r1
            r1 = 0
            java.util.ArrayList<java.lang.Object> r2 = r13.objects     // Catch:{ Exception -> 0x0688 }
            int r2 = r2.size()     // Catch:{ Exception -> 0x0688 }
        L_0x006b:
            if (r1 >= r2) goto L_0x055f
            r16 = r2
            java.util.ArrayList<java.lang.Object> r2 = r13.objects     // Catch:{ Exception -> 0x0684 }
            java.lang.Object r2 = r2.get(r1)     // Catch:{ Exception -> 0x0684 }
            org.telegram.tgnet.TLRPC$TL_dialogFilter r2 = (org.telegram.tgnet.TLRPC.TL_dialogFilter) r2     // Catch:{ Exception -> 0x0684 }
            int r13 = r2.id     // Catch:{ Exception -> 0x0684 }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r13)     // Catch:{ Exception -> 0x0684 }
            r15.add(r13)     // Catch:{ Exception -> 0x0684 }
            r13 = 0
            r17 = r15
            boolean r15 = r2.contacts     // Catch:{ Exception -> 0x0684 }
            if (r15 == 0) goto L_0x008a
            int r15 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CONTACTS     // Catch:{ Exception -> 0x0688 }
            r13 = r13 | r15
        L_0x008a:
            boolean r15 = r2.non_contacts     // Catch:{ Exception -> 0x0684 }
            if (r15 == 0) goto L_0x0091
            int r15 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_NON_CONTACTS     // Catch:{ Exception -> 0x0688 }
            r13 = r13 | r15
        L_0x0091:
            boolean r15 = r2.groups     // Catch:{ Exception -> 0x0684 }
            if (r15 == 0) goto L_0x0098
            int r15 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_GROUPS     // Catch:{ Exception -> 0x0688 }
            r13 = r13 | r15
        L_0x0098:
            boolean r15 = r2.broadcasts     // Catch:{ Exception -> 0x0684 }
            if (r15 == 0) goto L_0x009f
            int r15 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CHANNELS     // Catch:{ Exception -> 0x0688 }
            r13 = r13 | r15
        L_0x009f:
            boolean r15 = r2.bots     // Catch:{ Exception -> 0x0684 }
            if (r15 == 0) goto L_0x00a6
            int r15 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_BOTS     // Catch:{ Exception -> 0x0688 }
            r13 = r13 | r15
        L_0x00a6:
            boolean r15 = r2.exclude_muted     // Catch:{ Exception -> 0x0684 }
            if (r15 == 0) goto L_0x00ad
            int r15 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED     // Catch:{ Exception -> 0x0688 }
            r13 = r13 | r15
        L_0x00ad:
            boolean r15 = r2.exclude_read     // Catch:{ Exception -> 0x0684 }
            if (r15 == 0) goto L_0x00b4
            int r15 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_READ     // Catch:{ Exception -> 0x0688 }
            r13 = r13 | r15
        L_0x00b4:
            boolean r15 = r2.exclude_archived     // Catch:{ Exception -> 0x0684 }
            if (r15 == 0) goto L_0x00bb
            int r15 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED     // Catch:{ Exception -> 0x0688 }
            r13 = r13 | r15
        L_0x00bb:
            android.util.SparseArray<org.telegram.messenger.MessagesController$DialogFilter> r15 = r12.dialogFiltersMap     // Catch:{ Exception -> 0x0684 }
            int r12 = r2.id     // Catch:{ Exception -> 0x0684 }
            java.lang.Object r12 = r15.get(r12)     // Catch:{ Exception -> 0x0684 }
            org.telegram.messenger.MessagesController$DialogFilter r12 = (org.telegram.messenger.MessagesController.DialogFilter) r12     // Catch:{ Exception -> 0x0684 }
            r18 = 0
            if (r12 == 0) goto L_0x03f5
            int r15 = r2.id     // Catch:{ Exception -> 0x0684 }
            r0.remove(r15)     // Catch:{ Exception -> 0x0684 }
            r15 = 0
            r21 = 0
            r22 = r15
            java.lang.String r15 = r12.name     // Catch:{ Exception -> 0x0684 }
            r28 = r0
            java.lang.String r0 = r2.title     // Catch:{ Exception -> 0x0684 }
            boolean r0 = android.text.TextUtils.equals(r15, r0)     // Catch:{ Exception -> 0x0684 }
            if (r0 != 0) goto L_0x00e5
            r15 = 1
            java.lang.String r0 = r2.title     // Catch:{ Exception -> 0x0684 }
            r12.name = r0     // Catch:{ Exception -> 0x0684 }
            goto L_0x00e7
        L_0x00e5:
            r15 = r22
        L_0x00e7:
            int r0 = r12.flags     // Catch:{ Exception -> 0x0684 }
            if (r0 == r13) goto L_0x00f0
            r12.flags = r13     // Catch:{ Exception -> 0x0684 }
            r15 = 1
            r21 = 1
        L_0x00f0:
            java.util.HashSet r0 = new java.util.HashSet     // Catch:{ Exception -> 0x0684 }
            r22 = r15
            java.util.ArrayList<java.lang.Long> r15 = r12.alwaysShow     // Catch:{ Exception -> 0x0684 }
            r0.<init>(r15)     // Catch:{ Exception -> 0x0684 }
            java.util.ArrayList<java.lang.Long> r15 = r12.neverShow     // Catch:{ Exception -> 0x0684 }
            r0.addAll(r15)     // Catch:{ Exception -> 0x0684 }
            java.util.HashSet r15 = new java.util.HashSet     // Catch:{ Exception -> 0x0684 }
            r15.<init>()     // Catch:{ Exception -> 0x0684 }
            r23 = 0
            r24 = r1
            org.telegram.messenger.support.LongSparseIntArray r1 = r12.pinnedDialogs     // Catch:{ Exception -> 0x0684 }
            int r1 = r1.size()     // Catch:{ Exception -> 0x0684 }
            if (r1 == 0) goto L_0x019f
            java.util.ArrayList r1 = new java.util.ArrayList     // Catch:{ Exception -> 0x0684 }
            r1.<init>()     // Catch:{ Exception -> 0x0684 }
            r25 = 0
            r26 = 0
            r27 = r13
            org.telegram.messenger.support.LongSparseIntArray r13 = r12.pinnedDialogs     // Catch:{ Exception -> 0x0684 }
            int r13 = r13.size()     // Catch:{ Exception -> 0x0684 }
            r39 = r26
            r26 = r3
            r3 = r39
        L_0x0126:
            if (r3 >= r13) goto L_0x0146
            r29 = r13
            org.telegram.messenger.support.LongSparseIntArray r13 = r12.pinnedDialogs     // Catch:{ Exception -> 0x0684 }
            long r30 = r13.keyAt(r3)     // Catch:{ Exception -> 0x0684 }
            boolean r13 = org.telegram.messenger.DialogObject.isEncryptedDialog(r30)     // Catch:{ Exception -> 0x0684 }
            if (r13 == 0) goto L_0x0139
            r13 = 1
            r25 = r13
        L_0x0139:
            java.lang.Long r13 = java.lang.Long.valueOf(r30)     // Catch:{ Exception -> 0x0684 }
            r1.add(r13)     // Catch:{ Exception -> 0x0684 }
            int r3 = r3 + 1
            r13 = r29
            goto L_0x0126
        L_0x0146:
            r29 = r13
            if (r25 == 0) goto L_0x019a
            java.util.LinkedHashMap r3 = new java.util.LinkedHashMap     // Catch:{ Exception -> 0x0684 }
            r3.<init>()     // Catch:{ Exception -> 0x0684 }
            org.telegram.messenger.support.LongSparseIntArray r13 = r12.pinnedDialogs     // Catch:{ Exception -> 0x0684 }
            r29 = r6
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda102 r6 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda102     // Catch:{ Exception -> 0x0684 }
            r6.<init>(r13)     // Catch:{ Exception -> 0x0684 }
            java.util.Collections.sort(r1, r6)     // Catch:{ Exception -> 0x0684 }
            r6 = 0
            int r23 = r1.size()     // Catch:{ Exception -> 0x0684 }
            r30 = r23
        L_0x0162:
            r23 = r13
            r13 = r30
            if (r6 >= r13) goto L_0x0195
            java.lang.Object r30 = r1.get(r6)     // Catch:{ Exception -> 0x0684 }
            java.lang.Long r30 = (java.lang.Long) r30     // Catch:{ Exception -> 0x0684 }
            long r30 = r30.longValue()     // Catch:{ Exception -> 0x0684 }
            boolean r32 = org.telegram.messenger.DialogObject.isEncryptedDialog(r30)     // Catch:{ Exception -> 0x0684 }
            if (r32 != 0) goto L_0x017d
            r32 = r1
            r33 = r13
            goto L_0x018c
        L_0x017d:
            r32 = r1
            java.lang.Integer r1 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x0684 }
            r33 = r13
            java.lang.Long r13 = java.lang.Long.valueOf(r30)     // Catch:{ Exception -> 0x0684 }
            r3.put(r1, r13)     // Catch:{ Exception -> 0x0684 }
        L_0x018c:
            int r6 = r6 + 1
            r13 = r23
            r1 = r32
            r30 = r33
            goto L_0x0162
        L_0x0195:
            r32 = r1
            r33 = r13
            goto L_0x01a7
        L_0x019a:
            r32 = r1
            r29 = r6
            goto L_0x01a5
        L_0x019f:
            r26 = r3
            r29 = r6
            r27 = r13
        L_0x01a5:
            r3 = r23
        L_0x01a7:
            r1 = 0
            org.telegram.messenger.support.LongSparseIntArray r6 = r12.pinnedDialogs     // Catch:{ Exception -> 0x0684 }
            int r6 = r6.size()     // Catch:{ Exception -> 0x0684 }
        L_0x01ae:
            if (r1 >= r6) goto L_0x01ce
            org.telegram.messenger.support.LongSparseIntArray r13 = r12.pinnedDialogs     // Catch:{ Exception -> 0x0684 }
            long r30 = r13.keyAt(r1)     // Catch:{ Exception -> 0x0684 }
            boolean r13 = org.telegram.messenger.DialogObject.isEncryptedDialog(r30)     // Catch:{ Exception -> 0x0684 }
            if (r13 == 0) goto L_0x01bd
            goto L_0x01cb
        L_0x01bd:
            java.lang.Long r13 = java.lang.Long.valueOf(r30)     // Catch:{ Exception -> 0x0684 }
            r15.add(r13)     // Catch:{ Exception -> 0x0684 }
            java.lang.Long r13 = java.lang.Long.valueOf(r30)     // Catch:{ Exception -> 0x0684 }
            r0.remove(r13)     // Catch:{ Exception -> 0x0684 }
        L_0x01cb:
            int r1 = r1 + 1
            goto L_0x01ae
        L_0x01ce:
            r1 = 0
        L_0x01cf:
            r6 = 2
            if (r1 >= r6) goto L_0x0398
            if (r1 != 0) goto L_0x01d7
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputPeer> r6 = r2.include_peers     // Catch:{ Exception -> 0x0684 }
            goto L_0x01d9
        L_0x01d7:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputPeer> r6 = r2.exclude_peers     // Catch:{ Exception -> 0x0684 }
        L_0x01d9:
            if (r1 != 0) goto L_0x01de
            java.util.ArrayList<java.lang.Long> r13 = r12.alwaysShow     // Catch:{ Exception -> 0x0684 }
            goto L_0x01e0
        L_0x01de:
            java.util.ArrayList<java.lang.Long> r13 = r12.neverShow     // Catch:{ Exception -> 0x0684 }
        L_0x01e0:
            if (r1 != 0) goto L_0x02d1
            r23 = r4
            org.telegram.messenger.support.LongSparseIntArray r4 = r12.pinnedDialogs     // Catch:{ Exception -> 0x0684 }
            r4.clear()     // Catch:{ Exception -> 0x0684 }
            r4 = 0
            r25 = r4
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputPeer> r4 = r2.pinned_peers     // Catch:{ Exception -> 0x0684 }
            int r4 = r4.size()     // Catch:{ Exception -> 0x0684 }
            r30 = r5
            r5 = r25
        L_0x01f6:
            if (r5 >= r4) goto L_0x0299
            r25 = r4
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputPeer> r4 = r2.pinned_peers     // Catch:{ Exception -> 0x0684 }
            java.lang.Object r4 = r4.get(r5)     // Catch:{ Exception -> 0x0684 }
            org.telegram.tgnet.TLRPC$InputPeer r4 = (org.telegram.tgnet.TLRPC.InputPeer) r4     // Catch:{ Exception -> 0x0684 }
            r32 = r1
            r31 = r2
            long r1 = r4.user_id     // Catch:{ Exception -> 0x0684 }
            int r33 = (r1 > r18 ? 1 : (r1 == r18 ? 0 : -1))
            if (r33 == 0) goto L_0x0213
            long r1 = r4.user_id     // Catch:{ Exception -> 0x0684 }
            java.lang.Long r1 = java.lang.Long.valueOf(r1)     // Catch:{ Exception -> 0x0684 }
            goto L_0x0223
        L_0x0213:
            long r1 = r4.chat_id     // Catch:{ Exception -> 0x0684 }
            int r33 = (r1 > r18 ? 1 : (r1 == r18 ? 0 : -1))
            if (r33 == 0) goto L_0x021c
            long r1 = r4.chat_id     // Catch:{ Exception -> 0x0684 }
            goto L_0x021e
        L_0x021c:
            long r1 = r4.channel_id     // Catch:{ Exception -> 0x0684 }
        L_0x021e:
            long r1 = -r1
            java.lang.Long r1 = java.lang.Long.valueOf(r1)     // Catch:{ Exception -> 0x0684 }
        L_0x0223:
            java.util.ArrayList<java.lang.Long> r2 = r12.alwaysShow     // Catch:{ Exception -> 0x0684 }
            boolean r2 = r2.contains(r1)     // Catch:{ Exception -> 0x0684 }
            if (r2 != 0) goto L_0x0230
            java.util.ArrayList<java.lang.Long> r2 = r12.alwaysShow     // Catch:{ Exception -> 0x0684 }
            r2.add(r1)     // Catch:{ Exception -> 0x0684 }
        L_0x0230:
            org.telegram.messenger.support.LongSparseIntArray r2 = r12.pinnedDialogs     // Catch:{ Exception -> 0x0684 }
            int r2 = r2.size()     // Catch:{ Exception -> 0x0684 }
            if (r3 == 0) goto L_0x0263
        L_0x0238:
            r33 = r10
            java.lang.Integer r10 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x0684 }
            java.lang.Object r10 = r3.remove(r10)     // Catch:{ Exception -> 0x0684 }
            java.lang.Long r10 = (java.lang.Long) r10     // Catch:{ Exception -> 0x0684 }
            r34 = r10
            if (r10 == 0) goto L_0x025e
            org.telegram.messenger.support.LongSparseIntArray r10 = r12.pinnedDialogs     // Catch:{ Exception -> 0x0684 }
            r36 = r13
            r35 = r14
            long r13 = r34.longValue()     // Catch:{ Exception -> 0x0684 }
            r10.put(r13, r2)     // Catch:{ Exception -> 0x0684 }
            int r2 = r2 + 1
            r10 = r33
            r14 = r35
            r13 = r36
            goto L_0x0238
        L_0x025e:
            r36 = r13
            r35 = r14
            goto L_0x0269
        L_0x0263:
            r33 = r10
            r36 = r13
            r35 = r14
        L_0x0269:
            org.telegram.messenger.support.LongSparseIntArray r10 = r12.pinnedDialogs     // Catch:{ Exception -> 0x0684 }
            long r13 = r1.longValue()     // Catch:{ Exception -> 0x0684 }
            r10.put(r13, r2)     // Catch:{ Exception -> 0x0684 }
            r0.remove(r1)     // Catch:{ Exception -> 0x0684 }
            boolean r10 = r15.remove(r1)     // Catch:{ Exception -> 0x0684 }
            if (r10 != 0) goto L_0x0289
            r22 = 1
            boolean r10 = r7.containsKey(r1)     // Catch:{ Exception -> 0x0684 }
            if (r10 != 0) goto L_0x0289
            r8.add(r1)     // Catch:{ Exception -> 0x0684 }
            r7.put(r1, r4)     // Catch:{ Exception -> 0x0684 }
        L_0x0289:
            int r5 = r5 + 1
            r4 = r25
            r2 = r31
            r1 = r32
            r10 = r33
            r14 = r35
            r13 = r36
            goto L_0x01f6
        L_0x0299:
            r32 = r1
            r31 = r2
            r25 = r4
            r33 = r10
            r36 = r13
            r35 = r14
            if (r3 == 0) goto L_0x02df
            java.util.Set r1 = r3.entrySet()     // Catch:{ Exception -> 0x0684 }
            java.util.Iterator r1 = r1.iterator()     // Catch:{ Exception -> 0x0684 }
        L_0x02af:
            boolean r2 = r1.hasNext()     // Catch:{ Exception -> 0x0684 }
            if (r2 == 0) goto L_0x02df
            java.lang.Object r2 = r1.next()     // Catch:{ Exception -> 0x0684 }
            java.util.Map$Entry r2 = (java.util.Map.Entry) r2     // Catch:{ Exception -> 0x0684 }
            org.telegram.messenger.support.LongSparseIntArray r4 = r12.pinnedDialogs     // Catch:{ Exception -> 0x0684 }
            java.lang.Object r5 = r2.getValue()     // Catch:{ Exception -> 0x0684 }
            java.lang.Long r5 = (java.lang.Long) r5     // Catch:{ Exception -> 0x0684 }
            long r13 = r5.longValue()     // Catch:{ Exception -> 0x0684 }
            org.telegram.messenger.support.LongSparseIntArray r5 = r12.pinnedDialogs     // Catch:{ Exception -> 0x0684 }
            int r5 = r5.size()     // Catch:{ Exception -> 0x0684 }
            r4.put(r13, r5)     // Catch:{ Exception -> 0x0684 }
            goto L_0x02af
        L_0x02d1:
            r32 = r1
            r31 = r2
            r23 = r4
            r30 = r5
            r33 = r10
            r36 = r13
            r35 = r14
        L_0x02df:
            r1 = 0
            int r2 = r6.size()     // Catch:{ Exception -> 0x0684 }
        L_0x02e4:
            if (r1 >= r2) goto L_0x0380
            java.lang.Object r4 = r6.get(r1)     // Catch:{ Exception -> 0x0684 }
            org.telegram.tgnet.TLRPC$InputPeer r4 = (org.telegram.tgnet.TLRPC.InputPeer) r4     // Catch:{ Exception -> 0x0684 }
            long r13 = r4.user_id     // Catch:{ Exception -> 0x0684 }
            int r5 = (r13 > r18 ? 1 : (r13 == r18 ? 0 : -1))
            if (r5 == 0) goto L_0x032a
            long r13 = r4.user_id     // Catch:{ Exception -> 0x0684 }
            java.lang.Long r5 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x0684 }
            boolean r10 = r0.remove(r5)     // Catch:{ Exception -> 0x0684 }
            if (r10 != 0) goto L_0x031f
            r22 = 1
            r10 = r36
            boolean r13 = r10.contains(r5)     // Catch:{ Exception -> 0x0684 }
            if (r13 != 0) goto L_0x030b
            r10.add(r5)     // Catch:{ Exception -> 0x0684 }
        L_0x030b:
            boolean r13 = r11.containsKey(r5)     // Catch:{ Exception -> 0x0684 }
            if (r13 != 0) goto L_0x031c
            r13 = r35
            r13.add(r5)     // Catch:{ Exception -> 0x0684 }
            r11.put(r5, r4)     // Catch:{ Exception -> 0x0684 }
            r21 = 1
            goto L_0x0323
        L_0x031c:
            r13 = r35
            goto L_0x0323
        L_0x031f:
            r13 = r35
            r10 = r36
        L_0x0323:
            r14 = r2
            r25 = r3
            r3 = r6
            r6 = r33
            goto L_0x0372
        L_0x032a:
            r13 = r35
            r10 = r36
            r14 = r2
            r5 = r3
            long r2 = r4.chat_id     // Catch:{ Exception -> 0x0684 }
            int r25 = (r2 > r18 ? 1 : (r2 == r18 ? 0 : -1))
            if (r25 == 0) goto L_0x0339
            long r2 = r4.chat_id     // Catch:{ Exception -> 0x0684 }
            goto L_0x033b
        L_0x0339:
            long r2 = r4.channel_id     // Catch:{ Exception -> 0x0684 }
        L_0x033b:
            java.lang.Long r2 = java.lang.Long.valueOf(r2)     // Catch:{ Exception -> 0x0684 }
            r25 = r5
            r3 = r6
            long r5 = r2.longValue()     // Catch:{ Exception -> 0x0684 }
            long r5 = -r5
            java.lang.Long r5 = java.lang.Long.valueOf(r5)     // Catch:{ Exception -> 0x0684 }
            boolean r6 = r0.remove(r5)     // Catch:{ Exception -> 0x0684 }
            if (r6 != 0) goto L_0x0370
            r22 = 1
            boolean r6 = r10.contains(r5)     // Catch:{ Exception -> 0x0684 }
            if (r6 != 0) goto L_0x035c
            r10.add(r5)     // Catch:{ Exception -> 0x0684 }
        L_0x035c:
            boolean r6 = r9.containsKey(r2)     // Catch:{ Exception -> 0x0684 }
            if (r6 != 0) goto L_0x036d
            r6 = r33
            r6.add(r2)     // Catch:{ Exception -> 0x0684 }
            r9.put(r2, r4)     // Catch:{ Exception -> 0x0684 }
            r21 = 1
            goto L_0x0372
        L_0x036d:
            r6 = r33
            goto L_0x0372
        L_0x0370:
            r6 = r33
        L_0x0372:
            int r1 = r1 + 1
            r33 = r6
            r36 = r10
            r35 = r13
            r2 = r14
            r6 = r3
            r3 = r25
            goto L_0x02e4
        L_0x0380:
            r14 = r2
            r25 = r3
            r3 = r6
            r6 = r33
            r13 = r35
            r10 = r36
            int r1 = r32 + 1
            r10 = r6
            r14 = r13
            r4 = r23
            r3 = r25
            r5 = r30
            r2 = r31
            goto L_0x01cf
        L_0x0398:
            r32 = r1
            r31 = r2
            r25 = r3
            r23 = r4
            r30 = r5
            r6 = r10
            r13 = r14
            boolean r1 = r0.isEmpty()     // Catch:{ Exception -> 0x0684 }
            if (r1 != 0) goto L_0x03ba
            int r1 = r12.id     // Catch:{ Exception -> 0x0684 }
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x0684 }
            r5 = r30
            r5.put(r1, r0)     // Catch:{ Exception -> 0x0684 }
            r21 = 1
            r22 = 1
            goto L_0x03bc
        L_0x03ba:
            r5 = r30
        L_0x03bc:
            boolean r1 = r15.isEmpty()     // Catch:{ Exception -> 0x0684 }
            if (r1 != 0) goto L_0x03d0
            int r1 = r12.id     // Catch:{ Exception -> 0x0684 }
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x0684 }
            r4 = r23
            r4.put(r1, r15)     // Catch:{ Exception -> 0x0684 }
            r22 = 1
            goto L_0x03d2
        L_0x03d0:
            r4 = r23
        L_0x03d2:
            if (r22 == 0) goto L_0x03da
            r10 = r29
            r10.add(r12)     // Catch:{ Exception -> 0x0684 }
            goto L_0x03dc
        L_0x03da:
            r10 = r29
        L_0x03dc:
            if (r21 == 0) goto L_0x03ea
            int r1 = r12.id     // Catch:{ Exception -> 0x0684 }
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x0684 }
            r3 = r26
            r3.add(r1)     // Catch:{ Exception -> 0x0684 }
            goto L_0x03ec
        L_0x03ea:
            r3 = r26
        L_0x03ec:
            r26 = r3
            r23 = r4
            r30 = r5
            r2 = r6
            goto L_0x0548
        L_0x03f5:
            r28 = r0
            r24 = r1
            r31 = r2
            r27 = r13
            r13 = r14
            r39 = r10
            r10 = r6
            r6 = r39
            org.telegram.messenger.MessagesController$DialogFilter r0 = new org.telegram.messenger.MessagesController$DialogFilter     // Catch:{ Exception -> 0x0684 }
            r0.<init>()     // Catch:{ Exception -> 0x0684 }
            r1 = r31
            int r2 = r1.id     // Catch:{ Exception -> 0x0684 }
            r0.id = r2     // Catch:{ Exception -> 0x0684 }
            r2 = r27
            r0.flags = r2     // Catch:{ Exception -> 0x0684 }
            java.lang.String r12 = r1.title     // Catch:{ Exception -> 0x0684 }
            r0.name = r12     // Catch:{ Exception -> 0x0684 }
            r12 = -1
            r0.pendingUnreadCount = r12     // Catch:{ Exception -> 0x0684 }
            r12 = 0
        L_0x041a:
            r14 = 2
            if (r12 >= r14) goto L_0x053a
            if (r12 != 0) goto L_0x049f
            r15 = 0
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputPeer> r14 = r1.pinned_peers     // Catch:{ Exception -> 0x0684 }
            int r14 = r14.size()     // Catch:{ Exception -> 0x0684 }
        L_0x0426:
            if (r15 >= r14) goto L_0x0492
            r27 = r2
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputPeer> r2 = r1.pinned_peers     // Catch:{ Exception -> 0x0684 }
            java.lang.Object r2 = r2.get(r15)     // Catch:{ Exception -> 0x0684 }
            org.telegram.tgnet.TLRPC$InputPeer r2 = (org.telegram.tgnet.TLRPC.InputPeer) r2     // Catch:{ Exception -> 0x0684 }
            r26 = r3
            r23 = r4
            long r3 = r2.user_id     // Catch:{ Exception -> 0x0684 }
            int r21 = (r3 > r18 ? 1 : (r3 == r18 ? 0 : -1))
            if (r21 == 0) goto L_0x0443
            long r3 = r2.user_id     // Catch:{ Exception -> 0x0684 }
            java.lang.Long r3 = java.lang.Long.valueOf(r3)     // Catch:{ Exception -> 0x0684 }
            goto L_0x0453
        L_0x0443:
            long r3 = r2.chat_id     // Catch:{ Exception -> 0x0684 }
            int r21 = (r3 > r18 ? 1 : (r3 == r18 ? 0 : -1))
            if (r21 == 0) goto L_0x044c
            long r3 = r2.chat_id     // Catch:{ Exception -> 0x0684 }
            goto L_0x044e
        L_0x044c:
            long r3 = r2.channel_id     // Catch:{ Exception -> 0x0684 }
        L_0x044e:
            long r3 = -r3
            java.lang.Long r3 = java.lang.Long.valueOf(r3)     // Catch:{ Exception -> 0x0684 }
        L_0x0453:
            java.util.ArrayList<java.lang.Long> r4 = r0.alwaysShow     // Catch:{ Exception -> 0x0684 }
            boolean r4 = r4.contains(r3)     // Catch:{ Exception -> 0x0684 }
            if (r4 != 0) goto L_0x0460
            java.util.ArrayList<java.lang.Long> r4 = r0.alwaysShow     // Catch:{ Exception -> 0x0684 }
            r4.add(r3)     // Catch:{ Exception -> 0x0684 }
        L_0x0460:
            org.telegram.messenger.support.LongSparseIntArray r4 = r0.pinnedDialogs     // Catch:{ Exception -> 0x0684 }
            r30 = r5
            r33 = r6
            long r5 = r3.longValue()     // Catch:{ Exception -> 0x0684 }
            r21 = r14
            org.telegram.messenger.support.LongSparseIntArray r14 = r0.pinnedDialogs     // Catch:{ Exception -> 0x0684 }
            int r14 = r14.size()     // Catch:{ Exception -> 0x0684 }
            int r14 = r14 + 1
            r4.put(r5, r14)     // Catch:{ Exception -> 0x0684 }
            boolean r4 = r7.containsKey(r3)     // Catch:{ Exception -> 0x0684 }
            if (r4 != 0) goto L_0x0483
            r8.add(r3)     // Catch:{ Exception -> 0x0684 }
            r7.put(r3, r2)     // Catch:{ Exception -> 0x0684 }
        L_0x0483:
            int r15 = r15 + 1
            r14 = r21
            r4 = r23
            r3 = r26
            r2 = r27
            r5 = r30
            r6 = r33
            goto L_0x0426
        L_0x0492:
            r27 = r2
            r26 = r3
            r23 = r4
            r30 = r5
            r33 = r6
            r21 = r14
            goto L_0x04a9
        L_0x049f:
            r27 = r2
            r26 = r3
            r23 = r4
            r30 = r5
            r33 = r6
        L_0x04a9:
            if (r12 != 0) goto L_0x04ae
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputPeer> r2 = r1.include_peers     // Catch:{ Exception -> 0x0684 }
            goto L_0x04b0
        L_0x04ae:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$InputPeer> r2 = r1.exclude_peers     // Catch:{ Exception -> 0x0684 }
        L_0x04b0:
            if (r12 != 0) goto L_0x04b5
            java.util.ArrayList<java.lang.Long> r3 = r0.alwaysShow     // Catch:{ Exception -> 0x0684 }
            goto L_0x04b7
        L_0x04b5:
            java.util.ArrayList<java.lang.Long> r3 = r0.neverShow     // Catch:{ Exception -> 0x0684 }
        L_0x04b7:
            r4 = 0
            int r5 = r2.size()     // Catch:{ Exception -> 0x0684 }
        L_0x04bc:
            if (r4 >= r5) goto L_0x0528
            java.lang.Object r6 = r2.get(r4)     // Catch:{ Exception -> 0x0684 }
            org.telegram.tgnet.TLRPC$InputPeer r6 = (org.telegram.tgnet.TLRPC.InputPeer) r6     // Catch:{ Exception -> 0x0684 }
            long r14 = r6.user_id     // Catch:{ Exception -> 0x0684 }
            int r21 = (r14 > r18 ? 1 : (r14 == r18 ? 0 : -1))
            if (r21 == 0) goto L_0x04eb
            long r14 = r6.user_id     // Catch:{ Exception -> 0x0684 }
            java.lang.Long r14 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x0684 }
            boolean r15 = r3.contains(r14)     // Catch:{ Exception -> 0x0684 }
            if (r15 != 0) goto L_0x04d9
            r3.add(r14)     // Catch:{ Exception -> 0x0684 }
        L_0x04d9:
            boolean r15 = r11.containsKey(r14)     // Catch:{ Exception -> 0x0684 }
            if (r15 != 0) goto L_0x04e5
            r13.add(r14)     // Catch:{ Exception -> 0x0684 }
            r11.put(r14, r6)     // Catch:{ Exception -> 0x0684 }
        L_0x04e5:
            r31 = r1
            r15 = r2
            r2 = r33
            goto L_0x0520
        L_0x04eb:
            long r14 = r6.chat_id     // Catch:{ Exception -> 0x0684 }
            int r21 = (r14 > r18 ? 1 : (r14 == r18 ? 0 : -1))
            if (r21 == 0) goto L_0x04f4
            long r14 = r6.chat_id     // Catch:{ Exception -> 0x0684 }
            goto L_0x04f6
        L_0x04f4:
            long r14 = r6.channel_id     // Catch:{ Exception -> 0x0684 }
        L_0x04f6:
            java.lang.Long r14 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x0684 }
            r31 = r1
            r15 = r2
            long r1 = r14.longValue()     // Catch:{ Exception -> 0x0684 }
            long r1 = -r1
            java.lang.Long r1 = java.lang.Long.valueOf(r1)     // Catch:{ Exception -> 0x0684 }
            boolean r2 = r3.contains(r1)     // Catch:{ Exception -> 0x0684 }
            if (r2 != 0) goto L_0x050f
            r3.add(r1)     // Catch:{ Exception -> 0x0684 }
        L_0x050f:
            boolean r2 = r9.containsKey(r14)     // Catch:{ Exception -> 0x0684 }
            if (r2 != 0) goto L_0x051e
            r2 = r33
            r2.add(r14)     // Catch:{ Exception -> 0x0684 }
            r9.put(r14, r6)     // Catch:{ Exception -> 0x0684 }
            goto L_0x0520
        L_0x051e:
            r2 = r33
        L_0x0520:
            int r4 = r4 + 1
            r33 = r2
            r2 = r15
            r1 = r31
            goto L_0x04bc
        L_0x0528:
            r31 = r1
            r15 = r2
            r2 = r33
            int r12 = r12 + 1
            r6 = r2
            r4 = r23
            r3 = r26
            r2 = r27
            r5 = r30
            goto L_0x041a
        L_0x053a:
            r31 = r1
            r27 = r2
            r26 = r3
            r23 = r4
            r30 = r5
            r2 = r6
            r10.add(r0)     // Catch:{ Exception -> 0x0684 }
        L_0x0548:
            int r1 = r24 + 1
            r12 = r40
            r6 = r10
            r14 = r13
            r15 = r17
            r4 = r23
            r3 = r26
            r0 = r28
            r5 = r30
            r13 = r41
            r10 = r2
            r2 = r16
            goto L_0x006b
        L_0x055f:
            r28 = r0
            r24 = r1
            r16 = r2
            r26 = r3
            r23 = r4
            r30 = r5
            r2 = r10
            r13 = r14
            r17 = r15
            r10 = r6
            boolean r0 = r8.isEmpty()     // Catch:{ Exception -> 0x0684 }
            java.lang.String r1 = ","
            if (r0 != 0) goto L_0x05a6
            java.lang.String r0 = android.text.TextUtils.join(r1, r8)     // Catch:{ Exception -> 0x0684 }
            java.util.ArrayList r3 = new java.util.ArrayList     // Catch:{ Exception -> 0x0684 }
            r3.<init>()     // Catch:{ Exception -> 0x0684 }
            r12 = r40
            org.telegram.tgnet.TLRPC$messages_Dialogs r0 = r12.loadDialogsByIds(r0, r13, r2, r3)     // Catch:{ Exception -> 0x0688 }
            r3 = 0
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r4 = r0.dialogs     // Catch:{ Exception -> 0x0688 }
            int r4 = r4.size()     // Catch:{ Exception -> 0x0688 }
        L_0x058e:
            if (r3 >= r4) goto L_0x05a5
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r5 = r0.dialogs     // Catch:{ Exception -> 0x0688 }
            java.lang.Object r5 = r5.get(r3)     // Catch:{ Exception -> 0x0688 }
            org.telegram.tgnet.TLRPC$Dialog r5 = (org.telegram.tgnet.TLRPC.Dialog) r5     // Catch:{ Exception -> 0x0688 }
            long r14 = r5.id     // Catch:{ Exception -> 0x0688 }
            java.lang.Long r6 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x0688 }
            r7.remove(r6)     // Catch:{ Exception -> 0x0688 }
            int r3 = r3 + 1
            goto L_0x058e
        L_0x05a5:
            goto L_0x05ad
        L_0x05a6:
            r12 = r40
            org.telegram.tgnet.TLRPC$TL_messages_dialogs r0 = new org.telegram.tgnet.TLRPC$TL_messages_dialogs     // Catch:{ Exception -> 0x0688 }
            r0.<init>()     // Catch:{ Exception -> 0x0688 }
        L_0x05ad:
            java.util.ArrayList r3 = new java.util.ArrayList     // Catch:{ Exception -> 0x0688 }
            r3.<init>()     // Catch:{ Exception -> 0x0688 }
            r15 = r3
            boolean r3 = r13.isEmpty()     // Catch:{ Exception -> 0x0688 }
            if (r3 != 0) goto L_0x05e1
            java.lang.String r3 = android.text.TextUtils.join(r1, r13)     // Catch:{ Exception -> 0x0688 }
            r12.getUsersInternal(r3, r15)     // Catch:{ Exception -> 0x0688 }
            r3 = 0
            int r4 = r15.size()     // Catch:{ Exception -> 0x0688 }
        L_0x05c5:
            if (r3 >= r4) goto L_0x05de
            java.lang.Object r5 = r15.get(r3)     // Catch:{ Exception -> 0x0688 }
            org.telegram.tgnet.TLRPC$User r5 = (org.telegram.tgnet.TLRPC.User) r5     // Catch:{ Exception -> 0x0688 }
            r35 = r13
            long r13 = r5.id     // Catch:{ Exception -> 0x0688 }
            java.lang.Long r6 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x0688 }
            r11.remove(r6)     // Catch:{ Exception -> 0x0688 }
            int r3 = r3 + 1
            r13 = r35
            goto L_0x05c5
        L_0x05de:
            r35 = r13
            goto L_0x05e3
        L_0x05e1:
            r35 = r13
        L_0x05e3:
            java.util.ArrayList r3 = new java.util.ArrayList     // Catch:{ Exception -> 0x0688 }
            r3.<init>()     // Catch:{ Exception -> 0x0688 }
            r13 = r3
            boolean r3 = r2.isEmpty()     // Catch:{ Exception -> 0x0688 }
            if (r3 != 0) goto L_0x0610
            java.lang.String r1 = android.text.TextUtils.join(r1, r2)     // Catch:{ Exception -> 0x0688 }
            r12.getChatsInternal(r1, r13)     // Catch:{ Exception -> 0x0688 }
            r1 = 0
            int r3 = r13.size()     // Catch:{ Exception -> 0x0688 }
        L_0x05fb:
            if (r1 >= r3) goto L_0x0610
            java.lang.Object r4 = r13.get(r1)     // Catch:{ Exception -> 0x0688 }
            org.telegram.tgnet.TLRPC$Chat r4 = (org.telegram.tgnet.TLRPC.Chat) r4     // Catch:{ Exception -> 0x0688 }
            long r5 = r4.id     // Catch:{ Exception -> 0x0688 }
            java.lang.Long r5 = java.lang.Long.valueOf(r5)     // Catch:{ Exception -> 0x0688 }
            r9.remove(r5)     // Catch:{ Exception -> 0x0688 }
            int r1 = r1 + 1
            goto L_0x05fb
        L_0x0610:
            boolean r1 = r11.isEmpty()     // Catch:{ Exception -> 0x0688 }
            if (r1 == 0) goto L_0x064a
            boolean r1 = r9.isEmpty()     // Catch:{ Exception -> 0x0688 }
            if (r1 == 0) goto L_0x064a
            boolean r1 = r7.isEmpty()     // Catch:{ Exception -> 0x0688 }
            if (r1 == 0) goto L_0x064a
            r3 = 0
            r1 = r40
            r6 = r2
            r2 = r0
            r29 = r26
            r31 = r23
            r4 = r15
            r5 = r13
            r32 = r10
            r10 = r6
            r6 = r32
            r33 = r7
            r7 = r28
            r34 = r8
            r8 = r17
            r36 = r9
            r9 = r31
            r37 = r10
            r10 = r30
            r38 = r11
            r11 = r29
            r1.m956x4fbc8d3(r2, r3, r4, r5, r6, r7, r8, r9, r10, r11)     // Catch:{ Exception -> 0x0688 }
            goto L_0x0683
        L_0x064a:
            r37 = r2
            r33 = r7
            r34 = r8
            r36 = r9
            r32 = r10
            r38 = r11
            r31 = r23
            r29 = r26
            org.telegram.messenger.MessagesController r14 = r40.getMessagesController()     // Catch:{ Exception -> 0x0688 }
            org.telegram.tgnet.TLRPC$TL_messages_dialogs r19 = new org.telegram.tgnet.TLRPC$TL_messages_dialogs     // Catch:{ Exception -> 0x0688 }
            r19.<init>()     // Catch:{ Exception -> 0x0688 }
            r1 = r35
            r3 = r15
            r2 = r17
            r15 = r33
            r16 = r38
            r17 = r36
            r18 = r0
            r20 = r3
            r21 = r13
            r22 = r32
            r23 = r28
            r24 = r2
            r25 = r31
            r26 = r30
            r27 = r29
            r14.loadFilterPeers(r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27)     // Catch:{ Exception -> 0x0688 }
        L_0x0683:
            goto L_0x068c
        L_0x0684:
            r0 = move-exception
            r12 = r40
            goto L_0x0689
        L_0x0688:
            r0 = move-exception
        L_0x0689:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x068c:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.m851x2a713var_(org.telegram.tgnet.TLRPC$Vector):void");
    }

    static /* synthetic */ int lambda$checkLoadedRemoteFilters$42(LongSparseIntArray pinnedDialogs, Long o1, Long o2) {
        int idx1 = pinnedDialogs.get(o1.longValue());
        int idx2 = pinnedDialogs.get(o2.longValue());
        if (idx1 > idx2) {
            return 1;
        }
        if (idx1 < idx2) {
            return -1;
        }
        return 0;
    }

    /* access modifiers changed from: private */
    /* renamed from: processLoadedFilterPeersInternal */
    public void m956x4fbc8d3(TLRPC.messages_Dialogs pinnedDialogs, TLRPC.messages_Dialogs pinnedRemoteDialogs, ArrayList<TLRPC.User> users, ArrayList<TLRPC.Chat> chats, ArrayList<MessagesController.DialogFilter> filtersToSave, SparseArray<MessagesController.DialogFilter> filtersToDelete, ArrayList<Integer> filtersOrder, HashMap<Integer, HashSet<Long>> filterDialogRemovals, HashMap<Integer, HashSet<Long>> filterUserRemovals, HashSet<Integer> filtersUnreadCounterReset) {
        boolean anythingChanged = false;
        putUsersAndChats(users, chats, true, false);
        int N = filtersToDelete.size();
        for (int a = 0; a < N; a++) {
            m872xCLASSNAMEvar_(filtersToDelete.valueAt(a));
            anythingChanged = true;
        }
        SparseArray<MessagesController.DialogFilter> sparseArray = filtersToDelete;
        Iterator<Integer> it = filtersUnreadCounterReset.iterator();
        while (it.hasNext()) {
            MessagesController.DialogFilter filter = this.dialogFiltersMap.get(it.next().intValue());
            if (filter != null) {
                filter.pendingUnreadCount = -1;
            }
        }
        for (Map.Entry<Integer, HashSet<Long>> entry : filterUserRemovals.entrySet()) {
            MessagesController.DialogFilter filter2 = this.dialogFiltersMap.get(entry.getKey().intValue());
            if (filter2 != null) {
                HashSet<Long> set = entry.getValue();
                filter2.alwaysShow.removeAll(set);
                filter2.neverShow.removeAll(set);
                anythingChanged = true;
            }
        }
        for (Map.Entry<Integer, HashSet<Long>> entry2 : filterDialogRemovals.entrySet()) {
            MessagesController.DialogFilter filter3 = this.dialogFiltersMap.get(entry2.getKey().intValue());
            if (filter3 != null) {
                Iterator<Long> it2 = entry2.getValue().iterator();
                while (it2.hasNext()) {
                    filter3.pinnedDialogs.delete(it2.next().longValue());
                }
                anythingChanged = true;
            }
        }
        int N2 = filtersToSave.size();
        for (int a2 = 0; a2 < N2; a2++) {
            saveDialogFilterInternal(filtersToSave.get(a2), false, true);
            anythingChanged = true;
        }
        ArrayList<MessagesController.DialogFilter> arrayList = filtersToSave;
        boolean orderChanged = false;
        int N3 = this.dialogFilters.size();
        for (int a3 = 0; a3 < N3; a3++) {
            MessagesController.DialogFilter filter4 = this.dialogFilters.get(a3);
            int order = filtersOrder.indexOf(Integer.valueOf(filter4.id));
            if (filter4.order != order) {
                filter4.order = order;
                anythingChanged = true;
                orderChanged = true;
            }
        }
        ArrayList<Integer> arrayList2 = filtersOrder;
        if (orderChanged) {
            Collections.sort(this.dialogFilters, MessagesStorage$$ExternalSyntheticLambda105.INSTANCE);
            saveDialogFiltersOrderInternal();
        }
        int remote = anythingChanged ? 1 : 2;
        calcUnreadCounters(true);
        getMessagesController().processLoadedDialogFilters(new ArrayList(this.dialogFilters), pinnedDialogs, pinnedRemoteDialogs, users, chats, (ArrayList<TLRPC.EncryptedChat>) null, remote);
    }

    static /* synthetic */ int lambda$processLoadedFilterPeersInternal$44(MessagesController.DialogFilter o1, MessagesController.DialogFilter o2) {
        if (o1.order > o2.order) {
            return 1;
        }
        if (o1.order < o2.order) {
            return -1;
        }
        return 0;
    }

    /* access modifiers changed from: protected */
    public void processLoadedFilterPeers(TLRPC.messages_Dialogs pinnedDialogs, TLRPC.messages_Dialogs pinnedRemoteDialogs, ArrayList<TLRPC.User> users, ArrayList<TLRPC.Chat> chats, ArrayList<MessagesController.DialogFilter> filtersToSave, SparseArray<MessagesController.DialogFilter> filtersToDelete, ArrayList<Integer> filtersOrder, HashMap<Integer, HashSet<Long>> filterDialogRemovals, HashMap<Integer, HashSet<Long>> filterUserRemovals, HashSet<Integer> filtersUnreadCounterReset) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda84(this, pinnedDialogs, pinnedRemoteDialogs, users, chats, filtersToSave, filtersToDelete, filtersOrder, filterDialogRemovals, filterUserRemovals, filtersUnreadCounterReset));
    }

    /* access modifiers changed from: private */
    /* renamed from: deleteDialogFilterInternal */
    public void m872xCLASSNAMEvar_(MessagesController.DialogFilter filter) {
        try {
            this.dialogFilters.remove(filter);
            this.dialogFiltersMap.remove(filter.id);
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM dialog_filter WHERE id = " + filter.id).stepThis().dispose();
            SQLiteDatabase sQLiteDatabase2 = this.database;
            sQLiteDatabase2.executeFast("DELETE FROM dialog_filter_ep WHERE id = " + filter.id).stepThis().dispose();
            SQLiteDatabase sQLiteDatabase3 = this.database;
            sQLiteDatabase3.executeFast("DELETE FROM dialog_filter_pin_v2 WHERE id = " + filter.id).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void deleteDialogFilter(MessagesController.DialogFilter filter) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda54(this, filter));
    }

    public void saveDialogFilter(MessagesController.DialogFilter filter, boolean atBegin, boolean peers) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda56(this, filter, atBegin, peers));
    }

    /* renamed from: lambda$saveDialogFilter$48$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m990x711df8a8(MessagesController.DialogFilter filter, boolean atBegin, boolean peers) {
        saveDialogFilterInternal(filter, atBegin, peers);
        calcUnreadCounters(false);
        AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda110(this));
    }

    /* renamed from: lambda$saveDialogFilter$47$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m989x1a0007c9() {
        ArrayList<MessagesController.DialogFilter> filters = getMessagesController().dialogFilters;
        int N = filters.size();
        for (int a = 0; a < N; a++) {
            filters.get(a).unreadCount = filters.get(a).pendingUnreadCount;
        }
        this.mainUnreadCount = this.pendingMainUnreadCount;
        this.archiveUnreadCount = this.pendingArchiveUnreadCount;
        getNotificationCenter().postNotificationName(NotificationCenter.updateInterfaces, Integer.valueOf(MessagesController.UPDATE_MASK_READ_DIALOG_MESSAGE));
    }

    public void saveDialogFiltersOrderInternal() {
        try {
            SQLitePreparedStatement state = this.database.executeFast("UPDATE dialog_filter SET ord = ?, flags = ? WHERE id = ?");
            int N = this.dialogFilters.size();
            for (int a = 0; a < N; a++) {
                MessagesController.DialogFilter filter = this.dialogFilters.get(a);
                state.requery();
                state.bindInteger(1, filter.order);
                state.bindInteger(2, filter.flags);
                state.bindInteger(3, filter.id);
                state.step();
            }
            state.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void saveDialogFiltersOrder() {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda115(this));
    }

    protected static void addReplyMessages(TLRPC.Message message, LongSparseArray<SparseArray<ArrayList<TLRPC.Message>>> replyMessageOwners, LongSparseArray<ArrayList<Integer>> dialogReplyMessagesIds) {
        int i = message.reply_to.reply_to_msg_id;
        long dialogId = MessageObject.getReplyToDialogId(message);
        SparseArray<ArrayList<TLRPC.Message>> sparseArray = replyMessageOwners.get(dialogId);
        ArrayList<Integer> ids = dialogReplyMessagesIds.get(dialogId);
        if (sparseArray == null) {
            sparseArray = new SparseArray<>();
            replyMessageOwners.put(dialogId, sparseArray);
        }
        if (ids == null) {
            ids = new ArrayList<>();
            dialogReplyMessagesIds.put(dialogId, ids);
        }
        ArrayList<TLRPC.Message> arrayList = sparseArray.get(message.reply_to.reply_to_msg_id);
        if (arrayList == null) {
            arrayList = new ArrayList<>();
            sparseArray.put(message.reply_to.reply_to_msg_id, arrayList);
            if (!ids.contains(Integer.valueOf(message.reply_to.reply_to_msg_id))) {
                ids.add(Integer.valueOf(message.reply_to.reply_to_msg_id));
            }
        }
        arrayList.add(message);
    }

    /* access modifiers changed from: protected */
    public void loadReplyMessages(LongSparseArray<SparseArray<ArrayList<TLRPC.Message>>> replyMessageOwners, LongSparseArray<ArrayList<Integer>> dialogReplyMessagesIds, ArrayList<Long> usersToLoad, ArrayList<Long> chatsToLoad, boolean scheduled) throws SQLiteException {
        SQLiteCursor cursor;
        MessagesStorage messagesStorage = this;
        LongSparseArray<SparseArray<ArrayList<TLRPC.Message>>> longSparseArray = replyMessageOwners;
        if (!replyMessageOwners.isEmpty()) {
            int b = 0;
            int N2 = replyMessageOwners.size();
            while (b < N2) {
                long dialogId = longSparseArray.keyAt(b);
                SparseArray<ArrayList<TLRPC.Message>> owners = longSparseArray.valueAt(b);
                ArrayList<Integer> ids = dialogReplyMessagesIds.get(dialogId);
                if (ids == null) {
                    ArrayList<Long> arrayList = usersToLoad;
                    ArrayList<Long> arrayList2 = chatsToLoad;
                } else {
                    boolean z = false;
                    if (scheduled) {
                        cursor = messagesStorage.database.queryFinalized(String.format(Locale.US, "SELECT data, mid, date, uid FROM scheduled_messages_v2 WHERE mid IN(%s) AND uid = %d", new Object[]{TextUtils.join(",", ids), Long.valueOf(dialogId)}), new Object[0]);
                    } else {
                        cursor = messagesStorage.database.queryFinalized(String.format(Locale.US, "SELECT data, mid, date, uid FROM messages_v2 WHERE mid IN(%s) AND uid = %d", new Object[]{TextUtils.join(",", ids), Long.valueOf(dialogId)}), new Object[0]);
                    }
                    while (cursor.next()) {
                        NativeByteBuffer data = cursor.byteBufferValue(z ? 1 : 0);
                        if (data != null) {
                            TLRPC.Message message = TLRPC.Message.TLdeserialize(data, data.readInt32(z), z);
                            message.readAttachPath(data, getUserConfig().clientUserId);
                            data.reuse();
                            message.id = cursor.intValue(1);
                            message.date = cursor.intValue(2);
                            message.dialog_id = cursor.longValue(3);
                            addUsersAndChatsFromMessage(message, usersToLoad, chatsToLoad);
                            ArrayList<TLRPC.Message> arrayList3 = owners.get(message.id);
                            if (arrayList3 != null) {
                                int N = arrayList3.size();
                                int a = 0;
                                while (a < N) {
                                    arrayList3.get(a).replyMessage = message;
                                    MessageObject.getDialogId(message);
                                    a++;
                                    LongSparseArray<SparseArray<ArrayList<TLRPC.Message>>> longSparseArray2 = replyMessageOwners;
                                }
                            }
                        } else {
                            ArrayList<Long> arrayList4 = usersToLoad;
                            ArrayList<Long> arrayList5 = chatsToLoad;
                        }
                        z = false;
                        LongSparseArray<SparseArray<ArrayList<TLRPC.Message>>> longSparseArray3 = replyMessageOwners;
                    }
                    ArrayList<Long> arrayList6 = usersToLoad;
                    ArrayList<Long> arrayList7 = chatsToLoad;
                    cursor.dispose();
                }
                b++;
                messagesStorage = this;
                longSparseArray = replyMessageOwners;
            }
            LongSparseArray<ArrayList<Integer>> longSparseArray4 = dialogReplyMessagesIds;
            ArrayList<Long> arrayList8 = usersToLoad;
            ArrayList<Long> arrayList9 = chatsToLoad;
        }
    }

    public void loadUnreadMessages() {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda66(this));
    }

    /* renamed from: lambda$loadUnreadMessages$50$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m936x56bd6415() {
        String str;
        LongSparseArray<SparseArray<ArrayList<TLRPC.Message>>> replyMessageOwners;
        ArrayList<TLRPC.EncryptedChat> encryptedChats;
        ArrayList<TLRPC.User> users;
        ArrayList<MessageObject> pushMessages;
        ArrayList<TLRPC.Message> messages;
        ArrayList<TLRPC.Chat> chats;
        ArrayList<TLRPC.EncryptedChat> encryptedChats2;
        String str2;
        ArrayList<TLRPC.User> users2;
        ArrayList<TLRPC.EncryptedChat> encryptedChats3;
        ArrayList<TLRPC.User> users3;
        ArrayList<MessageObject> pushMessages2;
        int maxDate;
        String str3;
        LongSparseArray<SparseArray<ArrayList<TLRPC.Message>>> replyMessageOwners2;
        LongSparseArray<ArrayList<Integer>> dialogReplyMessagesIds;
        ArrayList<MessageObject> pushMessages3;
        int currentTime;
        StringBuilder ids;
        NativeByteBuffer data;
        try {
            ArrayList<Long> usersToLoad = new ArrayList<>();
            ArrayList<Long> chatsToLoad = new ArrayList<>();
            ArrayList arrayList = new ArrayList();
            LongSparseArray<Integer> pushDialogs = new LongSparseArray<>();
            int i = 0;
            SQLiteCursor cursor = this.database.queryFinalized("SELECT d.did, d.unread_count, s.flags FROM dialogs as d LEFT JOIN dialog_settings as s ON d.did = s.did WHERE d.unread_count > 0", new Object[0]);
            StringBuilder ids2 = new StringBuilder();
            int currentTime2 = getConnectionsManager().getCurrentTime();
            while (true) {
                str = ",";
                if (!cursor.next()) {
                    break;
                }
                long flags = cursor.longValue(2);
                boolean muted = (flags & 1) != 0;
                int mutedUntil = (int) (flags >> 32);
                if (cursor.isNull(2) || !muted || (mutedUntil != 0 && mutedUntil < currentTime2)) {
                    long did = cursor.longValue(i);
                    if (!DialogObject.isFolderDialogId(did)) {
                        pushDialogs.put(did, Integer.valueOf(cursor.intValue(1)));
                        if (ids2.length() != 0) {
                            ids2.append(str);
                        }
                        ids2.append(did);
                        if (DialogObject.isEncryptedDialog(did)) {
                            int encryptedChatId = DialogObject.getEncryptedChatId(did);
                            if (!arrayList.contains(Integer.valueOf(encryptedChatId))) {
                                arrayList.add(Integer.valueOf(encryptedChatId));
                            }
                        } else if (DialogObject.isUserDialog(did)) {
                            if (!usersToLoad.contains(Long.valueOf(did))) {
                                usersToLoad.add(Long.valueOf(did));
                            }
                        } else if (!chatsToLoad.contains(Long.valueOf(-did))) {
                            chatsToLoad.add(Long.valueOf(-did));
                        }
                    }
                }
                i = 0;
            }
            cursor.dispose();
            LongSparseArray<SparseArray<ArrayList<TLRPC.Message>>> replyMessageOwners3 = new LongSparseArray<>();
            LongSparseArray<ArrayList<Integer>> dialogReplyMessagesIds2 = new LongSparseArray<>();
            ArrayList<TLRPC.Message> messages2 = new ArrayList<>();
            ArrayList<MessageObject> pushMessages4 = new ArrayList<>();
            ArrayList<TLRPC.User> users4 = new ArrayList<>();
            ArrayList<TLRPC.Chat> chats2 = new ArrayList<>();
            ArrayList<TLRPC.EncryptedChat> encryptedChats4 = new ArrayList<>();
            if (ids2.length() > 0) {
                SQLiteCursor cursor2 = this.database.queryFinalized("SELECT read_state, data, send_state, mid, date, uid, replydata FROM messages_v2 WHERE uid IN (" + ids2.toString() + ") AND out = 0 AND read_state IN(0,2) ORDER BY date DESC LIMIT 50", new Object[0]);
                int maxDate2 = 0;
                while (cursor2.next()) {
                    NativeByteBuffer data2 = cursor2.byteBufferValue(1);
                    if (data2 != null) {
                        TLRPC.Message message = TLRPC.Message.TLdeserialize(data2, data2.readInt32(false), false);
                        ids = ids2;
                        currentTime = currentTime2;
                        message.readAttachPath(data2, getUserConfig().clientUserId);
                        data2.reuse();
                        MessageObject.setUnreadFlags(message, cursor2.intValue(0));
                        message.id = cursor2.intValue(3);
                        message.date = cursor2.intValue(4);
                        message.dialog_id = cursor2.longValue(5);
                        messages2.add(message);
                        int maxDate3 = Math.max(maxDate2, message.date);
                        addUsersAndChatsFromMessage(message, usersToLoad, chatsToLoad);
                        message.send_state = cursor2.intValue(2);
                        if ((message.peer_id.channel_id == 0 && !MessageObject.isUnread(message) && !DialogObject.isEncryptedDialog(message.dialog_id)) || message.id > 0) {
                            message.send_state = 0;
                        }
                        if (DialogObject.isEncryptedDialog(message.dialog_id) && !cursor2.isNull(5)) {
                            message.random_id = cursor2.longValue(5);
                        }
                        try {
                            if (!(message.reply_to == null || message.reply_to.reply_to_msg_id == 0 || (!(message.action instanceof TLRPC.TL_messageActionPinMessage) && !(message.action instanceof TLRPC.TL_messageActionPaymentSent) && !(message.action instanceof TLRPC.TL_messageActionGameScore)))) {
                                if (!cursor2.isNull(6) && (data = cursor2.byteBufferValue(6)) != null) {
                                    message.replyMessage = TLRPC.Message.TLdeserialize(data, data.readInt32(false), false);
                                    message.replyMessage.readAttachPath(data, getUserConfig().clientUserId);
                                    data.reuse();
                                    if (message.replyMessage != null) {
                                        addUsersAndChatsFromMessage(message.replyMessage, usersToLoad, chatsToLoad);
                                    }
                                }
                                if (message.replyMessage == null) {
                                    addReplyMessages(message, replyMessageOwners3, dialogReplyMessagesIds2);
                                }
                            }
                        } catch (Exception e) {
                            FileLog.e((Throwable) e);
                        }
                        maxDate2 = maxDate3;
                    } else {
                        ids = ids2;
                        currentTime = currentTime2;
                    }
                    ids2 = ids;
                    currentTime2 = currentTime;
                }
                int i2 = currentTime2;
                cursor2.dispose();
                this.database.executeFast("DELETE FROM unread_push_messages WHERE date <= " + maxDate2).stepThis().dispose();
                SQLiteCursor cursor3 = this.database.queryFinalized("SELECT data, mid, date, uid, random, fm, name, uname, flags FROM unread_push_messages WHERE 1 ORDER BY date DESC LIMIT 50", new Object[0]);
                while (cursor3.next()) {
                    NativeByteBuffer data3 = cursor3.byteBufferValue(0);
                    if (data3 != null) {
                        TLRPC.Message message2 = TLRPC.Message.TLdeserialize(data3, data3.readInt32(false), false);
                        data3.reuse();
                        message2.id = cursor3.intValue(1);
                        message2.date = cursor3.intValue(2);
                        dialogReplyMessagesIds = dialogReplyMessagesIds2;
                        message2.dialog_id = cursor3.longValue(3);
                        replyMessageOwners2 = replyMessageOwners3;
                        message2.random_id = cursor3.longValue(4);
                        String messageText = cursor3.isNull(5) ? null : cursor3.stringValue(5);
                        String name = cursor3.isNull(6) ? null : cursor3.stringValue(6);
                        String userName = cursor3.isNull(7) ? null : cursor3.stringValue(7);
                        int flags2 = cursor3.intValue(8);
                        if (MessageObject.getFromChatId(message2) != 0) {
                            str3 = str;
                        } else if (DialogObject.isUserDialog(message2.dialog_id)) {
                            message2.from_id = new TLRPC.TL_peerUser();
                            str3 = str;
                            message2.from_id.user_id = message2.dialog_id;
                        } else {
                            str3 = str;
                        }
                        if (DialogObject.isUserDialog(message2.dialog_id)) {
                            if (!usersToLoad.contains(Long.valueOf(message2.dialog_id))) {
                                usersToLoad.add(Long.valueOf(message2.dialog_id));
                            }
                        } else if (DialogObject.isChatDialog(message2.dialog_id) && !chatsToLoad.contains(Long.valueOf(-message2.dialog_id))) {
                            chatsToLoad.add(Long.valueOf(-message2.dialog_id));
                        }
                        pushMessages3 = pushMessages4;
                        pushMessages3.add(new MessageObject(this.currentAccount, message2, messageText, name, userName, (flags2 & 1) != 0, (flags2 & 2) != 0, (message2.flags & Integer.MIN_VALUE) != 0, false));
                        addUsersAndChatsFromMessage(message2, usersToLoad, chatsToLoad);
                    } else {
                        dialogReplyMessagesIds = dialogReplyMessagesIds2;
                        replyMessageOwners2 = replyMessageOwners3;
                        str3 = str;
                        pushMessages3 = pushMessages4;
                    }
                    pushMessages4 = pushMessages3;
                    dialogReplyMessagesIds2 = dialogReplyMessagesIds;
                    replyMessageOwners3 = replyMessageOwners2;
                    str = str3;
                }
                LongSparseArray<ArrayList<Integer>> dialogReplyMessagesIds3 = dialogReplyMessagesIds2;
                replyMessageOwners = replyMessageOwners3;
                String str4 = str;
                ArrayList<MessageObject> pushMessages5 = pushMessages4;
                cursor3.dispose();
                messages = messages2;
                LongSparseArray<ArrayList<Integer>> longSparseArray = dialogReplyMessagesIds3;
                loadReplyMessages(replyMessageOwners, dialogReplyMessagesIds3, usersToLoad, chatsToLoad, false);
                if (!arrayList.isEmpty()) {
                    str2 = str4;
                    encryptedChats2 = encryptedChats4;
                    getEncryptedChatsInternal(TextUtils.join(str2, arrayList), encryptedChats2, usersToLoad);
                } else {
                    encryptedChats2 = encryptedChats4;
                    str2 = str4;
                }
                if (!usersToLoad.isEmpty()) {
                    users2 = users4;
                    getUsersInternal(TextUtils.join(str2, usersToLoad), users2);
                } else {
                    users2 = users4;
                }
                if (!chatsToLoad.isEmpty()) {
                    chats = chats2;
                    getChatsInternal(TextUtils.join(str2, chatsToLoad), chats);
                    int a = 0;
                    while (a < chats.size()) {
                        TLRPC.Chat chat = chats.get(a);
                        if (chat != null) {
                            if (!ChatObject.isNotInChat(chat) && !chat.min) {
                                if (chat.migrated_to == null) {
                                    maxDate = maxDate2;
                                    users3 = users2;
                                    encryptedChats3 = encryptedChats2;
                                    pushMessages2 = pushMessages5;
                                }
                            }
                            pushMessages2 = pushMessages5;
                            long did2 = -chat.id;
                            SQLiteDatabase sQLiteDatabase = this.database;
                            maxDate = maxDate2;
                            StringBuilder sb = new StringBuilder();
                            TLRPC.Chat chat2 = chat;
                            sb.append("UPDATE dialogs SET unread_count = 0 WHERE did = ");
                            sb.append(did2);
                            sQLiteDatabase.executeFast(sb.toString()).stepThis().dispose();
                            users3 = users2;
                            encryptedChats3 = encryptedChats2;
                            this.database.executeFast(String.format(Locale.US, "UPDATE messages_v2 SET read_state = 3 WHERE uid = %d AND mid > 0 AND read_state IN(0,2) AND out = 0", new Object[]{Long.valueOf(did2)})).stepThis().dispose();
                            chats.remove(a);
                            a--;
                            pushDialogs.remove(did2);
                            int b = 0;
                            while (b < messages.size()) {
                                if (messages.get(b).dialog_id == did2) {
                                    messages.remove(b);
                                    b--;
                                }
                                b++;
                            }
                        } else {
                            maxDate = maxDate2;
                            TLRPC.Chat chat3 = chat;
                            users3 = users2;
                            encryptedChats3 = encryptedChats2;
                            pushMessages2 = pushMessages5;
                        }
                        a++;
                        maxDate2 = maxDate;
                        pushMessages5 = pushMessages2;
                        users2 = users3;
                        encryptedChats2 = encryptedChats3;
                    }
                    users = users2;
                    encryptedChats = encryptedChats2;
                    pushMessages = pushMessages5;
                } else {
                    users = users2;
                    encryptedChats = encryptedChats2;
                    pushMessages = pushMessages5;
                    chats = chats2;
                }
                SQLiteCursor sQLiteCursor = cursor3;
            } else {
                replyMessageOwners = replyMessageOwners3;
                StringBuilder sb2 = ids2;
                int i3 = currentTime2;
                chats = chats2;
                encryptedChats = encryptedChats4;
                messages = messages2;
                users = users4;
                pushMessages = pushMessages4;
                LongSparseArray<ArrayList<Integer>> longSparseArray2 = dialogReplyMessagesIds2;
            }
            Collections.reverse(messages);
            ArrayList<TLRPC.User> users5 = users;
            ArrayList<TLRPC.EncryptedChat> encryptedChats5 = encryptedChats;
            LongSparseArray<SparseArray<ArrayList<TLRPC.Message>>> longSparseArray3 = replyMessageOwners;
            AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda21(this, pushDialogs, messages, pushMessages, users5, chats, encryptedChats5));
        } catch (Exception e2) {
            FileLog.e((Throwable) e2);
        }
    }

    /* renamed from: lambda$loadUnreadMessages$49$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m935xda2ab0eb(LongSparseArray pushDialogs, ArrayList messages, ArrayList pushMessages, ArrayList users, ArrayList chats, ArrayList encryptedChats) {
        getNotificationsController().processLoadedUnreadMessages(pushDialogs, messages, pushMessages, users, chats, encryptedChats);
    }

    public void putWallpapers(ArrayList<TLRPC.WallPaper> wallPapers, int action) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda145(this, action, wallPapers));
    }

    /* renamed from: lambda$putWallpapers$51$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m972lambda$putWallpapers$51$orgtelegrammessengerMessagesStorage(int action, ArrayList wallPapers) {
        SQLitePreparedStatement state;
        if (action == 1) {
            try {
                this.database.executeFast("DELETE FROM wallpapers2 WHERE num >= -1").stepThis().dispose();
            } catch (Exception e) {
                FileLog.e((Throwable) e);
                return;
            }
        }
        this.database.beginTransaction();
        if (action != 0) {
            state = this.database.executeFast("REPLACE INTO wallpapers2 VALUES(?, ?, ?)");
        } else {
            state = this.database.executeFast("UPDATE wallpapers2 SET data = ? WHERE uid = ?");
        }
        int N = wallPapers.size();
        for (int a = 0; a < N; a++) {
            TLRPC.WallPaper wallPaper = (TLRPC.WallPaper) wallPapers.get(a);
            state.requery();
            NativeByteBuffer data = new NativeByteBuffer(wallPaper.getObjectSize());
            wallPaper.serializeToStream(data);
            if (action != 0) {
                state.bindLong(1, wallPaper.id);
                state.bindByteBuffer(2, data);
                if (action < 0) {
                    state.bindInteger(3, action);
                } else {
                    state.bindInteger(3, action == 2 ? -1 : a);
                }
            } else {
                state.bindByteBuffer(1, data);
                state.bindLong(2, wallPaper.id);
            }
            state.step();
            data.reuse();
        }
        state.dispose();
        this.database.commitTransaction();
    }

    public void deleteWallpaper(long id) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda156(this, id));
    }

    /* renamed from: lambda$deleteWallpaper$52$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m877lambda$deleteWallpaper$52$orgtelegrammessengerMessagesStorage(long id) {
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM wallpapers2 WHERE uid = " + id).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void getWallpapers() {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda33(this));
    }

    /* renamed from: lambda$getWallpapers$54$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m905lambda$getWallpapers$54$orgtelegrammessengerMessagesStorage() {
        SQLiteCursor cursor = null;
        try {
            cursor = this.database.queryFinalized("SELECT data FROM wallpapers2 WHERE 1 ORDER BY num ASC", new Object[0]);
            ArrayList<TLRPC.WallPaper> wallPapers = new ArrayList<>();
            while (cursor.next()) {
                NativeByteBuffer data = cursor.byteBufferValue(0);
                if (data != null) {
                    TLRPC.WallPaper wallPaper = TLRPC.WallPaper.TLdeserialize(data, data.readInt32(false), false);
                    data.reuse();
                    if (wallPaper != null) {
                        wallPapers.add(wallPaper);
                    }
                }
            }
            AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda0(wallPapers));
            if (cursor == null) {
                return;
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (cursor == null) {
                return;
            }
        } catch (Throwable th) {
            if (cursor != null) {
                cursor.dispose();
            }
            throw th;
        }
        cursor.dispose();
    }

    public void addRecentLocalFile(String imageUrl, String localUrl, TLRPC.Document document) {
        if (imageUrl != null && imageUrl.length() != 0) {
            if ((localUrl != null && localUrl.length() != 0) || document != null) {
                this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda67(this, document, imageUrl, localUrl));
            }
        }
    }

    /* renamed from: lambda$addRecentLocalFile$55$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m846x589807da(TLRPC.Document document, String imageUrl, String localUrl) {
        if (document != null) {
            try {
                SQLitePreparedStatement state = this.database.executeFast("UPDATE web_recent_v3 SET document = ? WHERE image_url = ?");
                state.requery();
                NativeByteBuffer data = new NativeByteBuffer(document.getObjectSize());
                document.serializeToStream(data);
                state.bindByteBuffer(1, data);
                state.bindString(2, imageUrl);
                state.step();
                state.dispose();
                data.reuse();
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        } else {
            SQLitePreparedStatement state2 = this.database.executeFast("UPDATE web_recent_v3 SET local_url = ? WHERE image_url = ?");
            state2.requery();
            state2.bindString(1, localUrl);
            state2.bindString(2, imageUrl);
            state2.step();
            state2.dispose();
        }
    }

    public void deleteUserChatHistory(long dialogId, long fromId) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda177(this, dialogId, fromId));
    }

    /* renamed from: lambda$deleteUserChatHistory$58$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m876x4ccef3b8(long dialogId, long fromId) {
        long j = dialogId;
        try {
            ArrayList<Integer> mids = new ArrayList<>();
            SQLiteDatabase sQLiteDatabase = this.database;
            SQLiteCursor cursor = sQLiteDatabase.queryFinalized("SELECT data FROM messages_v2 WHERE uid = " + j, new Object[0]);
            ArrayList<File> filesToDelete = new ArrayList<>();
            ArrayList<Pair<Long, Integer>> namesToDelete = new ArrayList<>();
            ArrayList<Pair<Long, Integer>> idsToDelete = new ArrayList<>();
            while (cursor.next()) {
                try {
                    NativeByteBuffer data = cursor.byteBufferValue(0);
                    if (data != null) {
                        TLRPC.Message message = TLRPC.Message.TLdeserialize(data, data.readInt32(false), false);
                        if (message != null) {
                            message.readAttachPath(data, getUserConfig().clientUserId);
                            if ((!UserObject.isReplyUser(dialogId) || MessageObject.getPeerId(message.fwd_from.from_id) != fromId) && (MessageObject.getFromChatId(message) != fromId || message.id == 1)) {
                            } else {
                                mids.add(Integer.valueOf(message.id));
                                TLRPC.Message message2 = message;
                                addFilesToDelete(message, filesToDelete, idsToDelete, namesToDelete, false);
                            }
                        }
                        data.reuse();
                    }
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                }
            }
            cursor.dispose();
            deleteFromDownloadQueue(idsToDelete, true);
            ArrayList<Pair<Long, Integer>> arrayList = idsToDelete;
            SQLiteCursor sQLiteCursor = cursor;
            ArrayList<File> filesToDelete2 = filesToDelete;
            AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda43(this, namesToDelete, dialogId, mids));
            m942x977317f7(dialogId, mids, false, false);
            ArrayList<Integer> mids2 = mids;
            m1011x365e590f(dialogId, DialogObject.isChatDialog(dialogId) ? -j : 0, mids, (ArrayList<Long>) null);
            getFileLoader().deleteFiles(filesToDelete2, 0);
            if (!mids2.isEmpty()) {
                AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda41(this, mids2, j));
            }
        } catch (Exception e2) {
            FileLog.e((Throwable) e2);
        }
    }

    /* renamed from: lambda$deleteUserChatHistory$56$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m874x9e9311fa(ArrayList namesToDelete, long dialogId, ArrayList mids) {
        getFileLoader().cancelLoadFiles(namesToDelete);
        getMessagesController().markDialogMessageAsDeleted(dialogId, mids);
    }

    /* renamed from: lambda$deleteUserChatHistory$57$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m875xf5b102d9(ArrayList mids, long dialogId) {
        NotificationCenter notificationCenter = getNotificationCenter();
        int i = NotificationCenter.messagesDeleted;
        Object[] objArr = new Object[3];
        objArr[0] = mids;
        objArr[1] = Long.valueOf(DialogObject.isChatDialog(dialogId) ? -dialogId : 0);
        objArr[2] = false;
        notificationCenter.postNotificationName(i, objArr);
    }

    private boolean addFilesToDelete(TLRPC.Message message, ArrayList<File> filesToDelete, ArrayList<Pair<Long, Integer>> ids, ArrayList<String> namesToDelete, boolean forceCache) {
        ArrayList<File> arrayList = filesToDelete;
        ArrayList<String> arrayList2 = namesToDelete;
        boolean z = forceCache;
        if (message == null) {
            return false;
        }
        int type = 0;
        long id = 0;
        TLRPC.Document document = MessageObject.getDocument(message);
        TLRPC.Photo photo = MessageObject.getPhoto(message);
        if (MessageObject.isVoiceMessage(message)) {
            if (document == null) {
                return false;
            }
            id = document.id;
            type = 2;
        } else if (MessageObject.isStickerMessage(message) || MessageObject.isAnimatedStickerMessage(message)) {
            if (document == null) {
                return false;
            }
            id = document.id;
            type = 1;
        } else if (MessageObject.isVideoMessage(message) || MessageObject.isRoundVideoMessage(message) || MessageObject.isGifMessage(message)) {
            if (document == null) {
                return false;
            }
            id = document.id;
            type = 4;
        } else if (document != null) {
            id = document.id;
            type = 8;
        } else if (!(photo == null || FileLoader.getClosestPhotoSizeWithSize(photo.sizes, AndroidUtilities.getPhotoSize()) == null)) {
            id = photo.id;
            type = 1;
        }
        if (id != 0) {
            ids.add(new Pair(Long.valueOf(id), Integer.valueOf(type)));
        } else {
            ArrayList<Pair<Long, Integer>> arrayList3 = ids;
        }
        if (photo != null) {
            int N = photo.sizes.size();
            for (int a = 0; a < N; a++) {
                TLRPC.PhotoSize photoSize = photo.sizes.get(a);
                String name = FileLoader.getAttachFileName(photoSize);
                if (!TextUtils.isEmpty(name)) {
                    arrayList2.add(name);
                }
                File file = FileLoader.getPathToAttach(photoSize, z);
                if (file.toString().length() > 0) {
                    arrayList.add(file);
                }
            }
            return true;
        } else if (document == null) {
            return false;
        } else {
            String name2 = FileLoader.getAttachFileName(document);
            if (!TextUtils.isEmpty(name2)) {
                arrayList2.add(name2);
            }
            File file2 = FileLoader.getPathToAttach(document, z);
            if (file2.toString().length() > 0) {
                arrayList.add(file2);
            }
            int N2 = document.thumbs.size();
            for (int a2 = 0; a2 < N2; a2++) {
                File file3 = FileLoader.getPathToAttach(document.thumbs.get(a2));
                if (file3.toString().length() > 0) {
                    arrayList.add(file3);
                }
            }
            return true;
        }
    }

    public void deleteDialog(long did, int messagesOnly) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda130(this, messagesOnly, did));
    }

    /* JADX WARNING: Removed duplicated region for block: B:37:0x00ef  */
    /* JADX WARNING: Removed duplicated region for block: B:78:0x029f A[Catch:{ Exception -> 0x0487 }] */
    /* JADX WARNING: Removed duplicated region for block: B:84:0x02be A[Catch:{ Exception -> 0x0487 }] */
    /* JADX WARNING: Removed duplicated region for block: B:87:0x0361 A[Catch:{ Exception -> 0x0487 }] */
    /* JADX WARNING: Removed duplicated region for block: B:90:0x0387 A[Catch:{ Exception -> 0x0487 }] */
    /* renamed from: lambda$deleteDialog$61$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void m871lambda$deleteDialog$61$orgtelegrammessengerMessagesStorage(int r24, long r25) {
        /*
            r23 = this;
            r7 = r23
            r8 = r24
            r9 = r25
            java.lang.String r11 = " AND mid != "
            r12 = 3
            r13 = 0
            if (r8 != r12) goto L_0x0037
            r0 = -1
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0487 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0487 }
            r2.<init>()     // Catch:{ Exception -> 0x0487 }
            java.lang.String r3 = "SELECT last_mid FROM dialogs WHERE did = "
            r2.append(r3)     // Catch:{ Exception -> 0x0487 }
            r2.append(r9)     // Catch:{ Exception -> 0x0487 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x0487 }
            java.lang.Object[] r3 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r2, r3)     // Catch:{ Exception -> 0x0487 }
            boolean r2 = r1.next()     // Catch:{ Exception -> 0x0487 }
            if (r2 == 0) goto L_0x0031
            int r2 = r1.intValue(r13)     // Catch:{ Exception -> 0x0487 }
            r0 = r2
        L_0x0031:
            r1.dispose()     // Catch:{ Exception -> 0x0487 }
            if (r0 == 0) goto L_0x0037
            return
        L_0x0037:
            boolean r0 = org.telegram.messenger.DialogObject.isEncryptedDialog(r25)     // Catch:{ Exception -> 0x0487 }
            r14 = 1
            java.lang.String r15 = "SELECT data FROM messages_v2 WHERE uid = "
            r6 = 2
            if (r0 != 0) goto L_0x0043
            if (r8 != r6) goto L_0x00e1
        L_0x0043:
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0487 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0487 }
            r1.<init>()     // Catch:{ Exception -> 0x0487 }
            r1.append(r15)     // Catch:{ Exception -> 0x0487 }
            r1.append(r9)     // Catch:{ Exception -> 0x0487 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0487 }
            java.lang.Object[] r2 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r1, r2)     // Catch:{ Exception -> 0x0487 }
            r5 = r0
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x0487 }
            r0.<init>()     // Catch:{ Exception -> 0x0487 }
            r4 = r0
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x0487 }
            r0.<init>()     // Catch:{ Exception -> 0x0487 }
            r3 = r0
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x0487 }
            r0.<init>()     // Catch:{ Exception -> 0x0487 }
            r2 = r0
        L_0x006d:
            boolean r0 = r5.next()     // Catch:{ Exception -> 0x00bd }
            if (r0 == 0) goto L_0x00b5
            org.telegram.tgnet.NativeByteBuffer r0 = r5.byteBufferValue(r13)     // Catch:{ Exception -> 0x00bd }
            if (r0 == 0) goto L_0x00a3
            int r1 = r0.readInt32(r13)     // Catch:{ Exception -> 0x00bd }
            org.telegram.tgnet.TLRPC$Message r1 = org.telegram.tgnet.TLRPC.Message.TLdeserialize(r0, r1, r13)     // Catch:{ Exception -> 0x00bd }
            org.telegram.messenger.UserConfig r6 = r23.getUserConfig()     // Catch:{ Exception -> 0x00bd }
            long r12 = r6.clientUserId     // Catch:{ Exception -> 0x00bd }
            r1.readAttachPath(r0, r12)     // Catch:{ Exception -> 0x00bd }
            r0.reuse()     // Catch:{ Exception -> 0x00bd }
            r6 = 0
            r12 = r1
            r1 = r23
            r13 = r2
            r2 = r12
            r17 = r3
            r3 = r4
            r18 = r4
            r4 = r13
            r19 = r5
            r5 = r17
            r1.addFilesToDelete(r2, r3, r4, r5, r6)     // Catch:{ Exception -> 0x00a1 }
            goto L_0x00aa
        L_0x00a1:
            r0 = move-exception
            goto L_0x00c5
        L_0x00a3:
            r13 = r2
            r17 = r3
            r18 = r4
            r19 = r5
        L_0x00aa:
            r2 = r13
            r3 = r17
            r4 = r18
            r5 = r19
            r6 = 2
            r12 = 3
            r13 = 0
            goto L_0x006d
        L_0x00b5:
            r13 = r2
            r17 = r3
            r18 = r4
            r19 = r5
            goto L_0x00c8
        L_0x00bd:
            r0 = move-exception
            r13 = r2
            r17 = r3
            r18 = r4
            r19 = r5
        L_0x00c5:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ Exception -> 0x0487 }
        L_0x00c8:
            r19.dispose()     // Catch:{ Exception -> 0x0487 }
            r7.deleteFromDownloadQueue(r13, r14)     // Catch:{ Exception -> 0x0487 }
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda28 r0 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda28     // Catch:{ Exception -> 0x0487 }
            r1 = r17
            r0.<init>(r7, r1)     // Catch:{ Exception -> 0x0487 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0)     // Catch:{ Exception -> 0x0487 }
            org.telegram.messenger.FileLoader r0 = r23.getFileLoader()     // Catch:{ Exception -> 0x0487 }
            r2 = r18
            r0.deleteFiles(r2, r8)     // Catch:{ Exception -> 0x0487 }
        L_0x00e1:
            java.lang.String r2 = "DELETE FROM media_holes_v2 WHERE uid = "
            java.lang.String r3 = "DELETE FROM messages_holes WHERE uid = "
            java.lang.String r4 = "DELETE FROM media_v4 WHERE uid = "
            java.lang.String r5 = "DELETE FROM media_counts_v2 WHERE uid = "
            java.lang.String r6 = "DELETE FROM bot_keyboard WHERE uid = "
            java.lang.String r12 = "DELETE FROM messages_v2 WHERE uid = "
            if (r8 == 0) goto L_0x02be
            r13 = 3
            if (r8 != r13) goto L_0x00fb
            r11 = r2
            r8 = r4
            r22 = r6
            r6 = r5
            r5 = r22
            goto L_0x02c5
        L_0x00fb:
            r13 = 2
            if (r8 != r13) goto L_0x02b5
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0487 }
            java.lang.StringBuilder r13 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0487 }
            r13.<init>()     // Catch:{ Exception -> 0x0487 }
            java.lang.String r1 = "SELECT last_mid_i, last_mid FROM dialogs WHERE did = "
            r13.append(r1)     // Catch:{ Exception -> 0x0487 }
            r13.append(r9)     // Catch:{ Exception -> 0x0487 }
            java.lang.String r1 = r13.toString()     // Catch:{ Exception -> 0x0487 }
            r13 = 0
            java.lang.Object[] r14 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r1, r14)     // Catch:{ Exception -> 0x0487 }
            r1 = r0
            r0 = -1
            boolean r13 = r1.next()     // Catch:{ Exception -> 0x0487 }
            if (r13 == 0) goto L_0x02ad
            r13 = 0
            long r17 = r1.longValue(r13)     // Catch:{ Exception -> 0x0487 }
            r13 = r17
            r8 = 1
            long r17 = r1.longValue(r8)     // Catch:{ Exception -> 0x0487 }
            r19 = r17
            org.telegram.SQLite.SQLiteDatabase r8 = r7.database     // Catch:{ Exception -> 0x0487 }
            r16 = r0
            java.lang.StringBuilder r0 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0487 }
            r0.<init>()     // Catch:{ Exception -> 0x0487 }
            r0.append(r15)     // Catch:{ Exception -> 0x0487 }
            r0.append(r9)     // Catch:{ Exception -> 0x0487 }
            java.lang.String r15 = " AND mid IN ("
            r0.append(r15)     // Catch:{ Exception -> 0x0487 }
            r0.append(r13)     // Catch:{ Exception -> 0x0487 }
            java.lang.String r15 = ","
            r0.append(r15)     // Catch:{ Exception -> 0x0487 }
            r17 = r1
            r15 = r2
            r1 = r19
            r0.append(r1)     // Catch:{ Exception -> 0x0487 }
            r18 = r15
            java.lang.String r15 = ")"
            r0.append(r15)     // Catch:{ Exception -> 0x0487 }
            java.lang.String r0 = r0.toString()     // Catch:{ Exception -> 0x0487 }
            r19 = r4
            r15 = 0
            java.lang.Object[] r4 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLiteCursor r0 = r8.queryFinalized(r0, r4)     // Catch:{ Exception -> 0x0487 }
            r4 = r0
            r8 = r16
        L_0x0169:
            boolean r0 = r4.next()     // Catch:{ Exception -> 0x01b9 }
            if (r0 == 0) goto L_0x01b2
            r15 = 0
            org.telegram.tgnet.NativeByteBuffer r0 = r4.byteBufferValue(r15)     // Catch:{ Exception -> 0x01b9 }
            if (r0 == 0) goto L_0x01a5
            r16 = r8
            int r8 = r0.readInt32(r15)     // Catch:{ Exception -> 0x019f }
            org.telegram.tgnet.TLRPC$Message r8 = org.telegram.tgnet.TLRPC.Message.TLdeserialize(r0, r8, r15)     // Catch:{ Exception -> 0x019f }
            if (r8 == 0) goto L_0x0190
            org.telegram.messenger.UserConfig r15 = r23.getUserConfig()     // Catch:{ Exception -> 0x019f }
            r20 = r5
            r21 = r6
            long r5 = r15.clientUserId     // Catch:{ Exception -> 0x019d }
            r8.readAttachPath(r0, r5)     // Catch:{ Exception -> 0x019d }
            goto L_0x0194
        L_0x0190:
            r20 = r5
            r21 = r6
        L_0x0194:
            r0.reuse()     // Catch:{ Exception -> 0x019d }
            if (r8 == 0) goto L_0x01ab
            int r5 = r8.id     // Catch:{ Exception -> 0x019d }
            r8 = r5
            goto L_0x01ad
        L_0x019d:
            r0 = move-exception
            goto L_0x01c0
        L_0x019f:
            r0 = move-exception
            r20 = r5
            r21 = r6
            goto L_0x01c0
        L_0x01a5:
            r20 = r5
            r21 = r6
            r16 = r8
        L_0x01ab:
            r8 = r16
        L_0x01ad:
            r5 = r20
            r6 = r21
            goto L_0x0169
        L_0x01b2:
            r20 = r5
            r21 = r6
            r16 = r8
            goto L_0x01c3
        L_0x01b9:
            r0 = move-exception
            r20 = r5
            r21 = r6
            r16 = r8
        L_0x01c0:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ Exception -> 0x0487 }
        L_0x01c3:
            r4.dispose()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0487 }
            java.lang.StringBuilder r5 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0487 }
            r5.<init>()     // Catch:{ Exception -> 0x0487 }
            r5.append(r12)     // Catch:{ Exception -> 0x0487 }
            r5.append(r9)     // Catch:{ Exception -> 0x0487 }
            r5.append(r11)     // Catch:{ Exception -> 0x0487 }
            r5.append(r13)     // Catch:{ Exception -> 0x0487 }
            r5.append(r11)     // Catch:{ Exception -> 0x0487 }
            r5.append(r1)     // Catch:{ Exception -> 0x0487 }
            java.lang.String r5 = r5.toString()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r5)     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0487 }
            r0.dispose()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0487 }
            java.lang.StringBuilder r5 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0487 }
            r5.<init>()     // Catch:{ Exception -> 0x0487 }
            r5.append(r3)     // Catch:{ Exception -> 0x0487 }
            r5.append(r9)     // Catch:{ Exception -> 0x0487 }
            java.lang.String r3 = r5.toString()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r3)     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0487 }
            r0.dispose()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0487 }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0487 }
            r3.<init>()     // Catch:{ Exception -> 0x0487 }
            r5 = r21
            r3.append(r5)     // Catch:{ Exception -> 0x0487 }
            r3.append(r9)     // Catch:{ Exception -> 0x0487 }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r3)     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0487 }
            r0.dispose()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0487 }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0487 }
            r3.<init>()     // Catch:{ Exception -> 0x0487 }
            r6 = r20
            r3.append(r6)     // Catch:{ Exception -> 0x0487 }
            r3.append(r9)     // Catch:{ Exception -> 0x0487 }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r3)     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0487 }
            r0.dispose()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0487 }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0487 }
            r3.<init>()     // Catch:{ Exception -> 0x0487 }
            r8 = r19
            r3.append(r8)     // Catch:{ Exception -> 0x0487 }
            r3.append(r9)     // Catch:{ Exception -> 0x0487 }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r3)     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0487 }
            r0.dispose()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0487 }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0487 }
            r3.<init>()     // Catch:{ Exception -> 0x0487 }
            r11 = r18
            r3.append(r11)     // Catch:{ Exception -> 0x0487 }
            r3.append(r9)     // Catch:{ Exception -> 0x0487 }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r3)     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0487 }
            r0.dispose()     // Catch:{ Exception -> 0x0487 }
            org.telegram.messenger.MediaDataController r0 = r23.getMediaDataController()     // Catch:{ Exception -> 0x0487 }
            r3 = 0
            r0.clearBotKeyboard(r9, r3)     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0487 }
            java.lang.String r3 = "REPLACE INTO messages_holes VALUES(?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r3)     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLiteDatabase r3 = r7.database     // Catch:{ Exception -> 0x0487 }
            java.lang.String r5 = "REPLACE INTO media_holes_v2 VALUES(?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.executeFast(r5)     // Catch:{ Exception -> 0x0487 }
            r5 = -1
            r8 = r16
            if (r8 == r5) goto L_0x02a2
            createFirstHoles(r9, r0, r3, r8)     // Catch:{ Exception -> 0x0487 }
        L_0x02a2:
            r0.dispose()     // Catch:{ Exception -> 0x0487 }
            r3.dispose()     // Catch:{ Exception -> 0x0487 }
            r7.updateWidgets((long) r9)     // Catch:{ Exception -> 0x0487 }
            r0 = r8
            goto L_0x02b1
        L_0x02ad:
            r16 = r0
            r17 = r1
        L_0x02b1:
            r17.dispose()     // Catch:{ Exception -> 0x0487 }
            return
        L_0x02b5:
            r11 = r2
            r8 = r4
            r22 = r6
            r6 = r5
            r5 = r22
            goto L_0x03a9
        L_0x02be:
            r11 = r2
            r8 = r4
            r22 = r6
            r6 = r5
            r5 = r22
        L_0x02c5:
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0487 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0487 }
            r1.<init>()     // Catch:{ Exception -> 0x0487 }
            java.lang.String r2 = "DELETE FROM dialogs WHERE did = "
            r1.append(r2)     // Catch:{ Exception -> 0x0487 }
            r1.append(r9)     // Catch:{ Exception -> 0x0487 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0487 }
            r0.dispose()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0487 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0487 }
            r1.<init>()     // Catch:{ Exception -> 0x0487 }
            java.lang.String r2 = "DELETE FROM chat_pinned_v2 WHERE uid = "
            r1.append(r2)     // Catch:{ Exception -> 0x0487 }
            r1.append(r9)     // Catch:{ Exception -> 0x0487 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0487 }
            r0.dispose()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0487 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0487 }
            r1.<init>()     // Catch:{ Exception -> 0x0487 }
            java.lang.String r2 = "DELETE FROM chat_pinned_count WHERE uid = "
            r1.append(r2)     // Catch:{ Exception -> 0x0487 }
            r1.append(r9)     // Catch:{ Exception -> 0x0487 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0487 }
            r0.dispose()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0487 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0487 }
            r1.<init>()     // Catch:{ Exception -> 0x0487 }
            java.lang.String r2 = "DELETE FROM channel_users_v2 WHERE did = "
            r1.append(r2)     // Catch:{ Exception -> 0x0487 }
            r1.append(r9)     // Catch:{ Exception -> 0x0487 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0487 }
            r0.dispose()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0487 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0487 }
            r1.<init>()     // Catch:{ Exception -> 0x0487 }
            java.lang.String r2 = "DELETE FROM search_recent WHERE did = "
            r1.append(r2)     // Catch:{ Exception -> 0x0487 }
            r1.append(r9)     // Catch:{ Exception -> 0x0487 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0487 }
            r0.dispose()     // Catch:{ Exception -> 0x0487 }
            boolean r0 = org.telegram.messenger.DialogObject.isEncryptedDialog(r25)     // Catch:{ Exception -> 0x0487 }
            if (r0 != 0) goto L_0x0387
            boolean r0 = org.telegram.messenger.DialogObject.isChatDialog(r25)     // Catch:{ Exception -> 0x0487 }
            if (r0 == 0) goto L_0x03a9
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0487 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0487 }
            r1.<init>()     // Catch:{ Exception -> 0x0487 }
            java.lang.String r2 = "DELETE FROM chat_settings_v2 WHERE uid = "
            r1.append(r2)     // Catch:{ Exception -> 0x0487 }
            long r13 = -r9
            r1.append(r13)     // Catch:{ Exception -> 0x0487 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0487 }
            r0.dispose()     // Catch:{ Exception -> 0x0487 }
            goto L_0x03a9
        L_0x0387:
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0487 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0487 }
            r1.<init>()     // Catch:{ Exception -> 0x0487 }
            java.lang.String r2 = "DELETE FROM enc_chats WHERE uid = "
            r1.append(r2)     // Catch:{ Exception -> 0x0487 }
            int r2 = org.telegram.messenger.DialogObject.getEncryptedChatId(r25)     // Catch:{ Exception -> 0x0487 }
            r1.append(r2)     // Catch:{ Exception -> 0x0487 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0487 }
            r0.dispose()     // Catch:{ Exception -> 0x0487 }
        L_0x03a9:
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0487 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0487 }
            r1.<init>()     // Catch:{ Exception -> 0x0487 }
            java.lang.String r2 = "UPDATE dialogs SET unread_count = 0, unread_count_i = 0 WHERE did = "
            r1.append(r2)     // Catch:{ Exception -> 0x0487 }
            r1.append(r9)     // Catch:{ Exception -> 0x0487 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0487 }
            r0.dispose()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0487 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0487 }
            r1.<init>()     // Catch:{ Exception -> 0x0487 }
            r1.append(r12)     // Catch:{ Exception -> 0x0487 }
            r1.append(r9)     // Catch:{ Exception -> 0x0487 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0487 }
            r0.dispose()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0487 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0487 }
            r1.<init>()     // Catch:{ Exception -> 0x0487 }
            r1.append(r5)     // Catch:{ Exception -> 0x0487 }
            r1.append(r9)     // Catch:{ Exception -> 0x0487 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0487 }
            r0.dispose()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0487 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0487 }
            r1.<init>()     // Catch:{ Exception -> 0x0487 }
            r1.append(r6)     // Catch:{ Exception -> 0x0487 }
            r1.append(r9)     // Catch:{ Exception -> 0x0487 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0487 }
            r0.dispose()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0487 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0487 }
            r1.<init>()     // Catch:{ Exception -> 0x0487 }
            r1.append(r8)     // Catch:{ Exception -> 0x0487 }
            r1.append(r9)     // Catch:{ Exception -> 0x0487 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0487 }
            r0.dispose()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0487 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0487 }
            r1.<init>()     // Catch:{ Exception -> 0x0487 }
            r1.append(r3)     // Catch:{ Exception -> 0x0487 }
            r1.append(r9)     // Catch:{ Exception -> 0x0487 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0487 }
            r0.dispose()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0487 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0487 }
            r1.<init>()     // Catch:{ Exception -> 0x0487 }
            r1.append(r11)     // Catch:{ Exception -> 0x0487 }
            r1.append(r9)     // Catch:{ Exception -> 0x0487 }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x0487 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0487 }
            r0.dispose()     // Catch:{ Exception -> 0x0487 }
            org.telegram.messenger.MediaDataController r0 = r23.getMediaDataController()     // Catch:{ Exception -> 0x0487 }
            r1 = 0
            r0.clearBotKeyboard(r9, r1)     // Catch:{ Exception -> 0x0487 }
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda197 r0 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda197     // Catch:{ Exception -> 0x0487 }
            r0.<init>(r7)     // Catch:{ Exception -> 0x0487 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0)     // Catch:{ Exception -> 0x0487 }
            r1 = 0
            r7.resetAllUnreadCounters(r1)     // Catch:{ Exception -> 0x0487 }
            r7.updateWidgets((long) r9)     // Catch:{ Exception -> 0x0487 }
            goto L_0x048b
        L_0x0487:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x048b:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.m871lambda$deleteDialog$61$orgtelegrammessengerMessagesStorage(int, long):void");
    }

    /* renamed from: lambda$deleteDialog$59$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m869lambda$deleteDialog$59$orgtelegrammessengerMessagesStorage(ArrayList namesToDelete) {
        getFileLoader().cancelLoadFiles(namesToDelete);
    }

    /* renamed from: lambda$deleteDialog$60$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m870lambda$deleteDialog$60$orgtelegrammessengerMessagesStorage() {
        getNotificationCenter().postNotificationName(NotificationCenter.needReloadRecentDialogsSearch, new Object[0]);
    }

    public void onDeleteQueryComplete(long did) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda158(this, did));
    }

    /* renamed from: lambda$onDeleteQueryComplete$62$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m951x3evar_f0(long did) {
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM media_counts_v2 WHERE uid = " + did).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void getDialogPhotos(long did, int count, int maxId, int classGuid) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda138(this, maxId, did, count, classGuid));
    }

    /* renamed from: lambda$getDialogPhotos$64$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m890lambda$getDialogPhotos$64$orgtelegrammessengerMessagesStorage(int maxId, long did, int count, int classGuid) {
        SQLiteCursor cursor;
        if (maxId != 0) {
            try {
                cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT data FROM user_photos WHERE uid = %d AND id < %d ORDER BY rowid ASC LIMIT %d", new Object[]{Long.valueOf(did), Integer.valueOf(maxId), Integer.valueOf(count)}), new Object[0]);
            } catch (Exception e) {
                FileLog.e((Throwable) e);
                return;
            }
        } else {
            cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT data FROM user_photos WHERE uid = %d ORDER BY rowid ASC LIMIT %d", new Object[]{Long.valueOf(did), Integer.valueOf(count)}), new Object[0]);
        }
        TLRPC.photos_Photos res = new TLRPC.TL_photos_photos();
        ArrayList<TLRPC.Message> messages = new ArrayList<>();
        while (cursor.next()) {
            NativeByteBuffer data = cursor.byteBufferValue(0);
            if (data != null) {
                TLRPC.Photo photo = TLRPC.Photo.TLdeserialize(data, data.readInt32(false), false);
                if (data.remaining() > 0) {
                    messages.add(TLRPC.Message.TLdeserialize(data, data.readInt32(false), false));
                } else {
                    messages.add((Object) null);
                }
                data.reuse();
                res.photos.add(photo);
            }
        }
        cursor.dispose();
        Utilities.stageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda85(this, res, messages, did, count, maxId, classGuid));
    }

    /* renamed from: lambda$getDialogPhotos$63$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m889lambda$getDialogPhotos$63$orgtelegrammessengerMessagesStorage(TLRPC.photos_Photos res, ArrayList messages, long did, int count, int maxId, int classGuid) {
        getMessagesController().processLoadedUserPhotos(res, messages, did, count, maxId, true, classGuid);
    }

    public void clearUserPhotos(long dialogId) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda155(this, dialogId));
    }

    /* renamed from: lambda$clearUserPhotos$65$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m861lambda$clearUserPhotos$65$orgtelegrammessengerMessagesStorage(long dialogId) {
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM user_photos WHERE uid = " + dialogId).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void clearUserPhoto(long dialogId, long pid) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda176(this, dialogId, pid));
    }

    /* renamed from: lambda$clearUserPhoto$66$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m860lambda$clearUserPhoto$66$orgtelegrammessengerMessagesStorage(long dialogId, long pid) {
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM user_photos WHERE uid = " + dialogId + " AND id = " + pid).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void resetDialogs(TLRPC.messages_Dialogs dialogsRes, int messagesCount, int seq, int newPts, int date, int qts, LongSparseArray<TLRPC.Dialog> new_dialogs_dict, LongSparseArray<MessageObject> new_dialogMessage, TLRPC.Message lastMessage, int dialogsCount) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda83(this, dialogsRes, dialogsCount, seq, newPts, date, qts, lastMessage, messagesCount, new_dialogs_dict, new_dialogMessage));
    }

    /* renamed from: lambda$resetDialogs$68$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m983lambda$resetDialogs$68$orgtelegrammessengerMessagesStorage(TLRPC.messages_Dialogs dialogsRes, int dialogsCount, int seq, int newPts, int date, int qts, TLRPC.Message lastMessage, int messagesCount, LongSparseArray new_dialogs_dict, LongSparseArray new_dialogMessage) {
        String ids;
        TLRPC.messages_Dialogs messages_dialogs = dialogsRes;
        TLRPC.Message message = lastMessage;
        int maxPinnedNum = 0;
        try {
            ArrayList arrayList = new ArrayList();
            int totalPinnedCount = messages_dialogs.dialogs.size() - dialogsCount;
            LongSparseIntArray oldPinnedDialogNums = new LongSparseIntArray();
            ArrayList<Long> oldPinnedOrder = new ArrayList<>();
            ArrayList<Long> orderArrayList = new ArrayList<>();
            for (int a = dialogsCount; a < messages_dialogs.dialogs.size(); a++) {
                orderArrayList.add(Long.valueOf(messages_dialogs.dialogs.get(a).id));
            }
            SQLiteCursor cursor = this.database.queryFinalized("SELECT did, pinned FROM dialogs WHERE 1", new Object[0]);
            while (cursor.next()) {
                long did = cursor.longValue(0);
                int pinnedNum = cursor.intValue(1);
                if (!DialogObject.isEncryptedDialog(did)) {
                    arrayList.add(Long.valueOf(did));
                    if (pinnedNum > 0) {
                        maxPinnedNum = Math.max(pinnedNum, maxPinnedNum);
                        oldPinnedDialogNums.put(did, pinnedNum);
                        oldPinnedOrder.add(Long.valueOf(did));
                    }
                }
            }
            Collections.sort(oldPinnedOrder, new MessagesStorage$$ExternalSyntheticLambda103(oldPinnedDialogNums));
            while (oldPinnedOrder.size() < totalPinnedCount) {
                oldPinnedOrder.add(0, 0L);
            }
            cursor.dispose();
            String ids2 = "(" + TextUtils.join(",", arrayList) + ")";
            this.database.beginTransaction();
            this.database.executeFast("DELETE FROM chat_pinned_count WHERE uid IN " + ids2).stepThis().dispose();
            this.database.executeFast("DELETE FROM chat_pinned_v2 WHERE uid IN " + ids2).stepThis().dispose();
            this.database.executeFast("DELETE FROM dialogs WHERE did IN " + ids2).stepThis().dispose();
            this.database.executeFast("DELETE FROM messages_v2 WHERE uid IN " + ids2).stepThis().dispose();
            this.database.executeFast("DELETE FROM polls_v2 WHERE 1").stepThis().dispose();
            this.database.executeFast("DELETE FROM bot_keyboard WHERE uid IN " + ids2).stepThis().dispose();
            this.database.executeFast("DELETE FROM media_v4 WHERE uid IN " + ids2).stepThis().dispose();
            this.database.executeFast("DELETE FROM messages_holes WHERE uid IN " + ids2).stepThis().dispose();
            this.database.executeFast("DELETE FROM media_holes_v2 WHERE uid IN " + ids2).stepThis().dispose();
            this.database.commitTransaction();
            int a2 = 0;
            while (a2 < totalPinnedCount) {
                TLRPC.Dialog dialog = messages_dialogs.dialogs.get(dialogsCount + a2);
                if (!(dialog instanceof TLRPC.TL_dialog) || dialog.pinned) {
                    int newIdx = orderArrayList.indexOf(Long.valueOf(dialog.id));
                    int oldIdx = oldPinnedOrder.indexOf(Long.valueOf(dialog.id));
                    if (oldIdx == -1 || newIdx == -1) {
                        int i = oldIdx;
                        ids = ids2;
                    } else if (oldIdx == newIdx) {
                        int i2 = oldIdx;
                        ids = ids2;
                        int oldNum = oldPinnedDialogNums.get(dialog.id, -1);
                        if (oldNum != -1) {
                            dialog.pinnedNum = oldNum;
                        }
                        int i3 = newIdx;
                    } else {
                        ids = ids2;
                        int i4 = newIdx;
                        int oldNum2 = oldPinnedDialogNums.get(oldPinnedOrder.get(newIdx).longValue(), -1);
                        if (oldNum2 != -1) {
                            dialog.pinnedNum = oldNum2;
                        }
                    }
                    if (dialog.pinnedNum == 0) {
                        dialog.pinnedNum = (totalPinnedCount - a2) + maxPinnedNum;
                    }
                } else {
                    ids = ids2;
                }
                a2++;
                ids2 = ids;
            }
            String ids3 = ids2;
            putDialogsInternal(messages_dialogs, 0);
            m991lambda$saveDiffParams$32$orgtelegrammessengerMessagesStorage(seq, newPts, date, qts);
            long dialogsLoadOffsetChannelId = 0;
            long dialogsLoadOffsetChatId = 0;
            long dialogsLoadOffsetUserId = 0;
            long dialogsLoadOffsetAccess = 0;
            int totalDialogsLoadCount = messages_dialogs.dialogs.size() + getUserConfig().getTotalDialogsCount(0);
            int dialogsLoadOffsetId = message.id;
            int dialogsLoadOffsetDate = message.date;
            int i5 = maxPinnedNum;
            if (message.peer_id.channel_id != 0) {
                dialogsLoadOffsetChannelId = message.peer_id.channel_id;
                dialogsLoadOffsetChatId = 0;
                dialogsLoadOffsetUserId = 0;
                int a3 = 0;
                while (true) {
                    if (a3 >= messages_dialogs.chats.size()) {
                        break;
                    }
                    TLRPC.Chat chat = messages_dialogs.chats.get(a3);
                    if (chat.id == dialogsLoadOffsetChannelId) {
                        dialogsLoadOffsetAccess = chat.access_hash;
                        break;
                    } else {
                        a3++;
                        int i6 = qts;
                    }
                }
            } else if (message.peer_id.chat_id != 0) {
                dialogsLoadOffsetChatId = message.peer_id.chat_id;
                dialogsLoadOffsetChannelId = 0;
                dialogsLoadOffsetUserId = 0;
                int a4 = 0;
                while (true) {
                    if (a4 >= messages_dialogs.chats.size()) {
                        break;
                    }
                    TLRPC.Chat chat2 = messages_dialogs.chats.get(a4);
                    if (chat2.id == dialogsLoadOffsetChatId) {
                        dialogsLoadOffsetAccess = chat2.access_hash;
                        break;
                    }
                    a4++;
                }
            } else if (message.peer_id.user_id != 0) {
                dialogsLoadOffsetUserId = message.peer_id.user_id;
                dialogsLoadOffsetChatId = 0;
                dialogsLoadOffsetChannelId = 0;
                int a5 = 0;
                while (true) {
                    if (a5 >= messages_dialogs.users.size()) {
                        break;
                    }
                    TLRPC.User user = messages_dialogs.users.get(a5);
                    if (user.id == dialogsLoadOffsetUserId) {
                        dialogsLoadOffsetAccess = user.access_hash;
                        break;
                    }
                    a5++;
                }
            }
            for (int a6 = 0; a6 < 2; a6++) {
                getUserConfig().setDialogsLoadOffset(a6, dialogsLoadOffsetId, dialogsLoadOffsetDate, dialogsLoadOffsetUserId, dialogsLoadOffsetChatId, dialogsLoadOffsetChannelId, dialogsLoadOffsetAccess);
                getUserConfig().setTotalDialogsCount(a6, totalDialogsLoadCount);
            }
            getUserConfig().draftsLoaded = false;
            getUserConfig().saveConfig(false);
            int i7 = totalDialogsLoadCount;
            String str = ids3;
            SQLiteCursor sQLiteCursor = cursor;
            ArrayList<Long> arrayList2 = orderArrayList;
            ArrayList<Long> arrayList3 = oldPinnedOrder;
            LongSparseIntArray longSparseIntArray = oldPinnedDialogNums;
            getMessagesController().completeDialogsReset(dialogsRes, messagesCount, seq, newPts, date, qts, new_dialogs_dict, new_dialogMessage, lastMessage);
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    static /* synthetic */ int lambda$resetDialogs$67(LongSparseIntArray oldPinnedDialogNums, Long o1, Long o2) {
        int val1 = oldPinnedDialogNums.get(o1.longValue());
        int val2 = oldPinnedDialogNums.get(o2.longValue());
        if (val1 < val2) {
            return 1;
        }
        if (val1 > val2) {
            return -1;
        }
        return 0;
    }

    public void putDialogPhotos(long did, TLRPC.photos_Photos photos, ArrayList<TLRPC.Message> messages) {
        if (photos != null) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda8(this, did, photos, messages));
        }
    }

    /* renamed from: lambda$putDialogPhotos$69$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m962lambda$putDialogPhotos$69$orgtelegrammessengerMessagesStorage(long did, TLRPC.photos_Photos photos, ArrayList messages) {
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM user_photos WHERE uid = " + did).stepThis().dispose();
            SQLitePreparedStatement state = this.database.executeFast("REPLACE INTO user_photos VALUES(?, ?, ?)");
            int N = photos.photos.size();
            for (int a = 0; a < N; a++) {
                TLRPC.Photo photo = photos.photos.get(a);
                if (!(photo instanceof TLRPC.TL_photoEmpty)) {
                    state.requery();
                    int size = photo.getObjectSize();
                    if (messages != null) {
                        size += ((TLRPC.Message) messages.get(a)).getObjectSize();
                    }
                    NativeByteBuffer data = new NativeByteBuffer(size);
                    photo.serializeToStream(data);
                    if (messages != null) {
                        ((TLRPC.Message) messages.get(a)).serializeToStream(data);
                    }
                    state.bindLong(1, did);
                    state.bindLong(2, photo.id);
                    state.bindByteBuffer(3, data);
                    state.step();
                    data.reuse();
                }
            }
            state.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void emptyMessagesMedia(long dialogId, ArrayList<Integer> mids) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda42(this, mids, dialogId));
    }

    /* JADX WARNING: Removed duplicated region for block: B:42:0x0138 A[SYNTHETIC, Splitter:B:42:0x0138] */
    /* JADX WARNING: Removed duplicated region for block: B:44:0x013e A[SYNTHETIC, Splitter:B:44:0x013e] */
    /* JADX WARNING: Removed duplicated region for block: B:48:0x014a A[Catch:{ Exception -> 0x01d4 }] */
    /* JADX WARNING: Removed duplicated region for block: B:49:0x014d A[Catch:{ Exception -> 0x01d4 }] */
    /* JADX WARNING: Removed duplicated region for block: B:54:0x015e A[Catch:{ Exception -> 0x01d4 }] */
    /* JADX WARNING: Removed duplicated region for block: B:55:0x0160 A[Catch:{ Exception -> 0x01d4 }] */
    /* JADX WARNING: Removed duplicated region for block: B:59:0x0172 A[SYNTHETIC, Splitter:B:59:0x0172] */
    /* JADX WARNING: Removed duplicated region for block: B:61:0x0187 A[SYNTHETIC, Splitter:B:61:0x0187] */
    /* JADX WARNING: Removed duplicated region for block: B:66:0x0190 A[SYNTHETIC, Splitter:B:66:0x0190] */
    /* JADX WARNING: Removed duplicated region for block: B:72:0x01a3  */
    /* JADX WARNING: Removed duplicated region for block: B:77:0x01b8 A[Catch:{ Exception -> 0x01d4 }] */
    /* JADX WARNING: Removed duplicated region for block: B:99:0x01bb A[SYNTHETIC] */
    /* renamed from: lambda$emptyMessagesMedia$72$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void m880x3833cc5f(java.util.ArrayList r19, long r20) {
        /*
            r18 = this;
            r7 = r18
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x01ef }
            r0.<init>()     // Catch:{ Exception -> 0x01ef }
            java.util.ArrayList r1 = new java.util.ArrayList     // Catch:{ Exception -> 0x01ef }
            r1.<init>()     // Catch:{ Exception -> 0x01ef }
            r8 = r1
            java.util.ArrayList r1 = new java.util.ArrayList     // Catch:{ Exception -> 0x01ef }
            r1.<init>()     // Catch:{ Exception -> 0x01ef }
            r9 = r1
            java.util.ArrayList r1 = new java.util.ArrayList     // Catch:{ Exception -> 0x01ef }
            r1.<init>()     // Catch:{ Exception -> 0x01ef }
            r10 = r1
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x01ef }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x01ef }
            java.lang.String r3 = "SELECT data, mid, date, uid FROM messages_v2 WHERE mid IN (%s) AND uid = %d"
            r11 = 2
            java.lang.Object[] r4 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x01ef }
            java.lang.String r5 = ","
            r12 = r19
            java.lang.String r5 = android.text.TextUtils.join(r5, r12)     // Catch:{ Exception -> 0x01ed }
            r13 = 0
            r4[r13] = r5     // Catch:{ Exception -> 0x01ed }
            java.lang.Long r5 = java.lang.Long.valueOf(r20)     // Catch:{ Exception -> 0x01ed }
            r14 = 1
            r4[r14] = r5     // Catch:{ Exception -> 0x01ed }
            java.lang.String r2 = java.lang.String.format(r2, r3, r4)     // Catch:{ Exception -> 0x01ed }
            java.lang.Object[] r3 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x01ed }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r2, r3)     // Catch:{ Exception -> 0x01ed }
            r15 = r1
        L_0x003f:
            boolean r1 = r15.next()     // Catch:{ Exception -> 0x01ed }
            r6 = 3
            if (r1 == 0) goto L_0x00c4
            org.telegram.tgnet.NativeByteBuffer r1 = r15.byteBufferValue(r13)     // Catch:{ Exception -> 0x01ed }
            r5 = r1
            if (r5 == 0) goto L_0x00bf
            int r1 = r5.readInt32(r13)     // Catch:{ Exception -> 0x01ed }
            org.telegram.tgnet.TLRPC$Message r1 = org.telegram.tgnet.TLRPC.Message.TLdeserialize(r5, r1, r13)     // Catch:{ Exception -> 0x01ed }
            r4 = r1
            org.telegram.messenger.UserConfig r1 = r18.getUserConfig()     // Catch:{ Exception -> 0x01ed }
            long r1 = r1.clientUserId     // Catch:{ Exception -> 0x01ed }
            r4.readAttachPath(r5, r1)     // Catch:{ Exception -> 0x01ed }
            r5.reuse()     // Catch:{ Exception -> 0x01ed }
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r4.media     // Catch:{ Exception -> 0x01ed }
            if (r1 == 0) goto L_0x00bb
            r16 = 1
            r1 = r18
            r2 = r4
            r3 = r0
            r13 = r4
            r4 = r9
            r17 = r5
            r5 = r8
            r6 = r16
            boolean r1 = r1.addFilesToDelete(r2, r3, r4, r5, r6)     // Catch:{ Exception -> 0x01ed }
            if (r1 != 0) goto L_0x007b
            r13 = 0
            goto L_0x003f
        L_0x007b:
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r13.media     // Catch:{ Exception -> 0x01ed }
            org.telegram.tgnet.TLRPC$Document r1 = r1.document     // Catch:{ Exception -> 0x01ed }
            if (r1 == 0) goto L_0x008b
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r13.media     // Catch:{ Exception -> 0x01ed }
            org.telegram.tgnet.TLRPC$TL_documentEmpty r2 = new org.telegram.tgnet.TLRPC$TL_documentEmpty     // Catch:{ Exception -> 0x01ed }
            r2.<init>()     // Catch:{ Exception -> 0x01ed }
            r1.document = r2     // Catch:{ Exception -> 0x01ed }
            goto L_0x009a
        L_0x008b:
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r13.media     // Catch:{ Exception -> 0x01ed }
            org.telegram.tgnet.TLRPC$Photo r1 = r1.photo     // Catch:{ Exception -> 0x01ed }
            if (r1 == 0) goto L_0x009a
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r13.media     // Catch:{ Exception -> 0x01ed }
            org.telegram.tgnet.TLRPC$TL_photoEmpty r2 = new org.telegram.tgnet.TLRPC$TL_photoEmpty     // Catch:{ Exception -> 0x01ed }
            r2.<init>()     // Catch:{ Exception -> 0x01ed }
            r1.photo = r2     // Catch:{ Exception -> 0x01ed }
        L_0x009a:
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r13.media     // Catch:{ Exception -> 0x01ed }
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r13.media     // Catch:{ Exception -> 0x01ed }
            int r2 = r2.flags     // Catch:{ Exception -> 0x01ed }
            r2 = r2 & -2
            r1.flags = r2     // Catch:{ Exception -> 0x01ed }
            int r1 = r15.intValue(r14)     // Catch:{ Exception -> 0x01ed }
            r13.id = r1     // Catch:{ Exception -> 0x01ed }
            int r1 = r15.intValue(r11)     // Catch:{ Exception -> 0x01ed }
            r13.date = r1     // Catch:{ Exception -> 0x01ed }
            r1 = 3
            long r1 = r15.longValue(r1)     // Catch:{ Exception -> 0x01ed }
            r13.dialog_id = r1     // Catch:{ Exception -> 0x01ed }
            r10.add(r13)     // Catch:{ Exception -> 0x01ed }
            goto L_0x00c1
        L_0x00bb:
            r13 = r4
            r17 = r5
            goto L_0x00c1
        L_0x00bf:
            r17 = r5
        L_0x00c1:
            r13 = 0
            goto L_0x003f
        L_0x00c4:
            r1 = 3
            r15.dispose()     // Catch:{ Exception -> 0x01ed }
            r7.deleteFromDownloadQueue(r9, r14)     // Catch:{ Exception -> 0x01ed }
            boolean r2 = r10.isEmpty()     // Catch:{ Exception -> 0x01ed }
            if (r2 != 0) goto L_0x01d8
            org.telegram.SQLite.SQLiteDatabase r2 = r7.database     // Catch:{ Exception -> 0x01ed }
            java.lang.String r3 = "REPLACE INTO messages_v2 VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?, ?, ?, ?, ?, ?, 0)"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r3)     // Catch:{ Exception -> 0x01ed }
            r3 = 0
        L_0x00da:
            int r4 = r10.size()     // Catch:{ Exception -> 0x01ed }
            if (r3 >= r4) goto L_0x01c5
            java.lang.Object r4 = r10.get(r3)     // Catch:{ Exception -> 0x01d4 }
            org.telegram.tgnet.TLRPC$Message r4 = (org.telegram.tgnet.TLRPC.Message) r4     // Catch:{ Exception -> 0x01d4 }
            org.telegram.tgnet.NativeByteBuffer r5 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x01d4 }
            int r6 = r4.getObjectSize()     // Catch:{ Exception -> 0x01d4 }
            r5.<init>((int) r6)     // Catch:{ Exception -> 0x01d4 }
            r4.serializeToStream(r5)     // Catch:{ Exception -> 0x01d4 }
            r2.requery()     // Catch:{ Exception -> 0x01d4 }
            int r6 = r4.id     // Catch:{ Exception -> 0x01d4 }
            r2.bindInteger(r14, r6)     // Catch:{ Exception -> 0x01d4 }
            r13 = r15
            long r14 = r4.dialog_id     // Catch:{ Exception -> 0x01d4 }
            r2.bindLong(r11, r14)     // Catch:{ Exception -> 0x01d4 }
            int r14 = org.telegram.messenger.MessageObject.getUnreadFlags(r4)     // Catch:{ Exception -> 0x01d4 }
            r2.bindInteger(r1, r14)     // Catch:{ Exception -> 0x01d4 }
            r14 = 4
            int r15 = r4.send_state     // Catch:{ Exception -> 0x01d4 }
            r2.bindInteger(r14, r15)     // Catch:{ Exception -> 0x01d4 }
            r14 = 5
            int r15 = r4.date     // Catch:{ Exception -> 0x01d4 }
            r2.bindInteger(r14, r15)     // Catch:{ Exception -> 0x01d4 }
            r14 = 6
            r2.bindByteBuffer((int) r14, (org.telegram.tgnet.NativeByteBuffer) r5)     // Catch:{ Exception -> 0x01d4 }
            r14 = 7
            boolean r15 = org.telegram.messenger.MessageObject.isOut(r4)     // Catch:{ Exception -> 0x01d4 }
            if (r15 != 0) goto L_0x0125
            boolean r15 = r4.from_scheduled     // Catch:{ Exception -> 0x01ed }
            if (r15 == 0) goto L_0x0123
            goto L_0x0125
        L_0x0123:
            r15 = 0
            goto L_0x0126
        L_0x0125:
            r15 = 1
        L_0x0126:
            r2.bindInteger(r14, r15)     // Catch:{ Exception -> 0x01d4 }
            r14 = 8
            int r15 = r4.ttl     // Catch:{ Exception -> 0x01d4 }
            r2.bindInteger(r14, r15)     // Catch:{ Exception -> 0x01d4 }
            int r14 = r4.flags     // Catch:{ Exception -> 0x01d4 }
            r14 = r14 & 1024(0x400, float:1.435E-42)
            r15 = 9
            if (r14 == 0) goto L_0x013e
            int r14 = r4.views     // Catch:{ Exception -> 0x01ed }
            r2.bindInteger(r15, r14)     // Catch:{ Exception -> 0x01ed }
            goto L_0x0145
        L_0x013e:
            int r14 = r7.getMessageMediaType(r4)     // Catch:{ Exception -> 0x01d4 }
            r2.bindInteger(r15, r14)     // Catch:{ Exception -> 0x01d4 }
        L_0x0145:
            r14 = 0
            int r15 = r4.stickerVerified     // Catch:{ Exception -> 0x01d4 }
            if (r15 != 0) goto L_0x014d
            r14 = r14 | 1
            goto L_0x0153
        L_0x014d:
            int r15 = r4.stickerVerified     // Catch:{ Exception -> 0x01d4 }
            if (r15 != r11) goto L_0x0153
            r14 = r14 | 2
        L_0x0153:
            r15 = 10
            r2.bindInteger(r15, r14)     // Catch:{ Exception -> 0x01d4 }
            r15 = 11
            boolean r1 = r4.mentioned     // Catch:{ Exception -> 0x01d4 }
            if (r1 == 0) goto L_0x0160
            r1 = 1
            goto L_0x0161
        L_0x0160:
            r1 = 0
        L_0x0161:
            r2.bindInteger(r15, r1)     // Catch:{ Exception -> 0x01d4 }
            r1 = 12
            int r15 = r4.forwards     // Catch:{ Exception -> 0x01d4 }
            r2.bindInteger(r1, r15)     // Catch:{ Exception -> 0x01d4 }
            r1 = 0
            org.telegram.tgnet.TLRPC$MessageReplies r15 = r4.replies     // Catch:{ Exception -> 0x01d4 }
            r6 = 13
            if (r15 == 0) goto L_0x0187
            org.telegram.tgnet.NativeByteBuffer r15 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x01ed }
            org.telegram.tgnet.TLRPC$MessageReplies r11 = r4.replies     // Catch:{ Exception -> 0x01ed }
            int r11 = r11.getObjectSize()     // Catch:{ Exception -> 0x01ed }
            r15.<init>((int) r11)     // Catch:{ Exception -> 0x01ed }
            r1 = r15
            org.telegram.tgnet.TLRPC$MessageReplies r11 = r4.replies     // Catch:{ Exception -> 0x01ed }
            r11.serializeToStream(r1)     // Catch:{ Exception -> 0x01ed }
            r2.bindByteBuffer((int) r6, (org.telegram.tgnet.NativeByteBuffer) r1)     // Catch:{ Exception -> 0x01ed }
            goto L_0x018a
        L_0x0187:
            r2.bindNull(r6)     // Catch:{ Exception -> 0x01d4 }
        L_0x018a:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r6 = r4.reply_to     // Catch:{ Exception -> 0x01d4 }
            r11 = 14
            if (r6 == 0) goto L_0x01a3
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r6 = r4.reply_to     // Catch:{ Exception -> 0x01ed }
            int r6 = r6.reply_to_top_id     // Catch:{ Exception -> 0x01ed }
            if (r6 == 0) goto L_0x019b
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r6 = r4.reply_to     // Catch:{ Exception -> 0x01ed }
            int r6 = r6.reply_to_top_id     // Catch:{ Exception -> 0x01ed }
            goto L_0x019f
        L_0x019b:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r6 = r4.reply_to     // Catch:{ Exception -> 0x01ed }
            int r6 = r6.reply_to_msg_id     // Catch:{ Exception -> 0x01ed }
        L_0x019f:
            r2.bindInteger(r11, r6)     // Catch:{ Exception -> 0x01ed }
            goto L_0x01a7
        L_0x01a3:
            r6 = 0
            r2.bindInteger(r11, r6)     // Catch:{ Exception -> 0x01d4 }
        L_0x01a7:
            long r6 = org.telegram.messenger.MessageObject.getChannelId(r4)     // Catch:{ Exception -> 0x01d4 }
            r11 = 15
            r2.bindLong(r11, r6)     // Catch:{ Exception -> 0x01d4 }
            r2.step()     // Catch:{ Exception -> 0x01d4 }
            r5.reuse()     // Catch:{ Exception -> 0x01d4 }
            if (r1 == 0) goto L_0x01bb
            r1.reuse()     // Catch:{ Exception -> 0x01d4 }
        L_0x01bb:
            int r3 = r3 + 1
            r1 = 3
            r11 = 2
            r14 = 1
            r7 = r18
            r15 = r13
            goto L_0x00da
        L_0x01c5:
            r13 = r15
            r2.dispose()     // Catch:{ Exception -> 0x01d4 }
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda30 r1 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda30     // Catch:{ Exception -> 0x01d4 }
            r3 = r18
            r1.<init>(r3, r10)     // Catch:{ Exception -> 0x01eb }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r1)     // Catch:{ Exception -> 0x01eb }
            goto L_0x01da
        L_0x01d4:
            r0 = move-exception
            r3 = r18
            goto L_0x01f3
        L_0x01d8:
            r3 = r7
            r13 = r15
        L_0x01da:
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda31 r1 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda31     // Catch:{ Exception -> 0x01eb }
            r1.<init>(r3, r8)     // Catch:{ Exception -> 0x01eb }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r1)     // Catch:{ Exception -> 0x01eb }
            org.telegram.messenger.FileLoader r1 = r18.getFileLoader()     // Catch:{ Exception -> 0x01eb }
            r2 = 0
            r1.deleteFiles(r0, r2)     // Catch:{ Exception -> 0x01eb }
            goto L_0x01f6
        L_0x01eb:
            r0 = move-exception
            goto L_0x01f3
        L_0x01ed:
            r0 = move-exception
            goto L_0x01f2
        L_0x01ef:
            r0 = move-exception
            r12 = r19
        L_0x01f2:
            r3 = r7
        L_0x01f3:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x01f6:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.m880x3833cc5f(java.util.ArrayList, long):void");
    }

    /* renamed from: lambda$emptyMessagesMedia$70$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m878x89f7eaa1(ArrayList messages) {
        for (int a = 0; a < messages.size(); a++) {
            getNotificationCenter().postNotificationName(NotificationCenter.updateMessageMedia, messages.get(a));
        }
    }

    /* renamed from: lambda$emptyMessagesMedia$71$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m879xe115db80(ArrayList namesToDelete) {
        getFileLoader().cancelLoadFiles(namesToDelete);
    }

    public void updateMessagePollResults(long pollId, TLRPC.Poll poll, TLRPC.PollResults results) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda6(this, pollId, poll, results));
    }

    /* renamed from: lambda$updateMessagePollResults$73$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m1018x25689dac(long pollId, TLRPC.Poll poll, TLRPC.PollResults results) {
        SQLitePreparedStatement state;
        TLRPC.Poll poll2 = poll;
        TLRPC.PollResults pollResults = results;
        LongSparseArray<ArrayList<Integer>> dialogs = null;
        try {
            SQLiteCursor cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT uid, mid FROM polls_v2 WHERE id = %d", new Object[]{Long.valueOf(pollId)}), new Object[0]);
            while (cursor.next()) {
                long dialogId = cursor.longValue(0);
                if (dialogs == null) {
                    dialogs = new LongSparseArray<>();
                }
                ArrayList<Integer> mids = dialogs.get(dialogId);
                if (mids == null) {
                    mids = new ArrayList<>();
                    dialogs.put(dialogId, mids);
                }
                mids.add(Integer.valueOf(cursor.intValue(1)));
            }
            cursor.dispose();
            if (dialogs != null) {
                this.database.beginTransaction();
                SQLitePreparedStatement state2 = this.database.executeFast("UPDATE messages_v2 SET data = ? WHERE mid = ? AND uid = ?");
                int b = 0;
                int N2 = dialogs.size();
                while (b < N2) {
                    long dialogId2 = dialogs.keyAt(b);
                    ArrayList<Integer> mids2 = dialogs.valueAt(b);
                    int a = 0;
                    int N = mids2.size();
                    while (a < N) {
                        Integer mid = mids2.get(a);
                        LongSparseArray<ArrayList<Integer>> dialogs2 = dialogs;
                        SQLiteCursor sQLiteCursor = cursor;
                        int N22 = N2;
                        SQLiteCursor cursor2 = this.database.queryFinalized(String.format(Locale.US, "SELECT data FROM messages_v2 WHERE mid = %d AND uid = %d", new Object[]{mid, Long.valueOf(dialogId2)}), new Object[0]);
                        if (cursor2.next()) {
                            NativeByteBuffer data = cursor2.byteBufferValue(0);
                            if (data != null) {
                                TLRPC.Message message = TLRPC.Message.TLdeserialize(data, data.readInt32(false), false);
                                SQLitePreparedStatement state3 = state2;
                                message.readAttachPath(data, getUserConfig().clientUserId);
                                data.reuse();
                                if (message.media instanceof TLRPC.TL_messageMediaPoll) {
                                    TLRPC.TL_messageMediaPoll media = (TLRPC.TL_messageMediaPoll) message.media;
                                    if (poll2 != null) {
                                        media.poll = poll2;
                                    }
                                    if (pollResults != null) {
                                        MessageObject.updatePollResults(media, pollResults);
                                    }
                                    NativeByteBuffer data2 = new NativeByteBuffer(message.getObjectSize());
                                    message.serializeToStream(data2);
                                    state3.requery();
                                    state = state3;
                                    state.bindByteBuffer(1, data2);
                                    state.bindInteger(2, mid.intValue());
                                    state.bindLong(3, dialogId2);
                                    state.step();
                                    data2.reuse();
                                } else {
                                    state = state3;
                                }
                            } else {
                                state = state2;
                            }
                        } else {
                            state = state2;
                            this.database.executeFast(String.format(Locale.US, "DELETE FROM polls_v2 WHERE mid = %d AND uid = %d", new Object[]{mid, Long.valueOf(dialogId2)})).stepThis().dispose();
                        }
                        cursor2.dispose();
                        a++;
                        poll2 = poll;
                        cursor = cursor2;
                        state2 = state;
                        dialogs = dialogs2;
                        N2 = N22;
                    }
                    SQLiteCursor sQLiteCursor2 = cursor;
                    SQLitePreparedStatement sQLitePreparedStatement = state2;
                    b++;
                    poll2 = poll;
                    N2 = N2;
                }
                int i = N2;
                state2.dispose();
                this.database.commitTransaction();
                return;
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void updateMessageReactions(long dialogId, int msgId, TLRPC.TL_messageReactions reactions) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda141(this, msgId, dialogId, reactions));
    }

    /* renamed from: lambda$updateMessageReactions$74$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m1019xb1bf0ebe(int msgId, long dialogId, TLRPC.TL_messageReactions reactions) {
        NativeByteBuffer data;
        try {
            this.database.beginTransaction();
            SQLiteCursor cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT data FROM messages_v2 WHERE mid = %d AND uid = %d", new Object[]{Integer.valueOf(msgId), Long.valueOf(dialogId)}), new Object[0]);
            if (cursor.next() && (data = cursor.byteBufferValue(0)) != null) {
                TLRPC.Message message = TLRPC.Message.TLdeserialize(data, data.readInt32(false), false);
                if (message != null) {
                    message.readAttachPath(data, getUserConfig().clientUserId);
                    data.reuse();
                    MessageObject.updateReactions(message, reactions);
                    SQLitePreparedStatement state = this.database.executeFast("UPDATE messages_v2 SET data = ? WHERE mid = ? AND uid = ?");
                    NativeByteBuffer data2 = new NativeByteBuffer(message.getObjectSize());
                    message.serializeToStream(data2);
                    state.requery();
                    state.bindByteBuffer(1, data2);
                    state.bindInteger(2, msgId);
                    state.bindLong(3, dialogId);
                    state.step();
                    data2.reuse();
                    state.dispose();
                } else {
                    data.reuse();
                }
            }
            cursor.dispose();
            this.database.commitTransaction();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void getNewTask(LongSparseArray<ArrayList<Integer>> oldTask, LongSparseArray<ArrayList<Integer>> oldTaskMedia) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda19(this, oldTask, oldTaskMedia));
    }

    /* renamed from: lambda$getNewTask$75$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m900lambda$getNewTask$75$orgtelegrammessengerMessagesStorage(LongSparseArray oldTask, LongSparseArray oldTaskMedia) {
        boolean media;
        LongSparseArray<ArrayList<Integer>> task;
        ArrayList<Integer> arr;
        LongSparseArray longSparseArray = oldTask;
        LongSparseArray longSparseArray2 = oldTaskMedia;
        int i = 2;
        int i2 = 0;
        if (longSparseArray != null) {
            try {
                int N = oldTask.size();
                for (int a = 0; a < N; a++) {
                    this.database.executeFast(String.format(Locale.US, "DELETE FROM enc_tasks_v4 WHERE mid IN(%s) AND uid = %d AND media = 0", new Object[]{TextUtils.join(",", (Iterable) longSparseArray.valueAt(a)), Long.valueOf(longSparseArray.keyAt(a))})).stepThis().dispose();
                }
            } catch (Exception e) {
                FileLog.e((Throwable) e);
                return;
            }
        }
        if (longSparseArray2 != null) {
            int N2 = oldTaskMedia.size();
            for (int a2 = 0; a2 < N2; a2++) {
                this.database.executeFast(String.format(Locale.US, "DELETE FROM enc_tasks_v4 WHERE mid IN(%s) AND uid = %d AND media = 1", new Object[]{TextUtils.join(",", (Iterable) longSparseArray2.valueAt(a2)), Long.valueOf(longSparseArray2.keyAt(a2))})).stepThis().dispose();
            }
        }
        int date = 0;
        LongSparseArray<ArrayList<Integer>> newTask = null;
        LongSparseArray<ArrayList<Integer>> newTaskMedia = null;
        SQLiteCursor cursor = this.database.queryFinalized("SELECT mid, date, media, uid FROM enc_tasks_v4 WHERE date = (SELECT min(date) FROM enc_tasks_v4)", new Object[0]);
        while (cursor.next()) {
            int mid = cursor.intValue(i2);
            date = cursor.intValue(1);
            int isMedia = cursor.intValue(i);
            long uid = cursor.longValue(3);
            if (isMedia == -1) {
                media = mid > 0;
            } else {
                media = isMedia != 0;
            }
            if (media) {
                if (newTaskMedia == null) {
                    newTaskMedia = new LongSparseArray<>();
                }
                task = newTaskMedia;
            } else {
                if (newTask == null) {
                    newTask = new LongSparseArray<>();
                }
                task = newTask;
            }
            ArrayList<Integer> arr2 = task.get(uid);
            if (arr2 == null) {
                arr = new ArrayList<>();
                task.put(uid, arr);
            } else {
                arr = arr2;
            }
            arr.add(Integer.valueOf(mid));
            i = 2;
            i2 = 0;
        }
        cursor.dispose();
        getMessagesController().processLoadedDeleteTask(date, newTask, newTaskMedia);
    }

    public void markMentionMessageAsRead(long dialogId, int messageId, long did) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda140(this, messageId, dialogId, did));
    }

    /* renamed from: lambda$markMentionMessageAsRead$76$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m938x6aee1422(int messageId, long dialogId, long did) {
        try {
            this.database.executeFast(String.format(Locale.US, "UPDATE messages_v2 SET read_state = read_state | 2 WHERE mid = %d AND uid = %d", new Object[]{Integer.valueOf(messageId), Long.valueOf(dialogId)})).stepThis().dispose();
            SQLiteDatabase sQLiteDatabase = this.database;
            SQLiteCursor cursor = sQLiteDatabase.queryFinalized("SELECT unread_count_i FROM dialogs WHERE did = " + did, new Object[0]);
            int old_mentions_count = 0;
            if (cursor.next()) {
                old_mentions_count = Math.max(0, cursor.intValue(0) - 1);
            }
            cursor.dispose();
            this.database.executeFast(String.format(Locale.US, "UPDATE dialogs SET unread_count_i = %d WHERE did = %d", new Object[]{Integer.valueOf(old_mentions_count), Long.valueOf(did)})).stepThis().dispose();
            LongSparseIntArray sparseArray = new LongSparseIntArray(1);
            sparseArray.put(did, old_mentions_count);
            if (old_mentions_count == 0) {
                updateFiltersReadCounter((LongSparseIntArray) null, sparseArray, true);
            }
            getMessagesController().processDialogsUpdateRead((LongSparseIntArray) null, sparseArray);
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void markMessageAsMention(long dialogId, int mid) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda132(this, mid, dialogId));
    }

    /* renamed from: lambda$markMessageAsMention$77$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m939xd203CLASSNAMEd(int mid, long dialogId) {
        try {
            this.database.executeFast(String.format(Locale.US, "UPDATE messages_v2 SET mention = 1, read_state = read_state & ~2 WHERE mid = %d AND uid = %d", new Object[]{Integer.valueOf(mid), Long.valueOf(dialogId)})).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void resetMentionsCount(long did, int count) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda161(this, did, count));
    }

    /* renamed from: lambda$resetMentionsCount$78$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m984x48b166a5(long did, int count) {
        int prevUnreadCount = 0;
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            SQLiteCursor cursor = sQLiteDatabase.queryFinalized("SELECT unread_count_i FROM dialogs WHERE did = " + did, new Object[0]);
            if (cursor.next()) {
                prevUnreadCount = cursor.intValue(0);
            }
            cursor.dispose();
            if (prevUnreadCount != 0 || count != 0) {
                if (count == 0) {
                    this.database.executeFast(String.format(Locale.US, "UPDATE messages_v2 SET read_state = read_state | 2 WHERE uid = %d AND mention = 1 AND read_state IN(0, 1)", new Object[]{Long.valueOf(did)})).stepThis().dispose();
                }
                this.database.executeFast(String.format(Locale.US, "UPDATE dialogs SET unread_count_i = %d WHERE did = %d", new Object[]{Integer.valueOf(count), Long.valueOf(did)})).stepThis().dispose();
                LongSparseIntArray sparseArray = new LongSparseIntArray(1);
                sparseArray.put(did, count);
                getMessagesController().processDialogsUpdateRead((LongSparseIntArray) null, sparseArray);
                if (count == 0) {
                    updateFiltersReadCounter((LongSparseIntArray) null, sparseArray, true);
                }
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void createTaskForMid(long dialogId, int messageId, int time, int readTime, int ttl, boolean inner) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda127(this, time, readTime, ttl, messageId, inner, dialogId));
    }

    /* renamed from: lambda$createTaskForMid$80$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m865x281var_b7(int time, int readTime, int ttl, int messageId, boolean inner, long dialogId) {
        long j = dialogId;
        try {
            int minDate = Math.max(time, readTime) + ttl;
            SparseArray sparseArray = new SparseArray();
            ArrayList<Integer> midsArray = new ArrayList<>();
            midsArray.add(Integer.valueOf(messageId));
            sparseArray.put(minDate, midsArray);
            AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda92(this, inner, dialogId, midsArray));
            SQLitePreparedStatement state = this.database.executeFast("REPLACE INTO enc_tasks_v4 VALUES(?, ?, ?, ?)");
            for (int a = 0; a < sparseArray.size(); a++) {
                int key = sparseArray.keyAt(a);
                ArrayList<Integer> arr = (ArrayList) sparseArray.get(key);
                for (int b = 0; b < arr.size(); b++) {
                    state.requery();
                    state.bindInteger(1, arr.get(b).intValue());
                    state.bindLong(2, j);
                    state.bindInteger(3, key);
                    state.bindInteger(4, 1);
                    state.step();
                }
            }
            state.dispose();
            this.database.executeFast(String.format(Locale.US, "UPDATE messages_v2 SET ttl = 0 WHERE mid = %d AND uid = %d", new Object[]{Integer.valueOf(messageId), Long.valueOf(dialogId)})).stepThis().dispose();
            getMessagesController().didAddedNewTask(minDate, j, sparseArray);
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* renamed from: lambda$createTaskForMid$79$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m864xab8cCLASSNAMEd(boolean inner, long dialogId, ArrayList midsArray) {
        if (!inner) {
            markMessagesContentAsRead(dialogId, midsArray, 0);
        }
        getNotificationCenter().postNotificationName(NotificationCenter.messagesReadContent, Long.valueOf(dialogId), midsArray);
    }

    public void createTaskForSecretChat(int chatId, int time, int readTime, int isOut, ArrayList<Long> random_ids) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda147(this, chatId, random_ids, isOut, time, readTime));
    }

    /* renamed from: lambda$createTaskForSecretChat$82$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m867xe4bdacb(int chatId, ArrayList random_ids, int isOut, int time, int readTime) {
        SQLiteCursor cursor;
        ArrayList arrayList = random_ids;
        try {
            long dialogId = DialogObject.makeEncryptedDialogId((long) chatId);
            int minDate = Integer.MAX_VALUE;
            SparseArray<ArrayList<Integer>> messages = new SparseArray<>();
            ArrayList<Integer> midsArray = new ArrayList<>();
            StringBuilder mids = new StringBuilder();
            if (arrayList == null) {
                cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT mid, ttl FROM messages_v2 WHERE uid = %d AND out = %d AND read_state > 0 AND ttl > 0 AND date <= %d AND send_state = 0 AND media != 1", new Object[]{Long.valueOf(dialogId), Integer.valueOf(isOut), Integer.valueOf(time)}), new Object[0]);
            } else {
                String ids = TextUtils.join(",", arrayList);
                cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT m.mid, m.ttl FROM messages_v2 as m INNER JOIN randoms_v2 as r ON m.mid = r.mid AND m.uid = r.uid WHERE r.random_id IN (%s)", new Object[]{ids}), new Object[0]);
            }
            while (cursor.next()) {
                int ttl = cursor.intValue(1);
                int mid = cursor.intValue(0);
                if (arrayList != null) {
                    midsArray.add(Integer.valueOf(mid));
                }
                if (ttl > 0) {
                    int date = Math.max(time, readTime) + ttl;
                    minDate = Math.min(minDate, date);
                    ArrayList<Integer> arr = messages.get(date);
                    if (arr == null) {
                        arr = new ArrayList<>();
                        messages.put(date, arr);
                    }
                    if (mids.length() != 0) {
                        mids.append(",");
                    }
                    mids.append(mid);
                    arr.add(Integer.valueOf(mid));
                }
            }
            cursor.dispose();
            if (arrayList != null) {
                AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda189(this, dialogId, midsArray));
            }
            if (messages.size() != 0) {
                this.database.beginTransaction();
                SQLitePreparedStatement state = this.database.executeFast("REPLACE INTO enc_tasks_v4 VALUES(?, ?, ?, ?)");
                int a = 0;
                while (a < messages.size()) {
                    int key = messages.keyAt(a);
                    ArrayList<Integer> arr2 = messages.get(key);
                    int b = 0;
                    while (b < arr2.size()) {
                        state.requery();
                        state.bindInteger(1, arr2.get(b).intValue());
                        state.bindLong(2, dialogId);
                        state.bindInteger(3, key);
                        state.bindInteger(4, 0);
                        state.step();
                        b++;
                        ArrayList arrayList2 = random_ids;
                    }
                    a++;
                    ArrayList arrayList3 = random_ids;
                }
                state.dispose();
                this.database.commitTransaction();
                this.database.executeFast(String.format(Locale.US, "UPDATE messages_v2 SET ttl = 0 WHERE mid IN(%s) AND uid = %d", new Object[]{mids.toString(), Long.valueOf(dialogId)})).stepThis().dispose();
                getMessagesController().didAddedNewTask(minDate, dialogId, messages);
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* renamed from: lambda$createTaskForSecretChat$81$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m866xb72de9ec(long dialogId, ArrayList midsArray) {
        markMessagesContentAsRead(dialogId, midsArray, 0);
        getNotificationCenter().postNotificationName(NotificationCenter.messagesReadContent, Long.valueOf(dialogId), midsArray);
    }

    /* JADX WARNING: Code restructure failed: missing block: B:173:0x0496, code lost:
        if (r11.indexOfKey(-r8.id) >= 0) goto L_0x0498;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void updateFiltersReadCounter(org.telegram.messenger.support.LongSparseIntArray r37, org.telegram.messenger.support.LongSparseIntArray r38, boolean r39) throws java.lang.Exception {
        /*
            r36 = this;
            r0 = r36
            r1 = r38
            if (r37 == 0) goto L_0x000c
            int r2 = r37.size()
            if (r2 != 0) goto L_0x0016
        L_0x000c:
            if (r1 == 0) goto L_0x0c7b
            int r2 = r38.size()
            if (r2 != 0) goto L_0x0016
            goto L_0x0c7b
        L_0x0016:
            r2 = 0
        L_0x0017:
            r3 = 2
            r4 = 0
            if (r2 >= r3) goto L_0x004a
            r5 = 0
        L_0x001c:
            if (r5 >= r3) goto L_0x003f
            int[][] r6 = r0.contacts
            r6 = r6[r2]
            int[][] r7 = r0.nonContacts
            r7 = r7[r2]
            int[][] r8 = r0.bots
            r8 = r8[r2]
            int[][] r9 = r0.channels
            r9 = r9[r2]
            int[][] r10 = r0.groups
            r10 = r10[r2]
            r10[r5] = r4
            r9[r5] = r4
            r8[r5] = r4
            r7[r5] = r4
            r6[r5] = r4
            int r5 = r5 + 1
            goto L_0x001c
        L_0x003f:
            int[] r3 = r0.mentionChannels
            int[] r5 = r0.mentionGroups
            r5[r2] = r4
            r3[r2] = r4
            int r2 = r2 + 1
            goto L_0x0017
        L_0x004a:
            java.util.ArrayList r2 = new java.util.ArrayList
            r2.<init>()
            java.util.ArrayList r5 = new java.util.ArrayList
            r5.<init>()
            java.util.ArrayList r6 = new java.util.ArrayList
            r6.<init>()
            java.util.ArrayList r7 = new java.util.ArrayList
            r7.<init>()
            java.util.ArrayList r8 = new java.util.ArrayList
            r8.<init>()
            java.util.ArrayList r9 = new java.util.ArrayList
            r9.<init>()
            androidx.collection.LongSparseArray r10 = new androidx.collection.LongSparseArray
            r10.<init>()
            androidx.collection.LongSparseArray r11 = new androidx.collection.LongSparseArray
            r11.<init>()
            r12 = 0
        L_0x0073:
            if (r12 >= r3) goto L_0x019b
            if (r12 != 0) goto L_0x007a
            r13 = r37
            goto L_0x007b
        L_0x007a:
            r13 = r1
        L_0x007b:
            if (r13 != 0) goto L_0x0083
            r1 = r5
            r20 = r11
            r11 = r6
            goto L_0x018f
        L_0x0083:
            r14 = 0
        L_0x0084:
            int r15 = r13.size()
            if (r14 >= r15) goto L_0x0189
            int r15 = r13.valueAt(r14)
            java.lang.Integer r15 = java.lang.Integer.valueOf(r15)
            if (r39 == 0) goto L_0x00a3
            int r16 = r15.intValue()
            if (r16 != 0) goto L_0x009b
            goto L_0x00a3
        L_0x009b:
            r1 = r5
            r20 = r11
            r18 = r13
            r11 = r6
            goto L_0x017b
        L_0x00a3:
            if (r39 != 0) goto L_0x00b3
            int r16 = r15.intValue()
            if (r16 != 0) goto L_0x00b3
            r1 = r5
            r20 = r11
            r18 = r13
            r11 = r6
            goto L_0x017b
        L_0x00b3:
            long r3 = r13.keyAt(r14)
            if (r39 == 0) goto L_0x00cb
            if (r12 != 0) goto L_0x00c3
            r18 = r13
            androidx.collection.LongSparseArray<java.lang.Integer> r13 = r0.dialogsWithUnread
            r13.remove(r3)
            goto L_0x00ed
        L_0x00c3:
            r18 = r13
            androidx.collection.LongSparseArray<java.lang.Integer> r13 = r0.dialogsWithMentions
            r13.remove(r3)
            goto L_0x00ed
        L_0x00cb:
            r18 = r13
            androidx.collection.LongSparseArray<java.lang.Integer> r13 = r0.dialogsWithMentions
            int r13 = r13.indexOfKey(r3)
            if (r13 >= 0) goto L_0x00e0
            androidx.collection.LongSparseArray<java.lang.Integer> r13 = r0.dialogsWithUnread
            int r13 = r13.indexOfKey(r3)
            if (r13 >= 0) goto L_0x00e0
            r11.put(r3, r15)
        L_0x00e0:
            if (r12 != 0) goto L_0x00e8
            androidx.collection.LongSparseArray<java.lang.Integer> r13 = r0.dialogsWithUnread
            r13.put(r3, r15)
            goto L_0x00ed
        L_0x00e8:
            androidx.collection.LongSparseArray<java.lang.Integer> r13 = r0.dialogsWithMentions
            r13.put(r3, r15)
        L_0x00ed:
            int r13 = r10.indexOfKey(r3)
            if (r13 >= 0) goto L_0x0127
            org.telegram.SQLite.SQLiteDatabase r13 = r0.database
            r19 = r15
            java.lang.StringBuilder r15 = new java.lang.StringBuilder
            r15.<init>()
            r20 = r11
            java.lang.String r11 = "SELECT folder_id FROM dialogs WHERE did = "
            r15.append(r11)
            r15.append(r3)
            java.lang.String r11 = r15.toString()
            r15 = 0
            java.lang.Object[] r1 = new java.lang.Object[r15]
            org.telegram.SQLite.SQLiteCursor r1 = r13.queryFinalized(r11, r1)
            r11 = 0
            boolean r13 = r1.next()
            if (r13 == 0) goto L_0x011c
            int r11 = r1.intValue(r15)
        L_0x011c:
            r1.dispose()
            java.lang.Integer r13 = java.lang.Integer.valueOf(r11)
            r10.put(r3, r13)
            goto L_0x012b
        L_0x0127:
            r20 = r11
            r19 = r15
        L_0x012b:
            boolean r1 = org.telegram.messenger.DialogObject.isEncryptedDialog(r3)
            if (r1 == 0) goto L_0x0149
            int r1 = org.telegram.messenger.DialogObject.getEncryptedChatId(r3)
            java.lang.Integer r11 = java.lang.Integer.valueOf(r1)
            boolean r11 = r9.contains(r11)
            if (r11 != 0) goto L_0x0146
            java.lang.Integer r11 = java.lang.Integer.valueOf(r1)
            r9.add(r11)
        L_0x0146:
            r1 = r5
            r11 = r6
            goto L_0x017b
        L_0x0149:
            boolean r1 = org.telegram.messenger.DialogObject.isUserDialog(r3)
            if (r1 == 0) goto L_0x0166
            java.lang.Long r1 = java.lang.Long.valueOf(r3)
            boolean r1 = r7.contains(r1)
            if (r1 != 0) goto L_0x0163
            java.lang.Long r1 = java.lang.Long.valueOf(r3)
            r7.add(r1)
            r1 = r5
            r11 = r6
            goto L_0x017b
        L_0x0163:
            r1 = r5
            r11 = r6
            goto L_0x017b
        L_0x0166:
            r1 = r5
            r11 = r6
            long r5 = -r3
            java.lang.Long r5 = java.lang.Long.valueOf(r5)
            boolean r5 = r8.contains(r5)
            if (r5 != 0) goto L_0x017b
            long r5 = -r3
            java.lang.Long r5 = java.lang.Long.valueOf(r5)
            r8.add(r5)
        L_0x017b:
            int r14 = r14 + 1
            r5 = r1
            r6 = r11
            r13 = r18
            r11 = r20
            r3 = 2
            r4 = 0
            r1 = r38
            goto L_0x0084
        L_0x0189:
            r1 = r5
            r20 = r11
            r18 = r13
            r11 = r6
        L_0x018f:
            int r12 = r12 + 1
            r5 = r1
            r6 = r11
            r11 = r20
            r3 = 2
            r4 = 0
            r1 = r38
            goto L_0x0073
        L_0x019b:
            r1 = r5
            r20 = r11
            r11 = r6
            androidx.collection.LongSparseArray r3 = new androidx.collection.LongSparseArray
            r3.<init>()
            androidx.collection.LongSparseArray r4 = new androidx.collection.LongSparseArray
            r4.<init>()
            androidx.collection.LongSparseArray r5 = new androidx.collection.LongSparseArray
            r5.<init>()
            androidx.collection.LongSparseArray r6 = new androidx.collection.LongSparseArray
            r6.<init>()
            androidx.collection.LongSparseArray r12 = new androidx.collection.LongSparseArray
            r12.<init>()
            androidx.collection.LongSparseArray r13 = new androidx.collection.LongSparseArray
            r13.<init>()
            boolean r14 = r7.isEmpty()
            java.lang.String r15 = ","
            r18 = r4
            if (r14 != 0) goto L_0x027d
            java.lang.String r14 = android.text.TextUtils.join(r15, r7)
            r0.getUsersInternal(r14, r2)
            r14 = 0
            int r4 = r2.size()
        L_0x01d3:
            if (r14 >= r4) goto L_0x026e
            java.lang.Object r21 = r2.get(r14)
            r22 = r2
            r2 = r21
            org.telegram.tgnet.TLRPC$User r2 = (org.telegram.tgnet.TLRPC.User) r2
            r21 = r4
            org.telegram.messenger.MessagesController r4 = r36.getMessagesController()
            r23 = r7
            r24 = r8
            long r7 = r2.id
            boolean r4 = r4.isDialogMuted(r7)
            long r7 = r2.id
            java.lang.Object r7 = r10.get(r7)
            java.lang.Integer r7 = (java.lang.Integer) r7
            int r7 = r7.intValue()
            r8 = r4
            if (r4 == 0) goto L_0x0210
            r25 = r10
            r26 = r11
            long r10 = r2.id
            r28 = r4
            r27 = 1
            java.lang.Boolean r4 = java.lang.Boolean.valueOf(r27)
            r12.put(r10, r4)
            goto L_0x0218
        L_0x0210:
            r28 = r4
            r25 = r10
            r26 = r11
            r27 = 1
        L_0x0218:
            r4 = 1
            if (r7 != r4) goto L_0x0227
            long r10 = r2.id
            r27 = r6
            java.lang.Boolean r6 = java.lang.Boolean.valueOf(r4)
            r13.put(r10, r6)
            goto L_0x0229
        L_0x0227:
            r27 = r6
        L_0x0229:
            boolean r4 = r2.bot
            if (r4 == 0) goto L_0x0238
            int[][] r4 = r0.bots
            r4 = r4[r7]
            r6 = r4[r8]
            r10 = 1
            int r6 = r6 + r10
            r4[r8] = r6
            goto L_0x0257
        L_0x0238:
            boolean r4 = r2.self
            if (r4 != 0) goto L_0x024d
            boolean r4 = r2.contact
            if (r4 == 0) goto L_0x0242
            r10 = 1
            goto L_0x024e
        L_0x0242:
            int[][] r4 = r0.nonContacts
            r4 = r4[r7]
            r6 = r4[r8]
            r10 = 1
            int r6 = r6 + r10
            r4[r8] = r6
            goto L_0x0257
        L_0x024d:
            r10 = 1
        L_0x024e:
            int[][] r4 = r0.contacts
            r4 = r4[r7]
            r6 = r4[r8]
            int r6 = r6 + r10
            r4[r8] = r6
        L_0x0257:
            long r10 = r2.id
            r3.put(r10, r2)
            int r14 = r14 + 1
            r4 = r21
            r2 = r22
            r7 = r23
            r8 = r24
            r10 = r25
            r11 = r26
            r6 = r27
            goto L_0x01d3
        L_0x026e:
            r22 = r2
            r21 = r4
            r27 = r6
            r23 = r7
            r24 = r8
            r25 = r10
            r26 = r11
            goto L_0x0289
        L_0x027d:
            r22 = r2
            r27 = r6
            r23 = r7
            r24 = r8
            r25 = r10
            r26 = r11
        L_0x0289:
            boolean r2 = r9.isEmpty()
            if (r2 != 0) goto L_0x03a4
            java.util.ArrayList r2 = new java.util.ArrayList
            r2.<init>()
            java.util.ArrayList r4 = new java.util.ArrayList
            r4.<init>()
            java.lang.String r6 = android.text.TextUtils.join(r15, r9)
            r0.getEncryptedChatsInternal(r6, r4, r2)
            boolean r6 = r2.isEmpty()
            if (r6 != 0) goto L_0x0398
            java.lang.String r6 = android.text.TextUtils.join(r15, r2)
            r0.getUsersInternal(r6, r1)
            r6 = 0
            int r7 = r1.size()
        L_0x02b2:
            if (r6 >= r7) goto L_0x02c2
            java.lang.Object r8 = r1.get(r6)
            org.telegram.tgnet.TLRPC$User r8 = (org.telegram.tgnet.TLRPC.User) r8
            long r10 = r8.id
            r5.put(r10, r8)
            int r6 = r6 + 1
            goto L_0x02b2
        L_0x02c2:
            r6 = 0
            int r7 = r4.size()
        L_0x02c7:
            if (r6 >= r7) goto L_0x038a
            java.lang.Object r8 = r4.get(r6)
            org.telegram.tgnet.TLRPC$EncryptedChat r8 = (org.telegram.tgnet.TLRPC.EncryptedChat) r8
            long r10 = r8.user_id
            java.lang.Object r10 = r5.get(r10)
            org.telegram.tgnet.TLRPC$User r10 = (org.telegram.tgnet.TLRPC.User) r10
            if (r10 != 0) goto L_0x02e8
            r14 = r1
            r21 = r2
            r28 = r4
            r33 = r9
            r4 = r25
            r9 = r27
            r25 = r7
            goto L_0x0379
        L_0x02e8:
            int r11 = r8.id
            r14 = r1
            r21 = r2
            long r1 = (long) r11
            long r1 = org.telegram.messenger.DialogObject.makeEncryptedDialogId(r1)
            org.telegram.messenger.MessagesController r11 = r36.getMessagesController()
            boolean r11 = r11.isDialogMuted(r1)
            r28 = r4
            r4 = r25
            java.lang.Object r25 = r4.get(r1)
            java.lang.Integer r25 = (java.lang.Integer) r25
            r29 = r1
            int r1 = r25.intValue()
            r2 = r11
            if (r11 == 0) goto L_0x031f
            r25 = r7
            r31 = r8
            long r7 = r10.id
            r33 = r9
            r32 = 1
            java.lang.Boolean r9 = java.lang.Boolean.valueOf(r32)
            r12.put(r7, r9)
            goto L_0x0327
        L_0x031f:
            r25 = r7
            r31 = r8
            r33 = r9
            r32 = 1
        L_0x0327:
            r7 = 1
            if (r1 != r7) goto L_0x0336
            long r8 = r10.id
            r32 = r11
            java.lang.Boolean r11 = java.lang.Boolean.valueOf(r7)
            r13.put(r8, r11)
            goto L_0x0338
        L_0x0336:
            r32 = r11
        L_0x0338:
            boolean r7 = r10.self
            if (r7 != 0) goto L_0x034d
            boolean r7 = r10.contact
            if (r7 == 0) goto L_0x0342
            r9 = 1
            goto L_0x034e
        L_0x0342:
            int[][] r7 = r0.nonContacts
            r7 = r7[r1]
            r8 = r7[r2]
            r9 = 1
            int r8 = r8 + r9
            r7[r2] = r8
            goto L_0x0357
        L_0x034d:
            r9 = 1
        L_0x034e:
            int[][] r7 = r0.contacts
            r7 = r7[r1]
            r8 = r7[r2]
            int r8 = r8 + r9
            r7[r2] = r8
        L_0x0357:
            long r7 = r10.id
            r9 = 0
            java.lang.Integer r11 = java.lang.Integer.valueOf(r9)
            r9 = r27
            java.lang.Object r7 = r9.get(r7, r11)
            java.lang.Integer r7 = (java.lang.Integer) r7
            int r7 = r7.intValue()
            r8 = r1
            r11 = r2
            long r1 = r10.id
            int r27 = r7 + 1
            r34 = r7
            java.lang.Integer r7 = java.lang.Integer.valueOf(r27)
            r9.put(r1, r7)
        L_0x0379:
            int r6 = r6 + 1
            r27 = r9
            r1 = r14
            r2 = r21
            r7 = r25
            r9 = r33
            r25 = r4
            r4 = r28
            goto L_0x02c7
        L_0x038a:
            r14 = r1
            r21 = r2
            r28 = r4
            r33 = r9
            r4 = r25
            r9 = r27
            r25 = r7
            goto L_0x03ab
        L_0x0398:
            r14 = r1
            r21 = r2
            r28 = r4
            r33 = r9
            r4 = r25
            r9 = r27
            goto L_0x03ab
        L_0x03a4:
            r14 = r1
            r33 = r9
            r4 = r25
            r9 = r27
        L_0x03ab:
            boolean r1 = r24.isEmpty()
            if (r1 != 0) goto L_0x0501
            r1 = r24
            java.lang.String r2 = android.text.TextUtils.join(r15, r1)
            r6 = r26
            r0.getChatsInternal(r2, r6)
            r2 = 0
            int r7 = r6.size()
        L_0x03c1:
            if (r2 >= r7) goto L_0x04ee
            java.lang.Object r8 = r6.get(r2)
            org.telegram.tgnet.TLRPC$Chat r8 = (org.telegram.tgnet.TLRPC.Chat) r8
            org.telegram.tgnet.TLRPC$InputChannel r10 = r8.migrated_to
            boolean r10 = r10 instanceof org.telegram.tgnet.TLRPC.TL_inputChannel
            if (r10 != 0) goto L_0x04c8
            boolean r10 = org.telegram.messenger.ChatObject.isNotInChat(r8)
            if (r10 == 0) goto L_0x03e9
            r28 = r1
            r25 = r4
            r24 = r5
            r26 = r6
            r21 = r7
            r27 = r14
            r6 = r18
            r11 = r20
            r1 = r38
            goto L_0x04da
        L_0x03e9:
            org.telegram.messenger.MessagesController r10 = r36.getMessagesController()
            r11 = r6
            r15 = r7
            long r6 = r8.id
            long r6 = -r6
            boolean r6 = r10.isDialogMuted(r6, r8)
            androidx.collection.LongSparseArray<java.lang.Integer> r7 = r0.dialogsWithUnread
            r26 = r11
            long r10 = r8.id
            long r10 = -r10
            int r7 = r7.indexOfKey(r10)
            if (r7 < 0) goto L_0x0405
            r7 = 1
            goto L_0x0406
        L_0x0405:
            r7 = 0
        L_0x0406:
            androidx.collection.LongSparseArray<java.lang.Integer> r10 = r0.dialogsWithMentions
            r11 = r14
            r21 = r15
            long r14 = r8.id
            long r14 = -r14
            int r10 = r10.indexOfKey(r14)
            if (r10 < 0) goto L_0x0416
            r10 = 1
            goto L_0x0417
        L_0x0416:
            r10 = 0
        L_0x0417:
            long r14 = r8.id
            long r14 = -r14
            java.lang.Object r14 = r4.get(r14)
            java.lang.Integer r14 = (java.lang.Integer) r14
            int r14 = r14.intValue()
            r15 = r6
            if (r6 == 0) goto L_0x043a
            r25 = r4
            r24 = r5
            long r4 = r8.id
            long r4 = -r4
            r28 = r1
            r27 = 1
            java.lang.Boolean r1 = java.lang.Boolean.valueOf(r27)
            r12.put(r4, r1)
            goto L_0x0442
        L_0x043a:
            r28 = r1
            r25 = r4
            r24 = r5
            r27 = 1
        L_0x0442:
            r1 = 1
            if (r14 != r1) goto L_0x0452
            long r4 = r8.id
            long r4 = -r4
            r27 = r11
            java.lang.Boolean r11 = java.lang.Boolean.valueOf(r1)
            r13.put(r4, r11)
            goto L_0x0454
        L_0x0452:
            r27 = r11
        L_0x0454:
            if (r6 == 0) goto L_0x047f
            r1 = r38
            if (r1 == 0) goto L_0x0481
            long r4 = r8.id
            long r4 = -r4
            int r4 = r1.indexOfKey(r4)
            if (r4 < 0) goto L_0x0481
            boolean r4 = org.telegram.messenger.ChatObject.isChannel(r8)
            if (r4 == 0) goto L_0x0476
            boolean r4 = r8.megagroup
            if (r4 != 0) goto L_0x0476
            int[] r4 = r0.mentionChannels
            r5 = r4[r14]
            r11 = 1
            int r5 = r5 + r11
            r4[r14] = r5
            goto L_0x0481
        L_0x0476:
            r11 = 1
            int[] r4 = r0.mentionGroups
            r5 = r4[r14]
            int r5 = r5 + r11
            r4[r14] = r5
            goto L_0x0481
        L_0x047f:
            r1 = r38
        L_0x0481:
            if (r39 == 0) goto L_0x048b
            if (r7 != 0) goto L_0x048b
            if (r10 == 0) goto L_0x0488
            goto L_0x048b
        L_0x0488:
            r11 = r20
            goto L_0x0498
        L_0x048b:
            if (r39 != 0) goto L_0x04bc
            long r4 = r8.id
            long r4 = -r4
            r11 = r20
            int r4 = r11.indexOfKey(r4)
            if (r4 < 0) goto L_0x04be
        L_0x0498:
            boolean r4 = org.telegram.messenger.ChatObject.isChannel(r8)
            if (r4 == 0) goto L_0x04af
            boolean r4 = r8.megagroup
            if (r4 != 0) goto L_0x04af
            int[][] r4 = r0.channels
            r4 = r4[r14]
            r5 = r4[r15]
            r19 = 1
            int r5 = r5 + 1
            r4[r15] = r5
            goto L_0x04be
        L_0x04af:
            r19 = 1
            int[][] r4 = r0.groups
            r4 = r4[r14]
            r5 = r4[r15]
            int r5 = r5 + 1
            r4[r15] = r5
            goto L_0x04be
        L_0x04bc:
            r11 = r20
        L_0x04be:
            long r4 = r8.id
            r20 = r6
            r6 = r18
            r6.put(r4, r8)
            goto L_0x04da
        L_0x04c8:
            r28 = r1
            r25 = r4
            r24 = r5
            r26 = r6
            r21 = r7
            r27 = r14
            r6 = r18
            r11 = r20
            r1 = r38
        L_0x04da:
            int r2 = r2 + 1
            r18 = r6
            r20 = r11
            r7 = r21
            r5 = r24
            r4 = r25
            r6 = r26
            r14 = r27
            r1 = r28
            goto L_0x03c1
        L_0x04ee:
            r28 = r1
            r25 = r4
            r24 = r5
            r26 = r6
            r21 = r7
            r27 = r14
            r6 = r18
            r11 = r20
            r1 = r38
            goto L_0x050f
        L_0x0501:
            r1 = r38
            r25 = r4
            r27 = r14
            r6 = r18
            r11 = r20
            r28 = r24
            r24 = r5
        L_0x050f:
            r2 = 0
            java.util.ArrayList<org.telegram.messenger.MessagesController$DialogFilter> r4 = r0.dialogFilters
            int r4 = r4.size()
        L_0x0516:
            int r5 = r4 + 2
            if (r2 >= r5) goto L_0x0CLASSNAME
            if (r2 >= r4) goto L_0x0538
            java.util.ArrayList<org.telegram.messenger.MessagesController$DialogFilter> r5 = r0.dialogFilters
            java.lang.Object r5 = r5.get(r2)
            org.telegram.messenger.MessagesController$DialogFilter r5 = (org.telegram.messenger.MessagesController.DialogFilter) r5
            int r7 = r5.pendingUnreadCount
            if (r7 >= 0) goto L_0x0533
            r10 = r3
            r1 = r4
            r14 = r9
            r31 = r11
            r16 = r13
            r13 = r24
            goto L_0x0CLASSNAME
        L_0x0533:
            int r7 = r5.pendingUnreadCount
            int r8 = r5.flags
            goto L_0x0563
        L_0x0538:
            r5 = 0
            int r7 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ALL_CHATS
            if (r2 != r4) goto L_0x0559
            int r8 = r0.pendingMainUnreadCount
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r7 = r7 | r10
            org.telegram.messenger.NotificationsController r10 = r36.getNotificationsController()
            boolean r10 = r10.showBadgeMuted
            if (r10 != 0) goto L_0x0553
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r7 = r7 | r10
            r35 = r8
            r8 = r7
            r7 = r35
            goto L_0x0563
        L_0x0553:
            r35 = r8
            r8 = r7
            r7 = r35
            goto L_0x0563
        L_0x0559:
            int r8 = r0.pendingArchiveUnreadCount
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED
            r7 = r7 | r10
            r35 = r8
            r8 = r7
            r7 = r35
        L_0x0563:
            if (r39 == 0) goto L_0x0914
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CONTACTS
            r10 = r10 & r8
            if (r10 == 0) goto L_0x059e
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED
            r10 = r10 & r8
            if (r10 != 0) goto L_0x0584
            int[][] r10 = r0.contacts
            r14 = 0
            r10 = r10[r14]
            r10 = r10[r14]
            int r7 = r7 - r10
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r10 = r10 & r8
            if (r10 != 0) goto L_0x0584
            int[][] r10 = r0.contacts
            r10 = r10[r14]
            r14 = 1
            r10 = r10[r14]
            int r7 = r7 - r10
        L_0x0584:
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r10 = r10 & r8
            if (r10 != 0) goto L_0x059e
            int[][] r10 = r0.contacts
            r14 = 1
            r10 = r10[r14]
            r15 = 0
            r10 = r10[r15]
            int r7 = r7 - r10
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r10 = r10 & r8
            if (r10 != 0) goto L_0x059e
            int[][] r10 = r0.contacts
            r10 = r10[r14]
            r10 = r10[r14]
            int r7 = r7 - r10
        L_0x059e:
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_NON_CONTACTS
            r10 = r10 & r8
            if (r10 == 0) goto L_0x05d7
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED
            r10 = r10 & r8
            if (r10 != 0) goto L_0x05bd
            int[][] r10 = r0.nonContacts
            r14 = 0
            r10 = r10[r14]
            r10 = r10[r14]
            int r7 = r7 - r10
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r10 = r10 & r8
            if (r10 != 0) goto L_0x05bd
            int[][] r10 = r0.nonContacts
            r10 = r10[r14]
            r14 = 1
            r10 = r10[r14]
            int r7 = r7 - r10
        L_0x05bd:
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r10 = r10 & r8
            if (r10 != 0) goto L_0x05d7
            int[][] r10 = r0.nonContacts
            r14 = 1
            r10 = r10[r14]
            r15 = 0
            r10 = r10[r15]
            int r7 = r7 - r10
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r10 = r10 & r8
            if (r10 != 0) goto L_0x05d7
            int[][] r10 = r0.nonContacts
            r10 = r10[r14]
            r10 = r10[r14]
            int r7 = r7 - r10
        L_0x05d7:
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_GROUPS
            r10 = r10 & r8
            if (r10 == 0) goto L_0x061c
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED
            r10 = r10 & r8
            if (r10 != 0) goto L_0x05fc
            int[][] r10 = r0.groups
            r14 = 0
            r10 = r10[r14]
            r10 = r10[r14]
            int r7 = r7 - r10
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r10 = r10 & r8
            if (r10 != 0) goto L_0x05f7
            int[][] r10 = r0.groups
            r10 = r10[r14]
            r15 = 1
            r10 = r10[r15]
            int r7 = r7 - r10
            goto L_0x05fc
        L_0x05f7:
            int[] r10 = r0.mentionGroups
            r10 = r10[r14]
            int r7 = r7 - r10
        L_0x05fc:
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r10 = r10 & r8
            if (r10 != 0) goto L_0x061c
            int[][] r10 = r0.groups
            r14 = 1
            r10 = r10[r14]
            r15 = 0
            r10 = r10[r15]
            int r7 = r7 - r10
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r10 = r10 & r8
            if (r10 != 0) goto L_0x0617
            int[][] r10 = r0.groups
            r10 = r10[r14]
            r10 = r10[r14]
            int r7 = r7 - r10
            goto L_0x061c
        L_0x0617:
            int[] r10 = r0.mentionGroups
            r10 = r10[r14]
            int r7 = r7 - r10
        L_0x061c:
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CHANNELS
            r10 = r10 & r8
            if (r10 == 0) goto L_0x0661
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED
            r10 = r10 & r8
            if (r10 != 0) goto L_0x0641
            int[][] r10 = r0.channels
            r14 = 0
            r10 = r10[r14]
            r10 = r10[r14]
            int r7 = r7 - r10
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r10 = r10 & r8
            if (r10 != 0) goto L_0x063c
            int[][] r10 = r0.channels
            r10 = r10[r14]
            r15 = 1
            r10 = r10[r15]
            int r7 = r7 - r10
            goto L_0x0641
        L_0x063c:
            int[] r10 = r0.mentionChannels
            r10 = r10[r14]
            int r7 = r7 - r10
        L_0x0641:
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r10 = r10 & r8
            if (r10 != 0) goto L_0x0661
            int[][] r10 = r0.channels
            r14 = 1
            r10 = r10[r14]
            r15 = 0
            r10 = r10[r15]
            int r7 = r7 - r10
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r10 = r10 & r8
            if (r10 != 0) goto L_0x065c
            int[][] r10 = r0.channels
            r10 = r10[r14]
            r10 = r10[r14]
            int r7 = r7 - r10
            goto L_0x0661
        L_0x065c:
            int[] r10 = r0.mentionChannels
            r10 = r10[r14]
            int r7 = r7 - r10
        L_0x0661:
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_BOTS
            r10 = r10 & r8
            if (r10 == 0) goto L_0x069a
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED
            r10 = r10 & r8
            if (r10 != 0) goto L_0x0680
            int[][] r10 = r0.bots
            r14 = 0
            r10 = r10[r14]
            r10 = r10[r14]
            int r7 = r7 - r10
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r10 = r10 & r8
            if (r10 != 0) goto L_0x0680
            int[][] r10 = r0.bots
            r10 = r10[r14]
            r14 = 1
            r10 = r10[r14]
            int r7 = r7 - r10
        L_0x0680:
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r10 = r10 & r8
            if (r10 != 0) goto L_0x069a
            int[][] r10 = r0.bots
            r14 = 1
            r10 = r10[r14]
            r15 = 0
            r10 = r10[r15]
            int r7 = r7 - r10
            int r10 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r10 = r10 & r8
            if (r10 != 0) goto L_0x069a
            int[][] r10 = r0.bots
            r10 = r10[r14]
            r10 = r10[r14]
            int r7 = r7 - r10
        L_0x069a:
            if (r5 == 0) goto L_0x08f4
            r10 = 0
            java.util.ArrayList<java.lang.Long> r14 = r5.alwaysShow
            int r14 = r14.size()
        L_0x06a3:
            if (r10 >= r14) goto L_0x07cc
            java.util.ArrayList<java.lang.Long> r15 = r5.alwaysShow
            java.lang.Object r15 = r15.get(r10)
            java.lang.Long r15 = (java.lang.Long) r15
            r18 = r14
            long r14 = r15.longValue()
            boolean r20 = org.telegram.messenger.DialogObject.isUserDialog(r14)
            if (r20 == 0) goto L_0x0765
            r20 = 0
            r35 = r20
            r20 = r2
            r2 = r35
        L_0x06c1:
            r21 = r4
            r4 = 2
            if (r2 >= r4) goto L_0x075c
            if (r2 != 0) goto L_0x06ca
            r4 = r3
            goto L_0x06cc
        L_0x06ca:
            r4 = r24
        L_0x06cc:
            java.lang.Object r29 = r4.get(r14)
            r30 = r4
            r4 = r29
            org.telegram.tgnet.TLRPC$User r4 = (org.telegram.tgnet.TLRPC.User) r4
            if (r4 == 0) goto L_0x0746
            if (r2 != 0) goto L_0x06e3
            r29 = 1
            r35 = r29
            r29 = r3
            r3 = r35
            goto L_0x06fe
        L_0x06e3:
            r29 = r3
            r17 = 0
            java.lang.Integer r3 = java.lang.Integer.valueOf(r17)
            java.lang.Object r3 = r9.get(r14, r3)
            java.lang.Integer r3 = (java.lang.Integer) r3
            int r3 = r3.intValue()
            if (r3 != 0) goto L_0x06fe
            r32 = r9
            r34 = r10
            r31 = r11
            goto L_0x074e
        L_0x06fe:
            r31 = r11
            boolean r11 = r4.bot
            if (r11 == 0) goto L_0x0707
            int r11 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_BOTS
            goto L_0x0715
        L_0x0707:
            boolean r11 = r4.self
            if (r11 != 0) goto L_0x0713
            boolean r11 = r4.contact
            if (r11 == 0) goto L_0x0710
            goto L_0x0713
        L_0x0710:
            int r11 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_NON_CONTACTS
            goto L_0x0715
        L_0x0713:
            int r11 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CONTACTS
        L_0x0715:
            r32 = r8 & r11
            if (r32 != 0) goto L_0x071f
            int r7 = r7 - r3
            r32 = r9
            r34 = r10
            goto L_0x074e
        L_0x071f:
            int r32 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r32 = r8 & r32
            if (r32 == 0) goto L_0x0733
            r32 = r9
            r34 = r10
            long r9 = r4.id
            int r9 = r12.indexOfKey(r9)
            if (r9 < 0) goto L_0x0737
            int r7 = r7 - r3
            goto L_0x074e
        L_0x0733:
            r32 = r9
            r34 = r10
        L_0x0737:
            int r9 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r9 = r9 & r8
            if (r9 == 0) goto L_0x074e
            long r9 = r4.id
            int r9 = r13.indexOfKey(r9)
            if (r9 < 0) goto L_0x074e
            int r7 = r7 - r3
            goto L_0x074e
        L_0x0746:
            r29 = r3
            r32 = r9
            r34 = r10
            r31 = r11
        L_0x074e:
            int r2 = r2 + 1
            r4 = r21
            r3 = r29
            r11 = r31
            r9 = r32
            r10 = r34
            goto L_0x06c1
        L_0x075c:
            r29 = r3
            r32 = r9
            r34 = r10
            r31 = r11
            goto L_0x07bc
        L_0x0765:
            r20 = r2
            r29 = r3
            r21 = r4
            r32 = r9
            r34 = r10
            r31 = r11
            long r2 = -r14
            java.lang.Object r2 = r6.get(r2)
            org.telegram.tgnet.TLRPC$Chat r2 = (org.telegram.tgnet.TLRPC.Chat) r2
            if (r2 == 0) goto L_0x07bc
            boolean r3 = org.telegram.messenger.ChatObject.isChannel(r2)
            if (r3 == 0) goto L_0x0787
            boolean r3 = r2.megagroup
            if (r3 != 0) goto L_0x0787
            int r3 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CHANNELS
            goto L_0x0789
        L_0x0787:
            int r3 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_GROUPS
        L_0x0789:
            r4 = r8 & r3
            if (r4 != 0) goto L_0x0790
            int r7 = r7 + -1
            goto L_0x07bc
        L_0x0790:
            int r4 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r4 = r4 & r8
            if (r4 == 0) goto L_0x07ac
            long r9 = r2.id
            long r9 = -r9
            int r4 = r12.indexOfKey(r9)
            if (r4 < 0) goto L_0x07ac
            androidx.collection.LongSparseArray<java.lang.Integer> r4 = r0.dialogsWithMentions
            long r9 = r2.id
            long r9 = -r9
            int r4 = r4.indexOfKey(r9)
            if (r4 >= 0) goto L_0x07ac
            int r7 = r7 + -1
            goto L_0x07bc
        L_0x07ac:
            int r4 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r4 = r4 & r8
            if (r4 == 0) goto L_0x07bc
            long r9 = r2.id
            long r9 = -r9
            int r4 = r13.indexOfKey(r9)
            if (r4 < 0) goto L_0x07bc
            int r7 = r7 + -1
        L_0x07bc:
            int r10 = r34 + 1
            r14 = r18
            r2 = r20
            r4 = r21
            r3 = r29
            r11 = r31
            r9 = r32
            goto L_0x06a3
        L_0x07cc:
            r20 = r2
            r29 = r3
            r21 = r4
            r32 = r9
            r34 = r10
            r31 = r11
            r18 = r14
            r2 = 0
            java.util.ArrayList<java.lang.Long> r3 = r5.neverShow
            int r3 = r3.size()
        L_0x07e1:
            if (r2 >= r3) goto L_0x08ed
            java.util.ArrayList<java.lang.Long> r4 = r5.neverShow
            java.lang.Object r4 = r4.get(r2)
            java.lang.Long r4 = (java.lang.Long) r4
            long r9 = r4.longValue()
            if (r1 == 0) goto L_0x0805
            int r4 = r1.indexOfKey(r9)
            if (r4 < 0) goto L_0x0805
            int r4 = r12.indexOfKey(r9)
            if (r4 >= 0) goto L_0x0805
            r30 = r3
            r3 = r32
            r32 = r2
            goto L_0x08e3
        L_0x0805:
            boolean r4 = org.telegram.messenger.DialogObject.isUserDialog(r9)
            if (r4 == 0) goto L_0x0898
            r4 = 0
        L_0x080c:
            r11 = 2
            if (r4 >= r11) goto L_0x0891
            if (r4 != 0) goto L_0x0814
            r14 = r29
            goto L_0x0816
        L_0x0814:
            r14 = r24
        L_0x0816:
            java.lang.Object r15 = r14.get(r9)
            org.telegram.tgnet.TLRPC$User r15 = (org.telegram.tgnet.TLRPC.User) r15
            if (r15 == 0) goto L_0x087f
            if (r4 != 0) goto L_0x0827
            r16 = 1
            r30 = r3
            r3 = r32
            goto L_0x0840
        L_0x0827:
            r16 = 0
            java.lang.Integer r11 = java.lang.Integer.valueOf(r16)
            r30 = r3
            r3 = r32
            java.lang.Object r11 = r3.get(r9, r11)
            java.lang.Integer r11 = (java.lang.Integer) r11
            int r16 = r11.intValue()
            if (r16 != 0) goto L_0x0840
            r32 = r2
            goto L_0x0885
        L_0x0840:
            boolean r11 = r15.bot
            if (r11 == 0) goto L_0x0847
            int r11 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_BOTS
            goto L_0x0855
        L_0x0847:
            boolean r11 = r15.self
            if (r11 != 0) goto L_0x0853
            boolean r11 = r15.contact
            if (r11 == 0) goto L_0x0850
            goto L_0x0853
        L_0x0850:
            int r11 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_NON_CONTACTS
            goto L_0x0855
        L_0x0853:
            int r11 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CONTACTS
        L_0x0855:
            r32 = r8 & r11
            if (r32 == 0) goto L_0x087c
            int r32 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r32 = r8 & r32
            if (r32 == 0) goto L_0x086a
            r32 = r2
            long r1 = r15.id
            int r1 = r13.indexOfKey(r1)
            if (r1 >= 0) goto L_0x0885
            goto L_0x086c
        L_0x086a:
            r32 = r2
        L_0x086c:
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r1 = r1 & r8
            if (r1 == 0) goto L_0x0879
            long r1 = r15.id
            int r1 = r12.indexOfKey(r1)
            if (r1 >= 0) goto L_0x0885
        L_0x0879:
            int r7 = r7 + r16
            goto L_0x0885
        L_0x087c:
            r32 = r2
            goto L_0x0885
        L_0x087f:
            r30 = r3
            r3 = r32
            r32 = r2
        L_0x0885:
            int r4 = r4 + 1
            r1 = r38
            r2 = r32
            r32 = r3
            r3 = r30
            goto L_0x080c
        L_0x0891:
            r30 = r3
            r3 = r32
            r32 = r2
            goto L_0x08e3
        L_0x0898:
            r30 = r3
            r3 = r32
            r32 = r2
            long r1 = -r9
            java.lang.Object r1 = r6.get(r1)
            org.telegram.tgnet.TLRPC$Chat r1 = (org.telegram.tgnet.TLRPC.Chat) r1
            if (r1 == 0) goto L_0x08e3
            boolean r2 = org.telegram.messenger.ChatObject.isChannel(r1)
            if (r2 == 0) goto L_0x08b4
            boolean r2 = r1.megagroup
            if (r2 != 0) goto L_0x08b4
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CHANNELS
            goto L_0x08b6
        L_0x08b4:
            int r2 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_GROUPS
        L_0x08b6:
            r4 = r8 & r2
            if (r4 == 0) goto L_0x08e3
            int r4 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r4 = r4 & r8
            if (r4 == 0) goto L_0x08c8
            long r14 = r1.id
            long r14 = -r14
            int r4 = r13.indexOfKey(r14)
            if (r4 >= 0) goto L_0x08e3
        L_0x08c8:
            int r4 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r4 = r4 & r8
            if (r4 == 0) goto L_0x08e1
            long r14 = r1.id
            long r14 = -r14
            int r4 = r12.indexOfKey(r14)
            if (r4 < 0) goto L_0x08e1
            androidx.collection.LongSparseArray<java.lang.Integer> r4 = r0.dialogsWithMentions
            long r14 = r1.id
            long r14 = -r14
            int r4 = r4.indexOfKey(r14)
            if (r4 < 0) goto L_0x08e3
        L_0x08e1:
            int r7 = r7 + 1
        L_0x08e3:
            int r2 = r32 + 1
            r1 = r38
            r32 = r3
            r3 = r30
            goto L_0x07e1
        L_0x08ed:
            r30 = r3
            r3 = r32
            r32 = r2
            goto L_0x08fd
        L_0x08f4:
            r20 = r2
            r29 = r3
            r21 = r4
            r3 = r9
            r31 = r11
        L_0x08fd:
            if (r7 >= 0) goto L_0x090a
            r7 = 0
            r14 = r3
            r11 = r8
            r16 = r13
            r13 = r24
            r10 = r29
            goto L_0x0c4b
        L_0x090a:
            r14 = r3
            r11 = r8
            r16 = r13
            r13 = r24
            r10 = r29
            goto L_0x0c4b
        L_0x0914:
            r20 = r2
            r29 = r3
            r21 = r4
            r3 = r9
            r31 = r11
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CONTACTS
            r1 = r1 & r8
            if (r1 == 0) goto L_0x0956
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED
            r1 = r1 & r8
            if (r1 != 0) goto L_0x093c
            int[][] r1 = r0.contacts
            r2 = 0
            r1 = r1[r2]
            r1 = r1[r2]
            int r7 = r7 + r1
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r1 = r1 & r8
            if (r1 != 0) goto L_0x093c
            int[][] r1 = r0.contacts
            r1 = r1[r2]
            r2 = 1
            r1 = r1[r2]
            int r7 = r7 + r1
        L_0x093c:
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r1 = r1 & r8
            if (r1 != 0) goto L_0x0956
            int[][] r1 = r0.contacts
            r2 = 1
            r1 = r1[r2]
            r4 = 0
            r1 = r1[r4]
            int r7 = r7 + r1
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r1 = r1 & r8
            if (r1 != 0) goto L_0x0956
            int[][] r1 = r0.contacts
            r1 = r1[r2]
            r1 = r1[r2]
            int r7 = r7 + r1
        L_0x0956:
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_NON_CONTACTS
            r1 = r1 & r8
            if (r1 == 0) goto L_0x098f
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED
            r1 = r1 & r8
            if (r1 != 0) goto L_0x0975
            int[][] r1 = r0.nonContacts
            r2 = 0
            r1 = r1[r2]
            r1 = r1[r2]
            int r7 = r7 + r1
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r1 = r1 & r8
            if (r1 != 0) goto L_0x0975
            int[][] r1 = r0.nonContacts
            r1 = r1[r2]
            r2 = 1
            r1 = r1[r2]
            int r7 = r7 + r1
        L_0x0975:
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r1 = r1 & r8
            if (r1 != 0) goto L_0x098f
            int[][] r1 = r0.nonContacts
            r2 = 1
            r1 = r1[r2]
            r4 = 0
            r1 = r1[r4]
            int r7 = r7 + r1
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r1 = r1 & r8
            if (r1 != 0) goto L_0x098f
            int[][] r1 = r0.nonContacts
            r1 = r1[r2]
            r1 = r1[r2]
            int r7 = r7 + r1
        L_0x098f:
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_GROUPS
            r1 = r1 & r8
            if (r1 == 0) goto L_0x09d4
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED
            r1 = r1 & r8
            if (r1 != 0) goto L_0x09b4
            int[][] r1 = r0.groups
            r2 = 0
            r1 = r1[r2]
            r1 = r1[r2]
            int r7 = r7 + r1
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r1 = r1 & r8
            if (r1 != 0) goto L_0x09af
            int[][] r1 = r0.groups
            r1 = r1[r2]
            r4 = 1
            r1 = r1[r4]
            int r7 = r7 + r1
            goto L_0x09b4
        L_0x09af:
            int[] r1 = r0.mentionGroups
            r1 = r1[r2]
            int r7 = r7 + r1
        L_0x09b4:
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r1 = r1 & r8
            if (r1 != 0) goto L_0x09d4
            int[][] r1 = r0.groups
            r2 = 1
            r1 = r1[r2]
            r4 = 0
            r1 = r1[r4]
            int r7 = r7 + r1
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r1 = r1 & r8
            if (r1 != 0) goto L_0x09cf
            int[][] r1 = r0.groups
            r1 = r1[r2]
            r1 = r1[r2]
            int r7 = r7 + r1
            goto L_0x09d4
        L_0x09cf:
            int[] r1 = r0.mentionGroups
            r1 = r1[r2]
            int r7 = r7 + r1
        L_0x09d4:
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CHANNELS
            r1 = r1 & r8
            if (r1 == 0) goto L_0x0a19
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED
            r1 = r1 & r8
            if (r1 != 0) goto L_0x09f9
            int[][] r1 = r0.channels
            r2 = 0
            r1 = r1[r2]
            r1 = r1[r2]
            int r7 = r7 + r1
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r1 = r1 & r8
            if (r1 != 0) goto L_0x09f4
            int[][] r1 = r0.channels
            r1 = r1[r2]
            r4 = 1
            r1 = r1[r4]
            int r7 = r7 + r1
            goto L_0x09f9
        L_0x09f4:
            int[] r1 = r0.mentionChannels
            r1 = r1[r2]
            int r7 = r7 + r1
        L_0x09f9:
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r1 = r1 & r8
            if (r1 != 0) goto L_0x0a19
            int[][] r1 = r0.channels
            r2 = 1
            r1 = r1[r2]
            r4 = 0
            r1 = r1[r4]
            int r7 = r7 + r1
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r1 = r1 & r8
            if (r1 != 0) goto L_0x0a14
            int[][] r1 = r0.channels
            r1 = r1[r2]
            r1 = r1[r2]
            int r7 = r7 + r1
            goto L_0x0a19
        L_0x0a14:
            int[] r1 = r0.mentionChannels
            r1 = r1[r2]
            int r7 = r7 + r1
        L_0x0a19:
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_BOTS
            r1 = r1 & r8
            if (r1 == 0) goto L_0x0a55
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_ONLY_ARCHIVED
            r1 = r1 & r8
            if (r1 != 0) goto L_0x0a38
            int[][] r1 = r0.bots
            r2 = 0
            r1 = r1[r2]
            r1 = r1[r2]
            int r7 = r7 + r1
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r1 = r1 & r8
            if (r1 != 0) goto L_0x0a38
            int[][] r1 = r0.bots
            r1 = r1[r2]
            r2 = 1
            r1 = r1[r2]
            int r7 = r7 + r1
        L_0x0a38:
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_ARCHIVED
            r1 = r1 & r8
            if (r1 != 0) goto L_0x0a53
            int[][] r1 = r0.bots
            r2 = 1
            r1 = r1[r2]
            r4 = 0
            r1 = r1[r4]
            int r7 = r7 + r1
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r1 = r1 & r8
            if (r1 != 0) goto L_0x0a56
            int[][] r1 = r0.bots
            r1 = r1[r2]
            r1 = r1[r2]
            int r7 = r7 + r1
            goto L_0x0a56
        L_0x0a53:
            r2 = 1
            goto L_0x0a56
        L_0x0a55:
            r2 = 1
        L_0x0a56:
            if (r5 == 0) goto L_0x0CLASSNAME
            java.util.ArrayList<java.lang.Long> r1 = r5.alwaysShow
            boolean r1 = r1.isEmpty()
            if (r1 != 0) goto L_0x0bd4
            int r1 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r1 = r1 & r8
            if (r1 == 0) goto L_0x0aaa
            r1 = 0
            int r4 = r38.size()
        L_0x0a6a:
            if (r1 >= r4) goto L_0x0aa7
            r9 = r38
            long r10 = r9.keyAt(r1)
            long r14 = -r10
            java.lang.Object r14 = r6.get(r14)
            org.telegram.tgnet.TLRPC$Chat r14 = (org.telegram.tgnet.TLRPC.Chat) r14
            boolean r15 = org.telegram.messenger.ChatObject.isChannel(r14)
            if (r15 == 0) goto L_0x0a89
            boolean r15 = r14.megagroup
            if (r15 != 0) goto L_0x0a89
            int r15 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CHANNELS
            r15 = r15 & r8
            if (r15 != 0) goto L_0x0a8f
            goto L_0x0aa3
        L_0x0a89:
            int r15 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_GROUPS
            r15 = r15 & r8
            if (r15 != 0) goto L_0x0a8f
            goto L_0x0aa3
        L_0x0a8f:
            int r15 = r12.indexOfKey(r10)
            if (r15 < 0) goto L_0x0aa3
            java.util.ArrayList<java.lang.Long> r15 = r5.alwaysShow
            java.lang.Long r2 = java.lang.Long.valueOf(r10)
            boolean r2 = r15.contains(r2)
            if (r2 == 0) goto L_0x0aa3
            int r7 = r7 + -1
        L_0x0aa3:
            int r1 = r1 + 1
            r2 = 1
            goto L_0x0a6a
        L_0x0aa7:
            r9 = r38
            goto L_0x0aac
        L_0x0aaa:
            r9 = r38
        L_0x0aac:
            r1 = 0
            java.util.ArrayList<java.lang.Long> r2 = r5.alwaysShow
            int r2 = r2.size()
        L_0x0ab3:
            if (r1 >= r2) goto L_0x0bcb
            java.util.ArrayList<java.lang.Long> r4 = r5.alwaysShow
            java.lang.Object r4 = r4.get(r1)
            java.lang.Long r4 = (java.lang.Long) r4
            long r10 = r4.longValue()
            r4 = r31
            int r14 = r4.indexOfKey(r10)
            if (r14 >= 0) goto L_0x0ad5
            r32 = r3
            r31 = r4
            r16 = r13
            r13 = r24
            r24 = r2
            goto L_0x0bbf
        L_0x0ad5:
            boolean r14 = org.telegram.messenger.DialogObject.isUserDialog(r10)
            if (r14 == 0) goto L_0x0b82
            r14 = r29
            java.lang.Object r15 = r14.get(r10)
            org.telegram.tgnet.TLRPC$User r15 = (org.telegram.tgnet.TLRPC.User) r15
            if (r15 == 0) goto L_0x0b23
            int r16 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r16 = r8 & r16
            if (r16 == 0) goto L_0x0afa
            r16 = r13
            r29 = r14
            long r13 = r15.id
            int r13 = r12.indexOfKey(r13)
            if (r13 < 0) goto L_0x0afe
            int r7 = r7 + 1
            goto L_0x0b27
        L_0x0afa:
            r16 = r13
            r29 = r14
        L_0x0afe:
            boolean r13 = r15.bot
            if (r13 == 0) goto L_0x0b0a
            int r13 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_BOTS
            r13 = r13 & r8
            if (r13 != 0) goto L_0x0b27
            int r7 = r7 + 1
            goto L_0x0b27
        L_0x0b0a:
            boolean r13 = r15.self
            if (r13 != 0) goto L_0x0b1b
            boolean r13 = r15.contact
            if (r13 == 0) goto L_0x0b13
            goto L_0x0b1b
        L_0x0b13:
            int r13 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_NON_CONTACTS
            r13 = r13 & r8
            if (r13 != 0) goto L_0x0b27
            int r7 = r7 + 1
            goto L_0x0b27
        L_0x0b1b:
            int r13 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CONTACTS
            r13 = r13 & r8
            if (r13 != 0) goto L_0x0b27
            int r7 = r7 + 1
            goto L_0x0b27
        L_0x0b23:
            r16 = r13
            r29 = r14
        L_0x0b27:
            r13 = r24
            java.lang.Object r14 = r13.get(r10)
            org.telegram.tgnet.TLRPC$User r14 = (org.telegram.tgnet.TLRPC.User) r14
            if (r14 == 0) goto L_0x0b7b
            r24 = r2
            r15 = 0
            java.lang.Integer r2 = java.lang.Integer.valueOf(r15)
            java.lang.Object r2 = r3.get(r10, r2)
            java.lang.Integer r2 = (java.lang.Integer) r2
            int r2 = r2.intValue()
            int r15 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r15 = r15 & r8
            if (r15 == 0) goto L_0x0b55
            r32 = r3
            r31 = r4
            long r3 = r14.id
            int r3 = r12.indexOfKey(r3)
            if (r3 < 0) goto L_0x0b59
            int r7 = r7 + r2
            goto L_0x0b81
        L_0x0b55:
            r32 = r3
            r31 = r4
        L_0x0b59:
            boolean r3 = r14.bot
            if (r3 == 0) goto L_0x0b64
            int r3 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_BOTS
            r3 = r3 & r8
            if (r3 != 0) goto L_0x0b81
            int r7 = r7 + r2
            goto L_0x0b81
        L_0x0b64:
            boolean r3 = r14.self
            if (r3 != 0) goto L_0x0b74
            boolean r3 = r14.contact
            if (r3 == 0) goto L_0x0b6d
            goto L_0x0b74
        L_0x0b6d:
            int r3 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_NON_CONTACTS
            r3 = r3 & r8
            if (r3 != 0) goto L_0x0b81
            int r7 = r7 + r2
            goto L_0x0b81
        L_0x0b74:
            int r3 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CONTACTS
            r3 = r3 & r8
            if (r3 != 0) goto L_0x0b81
            int r7 = r7 + r2
            goto L_0x0b81
        L_0x0b7b:
            r24 = r2
            r32 = r3
            r31 = r4
        L_0x0b81:
            goto L_0x0bbf
        L_0x0b82:
            r32 = r3
            r31 = r4
            r16 = r13
            r13 = r24
            r24 = r2
            long r2 = -r10
            java.lang.Object r2 = r6.get(r2)
            org.telegram.tgnet.TLRPC$Chat r2 = (org.telegram.tgnet.TLRPC.Chat) r2
            if (r2 == 0) goto L_0x0bbf
            int r3 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED
            r3 = r3 & r8
            if (r3 == 0) goto L_0x0ba6
            long r3 = r2.id
            long r3 = -r3
            int r3 = r12.indexOfKey(r3)
            if (r3 < 0) goto L_0x0ba6
            int r7 = r7 + 1
            goto L_0x0bbf
        L_0x0ba6:
            boolean r3 = org.telegram.messenger.ChatObject.isChannel(r2)
            if (r3 == 0) goto L_0x0bb8
            boolean r3 = r2.megagroup
            if (r3 != 0) goto L_0x0bb8
            int r3 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_CHANNELS
            r3 = r3 & r8
            if (r3 != 0) goto L_0x0bbf
            int r7 = r7 + 1
            goto L_0x0bbf
        L_0x0bb8:
            int r3 = org.telegram.messenger.MessagesController.DIALOG_FILTER_FLAG_GROUPS
            r3 = r3 & r8
            if (r3 != 0) goto L_0x0bbf
            int r7 = r7 + 1
        L_0x0bbf:
            int r1 = r1 + 1
            r2 = r24
            r3 = r32
            r24 = r13
            r13 = r16
            goto L_0x0ab3
        L_0x0bcb:
            r32 = r3
            r16 = r13
            r13 = r24
            r24 = r2
            goto L_0x0bdc
        L_0x0bd4:
            r9 = r38
            r32 = r3
            r16 = r13
            r13 = r24
        L_0x0bdc:
            r1 = 0
            java.util.ArrayList<java.lang.Long> r2 = r5.neverShow
            int r2 = r2.size()
        L_0x0be3:
            if (r1 >= r2) goto L_0x0c3d
            java.util.ArrayList<java.lang.Long> r3 = r5.neverShow
            java.lang.Object r3 = r3.get(r1)
            java.lang.Long r3 = (java.lang.Long) r3
            long r3 = r3.longValue()
            boolean r10 = org.telegram.messenger.DialogObject.isUserDialog(r3)
            if (r10 == 0) goto L_0x0CLASSNAME
            r10 = r29
            java.lang.Object r11 = r10.get(r3)
            org.telegram.tgnet.TLRPC$User r11 = (org.telegram.tgnet.TLRPC.User) r11
            if (r11 == 0) goto L_0x0CLASSNAME
            int r7 = r7 + -1
        L_0x0CLASSNAME:
            java.lang.Object r14 = r13.get(r3)
            r11 = r14
            org.telegram.tgnet.TLRPC$User r11 = (org.telegram.tgnet.TLRPC.User) r11
            if (r11 == 0) goto L_0x0c1f
            r14 = 0
            java.lang.Integer r15 = java.lang.Integer.valueOf(r14)
            r14 = r32
            java.lang.Object r15 = r14.get(r3, r15)
            java.lang.Integer r15 = (java.lang.Integer) r15
            int r15 = r15.intValue()
            int r7 = r7 - r15
            goto L_0x0CLASSNAME
        L_0x0c1f:
            r14 = r32
        L_0x0CLASSNAME:
            r11 = r8
            goto L_0x0CLASSNAME
        L_0x0CLASSNAME:
            r10 = r29
            r14 = r32
            r11 = r8
            long r8 = -r3
            java.lang.Object r8 = r6.get(r8)
            org.telegram.tgnet.TLRPC$Chat r8 = (org.telegram.tgnet.TLRPC.Chat) r8
            if (r8 == 0) goto L_0x0CLASSNAME
            int r7 = r7 + -1
        L_0x0CLASSNAME:
            int r1 = r1 + 1
            r9 = r38
            r29 = r10
            r8 = r11
            r32 = r14
            goto L_0x0be3
        L_0x0c3d:
            r11 = r8
            r10 = r29
            r14 = r32
            goto L_0x0c4b
        L_0x0CLASSNAME:
            r14 = r3
            r11 = r8
            r16 = r13
            r13 = r24
            r10 = r29
        L_0x0c4b:
            if (r5 == 0) goto L_0x0CLASSNAME
            r5.pendingUnreadCount = r7
            r2 = r20
            r1 = r21
            goto L_0x0CLASSNAME
        L_0x0CLASSNAME:
            r2 = r20
            r1 = r21
            if (r2 != r1) goto L_0x0c5d
            r0.pendingMainUnreadCount = r7
            goto L_0x0CLASSNAME
        L_0x0c5d:
            int r4 = r1 + 1
            if (r2 != r4) goto L_0x0CLASSNAME
            r0.pendingArchiveUnreadCount = r7
        L_0x0CLASSNAME:
            int r2 = r2 + 1
            r4 = r1
            r3 = r10
            r24 = r13
            r9 = r14
            r13 = r16
            r11 = r31
            r1 = r38
            goto L_0x0516
        L_0x0CLASSNAME:
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda113 r1 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda113
            r1.<init>(r0)
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r1)
            return
        L_0x0c7b:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.updateFiltersReadCounter(org.telegram.messenger.support.LongSparseIntArray, org.telegram.messenger.support.LongSparseIntArray, boolean):void");
    }

    /* renamed from: lambda$updateFiltersReadCounter$83$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m1017xd003cac8() {
        ArrayList<MessagesController.DialogFilter> filters = getMessagesController().dialogFilters;
        int N = filters.size();
        for (int a = 0; a < N; a++) {
            filters.get(a).unreadCount = filters.get(a).pendingUnreadCount;
        }
        this.mainUnreadCount = this.pendingMainUnreadCount;
        this.archiveUnreadCount = this.pendingArchiveUnreadCount;
    }

    /* JADX WARNING: Removed duplicated region for block: B:101:0x02ef A[Catch:{ Exception -> 0x02f7 }] */
    /* JADX WARNING: Removed duplicated region for block: B:128:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void updateDialogsWithReadMessagesInternal(java.util.ArrayList<java.lang.Integer> r26, org.telegram.messenger.support.LongSparseIntArray r27, org.telegram.messenger.support.LongSparseIntArray r28, androidx.collection.LongSparseArray<java.util.ArrayList<java.lang.Integer>> r29) {
        /*
            r25 = this;
            r1 = r25
            r2 = r27
            r3 = r28
            org.telegram.messenger.support.LongSparseIntArray r0 = new org.telegram.messenger.support.LongSparseIntArray     // Catch:{ Exception -> 0x02f7 }
            r0.<init>()     // Catch:{ Exception -> 0x02f7 }
            org.telegram.messenger.support.LongSparseIntArray r4 = new org.telegram.messenger.support.LongSparseIntArray     // Catch:{ Exception -> 0x02f7 }
            r4.<init>()     // Catch:{ Exception -> 0x02f7 }
            java.util.ArrayList r5 = new java.util.ArrayList     // Catch:{ Exception -> 0x02f7 }
            r5.<init>()     // Catch:{ Exception -> 0x02f7 }
            boolean r6 = isEmpty((java.util.List<?>) r26)     // Catch:{ Exception -> 0x02f7 }
            java.lang.String r7 = ","
            r8 = 2
            r9 = 0
            r10 = 1
            if (r6 != 0) goto L_0x006a
            r6 = r26
            java.lang.String r7 = android.text.TextUtils.join(r7, r6)     // Catch:{ Exception -> 0x02f7 }
            org.telegram.SQLite.SQLiteDatabase r11 = r1.database     // Catch:{ Exception -> 0x02f7 }
            java.util.Locale r12 = java.util.Locale.US     // Catch:{ Exception -> 0x02f7 }
            java.lang.String r13 = "SELECT uid, read_state, out FROM messages_v2 WHERE mid IN(%s) AND is_channel = 0"
            java.lang.Object[] r14 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x02f7 }
            r14[r9] = r7     // Catch:{ Exception -> 0x02f7 }
            java.lang.String r12 = java.lang.String.format(r12, r13, r14)     // Catch:{ Exception -> 0x02f7 }
            java.lang.Object[] r13 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x02f7 }
            org.telegram.SQLite.SQLiteCursor r11 = r11.queryFinalized(r12, r13)     // Catch:{ Exception -> 0x02f7 }
        L_0x003a:
            boolean r12 = r11.next()     // Catch:{ Exception -> 0x02f7 }
            if (r12 == 0) goto L_0x0063
            int r12 = r11.intValue(r8)     // Catch:{ Exception -> 0x02f7 }
            if (r12 == 0) goto L_0x0047
            goto L_0x003a
        L_0x0047:
            int r13 = r11.intValue(r10)     // Catch:{ Exception -> 0x02f7 }
            if (r13 == 0) goto L_0x004e
            goto L_0x003a
        L_0x004e:
            long r14 = r11.longValue(r9)     // Catch:{ Exception -> 0x02f7 }
            int r16 = r0.get(r14)     // Catch:{ Exception -> 0x02f7 }
            if (r16 != 0) goto L_0x005c
            r0.put(r14, r10)     // Catch:{ Exception -> 0x02f7 }
            goto L_0x0061
        L_0x005c:
            int r10 = r16 + 1
            r0.put(r14, r10)     // Catch:{ Exception -> 0x02f7 }
        L_0x0061:
            r10 = 1
            goto L_0x003a
        L_0x0063:
            r11.dispose()     // Catch:{ Exception -> 0x02f7 }
            r24 = r0
            goto L_0x0215
        L_0x006a:
            r6 = r26
            boolean r10 = isEmpty((org.telegram.messenger.support.LongSparseIntArray) r27)     // Catch:{ Exception -> 0x02f7 }
            if (r10 != 0) goto L_0x00d7
            r10 = 0
        L_0x0073:
            int r12 = r27.size()     // Catch:{ Exception -> 0x02f7 }
            if (r10 >= r12) goto L_0x00d7
            long r12 = r2.keyAt(r10)     // Catch:{ Exception -> 0x02f7 }
            int r14 = r2.get(r12)     // Catch:{ Exception -> 0x02f7 }
            org.telegram.SQLite.SQLiteDatabase r15 = r1.database     // Catch:{ Exception -> 0x02f7 }
            java.util.Locale r11 = java.util.Locale.US     // Catch:{ Exception -> 0x02f7 }
            java.lang.String r9 = "SELECT COUNT(mid) FROM messages_v2 WHERE uid = %d AND mid > %d AND read_state IN(0,2) AND out = 0"
            java.lang.Object[] r2 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x02f7 }
            java.lang.Long r19 = java.lang.Long.valueOf(r12)     // Catch:{ Exception -> 0x02f7 }
            r18 = 0
            r2[r18] = r19     // Catch:{ Exception -> 0x02f7 }
            java.lang.Integer r19 = java.lang.Integer.valueOf(r14)     // Catch:{ Exception -> 0x02f7 }
            r17 = 1
            r2[r17] = r19     // Catch:{ Exception -> 0x02f7 }
            java.lang.String r2 = java.lang.String.format(r11, r9, r2)     // Catch:{ Exception -> 0x02f7 }
            r9 = 0
            java.lang.Object[] r11 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x02f7 }
            org.telegram.SQLite.SQLiteCursor r2 = r15.queryFinalized(r2, r11)     // Catch:{ Exception -> 0x02f7 }
            boolean r9 = r2.next()     // Catch:{ Exception -> 0x02f7 }
            if (r9 == 0) goto L_0x00b2
            r9 = 0
            int r11 = r2.intValue(r9)     // Catch:{ Exception -> 0x02f7 }
            r0.put(r12, r11)     // Catch:{ Exception -> 0x02f7 }
        L_0x00b2:
            r2.dispose()     // Catch:{ Exception -> 0x02f7 }
            org.telegram.SQLite.SQLiteDatabase r9 = r1.database     // Catch:{ Exception -> 0x02f7 }
            java.lang.String r11 = "UPDATE dialogs SET inbox_max = max((SELECT inbox_max FROM dialogs WHERE did = ?), ?) WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r9 = r9.executeFast(r11)     // Catch:{ Exception -> 0x02f7 }
            r9.requery()     // Catch:{ Exception -> 0x02f7 }
            r11 = 1
            r9.bindLong(r11, r12)     // Catch:{ Exception -> 0x02f7 }
            r9.bindInteger(r8, r14)     // Catch:{ Exception -> 0x02f7 }
            r11 = 3
            r9.bindLong(r11, r12)     // Catch:{ Exception -> 0x02f7 }
            r9.step()     // Catch:{ Exception -> 0x02f7 }
            r9.dispose()     // Catch:{ Exception -> 0x02f7 }
            int r10 = r10 + 1
            r2 = r27
            r9 = 0
            goto L_0x0073
        L_0x00d7:
            boolean r2 = isEmpty((androidx.collection.LongSparseArray<?>) r29)     // Catch:{ Exception -> 0x02f7 }
            if (r2 != 0) goto L_0x01de
            r2 = 0
            int r9 = r29.size()     // Catch:{ Exception -> 0x02f7 }
        L_0x00e2:
            if (r2 >= r9) goto L_0x01d9
            r10 = r29
            java.lang.Object r11 = r10.valueAt(r2)     // Catch:{ Exception -> 0x02f7 }
            java.util.ArrayList r11 = (java.util.ArrayList) r11     // Catch:{ Exception -> 0x02f7 }
            java.util.ArrayList r12 = new java.util.ArrayList     // Catch:{ Exception -> 0x02f7 }
            r12.<init>(r11)     // Catch:{ Exception -> 0x02f7 }
            java.lang.String r13 = android.text.TextUtils.join(r7, r11)     // Catch:{ Exception -> 0x02f7 }
            r14 = 0
            org.telegram.SQLite.SQLiteDatabase r8 = r1.database     // Catch:{ Exception -> 0x02f7 }
            java.util.Locale r6 = java.util.Locale.US     // Catch:{ Exception -> 0x02f7 }
            r20 = r7
            java.lang.String r7 = "SELECT uid, read_state, out, mention, mid, is_channel FROM messages_v2 WHERE mid IN(%s)"
            r21 = r9
            r9 = 1
            java.lang.Object[] r10 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x02f7 }
            r9 = 0
            r10[r9] = r13     // Catch:{ Exception -> 0x02f7 }
            java.lang.String r6 = java.lang.String.format(r6, r7, r10)     // Catch:{ Exception -> 0x02f7 }
            java.lang.Object[] r7 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x02f7 }
            org.telegram.SQLite.SQLiteCursor r6 = r8.queryFinalized(r6, r7)     // Catch:{ Exception -> 0x02f7 }
        L_0x0111:
            boolean r7 = r6.next()     // Catch:{ Exception -> 0x02f7 }
            if (r7 == 0) goto L_0x01a6
            r7 = 0
            long r8 = r6.longValue(r7)     // Catch:{ Exception -> 0x02f7 }
            r7 = r8
            r9 = 4
            int r9 = r6.intValue(r9)     // Catch:{ Exception -> 0x02f7 }
            java.lang.Integer r9 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x02f7 }
            r12.remove(r9)     // Catch:{ Exception -> 0x02f7 }
            r9 = 1
            int r10 = r6.intValue(r9)     // Catch:{ Exception -> 0x02f7 }
            r9 = 2
            if (r10 >= r9) goto L_0x0192
            int r10 = r6.intValue(r9)     // Catch:{ Exception -> 0x02f7 }
            if (r10 != 0) goto L_0x0192
            r9 = 3
            int r10 = r6.intValue(r9)     // Catch:{ Exception -> 0x02f7 }
            r9 = 1
            if (r10 != r9) goto L_0x0192
            r9 = -1
            int r9 = r4.get(r7, r9)     // Catch:{ Exception -> 0x02f7 }
            if (r9 >= 0) goto L_0x0181
            org.telegram.SQLite.SQLiteDatabase r10 = r1.database     // Catch:{ Exception -> 0x02f7 }
            r22 = r11
            java.lang.StringBuilder r11 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x02f7 }
            r11.<init>()     // Catch:{ Exception -> 0x02f7 }
            r23 = r13
            java.lang.String r13 = "SELECT unread_count_i FROM dialogs WHERE did = "
            r11.append(r13)     // Catch:{ Exception -> 0x02f7 }
            r11.append(r7)     // Catch:{ Exception -> 0x02f7 }
            java.lang.String r11 = r11.toString()     // Catch:{ Exception -> 0x02f7 }
            r24 = r0
            r13 = 0
            java.lang.Object[] r0 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x02f7 }
            org.telegram.SQLite.SQLiteCursor r0 = r10.queryFinalized(r11, r0)     // Catch:{ Exception -> 0x02f7 }
            r10 = 0
            boolean r11 = r0.next()     // Catch:{ Exception -> 0x02f7 }
            if (r11 == 0) goto L_0x0173
            r11 = 0
            int r13 = r0.intValue(r11)     // Catch:{ Exception -> 0x02f7 }
            r10 = r13
        L_0x0173:
            r0.dispose()     // Catch:{ Exception -> 0x02f7 }
            int r11 = r10 + -1
            r13 = 0
            int r11 = java.lang.Math.max(r13, r11)     // Catch:{ Exception -> 0x02f7 }
            r4.put(r7, r11)     // Catch:{ Exception -> 0x02f7 }
            goto L_0x0198
        L_0x0181:
            r24 = r0
            r22 = r11
            r23 = r13
            int r0 = r9 + -1
            r10 = 0
            int r0 = java.lang.Math.max(r10, r0)     // Catch:{ Exception -> 0x02f7 }
            r4.put(r7, r0)     // Catch:{ Exception -> 0x02f7 }
            goto L_0x0198
        L_0x0192:
            r24 = r0
            r22 = r11
            r23 = r13
        L_0x0198:
            r0 = 5
            long r9 = r6.longValue(r0)     // Catch:{ Exception -> 0x02f7 }
            r14 = r9
            r11 = r22
            r13 = r23
            r0 = r24
            goto L_0x0111
        L_0x01a6:
            r24 = r0
            r22 = r11
            r23 = r13
            r6.dispose()     // Catch:{ Exception -> 0x02f7 }
            boolean r0 = r12.isEmpty()     // Catch:{ Exception -> 0x02f7 }
            if (r0 != 0) goto L_0x01cc
            r7 = 0
            int r0 = (r14 > r7 ? 1 : (r14 == r7 ? 0 : -1))
            if (r0 == 0) goto L_0x01cc
            java.lang.Long r0 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x02f7 }
            boolean r0 = r5.contains(r0)     // Catch:{ Exception -> 0x02f7 }
            if (r0 != 0) goto L_0x01cc
            java.lang.Long r0 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x02f7 }
            r5.add(r0)     // Catch:{ Exception -> 0x02f7 }
        L_0x01cc:
            int r2 = r2 + 1
            r6 = r26
            r7 = r20
            r9 = r21
            r0 = r24
            r8 = 2
            goto L_0x00e2
        L_0x01d9:
            r24 = r0
            r21 = r9
            goto L_0x01e0
        L_0x01de:
            r24 = r0
        L_0x01e0:
            boolean r0 = isEmpty((org.telegram.messenger.support.LongSparseIntArray) r28)     // Catch:{ Exception -> 0x02f7 }
            if (r0 != 0) goto L_0x0215
            r0 = 0
        L_0x01e7:
            int r2 = r28.size()     // Catch:{ Exception -> 0x02f7 }
            if (r0 >= r2) goto L_0x0215
            long r6 = r3.keyAt(r0)     // Catch:{ Exception -> 0x02f7 }
            int r2 = r3.get(r6)     // Catch:{ Exception -> 0x02f7 }
            org.telegram.SQLite.SQLiteDatabase r8 = r1.database     // Catch:{ Exception -> 0x02f7 }
            java.lang.String r9 = "UPDATE dialogs SET outbox_max = max((SELECT outbox_max FROM dialogs WHERE did = ?), ?) WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r8 = r8.executeFast(r9)     // Catch:{ Exception -> 0x02f7 }
            r8.requery()     // Catch:{ Exception -> 0x02f7 }
            r9 = 1
            r8.bindLong(r9, r6)     // Catch:{ Exception -> 0x02f7 }
            r9 = 2
            r8.bindInteger(r9, r2)     // Catch:{ Exception -> 0x02f7 }
            r9 = 3
            r8.bindLong(r9, r6)     // Catch:{ Exception -> 0x02f7 }
            r8.step()     // Catch:{ Exception -> 0x02f7 }
            r8.dispose()     // Catch:{ Exception -> 0x02f7 }
            int r0 = r0 + 1
            goto L_0x01e7
        L_0x0215:
            int r0 = r24.size()     // Catch:{ Exception -> 0x02f7 }
            if (r0 > 0) goto L_0x0226
            int r0 = r4.size()     // Catch:{ Exception -> 0x02f7 }
            if (r0 <= 0) goto L_0x0222
            goto L_0x0226
        L_0x0222:
            r7 = r24
            goto L_0x02de
        L_0x0226:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02f7 }
            r0.beginTransaction()     // Catch:{ Exception -> 0x02f7 }
            int r0 = r24.size()     // Catch:{ Exception -> 0x02f7 }
            if (r0 <= 0) goto L_0x02a6
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x02f7 }
            r0.<init>()     // Catch:{ Exception -> 0x02f7 }
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database     // Catch:{ Exception -> 0x02f7 }
            java.lang.String r6 = "UPDATE dialogs SET unread_count = ? WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r6)     // Catch:{ Exception -> 0x02f7 }
            r6 = 0
        L_0x023f:
            int r7 = r24.size()     // Catch:{ Exception -> 0x02f7 }
            if (r6 >= r7) goto L_0x029d
            r7 = r24
            long r8 = r7.keyAt(r6)     // Catch:{ Exception -> 0x02f7 }
            r10 = 0
            int r11 = r7.valueAt(r6)     // Catch:{ Exception -> 0x02f7 }
            org.telegram.SQLite.SQLiteDatabase r12 = r1.database     // Catch:{ Exception -> 0x02f7 }
            java.lang.StringBuilder r13 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x02f7 }
            r13.<init>()     // Catch:{ Exception -> 0x02f7 }
            java.lang.String r14 = "SELECT unread_count FROM dialogs WHERE did = "
            r13.append(r14)     // Catch:{ Exception -> 0x02f7 }
            r13.append(r8)     // Catch:{ Exception -> 0x02f7 }
            java.lang.String r13 = r13.toString()     // Catch:{ Exception -> 0x02f7 }
            r14 = 0
            java.lang.Object[] r15 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x02f7 }
            org.telegram.SQLite.SQLiteCursor r12 = r12.queryFinalized(r13, r15)     // Catch:{ Exception -> 0x02f7 }
            boolean r13 = r12.next()     // Catch:{ Exception -> 0x02f7 }
            if (r13 == 0) goto L_0x0277
            r13 = 0
            int r14 = r12.intValue(r13)     // Catch:{ Exception -> 0x02f7 }
            r10 = r14
            goto L_0x0278
        L_0x0277:
            r13 = 0
        L_0x0278:
            r12.dispose()     // Catch:{ Exception -> 0x02f7 }
            if (r10 != r11) goto L_0x0283
            r7.removeAt(r6)     // Catch:{ Exception -> 0x02f7 }
            int r6 = r6 + -1
            goto L_0x0298
        L_0x0283:
            r2.requery()     // Catch:{ Exception -> 0x02f7 }
            r14 = 1
            r2.bindInteger(r14, r11)     // Catch:{ Exception -> 0x02f7 }
            r14 = 2
            r2.bindLong(r14, r8)     // Catch:{ Exception -> 0x02f7 }
            r2.step()     // Catch:{ Exception -> 0x02f7 }
            java.lang.Long r14 = java.lang.Long.valueOf(r8)     // Catch:{ Exception -> 0x02f7 }
            r0.add(r14)     // Catch:{ Exception -> 0x02f7 }
        L_0x0298:
            r8 = 1
            int r6 = r6 + r8
            r24 = r7
            goto L_0x023f
        L_0x029d:
            r7 = r24
            r2.dispose()     // Catch:{ Exception -> 0x02f7 }
            r1.updateWidgets((java.util.ArrayList<java.lang.Long>) r0)     // Catch:{ Exception -> 0x02f7 }
            goto L_0x02a8
        L_0x02a6:
            r7 = r24
        L_0x02a8:
            int r0 = r4.size()     // Catch:{ Exception -> 0x02f7 }
            if (r0 <= 0) goto L_0x02d9
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02f7 }
            java.lang.String r2 = "UPDATE dialogs SET unread_count_i = ? WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x02f7 }
            r2 = 0
        L_0x02b7:
            int r6 = r4.size()     // Catch:{ Exception -> 0x02f7 }
            if (r2 >= r6) goto L_0x02d6
            r0.requery()     // Catch:{ Exception -> 0x02f7 }
            int r6 = r4.valueAt(r2)     // Catch:{ Exception -> 0x02f7 }
            r8 = 1
            r0.bindInteger(r8, r6)     // Catch:{ Exception -> 0x02f7 }
            long r8 = r4.keyAt(r2)     // Catch:{ Exception -> 0x02f7 }
            r6 = 2
            r0.bindLong(r6, r8)     // Catch:{ Exception -> 0x02f7 }
            r0.step()     // Catch:{ Exception -> 0x02f7 }
            int r2 = r2 + 1
            goto L_0x02b7
        L_0x02d6:
            r0.dispose()     // Catch:{ Exception -> 0x02f7 }
        L_0x02d9:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02f7 }
            r0.commitTransaction()     // Catch:{ Exception -> 0x02f7 }
        L_0x02de:
            r0 = 1
            r1.updateFiltersReadCounter(r7, r4, r0)     // Catch:{ Exception -> 0x02f7 }
            org.telegram.messenger.MessagesController r0 = r25.getMessagesController()     // Catch:{ Exception -> 0x02f7 }
            r0.processDialogsUpdateRead(r7, r4)     // Catch:{ Exception -> 0x02f7 }
            boolean r0 = r5.isEmpty()     // Catch:{ Exception -> 0x02f7 }
            if (r0 != 0) goto L_0x02f6
            org.telegram.messenger.MessagesController r0 = r25.getMessagesController()     // Catch:{ Exception -> 0x02f7 }
            r0.reloadMentionsCountForChannels(r5)     // Catch:{ Exception -> 0x02f7 }
        L_0x02f6:
            goto L_0x02fb
        L_0x02f7:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x02fb:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.updateDialogsWithReadMessagesInternal(java.util.ArrayList, org.telegram.messenger.support.LongSparseIntArray, org.telegram.messenger.support.LongSparseIntArray, androidx.collection.LongSparseArray):void");
    }

    private static boolean isEmpty(SparseArray<?> array) {
        return array == null || array.size() == 0;
    }

    private static boolean isEmpty(LongSparseIntArray array) {
        return array == null || array.size() == 0;
    }

    private static boolean isEmpty(List<?> array) {
        return array == null || array.isEmpty();
    }

    private static boolean isEmpty(SparseIntArray array) {
        return array == null || array.size() == 0;
    }

    private static boolean isEmpty(LongSparseArray<?> array) {
        return array == null || array.size() == 0;
    }

    public void updateDialogsWithReadMessages(LongSparseIntArray inbox, LongSparseIntArray outbox, LongSparseArray<ArrayList<Integer>> mentions, boolean useQueue) {
        if (isEmpty(inbox) && isEmpty(outbox) && isEmpty((LongSparseArray<?>) mentions)) {
            return;
        }
        if (useQueue) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda58(this, inbox, outbox, mentions));
        } else {
            updateDialogsWithReadMessagesInternal((ArrayList<Integer>) null, inbox, outbox, mentions);
        }
    }

    /* renamed from: lambda$updateDialogsWithReadMessages$84$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m1012x670ab943(LongSparseIntArray inbox, LongSparseIntArray outbox, LongSparseArray mentions) {
        updateDialogsWithReadMessagesInternal((ArrayList<Integer>) null, inbox, outbox, mentions);
    }

    public void updateChatParticipants(TLRPC.ChatParticipants participants) {
        if (participants != null) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda64(this, participants));
        }
    }

    /* renamed from: lambda$updateChatParticipants$86$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m1007xa69b5132(TLRPC.ChatParticipants participants) {
        NativeByteBuffer data;
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            SQLiteCursor cursor = sQLiteDatabase.queryFinalized("SELECT info, pinned, online, inviter FROM chat_settings_v2 WHERE uid = " + participants.chat_id, new Object[0]);
            TLRPC.ChatFull info = null;
            new ArrayList();
            if (cursor.next() && (data = cursor.byteBufferValue(0)) != null) {
                info = TLRPC.ChatFull.TLdeserialize(data, data.readInt32(false), false);
                data.reuse();
                info.pinned_msg_id = cursor.intValue(1);
                info.online_count = cursor.intValue(2);
                info.inviterId = cursor.longValue(3);
            }
            cursor.dispose();
            if (info instanceof TLRPC.TL_chatFull) {
                info.participants = participants;
                AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda62(this, info));
                SQLitePreparedStatement state = this.database.executeFast("REPLACE INTO chat_settings_v2 VALUES(?, ?, ?, ?, ?, ?)");
                NativeByteBuffer data2 = new NativeByteBuffer(info.getObjectSize());
                info.serializeToStream(data2);
                state.bindLong(1, info.id);
                state.bindByteBuffer(2, data2);
                state.bindInteger(3, info.pinned_msg_id);
                state.bindInteger(4, info.online_count);
                state.bindLong(5, info.inviterId);
                state.bindInteger(6, info.invitesCount);
                state.step();
                state.dispose();
                data2.reuse();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* renamed from: lambda$updateChatParticipants$85$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m1006x4f7d6053(TLRPC.ChatFull finalInfo) {
        getNotificationCenter().postNotificationName(NotificationCenter.chatInfoDidLoad, finalInfo, 0, false, false);
    }

    public void loadChannelAdmins(long chatId) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda157(this, chatId));
    }

    /* renamed from: lambda$loadChannelAdmins$87$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m912xbvar_a17(long chatId) {
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            SQLiteCursor cursor = sQLiteDatabase.queryFinalized("SELECT uid, data FROM channel_admins_v3 WHERE did = " + chatId, new Object[0]);
            LongSparseArray<TLRPC.ChannelParticipant> ids = new LongSparseArray<>();
            while (cursor.next()) {
                NativeByteBuffer data = cursor.byteBufferValue(1);
                if (data != null) {
                    TLRPC.ChannelParticipant participant = TLRPC.ChannelParticipant.TLdeserialize(data, data.readInt32(false), false);
                    data.reuse();
                    if (participant != null) {
                        ids.put(cursor.longValue(0), participant);
                    }
                }
            }
            cursor.dispose();
            getMessagesController().processLoadedChannelAdmins(ids, chatId, true);
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void putChannelAdmins(long chatId, LongSparseArray<TLRPC.ChannelParticipant> ids) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda187(this, chatId, ids));
    }

    /* renamed from: lambda$putChannelAdmins$88$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m959x7ebe6107(long chatId, LongSparseArray ids) {
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM channel_admins_v3 WHERE did = " + chatId).stepThis().dispose();
            this.database.beginTransaction();
            SQLitePreparedStatement state = this.database.executeFast("REPLACE INTO channel_admins_v3 VALUES(?, ?, ?)");
            int currentTimeMillis = (int) (System.currentTimeMillis() / 1000);
            for (int a = 0; a < ids.size(); a++) {
                state.requery();
                state.bindLong(1, chatId);
                state.bindLong(2, ids.keyAt(a));
                TLRPC.ChannelParticipant participant = (TLRPC.ChannelParticipant) ids.valueAt(a);
                NativeByteBuffer data = new NativeByteBuffer(participant.getObjectSize());
                participant.serializeToStream(data);
                state.bindByteBuffer(3, data);
                state.step();
                data.reuse();
            }
            state.dispose();
            this.database.commitTransaction();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void updateChannelUsers(long channelId, ArrayList<TLRPC.ChannelParticipant> participants) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda190(this, channelId, participants));
    }

    /* renamed from: lambda$updateChannelUsers$89$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m1000x4469ce3c(long channelId, ArrayList participants) {
        long did = -channelId;
        try {
            this.database.executeFast("DELETE FROM channel_users_v2 WHERE did = " + did).stepThis().dispose();
            this.database.beginTransaction();
            SQLitePreparedStatement state = this.database.executeFast("REPLACE INTO channel_users_v2 VALUES(?, ?, ?, ?)");
            int date = (int) (System.currentTimeMillis() / 1000);
            for (int a = 0; a < participants.size(); a++) {
                TLRPC.ChannelParticipant participant = (TLRPC.ChannelParticipant) participants.get(a);
                state.requery();
                state.bindLong(1, did);
                state.bindLong(2, MessageObject.getPeerId(participant.peer));
                state.bindInteger(3, date);
                NativeByteBuffer data = new NativeByteBuffer(participant.getObjectSize());
                participant.serializeToStream(data);
                state.bindByteBuffer(4, data);
                state.step();
                data.reuse();
                date--;
            }
            state.dispose();
            this.database.commitTransaction();
            loadChatInfo(channelId, true, (CountDownLatch) null, false, true);
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void saveBotCache(String key, TLObject result) {
        if (result != null && !TextUtils.isEmpty(key)) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda59(this, result, key));
        }
    }

    /* renamed from: lambda$saveBotCache$90$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m985lambda$saveBotCache$90$orgtelegrammessengerMessagesStorage(TLObject result, String key) {
        try {
            int currentDate = getConnectionsManager().getCurrentTime();
            if (result instanceof TLRPC.TL_messages_botCallbackAnswer) {
                currentDate += ((TLRPC.TL_messages_botCallbackAnswer) result).cache_time;
            } else if (result instanceof TLRPC.TL_messages_botResults) {
                currentDate += ((TLRPC.TL_messages_botResults) result).cache_time;
            }
            SQLitePreparedStatement state = this.database.executeFast("REPLACE INTO botcache VALUES(?, ?, ?)");
            NativeByteBuffer data = new NativeByteBuffer(result.getObjectSize());
            result.serializeToStream(data);
            state.bindString(1, key);
            state.bindInteger(2, currentDate);
            state.bindByteBuffer(3, data);
            state.step();
            state.dispose();
            data.reuse();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void getBotCache(String key, RequestDelegate requestDelegate) {
        if (key != null && requestDelegate != null) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda143(this, getConnectionsManager().getCurrentTime(), key, requestDelegate));
        }
    }

    /* renamed from: lambda$getBotCache$91$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m882lambda$getBotCache$91$orgtelegrammessengerMessagesStorage(int currentDate, String key, RequestDelegate requestDelegate) {
        TLObject result = null;
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM botcache WHERE date < " + currentDate).stepThis().dispose();
            SQLiteCursor cursor = this.database.queryFinalized("SELECT data FROM botcache WHERE id = ?", key);
            if (cursor.next()) {
                try {
                    NativeByteBuffer data = cursor.byteBufferValue(0);
                    if (data != null) {
                        int constructor = data.readInt32(false);
                        if (constructor == TLRPC.TL_messages_botCallbackAnswer.constructor) {
                            result = TLRPC.TL_messages_botCallbackAnswer.TLdeserialize(data, constructor, false);
                        } else {
                            result = TLRPC.messages_BotResults.TLdeserialize(data, constructor, false);
                        }
                        data.reuse();
                    }
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                }
            }
            cursor.dispose();
        } catch (Exception e2) {
            FileLog.e((Throwable) e2);
        } catch (Throwable th) {
            requestDelegate.run((TLObject) null, (TLRPC.TL_error) null);
            throw th;
        }
        requestDelegate.run(result, (TLRPC.TL_error) null);
    }

    public void loadUserInfo(TLRPC.User user, boolean force, int classGuid, int fromMessageId) {
        if (user != null) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda80(this, user, force, classGuid));
        }
    }

    /* renamed from: lambda$loadUserInfo$92$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m937lambda$loadUserInfo$92$orgtelegrammessengerMessagesStorage(TLRPC.User user, boolean force, int classGuid) {
        boolean pinnedEndReached;
        int totalPinnedCount;
        TLRPC.UserFull info;
        ArrayList<MessageObject> messageObjects;
        NativeByteBuffer data;
        TLRPC.User user2 = user;
        HashMap<Integer, MessageObject> pinnedMessagesMap = new HashMap<>();
        ArrayList<Integer> pinnedMessages = new ArrayList<>();
        try {
            SQLiteCursor cursor = this.database.queryFinalized("SELECT info, pinned FROM user_settings WHERE uid = " + user2.id, new Object[0]);
            boolean pinnedEndReached2 = true;
            if (!cursor.next() || (data = cursor.byteBufferValue(0)) == null) {
                info = null;
            } else {
                TLRPC.UserFull info2 = TLRPC.UserFull.TLdeserialize(data, data.readInt32(false), false);
                info2.pinned_msg_id = cursor.intValue(1);
                data.reuse();
                info = info2;
            }
            try {
                cursor.dispose();
                SQLiteCursor cursor2 = getMessagesStorage().getDatabase().queryFinalized(String.format(Locale.US, "SELECT mid FROM chat_pinned_v2 WHERE uid = %d ORDER BY mid DESC", new Object[]{Long.valueOf(user2.id)}), new Object[0]);
                while (cursor2.next()) {
                    int id = cursor2.intValue(0);
                    pinnedMessages.add(Integer.valueOf(id));
                    pinnedMessagesMap.put(Integer.valueOf(id), (Object) null);
                }
                cursor2.dispose();
                SQLiteCursor cursor3 = this.database.queryFinalized("SELECT count, end FROM chat_pinned_count WHERE uid = " + user2.id, new Object[0]);
                if (cursor3.next()) {
                    int totalPinnedCount2 = cursor3.intValue(0);
                    if (cursor3.intValue(1) == 0) {
                        pinnedEndReached2 = false;
                    }
                    totalPinnedCount = totalPinnedCount2;
                    pinnedEndReached = pinnedEndReached2;
                } else {
                    totalPinnedCount = 0;
                    pinnedEndReached = false;
                }
                try {
                    cursor3.dispose();
                    if (!(info == null || info.pinned_msg_id == 0 || (!pinnedMessages.isEmpty() && info.pinned_msg_id <= pinnedMessages.get(0).intValue()))) {
                        pinnedMessages.clear();
                        pinnedMessages.add(Integer.valueOf(info.pinned_msg_id));
                        pinnedMessagesMap.put(Integer.valueOf(info.pinned_msg_id), (Object) null);
                    }
                    if (!pinnedMessages.isEmpty() && (messageObjects = getMediaDataController().loadPinnedMessages(user2.id, 0, pinnedMessages, false)) != null) {
                        int N = messageObjects.size();
                        for (int a = 0; a < N; a++) {
                            MessageObject messageObject = messageObjects.get(a);
                            pinnedMessagesMap.put(Integer.valueOf(messageObject.getId()), messageObject);
                        }
                    }
                } catch (Exception e) {
                    e = e;
                    try {
                        FileLog.e((Throwable) e);
                        getMessagesController().processUserInfo(user, info, true, force, classGuid, pinnedMessages, pinnedMessagesMap, totalPinnedCount, pinnedEndReached);
                    } catch (Throwable th) {
                        th = th;
                        getMessagesController().processUserInfo(user, info, true, force, classGuid, pinnedMessages, pinnedMessagesMap, totalPinnedCount, pinnedEndReached);
                        throw th;
                    }
                }
            } catch (Exception e2) {
                e = e2;
                totalPinnedCount = 0;
                pinnedEndReached = false;
                FileLog.e((Throwable) e);
                getMessagesController().processUserInfo(user, info, true, force, classGuid, pinnedMessages, pinnedMessagesMap, totalPinnedCount, pinnedEndReached);
            } catch (Throwable th2) {
                th = th2;
                totalPinnedCount = 0;
                pinnedEndReached = false;
                getMessagesController().processUserInfo(user, info, true, force, classGuid, pinnedMessages, pinnedMessagesMap, totalPinnedCount, pinnedEndReached);
                throw th;
            }
        } catch (Exception e3) {
            e = e3;
            totalPinnedCount = 0;
            pinnedEndReached = false;
            info = null;
            FileLog.e((Throwable) e);
            getMessagesController().processUserInfo(user, info, true, force, classGuid, pinnedMessages, pinnedMessagesMap, totalPinnedCount, pinnedEndReached);
        } catch (Throwable th3) {
            th = th3;
            totalPinnedCount = 0;
            pinnedEndReached = false;
            info = null;
            getMessagesController().processUserInfo(user, info, true, force, classGuid, pinnedMessages, pinnedMessagesMap, totalPinnedCount, pinnedEndReached);
            throw th;
        }
        getMessagesController().processUserInfo(user, info, true, force, classGuid, pinnedMessages, pinnedMessagesMap, totalPinnedCount, pinnedEndReached);
    }

    public void updateUserInfo(TLRPC.UserFull info, boolean ifExist) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda97(this, ifExist, info));
    }

    /* renamed from: lambda$updateUserInfo$93$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m1030lambda$updateUserInfo$93$orgtelegrammessengerMessagesStorage(boolean ifExist, TLRPC.UserFull info) {
        if (ifExist) {
            try {
                SQLiteDatabase sQLiteDatabase = this.database;
                SQLiteCursor cursor = sQLiteDatabase.queryFinalized("SELECT uid FROM user_settings WHERE uid = " + info.user.id, new Object[0]);
                boolean exist = cursor.next();
                cursor.dispose();
                if (!exist) {
                    return;
                }
            } catch (Exception e) {
                FileLog.e((Throwable) e);
                return;
            }
        }
        SQLitePreparedStatement state = this.database.executeFast("REPLACE INTO user_settings VALUES(?, ?, ?)");
        NativeByteBuffer data = new NativeByteBuffer(info.getObjectSize());
        info.serializeToStream(data);
        state.bindLong(1, info.user.id);
        state.bindByteBuffer(2, data);
        state.bindInteger(3, info.pinned_msg_id);
        state.step();
        state.dispose();
        data.reuse();
        if ((info.flags & 2048) != 0) {
            SQLitePreparedStatement state2 = this.database.executeFast("UPDATE dialogs SET folder_id = ? WHERE did = ?");
            state2.bindInteger(1, info.folder_id);
            state2.bindLong(2, info.user.id);
            state2.step();
            state2.dispose();
            this.unknownDialogsIds.remove(info.user.id);
        }
    }

    public void saveChatInviter(long chatId, long inviterId) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda178(this, inviterId, chatId));
    }

    /* renamed from: lambda$saveChatInviter$94$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m987lambda$saveChatInviter$94$orgtelegrammessengerMessagesStorage(long inviterId, long chatId) {
        try {
            SQLitePreparedStatement state = this.database.executeFast("UPDATE chat_settings_v2 SET inviter = ? WHERE uid = ?");
            state.requery();
            state.bindLong(1, inviterId);
            state.bindLong(2, chatId);
            state.step();
            state.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void saveChatLinksCount(long chatId, int linksCount) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda134(this, linksCount, chatId));
    }

    /* renamed from: lambda$saveChatLinksCount$95$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m988xb3de847e(int linksCount, long chatId) {
        try {
            SQLitePreparedStatement state = this.database.executeFast("UPDATE chat_settings_v2 SET links = ? WHERE uid = ?");
            state.requery();
            state.bindInteger(1, linksCount);
            state.bindLong(2, chatId);
            state.step();
            state.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void updateChatInfo(TLRPC.ChatFull info, boolean ifExist) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda63(this, info, ifExist));
    }

    /* renamed from: lambda$updateChatInfo$96$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m1004lambda$updateChatInfo$96$orgtelegrammessengerMessagesStorage(TLRPC.ChatFull info, boolean ifExist) {
        TLRPC.ChatFull chatFull = info;
        int currentOnline = -1;
        int links = 0;
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            SQLiteCursor cursor = sQLiteDatabase.queryFinalized("SELECT online, inviter, links FROM chat_settings_v2 WHERE uid = " + chatFull.id, new Object[0]);
            if (cursor.next()) {
                currentOnline = cursor.intValue(0);
                chatFull.inviterId = cursor.longValue(1);
                links = cursor.intValue(2);
            }
            cursor.dispose();
            if (!ifExist || currentOnline != -1) {
                if (currentOnline >= 0 && (chatFull.flags & 8192) == 0) {
                    chatFull.online_count = currentOnline;
                }
                if (links >= 0) {
                    chatFull.invitesCount = links;
                }
                SQLitePreparedStatement state = this.database.executeFast("REPLACE INTO chat_settings_v2 VALUES(?, ?, ?, ?, ?, ?)");
                NativeByteBuffer data = new NativeByteBuffer(info.getObjectSize());
                chatFull.serializeToStream(data);
                state.bindLong(1, chatFull.id);
                state.bindByteBuffer(2, data);
                state.bindInteger(3, chatFull.pinned_msg_id);
                state.bindInteger(4, chatFull.online_count);
                state.bindLong(5, chatFull.inviterId);
                state.bindInteger(6, chatFull.invitesCount);
                state.step();
                state.dispose();
                data.reuse();
                if (chatFull instanceof TLRPC.TL_channelFull) {
                    SQLiteDatabase sQLiteDatabase2 = this.database;
                    SQLiteCursor cursor2 = sQLiteDatabase2.queryFinalized("SELECT inbox_max, outbox_max FROM dialogs WHERE did = " + (-chatFull.id), new Object[0]);
                    if (cursor2.next() && cursor2.intValue(0) < chatFull.read_inbox_max_id) {
                        int outbox_max = cursor2.intValue(1);
                        SQLitePreparedStatement state2 = this.database.executeFast("UPDATE dialogs SET unread_count = ?, inbox_max = ?, outbox_max = ? WHERE did = ?");
                        state2.bindInteger(1, chatFull.unread_count);
                        state2.bindInteger(2, chatFull.read_inbox_max_id);
                        state2.bindInteger(3, Math.max(outbox_max, chatFull.read_outbox_max_id));
                        state2.bindLong(4, -chatFull.id);
                        state2.step();
                        state2.dispose();
                    }
                    cursor2.dispose();
                }
                if ((chatFull.flags & 2048) != 0) {
                    SQLitePreparedStatement state3 = this.database.executeFast("UPDATE dialogs SET folder_id = ? WHERE did = ?");
                    state3.bindInteger(1, chatFull.folder_id);
                    state3.bindLong(2, -chatFull.id);
                    state3.step();
                    state3.dispose();
                    this.unknownDialogsIds.remove(-chatFull.id);
                }
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void updateChatOnlineCount(long channelId, int onlineCount) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda136(this, onlineCount, channelId));
    }

    /* renamed from: lambda$updateChatOnlineCount$97$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m1005x5628CLASSNAME(int onlineCount, long channelId) {
        try {
            SQLitePreparedStatement state = this.database.executeFast("UPDATE chat_settings_v2 SET online = ? WHERE uid = ?");
            state.requery();
            state.bindInteger(1, onlineCount);
            state.bindLong(2, channelId);
            state.step();
            state.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void updatePinnedMessages(long dialogId, ArrayList<Integer> ids, boolean pin, int totalCount, int maxId, boolean end, HashMap<Integer, MessageObject> messages) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda96(this, pin, messages, maxId, dialogId, ids, totalCount, end));
    }

    /* renamed from: lambda$updatePinnedMessages$100$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m1024xccc5ba3f(boolean pin, HashMap messages, int maxId, long dialogId, ArrayList ids, int totalCount, boolean end) {
        boolean endReached;
        int newCount;
        boolean endReached2;
        int newCount2;
        int alreadyAdded;
        boolean endReached3;
        int newCount3;
        boolean endReached4;
        int newCount22;
        HashMap hashMap = messages;
        long j = dialogId;
        ArrayList arrayList = ids;
        int i = 2;
        if (pin) {
            try {
                this.database.beginTransaction();
                if (hashMap != null) {
                    if (maxId == 0) {
                        this.database.executeFast("DELETE FROM chat_pinned_v2 WHERE uid = " + j).stepThis().dispose();
                    }
                    alreadyAdded = 0;
                } else {
                    SQLiteCursor cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT COUNT(mid) FROM chat_pinned_v2 WHERE uid = %d AND mid IN (%s)", new Object[]{Long.valueOf(dialogId), TextUtils.join(",", arrayList)}), new Object[0]);
                    int alreadyAdded2 = cursor.next() ? cursor.intValue(0) : 0;
                    cursor.dispose();
                    alreadyAdded = alreadyAdded2;
                }
                SQLitePreparedStatement state = this.database.executeFast("REPLACE INTO chat_pinned_v2 VALUES(?, ?, ?)");
                int a = 0;
                int N = ids.size();
                while (a < N) {
                    Integer id = (Integer) arrayList.get(a);
                    state.requery();
                    state.bindLong(1, j);
                    state.bindInteger(i, id.intValue());
                    MessageObject message = null;
                    if (hashMap != null) {
                        message = (MessageObject) hashMap.get(id);
                    }
                    NativeByteBuffer data = null;
                    if (message != null) {
                        NativeByteBuffer data2 = new NativeByteBuffer(message.messageOwner.getObjectSize());
                        message.messageOwner.serializeToStream(data2);
                        state.bindByteBuffer(3, data2);
                        data = data2;
                    } else {
                        state.bindNull(3);
                    }
                    state.step();
                    if (data != null) {
                        data.reuse();
                    }
                    a++;
                    i = 2;
                }
                state.dispose();
                this.database.commitTransaction();
                SQLiteCursor cursor2 = this.database.queryFinalized(String.format(Locale.US, "SELECT COUNT(mid) FROM chat_pinned_v2 WHERE uid = %d", new Object[]{Long.valueOf(dialogId)}), new Object[0]);
                int newCount1 = cursor2.next() ? cursor2.intValue(0) : 0;
                cursor2.dispose();
                if (hashMap != null) {
                    newCount3 = Math.max(totalCount, newCount1);
                    endReached3 = end;
                    SQLitePreparedStatement sQLitePreparedStatement = state;
                } else {
                    int i2 = totalCount;
                    SQLitePreparedStatement sQLitePreparedStatement2 = state;
                    SQLiteCursor cursor22 = this.database.queryFinalized(String.format(Locale.US, "SELECT count, end FROM chat_pinned_count WHERE uid = %d", new Object[]{Long.valueOf(dialogId)}), new Object[0]);
                    if (cursor22.next()) {
                        newCount22 = cursor22.intValue(0);
                        endReached4 = cursor22.intValue(1) != 0;
                    } else {
                        newCount22 = 0;
                        endReached4 = false;
                    }
                    cursor22.dispose();
                    endReached3 = endReached4;
                    newCount3 = Math.max((ids.size() - alreadyAdded) + newCount22, newCount1);
                }
                SQLitePreparedStatement state2 = this.database.executeFast("REPLACE INTO chat_pinned_count VALUES(?, ?, ?)");
                state2.requery();
                state2.bindLong(1, j);
                state2.bindInteger(2, newCount3);
                state2.bindInteger(3, endReached3 ? 1 : 0);
                state2.step();
                state2.dispose();
                SQLitePreparedStatement sQLitePreparedStatement3 = state2;
                int i3 = newCount1;
                SQLiteCursor sQLiteCursor = cursor2;
                AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda192(this, dialogId, ids, messages, maxId, newCount3, endReached3));
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        } else {
            if (arrayList == null) {
                this.database.executeFast("DELETE FROM chat_pinned_v2 WHERE uid = " + j).stepThis().dispose();
                if (DialogObject.isChatDialog(dialogId)) {
                    this.database.executeFast(String.format(Locale.US, "UPDATE chat_settings_v2 SET pinned = 0 WHERE uid = %d", new Object[]{Long.valueOf(-j)})).stepThis().dispose();
                } else {
                    this.database.executeFast(String.format(Locale.US, "UPDATE user_settings SET pinned = 0 WHERE uid = %d", new Object[]{Long.valueOf(dialogId)})).stepThis().dispose();
                }
                newCount = 0;
                endReached = true;
            } else {
                String idsStr = TextUtils.join(",", arrayList);
                if (DialogObject.isChatDialog(dialogId)) {
                    this.database.executeFast(String.format(Locale.US, "UPDATE chat_settings_v2 SET pinned = 0 WHERE uid = %d AND pinned IN (%s)", new Object[]{Long.valueOf(-j), idsStr})).stepThis().dispose();
                } else {
                    this.database.executeFast(String.format(Locale.US, "UPDATE user_settings SET pinned = 0 WHERE uid = %d AND pinned IN (%s)", new Object[]{Long.valueOf(dialogId), idsStr})).stepThis().dispose();
                }
                this.database.executeFast(String.format(Locale.US, "DELETE FROM chat_pinned_v2 WHERE uid = %d AND mid IN(%s)", new Object[]{Long.valueOf(dialogId), idsStr})).stepThis().dispose();
                SQLiteCursor cursor3 = this.database.queryFinalized("SELECT changes()", new Object[0]);
                int updatedCount = cursor3.next() ? cursor3.intValue(0) : 0;
                cursor3.dispose();
                SQLiteCursor cursor4 = this.database.queryFinalized(String.format(Locale.US, "SELECT COUNT(mid) FROM chat_pinned_v2 WHERE uid = %d", new Object[]{Long.valueOf(dialogId)}), new Object[0]);
                int newCount12 = cursor4.next() ? cursor4.intValue(0) : 0;
                cursor4.dispose();
                SQLiteCursor cursor5 = this.database.queryFinalized(String.format(Locale.US, "SELECT count, end FROM chat_pinned_count WHERE uid = %d", new Object[]{Long.valueOf(dialogId)}), new Object[0]);
                if (cursor5.next()) {
                    newCount2 = Math.max(0, cursor5.intValue(0) - updatedCount);
                    endReached2 = cursor5.intValue(1) != 0;
                } else {
                    newCount2 = 0;
                    endReached2 = false;
                }
                cursor5.dispose();
                endReached = endReached2;
                newCount = Math.max(newCount12, newCount2);
            }
            SQLitePreparedStatement state3 = this.database.executeFast("REPLACE INTO chat_pinned_count VALUES(?, ?, ?)");
            state3.requery();
            state3.bindLong(1, j);
            state3.bindInteger(2, newCount);
            state3.bindInteger(3, endReached ? 1 : 0);
            state3.step();
            state3.dispose();
            AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda193(this, dialogId, ids, messages, maxId, newCount, endReached));
        }
    }

    /* renamed from: lambda$updatePinnedMessages$98$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m1025x606f6e9d(long dialogId, ArrayList ids, HashMap messages, int maxId, int newCount, boolean endReached) {
        getNotificationCenter().postNotificationName(NotificationCenter.didLoadPinnedMessages, Long.valueOf(dialogId), ids, true, null, messages, Integer.valueOf(maxId), Integer.valueOf(newCount), Boolean.valueOf(endReached));
    }

    /* renamed from: lambda$updatePinnedMessages$99$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m1026xb78d5f7c(long dialogId, ArrayList ids, HashMap messages, int maxId, int newCount, boolean endReached) {
        getNotificationCenter().postNotificationName(NotificationCenter.didLoadPinnedMessages, Long.valueOf(dialogId), ids, false, null, messages, Integer.valueOf(maxId), Integer.valueOf(newCount), Boolean.valueOf(endReached));
    }

    public void updateChatInfo(long chatId, long userId, int what, long invited_id, int version) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda166(this, chatId, what, userId, invited_id, version));
    }

    /* renamed from: lambda$updateChatInfo$102$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m1003lambda$updateChatInfo$102$orgtelegrammessengerMessagesStorage(long chatId, int what, long userId, long invited_id, int version) {
        TLRPC.ChatParticipant newParticipant;
        NativeByteBuffer data;
        long j = chatId;
        int i = what;
        long j2 = userId;
        long j3 = invited_id;
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            SQLiteCursor cursor = sQLiteDatabase.queryFinalized("SELECT info, pinned, online, inviter FROM chat_settings_v2 WHERE uid = " + j, new Object[0]);
            TLRPC.ChatFull info = null;
            new ArrayList();
            if (cursor.next() && (data = cursor.byteBufferValue(0)) != null) {
                info = TLRPC.ChatFull.TLdeserialize(data, data.readInt32(false), false);
                data.reuse();
                info.pinned_msg_id = cursor.intValue(1);
                info.online_count = cursor.intValue(2);
                info.inviterId = cursor.longValue(3);
            }
            cursor.dispose();
            if (info instanceof TLRPC.TL_chatFull) {
                if (i == 1) {
                    int a = 0;
                    while (true) {
                        if (a >= info.participants.participants.size()) {
                            break;
                        } else if (info.participants.participants.get(a).user_id == j2) {
                            info.participants.participants.remove(a);
                            break;
                        } else {
                            a++;
                        }
                    }
                } else if (i == 0) {
                    Iterator<TLRPC.ChatParticipant> it = info.participants.participants.iterator();
                    while (it.hasNext()) {
                        if (it.next().user_id == j2) {
                            return;
                        }
                    }
                    TLRPC.TL_chatParticipant participant = new TLRPC.TL_chatParticipant();
                    participant.user_id = j2;
                    participant.inviter_id = j3;
                    participant.date = getConnectionsManager().getCurrentTime();
                    info.participants.participants.add(participant);
                } else if (i == 2) {
                    int a2 = 0;
                    while (true) {
                        if (a2 >= info.participants.participants.size()) {
                            break;
                        }
                        TLRPC.ChatParticipant participant2 = info.participants.participants.get(a2);
                        if (participant2.user_id == j2) {
                            if (j3 == 1) {
                                newParticipant = new TLRPC.TL_chatParticipantAdmin();
                            } else {
                                newParticipant = new TLRPC.TL_chatParticipant();
                            }
                            TLRPC.ChatParticipant newParticipant2 = newParticipant;
                            newParticipant2.user_id = participant2.user_id;
                            newParticipant2.date = participant2.date;
                            newParticipant2.inviter_id = participant2.inviter_id;
                            info.participants.participants.set(a2, newParticipant2);
                        } else {
                            a2++;
                        }
                    }
                }
                try {
                    info.participants.version = version;
                    AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda61(this, info));
                    SQLitePreparedStatement state = this.database.executeFast("REPLACE INTO chat_settings_v2 VALUES(?, ?, ?, ?, ?, ?)");
                    NativeByteBuffer data2 = new NativeByteBuffer(info.getObjectSize());
                    info.serializeToStream(data2);
                    state.bindLong(1, j);
                    state.bindByteBuffer(2, data2);
                    SQLiteCursor sQLiteCursor = cursor;
                    state.bindInteger(3, info.pinned_msg_id);
                    state.bindInteger(4, info.online_count);
                    state.bindLong(5, info.inviterId);
                    state.bindInteger(6, info.invitesCount);
                    state.step();
                    state.dispose();
                    data2.reuse();
                } catch (Exception e) {
                    e = e;
                }
            } else {
                int i2 = version;
                SQLiteCursor sQLiteCursor2 = cursor;
            }
        } catch (Exception e2) {
            e = e2;
            int i3 = version;
            FileLog.e((Throwable) e);
        }
    }

    /* renamed from: lambda$updateChatInfo$101$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m1002lambda$updateChatInfo$101$orgtelegrammessengerMessagesStorage(TLRPC.ChatFull finalInfo) {
        getNotificationCenter().postNotificationName(NotificationCenter.chatInfoDidLoad, finalInfo, 0, false, false);
    }

    public boolean isMigratedChat(long chatId) {
        CountDownLatch countDownLatch = new CountDownLatch(1);
        boolean[] result = new boolean[1];
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda16(this, chatId, result, countDownLatch));
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return result[0];
    }

    /* renamed from: lambda$isMigratedChat$103$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m911lambda$isMigratedChat$103$orgtelegrammessengerMessagesStorage(long chatId, boolean[] result, CountDownLatch countDownLatch) {
        NativeByteBuffer data;
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            SQLiteCursor cursor = sQLiteDatabase.queryFinalized("SELECT info FROM chat_settings_v2 WHERE uid = " + chatId, new Object[0]);
            TLRPC.ChatFull info = null;
            new ArrayList();
            if (cursor.next() && (data = cursor.byteBufferValue(0)) != null) {
                info = TLRPC.ChatFull.TLdeserialize(data, data.readInt32(false), false);
                data.reuse();
            }
            cursor.dispose();
            result[0] = (info instanceof TLRPC.TL_channelFull) && info.migrated_from_chat_id != 0;
            countDownLatch.countDown();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        } catch (Throwable th) {
            countDownLatch.countDown();
            throw th;
        }
        countDownLatch.countDown();
    }

    public boolean hasInviteMeMessage(long chatId) {
        CountDownLatch countDownLatch = new CountDownLatch(1);
        boolean[] result = new boolean[1];
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda15(this, chatId, result, countDownLatch));
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return result[0];
    }

    /* renamed from: lambda$hasInviteMeMessage$104$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m909x99fb6f3c(long chatId, boolean[] result, CountDownLatch countDownLatch) {
        try {
            long selfId = getUserConfig().getClientUserId();
            SQLiteDatabase sQLiteDatabase = this.database;
            SQLiteCursor cursor = sQLiteDatabase.queryFinalized("SELECT data FROM messages_v2 WHERE uid = " + (-chatId) + " AND out = 0 ORDER BY mid DESC LIMIT 100", new Object[0]);
            while (true) {
                if (!cursor.next()) {
                    break;
                }
                NativeByteBuffer data = cursor.byteBufferValue(0);
                if (data != null) {
                    TLRPC.Message message = TLRPC.Message.TLdeserialize(data, data.readInt32(false), false);
                    data.reuse();
                    if ((message.action instanceof TLRPC.TL_messageActionChatAddUser) && message.action.users.contains(Long.valueOf(selfId))) {
                        result[0] = true;
                        break;
                    }
                }
            }
            cursor.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        } catch (Throwable th) {
            countDownLatch.countDown();
            throw th;
        }
        countDownLatch.countDown();
    }

    /* JADX WARNING: Code restructure failed: missing block: B:100:0x01ff, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:101:0x0200, code lost:
        r20 = r3;
        r21 = r4;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:116:0x024c, code lost:
        r0 = th;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:117:0x024d, code lost:
        r20 = r3;
        r21 = r4;
        r16 = r10;
        r17 = r11;
        r18 = r12;
        r19 = r13;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:126:0x028f, code lost:
        r0 = th;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:127:0x0290, code lost:
        r16 = r10;
        r17 = r11;
        r18 = r12;
        r19 = r13;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:31:0x00d5, code lost:
        r0 = th;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:32:0x00d6, code lost:
        r20 = r3;
        r21 = r4;
        r16 = r10;
        r17 = r11;
        r18 = r12;
        r19 = r13;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:48:0x013b, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:49:0x013c, code lost:
        r20 = r3;
        r21 = r4;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:92:0x01e3, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:93:0x01e5, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:94:0x01e6, code lost:
        r10 = r17;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:95:0x01e9, code lost:
        r0 = th;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:96:0x01ea, code lost:
        r16 = r17;
        r17 = r11;
        r18 = r12;
        r19 = r13;
     */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:19:0x0091, B:46:0x012d] */
    /* JADX WARNING: Failed to process nested try/catch */
    /* JADX WARNING: Removed duplicated region for block: B:116:0x024c A[Catch:{ Exception -> 0x029a, all -> 0x028f }, ExcHandler: all (th java.lang.Throwable), PHI: r3 r4 r10 
      PHI: (r3v11 'totalPinnedCount' int) = (r3v0 'totalPinnedCount' int), (r3v12 'totalPinnedCount' int), (r3v12 'totalPinnedCount' int) binds: [B:38:0x00f7, B:43:0x0127, B:51:0x0144] A[DONT_GENERATE, DONT_INLINE]
      PHI: (r4v21 'pinnedEndReached' boolean) = (r4v0 'pinnedEndReached' boolean), (r4v22 'pinnedEndReached' boolean), (r4v22 'pinnedEndReached' boolean) binds: [B:38:0x00f7, B:43:0x0127, B:51:0x0144] A[DONT_GENERATE, DONT_INLINE]
      PHI: (r10v9 'info' org.telegram.tgnet.TLRPC$ChatFull) = (r10v4 'info' org.telegram.tgnet.TLRPC$ChatFull), (r10v10 'info' org.telegram.tgnet.TLRPC$ChatFull), (r10v10 'info' org.telegram.tgnet.TLRPC$ChatFull) binds: [B:38:0x00f7, B:43:0x0127, B:51:0x0144] A[DONT_GENERATE, DONT_INLINE], Splitter:B:38:0x00f7] */
    /* JADX WARNING: Removed duplicated region for block: B:126:0x028f A[ExcHandler: all (th java.lang.Throwable), PHI: r10 r20 r21 
      PHI: (r10v6 'info' org.telegram.tgnet.TLRPC$ChatFull) = (r10v7 'info' org.telegram.tgnet.TLRPC$ChatFull), (r10v7 'info' org.telegram.tgnet.TLRPC$ChatFull), (r10v7 'info' org.telegram.tgnet.TLRPC$ChatFull), (r10v7 'info' org.telegram.tgnet.TLRPC$ChatFull), (r10v7 'info' org.telegram.tgnet.TLRPC$ChatFull), (r10v4 'info' org.telegram.tgnet.TLRPC$ChatFull), (r10v12 'info' org.telegram.tgnet.TLRPC$ChatFull), (r10v17 'info' org.telegram.tgnet.TLRPC$ChatFull), (r10v17 'info' org.telegram.tgnet.TLRPC$ChatFull) binds: [B:168:0x0370, B:157:0x033c, B:142:0x030a, B:136:0x02cf, B:137:?, B:38:0x00f7, B:102:0x0205, B:90:0x01db, B:91:?] A[DONT_GENERATE, DONT_INLINE]
      PHI: (r20v7 'totalPinnedCount' int) = (r20v11 'totalPinnedCount' int), (r20v11 'totalPinnedCount' int), (r20v8 'totalPinnedCount' int), (r20v8 'totalPinnedCount' int), (r20v8 'totalPinnedCount' int), (r20v20 'totalPinnedCount' int), (r20v22 'totalPinnedCount' int), (r20v22 'totalPinnedCount' int) binds: [B:168:0x0370, B:157:0x033c, B:142:0x030a, B:136:0x02cf, B:137:?, B:102:0x0205, B:90:0x01db, B:91:?] A[DONT_GENERATE, DONT_INLINE]
      PHI: (r21v8 'pinnedEndReached' boolean) = (r21v12 'pinnedEndReached' boolean), (r21v12 'pinnedEndReached' boolean), (r21v9 'pinnedEndReached' boolean), (r21v9 'pinnedEndReached' boolean), (r21v9 'pinnedEndReached' boolean), (r21v19 'pinnedEndReached' boolean), (r21v21 'pinnedEndReached' boolean), (r21v21 'pinnedEndReached' boolean) binds: [B:168:0x0370, B:157:0x033c, B:142:0x030a, B:136:0x02cf, B:137:?, B:102:0x0205, B:90:0x01db, B:91:?] A[DONT_GENERATE, DONT_INLINE], Splitter:B:90:0x01db] */
    /* JADX WARNING: Removed duplicated region for block: B:135:0x02ce  */
    /* JADX WARNING: Removed duplicated region for block: B:141:0x0309  */
    /* JADX WARNING: Removed duplicated region for block: B:157:0x033c A[SYNTHETIC, Splitter:B:157:0x033c] */
    /* JADX WARNING: Removed duplicated region for block: B:168:0x0370 A[SYNTHETIC, Splitter:B:168:0x0370] */
    /* JADX WARNING: Removed duplicated region for block: B:19:0x0091 A[SYNTHETIC, Splitter:B:19:0x0091] */
    /* JADX WARNING: Removed duplicated region for block: B:31:0x00d5 A[ExcHandler: all (th java.lang.Throwable), PHI: r3 r4 r10 
      PHI: (r3v31 'totalPinnedCount' int) = (r3v12 'totalPinnedCount' int), (r3v12 'totalPinnedCount' int), (r3v12 'totalPinnedCount' int), (r3v12 'totalPinnedCount' int), (r3v0 'totalPinnedCount' int) binds: [B:56:0x014d, B:57:?, B:46:0x012d, B:47:?, B:19:0x0091] A[DONT_GENERATE, DONT_INLINE]
      PHI: (r4v32 'pinnedEndReached' boolean) = (r4v22 'pinnedEndReached' boolean), (r4v22 'pinnedEndReached' boolean), (r4v22 'pinnedEndReached' boolean), (r4v22 'pinnedEndReached' boolean), (r4v0 'pinnedEndReached' boolean) binds: [B:56:0x014d, B:57:?, B:46:0x012d, B:47:?, B:19:0x0091] A[DONT_GENERATE, DONT_INLINE]
      PHI: (r10v20 'info' org.telegram.tgnet.TLRPC$ChatFull) = (r10v10 'info' org.telegram.tgnet.TLRPC$ChatFull), (r10v10 'info' org.telegram.tgnet.TLRPC$ChatFull), (r10v10 'info' org.telegram.tgnet.TLRPC$ChatFull), (r10v10 'info' org.telegram.tgnet.TLRPC$ChatFull), (r10v4 'info' org.telegram.tgnet.TLRPC$ChatFull) binds: [B:56:0x014d, B:57:?, B:46:0x012d, B:47:?, B:19:0x0091] A[DONT_GENERATE, DONT_INLINE], Splitter:B:19:0x0091] */
    /* JADX WARNING: Removed duplicated region for block: B:35:0x00f3 A[SYNTHETIC, Splitter:B:35:0x00f3] */
    /* JADX WARNING: Removed duplicated region for block: B:95:0x01e9 A[ExcHandler: all (th java.lang.Throwable), Splitter:B:79:0x01ab] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private org.telegram.tgnet.TLRPC.ChatFull loadChatInfoInternal(long r23, boolean r25, boolean r26, boolean r27, int r28) {
        /*
            r22 = this;
            r1 = r22
            r14 = r23
            r2 = 0
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            r13 = r0
            java.util.HashMap r0 = new java.util.HashMap
            r0.<init>()
            r12 = r0
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            r11 = r0
            r3 = 0
            r4 = 0
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x03f9, all -> 0x03eb }
            java.lang.StringBuilder r5 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x03f9, all -> 0x03eb }
            r5.<init>()     // Catch:{ Exception -> 0x03f9, all -> 0x03eb }
            java.lang.String r6 = "SELECT info, pinned, online, inviter, links FROM chat_settings_v2 WHERE uid = "
            r5.append(r6)     // Catch:{ Exception -> 0x03f9, all -> 0x03eb }
            r5.append(r14)     // Catch:{ Exception -> 0x03f9, all -> 0x03eb }
            java.lang.String r5 = r5.toString()     // Catch:{ Exception -> 0x03f9, all -> 0x03eb }
            r6 = 0
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x03f9, all -> 0x03eb }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r5, r7)     // Catch:{ Exception -> 0x03f9, all -> 0x03eb }
            boolean r5 = r0.next()     // Catch:{ Exception -> 0x03f9, all -> 0x03eb }
            r7 = 3
            r8 = 2
            r9 = 1
            if (r5 == 0) goto L_0x0087
            org.telegram.tgnet.NativeByteBuffer r5 = r0.byteBufferValue(r6)     // Catch:{ Exception -> 0x0078, all -> 0x0069 }
            if (r5 == 0) goto L_0x0087
            int r10 = r5.readInt32(r6)     // Catch:{ Exception -> 0x0078, all -> 0x0069 }
            org.telegram.tgnet.TLRPC$ChatFull r10 = org.telegram.tgnet.TLRPC.ChatFull.TLdeserialize(r5, r10, r6)     // Catch:{ Exception -> 0x0078, all -> 0x0069 }
            r2 = r10
            r5.reuse()     // Catch:{ Exception -> 0x0078, all -> 0x0069 }
            int r10 = r0.intValue(r9)     // Catch:{ Exception -> 0x0078, all -> 0x0069 }
            r2.pinned_msg_id = r10     // Catch:{ Exception -> 0x0078, all -> 0x0069 }
            int r10 = r0.intValue(r8)     // Catch:{ Exception -> 0x0078, all -> 0x0069 }
            r2.online_count = r10     // Catch:{ Exception -> 0x0078, all -> 0x0069 }
            long r9 = r0.longValue(r7)     // Catch:{ Exception -> 0x0078, all -> 0x0069 }
            r2.inviterId = r9     // Catch:{ Exception -> 0x0078, all -> 0x0069 }
            r9 = 4
            int r9 = r0.intValue(r9)     // Catch:{ Exception -> 0x0078, all -> 0x0069 }
            r2.invitesCount = r9     // Catch:{ Exception -> 0x0078, all -> 0x0069 }
            r10 = r2
            goto L_0x0088
        L_0x0069:
            r0 = move-exception
            r16 = r2
            r20 = r3
            r21 = r4
            r17 = r11
            r18 = r12
            r19 = r13
            goto L_0x0427
        L_0x0078:
            r0 = move-exception
            r16 = r2
            r20 = r3
            r21 = r4
            r17 = r11
            r18 = r12
            r19 = r13
            goto L_0x0406
        L_0x0087:
            r10 = r2
        L_0x0088:
            r0.dispose()     // Catch:{ Exception -> 0x03dd, all -> 0x03cf }
            boolean r2 = r10 instanceof org.telegram.tgnet.TLRPC.TL_chatFull     // Catch:{ Exception -> 0x03dd, all -> 0x03cf }
            java.lang.String r5 = ","
            if (r2 == 0) goto L_0x00f3
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x00e4, all -> 0x00d5 }
            r2.<init>()     // Catch:{ Exception -> 0x00e4, all -> 0x00d5 }
            r7 = 0
        L_0x0097:
            org.telegram.tgnet.TLRPC$ChatParticipants r8 = r10.participants     // Catch:{ Exception -> 0x00e4, all -> 0x00d5 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$ChatParticipant> r8 = r8.participants     // Catch:{ Exception -> 0x00e4, all -> 0x00d5 }
            int r8 = r8.size()     // Catch:{ Exception -> 0x00e4, all -> 0x00d5 }
            if (r7 >= r8) goto L_0x00c0
            org.telegram.tgnet.TLRPC$ChatParticipants r8 = r10.participants     // Catch:{ Exception -> 0x00e4, all -> 0x00d5 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$ChatParticipant> r8 = r8.participants     // Catch:{ Exception -> 0x00e4, all -> 0x00d5 }
            java.lang.Object r8 = r8.get(r7)     // Catch:{ Exception -> 0x00e4, all -> 0x00d5 }
            org.telegram.tgnet.TLRPC$ChatParticipant r8 = (org.telegram.tgnet.TLRPC.ChatParticipant) r8     // Catch:{ Exception -> 0x00e4, all -> 0x00d5 }
            int r9 = r2.length()     // Catch:{ Exception -> 0x00e4, all -> 0x00d5 }
            if (r9 == 0) goto L_0x00b4
            r2.append(r5)     // Catch:{ Exception -> 0x00e4, all -> 0x00d5 }
        L_0x00b4:
            r17 = r7
            long r6 = r8.user_id     // Catch:{ Exception -> 0x00e4, all -> 0x00d5 }
            r2.append(r6)     // Catch:{ Exception -> 0x00e4, all -> 0x00d5 }
            int r7 = r17 + 1
            r6 = 0
            goto L_0x0097
        L_0x00c0:
            r17 = r7
            int r5 = r2.length()     // Catch:{ Exception -> 0x00e4, all -> 0x00d5 }
            if (r5 == 0) goto L_0x00cf
            java.lang.String r5 = r2.toString()     // Catch:{ Exception -> 0x00e4, all -> 0x00d5 }
            r1.getUsersInternal(r5, r13)     // Catch:{ Exception -> 0x00e4, all -> 0x00d5 }
        L_0x00cf:
            r20 = r3
            r21 = r4
            goto L_0x026e
        L_0x00d5:
            r0 = move-exception
            r20 = r3
            r21 = r4
            r16 = r10
            r17 = r11
            r18 = r12
            r19 = r13
            goto L_0x0427
        L_0x00e4:
            r0 = move-exception
            r20 = r3
            r21 = r4
            r16 = r10
            r17 = r11
            r18 = r12
            r19 = r13
            goto L_0x0406
        L_0x00f3:
            boolean r2 = r10 instanceof org.telegram.tgnet.TLRPC.TL_channelFull     // Catch:{ Exception -> 0x03dd, all -> 0x03cf }
            if (r2 == 0) goto L_0x026a
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database     // Catch:{ Exception -> 0x025b, all -> 0x024c }
            java.lang.StringBuilder r6 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x025b, all -> 0x024c }
            r6.<init>()     // Catch:{ Exception -> 0x025b, all -> 0x024c }
            java.lang.String r9 = "SELECT us.data, us.status, cu.data, cu.date FROM channel_users_v2 as cu LEFT JOIN users as us ON us.uid = cu.uid WHERE cu.did = "
            r6.append(r9)     // Catch:{ Exception -> 0x025b, all -> 0x024c }
            long r7 = -r14
            r6.append(r7)     // Catch:{ Exception -> 0x025b, all -> 0x024c }
            java.lang.String r7 = " ORDER BY cu.date DESC"
            r6.append(r7)     // Catch:{ Exception -> 0x025b, all -> 0x024c }
            java.lang.String r6 = r6.toString()     // Catch:{ Exception -> 0x025b, all -> 0x024c }
            r7 = 0
            java.lang.Object[] r8 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x025b, all -> 0x024c }
            org.telegram.SQLite.SQLiteCursor r2 = r2.queryFinalized(r6, r8)     // Catch:{ Exception -> 0x025b, all -> 0x024c }
            org.telegram.tgnet.TLRPC$TL_chatParticipants r0 = new org.telegram.tgnet.TLRPC$TL_chatParticipants     // Catch:{ Exception -> 0x025b, all -> 0x024c }
            r0.<init>()     // Catch:{ Exception -> 0x025b, all -> 0x024c }
            r10.participants = r0     // Catch:{ Exception -> 0x025b, all -> 0x024c }
        L_0x011e:
            boolean r0 = r2.next()     // Catch:{ Exception -> 0x025b, all -> 0x024c }
            if (r0 == 0) goto L_0x020e
            r0 = 0
            r6 = 0
            r7 = 0
            org.telegram.tgnet.NativeByteBuffer r8 = r2.byteBufferValue(r7)     // Catch:{ Exception -> 0x01ff, all -> 0x024c }
            if (r8 == 0) goto L_0x0143
            int r9 = r8.readInt32(r7)     // Catch:{ Exception -> 0x013b, all -> 0x00d5 }
            org.telegram.tgnet.TLRPC$User r17 = org.telegram.tgnet.TLRPC.User.TLdeserialize(r8, r9, r7)     // Catch:{ Exception -> 0x013b, all -> 0x00d5 }
            r0 = r17
            r8.reuse()     // Catch:{ Exception -> 0x013b, all -> 0x00d5 }
            goto L_0x0143
        L_0x013b:
            r0 = move-exception
            r20 = r3
            r21 = r4
            r3 = 3
            goto L_0x0205
        L_0x0143:
            r7 = 2
            org.telegram.tgnet.NativeByteBuffer r17 = r2.byteBufferValue(r7)     // Catch:{ Exception -> 0x01ff, all -> 0x024c }
            r8 = r17
            if (r8 == 0) goto L_0x0159
            r9 = 0
            int r7 = r8.readInt32(r9)     // Catch:{ Exception -> 0x013b, all -> 0x00d5 }
            org.telegram.tgnet.TLRPC$ChannelParticipant r7 = org.telegram.tgnet.TLRPC.ChannelParticipant.TLdeserialize(r8, r7, r9)     // Catch:{ Exception -> 0x013b, all -> 0x00d5 }
            r6 = r7
            r8.reuse()     // Catch:{ Exception -> 0x013b, all -> 0x00d5 }
        L_0x0159:
            if (r6 == 0) goto L_0x01a1
            r17 = r10
            long r9 = r6.user_id     // Catch:{ Exception -> 0x0197, all -> 0x0188 }
            org.telegram.messenger.UserConfig r7 = r22.getUserConfig()     // Catch:{ Exception -> 0x0197, all -> 0x0188 }
            r20 = r3
            r21 = r4
            long r3 = r7.clientUserId     // Catch:{ Exception -> 0x0182, all -> 0x0177 }
            int r7 = (r9 > r3 ? 1 : (r9 == r3 ? 0 : -1))
            if (r7 != 0) goto L_0x01a7
            org.telegram.messenger.UserConfig r3 = r22.getUserConfig()     // Catch:{ Exception -> 0x0182, all -> 0x0177 }
            org.telegram.tgnet.TLRPC$User r3 = r3.getCurrentUser()     // Catch:{ Exception -> 0x0182, all -> 0x0177 }
            r0 = r3
            goto L_0x01a7
        L_0x0177:
            r0 = move-exception
            r18 = r12
            r19 = r13
            r16 = r17
            r17 = r11
            goto L_0x0427
        L_0x0182:
            r0 = move-exception
            r10 = r17
            r3 = 3
            goto L_0x0205
        L_0x0188:
            r0 = move-exception
            r20 = r3
            r21 = r4
            r18 = r12
            r19 = r13
            r16 = r17
            r17 = r11
            goto L_0x0427
        L_0x0197:
            r0 = move-exception
            r20 = r3
            r21 = r4
            r10 = r17
            r3 = 3
            goto L_0x0205
        L_0x01a1:
            r20 = r3
            r21 = r4
            r17 = r10
        L_0x01a7:
            if (r0 == 0) goto L_0x01fb
            if (r6 == 0) goto L_0x01fb
            org.telegram.tgnet.TLRPC$UserStatus r3 = r0.status     // Catch:{ Exception -> 0x01f6, all -> 0x01e9 }
            if (r3 == 0) goto L_0x01b8
            org.telegram.tgnet.TLRPC$UserStatus r3 = r0.status     // Catch:{ Exception -> 0x0182, all -> 0x0177 }
            r4 = 1
            int r7 = r2.intValue(r4)     // Catch:{ Exception -> 0x0182, all -> 0x0177 }
            r3.expires = r7     // Catch:{ Exception -> 0x0182, all -> 0x0177 }
        L_0x01b8:
            r13.add(r0)     // Catch:{ Exception -> 0x01f6, all -> 0x01e9 }
            r3 = 3
            int r4 = r2.intValue(r3)     // Catch:{ Exception -> 0x01e5, all -> 0x01e9 }
            r6.date = r4     // Catch:{ Exception -> 0x01e5, all -> 0x01e9 }
            org.telegram.tgnet.TLRPC$TL_chatChannelParticipant r4 = new org.telegram.tgnet.TLRPC$TL_chatChannelParticipant     // Catch:{ Exception -> 0x01e5, all -> 0x01e9 }
            r4.<init>()     // Catch:{ Exception -> 0x01e5, all -> 0x01e9 }
            org.telegram.tgnet.TLRPC$Peer r7 = r6.peer     // Catch:{ Exception -> 0x01e5, all -> 0x01e9 }
            long r9 = org.telegram.messenger.MessageObject.getPeerId(r7)     // Catch:{ Exception -> 0x01e5, all -> 0x01e9 }
            r4.user_id = r9     // Catch:{ Exception -> 0x01e5, all -> 0x01e9 }
            int r7 = r6.date     // Catch:{ Exception -> 0x01e5, all -> 0x01e9 }
            r4.date = r7     // Catch:{ Exception -> 0x01e5, all -> 0x01e9 }
            long r9 = r6.inviter_id     // Catch:{ Exception -> 0x01e5, all -> 0x01e9 }
            r4.inviter_id = r9     // Catch:{ Exception -> 0x01e5, all -> 0x01e9 }
            r4.channelParticipant = r6     // Catch:{ Exception -> 0x01e5, all -> 0x01e9 }
            r10 = r17
            org.telegram.tgnet.TLRPC$ChatParticipants r7 = r10.participants     // Catch:{ Exception -> 0x01e3, all -> 0x028f }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$ChatParticipant> r7 = r7.participants     // Catch:{ Exception -> 0x01e3, all -> 0x028f }
            r7.add(r4)     // Catch:{ Exception -> 0x01e3, all -> 0x028f }
            goto L_0x0208
        L_0x01e3:
            r0 = move-exception
            goto L_0x0205
        L_0x01e5:
            r0 = move-exception
            r10 = r17
            goto L_0x01fa
        L_0x01e9:
            r0 = move-exception
            r10 = r17
            r16 = r10
            r17 = r11
            r18 = r12
            r19 = r13
            goto L_0x0427
        L_0x01f6:
            r0 = move-exception
            r10 = r17
            r3 = 3
        L_0x01fa:
            goto L_0x0205
        L_0x01fb:
            r10 = r17
            r3 = 3
            goto L_0x0208
        L_0x01ff:
            r0 = move-exception
            r20 = r3
            r21 = r4
            r3 = 3
        L_0x0205:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ Exception -> 0x029a, all -> 0x028f }
        L_0x0208:
            r3 = r20
            r4 = r21
            goto L_0x011e
        L_0x020e:
            r20 = r3
            r21 = r4
            r2.dispose()     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            java.lang.StringBuilder r0 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            r0.<init>()     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            r3 = 0
        L_0x021b:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$BotInfo> r4 = r10.bot_info     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            int r4 = r4.size()     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            if (r3 >= r4) goto L_0x023d
            java.util.ArrayList<org.telegram.tgnet.TLRPC$BotInfo> r4 = r10.bot_info     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            java.lang.Object r4 = r4.get(r3)     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            org.telegram.tgnet.TLRPC$BotInfo r4 = (org.telegram.tgnet.TLRPC.BotInfo) r4     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            int r6 = r0.length()     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            if (r6 == 0) goto L_0x0234
            r0.append(r5)     // Catch:{ Exception -> 0x029a, all -> 0x028f }
        L_0x0234:
            long r6 = r4.user_id     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            r0.append(r6)     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            int r3 = r3 + 1
            goto L_0x021b
        L_0x023d:
            int r3 = r0.length()     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            if (r3 == 0) goto L_0x024a
            java.lang.String r3 = r0.toString()     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            r1.getUsersInternal(r3, r13)     // Catch:{ Exception -> 0x029a, all -> 0x028f }
        L_0x024a:
            r0 = r2
            goto L_0x026e
        L_0x024c:
            r0 = move-exception
            r20 = r3
            r21 = r4
            r16 = r10
            r17 = r11
            r18 = r12
            r19 = r13
            goto L_0x0427
        L_0x025b:
            r0 = move-exception
            r20 = r3
            r21 = r4
            r16 = r10
            r17 = r11
            r18 = r12
            r19 = r13
            goto L_0x0406
        L_0x026a:
            r20 = r3
            r21 = r4
        L_0x026e:
            r2 = 0
            if (r10 == 0) goto L_0x02a5
            long r4 = r10.inviterId     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            int r6 = (r4 > r2 ? 1 : (r4 == r2 ? 0 : -1))
            if (r6 == 0) goto L_0x02a5
            java.lang.StringBuilder r4 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            r4.<init>()     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            java.lang.String r5 = ""
            r4.append(r5)     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            long r5 = r10.inviterId     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            r4.append(r5)     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            java.lang.String r4 = r4.toString()     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            r1.getUsersInternal(r4, r13)     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            goto L_0x02a5
        L_0x028f:
            r0 = move-exception
            r16 = r10
            r17 = r11
            r18 = r12
            r19 = r13
            goto L_0x0427
        L_0x029a:
            r0 = move-exception
            r16 = r10
            r17 = r11
            r18 = r12
            r19 = r13
            goto L_0x0406
        L_0x02a5:
            org.telegram.messenger.MessagesStorage r4 = r22.getMessagesStorage()     // Catch:{ Exception -> 0x03c5, all -> 0x03ba }
            org.telegram.SQLite.SQLiteDatabase r4 = r4.getDatabase()     // Catch:{ Exception -> 0x03c5, all -> 0x03ba }
            java.util.Locale r5 = java.util.Locale.US     // Catch:{ Exception -> 0x03c5, all -> 0x03ba }
            java.lang.String r6 = "SELECT mid FROM chat_pinned_v2 WHERE uid = %d ORDER BY mid DESC"
            r7 = 1
            java.lang.Object[] r8 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x03c5, all -> 0x03ba }
            long r2 = -r14
            java.lang.Long r2 = java.lang.Long.valueOf(r2)     // Catch:{ Exception -> 0x03c5, all -> 0x03ba }
            r3 = 0
            r8[r3] = r2     // Catch:{ Exception -> 0x03c5, all -> 0x03ba }
            java.lang.String r2 = java.lang.String.format(r5, r6, r8)     // Catch:{ Exception -> 0x03c5, all -> 0x03ba }
            java.lang.Object[] r5 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x03c5, all -> 0x03ba }
            org.telegram.SQLite.SQLiteCursor r2 = r4.queryFinalized(r2, r5)     // Catch:{ Exception -> 0x03c5, all -> 0x03ba }
            r0 = r2
        L_0x02c7:
            boolean r2 = r0.next()     // Catch:{ Exception -> 0x03c5, all -> 0x03ba }
            r3 = 0
            if (r2 == 0) goto L_0x02e4
            r2 = 0
            int r4 = r0.intValue(r2)     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            r2 = r4
            java.lang.Integer r4 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            r11.add(r4)     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            r12.put(r4, r3)     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            goto L_0x02c7
        L_0x02e4:
            r0.dispose()     // Catch:{ Exception -> 0x03c5, all -> 0x03ba }
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database     // Catch:{ Exception -> 0x03c5, all -> 0x03ba }
            java.lang.StringBuilder r4 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x03c5, all -> 0x03ba }
            r4.<init>()     // Catch:{ Exception -> 0x03c5, all -> 0x03ba }
            java.lang.String r5 = "SELECT count, end FROM chat_pinned_count WHERE uid = "
            r4.append(r5)     // Catch:{ Exception -> 0x03c5, all -> 0x03ba }
            long r5 = -r14
            r4.append(r5)     // Catch:{ Exception -> 0x03c5, all -> 0x03ba }
            java.lang.String r4 = r4.toString()     // Catch:{ Exception -> 0x03c5, all -> 0x03ba }
            r5 = 0
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x03c5, all -> 0x03ba }
            org.telegram.SQLite.SQLiteCursor r2 = r2.queryFinalized(r4, r6)     // Catch:{ Exception -> 0x03c5, all -> 0x03ba }
            r0 = r2
            boolean r2 = r0.next()     // Catch:{ Exception -> 0x03c5, all -> 0x03ba }
            if (r2 == 0) goto L_0x0337
            r2 = 0
            int r4 = r0.intValue(r2)     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            r2 = r4
            r4 = 1
            int r5 = r0.intValue(r4)     // Catch:{ Exception -> 0x032a, all -> 0x031d }
            if (r5 == 0) goto L_0x0317
            goto L_0x0318
        L_0x0317:
            r4 = 0
        L_0x0318:
            r20 = r2
            r21 = r4
            goto L_0x0337
        L_0x031d:
            r0 = move-exception
            r20 = r2
            r16 = r10
            r17 = r11
            r18 = r12
            r19 = r13
            goto L_0x0427
        L_0x032a:
            r0 = move-exception
            r20 = r2
            r16 = r10
            r17 = r11
            r18 = r12
            r19 = r13
            goto L_0x0406
        L_0x0337:
            r0.dispose()     // Catch:{ Exception -> 0x03c5, all -> 0x03ba }
            if (r10 == 0) goto L_0x036a
            int r2 = r10.pinned_msg_id     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            if (r2 == 0) goto L_0x036a
            boolean r2 = r11.isEmpty()     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            if (r2 != 0) goto L_0x0355
            int r2 = r10.pinned_msg_id     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            r4 = 0
            java.lang.Object r4 = r11.get(r4)     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            java.lang.Integer r4 = (java.lang.Integer) r4     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            int r4 = r4.intValue()     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            if (r2 <= r4) goto L_0x036a
        L_0x0355:
            r11.clear()     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            int r2 = r10.pinned_msg_id     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            r11.add(r2)     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            int r2 = r10.pinned_msg_id     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            r12.put(r2, r3)     // Catch:{ Exception -> 0x029a, all -> 0x028f }
        L_0x036a:
            boolean r2 = r11.isEmpty()     // Catch:{ Exception -> 0x03c5, all -> 0x03ba }
            if (r2 != 0) goto L_0x039f
            org.telegram.messenger.MediaDataController r3 = r22.getMediaDataController()     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            long r4 = -r14
            if (r25 == 0) goto L_0x0379
            r6 = r14
            goto L_0x037b
        L_0x0379:
            r6 = 0
        L_0x037b:
            r9 = 0
            r8 = r11
            java.util.ArrayList r2 = r3.loadPinnedMessages(r4, r6, r8, r9)     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            if (r2 == 0) goto L_0x039f
            r3 = 0
            int r4 = r2.size()     // Catch:{ Exception -> 0x029a, all -> 0x028f }
        L_0x0388:
            if (r3 >= r4) goto L_0x039f
            java.lang.Object r5 = r2.get(r3)     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            org.telegram.messenger.MessageObject r5 = (org.telegram.messenger.MessageObject) r5     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            int r6 = r5.getId()     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            r12.put(r6, r5)     // Catch:{ Exception -> 0x029a, all -> 0x028f }
            int r3 = r3 + 1
            goto L_0x0388
        L_0x039f:
            org.telegram.messenger.MessagesController r2 = r22.getMessagesController()
            r7 = 1
            r3 = r23
            r5 = r10
            r6 = r13
            r8 = r26
            r9 = r27
            r16 = r10
            r10 = r11
            r17 = r11
            r11 = r12
            r18 = r12
            r12 = r20
            r19 = r13
            goto L_0x041e
        L_0x03ba:
            r0 = move-exception
            r16 = r10
            r17 = r11
            r18 = r12
            r19 = r13
            goto L_0x0427
        L_0x03c5:
            r0 = move-exception
            r16 = r10
            r17 = r11
            r18 = r12
            r19 = r13
            goto L_0x0406
        L_0x03cf:
            r0 = move-exception
            r20 = r3
            r21 = r4
            r16 = r10
            r17 = r11
            r18 = r12
            r19 = r13
            goto L_0x0427
        L_0x03dd:
            r0 = move-exception
            r20 = r3
            r21 = r4
            r16 = r10
            r17 = r11
            r18 = r12
            r19 = r13
            goto L_0x0406
        L_0x03eb:
            r0 = move-exception
            r20 = r3
            r21 = r4
            r17 = r11
            r18 = r12
            r19 = r13
            r16 = r2
            goto L_0x0427
        L_0x03f9:
            r0 = move-exception
            r20 = r3
            r21 = r4
            r17 = r11
            r18 = r12
            r19 = r13
            r16 = r2
        L_0x0406:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0426 }
            org.telegram.messenger.MessagesController r2 = r22.getMessagesController()
            r7 = 1
            r3 = r23
            r5 = r16
            r6 = r19
            r8 = r26
            r9 = r27
            r10 = r17
            r11 = r18
            r12 = r20
        L_0x041e:
            r13 = r21
            r2.processChatInfo(r3, r5, r6, r7, r8, r9, r10, r11, r12, r13)
            r10 = r16
            return r10
        L_0x0426:
            r0 = move-exception
        L_0x0427:
            org.telegram.messenger.MessagesController r2 = r22.getMessagesController()
            r7 = 1
            r3 = r23
            r5 = r16
            r6 = r19
            r8 = r26
            r9 = r27
            r10 = r17
            r11 = r18
            r12 = r20
            r13 = r21
            r2.processChatInfo(r3, r5, r6, r7, r8, r9, r10, r11, r12, r13)
            goto L_0x0443
        L_0x0442:
            throw r0
        L_0x0443:
            goto L_0x0442
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.loadChatInfoInternal(long, boolean, boolean, boolean, int):org.telegram.tgnet.TLRPC$ChatFull");
    }

    public TLRPC.ChatFull loadChatInfo(long chatId, boolean isChannel, CountDownLatch countDownLatch, boolean force, boolean byChannelUsers) {
        return loadChatInfo(chatId, isChannel, countDownLatch, force, byChannelUsers, 0);
    }

    public TLRPC.ChatFull loadChatInfo(long chatId, boolean isChannel, CountDownLatch countDownLatch, boolean force, boolean byChannelUsers, int fromMessageId) {
        TLRPC.ChatFull[] result = new TLRPC.ChatFull[1];
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda100(this, result, chatId, isChannel, force, byChannelUsers, fromMessageId, countDownLatch));
        if (countDownLatch != null) {
            try {
                countDownLatch.await();
            } catch (Throwable th) {
            }
        }
        return result[0];
    }

    /* renamed from: lambda$loadChatInfo$105$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m913lambda$loadChatInfo$105$orgtelegrammessengerMessagesStorage(TLRPC.ChatFull[] result, long chatId, boolean isChannel, boolean force, boolean byChannelUsers, int fromMessageId, CountDownLatch countDownLatch) {
        result[0] = loadChatInfoInternal(chatId, isChannel, force, byChannelUsers, fromMessageId);
        if (countDownLatch != null) {
            countDownLatch.countDown();
        }
    }

    public void processPendingRead(long dialogId, int maxPositiveId, int maxNegativeId, int scheduledCount) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda163(this, dialogId, maxPositiveId, scheduledCount, this.lastSavedDate, maxNegativeId));
    }

    /* renamed from: lambda$processPendingRead$106$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m957xe3aCLASSNAME(long dialogId, int maxPositiveId, int scheduledCount, int maxDate, int maxNegativeId) {
        int unreadCount;
        int currentMaxId;
        long j = dialogId;
        int currentMaxId2 = 0;
        int unreadCount2 = 0;
        long last_mid = 0;
        int prevUnreadCount = 0;
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            SQLiteCursor cursor = sQLiteDatabase.queryFinalized("SELECT unread_count, inbox_max, last_mid FROM dialogs WHERE did = " + j, new Object[0]);
            if (cursor.next()) {
                int intValue = cursor.intValue(0);
                unreadCount2 = intValue;
                prevUnreadCount = intValue;
                currentMaxId2 = cursor.intValue(1);
                last_mid = cursor.longValue(2);
            }
            cursor.dispose();
            this.database.beginTransaction();
            if (!DialogObject.isEncryptedDialog(dialogId)) {
                try {
                    currentMaxId = Math.max(currentMaxId2, maxPositiveId);
                    SQLitePreparedStatement state = this.database.executeFast("UPDATE messages_v2 SET read_state = read_state | 1 WHERE uid = ? AND mid <= ? AND read_state IN(0,2) AND out = 0");
                    state.requery();
                    state.bindLong(1, j);
                    state.bindInteger(2, currentMaxId);
                    state.step();
                    state.dispose();
                    if (((long) currentMaxId) >= last_mid) {
                        unreadCount = 0;
                    } else {
                        int updatedCount = 0;
                        SQLiteCursor cursor2 = this.database.queryFinalized("SELECT changes()", new Object[0]);
                        if (cursor2.next()) {
                            try {
                                updatedCount = cursor2.intValue(0) + scheduledCount;
                            } catch (Exception e) {
                                e = e;
                                FileLog.e((Throwable) e);
                            }
                        }
                        cursor2.dispose();
                        unreadCount = Math.max(0, unreadCount2 - updatedCount);
                    }
                    SQLitePreparedStatement state2 = this.database.executeFast("DELETE FROM unread_push_messages WHERE uid = ? AND mid <= ?");
                    state2.requery();
                    state2.bindLong(1, j);
                    state2.bindInteger(2, currentMaxId);
                    state2.step();
                    state2.dispose();
                    SQLitePreparedStatement state3 = this.database.executeFast("DELETE FROM unread_push_messages WHERE uid = ? AND date <= ?");
                    state3.requery();
                    state3.bindLong(1, j);
                    state3.bindInteger(2, maxDate);
                    state3.step();
                    state3.dispose();
                } catch (Exception e2) {
                    e = e2;
                    int i = maxDate;
                    FileLog.e((Throwable) e);
                }
            } else {
                int i2 = maxPositiveId;
                int i3 = maxDate;
                currentMaxId = maxNegativeId;
                SQLitePreparedStatement state4 = this.database.executeFast("UPDATE messages_v2 SET read_state = read_state | 1 WHERE uid = ? AND mid >= ? AND read_state IN(0,2) AND out = 0");
                state4.requery();
                state4.bindLong(1, j);
                state4.bindInteger(2, currentMaxId);
                state4.step();
                state4.dispose();
                if (((long) currentMaxId) <= last_mid) {
                    unreadCount = 0;
                    SQLitePreparedStatement sQLitePreparedStatement = state4;
                } else {
                    int updatedCount2 = 0;
                    SQLiteCursor cursor3 = this.database.queryFinalized("SELECT changes()", new Object[0]);
                    if (cursor3.next()) {
                        updatedCount2 = cursor3.intValue(0) + scheduledCount;
                    }
                    cursor3.dispose();
                    unreadCount = Math.max(0, unreadCount2 - updatedCount2);
                    SQLitePreparedStatement sQLitePreparedStatement2 = state4;
                }
            }
            SQLitePreparedStatement state5 = this.database.executeFast("UPDATE dialogs SET unread_count = ?, inbox_max = ? WHERE did = ?");
            state5.requery();
            state5.bindInteger(1, unreadCount);
            state5.bindInteger(2, currentMaxId);
            state5.bindLong(3, j);
            state5.step();
            state5.dispose();
            this.database.commitTransaction();
            if (prevUnreadCount != 0 && unreadCount == 0) {
                LongSparseIntArray dialogsToUpdate = new LongSparseIntArray();
                dialogsToUpdate.put(j, unreadCount);
                updateFiltersReadCounter(dialogsToUpdate, (LongSparseIntArray) null, true);
            }
            updateWidgets(dialogId);
        } catch (Exception e3) {
            e = e3;
            int i4 = maxPositiveId;
            FileLog.e((Throwable) e);
        }
    }

    public void putContacts(ArrayList<TLRPC.TL_contact> contacts2, boolean deleteAll) {
        if (!contacts2.isEmpty() || deleteAll) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda95(this, deleteAll, new ArrayList<>(contacts2)));
        }
    }

    /* renamed from: lambda$putContacts$107$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m961lambda$putContacts$107$orgtelegrammessengerMessagesStorage(boolean deleteAll, ArrayList contactsCopy) {
        if (deleteAll) {
            try {
                this.database.executeFast("DELETE FROM contacts WHERE 1").stepThis().dispose();
            } catch (Exception e) {
                FileLog.e((Throwable) e);
                return;
            }
        }
        this.database.beginTransaction();
        SQLitePreparedStatement state = this.database.executeFast("REPLACE INTO contacts VALUES(?, ?)");
        for (int a = 0; a < contactsCopy.size(); a++) {
            TLRPC.TL_contact contact = (TLRPC.TL_contact) contactsCopy.get(a);
            state.requery();
            int i = 1;
            state.bindLong(1, contact.user_id);
            if (!contact.mutual) {
                i = 0;
            }
            state.bindInteger(2, i);
            state.step();
        }
        state.dispose();
        this.database.commitTransaction();
    }

    public void deleteContacts(ArrayList<Long> uids) {
        if (uids != null && !uids.isEmpty()) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda27(this, uids));
        }
    }

    /* renamed from: lambda$deleteContacts$108$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m868lambda$deleteContacts$108$orgtelegrammessengerMessagesStorage(ArrayList uids) {
        try {
            String ids = TextUtils.join(",", uids);
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM contacts WHERE uid IN(" + ids + ")").stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void applyPhoneBookUpdates(String adds, String deletes) {
        if (!TextUtils.isEmpty(adds)) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda25(this, adds, deletes));
        }
    }

    /* renamed from: lambda$applyPhoneBookUpdates$109$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m847xcfc9bf3c(String adds, String deletes) {
        try {
            if (adds.length() != 0) {
                this.database.executeFast(String.format(Locale.US, "UPDATE user_phones_v7 SET deleted = 0 WHERE sphone IN(%s)", new Object[]{adds})).stepThis().dispose();
            }
            if (deletes.length() != 0) {
                this.database.executeFast(String.format(Locale.US, "UPDATE user_phones_v7 SET deleted = 1 WHERE sphone IN(%s)", new Object[]{deletes})).stepThis().dispose();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void putCachedPhoneBook(HashMap<String, ContactsController.Contact> contactHashMap, boolean migrate, boolean delete) {
        if (contactHashMap == null) {
            return;
        }
        if (!contactHashMap.isEmpty() || migrate || delete) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda51(this, contactHashMap, migrate));
        }
    }

    /* renamed from: lambda$putCachedPhoneBook$110$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m958xe9b9b367(HashMap contactHashMap, boolean migrate) {
        try {
            if (BuildVars.LOGS_ENABLED) {
                FileLog.d(this.currentAccount + " save contacts to db " + contactHashMap.size());
            }
            this.database.executeFast("DELETE FROM user_contacts_v7 WHERE 1").stepThis().dispose();
            this.database.executeFast("DELETE FROM user_phones_v7 WHERE 1").stepThis().dispose();
            this.database.beginTransaction();
            SQLitePreparedStatement state = this.database.executeFast("REPLACE INTO user_contacts_v7 VALUES(?, ?, ?, ?, ?)");
            SQLitePreparedStatement state2 = this.database.executeFast("REPLACE INTO user_phones_v7 VALUES(?, ?, ?, ?)");
            for (Map.Entry<String, ContactsController.Contact> entry : contactHashMap.entrySet()) {
                ContactsController.Contact contact = entry.getValue();
                if (!contact.phones.isEmpty()) {
                    if (!contact.shortPhones.isEmpty()) {
                        state.requery();
                        state.bindString(1, contact.key);
                        state.bindInteger(2, contact.contact_id);
                        state.bindString(3, contact.first_name);
                        state.bindString(4, contact.last_name);
                        state.bindInteger(5, contact.imported);
                        state.step();
                        for (int a = 0; a < contact.phones.size(); a++) {
                            state2.requery();
                            state2.bindString(1, contact.key);
                            state2.bindString(2, contact.phones.get(a));
                            state2.bindString(3, contact.shortPhones.get(a));
                            state2.bindInteger(4, contact.phoneDeleted.get(a).intValue());
                            state2.step();
                        }
                    }
                }
            }
            state.dispose();
            state2.dispose();
            this.database.commitTransaction();
            if (migrate) {
                this.database.executeFast("DROP TABLE IF EXISTS user_contacts_v6;").stepThis().dispose();
                this.database.executeFast("DROP TABLE IF EXISTS user_phones_v6;").stepThis().dispose();
                getCachedPhoneBook(false);
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void getCachedPhoneBook(boolean byError) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda89(this, byError));
    }

    /* JADX WARNING: Code restructure failed: missing block: B:100:0x0222, code lost:
        r3.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:101:0x0225, code lost:
        r0 = r3;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:104:0x023c, code lost:
        if (r3 != null) goto L_0x023e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:105:0x023e, code lost:
        r3.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:106:0x0241, code lost:
        throw r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:107:0x0242, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:108:0x0243, code lost:
        r2 = r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:109:0x0244, code lost:
        if (r3 != null) goto L_0x0246;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:110:0x0246, code lost:
        r3.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:111:0x0249, code lost:
        throw r2;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:37:0x00eb, code lost:
        if (0 != 0) goto L_0x00ed;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:38:0x00ed, code lost:
        r3.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:42:0x00f5, code lost:
        if (r3 == null) goto L_0x00f8;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:43:0x00f8, code lost:
        r4 = 16;
        r7 = 0;
        r8 = 0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:45:?, code lost:
        r3 = r1.database.queryFinalized("SELECT COUNT(key) FROM user_contacts_v7 WHERE 1", new java.lang.Object[0]);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:46:0x010b, code lost:
        if (r3.next() == false) goto L_0x013a;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:47:0x010d, code lost:
        r7 = r3.intValue(0);
        r4 = java.lang.Math.min(5000, r7);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:48:0x0119, code lost:
        if (r7 <= 5000) goto L_0x011d;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:49:0x011b, code lost:
        r8 = r7 - 5000;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:51:0x011f, code lost:
        if (org.telegram.messenger.BuildVars.LOGS_ENABLED == false) goto L_0x013a;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:52:0x0121, code lost:
        org.telegram.messenger.FileLog.d(r1.currentAccount + " current cached contacts count = " + r7);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:53:0x013a, code lost:
        if (r3 == null) goto L_0x0147;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:54:0x013c, code lost:
        r3.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:55:0x0140, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:57:?, code lost:
        org.telegram.messenger.FileLog.e(r0);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:58:0x0144, code lost:
        if (r3 == null) goto L_0x0147;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:59:0x0147, code lost:
        r10 = new java.util.HashMap<>(r4);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:60:0x014d, code lost:
        if (r8 == 0) goto L_0x016a;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:62:?, code lost:
        r3 = r1.database.queryFinalized("SELECT us.key, us.uid, us.fname, us.sname, up.phone, up.sphone, up.deleted, us.imported FROM user_contacts_v7 as us LEFT JOIN user_phones_v7 as up ON us.key = up.key WHERE 1 LIMIT 0," + r7, new java.lang.Object[0]);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:63:0x016a, code lost:
        r3 = r1.database.queryFinalized("SELECT us.key, us.uid, us.fname, us.sname, up.phone, up.sphone, up.deleted, us.imported FROM user_contacts_v7 as us LEFT JOIN user_phones_v7 as up ON us.key = up.key WHERE 1", new java.lang.Object[0]);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:65:0x0179, code lost:
        if (r3.next() == false) goto L_0x020d;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:66:0x017b, code lost:
        r0 = r3.stringValue(0);
        r11 = r10.get(r0);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:67:0x0185, code lost:
        if (r11 != null) goto L_0x01b5;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:68:0x0187, code lost:
        r11 = new org.telegram.messenger.ContactsController.Contact();
        r11.contact_id = r3.intValue(r9);
        r11.first_name = r3.stringValue(r6);
        r11.last_name = r3.stringValue(r5);
        r11.imported = r3.intValue(7);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:69:0x01a8, code lost:
        if (r11.first_name != null) goto L_0x01ac;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:70:0x01aa, code lost:
        r11.first_name = "";
     */
    /* JADX WARNING: Code restructure failed: missing block: B:72:0x01ae, code lost:
        if (r11.last_name != null) goto L_0x01b2;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:73:0x01b0, code lost:
        r11.last_name = "";
     */
    /* JADX WARNING: Code restructure failed: missing block: B:74:0x01b2, code lost:
        r10.put(r0, r11);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:75:0x01b5, code lost:
        r14 = r3.stringValue(4);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:76:0x01ba, code lost:
        if (r14 != null) goto L_0x01c0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:78:0x01c0, code lost:
        r11.phones.add(r14);
        r16 = r3.stringValue(5);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:79:0x01ca, code lost:
        if (r16 != null) goto L_0x01cf;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:82:0x01d5, code lost:
        if (r16.length() != 8) goto L_0x01e4;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:84:0x01db, code lost:
        if (r14.length() == 8) goto L_0x01e4;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:85:0x01dd, code lost:
        r5 = org.telegram.PhoneFormat.PhoneFormat.stripExceptNumbers(r14);
        r16 = r5;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:86:0x01e4, code lost:
        r5 = r16;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:87:0x01e6, code lost:
        r11.shortPhones.add(r5);
        r11.phoneDeleted.add(java.lang.Integer.valueOf(r3.intValue(6)));
        r11.phoneTypes.add("");
     */
    /* JADX WARNING: Code restructure failed: missing block: B:88:0x0204, code lost:
        if (r10.size() != 5000) goto L_0x0208;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:90:0x0208, code lost:
        r5 = 3;
        r6 = 2;
        r9 = 1;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:91:0x020d, code lost:
        r3.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:92:0x0210, code lost:
        r0 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:93:0x0211, code lost:
        if (r0 == null) goto L_0x0226;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:94:0x0213, code lost:
        r0.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:95:0x0217, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:96:0x0219, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:98:?, code lost:
        r10.clear();
        org.telegram.messenger.FileLog.e((java.lang.Throwable) r0);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:99:0x0220, code lost:
        if (r3 != null) goto L_0x0222;
     */
    /* renamed from: lambda$getCachedPhoneBook$111$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void m883x527849cd(boolean r27) {
        /*
            r26 = this;
            r1 = r26
            java.lang.String r2 = ""
            r3 = 0
            r4 = 6
            r5 = 3
            r6 = 2
            r8 = 4
            r9 = 1
            r10 = 8
            r11 = 5000(0x1388, float:7.006E-42)
            r12 = 0
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ all -> 0x00f1 }
            java.lang.String r13 = "SELECT name FROM sqlite_master WHERE type='table' AND name='user_contacts_v6'"
            java.lang.Object[] r14 = new java.lang.Object[r12]     // Catch:{ all -> 0x00f1 }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r13, r14)     // Catch:{ all -> 0x00f1 }
            r3 = r0
            boolean r0 = r3.next()     // Catch:{ all -> 0x00f1 }
            r3.dispose()     // Catch:{ all -> 0x00f1 }
            r3 = 0
            if (r0 == 0) goto L_0x00eb
            r13 = 16
            org.telegram.SQLite.SQLiteDatabase r14 = r1.database     // Catch:{ all -> 0x00f1 }
            java.lang.String r15 = "SELECT COUNT(uid) FROM user_contacts_v6 WHERE 1"
            java.lang.Object[] r7 = new java.lang.Object[r12]     // Catch:{ all -> 0x00f1 }
            org.telegram.SQLite.SQLiteCursor r7 = r14.queryFinalized(r15, r7)     // Catch:{ all -> 0x00f1 }
            r3 = r7
            boolean r7 = r3.next()     // Catch:{ all -> 0x00f1 }
            if (r7 == 0) goto L_0x0040
            int r7 = r3.intValue(r12)     // Catch:{ all -> 0x00f1 }
            int r7 = java.lang.Math.min(r11, r7)     // Catch:{ all -> 0x00f1 }
            r13 = r7
        L_0x0040:
            r3.dispose()     // Catch:{ all -> 0x00f1 }
            android.util.SparseArray r7 = new android.util.SparseArray     // Catch:{ all -> 0x00f1 }
            r7.<init>(r13)     // Catch:{ all -> 0x00f1 }
            org.telegram.SQLite.SQLiteDatabase r14 = r1.database     // Catch:{ all -> 0x00f1 }
            java.lang.String r15 = "SELECT us.uid, us.fname, us.sname, up.phone, up.sphone, up.deleted, us.imported FROM user_contacts_v6 as us LEFT JOIN user_phones_v6 as up ON us.uid = up.uid WHERE 1"
            java.lang.Object[] r11 = new java.lang.Object[r12]     // Catch:{ all -> 0x00f1 }
            org.telegram.SQLite.SQLiteCursor r11 = r14.queryFinalized(r15, r11)     // Catch:{ all -> 0x00f1 }
            r3 = r11
        L_0x0053:
            boolean r11 = r3.next()     // Catch:{ all -> 0x00f1 }
            if (r11 == 0) goto L_0x00da
            int r11 = r3.intValue(r12)     // Catch:{ all -> 0x00f1 }
            java.lang.Object r14 = r7.get(r11)     // Catch:{ all -> 0x00f1 }
            org.telegram.messenger.ContactsController$Contact r14 = (org.telegram.messenger.ContactsController.Contact) r14     // Catch:{ all -> 0x00f1 }
            if (r14 != 0) goto L_0x008e
            org.telegram.messenger.ContactsController$Contact r15 = new org.telegram.messenger.ContactsController$Contact     // Catch:{ all -> 0x00f1 }
            r15.<init>()     // Catch:{ all -> 0x00f1 }
            r14 = r15
            java.lang.String r15 = r3.stringValue(r9)     // Catch:{ all -> 0x00f1 }
            r14.first_name = r15     // Catch:{ all -> 0x00f1 }
            java.lang.String r15 = r3.stringValue(r6)     // Catch:{ all -> 0x00f1 }
            r14.last_name = r15     // Catch:{ all -> 0x00f1 }
            int r15 = r3.intValue(r4)     // Catch:{ all -> 0x00f1 }
            r14.imported = r15     // Catch:{ all -> 0x00f1 }
            java.lang.String r15 = r14.first_name     // Catch:{ all -> 0x00f1 }
            if (r15 != 0) goto L_0x0083
            r14.first_name = r2     // Catch:{ all -> 0x00f1 }
        L_0x0083:
            java.lang.String r15 = r14.last_name     // Catch:{ all -> 0x00f1 }
            if (r15 != 0) goto L_0x0089
            r14.last_name = r2     // Catch:{ all -> 0x00f1 }
        L_0x0089:
            r14.contact_id = r11     // Catch:{ all -> 0x00f1 }
            r7.put(r11, r14)     // Catch:{ all -> 0x00f1 }
        L_0x008e:
            java.lang.String r15 = r3.stringValue(r5)     // Catch:{ all -> 0x00f1 }
            if (r15 != 0) goto L_0x0095
            goto L_0x0053
        L_0x0095:
            java.util.ArrayList<java.lang.String> r4 = r14.phones     // Catch:{ all -> 0x00f1 }
            r4.add(r15)     // Catch:{ all -> 0x00f1 }
            java.lang.String r4 = r3.stringValue(r8)     // Catch:{ all -> 0x00f1 }
            if (r4 != 0) goto L_0x00a2
            r4 = 6
            goto L_0x0053
        L_0x00a2:
            int r8 = r4.length()     // Catch:{ all -> 0x00f1 }
            if (r8 != r10) goto L_0x00b3
            int r8 = r15.length()     // Catch:{ all -> 0x00f1 }
            if (r8 == r10) goto L_0x00b3
            java.lang.String r8 = org.telegram.PhoneFormat.PhoneFormat.stripExceptNumbers(r15)     // Catch:{ all -> 0x00f1 }
            r4 = r8
        L_0x00b3:
            java.util.ArrayList<java.lang.String> r8 = r14.shortPhones     // Catch:{ all -> 0x00f1 }
            r8.add(r4)     // Catch:{ all -> 0x00f1 }
            java.util.ArrayList<java.lang.Integer> r8 = r14.phoneDeleted     // Catch:{ all -> 0x00f1 }
            r10 = 5
            int r18 = r3.intValue(r10)     // Catch:{ all -> 0x00f1 }
            java.lang.Integer r10 = java.lang.Integer.valueOf(r18)     // Catch:{ all -> 0x00f1 }
            r8.add(r10)     // Catch:{ all -> 0x00f1 }
            java.util.ArrayList<java.lang.String> r8 = r14.phoneTypes     // Catch:{ all -> 0x00f1 }
            r8.add(r2)     // Catch:{ all -> 0x00f1 }
            int r8 = r7.size()     // Catch:{ all -> 0x00f1 }
            r10 = 5000(0x1388, float:7.006E-42)
            if (r8 != r10) goto L_0x00d4
            goto L_0x00da
        L_0x00d4:
            r4 = 6
            r8 = 4
            r10 = 8
            goto L_0x0053
        L_0x00da:
            r3.dispose()     // Catch:{ all -> 0x00f1 }
            r3 = 0
            org.telegram.messenger.ContactsController r4 = r26.getContactsController()     // Catch:{ all -> 0x00f1 }
            r4.migratePhoneBookToV7(r7)     // Catch:{ all -> 0x00f1 }
            if (r3 == 0) goto L_0x00ea
            r3.dispose()
        L_0x00ea:
            return
        L_0x00eb:
            if (r3 == 0) goto L_0x00f8
        L_0x00ed:
            r3.dispose()
            goto L_0x00f8
        L_0x00f1:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x024a }
            if (r3 == 0) goto L_0x00f8
            goto L_0x00ed
        L_0x00f8:
            r4 = 16
            r7 = 0
            r8 = 0
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ all -> 0x0140 }
            java.lang.String r10 = "SELECT COUNT(key) FROM user_contacts_v7 WHERE 1"
            java.lang.Object[] r11 = new java.lang.Object[r12]     // Catch:{ all -> 0x0140 }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r10, r11)     // Catch:{ all -> 0x0140 }
            r3 = r0
            boolean r0 = r3.next()     // Catch:{ all -> 0x0140 }
            if (r0 == 0) goto L_0x013a
            int r0 = r3.intValue(r12)     // Catch:{ all -> 0x0140 }
            r7 = r0
            r10 = 5000(0x1388, float:7.006E-42)
            int r0 = java.lang.Math.min(r10, r7)     // Catch:{ all -> 0x0140 }
            r4 = r0
            if (r7 <= r10) goto L_0x011d
            int r8 = r7 + -5000
        L_0x011d:
            boolean r0 = org.telegram.messenger.BuildVars.LOGS_ENABLED     // Catch:{ all -> 0x0140 }
            if (r0 == 0) goto L_0x013a
            java.lang.StringBuilder r0 = new java.lang.StringBuilder     // Catch:{ all -> 0x0140 }
            r0.<init>()     // Catch:{ all -> 0x0140 }
            int r10 = r1.currentAccount     // Catch:{ all -> 0x0140 }
            r0.append(r10)     // Catch:{ all -> 0x0140 }
            java.lang.String r10 = " current cached contacts count = "
            r0.append(r10)     // Catch:{ all -> 0x0140 }
            r0.append(r7)     // Catch:{ all -> 0x0140 }
            java.lang.String r0 = r0.toString()     // Catch:{ all -> 0x0140 }
            org.telegram.messenger.FileLog.d(r0)     // Catch:{ all -> 0x0140 }
        L_0x013a:
            if (r3 == 0) goto L_0x0147
        L_0x013c:
            r3.dispose()
            goto L_0x0147
        L_0x0140:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0242 }
            if (r3 == 0) goto L_0x0147
            goto L_0x013c
        L_0x0147:
            java.util.HashMap r0 = new java.util.HashMap
            r0.<init>(r4)
            r10 = r0
            if (r8 == 0) goto L_0x016a
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0219 }
            java.lang.StringBuilder r11 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0219 }
            r11.<init>()     // Catch:{ Exception -> 0x0219 }
            java.lang.String r13 = "SELECT us.key, us.uid, us.fname, us.sname, up.phone, up.sphone, up.deleted, us.imported FROM user_contacts_v7 as us LEFT JOIN user_phones_v7 as up ON us.key = up.key WHERE 1 LIMIT 0,"
            r11.append(r13)     // Catch:{ Exception -> 0x0219 }
            r11.append(r7)     // Catch:{ Exception -> 0x0219 }
            java.lang.String r11 = r11.toString()     // Catch:{ Exception -> 0x0219 }
            java.lang.Object[] r13 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x0219 }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r11, r13)     // Catch:{ Exception -> 0x0219 }
            r3 = r0
            goto L_0x0175
        L_0x016a:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0219 }
            java.lang.String r11 = "SELECT us.key, us.uid, us.fname, us.sname, up.phone, up.sphone, up.deleted, us.imported FROM user_contacts_v7 as us LEFT JOIN user_phones_v7 as up ON us.key = up.key WHERE 1"
            java.lang.Object[] r13 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x0219 }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r11, r13)     // Catch:{ Exception -> 0x0219 }
            r3 = r0
        L_0x0175:
            boolean r0 = r3.next()     // Catch:{ Exception -> 0x0219 }
            if (r0 == 0) goto L_0x020d
            java.lang.String r0 = r3.stringValue(r12)     // Catch:{ Exception -> 0x0219 }
            java.lang.Object r11 = r10.get(r0)     // Catch:{ Exception -> 0x0219 }
            org.telegram.messenger.ContactsController$Contact r11 = (org.telegram.messenger.ContactsController.Contact) r11     // Catch:{ Exception -> 0x0219 }
            if (r11 != 0) goto L_0x01b5
            org.telegram.messenger.ContactsController$Contact r13 = new org.telegram.messenger.ContactsController$Contact     // Catch:{ Exception -> 0x0219 }
            r13.<init>()     // Catch:{ Exception -> 0x0219 }
            r11 = r13
            int r13 = r3.intValue(r9)     // Catch:{ Exception -> 0x0219 }
            r11.contact_id = r13     // Catch:{ Exception -> 0x0219 }
            java.lang.String r13 = r3.stringValue(r6)     // Catch:{ Exception -> 0x0219 }
            r11.first_name = r13     // Catch:{ Exception -> 0x0219 }
            java.lang.String r13 = r3.stringValue(r5)     // Catch:{ Exception -> 0x0219 }
            r11.last_name = r13     // Catch:{ Exception -> 0x0219 }
            r13 = 7
            int r13 = r3.intValue(r13)     // Catch:{ Exception -> 0x0219 }
            r11.imported = r13     // Catch:{ Exception -> 0x0219 }
            java.lang.String r13 = r11.first_name     // Catch:{ Exception -> 0x0219 }
            if (r13 != 0) goto L_0x01ac
            r11.first_name = r2     // Catch:{ Exception -> 0x0219 }
        L_0x01ac:
            java.lang.String r13 = r11.last_name     // Catch:{ Exception -> 0x0219 }
            if (r13 != 0) goto L_0x01b2
            r11.last_name = r2     // Catch:{ Exception -> 0x0219 }
        L_0x01b2:
            r10.put(r0, r11)     // Catch:{ Exception -> 0x0219 }
        L_0x01b5:
            r13 = 4
            java.lang.String r14 = r3.stringValue(r13)     // Catch:{ Exception -> 0x0219 }
            if (r14 != 0) goto L_0x01c0
            r9 = 5000(0x1388, float:7.006E-42)
            r15 = 5
            goto L_0x0208
        L_0x01c0:
            java.util.ArrayList<java.lang.String> r15 = r11.phones     // Catch:{ Exception -> 0x0219 }
            r15.add(r14)     // Catch:{ Exception -> 0x0219 }
            r15 = 5
            java.lang.String r16 = r3.stringValue(r15)     // Catch:{ Exception -> 0x0219 }
            if (r16 != 0) goto L_0x01cf
            r9 = 5000(0x1388, float:7.006E-42)
            goto L_0x0208
        L_0x01cf:
            int r5 = r16.length()     // Catch:{ Exception -> 0x0219 }
            r6 = 8
            if (r5 != r6) goto L_0x01e4
            int r5 = r14.length()     // Catch:{ Exception -> 0x0219 }
            if (r5 == r6) goto L_0x01e4
            java.lang.String r5 = org.telegram.PhoneFormat.PhoneFormat.stripExceptNumbers(r14)     // Catch:{ Exception -> 0x0219 }
            r16 = r5
            goto L_0x01e6
        L_0x01e4:
            r5 = r16
        L_0x01e6:
            java.util.ArrayList<java.lang.String> r6 = r11.shortPhones     // Catch:{ Exception -> 0x0219 }
            r6.add(r5)     // Catch:{ Exception -> 0x0219 }
            java.util.ArrayList<java.lang.Integer> r6 = r11.phoneDeleted     // Catch:{ Exception -> 0x0219 }
            r9 = 6
            int r17 = r3.intValue(r9)     // Catch:{ Exception -> 0x0219 }
            java.lang.Integer r9 = java.lang.Integer.valueOf(r17)     // Catch:{ Exception -> 0x0219 }
            r6.add(r9)     // Catch:{ Exception -> 0x0219 }
            java.util.ArrayList<java.lang.String> r6 = r11.phoneTypes     // Catch:{ Exception -> 0x0219 }
            r6.add(r2)     // Catch:{ Exception -> 0x0219 }
            int r6 = r10.size()     // Catch:{ Exception -> 0x0219 }
            r9 = 5000(0x1388, float:7.006E-42)
            if (r6 != r9) goto L_0x0207
            goto L_0x020d
        L_0x0207:
        L_0x0208:
            r5 = 3
            r6 = 2
            r9 = 1
            goto L_0x0175
        L_0x020d:
            r3.dispose()     // Catch:{ Exception -> 0x0219 }
            r0 = 0
            if (r0 == 0) goto L_0x0226
            r0.dispose()
            goto L_0x0226
        L_0x0217:
            r0 = move-exception
            goto L_0x023c
        L_0x0219:
            r0 = move-exception
            r10.clear()     // Catch:{ all -> 0x0217 }
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0217 }
            if (r3 == 0) goto L_0x0225
            r3.dispose()
        L_0x0225:
            r0 = r3
        L_0x0226:
            org.telegram.messenger.ContactsController r18 = r26.getContactsController()
            r20 = 1
            r21 = 1
            r22 = 0
            r23 = 0
            r24 = r27 ^ 1
            r25 = 0
            r19 = r10
            r18.performSyncPhoneBook(r19, r20, r21, r22, r23, r24, r25)
            return
        L_0x023c:
            if (r3 == 0) goto L_0x0241
            r3.dispose()
        L_0x0241:
            throw r0
        L_0x0242:
            r0 = move-exception
            r2 = r0
            if (r3 == 0) goto L_0x0249
            r3.dispose()
        L_0x0249:
            throw r2
        L_0x024a:
            r0 = move-exception
            r2 = r0
            if (r3 == 0) goto L_0x0251
            r3.dispose()
        L_0x0251:
            goto L_0x0253
        L_0x0252:
            throw r2
        L_0x0253:
            goto L_0x0252
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.m883x527849cd(boolean):void");
    }

    public void getContacts() {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda22(this));
    }

    /* renamed from: lambda$getContacts$112$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m886lambda$getContacts$112$orgtelegrammessengerMessagesStorage() {
        ArrayList<TLRPC.TL_contact> contacts2 = new ArrayList<>();
        ArrayList<TLRPC.User> users = new ArrayList<>();
        try {
            SQLiteCursor cursor = this.database.queryFinalized("SELECT * FROM contacts WHERE 1", new Object[0]);
            StringBuilder uids = new StringBuilder();
            while (cursor.next()) {
                TLRPC.TL_contact contact = new TLRPC.TL_contact();
                contact.user_id = (long) cursor.intValue(0);
                contact.mutual = cursor.intValue(1) == 1;
                if (uids.length() != 0) {
                    uids.append(",");
                }
                contacts2.add(contact);
                uids.append(contact.user_id);
            }
            cursor.dispose();
            if (uids.length() != 0) {
                getUsersInternal(uids.toString(), users);
            }
        } catch (Exception e) {
            contacts2.clear();
            users.clear();
            FileLog.e((Throwable) e);
        }
        getContactsController().processLoadedContacts(contacts2, users, 1);
    }

    public void getUnsentMessages(int count) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda122(this, count));
    }

    /* renamed from: lambda$getUnsentMessages$113$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m903x58cb8011(int count) {
        ArrayList<TLRPC.User> users;
        ArrayList<TLRPC.Chat> chats;
        ArrayList<TLRPC.Chat> chats2;
        ArrayList<TLRPC.User> users2;
        try {
            SparseArray<TLRPC.Message> messageHashMap = new SparseArray<>();
            ArrayList<TLRPC.Message> messages = new ArrayList<>();
            ArrayList<TLRPC.Message> scheduledMessages = new ArrayList<>();
            ArrayList<TLRPC.User> users3 = new ArrayList<>();
            ArrayList<TLRPC.Chat> chats3 = new ArrayList<>();
            ArrayList<TLRPC.EncryptedChat> encryptedChats = new ArrayList<>();
            ArrayList arrayList = new ArrayList();
            ArrayList arrayList2 = new ArrayList();
            ArrayList arrayList3 = new ArrayList();
            SQLiteDatabase sQLiteDatabase = this.database;
            boolean z = false;
            SQLiteCursor cursor = sQLiteDatabase.queryFinalized("SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.uid, s.seq_in, s.seq_out, m.ttl FROM messages_v2 as m LEFT JOIN randoms_v2 as r ON r.mid = m.mid AND r.uid = m.uid LEFT JOIN messages_seq as s ON m.mid = s.mid WHERE (m.mid < 0 AND m.send_state = 1) OR (m.mid > 0 AND m.send_state = 3) ORDER BY m.mid DESC LIMIT " + count, new Object[0]);
            while (cursor.next()) {
                NativeByteBuffer data = cursor.byteBufferValue(1);
                if (data != null) {
                    TLRPC.Message message = TLRPC.Message.TLdeserialize(data, data.readInt32(z), z);
                    message.send_state = cursor.intValue(2);
                    TLRPC.Message message2 = message;
                    message2.readAttachPath(data, getUserConfig().clientUserId);
                    data.reuse();
                    if (messageHashMap.indexOfKey(message2.id) < 0) {
                        MessageObject.setUnreadFlags(message2, cursor.intValue(0));
                        message2.id = cursor.intValue(3);
                        message2.date = cursor.intValue(4);
                        if (!cursor.isNull(5)) {
                            message2.random_id = cursor.longValue(5);
                        }
                        message2.dialog_id = cursor.longValue(6);
                        message2.seq_in = cursor.intValue(7);
                        message2.seq_out = cursor.intValue(8);
                        message2.ttl = cursor.intValue(9);
                        messages.add(message2);
                        messageHashMap.put(message2.id, message2);
                        if (DialogObject.isEncryptedDialog(message2.dialog_id)) {
                            int encryptedChatId = DialogObject.getEncryptedChatId(message2.dialog_id);
                            if (!arrayList3.contains(Integer.valueOf(encryptedChatId))) {
                                arrayList3.add(Integer.valueOf(encryptedChatId));
                            }
                        } else if (DialogObject.isUserDialog(message2.dialog_id)) {
                            if (!arrayList.contains(Long.valueOf(message2.dialog_id))) {
                                arrayList.add(Long.valueOf(message2.dialog_id));
                            }
                        } else if (!arrayList2.contains(Long.valueOf(-message2.dialog_id))) {
                            arrayList2.add(Long.valueOf(-message2.dialog_id));
                        }
                        addUsersAndChatsFromMessage(message2, arrayList, arrayList2);
                        if (message2.send_state != 3 && ((message2.peer_id.channel_id == 0 && !MessageObject.isUnread(message2) && !DialogObject.isEncryptedDialog(message2.dialog_id)) || message2.id > 0)) {
                            message2.send_state = 0;
                        }
                    }
                }
                z = false;
            }
            cursor.dispose();
            SQLiteCursor cursor2 = this.database.queryFinalized("SELECT m.data, m.send_state, m.mid, m.date, r.random_id, m.uid, m.ttl FROM scheduled_messages_v2 as m LEFT JOIN randoms_v2 as r ON r.mid = m.mid AND r.uid = m.uid WHERE (m.mid < 0 AND m.send_state = 1) OR (m.mid > 0 AND m.send_state = 3) ORDER BY date ASC", new Object[0]);
            while (cursor2.next()) {
                NativeByteBuffer data2 = cursor2.byteBufferValue(0);
                if (data2 != null) {
                    TLRPC.Message message3 = TLRPC.Message.TLdeserialize(data2, data2.readInt32(false), false);
                    message3.send_state = cursor2.intValue(1);
                    message3.readAttachPath(data2, getUserConfig().clientUserId);
                    data2.reuse();
                    if (messageHashMap.indexOfKey(message3.id) < 0) {
                        message3.id = cursor2.intValue(2);
                        message3.date = cursor2.intValue(3);
                        if (!cursor2.isNull(4)) {
                            users2 = users3;
                            chats2 = chats3;
                            message3.random_id = cursor2.longValue(4);
                        } else {
                            users2 = users3;
                            chats2 = chats3;
                        }
                        message3.dialog_id = cursor2.longValue(5);
                        message3.ttl = cursor2.intValue(6);
                        scheduledMessages.add(message3);
                        messageHashMap.put(message3.id, message3);
                        if (DialogObject.isEncryptedDialog(message3.dialog_id)) {
                            int encryptedChatId2 = DialogObject.getEncryptedChatId(message3.dialog_id);
                            if (!arrayList3.contains(Integer.valueOf(encryptedChatId2))) {
                                arrayList3.add(Integer.valueOf(encryptedChatId2));
                            }
                        } else if (DialogObject.isUserDialog(message3.dialog_id)) {
                            if (!arrayList.contains(Long.valueOf(message3.dialog_id))) {
                                arrayList.add(Long.valueOf(message3.dialog_id));
                            }
                        } else if (!arrayList2.contains(Long.valueOf(-message3.dialog_id))) {
                            arrayList2.add(Long.valueOf(-message3.dialog_id));
                        }
                        addUsersAndChatsFromMessage(message3, arrayList, arrayList2);
                        if (message3.send_state != 3) {
                            if ((message3.peer_id.channel_id == 0 && !MessageObject.isUnread(message3) && !DialogObject.isEncryptedDialog(message3.dialog_id)) || message3.id > 0) {
                                message3.send_state = 0;
                            }
                        }
                    } else {
                        users2 = users3;
                        chats2 = chats3;
                    }
                } else {
                    users2 = users3;
                    chats2 = chats3;
                }
                users3 = users2;
                chats3 = chats2;
            }
            ArrayList<TLRPC.User> users4 = users3;
            ArrayList<TLRPC.Chat> chats4 = chats3;
            cursor2.dispose();
            if (!arrayList3.isEmpty()) {
                getEncryptedChatsInternal(TextUtils.join(",", arrayList3), encryptedChats, arrayList);
            }
            if (!arrayList.isEmpty()) {
                users = users4;
                getUsersInternal(TextUtils.join(",", arrayList), users);
            } else {
                users = users4;
            }
            if (!arrayList2.isEmpty()) {
                StringBuilder stringToLoad = new StringBuilder();
                for (int a = 0; a < arrayList2.size(); a++) {
                    Long cid = (Long) arrayList2.get(a);
                    if (stringToLoad.length() != 0) {
                        stringToLoad.append(",");
                    }
                    stringToLoad.append(cid);
                }
                chats = chats4;
                getChatsInternal(stringToLoad.toString(), chats);
            } else {
                chats = chats4;
            }
            SQLiteCursor sQLiteCursor = cursor2;
            getSendMessagesHelper().processUnsentMessages(messages, scheduledMessages, users, chats, encryptedChats);
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public boolean checkMessageByRandomId(long random_id) {
        boolean[] result = new boolean[1];
        CountDownLatch countDownLatch = new CountDownLatch(1);
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda14(this, random_id, result, countDownLatch));
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return result[0];
    }

    /* JADX WARNING: Code restructure failed: missing block: B:11:0x0030, code lost:
        if (r0 == null) goto L_0x0033;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:12:0x0033, code lost:
        r12.countDown();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:13:0x0036, code lost:
        return;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:5:0x0024, code lost:
        if (r0 != null) goto L_0x0026;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:6:0x0026, code lost:
        r0.dispose();
     */
    /* renamed from: lambda$checkMessageByRandomId$114$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void m852xe78dvar_(long r9, boolean[] r11, java.util.concurrent.CountDownLatch r12) {
        /*
            r8 = this;
            r0 = 0
            org.telegram.SQLite.SQLiteDatabase r1 = r8.database     // Catch:{ Exception -> 0x002c }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x002c }
            java.lang.String r3 = "SELECT random_id FROM randoms_v2 WHERE random_id = %d"
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x002c }
            java.lang.Long r6 = java.lang.Long.valueOf(r9)     // Catch:{ Exception -> 0x002c }
            r7 = 0
            r5[r7] = r6     // Catch:{ Exception -> 0x002c }
            java.lang.String r2 = java.lang.String.format(r2, r3, r5)     // Catch:{ Exception -> 0x002c }
            java.lang.Object[] r3 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x002c }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r2, r3)     // Catch:{ Exception -> 0x002c }
            r0 = r1
            boolean r1 = r0.next()     // Catch:{ Exception -> 0x002c }
            if (r1 == 0) goto L_0x0024
            r11[r7] = r4     // Catch:{ Exception -> 0x002c }
        L_0x0024:
            if (r0 == 0) goto L_0x0033
        L_0x0026:
            r0.dispose()
            goto L_0x0033
        L_0x002a:
            r1 = move-exception
            goto L_0x0037
        L_0x002c:
            r1 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r1)     // Catch:{ all -> 0x002a }
            if (r0 == 0) goto L_0x0033
            goto L_0x0026
        L_0x0033:
            r12.countDown()
            return
        L_0x0037:
            if (r0 == 0) goto L_0x003c
            r0.dispose()
        L_0x003c:
            goto L_0x003e
        L_0x003d:
            throw r1
        L_0x003e:
            goto L_0x003d
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.m852xe78dvar_(long, boolean[], java.util.concurrent.CountDownLatch):void");
    }

    public boolean checkMessageId(long dialogId, int mid) {
        boolean[] result = new boolean[1];
        CountDownLatch countDownLatch = new CountDownLatch(1);
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda174(this, dialogId, mid, result, countDownLatch));
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return result[0];
    }

    /* JADX WARNING: Code restructure failed: missing block: B:11:0x0037, code lost:
        if (r0 == null) goto L_0x003a;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:12:0x003a, code lost:
        r13.countDown();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:13:0x003d, code lost:
        return;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:5:0x002b, code lost:
        if (r0 != null) goto L_0x002d;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:6:0x002d, code lost:
        r0.dispose();
     */
    /* renamed from: lambda$checkMessageId$115$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void m853lambda$checkMessageId$115$orgtelegrammessengerMessagesStorage(long r9, int r11, boolean[] r12, java.util.concurrent.CountDownLatch r13) {
        /*
            r8 = this;
            r0 = 0
            org.telegram.SQLite.SQLiteDatabase r1 = r8.database     // Catch:{ Exception -> 0x0033 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x0033 }
            java.lang.String r3 = "SELECT mid FROM messages_v2 WHERE uid = %d AND mid = %d"
            r4 = 2
            java.lang.Object[] r4 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0033 }
            java.lang.Long r5 = java.lang.Long.valueOf(r9)     // Catch:{ Exception -> 0x0033 }
            r6 = 0
            r4[r6] = r5     // Catch:{ Exception -> 0x0033 }
            java.lang.Integer r5 = java.lang.Integer.valueOf(r11)     // Catch:{ Exception -> 0x0033 }
            r7 = 1
            r4[r7] = r5     // Catch:{ Exception -> 0x0033 }
            java.lang.String r2 = java.lang.String.format(r2, r3, r4)     // Catch:{ Exception -> 0x0033 }
            java.lang.Object[] r3 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0033 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r2, r3)     // Catch:{ Exception -> 0x0033 }
            r0 = r1
            boolean r1 = r0.next()     // Catch:{ Exception -> 0x0033 }
            if (r1 == 0) goto L_0x002b
            r12[r6] = r7     // Catch:{ Exception -> 0x0033 }
        L_0x002b:
            if (r0 == 0) goto L_0x003a
        L_0x002d:
            r0.dispose()
            goto L_0x003a
        L_0x0031:
            r1 = move-exception
            goto L_0x003e
        L_0x0033:
            r1 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r1)     // Catch:{ all -> 0x0031 }
            if (r0 == 0) goto L_0x003a
            goto L_0x002d
        L_0x003a:
            r13.countDown()
            return
        L_0x003e:
            if (r0 == 0) goto L_0x0043
            r0.dispose()
        L_0x0043:
            goto L_0x0045
        L_0x0044:
            throw r1
        L_0x0045:
            goto L_0x0044
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.m853lambda$checkMessageId$115$orgtelegrammessengerMessagesStorage(long, int, boolean[], java.util.concurrent.CountDownLatch):void");
    }

    public void getUnreadMention(long dialog_id, IntCallback callback) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda3(this, dialog_id, callback));
    }

    /* renamed from: lambda$getUnreadMention$117$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m902x340d0cc1(long dialog_id, IntCallback callback) {
        int result;
        try {
            SQLiteCursor cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT MIN(mid) FROM messages_v2 WHERE uid = %d AND mention = 1 AND read_state IN(0, 1)", new Object[]{Long.valueOf(dialog_id)}), new Object[0]);
            if (cursor.next()) {
                result = cursor.intValue(0);
            } else {
                result = 0;
            }
            cursor.dispose();
            AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda131(callback, result));
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void getMessagesCount(long dialog_id, IntCallback callback) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda2(this, dialog_id, callback));
    }

    /* renamed from: lambda$getMessagesCount$119$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m898x4CLASSNAMEd97(long dialog_id, IntCallback callback) {
        int result;
        try {
            SQLiteCursor cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT COUNT(mid) FROM messages_v2 WHERE uid = %d", new Object[]{Long.valueOf(dialog_id)}), new Object[0]);
            if (cursor.next()) {
                result = cursor.intValue(0);
            } else {
                result = 0;
            }
            cursor.dispose();
            AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda120(callback, result));
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v0, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v0, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v0, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v0, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v0, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v0, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v0, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v0, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v0, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v1, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v0, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v0, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r28v0, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v2, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r42v0, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v1, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v1, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v2, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v2, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v2, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v1, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v2, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v4, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v2, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v6, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v10, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v1, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r28v1, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v2, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v2, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v11, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v3, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v2, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v9, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v3, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v3, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v4, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v2, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v3, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v3, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v5, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v12, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v5, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v3, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v3, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v4, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r28v6, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v19, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v7, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v4, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v5, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v6, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v5, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v20, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v8, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v6, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v7, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v7, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v10, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r28v7, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v9, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v10, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v11, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v6, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v27, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v15, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v12, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v19, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v7, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v28, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v16, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v13, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v20, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v15, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r46v1, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v8, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v2, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v9, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v29, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v28, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v4, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v17, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v20, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v10, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v9, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r46v2, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v5, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v30, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v29, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v18, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v21, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v25, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v12, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v6, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v6, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v8, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v6, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v3, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v4, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v13, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v13, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v22, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v26, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v22, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v20, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v25, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v30, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v17, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v7, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r48v9, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v6, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v9, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v11, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v18, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v21, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v10, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v33, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v22, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v24, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v28, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v31, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v6, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v25, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v11, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v34, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v23, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v25, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v32, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v12, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v36, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v24, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v26, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v33, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v31, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v9, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v29, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v34, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v36, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v13, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v27, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v38, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v41, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v42, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v14, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v28, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v43, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v46, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v14, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v10, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v7, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v8, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v9, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v9, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v11, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v9, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v19, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v21, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v38, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v47, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v30, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v37, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v10, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v15, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v32, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v17, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v13, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v11, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v12, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v12, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v14, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v12, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v23, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v40, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v48, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v32, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v39, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v18, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v13, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v13, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v15, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v13, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v16, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v42, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v33, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v36, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v24, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v15, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v14, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v17, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v43, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v38, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v15, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v15, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v17, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v16, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v46, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v43, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v17, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v18, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v16, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v18, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v19, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v17, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v18, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v48, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v43, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v18, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v19, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v49, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v48, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v19, resolved type: long} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v50, resolved type: long} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v19, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v20, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v50, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v52, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v22, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v51, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v53, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v23, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v52, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v55, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v24, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v53, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v58, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v25, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v55, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v59, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v36, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v26, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v65, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v60, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v27, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v66, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v61, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v3, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v28, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v62, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v67, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r53v4, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v29, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v79, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v63, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v30, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v84, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v65, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v31, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v85, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v66, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v32, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v86, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v67, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v86, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v20, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v18, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v19, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v4, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v49, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v83, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v21, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v60, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v35, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v52, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v69, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v87, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v39, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v22, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v63, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v56, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v70, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v88, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v40, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v94, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v65, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v58, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v73, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v89, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v41, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v23, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v65, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v44, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v59, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v74, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v90, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v87, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v5, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v50, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v75, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v66, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v20, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v89, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v91, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v76, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v98, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v67, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v24, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v46, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v70, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v49, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v65, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v91, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v25, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v51, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v66, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v92, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v100, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v93, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v94, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v78, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v102, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v93, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v94, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v103, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v21, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v95, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v70, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v79, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v82, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v20, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v51, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v106, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v71, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v54, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v67, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v96, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v83, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v52, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v6, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v72, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v84, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v58, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v75, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v109, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v59, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v68, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v97, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v85, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v76, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v7, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v86, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v77, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v63, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v69, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v87, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v113, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v98, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v53, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v117, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v84, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v66, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v92, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v99, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v121, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v85, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v69, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v94, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v100, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v125, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v86, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v72, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v96, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v101, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v120, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v23, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v54, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v24, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v55, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v126, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v84, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v73, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v92, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v97, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v102, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v127, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v85, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v74, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v93, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v98, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v103, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v56, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v57, resolved type: java.lang.Object[]} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v25, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v128, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v86, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v75, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v94, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v99, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v104, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v58, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v26, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v129, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v87, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v76, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v95, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v100, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v105, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v60, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v61, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v36, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v21, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v27, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v130, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v88, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v77, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v96, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v101, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v106, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v22, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v28, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v6, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v7, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v27, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v22, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v35, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v5, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v41, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v65, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v108, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v102, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v90, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v26, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v79, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v33, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v109, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v20, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v27, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v81, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v103, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v34, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v110, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r25v25, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v28, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v82, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v105, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v67, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v35, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v111, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v29, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v83, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v106, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v68, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v36, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v112, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v32, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v36, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v6, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v87, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v110, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v71, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v37, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v113, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v105, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v89, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v111, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v73, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v38, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v114, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v37, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v7, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v137, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v115, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v112, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v74, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v109, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v115, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v9, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v93, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v97, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v54, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v130, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v55, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v131, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v38, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v8, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v132, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v56, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v39, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v128, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v124, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v112, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v43, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v116, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v129, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v125, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v114, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v44, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v158, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v34, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v45, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v132, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v129, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v115, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v35, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v46, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v134, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v131, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v117, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v164, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v134, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v118, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v143, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v10, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v139, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v170, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v172, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v48, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v175, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v145, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v124, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v153, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v11, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v144, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v178, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v148, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v126, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v154, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v122, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v12, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v149, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v182, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v155, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v134, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v163, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v123, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v13, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v154, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v163, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v124, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v125, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v68, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v96, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v161, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v169, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v147, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v5, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v40, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v9, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v148, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v170, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v97, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v69, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v48, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v30, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v167, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v173, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v127, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v128, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v169, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v98, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v171, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v16, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v130, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v70, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v71, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v15, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v131, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v23, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v6, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v99, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v172, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v149, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v100, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v172, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v174, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v173, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v132, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v150, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r46v6, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v49, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v38, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v21, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v41, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v11, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v176, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v175, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v176, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v175, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v134, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v151, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v103, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v17, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v9, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v34, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v177, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v177, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v176, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v135, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v152, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v104, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v36, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v180, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v156, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v107, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v42, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v12, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v184, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v183, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v161, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v109, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v43, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v13, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v187, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v186, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v177, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v144, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v162, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v189, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v111, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v190, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v39, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v44, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v14, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v191, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v165, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v114, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v40, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v192, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v41, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v45, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v15, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v190, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v193, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v178, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v148, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v167, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v190, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v118, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v194, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v192, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v194, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v16, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v46, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v10, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v18, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v119, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v198, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v179, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v151, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v168, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v191, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v120, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v196, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v180, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v152, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v169, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v20, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r49v12, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v172, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v202, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v124, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v197, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v181, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v154, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v193, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v125, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v198, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v77, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v127, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v173, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v199, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v182, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v156, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v194, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v200, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v132, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v176, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v201, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v80, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v202, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v203, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v205, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v133, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v203, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v183, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v161, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v178, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v195, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v204, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v206, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v47, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r16v17, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v209, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v134, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v207, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v184, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v164, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v180, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v212, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v135, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v209, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v185, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v165, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v181, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v136, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v211, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v186, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v182, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v214, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v166, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r46v7, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v215, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v50, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v23, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v213, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r46v8, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v216, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v51, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r24v24, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v214, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v47, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v28, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v168, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v218, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v139, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v187, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v183, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v169, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v140, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v184, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v170, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v219, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v222, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v141, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v222, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v188, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v172, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v185, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v142, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v224, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v189, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v175, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v186, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v143, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v226, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v190, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v187, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v177, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v52, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v144, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v228, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v189, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v18, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r45v53, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v146, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v230, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v224, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v179, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v191, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r46v11, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v191, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v203, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v147, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v231, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v225, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v181, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v194, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v192, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v204, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v195, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v210, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v58, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v29, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v71, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v197, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v205, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v198, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v200, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v149, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v236, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v230, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v195, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v202, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v203, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v204, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v205, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v206, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v207, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v150, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v237, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v238, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v207, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v208, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v151, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v238, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v239, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v208, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v209, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v210, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v152, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v239, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v242, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v219, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v211, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v94, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v52, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v53, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v54, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v55, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v56, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v57, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v59, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v60, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v61, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v62, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v212, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v213, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v214, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v41, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v42, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v43, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v44, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v45, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v46, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v47, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v48, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v49, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v50, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v51, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v52, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v63, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v96, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v65, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v66, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v67, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v68, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v64, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v65, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v66, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v67, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v75, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v55, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v98, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v245, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v246, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r52v69, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v68, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v70, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v71, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v72, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v73, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v74, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v76, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v77, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r48v45, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r48v46, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r48v48, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r48v49, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v79, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v80, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v58, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v87, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v215, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v216, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v217, resolved type: org.telegram.SQLite.SQLiteDatabase} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v88, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v89, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v90, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v91, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v92, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v218, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v219, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v220, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v221, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v222, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v223, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v224, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v93, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v94, resolved type: java.lang.String} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v82, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v59, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v60, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v61, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v62, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v63, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v226, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v227, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v83, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v84, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v85, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v86, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v87, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v88, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v89, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v90, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v91, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v92, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v93, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v228, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v229, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v230, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v231, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v106, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v96, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v232, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v233, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v97, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v98, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v99, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v100, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v101, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v102, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v64, resolved type: java.util.ArrayList} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v108, resolved type: androidx.collection.LongSparseArray} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v234, resolved type: java.util.ArrayList} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v235, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v236, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r33v65, resolved type: org.telegram.SQLite.SQLiteCursor} */
    /* JADX WARNING: type inference failed for: r23v1 */
    /* JADX WARNING: type inference failed for: r33v6 */
    /* JADX WARNING: type inference failed for: r34v5 */
    /* JADX WARNING: type inference failed for: r3v40 */
    /* JADX WARNING: type inference failed for: r48v15 */
    /* JADX WARNING: type inference failed for: r3v41 */
    /* JADX WARNING: type inference failed for: r3v54 */
    /* JADX WARNING: type inference failed for: r4v61 */
    /* JADX WARNING: type inference failed for: r4v77 */
    /* JADX WARNING: type inference failed for: r7v111 */
    /* JADX WARNING: type inference failed for: r4v84 */
    /* JADX WARNING: type inference failed for: r7v115 */
    /* JADX WARNING: type inference failed for: r4v91 */
    /* JADX WARNING: type inference failed for: r7v119 */
    /* JADX WARNING: type inference failed for: r9v38, types: [int] */
    /* JADX WARNING: type inference failed for: r4v97 */
    /* JADX WARNING: type inference failed for: r4v98 */
    /* JADX WARNING: type inference failed for: r4v99 */
    /* JADX WARNING: type inference failed for: r4v100 */
    /* JADX WARNING: type inference failed for: r4v102 */
    /* JADX WARNING: type inference failed for: r4v106 */
    /* JADX WARNING: type inference failed for: r34v29 */
    /* JADX WARNING: type inference failed for: r34v33 */
    /* JADX WARNING: type inference failed for: r4v136 */
    /* JADX WARNING: type inference failed for: r4v138 */
    /* JADX WARNING: type inference failed for: r4v141 */
    /* JADX WARNING: type inference failed for: r4v142 */
    /* JADX WARNING: type inference failed for: r4v172 */
    /* JADX WARNING: type inference failed for: r52v31 */
    /* JADX WARNING: type inference failed for: r52v33 */
    /* JADX WARNING: type inference failed for: r52v35 */
    /* JADX WARNING: type inference failed for: r52v38 */
    /* JADX WARNING: type inference failed for: r52v42 */
    /* JADX WARNING: type inference failed for: r52v43 */
    /* JADX WARNING: type inference failed for: r52v44 */
    /* JADX WARNING: type inference failed for: r52v45 */
    /* JADX WARNING: type inference failed for: r52v46 */
    /* JADX WARNING: type inference failed for: r52v47 */
    /* JADX WARNING: type inference failed for: r52v48 */
    /* JADX WARNING: type inference failed for: r52v49 */
    /* JADX WARNING: type inference failed for: r52v50 */
    /* JADX WARNING: type inference failed for: r52v51 */
    /* JADX WARNING: type inference failed for: r52v52 */
    /* JADX WARNING: type inference failed for: r52v53 */
    /* JADX WARNING: type inference failed for: r52v54 */
    /* JADX WARNING: type inference failed for: r52v55 */
    /* JADX WARNING: type inference failed for: r52v56 */
    /* JADX WARNING: type inference failed for: r52v57 */
    /* JADX WARNING: type inference failed for: r52v59 */
    /* JADX WARNING: type inference failed for: r52v60 */
    /* JADX WARNING: type inference failed for: r52v61 */
    /* JADX WARNING: type inference failed for: r52v62 */
    /* JADX WARNING: type inference failed for: r23v9 */
    /* JADX WARNING: type inference failed for: r23v10 */
    /* JADX WARNING: type inference failed for: r48v38 */
    /* JADX WARNING: type inference failed for: r48v39 */
    /* JADX WARNING: type inference failed for: r48v40 */
    /* JADX WARNING: type inference failed for: r48v41 */
    /* JADX WARNING: type inference failed for: r48v42 */
    /* JADX WARNING: type inference failed for: r48v43 */
    /* JADX WARNING: type inference failed for: r3v208 */
    /* JADX WARNING: type inference failed for: r3v209 */
    /* JADX WARNING: type inference failed for: r3v210 */
    /* JADX WARNING: type inference failed for: r3v211 */
    /* JADX WARNING: type inference failed for: r3v212 */
    /* JADX WARNING: type inference failed for: r5v249 */
    /* JADX WARNING: type inference failed for: r3v213 */
    /* JADX WARNING: type inference failed for: r3v215 */
    /* JADX WARNING: type inference failed for: r3v216 */
    /* JADX WARNING: type inference failed for: r34v77 */
    /* JADX WARNING: type inference failed for: r34v81 */
    /* JADX WARNING: type inference failed for: r34v82 */
    /* JADX WARNING: type inference failed for: r34v83 */
    /* JADX WARNING: type inference failed for: r34v84 */
    /* JADX WARNING: type inference failed for: r34v95 */
    /* JADX WARNING: type inference failed for: r34v96 */
    /* JADX WARNING: type inference failed for: r34v97 */
    /* JADX WARNING: type inference failed for: r34v98 */
    /* JADX WARNING: type inference failed for: r34v99 */
    /* JADX WARNING: type inference failed for: r34v100 */
    /* JADX WARNING: type inference failed for: r34v101 */
    /* JADX WARNING: type inference failed for: r15v104 */
    /* JADX WARNING: type inference failed for: r15v105 */
    /* JADX WARNING: type inference failed for: r15v107 */
    /* JADX WARNING: Code restructure failed: missing block: B:518:0x10fc, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:519:0x10fd, code lost:
        r34 = r8;
        r8 = r60;
        r13 = r0;
        r3 = r6;
        r1 = 0;
        r2 = 0;
        r7 = r28;
        r4 = null;
        r5 = r34;
        r6 = 0;
        r10 = 0;
        r35 = r48;
     */
    /* JADX WARNING: Failed to process nested try/catch */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:646:0x14fd A[SYNTHETIC, Splitter:B:646:0x14fd] */
    /* JADX WARNING: Removed duplicated region for block: B:656:0x152c  */
    /* JADX WARNING: Removed duplicated region for block: B:668:0x1563 A[SYNTHETIC, Splitter:B:668:0x1563] */
    /* JADX WARNING: Removed duplicated region for block: B:678:0x159a  */
    /* JADX WARNING: Removed duplicated region for block: B:681:0x15aa  */
    /* JADX WARNING: Removed duplicated region for block: B:686:0x15b3  */
    /* JADX WARNING: Removed duplicated region for block: B:692:0x15c7  */
    /* JADX WARNING: Removed duplicated region for block: B:696:0x15cf A[SYNTHETIC, Splitter:B:696:0x15cf] */
    /* JADX WARNING: Removed duplicated region for block: B:704:0x15e3  */
    /* JADX WARNING: Removed duplicated region for block: B:712:0x15f0  */
    /* JADX WARNING: Removed duplicated region for block: B:715:0x15f4 A[Catch:{ Exception -> 0x1572 }] */
    /* JADX WARNING: Removed duplicated region for block: B:722:0x1613 A[Catch:{ Exception -> 0x175d }] */
    /* JADX WARNING: Removed duplicated region for block: B:769:0x16f8 A[Catch:{ Exception -> 0x18ad }] */
    /* JADX WARNING: Removed duplicated region for block: B:772:0x1704 A[Catch:{ Exception -> 0x18ad }] */
    /* JADX WARNING: Removed duplicated region for block: B:775:0x1712 A[Catch:{ Exception -> 0x18ad }] */
    /* JADX WARNING: Removed duplicated region for block: B:778:0x1719 A[SYNTHETIC, Splitter:B:778:0x1719] */
    /* JADX WARNING: Removed duplicated region for block: B:937:0x1ca2  */
    /* JADX WARNING: Removed duplicated region for block: B:940:0x1cdd  */
    /* JADX WARNING: Removed duplicated region for block: B:941:0x1ce5  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public java.lang.Runnable getMessagesInternal(long r60, long r62, int r64, int r65, int r66, int r67, int r68, int r69, boolean r70, int r71, int r72, boolean r73) {
        /*
            r59 = this;
            r12 = r59
            r7 = r60
            r11 = r69
            org.telegram.tgnet.TLRPC$TL_messages_messages r1 = new org.telegram.tgnet.TLRPC$TL_messages_messages
            r1.<init>()
            r15 = r1
            org.telegram.messenger.UserConfig r1 = r59.getUserConfig()
            long r13 = r1.clientUserId
            r1 = 0
            r2 = 0
            r3 = r64
            r4 = 0
            r5 = 0
            r6 = 0
            r9 = 0
            r10 = 0
            r16 = r65
            r17 = r65
            r18 = 0
            r19 = r65
            r20 = 0
            r21 = r1
            r23 = 777000(0xbdb28, double:3.83889E-318)
            int r25 = (r7 > r23 ? 1 : (r7 == r23 ? 0 : -1))
            if (r25 != 0) goto L_0x0031
            r23 = 10
            goto L_0x0033
        L_0x0031:
            r23 = 1
        L_0x0033:
            r25 = r23
            r23 = 0
            long r26 = android.os.SystemClock.elapsedRealtime()
            java.util.ArrayList r24 = new java.util.ArrayList     // Catch:{ Exception -> 0x1CLASSNAME }
            r24.<init>()     // Catch:{ Exception -> 0x1CLASSNAME }
            r28 = r24
            java.util.ArrayList r24 = new java.util.ArrayList     // Catch:{ Exception -> 0x1CLASSNAME }
            r24.<init>()     // Catch:{ Exception -> 0x1CLASSNAME }
            r29 = r24
            androidx.collection.LongSparseArray r24 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x1CLASSNAME }
            r24.<init>()     // Catch:{ Exception -> 0x1CLASSNAME }
            r30 = r24
            androidx.collection.LongSparseArray r24 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x1CLASSNAME }
            r24.<init>()     // Catch:{ Exception -> 0x1CLASSNAME }
            r31 = r24
            androidx.collection.LongSparseArray r24 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x1CLASSNAME }
            r24.<init>()     // Catch:{ Exception -> 0x1CLASSNAME }
            r32 = r24
            java.util.ArrayList r24 = new java.util.ArrayList     // Catch:{ Exception -> 0x1CLASSNAME }
            r24.<init>()     // Catch:{ Exception -> 0x1CLASSNAME }
            r33 = r24
            java.lang.String r24 = "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention, m.imp, m.forwards, m.replies_data FROM messages_v2 as m LEFT JOIN randoms_v2 as r ON r.mid = m.mid AND r.uid = m.uid"
            r34 = r24
            r24 = r2
            if (r70 == 0) goto L_0x0302
            r20 = 1
            org.telegram.SQLite.SQLiteDatabase r1 = r12.database     // Catch:{ Exception -> 0x02e7 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x02e7 }
            r43 = r5
            java.lang.String r5 = "SELECT m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.ttl FROM scheduled_messages_v2 as m LEFT JOIN randoms_v2 as r ON r.mid = m.mid AND r.uid = m.uid WHERE m.uid = %d ORDER BY m.date DESC"
            r44 = r6
            r45 = r9
            r6 = 1
            java.lang.Object[] r9 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x02b3 }
            java.lang.Long r6 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x02b3 }
            r46 = r10
            r10 = 0
            r9[r10] = r6     // Catch:{ Exception -> 0x029c }
            java.lang.String r2 = java.lang.String.format(r2, r5, r9)     // Catch:{ Exception -> 0x029c }
            java.lang.Object[] r5 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x029c }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r2, r5)     // Catch:{ Exception -> 0x029c }
        L_0x0091:
            boolean r2 = r1.next()     // Catch:{ Exception -> 0x029c }
            if (r2 == 0) goto L_0x026c
            r2 = 0
            org.telegram.tgnet.NativeByteBuffer r5 = r1.byteBufferValue(r2)     // Catch:{ Exception -> 0x029c }
            if (r5 == 0) goto L_0x0246
            int r6 = r5.readInt32(r2)     // Catch:{ Exception -> 0x029c }
            org.telegram.tgnet.TLRPC$Message r6 = org.telegram.tgnet.TLRPC.Message.TLdeserialize(r5, r6, r2)     // Catch:{ Exception -> 0x029c }
            r2 = r6
            r6 = 1
            int r9 = r1.intValue(r6)     // Catch:{ Exception -> 0x029c }
            r2.send_state = r9     // Catch:{ Exception -> 0x029c }
            r6 = 2
            int r9 = r1.intValue(r6)     // Catch:{ Exception -> 0x029c }
            r2.id = r9     // Catch:{ Exception -> 0x029c }
            int r6 = r2.id     // Catch:{ Exception -> 0x029c }
            if (r6 <= 0) goto L_0x00da
            int r6 = r2.send_state     // Catch:{ Exception -> 0x00c6 }
            if (r6 == 0) goto L_0x00da
            int r6 = r2.send_state     // Catch:{ Exception -> 0x00c6 }
            r9 = 3
            if (r6 == r9) goto L_0x00da
            r6 = 0
            r2.send_state = r6     // Catch:{ Exception -> 0x00c6 }
            goto L_0x00da
        L_0x00c6:
            r0 = move-exception
            r8 = r7
            r35 = r13
            r7 = r15
            r1 = r21
            r2 = r24
            r52 = r25
            r5 = r43
            r6 = r44
            r10 = r46
            r13 = r0
            goto L_0x1CLASSNAME
        L_0x00da:
            int r6 = (r7 > r13 ? 1 : (r7 == r13 ? 0 : -1))
            if (r6 != 0) goto L_0x00e5
            r6 = 1
            r2.out = r6     // Catch:{ Exception -> 0x00c6 }
            r6 = 0
            r2.unread = r6     // Catch:{ Exception -> 0x00c6 }
            goto L_0x00e8
        L_0x00e5:
            r6 = 1
            r2.unread = r6     // Catch:{ Exception -> 0x029c }
        L_0x00e8:
            r2.readAttachPath(r5, r13)     // Catch:{ Exception -> 0x029c }
            r5.reuse()     // Catch:{ Exception -> 0x029c }
            r6 = 3
            int r9 = r1.intValue(r6)     // Catch:{ Exception -> 0x029c }
            r2.date = r9     // Catch:{ Exception -> 0x029c }
            r2.dialog_id = r7     // Catch:{ Exception -> 0x029c }
            int r6 = r2.ttl     // Catch:{ Exception -> 0x029c }
            if (r6 != 0) goto L_0x0102
            r6 = 6
            int r9 = r1.intValue(r6)     // Catch:{ Exception -> 0x00c6 }
            r2.ttl = r9     // Catch:{ Exception -> 0x00c6 }
        L_0x0102:
            java.util.ArrayList r6 = r15.messages     // Catch:{ Exception -> 0x029c }
            r6.add(r2)     // Catch:{ Exception -> 0x029c }
            r9 = r28
            r10 = r29
            addUsersAndChatsFromMessage(r2, r9, r10)     // Catch:{ Exception -> 0x029c }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r6 = r2.reply_to     // Catch:{ Exception -> 0x029c }
            if (r6 == 0) goto L_0x0234
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r6 = r2.reply_to     // Catch:{ Exception -> 0x029c }
            int r6 = r6.reply_to_msg_id     // Catch:{ Exception -> 0x029c }
            if (r6 != 0) goto L_0x0136
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r6 = r2.reply_to     // Catch:{ Exception -> 0x00c6 }
            r22 = r5
            long r5 = r6.reply_to_random_id     // Catch:{ Exception -> 0x00c6 }
            r28 = 0
            int r47 = (r5 > r28 ? 1 : (r5 == r28 ? 0 : -1))
            if (r47 == 0) goto L_0x0125
            goto L_0x0138
        L_0x0125:
            r28 = r15
            r29 = r31
            r15 = r32
            r31 = r9
            r32 = r10
            r9 = r33
            r10 = r3
            r33 = r4
            goto L_0x0259
        L_0x0136:
            r22 = r5
        L_0x0138:
            r5 = 5
            boolean r6 = r1.isNull(r5)     // Catch:{ Exception -> 0x029c }
            if (r6 != 0) goto L_0x0191
            org.telegram.tgnet.NativeByteBuffer r6 = r1.byteBufferValue(r5)     // Catch:{ Exception -> 0x017d }
            r5 = r6
            if (r5 == 0) goto L_0x017a
            r28 = r15
            r6 = 0
            int r15 = r5.readInt32(r6)     // Catch:{ Exception -> 0x0165 }
            org.telegram.tgnet.TLRPC$Message r15 = org.telegram.tgnet.TLRPC.Message.TLdeserialize(r5, r15, r6)     // Catch:{ Exception -> 0x0165 }
            r2.replyMessage = r15     // Catch:{ Exception -> 0x0165 }
            org.telegram.tgnet.TLRPC$Message r6 = r2.replyMessage     // Catch:{ Exception -> 0x0165 }
            r6.readAttachPath(r5, r13)     // Catch:{ Exception -> 0x0165 }
            r5.reuse()     // Catch:{ Exception -> 0x0165 }
            org.telegram.tgnet.TLRPC$Message r6 = r2.replyMessage     // Catch:{ Exception -> 0x0165 }
            if (r6 == 0) goto L_0x0195
            org.telegram.tgnet.TLRPC$Message r6 = r2.replyMessage     // Catch:{ Exception -> 0x0165 }
            addUsersAndChatsFromMessage(r6, r9, r10)     // Catch:{ Exception -> 0x0165 }
            goto L_0x0195
        L_0x0165:
            r0 = move-exception
            r8 = r7
            r35 = r13
            r1 = r21
            r2 = r24
            r52 = r25
            r7 = r28
            r5 = r43
            r6 = r44
            r10 = r46
            r13 = r0
            goto L_0x1CLASSNAME
        L_0x017a:
            r28 = r15
            goto L_0x0195
        L_0x017d:
            r0 = move-exception
            r8 = r7
            r35 = r13
            r7 = r15
            r1 = r21
            r2 = r24
            r52 = r25
            r5 = r43
            r6 = r44
            r10 = r46
            r13 = r0
            goto L_0x1CLASSNAME
        L_0x0191:
            r28 = r15
            r5 = r22
        L_0x0195:
            org.telegram.tgnet.TLRPC$Message r6 = r2.replyMessage     // Catch:{ Exception -> 0x021c }
            if (r6 != 0) goto L_0x020c
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r6 = r2.reply_to     // Catch:{ Exception -> 0x021c }
            int r6 = r6.reply_to_msg_id     // Catch:{ Exception -> 0x021c }
            if (r6 == 0) goto L_0x01b7
            r15 = r30
            r6 = r31
            addReplyMessages(r2, r15, r6)     // Catch:{ Exception -> 0x0165 }
            r29 = r6
            r31 = r9
            r30 = r15
            r15 = r32
            r9 = r33
            r33 = r4
            r32 = r10
            r10 = r3
            goto L_0x0259
        L_0x01b7:
            r15 = r30
            r6 = r31
            r22 = r5
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r5 = r2.reply_to     // Catch:{ Exception -> 0x021c }
            r29 = r6
            long r5 = r5.reply_to_random_id     // Catch:{ Exception -> 0x021c }
            r30 = r15
            r15 = r32
            java.lang.Object r5 = r15.get(r5)     // Catch:{ Exception -> 0x021c }
            java.util.ArrayList r5 = (java.util.ArrayList) r5     // Catch:{ Exception -> 0x021c }
            if (r5 != 0) goto L_0x01e1
            java.util.ArrayList r6 = new java.util.ArrayList     // Catch:{ Exception -> 0x0165 }
            r6.<init>()     // Catch:{ Exception -> 0x0165 }
            r5 = r6
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r6 = r2.reply_to     // Catch:{ Exception -> 0x0165 }
            r31 = r9
            r32 = r10
            long r9 = r6.reply_to_random_id     // Catch:{ Exception -> 0x0165 }
            r15.put(r9, r5)     // Catch:{ Exception -> 0x0165 }
            goto L_0x01e5
        L_0x01e1:
            r31 = r9
            r32 = r10
        L_0x01e5:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r6 = r2.reply_to     // Catch:{ Exception -> 0x021c }
            long r9 = r6.reply_to_random_id     // Catch:{ Exception -> 0x021c }
            java.lang.Long r6 = java.lang.Long.valueOf(r9)     // Catch:{ Exception -> 0x021c }
            r9 = r33
            boolean r6 = r9.contains(r6)     // Catch:{ Exception -> 0x021c }
            if (r6 != 0) goto L_0x0204
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r6 = r2.reply_to     // Catch:{ Exception -> 0x021c }
            r10 = r3
            r33 = r4
            long r3 = r6.reply_to_random_id     // Catch:{ Exception -> 0x03db }
            java.lang.Long r3 = java.lang.Long.valueOf(r3)     // Catch:{ Exception -> 0x03db }
            r9.add(r3)     // Catch:{ Exception -> 0x03db }
            goto L_0x0207
        L_0x0204:
            r10 = r3
            r33 = r4
        L_0x0207:
            r5.add(r2)     // Catch:{ Exception -> 0x03db }
            goto L_0x0259
        L_0x020c:
            r22 = r5
            r29 = r31
            r15 = r32
            r31 = r9
            r32 = r10
            r9 = r33
            r10 = r3
            r33 = r4
            goto L_0x0259
        L_0x021c:
            r0 = move-exception
            r10 = r3
            r33 = r4
            r8 = r7
            r35 = r13
            r1 = r21
            r2 = r24
            r52 = r25
            r7 = r28
            r5 = r43
            r6 = r44
            r10 = r46
            r13 = r0
            goto L_0x1CLASSNAME
        L_0x0234:
            r22 = r5
            r28 = r15
            r29 = r31
            r15 = r32
            r31 = r9
            r32 = r10
            r9 = r33
            r10 = r3
            r33 = r4
            goto L_0x0259
        L_0x0246:
            r10 = r3
            r22 = r5
            r9 = r33
            r33 = r4
            r58 = r28
            r28 = r15
            r15 = r32
            r32 = r29
            r29 = r31
            r31 = r58
        L_0x0259:
            r3 = r10
            r4 = r33
            r33 = r9
            r58 = r32
            r32 = r15
            r15 = r28
            r28 = r31
            r31 = r29
            r29 = r58
            goto L_0x0091
        L_0x026c:
            r10 = r3
            r9 = r33
            r33 = r4
            r58 = r28
            r28 = r15
            r15 = r32
            r32 = r29
            r29 = r31
            r31 = r58
            r1.dispose()     // Catch:{ Exception -> 0x03db }
            r22 = r1
            r8 = r9
            r7 = r10
            r54 = r13
            r51 = r15
            r52 = r25
            r10 = r31
            r13 = r32
            r25 = r33
            r32 = r34
            r33 = r43
            r34 = r44
            r9 = r45
            r43 = r46
            goto L_0x1a0b
        L_0x029c:
            r0 = move-exception
            r10 = r3
            r33 = r4
            r8 = r7
            r35 = r13
            r7 = r15
            r1 = r21
            r2 = r24
            r52 = r25
            r5 = r43
            r6 = r44
            r10 = r46
            r13 = r0
            goto L_0x1CLASSNAME
        L_0x02b3:
            r0 = move-exception
            r33 = r4
            r46 = r10
            r10 = r3
            r8 = r7
            r35 = r13
            r7 = r15
            r1 = r21
            r2 = r24
            r52 = r25
            r5 = r43
            r6 = r44
            r10 = r46
            r13 = r0
            goto L_0x1CLASSNAME
        L_0x02cc:
            r0 = move-exception
            r33 = r4
            r44 = r6
            r45 = r9
            r46 = r10
            r10 = r3
            r8 = r7
            r35 = r13
            r7 = r15
            r1 = r21
            r2 = r24
            r52 = r25
            r5 = r43
            r10 = r46
            r13 = r0
            goto L_0x1CLASSNAME
        L_0x02e7:
            r0 = move-exception
            r33 = r4
            r43 = r5
            r44 = r6
            r45 = r9
            r46 = r10
            r10 = r3
            r8 = r7
            r35 = r13
            r7 = r15
            r1 = r21
            r2 = r24
            r52 = r25
            r10 = r46
            r13 = r0
            goto L_0x1CLASSNAME
        L_0x0302:
            r43 = r5
            r44 = r6
            r45 = r9
            r46 = r10
            r9 = r33
            r10 = r3
            r33 = r4
            r58 = r28
            r28 = r15
            r15 = r32
            r32 = r29
            r29 = r31
            r31 = r58
            boolean r1 = org.telegram.messenger.DialogObject.isEncryptedDialog(r60)     // Catch:{ Exception -> 0x1c3f }
            java.lang.String r3 = "SELECT * FROM ("
            java.lang.String r4 = ""
            if (r1 != 0) goto L_0x1019
            java.lang.String r1 = "SELECT inbox_max, unread_count, date, unread_count_i FROM dialogs WHERE did = "
            r6 = 3
            if (r11 != r6) goto L_0x03f3
            if (r67 != 0) goto L_0x03f3
            org.telegram.SQLite.SQLiteDatabase r6 = r12.database     // Catch:{ Exception -> 0x03db }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x03db }
            r2.<init>()     // Catch:{ Exception -> 0x03db }
            r2.append(r1)     // Catch:{ Exception -> 0x03db }
            r2.append(r7)     // Catch:{ Exception -> 0x03db }
            java.lang.String r1 = r2.toString()     // Catch:{ Exception -> 0x03db }
            r2 = 0
            java.lang.Object[] r5 = new java.lang.Object[r2]     // Catch:{ Exception -> 0x03db }
            org.telegram.SQLite.SQLiteCursor r1 = r6.queryFinalized(r1, r5)     // Catch:{ Exception -> 0x03db }
            boolean r2 = r1.next()     // Catch:{ Exception -> 0x03db }
            if (r2 == 0) goto L_0x03ae
            r2 = 0
            int r5 = r1.intValue(r2)     // Catch:{ Exception -> 0x03db }
            r2 = 1
            int r5 = java.lang.Math.max(r2, r5)     // Catch:{ Exception -> 0x03db }
            int r5 = r5 + r2
            int r6 = r1.intValue(r2)     // Catch:{ Exception -> 0x0398 }
            r2 = r6
            r6 = 2
            int r21 = r1.intValue(r6)     // Catch:{ Exception -> 0x0380 }
            r6 = r21
            r21 = r2
            r2 = 3
            int r43 = r1.intValue(r2)     // Catch:{ Exception -> 0x036b }
            r2 = r43
            goto L_0x03b4
        L_0x036b:
            r0 = move-exception
            r8 = r7
            r3 = r10
            r35 = r13
            r1 = r21
            r2 = r24
            r52 = r25
            r7 = r28
            r4 = r33
            r13 = r0
            r10 = r6
            r6 = r44
            goto L_0x1CLASSNAME
        L_0x0380:
            r0 = move-exception
            r21 = r2
            r8 = r7
            r3 = r10
            r35 = r13
            r1 = r21
            r2 = r24
            r52 = r25
            r7 = r28
            r4 = r33
            r6 = r44
            r10 = r46
            r13 = r0
            goto L_0x1CLASSNAME
        L_0x0398:
            r0 = move-exception
            r8 = r7
            r3 = r10
            r35 = r13
            r1 = r21
            r2 = r24
            r52 = r25
            r7 = r28
            r4 = r33
            r6 = r44
            r10 = r46
            r13 = r0
            goto L_0x1CLASSNAME
        L_0x03ae:
            r2 = r24
            r5 = r43
            r6 = r46
        L_0x03b4:
            r1.dispose()     // Catch:{ Exception -> 0x03c8 }
            r50 = r9
            r51 = r15
            r1 = r21
            r15 = r25
            r9 = r45
            r58 = r10
            r10 = r6
            r6 = r58
            goto L_0x07bc
        L_0x03c8:
            r0 = move-exception
            r8 = r7
            r3 = r10
            r35 = r13
            r1 = r21
            r52 = r25
            r7 = r28
            r4 = r33
            r13 = r0
            r10 = r6
            r6 = r44
            goto L_0x1CLASSNAME
        L_0x03db:
            r0 = move-exception
            r8 = r7
            r3 = r10
            r35 = r13
            r1 = r21
            r2 = r24
            r52 = r25
            r7 = r28
            r4 = r33
            r5 = r43
            r6 = r44
            r10 = r46
            r13 = r0
            goto L_0x1CLASSNAME
        L_0x03f3:
            r2 = 1
            if (r11 == r2) goto L_0x07ab
            r2 = 3
            if (r11 == r2) goto L_0x07ab
            r2 = 4
            if (r11 == r2) goto L_0x07ab
            if (r67 != 0) goto L_0x07ab
            r2 = 2
            if (r11 != r2) goto L_0x075b
            org.telegram.SQLite.SQLiteDatabase r2 = r12.database     // Catch:{ Exception -> 0x0740 }
            java.lang.StringBuilder r5 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0740 }
            r5.<init>()     // Catch:{ Exception -> 0x0740 }
            r5.append(r1)     // Catch:{ Exception -> 0x0740 }
            r5.append(r7)     // Catch:{ Exception -> 0x0740 }
            java.lang.String r1 = r5.toString()     // Catch:{ Exception -> 0x0740 }
            r5 = 0
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x0740 }
            org.telegram.SQLite.SQLiteCursor r1 = r2.queryFinalized(r1, r6)     // Catch:{ Exception -> 0x0740 }
            boolean r2 = r1.next()     // Catch:{ Exception -> 0x0740 }
            if (r2 == 0) goto L_0x04a7
            r2 = 0
            int r5 = r1.intValue(r2)     // Catch:{ Exception -> 0x03db }
            r2 = 1
            int r5 = java.lang.Math.max(r2, r5)     // Catch:{ Exception -> 0x03db }
            r6 = r5
            r17 = r5
            r16 = r5
            int r5 = r1.intValue(r2)     // Catch:{ Exception -> 0x0490 }
            r2 = r5
            r5 = 2
            int r21 = r1.intValue(r5)     // Catch:{ Exception -> 0x0477 }
            r5 = r21
            r21 = r2
            r2 = 3
            int r43 = r1.intValue(r2)     // Catch:{ Exception -> 0x0461 }
            r2 = r43
            r24 = 1
            int r43 = (r7 > r13 ? 1 : (r7 == r13 ? 0 : -1))
            if (r43 != 0) goto L_0x0456
            r21 = 0
            r46 = r5
            r5 = r6
            r45 = r24
            r24 = r2
            r2 = r21
            goto L_0x04ab
        L_0x0456:
            r46 = r5
            r5 = r6
            r45 = r24
            r24 = r2
            r2 = r21
            goto L_0x04ab
        L_0x0461:
            r0 = move-exception
            r8 = r7
            r3 = r10
            r35 = r13
            r1 = r21
            r2 = r24
            r52 = r25
            r7 = r28
            r4 = r33
            r13 = r0
            r10 = r5
            r5 = r6
            r6 = r44
            goto L_0x1CLASSNAME
        L_0x0477:
            r0 = move-exception
            r21 = r2
            r5 = r6
            r8 = r7
            r3 = r10
            r35 = r13
            r1 = r21
            r2 = r24
            r52 = r25
            r7 = r28
            r4 = r33
            r6 = r44
            r10 = r46
            r13 = r0
            goto L_0x1CLASSNAME
        L_0x0490:
            r0 = move-exception
            r5 = r6
            r8 = r7
            r3 = r10
            r35 = r13
            r1 = r21
            r2 = r24
            r52 = r25
            r7 = r28
            r4 = r33
            r6 = r44
            r10 = r46
            r13 = r0
            goto L_0x1CLASSNAME
        L_0x04a7:
            r2 = r21
            r5 = r43
        L_0x04ab:
            r1.dispose()     // Catch:{ Exception -> 0x0723 }
            if (r45 != 0) goto L_0x05ca
            org.telegram.SQLite.SQLiteDatabase r6 = r12.database     // Catch:{ Exception -> 0x05b0 }
            r48 = r1
            java.util.Locale r1 = java.util.Locale.US     // Catch:{ Exception -> 0x05b0 }
            r21 = r5
            java.lang.String r5 = "SELECT min(mid), max(date) FROM messages_v2 WHERE uid = %d AND out = 0 AND read_state IN(0,2) AND mid > 0"
            r50 = r9
            r49 = r10
            r10 = 1
            java.lang.Object[] r9 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x057e }
            java.lang.Long r10 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x057e }
            r51 = r15
            r15 = 0
            r9[r15] = r10     // Catch:{ Exception -> 0x057e }
            java.lang.String r1 = java.lang.String.format(r1, r5, r9)     // Catch:{ Exception -> 0x057e }
            java.lang.Object[] r5 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x057e }
            org.telegram.SQLite.SQLiteCursor r1 = r6.queryFinalized(r1, r5)     // Catch:{ Exception -> 0x057e }
            boolean r5 = r1.next()     // Catch:{ Exception -> 0x057e }
            if (r5 == 0) goto L_0x04fe
            r5 = 0
            int r6 = r1.intValue(r5)     // Catch:{ Exception -> 0x057e }
            r5 = r6
            r6 = 1
            int r9 = r1.intValue(r6)     // Catch:{ Exception -> 0x04e8 }
            r6 = r9
            r10 = r6
            goto L_0x0502
        L_0x04e8:
            r0 = move-exception
            r1 = r2
            r8 = r7
            r35 = r13
            r2 = r24
            r52 = r25
            r7 = r28
            r4 = r33
            r6 = r44
            r10 = r46
            r3 = r49
            r13 = r0
            goto L_0x1CLASSNAME
        L_0x04fe:
            r5 = r21
            r10 = r46
        L_0x0502:
            r1.dispose()     // Catch:{ Exception -> 0x0568 }
            if (r5 == 0) goto L_0x055d
            org.telegram.SQLite.SQLiteDatabase r6 = r12.database     // Catch:{ Exception -> 0x0568 }
            java.util.Locale r9 = java.util.Locale.US     // Catch:{ Exception -> 0x0568 }
            java.lang.String r15 = "SELECT COUNT(*) FROM messages_v2 WHERE uid = %d AND mid >= %d AND out = 0 AND read_state IN(0,2)"
            r43 = r1
            r21 = r10
            r1 = 2
            java.lang.Object[] r10 = new java.lang.Object[r1]     // Catch:{ Exception -> 0x0547 }
            java.lang.Long r1 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x0547 }
            r42 = 0
            r10[r42] = r1     // Catch:{ Exception -> 0x0547 }
            java.lang.Integer r1 = java.lang.Integer.valueOf(r5)     // Catch:{ Exception -> 0x0547 }
            r35 = 1
            r10[r35] = r1     // Catch:{ Exception -> 0x0547 }
            java.lang.String r1 = java.lang.String.format(r9, r15, r10)     // Catch:{ Exception -> 0x0547 }
            r9 = 0
            java.lang.Object[] r10 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x0547 }
            org.telegram.SQLite.SQLiteCursor r1 = r6.queryFinalized(r1, r10)     // Catch:{ Exception -> 0x0547 }
            boolean r6 = r1.next()     // Catch:{ Exception -> 0x0547 }
            if (r6 == 0) goto L_0x053b
            r6 = 0
            int r9 = r1.intValue(r6)     // Catch:{ Exception -> 0x0547 }
            r2 = r9
        L_0x053b:
            r1.dispose()     // Catch:{ Exception -> 0x0547 }
            r1 = r2
            r10 = r21
            r2 = r24
            r9 = r45
            goto L_0x076b
        L_0x0547:
            r0 = move-exception
            r1 = r2
            r8 = r7
            r35 = r13
            r10 = r21
            r2 = r24
            r52 = r25
            r7 = r28
            r4 = r33
            r6 = r44
            r3 = r49
            r13 = r0
            goto L_0x1CLASSNAME
        L_0x055d:
            r43 = r1
            r21 = r10
            r1 = r2
            r2 = r24
            r9 = r45
            goto L_0x076b
        L_0x0568:
            r0 = move-exception
            r21 = r10
            r1 = r2
            r8 = r7
            r35 = r13
            r2 = r24
            r52 = r25
            r7 = r28
            r4 = r33
            r6 = r44
            r3 = r49
            r13 = r0
            goto L_0x1CLASSNAME
        L_0x057e:
            r0 = move-exception
            r1 = r2
            r8 = r7
            r35 = r13
            r5 = r21
            r2 = r24
            r52 = r25
            r7 = r28
            r4 = r33
            r6 = r44
            r10 = r46
            r3 = r49
            r13 = r0
            goto L_0x1CLASSNAME
        L_0x0596:
            r0 = move-exception
            r49 = r10
            r1 = r2
            r8 = r7
            r35 = r13
            r5 = r21
            r2 = r24
            r52 = r25
            r7 = r28
            r4 = r33
            r6 = r44
            r10 = r46
            r3 = r49
            r13 = r0
            goto L_0x1CLASSNAME
        L_0x05b0:
            r0 = move-exception
            r21 = r5
            r49 = r10
            r1 = r2
            r8 = r7
            r35 = r13
            r2 = r24
            r52 = r25
            r7 = r28
            r4 = r33
            r6 = r44
            r10 = r46
            r3 = r49
            r13 = r0
            goto L_0x1CLASSNAME
        L_0x05ca:
            r48 = r1
            r21 = r5
            r50 = r9
            r49 = r10
            r51 = r15
            if (r17 != 0) goto L_0x0681
            r1 = 0
            org.telegram.SQLite.SQLiteDatabase r5 = r12.database     // Catch:{ Exception -> 0x0666 }
            java.util.Locale r6 = java.util.Locale.US     // Catch:{ Exception -> 0x0666 }
            java.lang.String r9 = "SELECT COUNT(*) FROM messages_v2 WHERE uid = %d AND mid > 0 AND out = 0 AND read_state IN(0,2)"
            r10 = 1
            java.lang.Object[] r15 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x0666 }
            java.lang.Long r10 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x0666 }
            r43 = r1
            r1 = 0
            r15[r1] = r10     // Catch:{ Exception -> 0x0666 }
            java.lang.String r6 = java.lang.String.format(r6, r9, r15)     // Catch:{ Exception -> 0x0666 }
            java.lang.Object[] r9 = new java.lang.Object[r1]     // Catch:{ Exception -> 0x0666 }
            org.telegram.SQLite.SQLiteCursor r1 = r5.queryFinalized(r6, r9)     // Catch:{ Exception -> 0x0666 }
            boolean r5 = r1.next()     // Catch:{ Exception -> 0x0666 }
            if (r5 == 0) goto L_0x0600
            r5 = 0
            int r6 = r1.intValue(r5)     // Catch:{ Exception -> 0x057e }
            r5 = r6
            goto L_0x0602
        L_0x0600:
            r5 = r43
        L_0x0602:
            r1.dispose()     // Catch:{ Exception -> 0x0666 }
            if (r5 != r2) goto L_0x0656
            org.telegram.SQLite.SQLiteDatabase r6 = r12.database     // Catch:{ Exception -> 0x0666 }
            java.util.Locale r9 = java.util.Locale.US     // Catch:{ Exception -> 0x0666 }
            java.lang.String r10 = "SELECT min(mid) FROM messages_v2 WHERE uid = %d AND out = 0 AND read_state IN(0,2) AND mid > 0"
            r43 = r1
            r15 = 1
            java.lang.Object[] r1 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x0666 }
            java.lang.Long r15 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x0666 }
            r52 = r2
            r2 = 0
            r1[r2] = r15     // Catch:{ Exception -> 0x070a }
            java.lang.String r1 = java.lang.String.format(r9, r10, r1)     // Catch:{ Exception -> 0x070a }
            java.lang.Object[] r9 = new java.lang.Object[r2]     // Catch:{ Exception -> 0x070a }
            org.telegram.SQLite.SQLiteCursor r1 = r6.queryFinalized(r1, r9)     // Catch:{ Exception -> 0x070a }
            boolean r2 = r1.next()     // Catch:{ Exception -> 0x070a }
            if (r2 == 0) goto L_0x0637
            r2 = 0
            int r6 = r1.intValue(r2)     // Catch:{ Exception -> 0x070a }
            r2 = r6
            r9 = r6
            r16 = r6
            r17 = r9
            goto L_0x0639
        L_0x0637:
            r2 = r21
        L_0x0639:
            r1.dispose()     // Catch:{ Exception -> 0x063e }
            r5 = r2
            goto L_0x065c
        L_0x063e:
            r0 = move-exception
            r5 = r2
            r8 = r7
            r35 = r13
            r2 = r24
            r7 = r28
            r4 = r33
            r6 = r44
            r10 = r46
            r3 = r49
            r1 = r52
            r13 = r0
            r52 = r25
            goto L_0x1CLASSNAME
        L_0x0656:
            r43 = r1
            r52 = r2
            r5 = r21
        L_0x065c:
            r2 = r24
            r9 = r45
            r10 = r46
            r1 = r52
            goto L_0x076b
        L_0x0666:
            r0 = move-exception
            r52 = r2
            r8 = r7
            r35 = r13
            r5 = r21
            r2 = r24
            r7 = r28
            r4 = r33
            r6 = r44
            r10 = r46
            r3 = r49
            r1 = r52
            r13 = r0
            r52 = r25
            goto L_0x1CLASSNAME
        L_0x0681:
            r52 = r2
            org.telegram.SQLite.SQLiteDatabase r1 = r12.database     // Catch:{ Exception -> 0x070a }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x070a }
            java.lang.String r5 = "SELECT start, end FROM messages_holes WHERE uid = %d AND start < %d AND end > %d"
            r6 = 3
            java.lang.Object[] r9 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x070a }
            java.lang.Long r6 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x070a }
            r10 = 0
            r9[r10] = r6     // Catch:{ Exception -> 0x070a }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r17)     // Catch:{ Exception -> 0x070a }
            r10 = 1
            r9[r10] = r6     // Catch:{ Exception -> 0x070a }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r17)     // Catch:{ Exception -> 0x070a }
            r10 = 2
            r9[r10] = r6     // Catch:{ Exception -> 0x070a }
            java.lang.String r2 = java.lang.String.format(r2, r5, r9)     // Catch:{ Exception -> 0x070a }
            r5 = 0
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x070a }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r2, r6)     // Catch:{ Exception -> 0x070a }
            boolean r2 = r1.next()     // Catch:{ Exception -> 0x070a }
            if (r2 != 0) goto L_0x06b4
            r2 = 1
            goto L_0x06b5
        L_0x06b4:
            r2 = 0
        L_0x06b5:
            r1.dispose()     // Catch:{ Exception -> 0x070a }
            if (r2 == 0) goto L_0x06fe
            org.telegram.SQLite.SQLiteDatabase r5 = r12.database     // Catch:{ Exception -> 0x070a }
            java.util.Locale r6 = java.util.Locale.US     // Catch:{ Exception -> 0x070a }
            java.lang.String r9 = "SELECT min(mid) FROM messages_v2 WHERE uid = %d AND out = 0 AND read_state IN(0,2) AND mid > %d"
            r10 = 2
            java.lang.Object[] r15 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x070a }
            java.lang.Long r10 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x070a }
            r42 = 0
            r15[r42] = r10     // Catch:{ Exception -> 0x070a }
            java.lang.Integer r10 = java.lang.Integer.valueOf(r17)     // Catch:{ Exception -> 0x070a }
            r35 = 1
            r15[r35] = r10     // Catch:{ Exception -> 0x070a }
            java.lang.String r6 = java.lang.String.format(r6, r9, r15)     // Catch:{ Exception -> 0x070a }
            r9 = 0
            java.lang.Object[] r10 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x070a }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r6, r10)     // Catch:{ Exception -> 0x070a }
            r1 = r5
            boolean r5 = r1.next()     // Catch:{ Exception -> 0x070a }
            if (r5 == 0) goto L_0x06ef
            r5 = 0
            int r6 = r1.intValue(r5)     // Catch:{ Exception -> 0x070a }
            r5 = r6
            r17 = r5
            r16 = r6
        L_0x06ef:
            r1.dispose()     // Catch:{ Exception -> 0x070a }
            r5 = r21
            r2 = r24
            r9 = r45
            r10 = r46
            r1 = r52
            goto L_0x076b
        L_0x06fe:
            r5 = r21
            r2 = r24
            r9 = r45
            r10 = r46
            r1 = r52
            goto L_0x076b
        L_0x070a:
            r0 = move-exception
            r8 = r7
            r35 = r13
            r5 = r21
            r2 = r24
            r7 = r28
            r4 = r33
            r6 = r44
            r10 = r46
            r3 = r49
            r1 = r52
            r13 = r0
            r52 = r25
            goto L_0x1CLASSNAME
        L_0x0723:
            r0 = move-exception
            r52 = r2
            r21 = r5
            r49 = r10
            r8 = r7
            r35 = r13
            r2 = r24
            r7 = r28
            r4 = r33
            r6 = r44
            r10 = r46
            r3 = r49
            r1 = r52
            r13 = r0
            r52 = r25
            goto L_0x1CLASSNAME
        L_0x0740:
            r0 = move-exception
            r49 = r10
            r8 = r7
            r35 = r13
            r1 = r21
            r2 = r24
            r52 = r25
            r7 = r28
            r4 = r33
            r5 = r43
            r6 = r44
            r10 = r46
            r3 = r49
            r13 = r0
            goto L_0x1CLASSNAME
        L_0x075b:
            r50 = r9
            r49 = r10
            r51 = r15
            r1 = r21
            r2 = r24
            r5 = r43
            r9 = r45
            r10 = r46
        L_0x076b:
            r6 = r49
            if (r6 > r1) goto L_0x077b
            r15 = r25
            if (r1 >= r15) goto L_0x0774
            goto L_0x077d
        L_0x0774:
            int r21 = r1 - r6
            int r6 = r6 + 10
            r33 = r21
            goto L_0x07bc
        L_0x077b:
            r15 = r25
        L_0x077d:
            r21 = r2
            int r2 = r1 + 10
            int r2 = java.lang.Math.max(r6, r2)     // Catch:{ Exception -> 0x0797 }
            if (r1 >= r15) goto L_0x0793
            r1 = 0
            r5 = 0
            r16 = 0
            r6 = 0
            r9 = 0
            r44 = r6
            r6 = r2
            r2 = r21
            goto L_0x07bc
        L_0x0793:
            r6 = r2
            r2 = r21
            goto L_0x07bc
        L_0x0797:
            r0 = move-exception
            r3 = r6
            r45 = r9
            r35 = r13
            r52 = r15
            r2 = r21
            r4 = r33
            r6 = r44
            r13 = r0
            r8 = r7
            r7 = r28
            goto L_0x1CLASSNAME
        L_0x07ab:
            r50 = r9
            r6 = r10
            r51 = r15
            r15 = r25
            r1 = r21
            r2 = r24
            r5 = r43
            r9 = r45
            r10 = r46
        L_0x07bc:
            r21 = r2
            org.telegram.SQLite.SQLiteDatabase r2 = r12.database     // Catch:{ Exception -> 0x0ffe }
            r24 = r5
            java.util.Locale r5 = java.util.Locale.US     // Catch:{ Exception -> 0x0fe3 }
            r25 = r10
            java.lang.String r10 = "SELECT start FROM messages_holes WHERE uid = %d AND start IN (0, 1)"
            r48 = r13
            r13 = 1
            java.lang.Object[] r14 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0fad }
            java.lang.Long r13 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x0fad }
            r52 = r15
            r15 = 0
            r14[r15] = r13     // Catch:{ Exception -> 0x0var_ }
            java.lang.String r5 = java.lang.String.format(r5, r10, r14)     // Catch:{ Exception -> 0x0var_ }
            java.lang.Object[] r10 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x0var_ }
            org.telegram.SQLite.SQLiteCursor r2 = r2.queryFinalized(r5, r10)     // Catch:{ Exception -> 0x0var_ }
            boolean r5 = r2.next()     // Catch:{ Exception -> 0x0var_ }
            if (r5 == 0) goto L_0x080a
            r5 = 0
            int r10 = r2.intValue(r5)     // Catch:{ Exception -> 0x07f4 }
            r5 = 1
            if (r10 != r5) goto L_0x07f0
            r5 = 1
            goto L_0x07f1
        L_0x07f0:
            r5 = 0
        L_0x07f1:
            r20 = r5
            goto L_0x0855
        L_0x07f4:
            r0 = move-exception
            r13 = r0
            r3 = r6
            r45 = r9
            r2 = r21
            r5 = r24
            r10 = r25
            r4 = r33
            r6 = r44
            r35 = r48
            r8 = r7
            r7 = r28
            goto L_0x1CLASSNAME
        L_0x080a:
            r2.dispose()     // Catch:{ Exception -> 0x0var_ }
            org.telegram.SQLite.SQLiteDatabase r5 = r12.database     // Catch:{ Exception -> 0x0var_ }
            java.util.Locale r10 = java.util.Locale.US     // Catch:{ Exception -> 0x0var_ }
            java.lang.String r13 = "SELECT min(mid) FROM messages_v2 WHERE uid = %d AND mid > 0"
            r14 = 1
            java.lang.Object[] r15 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x0var_ }
            java.lang.Long r14 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x0var_ }
            r43 = r2
            r2 = 0
            r15[r2] = r14     // Catch:{ Exception -> 0x0var_ }
            java.lang.String r10 = java.lang.String.format(r10, r13, r15)     // Catch:{ Exception -> 0x0var_ }
            java.lang.Object[] r13 = new java.lang.Object[r2]     // Catch:{ Exception -> 0x0var_ }
            org.telegram.SQLite.SQLiteCursor r2 = r5.queryFinalized(r10, r13)     // Catch:{ Exception -> 0x0var_ }
            boolean r5 = r2.next()     // Catch:{ Exception -> 0x0var_ }
            if (r5 == 0) goto L_0x0855
            r5 = 0
            int r10 = r2.intValue(r5)     // Catch:{ Exception -> 0x07f4 }
            r5 = r10
            if (r5 == 0) goto L_0x0855
            org.telegram.SQLite.SQLiteDatabase r10 = r12.database     // Catch:{ Exception -> 0x07f4 }
            java.lang.String r13 = "REPLACE INTO messages_holes VALUES(?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r10 = r10.executeFast(r13)     // Catch:{ Exception -> 0x07f4 }
            r10.requery()     // Catch:{ Exception -> 0x07f4 }
            r13 = 1
            r10.bindLong(r13, r7)     // Catch:{ Exception -> 0x07f4 }
            r13 = 2
            r14 = 0
            r10.bindInteger(r13, r14)     // Catch:{ Exception -> 0x07f4 }
            r13 = 3
            r10.bindInteger(r13, r5)     // Catch:{ Exception -> 0x07f4 }
            r10.step()     // Catch:{ Exception -> 0x07f4 }
            r10.dispose()     // Catch:{ Exception -> 0x07f4 }
        L_0x0855:
            r2.dispose()     // Catch:{ Exception -> 0x0var_ }
            java.lang.String r5 = "SELECT end FROM messages_holes WHERE uid = %d AND end <= %d ORDER BY end DESC LIMIT 1"
            java.lang.String r10 = "SELECT max(mid) FROM messages_v2 WHERE uid = %d AND mid > 0"
            r13 = 3
            if (r11 == r13) goto L_0x0bd6
            r13 = 4
            if (r11 == r13) goto L_0x0bd6
            if (r9 == 0) goto L_0x086d
            r13 = 2
            if (r11 != r13) goto L_0x086d
            r14 = r34
            r34 = r2
            goto L_0x0bda
        L_0x086d:
            r3 = 1
            if (r11 != r3) goto L_0x0968
            r3 = 0
            org.telegram.SQLite.SQLiteDatabase r5 = r12.database     // Catch:{ Exception -> 0x07f4 }
            java.util.Locale r10 = java.util.Locale.US     // Catch:{ Exception -> 0x07f4 }
            java.lang.String r13 = "SELECT start, end FROM messages_holes WHERE uid = %d AND (start >= %d AND start != 1 AND end != 1 OR start < %d AND end > %d) ORDER BY start ASC LIMIT 1"
            r14 = 4
            java.lang.Object[] r15 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x07f4 }
            java.lang.Long r14 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x07f4 }
            r42 = 0
            r15[r42] = r14     // Catch:{ Exception -> 0x07f4 }
            java.lang.Integer r14 = java.lang.Integer.valueOf(r65)     // Catch:{ Exception -> 0x07f4 }
            r35 = 1
            r15[r35] = r14     // Catch:{ Exception -> 0x07f4 }
            java.lang.Integer r14 = java.lang.Integer.valueOf(r65)     // Catch:{ Exception -> 0x07f4 }
            r41 = 2
            r15[r41] = r14     // Catch:{ Exception -> 0x07f4 }
            java.lang.Integer r14 = java.lang.Integer.valueOf(r65)     // Catch:{ Exception -> 0x07f4 }
            r40 = 3
            r15[r40] = r14     // Catch:{ Exception -> 0x07f4 }
            java.lang.String r10 = java.lang.String.format(r10, r13, r15)     // Catch:{ Exception -> 0x07f4 }
            r13 = 0
            java.lang.Object[] r14 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x07f4 }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r10, r14)     // Catch:{ Exception -> 0x07f4 }
            r2 = r5
            boolean r5 = r2.next()     // Catch:{ Exception -> 0x07f4 }
            if (r5 == 0) goto L_0x08b2
            r5 = 0
            int r10 = r2.intValue(r5)     // Catch:{ Exception -> 0x07f4 }
            r3 = r10
        L_0x08b2:
            r2.dispose()     // Catch:{ Exception -> 0x07f4 }
            if (r3 == 0) goto L_0x0909
            org.telegram.SQLite.SQLiteDatabase r5 = r12.database     // Catch:{ Exception -> 0x07f4 }
            java.util.Locale r10 = java.util.Locale.US     // Catch:{ Exception -> 0x07f4 }
            java.lang.StringBuilder r13 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x07f4 }
            r13.<init>()     // Catch:{ Exception -> 0x07f4 }
            r13.append(r4)     // Catch:{ Exception -> 0x07f4 }
            r14 = r34
            r13.append(r14)     // Catch:{ Exception -> 0x07f4 }
            java.lang.String r4 = " WHERE m.uid = %d AND m.date >= %d AND m.mid > %d AND m.mid <= %d ORDER BY m.date ASC, m.mid ASC LIMIT %d"
            r13.append(r4)     // Catch:{ Exception -> 0x07f4 }
            java.lang.String r4 = r13.toString()     // Catch:{ Exception -> 0x07f4 }
            r13 = 5
            java.lang.Object[] r15 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x07f4 }
            java.lang.Long r13 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x07f4 }
            r34 = 0
            r15[r34] = r13     // Catch:{ Exception -> 0x07f4 }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r67)     // Catch:{ Exception -> 0x07f4 }
            r34 = 1
            r15[r34] = r13     // Catch:{ Exception -> 0x07f4 }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r16)     // Catch:{ Exception -> 0x07f4 }
            r34 = 2
            r15[r34] = r13     // Catch:{ Exception -> 0x07f4 }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x07f4 }
            r34 = 3
            r15[r34] = r13     // Catch:{ Exception -> 0x07f4 }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x07f4 }
            r34 = 4
            r15[r34] = r13     // Catch:{ Exception -> 0x07f4 }
            java.lang.String r4 = java.lang.String.format(r10, r4, r15)     // Catch:{ Exception -> 0x07f4 }
            r10 = 0
            java.lang.Object[] r13 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x07f4 }
            org.telegram.SQLite.SQLiteCursor r4 = r5.queryFinalized(r4, r13)     // Catch:{ Exception -> 0x07f4 }
            r2 = r4
            goto L_0x0952
        L_0x0909:
            r14 = r34
            org.telegram.SQLite.SQLiteDatabase r5 = r12.database     // Catch:{ Exception -> 0x07f4 }
            java.util.Locale r10 = java.util.Locale.US     // Catch:{ Exception -> 0x07f4 }
            java.lang.StringBuilder r13 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x07f4 }
            r13.<init>()     // Catch:{ Exception -> 0x07f4 }
            r13.append(r4)     // Catch:{ Exception -> 0x07f4 }
            r13.append(r14)     // Catch:{ Exception -> 0x07f4 }
            java.lang.String r4 = " WHERE m.uid = %d AND m.date >= %d AND m.mid > %d ORDER BY m.date ASC, m.mid ASC LIMIT %d"
            r13.append(r4)     // Catch:{ Exception -> 0x07f4 }
            java.lang.String r4 = r13.toString()     // Catch:{ Exception -> 0x07f4 }
            r13 = 4
            java.lang.Object[] r15 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x07f4 }
            java.lang.Long r13 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x07f4 }
            r34 = 0
            r15[r34] = r13     // Catch:{ Exception -> 0x07f4 }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r67)     // Catch:{ Exception -> 0x07f4 }
            r34 = 1
            r15[r34] = r13     // Catch:{ Exception -> 0x07f4 }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r16)     // Catch:{ Exception -> 0x07f4 }
            r34 = 2
            r15[r34] = r13     // Catch:{ Exception -> 0x07f4 }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x07f4 }
            r34 = 3
            r15[r34] = r13     // Catch:{ Exception -> 0x07f4 }
            java.lang.String r4 = java.lang.String.format(r10, r4, r15)     // Catch:{ Exception -> 0x07f4 }
            r10 = 0
            java.lang.Object[] r13 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x07f4 }
            org.telegram.SQLite.SQLiteCursor r4 = r5.queryFinalized(r4, r13)     // Catch:{ Exception -> 0x07f4 }
            r2 = r4
        L_0x0952:
            r3 = r6
            r8 = r17
            r5 = r24
            r10 = r25
            r4 = r33
            r6 = r44
            r7 = r52
            r58 = r21
            r21 = r1
            r1 = r2
            r2 = r58
            goto L_0x145c
        L_0x0968:
            r14 = r34
            if (r67 == 0) goto L_0x0aab
            if (r16 == 0) goto L_0x0a51
            r3 = 0
            org.telegram.SQLite.SQLiteDatabase r10 = r12.database     // Catch:{ Exception -> 0x07f4 }
            java.util.Locale r13 = java.util.Locale.US     // Catch:{ Exception -> 0x07f4 }
            r34 = r2
            r15 = 2
            java.lang.Object[] r2 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x07f4 }
            java.lang.Long r15 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x07f4 }
            r42 = 0
            r2[r42] = r15     // Catch:{ Exception -> 0x07f4 }
            java.lang.Integer r15 = java.lang.Integer.valueOf(r65)     // Catch:{ Exception -> 0x07f4 }
            r35 = 1
            r2[r35] = r15     // Catch:{ Exception -> 0x07f4 }
            java.lang.String r2 = java.lang.String.format(r13, r5, r2)     // Catch:{ Exception -> 0x07f4 }
            r5 = 0
            java.lang.Object[] r13 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x07f4 }
            org.telegram.SQLite.SQLiteCursor r2 = r10.queryFinalized(r2, r13)     // Catch:{ Exception -> 0x07f4 }
            boolean r5 = r2.next()     // Catch:{ Exception -> 0x07f4 }
            if (r5 == 0) goto L_0x099f
            r5 = 0
            int r10 = r2.intValue(r5)     // Catch:{ Exception -> 0x07f4 }
            r3 = r10
        L_0x099f:
            r2.dispose()     // Catch:{ Exception -> 0x07f4 }
            if (r3 == 0) goto L_0x09f4
            org.telegram.SQLite.SQLiteDatabase r5 = r12.database     // Catch:{ Exception -> 0x07f4 }
            java.util.Locale r10 = java.util.Locale.US     // Catch:{ Exception -> 0x07f4 }
            java.lang.StringBuilder r13 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x07f4 }
            r13.<init>()     // Catch:{ Exception -> 0x07f4 }
            r13.append(r4)     // Catch:{ Exception -> 0x07f4 }
            r13.append(r14)     // Catch:{ Exception -> 0x07f4 }
            java.lang.String r4 = " WHERE m.uid = %d AND m.date <= %d AND m.mid < %d AND (m.mid >= %d OR m.mid < 0) ORDER BY m.date DESC, m.mid DESC LIMIT %d"
            r13.append(r4)     // Catch:{ Exception -> 0x07f4 }
            java.lang.String r4 = r13.toString()     // Catch:{ Exception -> 0x07f4 }
            r13 = 5
            java.lang.Object[] r15 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x07f4 }
            java.lang.Long r13 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x07f4 }
            r34 = 0
            r15[r34] = r13     // Catch:{ Exception -> 0x07f4 }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r67)     // Catch:{ Exception -> 0x07f4 }
            r34 = 1
            r15[r34] = r13     // Catch:{ Exception -> 0x07f4 }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r16)     // Catch:{ Exception -> 0x07f4 }
            r34 = 2
            r15[r34] = r13     // Catch:{ Exception -> 0x07f4 }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x07f4 }
            r34 = 3
            r15[r34] = r13     // Catch:{ Exception -> 0x07f4 }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x07f4 }
            r34 = 4
            r15[r34] = r13     // Catch:{ Exception -> 0x07f4 }
            java.lang.String r4 = java.lang.String.format(r10, r4, r15)     // Catch:{ Exception -> 0x07f4 }
            r10 = 0
            java.lang.Object[] r13 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x07f4 }
            org.telegram.SQLite.SQLiteCursor r4 = r5.queryFinalized(r4, r13)     // Catch:{ Exception -> 0x07f4 }
            r2 = r4
            goto L_0x0a3b
        L_0x09f4:
            org.telegram.SQLite.SQLiteDatabase r5 = r12.database     // Catch:{ Exception -> 0x07f4 }
            java.util.Locale r10 = java.util.Locale.US     // Catch:{ Exception -> 0x07f4 }
            java.lang.StringBuilder r13 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x07f4 }
            r13.<init>()     // Catch:{ Exception -> 0x07f4 }
            r13.append(r4)     // Catch:{ Exception -> 0x07f4 }
            r13.append(r14)     // Catch:{ Exception -> 0x07f4 }
            java.lang.String r4 = " WHERE m.uid = %d AND m.date <= %d AND m.mid < %d ORDER BY m.date DESC, m.mid DESC LIMIT %d"
            r13.append(r4)     // Catch:{ Exception -> 0x07f4 }
            java.lang.String r4 = r13.toString()     // Catch:{ Exception -> 0x07f4 }
            r13 = 4
            java.lang.Object[] r15 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x07f4 }
            java.lang.Long r13 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x07f4 }
            r34 = 0
            r15[r34] = r13     // Catch:{ Exception -> 0x07f4 }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r67)     // Catch:{ Exception -> 0x07f4 }
            r34 = 1
            r15[r34] = r13     // Catch:{ Exception -> 0x07f4 }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r16)     // Catch:{ Exception -> 0x07f4 }
            r34 = 2
            r15[r34] = r13     // Catch:{ Exception -> 0x07f4 }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x07f4 }
            r34 = 3
            r15[r34] = r13     // Catch:{ Exception -> 0x07f4 }
            java.lang.String r4 = java.lang.String.format(r10, r4, r15)     // Catch:{ Exception -> 0x07f4 }
            r10 = 0
            java.lang.Object[] r13 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x07f4 }
            org.telegram.SQLite.SQLiteCursor r4 = r5.queryFinalized(r4, r13)     // Catch:{ Exception -> 0x07f4 }
            r2 = r4
        L_0x0a3b:
            r3 = r6
            r8 = r17
            r5 = r24
            r10 = r25
            r4 = r33
            r6 = r44
            r7 = r52
            r58 = r21
            r21 = r1
            r1 = r2
            r2 = r58
            goto L_0x145c
        L_0x0a51:
            r34 = r2
            org.telegram.SQLite.SQLiteDatabase r2 = r12.database     // Catch:{ Exception -> 0x07f4 }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x07f4 }
            java.lang.StringBuilder r5 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x07f4 }
            r5.<init>()     // Catch:{ Exception -> 0x07f4 }
            r5.append(r4)     // Catch:{ Exception -> 0x07f4 }
            r5.append(r14)     // Catch:{ Exception -> 0x07f4 }
            java.lang.String r4 = " WHERE m.uid = %d AND m.date <= %d ORDER BY m.date DESC, m.mid DESC LIMIT %d,%d"
            r5.append(r4)     // Catch:{ Exception -> 0x07f4 }
            java.lang.String r4 = r5.toString()     // Catch:{ Exception -> 0x07f4 }
            r5 = 4
            java.lang.Object[] r10 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x07f4 }
            java.lang.Long r5 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x07f4 }
            r13 = 0
            r10[r13] = r5     // Catch:{ Exception -> 0x07f4 }
            java.lang.Integer r5 = java.lang.Integer.valueOf(r67)     // Catch:{ Exception -> 0x07f4 }
            r13 = 1
            r10[r13] = r5     // Catch:{ Exception -> 0x07f4 }
            java.lang.Integer r5 = java.lang.Integer.valueOf(r33)     // Catch:{ Exception -> 0x07f4 }
            r13 = 2
            r10[r13] = r5     // Catch:{ Exception -> 0x07f4 }
            java.lang.Integer r5 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x07f4 }
            r13 = 3
            r10[r13] = r5     // Catch:{ Exception -> 0x07f4 }
            java.lang.String r3 = java.lang.String.format(r3, r4, r10)     // Catch:{ Exception -> 0x07f4 }
            r4 = 0
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x07f4 }
            org.telegram.SQLite.SQLiteCursor r2 = r2.queryFinalized(r3, r5)     // Catch:{ Exception -> 0x07f4 }
            r3 = r6
            r8 = r17
            r5 = r24
            r10 = r25
            r4 = r33
            r6 = r44
            r7 = r52
            r58 = r21
            r21 = r1
            r1 = r2
            r2 = r58
            goto L_0x145c
        L_0x0aab:
            r34 = r2
            org.telegram.SQLite.SQLiteDatabase r2 = r12.database     // Catch:{ Exception -> 0x07f4 }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x07f4 }
            r5 = 1
            java.lang.Object[] r13 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x07f4 }
            java.lang.Long r5 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x07f4 }
            r15 = 0
            r13[r15] = r5     // Catch:{ Exception -> 0x07f4 }
            java.lang.String r3 = java.lang.String.format(r3, r10, r13)     // Catch:{ Exception -> 0x07f4 }
            java.lang.Object[] r5 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x07f4 }
            org.telegram.SQLite.SQLiteCursor r2 = r2.queryFinalized(r3, r5)     // Catch:{ Exception -> 0x07f4 }
            boolean r3 = r2.next()     // Catch:{ Exception -> 0x07f4 }
            if (r3 == 0) goto L_0x0ad2
            r3 = 0
            int r5 = r2.intValue(r3)     // Catch:{ Exception -> 0x07f4 }
            r3 = r5
            goto L_0x0ad4
        L_0x0ad2:
            r3 = r44
        L_0x0ad4:
            r2.dispose()     // Catch:{ Exception -> 0x0bbe }
            r5 = 0
            org.telegram.SQLite.SQLiteDatabase r10 = r12.database     // Catch:{ Exception -> 0x0bbe }
            java.util.Locale r13 = java.util.Locale.US     // Catch:{ Exception -> 0x0bbe }
            java.lang.String r15 = "SELECT max(end) FROM messages_holes WHERE uid = %d"
            r34 = r2
            r43 = r3
            r2 = 1
            java.lang.Object[] r3 = new java.lang.Object[r2]     // Catch:{ Exception -> 0x0ba8 }
            java.lang.Long r2 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x0ba8 }
            r44 = r5
            r5 = 0
            r3[r5] = r2     // Catch:{ Exception -> 0x0ba8 }
            java.lang.String r2 = java.lang.String.format(r13, r15, r3)     // Catch:{ Exception -> 0x0ba8 }
            java.lang.Object[] r3 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x0ba8 }
            org.telegram.SQLite.SQLiteCursor r2 = r10.queryFinalized(r2, r3)     // Catch:{ Exception -> 0x0ba8 }
            boolean r3 = r2.next()     // Catch:{ Exception -> 0x0ba8 }
            if (r3 == 0) goto L_0x0b04
            r3 = 0
            int r5 = r2.intValue(r3)     // Catch:{ Exception -> 0x0ba8 }
            goto L_0x0b06
        L_0x0b04:
            r5 = r44
        L_0x0b06:
            r2.dispose()     // Catch:{ Exception -> 0x0ba8 }
            if (r5 == 0) goto L_0x0b53
            org.telegram.SQLite.SQLiteDatabase r3 = r12.database     // Catch:{ Exception -> 0x0ba8 }
            java.util.Locale r10 = java.util.Locale.US     // Catch:{ Exception -> 0x0ba8 }
            java.lang.StringBuilder r13 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0ba8 }
            r13.<init>()     // Catch:{ Exception -> 0x0ba8 }
            r13.append(r4)     // Catch:{ Exception -> 0x0ba8 }
            r13.append(r14)     // Catch:{ Exception -> 0x0ba8 }
            java.lang.String r4 = " WHERE m.uid = %d AND (m.mid >= %d OR m.mid < 0) ORDER BY m.date DESC, m.mid DESC LIMIT %d,%d"
            r13.append(r4)     // Catch:{ Exception -> 0x0ba8 }
            java.lang.String r4 = r13.toString()     // Catch:{ Exception -> 0x0ba8 }
            r13 = 4
            java.lang.Object[] r15 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0ba8 }
            java.lang.Long r13 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x0ba8 }
            r34 = 0
            r15[r34] = r13     // Catch:{ Exception -> 0x0ba8 }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r5)     // Catch:{ Exception -> 0x0ba8 }
            r34 = 1
            r15[r34] = r13     // Catch:{ Exception -> 0x0ba8 }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r33)     // Catch:{ Exception -> 0x0ba8 }
            r34 = 2
            r15[r34] = r13     // Catch:{ Exception -> 0x0ba8 }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x0ba8 }
            r34 = 3
            r15[r34] = r13     // Catch:{ Exception -> 0x0ba8 }
            java.lang.String r4 = java.lang.String.format(r10, r4, r15)     // Catch:{ Exception -> 0x0ba8 }
            r10 = 0
            java.lang.Object[] r13 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x0ba8 }
            org.telegram.SQLite.SQLiteCursor r3 = r3.queryFinalized(r4, r13)     // Catch:{ Exception -> 0x0ba8 }
            r2 = r3
            goto L_0x0b92
        L_0x0b53:
            org.telegram.SQLite.SQLiteDatabase r3 = r12.database     // Catch:{ Exception -> 0x0ba8 }
            java.util.Locale r10 = java.util.Locale.US     // Catch:{ Exception -> 0x0ba8 }
            java.lang.StringBuilder r13 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0ba8 }
            r13.<init>()     // Catch:{ Exception -> 0x0ba8 }
            r13.append(r4)     // Catch:{ Exception -> 0x0ba8 }
            r13.append(r14)     // Catch:{ Exception -> 0x0ba8 }
            java.lang.String r4 = " WHERE m.uid = %d ORDER BY m.date DESC, m.mid DESC LIMIT %d,%d"
            r13.append(r4)     // Catch:{ Exception -> 0x0ba8 }
            java.lang.String r4 = r13.toString()     // Catch:{ Exception -> 0x0ba8 }
            r13 = 3
            java.lang.Object[] r15 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0ba8 }
            java.lang.Long r13 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x0ba8 }
            r34 = 0
            r15[r34] = r13     // Catch:{ Exception -> 0x0ba8 }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r33)     // Catch:{ Exception -> 0x0ba8 }
            r34 = 1
            r15[r34] = r13     // Catch:{ Exception -> 0x0ba8 }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x0ba8 }
            r34 = 2
            r15[r34] = r13     // Catch:{ Exception -> 0x0ba8 }
            java.lang.String r4 = java.lang.String.format(r10, r4, r15)     // Catch:{ Exception -> 0x0ba8 }
            r10 = 0
            java.lang.Object[] r13 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x0ba8 }
            org.telegram.SQLite.SQLiteCursor r3 = r3.queryFinalized(r4, r13)     // Catch:{ Exception -> 0x0ba8 }
            r2 = r3
        L_0x0b92:
            r3 = r6
            r8 = r17
            r5 = r24
            r10 = r25
            r4 = r33
            r6 = r43
            r7 = r52
            r58 = r21
            r21 = r1
            r1 = r2
            r2 = r58
            goto L_0x145c
        L_0x0ba8:
            r0 = move-exception
            r13 = r0
            r3 = r6
            r45 = r9
            r2 = r21
            r5 = r24
            r10 = r25
            r4 = r33
            r6 = r43
            r35 = r48
            r8 = r7
            r7 = r28
            goto L_0x1CLASSNAME
        L_0x0bbe:
            r0 = move-exception
            r43 = r3
            r13 = r0
            r3 = r6
            r45 = r9
            r2 = r21
            r5 = r24
            r10 = r25
            r4 = r33
            r6 = r43
            r35 = r48
            r8 = r7
            r7 = r28
            goto L_0x1CLASSNAME
        L_0x0bd6:
            r14 = r34
            r34 = r2
        L_0x0bda:
            org.telegram.SQLite.SQLiteDatabase r2 = r12.database     // Catch:{ Exception -> 0x0var_ }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x0var_ }
            r13 = 1
            java.lang.Object[] r15 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0var_ }
            java.lang.Long r13 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x0var_ }
            r43 = r9
            r9 = 0
            r15[r9] = r13     // Catch:{ Exception -> 0x0f7d }
            java.lang.String r4 = java.lang.String.format(r4, r10, r15)     // Catch:{ Exception -> 0x0f7d }
            java.lang.Object[] r10 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x0f7d }
            org.telegram.SQLite.SQLiteCursor r2 = r2.queryFinalized(r4, r10)     // Catch:{ Exception -> 0x0f7d }
            boolean r4 = r2.next()     // Catch:{ Exception -> 0x0f7d }
            if (r4 == 0) goto L_0x0CLASSNAME
            r4 = 0
            int r9 = r2.intValue(r4)     // Catch:{ Exception -> 0x0CLASSNAME }
            r4 = r9
            goto L_0x0CLASSNAME
        L_0x0CLASSNAME:
            r0 = move-exception
            r13 = r0
            r3 = r6
            r8 = r7
            r2 = r21
            r5 = r24
            r10 = r25
            r7 = r28
            r4 = r33
            r45 = r43
            r6 = r44
            r35 = r48
            goto L_0x1CLASSNAME
        L_0x0CLASSNAME:
            r4 = r44
        L_0x0CLASSNAME:
            r2.dispose()     // Catch:{ Exception -> 0x0var_ }
            r9 = 4
            if (r11 != r9) goto L_0x0d32
            if (r66 == 0) goto L_0x0d32
            org.telegram.SQLite.SQLiteDatabase r9 = r12.database     // Catch:{ Exception -> 0x0var_ }
            java.util.Locale r10 = java.util.Locale.US     // Catch:{ Exception -> 0x0var_ }
            java.lang.String r13 = "SELECT max(mid) FROM messages_v2 WHERE uid = %d AND date <= %d AND mid > 0"
            r34 = r2
            r15 = 2
            java.lang.Object[] r2 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x0var_ }
            java.lang.Long r15 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x0var_ }
            r42 = 0
            r2[r42] = r15     // Catch:{ Exception -> 0x0var_ }
            java.lang.Integer r15 = java.lang.Integer.valueOf(r66)     // Catch:{ Exception -> 0x0var_ }
            r35 = 1
            r2[r35] = r15     // Catch:{ Exception -> 0x0var_ }
            java.lang.String r2 = java.lang.String.format(r10, r13, r2)     // Catch:{ Exception -> 0x0var_ }
            r10 = 0
            java.lang.Object[] r13 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x0var_ }
            org.telegram.SQLite.SQLiteCursor r2 = r9.queryFinalized(r2, r13)     // Catch:{ Exception -> 0x0var_ }
            boolean r9 = r2.next()     // Catch:{ Exception -> 0x0var_ }
            if (r9 == 0) goto L_0x0CLASSNAME
            r9 = 0
            int r10 = r2.intValue(r9)     // Catch:{ Exception -> 0x0CLASSNAME }
            r9 = r10
            goto L_0x0c6a
        L_0x0CLASSNAME:
            r0 = move-exception
            r13 = r0
            r3 = r6
            r8 = r7
            r2 = r21
            r5 = r24
            r10 = r25
            r7 = r28
            r45 = r43
            r35 = r48
            r6 = r4
            r4 = r33
            goto L_0x1CLASSNAME
        L_0x0CLASSNAME:
            r9 = -1
        L_0x0c6a:
            r2.dispose()     // Catch:{ Exception -> 0x0var_ }
            org.telegram.SQLite.SQLiteDatabase r10 = r12.database     // Catch:{ Exception -> 0x0var_ }
            java.util.Locale r13 = java.util.Locale.US     // Catch:{ Exception -> 0x0var_ }
            java.lang.String r15 = "SELECT min(mid) FROM messages_v2 WHERE uid = %d AND date >= %d AND mid > 0"
            r34 = r2
            r44 = r4
            r2 = 2
            java.lang.Object[] r4 = new java.lang.Object[r2]     // Catch:{ Exception -> 0x0f7d }
            java.lang.Long r2 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x0f7d }
            r42 = 0
            r4[r42] = r2     // Catch:{ Exception -> 0x0f7d }
            java.lang.Integer r2 = java.lang.Integer.valueOf(r66)     // Catch:{ Exception -> 0x0f7d }
            r35 = 1
            r4[r35] = r2     // Catch:{ Exception -> 0x0f7d }
            java.lang.String r2 = java.lang.String.format(r13, r15, r4)     // Catch:{ Exception -> 0x0f7d }
            r4 = 0
            java.lang.Object[] r13 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0f7d }
            org.telegram.SQLite.SQLiteCursor r2 = r10.queryFinalized(r2, r13)     // Catch:{ Exception -> 0x0f7d }
            boolean r4 = r2.next()     // Catch:{ Exception -> 0x0f7d }
            if (r4 == 0) goto L_0x0ca2
            r4 = 0
            int r10 = r2.intValue(r4)     // Catch:{ Exception -> 0x0CLASSNAME }
            r4 = r10
            goto L_0x0ca3
        L_0x0ca2:
            r4 = -1
        L_0x0ca3:
            r2.dispose()     // Catch:{ Exception -> 0x0f7d }
            r10 = -1
            if (r9 == r10) goto L_0x0d2d
            if (r4 == r10) goto L_0x0d2d
            if (r9 != r4) goto L_0x0cb2
            r10 = r9
            r17 = r10
            goto L_0x0d38
        L_0x0cb2:
            org.telegram.SQLite.SQLiteDatabase r13 = r12.database     // Catch:{ Exception -> 0x0f7d }
            java.util.Locale r15 = java.util.Locale.US     // Catch:{ Exception -> 0x0f7d }
            java.lang.String r10 = "SELECT start FROM messages_holes WHERE uid = %d AND start <= %d AND end > %d"
            r45 = r2
            r2 = 3
            java.lang.Object[] r7 = new java.lang.Object[r2]     // Catch:{ Exception -> 0x0f7d }
            java.lang.Long r2 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x0f7d }
            r8 = 0
            r7[r8] = r2     // Catch:{ Exception -> 0x0f7d }
            java.lang.Integer r2 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x0f7d }
            r8 = 1
            r7[r8] = r2     // Catch:{ Exception -> 0x0f7d }
            java.lang.Integer r2 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x0f7d }
            r8 = 2
            r7[r8] = r2     // Catch:{ Exception -> 0x0f7d }
            java.lang.String r2 = java.lang.String.format(r15, r10, r7)     // Catch:{ Exception -> 0x0f7d }
            r7 = 0
            java.lang.Object[] r8 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x0f7d }
            org.telegram.SQLite.SQLiteCursor r2 = r13.queryFinalized(r2, r8)     // Catch:{ Exception -> 0x0f7d }
            boolean r7 = r2.next()     // Catch:{ Exception -> 0x0f7d }
            if (r7 == 0) goto L_0x0ce4
            r9 = -1
        L_0x0ce4:
            r2.dispose()     // Catch:{ Exception -> 0x0f7d }
            r7 = -1
            if (r9 == r7) goto L_0x0d38
            org.telegram.SQLite.SQLiteDatabase r7 = r12.database     // Catch:{ Exception -> 0x0f7d }
            java.util.Locale r8 = java.util.Locale.US     // Catch:{ Exception -> 0x0f7d }
            java.lang.String r10 = "SELECT start FROM messages_holes WHERE uid = %d AND start <= %d AND end > %d"
            r13 = 3
            java.lang.Object[] r15 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0f7d }
            java.lang.Long r13 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x0f7d }
            r42 = 0
            r15[r42] = r13     // Catch:{ Exception -> 0x0f7d }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r4)     // Catch:{ Exception -> 0x0f7d }
            r35 = 1
            r15[r35] = r13     // Catch:{ Exception -> 0x0f7d }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r4)     // Catch:{ Exception -> 0x0f7d }
            r41 = 2
            r15[r41] = r13     // Catch:{ Exception -> 0x0f7d }
            java.lang.String r8 = java.lang.String.format(r8, r10, r15)     // Catch:{ Exception -> 0x0f7d }
            r10 = 0
            java.lang.Object[] r13 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x0f7d }
            org.telegram.SQLite.SQLiteCursor r7 = r7.queryFinalized(r8, r13)     // Catch:{ Exception -> 0x0f7d }
            r2 = r7
            boolean r7 = r2.next()     // Catch:{ Exception -> 0x0f7d }
            if (r7 == 0) goto L_0x0d1e
            r4 = -1
        L_0x0d1e:
            r2.dispose()     // Catch:{ Exception -> 0x0f7d }
            r7 = -1
            if (r4 == r7) goto L_0x0d38
            r19 = r4
            r7 = r4
            r8 = r4
            r17 = r7
            r16 = r8
            goto L_0x0d38
        L_0x0d2d:
            r45 = r2
            r2 = r45
            goto L_0x0d38
        L_0x0d32:
            r34 = r2
            r44 = r4
            r2 = r34
        L_0x0d38:
            if (r17 == 0) goto L_0x0d3c
            r4 = 1
            goto L_0x0d3d
        L_0x0d3c:
            r4 = 0
        L_0x0d3d:
            if (r4 == 0) goto L_0x0d73
            org.telegram.SQLite.SQLiteDatabase r7 = r12.database     // Catch:{ Exception -> 0x0f7d }
            java.util.Locale r8 = java.util.Locale.US     // Catch:{ Exception -> 0x0f7d }
            java.lang.String r9 = "SELECT start FROM messages_holes WHERE uid = %d AND start < %d AND end > %d"
            r10 = 3
            java.lang.Object[] r13 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x0f7d }
            java.lang.Long r10 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x0f7d }
            r15 = 0
            r13[r15] = r10     // Catch:{ Exception -> 0x0f7d }
            java.lang.Integer r10 = java.lang.Integer.valueOf(r17)     // Catch:{ Exception -> 0x0f7d }
            r15 = 1
            r13[r15] = r10     // Catch:{ Exception -> 0x0f7d }
            java.lang.Integer r10 = java.lang.Integer.valueOf(r17)     // Catch:{ Exception -> 0x0f7d }
            r15 = 2
            r13[r15] = r10     // Catch:{ Exception -> 0x0f7d }
            java.lang.String r8 = java.lang.String.format(r8, r9, r13)     // Catch:{ Exception -> 0x0f7d }
            r9 = 0
            java.lang.Object[] r10 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x0f7d }
            org.telegram.SQLite.SQLiteCursor r7 = r7.queryFinalized(r8, r10)     // Catch:{ Exception -> 0x0f7d }
            r2 = r7
            boolean r7 = r2.next()     // Catch:{ Exception -> 0x0f7d }
            if (r7 == 0) goto L_0x0d70
            r4 = 0
        L_0x0d70:
            r2.dispose()     // Catch:{ Exception -> 0x0f7d }
        L_0x0d73:
            java.lang.String r7 = " WHERE m.uid = %d AND m.mid <= %d ORDER BY m.date DESC, m.mid DESC LIMIT %d) UNION SELECT * FROM ("
            if (r4 == 0) goto L_0x0eb7
            r8 = 0
            r9 = 1
            org.telegram.SQLite.SQLiteDatabase r10 = r12.database     // Catch:{ Exception -> 0x0f7d }
            java.util.Locale r13 = java.util.Locale.US     // Catch:{ Exception -> 0x0f7d }
            java.lang.String r15 = "SELECT start FROM messages_holes WHERE uid = %d AND start >= %d ORDER BY start ASC LIMIT 1"
            r34 = r2
            r45 = r4
            r2 = 2
            java.lang.Object[] r4 = new java.lang.Object[r2]     // Catch:{ Exception -> 0x0f7d }
            java.lang.Long r2 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x0f7d }
            r42 = 0
            r4[r42] = r2     // Catch:{ Exception -> 0x0f7d }
            java.lang.Integer r2 = java.lang.Integer.valueOf(r17)     // Catch:{ Exception -> 0x0f7d }
            r35 = 1
            r4[r35] = r2     // Catch:{ Exception -> 0x0f7d }
            java.lang.String r2 = java.lang.String.format(r13, r15, r4)     // Catch:{ Exception -> 0x0f7d }
            r4 = 0
            java.lang.Object[] r13 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0f7d }
            org.telegram.SQLite.SQLiteCursor r2 = r10.queryFinalized(r2, r13)     // Catch:{ Exception -> 0x0f7d }
            boolean r4 = r2.next()     // Catch:{ Exception -> 0x0f7d }
            if (r4 == 0) goto L_0x0dad
            r4 = 0
            int r10 = r2.intValue(r4)     // Catch:{ Exception -> 0x0f7d }
            r8 = r10
        L_0x0dad:
            r2.dispose()     // Catch:{ Exception -> 0x0f7d }
            org.telegram.SQLite.SQLiteDatabase r4 = r12.database     // Catch:{ Exception -> 0x0f7d }
            java.util.Locale r10 = java.util.Locale.US     // Catch:{ Exception -> 0x0f7d }
            r13 = 2
            java.lang.Object[] r15 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0f7d }
            java.lang.Long r13 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x0f7d }
            r34 = 0
            r15[r34] = r13     // Catch:{ Exception -> 0x0f7d }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r17)     // Catch:{ Exception -> 0x0f7d }
            r34 = 1
            r15[r34] = r13     // Catch:{ Exception -> 0x0f7d }
            java.lang.String r5 = java.lang.String.format(r10, r5, r15)     // Catch:{ Exception -> 0x0f7d }
            r10 = 0
            java.lang.Object[] r13 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x0f7d }
            org.telegram.SQLite.SQLiteCursor r4 = r4.queryFinalized(r5, r13)     // Catch:{ Exception -> 0x0f7d }
            r2 = r4
            boolean r4 = r2.next()     // Catch:{ Exception -> 0x0f7d }
            if (r4 == 0) goto L_0x0ddf
            r4 = 0
            int r5 = r2.intValue(r4)     // Catch:{ Exception -> 0x0f7d }
            r9 = r5
        L_0x0ddf:
            r2.dispose()     // Catch:{ Exception -> 0x0f7d }
            if (r8 != 0) goto L_0x0e44
            r4 = 1
            if (r9 == r4) goto L_0x0de8
            goto L_0x0e44
        L_0x0de8:
            org.telegram.SQLite.SQLiteDatabase r4 = r12.database     // Catch:{ Exception -> 0x0f7d }
            java.util.Locale r5 = java.util.Locale.US     // Catch:{ Exception -> 0x0f7d }
            java.lang.StringBuilder r10 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0f7d }
            r10.<init>()     // Catch:{ Exception -> 0x0f7d }
            r10.append(r3)     // Catch:{ Exception -> 0x0f7d }
            r10.append(r14)     // Catch:{ Exception -> 0x0f7d }
            r10.append(r7)     // Catch:{ Exception -> 0x0f7d }
            r10.append(r14)     // Catch:{ Exception -> 0x0f7d }
            java.lang.String r3 = " WHERE m.uid = %d AND m.mid > %d ORDER BY m.date ASC, m.mid ASC LIMIT %d)"
            r10.append(r3)     // Catch:{ Exception -> 0x0f7d }
            java.lang.String r3 = r10.toString()     // Catch:{ Exception -> 0x0f7d }
            r7 = 6
            java.lang.Object[] r10 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x0f7d }
            java.lang.Long r7 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x0f7d }
            r13 = 0
            r10[r13] = r7     // Catch:{ Exception -> 0x0f7d }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r16)     // Catch:{ Exception -> 0x0f7d }
            r13 = 1
            r10[r13] = r7     // Catch:{ Exception -> 0x0f7d }
            int r7 = r6 / 2
            java.lang.Integer r7 = java.lang.Integer.valueOf(r7)     // Catch:{ Exception -> 0x0f7d }
            r13 = 2
            r10[r13] = r7     // Catch:{ Exception -> 0x0f7d }
            java.lang.Long r7 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x0f7d }
            r13 = 3
            r10[r13] = r7     // Catch:{ Exception -> 0x0f7d }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r16)     // Catch:{ Exception -> 0x0f7d }
            r13 = 4
            r10[r13] = r7     // Catch:{ Exception -> 0x0f7d }
            int r7 = r6 / 2
            java.lang.Integer r7 = java.lang.Integer.valueOf(r7)     // Catch:{ Exception -> 0x0f7d }
            r13 = 5
            r10[r13] = r7     // Catch:{ Exception -> 0x0f7d }
            java.lang.String r3 = java.lang.String.format(r5, r3, r10)     // Catch:{ Exception -> 0x0f7d }
            r5 = 0
            java.lang.Object[] r7 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x0f7d }
            org.telegram.SQLite.SQLiteCursor r3 = r4.queryFinalized(r3, r7)     // Catch:{ Exception -> 0x0f7d }
            r2 = r3
            goto L_0x0eb5
        L_0x0e44:
            if (r8 != 0) goto L_0x0e49
            r8 = 1000000000(0x3b9aca00, float:0.NUM)
        L_0x0e49:
            org.telegram.SQLite.SQLiteDatabase r4 = r12.database     // Catch:{ Exception -> 0x0f7d }
            java.util.Locale r5 = java.util.Locale.US     // Catch:{ Exception -> 0x0f7d }
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0f7d }
            r7.<init>()     // Catch:{ Exception -> 0x0f7d }
            r7.append(r3)     // Catch:{ Exception -> 0x0f7d }
            r7.append(r14)     // Catch:{ Exception -> 0x0f7d }
            java.lang.String r3 = " WHERE m.uid = %d AND m.mid <= %d AND (m.mid >= %d OR m.mid < 0) ORDER BY m.date DESC, m.mid DESC LIMIT %d) UNION SELECT * FROM ("
            r7.append(r3)     // Catch:{ Exception -> 0x0f7d }
            r7.append(r14)     // Catch:{ Exception -> 0x0f7d }
            java.lang.String r3 = " WHERE m.uid = %d AND m.mid > %d AND (m.mid <= %d OR m.mid < 0) ORDER BY m.date ASC, m.mid ASC LIMIT %d)"
            r7.append(r3)     // Catch:{ Exception -> 0x0f7d }
            java.lang.String r3 = r7.toString()     // Catch:{ Exception -> 0x0f7d }
            r7 = 8
            java.lang.Object[] r7 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x0f7d }
            java.lang.Long r10 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x0f7d }
            r13 = 0
            r7[r13] = r10     // Catch:{ Exception -> 0x0f7d }
            java.lang.Integer r10 = java.lang.Integer.valueOf(r16)     // Catch:{ Exception -> 0x0f7d }
            r13 = 1
            r7[r13] = r10     // Catch:{ Exception -> 0x0f7d }
            java.lang.Integer r10 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x0f7d }
            r13 = 2
            r7[r13] = r10     // Catch:{ Exception -> 0x0f7d }
            int r10 = r6 / 2
            java.lang.Integer r10 = java.lang.Integer.valueOf(r10)     // Catch:{ Exception -> 0x0f7d }
            r13 = 3
            r7[r13] = r10     // Catch:{ Exception -> 0x0f7d }
            java.lang.Long r10 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x0f7d }
            r13 = 4
            r7[r13] = r10     // Catch:{ Exception -> 0x0f7d }
            java.lang.Integer r10 = java.lang.Integer.valueOf(r16)     // Catch:{ Exception -> 0x0f7d }
            r13 = 5
            r7[r13] = r10     // Catch:{ Exception -> 0x0f7d }
            java.lang.Integer r10 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x0f7d }
            r13 = 6
            r7[r13] = r10     // Catch:{ Exception -> 0x0f7d }
            int r10 = r6 / 2
            java.lang.Integer r10 = java.lang.Integer.valueOf(r10)     // Catch:{ Exception -> 0x0f7d }
            r13 = 7
            r7[r13] = r10     // Catch:{ Exception -> 0x0f7d }
            java.lang.String r3 = java.lang.String.format(r5, r3, r7)     // Catch:{ Exception -> 0x0f7d }
            r5 = 0
            java.lang.Object[] r7 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x0f7d }
            org.telegram.SQLite.SQLiteCursor r3 = r4.queryFinalized(r3, r7)     // Catch:{ Exception -> 0x0f7d }
            r2 = r3
        L_0x0eb5:
            goto L_0x0f4c
        L_0x0eb7:
            r34 = r2
            r45 = r4
            r2 = 2
            if (r11 != r2) goto L_0x0f4b
            r2 = 0
            org.telegram.SQLite.SQLiteDatabase r4 = r12.database     // Catch:{ Exception -> 0x0f7d }
            java.util.Locale r5 = java.util.Locale.US     // Catch:{ Exception -> 0x0f7d }
            java.lang.String r8 = "SELECT COUNT(*) FROM messages_v2 WHERE uid = %d AND mid != 0 AND out = 0 AND read_state IN(0,2)"
            r9 = 1
            java.lang.Object[] r10 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x0f7d }
            java.lang.Long r9 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x0f7d }
            r13 = 0
            r10[r13] = r9     // Catch:{ Exception -> 0x0f7d }
            java.lang.String r5 = java.lang.String.format(r5, r8, r10)     // Catch:{ Exception -> 0x0f7d }
            java.lang.Object[] r8 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0f7d }
            org.telegram.SQLite.SQLiteCursor r4 = r4.queryFinalized(r5, r8)     // Catch:{ Exception -> 0x0f7d }
            boolean r5 = r4.next()     // Catch:{ Exception -> 0x0f7d }
            if (r5 == 0) goto L_0x0ee5
            r5 = 0
            int r8 = r4.intValue(r5)     // Catch:{ Exception -> 0x0f7d }
            r2 = r8
        L_0x0ee5:
            r4.dispose()     // Catch:{ Exception -> 0x0f7d }
            if (r2 != r1) goto L_0x0var_
            r18 = 1
            org.telegram.SQLite.SQLiteDatabase r5 = r12.database     // Catch:{ Exception -> 0x0f7d }
            java.util.Locale r8 = java.util.Locale.US     // Catch:{ Exception -> 0x0f7d }
            java.lang.StringBuilder r9 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0f7d }
            r9.<init>()     // Catch:{ Exception -> 0x0f7d }
            r9.append(r3)     // Catch:{ Exception -> 0x0f7d }
            r9.append(r14)     // Catch:{ Exception -> 0x0f7d }
            r9.append(r7)     // Catch:{ Exception -> 0x0f7d }
            r9.append(r14)     // Catch:{ Exception -> 0x0f7d }
            java.lang.String r3 = " WHERE m.uid = %d AND m.mid > %d ORDER BY m.date ASC, m.mid ASC LIMIT %d)"
            r9.append(r3)     // Catch:{ Exception -> 0x0f7d }
            java.lang.String r3 = r9.toString()     // Catch:{ Exception -> 0x0f7d }
            r7 = 6
            java.lang.Object[] r9 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x0f7d }
            java.lang.Long r7 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x0f7d }
            r10 = 0
            r9[r10] = r7     // Catch:{ Exception -> 0x0f7d }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r16)     // Catch:{ Exception -> 0x0f7d }
            r10 = 1
            r9[r10] = r7     // Catch:{ Exception -> 0x0f7d }
            int r7 = r6 / 2
            java.lang.Integer r7 = java.lang.Integer.valueOf(r7)     // Catch:{ Exception -> 0x0f7d }
            r10 = 2
            r9[r10] = r7     // Catch:{ Exception -> 0x0f7d }
            java.lang.Long r7 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x0f7d }
            r10 = 3
            r9[r10] = r7     // Catch:{ Exception -> 0x0f7d }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r16)     // Catch:{ Exception -> 0x0f7d }
            r10 = 4
            r9[r10] = r7     // Catch:{ Exception -> 0x0f7d }
            int r7 = r6 / 2
            java.lang.Integer r7 = java.lang.Integer.valueOf(r7)     // Catch:{ Exception -> 0x0f7d }
            r10 = 5
            r9[r10] = r7     // Catch:{ Exception -> 0x0f7d }
            java.lang.String r3 = java.lang.String.format(r8, r3, r9)     // Catch:{ Exception -> 0x0f7d }
            r7 = 0
            java.lang.Object[] r8 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x0f7d }
            org.telegram.SQLite.SQLiteCursor r3 = r5.queryFinalized(r3, r8)     // Catch:{ Exception -> 0x0f7d }
            r2 = r3
            goto L_0x0f4a
        L_0x0var_:
            r3 = 0
            r2 = r3
        L_0x0f4a:
            goto L_0x0f4c
        L_0x0f4b:
            r2 = 0
        L_0x0f4c:
            r3 = r6
            r8 = r17
            r5 = r24
            r10 = r25
            r4 = r33
            r9 = r43
            r6 = r44
            r7 = r52
            r58 = r21
            r21 = r1
            r1 = r2
            r2 = r58
            goto L_0x145c
        L_0x0var_:
            r0 = move-exception
            r44 = r4
            r8 = r60
            r13 = r0
            r3 = r6
            r2 = r21
            r5 = r24
            r10 = r25
            r7 = r28
            r4 = r33
            r45 = r43
            r6 = r44
            r35 = r48
            goto L_0x1CLASSNAME
        L_0x0f7d:
            r0 = move-exception
            r8 = r60
            r13 = r0
            r3 = r6
            r2 = r21
            r5 = r24
            r10 = r25
            r7 = r28
            r4 = r33
            r45 = r43
            r6 = r44
            r35 = r48
            goto L_0x1CLASSNAME
        L_0x0var_:
            r0 = move-exception
            r43 = r9
            r8 = r60
            r13 = r0
            r3 = r6
            r2 = r21
            r5 = r24
            r10 = r25
            r7 = r28
            r4 = r33
            r45 = r43
            r6 = r44
            r35 = r48
            goto L_0x1CLASSNAME
        L_0x0fad:
            r0 = move-exception
            r43 = r9
            r8 = r60
            r13 = r0
            r3 = r6
            r52 = r15
            r2 = r21
            r5 = r24
            r10 = r25
            r7 = r28
            r4 = r33
            r45 = r43
            r6 = r44
            r35 = r48
            goto L_0x1CLASSNAME
        L_0x0fc8:
            r0 = move-exception
            r43 = r9
            r8 = r60
            r3 = r6
            r35 = r13
            r52 = r15
            r2 = r21
            r5 = r24
            r10 = r25
            r7 = r28
            r4 = r33
            r45 = r43
            r6 = r44
            r13 = r0
            goto L_0x1CLASSNAME
        L_0x0fe3:
            r0 = move-exception
            r43 = r9
            r25 = r10
            r8 = r60
            r3 = r6
            r35 = r13
            r52 = r15
            r2 = r21
            r5 = r24
            r7 = r28
            r4 = r33
            r45 = r43
            r6 = r44
            r13 = r0
            goto L_0x1CLASSNAME
        L_0x0ffe:
            r0 = move-exception
            r24 = r5
            r43 = r9
            r25 = r10
            r8 = r60
            r3 = r6
            r35 = r13
            r52 = r15
            r2 = r21
            r7 = r28
            r4 = r33
            r45 = r43
            r6 = r44
            r13 = r0
            goto L_0x1CLASSNAME
        L_0x1019:
            r50 = r9
            r6 = r10
            r48 = r13
            r51 = r15
            r52 = r25
            r14 = r34
            r20 = 1
            java.lang.String r1 = "SELECT COUNT(*) FROM messages_v2 WHERE uid = %d AND mid <= %d AND out = 0 AND read_state IN(0,2)"
            java.lang.String r2 = "SELECT max(mid), max(date) FROM messages_v2 WHERE uid = %d AND out = 0 AND read_state IN(0,2) AND mid < 0"
            java.lang.String r5 = "SELECT min(mid) FROM messages_v2 WHERE uid = %d AND mid < 0"
            r7 = 3
            if (r11 != r7) goto L_0x112c
            if (r67 != 0) goto L_0x112c
            org.telegram.SQLite.SQLiteDatabase r7 = r12.database     // Catch:{ Exception -> 0x1115 }
            java.util.Locale r8 = java.util.Locale.US     // Catch:{ Exception -> 0x1115 }
            r9 = 1
            java.lang.Object[] r10 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x1115 }
            java.lang.Long r9 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x1115 }
            r13 = 0
            r10[r13] = r9     // Catch:{ Exception -> 0x1115 }
            java.lang.String r8 = java.lang.String.format(r8, r5, r10)     // Catch:{ Exception -> 0x1115 }
            java.lang.Object[] r9 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x1115 }
            org.telegram.SQLite.SQLiteCursor r7 = r7.queryFinalized(r8, r9)     // Catch:{ Exception -> 0x1115 }
            boolean r8 = r7.next()     // Catch:{ Exception -> 0x1115 }
            if (r8 == 0) goto L_0x1056
            r8 = 0
            int r9 = r7.intValue(r8)     // Catch:{ Exception -> 0x1115 }
            r8 = r9
            goto L_0x1058
        L_0x1056:
            r8 = r43
        L_0x1058:
            r7.dispose()     // Catch:{ Exception -> 0x10fc }
            r9 = 0
            org.telegram.SQLite.SQLiteDatabase r10 = r12.database     // Catch:{ Exception -> 0x10fc }
            java.util.Locale r13 = java.util.Locale.US     // Catch:{ Exception -> 0x10fc }
            r25 = r7
            r15 = 1
            java.lang.Object[] r7 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x10fc }
            java.lang.Long r15 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x10fc }
            r34 = r8
            r8 = 0
            r7[r8] = r15     // Catch:{ Exception -> 0x10e5 }
            java.lang.String r7 = java.lang.String.format(r13, r2, r7)     // Catch:{ Exception -> 0x10e5 }
            java.lang.Object[] r13 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x10e5 }
            org.telegram.SQLite.SQLiteCursor r7 = r10.queryFinalized(r7, r13)     // Catch:{ Exception -> 0x10e5 }
            boolean r8 = r7.next()     // Catch:{ Exception -> 0x10e5 }
            if (r8 == 0) goto L_0x108a
            r8 = 0
            int r10 = r7.intValue(r8)     // Catch:{ Exception -> 0x10e5 }
            r9 = r10
            r8 = 1
            int r10 = r7.intValue(r8)     // Catch:{ Exception -> 0x10e5 }
            goto L_0x108c
        L_0x108a:
            r10 = r46
        L_0x108c:
            r7.dispose()     // Catch:{ Exception -> 0x1189 }
            if (r9 == 0) goto L_0x10e2
            r8 = r9
            org.telegram.SQLite.SQLiteDatabase r13 = r12.database     // Catch:{ Exception -> 0x10cb }
            java.util.Locale r15 = java.util.Locale.US     // Catch:{ Exception -> 0x10cb }
            r25 = r7
            r34 = r8
            r7 = 2
            java.lang.Object[] r8 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x1189 }
            java.lang.Long r7 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x1189 }
            r42 = 0
            r8[r42] = r7     // Catch:{ Exception -> 0x1189 }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x1189 }
            r35 = 1
            r8[r35] = r7     // Catch:{ Exception -> 0x1189 }
            java.lang.String r7 = java.lang.String.format(r15, r1, r8)     // Catch:{ Exception -> 0x1189 }
            r8 = 0
            java.lang.Object[] r15 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x1189 }
            org.telegram.SQLite.SQLiteCursor r7 = r13.queryFinalized(r7, r15)     // Catch:{ Exception -> 0x1189 }
            boolean r8 = r7.next()     // Catch:{ Exception -> 0x1189 }
            if (r8 == 0) goto L_0x10c6
            r8 = 0
            int r13 = r7.intValue(r8)     // Catch:{ Exception -> 0x1189 }
            r8 = r13
            r21 = r8
        L_0x10c6:
            r7.dispose()     // Catch:{ Exception -> 0x1189 }
            goto L_0x1130
        L_0x10cb:
            r0 = move-exception
            r34 = r8
            r8 = r60
            r13 = r0
            r3 = r6
            r1 = r21
            r2 = r24
            r7 = r28
            r4 = r33
            r5 = r34
            r6 = r44
            r35 = r48
            goto L_0x1CLASSNAME
        L_0x10e2:
            r25 = r7
            goto L_0x1130
        L_0x10e5:
            r0 = move-exception
            r8 = r60
            r13 = r0
            r3 = r6
            r1 = r21
            r2 = r24
            r7 = r28
            r4 = r33
            r5 = r34
            r6 = r44
            r10 = r46
            r35 = r48
            goto L_0x1CLASSNAME
        L_0x10fc:
            r0 = move-exception
            r34 = r8
            r8 = r60
            r13 = r0
            r3 = r6
            r1 = r21
            r2 = r24
            r7 = r28
            r4 = r33
            r5 = r34
            r6 = r44
            r10 = r46
            r35 = r48
            goto L_0x1CLASSNAME
        L_0x1115:
            r0 = move-exception
            r8 = r60
            r13 = r0
            r3 = r6
            r1 = r21
            r2 = r24
            r7 = r28
            r4 = r33
            r5 = r43
            r6 = r44
            r10 = r46
            r35 = r48
            goto L_0x1CLASSNAME
        L_0x112c:
            r34 = r43
            r10 = r46
        L_0x1130:
            r7 = 3
            if (r11 == r7) goto L_0x13b0
            r7 = 4
            if (r11 != r7) goto L_0x113a
            r7 = r52
            goto L_0x13b2
        L_0x113a:
            r3 = 1
            if (r11 != r3) goto L_0x119e
            org.telegram.SQLite.SQLiteDatabase r1 = r12.database     // Catch:{ Exception -> 0x1189 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x1189 }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x1189 }
            r3.<init>()     // Catch:{ Exception -> 0x1189 }
            r3.append(r4)     // Catch:{ Exception -> 0x1189 }
            r3.append(r14)     // Catch:{ Exception -> 0x1189 }
            java.lang.String r4 = " WHERE m.uid = %d AND m.mid < %d ORDER BY m.mid DESC LIMIT %d"
            r3.append(r4)     // Catch:{ Exception -> 0x1189 }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x1189 }
            r4 = 3
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x1189 }
            java.lang.Long r4 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x1189 }
            r7 = 0
            r5[r7] = r4     // Catch:{ Exception -> 0x1189 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r65)     // Catch:{ Exception -> 0x1189 }
            r7 = 1
            r5[r7] = r4     // Catch:{ Exception -> 0x1189 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x1189 }
            r7 = 2
            r5[r7] = r4     // Catch:{ Exception -> 0x1189 }
            java.lang.String r2 = java.lang.String.format(r2, r3, r5)     // Catch:{ Exception -> 0x1189 }
            r3 = 0
            java.lang.Object[] r4 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x1189 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r2, r4)     // Catch:{ Exception -> 0x1189 }
            r3 = r6
            r8 = r17
            r2 = r24
            r4 = r33
            r5 = r34
            r6 = r44
            r9 = r45
            r7 = r52
            goto L_0x145c
        L_0x1189:
            r0 = move-exception
            r8 = r60
            r13 = r0
            r3 = r6
            r1 = r21
            r2 = r24
            r7 = r28
            r4 = r33
            r5 = r34
            r6 = r44
            r35 = r48
            goto L_0x1CLASSNAME
        L_0x119e:
            if (r67 == 0) goto L_0x1241
            if (r65 == 0) goto L_0x11ee
            org.telegram.SQLite.SQLiteDatabase r1 = r12.database     // Catch:{ Exception -> 0x1189 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x1189 }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x1189 }
            r3.<init>()     // Catch:{ Exception -> 0x1189 }
            r3.append(r4)     // Catch:{ Exception -> 0x1189 }
            r3.append(r14)     // Catch:{ Exception -> 0x1189 }
            java.lang.String r4 = " WHERE m.uid = %d AND m.mid > %d ORDER BY m.mid ASC LIMIT %d"
            r3.append(r4)     // Catch:{ Exception -> 0x1189 }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x1189 }
            r4 = 3
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x1189 }
            java.lang.Long r4 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x1189 }
            r7 = 0
            r5[r7] = r4     // Catch:{ Exception -> 0x1189 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r65)     // Catch:{ Exception -> 0x1189 }
            r7 = 1
            r5[r7] = r4     // Catch:{ Exception -> 0x1189 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x1189 }
            r7 = 2
            r5[r7] = r4     // Catch:{ Exception -> 0x1189 }
            java.lang.String r2 = java.lang.String.format(r2, r3, r5)     // Catch:{ Exception -> 0x1189 }
            r3 = 0
            java.lang.Object[] r4 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x1189 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r2, r4)     // Catch:{ Exception -> 0x1189 }
            r3 = r6
            r8 = r17
            r2 = r24
            r4 = r33
            r5 = r34
            r6 = r44
            r9 = r45
            r7 = r52
            goto L_0x145c
        L_0x11ee:
            org.telegram.SQLite.SQLiteDatabase r1 = r12.database     // Catch:{ Exception -> 0x1189 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x1189 }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x1189 }
            r3.<init>()     // Catch:{ Exception -> 0x1189 }
            r3.append(r4)     // Catch:{ Exception -> 0x1189 }
            r3.append(r14)     // Catch:{ Exception -> 0x1189 }
            java.lang.String r4 = " WHERE m.uid = %d AND m.date <= %d ORDER BY m.mid ASC LIMIT %d,%d"
            r3.append(r4)     // Catch:{ Exception -> 0x1189 }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x1189 }
            r4 = 4
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x1189 }
            java.lang.Long r4 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x1189 }
            r7 = 0
            r5[r7] = r4     // Catch:{ Exception -> 0x1189 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r67)     // Catch:{ Exception -> 0x1189 }
            r7 = 1
            r5[r7] = r4     // Catch:{ Exception -> 0x1189 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r33)     // Catch:{ Exception -> 0x1189 }
            r7 = 2
            r5[r7] = r4     // Catch:{ Exception -> 0x1189 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x1189 }
            r7 = 3
            r5[r7] = r4     // Catch:{ Exception -> 0x1189 }
            java.lang.String r2 = java.lang.String.format(r2, r3, r5)     // Catch:{ Exception -> 0x1189 }
            r3 = 0
            java.lang.Object[] r4 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x1189 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r2, r4)     // Catch:{ Exception -> 0x1189 }
            r3 = r6
            r8 = r17
            r2 = r24
            r4 = r33
            r5 = r34
            r6 = r44
            r9 = r45
            r7 = r52
            goto L_0x145c
        L_0x1241:
            r3 = 2
            if (r11 != r3) goto L_0x131d
            org.telegram.SQLite.SQLiteDatabase r3 = r12.database     // Catch:{ Exception -> 0x1189 }
            java.util.Locale r7 = java.util.Locale.US     // Catch:{ Exception -> 0x1189 }
            r8 = 1
            java.lang.Object[] r9 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x1189 }
            java.lang.Long r8 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x1189 }
            r13 = 0
            r9[r13] = r8     // Catch:{ Exception -> 0x1189 }
            java.lang.String r5 = java.lang.String.format(r7, r5, r9)     // Catch:{ Exception -> 0x1189 }
            java.lang.Object[] r7 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x1189 }
            org.telegram.SQLite.SQLiteCursor r3 = r3.queryFinalized(r5, r7)     // Catch:{ Exception -> 0x1189 }
            boolean r5 = r3.next()     // Catch:{ Exception -> 0x1189 }
            if (r5 == 0) goto L_0x1269
            r5 = 0
            int r7 = r3.intValue(r5)     // Catch:{ Exception -> 0x1189 }
            r5 = r7
            goto L_0x126b
        L_0x1269:
            r5 = r44
        L_0x126b:
            r3.dispose()     // Catch:{ Exception -> 0x1309 }
            org.telegram.SQLite.SQLiteDatabase r7 = r12.database     // Catch:{ Exception -> 0x1309 }
            java.util.Locale r8 = java.util.Locale.US     // Catch:{ Exception -> 0x1309 }
            r9 = 1
            java.lang.Object[] r13 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x1309 }
            java.lang.Long r9 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x1309 }
            r15 = 0
            r13[r15] = r9     // Catch:{ Exception -> 0x1309 }
            java.lang.String r2 = java.lang.String.format(r8, r2, r13)     // Catch:{ Exception -> 0x1309 }
            java.lang.Object[] r8 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x1309 }
            org.telegram.SQLite.SQLiteCursor r2 = r7.queryFinalized(r2, r8)     // Catch:{ Exception -> 0x1309 }
            boolean r3 = r2.next()     // Catch:{ Exception -> 0x1309 }
            if (r3 == 0) goto L_0x12b2
            r3 = 0
            int r7 = r2.intValue(r3)     // Catch:{ Exception -> 0x1309 }
            r3 = r7
            r7 = 1
            int r8 = r2.intValue(r7)     // Catch:{ Exception -> 0x129c }
            r7 = r8
            r34 = r3
            r10 = r7
            goto L_0x12b2
        L_0x129c:
            r0 = move-exception
            r8 = r60
            r13 = r0
            r1 = r21
            r2 = r24
            r7 = r28
            r4 = r33
            r35 = r48
            r58 = r5
            r5 = r3
            r3 = r6
            r6 = r58
            goto L_0x1CLASSNAME
        L_0x12b2:
            r2.dispose()     // Catch:{ Exception -> 0x1309 }
            if (r34 == 0) goto L_0x1302
            org.telegram.SQLite.SQLiteDatabase r3 = r12.database     // Catch:{ Exception -> 0x1309 }
            java.util.Locale r7 = java.util.Locale.US     // Catch:{ Exception -> 0x1309 }
            r8 = 2
            java.lang.Object[] r9 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x1309 }
            java.lang.Long r8 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x1309 }
            r13 = 0
            r9[r13] = r8     // Catch:{ Exception -> 0x1309 }
            java.lang.Integer r8 = java.lang.Integer.valueOf(r34)     // Catch:{ Exception -> 0x1309 }
            r13 = 1
            r9[r13] = r8     // Catch:{ Exception -> 0x1309 }
            java.lang.String r1 = java.lang.String.format(r7, r1, r9)     // Catch:{ Exception -> 0x1309 }
            r7 = 0
            java.lang.Object[] r8 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x1309 }
            org.telegram.SQLite.SQLiteCursor r1 = r3.queryFinalized(r1, r8)     // Catch:{ Exception -> 0x1309 }
            boolean r2 = r1.next()     // Catch:{ Exception -> 0x1309 }
            if (r2 == 0) goto L_0x12e4
            r2 = 0
            int r3 = r1.intValue(r2)     // Catch:{ Exception -> 0x1309 }
            r2 = r3
            goto L_0x12e6
        L_0x12e4:
            r2 = r21
        L_0x12e6:
            r1.dispose()     // Catch:{ Exception -> 0x12ef }
            r1 = r2
            r44 = r5
            r5 = r34
            goto L_0x1321
        L_0x12ef:
            r0 = move-exception
            r8 = r60
            r13 = r0
            r1 = r2
            r3 = r6
            r2 = r24
            r7 = r28
            r4 = r33
            r35 = r48
            r6 = r5
            r5 = r34
            goto L_0x1CLASSNAME
        L_0x1302:
            r44 = r5
            r1 = r21
            r5 = r34
            goto L_0x1321
        L_0x1309:
            r0 = move-exception
            r8 = r60
            r13 = r0
            r3 = r6
            r1 = r21
            r2 = r24
            r7 = r28
            r4 = r33
            r35 = r48
            r6 = r5
            r5 = r34
            goto L_0x1CLASSNAME
        L_0x131d:
            r1 = r21
            r5 = r34
        L_0x1321:
            if (r6 > r1) goto L_0x1331
            r7 = r52
            if (r1 >= r7) goto L_0x1328
            goto L_0x1333
        L_0x1328:
            int r2 = r1 - r6
            int r3 = r6 + 10
            r33 = r2
            r6 = r44
            goto L_0x1345
        L_0x1331:
            r7 = r52
        L_0x1333:
            int r2 = r1 + 10
            int r2 = java.lang.Math.max(r6, r2)     // Catch:{ Exception -> 0x139d }
            if (r1 >= r7) goto L_0x1342
            r1 = 0
            r3 = 0
            r5 = 0
            r6 = r5
            r5 = r3
            r3 = r2
            goto L_0x1345
        L_0x1342:
            r3 = r2
            r6 = r44
        L_0x1345:
            org.telegram.SQLite.SQLiteDatabase r2 = r12.database     // Catch:{ Exception -> 0x138d }
            java.util.Locale r8 = java.util.Locale.US     // Catch:{ Exception -> 0x138d }
            java.lang.StringBuilder r9 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x138d }
            r9.<init>()     // Catch:{ Exception -> 0x138d }
            r9.append(r4)     // Catch:{ Exception -> 0x138d }
            r9.append(r14)     // Catch:{ Exception -> 0x138d }
            java.lang.String r4 = " WHERE m.uid = %d ORDER BY m.mid ASC LIMIT %d,%d"
            r9.append(r4)     // Catch:{ Exception -> 0x138d }
            java.lang.String r4 = r9.toString()     // Catch:{ Exception -> 0x138d }
            r9 = 3
            java.lang.Object[] r13 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x138d }
            java.lang.Long r9 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x138d }
            r15 = 0
            r13[r15] = r9     // Catch:{ Exception -> 0x138d }
            java.lang.Integer r9 = java.lang.Integer.valueOf(r33)     // Catch:{ Exception -> 0x138d }
            r15 = 1
            r13[r15] = r9     // Catch:{ Exception -> 0x138d }
            java.lang.Integer r9 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x138d }
            r15 = 2
            r13[r15] = r9     // Catch:{ Exception -> 0x138d }
            java.lang.String r4 = java.lang.String.format(r8, r4, r13)     // Catch:{ Exception -> 0x138d }
            r8 = 0
            java.lang.Object[] r9 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x138d }
            org.telegram.SQLite.SQLiteCursor r2 = r2.queryFinalized(r4, r9)     // Catch:{ Exception -> 0x138d }
            r21 = r1
            r1 = r2
            r8 = r17
            r2 = r24
            r4 = r33
            r9 = r45
            goto L_0x145c
        L_0x138d:
            r0 = move-exception
            r8 = r60
            r13 = r0
            r52 = r7
            r2 = r24
            r7 = r28
            r4 = r33
            r35 = r48
            goto L_0x1CLASSNAME
        L_0x139d:
            r0 = move-exception
            r8 = r60
            r13 = r0
            r3 = r6
            r52 = r7
            r2 = r24
            r7 = r28
            r4 = r33
            r6 = r44
            r35 = r48
            goto L_0x1CLASSNAME
        L_0x13b0:
            r7 = r52
        L_0x13b2:
            org.telegram.SQLite.SQLiteDatabase r1 = r12.database     // Catch:{ Exception -> 0x1CLASSNAME }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x1CLASSNAME }
            r4 = 1
            java.lang.Object[] r8 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x1CLASSNAME }
            java.lang.Long r4 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x1CLASSNAME }
            r9 = 0
            r8[r9] = r4     // Catch:{ Exception -> 0x1CLASSNAME }
            java.lang.String r2 = java.lang.String.format(r2, r5, r8)     // Catch:{ Exception -> 0x1CLASSNAME }
            java.lang.Object[] r4 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x1CLASSNAME }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r2, r4)     // Catch:{ Exception -> 0x1CLASSNAME }
            boolean r2 = r1.next()     // Catch:{ Exception -> 0x1CLASSNAME }
            if (r2 == 0) goto L_0x13ee
            r2 = 0
            int r4 = r1.intValue(r2)     // Catch:{ Exception -> 0x13d7 }
            r2 = r4
            goto L_0x13f0
        L_0x13d7:
            r0 = move-exception
            r8 = r60
            r13 = r0
            r3 = r6
            r52 = r7
            r1 = r21
            r2 = r24
            r7 = r28
            r4 = r33
            r5 = r34
            r6 = r44
            r35 = r48
            goto L_0x1CLASSNAME
        L_0x13ee:
            r2 = r44
        L_0x13f0:
            r1.dispose()     // Catch:{ Exception -> 0x1CLASSNAME }
            org.telegram.SQLite.SQLiteDatabase r4 = r12.database     // Catch:{ Exception -> 0x1CLASSNAME }
            java.util.Locale r5 = java.util.Locale.US     // Catch:{ Exception -> 0x1CLASSNAME }
            java.lang.StringBuilder r8 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x1CLASSNAME }
            r8.<init>()     // Catch:{ Exception -> 0x1CLASSNAME }
            r8.append(r3)     // Catch:{ Exception -> 0x1CLASSNAME }
            r8.append(r14)     // Catch:{ Exception -> 0x1CLASSNAME }
            java.lang.String r3 = " WHERE m.uid = %d AND m.mid <= %d ORDER BY m.mid DESC LIMIT %d) UNION SELECT * FROM ("
            r8.append(r3)     // Catch:{ Exception -> 0x1CLASSNAME }
            r8.append(r14)     // Catch:{ Exception -> 0x1CLASSNAME }
            java.lang.String r3 = " WHERE m.uid = %d AND m.mid > %d ORDER BY m.mid ASC LIMIT %d)"
            r8.append(r3)     // Catch:{ Exception -> 0x1CLASSNAME }
            java.lang.String r3 = r8.toString()     // Catch:{ Exception -> 0x1CLASSNAME }
            r8 = 6
            java.lang.Object[] r9 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x1CLASSNAME }
            java.lang.Long r8 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x1CLASSNAME }
            r13 = 0
            r9[r13] = r8     // Catch:{ Exception -> 0x1CLASSNAME }
            java.lang.Integer r8 = java.lang.Integer.valueOf(r16)     // Catch:{ Exception -> 0x1CLASSNAME }
            r13 = 1
            r9[r13] = r8     // Catch:{ Exception -> 0x1CLASSNAME }
            int r8 = r6 / 2
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x1CLASSNAME }
            r13 = 2
            r9[r13] = r8     // Catch:{ Exception -> 0x1CLASSNAME }
            java.lang.Long r8 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x1CLASSNAME }
            r13 = 3
            r9[r13] = r8     // Catch:{ Exception -> 0x1CLASSNAME }
            java.lang.Integer r8 = java.lang.Integer.valueOf(r16)     // Catch:{ Exception -> 0x1CLASSNAME }
            r13 = 4
            r9[r13] = r8     // Catch:{ Exception -> 0x1CLASSNAME }
            int r8 = r6 / 2
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x1CLASSNAME }
            r13 = 5
            r9[r13] = r8     // Catch:{ Exception -> 0x1CLASSNAME }
            java.lang.String r3 = java.lang.String.format(r5, r3, r9)     // Catch:{ Exception -> 0x1CLASSNAME }
            r5 = 0
            java.lang.Object[] r8 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x1CLASSNAME }
            org.telegram.SQLite.SQLiteCursor r3 = r4.queryFinalized(r3, r8)     // Catch:{ Exception -> 0x1CLASSNAME }
            r1 = r3
            r3 = r6
            r8 = r17
            r4 = r33
            r5 = r34
            r9 = r45
            r6 = r2
            r2 = r24
        L_0x145c:
            r13 = 2147483647(0x7fffffff, float:NaN)
            r15 = -2147483648(0xfffffffvar_, float:-0.0)
            r17 = 0
            if (r1 == 0) goto L_0x18e9
        L_0x1465:
            boolean r24 = r1.next()     // Catch:{ Exception -> 0x18c6 }
            if (r24 == 0) goto L_0x188c
            int r23 = r23 + 1
            if (r73 != 0) goto L_0x1470
            goto L_0x1465
        L_0x1470:
            r24 = r3
            r3 = 1
            org.telegram.tgnet.NativeByteBuffer r25 = r1.byteBufferValue(r3)     // Catch:{ Exception -> 0x1869 }
            r3 = r25
            if (r3 == 0) goto L_0x182c
            r25 = r4
            r33 = r5
            r4 = 0
            int r5 = r3.readInt32(r4)     // Catch:{ Exception -> 0x180b }
            org.telegram.tgnet.TLRPC$Message r5 = org.telegram.tgnet.TLRPC.Message.TLdeserialize(r3, r5, r4)     // Catch:{ Exception -> 0x180b }
            r4 = r5
            r34 = r6
            r5 = 2
            int r6 = r1.intValue(r5)     // Catch:{ Exception -> 0x17ea }
            r4.send_state = r6     // Catch:{ Exception -> 0x17ea }
            r5 = 3
            long r43 = r1.longValue(r5)     // Catch:{ Exception -> 0x17ea }
            r5 = r43
            r52 = r7
            int r7 = (int) r5
            r4.id = r7     // Catch:{ Exception -> 0x17cb }
            r43 = -4294967296(0xfffffffvar_, double:NaN)
            long r45 = r5 & r43
            int r7 = (r45 > r43 ? 1 : (r45 == r43 ? 0 : -1))
            if (r7 != 0) goto L_0x14f7
            int r7 = r4.id     // Catch:{ Exception -> 0x14dd }
            if (r7 <= 0) goto L_0x14f7
            if (r17 != 0) goto L_0x14cf
            java.util.ArrayList r7 = new java.util.ArrayList     // Catch:{ Exception -> 0x14b7 }
            r7.<init>()     // Catch:{ Exception -> 0x14b7 }
            r17 = r7
            goto L_0x14d1
        L_0x14b7:
            r0 = move-exception
            r13 = r0
            r17 = r8
            r45 = r9
            r1 = r21
            r3 = r24
            r4 = r25
            r7 = r28
            r5 = r33
            r6 = r34
            r35 = r48
            r8 = r60
            goto L_0x1CLASSNAME
        L_0x14cf:
            r7 = r17
        L_0x14d1:
            r43 = r10
            java.lang.Long r10 = java.lang.Long.valueOf(r5)     // Catch:{ Exception -> 0x150a }
            r7.add(r10)     // Catch:{ Exception -> 0x150a }
            r17 = r7
            goto L_0x14f9
        L_0x14dd:
            r0 = move-exception
            r43 = r10
            r13 = r0
            r17 = r8
            r45 = r9
            r1 = r21
            r3 = r24
            r4 = r25
            r7 = r28
            r5 = r33
            r6 = r34
            r35 = r48
            r8 = r60
            goto L_0x1CLASSNAME
        L_0x14f7:
            r43 = r10
        L_0x14f9:
            int r7 = r4.id     // Catch:{ Exception -> 0x17ac }
            if (r7 <= 0) goto L_0x1524
            int r7 = r4.send_state     // Catch:{ Exception -> 0x150a }
            if (r7 == 0) goto L_0x1524
            int r7 = r4.send_state     // Catch:{ Exception -> 0x150a }
            r10 = 3
            if (r7 == r10) goto L_0x1524
            r7 = 0
            r4.send_state = r7     // Catch:{ Exception -> 0x150a }
            goto L_0x1524
        L_0x150a:
            r0 = move-exception
            r13 = r0
            r17 = r8
            r45 = r9
            r1 = r21
            r3 = r24
            r4 = r25
            r7 = r28
            r5 = r33
            r6 = r34
            r10 = r43
            r35 = r48
            r8 = r60
            goto L_0x1CLASSNAME
        L_0x1524:
            r44 = r5
            r6 = r60
            int r5 = (r6 > r48 ? 1 : (r6 == r48 ? 0 : -1))
            if (r5 != 0) goto L_0x1549
            r5 = 1
            r4.out = r5     // Catch:{ Exception -> 0x1530 }
            goto L_0x1549
        L_0x1530:
            r0 = move-exception
            r13 = r0
            r17 = r8
            r45 = r9
            r1 = r21
            r3 = r24
            r4 = r25
            r5 = r33
            r10 = r43
            r35 = r48
            r8 = r6
            r7 = r28
            r6 = r34
            goto L_0x1CLASSNAME
        L_0x1549:
            r10 = r8
            r5 = r9
            r8 = r48
            r4.readAttachPath(r3, r8)     // Catch:{ Exception -> 0x1790 }
            r3.reuse()     // Catch:{ Exception -> 0x1790 }
            r46 = r3
            r48 = r10
            r3 = 0
            int r10 = r1.intValue(r3)     // Catch:{ Exception -> 0x1776 }
            org.telegram.messenger.MessageObject.setUnreadFlags(r4, r10)     // Catch:{ Exception -> 0x1776 }
            int r3 = r4.id     // Catch:{ Exception -> 0x1776 }
            if (r3 <= 0) goto L_0x158b
            int r3 = r4.id     // Catch:{ Exception -> 0x1572 }
            int r3 = java.lang.Math.min(r3, r13)     // Catch:{ Exception -> 0x1572 }
            r13 = r3
            int r3 = r4.id     // Catch:{ Exception -> 0x1572 }
            int r3 = java.lang.Math.max(r3, r15)     // Catch:{ Exception -> 0x1572 }
            r15 = r3
            goto L_0x158b
        L_0x1572:
            r0 = move-exception
            r13 = r0
            r45 = r5
            r35 = r8
            r1 = r21
            r3 = r24
            r4 = r25
            r5 = r33
            r10 = r43
            r17 = r48
            r8 = r6
            r7 = r28
            r6 = r34
            goto L_0x1CLASSNAME
        L_0x158b:
            r3 = 4
            int r10 = r1.intValue(r3)     // Catch:{ Exception -> 0x1776 }
            r4.date = r10     // Catch:{ Exception -> 0x1776 }
            r4.dialog_id = r6     // Catch:{ Exception -> 0x1776 }
            int r3 = r4.flags     // Catch:{ Exception -> 0x1776 }
            r3 = r3 & 1024(0x400, float:1.435E-42)
            if (r3 == 0) goto L_0x15aa
            r3 = 7
            int r10 = r1.intValue(r3)     // Catch:{ Exception -> 0x1572 }
            r4.views = r10     // Catch:{ Exception -> 0x1572 }
            r10 = 11
            int r10 = r1.intValue(r10)     // Catch:{ Exception -> 0x1572 }
            r4.forwards = r10     // Catch:{ Exception -> 0x1572 }
            goto L_0x15ab
        L_0x15aa:
            r3 = 7
        L_0x15ab:
            r10 = 12
            org.telegram.tgnet.NativeByteBuffer r10 = r1.byteBufferValue(r10)     // Catch:{ Exception -> 0x1776 }
            if (r10 == 0) goto L_0x15c7
            r49 = r13
            r3 = 0
            int r13 = r10.readInt32(r3)     // Catch:{ Exception -> 0x1572 }
            org.telegram.tgnet.TLRPC$MessageReplies r13 = org.telegram.tgnet.TLRPC.MessageReplies.TLdeserialize(r10, r13, r3)     // Catch:{ Exception -> 0x1572 }
            r3 = r13
            if (r3 == 0) goto L_0x15c3
            r4.replies = r3     // Catch:{ Exception -> 0x1572 }
        L_0x15c3:
            r10.reuse()     // Catch:{ Exception -> 0x1572 }
            goto L_0x15c9
        L_0x15c7:
            r49 = r13
        L_0x15c9:
            boolean r3 = org.telegram.messenger.DialogObject.isEncryptedDialog(r60)     // Catch:{ Exception -> 0x1776 }
            if (r3 != 0) goto L_0x15db
            int r3 = r4.ttl     // Catch:{ Exception -> 0x1572 }
            if (r3 != 0) goto L_0x15db
            r3 = 8
            int r3 = r1.intValue(r3)     // Catch:{ Exception -> 0x1572 }
            r4.ttl = r3     // Catch:{ Exception -> 0x1572 }
        L_0x15db:
            r3 = 9
            int r3 = r1.intValue(r3)     // Catch:{ Exception -> 0x1776 }
            if (r3 == 0) goto L_0x15e6
            r3 = 1
            r4.mentioned = r3     // Catch:{ Exception -> 0x1572 }
        L_0x15e6:
            r3 = 10
            int r13 = r1.intValue(r3)     // Catch:{ Exception -> 0x1776 }
            r22 = r13 & 1
            if (r22 == 0) goto L_0x15f4
            r3 = 0
            r4.stickerVerified = r3     // Catch:{ Exception -> 0x1572 }
            goto L_0x15fb
        L_0x15f4:
            r3 = r13 & 2
            if (r3 == 0) goto L_0x15fb
            r3 = 2
            r4.stickerVerified = r3     // Catch:{ Exception -> 0x1572 }
        L_0x15fb:
            r3 = r28
            r28 = r10
            java.util.ArrayList r10 = r3.messages     // Catch:{ Exception -> 0x175d }
            r10.add(r4)     // Catch:{ Exception -> 0x175d }
            r10 = r31
            r31 = r13
            r13 = r32
            addUsersAndChatsFromMessage(r4, r10, r13)     // Catch:{ Exception -> 0x175d }
            r32 = r14
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r14 = r4.reply_to     // Catch:{ Exception -> 0x175d }
            if (r14 == 0) goto L_0x16f8
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r14 = r4.reply_to     // Catch:{ Exception -> 0x175d }
            int r14 = r14.reply_to_msg_id     // Catch:{ Exception -> 0x175d }
            if (r14 != 0) goto L_0x1644
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r14 = r4.reply_to     // Catch:{ Exception -> 0x162c }
            r53 = r15
            long r14 = r14.reply_to_random_id     // Catch:{ Exception -> 0x162c }
            r36 = 0
            int r54 = (r14 > r36 ? 1 : (r14 == r36 ? 0 : -1))
            if (r54 == 0) goto L_0x1626
            goto L_0x1646
        L_0x1626:
            r54 = r8
            r8 = r50
            goto L_0x16fe
        L_0x162c:
            r0 = move-exception
            r13 = r0
            r45 = r5
            r35 = r8
            r1 = r21
            r4 = r25
            r5 = r33
            r10 = r43
            r17 = r48
            r8 = r6
            r6 = r34
            r7 = r3
            r3 = r24
            goto L_0x1CLASSNAME
        L_0x1644:
            r53 = r15
        L_0x1646:
            r14 = 6
            boolean r15 = r1.isNull(r14)     // Catch:{ Exception -> 0x175d }
            if (r15 != 0) goto L_0x168b
            org.telegram.tgnet.NativeByteBuffer r15 = r1.byteBufferValue(r14)     // Catch:{ Exception -> 0x1672 }
            if (r15 == 0) goto L_0x166f
            r14 = 0
            int r6 = r15.readInt32(r14)     // Catch:{ Exception -> 0x1672 }
            org.telegram.tgnet.TLRPC$Message r6 = org.telegram.tgnet.TLRPC.Message.TLdeserialize(r15, r6, r14)     // Catch:{ Exception -> 0x1672 }
            r4.replyMessage = r6     // Catch:{ Exception -> 0x1672 }
            org.telegram.tgnet.TLRPC$Message r6 = r4.replyMessage     // Catch:{ Exception -> 0x1672 }
            r6.readAttachPath(r15, r8)     // Catch:{ Exception -> 0x1672 }
            r15.reuse()     // Catch:{ Exception -> 0x1672 }
            org.telegram.tgnet.TLRPC$Message r6 = r4.replyMessage     // Catch:{ Exception -> 0x1672 }
            if (r6 == 0) goto L_0x166f
            org.telegram.tgnet.TLRPC$Message r6 = r4.replyMessage     // Catch:{ Exception -> 0x1672 }
            addUsersAndChatsFromMessage(r6, r10, r13)     // Catch:{ Exception -> 0x1672 }
        L_0x166f:
            r46 = r15
            goto L_0x168b
        L_0x1672:
            r0 = move-exception
            r13 = r0
            r7 = r3
            r45 = r5
            r35 = r8
            r1 = r21
            r3 = r24
            r4 = r25
            r5 = r33
            r6 = r34
            r10 = r43
            r17 = r48
            r8 = r60
            goto L_0x1CLASSNAME
        L_0x168b:
            org.telegram.tgnet.TLRPC$Message r6 = r4.replyMessage     // Catch:{ Exception -> 0x175d }
            if (r6 != 0) goto L_0x16f3
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r6 = r4.reply_to     // Catch:{ Exception -> 0x175d }
            int r6 = r6.reply_to_msg_id     // Catch:{ Exception -> 0x175d }
            if (r6 == 0) goto L_0x16a5
            r6 = r29
            r7 = r30
            addReplyMessages(r4, r7, r6)     // Catch:{ Exception -> 0x1672 }
            r29 = r6
            r30 = r7
            r54 = r8
            r8 = r50
            goto L_0x16fe
        L_0x16a5:
            r6 = r29
            r7 = r30
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r14 = r4.reply_to     // Catch:{ Exception -> 0x175d }
            long r14 = r14.reply_to_random_id     // Catch:{ Exception -> 0x175d }
            r29 = r6
            r6 = r51
            java.lang.Object r14 = r6.get(r14)     // Catch:{ Exception -> 0x175d }
            java.util.ArrayList r14 = (java.util.ArrayList) r14     // Catch:{ Exception -> 0x175d }
            if (r14 != 0) goto L_0x16cb
            java.util.ArrayList r15 = new java.util.ArrayList     // Catch:{ Exception -> 0x175d }
            r15.<init>()     // Catch:{ Exception -> 0x175d }
            r14 = r15
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r15 = r4.reply_to     // Catch:{ Exception -> 0x175d }
            r30 = r7
            r54 = r8
            long r7 = r15.reply_to_random_id     // Catch:{ Exception -> 0x18ad }
            r6.put(r7, r14)     // Catch:{ Exception -> 0x18ad }
            goto L_0x16cf
        L_0x16cb:
            r30 = r7
            r54 = r8
        L_0x16cf:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r7 = r4.reply_to     // Catch:{ Exception -> 0x18ad }
            long r7 = r7.reply_to_random_id     // Catch:{ Exception -> 0x18ad }
            java.lang.Long r7 = java.lang.Long.valueOf(r7)     // Catch:{ Exception -> 0x18ad }
            r8 = r50
            boolean r7 = r8.contains(r7)     // Catch:{ Exception -> 0x18ad }
            if (r7 != 0) goto L_0x16ed
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r7 = r4.reply_to     // Catch:{ Exception -> 0x18ad }
            r51 = r6
            long r6 = r7.reply_to_random_id     // Catch:{ Exception -> 0x18ad }
            java.lang.Long r6 = java.lang.Long.valueOf(r6)     // Catch:{ Exception -> 0x18ad }
            r8.add(r6)     // Catch:{ Exception -> 0x18ad }
            goto L_0x16ef
        L_0x16ed:
            r51 = r6
        L_0x16ef:
            r14.add(r4)     // Catch:{ Exception -> 0x18ad }
            goto L_0x16fe
        L_0x16f3:
            r54 = r8
            r8 = r50
            goto L_0x16fe
        L_0x16f8:
            r54 = r8
            r53 = r15
            r8 = r50
        L_0x16fe:
            boolean r6 = org.telegram.messenger.DialogObject.isEncryptedDialog(r60)     // Catch:{ Exception -> 0x18ad }
            if (r6 == 0) goto L_0x1712
            r6 = 5
            boolean r7 = r1.isNull(r6)     // Catch:{ Exception -> 0x18ad }
            if (r7 != 0) goto L_0x1713
            long r14 = r1.longValue(r6)     // Catch:{ Exception -> 0x18ad }
            r4.random_id = r14     // Catch:{ Exception -> 0x18ad }
            goto L_0x1713
        L_0x1712:
            r6 = 5
        L_0x1713:
            boolean r7 = org.telegram.messenger.MessageObject.isSecretMedia(r4)     // Catch:{ Exception -> 0x18ad }
            if (r7 == 0) goto L_0x1759
            org.telegram.SQLite.SQLiteDatabase r7 = r12.database     // Catch:{ Exception -> 0x1754 }
            java.util.Locale r9 = java.util.Locale.US     // Catch:{ Exception -> 0x1754 }
            java.lang.String r14 = "SELECT date FROM enc_tasks_v4 WHERE mid = %d AND uid = %d AND media = 1"
            r15 = 2
            java.lang.Object[] r6 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x1754 }
            int r15 = r4.id     // Catch:{ Exception -> 0x1754 }
            java.lang.Integer r15 = java.lang.Integer.valueOf(r15)     // Catch:{ Exception -> 0x1754 }
            r42 = 0
            r6[r42] = r15     // Catch:{ Exception -> 0x1754 }
            long r56 = org.telegram.messenger.MessageObject.getDialogId(r4)     // Catch:{ Exception -> 0x1754 }
            java.lang.Long r15 = java.lang.Long.valueOf(r56)     // Catch:{ Exception -> 0x1754 }
            r35 = 1
            r6[r35] = r15     // Catch:{ Exception -> 0x1754 }
            java.lang.String r6 = java.lang.String.format(r9, r14, r6)     // Catch:{ Exception -> 0x1754 }
            r9 = 0
            java.lang.Object[] r14 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x1754 }
            org.telegram.SQLite.SQLiteCursor r6 = r7.queryFinalized(r6, r14)     // Catch:{ Exception -> 0x1754 }
            boolean r7 = r6.next()     // Catch:{ Exception -> 0x1754 }
            if (r7 == 0) goto L_0x1750
            r7 = 0
            int r9 = r6.intValue(r7)     // Catch:{ Exception -> 0x1754 }
            r4.destroyTime = r9     // Catch:{ Exception -> 0x1754 }
        L_0x1750:
            r6.dispose()     // Catch:{ Exception -> 0x1754 }
            goto L_0x1759
        L_0x1754:
            r0 = move-exception
            r6 = r0
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r6)     // Catch:{ Exception -> 0x18ad }
        L_0x1759:
            r15 = r53
            goto L_0x184a
        L_0x175d:
            r0 = move-exception
            r13 = r0
            r7 = r3
            r45 = r5
            r35 = r8
            r1 = r21
            r3 = r24
            r4 = r25
            r5 = r33
            r6 = r34
            r10 = r43
            r17 = r48
            r8 = r60
            goto L_0x1CLASSNAME
        L_0x1776:
            r0 = move-exception
            r13 = r0
            r45 = r5
            r35 = r8
            r1 = r21
            r3 = r24
            r4 = r25
            r7 = r28
            r5 = r33
            r6 = r34
            r10 = r43
            r17 = r48
            r8 = r60
            goto L_0x1CLASSNAME
        L_0x1790:
            r0 = move-exception
            r48 = r10
            r13 = r0
            r45 = r5
            r35 = r8
            r1 = r21
            r3 = r24
            r4 = r25
            r7 = r28
            r5 = r33
            r6 = r34
            r10 = r43
            r17 = r48
            r8 = r60
            goto L_0x1CLASSNAME
        L_0x17ac:
            r0 = move-exception
            r5 = r9
            r54 = r48
            r48 = r8
            r8 = r60
            r13 = r0
            r45 = r5
            r1 = r21
            r3 = r24
            r4 = r25
            r7 = r28
            r5 = r33
            r6 = r34
            r10 = r43
            r17 = r48
            r35 = r54
            goto L_0x1CLASSNAME
        L_0x17cb:
            r0 = move-exception
            r5 = r9
            r43 = r10
            r54 = r48
            r48 = r8
            r8 = r60
            r13 = r0
            r45 = r5
            r1 = r21
            r3 = r24
            r4 = r25
            r7 = r28
            r5 = r33
            r6 = r34
            r17 = r48
            r35 = r54
            goto L_0x1CLASSNAME
        L_0x17ea:
            r0 = move-exception
            r52 = r7
            r5 = r9
            r43 = r10
            r54 = r48
            r48 = r8
            r8 = r60
            r13 = r0
            r45 = r5
            r1 = r21
            r3 = r24
            r4 = r25
            r7 = r28
            r5 = r33
            r6 = r34
            r17 = r48
            r35 = r54
            goto L_0x1CLASSNAME
        L_0x180b:
            r0 = move-exception
            r34 = r6
            r52 = r7
            r5 = r9
            r43 = r10
            r54 = r48
            r48 = r8
            r8 = r60
            r13 = r0
            r45 = r5
            r1 = r21
            r3 = r24
            r4 = r25
            r7 = r28
            r5 = r33
            r17 = r48
            r35 = r54
            goto L_0x1CLASSNAME
        L_0x182c:
            r46 = r3
            r25 = r4
            r33 = r5
            r34 = r6
            r52 = r7
            r5 = r9
            r43 = r10
            r4 = r13
            r3 = r28
            r10 = r31
            r13 = r32
            r54 = r48
            r48 = r8
            r32 = r14
            r8 = r50
            r49 = r4
        L_0x184a:
            r28 = r3
            r9 = r5
            r50 = r8
            r31 = r10
            r3 = r24
            r4 = r25
            r14 = r32
            r5 = r33
            r6 = r34
            r10 = r43
            r8 = r48
            r7 = r52
            r32 = r13
            r13 = r49
            r48 = r54
            goto L_0x1465
        L_0x1869:
            r0 = move-exception
            r25 = r4
            r33 = r5
            r34 = r6
            r52 = r7
            r5 = r9
            r43 = r10
            r54 = r48
            r48 = r8
            r8 = r60
            r13 = r0
            r45 = r5
            r1 = r21
            r3 = r24
            r7 = r28
            r5 = r33
            r17 = r48
            r35 = r54
            goto L_0x1CLASSNAME
        L_0x188c:
            r24 = r3
            r25 = r4
            r33 = r5
            r34 = r6
            r52 = r7
            r5 = r9
            r43 = r10
            r4 = r13
            r3 = r28
            r10 = r31
            r13 = r32
            r54 = r48
            r48 = r8
            r32 = r14
            r8 = r50
            r1.dispose()     // Catch:{ Exception -> 0x18ad }
            goto L_0x1905
        L_0x18ad:
            r0 = move-exception
            r8 = r60
            r13 = r0
            r7 = r3
            r45 = r5
            r1 = r21
            r3 = r24
            r4 = r25
            r5 = r33
            r6 = r34
            r10 = r43
            r17 = r48
            r35 = r54
            goto L_0x1CLASSNAME
        L_0x18c6:
            r0 = move-exception
            r24 = r3
            r25 = r4
            r33 = r5
            r34 = r6
            r52 = r7
            r5 = r9
            r43 = r10
            r54 = r48
            r48 = r8
            r8 = r60
            r13 = r0
            r45 = r5
            r1 = r21
            r7 = r28
            r5 = r33
            r17 = r48
            r35 = r54
            goto L_0x1CLASSNAME
        L_0x18e9:
            r24 = r3
            r25 = r4
            r33 = r5
            r34 = r6
            r52 = r7
            r5 = r9
            r43 = r10
            r4 = r13
            r3 = r28
            r10 = r31
            r13 = r32
            r54 = r48
            r48 = r8
            r32 = r14
            r8 = r50
        L_0x1905:
            java.util.ArrayList r6 = r3.messages     // Catch:{ Exception -> 0x1bf9 }
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda106 r7 = org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda106.INSTANCE     // Catch:{ Exception -> 0x1bf9 }
            java.util.Collections.sort(r6, r7)     // Catch:{ Exception -> 0x1bf9 }
            boolean r6 = org.telegram.messenger.DialogObject.isEncryptedDialog(r60)     // Catch:{ Exception -> 0x1bf9 }
            if (r6 != 0) goto L_0x1988
            r6 = 3
            if (r11 == r6) goto L_0x1923
            r6 = 4
            if (r11 == r6) goto L_0x1923
            r6 = 2
            if (r11 != r6) goto L_0x1920
            if (r5 == 0) goto L_0x1920
            if (r18 != 0) goto L_0x1920
            goto L_0x1923
        L_0x1920:
            r6 = r48
            goto L_0x193f
        L_0x1923:
            java.util.ArrayList r6 = r3.messages     // Catch:{ Exception -> 0x196d }
            boolean r6 = r6.isEmpty()     // Catch:{ Exception -> 0x196d }
            if (r6 != 0) goto L_0x193d
            r6 = r48
            if (r4 > r6) goto L_0x1931
            if (r15 >= r6) goto L_0x193f
        L_0x1931:
            r10.clear()     // Catch:{ Exception -> 0x1954 }
            r13.clear()     // Catch:{ Exception -> 0x1954 }
            java.util.ArrayList r7 = r3.messages     // Catch:{ Exception -> 0x1954 }
            r7.clear()     // Catch:{ Exception -> 0x1954 }
            goto L_0x193f
        L_0x193d:
            r6 = r48
        L_0x193f:
            r7 = 4
            if (r11 == r7) goto L_0x1945
            r7 = 3
            if (r11 != r7) goto L_0x198a
        L_0x1945:
            java.util.ArrayList r7 = r3.messages     // Catch:{ Exception -> 0x1954 }
            int r7 = r7.size()     // Catch:{ Exception -> 0x1954 }
            r9 = 1
            if (r7 != r9) goto L_0x198a
            java.util.ArrayList r7 = r3.messages     // Catch:{ Exception -> 0x1954 }
            r7.clear()     // Catch:{ Exception -> 0x1954 }
            goto L_0x198a
        L_0x1954:
            r0 = move-exception
            r8 = r60
            r13 = r0
            r7 = r3
            r45 = r5
            r17 = r6
            r1 = r21
            r3 = r24
            r4 = r25
            r5 = r33
            r6 = r34
            r10 = r43
            r35 = r54
            goto L_0x1CLASSNAME
        L_0x196d:
            r0 = move-exception
            r6 = r48
            r8 = r60
            r13 = r0
            r7 = r3
            r45 = r5
            r17 = r6
            r1 = r21
            r3 = r24
            r4 = r25
            r5 = r33
            r6 = r34
            r10 = r43
            r35 = r54
            goto L_0x1CLASSNAME
        L_0x1988:
            r6 = r48
        L_0x198a:
            if (r2 == 0) goto L_0x19fe
            org.telegram.SQLite.SQLiteDatabase r7 = r12.database     // Catch:{ Exception -> 0x19e5 }
            java.util.Locale r9 = java.util.Locale.US     // Catch:{ Exception -> 0x19e5 }
            java.lang.String r14 = "SELECT COUNT(mid) FROM messages_v2 WHERE uid = %d AND mention = 1 AND read_state IN(0, 1)"
            r22 = r1
            r28 = r3
            r1 = 1
            java.lang.Object[] r3 = new java.lang.Object[r1]     // Catch:{ Exception -> 0x19cb }
            java.lang.Long r1 = java.lang.Long.valueOf(r60)     // Catch:{ Exception -> 0x19cb }
            r31 = r4
            r4 = 0
            r3[r4] = r1     // Catch:{ Exception -> 0x19cb }
            java.lang.String r1 = java.lang.String.format(r9, r14, r3)     // Catch:{ Exception -> 0x19cb }
            java.lang.Object[] r3 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x19cb }
            org.telegram.SQLite.SQLiteCursor r1 = r7.queryFinalized(r1, r3)     // Catch:{ Exception -> 0x19cb }
            boolean r3 = r1.next()     // Catch:{ Exception -> 0x19cb }
            if (r3 == 0) goto L_0x19bc
            r3 = 0
            int r4 = r1.intValue(r3)     // Catch:{ Exception -> 0x19cb }
            if (r2 == r4) goto L_0x19be
            int r2 = r2 * -1
            goto L_0x19be
        L_0x19bc:
            int r2 = r2 * -1
        L_0x19be:
            r1.dispose()     // Catch:{ Exception -> 0x19cb }
            r22 = r1
            r9 = r5
            r17 = r6
            r7 = r24
            r24 = r2
            goto L_0x1a0b
        L_0x19cb:
            r0 = move-exception
            r8 = r60
            r13 = r0
            r45 = r5
            r17 = r6
            r1 = r21
            r3 = r24
            r4 = r25
            r7 = r28
            r5 = r33
            r6 = r34
            r10 = r43
            r35 = r54
            goto L_0x1CLASSNAME
        L_0x19e5:
            r0 = move-exception
            r8 = r60
            r13 = r0
            r7 = r3
            r45 = r5
            r17 = r6
            r1 = r21
            r3 = r24
            r4 = r25
            r5 = r33
            r6 = r34
            r10 = r43
            r35 = r54
            goto L_0x1CLASSNAME
        L_0x19fe:
            r22 = r1
            r28 = r3
            r31 = r4
            r9 = r5
            r17 = r6
            r7 = r24
            r24 = r2
        L_0x1a0b:
            boolean r1 = r51.isEmpty()     // Catch:{ Exception -> 0x1bdd }
            java.lang.String r14 = ","
            if (r1 != 0) goto L_0x1b76
            org.telegram.SQLite.SQLiteDatabase r1 = r12.database     // Catch:{ Exception -> 0x1b5c }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x1b5c }
            java.lang.String r3 = "SELECT m.data, m.mid, m.date, r.random_id FROM randoms_v2 as r INNER JOIN messages_v2 as m ON r.mid = m.mid AND r.uid = m.uid WHERE r.random_id IN(%s)"
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x1b5c }
            java.lang.String r4 = android.text.TextUtils.join(r14, r8)     // Catch:{ Exception -> 0x1b5c }
            r6 = 0
            r5[r6] = r4     // Catch:{ Exception -> 0x1b5c }
            java.lang.String r2 = java.lang.String.format(r2, r3, r5)     // Catch:{ Exception -> 0x1b5c }
            java.lang.Object[] r3 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x1b5c }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r2, r3)     // Catch:{ Exception -> 0x1b5c }
        L_0x1a2d:
            boolean r2 = r1.next()     // Catch:{ Exception -> 0x1b5c }
            if (r2 == 0) goto L_0x1ad6
            r2 = 0
            org.telegram.tgnet.NativeByteBuffer r3 = r1.byteBufferValue(r2)     // Catch:{ Exception -> 0x1b5c }
            if (r3 == 0) goto L_0x1ac9
            int r4 = r3.readInt32(r2)     // Catch:{ Exception -> 0x1b5c }
            org.telegram.tgnet.TLRPC$Message r4 = org.telegram.tgnet.TLRPC.Message.TLdeserialize(r3, r4, r2)     // Catch:{ Exception -> 0x1b5c }
            r5 = r54
            r4.readAttachPath(r3, r5)     // Catch:{ Exception -> 0x1aaf }
            r3.reuse()     // Catch:{ Exception -> 0x1aaf }
            r15 = 1
            int r2 = r1.intValue(r15)     // Catch:{ Exception -> 0x1aaf }
            r4.id = r2     // Catch:{ Exception -> 0x1aaf }
            r2 = 2
            int r15 = r1.intValue(r2)     // Catch:{ Exception -> 0x1aaf }
            r4.date = r15     // Catch:{ Exception -> 0x1aaf }
            r48 = r5
            r15 = r7
            r6 = r60
            r4.dialog_id = r6     // Catch:{ Exception -> 0x1b43 }
            addUsersAndChatsFromMessage(r4, r10, r13)     // Catch:{ Exception -> 0x1b43 }
            r5 = 3
            long r38 = r1.longValue(r5)     // Catch:{ Exception -> 0x1b43 }
            r40 = r38
            r7 = r3
            r2 = r40
            r6 = r51
            java.lang.Object r22 = r6.get(r2)     // Catch:{ Exception -> 0x1b43 }
            java.util.ArrayList r22 = (java.util.ArrayList) r22     // Catch:{ Exception -> 0x1b43 }
            r31 = r22
            r6.remove(r2)     // Catch:{ Exception -> 0x1b43 }
            r5 = r31
            if (r5 == 0) goto L_0x1aaa
            r22 = 0
            r38 = r2
            r2 = r22
        L_0x1a83:
            int r3 = r5.size()     // Catch:{ Exception -> 0x1b43 }
            if (r2 >= r3) goto L_0x1aa7
            java.lang.Object r3 = r5.get(r2)     // Catch:{ Exception -> 0x1b43 }
            org.telegram.tgnet.TLRPC$Message r3 = (org.telegram.tgnet.TLRPC.Message) r3     // Catch:{ Exception -> 0x1b43 }
            r3.replyMessage = r4     // Catch:{ Exception -> 0x1b43 }
            r22 = r5
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r5 = r3.reply_to     // Catch:{ Exception -> 0x1b43 }
            if (r5 == 0) goto L_0x1aa0
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r5 = r3.reply_to     // Catch:{ Exception -> 0x1b43 }
            r31 = r3
            int r3 = r4.id     // Catch:{ Exception -> 0x1b43 }
            r5.reply_to_msg_id = r3     // Catch:{ Exception -> 0x1b43 }
            goto L_0x1aa2
        L_0x1aa0:
            r31 = r3
        L_0x1aa2:
            int r2 = r2 + 1
            r5 = r22
            goto L_0x1a83
        L_0x1aa7:
            r22 = r5
            goto L_0x1acf
        L_0x1aaa:
            r38 = r2
            r22 = r5
            goto L_0x1acf
        L_0x1aaf:
            r0 = move-exception
            r15 = r7
            r13 = r0
            r35 = r5
            r45 = r9
            r3 = r15
            r1 = r21
            r2 = r24
            r4 = r25
            r7 = r28
            r5 = r33
            r6 = r34
            r10 = r43
            r8 = r60
            goto L_0x1CLASSNAME
        L_0x1ac9:
            r15 = r7
            r6 = r51
            r48 = r54
            r7 = r3
        L_0x1acf:
            r51 = r6
            r7 = r15
            r54 = r48
            goto L_0x1a2d
        L_0x1ad6:
            r15 = r7
            r6 = r51
            r48 = r54
            r1.dispose()     // Catch:{ Exception -> 0x1b43 }
            r2 = 0
            int r3 = r6.size()     // Catch:{ Exception -> 0x1b43 }
        L_0x1ae3:
            if (r2 >= r3) goto L_0x1b2f
            java.lang.Object r4 = r6.valueAt(r2)     // Catch:{ Exception -> 0x1b43 }
            java.util.ArrayList r4 = (java.util.ArrayList) r4     // Catch:{ Exception -> 0x1b43 }
            r5 = 0
            int r7 = r4.size()     // Catch:{ Exception -> 0x1b43 }
        L_0x1af0:
            if (r5 >= r7) goto L_0x1b20
            java.lang.Object r22 = r4.get(r5)     // Catch:{ Exception -> 0x1b43 }
            org.telegram.tgnet.TLRPC$Message r22 = (org.telegram.tgnet.TLRPC.Message) r22     // Catch:{ Exception -> 0x1b43 }
            r31 = r22
            r22 = r1
            r1 = r31
            r31 = r3
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r3 = r1.reply_to     // Catch:{ Exception -> 0x1b43 }
            if (r3 == 0) goto L_0x1b0f
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r3 = r1.reply_to     // Catch:{ Exception -> 0x1b43 }
            r51 = r6
            r35 = r7
            r6 = 0
            r3.reply_to_random_id = r6     // Catch:{ Exception -> 0x1b43 }
            goto L_0x1b15
        L_0x1b0f:
            r51 = r6
            r35 = r7
            r6 = 0
        L_0x1b15:
            int r5 = r5 + 1
            r1 = r22
            r3 = r31
            r7 = r35
            r6 = r51
            goto L_0x1af0
        L_0x1b20:
            r22 = r1
            r31 = r3
            r51 = r6
            r35 = r7
            r6 = 0
            int r2 = r2 + 1
            r6 = r51
            goto L_0x1ae3
        L_0x1b2f:
            r22 = r1
            r31 = r3
            r51 = r6
            r50 = r8
            r7 = r28
            r35 = r48
            r31 = r51
            r28 = r9
            r8 = r60
            goto L_0x1b92
        L_0x1b43:
            r0 = move-exception
            r13 = r0
            r45 = r9
            r3 = r15
            r1 = r21
            r2 = r24
            r4 = r25
            r7 = r28
            r5 = r33
            r6 = r34
            r10 = r43
            r35 = r48
            r8 = r60
            goto L_0x1CLASSNAME
        L_0x1b5c:
            r0 = move-exception
            r15 = r7
            r13 = r0
            r45 = r9
            r3 = r15
            r1 = r21
            r2 = r24
            r4 = r25
            r7 = r28
            r5 = r33
            r6 = r34
            r10 = r43
            r35 = r54
            r8 = r60
            goto L_0x1CLASSNAME
        L_0x1b76:
            r15 = r7
            r48 = r54
            r1 = r59
            r2 = r30
            r7 = r28
            r3 = r29
            r4 = r10
            r35 = r48
            r5 = r13
            r50 = r8
            r28 = r9
            r31 = r51
            r8 = r60
            r6 = r70
            r1.loadReplyMessages(r2, r3, r4, r5, r6)     // Catch:{ Exception -> 0x1bca }
        L_0x1b92:
            boolean r1 = r10.isEmpty()     // Catch:{ Exception -> 0x1bca }
            if (r1 != 0) goto L_0x1ba1
            java.lang.String r1 = android.text.TextUtils.join(r14, r10)     // Catch:{ Exception -> 0x1bca }
            java.util.ArrayList r2 = r7.users     // Catch:{ Exception -> 0x1bca }
            r12.getUsersInternal(r1, r2)     // Catch:{ Exception -> 0x1bca }
        L_0x1ba1:
            boolean r1 = r13.isEmpty()     // Catch:{ Exception -> 0x1bca }
            if (r1 != 0) goto L_0x1bb0
            java.lang.String r1 = android.text.TextUtils.join(r14, r13)     // Catch:{ Exception -> 0x1bca }
            java.util.ArrayList r2 = r7.chats     // Catch:{ Exception -> 0x1bca }
            r12.getChatsInternal(r1, r2)     // Catch:{ Exception -> 0x1bca }
        L_0x1bb0:
            r29 = r16
            r30 = r17
            r31 = r18
            r32 = r19
            r37 = r23
            r38 = r24
            r39 = r25
            r40 = r33
            r41 = r34
            r25 = r15
            r33 = r20
            r34 = r21
            goto L_0x1c9e
        L_0x1bca:
            r0 = move-exception
            r13 = r0
            r3 = r15
            r1 = r21
            r2 = r24
            r4 = r25
            r45 = r28
            r5 = r33
            r6 = r34
            r10 = r43
            goto L_0x1CLASSNAME
        L_0x1bdd:
            r0 = move-exception
            r15 = r7
            r7 = r28
            r35 = r54
            r28 = r9
            r8 = r60
            r13 = r0
            r3 = r15
            r1 = r21
            r2 = r24
            r4 = r25
            r45 = r28
            r5 = r33
            r6 = r34
            r10 = r43
            goto L_0x1CLASSNAME
        L_0x1bf9:
            r0 = move-exception
            r8 = r60
            r7 = r3
            r6 = r48
            r35 = r54
            r13 = r0
            r45 = r5
            r17 = r6
            r1 = r21
            r3 = r24
            r4 = r25
            r5 = r33
            r6 = r34
            r10 = r43
            goto L_0x1CLASSNAME
        L_0x1CLASSNAME:
            r0 = move-exception
            r8 = r60
            r52 = r7
            r7 = r28
            r35 = r48
            r13 = r0
            r3 = r6
            r1 = r21
            r4 = r33
            r5 = r34
            r6 = r2
            r2 = r24
            goto L_0x1CLASSNAME
        L_0x1CLASSNAME:
            r0 = move-exception
            r8 = r60
            r52 = r7
            r7 = r28
            r35 = r48
            r13 = r0
            r3 = r6
            r1 = r21
            r2 = r24
            r4 = r33
            r5 = r34
            r6 = r44
            goto L_0x1CLASSNAME
        L_0x1c3f:
            r0 = move-exception
            r8 = r7
            r6 = r10
            r35 = r13
            r52 = r25
            r7 = r28
            r13 = r0
            r3 = r6
            r1 = r21
            r2 = r24
            r4 = r33
            r5 = r43
            r6 = r44
            r10 = r46
            goto L_0x1CLASSNAME
        L_0x1CLASSNAME:
            r0 = move-exception
            r24 = r2
            r33 = r4
            r43 = r5
            r44 = r6
            r45 = r9
            r46 = r10
            r35 = r13
            r52 = r25
            r6 = r3
            r8 = r7
            r7 = r15
            r13 = r0
            r1 = r21
            r6 = r44
        L_0x1CLASSNAME:
            java.util.ArrayList r14 = r7.messages
            r14.clear()
            java.util.ArrayList r14 = r7.chats
            r14.clear()
            java.util.ArrayList r14 = r7.users
            r14.clear()
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r13)
            r34 = r1
            r38 = r2
            r25 = r3
            r39 = r4
            r40 = r5
            r41 = r6
            r43 = r10
            r29 = r16
            r30 = r17
            r31 = r18
            r32 = r19
            r33 = r20
            r37 = r23
            r28 = r45
        L_0x1c9e:
            boolean r1 = org.telegram.messenger.BuildVars.LOGS_ENABLED
            if (r1 == 0) goto L_0x1cc4
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            java.lang.String r2 = "messages load time = "
            r1.append(r2)
            long r2 = android.os.SystemClock.elapsedRealtime()
            long r2 = r2 - r26
            r1.append(r2)
            java.lang.String r2 = " for dialog = "
            r1.append(r2)
            r1.append(r8)
            java.lang.String r1 = r1.toString()
            org.telegram.messenger.FileLog.d(r1)
        L_0x1cc4:
            r1 = r35
            r9 = r25
            r10 = r32
            r13 = r40
            r14 = r41
            r18 = r33
            r22 = r28
            r23 = r38
            r42 = r52
            r15 = r34
            r16 = r43
            if (r70 == 0) goto L_0x1ce5
            java.util.ArrayList r1 = r7.messages
            int r1 = r1.size()
            r4 = r1
            goto L_0x1ce7
        L_0x1ce5:
            r4 = r37
        L_0x1ce7:
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda78 r44 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda78
            r1 = r44
            r2 = r59
            r3 = r7
            r5 = r60
            r45 = r7
            r7 = r62
            r11 = r66
            r12 = r68
            r17 = r69
            r19 = r70
            r20 = r71
            r21 = r72
            r24 = r73
            r1.<init>(r2, r3, r4, r5, r7, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24)
            return r44
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.getMessagesInternal(long, long, int, int, int, int, int, int, boolean, int, int, boolean):java.lang.Runnable");
    }

    static /* synthetic */ int lambda$getMessagesInternal$120(TLRPC.Message lhs, TLRPC.Message rhs) {
        if (lhs.id <= 0 || rhs.id <= 0) {
            if (lhs.id >= 0 || rhs.id >= 0) {
                if (lhs.date > rhs.date) {
                    return -1;
                }
                if (lhs.date < rhs.date) {
                    return 1;
                }
                return 0;
            } else if (lhs.id < rhs.id) {
                return -1;
            } else {
                if (lhs.id > rhs.id) {
                    return 1;
                }
                return 0;
            }
        } else if (lhs.id > rhs.id) {
            return -1;
        } else {
            if (lhs.id < rhs.id) {
                return 1;
            }
            return 0;
        }
    }

    /* renamed from: lambda$getMessagesInternal$121$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m899xbc3e4208(TLRPC.TL_messages_messages res, int finalMessagesCount, long dialogId, long mergeDialogId, int countQueryFinal, int maxIdOverrideFinal, int offset_date, int classGuid, int minUnreadIdFinal, int lastMessageIdFinal, int countUnreadFinal, int maxUnreadDateFinal, int load_type, boolean isEndFinal, boolean scheduled, int replyMessageId, int loadIndex, boolean queryFromServerFinal, int mentionsUnreadFinal, boolean processMessages) {
        getMessagesController().processLoadedMessages(res, finalMessagesCount, dialogId, mergeDialogId, countQueryFinal, maxIdOverrideFinal, offset_date, true, classGuid, minUnreadIdFinal, lastMessageIdFinal, countUnreadFinal, maxUnreadDateFinal, load_type, isEndFinal, scheduled ? 1 : 0, replyMessageId, loadIndex, queryFromServerFinal, mentionsUnreadFinal, processMessages);
    }

    public void getMessages(long dialogId, long mergeDialogId, boolean loadInfo, int count, int max_id, int offset_date, int minDate, int classGuid, int load_type, boolean scheduled, int replyMessageId, int loadIndex, boolean processMessages) {
        MessagesStorage$$ExternalSyntheticLambda180 messagesStorage$$ExternalSyntheticLambda180 = r0;
        DispatchQueue dispatchQueue = this.storageQueue;
        MessagesStorage$$ExternalSyntheticLambda180 messagesStorage$$ExternalSyntheticLambda1802 = new MessagesStorage$$ExternalSyntheticLambda180(this, dialogId, mergeDialogId, count, max_id, offset_date, minDate, classGuid, load_type, scheduled, replyMessageId, loadIndex, processMessages);
        dispatchQueue.postRunnable(messagesStorage$$ExternalSyntheticLambda180);
    }

    /* renamed from: lambda$getMessages$122$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m897lambda$getMessages$122$orgtelegrammessengerMessagesStorage(long dialogId, long mergeDialogId, int count, int max_id, int offset_date, int minDate, int classGuid, int load_type, boolean scheduled, int replyMessageId, int loadIndex, boolean processMessages) {
        Utilities.stageQueue.postRunnable(getMessagesInternal(dialogId, mergeDialogId, count, max_id, offset_date, minDate, classGuid, load_type, scheduled, replyMessageId, loadIndex, processMessages));
    }

    public void clearSentMedia() {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda186(this));
    }

    /* renamed from: lambda$clearSentMedia$123$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m859lambda$clearSentMedia$123$orgtelegrammessengerMessagesStorage() {
        try {
            this.database.executeFast("DELETE FROM sent_files_v2 WHERE 1").stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public Object[] getSentFile(String path, int type) {
        if (path == null || path.toLowerCase().endsWith("attheme")) {
            return null;
        }
        CountDownLatch countDownLatch = new CountDownLatch(1);
        Object[] result = new Object[2];
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda24(this, path, type, result, countDownLatch));
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        if (result[0] != null) {
            return result;
        }
        return null;
    }

    /* renamed from: lambda$getSentFile$124$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m901lambda$getSentFile$124$orgtelegrammessengerMessagesStorage(String path, int type, Object[] result, CountDownLatch countDownLatch) {
        NativeByteBuffer data;
        try {
            String id = Utilities.MD5(path);
            if (id != null) {
                SQLiteCursor cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT data, parent FROM sent_files_v2 WHERE uid = '%s' AND type = %d", new Object[]{id, Integer.valueOf(type)}), new Object[0]);
                if (cursor.next() && (data = cursor.byteBufferValue(0)) != null) {
                    TLRPC.MessageMedia TLdeserialize = TLRPC.MessageMedia.TLdeserialize(data, data.readInt32(false), false);
                    data.reuse();
                    if (TLdeserialize instanceof TLRPC.TL_messageMediaDocument) {
                        result[0] = ((TLRPC.TL_messageMediaDocument) TLdeserialize).document;
                    } else if (TLdeserialize instanceof TLRPC.TL_messageMediaPhoto) {
                        result[0] = ((TLRPC.TL_messageMediaPhoto) TLdeserialize).photo;
                    }
                    if (result[0] != null) {
                        result[1] = cursor.stringValue(1);
                    }
                }
                cursor.dispose();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        } catch (Throwable th) {
            countDownLatch.countDown();
            throw th;
        }
        countDownLatch.countDown();
    }

    private void updateWidgets(long did) {
        ArrayList<Long> dids = new ArrayList<>();
        dids.add(Long.valueOf(did));
        updateWidgets(dids);
    }

    private void updateWidgets(ArrayList<Long> dids) {
        if (!dids.isEmpty()) {
            AppWidgetManager appWidgetManager = null;
            try {
                String join = TextUtils.join(",", dids);
                SQLiteCursor cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT DISTINCT id FROM shortcut_widget WHERE did IN(%s,-1)", new Object[]{TextUtils.join(",", dids)}), new Object[0]);
                while (cursor.next()) {
                    if (appWidgetManager == null) {
                        appWidgetManager = AppWidgetManager.getInstance(ApplicationLoader.applicationContext);
                    }
                    appWidgetManager.notifyAppWidgetViewDataChanged(cursor.intValue(0), NUM);
                }
                cursor.dispose();
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        }
    }

    public void putWidgetDialogs(int widgetId, ArrayList<Long> dids) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda146(this, widgetId, dids));
    }

    /* renamed from: lambda$putWidgetDialogs$125$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m975x7evar_(int widgetId, ArrayList dids) {
        try {
            this.database.beginTransaction();
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM shortcut_widget WHERE id = " + widgetId).stepThis().dispose();
            SQLitePreparedStatement state = this.database.executeFast("REPLACE INTO shortcut_widget VALUES(?, ?, ?)");
            if (dids.isEmpty()) {
                state.requery();
                state.bindInteger(1, widgetId);
                state.bindLong(2, -1);
                state.bindInteger(3, 0);
                state.step();
            } else {
                int N = dids.size();
                for (int a = 0; a < N; a++) {
                    long did = ((Long) dids.get(a)).longValue();
                    state.requery();
                    state.bindInteger(1, widgetId);
                    state.bindLong(2, did);
                    state.bindInteger(3, a);
                    state.step();
                }
            }
            state.dispose();
            this.database.commitTransaction();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void clearWidgetDialogs(int widgetId) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda119(this, widgetId));
    }

    /* renamed from: lambda$clearWidgetDialogs$126$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m862x7c9daa8e(int widgetId) {
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM shortcut_widget WHERE id = " + widgetId).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void getWidgetDialogIds(int widgetId, int type, ArrayList<Long> dids, ArrayList<TLRPC.User> users, ArrayList<TLRPC.Chat> chats, boolean edit) {
        CountDownLatch countDownLatch = new CountDownLatch(1);
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda151(this, widgetId, dids, users, chats, edit, type, countDownLatch));
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* renamed from: lambda$getWidgetDialogIds$127$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m906xd2d6a1b1(int widgetId, ArrayList dids, ArrayList users, ArrayList chats, boolean edit, int type, CountDownLatch countDownLatch) {
        ArrayList arrayList = dids;
        ArrayList arrayList2 = users;
        ArrayList arrayList3 = chats;
        try {
            ArrayList<Long> usersToLoad = new ArrayList<>();
            ArrayList<Long> chatsToLoad = new ArrayList<>();
            SQLiteCursor cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT did FROM shortcut_widget WHERE id = %d ORDER BY ord ASC", new Object[]{Integer.valueOf(widgetId)}), new Object[0]);
            while (cursor.next()) {
                long id = cursor.longValue(0);
                if (id != -1) {
                    dids.add(Long.valueOf(id));
                    if (!(arrayList2 == null || arrayList3 == null)) {
                        if (DialogObject.isUserDialog(id)) {
                            usersToLoad.add(Long.valueOf(id));
                        } else {
                            chatsToLoad.add(Long.valueOf(-id));
                        }
                    }
                }
            }
            cursor.dispose();
            if (!edit && dids.isEmpty()) {
                if (type == 0) {
                    SQLiteCursor cursor2 = this.database.queryFinalized("SELECT did FROM dialogs WHERE folder_id = 0 ORDER BY pinned DESC, date DESC LIMIT 0,10", new Object[0]);
                    while (cursor2.next()) {
                        long dialogId = cursor2.longValue(0);
                        if (!DialogObject.isFolderDialogId(dialogId)) {
                            dids.add(Long.valueOf(dialogId));
                            if (!(arrayList2 == null || arrayList3 == null)) {
                                if (DialogObject.isUserDialog(dialogId)) {
                                    usersToLoad.add(Long.valueOf(dialogId));
                                } else {
                                    chatsToLoad.add(Long.valueOf(-dialogId));
                                }
                            }
                        }
                    }
                    cursor2.dispose();
                } else {
                    SQLiteCursor cursor3 = getMessagesStorage().getDatabase().queryFinalized("SELECT did FROM chat_hints WHERE type = 0 ORDER BY rating DESC LIMIT 4", new Object[0]);
                    while (cursor3.next()) {
                        long dialogId2 = cursor3.longValue(0);
                        dids.add(Long.valueOf(dialogId2));
                        if (!(arrayList2 == null || arrayList3 == null)) {
                            if (DialogObject.isUserDialog(dialogId2)) {
                                usersToLoad.add(Long.valueOf(dialogId2));
                            } else {
                                chatsToLoad.add(Long.valueOf(-dialogId2));
                            }
                        }
                    }
                    cursor3.dispose();
                }
            }
            if (!(arrayList2 == null || arrayList3 == null)) {
                if (!chatsToLoad.isEmpty()) {
                    getChatsInternal(TextUtils.join(",", chatsToLoad), arrayList3);
                }
                if (!usersToLoad.isEmpty()) {
                    getUsersInternal(TextUtils.join(",", usersToLoad), arrayList2);
                }
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        } catch (Throwable th) {
            countDownLatch.countDown();
            throw th;
        }
        countDownLatch.countDown();
    }

    public void getWidgetDialogs(int widgetId, int type, ArrayList<Long> dids, LongSparseArray<TLRPC.Dialog> dialogs, LongSparseArray<TLRPC.Message> messages, ArrayList<TLRPC.User> users, ArrayList<TLRPC.Chat> chats) {
        CountDownLatch countDownLatch = new CountDownLatch(1);
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda148(this, widgetId, dids, type, dialogs, messages, chats, users, countDownLatch));
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* renamed from: lambda$getWidgetDialogs$128$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m907x1var_(int widgetId, ArrayList dids, int type, LongSparseArray dialogs, LongSparseArray messages, ArrayList chats, ArrayList users, CountDownLatch countDownLatch) {
        SQLiteCursor cursor;
        String str;
        SQLiteCursor cursor2;
        String str2;
        ArrayList arrayList = dids;
        LongSparseArray longSparseArray = dialogs;
        boolean add = false;
        try {
            ArrayList<Long> usersToLoad = new ArrayList<>();
            ArrayList<Long> chatsToLoad = new ArrayList<>();
            int i = 1;
            boolean z = false;
            SQLiteCursor cursor3 = this.database.queryFinalized(String.format(Locale.US, "SELECT did FROM shortcut_widget WHERE id = %d ORDER BY ord ASC", new Object[]{Integer.valueOf(widgetId)}), new Object[0]);
            while (cursor3.next()) {
                long id = cursor3.longValue(0);
                if (id != -1) {
                    arrayList.add(Long.valueOf(id));
                    if (DialogObject.isUserDialog(id)) {
                        usersToLoad.add(Long.valueOf(id));
                    } else {
                        chatsToLoad.add(Long.valueOf(-id));
                    }
                }
            }
            cursor3.dispose();
            if (!dids.isEmpty()) {
                int i2 = type;
            } else if (type == 1) {
                SQLiteCursor cursor4 = getMessagesStorage().getDatabase().queryFinalized("SELECT did FROM chat_hints WHERE type = 0 ORDER BY rating DESC LIMIT 4", new Object[0]);
                while (cursor4.next()) {
                    long dialogId = cursor4.longValue(0);
                    arrayList.add(Long.valueOf(dialogId));
                    if (DialogObject.isUserDialog(dialogId)) {
                        usersToLoad.add(Long.valueOf(dialogId));
                    } else {
                        chatsToLoad.add(Long.valueOf(-dialogId));
                    }
                }
                cursor4.dispose();
            }
            String str3 = ",";
            if (dids.isEmpty()) {
                add = true;
                cursor = this.database.queryFinalized("SELECT d.did, d.last_mid, d.unread_count, d.date, m.data, m.read_state, m.mid, m.send_state, m.date FROM dialogs as d LEFT JOIN messages_v2 as m ON d.last_mid = m.mid AND d.did = m.uid WHERE d.folder_id = 0 ORDER BY d.pinned DESC, d.date DESC LIMIT 0,10", new Object[0]);
            } else {
                cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT d.did, d.last_mid, d.unread_count, d.date, m.data, m.read_state, m.mid, m.send_state, m.date FROM dialogs as d LEFT JOIN messages_v2 as m ON d.last_mid = m.mid AND d.did = m.uid WHERE d.did IN(%s)", new Object[]{TextUtils.join(str3, arrayList)}), new Object[0]);
            }
            while (cursor.next()) {
                long dialogId2 = cursor.longValue(z ? 1 : 0);
                if (DialogObject.isFolderDialogId(dialogId2)) {
                    LongSparseArray longSparseArray2 = messages;
                    str2 = str3;
                } else {
                    if (add) {
                        arrayList.add(Long.valueOf(dialogId2));
                    }
                    TLRPC.Dialog dialog = new TLRPC.TL_dialog();
                    dialog.id = dialogId2;
                    dialog.top_message = cursor.intValue(i);
                    dialog.unread_count = cursor.intValue(2);
                    dialog.last_message_date = cursor.intValue(3);
                    str2 = str3;
                    longSparseArray.put(dialog.id, dialog);
                    NativeByteBuffer data = cursor.byteBufferValue(4);
                    if (data != null) {
                        TLRPC.Message message = TLRPC.Message.TLdeserialize(data, data.readInt32(z), z);
                        long j = dialogId2;
                        message.readAttachPath(data, getUserConfig().clientUserId);
                        data.reuse();
                        MessageObject.setUnreadFlags(message, cursor.intValue(5));
                        message.id = cursor.intValue(6);
                        message.send_state = cursor.intValue(7);
                        int date = cursor.intValue(8);
                        if (date != 0) {
                            dialog.last_message_date = date;
                        }
                        message.dialog_id = dialog.id;
                        try {
                            messages.put(dialog.id, message);
                            addUsersAndChatsFromMessage(message, usersToLoad, chatsToLoad);
                        } catch (Exception e) {
                            e = e;
                            ArrayList arrayList2 = chats;
                            ArrayList arrayList3 = users;
                            try {
                                FileLog.e((Throwable) e);
                                countDownLatch.countDown();
                            } catch (Throwable th) {
                                th = th;
                                countDownLatch.countDown();
                                throw th;
                            }
                        } catch (Throwable th2) {
                            th = th2;
                            ArrayList arrayList4 = chats;
                            ArrayList arrayList5 = users;
                            countDownLatch.countDown();
                            throw th;
                        }
                    } else {
                        LongSparseArray longSparseArray3 = messages;
                    }
                }
                str3 = str2;
                i = 1;
                z = false;
            }
            LongSparseArray longSparseArray4 = messages;
            String str4 = str3;
            cursor.dispose();
            if (add) {
            } else if (dids.size() > dialogs.size()) {
                int a = 0;
                int N = dids.size();
                while (a < N) {
                    long did = ((Long) arrayList.get(a)).longValue();
                    if (longSparseArray.get(((Long) arrayList.get(a)).longValue()) == null) {
                        TLRPC.TL_dialog dialog2 = new TLRPC.TL_dialog();
                        dialog2.id = did;
                        cursor2 = cursor;
                        longSparseArray.put(dialog2.id, dialog2);
                        if (DialogObject.isChatDialog(did)) {
                            if (chatsToLoad.contains(Long.valueOf(-did))) {
                                chatsToLoad.add(Long.valueOf(-did));
                            }
                        } else if (usersToLoad.contains(Long.valueOf(did))) {
                            usersToLoad.add(Long.valueOf(did));
                        }
                    } else {
                        cursor2 = cursor;
                    }
                    a++;
                    int i3 = type;
                    cursor = cursor2;
                }
            }
            if (!chatsToLoad.isEmpty()) {
                str = str4;
                try {
                    getChatsInternal(TextUtils.join(str, chatsToLoad), chats);
                } catch (Exception e2) {
                    e = e2;
                    ArrayList arrayList32 = users;
                    FileLog.e((Throwable) e);
                    countDownLatch.countDown();
                } catch (Throwable th3) {
                    th = th3;
                    ArrayList arrayList52 = users;
                    countDownLatch.countDown();
                    throw th;
                }
            } else {
                ArrayList arrayList6 = chats;
                str = str4;
            }
            if (!usersToLoad.isEmpty()) {
                try {
                    getUsersInternal(TextUtils.join(str, usersToLoad), users);
                } catch (Exception e3) {
                    e = e3;
                }
            } else {
                ArrayList arrayList7 = users;
            }
        } catch (Exception e4) {
            e = e4;
            LongSparseArray longSparseArray5 = messages;
            ArrayList arrayList22 = chats;
            ArrayList arrayList322 = users;
            FileLog.e((Throwable) e);
            countDownLatch.countDown();
        } catch (Throwable th4) {
            th = th4;
            LongSparseArray longSparseArray6 = messages;
            ArrayList arrayList42 = chats;
            ArrayList arrayList522 = users;
            countDownLatch.countDown();
            throw th;
        }
        countDownLatch.countDown();
    }

    public void putSentFile(String path, TLObject file, int type, String parent) {
        if (path != null && file != null && parent != null) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda26(this, path, file, type, parent));
        }
    }

    /* renamed from: lambda$putSentFile$129$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m970lambda$putSentFile$129$orgtelegrammessengerMessagesStorage(String path, TLObject file, int type, String parent) {
        SQLitePreparedStatement state = null;
        try {
            String id = Utilities.MD5(path);
            if (id != null) {
                TLRPC.MessageMedia messageMedia = null;
                if (file instanceof TLRPC.Photo) {
                    messageMedia = new TLRPC.TL_messageMediaPhoto();
                    messageMedia.photo = (TLRPC.Photo) file;
                    messageMedia.flags |= 1;
                } else if (file instanceof TLRPC.Document) {
                    messageMedia = new TLRPC.TL_messageMediaDocument();
                    messageMedia.document = (TLRPC.Document) file;
                    messageMedia.flags |= 1;
                }
                if (messageMedia != null) {
                    state = this.database.executeFast("REPLACE INTO sent_files_v2 VALUES(?, ?, ?, ?)");
                    state.requery();
                    NativeByteBuffer data = new NativeByteBuffer(messageMedia.getObjectSize());
                    messageMedia.serializeToStream(data);
                    state.bindString(1, id);
                    state.bindInteger(2, type);
                    state.bindByteBuffer(3, data);
                    state.bindString(4, parent);
                    state.step();
                    data.reuse();
                } else if (state != null) {
                    state.dispose();
                    return;
                } else {
                    return;
                }
            }
            if (state == null) {
                return;
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (state == null) {
                return;
            }
        } catch (Throwable th) {
            if (state != null) {
                state.dispose();
            }
            throw th;
        }
        state.dispose();
    }

    public void updateEncryptedChatSeq(TLRPC.EncryptedChat chat, boolean cleanup) {
        if (chat != null) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda72(this, chat, cleanup));
        }
    }

    /* renamed from: lambda$updateEncryptedChatSeq$130$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m1015x50var_(TLRPC.EncryptedChat chat, boolean cleanup) {
        SQLitePreparedStatement state = null;
        try {
            state = this.database.executeFast("UPDATE enc_chats SET seq_in = ?, seq_out = ?, use_count = ?, in_seq_no = ?, mtproto_seq = ? WHERE uid = ?");
            state.bindInteger(1, chat.seq_in);
            state.bindInteger(2, chat.seq_out);
            state.bindInteger(3, (chat.key_use_count_in << 16) | chat.key_use_count_out);
            state.bindInteger(4, chat.in_seq_no);
            state.bindInteger(5, chat.mtproto_seq);
            state.bindInteger(6, chat.id);
            state.step();
            if (cleanup && chat.in_seq_no != 0) {
                long did = (long) DialogObject.getEncryptedChatId((long) chat.id);
                this.database.executeFast(String.format(Locale.US, "DELETE FROM messages_v2 WHERE mid IN (SELECT m.mid FROM messages_v2 as m LEFT JOIN messages_seq as s ON m.mid = s.mid WHERE m.uid = %d AND m.date = 0 AND m.mid < 0 AND s.seq_out <= %d) AND uid = %d", new Object[]{Long.valueOf(did), Integer.valueOf(chat.in_seq_no), Long.valueOf(did)})).stepThis().dispose();
            }
            if (state == null) {
                return;
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (state == null) {
                return;
            }
        } catch (Throwable th) {
            if (state != null) {
                state.dispose();
            }
            throw th;
        }
        state.dispose();
    }

    public void updateEncryptedChatTTL(TLRPC.EncryptedChat chat) {
        if (chat != null) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda70(this, chat));
        }
    }

    /* renamed from: lambda$updateEncryptedChatTTL$131$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m1016xa4ccca55(TLRPC.EncryptedChat chat) {
        SQLitePreparedStatement state = null;
        try {
            state = this.database.executeFast("UPDATE enc_chats SET ttl = ? WHERE uid = ?");
            state.bindInteger(1, chat.ttl);
            state.bindInteger(2, chat.id);
            state.step();
            if (state == null) {
                return;
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (state == null) {
                return;
            }
        } catch (Throwable th) {
            if (state != null) {
                state.dispose();
            }
            throw th;
        }
        state.dispose();
    }

    public void updateEncryptedChatLayer(TLRPC.EncryptedChat chat) {
        if (chat != null) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda69(this, chat));
        }
    }

    /* renamed from: lambda$updateEncryptedChatLayer$132$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m1014xfCLASSNAMEf(TLRPC.EncryptedChat chat) {
        SQLitePreparedStatement state = null;
        try {
            state = this.database.executeFast("UPDATE enc_chats SET layer = ? WHERE uid = ?");
            state.bindInteger(1, chat.layer);
            state.bindInteger(2, chat.id);
            state.step();
            if (state == null) {
                return;
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (state == null) {
                return;
            }
        } catch (Throwable th) {
            if (state != null) {
                state.dispose();
            }
            throw th;
        }
        state.dispose();
    }

    public void updateEncryptedChat(TLRPC.EncryptedChat chat) {
        if (chat != null) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda68(this, chat));
        }
    }

    /* renamed from: lambda$updateEncryptedChat$133$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m1013xddvar_f3(TLRPC.EncryptedChat chat) {
        SQLitePreparedStatement state = null;
        try {
            if ((chat.key_hash == null || chat.key_hash.length < 16) && chat.auth_key != null) {
                chat.key_hash = AndroidUtilities.calcAuthKeyHash(chat.auth_key);
            }
            state = this.database.executeFast("UPDATE enc_chats SET data = ?, g = ?, authkey = ?, ttl = ?, layer = ?, seq_in = ?, seq_out = ?, use_count = ?, exchange_id = ?, key_date = ?, fprint = ?, fauthkey = ?, khash = ?, in_seq_no = ?, admin_id = ?, mtproto_seq = ? WHERE uid = ?");
            NativeByteBuffer data = new NativeByteBuffer(chat.getObjectSize());
            NativeByteBuffer data2 = new NativeByteBuffer(chat.a_or_b != null ? chat.a_or_b.length : 1);
            NativeByteBuffer data3 = new NativeByteBuffer(chat.auth_key != null ? chat.auth_key.length : 1);
            NativeByteBuffer data4 = new NativeByteBuffer(chat.future_auth_key != null ? chat.future_auth_key.length : 1);
            NativeByteBuffer data5 = new NativeByteBuffer(chat.key_hash != null ? chat.key_hash.length : 1);
            chat.serializeToStream(data);
            state.bindByteBuffer(1, data);
            if (chat.a_or_b != null) {
                data2.writeBytes(chat.a_or_b);
            }
            if (chat.auth_key != null) {
                data3.writeBytes(chat.auth_key);
            }
            if (chat.future_auth_key != null) {
                data4.writeBytes(chat.future_auth_key);
            }
            if (chat.key_hash != null) {
                data5.writeBytes(chat.key_hash);
            }
            state.bindByteBuffer(2, data2);
            state.bindByteBuffer(3, data3);
            state.bindInteger(4, chat.ttl);
            state.bindInteger(5, chat.layer);
            state.bindInteger(6, chat.seq_in);
            state.bindInteger(7, chat.seq_out);
            state.bindInteger(8, (chat.key_use_count_in << 16) | chat.key_use_count_out);
            state.bindLong(9, chat.exchange_id);
            state.bindInteger(10, chat.key_create_date);
            state.bindLong(11, chat.future_key_fingerprint);
            state.bindByteBuffer(12, data4);
            state.bindByteBuffer(13, data5);
            state.bindInteger(14, chat.in_seq_no);
            state.bindLong(15, chat.admin_id);
            state.bindInteger(16, chat.mtproto_seq);
            state.bindInteger(17, chat.id);
            state.step();
            data.reuse();
            data2.reuse();
            data3.reuse();
            data4.reuse();
            data5.reuse();
            if (state == null) {
                return;
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (state == null) {
                return;
            }
        } catch (Throwable th) {
            if (state != null) {
                state.dispose();
            }
            throw th;
        }
        state.dispose();
    }

    public void isDialogHasTopMessage(long did, Runnable onDontExist) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda188(this, did, onDontExist));
    }

    /* renamed from: lambda$isDialogHasTopMessage$134$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m910x552de7eb(long did, Runnable onDontExist) {
        boolean exists = false;
        try {
            boolean z = true;
            SQLiteCursor cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT last_mid FROM dialogs WHERE did = %d", new Object[]{Long.valueOf(did)}), new Object[0]);
            if (cursor.next()) {
                if (cursor.intValue(0) == 0) {
                    z = false;
                }
                exists = z;
            }
            cursor.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        if (!exists) {
            AndroidUtilities.runOnUIThread(onDontExist);
        }
    }

    public boolean hasAuthMessage(int date) {
        CountDownLatch countDownLatch = new CountDownLatch(1);
        boolean[] result = new boolean[1];
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda154(this, date, result, countDownLatch));
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return result[0];
    }

    /* renamed from: lambda$hasAuthMessage$135$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m908lambda$hasAuthMessage$135$orgtelegrammessengerMessagesStorage(int date, boolean[] result, CountDownLatch countDownLatch) {
        try {
            SQLiteCursor cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT mid FROM messages_v2 WHERE uid = 777000 AND date = %d AND mid < 0 LIMIT 1", new Object[]{Integer.valueOf(date)}), new Object[0]);
            result[0] = cursor.next();
            cursor.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        } catch (Throwable th) {
            countDownLatch.countDown();
            throw th;
        }
        countDownLatch.countDown();
    }

    public void getEncryptedChat(long chatId, CountDownLatch countDownLatch, ArrayList<TLObject> result) {
        if (countDownLatch != null && result != null) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda194(this, chatId, result, countDownLatch));
        }
    }

    /* renamed from: lambda$getEncryptedChat$136$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m896x73d1ab43(long chatId, ArrayList result, CountDownLatch countDownLatch) {
        try {
            ArrayList<Long> usersToLoad = new ArrayList<>();
            ArrayList<TLRPC.EncryptedChat> encryptedChats = new ArrayList<>();
            getEncryptedChatsInternal("" + chatId, encryptedChats, usersToLoad);
            if (!encryptedChats.isEmpty() && !usersToLoad.isEmpty()) {
                ArrayList<TLRPC.User> users = new ArrayList<>();
                getUsersInternal(TextUtils.join(",", usersToLoad), users);
                if (!users.isEmpty()) {
                    result.add(encryptedChats.get(0));
                    result.add(users.get(0));
                }
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        } catch (Throwable th) {
            countDownLatch.countDown();
            throw th;
        }
        countDownLatch.countDown();
    }

    public void putEncryptedChat(TLRPC.EncryptedChat chat, TLRPC.User user, TLRPC.Dialog dialog) {
        if (chat != null) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda71(this, chat, user, dialog));
        }
    }

    /* renamed from: lambda$putEncryptedChat$137$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m964x302540db(TLRPC.EncryptedChat chat, TLRPC.User user, TLRPC.Dialog dialog) {
        TLRPC.EncryptedChat encryptedChat = chat;
        TLRPC.User user2 = user;
        TLRPC.Dialog dialog2 = dialog;
        try {
            if ((encryptedChat.key_hash == null || encryptedChat.key_hash.length < 16) && encryptedChat.auth_key != null) {
                encryptedChat.key_hash = AndroidUtilities.calcAuthKeyHash(encryptedChat.auth_key);
            }
            SQLitePreparedStatement state = this.database.executeFast("REPLACE INTO enc_chats VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
            NativeByteBuffer data = new NativeByteBuffer(chat.getObjectSize());
            NativeByteBuffer data2 = new NativeByteBuffer(encryptedChat.a_or_b != null ? encryptedChat.a_or_b.length : 1);
            NativeByteBuffer data3 = new NativeByteBuffer(encryptedChat.auth_key != null ? encryptedChat.auth_key.length : 1);
            NativeByteBuffer data4 = new NativeByteBuffer(encryptedChat.future_auth_key != null ? encryptedChat.future_auth_key.length : 1);
            NativeByteBuffer data5 = new NativeByteBuffer(encryptedChat.key_hash != null ? encryptedChat.key_hash.length : 1);
            encryptedChat.serializeToStream(data);
            state.bindInteger(1, encryptedChat.id);
            state.bindLong(2, user2.id);
            state.bindString(3, formatUserSearchName(user2));
            state.bindByteBuffer(4, data);
            if (encryptedChat.a_or_b != null) {
                data2.writeBytes(encryptedChat.a_or_b);
            }
            if (encryptedChat.auth_key != null) {
                data3.writeBytes(encryptedChat.auth_key);
            }
            if (encryptedChat.future_auth_key != null) {
                data4.writeBytes(encryptedChat.future_auth_key);
            }
            if (encryptedChat.key_hash != null) {
                data5.writeBytes(encryptedChat.key_hash);
            }
            state.bindByteBuffer(5, data2);
            state.bindByteBuffer(6, data3);
            state.bindInteger(7, encryptedChat.ttl);
            state.bindInteger(8, encryptedChat.layer);
            state.bindInteger(9, encryptedChat.seq_in);
            state.bindInteger(10, encryptedChat.seq_out);
            state.bindInteger(11, encryptedChat.key_use_count_out | (encryptedChat.key_use_count_in << 16));
            state.bindLong(12, encryptedChat.exchange_id);
            state.bindInteger(13, encryptedChat.key_create_date);
            state.bindLong(14, encryptedChat.future_key_fingerprint);
            state.bindByteBuffer(15, data4);
            state.bindByteBuffer(16, data5);
            state.bindInteger(17, encryptedChat.in_seq_no);
            state.bindLong(18, encryptedChat.admin_id);
            state.bindInteger(19, encryptedChat.mtproto_seq);
            state.step();
            state.dispose();
            data.reuse();
            data2.reuse();
            data3.reuse();
            data4.reuse();
            data5.reuse();
            if (dialog2 != null) {
                SQLitePreparedStatement state2 = this.database.executeFast("REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                state2.bindLong(1, dialog2.id);
                state2.bindInteger(2, dialog2.last_message_date);
                state2.bindInteger(3, dialog2.unread_count);
                state2.bindInteger(4, dialog2.top_message);
                state2.bindInteger(5, dialog2.read_inbox_max_id);
                state2.bindInteger(6, dialog2.read_outbox_max_id);
                state2.bindInteger(7, 0);
                state2.bindInteger(8, dialog2.unread_mentions_count);
                state2.bindInteger(9, dialog2.pts);
                state2.bindInteger(10, 0);
                state2.bindInteger(11, dialog2.pinnedNum);
                state2.bindInteger(12, dialog2.flags);
                state2.bindInteger(13, dialog2.folder_id);
                state2.bindNull(14);
                state2.bindInteger(15, dialog2.unread_reactions_count);
                state2.step();
                state2.dispose();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    private String formatUserSearchName(TLRPC.User user) {
        StringBuilder str = new StringBuilder();
        if (user.first_name != null && user.first_name.length() > 0) {
            str.append(user.first_name);
        }
        if (user.last_name != null && user.last_name.length() > 0) {
            if (str.length() > 0) {
                str.append(" ");
            }
            str.append(user.last_name);
        }
        str.append(";;;");
        if (user.username != null && user.username.length() > 0) {
            str.append(user.username);
        }
        return str.toString().toLowerCase();
    }

    private void putUsersInternal(ArrayList<TLRPC.User> users) throws Exception {
        if (users != null && !users.isEmpty()) {
            SQLitePreparedStatement state = this.database.executeFast("REPLACE INTO users VALUES(?, ?, ?, ?)");
            for (int a = 0; a < users.size(); a++) {
                TLRPC.User user = users.get(a);
                if (user.min) {
                    SQLiteCursor cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT data FROM users WHERE uid = %d", new Object[]{Long.valueOf(user.id)}), new Object[0]);
                    if (cursor.next()) {
                        try {
                            NativeByteBuffer data = cursor.byteBufferValue(0);
                            if (data != null) {
                                TLRPC.User oldUser = TLRPC.User.TLdeserialize(data, data.readInt32(false), false);
                                data.reuse();
                                if (oldUser != null) {
                                    if (user.username != null) {
                                        oldUser.username = user.username;
                                        oldUser.flags |= 8;
                                    } else {
                                        oldUser.username = null;
                                        oldUser.flags &= -9;
                                    }
                                    if (user.apply_min_photo) {
                                        if (user.photo != null) {
                                            oldUser.photo = user.photo;
                                            oldUser.flags |= 32;
                                        } else {
                                            oldUser.photo = null;
                                            oldUser.flags &= -33;
                                        }
                                    }
                                    user = oldUser;
                                }
                            }
                        } catch (Exception e) {
                            FileLog.e((Throwable) e);
                        }
                    }
                    cursor.dispose();
                }
                state.requery();
                NativeByteBuffer data2 = new NativeByteBuffer(user.getObjectSize());
                user.serializeToStream(data2);
                state.bindLong(1, user.id);
                state.bindString(2, formatUserSearchName(user));
                if (user.status != null) {
                    if (user.status instanceof TLRPC.TL_userStatusRecently) {
                        user.status.expires = -100;
                    } else if (user.status instanceof TLRPC.TL_userStatusLastWeek) {
                        user.status.expires = -101;
                    } else if (user.status instanceof TLRPC.TL_userStatusLastMonth) {
                        user.status.expires = -102;
                    }
                    state.bindInteger(3, user.status.expires);
                } else {
                    state.bindInteger(3, 0);
                }
                state.bindByteBuffer(4, data2);
                state.step();
                data2.reuse();
            }
            state.dispose();
        }
    }

    public void updateChatDefaultBannedRights(long chatId, TLRPC.TL_chatBannedRights rights, int version) {
        if (rights != null && chatId != 0) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda171(this, chatId, version, rights));
        }
    }

    /* renamed from: lambda$updateChatDefaultBannedRights$138$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m1001x4497b6cc(long chatId, int version, TLRPC.TL_chatBannedRights rights) {
        NativeByteBuffer data;
        TLRPC.Chat chat = null;
        try {
            SQLiteCursor cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT data FROM chats WHERE uid = %d", new Object[]{Long.valueOf(chatId)}), new Object[0]);
            if (cursor.next() && (data = cursor.byteBufferValue(0)) != null) {
                chat = TLRPC.Chat.TLdeserialize(data, data.readInt32(false), false);
                data.reuse();
            }
            cursor.dispose();
            if (chat == null) {
                return;
            }
            if (chat.default_banned_rights == null || version >= chat.version) {
                chat.default_banned_rights = rights;
                chat.flags |= 262144;
                chat.version = version;
                SQLitePreparedStatement state = this.database.executeFast("UPDATE chats SET data = ? WHERE uid = ?");
                NativeByteBuffer data2 = new NativeByteBuffer(chat.getObjectSize());
                chat.serializeToStream(data2);
                state.bindByteBuffer(1, data2);
                state.bindLong(2, chat.id);
                state.step();
                data2.reuse();
                state.dispose();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    private void putChatsInternal(ArrayList<TLRPC.Chat> chats) throws Exception {
        if (chats != null && !chats.isEmpty()) {
            SQLitePreparedStatement state = this.database.executeFast("REPLACE INTO chats VALUES(?, ?, ?)");
            for (int a = 0; a < chats.size(); a++) {
                TLRPC.Chat chat = chats.get(a);
                if (chat.min) {
                    SQLiteCursor cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT data FROM chats WHERE uid = %d", new Object[]{Long.valueOf(chat.id)}), new Object[0]);
                    if (cursor.next()) {
                        try {
                            NativeByteBuffer data = cursor.byteBufferValue(0);
                            if (data != null) {
                                TLRPC.Chat oldChat = TLRPC.Chat.TLdeserialize(data, data.readInt32(false), false);
                                data.reuse();
                                if (oldChat != null) {
                                    oldChat.title = chat.title;
                                    oldChat.photo = chat.photo;
                                    oldChat.broadcast = chat.broadcast;
                                    oldChat.verified = chat.verified;
                                    oldChat.megagroup = chat.megagroup;
                                    oldChat.call_not_empty = chat.call_not_empty;
                                    oldChat.call_active = chat.call_active;
                                    if (chat.default_banned_rights != null) {
                                        oldChat.default_banned_rights = chat.default_banned_rights;
                                        oldChat.flags |= 262144;
                                    }
                                    if (chat.admin_rights != null) {
                                        oldChat.admin_rights = chat.admin_rights;
                                        oldChat.flags |= 16384;
                                    }
                                    if (chat.banned_rights != null) {
                                        oldChat.banned_rights = chat.banned_rights;
                                        oldChat.flags |= 32768;
                                    }
                                    if (chat.username != null) {
                                        oldChat.username = chat.username;
                                        oldChat.flags |= 64;
                                    } else {
                                        oldChat.username = null;
                                        oldChat.flags &= -65;
                                    }
                                    chat = oldChat;
                                }
                            }
                        } catch (Exception e) {
                            FileLog.e((Throwable) e);
                        }
                    }
                    cursor.dispose();
                }
                state.requery();
                chat.flags |= 131072;
                NativeByteBuffer data2 = new NativeByteBuffer(chat.getObjectSize());
                chat.serializeToStream(data2);
                state.bindLong(1, chat.id);
                if (chat.title != null) {
                    state.bindString(2, chat.title.toLowerCase());
                } else {
                    state.bindString(2, "");
                }
                state.bindByteBuffer(3, data2);
                state.step();
                data2.reuse();
            }
            state.dispose();
        }
    }

    public void getUsersInternal(String usersToLoad, ArrayList<TLRPC.User> result) throws Exception {
        if (usersToLoad != null && usersToLoad.length() != 0 && result != null) {
            SQLiteCursor cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT data, status FROM users WHERE uid IN(%s)", new Object[]{usersToLoad}), new Object[0]);
            while (cursor.next()) {
                try {
                    NativeByteBuffer data = cursor.byteBufferValue(0);
                    if (data != null) {
                        TLRPC.User user = TLRPC.User.TLdeserialize(data, data.readInt32(false), false);
                        data.reuse();
                        if (user != null) {
                            if (user.status != null) {
                                user.status.expires = cursor.intValue(1);
                            }
                            result.add(user);
                        }
                    }
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                }
            }
            cursor.dispose();
        }
    }

    public void getChatsInternal(String chatsToLoad, ArrayList<TLRPC.Chat> result) throws Exception {
        if (chatsToLoad != null && chatsToLoad.length() != 0 && result != null) {
            SQLiteCursor cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT data FROM chats WHERE uid IN(%s)", new Object[]{chatsToLoad}), new Object[0]);
            while (cursor.next()) {
                try {
                    NativeByteBuffer data = cursor.byteBufferValue(0);
                    if (data != null) {
                        TLRPC.Chat chat = TLRPC.Chat.TLdeserialize(data, data.readInt32(false), false);
                        data.reuse();
                        if (chat != null) {
                            result.add(chat);
                        }
                    }
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                }
            }
            cursor.dispose();
        }
    }

    public void getEncryptedChatsInternal(String chatsToLoad, ArrayList<TLRPC.EncryptedChat> result, ArrayList<Long> usersToLoad) throws Exception {
        if (chatsToLoad != null && chatsToLoad.length() != 0 && result != null) {
            SQLiteCursor cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT data, user, g, authkey, ttl, layer, seq_in, seq_out, use_count, exchange_id, key_date, fprint, fauthkey, khash, in_seq_no, admin_id, mtproto_seq FROM enc_chats WHERE uid IN(%s)", new Object[]{chatsToLoad}), new Object[0]);
            while (cursor.next()) {
                try {
                    NativeByteBuffer data = cursor.byteBufferValue(0);
                    if (data != null) {
                        TLRPC.EncryptedChat chat = TLRPC.EncryptedChat.TLdeserialize(data, data.readInt32(false), false);
                        data.reuse();
                        if (chat != null) {
                            chat.user_id = cursor.longValue(1);
                            if (usersToLoad != null && !usersToLoad.contains(Long.valueOf(chat.user_id))) {
                                usersToLoad.add(Long.valueOf(chat.user_id));
                            }
                            chat.a_or_b = cursor.byteArrayValue(2);
                            chat.auth_key = cursor.byteArrayValue(3);
                            chat.ttl = cursor.intValue(4);
                            chat.layer = cursor.intValue(5);
                            chat.seq_in = cursor.intValue(6);
                            chat.seq_out = cursor.intValue(7);
                            int use_count = cursor.intValue(8);
                            chat.key_use_count_in = (short) (use_count >> 16);
                            chat.key_use_count_out = (short) use_count;
                            chat.exchange_id = cursor.longValue(9);
                            chat.key_create_date = cursor.intValue(10);
                            chat.future_key_fingerprint = cursor.longValue(11);
                            chat.future_auth_key = cursor.byteArrayValue(12);
                            chat.key_hash = cursor.byteArrayValue(13);
                            chat.in_seq_no = cursor.intValue(14);
                            long admin_id = cursor.longValue(15);
                            if (admin_id != 0) {
                                chat.admin_id = admin_id;
                            }
                            chat.mtproto_seq = cursor.intValue(16);
                            result.add(chat);
                        }
                    }
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                }
            }
            cursor.dispose();
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: putUsersAndChatsInternal */
    public void m971xfdCLASSNAME(ArrayList<TLRPC.User> users, ArrayList<TLRPC.Chat> chats, boolean withTransaction) {
        if (withTransaction) {
            try {
                this.database.beginTransaction();
            } catch (Exception e) {
                FileLog.e((Throwable) e);
                return;
            }
        }
        putUsersInternal(users);
        putChatsInternal(chats);
        if (withTransaction) {
            this.database.commitTransaction();
        }
    }

    public void putUsersAndChats(ArrayList<TLRPC.User> users, ArrayList<TLRPC.Chat> chats, boolean withTransaction, boolean useQueue) {
        if (users != null && users.isEmpty() && chats != null && chats.isEmpty()) {
            return;
        }
        if (useQueue) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda48(this, users, chats, withTransaction));
        } else {
            m971xfdCLASSNAME(users, chats, withTransaction);
        }
    }

    public void removeFromDownloadQueue(long id, int type, boolean move) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda90(this, move, type, id));
    }

    /* renamed from: lambda$removeFromDownloadQueue$140$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m978x3var_d0f(boolean move, int type, long id) {
        if (move) {
            int minDate = -1;
            try {
                SQLiteCursor cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT min(date) FROM download_queue WHERE type = %d", new Object[]{Integer.valueOf(type)}), new Object[0]);
                if (cursor.next()) {
                    minDate = cursor.intValue(0);
                }
                cursor.dispose();
                if (minDate != -1) {
                    this.database.executeFast(String.format(Locale.US, "UPDATE download_queue SET date = %d WHERE uid = %d AND type = %d", new Object[]{Integer.valueOf(minDate - 1), Long.valueOf(id), Integer.valueOf(type)})).stepThis().dispose();
                }
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        } else {
            this.database.executeFast(String.format(Locale.US, "DELETE FROM download_queue WHERE uid = %d AND type = %d", new Object[]{Long.valueOf(id), Integer.valueOf(type)})).stepThis().dispose();
        }
    }

    private void deleteFromDownloadQueue(ArrayList<Pair<Long, Integer>> ids, boolean transaction) {
        if (ids != null && !ids.isEmpty()) {
            if (transaction) {
                try {
                    this.database.beginTransaction();
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                    return;
                }
            }
            SQLitePreparedStatement state = this.database.executeFast("DELETE FROM download_queue WHERE uid = ? AND type = ?");
            int N = ids.size();
            for (int a = 0; a < N; a++) {
                Pair<Long, Integer> pair = ids.get(a);
                state.requery();
                state.bindLong(1, ((Long) pair.first).longValue());
                state.bindInteger(2, ((Integer) pair.second).intValue());
                state.step();
            }
            state.dispose();
            if (transaction) {
                this.database.commitTransaction();
            }
            AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda29(this, ids));
        }
    }

    /* renamed from: lambda$deleteFromDownloadQueue$141$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m873x9d4fae95(ArrayList ids) {
        getDownloadController().cancelDownloading(ids);
    }

    public void clearDownloadQueue(int type) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda118(this, type));
    }

    /* renamed from: lambda$clearDownloadQueue$142$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m856x4a8c5bb2(int type) {
        if (type == 0) {
            try {
                this.database.executeFast("DELETE FROM download_queue WHERE 1").stepThis().dispose();
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        } else {
            this.database.executeFast(String.format(Locale.US, "DELETE FROM download_queue WHERE type = %d", new Object[]{Integer.valueOf(type)})).stepThis().dispose();
        }
    }

    public void getDownloadQueue(int type) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda121(this, type));
    }

    /* renamed from: lambda$getDownloadQueue$144$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m895xed030439(int type) {
        try {
            ArrayList<DownloadObject> objects = new ArrayList<>();
            SQLiteCursor cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT uid, type, data, parent FROM download_queue WHERE type = %d ORDER BY date DESC LIMIT 3", new Object[]{Integer.valueOf(type)}), new Object[0]);
            while (cursor.next()) {
                DownloadObject downloadObject = new DownloadObject();
                downloadObject.type = cursor.intValue(1);
                downloadObject.id = cursor.longValue(0);
                downloadObject.parent = cursor.stringValue(3);
                NativeByteBuffer data = cursor.byteBufferValue(2);
                if (data != null) {
                    TLRPC.MessageMedia messageMedia = TLRPC.MessageMedia.TLdeserialize(data, data.readInt32(false), false);
                    data.reuse();
                    if (messageMedia.document != null) {
                        downloadObject.object = messageMedia.document;
                        downloadObject.secret = MessageObject.isVideoDocument(messageMedia.document) && messageMedia.ttl_seconds > 0 && messageMedia.ttl_seconds <= 60;
                    } else if (messageMedia.photo != null) {
                        downloadObject.object = messageMedia.photo;
                        downloadObject.secret = messageMedia.ttl_seconds > 0 && messageMedia.ttl_seconds <= 60;
                    }
                    downloadObject.forceCache = (messageMedia.flags & Integer.MIN_VALUE) != 0;
                }
                objects.add(downloadObject);
            }
            cursor.dispose();
            AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda144(this, type, objects));
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* renamed from: lambda$getDownloadQueue$143$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m894x95e5135a(int type, ArrayList objects) {
        getDownloadController().processDownloadObjects(type, objects);
    }

    private int getMessageMediaType(TLRPC.Message message) {
        if (message instanceof TLRPC.TL_message_secret) {
            if ((message.media instanceof TLRPC.TL_messageMediaPhoto) || MessageObject.isGifMessage(message) || MessageObject.isVoiceMessage(message) || MessageObject.isVideoMessage(message) || MessageObject.isRoundVideoMessage(message)) {
                return (message.ttl <= 0 || message.ttl > 60) ? 0 : 1;
            }
            return -1;
        } else if ((message instanceof TLRPC.TL_message) && (((message.media instanceof TLRPC.TL_messageMediaPhoto) || (message.media instanceof TLRPC.TL_messageMediaDocument)) && message.media.ttl_seconds != 0)) {
            return 1;
        } else {
            if ((message.media instanceof TLRPC.TL_messageMediaPhoto) || MessageObject.isVideoMessage(message)) {
                return 0;
            }
            return -1;
        }
    }

    public void putWebPages(LongSparseArray<TLRPC.WebPage> webPages) {
        if (!isEmpty((LongSparseArray<?>) webPages)) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda18(this, webPages));
        }
    }

    /* renamed from: lambda$putWebPages$146$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m974lambda$putWebPages$146$orgtelegrammessengerMessagesStorage(LongSparseArray webPages) {
        int N;
        SQLiteCursor cursor;
        LongSparseArray longSparseArray = webPages;
        try {
            ArrayList<TLRPC.Message> messages = new ArrayList<>();
            int a = 0;
            int N2 = webPages.size();
            while (true) {
                int i = 2;
                if (a >= N2) {
                    break;
                }
                SQLiteDatabase sQLiteDatabase = this.database;
                SQLiteCursor cursor2 = sQLiteDatabase.queryFinalized("SELECT mid, uid FROM webpage_pending_v2 WHERE id = " + longSparseArray.keyAt(a), new Object[0]);
                LongSparseArray<ArrayList<Integer>> dialogs = new LongSparseArray<>();
                while (cursor2.next()) {
                    long dialogId = cursor2.longValue(1);
                    ArrayList<Integer> mids = dialogs.get(dialogId);
                    if (mids == null) {
                        mids = new ArrayList<>();
                        dialogs.put(dialogId, mids);
                    }
                    mids.add(Integer.valueOf(cursor2.intValue(0)));
                }
                cursor2.dispose();
                if (dialogs.isEmpty()) {
                    N = N2;
                } else {
                    int b = 0;
                    int N22 = dialogs.size();
                    while (b < N22) {
                        long dialogId2 = dialogs.keyAt(b);
                        SQLiteDatabase sQLiteDatabase2 = this.database;
                        Locale locale = Locale.US;
                        int N3 = N2;
                        Object[] objArr = new Object[i];
                        objArr[0] = TextUtils.join(",", dialogs.valueAt(b));
                        objArr[1] = Long.valueOf(dialogId2);
                        SQLiteCursor cursor3 = sQLiteDatabase2.queryFinalized(String.format(locale, "SELECT mid, data FROM messages_v2 WHERE mid IN (%s) AND uid = %d", objArr), new Object[0]);
                        while (cursor3.next()) {
                            int mid = cursor3.intValue(0);
                            NativeByteBuffer data = cursor3.byteBufferValue(1);
                            if (data != null) {
                                TLRPC.Message message = TLRPC.Message.TLdeserialize(data, data.readInt32(false), false);
                                cursor = cursor3;
                                message.readAttachPath(data, getUserConfig().clientUserId);
                                data.reuse();
                                if (message.media instanceof TLRPC.TL_messageMediaWebPage) {
                                    message.id = mid;
                                    message.media.webpage = (TLRPC.WebPage) longSparseArray.valueAt(a);
                                    messages.add(message);
                                }
                            } else {
                                cursor = cursor3;
                            }
                            cursor3 = cursor;
                        }
                        SQLiteCursor cursor4 = cursor3;
                        cursor4.dispose();
                        b++;
                        SQLiteCursor sQLiteCursor = cursor4;
                        N2 = N3;
                        i = 2;
                    }
                    N = N2;
                }
                a++;
                N2 = N;
            }
            if (messages.isEmpty() == 0) {
                this.database.beginTransaction();
                SQLitePreparedStatement state = this.database.executeFast("UPDATE messages_v2 SET data = ? WHERE mid = ? AND uid = ?");
                SQLitePreparedStatement state2 = this.database.executeFast("UPDATE media_v4 SET data = ? WHERE mid = ? AND uid = ?");
                for (int a2 = 0; a2 < messages.size(); a2++) {
                    TLRPC.Message message2 = messages.get(a2);
                    NativeByteBuffer data2 = new NativeByteBuffer(message2.getObjectSize());
                    message2.serializeToStream(data2);
                    state.requery();
                    state.bindByteBuffer(1, data2);
                    state.bindInteger(2, message2.id);
                    state.bindLong(3, MessageObject.getDialogId(message2));
                    state.step();
                    state2.requery();
                    state2.bindByteBuffer(1, data2);
                    state2.bindInteger(2, message2.id);
                    state2.bindLong(3, MessageObject.getDialogId(message2));
                    state2.step();
                    data2.reuse();
                }
                state.dispose();
                state2.dispose();
                this.database.commitTransaction();
                AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda38(this, messages));
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* renamed from: lambda$putWebPages$145$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m973lambda$putWebPages$145$orgtelegrammessengerMessagesStorage(ArrayList messages) {
        getNotificationCenter().postNotificationName(NotificationCenter.didReceivedWebpages, messages);
    }

    public void overwriteChannel(long channelId, TLRPC.TL_updates_channelDifferenceTooLong difference, int newDialogType) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda172(this, channelId, newDialogType, difference));
    }

    /* renamed from: lambda$overwriteChannel$148$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m955x427e2d50(long channelId, int newDialogType, TLRPC.TL_updates_channelDifferenceTooLong difference) {
        int pinned;
        long j = channelId;
        int i = newDialogType;
        TLRPC.TL_updates_channelDifferenceTooLong tL_updates_channelDifferenceTooLong = difference;
        boolean checkInvite = false;
        long did = -j;
        try {
            SQLiteCursor cursor = this.database.queryFinalized("SELECT pinned FROM dialogs WHERE did = " + did, new Object[0]);
            if (cursor.next()) {
                pinned = cursor.intValue(0);
            } else if (i != 0) {
                checkInvite = true;
                pinned = 0;
            } else {
                pinned = 0;
            }
            cursor.dispose();
            this.database.executeFast("DELETE FROM chat_pinned_count WHERE uid = " + did).stepThis().dispose();
            this.database.executeFast("DELETE FROM chat_pinned_v2 WHERE uid = " + did).stepThis().dispose();
            this.database.executeFast("DELETE FROM messages_v2 WHERE uid = " + did).stepThis().dispose();
            this.database.executeFast("DELETE FROM bot_keyboard WHERE uid = " + did).stepThis().dispose();
            this.database.executeFast("UPDATE media_counts_v2 SET old = 1 WHERE uid = " + did).stepThis().dispose();
            this.database.executeFast("DELETE FROM media_v4 WHERE uid = " + did).stepThis().dispose();
            this.database.executeFast("DELETE FROM messages_holes WHERE uid = " + did).stepThis().dispose();
            this.database.executeFast("DELETE FROM media_holes_v2 WHERE uid = " + did).stepThis().dispose();
            getMediaDataController().clearBotKeyboard(did, (ArrayList<Integer>) null);
            TLRPC.TL_messages_dialogs dialogs = new TLRPC.TL_messages_dialogs();
            dialogs.chats.addAll(tL_updates_channelDifferenceTooLong.chats);
            dialogs.users.addAll(tL_updates_channelDifferenceTooLong.users);
            dialogs.messages.addAll(tL_updates_channelDifferenceTooLong.messages);
            TLRPC.Dialog dialog = tL_updates_channelDifferenceTooLong.dialog;
            dialog.id = did;
            dialog.flags = 1;
            dialog.notify_settings = null;
            dialog.pinned = pinned != 0;
            dialog.pinnedNum = pinned;
            dialogs.dialogs.add(dialog);
            putDialogsInternal(dialogs, 0);
            TLRPC.TL_messages_dialogs tL_messages_dialogs = dialogs;
            TLRPC.Dialog dialog2 = dialog;
            int i2 = pinned;
            SQLiteCursor sQLiteCursor = cursor;
            updateDialogsWithDeletedMessages(-j, channelId, new ArrayList(), (ArrayList<Long>) null, false);
            AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda7(this, did, tL_updates_channelDifferenceTooLong));
            if (!checkInvite) {
                return;
            }
            if (i == 1) {
                getMessagesController().checkChatInviter(j, true);
            } else {
                getMessagesController().generateJoinMessage(j, false);
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* renamed from: lambda$overwriteChannel$147$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m954xeb603CLASSNAME(long did, TLRPC.TL_updates_channelDifferenceTooLong difference) {
        getNotificationCenter().postNotificationName(NotificationCenter.removeAllMessagesFromDialog, Long.valueOf(did), true, difference);
    }

    public void putChannelViews(LongSparseArray<SparseIntArray> channelViews, LongSparseArray<SparseIntArray> channelForwards, LongSparseArray<SparseArray<TLRPC.MessageReplies>> channelReplies, boolean addReply) {
        if (!isEmpty((LongSparseArray<?>) channelViews) || !isEmpty((LongSparseArray<?>) channelForwards) || !isEmpty((LongSparseArray<?>) channelReplies)) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda20(this, channelViews, channelForwards, channelReplies, addReply));
        }
    }

    /* renamed from: lambda$putChannelViews$149$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m960xc4fCLASSNAME(LongSparseArray channelViews, LongSparseArray channelForwards, LongSparseArray channelReplies, boolean addReply) {
        SparseArray<TLRPC.MessageReplies> messages;
        NativeByteBuffer data;
        LongSparseArray longSparseArray = channelViews;
        LongSparseArray longSparseArray2 = channelForwards;
        LongSparseArray longSparseArray3 = channelReplies;
        try {
            this.database.beginTransaction();
            int i = 4;
            int i2 = 2;
            if (!isEmpty((LongSparseArray<?>) channelViews)) {
                SQLitePreparedStatement state = this.database.executeFast("UPDATE messages_v2 SET media = max((SELECT media FROM messages_v2 WHERE mid = ? AND uid = ?), ?) WHERE mid = ? AND uid = ?");
                int a = 0;
                while (a < channelViews.size()) {
                    long peer = longSparseArray.keyAt(a);
                    SparseIntArray messages2 = (SparseIntArray) longSparseArray.valueAt(a);
                    int b = 0;
                    int N = messages2.size();
                    while (b < N) {
                        int views = messages2.valueAt(b);
                        state.requery();
                        int messageId = messages2.keyAt(b);
                        state.bindInteger(1, messageId);
                        state.bindLong(i2, peer);
                        state.bindInteger(3, views);
                        state.bindInteger(i, messageId);
                        state.bindLong(5, peer);
                        state.step();
                        b++;
                        i = 4;
                        i2 = 2;
                    }
                    a++;
                    i = 4;
                    i2 = 2;
                }
                state.dispose();
            }
            if (!isEmpty((LongSparseArray<?>) channelForwards)) {
                SQLitePreparedStatement state2 = this.database.executeFast("UPDATE messages_v2 SET forwards = max((SELECT forwards FROM messages_v2 WHERE mid = ? AND uid = ?), ?) WHERE mid = ? AND uid = ?");
                for (int a2 = 0; a2 < channelForwards.size(); a2++) {
                    long peer2 = longSparseArray2.keyAt(a2);
                    SparseIntArray messages3 = (SparseIntArray) longSparseArray2.valueAt(a2);
                    int N2 = messages3.size();
                    for (int b2 = 0; b2 < N2; b2++) {
                        int forwards = messages3.valueAt(b2);
                        int messageId2 = messages3.keyAt(b2);
                        state2.requery();
                        state2.bindInteger(1, messageId2);
                        state2.bindLong(2, peer2);
                        state2.bindInteger(3, forwards);
                        state2.bindInteger(4, messageId2);
                        state2.bindLong(5, peer2);
                        state2.step();
                    }
                }
                state2.dispose();
            }
            if (!isEmpty((LongSparseArray<?>) channelReplies)) {
                SQLitePreparedStatement state3 = this.database.executeFast("UPDATE messages_v2 SET replies_data = ? WHERE mid = ? AND uid = ?");
                int a3 = 0;
                while (a3 < channelReplies.size()) {
                    long peer3 = longSparseArray3.keyAt(a3);
                    SparseArray<TLRPC.MessageReplies> messages4 = (SparseArray) longSparseArray3.valueAt(a3);
                    int b3 = 0;
                    int N3 = messages4.size();
                    while (b3 < N3) {
                        int messageId3 = messages4.keyAt(b3);
                        TLRPC.MessageReplies currentReplies = null;
                        SQLiteCursor cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT replies_data FROM messages_v2 WHERE mid = %d AND uid = %d", new Object[]{Integer.valueOf(messageId3), Long.valueOf(peer3)}), new Object[0]);
                        boolean next = cursor.next();
                        boolean messageExists = next;
                        if (next && (data = cursor.byteBufferValue(0)) != null) {
                            currentReplies = TLRPC.MessageReplies.TLdeserialize(data, data.readInt32(false), false);
                            data.reuse();
                        }
                        cursor.dispose();
                        if (!messageExists) {
                            messages = messages4;
                        } else {
                            TLRPC.MessageReplies replies = messages4.get(messages4.keyAt(b3));
                            if (addReply || currentReplies == null || currentReplies.replies_pts == 0 || replies.replies_pts > currentReplies.replies_pts || replies.read_max_id > currentReplies.read_max_id || replies.max_id > currentReplies.max_id) {
                                if (addReply) {
                                    if (currentReplies == null) {
                                        currentReplies = new TLRPC.TL_messageReplies();
                                        currentReplies.flags |= 2;
                                    }
                                    currentReplies.replies += replies.replies;
                                    int c = 0;
                                    int N4 = replies.recent_repliers.size();
                                    while (c < N4) {
                                        long id = MessageObject.getPeerId(replies.recent_repliers.get(c));
                                        int d = 0;
                                        SQLiteCursor cursor2 = cursor;
                                        int N22 = currentReplies.recent_repliers.size();
                                        while (d < N22) {
                                            SparseArray<TLRPC.MessageReplies> messages5 = messages4;
                                            if (id == MessageObject.getPeerId(currentReplies.recent_repliers.get(d))) {
                                                currentReplies.recent_repliers.remove(d);
                                                d--;
                                                N22--;
                                            }
                                            d++;
                                            messages4 = messages5;
                                        }
                                        c++;
                                        cursor = cursor2;
                                    }
                                    messages = messages4;
                                    currentReplies.recent_repliers.addAll(0, replies.recent_repliers);
                                    while (currentReplies.recent_repliers.size() > 3) {
                                        currentReplies.recent_repliers.remove(0);
                                    }
                                    replies = currentReplies;
                                } else {
                                    messages = messages4;
                                }
                                if (currentReplies != null && currentReplies.read_max_id > replies.read_max_id) {
                                    replies.read_max_id = currentReplies.read_max_id;
                                }
                                state3.requery();
                                NativeByteBuffer data2 = new NativeByteBuffer(replies.getObjectSize());
                                replies.serializeToStream(data2);
                                state3.bindByteBuffer(1, data2);
                                state3.bindInteger(2, messageId3);
                                state3.bindLong(3, peer3);
                                state3.step();
                                data2.reuse();
                            } else {
                                messages = messages4;
                            }
                        }
                        b3++;
                        LongSparseArray longSparseArray4 = channelViews;
                        LongSparseArray longSparseArray5 = channelForwards;
                        LongSparseArray longSparseArray6 = channelReplies;
                        messages4 = messages;
                    }
                    a3++;
                    LongSparseArray longSparseArray7 = channelViews;
                    LongSparseArray longSparseArray8 = channelForwards;
                    longSparseArray3 = channelReplies;
                }
                state3.dispose();
            }
            this.database.commitTransaction();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: updateRepliesMaxReadIdInternal */
    public void m1028x4e9538bb(long chatId, int mid, int readMaxId) {
        NativeByteBuffer data;
        long dialogId = -chatId;
        try {
            SQLitePreparedStatement state = this.database.executeFast("UPDATE messages_v2 SET replies_data = ? WHERE mid = ? AND uid = ?");
            TLRPC.MessageReplies currentReplies = null;
            SQLiteCursor cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT replies_data FROM messages_v2 WHERE mid = %d AND uid = %d", new Object[]{Integer.valueOf(mid), Long.valueOf(dialogId)}), new Object[0]);
            if (cursor.next() && (data = cursor.byteBufferValue(0)) != null) {
                currentReplies = TLRPC.MessageReplies.TLdeserialize(data, data.readInt32(false), false);
                data.reuse();
            }
            cursor.dispose();
            if (currentReplies != null) {
                try {
                    currentReplies.read_max_id = readMaxId;
                    state.requery();
                    NativeByteBuffer data2 = new NativeByteBuffer(currentReplies.getObjectSize());
                    currentReplies.serializeToStream(data2);
                    state.bindByteBuffer(1, data2);
                    try {
                        state.bindInteger(2, mid);
                        state.bindLong(3, dialogId);
                        state.step();
                        data2.reuse();
                    } catch (Exception e) {
                        e = e;
                        FileLog.e((Throwable) e);
                    }
                } catch (Exception e2) {
                    e = e2;
                    int i = mid;
                    FileLog.e((Throwable) e);
                }
            } else {
                int i2 = mid;
                int i3 = readMaxId;
            }
            state.dispose();
        } catch (Exception e3) {
            e = e3;
            int i4 = mid;
            int i5 = readMaxId;
            FileLog.e((Throwable) e);
        }
    }

    public void updateRepliesMaxReadId(long chatId, int mid, int readMaxId, boolean useQueue) {
        if (useQueue) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda162(this, chatId, mid, readMaxId));
        } else {
            m1028x4e9538bb(chatId, mid, readMaxId);
        }
    }

    public void updateRepliesCount(long chatId, int mid, ArrayList<TLRPC.Peer> repliers, int maxId, int count) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda139(this, mid, chatId, count, repliers, maxId));
    }

    /* renamed from: lambda$updateRepliesCount$151$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m1027xb63eb520(int mid, long chatId, int count, ArrayList repliers, int maxId) {
        NativeByteBuffer data;
        long j = chatId;
        ArrayList arrayList = repliers;
        int i = maxId;
        try {
            SQLitePreparedStatement state = this.database.executeFast("UPDATE messages_v2 SET replies_data = ? WHERE mid = ? AND uid = ?");
            TLRPC.MessageReplies currentReplies = null;
            SQLiteCursor cursor = this.database.queryFinalized(String.format(Locale.ENGLISH, "SELECT replies_data FROM messages_v2 WHERE mid = %d AND uid = %d", new Object[]{Integer.valueOf(mid), Long.valueOf(-j)}), new Object[0]);
            if (cursor.next() && (data = cursor.byteBufferValue(0)) != null) {
                currentReplies = TLRPC.MessageReplies.TLdeserialize(data, data.readInt32(false), false);
                data.reuse();
            }
            cursor.dispose();
            if (currentReplies != null) {
                currentReplies.replies += count;
                if (currentReplies.replies < 0) {
                    currentReplies.replies = 0;
                }
                if (arrayList != null) {
                    currentReplies.recent_repliers = arrayList;
                    currentReplies.flags |= 2;
                }
                if (i != 0) {
                    currentReplies.max_id = i;
                }
                state.requery();
                NativeByteBuffer data2 = new NativeByteBuffer(currentReplies.getObjectSize());
                currentReplies.serializeToStream(data2);
                state.bindByteBuffer(1, data2);
                try {
                    state.bindInteger(2, mid);
                    state.bindLong(3, -j);
                    state.step();
                    data2.reuse();
                } catch (Exception e) {
                    e = e;
                    FileLog.e((Throwable) e);
                }
            } else {
                int i2 = mid;
            }
            state.dispose();
        } catch (Exception e2) {
            e = e2;
            int i3 = mid;
            FileLog.e((Throwable) e);
        }
    }

    private boolean isValidKeyboardToSave(TLRPC.Message message) {
        return message.reply_markup != null && !(message.reply_markup instanceof TLRPC.TL_replyInlineMarkup) && (!message.reply_markup.selective || message.mentioned);
    }

    public void updateMessageVerifyFlags(ArrayList<TLRPC.Message> messages) {
        Utilities.stageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda39(this, messages));
    }

    /* renamed from: lambda$updateMessageVerifyFlags$152$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m1022xfed0var_f(ArrayList messages) {
        try {
            this.database.beginTransaction();
            SQLitePreparedStatement state = this.database.executeFast("UPDATE messages_v2 SET imp = ? WHERE mid = ? AND uid = ?");
            int N = messages.size();
            for (int a = 0; a < N; a++) {
                TLRPC.Message message = (TLRPC.Message) messages.get(a);
                state.requery();
                int flags = 0;
                if (message.stickerVerified == 0) {
                    flags = 0 | 1;
                } else if (message.stickerVerified == 2) {
                    flags = 0 | 2;
                }
                state.bindInteger(1, flags);
                state.bindInteger(2, message.id);
                state.bindLong(3, MessageObject.getDialogId(message));
                state.step();
            }
            state.dispose();
            this.database.commitTransaction();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:248:0x0722 A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:249:0x072a A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:252:0x0738 A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:253:0x073b A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:258:0x074b A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:259:0x074d A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:262:0x075f A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:263:0x0778 A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:266:0x0783 A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:271:0x0798 A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:274:0x07b5 A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:275:0x07d0 A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:278:0x07da A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:282:0x0810 A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:288:0x081c A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:289:0x0827 A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:293:0x0859 A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:297:0x088b A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:302:0x08b4 A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:305:0x08bc A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:417:0x0c5d A[Catch:{ Exception -> 0x0112 }] */
    /* JADX WARNING: Removed duplicated region for block: B:424:0x0CLASSNAME A[Catch:{ Exception -> 0x0112 }] */
    /* renamed from: putMessagesInternal */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void m965lambda$putMessages$154$orgtelegrammessengerMessagesStorage(java.util.ArrayList<org.telegram.tgnet.TLRPC.Message> r70, boolean r71, boolean r72, int r73, boolean r74, boolean r75) {
        /*
            r69 = this;
            r1 = r69
            r2 = r70
            java.lang.String r3 = "REPLACE INTO randoms_v2 VALUES(?, ?, ?)"
            r9 = 3
            r10 = 2
            r11 = 1
            if (r75 == 0) goto L_0x00d1
            if (r71 == 0) goto L_0x0012
            org.telegram.SQLite.SQLiteDatabase r12 = r1.database     // Catch:{ Exception -> 0x0112 }
            r12.beginTransaction()     // Catch:{ Exception -> 0x0112 }
        L_0x0012:
            org.telegram.SQLite.SQLiteDatabase r12 = r1.database     // Catch:{ Exception -> 0x0112 }
            java.lang.String r13 = "REPLACE INTO scheduled_messages_v2 VALUES(?, ?, ?, ?, ?, ?, NULL, 0)"
            org.telegram.SQLite.SQLitePreparedStatement r12 = r12.executeFast(r13)     // Catch:{ Exception -> 0x0112 }
            org.telegram.SQLite.SQLiteDatabase r13 = r1.database     // Catch:{ Exception -> 0x0112 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r13.executeFast(r3)     // Catch:{ Exception -> 0x0112 }
            java.util.ArrayList r13 = new java.util.ArrayList     // Catch:{ Exception -> 0x0112 }
            r13.<init>()     // Catch:{ Exception -> 0x0112 }
            r14 = 0
        L_0x0026:
            int r15 = r70.size()     // Catch:{ Exception -> 0x0112 }
            if (r14 >= r15) goto L_0x00af
            java.lang.Object r15 = r2.get(r14)     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$Message r15 = (org.telegram.tgnet.TLRPC.Message) r15     // Catch:{ Exception -> 0x0112 }
            boolean r7 = r15 instanceof org.telegram.tgnet.TLRPC.TL_messageEmpty     // Catch:{ Exception -> 0x0112 }
            if (r7 == 0) goto L_0x0037
            goto L_0x00a9
        L_0x0037:
            r1.fixUnsupportedMedia(r15)     // Catch:{ Exception -> 0x0112 }
            r12.requery()     // Catch:{ Exception -> 0x0112 }
            int r7 = r15.id     // Catch:{ Exception -> 0x0112 }
            int r8 = r15.local_id     // Catch:{ Exception -> 0x0112 }
            if (r8 == 0) goto L_0x0046
            int r8 = r15.local_id     // Catch:{ Exception -> 0x0112 }
            r7 = r8
        L_0x0046:
            org.telegram.tgnet.NativeByteBuffer r8 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0112 }
            int r4 = r15.getObjectSize()     // Catch:{ Exception -> 0x0112 }
            r8.<init>((int) r4)     // Catch:{ Exception -> 0x0112 }
            r4 = r8
            r15.serializeToStream(r4)     // Catch:{ Exception -> 0x0112 }
            long r19 = org.telegram.messenger.MessageObject.getDialogId(r15)     // Catch:{ Exception -> 0x0112 }
            r21 = r19
            r12.bindInteger(r11, r7)     // Catch:{ Exception -> 0x0112 }
            r5 = r21
            r12.bindLong(r10, r5)     // Catch:{ Exception -> 0x0112 }
            int r8 = r15.send_state     // Catch:{ Exception -> 0x0112 }
            r12.bindInteger(r9, r8)     // Catch:{ Exception -> 0x0112 }
            int r8 = r15.date     // Catch:{ Exception -> 0x0112 }
            r9 = 4
            r12.bindInteger(r9, r8)     // Catch:{ Exception -> 0x0112 }
            r8 = 5
            r12.bindByteBuffer((int) r8, (org.telegram.tgnet.NativeByteBuffer) r4)     // Catch:{ Exception -> 0x0112 }
            int r9 = r15.ttl     // Catch:{ Exception -> 0x0112 }
            r8 = 6
            r12.bindInteger(r8, r9)     // Catch:{ Exception -> 0x0112 }
            r12.step()     // Catch:{ Exception -> 0x0112 }
            long r8 = r15.random_id     // Catch:{ Exception -> 0x0112 }
            r16 = 0
            int r22 = (r8 > r16 ? 1 : (r8 == r16 ? 0 : -1))
            if (r22 == 0) goto L_0x0095
            r3.requery()     // Catch:{ Exception -> 0x0112 }
            long r8 = r15.random_id     // Catch:{ Exception -> 0x0112 }
            r3.bindLong(r11, r8)     // Catch:{ Exception -> 0x0112 }
            r3.bindInteger(r10, r7)     // Catch:{ Exception -> 0x0112 }
            long r8 = r15.dialog_id     // Catch:{ Exception -> 0x0112 }
            r11 = 3
            r3.bindLong(r11, r8)     // Catch:{ Exception -> 0x0112 }
            r3.step()     // Catch:{ Exception -> 0x0112 }
        L_0x0095:
            r4.reuse()     // Catch:{ Exception -> 0x0112 }
            java.lang.Long r8 = java.lang.Long.valueOf(r5)     // Catch:{ Exception -> 0x0112 }
            boolean r8 = r13.contains(r8)     // Catch:{ Exception -> 0x0112 }
            if (r8 != 0) goto L_0x00a9
            java.lang.Long r8 = java.lang.Long.valueOf(r5)     // Catch:{ Exception -> 0x0112 }
            r13.add(r8)     // Catch:{ Exception -> 0x0112 }
        L_0x00a9:
            int r14 = r14 + 1
            r9 = 3
            r11 = 1
            goto L_0x0026
        L_0x00af:
            r12.dispose()     // Catch:{ Exception -> 0x0112 }
            r3.dispose()     // Catch:{ Exception -> 0x0112 }
            if (r71 == 0) goto L_0x00bc
            org.telegram.SQLite.SQLiteDatabase r4 = r1.database     // Catch:{ Exception -> 0x0112 }
            r4.commitTransaction()     // Catch:{ Exception -> 0x0112 }
        L_0x00bc:
            r4 = 0
            int r5 = r13.size()     // Catch:{ Exception -> 0x0112 }
        L_0x00c1:
            if (r4 >= r5) goto L_0x00cf
            java.lang.Object r6 = r13.get(r4)     // Catch:{ Exception -> 0x0112 }
            java.lang.Long r6 = (java.lang.Long) r6     // Catch:{ Exception -> 0x0112 }
            r1.broadcastScheduledMessagesChange(r6)     // Catch:{ Exception -> 0x0112 }
            int r4 = r4 + 1
            goto L_0x00c1
        L_0x00cf:
            goto L_0x0e27
        L_0x00d1:
            r4 = 0
            if (r74 == 0) goto L_0x0116
            java.lang.Object r5 = r2.get(r4)     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$Message r5 = (org.telegram.tgnet.TLRPC.Message) r5     // Catch:{ Exception -> 0x0112 }
            long r6 = r5.dialog_id     // Catch:{ Exception -> 0x0112 }
            r8 = 0
            int r11 = (r6 > r8 ? 1 : (r6 == r8 ? 0 : -1))
            if (r11 != 0) goto L_0x00e5
            org.telegram.messenger.MessageObject.getDialogId(r5)     // Catch:{ Exception -> 0x0112 }
        L_0x00e5:
            r6 = -1
            org.telegram.SQLite.SQLiteDatabase r7 = r1.database     // Catch:{ Exception -> 0x0112 }
            java.lang.StringBuilder r8 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0112 }
            r8.<init>()     // Catch:{ Exception -> 0x0112 }
            java.lang.String r9 = "SELECT last_mid FROM dialogs WHERE did = "
            r8.append(r9)     // Catch:{ Exception -> 0x0112 }
            long r11 = r5.dialog_id     // Catch:{ Exception -> 0x0112 }
            r8.append(r11)     // Catch:{ Exception -> 0x0112 }
            java.lang.String r8 = r8.toString()     // Catch:{ Exception -> 0x0112 }
            java.lang.Object[] r9 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0112 }
            org.telegram.SQLite.SQLiteCursor r7 = r7.queryFinalized(r8, r9)     // Catch:{ Exception -> 0x0112 }
            boolean r8 = r7.next()     // Catch:{ Exception -> 0x0112 }
            if (r8 == 0) goto L_0x010c
            int r8 = r7.intValue(r4)     // Catch:{ Exception -> 0x0112 }
            r6 = r8
        L_0x010c:
            r7.dispose()     // Catch:{ Exception -> 0x0112 }
            if (r6 == 0) goto L_0x0116
            return
        L_0x0112:
            r0 = move-exception
            r2 = r0
            goto L_0x0e28
        L_0x0116:
            if (r71 == 0) goto L_0x011d
            org.telegram.SQLite.SQLiteDatabase r5 = r1.database     // Catch:{ Exception -> 0x0112 }
            r5.beginTransaction()     // Catch:{ Exception -> 0x0112 }
        L_0x011d:
            androidx.collection.LongSparseArray r5 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x0112 }
            r5.<init>()     // Catch:{ Exception -> 0x0112 }
            org.telegram.messenger.support.LongSparseIntArray r6 = new org.telegram.messenger.support.LongSparseIntArray     // Catch:{ Exception -> 0x0112 }
            r6.<init>()     // Catch:{ Exception -> 0x0112 }
            org.telegram.messenger.support.LongSparseIntArray r7 = new org.telegram.messenger.support.LongSparseIntArray     // Catch:{ Exception -> 0x0112 }
            r7.<init>()     // Catch:{ Exception -> 0x0112 }
            org.telegram.messenger.support.LongSparseIntArray r8 = new org.telegram.messenger.support.LongSparseIntArray     // Catch:{ Exception -> 0x0112 }
            r8.<init>()     // Catch:{ Exception -> 0x0112 }
            r9 = r8
            org.telegram.messenger.support.LongSparseIntArray r8 = new org.telegram.messenger.support.LongSparseIntArray     // Catch:{ Exception -> 0x0112 }
            r8.<init>()     // Catch:{ Exception -> 0x0112 }
            r11 = r8
            r8 = 0
            androidx.collection.LongSparseArray r12 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x0112 }
            r12.<init>()     // Catch:{ Exception -> 0x0112 }
            r13 = 0
            r14 = 0
            r15 = 0
            r23 = 0
            androidx.collection.LongSparseArray r24 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x0112 }
            r24.<init>()     // Catch:{ Exception -> 0x0112 }
            r25 = r24
            org.telegram.messenger.support.LongSparseIntArray r24 = new org.telegram.messenger.support.LongSparseIntArray     // Catch:{ Exception -> 0x0112 }
            r24.<init>()     // Catch:{ Exception -> 0x0112 }
            r26 = r24
            androidx.collection.LongSparseArray r24 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x0112 }
            r24.<init>()     // Catch:{ Exception -> 0x0112 }
            r27 = r24
            androidx.collection.LongSparseArray r24 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x0112 }
            r24.<init>()     // Catch:{ Exception -> 0x0112 }
            r28 = r24
            org.telegram.SQLite.SQLiteDatabase r10 = r1.database     // Catch:{ Exception -> 0x0112 }
            java.lang.String r4 = "REPLACE INTO messages_v2 VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?, ?, ?, ?, ?, ?, 0)"
            org.telegram.SQLite.SQLitePreparedStatement r4 = r10.executeFast(r4)     // Catch:{ Exception -> 0x0112 }
            r10 = 0
            r30 = r8
            org.telegram.SQLite.SQLiteDatabase r8 = r1.database     // Catch:{ Exception -> 0x0112 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r8.executeFast(r3)     // Catch:{ Exception -> 0x0112 }
            org.telegram.SQLite.SQLiteDatabase r8 = r1.database     // Catch:{ Exception -> 0x0112 }
            r31 = r10
            java.lang.String r10 = "REPLACE INTO download_queue VALUES(?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r8 = r8.executeFast(r10)     // Catch:{ Exception -> 0x0112 }
            r10 = r8
            org.telegram.SQLite.SQLiteDatabase r8 = r1.database     // Catch:{ Exception -> 0x0112 }
            r32 = r13
            java.lang.String r13 = "REPLACE INTO webpage_pending_v2 VALUES(?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r8 = r8.executeFast(r13)     // Catch:{ Exception -> 0x0112 }
            r13 = r8
            r8 = 0
            r33 = 0
            r34 = 2147483647(0x7fffffff, float:NaN)
            r35 = 0
            r67 = r23
            r23 = r8
            r8 = r15
            r15 = r32
            r32 = r14
            r14 = r67
            r68 = r35
            r35 = r9
            r9 = r68
        L_0x019f:
            r36 = r7
            int r7 = r70.size()     // Catch:{ Exception -> 0x0112 }
            r37 = r10
            if (r9 >= r7) goto L_0x0397
            java.lang.Object r7 = r2.get(r9)     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$Message r7 = (org.telegram.tgnet.TLRPC.Message) r7     // Catch:{ Exception -> 0x0112 }
            int r10 = r7.id     // Catch:{ Exception -> 0x0112 }
            org.telegram.messenger.MessageObject.getDialogId(r7)     // Catch:{ Exception -> 0x0112 }
            r39 = r13
            boolean r13 = r7.mentioned     // Catch:{ Exception -> 0x0112 }
            if (r13 == 0) goto L_0x01e9
            boolean r13 = r7.media_unread     // Catch:{ Exception -> 0x0112 }
            if (r13 == 0) goto L_0x01e9
            r40 = r3
            r13 = r4
            long r3 = r7.dialog_id     // Catch:{ Exception -> 0x0112 }
            r41 = r5
            r5 = r28
            java.lang.Object r3 = r5.get(r3)     // Catch:{ Exception -> 0x0112 }
            java.util.ArrayList r3 = (java.util.ArrayList) r3     // Catch:{ Exception -> 0x0112 }
            if (r3 != 0) goto L_0x01de
            java.util.ArrayList r4 = new java.util.ArrayList     // Catch:{ Exception -> 0x0112 }
            r4.<init>()     // Catch:{ Exception -> 0x0112 }
            r3 = r4
            r28 = r13
            r4 = r14
            long r13 = r7.dialog_id     // Catch:{ Exception -> 0x0112 }
            r5.put(r13, r3)     // Catch:{ Exception -> 0x0112 }
            goto L_0x01e1
        L_0x01de:
            r28 = r13
            r4 = r14
        L_0x01e1:
            java.lang.Integer r13 = java.lang.Integer.valueOf(r10)     // Catch:{ Exception -> 0x0112 }
            r3.add(r13)     // Catch:{ Exception -> 0x0112 }
            goto L_0x01f2
        L_0x01e9:
            r40 = r3
            r41 = r5
            r5 = r28
            r28 = r4
            r4 = r14
        L_0x01f2:
            org.telegram.tgnet.TLRPC$MessageAction r3 = r7.action     // Catch:{ Exception -> 0x0112 }
            boolean r3 = r3 instanceof org.telegram.tgnet.TLRPC.TL_messageActionHistoryClear     // Catch:{ Exception -> 0x0112 }
            java.lang.String r13 = ","
            if (r3 != 0) goto L_0x02cf
            boolean r3 = org.telegram.messenger.MessageObject.isOut(r7)     // Catch:{ Exception -> 0x0112 }
            if (r3 == 0) goto L_0x0213
            boolean r3 = r7.from_scheduled     // Catch:{ Exception -> 0x0112 }
            if (r3 == 0) goto L_0x0205
            goto L_0x0213
        L_0x0205:
            r42 = r5
            r3 = r6
            r6 = r15
            r2 = r27
            r27 = r26
            r26 = r11
            r11 = r25
            goto L_0x02db
        L_0x0213:
            int r3 = r7.id     // Catch:{ Exception -> 0x0112 }
            if (r3 > 0) goto L_0x021d
            boolean r3 = org.telegram.messenger.MessageObject.isUnread(r7)     // Catch:{ Exception -> 0x0112 }
            if (r3 == 0) goto L_0x0205
        L_0x021d:
            long r2 = r7.dialog_id     // Catch:{ Exception -> 0x0112 }
            r14 = r26
            r26 = r11
            r11 = -1
            int r2 = r14.get(r2, r11)     // Catch:{ Exception -> 0x0112 }
            if (r2 != r11) goto L_0x0265
            org.telegram.SQLite.SQLiteDatabase r3 = r1.database     // Catch:{ Exception -> 0x0112 }
            java.lang.StringBuilder r11 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0112 }
            r11.<init>()     // Catch:{ Exception -> 0x0112 }
            r38 = r2
            java.lang.String r2 = "SELECT inbox_max FROM dialogs WHERE did = "
            r11.append(r2)     // Catch:{ Exception -> 0x0112 }
            r42 = r5
            r2 = r6
            long r5 = r7.dialog_id     // Catch:{ Exception -> 0x0112 }
            r11.append(r5)     // Catch:{ Exception -> 0x0112 }
            java.lang.String r5 = r11.toString()     // Catch:{ Exception -> 0x0112 }
            r6 = 0
            java.lang.Object[] r11 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0112 }
            org.telegram.SQLite.SQLiteCursor r3 = r3.queryFinalized(r5, r11)     // Catch:{ Exception -> 0x0112 }
            boolean r5 = r3.next()     // Catch:{ Exception -> 0x0112 }
            if (r5 == 0) goto L_0x0258
            r5 = 0
            int r6 = r3.intValue(r5)     // Catch:{ Exception -> 0x0112 }
            r5 = r6
            goto L_0x0259
        L_0x0258:
            r5 = 0
        L_0x0259:
            r3.dispose()     // Catch:{ Exception -> 0x0112 }
            r6 = r2
            r11 = r3
            long r2 = r7.dialog_id     // Catch:{ Exception -> 0x0112 }
            r14.put(r2, r5)     // Catch:{ Exception -> 0x0112 }
            r2 = r5
            goto L_0x0269
        L_0x0265:
            r38 = r2
            r42 = r5
        L_0x0269:
            int r3 = r7.id     // Catch:{ Exception -> 0x0112 }
            if (r3 < 0) goto L_0x027c
            int r3 = r7.id     // Catch:{ Exception -> 0x0112 }
            if (r2 >= r3) goto L_0x0272
            goto L_0x027c
        L_0x0272:
            r3 = r6
            r6 = r15
            r11 = r25
            r2 = r27
            r27 = r14
            goto L_0x02db
        L_0x027c:
            r5 = r2
            long r2 = r7.dialog_id     // Catch:{ Exception -> 0x0112 }
            r11 = r25
            java.lang.Object r2 = r11.get(r2)     // Catch:{ Exception -> 0x0112 }
            java.lang.StringBuilder r2 = (java.lang.StringBuilder) r2     // Catch:{ Exception -> 0x0112 }
            if (r2 != 0) goto L_0x0298
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0112 }
            r3.<init>()     // Catch:{ Exception -> 0x0112 }
            r2 = r3
            r25 = r5
            r3 = r6
            long r5 = r7.dialog_id     // Catch:{ Exception -> 0x0112 }
            r11.put(r5, r2)     // Catch:{ Exception -> 0x0112 }
            goto L_0x029b
        L_0x0298:
            r25 = r5
            r3 = r6
        L_0x029b:
            int r5 = r2.length()     // Catch:{ Exception -> 0x0112 }
            if (r5 <= 0) goto L_0x02a4
            r2.append(r13)     // Catch:{ Exception -> 0x0112 }
        L_0x02a4:
            r2.append(r10)     // Catch:{ Exception -> 0x0112 }
            long r5 = r7.dialog_id     // Catch:{ Exception -> 0x0112 }
            r38 = r2
            r2 = r27
            java.lang.Object r5 = r2.get(r5)     // Catch:{ Exception -> 0x0112 }
            java.util.ArrayList r5 = (java.util.ArrayList) r5     // Catch:{ Exception -> 0x0112 }
            if (r5 != 0) goto L_0x02c4
            java.util.ArrayList r6 = new java.util.ArrayList     // Catch:{ Exception -> 0x0112 }
            r6.<init>()     // Catch:{ Exception -> 0x0112 }
            r5 = r6
            r27 = r14
            r6 = r15
            long r14 = r7.dialog_id     // Catch:{ Exception -> 0x0112 }
            r2.put(r14, r5)     // Catch:{ Exception -> 0x0112 }
            goto L_0x02c7
        L_0x02c4:
            r27 = r14
            r6 = r15
        L_0x02c7:
            java.lang.Integer r14 = java.lang.Integer.valueOf(r10)     // Catch:{ Exception -> 0x0112 }
            r5.add(r14)     // Catch:{ Exception -> 0x0112 }
            goto L_0x02db
        L_0x02cf:
            r42 = r5
            r3 = r6
            r6 = r15
            r2 = r27
            r27 = r26
            r26 = r11
            r11 = r25
        L_0x02db:
            boolean r5 = org.telegram.messenger.MediaDataController.canAddMessageToMedia(r7)     // Catch:{ Exception -> 0x0112 }
            if (r5 == 0) goto L_0x035c
            if (r8 != 0) goto L_0x02f6
            androidx.collection.LongSparseArray r5 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x0112 }
            r5.<init>()     // Catch:{ Exception -> 0x0112 }
            r8 = r5
            androidx.collection.LongSparseArray r5 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x0112 }
            r5.<init>()     // Catch:{ Exception -> 0x0112 }
            r15 = r5
            androidx.collection.LongSparseArray r5 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x0112 }
            r5.<init>()     // Catch:{ Exception -> 0x0112 }
            r14 = r5
            goto L_0x02f8
        L_0x02f6:
            r14 = r4
            r15 = r6
        L_0x02f8:
            long r4 = r7.dialog_id     // Catch:{ Exception -> 0x0112 }
            java.lang.Object r4 = r8.get(r4)     // Catch:{ Exception -> 0x0112 }
            java.lang.StringBuilder r4 = (java.lang.StringBuilder) r4     // Catch:{ Exception -> 0x0112 }
            if (r4 != 0) goto L_0x030d
            java.lang.StringBuilder r5 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0112 }
            r5.<init>()     // Catch:{ Exception -> 0x0112 }
            r4 = r5
            long r5 = r7.dialog_id     // Catch:{ Exception -> 0x0112 }
            r8.put(r5, r4)     // Catch:{ Exception -> 0x0112 }
        L_0x030d:
            int r5 = r4.length()     // Catch:{ Exception -> 0x0112 }
            if (r5 <= 0) goto L_0x0316
            r4.append(r13)     // Catch:{ Exception -> 0x0112 }
        L_0x0316:
            r4.append(r10)     // Catch:{ Exception -> 0x0112 }
            long r5 = r7.dialog_id     // Catch:{ Exception -> 0x0112 }
            java.lang.Object r5 = r15.get(r5)     // Catch:{ Exception -> 0x0112 }
            java.util.ArrayList r5 = (java.util.ArrayList) r5     // Catch:{ Exception -> 0x0112 }
            if (r5 != 0) goto L_0x0331
            java.util.ArrayList r6 = new java.util.ArrayList     // Catch:{ Exception -> 0x0112 }
            r6.<init>()     // Catch:{ Exception -> 0x0112 }
            r5 = r6
            r13 = r3
            r6 = r4
            long r3 = r7.dialog_id     // Catch:{ Exception -> 0x0112 }
            r15.put(r3, r5)     // Catch:{ Exception -> 0x0112 }
            goto L_0x0333
        L_0x0331:
            r13 = r3
            r6 = r4
        L_0x0333:
            java.lang.Integer r3 = java.lang.Integer.valueOf(r10)     // Catch:{ Exception -> 0x0112 }
            r5.add(r3)     // Catch:{ Exception -> 0x0112 }
            long r3 = r7.dialog_id     // Catch:{ Exception -> 0x0112 }
            java.lang.Object r3 = r14.get(r3)     // Catch:{ Exception -> 0x0112 }
            android.util.SparseIntArray r3 = (android.util.SparseIntArray) r3     // Catch:{ Exception -> 0x0112 }
            if (r3 != 0) goto L_0x0352
            android.util.SparseIntArray r4 = new android.util.SparseIntArray     // Catch:{ Exception -> 0x0112 }
            r4.<init>()     // Catch:{ Exception -> 0x0112 }
            r3 = r4
            r25 = r5
            long r4 = r7.dialog_id     // Catch:{ Exception -> 0x0112 }
            r14.put(r4, r3)     // Catch:{ Exception -> 0x0112 }
            goto L_0x0354
        L_0x0352:
            r25 = r5
        L_0x0354:
            int r4 = org.telegram.messenger.MediaDataController.getMediaType(r7)     // Catch:{ Exception -> 0x0112 }
            r3.put(r10, r4)     // Catch:{ Exception -> 0x0112 }
            goto L_0x035f
        L_0x035c:
            r13 = r3
            r14 = r4
            r15 = r6
        L_0x035f:
            boolean r3 = r1.isValidKeyboardToSave(r7)     // Catch:{ Exception -> 0x0112 }
            if (r3 == 0) goto L_0x037a
            long r3 = r7.dialog_id     // Catch:{ Exception -> 0x0112 }
            java.lang.Object r3 = r12.get(r3)     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$Message r3 = (org.telegram.tgnet.TLRPC.Message) r3     // Catch:{ Exception -> 0x0112 }
            if (r3 == 0) goto L_0x0375
            int r4 = r3.id     // Catch:{ Exception -> 0x0112 }
            int r5 = r7.id     // Catch:{ Exception -> 0x0112 }
            if (r4 >= r5) goto L_0x037a
        L_0x0375:
            long r4 = r7.dialog_id     // Catch:{ Exception -> 0x0112 }
            r12.put(r4, r7)     // Catch:{ Exception -> 0x0112 }
        L_0x037a:
            int r9 = r9 + 1
            r25 = r11
            r6 = r13
            r11 = r26
            r26 = r27
            r4 = r28
            r7 = r36
            r10 = r37
            r13 = r39
            r3 = r40
            r5 = r41
            r28 = r42
            r27 = r2
            r2 = r70
            goto L_0x019f
        L_0x0397:
            r40 = r3
            r41 = r5
            r39 = r13
            r2 = r27
            r42 = r28
            r28 = r4
            r13 = r6
            r4 = r14
            r6 = r15
            r27 = r26
            r26 = r11
            r11 = r25
            r3 = 0
        L_0x03ad:
            int r5 = r12.size()     // Catch:{ Exception -> 0x0112 }
            if (r3 >= r5) goto L_0x03c7
            org.telegram.messenger.MediaDataController r5 = r69.getMediaDataController()     // Catch:{ Exception -> 0x0112 }
            long r9 = r12.keyAt(r3)     // Catch:{ Exception -> 0x0112 }
            java.lang.Object r7 = r12.valueAt(r3)     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$Message r7 = (org.telegram.tgnet.TLRPC.Message) r7     // Catch:{ Exception -> 0x0112 }
            r5.putBotKeyboard(r9, r7)     // Catch:{ Exception -> 0x0112 }
            int r3 = r3 + 1
            goto L_0x03ad
        L_0x03c7:
            if (r8 == 0) goto L_0x0551
            r5 = 0
            int r7 = r8.size()     // Catch:{ Exception -> 0x0112 }
            r14 = r32
        L_0x03d0:
            if (r5 >= r7) goto L_0x0542
            long r9 = r8.keyAt(r5)     // Catch:{ Exception -> 0x0112 }
            java.lang.Object r15 = r8.valueAt(r5)     // Catch:{ Exception -> 0x0112 }
            java.lang.StringBuilder r15 = (java.lang.StringBuilder) r15     // Catch:{ Exception -> 0x0112 }
            java.lang.Object r25 = r4.get(r9)     // Catch:{ Exception -> 0x0112 }
            android.util.SparseIntArray r25 = (android.util.SparseIntArray) r25     // Catch:{ Exception -> 0x0112 }
            r32 = r25
            java.lang.Object r25 = r6.get(r9)     // Catch:{ Exception -> 0x0112 }
            java.util.ArrayList r25 = (java.util.ArrayList) r25     // Catch:{ Exception -> 0x0112 }
            r43 = r25
            r25 = 0
            org.telegram.SQLite.SQLiteDatabase r3 = r1.database     // Catch:{ Exception -> 0x0112 }
            r45 = r4
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x0112 }
            r46 = r6
            java.lang.String r6 = "SELECT mid, type FROM media_v4 WHERE mid IN(%s) AND uid = %d"
            r47 = r7
            r48 = r8
            r7 = 2
            java.lang.Object[] r8 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x0112 }
            java.lang.String r7 = r15.toString()     // Catch:{ Exception -> 0x0112 }
            r29 = 0
            r8[r29] = r7     // Catch:{ Exception -> 0x0112 }
            java.lang.Long r7 = java.lang.Long.valueOf(r9)     // Catch:{ Exception -> 0x0112 }
            r22 = 1
            r8[r22] = r7     // Catch:{ Exception -> 0x0112 }
            java.lang.String r4 = java.lang.String.format(r4, r6, r8)     // Catch:{ Exception -> 0x0112 }
            r6 = 0
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0112 }
            org.telegram.SQLite.SQLiteCursor r3 = r3.queryFinalized(r4, r7)     // Catch:{ Exception -> 0x0112 }
            r4 = r25
        L_0x041c:
            boolean r6 = r3.next()     // Catch:{ Exception -> 0x0112 }
            if (r6 == 0) goto L_0x0470
            r6 = 0
            int r7 = r3.intValue(r6)     // Catch:{ Exception -> 0x0112 }
            r6 = r7
            r7 = 1
            int r8 = r3.intValue(r7)     // Catch:{ Exception -> 0x0112 }
            r7 = r8
            r25 = r12
            r8 = r32
            int r12 = r8.get(r6)     // Catch:{ Exception -> 0x0112 }
            if (r7 != r12) goto L_0x0444
            java.lang.Integer r12 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x0112 }
            r49 = r13
            r13 = r43
            r13.remove(r12)     // Catch:{ Exception -> 0x0112 }
            goto L_0x0467
        L_0x0444:
            r49 = r13
            r13 = r43
            if (r4 != 0) goto L_0x0464
            if (r14 != 0) goto L_0x0452
            androidx.collection.LongSparseArray r12 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x0112 }
            r12.<init>()     // Catch:{ Exception -> 0x0112 }
            r14 = r12
        L_0x0452:
            java.lang.Object r12 = r14.get(r9)     // Catch:{ Exception -> 0x0112 }
            android.util.SparseIntArray r12 = (android.util.SparseIntArray) r12     // Catch:{ Exception -> 0x0112 }
            r4 = r12
            if (r4 != 0) goto L_0x0464
            android.util.SparseIntArray r12 = new android.util.SparseIntArray     // Catch:{ Exception -> 0x0112 }
            r12.<init>()     // Catch:{ Exception -> 0x0112 }
            r4 = r12
            r14.put(r9, r4)     // Catch:{ Exception -> 0x0112 }
        L_0x0464:
            r4.put(r6, r7)     // Catch:{ Exception -> 0x0112 }
        L_0x0467:
            r32 = r8
            r43 = r13
            r12 = r25
            r13 = r49
            goto L_0x041c
        L_0x0470:
            r25 = r12
            r49 = r13
            r8 = r32
            r13 = r43
            r3.dispose()     // Catch:{ Exception -> 0x0112 }
            if (r30 != 0) goto L_0x0483
            android.util.SparseArray r6 = new android.util.SparseArray     // Catch:{ Exception -> 0x0112 }
            r6.<init>()     // Catch:{ Exception -> 0x0112 }
            goto L_0x0485
        L_0x0483:
            r6 = r30
        L_0x0485:
            r7 = 0
            int r12 = r13.size()     // Catch:{ Exception -> 0x0112 }
        L_0x048a:
            if (r7 >= r12) goto L_0x0528
            java.lang.Object r30 = r13.get(r7)     // Catch:{ Exception -> 0x0112 }
            java.lang.Integer r30 = (java.lang.Integer) r30     // Catch:{ Exception -> 0x0112 }
            int r30 = r30.intValue()     // Catch:{ Exception -> 0x0112 }
            r32 = r30
            r43 = r3
            r3 = r32
            int r30 = r8.get(r3)     // Catch:{ Exception -> 0x0112 }
            r32 = r30
            r50 = r8
            r8 = r32
            java.lang.Object r30 = r6.get(r8)     // Catch:{ Exception -> 0x0112 }
            org.telegram.messenger.support.LongSparseIntArray r30 = (org.telegram.messenger.support.LongSparseIntArray) r30     // Catch:{ Exception -> 0x0112 }
            r32 = r30
            r30 = r12
            r12 = r32
            if (r12 != 0) goto L_0x04ca
            org.telegram.messenger.support.LongSparseIntArray r32 = new org.telegram.messenger.support.LongSparseIntArray     // Catch:{ Exception -> 0x0112 }
            r32.<init>()     // Catch:{ Exception -> 0x0112 }
            r12 = r32
            r6.put(r8, r12)     // Catch:{ Exception -> 0x0112 }
            r32 = 0
            r51 = r13
            r13 = r12
            r12 = r32
            r32 = r8
            r8 = -2147483648(0xfffffffvar_, float:-0.0)
            goto L_0x04d7
        L_0x04ca:
            r32 = r8
            r8 = -2147483648(0xfffffffvar_, float:-0.0)
            int r44 = r12.get(r9, r8)     // Catch:{ Exception -> 0x0112 }
            r51 = r13
            r13 = r12
            r12 = r44
        L_0x04d7:
            if (r12 != r8) goto L_0x04da
            r12 = 0
        L_0x04da:
            r8 = 1
            int r12 = r12 + r8
            r13.put(r9, r12)     // Catch:{ Exception -> 0x0112 }
            if (r4 == 0) goto L_0x051a
            r8 = -1
            int r52 = r4.get(r3, r8)     // Catch:{ Exception -> 0x0112 }
            r8 = r52
            if (r8 < 0) goto L_0x0517
            java.lang.Object r52 = r6.get(r8)     // Catch:{ Exception -> 0x0112 }
            org.telegram.messenger.support.LongSparseIntArray r52 = (org.telegram.messenger.support.LongSparseIntArray) r52     // Catch:{ Exception -> 0x0112 }
            r13 = r52
            if (r13 != 0) goto L_0x0504
            org.telegram.messenger.support.LongSparseIntArray r52 = new org.telegram.messenger.support.LongSparseIntArray     // Catch:{ Exception -> 0x0112 }
            r52.<init>()     // Catch:{ Exception -> 0x0112 }
            r13 = r52
            r12 = 0
            r6.put(r8, r13)     // Catch:{ Exception -> 0x0112 }
            r52 = r3
            r3 = -2147483648(0xfffffffvar_, float:-0.0)
            goto L_0x050e
        L_0x0504:
            r52 = r3
            r3 = -2147483648(0xfffffffvar_, float:-0.0)
            int r44 = r13.get(r9, r3)     // Catch:{ Exception -> 0x0112 }
            r12 = r44
        L_0x050e:
            if (r12 != r3) goto L_0x0511
            r12 = 0
        L_0x0511:
            r3 = -1
            int r12 = r12 + r3
            r13.put(r9, r12)     // Catch:{ Exception -> 0x0112 }
            goto L_0x051c
        L_0x0517:
            r52 = r3
            goto L_0x051c
        L_0x051a:
            r52 = r3
        L_0x051c:
            int r7 = r7 + 1
            r12 = r30
            r3 = r43
            r8 = r50
            r13 = r51
            goto L_0x048a
        L_0x0528:
            r43 = r3
            r50 = r8
            r30 = r12
            r51 = r13
            int r5 = r5 + 1
            r30 = r6
            r12 = r25
            r4 = r45
            r6 = r46
            r7 = r47
            r8 = r48
            r13 = r49
            goto L_0x03d0
        L_0x0542:
            r45 = r4
            r46 = r6
            r47 = r7
            r48 = r8
            r25 = r12
            r49 = r13
            r8 = r30
            goto L_0x055f
        L_0x0551:
            r45 = r4
            r46 = r6
            r48 = r8
            r25 = r12
            r49 = r13
            r8 = r30
            r14 = r32
        L_0x055f:
            boolean r3 = r11.isEmpty()     // Catch:{ Exception -> 0x0112 }
            if (r3 != 0) goto L_0x060c
            r3 = 0
            int r4 = r11.size()     // Catch:{ Exception -> 0x0112 }
        L_0x056a:
            if (r3 >= r4) goto L_0x0603
            long r5 = r11.keyAt(r3)     // Catch:{ Exception -> 0x0112 }
            java.lang.Object r7 = r11.valueAt(r3)     // Catch:{ Exception -> 0x0112 }
            java.lang.StringBuilder r7 = (java.lang.StringBuilder) r7     // Catch:{ Exception -> 0x0112 }
            java.lang.Object r9 = r2.get(r5)     // Catch:{ Exception -> 0x0112 }
            java.util.ArrayList r9 = (java.util.ArrayList) r9     // Catch:{ Exception -> 0x0112 }
            r10 = r42
            java.lang.Object r12 = r10.get(r5)     // Catch:{ Exception -> 0x0112 }
            java.util.ArrayList r12 = (java.util.ArrayList) r12     // Catch:{ Exception -> 0x0112 }
            org.telegram.SQLite.SQLiteDatabase r13 = r1.database     // Catch:{ Exception -> 0x0112 }
            java.util.Locale r15 = java.util.Locale.US     // Catch:{ Exception -> 0x0112 }
            r30 = r2
            java.lang.String r2 = "SELECT mid FROM messages_v2 WHERE mid IN(%s) AND uid = %d"
            r32 = r4
            r42 = r10
            r4 = 2
            java.lang.Object[] r10 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0112 }
            java.lang.String r4 = r7.toString()     // Catch:{ Exception -> 0x0112 }
            r29 = 0
            r10[r29] = r4     // Catch:{ Exception -> 0x0112 }
            java.lang.Long r4 = java.lang.Long.valueOf(r5)     // Catch:{ Exception -> 0x0112 }
            r22 = 1
            r10[r22] = r4     // Catch:{ Exception -> 0x0112 }
            java.lang.String r2 = java.lang.String.format(r15, r2, r10)     // Catch:{ Exception -> 0x0112 }
            r4 = 0
            java.lang.Object[] r10 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0112 }
            org.telegram.SQLite.SQLiteCursor r2 = r13.queryFinalized(r2, r10)     // Catch:{ Exception -> 0x0112 }
        L_0x05ae:
            boolean r4 = r2.next()     // Catch:{ Exception -> 0x0112 }
            if (r4 == 0) goto L_0x05c8
            r4 = 0
            int r10 = r2.intValue(r4)     // Catch:{ Exception -> 0x0112 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r10)     // Catch:{ Exception -> 0x0112 }
            if (r9 == 0) goto L_0x05c2
            r9.remove(r4)     // Catch:{ Exception -> 0x0112 }
        L_0x05c2:
            if (r12 == 0) goto L_0x05c7
            r12.remove(r4)     // Catch:{ Exception -> 0x0112 }
        L_0x05c7:
            goto L_0x05ae
        L_0x05c8:
            r2.dispose()     // Catch:{ Exception -> 0x0112 }
            r4 = r49
            r10 = -1
            int r13 = r4.get(r5, r10)     // Catch:{ Exception -> 0x0112 }
            r10 = r13
            if (r10 >= 0) goto L_0x05d7
            r10 = 0
        L_0x05d7:
            int r13 = r9.size()     // Catch:{ Exception -> 0x0112 }
            int r10 = r10 + r13
            r4.put(r5, r10)     // Catch:{ Exception -> 0x0112 }
            if (r12 == 0) goto L_0x05f5
            r10 = r26
            r13 = -1
            int r15 = r10.get(r5, r13)     // Catch:{ Exception -> 0x0112 }
            r13 = r15
            if (r13 >= 0) goto L_0x05ec
            r13 = 0
        L_0x05ec:
            int r15 = r12.size()     // Catch:{ Exception -> 0x0112 }
            int r13 = r13 + r15
            r10.put(r5, r13)     // Catch:{ Exception -> 0x0112 }
            goto L_0x05f7
        L_0x05f5:
            r10 = r26
        L_0x05f7:
            int r3 = r3 + 1
            r49 = r4
            r26 = r10
            r2 = r30
            r4 = r32
            goto L_0x056a
        L_0x0603:
            r30 = r2
            r32 = r4
            r10 = r26
            r4 = r49
            goto L_0x0612
        L_0x060c:
            r30 = r2
            r10 = r26
            r4 = r49
        L_0x0612:
            r2 = 0
            r3 = 0
            r5 = r34
        L_0x0616:
            int r6 = r70.size()     // Catch:{ Exception -> 0x0112 }
            if (r3 >= r6) goto L_0x0ad8
            r6 = r70
            java.lang.Object r47 = r6.get(r3)     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$Message r47 = (org.telegram.tgnet.TLRPC.Message) r47     // Catch:{ Exception -> 0x0112 }
            r49 = r47
            r12 = r49
            r1.fixUnsupportedMedia(r12)     // Catch:{ Exception -> 0x0112 }
            r28.requery()     // Catch:{ Exception -> 0x0112 }
            int r13 = r12.id     // Catch:{ Exception -> 0x0112 }
            int r9 = r12.local_id     // Catch:{ Exception -> 0x0112 }
            if (r9 == 0) goto L_0x0637
            int r9 = r12.local_id     // Catch:{ Exception -> 0x0112 }
            r13 = r9
        L_0x0637:
            org.telegram.tgnet.NativeByteBuffer r9 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0112 }
            int r15 = r12.getObjectSize()     // Catch:{ Exception -> 0x0112 }
            r9.<init>((int) r15)     // Catch:{ Exception -> 0x0112 }
            r12.serializeToStream(r9)     // Catch:{ Exception -> 0x0112 }
            r15 = 1
            org.telegram.tgnet.TLRPC$MessageAction r7 = r12.action     // Catch:{ Exception -> 0x0112 }
            boolean r7 = r7 instanceof org.telegram.tgnet.TLRPC.TL_messageEncryptedAction     // Catch:{ Exception -> 0x0112 }
            if (r7 == 0) goto L_0x0663
            org.telegram.tgnet.TLRPC$MessageAction r7 = r12.action     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$DecryptedMessageAction r7 = r7.encryptedAction     // Catch:{ Exception -> 0x0112 }
            boolean r7 = r7 instanceof org.telegram.tgnet.TLRPC.TL_decryptedMessageActionSetMessageTTL     // Catch:{ Exception -> 0x0112 }
            if (r7 != 0) goto L_0x0663
            org.telegram.tgnet.TLRPC$MessageAction r7 = r12.action     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$DecryptedMessageAction r7 = r7.encryptedAction     // Catch:{ Exception -> 0x0112 }
            boolean r7 = r7 instanceof org.telegram.tgnet.TLRPC.TL_decryptedMessageActionScreenshotMessages     // Catch:{ Exception -> 0x0112 }
            if (r7 != 0) goto L_0x0663
            r15 = 0
            r56 = r3
            r53 = r11
            r54 = r14
            r14 = r4
            goto L_0x06ac
        L_0x0663:
            boolean r7 = r12.out     // Catch:{ Exception -> 0x0112 }
            if (r7 == 0) goto L_0x06a3
            org.telegram.SQLite.SQLiteDatabase r7 = r1.database     // Catch:{ Exception -> 0x0112 }
            java.util.Locale r6 = java.util.Locale.US     // Catch:{ Exception -> 0x0112 }
            r53 = r11
            java.lang.String r11 = "SELECT mid FROM messages_v2 WHERE mid = %d AND uid = %d"
            r54 = r14
            r55 = r15
            r14 = 2
            java.lang.Object[] r15 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x0112 }
            java.lang.Integer r14 = java.lang.Integer.valueOf(r13)     // Catch:{ Exception -> 0x0112 }
            r29 = 0
            r15[r29] = r14     // Catch:{ Exception -> 0x0112 }
            r56 = r3
            r14 = r4
            long r3 = r12.dialog_id     // Catch:{ Exception -> 0x0112 }
            java.lang.Long r3 = java.lang.Long.valueOf(r3)     // Catch:{ Exception -> 0x0112 }
            r4 = 1
            r15[r4] = r3     // Catch:{ Exception -> 0x0112 }
            java.lang.String r3 = java.lang.String.format(r6, r11, r15)     // Catch:{ Exception -> 0x0112 }
            r4 = 0
            java.lang.Object[] r6 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0112 }
            org.telegram.SQLite.SQLiteCursor r3 = r7.queryFinalized(r3, r6)     // Catch:{ Exception -> 0x0112 }
            boolean r4 = r3.next()     // Catch:{ Exception -> 0x0112 }
            if (r4 == 0) goto L_0x069d
            r15 = 0
            goto L_0x069f
        L_0x069d:
            r15 = r55
        L_0x069f:
            r3.dispose()     // Catch:{ Exception -> 0x0112 }
            goto L_0x06ac
        L_0x06a3:
            r56 = r3
            r53 = r11
            r54 = r14
            r55 = r15
            r14 = r4
        L_0x06ac:
            if (r15 == 0) goto L_0x06db
            long r3 = r12.dialog_id     // Catch:{ Exception -> 0x0112 }
            r6 = r41
            java.lang.Object r3 = r6.get(r3)     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$Message r3 = (org.telegram.tgnet.TLRPC.Message) r3     // Catch:{ Exception -> 0x0112 }
            if (r3 == 0) goto L_0x06d4
            int r4 = r12.date     // Catch:{ Exception -> 0x0112 }
            int r7 = r3.date     // Catch:{ Exception -> 0x0112 }
            if (r4 > r7) goto L_0x06d4
            int r4 = r3.id     // Catch:{ Exception -> 0x0112 }
            if (r4 <= 0) goto L_0x06ca
            int r4 = r12.id     // Catch:{ Exception -> 0x0112 }
            int r7 = r3.id     // Catch:{ Exception -> 0x0112 }
            if (r4 > r7) goto L_0x06d4
        L_0x06ca:
            int r4 = r3.id     // Catch:{ Exception -> 0x0112 }
            if (r4 >= 0) goto L_0x06dd
            int r4 = r12.id     // Catch:{ Exception -> 0x0112 }
            int r7 = r3.id     // Catch:{ Exception -> 0x0112 }
            if (r4 >= r7) goto L_0x06dd
        L_0x06d4:
            r7 = r3
            long r3 = r12.dialog_id     // Catch:{ Exception -> 0x0112 }
            r6.put(r3, r12)     // Catch:{ Exception -> 0x0112 }
            goto L_0x06dd
        L_0x06db:
            r6 = r41
        L_0x06dd:
            r3 = r28
            r4 = 1
            r3.bindInteger(r4, r13)     // Catch:{ Exception -> 0x0112 }
            r4 = r14
            r7 = r15
            long r14 = r12.dialog_id     // Catch:{ Exception -> 0x0112 }
            r11 = 2
            r3.bindLong(r11, r14)     // Catch:{ Exception -> 0x0112 }
            int r11 = org.telegram.messenger.MessageObject.getUnreadFlags(r12)     // Catch:{ Exception -> 0x0112 }
            r14 = 3
            r3.bindInteger(r14, r11)     // Catch:{ Exception -> 0x0112 }
            int r11 = r12.send_state     // Catch:{ Exception -> 0x0112 }
            r14 = 4
            r3.bindInteger(r14, r11)     // Catch:{ Exception -> 0x0112 }
            int r11 = r12.date     // Catch:{ Exception -> 0x0112 }
            r14 = 5
            r3.bindInteger(r14, r11)     // Catch:{ Exception -> 0x0112 }
            r14 = 6
            r3.bindByteBuffer((int) r14, (org.telegram.tgnet.NativeByteBuffer) r9)     // Catch:{ Exception -> 0x0112 }
            boolean r14 = org.telegram.messenger.MessageObject.isOut(r12)     // Catch:{ Exception -> 0x0112 }
            if (r14 != 0) goto L_0x0710
            boolean r14 = r12.from_scheduled     // Catch:{ Exception -> 0x0112 }
            if (r14 == 0) goto L_0x070e
            goto L_0x0710
        L_0x070e:
            r14 = 0
            goto L_0x0711
        L_0x0710:
            r14 = 1
        L_0x0711:
            r15 = 7
            r3.bindInteger(r15, r14)     // Catch:{ Exception -> 0x0112 }
            int r14 = r12.ttl     // Catch:{ Exception -> 0x0112 }
            r15 = 8
            r3.bindInteger(r15, r14)     // Catch:{ Exception -> 0x0112 }
            int r14 = r12.flags     // Catch:{ Exception -> 0x0112 }
            r14 = r14 & 1024(0x400, float:1.435E-42)
            if (r14 == 0) goto L_0x072a
            int r14 = r12.views     // Catch:{ Exception -> 0x0112 }
            r15 = 9
            r3.bindInteger(r15, r14)     // Catch:{ Exception -> 0x0112 }
            goto L_0x0733
        L_0x072a:
            int r14 = r1.getMessageMediaType(r12)     // Catch:{ Exception -> 0x0112 }
            r15 = 9
            r3.bindInteger(r15, r14)     // Catch:{ Exception -> 0x0112 }
        L_0x0733:
            r14 = 0
            int r15 = r12.stickerVerified     // Catch:{ Exception -> 0x0112 }
            if (r15 != 0) goto L_0x073b
            r14 = r14 | 1
            goto L_0x0742
        L_0x073b:
            int r15 = r12.stickerVerified     // Catch:{ Exception -> 0x0112 }
            r11 = 2
            if (r15 != r11) goto L_0x0742
            r14 = r14 | 2
        L_0x0742:
            r11 = 10
            r3.bindInteger(r11, r14)     // Catch:{ Exception -> 0x0112 }
            boolean r11 = r12.mentioned     // Catch:{ Exception -> 0x0112 }
            if (r11 == 0) goto L_0x074d
            r11 = 1
            goto L_0x074e
        L_0x074d:
            r11 = 0
        L_0x074e:
            r15 = 11
            r3.bindInteger(r15, r11)     // Catch:{ Exception -> 0x0112 }
            int r11 = r12.forwards     // Catch:{ Exception -> 0x0112 }
            r15 = 12
            r3.bindInteger(r15, r11)     // Catch:{ Exception -> 0x0112 }
            r11 = 0
            org.telegram.tgnet.TLRPC$MessageReplies r15 = r12.replies     // Catch:{ Exception -> 0x0112 }
            if (r15 == 0) goto L_0x0778
            org.telegram.tgnet.NativeByteBuffer r15 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0112 }
            r28 = r4
            org.telegram.tgnet.TLRPC$MessageReplies r4 = r12.replies     // Catch:{ Exception -> 0x0112 }
            int r4 = r4.getObjectSize()     // Catch:{ Exception -> 0x0112 }
            r15.<init>((int) r4)     // Catch:{ Exception -> 0x0112 }
            r11 = r15
            org.telegram.tgnet.TLRPC$MessageReplies r4 = r12.replies     // Catch:{ Exception -> 0x0112 }
            r4.serializeToStream(r11)     // Catch:{ Exception -> 0x0112 }
            r4 = 13
            r3.bindByteBuffer((int) r4, (org.telegram.tgnet.NativeByteBuffer) r11)     // Catch:{ Exception -> 0x0112 }
            goto L_0x077f
        L_0x0778:
            r28 = r4
            r4 = 13
            r3.bindNull(r4)     // Catch:{ Exception -> 0x0112 }
        L_0x077f:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r4 = r12.reply_to     // Catch:{ Exception -> 0x0112 }
            if (r4 == 0) goto L_0x0798
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r4 = r12.reply_to     // Catch:{ Exception -> 0x0112 }
            int r4 = r4.reply_to_top_id     // Catch:{ Exception -> 0x0112 }
            if (r4 == 0) goto L_0x078e
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r4 = r12.reply_to     // Catch:{ Exception -> 0x0112 }
            int r4 = r4.reply_to_top_id     // Catch:{ Exception -> 0x0112 }
            goto L_0x0792
        L_0x078e:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r4 = r12.reply_to     // Catch:{ Exception -> 0x0112 }
            int r4 = r4.reply_to_msg_id     // Catch:{ Exception -> 0x0112 }
        L_0x0792:
            r15 = 14
            r3.bindInteger(r15, r4)     // Catch:{ Exception -> 0x0112 }
            goto L_0x079e
        L_0x0798:
            r4 = 14
            r15 = 0
            r3.bindInteger(r4, r15)     // Catch:{ Exception -> 0x0112 }
        L_0x079e:
            r4 = r14
            long r14 = org.telegram.messenger.MessageObject.getChannelId(r12)     // Catch:{ Exception -> 0x0112 }
            r32 = r4
            r4 = 15
            r3.bindLong(r4, r14)     // Catch:{ Exception -> 0x0112 }
            r3.step()     // Catch:{ Exception -> 0x0112 }
            long r14 = r12.random_id     // Catch:{ Exception -> 0x0112 }
            r16 = 0
            int r4 = (r14 > r16 ? 1 : (r14 == r16 ? 0 : -1))
            if (r4 == 0) goto L_0x07d0
            r40.requery()     // Catch:{ Exception -> 0x0112 }
            long r14 = r12.random_id     // Catch:{ Exception -> 0x0112 }
            r26 = r7
            r4 = r40
            r7 = 1
            r4.bindLong(r7, r14)     // Catch:{ Exception -> 0x0112 }
            r7 = 2
            r4.bindInteger(r7, r13)     // Catch:{ Exception -> 0x0112 }
            long r14 = r12.dialog_id     // Catch:{ Exception -> 0x0112 }
            r7 = 3
            r4.bindLong(r7, r14)     // Catch:{ Exception -> 0x0112 }
            r4.step()     // Catch:{ Exception -> 0x0112 }
            goto L_0x07d4
        L_0x07d0:
            r26 = r7
            r4 = r40
        L_0x07d4:
            boolean r7 = org.telegram.messenger.MediaDataController.canAddMessageToMedia(r12)     // Catch:{ Exception -> 0x0112 }
            if (r7 == 0) goto L_0x0810
            if (r31 != 0) goto L_0x07e7
            org.telegram.SQLite.SQLiteDatabase r7 = r1.database     // Catch:{ Exception -> 0x0112 }
            java.lang.String r14 = "REPLACE INTO media_v4 VALUES(?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.executeFast(r14)     // Catch:{ Exception -> 0x0112 }
            r31 = r7
            goto L_0x07e9
        L_0x07e7:
            r7 = r31
        L_0x07e9:
            r7.requery()     // Catch:{ Exception -> 0x0112 }
            r14 = 1
            r7.bindInteger(r14, r13)     // Catch:{ Exception -> 0x0112 }
            long r14 = r12.dialog_id     // Catch:{ Exception -> 0x0112 }
            r40 = r8
            r8 = 2
            r7.bindLong(r8, r14)     // Catch:{ Exception -> 0x0112 }
            int r8 = r12.date     // Catch:{ Exception -> 0x0112 }
            r14 = 3
            r7.bindInteger(r14, r8)     // Catch:{ Exception -> 0x0112 }
            int r8 = org.telegram.messenger.MediaDataController.getMediaType(r12)     // Catch:{ Exception -> 0x0112 }
            r14 = 4
            r7.bindInteger(r14, r8)     // Catch:{ Exception -> 0x0112 }
            r8 = 5
            r7.bindByteBuffer((int) r8, (org.telegram.tgnet.NativeByteBuffer) r9)     // Catch:{ Exception -> 0x0112 }
            r7.step()     // Catch:{ Exception -> 0x0112 }
            r31 = r7
            goto L_0x0812
        L_0x0810:
            r40 = r8
        L_0x0812:
            int r7 = r12.ttl_period     // Catch:{ Exception -> 0x0112 }
            if (r7 == 0) goto L_0x0853
            int r7 = r12.id     // Catch:{ Exception -> 0x0112 }
            if (r7 <= 0) goto L_0x0853
            if (r33 != 0) goto L_0x0827
            org.telegram.SQLite.SQLiteDatabase r7 = r1.database     // Catch:{ Exception -> 0x0112 }
            java.lang.String r14 = "REPLACE INTO enc_tasks_v4 VALUES(?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.executeFast(r14)     // Catch:{ Exception -> 0x0112 }
            r33 = r7
            goto L_0x0829
        L_0x0827:
            r7 = r33
        L_0x0829:
            r7.requery()     // Catch:{ Exception -> 0x0112 }
            r14 = 1
            r7.bindInteger(r14, r13)     // Catch:{ Exception -> 0x0112 }
            long r14 = r12.dialog_id     // Catch:{ Exception -> 0x0112 }
            r8 = 2
            r7.bindLong(r8, r14)     // Catch:{ Exception -> 0x0112 }
            int r8 = r12.date     // Catch:{ Exception -> 0x0112 }
            int r14 = r12.ttl_period     // Catch:{ Exception -> 0x0112 }
            int r8 = r8 + r14
            r14 = 3
            r7.bindInteger(r14, r8)     // Catch:{ Exception -> 0x0112 }
            r8 = 4
            r14 = 0
            r7.bindInteger(r8, r14)     // Catch:{ Exception -> 0x0112 }
            r7.step()     // Catch:{ Exception -> 0x0112 }
            int r8 = r12.date     // Catch:{ Exception -> 0x0112 }
            int r14 = r12.ttl_period     // Catch:{ Exception -> 0x0112 }
            int r8 = r8 + r14
            int r8 = java.lang.Math.min(r5, r8)     // Catch:{ Exception -> 0x0112 }
            r5 = r8
            r33 = r7
        L_0x0853:
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r12.media     // Catch:{ Exception -> 0x0112 }
            boolean r7 = r7 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaPoll     // Catch:{ Exception -> 0x0112 }
            if (r7 == 0) goto L_0x088b
            if (r23 != 0) goto L_0x0866
            org.telegram.SQLite.SQLiteDatabase r7 = r1.database     // Catch:{ Exception -> 0x0112 }
            java.lang.String r8 = "REPLACE INTO polls_v2 VALUES(?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.executeFast(r8)     // Catch:{ Exception -> 0x0112 }
            r23 = r7
            goto L_0x0868
        L_0x0866:
            r7 = r23
        L_0x0868:
            org.telegram.tgnet.TLRPC$MessageMedia r8 = r12.media     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$TL_messageMediaPoll r8 = (org.telegram.tgnet.TLRPC.TL_messageMediaPoll) r8     // Catch:{ Exception -> 0x0112 }
            r7.requery()     // Catch:{ Exception -> 0x0112 }
            r14 = 1
            r7.bindInteger(r14, r13)     // Catch:{ Exception -> 0x0112 }
            long r14 = r12.dialog_id     // Catch:{ Exception -> 0x0112 }
            r34 = r5
            r5 = 2
            r7.bindLong(r5, r14)     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$Poll r5 = r8.poll     // Catch:{ Exception -> 0x0112 }
            long r14 = r5.id     // Catch:{ Exception -> 0x0112 }
            r5 = 3
            r7.bindLong(r5, r14)     // Catch:{ Exception -> 0x0112 }
            r7.step()     // Catch:{ Exception -> 0x0112 }
            r23 = r7
            r14 = r39
            goto L_0x08b2
        L_0x088b:
            r34 = r5
            org.telegram.tgnet.TLRPC$MessageMedia r5 = r12.media     // Catch:{ Exception -> 0x0112 }
            boolean r5 = r5 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaWebPage     // Catch:{ Exception -> 0x0112 }
            if (r5 == 0) goto L_0x08b0
            r39.requery()     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$MessageMedia r5 = r12.media     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$WebPage r5 = r5.webpage     // Catch:{ Exception -> 0x0112 }
            long r7 = r5.id     // Catch:{ Exception -> 0x0112 }
            r14 = r39
            r5 = 1
            r14.bindLong(r5, r7)     // Catch:{ Exception -> 0x0112 }
            r5 = 2
            r14.bindInteger(r5, r13)     // Catch:{ Exception -> 0x0112 }
            long r7 = r12.dialog_id     // Catch:{ Exception -> 0x0112 }
            r5 = 3
            r14.bindLong(r5, r7)     // Catch:{ Exception -> 0x0112 }
            r14.step()     // Catch:{ Exception -> 0x0112 }
            goto L_0x08b2
        L_0x08b0:
            r14 = r39
        L_0x08b2:
            if (r11 == 0) goto L_0x08b7
            r11.reuse()     // Catch:{ Exception -> 0x0112 }
        L_0x08b7:
            r9.reuse()     // Catch:{ Exception -> 0x0112 }
            if (r73 == 0) goto L_0x0ab7
            org.telegram.tgnet.TLRPC$Peer r5 = r12.peer_id     // Catch:{ Exception -> 0x0112 }
            long r7 = r5.channel_id     // Catch:{ Exception -> 0x0112 }
            r15 = 0
            int r5 = (r7 > r15 ? 1 : (r7 == r15 ? 0 : -1))
            if (r5 == 0) goto L_0x08d1
            boolean r5 = r12.post     // Catch:{ Exception -> 0x0112 }
            if (r5 == 0) goto L_0x08cb
            goto L_0x08d1
        L_0x08cb:
            r9 = r37
            r44 = -2147483648(0xfffffffvar_, float:-0.0)
            goto L_0x0abf
        L_0x08d1:
            int r5 = r12.date     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.ConnectionsManager r7 = r69.getConnectionsManager()     // Catch:{ Exception -> 0x0112 }
            int r7 = r7.getCurrentTime()     // Catch:{ Exception -> 0x0112 }
            int r7 = r7 + -3600
            if (r5 < r7) goto L_0x0ab7
            org.telegram.messenger.DownloadController r5 = r69.getDownloadController()     // Catch:{ Exception -> 0x0112 }
            int r5 = r5.canDownloadMedia((org.telegram.tgnet.TLRPC.Message) r12)     // Catch:{ Exception -> 0x0112 }
            r7 = 1
            if (r5 != r7) goto L_0x0ab7
            org.telegram.tgnet.TLRPC$MessageMedia r5 = r12.media     // Catch:{ Exception -> 0x0112 }
            boolean r5 = r5 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaPhoto     // Catch:{ Exception -> 0x0112 }
            if (r5 != 0) goto L_0x0903
            org.telegram.tgnet.TLRPC$MessageMedia r5 = r12.media     // Catch:{ Exception -> 0x0112 }
            boolean r5 = r5 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaDocument     // Catch:{ Exception -> 0x0112 }
            if (r5 != 0) goto L_0x0903
            org.telegram.tgnet.TLRPC$MessageMedia r5 = r12.media     // Catch:{ Exception -> 0x0112 }
            boolean r5 = r5 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaWebPage     // Catch:{ Exception -> 0x0112 }
            if (r5 == 0) goto L_0x08fd
            goto L_0x0903
        L_0x08fd:
            r9 = r37
            r44 = -2147483648(0xfffffffvar_, float:-0.0)
            goto L_0x0abf
        L_0x0903:
            r5 = 0
            r7 = 0
            r15 = 0
            org.telegram.tgnet.TLRPC$Document r39 = org.telegram.messenger.MessageObject.getDocument(r12)     // Catch:{ Exception -> 0x0112 }
            r41 = r39
            org.telegram.tgnet.TLRPC$Photo r39 = org.telegram.messenger.MessageObject.getPhoto(r12)     // Catch:{ Exception -> 0x0112 }
            r43 = r39
            boolean r39 = org.telegram.messenger.MessageObject.isVoiceMessage(r12)     // Catch:{ Exception -> 0x0112 }
            if (r39 == 0) goto L_0x0944
            r39 = r5
            r49 = r7
            r5 = r41
            long r7 = r5.id     // Catch:{ Exception -> 0x0112 }
            r39 = 2
            org.telegram.tgnet.TLRPC$TL_messageMediaDocument r41 = new org.telegram.tgnet.TLRPC$TL_messageMediaDocument     // Catch:{ Exception -> 0x0112 }
            r41.<init>()     // Catch:{ Exception -> 0x0112 }
            r15 = r41
            r15.document = r5     // Catch:{ Exception -> 0x0112 }
            r49 = r7
            int r7 = r15.flags     // Catch:{ Exception -> 0x0112 }
            r8 = 1
            r7 = r7 | r8
            r15.flags = r7     // Catch:{ Exception -> 0x0112 }
            r41 = r9
            r47 = r43
            r7 = r49
            r44 = -2147483648(0xfffffffvar_, float:-0.0)
            r67 = r39
            r39 = r5
            r5 = r67
            goto L_0x0a36
        L_0x0944:
            r39 = r5
            r49 = r7
            r5 = r41
            boolean r7 = org.telegram.messenger.MessageObject.isStickerMessage(r12)     // Catch:{ Exception -> 0x0112 }
            if (r7 != 0) goto L_0x0a19
            boolean r7 = org.telegram.messenger.MessageObject.isAnimatedStickerMessage(r12)     // Catch:{ Exception -> 0x0112 }
            if (r7 == 0) goto L_0x095e
            r41 = r9
            r47 = r43
            r44 = -2147483648(0xfffffffvar_, float:-0.0)
            goto L_0x0a1f
        L_0x095e:
            boolean r7 = org.telegram.messenger.MessageObject.isVideoMessage(r12)     // Catch:{ Exception -> 0x0112 }
            if (r7 != 0) goto L_0x09f9
            boolean r7 = org.telegram.messenger.MessageObject.isRoundVideoMessage(r12)     // Catch:{ Exception -> 0x0112 }
            if (r7 != 0) goto L_0x09f9
            boolean r7 = org.telegram.messenger.MessageObject.isGifMessage(r12)     // Catch:{ Exception -> 0x0112 }
            if (r7 == 0) goto L_0x0978
            r41 = r9
            r47 = r43
            r44 = -2147483648(0xfffffffvar_, float:-0.0)
            goto L_0x09ff
        L_0x0978:
            if (r5 == 0) goto L_0x099f
            long r7 = r5.id     // Catch:{ Exception -> 0x0112 }
            r39 = 8
            org.telegram.tgnet.TLRPC$TL_messageMediaDocument r41 = new org.telegram.tgnet.TLRPC$TL_messageMediaDocument     // Catch:{ Exception -> 0x0112 }
            r41.<init>()     // Catch:{ Exception -> 0x0112 }
            r15 = r41
            r15.document = r5     // Catch:{ Exception -> 0x0112 }
            r49 = r7
            int r7 = r15.flags     // Catch:{ Exception -> 0x0112 }
            r8 = 1
            r7 = r7 | r8
            r15.flags = r7     // Catch:{ Exception -> 0x0112 }
            r41 = r9
            r47 = r43
            r7 = r49
            r44 = -2147483648(0xfffffffvar_, float:-0.0)
            r67 = r39
            r39 = r5
            r5 = r67
            goto L_0x0a36
        L_0x099f:
            r7 = r43
            if (r7 == 0) goto L_0x09ea
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r8 = r7.sizes     // Catch:{ Exception -> 0x0112 }
            r41 = r9
            int r9 = org.telegram.messenger.AndroidUtilities.getPhotoSize()     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$PhotoSize r8 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r8, r9)     // Catch:{ Exception -> 0x0112 }
            if (r8 == 0) goto L_0x09e3
            r43 = r8
            long r8 = r7.id     // Catch:{ Exception -> 0x0112 }
            r39 = 1
            org.telegram.tgnet.TLRPC$TL_messageMediaPhoto r47 = new org.telegram.tgnet.TLRPC$TL_messageMediaPhoto     // Catch:{ Exception -> 0x0112 }
            r47.<init>()     // Catch:{ Exception -> 0x0112 }
            r15 = r47
            r15.photo = r7     // Catch:{ Exception -> 0x0112 }
            r47 = r7
            int r7 = r15.flags     // Catch:{ Exception -> 0x0112 }
            r22 = 1
            r7 = r7 | 1
            r15.flags = r7     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r12.media     // Catch:{ Exception -> 0x0112 }
            boolean r7 = r7 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaWebPage     // Catch:{ Exception -> 0x0112 }
            if (r7 == 0) goto L_0x09d9
            int r7 = r15.flags     // Catch:{ Exception -> 0x0112 }
            r44 = -2147483648(0xfffffffvar_, float:-0.0)
            r7 = r7 | r44
            r15.flags = r7     // Catch:{ Exception -> 0x0112 }
            goto L_0x09db
        L_0x09d9:
            r44 = -2147483648(0xfffffffvar_, float:-0.0)
        L_0x09db:
            r7 = r8
            r67 = r39
            r39 = r5
            r5 = r67
            goto L_0x0a36
        L_0x09e3:
            r47 = r7
            r43 = r8
            r44 = -2147483648(0xfffffffvar_, float:-0.0)
            goto L_0x09f0
        L_0x09ea:
            r47 = r7
            r41 = r9
            r44 = -2147483648(0xfffffffvar_, float:-0.0)
        L_0x09f0:
            r7 = r49
            r67 = r39
            r39 = r5
            r5 = r67
            goto L_0x0a36
        L_0x09f9:
            r41 = r9
            r47 = r43
            r44 = -2147483648(0xfffffffvar_, float:-0.0)
        L_0x09ff:
            long r7 = r5.id     // Catch:{ Exception -> 0x0112 }
            r9 = 4
            org.telegram.tgnet.TLRPC$TL_messageMediaDocument r39 = new org.telegram.tgnet.TLRPC$TL_messageMediaDocument     // Catch:{ Exception -> 0x0112 }
            r39.<init>()     // Catch:{ Exception -> 0x0112 }
            r15 = r39
            r15.document = r5     // Catch:{ Exception -> 0x0112 }
            r49 = r7
            int r7 = r15.flags     // Catch:{ Exception -> 0x0112 }
            r8 = 1
            r7 = r7 | r8
            r15.flags = r7     // Catch:{ Exception -> 0x0112 }
            r39 = r5
            r5 = r9
            r7 = r49
            goto L_0x0a36
        L_0x0a19:
            r41 = r9
            r47 = r43
            r44 = -2147483648(0xfffffffvar_, float:-0.0)
        L_0x0a1f:
            long r7 = r5.id     // Catch:{ Exception -> 0x0112 }
            r9 = 1
            org.telegram.tgnet.TLRPC$TL_messageMediaDocument r39 = new org.telegram.tgnet.TLRPC$TL_messageMediaDocument     // Catch:{ Exception -> 0x0112 }
            r39.<init>()     // Catch:{ Exception -> 0x0112 }
            r15 = r39
            r15.document = r5     // Catch:{ Exception -> 0x0112 }
            r39 = r5
            int r5 = r15.flags     // Catch:{ Exception -> 0x0112 }
            r22 = 1
            r5 = r5 | 1
            r15.flags = r5     // Catch:{ Exception -> 0x0112 }
            r5 = r9
        L_0x0a36:
            if (r15 == 0) goto L_0x0aae
            org.telegram.tgnet.TLRPC$MessageMedia r9 = r12.media     // Catch:{ Exception -> 0x0112 }
            int r9 = r9.ttl_seconds     // Catch:{ Exception -> 0x0112 }
            if (r9 == 0) goto L_0x0a4c
            org.telegram.tgnet.TLRPC$MessageMedia r9 = r12.media     // Catch:{ Exception -> 0x0112 }
            int r9 = r9.ttl_seconds     // Catch:{ Exception -> 0x0112 }
            r15.ttl_seconds = r9     // Catch:{ Exception -> 0x0112 }
            int r9 = r15.flags     // Catch:{ Exception -> 0x0112 }
            r19 = 4
            r9 = r9 | 4
            r15.flags = r9     // Catch:{ Exception -> 0x0112 }
        L_0x0a4c:
            r2 = r2 | r5
            r37.requery()     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.NativeByteBuffer r9 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0112 }
            r43 = r2
            int r2 = r15.getObjectSize()     // Catch:{ Exception -> 0x0112 }
            r9.<init>((int) r2)     // Catch:{ Exception -> 0x0112 }
            r2 = r9
            r15.serializeToStream(r2)     // Catch:{ Exception -> 0x0112 }
            r9 = r37
            r37 = r11
            r11 = 1
            r9.bindLong(r11, r7)     // Catch:{ Exception -> 0x0112 }
            r11 = 2
            r9.bindInteger(r11, r5)     // Catch:{ Exception -> 0x0112 }
            int r11 = r12.date     // Catch:{ Exception -> 0x0112 }
            r49 = r5
            r5 = 3
            r9.bindInteger(r5, r11)     // Catch:{ Exception -> 0x0112 }
            r5 = 4
            r9.bindByteBuffer((int) r5, (org.telegram.tgnet.NativeByteBuffer) r2)     // Catch:{ Exception -> 0x0112 }
            java.lang.StringBuilder r5 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0112 }
            r5.<init>()     // Catch:{ Exception -> 0x0112 }
            java.lang.String r11 = "sent_"
            r5.append(r11)     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$Peer r11 = r12.peer_id     // Catch:{ Exception -> 0x0112 }
            if (r11 == 0) goto L_0x0a8c
            org.telegram.tgnet.TLRPC$Peer r11 = r12.peer_id     // Catch:{ Exception -> 0x0112 }
            r50 = r7
            long r7 = r11.channel_id     // Catch:{ Exception -> 0x0112 }
            goto L_0x0a90
        L_0x0a8c:
            r50 = r7
            r7 = 0
        L_0x0a90:
            r5.append(r7)     // Catch:{ Exception -> 0x0112 }
            java.lang.String r7 = "_"
            r5.append(r7)     // Catch:{ Exception -> 0x0112 }
            int r7 = r12.id     // Catch:{ Exception -> 0x0112 }
            r5.append(r7)     // Catch:{ Exception -> 0x0112 }
            java.lang.String r5 = r5.toString()     // Catch:{ Exception -> 0x0112 }
            r7 = 5
            r9.bindString(r7, r5)     // Catch:{ Exception -> 0x0112 }
            r9.step()     // Catch:{ Exception -> 0x0112 }
            r2.reuse()     // Catch:{ Exception -> 0x0112 }
            r2 = r43
            goto L_0x0abf
        L_0x0aae:
            r49 = r5
            r50 = r7
            r9 = r37
            r37 = r11
            goto L_0x0abf
        L_0x0ab7:
            r41 = r9
            r9 = r37
            r44 = -2147483648(0xfffffffvar_, float:-0.0)
            r37 = r11
        L_0x0abf:
            int r5 = r56 + 1
            r41 = r6
            r37 = r9
            r39 = r14
            r8 = r40
            r11 = r53
            r14 = r54
            r40 = r4
            r4 = r28
            r28 = r3
            r3 = r5
            r5 = r34
            goto L_0x0616
        L_0x0ad8:
            r56 = r3
            r53 = r11
            r54 = r14
            r3 = r28
            r9 = r37
            r14 = r39
            r6 = r41
            r28 = r4
            r4 = r40
            r40 = r8
            r3.dispose()     // Catch:{ Exception -> 0x0112 }
            if (r31 == 0) goto L_0x0af4
            r31.dispose()     // Catch:{ Exception -> 0x0112 }
        L_0x0af4:
            if (r33 == 0) goto L_0x0b03
            r33.dispose()     // Catch:{ Exception -> 0x0112 }
            org.telegram.messenger.MessagesController r8 = r69.getMessagesController()     // Catch:{ Exception -> 0x0112 }
            r11 = 0
            r12 = 0
            r8.didAddedNewTask(r5, r12, r11)     // Catch:{ Exception -> 0x0112 }
        L_0x0b03:
            if (r23 == 0) goto L_0x0b08
            r23.dispose()     // Catch:{ Exception -> 0x0112 }
        L_0x0b08:
            r4.dispose()     // Catch:{ Exception -> 0x0112 }
            r9.dispose()     // Catch:{ Exception -> 0x0112 }
            r14.dispose()     // Catch:{ Exception -> 0x0112 }
            org.telegram.SQLite.SQLiteDatabase r8 = r1.database     // Catch:{ Exception -> 0x0112 }
            java.lang.String r11 = "REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r8 = r8.executeFast(r11)     // Catch:{ Exception -> 0x0112 }
            org.telegram.SQLite.SQLiteDatabase r11 = r1.database     // Catch:{ Exception -> 0x0112 }
            java.lang.String r12 = "UPDATE dialogs SET date = ?, unread_count = ?, last_mid = ?, unread_count_i = ? WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r11 = r11.executeFast(r12)     // Catch:{ Exception -> 0x0112 }
            java.util.ArrayList r12 = new java.util.ArrayList     // Catch:{ Exception -> 0x0112 }
            r12.<init>()     // Catch:{ Exception -> 0x0112 }
            r13 = 0
        L_0x0b27:
            int r15 = r6.size()     // Catch:{ Exception -> 0x0112 }
            if (r13 >= r15) goto L_0x0d22
            long r55 = r6.keyAt(r13)     // Catch:{ Exception -> 0x0112 }
            r57 = r55
            r15 = r8
            r7 = r57
            r16 = 0
            int r37 = (r7 > r16 ? 1 : (r7 == r16 ? 0 : -1))
            if (r37 != 0) goto L_0x0b59
            r57 = r2
            r37 = r3
            r41 = r4
            r44 = r5
            r55 = r6
            r58 = r9
            r63 = r10
            r16 = r11
            r64 = r12
            r12 = r15
            r39 = r28
            r15 = 9
            r65 = 0
            r28 = r14
            goto L_0x0d07
        L_0x0b59:
            java.lang.Object r37 = r6.valueAt(r13)     // Catch:{ Exception -> 0x0112 }
            org.telegram.tgnet.TLRPC$Message r37 = (org.telegram.tgnet.TLRPC.Message) r37     // Catch:{ Exception -> 0x0112 }
            r39 = r37
            long r55 = org.telegram.messenger.MessageObject.getChannelId(r39)     // Catch:{ Exception -> 0x0112 }
            r57 = r55
            r37 = r3
            org.telegram.SQLite.SQLiteDatabase r3 = r1.database     // Catch:{ Exception -> 0x0112 }
            r41 = r4
            java.lang.StringBuilder r4 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0112 }
            r4.<init>()     // Catch:{ Exception -> 0x0112 }
            r44 = r5
            java.lang.String r5 = "SELECT date, unread_count, last_mid, unread_count_i FROM dialogs WHERE did = "
            r4.append(r5)     // Catch:{ Exception -> 0x0112 }
            r4.append(r7)     // Catch:{ Exception -> 0x0112 }
            java.lang.String r4 = r4.toString()     // Catch:{ Exception -> 0x0112 }
            r55 = r6
            r5 = 0
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x0112 }
            org.telegram.SQLite.SQLiteCursor r3 = r3.queryFinalized(r4, r6)     // Catch:{ Exception -> 0x0112 }
            r4 = 0
            r5 = 0
            r6 = 0
            r56 = 0
            boolean r59 = r3.next()     // Catch:{ Exception -> 0x0112 }
            r60 = r59
            if (r59 == 0) goto L_0x0bc4
            r59 = r4
            r4 = 0
            int r29 = r3.intValue(r4)     // Catch:{ Exception -> 0x0112 }
            r59 = r29
            r61 = r5
            r4 = 1
            int r5 = r3.intValue(r4)     // Catch:{ Exception -> 0x0112 }
            r4 = 0
            int r5 = java.lang.Math.max(r4, r5)     // Catch:{ Exception -> 0x0112 }
            r6 = r5
            r4 = 2
            int r5 = r3.intValue(r4)     // Catch:{ Exception -> 0x0112 }
            r61 = r5
            r4 = 3
            int r5 = r3.intValue(r4)     // Catch:{ Exception -> 0x0112 }
            r4 = 0
            int r5 = java.lang.Math.max(r4, r5)     // Catch:{ Exception -> 0x0112 }
            r56 = r5
            r4 = r57
            r58 = r9
            goto L_0x0be3
        L_0x0bc4:
            r59 = r4
            r61 = r5
            r4 = r57
            r16 = 0
            int r57 = (r4 > r16 ? 1 : (r4 == r16 ? 0 : -1))
            if (r57 == 0) goto L_0x0bdd
            r57 = r6
            org.telegram.messenger.MessagesController r6 = r69.getMessagesController()     // Catch:{ Exception -> 0x0112 }
            r58 = r9
            r9 = 1
            r6.checkChatInviter(r4, r9)     // Catch:{ Exception -> 0x0112 }
            goto L_0x0be1
        L_0x0bdd:
            r57 = r6
            r58 = r9
        L_0x0be1:
            r6 = r57
        L_0x0be3:
            r3.dispose()     // Catch:{ Exception -> 0x0112 }
            r9 = -1
            int r38 = r10.get(r7, r9)     // Catch:{ Exception -> 0x0112 }
            r57 = r38
            r62 = r3
            r3 = r28
            int r28 = r3.get(r7, r9)     // Catch:{ Exception -> 0x0112 }
            r38 = r28
            r28 = r14
            r14 = r38
            if (r14 != r9) goto L_0x0CLASSNAME
            r38 = 0
            r14 = r38
            goto L_0x0CLASSNAME
        L_0x0CLASSNAME:
            int r9 = r14 + r6
            r3.put(r7, r9)     // Catch:{ Exception -> 0x0112 }
        L_0x0CLASSNAME:
            r9 = r57
            r57 = r2
            r2 = -1
            if (r9 != r2) goto L_0x0CLASSNAME
            r2 = 0
            r9 = r2
            goto L_0x0CLASSNAME
        L_0x0CLASSNAME:
            int r2 = r9 + r56
            r10.put(r7, r2)     // Catch:{ Exception -> 0x0112 }
        L_0x0CLASSNAME:
            r2 = r39
            if (r2 == 0) goto L_0x0c1f
            r39 = r3
            int r3 = r2.id     // Catch:{ Exception -> 0x0112 }
            goto L_0x0CLASSNAME
        L_0x0c1f:
            r39 = r3
            r3 = r61
        L_0x0CLASSNAME:
            if (r2 == 0) goto L_0x0c2e
            r63 = r3
            int r3 = r2.local_id     // Catch:{ Exception -> 0x0112 }
            if (r3 == 0) goto L_0x0CLASSNAME
            int r3 = r2.local_id     // Catch:{ Exception -> 0x0112 }
            goto L_0x0CLASSNAME
        L_0x0c2e:
            r63 = r3
        L_0x0CLASSNAME:
            r3 = r63
        L_0x0CLASSNAME:
            if (r6 != 0) goto L_0x0c3e
            if (r14 == 0) goto L_0x0c3e
            r63 = r10
            r10 = r36
            r10.put(r7, r14)     // Catch:{ Exception -> 0x0112 }
            goto L_0x0CLASSNAME
        L_0x0c3e:
            r63 = r10
            r10 = r36
        L_0x0CLASSNAME:
            if (r56 != 0) goto L_0x0c4e
            if (r9 == 0) goto L_0x0c4e
            r36 = r10
            r10 = r35
            r10.put(r7, r9)     // Catch:{ Exception -> 0x0112 }
            goto L_0x0CLASSNAME
        L_0x0c4e:
            r36 = r10
            r10 = r35
        L_0x0CLASSNAME:
            r35 = r10
            java.lang.Long r10 = java.lang.Long.valueOf(r7)     // Catch:{ Exception -> 0x0112 }
            r12.add(r10)     // Catch:{ Exception -> 0x0112 }
            if (r60 == 0) goto L_0x0CLASSNAME
            r11.requery()     // Catch:{ Exception -> 0x0112 }
            if (r2 == 0) goto L_0x0CLASSNAME
            if (r72 == 0) goto L_0x0CLASSNAME
            if (r59 != 0) goto L_0x0CLASSNAME
        L_0x0CLASSNAME:
            int r10 = r2.date     // Catch:{ Exception -> 0x0112 }
            goto L_0x0c6b
        L_0x0CLASSNAME:
            r10 = r59
        L_0x0c6b:
            r64 = r12
            r12 = 1
            r11.bindInteger(r12, r10)     // Catch:{ Exception -> 0x0112 }
            int r10 = r6 + r14
            r12 = 2
            r11.bindInteger(r12, r10)     // Catch:{ Exception -> 0x0112 }
            r10 = 3
            r11.bindInteger(r10, r3)     // Catch:{ Exception -> 0x0112 }
            int r10 = r56 + r9
            r12 = 4
            r11.bindInteger(r12, r10)     // Catch:{ Exception -> 0x0112 }
            r10 = 5
            r11.bindLong(r10, r7)     // Catch:{ Exception -> 0x0112 }
            r11.step()     // Catch:{ Exception -> 0x0112 }
            r16 = r11
            r12 = r15
            r15 = 9
            r65 = 0
            goto L_0x0d07
        L_0x0CLASSNAME:
            r64 = r12
            r15.requery()     // Catch:{ Exception -> 0x0112 }
            r12 = r15
            r15 = 1
            r12.bindLong(r15, r7)     // Catch:{ Exception -> 0x0112 }
            if (r2 == 0) goto L_0x0ca4
            if (r72 == 0) goto L_0x0ca1
            if (r59 != 0) goto L_0x0ca4
        L_0x0ca1:
            int r15 = r2.date     // Catch:{ Exception -> 0x0112 }
            goto L_0x0ca6
        L_0x0ca4:
            r15 = r59
        L_0x0ca6:
            r10 = 2
            r12.bindInteger(r10, r15)     // Catch:{ Exception -> 0x0112 }
            int r10 = r6 + r14
            r15 = 3
            r12.bindInteger(r15, r10)     // Catch:{ Exception -> 0x0112 }
            r10 = 4
            r12.bindInteger(r10, r3)     // Catch:{ Exception -> 0x0112 }
            r10 = 5
            r15 = 0
            r12.bindInteger(r10, r15)     // Catch:{ Exception -> 0x0112 }
            r10 = 6
            r12.bindInteger(r10, r15)     // Catch:{ Exception -> 0x0112 }
            r16 = r11
            r10 = 0
            r15 = 7
            r12.bindLong(r15, r10)     // Catch:{ Exception -> 0x0112 }
            int r15 = r56 + r9
            r10 = 8
            r12.bindInteger(r10, r15)     // Catch:{ Exception -> 0x0112 }
            r65 = 0
            int r11 = (r4 > r65 ? 1 : (r4 == r65 ? 0 : -1))
            if (r11 == 0) goto L_0x0cd4
            r11 = 1
            goto L_0x0cd5
        L_0x0cd4:
            r11 = 0
        L_0x0cd5:
            r15 = 9
            r12.bindInteger(r15, r11)     // Catch:{ Exception -> 0x0112 }
            r10 = 0
            r11 = 10
            r12.bindInteger(r11, r10)     // Catch:{ Exception -> 0x0112 }
            r11 = 11
            r12.bindInteger(r11, r10)     // Catch:{ Exception -> 0x0112 }
            r11 = 12
            r12.bindInteger(r11, r10)     // Catch:{ Exception -> 0x0112 }
            r11 = 13
            r12.bindInteger(r11, r10)     // Catch:{ Exception -> 0x0112 }
            r11 = 14
            r12.bindNull(r11)     // Catch:{ Exception -> 0x0112 }
            r11 = 15
            r12.bindInteger(r11, r10)     // Catch:{ Exception -> 0x0112 }
            r12.step()     // Catch:{ Exception -> 0x0112 }
            androidx.collection.LongSparseArray<java.lang.Boolean> r10 = r1.unknownDialogsIds     // Catch:{ Exception -> 0x0112 }
            r17 = 1
            java.lang.Boolean r11 = java.lang.Boolean.valueOf(r17)     // Catch:{ Exception -> 0x0112 }
            r10.put(r7, r11)     // Catch:{ Exception -> 0x0112 }
        L_0x0d07:
            int r13 = r13 + 1
            r8 = r12
            r11 = r16
            r14 = r28
            r3 = r37
            r28 = r39
            r4 = r41
            r5 = r44
            r6 = r55
            r2 = r57
            r9 = r58
            r10 = r63
            r12 = r64
            goto L_0x0b27
        L_0x0d22:
            r57 = r2
            r37 = r3
            r41 = r4
            r44 = r5
            r55 = r6
            r58 = r9
            r63 = r10
            r16 = r11
            r64 = r12
            r39 = r28
            r12 = r8
            r28 = r14
            r16.dispose()     // Catch:{ Exception -> 0x0112 }
            r12.dispose()     // Catch:{ Exception -> 0x0112 }
            if (r40 == 0) goto L_0x0df8
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database     // Catch:{ Exception -> 0x0112 }
            java.lang.String r3 = "REPLACE INTO media_counts_v2 VALUES(?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r3)     // Catch:{ Exception -> 0x0112 }
            r3 = r2
            r2 = 0
            int r4 = r40.size()     // Catch:{ Exception -> 0x0112 }
        L_0x0d4f:
            if (r2 >= r4) goto L_0x0df0
            r5 = r40
            int r6 = r5.keyAt(r2)     // Catch:{ Exception -> 0x0112 }
            java.lang.Object r7 = r5.valueAt(r2)     // Catch:{ Exception -> 0x0112 }
            org.telegram.messenger.support.LongSparseIntArray r7 = (org.telegram.messenger.support.LongSparseIntArray) r7     // Catch:{ Exception -> 0x0112 }
            r8 = 0
            int r9 = r7.size()     // Catch:{ Exception -> 0x0112 }
        L_0x0d62:
            if (r8 >= r9) goto L_0x0dde
            long r10 = r7.keyAt(r8)     // Catch:{ Exception -> 0x0112 }
            r13 = -1
            r14 = 0
            org.telegram.SQLite.SQLiteDatabase r15 = r1.database     // Catch:{ Exception -> 0x0112 }
            r17 = r4
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x0112 }
            r40 = r5
            java.lang.String r5 = "SELECT count, old FROM media_counts_v2 WHERE uid = %d AND type = %d LIMIT 1"
            r18 = r9
            r20 = r12
            r9 = 2
            java.lang.Object[] r12 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x0112 }
            java.lang.Long r9 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x0112 }
            r26 = 0
            r12[r26] = r9     // Catch:{ Exception -> 0x0112 }
            java.lang.Integer r9 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x0112 }
            r22 = 1
            r12[r22] = r9     // Catch:{ Exception -> 0x0112 }
            java.lang.String r4 = java.lang.String.format(r4, r5, r12)     // Catch:{ Exception -> 0x0112 }
            r5 = 0
            java.lang.Object[] r9 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x0112 }
            org.telegram.SQLite.SQLiteCursor r4 = r15.queryFinalized(r4, r9)     // Catch:{ Exception -> 0x0112 }
            boolean r5 = r4.next()     // Catch:{ Exception -> 0x0112 }
            if (r5 == 0) goto L_0x0da8
            r5 = 0
            int r9 = r4.intValue(r5)     // Catch:{ Exception -> 0x0112 }
            r13 = r9
            r5 = 1
            int r9 = r4.intValue(r5)     // Catch:{ Exception -> 0x0112 }
            r14 = r9
        L_0x0da8:
            r4.dispose()     // Catch:{ Exception -> 0x0112 }
            r5 = -1
            if (r13 == r5) goto L_0x0dcf
            r3.requery()     // Catch:{ Exception -> 0x0112 }
            int r9 = r7.valueAt(r8)     // Catch:{ Exception -> 0x0112 }
            int r13 = r13 + r9
            r9 = 1
            r3.bindLong(r9, r10)     // Catch:{ Exception -> 0x0112 }
            r12 = 2
            r3.bindInteger(r12, r6)     // Catch:{ Exception -> 0x0112 }
            r15 = 0
            int r5 = java.lang.Math.max(r15, r13)     // Catch:{ Exception -> 0x0112 }
            r15 = 3
            r3.bindInteger(r15, r5)     // Catch:{ Exception -> 0x0112 }
            r5 = 4
            r3.bindInteger(r5, r14)     // Catch:{ Exception -> 0x0112 }
            r3.step()     // Catch:{ Exception -> 0x0112 }
            goto L_0x0dd3
        L_0x0dcf:
            r5 = 4
            r9 = 1
            r12 = 2
            r15 = 3
        L_0x0dd3:
            int r8 = r8 + 1
            r4 = r17
            r9 = r18
            r12 = r20
            r5 = r40
            goto L_0x0d62
        L_0x0dde:
            r17 = r4
            r40 = r5
            r18 = r9
            r20 = r12
            r5 = 4
            r9 = 1
            r12 = 2
            r15 = 3
            int r2 = r2 + 1
            r12 = r20
            goto L_0x0d4f
        L_0x0df0:
            r17 = r4
            r20 = r12
            r3.dispose()     // Catch:{ Exception -> 0x0112 }
            goto L_0x0dfc
        L_0x0df8:
            r20 = r12
            r3 = r41
        L_0x0dfc:
            if (r71 == 0) goto L_0x0e03
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database     // Catch:{ Exception -> 0x0112 }
            r2.commitTransaction()     // Catch:{ Exception -> 0x0112 }
        L_0x0e03:
            r4 = r35
            r2 = r36
            r5 = 0
            r1.updateFiltersReadCounter(r2, r4, r5)     // Catch:{ Exception -> 0x0112 }
            org.telegram.messenger.MessagesController r5 = r69.getMessagesController()     // Catch:{ Exception -> 0x0112 }
            r6 = r39
            r7 = r63
            r5.processDialogsUpdateRead(r6, r7)     // Catch:{ Exception -> 0x0112 }
            if (r57 == 0) goto L_0x0e22
            r5 = r57
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda123 r8 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda123     // Catch:{ Exception -> 0x0112 }
            r8.<init>(r1, r5)     // Catch:{ Exception -> 0x0112 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r8)     // Catch:{ Exception -> 0x0112 }
        L_0x0e22:
            r5 = r64
            r1.updateWidgets((java.util.ArrayList<java.lang.Long>) r5)     // Catch:{ Exception -> 0x0112 }
        L_0x0e27:
            goto L_0x0e2b
        L_0x0e28:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r2)
        L_0x0e2b:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.m965lambda$putMessages$154$orgtelegrammessengerMessagesStorage(java.util.ArrayList, boolean, boolean, int, boolean, boolean):void");
    }

    /* renamed from: lambda$putMessagesInternal$153$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m968xede69970(int downloadMediaMaskFinal) {
        getDownloadController().newDownloadObjectsAvailable(downloadMediaMaskFinal);
    }

    public void putMessages(ArrayList<TLRPC.Message> messages, boolean withTransaction, boolean useQueue, boolean doNotUpdateDialogDate, int downloadMask, boolean scheduled) {
        putMessages(messages, withTransaction, useQueue, doNotUpdateDialogDate, downloadMask, false, scheduled);
    }

    public void putMessages(ArrayList<TLRPC.Message> messages, boolean withTransaction, boolean useQueue, boolean doNotUpdateDialogDate, int downloadMask, boolean ifNoLastMessage, boolean scheduled) {
        if (messages.size() != 0) {
            if (useQueue) {
                this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda50(this, messages, withTransaction, doNotUpdateDialogDate, downloadMask, ifNoLastMessage, scheduled));
                return;
            }
            m965lambda$putMessages$154$orgtelegrammessengerMessagesStorage(messages, withTransaction, doNotUpdateDialogDate, downloadMask, ifNoLastMessage, scheduled);
        }
    }

    public void markMessageAsSendError(TLRPC.Message message, boolean scheduled) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda75(this, message, scheduled));
    }

    /* renamed from: lambda$markMessageAsSendError$155$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m940x2fCLASSNAME(TLRPC.Message message, boolean scheduled) {
        try {
            long messageId = (long) message.id;
            if (scheduled) {
                this.database.executeFast(String.format(Locale.US, "UPDATE scheduled_messages_v2 SET send_state = 2 WHERE mid = %d AND uid = %d", new Object[]{Long.valueOf(messageId), Long.valueOf(MessageObject.getDialogId(message))})).stepThis().dispose();
                return;
            }
            this.database.executeFast(String.format(Locale.US, "UPDATE messages_v2 SET send_state = 2 WHERE mid = %d AND uid = %d", new Object[]{Long.valueOf(messageId), Long.valueOf(MessageObject.getDialogId(message))})).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void setMessageSeq(int mid, int seq_in, int seq_out) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda125(this, mid, seq_in, seq_out));
    }

    /* renamed from: lambda$setMessageSeq$156$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m998lambda$setMessageSeq$156$orgtelegrammessengerMessagesStorage(int mid, int seq_in, int seq_out) {
        try {
            SQLitePreparedStatement state = this.database.executeFast("REPLACE INTO messages_seq VALUES(?, ?, ?)");
            state.requery();
            state.bindInteger(1, mid);
            state.bindInteger(2, seq_in);
            state.bindInteger(3, seq_out);
            state.step();
            state.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:132:0x0200, code lost:
        if (r7 != null) goto L_0x0202;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:133:0x0202, code lost:
        r7.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:139:0x020e, code lost:
        if (r7 == null) goto L_0x0211;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:140:0x0211, code lost:
        r24 = r5;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:141:0x021d, code lost:
        return new long[]{r13, (long) r2};
     */
    /* JADX WARNING: Code restructure failed: missing block: B:151:0x0243, code lost:
        if (r7 != null) goto L_0x029a;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:160:0x0298, code lost:
        if (r7 == null) goto L_0x029e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:161:0x029a, code lost:
        r7.dispose();
        r7 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:163:?, code lost:
        r7 = r1.database.executeFast("UPDATE media_v4 SET mid = ? WHERE mid = ? AND uid = ?");
        r7.bindInteger(1, r2);
        r7.bindInteger(2, r12);
        r7.bindLong(3, r13);
        r7.step();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:164:0x02b6, code lost:
        if (r7 == null) goto L_0x02f0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:165:0x02b9, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:166:0x02bb, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:167:0x02bc, code lost:
        r3 = r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:169:?, code lost:
        r1.database.executeFast(java.lang.String.format(java.util.Locale.US, "DELETE FROM media_v4 WHERE mid = %d AND uid = %d", new java.lang.Object[]{java.lang.Integer.valueOf(r12), java.lang.Long.valueOf(r13)})).stepThis().dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:170:0x02e6, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:172:?, code lost:
        org.telegram.messenger.FileLog.e((java.lang.Throwable) r0);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:173:0x02ea, code lost:
        if (r7 == null) goto L_0x02f0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:174:0x02ec, code lost:
        r7.dispose();
        r7 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:176:?, code lost:
        r7 = r1.database.executeFast("UPDATE dialogs SET last_mid = ? WHERE last_mid = ?");
        r7.bindInteger(1, r2);
        r7.bindInteger(2, r12);
        r7.step();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:177:0x0304, code lost:
        if (r7 == null) goto L_0x037a;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:178:0x0306, code lost:
        r7.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:179:0x030a, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:180:0x030c, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:182:?, code lost:
        org.telegram.messenger.FileLog.e((java.lang.Throwable) r0);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:183:0x0310, code lost:
        if (r7 == null) goto L_0x037a;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:184:0x0314, code lost:
        if (r7 != null) goto L_0x0316;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:185:0x0316, code lost:
        r7.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:186:0x0319, code lost:
        throw r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:187:0x031a, code lost:
        if (r7 != null) goto L_0x031c;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:188:0x031c, code lost:
        r7.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:189:0x0320, code lost:
        throw r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:195:0x0340, code lost:
        if (r7 != null) goto L_0x0342;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:196:0x0342, code lost:
        r7.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:205:0x0377, code lost:
        if (r7 == null) goto L_0x037a;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:38:0x008c, code lost:
        if (r15 != null) goto L_0x009d;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:46:0x009b, code lost:
        if (r15 != null) goto L_0x009d;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:47:0x009d, code lost:
        r15.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:48:0x00a0, code lost:
        r18 = r5;
     */
    /* JADX WARNING: Removed duplicated region for block: B:106:0x01aa A[Catch:{ Exception -> 0x01bb }] */
    /* JADX WARNING: Removed duplicated region for block: B:108:0x01b3  */
    /* JADX WARNING: Removed duplicated region for block: B:110:0x01b7  */
    /* JADX WARNING: Removed duplicated region for block: B:119:0x01ca  */
    /* JADX WARNING: Removed duplicated region for block: B:123:0x01d5 A[RETURN] */
    /* JADX WARNING: Removed duplicated region for block: B:124:0x01d7  */
    /* JADX WARNING: Removed duplicated region for block: B:145:0x0223  */
    /* JADX WARNING: Removed duplicated region for block: B:20:0x0053  */
    /* JADX WARNING: Removed duplicated region for block: B:213:0x0392  */
    /* JADX WARNING: Removed duplicated region for block: B:217:0x0399  */
    /* JADX WARNING: Removed duplicated region for block: B:23:0x005a A[RETURN] */
    /* JADX WARNING: Removed duplicated region for block: B:26:0x005e  */
    /* JADX WARNING: Removed duplicated region for block: B:31:0x0072 A[ADDED_TO_REGION] */
    /* JADX WARNING: Removed duplicated region for block: B:51:0x00a7  */
    /* JADX WARNING: Removed duplicated region for block: B:55:0x00b3  */
    /* JADX WARNING: Removed duplicated region for block: B:69:0x012e  */
    /* JADX WARNING: Removed duplicated region for block: B:94:0x017c  */
    /* renamed from: updateMessageStateAndIdInternal */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public long[] m1020x7b91d964(long r22, long r24, java.lang.Integer r26, int r27, int r28, int r29) {
        /*
            r21 = this;
            r1 = r21
            r2 = r27
            r3 = r28
            r4 = r29
            r5 = 0
            r6 = 0
            r7 = 0
            r8 = 1
            if (r26 != 0) goto L_0x0062
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x004b, all -> 0x0047 }
            java.util.Locale r9 = java.util.Locale.US     // Catch:{ Exception -> 0x004b, all -> 0x0047 }
            java.lang.String r10 = "SELECT mid, uid FROM randoms_v2 WHERE random_id = %d LIMIT 1"
            java.lang.Object[] r11 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x004b, all -> 0x0047 }
            java.lang.Long r12 = java.lang.Long.valueOf(r22)     // Catch:{ Exception -> 0x004b, all -> 0x0047 }
            r11[r7] = r12     // Catch:{ Exception -> 0x004b, all -> 0x0047 }
            java.lang.String r9 = java.lang.String.format(r9, r10, r11)     // Catch:{ Exception -> 0x004b, all -> 0x0047 }
            java.lang.Object[] r10 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x004b, all -> 0x0047 }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r9, r10)     // Catch:{ Exception -> 0x004b, all -> 0x0047 }
            r5 = r0
            boolean r0 = r5.next()     // Catch:{ Exception -> 0x004b, all -> 0x0047 }
            if (r0 == 0) goto L_0x003d
            int r0 = r5.intValue(r7)     // Catch:{ Exception -> 0x004b, all -> 0x0047 }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x004b, all -> 0x0047 }
            r9 = r0
            long r10 = r5.longValue(r8)     // Catch:{ Exception -> 0x003b }
            goto L_0x0041
        L_0x003b:
            r0 = move-exception
            goto L_0x004e
        L_0x003d:
            r10 = r24
            r9 = r26
        L_0x0041:
            if (r5 == 0) goto L_0x0058
            r5.dispose()
            goto L_0x0058
        L_0x0047:
            r0 = move-exception
            r9 = r26
            goto L_0x005c
        L_0x004b:
            r0 = move-exception
            r9 = r26
        L_0x004e:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x005b }
            if (r5 == 0) goto L_0x0056
            r5.dispose()
        L_0x0056:
            r10 = r24
        L_0x0058:
            if (r9 != 0) goto L_0x0066
            return r6
        L_0x005b:
            r0 = move-exception
        L_0x005c:
            if (r5 == 0) goto L_0x0061
            r5.dispose()
        L_0x0061:
            throw r0
        L_0x0062:
            r10 = r24
            r9 = r26
        L_0x0066:
            int r12 = r9.intValue()
            int r0 = r9.intValue()
            r13 = 3
            r14 = 2
            if (r0 >= 0) goto L_0x00ab
            if (r4 != r8) goto L_0x00ab
            r15 = 0
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0095, all -> 0x0091 }
            java.lang.String r6 = "UPDATE randoms_v2 SET mid = ? WHERE random_id = ? AND mid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r6)     // Catch:{ Exception -> 0x0095, all -> 0x0091 }
            r15 = r0
            r15.bindInteger(r8, r2)     // Catch:{ Exception -> 0x0095, all -> 0x0091 }
            r7 = r22
            r15.bindLong(r14, r7)     // Catch:{ Exception -> 0x008f }
            r15.bindInteger(r13, r12)     // Catch:{ Exception -> 0x008f }
            r15.step()     // Catch:{ Exception -> 0x008f }
            if (r15 == 0) goto L_0x00a0
            goto L_0x009d
        L_0x008f:
            r0 = move-exception
            goto L_0x0098
        L_0x0091:
            r0 = move-exception
            r7 = r22
            goto L_0x00a5
        L_0x0095:
            r0 = move-exception
            r7 = r22
        L_0x0098:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x00a4 }
            if (r15 == 0) goto L_0x00a0
        L_0x009d:
            r15.dispose()
        L_0x00a0:
            r18 = r5
            goto L_0x0130
        L_0x00a4:
            r0 = move-exception
        L_0x00a5:
            if (r15 == 0) goto L_0x00aa
            r15.dispose()
        L_0x00aa:
            throw r0
        L_0x00ab:
            r7 = r22
            int r0 = r9.intValue()
            if (r0 <= 0) goto L_0x012e
            org.telegram.tgnet.TLRPC$TL_updateDeleteScheduledMessages r0 = new org.telegram.tgnet.TLRPC$TL_updateDeleteScheduledMessages
            r0.<init>()
            r15 = r0
            java.util.ArrayList<java.lang.Integer> r0 = r15.messages
            java.lang.Integer r6 = java.lang.Integer.valueOf(r12)
            r0.add(r6)
            boolean r0 = org.telegram.messenger.DialogObject.isChatDialog(r10)
            if (r0 == 0) goto L_0x00d5
            org.telegram.tgnet.TLRPC$TL_peerChannel r0 = new org.telegram.tgnet.TLRPC$TL_peerChannel
            r0.<init>()
            r15.peer = r0
            org.telegram.tgnet.TLRPC$Peer r0 = r15.peer
            long r13 = -r10
            r0.channel_id = r13
            goto L_0x00e0
        L_0x00d5:
            org.telegram.tgnet.TLRPC$TL_peerUser r0 = new org.telegram.tgnet.TLRPC$TL_peerUser
            r0.<init>()
            r15.peer = r0
            org.telegram.tgnet.TLRPC$Peer r0 = r15.peer
            r0.user_id = r10
        L_0x00e0:
            org.telegram.tgnet.TLRPC$TL_updates r0 = new org.telegram.tgnet.TLRPC$TL_updates
            r0.<init>()
            r6 = r0
            java.util.ArrayList r0 = r6.updates
            r0.add(r15)
            org.telegram.messenger.DispatchQueue r0 = org.telegram.messenger.Utilities.stageQueue
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda79 r13 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda79
            r13.<init>(r1, r6)
            r0.postRunnable(r13)
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0126 }
            java.util.Locale r13 = java.util.Locale.US     // Catch:{ Exception -> 0x0126 }
            java.lang.String r14 = "DELETE FROM randoms_v2 WHERE random_id = %d AND mid = %d AND uid = %d"
            r18 = r5
            r5 = 3
            java.lang.Object[] r5 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x0124 }
            java.lang.Long r19 = java.lang.Long.valueOf(r22)     // Catch:{ Exception -> 0x0124 }
            r20 = 0
            r5[r20] = r19     // Catch:{ Exception -> 0x0124 }
            r17 = 1
            r5[r17] = r9     // Catch:{ Exception -> 0x0124 }
            java.lang.Long r17 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x0124 }
            r19 = 2
            r5[r19] = r17     // Catch:{ Exception -> 0x0124 }
            java.lang.String r5 = java.lang.String.format(r13, r14, r5)     // Catch:{ Exception -> 0x0124 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r5)     // Catch:{ Exception -> 0x0124 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0124 }
            r0.dispose()     // Catch:{ Exception -> 0x0124 }
            goto L_0x012c
        L_0x0124:
            r0 = move-exception
            goto L_0x0129
        L_0x0126:
            r0 = move-exception
            r18 = r5
        L_0x0129:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x012c:
            r5 = 0
            return r5
        L_0x012e:
            r18 = r5
        L_0x0130:
            r13 = 0
            r5 = -1
            if (r4 == r5) goto L_0x013b
            if (r4 != 0) goto L_0x0138
            goto L_0x013b
        L_0x0138:
            r5 = r18
            goto L_0x0181
        L_0x013b:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0174, all -> 0x016f }
            java.util.Locale r15 = java.util.Locale.US     // Catch:{ Exception -> 0x0174, all -> 0x016f }
            java.lang.String r6 = "SELECT uid FROM messages_v2 WHERE mid = %d LIMIT 1"
            r5 = 1
            java.lang.Object[] r4 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x0174, all -> 0x016f }
            java.lang.Integer r5 = java.lang.Integer.valueOf(r12)     // Catch:{ Exception -> 0x0174, all -> 0x016f }
            r7 = 0
            r4[r7] = r5     // Catch:{ Exception -> 0x0174, all -> 0x016f }
            java.lang.String r4 = java.lang.String.format(r15, r6, r4)     // Catch:{ Exception -> 0x0174, all -> 0x016f }
            java.lang.Object[] r5 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x0174, all -> 0x016f }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r4, r5)     // Catch:{ Exception -> 0x0174, all -> 0x016f }
            r5 = r0
            boolean r0 = r5.next()     // Catch:{ Exception -> 0x016d }
            if (r0 == 0) goto L_0x0164
            r4 = 0
            long r7 = r5.longValue(r4)     // Catch:{ Exception -> 0x016d }
            r13 = r7
            r0 = 0
            goto L_0x0166
        L_0x0164:
            r0 = r29
        L_0x0166:
            if (r5 == 0) goto L_0x016b
            r5.dispose()
        L_0x016b:
            r4 = r0
            goto L_0x0181
        L_0x016d:
            r0 = move-exception
            goto L_0x0177
        L_0x016f:
            r0 = move-exception
            r5 = r18
            goto L_0x0397
        L_0x0174:
            r0 = move-exception
            r5 = r18
        L_0x0177:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0396 }
            if (r5 == 0) goto L_0x017f
            r5.dispose()
        L_0x017f:
            r4 = r29
        L_0x0181:
            r7 = -1
            if (r4 == r7) goto L_0x0187
            r7 = 1
            if (r4 != r7) goto L_0x01cf
        L_0x0187:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x01c2, all -> 0x01bd }
            java.util.Locale r7 = java.util.Locale.US     // Catch:{ Exception -> 0x01c2, all -> 0x01bd }
            java.lang.String r8 = "SELECT uid FROM scheduled_messages_v2 WHERE mid = %d LIMIT 1"
            r15 = 1
            java.lang.Object[] r6 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x01c2, all -> 0x01bd }
            java.lang.Integer r15 = java.lang.Integer.valueOf(r12)     // Catch:{ Exception -> 0x01c2, all -> 0x01bd }
            r18 = r4
            r4 = 0
            r6[r4] = r15     // Catch:{ Exception -> 0x01bb }
            java.lang.String r7 = java.lang.String.format(r7, r8, r6)     // Catch:{ Exception -> 0x01bb }
            java.lang.Object[] r8 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x01bb }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r7, r8)     // Catch:{ Exception -> 0x01bb }
            r5 = r0
            boolean r0 = r5.next()     // Catch:{ Exception -> 0x01bb }
            if (r0 == 0) goto L_0x01b3
            r4 = 0
            long r7 = r5.longValue(r4)     // Catch:{ Exception -> 0x01bb }
            r0 = 1
            r4 = r0
            r13 = r7
            goto L_0x01b5
        L_0x01b3:
            r4 = r18
        L_0x01b5:
            if (r5 == 0) goto L_0x01cf
            r5.dispose()
            goto L_0x01cf
        L_0x01bb:
            r0 = move-exception
            goto L_0x01c5
        L_0x01bd:
            r0 = move-exception
            r18 = r4
            goto L_0x0390
        L_0x01c2:
            r0 = move-exception
            r18 = r4
        L_0x01c5:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x038f }
            if (r5 == 0) goto L_0x01cd
            r5.dispose()
        L_0x01cd:
            r4 = r18
        L_0x01cf:
            r7 = 0
            int r0 = (r13 > r7 ? 1 : (r13 == r7 ? 0 : -1))
            if (r0 != 0) goto L_0x01d7
            r6 = 0
            return r6
        L_0x01d7:
            r7 = 0
            if (r12 != r2) goto L_0x0227
            if (r3 == 0) goto L_0x0227
            if (r4 != 0) goto L_0x01e8
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x020a, all -> 0x0206 }
            java.lang.String r8 = "UPDATE messages_v2 SET send_state = 0, date = ? WHERE mid = ? AND uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r8)     // Catch:{ Exception -> 0x020a, all -> 0x0206 }
            r7 = r0
            goto L_0x01f1
        L_0x01e8:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x020a, all -> 0x0206 }
            java.lang.String r8 = "UPDATE scheduled_messages_v2 SET send_state = 0, date = ? WHERE mid = ? AND uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r8)     // Catch:{ Exception -> 0x020a, all -> 0x0206 }
            r7 = r0
        L_0x01f1:
            r8 = 1
            r7.bindInteger(r8, r3)     // Catch:{ Exception -> 0x020a, all -> 0x0206 }
            r8 = 2
            r7.bindInteger(r8, r2)     // Catch:{ Exception -> 0x020a, all -> 0x0206 }
            r8 = 3
            r7.bindLong(r8, r13)     // Catch:{ Exception -> 0x020a, all -> 0x0206 }
            r7.step()     // Catch:{ Exception -> 0x020a, all -> 0x0206 }
            if (r7 == 0) goto L_0x0211
        L_0x0202:
            r7.dispose()
            goto L_0x0211
        L_0x0206:
            r0 = move-exception
            r24 = r5
            goto L_0x0221
        L_0x020a:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x021e }
            if (r7 == 0) goto L_0x0211
            goto L_0x0202
        L_0x0211:
            r8 = 2
            long[] r0 = new long[r8]
            r6 = 0
            r0[r6] = r13
            r24 = r5
            long r5 = (long) r2
            r8 = 1
            r0[r8] = r5
            return r0
        L_0x021e:
            r0 = move-exception
            r24 = r5
        L_0x0221:
            if (r7 == 0) goto L_0x0226
            r7.dispose()
        L_0x0226:
            throw r0
        L_0x0227:
            r24 = r5
            if (r4 != 0) goto L_0x0328
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0249 }
            java.lang.String r5 = "UPDATE messages_v2 SET mid = ?, send_state = 0 WHERE mid = ? AND uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r5)     // Catch:{ Exception -> 0x0249 }
            r7 = r0
            r5 = 1
            r7.bindInteger(r5, r2)     // Catch:{ Exception -> 0x0249 }
            r5 = 2
            r7.bindInteger(r5, r12)     // Catch:{ Exception -> 0x0249 }
            r5 = 3
            r7.bindLong(r5, r13)     // Catch:{ Exception -> 0x0249 }
            r7.step()     // Catch:{ Exception -> 0x0249 }
            if (r7 == 0) goto L_0x029e
            goto L_0x029a
        L_0x0246:
            r0 = move-exception
            goto L_0x0321
        L_0x0249:
            r0 = move-exception
            r5 = r0
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0294 }
            java.util.Locale r8 = java.util.Locale.US     // Catch:{ Exception -> 0x0294 }
            java.lang.String r15 = "DELETE FROM messages_v2 WHERE mid = %d AND uid = %d"
            r6 = 2
            java.lang.Object[] r3 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0294 }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r12)     // Catch:{ Exception -> 0x0294 }
            r16 = 0
            r3[r16] = r6     // Catch:{ Exception -> 0x0294 }
            java.lang.Long r16 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x0294 }
            r17 = 1
            r3[r17] = r16     // Catch:{ Exception -> 0x0294 }
            java.lang.String r3 = java.lang.String.format(r8, r15, r3)     // Catch:{ Exception -> 0x0294 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r3)     // Catch:{ Exception -> 0x0294 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0294 }
            r0.dispose()     // Catch:{ Exception -> 0x0294 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0294 }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x0294 }
            java.lang.String r8 = "DELETE FROM messages_seq WHERE mid = %d"
            r15 = 1
            java.lang.Object[] r6 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x0294 }
            java.lang.Integer r15 = java.lang.Integer.valueOf(r12)     // Catch:{ Exception -> 0x0294 }
            r16 = 0
            r6[r16] = r15     // Catch:{ Exception -> 0x0294 }
            java.lang.String r3 = java.lang.String.format(r3, r8, r6)     // Catch:{ Exception -> 0x0294 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r3)     // Catch:{ Exception -> 0x0294 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0294 }
            r0.dispose()     // Catch:{ Exception -> 0x0294 }
            goto L_0x0298
        L_0x0294:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0246 }
        L_0x0298:
            if (r7 == 0) goto L_0x029e
        L_0x029a:
            r7.dispose()
            r7 = 0
        L_0x029e:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02bb }
            java.lang.String r3 = "UPDATE media_v4 SET mid = ? WHERE mid = ? AND uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r3)     // Catch:{ Exception -> 0x02bb }
            r7 = r0
            r3 = 1
            r7.bindInteger(r3, r2)     // Catch:{ Exception -> 0x02bb }
            r3 = 2
            r7.bindInteger(r3, r12)     // Catch:{ Exception -> 0x02bb }
            r3 = 3
            r7.bindLong(r3, r13)     // Catch:{ Exception -> 0x02bb }
            r7.step()     // Catch:{ Exception -> 0x02bb }
            if (r7 == 0) goto L_0x02f0
            goto L_0x02ec
        L_0x02b9:
            r0 = move-exception
            goto L_0x031a
        L_0x02bb:
            r0 = move-exception
            r3 = r0
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02e6 }
            java.util.Locale r5 = java.util.Locale.US     // Catch:{ Exception -> 0x02e6 }
            java.lang.String r8 = "DELETE FROM media_v4 WHERE mid = %d AND uid = %d"
            r6 = 2
            java.lang.Object[] r15 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x02e6 }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r12)     // Catch:{ Exception -> 0x02e6 }
            r16 = 0
            r15[r16] = r6     // Catch:{ Exception -> 0x02e6 }
            java.lang.Long r16 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x02e6 }
            r17 = 1
            r15[r17] = r16     // Catch:{ Exception -> 0x02e6 }
            java.lang.String r5 = java.lang.String.format(r5, r8, r15)     // Catch:{ Exception -> 0x02e6 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r5)     // Catch:{ Exception -> 0x02e6 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x02e6 }
            r0.dispose()     // Catch:{ Exception -> 0x02e6 }
            goto L_0x02ea
        L_0x02e6:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x02b9 }
        L_0x02ea:
            if (r7 == 0) goto L_0x02f0
        L_0x02ec:
            r7.dispose()
            r7 = 0
        L_0x02f0:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x030c }
            java.lang.String r3 = "UPDATE dialogs SET last_mid = ? WHERE last_mid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r3)     // Catch:{ Exception -> 0x030c }
            r7 = r0
            r3 = 1
            r7.bindInteger(r3, r2)     // Catch:{ Exception -> 0x030c }
            r3 = 2
            r7.bindInteger(r3, r12)     // Catch:{ Exception -> 0x030c }
            r7.step()     // Catch:{ Exception -> 0x030c }
            if (r7 == 0) goto L_0x0313
        L_0x0306:
            r7.dispose()
            goto L_0x0313
        L_0x030a:
            r0 = move-exception
            goto L_0x0314
        L_0x030c:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x030a }
            if (r7 == 0) goto L_0x0313
            goto L_0x0306
        L_0x0313:
            goto L_0x037a
        L_0x0314:
            if (r7 == 0) goto L_0x0319
            r7.dispose()
        L_0x0319:
            throw r0
        L_0x031a:
            if (r7 == 0) goto L_0x0320
            r7.dispose()
            r7 = 0
        L_0x0320:
            throw r0
        L_0x0321:
            if (r7 == 0) goto L_0x0327
            r7.dispose()
            r7 = 0
        L_0x0327:
            throw r0
        L_0x0328:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0348 }
            java.lang.String r3 = "UPDATE scheduled_messages_v2 SET mid = ?, send_state = 0 WHERE mid = ? AND uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r3)     // Catch:{ Exception -> 0x0348 }
            r7 = r0
            r3 = 1
            r7.bindInteger(r3, r2)     // Catch:{ Exception -> 0x0348 }
            r3 = 2
            r7.bindInteger(r3, r12)     // Catch:{ Exception -> 0x0348 }
            r3 = 3
            r7.bindLong(r3, r13)     // Catch:{ Exception -> 0x0348 }
            r7.step()     // Catch:{ Exception -> 0x0348 }
            if (r7 == 0) goto L_0x037a
        L_0x0342:
            r7.dispose()
            goto L_0x037a
        L_0x0346:
            r0 = move-exception
            goto L_0x0389
        L_0x0348:
            r0 = move-exception
            r3 = r0
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0373 }
            java.util.Locale r5 = java.util.Locale.US     // Catch:{ Exception -> 0x0373 }
            java.lang.String r8 = "DELETE FROM scheduled_messages_v2 WHERE mid = %d AND uid = %d"
            r15 = 2
            java.lang.Object[] r6 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x0373 }
            java.lang.Integer r15 = java.lang.Integer.valueOf(r12)     // Catch:{ Exception -> 0x0373 }
            r16 = 0
            r6[r16] = r15     // Catch:{ Exception -> 0x0373 }
            java.lang.Long r16 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x0373 }
            r17 = 1
            r6[r17] = r16     // Catch:{ Exception -> 0x0373 }
            java.lang.String r5 = java.lang.String.format(r5, r8, r6)     // Catch:{ Exception -> 0x0373 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r5)     // Catch:{ Exception -> 0x0373 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0373 }
            r0.dispose()     // Catch:{ Exception -> 0x0373 }
            goto L_0x0377
        L_0x0373:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0346 }
        L_0x0377:
            if (r7 == 0) goto L_0x037a
            goto L_0x0342
        L_0x037a:
            r3 = 2
            long[] r0 = new long[r3]
            r3 = 0
            r0[r3] = r13
            int r3 = r9.intValue()
            long r5 = (long) r3
            r3 = 1
            r0[r3] = r5
            return r0
        L_0x0389:
            if (r7 == 0) goto L_0x038e
            r7.dispose()
        L_0x038e:
            throw r0
        L_0x038f:
            r0 = move-exception
        L_0x0390:
            if (r5 == 0) goto L_0x0395
            r5.dispose()
        L_0x0395:
            throw r0
        L_0x0396:
            r0 = move-exception
        L_0x0397:
            if (r5 == 0) goto L_0x039c
            r5.dispose()
        L_0x039c:
            goto L_0x039e
        L_0x039d:
            throw r0
        L_0x039e:
            goto L_0x039d
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.m1020x7b91d964(long, long, java.lang.Integer, int, int, int):long[]");
    }

    /* renamed from: lambda$updateMessageStateAndIdInternal$157$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m1021xb4e1d788(TLRPC.TL_updates updates) {
        getMessagesController().processUpdates(updates, false);
    }

    public long[] updateMessageStateAndId(long random_id, long dialogId, Integer _oldId, int newId, int date, boolean useQueue, int scheduled) {
        if (useQueue) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda181(this, random_id, dialogId, _oldId, newId, date, scheduled));
            return null;
        }
        return m1020x7b91d964(random_id, dialogId, _oldId, newId, date, scheduled);
    }

    /* access modifiers changed from: private */
    /* renamed from: updateUsersInternal */
    public void m1031lambda$updateUsers$159$orgtelegrammessengerMessagesStorage(ArrayList<TLRPC.User> users, boolean onlyStatus, boolean withTransaction) {
        if (onlyStatus) {
            if (withTransaction) {
                try {
                    this.database.beginTransaction();
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                    return;
                }
            }
            SQLitePreparedStatement state = this.database.executeFast("UPDATE users SET status = ? WHERE uid = ?");
            int N = users.size();
            for (int a = 0; a < N; a++) {
                TLRPC.User user = users.get(a);
                state.requery();
                if (user.status != null) {
                    state.bindInteger(1, user.status.expires);
                } else {
                    state.bindInteger(1, 0);
                }
                state.bindLong(2, user.id);
                state.step();
            }
            state.dispose();
            if (withTransaction) {
                this.database.commitTransaction();
            }
            return;
        }
        StringBuilder ids = new StringBuilder();
        LongSparseArray<TLRPC.User> usersDict = new LongSparseArray<>();
        int N2 = users.size();
        for (int a2 = 0; a2 < N2; a2++) {
            TLRPC.User user2 = users.get(a2);
            if (ids.length() != 0) {
                ids.append(",");
            }
            ids.append(user2.id);
            usersDict.put(user2.id, user2);
        }
        ArrayList<TLRPC.User> loadedUsers = new ArrayList<>();
        getUsersInternal(ids.toString(), loadedUsers);
        int N3 = loadedUsers.size();
        for (int a3 = 0; a3 < N3; a3++) {
            TLRPC.User user3 = loadedUsers.get(a3);
            TLRPC.User updateUser = usersDict.get(user3.id);
            if (updateUser != null) {
                if (updateUser.first_name != null && updateUser.last_name != null) {
                    if (!UserObject.isContact(user3)) {
                        user3.first_name = updateUser.first_name;
                        user3.last_name = updateUser.last_name;
                    }
                    user3.username = updateUser.username;
                } else if (updateUser.photo != null) {
                    user3.photo = updateUser.photo;
                } else if (updateUser.phone != null) {
                    user3.phone = updateUser.phone;
                }
            }
        }
        if (loadedUsers.isEmpty() == 0) {
            if (withTransaction) {
                this.database.beginTransaction();
            }
            putUsersInternal(loadedUsers);
            if (withTransaction) {
                this.database.commitTransaction();
            }
        }
    }

    public void updateUsers(ArrayList<TLRPC.User> users, boolean onlyStatus, boolean withTransaction, boolean useQueue) {
        if (users != null && !users.isEmpty()) {
            if (useQueue) {
                this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda49(this, users, onlyStatus, withTransaction));
            } else {
                m1031lambda$updateUsers$159$orgtelegrammessengerMessagesStorage(users, onlyStatus, withTransaction);
            }
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: markMessagesAsReadInternal */
    public void m948x834d6a50(LongSparseIntArray inbox, LongSparseIntArray outbox, SparseIntArray encryptedMessages) {
        LongSparseIntArray longSparseIntArray = inbox;
        LongSparseIntArray longSparseIntArray2 = outbox;
        SparseIntArray sparseIntArray = encryptedMessages;
        try {
            if (!isEmpty(inbox)) {
                SQLitePreparedStatement state = this.database.executeFast("DELETE FROM unread_push_messages WHERE uid = ? AND mid <= ?");
                for (int b = 0; b < inbox.size(); b++) {
                    long key = longSparseIntArray.keyAt(b);
                    int messageId = longSparseIntArray.get(key);
                    this.database.executeFast(String.format(Locale.US, "UPDATE messages_v2 SET read_state = read_state | 1 WHERE uid = %d AND mid > 0 AND mid <= %d AND read_state IN(0,2) AND out = 0", new Object[]{Long.valueOf(key), Integer.valueOf(messageId)})).stepThis().dispose();
                    state.requery();
                    state.bindLong(1, key);
                    state.bindInteger(2, messageId);
                    state.step();
                }
                state.dispose();
            }
            if (!isEmpty(outbox)) {
                for (int b2 = 0; b2 < outbox.size(); b2++) {
                    long key2 = longSparseIntArray2.keyAt(b2);
                    int messageId2 = longSparseIntArray2.get(key2);
                    this.database.executeFast(String.format(Locale.US, "UPDATE messages_v2 SET read_state = read_state | 1 WHERE uid = %d AND mid > 0 AND mid <= %d AND read_state IN(0,2) AND out = 1", new Object[]{Long.valueOf(key2), Integer.valueOf(messageId2)})).stepThis().dispose();
                }
            }
            if (sparseIntArray != null && !isEmpty(encryptedMessages)) {
                for (int a = 0; a < encryptedMessages.size(); a++) {
                    long dialogId = DialogObject.makeEncryptedDialogId((long) sparseIntArray.keyAt(a));
                    int max_date = sparseIntArray.valueAt(a);
                    SQLitePreparedStatement state2 = this.database.executeFast("UPDATE messages_v2 SET read_state = read_state | 1 WHERE uid = ? AND date <= ? AND read_state IN(0,2) AND out = 1");
                    state2.requery();
                    state2.bindLong(1, dialogId);
                    state2.bindInteger(2, max_date);
                    state2.step();
                    state2.dispose();
                }
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    private void markMessagesContentAsReadInternal(long dialogId, ArrayList<Integer> mids, int date) {
        try {
            String midsStr = TextUtils.join(",", mids);
            this.database.executeFast(String.format(Locale.US, "UPDATE messages_v2 SET read_state = read_state | 2 WHERE mid IN (%s) AND uid = %d", new Object[]{midsStr, Long.valueOf(dialogId)})).stepThis().dispose();
            if (date != 0) {
                SQLiteCursor cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT mid, ttl FROM messages_v2 WHERE mid IN (%s) AND uid = %d AND ttl > 0", new Object[]{midsStr, Long.valueOf(dialogId)}), new Object[0]);
                ArrayList<Integer> arrayList = null;
                while (cursor.next()) {
                    if (arrayList == null) {
                        arrayList = new ArrayList<>();
                    }
                    arrayList.add(Integer.valueOf(cursor.intValue(0)));
                }
                if (arrayList != null) {
                    emptyMessagesMedia(dialogId, arrayList);
                }
                cursor.dispose();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void markMessagesContentAsRead(long dialogId, ArrayList<Integer> mids, int date) {
        if (!isEmpty((List<?>) mids)) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda191(this, dialogId, mids, date));
        }
    }

    /* renamed from: lambda$markMessagesContentAsRead$160$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m949x8415var_(long dialogId, ArrayList mids, int date) {
        if (dialogId == 0) {
            try {
                LongSparseArray<ArrayList<Integer>> sparseArray = new LongSparseArray<>();
                SQLiteCursor cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT uid, mid FROM messages_v2 WHERE mid IN (%s) AND is_channel = 0", new Object[]{TextUtils.join(",", mids)}), new Object[0]);
                while (cursor.next()) {
                    long did = cursor.longValue(0);
                    ArrayList<Integer> arrayList = sparseArray.get(did);
                    if (arrayList == null) {
                        arrayList = new ArrayList<>();
                        sparseArray.put(did, arrayList);
                    }
                    arrayList.add(Integer.valueOf(cursor.intValue(1)));
                }
                cursor.dispose();
                int N = sparseArray.size();
                for (int a = 0; a < N; a++) {
                    markMessagesContentAsReadInternal(sparseArray.keyAt(a), sparseArray.valueAt(a), date);
                }
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        } else {
            markMessagesContentAsReadInternal(dialogId, mids, date);
        }
    }

    public void markMessagesAsRead(LongSparseIntArray inbox, LongSparseIntArray outbox, SparseIntArray encryptedMessages, boolean useQueue) {
        if (useQueue) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda57(this, inbox, outbox, encryptedMessages));
        } else {
            m948x834d6a50(inbox, outbox, encryptedMessages);
        }
    }

    public void markMessagesAsDeletedByRandoms(ArrayList<Long> messages) {
        if (!messages.isEmpty()) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda34(this, messages));
        }
    }

    /* renamed from: lambda$markMessagesAsDeletedByRandoms$163$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m945x23dca3c4(ArrayList messages) {
        try {
            SQLiteCursor cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT mid, uid FROM randoms_v2 WHERE random_id IN(%s)", new Object[]{TextUtils.join(",", messages)}), new Object[0]);
            LongSparseArray longSparseArray = new LongSparseArray();
            while (cursor.next()) {
                long dialogId = cursor.longValue(1);
                ArrayList<Integer> mids = (ArrayList) longSparseArray.get(dialogId);
                if (mids == null) {
                    mids = new ArrayList<>();
                    longSparseArray.put(dialogId, mids);
                }
                mids.add(Integer.valueOf(cursor.intValue(0)));
            }
            cursor.dispose();
            if (!longSparseArray.isEmpty()) {
                int N = longSparseArray.size();
                int a = 0;
                while (a < N) {
                    long dialogId2 = longSparseArray.keyAt(a);
                    ArrayList<Integer> mids2 = (ArrayList) longSparseArray.valueAt(a);
                    AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda32(this, mids2));
                    updateDialogsWithReadMessagesInternal(mids2, (LongSparseIntArray) null, (LongSparseIntArray) null, (LongSparseArray<ArrayList<Integer>>) null);
                    m942x977317f7(dialogId2, mids2, true, false);
                    ArrayList<Integer> arrayList = mids2;
                    int a2 = a;
                    m1011x365e590f(dialogId2, 0, mids2, (ArrayList<Long>) null);
                    a = a2 + 1;
                }
                int i = a;
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* renamed from: lambda$markMessagesAsDeletedByRandoms$162$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m944xccbeb2e5(ArrayList mids) {
        getNotificationCenter().postNotificationName(NotificationCenter.messagesDeleted, mids, 0L, false);
    }

    /* access modifiers changed from: protected */
    public void deletePushMessages(long dialogId, ArrayList<Integer> messages) {
        try {
            this.database.executeFast(String.format(Locale.US, "DELETE FROM unread_push_messages WHERE uid = %d AND mid IN(%s)", new Object[]{Long.valueOf(dialogId), TextUtils.join(",", messages)})).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    private void broadcastScheduledMessagesChange(Long did) {
        int count;
        try {
            SQLiteCursor cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT COUNT(mid) FROM scheduled_messages_v2 WHERE uid = %d", new Object[]{did}), new Object[0]);
            if (cursor.next()) {
                count = cursor.intValue(0);
            } else {
                count = 0;
            }
            cursor.dispose();
            AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda23(this, did, count));
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* renamed from: lambda$broadcastScheduledMessagesChange$164$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m848xef2b76a6(Long did, int count) {
        getNotificationCenter().postNotificationName(NotificationCenter.scheduledMessagesUpdated, did, Integer.valueOf(count));
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:110:0x0361 A[Catch:{ Exception -> 0x07a0 }] */
    /* JADX WARNING: Removed duplicated region for block: B:117:0x0410  */
    /* JADX WARNING: Removed duplicated region for block: B:188:0x074a A[Catch:{ Exception -> 0x079c }] */
    /* JADX WARNING: Removed duplicated region for block: B:197:0x0790 A[Catch:{ Exception -> 0x079a }] */
    /* JADX WARNING: Removed duplicated region for block: B:94:0x02b6 A[Catch:{ Exception -> 0x07a0 }] */
    /* renamed from: markMessagesAsDeletedInternal */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public java.util.ArrayList<java.lang.Long> m942x977317f7(long r44, java.util.ArrayList<java.lang.Integer> r46, boolean r47, boolean r48) {
        /*
            r43 = this;
            r7 = r43
            r8 = r44
            r10 = r46
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x07a0 }
            r0.<init>()     // Catch:{ Exception -> 0x07a0 }
            r11 = r0
            java.lang.String r12 = ","
            r13 = 2
            r14 = 1
            r15 = 0
            if (r48 == 0) goto L_0x0093
            java.lang.String r0 = android.text.TextUtils.join(r12, r10)     // Catch:{ Exception -> 0x07a0 }
            r1 = r0
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x07a0 }
            r0.<init>()     // Catch:{ Exception -> 0x07a0 }
            r2 = r0
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x07a0 }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x07a0 }
            java.lang.String r4 = "SELECT uid FROM scheduled_messages_v2 WHERE mid IN(%s) AND uid = %d"
            java.lang.Object[] r5 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x07a0 }
            r5[r15] = r1     // Catch:{ Exception -> 0x07a0 }
            java.lang.Long r6 = java.lang.Long.valueOf(r44)     // Catch:{ Exception -> 0x07a0 }
            r5[r14] = r6     // Catch:{ Exception -> 0x07a0 }
            java.lang.String r3 = java.lang.String.format(r3, r4, r5)     // Catch:{ Exception -> 0x07a0 }
            java.lang.Object[] r4 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x07a0 }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r3, r4)     // Catch:{ Exception -> 0x07a0 }
            r3 = r0
        L_0x0039:
            boolean r0 = r3.next()     // Catch:{ Exception -> 0x0056 }
            if (r0 == 0) goto L_0x0055
            long r4 = r3.longValue(r15)     // Catch:{ Exception -> 0x0056 }
            java.lang.Long r0 = java.lang.Long.valueOf(r4)     // Catch:{ Exception -> 0x0056 }
            boolean r0 = r2.contains(r0)     // Catch:{ Exception -> 0x0056 }
            if (r0 != 0) goto L_0x0054
            java.lang.Long r0 = java.lang.Long.valueOf(r4)     // Catch:{ Exception -> 0x0056 }
            r2.add(r0)     // Catch:{ Exception -> 0x0056 }
        L_0x0054:
            goto L_0x0039
        L_0x0055:
            goto L_0x005a
        L_0x0056:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ Exception -> 0x07a0 }
        L_0x005a:
            r3.dispose()     // Catch:{ Exception -> 0x07a0 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x07a0 }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x07a0 }
            java.lang.String r5 = "DELETE FROM scheduled_messages_v2 WHERE mid IN(%s) AND uid = %d"
            java.lang.Object[] r6 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x07a0 }
            r6[r15] = r1     // Catch:{ Exception -> 0x07a0 }
            java.lang.Long r12 = java.lang.Long.valueOf(r44)     // Catch:{ Exception -> 0x07a0 }
            r6[r14] = r12     // Catch:{ Exception -> 0x07a0 }
            java.lang.String r4 = java.lang.String.format(r4, r5, r6)     // Catch:{ Exception -> 0x07a0 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r4)     // Catch:{ Exception -> 0x07a0 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x07a0 }
            r0.dispose()     // Catch:{ Exception -> 0x07a0 }
            r0 = 0
            int r4 = r2.size()     // Catch:{ Exception -> 0x07a0 }
        L_0x0081:
            if (r0 >= r4) goto L_0x008f
            java.lang.Object r5 = r2.get(r0)     // Catch:{ Exception -> 0x07a0 }
            java.lang.Long r5 = (java.lang.Long) r5     // Catch:{ Exception -> 0x07a0 }
            r7.broadcastScheduledMessagesChange(r5)     // Catch:{ Exception -> 0x07a0 }
            int r0 = r0 + 1
            goto L_0x0081
        L_0x008f:
            r1 = r10
            r2 = r11
            goto L_0x0799
        L_0x0093:
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x07a0 }
            r0.<init>(r10)     // Catch:{ Exception -> 0x07a0 }
            r6 = r0
            androidx.collection.LongSparseArray r0 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x07a0 }
            r0.<init>()     // Catch:{ Exception -> 0x07a0 }
            r5 = r0
            androidx.collection.LongSparseArray r0 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x07a0 }
            r0.<init>()     // Catch:{ Exception -> 0x07a0 }
            r4 = r0
            java.lang.String r0 = android.text.TextUtils.join(r12, r10)     // Catch:{ Exception -> 0x07a0 }
            r3 = r0
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x07a0 }
            r0.<init>()     // Catch:{ Exception -> 0x07a0 }
            r2 = r0
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x07a0 }
            r0.<init>()     // Catch:{ Exception -> 0x07a0 }
            r1 = r0
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x07a0 }
            r0.<init>()     // Catch:{ Exception -> 0x07a0 }
            r16 = r0
            org.telegram.messenger.UserConfig r0 = r43.getUserConfig()     // Catch:{ Exception -> 0x07a0 }
            long r17 = r0.getClientUserId()     // Catch:{ Exception -> 0x07a0 }
            r14 = 0
            int r0 = (r8 > r14 ? 1 : (r8 == r14 ? 0 : -1))
            if (r0 == 0) goto L_0x00ee
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x07a0 }
            java.util.Locale r14 = java.util.Locale.US     // Catch:{ Exception -> 0x07a0 }
            java.lang.String r15 = "SELECT uid, data, read_state, out, mention, mid FROM messages_v2 WHERE mid IN(%s) AND uid = %d"
            r21 = r1
            java.lang.Object[] r1 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x07a0 }
            r19 = 0
            r1[r19] = r3     // Catch:{ Exception -> 0x07a0 }
            java.lang.Long r22 = java.lang.Long.valueOf(r44)     // Catch:{ Exception -> 0x07a0 }
            r20 = 1
            r1[r20] = r22     // Catch:{ Exception -> 0x07a0 }
            java.lang.String r1 = java.lang.String.format(r14, r15, r1)     // Catch:{ Exception -> 0x07a0 }
            r14 = 0
            java.lang.Object[] r15 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x07a0 }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r1, r15)     // Catch:{ Exception -> 0x07a0 }
            r13 = r0
            goto L_0x0107
        L_0x00ee:
            r21 = r1
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x07a0 }
            java.util.Locale r1 = java.util.Locale.US     // Catch:{ Exception -> 0x07a0 }
            java.lang.String r14 = "SELECT uid, data, read_state, out, mention, mid FROM messages_v2 WHERE mid IN(%s) AND is_channel = 0"
            r15 = 1
            java.lang.Object[] r13 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x07a0 }
            r15 = 0
            r13[r15] = r3     // Catch:{ Exception -> 0x07a0 }
            java.lang.String r1 = java.lang.String.format(r1, r14, r13)     // Catch:{ Exception -> 0x07a0 }
            java.lang.Object[] r13 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x07a0 }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r1, r13)     // Catch:{ Exception -> 0x07a0 }
            r13 = r0
        L_0x0107:
            boolean r0 = r13.next()     // Catch:{ Exception -> 0x0294 }
            if (r0 == 0) goto L_0x0287
            r1 = 0
            long r23 = r13.longValue(r1)     // Catch:{ Exception -> 0x0294 }
            r0 = r23
            r15 = 5
            int r15 = r13.intValue(r15)     // Catch:{ Exception -> 0x0294 }
            java.lang.Integer r14 = java.lang.Integer.valueOf(r15)     // Catch:{ Exception -> 0x0294 }
            r6.remove(r14)     // Catch:{ Exception -> 0x0294 }
            java.lang.Object r14 = r4.get(r0)     // Catch:{ Exception -> 0x0294 }
            java.util.ArrayList r14 = (java.util.ArrayList) r14     // Catch:{ Exception -> 0x0294 }
            if (r14 != 0) goto L_0x0142
            java.util.ArrayList r24 = new java.util.ArrayList     // Catch:{ Exception -> 0x0133 }
            r24.<init>()     // Catch:{ Exception -> 0x0133 }
            r14 = r24
            r4.put(r0, r14)     // Catch:{ Exception -> 0x0133 }
            goto L_0x0142
        L_0x0133:
            r0 = move-exception
            r30 = r3
            r26 = r4
            r31 = r5
            r32 = r6
            r24 = r21
            r21 = r2
            goto L_0x02a1
        L_0x0142:
            r24 = r2
            java.lang.Integer r2 = java.lang.Integer.valueOf(r15)     // Catch:{ Exception -> 0x0277 }
            r14.add(r2)     // Catch:{ Exception -> 0x0277 }
            int r2 = (r0 > r17 ? 1 : (r0 == r17 ? 0 : -1))
            if (r2 == 0) goto L_0x01e8
            r2 = 2
            int r25 = r13.intValue(r2)     // Catch:{ Exception -> 0x01d7 }
            r2 = r25
            r25 = r3
            r3 = 3
            int r26 = r13.intValue(r3)     // Catch:{ Exception -> 0x01c6 }
            if (r26 != 0) goto L_0x01c3
            java.lang.Object r3 = r5.get(r0)     // Catch:{ Exception -> 0x01c6 }
            java.lang.Integer[] r3 = (java.lang.Integer[]) r3     // Catch:{ Exception -> 0x01c6 }
            if (r3 != 0) goto L_0x0192
            r26 = r3
            r27 = r4
            r3 = 2
            java.lang.Integer[] r4 = new java.lang.Integer[r3]     // Catch:{ Exception -> 0x0181 }
            r3 = 0
            java.lang.Integer r19 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x0181 }
            r4[r3] = r19     // Catch:{ Exception -> 0x0181 }
            java.lang.Integer r28 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x0181 }
            r3 = 1
            r4[r3] = r28     // Catch:{ Exception -> 0x0181 }
            r3 = r4
            r5.put(r0, r3)     // Catch:{ Exception -> 0x0181 }
            goto L_0x0196
        L_0x0181:
            r0 = move-exception
            r31 = r5
            r32 = r6
            r30 = r25
            r26 = r27
            r42 = r24
            r24 = r21
            r21 = r42
            goto L_0x02a1
        L_0x0192:
            r26 = r3
            r27 = r4
        L_0x0196:
            r4 = 2
            if (r2 >= r4) goto L_0x01aa
            r4 = 1
            r20 = r3[r4]     // Catch:{ Exception -> 0x0181 }
            r20 = r3[r4]     // Catch:{ Exception -> 0x0181 }
            int r20 = r20.intValue()     // Catch:{ Exception -> 0x0181 }
            int r20 = r20 + 1
            java.lang.Integer r20 = java.lang.Integer.valueOf(r20)     // Catch:{ Exception -> 0x0181 }
            r3[r4] = r20     // Catch:{ Exception -> 0x0181 }
        L_0x01aa:
            if (r2 == 0) goto L_0x01af
            r4 = 2
            if (r2 != r4) goto L_0x01ec
        L_0x01af:
            r4 = 0
            r19 = r3[r4]     // Catch:{ Exception -> 0x0181 }
            r19 = r3[r4]     // Catch:{ Exception -> 0x0181 }
            int r19 = r19.intValue()     // Catch:{ Exception -> 0x0181 }
            r20 = 1
            int r19 = r19 + 1
            java.lang.Integer r19 = java.lang.Integer.valueOf(r19)     // Catch:{ Exception -> 0x0181 }
            r3[r4] = r19     // Catch:{ Exception -> 0x0181 }
            goto L_0x01ec
        L_0x01c3:
            r27 = r4
            goto L_0x01ec
        L_0x01c6:
            r0 = move-exception
            r26 = r4
            r31 = r5
            r32 = r6
            r30 = r25
            r42 = r24
            r24 = r21
            r21 = r42
            goto L_0x02a1
        L_0x01d7:
            r0 = move-exception
            r30 = r3
            r26 = r4
            r31 = r5
            r32 = r6
            r42 = r24
            r24 = r21
            r21 = r42
            goto L_0x02a1
        L_0x01e8:
            r25 = r3
            r27 = r4
        L_0x01ec:
            boolean r2 = org.telegram.messenger.DialogObject.isEncryptedDialog(r0)     // Catch:{ Exception -> 0x0267 }
            if (r2 != 0) goto L_0x0203
            if (r47 != 0) goto L_0x0203
            r31 = r5
            r32 = r6
            r30 = r25
            r26 = r27
            r42 = r24
            r24 = r21
            r21 = r42
            goto L_0x0259
        L_0x0203:
            r2 = 1
            org.telegram.tgnet.NativeByteBuffer r3 = r13.byteBufferValue(r2)     // Catch:{ Exception -> 0x0267 }
            r4 = r3
            if (r4 == 0) goto L_0x0246
            r2 = 0
            int r3 = r4.readInt32(r2)     // Catch:{ Exception -> 0x0267 }
            org.telegram.tgnet.TLRPC$Message r3 = org.telegram.tgnet.TLRPC.Message.TLdeserialize(r4, r3, r2)     // Catch:{ Exception -> 0x0267 }
            org.telegram.messenger.UserConfig r2 = r43.getUserConfig()     // Catch:{ Exception -> 0x0267 }
            r28 = r0
            long r0 = r2.clientUserId     // Catch:{ Exception -> 0x0267 }
            r3.readAttachPath(r4, r0)     // Catch:{ Exception -> 0x0267 }
            r4.reuse()     // Catch:{ Exception -> 0x0267 }
            r0 = 0
            r2 = r21
            r1 = r43
            r21 = r24
            r24 = r2
            r2 = r3
            r30 = r25
            r25 = r3
            r3 = r21
            r26 = r27
            r27 = r4
            r4 = r16
            r31 = r5
            r5 = r24
            r32 = r6
            r6 = r0
            r1.addFilesToDelete(r2, r3, r4, r5, r6)     // Catch:{ Exception -> 0x0243 }
            goto L_0x0258
        L_0x0243:
            r0 = move-exception
            goto L_0x02a1
        L_0x0246:
            r28 = r0
            r31 = r5
            r32 = r6
            r30 = r25
            r26 = r27
            r27 = r4
            r42 = r24
            r24 = r21
            r21 = r42
        L_0x0258:
        L_0x0259:
            r2 = r21
            r21 = r24
            r4 = r26
            r3 = r30
            r5 = r31
            r6 = r32
            goto L_0x0107
        L_0x0267:
            r0 = move-exception
            r31 = r5
            r32 = r6
            r30 = r25
            r26 = r27
            r42 = r24
            r24 = r21
            r21 = r42
            goto L_0x02a1
        L_0x0277:
            r0 = move-exception
            r30 = r3
            r26 = r4
            r31 = r5
            r32 = r6
            r42 = r24
            r24 = r21
            r21 = r42
            goto L_0x02a1
        L_0x0287:
            r30 = r3
            r26 = r4
            r31 = r5
            r32 = r6
            r24 = r21
            r21 = r2
            goto L_0x02a4
        L_0x0294:
            r0 = move-exception
            r30 = r3
            r26 = r4
            r31 = r5
            r32 = r6
            r24 = r21
            r21 = r2
        L_0x02a1:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ Exception -> 0x07a0 }
        L_0x02a4:
            r13.dispose()     // Catch:{ Exception -> 0x07a0 }
            org.telegram.messenger.MessagesStorage r0 = r43.getMessagesStorage()     // Catch:{ Exception -> 0x07a0 }
            org.telegram.SQLite.SQLiteDatabase r0 = r0.getDatabase()     // Catch:{ Exception -> 0x07a0 }
            r0.beginTransaction()     // Catch:{ Exception -> 0x07a0 }
            r0 = 0
        L_0x02b3:
            r1 = 2
            if (r0 >= r1) goto L_0x033e
            if (r0 != 0) goto L_0x02dc
            r1 = 0
            int r3 = (r8 > r1 ? 1 : (r8 == r1 ? 0 : -1))
            if (r3 == 0) goto L_0x02cd
            org.telegram.messenger.MessagesStorage r1 = r43.getMessagesStorage()     // Catch:{ Exception -> 0x07a0 }
            org.telegram.SQLite.SQLiteDatabase r1 = r1.getDatabase()     // Catch:{ Exception -> 0x07a0 }
            java.lang.String r2 = "UPDATE messages_v2 SET replydata = ? WHERE reply_to_message_id IN(?) AND uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x07a0 }
            goto L_0x02ff
        L_0x02cd:
            org.telegram.messenger.MessagesStorage r1 = r43.getMessagesStorage()     // Catch:{ Exception -> 0x07a0 }
            org.telegram.SQLite.SQLiteDatabase r1 = r1.getDatabase()     // Catch:{ Exception -> 0x07a0 }
            java.lang.String r2 = "UPDATE messages_v2 SET replydata = ? WHERE reply_to_message_id IN(?) AND is_channel = 0"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x07a0 }
            goto L_0x02ff
        L_0x02dc:
            r1 = 0
            int r3 = (r8 > r1 ? 1 : (r8 == r1 ? 0 : -1))
            if (r3 == 0) goto L_0x02f1
            org.telegram.messenger.MessagesStorage r1 = r43.getMessagesStorage()     // Catch:{ Exception -> 0x07a0 }
            org.telegram.SQLite.SQLiteDatabase r1 = r1.getDatabase()     // Catch:{ Exception -> 0x07a0 }
            java.lang.String r2 = "UPDATE scheduled_messages_v2 SET replydata = ? WHERE reply_to_message_id IN(?) AND uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x07a0 }
            goto L_0x02ff
        L_0x02f1:
            org.telegram.messenger.MessagesStorage r1 = r43.getMessagesStorage()     // Catch:{ Exception -> 0x07a0 }
            org.telegram.SQLite.SQLiteDatabase r1 = r1.getDatabase()     // Catch:{ Exception -> 0x07a0 }
            java.lang.String r2 = "UPDATE scheduled_messages_v2 SET replydata = ? WHERE reply_to_message_id IN(?)"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x07a0 }
        L_0x02ff:
            org.telegram.tgnet.TLRPC$TL_messageEmpty r2 = new org.telegram.tgnet.TLRPC$TL_messageEmpty     // Catch:{ Exception -> 0x07a0 }
            r2.<init>()     // Catch:{ Exception -> 0x07a0 }
            org.telegram.tgnet.NativeByteBuffer r3 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x07a0 }
            int r4 = r2.getObjectSize()     // Catch:{ Exception -> 0x07a0 }
            r3.<init>((int) r4)     // Catch:{ Exception -> 0x07a0 }
            r2.serializeToStream(r3)     // Catch:{ Exception -> 0x07a0 }
            r1.requery()     // Catch:{ Exception -> 0x07a0 }
            r4 = 1
            r1.bindByteBuffer((int) r4, (org.telegram.tgnet.NativeByteBuffer) r3)     // Catch:{ Exception -> 0x07a0 }
            r4 = r30
            r5 = 2
            r1.bindString(r5, r4)     // Catch:{ Exception -> 0x07a0 }
            r5 = 0
            int r14 = (r8 > r5 ? 1 : (r8 == r5 ? 0 : -1))
            if (r14 == 0) goto L_0x0327
            r5 = 3
            r1.bindLong(r5, r8)     // Catch:{ Exception -> 0x07a0 }
        L_0x0327:
            r1.step()     // Catch:{ Exception -> 0x07a0 }
            r1.dispose()     // Catch:{ Exception -> 0x07a0 }
            org.telegram.messenger.MessagesStorage r5 = r43.getMessagesStorage()     // Catch:{ Exception -> 0x07a0 }
            org.telegram.SQLite.SQLiteDatabase r5 = r5.getDatabase()     // Catch:{ Exception -> 0x07a0 }
            r5.commitTransaction()     // Catch:{ Exception -> 0x07a0 }
            int r0 = r0 + 1
            r30 = r4
            goto L_0x02b3
        L_0x033e:
            r4 = r30
            r1 = r16
            r2 = 1
            r7.deleteFromDownloadQueue(r1, r2)     // Catch:{ Exception -> 0x07a0 }
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda35 r0 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda35     // Catch:{ Exception -> 0x07a0 }
            r2 = r24
            r0.<init>(r7, r2)     // Catch:{ Exception -> 0x07a0 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0)     // Catch:{ Exception -> 0x07a0 }
            org.telegram.messenger.FileLoader r0 = r43.getFileLoader()     // Catch:{ Exception -> 0x07a0 }
            r3 = r21
            r5 = 0
            r0.deleteFiles(r3, r5)     // Catch:{ Exception -> 0x07a0 }
            r0 = 0
        L_0x035b:
            int r5 = r31.size()     // Catch:{ Exception -> 0x07a0 }
            if (r0 >= r5) goto L_0x03fb
            r5 = r31
            long r14 = r5.keyAt(r0)     // Catch:{ Exception -> 0x07a0 }
            java.lang.Object r6 = r5.valueAt(r0)     // Catch:{ Exception -> 0x07a0 }
            java.lang.Integer[] r6 = (java.lang.Integer[]) r6     // Catch:{ Exception -> 0x07a0 }
            r16 = r1
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x07a0 }
            r21 = r2
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x07a0 }
            r2.<init>()     // Catch:{ Exception -> 0x07a0 }
            r24 = r3
            java.lang.String r3 = "SELECT unread_count, unread_count_i FROM dialogs WHERE did = "
            r2.append(r3)     // Catch:{ Exception -> 0x07a0 }
            r2.append(r14)     // Catch:{ Exception -> 0x07a0 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x07a0 }
            r25 = r13
            r3 = 0
            java.lang.Object[] r13 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x07a0 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r2, r13)     // Catch:{ Exception -> 0x07a0 }
            r13 = r1
            r1 = 0
            r2 = 0
            boolean r3 = r13.next()     // Catch:{ Exception -> 0x07a0 }
            if (r3 == 0) goto L_0x03a6
            r3 = 0
            int r25 = r13.intValue(r3)     // Catch:{ Exception -> 0x07a0 }
            r1 = r25
            r3 = 1
            int r25 = r13.intValue(r3)     // Catch:{ Exception -> 0x07a0 }
            r2 = r25
        L_0x03a6:
            r13.dispose()     // Catch:{ Exception -> 0x07a0 }
            java.lang.Long r3 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x07a0 }
            r11.add(r3)     // Catch:{ Exception -> 0x07a0 }
            org.telegram.SQLite.SQLiteDatabase r3 = r7.database     // Catch:{ Exception -> 0x07a0 }
            r25 = r13
            java.lang.String r13 = "UPDATE dialogs SET unread_count = ?, unread_count_i = ? WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.executeFast(r13)     // Catch:{ Exception -> 0x07a0 }
            r3.requery()     // Catch:{ Exception -> 0x07a0 }
            r13 = 0
            r19 = r6[r13]     // Catch:{ Exception -> 0x07a0 }
            int r19 = r19.intValue()     // Catch:{ Exception -> 0x07a0 }
            r27 = r11
            int r11 = r1 - r19
            int r11 = java.lang.Math.max(r13, r11)     // Catch:{ Exception -> 0x07a0 }
            r13 = 1
            r3.bindInteger(r13, r11)     // Catch:{ Exception -> 0x07a0 }
            r11 = r6[r13]     // Catch:{ Exception -> 0x07a0 }
            int r11 = r11.intValue()     // Catch:{ Exception -> 0x07a0 }
            int r11 = r2 - r11
            r13 = 0
            int r11 = java.lang.Math.max(r13, r11)     // Catch:{ Exception -> 0x07a0 }
            r13 = 2
            r3.bindInteger(r13, r11)     // Catch:{ Exception -> 0x07a0 }
            r11 = 3
            r3.bindLong(r11, r14)     // Catch:{ Exception -> 0x07a0 }
            r3.step()     // Catch:{ Exception -> 0x07a0 }
            r3.dispose()     // Catch:{ Exception -> 0x07a0 }
            int r0 = r0 + 1
            r31 = r5
            r1 = r16
            r2 = r21
            r3 = r24
            r13 = r25
            r11 = r27
            goto L_0x035b
        L_0x03fb:
            r16 = r1
            r21 = r2
            r24 = r3
            r27 = r11
            r25 = r13
            r5 = r31
            r0 = 0
            int r1 = r26.size()     // Catch:{ Exception -> 0x07a0 }
            r13 = r25
        L_0x040e:
            if (r0 >= r1) goto L_0x0725
            r2 = r26
            long r14 = r2.keyAt(r0)     // Catch:{ Exception -> 0x079c }
            java.lang.Object r3 = r2.valueAt(r0)     // Catch:{ Exception -> 0x079c }
            java.util.ArrayList r3 = (java.util.ArrayList) r3     // Catch:{ Exception -> 0x079c }
            java.lang.String r6 = android.text.TextUtils.join(r12, r3)     // Catch:{ Exception -> 0x079c }
            boolean r11 = org.telegram.messenger.DialogObject.isEncryptedDialog(r14)     // Catch:{ Exception -> 0x079c }
            if (r11 != 0) goto L_0x0483
            boolean r11 = org.telegram.messenger.DialogObject.isChatDialog(r14)     // Catch:{ Exception -> 0x07a0 }
            if (r11 == 0) goto L_0x0458
            org.telegram.SQLite.SQLiteDatabase r11 = r7.database     // Catch:{ Exception -> 0x07a0 }
            r25 = r1
            java.util.Locale r1 = java.util.Locale.US     // Catch:{ Exception -> 0x07a0 }
            r26 = r2
            java.lang.String r2 = "UPDATE chat_settings_v2 SET pinned = 0 WHERE uid = %d AND pinned IN (%s)"
            r28 = r3
            r29 = r12
            r3 = 2
            java.lang.Object[] r12 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x07a0 }
            long r8 = -r14
            java.lang.Long r3 = java.lang.Long.valueOf(r8)     // Catch:{ Exception -> 0x07a0 }
            r8 = 0
            r12[r8] = r3     // Catch:{ Exception -> 0x07a0 }
            r3 = 1
            r12[r3] = r6     // Catch:{ Exception -> 0x07a0 }
            java.lang.String r1 = java.lang.String.format(r1, r2, r12)     // Catch:{ Exception -> 0x07a0 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r11.executeFast(r1)     // Catch:{ Exception -> 0x07a0 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x07a0 }
            r1.dispose()     // Catch:{ Exception -> 0x07a0 }
            goto L_0x048b
        L_0x0458:
            r25 = r1
            r26 = r2
            r28 = r3
            r29 = r12
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x07a0 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x07a0 }
            java.lang.String r3 = "UPDATE user_settings SET pinned = 0 WHERE uid = %d AND pinned IN (%s)"
            r8 = 2
            java.lang.Object[] r9 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x07a0 }
            java.lang.Long r8 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x07a0 }
            r11 = 0
            r9[r11] = r8     // Catch:{ Exception -> 0x07a0 }
            r8 = 1
            r9[r8] = r6     // Catch:{ Exception -> 0x07a0 }
            java.lang.String r2 = java.lang.String.format(r2, r3, r9)     // Catch:{ Exception -> 0x07a0 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x07a0 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x07a0 }
            r1.dispose()     // Catch:{ Exception -> 0x07a0 }
            goto L_0x048b
        L_0x0483:
            r25 = r1
            r26 = r2
            r28 = r3
            r29 = r12
        L_0x048b:
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x079c }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x079c }
            java.lang.String r3 = "DELETE FROM chat_pinned_v2 WHERE uid = %d AND mid IN(%s)"
            r8 = 2
            java.lang.Object[] r9 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x079c }
            java.lang.Long r8 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x079c }
            r11 = 0
            r9[r11] = r8     // Catch:{ Exception -> 0x079c }
            r8 = 1
            r9[r8] = r6     // Catch:{ Exception -> 0x079c }
            java.lang.String r2 = java.lang.String.format(r2, r3, r9)     // Catch:{ Exception -> 0x079c }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x079c }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x079c }
            r1.dispose()     // Catch:{ Exception -> 0x079c }
            r1 = 0
            org.telegram.SQLite.SQLiteDatabase r2 = r7.database     // Catch:{ Exception -> 0x079c }
            java.lang.String r3 = "SELECT changes()"
            r8 = 0
            java.lang.Object[] r9 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x079c }
            org.telegram.SQLite.SQLiteCursor r2 = r2.queryFinalized(r3, r9)     // Catch:{ Exception -> 0x079c }
            boolean r3 = r2.next()     // Catch:{ Exception -> 0x079c }
            if (r3 == 0) goto L_0x04c5
            r3 = 0
            int r8 = r2.intValue(r3)     // Catch:{ Exception -> 0x07a0 }
            r1 = r8
        L_0x04c5:
            r2.dispose()     // Catch:{ Exception -> 0x079c }
            if (r1 <= 0) goto L_0x0514
            org.telegram.SQLite.SQLiteDatabase r3 = r7.database     // Catch:{ Exception -> 0x07a0 }
            java.util.Locale r8 = java.util.Locale.US     // Catch:{ Exception -> 0x07a0 }
            java.lang.String r9 = "SELECT count FROM chat_pinned_count WHERE uid = %d"
            r11 = 1
            java.lang.Object[] r12 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x07a0 }
            java.lang.Long r11 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x07a0 }
            r13 = 0
            r12[r13] = r11     // Catch:{ Exception -> 0x07a0 }
            java.lang.String r8 = java.lang.String.format(r8, r9, r12)     // Catch:{ Exception -> 0x07a0 }
            java.lang.Object[] r9 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x07a0 }
            org.telegram.SQLite.SQLiteCursor r3 = r3.queryFinalized(r8, r9)     // Catch:{ Exception -> 0x07a0 }
            r2 = r3
            boolean r3 = r2.next()     // Catch:{ Exception -> 0x07a0 }
            if (r3 == 0) goto L_0x0511
            r3 = 0
            int r8 = r2.intValue(r3)     // Catch:{ Exception -> 0x07a0 }
            r3 = r8
            org.telegram.SQLite.SQLiteDatabase r8 = r7.database     // Catch:{ Exception -> 0x07a0 }
            java.lang.String r9 = "UPDATE chat_pinned_count SET count = ? WHERE uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r8 = r8.executeFast(r9)     // Catch:{ Exception -> 0x07a0 }
            r8.requery()     // Catch:{ Exception -> 0x07a0 }
            int r9 = r3 - r1
            r11 = 0
            int r9 = java.lang.Math.max(r11, r9)     // Catch:{ Exception -> 0x07a0 }
            r11 = 1
            r8.bindInteger(r11, r9)     // Catch:{ Exception -> 0x07a0 }
            r9 = 2
            r8.bindLong(r9, r14)     // Catch:{ Exception -> 0x07a0 }
            r8.step()     // Catch:{ Exception -> 0x07a0 }
            r8.dispose()     // Catch:{ Exception -> 0x07a0 }
        L_0x0511:
            r2.dispose()     // Catch:{ Exception -> 0x07a0 }
        L_0x0514:
            org.telegram.SQLite.SQLiteDatabase r3 = r7.database     // Catch:{ Exception -> 0x079c }
            java.util.Locale r8 = java.util.Locale.US     // Catch:{ Exception -> 0x079c }
            java.lang.String r9 = "DELETE FROM messages_v2 WHERE mid IN(%s) AND uid = %d"
            r11 = 2
            java.lang.Object[] r12 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x079c }
            r11 = 0
            r12[r11] = r4     // Catch:{ Exception -> 0x079c }
            java.lang.Long r11 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x079c }
            r13 = 1
            r12[r13] = r11     // Catch:{ Exception -> 0x079c }
            java.lang.String r8 = java.lang.String.format(r8, r9, r12)     // Catch:{ Exception -> 0x079c }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.executeFast(r8)     // Catch:{ Exception -> 0x079c }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.stepThis()     // Catch:{ Exception -> 0x079c }
            r3.dispose()     // Catch:{ Exception -> 0x079c }
            org.telegram.SQLite.SQLiteDatabase r3 = r7.database     // Catch:{ Exception -> 0x079c }
            java.util.Locale r8 = java.util.Locale.US     // Catch:{ Exception -> 0x079c }
            java.lang.String r9 = "DELETE FROM polls_v2 WHERE mid IN(%s) AND uid = %d"
            r11 = 2
            java.lang.Object[] r12 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x079c }
            r11 = 0
            r12[r11] = r4     // Catch:{ Exception -> 0x079c }
            java.lang.Long r11 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x079c }
            r13 = 1
            r12[r13] = r11     // Catch:{ Exception -> 0x079c }
            java.lang.String r8 = java.lang.String.format(r8, r9, r12)     // Catch:{ Exception -> 0x079c }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.executeFast(r8)     // Catch:{ Exception -> 0x079c }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.stepThis()     // Catch:{ Exception -> 0x079c }
            r3.dispose()     // Catch:{ Exception -> 0x079c }
            org.telegram.SQLite.SQLiteDatabase r3 = r7.database     // Catch:{ Exception -> 0x079c }
            java.util.Locale r8 = java.util.Locale.US     // Catch:{ Exception -> 0x079c }
            java.lang.String r9 = "DELETE FROM bot_keyboard WHERE mid IN(%s) AND uid = %d"
            r11 = 2
            java.lang.Object[] r12 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x079c }
            r11 = 0
            r12[r11] = r4     // Catch:{ Exception -> 0x079c }
            java.lang.Long r11 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x079c }
            r13 = 1
            r12[r13] = r11     // Catch:{ Exception -> 0x079c }
            java.lang.String r8 = java.lang.String.format(r8, r9, r12)     // Catch:{ Exception -> 0x079c }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.executeFast(r8)     // Catch:{ Exception -> 0x079c }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.stepThis()     // Catch:{ Exception -> 0x079c }
            r3.dispose()     // Catch:{ Exception -> 0x079c }
            boolean r3 = r32.isEmpty()     // Catch:{ Exception -> 0x079c }
            if (r3 == 0) goto L_0x06ea
            org.telegram.SQLite.SQLiteDatabase r3 = r7.database     // Catch:{ Exception -> 0x079c }
            java.util.Locale r8 = java.util.Locale.US     // Catch:{ Exception -> 0x079c }
            java.lang.String r9 = "SELECT uid, type FROM media_v4 WHERE mid IN(%s) AND uid = %d"
            r11 = 2
            java.lang.Object[] r12 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x079c }
            r11 = 0
            r12[r11] = r4     // Catch:{ Exception -> 0x079c }
            java.lang.Long r11 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x079c }
            r13 = 1
            r12[r13] = r11     // Catch:{ Exception -> 0x079c }
            java.lang.String r8 = java.lang.String.format(r8, r9, r12)     // Catch:{ Exception -> 0x079c }
            r9 = 0
            java.lang.Object[] r11 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x079c }
            org.telegram.SQLite.SQLiteCursor r3 = r3.queryFinalized(r8, r11)     // Catch:{ Exception -> 0x079c }
            r2 = r3
            r3 = 0
        L_0x05a0:
            boolean r8 = r2.next()     // Catch:{ Exception -> 0x079c }
            if (r8 == 0) goto L_0x05f5
            r8 = 0
            long r11 = r2.longValue(r8)     // Catch:{ Exception -> 0x07a0 }
            r8 = r11
            r11 = 1
            int r12 = r2.intValue(r11)     // Catch:{ Exception -> 0x07a0 }
            r11 = r12
            if (r3 != 0) goto L_0x05ba
            android.util.SparseArray r12 = new android.util.SparseArray     // Catch:{ Exception -> 0x07a0 }
            r12.<init>()     // Catch:{ Exception -> 0x07a0 }
            r3 = r12
        L_0x05ba:
            java.lang.Object r12 = r3.get(r11)     // Catch:{ Exception -> 0x07a0 }
            androidx.collection.LongSparseArray r12 = (androidx.collection.LongSparseArray) r12     // Catch:{ Exception -> 0x07a0 }
            if (r12 != 0) goto L_0x05d3
            androidx.collection.LongSparseArray r13 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x07a0 }
            r13.<init>()     // Catch:{ Exception -> 0x07a0 }
            r12 = r13
            r13 = 0
            java.lang.Integer r30 = java.lang.Integer.valueOf(r13)     // Catch:{ Exception -> 0x07a0 }
            r13 = r30
            r3.put(r11, r12)     // Catch:{ Exception -> 0x07a0 }
            goto L_0x05d9
        L_0x05d3:
            java.lang.Object r13 = r12.get(r8)     // Catch:{ Exception -> 0x07a0 }
            java.lang.Integer r13 = (java.lang.Integer) r13     // Catch:{ Exception -> 0x07a0 }
        L_0x05d9:
            if (r13 != 0) goto L_0x05e3
            r19 = 0
            java.lang.Integer r30 = java.lang.Integer.valueOf(r19)     // Catch:{ Exception -> 0x07a0 }
            r13 = r30
        L_0x05e3:
            int r30 = r13.intValue()     // Catch:{ Exception -> 0x07a0 }
            r20 = 1
            int r30 = r30 + 1
            java.lang.Integer r30 = java.lang.Integer.valueOf(r30)     // Catch:{ Exception -> 0x07a0 }
            r13 = r30
            r12.put(r8, r13)     // Catch:{ Exception -> 0x07a0 }
            goto L_0x05a0
        L_0x05f5:
            r2.dispose()     // Catch:{ Exception -> 0x079c }
            if (r3 == 0) goto L_0x06e0
            org.telegram.SQLite.SQLiteDatabase r8 = r7.database     // Catch:{ Exception -> 0x079c }
            java.lang.String r9 = "REPLACE INTO media_counts_v2 VALUES(?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r8 = r8.executeFast(r9)     // Catch:{ Exception -> 0x079c }
            r9 = 0
            int r11 = r3.size()     // Catch:{ Exception -> 0x079c }
        L_0x0607:
            if (r9 >= r11) goto L_0x06d1
            int r12 = r3.keyAt(r9)     // Catch:{ Exception -> 0x079c }
            java.lang.Object r13 = r3.valueAt(r9)     // Catch:{ Exception -> 0x079c }
            androidx.collection.LongSparseArray r13 = (androidx.collection.LongSparseArray) r13     // Catch:{ Exception -> 0x079c }
            r30 = 0
            int r31 = r13.size()     // Catch:{ Exception -> 0x079c }
            r33 = r31
            r42 = r30
            r30 = r1
            r1 = r42
        L_0x0621:
            r31 = r2
            r2 = r33
            if (r1 >= r2) goto L_0x06bd
            long r33 = r13.keyAt(r1)     // Catch:{ Exception -> 0x079c }
            r35 = r33
            r33 = -1
            r34 = 0
            r37 = r2
            org.telegram.SQLite.SQLiteDatabase r2 = r7.database     // Catch:{ Exception -> 0x079c }
            r38 = r3
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x079c }
            r39 = r6
            java.lang.String r6 = "SELECT count, old FROM media_counts_v2 WHERE uid = %d AND type = %d LIMIT 1"
            r41 = r5
            r40 = r11
            r11 = 2
            java.lang.Object[] r5 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x079c }
            java.lang.Long r11 = java.lang.Long.valueOf(r35)     // Catch:{ Exception -> 0x079c }
            r19 = 0
            r5[r19] = r11     // Catch:{ Exception -> 0x079c }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r12)     // Catch:{ Exception -> 0x079c }
            r20 = 1
            r5[r20] = r11     // Catch:{ Exception -> 0x079c }
            java.lang.String r3 = java.lang.String.format(r3, r6, r5)     // Catch:{ Exception -> 0x079c }
            r5 = 0
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x079c }
            org.telegram.SQLite.SQLiteCursor r2 = r2.queryFinalized(r3, r6)     // Catch:{ Exception -> 0x079c }
            boolean r3 = r2.next()     // Catch:{ Exception -> 0x079c }
            if (r3 == 0) goto L_0x0676
            r3 = 0
            int r5 = r2.intValue(r3)     // Catch:{ Exception -> 0x07a0 }
            r33 = r5
            r3 = 1
            int r5 = r2.intValue(r3)     // Catch:{ Exception -> 0x07a0 }
            r34 = r5
            r3 = r33
            goto L_0x067a
        L_0x0676:
            r3 = r33
            r5 = r34
        L_0x067a:
            r2.dispose()     // Catch:{ Exception -> 0x079c }
            r6 = -1
            if (r3 == r6) goto L_0x06ab
            r8.requery()     // Catch:{ Exception -> 0x079c }
            java.lang.Object r6 = r13.valueAt(r1)     // Catch:{ Exception -> 0x079c }
            java.lang.Integer r6 = (java.lang.Integer) r6     // Catch:{ Exception -> 0x079c }
            int r6 = r6.intValue()     // Catch:{ Exception -> 0x079c }
            int r6 = r3 - r6
            r11 = 0
            int r6 = java.lang.Math.max(r11, r6)     // Catch:{ Exception -> 0x079c }
            r3 = r6
            r10 = r35
            r6 = 1
            r8.bindLong(r6, r10)     // Catch:{ Exception -> 0x079c }
            r6 = 2
            r8.bindInteger(r6, r12)     // Catch:{ Exception -> 0x079c }
            r6 = 3
            r8.bindInteger(r6, r3)     // Catch:{ Exception -> 0x079c }
            r6 = 4
            r8.bindInteger(r6, r5)     // Catch:{ Exception -> 0x079c }
            r8.step()     // Catch:{ Exception -> 0x079c }
            goto L_0x06ad
        L_0x06ab:
            r10 = r35
        L_0x06ad:
            int r1 = r1 + 1
            r10 = r46
            r33 = r37
            r3 = r38
            r6 = r39
            r11 = r40
            r5 = r41
            goto L_0x0621
        L_0x06bd:
            r37 = r2
            r38 = r3
            r41 = r5
            r39 = r6
            r40 = r11
            int r9 = r9 + 1
            r10 = r46
            r1 = r30
            r2 = r31
            goto L_0x0607
        L_0x06d1:
            r30 = r1
            r38 = r3
            r41 = r5
            r39 = r6
            r40 = r11
            r8.dispose()     // Catch:{ Exception -> 0x079c }
            r13 = r2
            goto L_0x06f1
        L_0x06e0:
            r30 = r1
            r38 = r3
            r41 = r5
            r39 = r6
            r13 = r2
            goto L_0x06f1
        L_0x06ea:
            r30 = r1
            r41 = r5
            r39 = r6
            r13 = r2
        L_0x06f1:
            long r1 = java.lang.System.currentTimeMillis()     // Catch:{ Exception -> 0x079c }
            org.telegram.SQLite.SQLiteDatabase r3 = r7.database     // Catch:{ Exception -> 0x079c }
            java.util.Locale r5 = java.util.Locale.US     // Catch:{ Exception -> 0x079c }
            java.lang.String r6 = "DELETE FROM media_v4 WHERE mid IN(%s) AND uid = %d"
            r8 = 2
            java.lang.Object[] r9 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x079c }
            r10 = 0
            r9[r10] = r4     // Catch:{ Exception -> 0x079c }
            java.lang.Long r10 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x079c }
            r11 = 1
            r9[r11] = r10     // Catch:{ Exception -> 0x079c }
            java.lang.String r5 = java.lang.String.format(r5, r6, r9)     // Catch:{ Exception -> 0x079c }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.executeFast(r5)     // Catch:{ Exception -> 0x079c }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.stepThis()     // Catch:{ Exception -> 0x079c }
            r3.dispose()     // Catch:{ Exception -> 0x079c }
            int r0 = r0 + 1
            r8 = r44
            r10 = r46
            r1 = r25
            r12 = r29
            r5 = r41
            goto L_0x040e
        L_0x0725:
            r25 = r1
            r41 = r5
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x079c }
            java.util.Locale r1 = java.util.Locale.US     // Catch:{ Exception -> 0x079c }
            java.lang.String r2 = "DELETE FROM messages_seq WHERE mid IN(%s)"
            r3 = 1
            java.lang.Object[] r5 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x079c }
            r3 = 0
            r5[r3] = r4     // Catch:{ Exception -> 0x079c }
            java.lang.String r1 = java.lang.String.format(r1, r2, r5)     // Catch:{ Exception -> 0x079c }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x079c }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x079c }
            r0.dispose()     // Catch:{ Exception -> 0x079c }
            boolean r0 = r32.isEmpty()     // Catch:{ Exception -> 0x079c }
            if (r0 != 0) goto L_0x077f
            r1 = 0
            int r0 = (r44 > r1 ? 1 : (r44 == r1 ? 0 : -1))
            if (r0 != 0) goto L_0x0760
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x079c }
            java.lang.String r1 = "UPDATE media_counts_v2 SET old = 1 WHERE 1"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x079c }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x079c }
            r0.dispose()     // Catch:{ Exception -> 0x079c }
            goto L_0x077f
        L_0x0760:
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x079c }
            java.util.Locale r1 = java.util.Locale.US     // Catch:{ Exception -> 0x079c }
            java.lang.String r2 = "UPDATE media_counts_v2 SET old = 1 WHERE uid = %d"
            r3 = 1
            java.lang.Object[] r3 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x079c }
            java.lang.Long r5 = java.lang.Long.valueOf(r44)     // Catch:{ Exception -> 0x079c }
            r6 = 0
            r3[r6] = r5     // Catch:{ Exception -> 0x079c }
            java.lang.String r1 = java.lang.String.format(r1, r2, r3)     // Catch:{ Exception -> 0x079c }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x079c }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x079c }
            r0.dispose()     // Catch:{ Exception -> 0x079c }
        L_0x077f:
            org.telegram.messenger.MediaDataController r0 = r43.getMediaDataController()     // Catch:{ Exception -> 0x079c }
            r1 = r46
            r2 = 0
            r0.clearBotKeyboard(r2, r1)     // Catch:{ Exception -> 0x079a }
            int r0 = r41.size()     // Catch:{ Exception -> 0x079a }
            if (r0 == 0) goto L_0x0794
            r2 = 0
            r7.resetAllUnreadCounters(r2)     // Catch:{ Exception -> 0x079a }
        L_0x0794:
            r2 = r27
            r7.updateWidgets((java.util.ArrayList<java.lang.Long>) r2)     // Catch:{ Exception -> 0x079a }
        L_0x0799:
            return r2
        L_0x079a:
            r0 = move-exception
            goto L_0x07a2
        L_0x079c:
            r0 = move-exception
            r1 = r46
            goto L_0x07a2
        L_0x07a0:
            r0 = move-exception
            r1 = r10
        L_0x07a2:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
            r0 = 0
            return r0
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.m942x977317f7(long, java.util.ArrayList, boolean, boolean):java.util.ArrayList");
    }

    /* renamed from: lambda$markMessagesAsDeletedInternal$165$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m946x2e96243c(ArrayList namesToDelete) {
        getFileLoader().cancelLoadFiles(namesToDelete);
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v1, resolved type: org.telegram.tgnet.TLRPC$TL_dialog} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v3, resolved type: org.telegram.tgnet.TLRPC$TL_dialog} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v15, resolved type: org.telegram.tgnet.TLRPC$TL_dialogFolder} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v4, resolved type: org.telegram.tgnet.TLRPC$TL_dialog} */
    /* access modifiers changed from: private */
    /* JADX WARNING: Multi-variable type inference failed */
    /* renamed from: updateDialogsWithDeletedMessagesInternal */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void m1011x365e590f(long r22, long r24, java.util.ArrayList<java.lang.Integer> r26, java.util.ArrayList<java.lang.Long> r27) {
        /*
            r21 = this;
            r1 = r21
            r2 = r24
            r4 = r27
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x02b8 }
            r0.<init>()     // Catch:{ Exception -> 0x02b8 }
            boolean r5 = r26.isEmpty()     // Catch:{ Exception -> 0x02b8 }
            r6 = 3
            r7 = 2
            r8 = 0
            java.lang.String r10 = ","
            r11 = 1
            r12 = 0
            if (r5 != 0) goto L_0x00a8
            int r5 = (r2 > r8 ? 1 : (r2 == r8 ? 0 : -1))
            if (r5 == 0) goto L_0x0031
            long r13 = -r2
            java.lang.Long r5 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x02b8 }
            r0.add(r5)     // Catch:{ Exception -> 0x02b8 }
            org.telegram.SQLite.SQLiteDatabase r5 = r1.database     // Catch:{ Exception -> 0x02b8 }
            java.lang.String r13 = "UPDATE dialogs SET last_mid = (SELECT mid FROM messages_v2 WHERE uid = ? AND date = (SELECT MAX(date) FROM messages_v2 WHERE uid = ?)) WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r5 = r5.executeFast(r13)     // Catch:{ Exception -> 0x02b8 }
            r8 = r5
            r5 = r26
            goto L_0x0076
        L_0x0031:
            int r5 = (r22 > r8 ? 1 : (r22 == r8 ? 0 : -1))
            if (r5 != 0) goto L_0x0065
            r5 = r26
            java.lang.String r13 = android.text.TextUtils.join(r10, r5)     // Catch:{ Exception -> 0x02b8 }
            org.telegram.SQLite.SQLiteDatabase r14 = r1.database     // Catch:{ Exception -> 0x02b8 }
            java.util.Locale r15 = java.util.Locale.US     // Catch:{ Exception -> 0x02b8 }
            java.lang.String r8 = "SELECT did FROM dialogs WHERE last_mid IN(%s) AND flags = 0"
            java.lang.Object[] r9 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x02b8 }
            r9[r12] = r13     // Catch:{ Exception -> 0x02b8 }
            java.lang.String r8 = java.lang.String.format(r15, r8, r9)     // Catch:{ Exception -> 0x02b8 }
            java.lang.Object[] r9 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x02b8 }
            org.telegram.SQLite.SQLiteCursor r8 = r14.queryFinalized(r8, r9)     // Catch:{ Exception -> 0x02b8 }
        L_0x004f:
            boolean r9 = r8.next()     // Catch:{ Exception -> 0x02b8 }
            if (r9 == 0) goto L_0x0061
            long r14 = r8.longValue(r12)     // Catch:{ Exception -> 0x02b8 }
            java.lang.Long r9 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x02b8 }
            r0.add(r9)     // Catch:{ Exception -> 0x02b8 }
            goto L_0x004f
        L_0x0061:
            r8.dispose()     // Catch:{ Exception -> 0x02b8 }
            goto L_0x006e
        L_0x0065:
            r5 = r26
            java.lang.Long r8 = java.lang.Long.valueOf(r22)     // Catch:{ Exception -> 0x02b8 }
            r0.add(r8)     // Catch:{ Exception -> 0x02b8 }
        L_0x006e:
            org.telegram.SQLite.SQLiteDatabase r8 = r1.database     // Catch:{ Exception -> 0x02b8 }
            java.lang.String r9 = "UPDATE dialogs SET last_mid = (SELECT mid FROM messages_v2 WHERE uid = ? AND date = (SELECT MAX(date) FROM messages_v2 WHERE uid = ? AND date != 0)) WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r8 = r8.executeFast(r9)     // Catch:{ Exception -> 0x02b8 }
        L_0x0076:
            org.telegram.SQLite.SQLiteDatabase r9 = r1.database     // Catch:{ Exception -> 0x02b8 }
            r9.beginTransaction()     // Catch:{ Exception -> 0x02b8 }
            r9 = 0
        L_0x007c:
            int r13 = r0.size()     // Catch:{ Exception -> 0x02b8 }
            if (r9 >= r13) goto L_0x009f
            java.lang.Object r13 = r0.get(r9)     // Catch:{ Exception -> 0x02b8 }
            java.lang.Long r13 = (java.lang.Long) r13     // Catch:{ Exception -> 0x02b8 }
            long r13 = r13.longValue()     // Catch:{ Exception -> 0x02b8 }
            r8.requery()     // Catch:{ Exception -> 0x02b8 }
            r8.bindLong(r11, r13)     // Catch:{ Exception -> 0x02b8 }
            r8.bindLong(r7, r13)     // Catch:{ Exception -> 0x02b8 }
            r8.bindLong(r6, r13)     // Catch:{ Exception -> 0x02b8 }
            r8.step()     // Catch:{ Exception -> 0x02b8 }
            int r9 = r9 + 1
            goto L_0x007c
        L_0x009f:
            r8.dispose()     // Catch:{ Exception -> 0x02b8 }
            org.telegram.SQLite.SQLiteDatabase r9 = r1.database     // Catch:{ Exception -> 0x02b8 }
            r9.commitTransaction()     // Catch:{ Exception -> 0x02b8 }
            goto L_0x00b2
        L_0x00a8:
            r5 = r26
            long r8 = -r2
            java.lang.Long r8 = java.lang.Long.valueOf(r8)     // Catch:{ Exception -> 0x02b8 }
            r0.add(r8)     // Catch:{ Exception -> 0x02b8 }
        L_0x00b2:
            if (r4 == 0) goto L_0x00cd
            r8 = 0
        L_0x00b5:
            int r9 = r27.size()     // Catch:{ Exception -> 0x02b8 }
            if (r8 >= r9) goto L_0x00cd
            java.lang.Object r9 = r4.get(r8)     // Catch:{ Exception -> 0x02b8 }
            java.lang.Long r9 = (java.lang.Long) r9     // Catch:{ Exception -> 0x02b8 }
            boolean r13 = r0.contains(r9)     // Catch:{ Exception -> 0x02b8 }
            if (r13 != 0) goto L_0x00ca
            r0.add(r9)     // Catch:{ Exception -> 0x02b8 }
        L_0x00ca:
            int r8 = r8 + 1
            goto L_0x00b5
        L_0x00cd:
            java.lang.String r8 = android.text.TextUtils.join(r10, r0)     // Catch:{ Exception -> 0x02b8 }
            org.telegram.tgnet.TLRPC$TL_messages_dialogs r9 = new org.telegram.tgnet.TLRPC$TL_messages_dialogs     // Catch:{ Exception -> 0x02b8 }
            r9.<init>()     // Catch:{ Exception -> 0x02b8 }
            java.util.ArrayList r13 = new java.util.ArrayList     // Catch:{ Exception -> 0x02b8 }
            r13.<init>()     // Catch:{ Exception -> 0x02b8 }
            java.util.ArrayList r14 = new java.util.ArrayList     // Catch:{ Exception -> 0x02b8 }
            r14.<init>()     // Catch:{ Exception -> 0x02b8 }
            java.util.ArrayList r15 = new java.util.ArrayList     // Catch:{ Exception -> 0x02b8 }
            r15.<init>()     // Catch:{ Exception -> 0x02b8 }
            java.util.ArrayList r17 = new java.util.ArrayList     // Catch:{ Exception -> 0x02b8 }
            r17.<init>()     // Catch:{ Exception -> 0x02b8 }
            r18 = r17
            org.telegram.SQLite.SQLiteDatabase r6 = r1.database     // Catch:{ Exception -> 0x02b8 }
            java.util.Locale r7 = java.util.Locale.US     // Catch:{ Exception -> 0x02b8 }
            java.lang.String r12 = "SELECT d.did, d.last_mid, d.unread_count, d.date, m.data, m.read_state, m.mid, m.send_state, m.date, d.pts, d.inbox_max, d.outbox_max, d.pinned, d.unread_count_i, d.flags, d.folder_id, d.data, d.unread_reactions FROM dialogs as d LEFT JOIN messages_v2 as m ON d.last_mid = m.mid AND d.did = m.uid WHERE d.did IN(%s)"
            r19 = r0
            java.lang.Object[] r0 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x02b8 }
            r11 = 0
            r0[r11] = r8     // Catch:{ Exception -> 0x02b8 }
            java.lang.String r0 = java.lang.String.format(r7, r12, r0)     // Catch:{ Exception -> 0x02b8 }
            java.lang.Object[] r7 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x02b8 }
            org.telegram.SQLite.SQLiteCursor r0 = r6.queryFinalized(r0, r7)     // Catch:{ Exception -> 0x02b8 }
        L_0x0103:
            boolean r6 = r0.next()     // Catch:{ Exception -> 0x02b8 }
            if (r6 == 0) goto L_0x026f
            r6 = 0
            long r11 = r0.longValue(r6)     // Catch:{ Exception -> 0x02b8 }
            r6 = r11
            boolean r11 = org.telegram.messenger.DialogObject.isFolderDialogId(r6)     // Catch:{ Exception -> 0x02b8 }
            if (r11 == 0) goto L_0x0151
            org.telegram.tgnet.TLRPC$TL_dialogFolder r11 = new org.telegram.tgnet.TLRPC$TL_dialogFolder     // Catch:{ Exception -> 0x02b8 }
            r11.<init>()     // Catch:{ Exception -> 0x02b8 }
            r12 = 16
            boolean r20 = r0.isNull(r12)     // Catch:{ Exception -> 0x02b8 }
            if (r20 != 0) goto L_0x014d
            org.telegram.tgnet.NativeByteBuffer r12 = r0.byteBufferValue(r12)     // Catch:{ Exception -> 0x02b8 }
            if (r12 == 0) goto L_0x0139
            r4 = 0
            int r5 = r12.readInt32(r4)     // Catch:{ Exception -> 0x02b8 }
            org.telegram.tgnet.TLRPC$TL_folder r5 = org.telegram.tgnet.TLRPC.TL_folder.TLdeserialize(r12, r5, r4)     // Catch:{ Exception -> 0x02b8 }
            r11.folder = r5     // Catch:{ Exception -> 0x02b8 }
            r12.reuse()     // Catch:{ Exception -> 0x02b8 }
            r20 = r8
            goto L_0x014f
        L_0x0139:
            org.telegram.tgnet.TLRPC$TL_folder r4 = new org.telegram.tgnet.TLRPC$TL_folder     // Catch:{ Exception -> 0x02b8 }
            r4.<init>()     // Catch:{ Exception -> 0x02b8 }
            r11.folder = r4     // Catch:{ Exception -> 0x02b8 }
            org.telegram.tgnet.TLRPC$TL_folder r4 = r11.folder     // Catch:{ Exception -> 0x02b8 }
            r20 = r8
            r5 = 15
            int r8 = r0.intValue(r5)     // Catch:{ Exception -> 0x02b8 }
            r4.id = r8     // Catch:{ Exception -> 0x02b8 }
            goto L_0x014f
        L_0x014d:
            r20 = r8
        L_0x014f:
            r4 = r11
            goto L_0x0158
        L_0x0151:
            r20 = r8
            org.telegram.tgnet.TLRPC$TL_dialog r4 = new org.telegram.tgnet.TLRPC$TL_dialog     // Catch:{ Exception -> 0x02b8 }
            r4.<init>()     // Catch:{ Exception -> 0x02b8 }
        L_0x0158:
            r4.id = r6     // Catch:{ Exception -> 0x02b8 }
            r5 = 1
            int r8 = r0.intValue(r5)     // Catch:{ Exception -> 0x02b8 }
            r4.top_message = r8     // Catch:{ Exception -> 0x02b8 }
            r5 = 10
            int r5 = r0.intValue(r5)     // Catch:{ Exception -> 0x02b8 }
            r4.read_inbox_max_id = r5     // Catch:{ Exception -> 0x02b8 }
            r5 = 11
            int r5 = r0.intValue(r5)     // Catch:{ Exception -> 0x02b8 }
            r4.read_outbox_max_id = r5     // Catch:{ Exception -> 0x02b8 }
            r5 = 2
            int r8 = r0.intValue(r5)     // Catch:{ Exception -> 0x02b8 }
            r4.unread_count = r8     // Catch:{ Exception -> 0x02b8 }
            r8 = 13
            int r8 = r0.intValue(r8)     // Catch:{ Exception -> 0x02b8 }
            r4.unread_mentions_count = r8     // Catch:{ Exception -> 0x02b8 }
            r8 = 3
            int r11 = r0.intValue(r8)     // Catch:{ Exception -> 0x02b8 }
            r4.last_message_date = r11     // Catch:{ Exception -> 0x02b8 }
            r11 = 9
            int r11 = r0.intValue(r11)     // Catch:{ Exception -> 0x02b8 }
            r4.pts = r11     // Catch:{ Exception -> 0x02b8 }
            r11 = 0
            int r16 = (r2 > r11 ? 1 : (r2 == r11 ? 0 : -1))
            if (r16 != 0) goto L_0x0197
            r5 = 0
            goto L_0x0198
        L_0x0197:
            r5 = 1
        L_0x0198:
            r4.flags = r5     // Catch:{ Exception -> 0x02b8 }
            r5 = 12
            int r5 = r0.intValue(r5)     // Catch:{ Exception -> 0x02b8 }
            r4.pinnedNum = r5     // Catch:{ Exception -> 0x02b8 }
            int r5 = r4.pinnedNum     // Catch:{ Exception -> 0x02b8 }
            if (r5 == 0) goto L_0x01a8
            r5 = 1
            goto L_0x01a9
        L_0x01a8:
            r5 = 0
        L_0x01a9:
            r4.pinned = r5     // Catch:{ Exception -> 0x02b8 }
            r5 = 14
            int r5 = r0.intValue(r5)     // Catch:{ Exception -> 0x02b8 }
            r16 = r5 & 1
            if (r16 == 0) goto L_0x01b7
            r8 = 1
            goto L_0x01b8
        L_0x01b7:
            r8 = 0
        L_0x01b8:
            r4.unread_mark = r8     // Catch:{ Exception -> 0x02b8 }
            r8 = 15
            int r8 = r0.intValue(r8)     // Catch:{ Exception -> 0x02b8 }
            r4.folder_id = r8     // Catch:{ Exception -> 0x02b8 }
            r8 = 17
            int r8 = r0.intValue(r8)     // Catch:{ Exception -> 0x02b8 }
            r4.unread_reactions_count = r8     // Catch:{ Exception -> 0x02b8 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r8 = r9.dialogs     // Catch:{ Exception -> 0x02b8 }
            r8.add(r4)     // Catch:{ Exception -> 0x02b8 }
            r8 = 4
            org.telegram.tgnet.NativeByteBuffer r8 = r0.byteBufferValue(r8)     // Catch:{ Exception -> 0x02b8 }
            if (r8 == 0) goto L_0x0218
            r11 = 0
            int r12 = r8.readInt32(r11)     // Catch:{ Exception -> 0x02b8 }
            org.telegram.tgnet.TLRPC$Message r12 = org.telegram.tgnet.TLRPC.Message.TLdeserialize(r8, r12, r11)     // Catch:{ Exception -> 0x02b8 }
            org.telegram.messenger.UserConfig r11 = r21.getUserConfig()     // Catch:{ Exception -> 0x02b8 }
            long r2 = r11.clientUserId     // Catch:{ Exception -> 0x02b8 }
            r12.readAttachPath(r8, r2)     // Catch:{ Exception -> 0x02b8 }
            r8.reuse()     // Catch:{ Exception -> 0x02b8 }
            r2 = 5
            int r2 = r0.intValue(r2)     // Catch:{ Exception -> 0x02b8 }
            org.telegram.messenger.MessageObject.setUnreadFlags(r12, r2)     // Catch:{ Exception -> 0x02b8 }
            r2 = 6
            int r2 = r0.intValue(r2)     // Catch:{ Exception -> 0x02b8 }
            r12.id = r2     // Catch:{ Exception -> 0x02b8 }
            r2 = 7
            int r2 = r0.intValue(r2)     // Catch:{ Exception -> 0x02b8 }
            r12.send_state = r2     // Catch:{ Exception -> 0x02b8 }
            r2 = 8
            int r2 = r0.intValue(r2)     // Catch:{ Exception -> 0x02b8 }
            if (r2 == 0) goto L_0x020b
            r4.last_message_date = r2     // Catch:{ Exception -> 0x02b8 }
        L_0x020b:
            r11 = r2
            long r2 = r4.id     // Catch:{ Exception -> 0x02b8 }
            r12.dialog_id = r2     // Catch:{ Exception -> 0x02b8 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r2 = r9.messages     // Catch:{ Exception -> 0x02b8 }
            r2.add(r12)     // Catch:{ Exception -> 0x02b8 }
            addUsersAndChatsFromMessage(r12, r14, r15)     // Catch:{ Exception -> 0x02b8 }
        L_0x0218:
            boolean r2 = org.telegram.messenger.DialogObject.isEncryptedDialog(r6)     // Catch:{ Exception -> 0x02b8 }
            if (r2 == 0) goto L_0x0236
            int r2 = org.telegram.messenger.DialogObject.getEncryptedChatId(r6)     // Catch:{ Exception -> 0x02b8 }
            java.lang.Integer r3 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x02b8 }
            r11 = r18
            boolean r3 = r11.contains(r3)     // Catch:{ Exception -> 0x02b8 }
            if (r3 != 0) goto L_0x0235
            java.lang.Integer r3 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x02b8 }
            r11.add(r3)     // Catch:{ Exception -> 0x02b8 }
        L_0x0235:
            goto L_0x0263
        L_0x0236:
            r11 = r18
            boolean r2 = org.telegram.messenger.DialogObject.isUserDialog(r6)     // Catch:{ Exception -> 0x02b8 }
            if (r2 == 0) goto L_0x0250
            java.lang.Long r2 = java.lang.Long.valueOf(r6)     // Catch:{ Exception -> 0x02b8 }
            boolean r2 = r14.contains(r2)     // Catch:{ Exception -> 0x02b8 }
            if (r2 != 0) goto L_0x0263
            java.lang.Long r2 = java.lang.Long.valueOf(r6)     // Catch:{ Exception -> 0x02b8 }
            r14.add(r2)     // Catch:{ Exception -> 0x02b8 }
            goto L_0x0263
        L_0x0250:
            long r2 = -r6
            java.lang.Long r2 = java.lang.Long.valueOf(r2)     // Catch:{ Exception -> 0x02b8 }
            boolean r2 = r15.contains(r2)     // Catch:{ Exception -> 0x02b8 }
            if (r2 != 0) goto L_0x0263
            long r2 = -r6
            java.lang.Long r2 = java.lang.Long.valueOf(r2)     // Catch:{ Exception -> 0x02b8 }
            r15.add(r2)     // Catch:{ Exception -> 0x02b8 }
        L_0x0263:
            r2 = r24
            r5 = r26
            r4 = r27
            r18 = r11
            r8 = r20
            goto L_0x0103
        L_0x026f:
            r20 = r8
            r11 = r18
            r0.dispose()     // Catch:{ Exception -> 0x02b8 }
            boolean r2 = r11.isEmpty()     // Catch:{ Exception -> 0x02b8 }
            if (r2 != 0) goto L_0x0283
            java.lang.String r2 = android.text.TextUtils.join(r10, r11)     // Catch:{ Exception -> 0x02b8 }
            r1.getEncryptedChatsInternal(r2, r13, r14)     // Catch:{ Exception -> 0x02b8 }
        L_0x0283:
            boolean r2 = r15.isEmpty()     // Catch:{ Exception -> 0x02b8 }
            if (r2 != 0) goto L_0x0292
            java.lang.String r2 = android.text.TextUtils.join(r10, r15)     // Catch:{ Exception -> 0x02b8 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r3 = r9.chats     // Catch:{ Exception -> 0x02b8 }
            r1.getChatsInternal(r2, r3)     // Catch:{ Exception -> 0x02b8 }
        L_0x0292:
            boolean r2 = r14.isEmpty()     // Catch:{ Exception -> 0x02b8 }
            if (r2 != 0) goto L_0x02a1
            java.lang.String r2 = android.text.TextUtils.join(r10, r14)     // Catch:{ Exception -> 0x02b8 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r3 = r9.users     // Catch:{ Exception -> 0x02b8 }
            r1.getUsersInternal(r2, r3)     // Catch:{ Exception -> 0x02b8 }
        L_0x02a1:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r2 = r9.dialogs     // Catch:{ Exception -> 0x02b8 }
            boolean r2 = r2.isEmpty()     // Catch:{ Exception -> 0x02b8 }
            if (r2 == 0) goto L_0x02af
            boolean r2 = r13.isEmpty()     // Catch:{ Exception -> 0x02b8 }
            if (r2 != 0) goto L_0x02b7
        L_0x02af:
            org.telegram.messenger.MessagesController r2 = r21.getMessagesController()     // Catch:{ Exception -> 0x02b8 }
            r3 = 1
            r2.processDialogsUpdate(r9, r13, r3)     // Catch:{ Exception -> 0x02b8 }
        L_0x02b7:
            goto L_0x02bc
        L_0x02b8:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x02bc:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.m1011x365e590f(long, long, java.util.ArrayList, java.util.ArrayList):void");
    }

    public void updateDialogsWithDeletedMessages(long dialogId, long channelId, ArrayList<Integer> messages, ArrayList<Long> additionalDialogsToUpdate, boolean useQueue) {
        if (useQueue) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda182(this, dialogId, channelId, messages, additionalDialogsToUpdate));
            return;
        }
        m1011x365e590f(dialogId, channelId, messages, additionalDialogsToUpdate);
    }

    public ArrayList<Long> markMessagesAsDeleted(long dialogId, ArrayList<Integer> messages, boolean useQueue, boolean deleteFiles, boolean scheduled) {
        if (messages.isEmpty()) {
            return null;
        }
        if (useQueue) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda195(this, dialogId, messages, deleteFiles, scheduled));
            return null;
        }
        return m942x977317f7(dialogId, messages, deleteFiles, scheduled);
    }

    /* JADX WARNING: type inference failed for: r5v0 */
    /* JADX WARNING: type inference failed for: r5v1, types: [int, boolean] */
    /* JADX WARNING: type inference failed for: r5v24 */
    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:56:0x0137 A[Catch:{ Exception -> 0x02f4 }] */
    /* JADX WARNING: Removed duplicated region for block: B:62:0x0228 A[Catch:{ Exception -> 0x02f4 }] */
    /* JADX WARNING: Removed duplicated region for block: B:65:0x0233 A[Catch:{ Exception -> 0x02f4 }] */
    /* JADX WARNING: Removed duplicated region for block: B:69:0x0281 A[Catch:{ Exception -> 0x02f4 }] */
    /* renamed from: markMessagesAsDeletedInternal */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public java.util.ArrayList<java.lang.Long> m943x45aef9b5(long r25, int r27, boolean r28) {
        /*
            r24 = this;
            r7 = r24
            r8 = r25
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x02fa }
            r0.<init>()     // Catch:{ Exception -> 0x02fa }
            r10 = r0
            androidx.collection.LongSparseArray r0 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x02fa }
            r0.<init>()     // Catch:{ Exception -> 0x02fa }
            r11 = r0
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x02fa }
            r0.<init>()     // Catch:{ Exception -> 0x02fa }
            r12 = r0
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x02fa }
            r0.<init>()     // Catch:{ Exception -> 0x02fa }
            r13 = r0
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x02fa }
            r0.<init>()     // Catch:{ Exception -> 0x02fa }
            r14 = r0
            org.telegram.messenger.UserConfig r0 = r24.getUserConfig()     // Catch:{ Exception -> 0x02fa }
            long r0 = r0.getClientUserId()     // Catch:{ Exception -> 0x02fa }
            r15 = r0
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x02fa }
            java.util.Locale r1 = java.util.Locale.US     // Catch:{ Exception -> 0x02fa }
            java.lang.String r2 = "SELECT uid, data, read_state, out, mention FROM messages_v2 WHERE uid = %d AND mid <= %d"
            r6 = 2
            java.lang.Object[] r3 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x02fa }
            long r4 = -r8
            java.lang.Long r4 = java.lang.Long.valueOf(r4)     // Catch:{ Exception -> 0x02fa }
            r5 = 0
            r3[r5] = r4     // Catch:{ Exception -> 0x02fa }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r27)     // Catch:{ Exception -> 0x02fa }
            r6 = 1
            r3[r6] = r4     // Catch:{ Exception -> 0x02fa }
            java.lang.String r1 = java.lang.String.format(r1, r2, r3)     // Catch:{ Exception -> 0x02fa }
            java.lang.Object[] r2 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x02fa }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r1, r2)     // Catch:{ Exception -> 0x02fa }
            r4 = r0
        L_0x004e:
            r3 = 3
            boolean r0 = r4.next()     // Catch:{ Exception -> 0x010f }
            if (r0 == 0) goto L_0x010b
            long r0 = r4.longValue(r5)     // Catch:{ Exception -> 0x010f }
            int r2 = (r0 > r15 ? 1 : (r0 == r15 ? 0 : -1))
            if (r2 == 0) goto L_0x00bd
            r2 = 2
            int r18 = r4.intValue(r2)     // Catch:{ Exception -> 0x00b8 }
            r2 = r18
            int r18 = r4.intValue(r3)     // Catch:{ Exception -> 0x00b8 }
            if (r18 != 0) goto L_0x00b6
            java.lang.Object r18 = r11.get(r0)     // Catch:{ Exception -> 0x00b8 }
            java.lang.Integer[] r18 = (java.lang.Integer[]) r18     // Catch:{ Exception -> 0x00b8 }
            if (r18 != 0) goto L_0x0089
            r3 = 2
            java.lang.Integer[] r6 = new java.lang.Integer[r3]     // Catch:{ Exception -> 0x00b8 }
            java.lang.Integer r3 = java.lang.Integer.valueOf(r5)     // Catch:{ Exception -> 0x00b8 }
            r6[r5] = r3     // Catch:{ Exception -> 0x00b8 }
            java.lang.Integer r3 = java.lang.Integer.valueOf(r5)     // Catch:{ Exception -> 0x00b8 }
            r20 = 1
            r6[r20] = r3     // Catch:{ Exception -> 0x00b8 }
            r3 = r6
            r11.put(r0, r3)     // Catch:{ Exception -> 0x00b8 }
            r18 = r3
        L_0x0089:
            r3 = 2
            if (r2 >= r3) goto L_0x009c
            r3 = 1
            r6 = r18[r3]     // Catch:{ Exception -> 0x00b8 }
            r6 = r18[r3]     // Catch:{ Exception -> 0x00b8 }
            int r6 = r6.intValue()     // Catch:{ Exception -> 0x00b8 }
            int r6 = r6 + r3
            java.lang.Integer r6 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x00b8 }
            r18[r3] = r6     // Catch:{ Exception -> 0x00b8 }
        L_0x009c:
            if (r2 == 0) goto L_0x00a2
            r6 = 2
            if (r2 != r6) goto L_0x00be
            goto L_0x00a3
        L_0x00a2:
            r6 = 2
        L_0x00a3:
            r3 = r18[r5]     // Catch:{ Exception -> 0x00b8 }
            r3 = r18[r5]     // Catch:{ Exception -> 0x00b8 }
            int r3 = r3.intValue()     // Catch:{ Exception -> 0x00b8 }
            r17 = 1
            int r3 = r3 + 1
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x00b8 }
            r18[r5] = r3     // Catch:{ Exception -> 0x00b8 }
            goto L_0x00be
        L_0x00b6:
            r6 = 2
            goto L_0x00be
        L_0x00b8:
            r0 = move-exception
            r20 = r4
            r7 = 1
            goto L_0x0113
        L_0x00bd:
            r6 = 2
        L_0x00be:
            boolean r2 = org.telegram.messenger.DialogObject.isEncryptedDialog(r0)     // Catch:{ Exception -> 0x010f }
            if (r2 != 0) goto L_0x00c8
            if (r28 != 0) goto L_0x00c8
            r6 = 1
            goto L_0x004e
        L_0x00c8:
            r3 = 1
            org.telegram.tgnet.NativeByteBuffer r2 = r4.byteBufferValue(r3)     // Catch:{ Exception -> 0x010f }
            if (r2 == 0) goto L_0x00fd
            int r3 = r2.readInt32(r5)     // Catch:{ Exception -> 0x010f }
            org.telegram.tgnet.TLRPC$Message r3 = org.telegram.tgnet.TLRPC.Message.TLdeserialize(r2, r3, r5)     // Catch:{ Exception -> 0x010f }
            org.telegram.messenger.UserConfig r5 = r24.getUserConfig()     // Catch:{ Exception -> 0x010f }
            long r6 = r5.clientUserId     // Catch:{ Exception -> 0x010f }
            r3.readAttachPath(r2, r6)     // Catch:{ Exception -> 0x010f }
            r2.reuse()     // Catch:{ Exception -> 0x010f }
            r6 = 0
            r21 = r0
            r1 = r24
            r0 = r2
            r2 = r3
            r7 = r3
            r5 = 3
            r19 = 1
            r3 = r12
            r20 = r4
            r4 = r14
            r23 = r7
            r7 = 0
            r5 = r13
            r7 = 1
            r1.addFilesToDelete(r2, r3, r4, r5, r6)     // Catch:{ Exception -> 0x00fb }
            goto L_0x0103
        L_0x00fb:
            r0 = move-exception
            goto L_0x0113
        L_0x00fd:
            r21 = r0
            r0 = r2
            r20 = r4
            r7 = 1
        L_0x0103:
            r4 = r20
            r5 = 0
            r6 = 1
            r7 = r24
            goto L_0x004e
        L_0x010b:
            r20 = r4
            r7 = 1
            goto L_0x0116
        L_0x010f:
            r0 = move-exception
            r20 = r4
            r7 = 1
        L_0x0113:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ Exception -> 0x02f6 }
        L_0x0116:
            r20.dispose()     // Catch:{ Exception -> 0x02f6 }
            r1 = r24
            r1.deleteFromDownloadQueue(r14, r7)     // Catch:{ Exception -> 0x02f4 }
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda36 r0 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda36     // Catch:{ Exception -> 0x02f4 }
            r0.<init>(r1, r13)     // Catch:{ Exception -> 0x02f4 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0)     // Catch:{ Exception -> 0x02f4 }
            org.telegram.messenger.FileLoader r0 = r24.getFileLoader()     // Catch:{ Exception -> 0x02f4 }
            r2 = 0
            r0.deleteFiles(r12, r2)     // Catch:{ Exception -> 0x02f4 }
            r0 = 0
            r4 = r20
        L_0x0131:
            int r2 = r11.size()     // Catch:{ Exception -> 0x02f4 }
            if (r0 >= r2) goto L_0x01c5
            long r2 = r11.keyAt(r0)     // Catch:{ Exception -> 0x02f4 }
            java.lang.Object r5 = r11.valueAt(r0)     // Catch:{ Exception -> 0x02f4 }
            java.lang.Integer[] r5 = (java.lang.Integer[]) r5     // Catch:{ Exception -> 0x02f4 }
            org.telegram.SQLite.SQLiteDatabase r6 = r1.database     // Catch:{ Exception -> 0x02f4 }
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x02f4 }
            r7.<init>()     // Catch:{ Exception -> 0x02f4 }
            r19 = r4
            java.lang.String r4 = "SELECT unread_count, unread_count_i FROM dialogs WHERE did = "
            r7.append(r4)     // Catch:{ Exception -> 0x02f4 }
            r7.append(r2)     // Catch:{ Exception -> 0x02f4 }
            java.lang.String r4 = r7.toString()     // Catch:{ Exception -> 0x02f4 }
            r21 = r11
            r7 = 0
            java.lang.Object[] r11 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x02f4 }
            org.telegram.SQLite.SQLiteCursor r4 = r6.queryFinalized(r4, r11)     // Catch:{ Exception -> 0x02f4 }
            r6 = 0
            r7 = 0
            boolean r11 = r4.next()     // Catch:{ Exception -> 0x02f4 }
            if (r11 == 0) goto L_0x0175
            r11 = 0
            int r19 = r4.intValue(r11)     // Catch:{ Exception -> 0x02f4 }
            r6 = r19
            r11 = 1
            int r19 = r4.intValue(r11)     // Catch:{ Exception -> 0x02f4 }
            r7 = r19
        L_0x0175:
            r4.dispose()     // Catch:{ Exception -> 0x02f4 }
            java.lang.Long r11 = java.lang.Long.valueOf(r2)     // Catch:{ Exception -> 0x02f4 }
            r10.add(r11)     // Catch:{ Exception -> 0x02f4 }
            org.telegram.SQLite.SQLiteDatabase r11 = r1.database     // Catch:{ Exception -> 0x02f4 }
            r19 = r4
            java.lang.String r4 = "UPDATE dialogs SET unread_count = ?, unread_count_i = ? WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r4 = r11.executeFast(r4)     // Catch:{ Exception -> 0x02f4 }
            r4.requery()     // Catch:{ Exception -> 0x02f4 }
            r11 = 0
            r18 = r5[r11]     // Catch:{ Exception -> 0x02f4 }
            int r18 = r18.intValue()     // Catch:{ Exception -> 0x02f4 }
            r22 = r12
            int r12 = r6 - r18
            int r12 = java.lang.Math.max(r11, r12)     // Catch:{ Exception -> 0x02f4 }
            r11 = 1
            r4.bindInteger(r11, r12)     // Catch:{ Exception -> 0x02f4 }
            r12 = r5[r11]     // Catch:{ Exception -> 0x02f4 }
            int r11 = r12.intValue()     // Catch:{ Exception -> 0x02f4 }
            int r11 = r7 - r11
            r12 = 0
            int r11 = java.lang.Math.max(r12, r11)     // Catch:{ Exception -> 0x02f4 }
            r12 = 2
            r4.bindInteger(r12, r11)     // Catch:{ Exception -> 0x02f4 }
            r11 = 3
            r4.bindLong(r11, r2)     // Catch:{ Exception -> 0x02f4 }
            r4.step()     // Catch:{ Exception -> 0x02f4 }
            r4.dispose()     // Catch:{ Exception -> 0x02f4 }
            int r0 = r0 + 1
            r4 = r19
            r11 = r21
            r12 = r22
            r7 = 1
            goto L_0x0131
        L_0x01c5:
            r19 = r4
            r21 = r11
            r22 = r12
            r12 = 2
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02f4 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x02f4 }
            java.lang.String r3 = "UPDATE chat_settings_v2 SET pinned = 0 WHERE uid = %d AND pinned <= %d"
            java.lang.Object[] r4 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x02f4 }
            java.lang.Long r5 = java.lang.Long.valueOf(r25)     // Catch:{ Exception -> 0x02f4 }
            r6 = 0
            r4[r6] = r5     // Catch:{ Exception -> 0x02f4 }
            java.lang.Integer r5 = java.lang.Integer.valueOf(r27)     // Catch:{ Exception -> 0x02f4 }
            r6 = 1
            r4[r6] = r5     // Catch:{ Exception -> 0x02f4 }
            java.lang.String r2 = java.lang.String.format(r2, r3, r4)     // Catch:{ Exception -> 0x02f4 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x02f4 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x02f4 }
            r0.dispose()     // Catch:{ Exception -> 0x02f4 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x02f4 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x02f4 }
            java.lang.String r3 = "DELETE FROM chat_pinned_v2 WHERE uid = %d AND mid <= %d"
            java.lang.Object[] r4 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x02f4 }
            java.lang.Long r5 = java.lang.Long.valueOf(r25)     // Catch:{ Exception -> 0x02f4 }
            r6 = 0
            r4[r6] = r5     // Catch:{ Exception -> 0x02f4 }
            java.lang.Integer r5 = java.lang.Integer.valueOf(r27)     // Catch:{ Exception -> 0x02f4 }
            r6 = 1
            r4[r6] = r5     // Catch:{ Exception -> 0x02f4 }
            java.lang.String r2 = java.lang.String.format(r2, r3, r4)     // Catch:{ Exception -> 0x02f4 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x02f4 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x02f4 }
            r0.dispose()     // Catch:{ Exception -> 0x02f4 }
            r0 = 0
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database     // Catch:{ Exception -> 0x02f4 }
            java.lang.String r3 = "SELECT changes()"
            r4 = 0
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x02f4 }
            org.telegram.SQLite.SQLiteCursor r2 = r2.queryFinalized(r3, r5)     // Catch:{ Exception -> 0x02f4 }
            boolean r3 = r2.next()     // Catch:{ Exception -> 0x02f4 }
            if (r3 == 0) goto L_0x022e
            r3 = 0
            int r4 = r2.intValue(r3)     // Catch:{ Exception -> 0x02f4 }
            r0 = r4
        L_0x022e:
            r2.dispose()     // Catch:{ Exception -> 0x02f4 }
            if (r0 <= 0) goto L_0x0281
            org.telegram.SQLite.SQLiteDatabase r3 = r1.database     // Catch:{ Exception -> 0x02f4 }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x02f4 }
            java.lang.String r5 = "SELECT count FROM chat_pinned_count WHERE uid = %d"
            r6 = 1
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x02f4 }
            r6 = r13
            long r12 = -r8
            java.lang.Long r11 = java.lang.Long.valueOf(r12)     // Catch:{ Exception -> 0x02f4 }
            r12 = 0
            r7[r12] = r11     // Catch:{ Exception -> 0x02f4 }
            java.lang.String r4 = java.lang.String.format(r4, r5, r7)     // Catch:{ Exception -> 0x02f4 }
            java.lang.Object[] r5 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x02f4 }
            org.telegram.SQLite.SQLiteCursor r3 = r3.queryFinalized(r4, r5)     // Catch:{ Exception -> 0x02f4 }
            r2 = r3
            boolean r3 = r2.next()     // Catch:{ Exception -> 0x02f4 }
            if (r3 == 0) goto L_0x027d
            r3 = 0
            int r4 = r2.intValue(r3)     // Catch:{ Exception -> 0x02f4 }
            r3 = r4
            org.telegram.SQLite.SQLiteDatabase r4 = r1.database     // Catch:{ Exception -> 0x02f4 }
            java.lang.String r5 = "UPDATE chat_pinned_count SET count = ? WHERE uid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r4 = r4.executeFast(r5)     // Catch:{ Exception -> 0x02f4 }
            r4.requery()     // Catch:{ Exception -> 0x02f4 }
            int r5 = r3 - r0
            r7 = 0
            int r5 = java.lang.Math.max(r7, r5)     // Catch:{ Exception -> 0x02f4 }
            r7 = 1
            r4.bindInteger(r7, r5)     // Catch:{ Exception -> 0x02f4 }
            long r11 = -r8
            r5 = 2
            r4.bindLong(r5, r11)     // Catch:{ Exception -> 0x02f4 }
            r4.step()     // Catch:{ Exception -> 0x02f4 }
            r4.dispose()     // Catch:{ Exception -> 0x02f4 }
        L_0x027d:
            r2.dispose()     // Catch:{ Exception -> 0x02f4 }
            goto L_0x0282
        L_0x0281:
            r6 = r13
        L_0x0282:
            org.telegram.SQLite.SQLiteDatabase r3 = r1.database     // Catch:{ Exception -> 0x02f4 }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x02f4 }
            java.lang.String r5 = "DELETE FROM messages_v2 WHERE uid = %d AND mid <= %d"
            r7 = 2
            java.lang.Object[] r11 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x02f4 }
            long r12 = -r8
            java.lang.Long r7 = java.lang.Long.valueOf(r12)     // Catch:{ Exception -> 0x02f4 }
            r12 = 0
            r11[r12] = r7     // Catch:{ Exception -> 0x02f4 }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r27)     // Catch:{ Exception -> 0x02f4 }
            r12 = 1
            r11[r12] = r7     // Catch:{ Exception -> 0x02f4 }
            java.lang.String r4 = java.lang.String.format(r4, r5, r11)     // Catch:{ Exception -> 0x02f4 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.executeFast(r4)     // Catch:{ Exception -> 0x02f4 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.stepThis()     // Catch:{ Exception -> 0x02f4 }
            r3.dispose()     // Catch:{ Exception -> 0x02f4 }
            org.telegram.SQLite.SQLiteDatabase r3 = r1.database     // Catch:{ Exception -> 0x02f4 }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x02f4 }
            java.lang.String r5 = "DELETE FROM media_v4 WHERE uid = %d AND mid <= %d"
            r7 = 2
            java.lang.Object[] r7 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x02f4 }
            long r11 = -r8
            java.lang.Long r11 = java.lang.Long.valueOf(r11)     // Catch:{ Exception -> 0x02f4 }
            r12 = 0
            r7[r12] = r11     // Catch:{ Exception -> 0x02f4 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r27)     // Catch:{ Exception -> 0x02f4 }
            r12 = 1
            r7[r12] = r11     // Catch:{ Exception -> 0x02f4 }
            java.lang.String r4 = java.lang.String.format(r4, r5, r7)     // Catch:{ Exception -> 0x02f4 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.executeFast(r4)     // Catch:{ Exception -> 0x02f4 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.stepThis()     // Catch:{ Exception -> 0x02f4 }
            r3.dispose()     // Catch:{ Exception -> 0x02f4 }
            org.telegram.SQLite.SQLiteDatabase r3 = r1.database     // Catch:{ Exception -> 0x02f4 }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x02f4 }
            java.lang.String r5 = "UPDATE media_counts_v2 SET old = 1 WHERE uid = %d"
            r7 = 1
            java.lang.Object[] r7 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x02f4 }
            long r11 = -r8
            java.lang.Long r11 = java.lang.Long.valueOf(r11)     // Catch:{ Exception -> 0x02f4 }
            r12 = 0
            r7[r12] = r11     // Catch:{ Exception -> 0x02f4 }
            java.lang.String r4 = java.lang.String.format(r4, r5, r7)     // Catch:{ Exception -> 0x02f4 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.executeFast(r4)     // Catch:{ Exception -> 0x02f4 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.stepThis()     // Catch:{ Exception -> 0x02f4 }
            r3.dispose()     // Catch:{ Exception -> 0x02f4 }
            r1.updateWidgets((java.util.ArrayList<java.lang.Long>) r10)     // Catch:{ Exception -> 0x02f4 }
            return r10
        L_0x02f4:
            r0 = move-exception
            goto L_0x02fc
        L_0x02f6:
            r0 = move-exception
            r1 = r24
            goto L_0x02fc
        L_0x02fa:
            r0 = move-exception
            r1 = r7
        L_0x02fc:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
            r0 = 0
            return r0
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.m943x45aef9b5(long, int, boolean):java.util.ArrayList");
    }

    /* renamed from: lambda$markMessagesAsDeletedInternal$168$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m947x33eff6d9(ArrayList namesToDelete) {
        getFileLoader().cancelLoadFiles(namesToDelete);
    }

    public ArrayList<Long> markMessagesAsDeleted(long channelId, int mid, boolean useQueue, boolean deleteFiles) {
        if (!useQueue) {
            return m943x45aef9b5(channelId, mid, deleteFiles);
        }
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda173(this, channelId, mid, deleteFiles));
        return null;
    }

    private void fixUnsupportedMedia(TLRPC.Message message) {
        if (message != null) {
            if (message.media instanceof TLRPC.TL_messageMediaUnsupported_old) {
                if (message.media.bytes.length == 0) {
                    message.media.bytes = Utilities.intToBytes(140);
                }
            } else if (message.media instanceof TLRPC.TL_messageMediaUnsupported) {
                message.media = new TLRPC.TL_messageMediaUnsupported_old();
                message.media.bytes = Utilities.intToBytes(140);
                message.flags |= 512;
            }
        }
    }

    private void doneHolesInTable(String table, long did, int max_id) throws Exception {
        if (max_id == 0) {
            SQLiteDatabase sQLiteDatabase = this.database;
            Locale locale = Locale.US;
            sQLiteDatabase.executeFast(String.format(locale, "DELETE FROM " + table + " WHERE uid = %d", new Object[]{Long.valueOf(did)})).stepThis().dispose();
        } else {
            SQLiteDatabase sQLiteDatabase2 = this.database;
            Locale locale2 = Locale.US;
            sQLiteDatabase2.executeFast(String.format(locale2, "DELETE FROM " + table + " WHERE uid = %d AND start = 0", new Object[]{Long.valueOf(did)})).stepThis().dispose();
        }
        SQLiteDatabase sQLiteDatabase3 = this.database;
        SQLitePreparedStatement state = sQLiteDatabase3.executeFast("REPLACE INTO " + table + " VALUES(?, ?, ?)");
        state.requery();
        state.bindLong(1, did);
        state.bindInteger(2, 1);
        state.bindInteger(3, 1);
        state.step();
        state.dispose();
    }

    public void doneHolesInMedia(long did, int max_id, int type) throws Exception {
        if (type == -1) {
            if (max_id == 0) {
                this.database.executeFast(String.format(Locale.US, "DELETE FROM media_holes_v2 WHERE uid = %d", new Object[]{Long.valueOf(did)})).stepThis().dispose();
            } else {
                this.database.executeFast(String.format(Locale.US, "DELETE FROM media_holes_v2 WHERE uid = %d AND start = 0", new Object[]{Long.valueOf(did)})).stepThis().dispose();
            }
            SQLitePreparedStatement state = this.database.executeFast("REPLACE INTO media_holes_v2 VALUES(?, ?, ?, ?)");
            for (int a = 0; a < 8; a++) {
                state.requery();
                state.bindLong(1, did);
                state.bindInteger(2, a);
                state.bindInteger(3, 1);
                state.bindInteger(4, 1);
                state.step();
            }
            state.dispose();
            return;
        }
        if (max_id == 0) {
            this.database.executeFast(String.format(Locale.US, "DELETE FROM media_holes_v2 WHERE uid = %d AND type = %d", new Object[]{Long.valueOf(did), Integer.valueOf(type)})).stepThis().dispose();
        } else {
            this.database.executeFast(String.format(Locale.US, "DELETE FROM media_holes_v2 WHERE uid = %d AND type = %d AND start = 0", new Object[]{Long.valueOf(did), Integer.valueOf(type)})).stepThis().dispose();
        }
        SQLitePreparedStatement state2 = this.database.executeFast("REPLACE INTO media_holes_v2 VALUES(?, ?, ?, ?)");
        state2.requery();
        state2.bindLong(1, did);
        state2.bindInteger(2, type);
        state2.bindInteger(3, 1);
        state2.bindInteger(4, 1);
        state2.step();
        state2.dispose();
    }

    private static class Hole {
        public int end;
        public int start;
        public int type;

        public Hole(int s, int e) {
            this.start = s;
            this.end = e;
        }

        public Hole(int t, int s, int e) {
            this.type = t;
            this.start = s;
            this.end = e;
        }
    }

    public void closeHolesInMedia(long did, int minId, int maxId, int type) {
        SQLiteCursor cursor;
        long j = did;
        int i = minId;
        int i2 = maxId;
        int i3 = 4;
        int i4 = 1;
        if (type < 0) {
            try {
                cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT type, start, end FROM media_holes_v2 WHERE uid = %d AND type >= 0 AND ((end >= %d AND end <= %d) OR (start >= %d AND start <= %d) OR (start >= %d AND end <= %d) OR (start <= %d AND end >= %d))", new Object[]{Long.valueOf(did), Integer.valueOf(minId), Integer.valueOf(maxId), Integer.valueOf(minId), Integer.valueOf(maxId), Integer.valueOf(minId), Integer.valueOf(maxId), Integer.valueOf(minId), Integer.valueOf(maxId)}), new Object[0]);
            } catch (Exception e) {
                FileLog.e((Throwable) e);
                return;
            }
        } else {
            cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT type, start, end FROM media_holes_v2 WHERE uid = %d AND type = %d AND ((end >= %d AND end <= %d) OR (start >= %d AND start <= %d) OR (start >= %d AND end <= %d) OR (start <= %d AND end >= %d))", new Object[]{Long.valueOf(did), Integer.valueOf(type), Integer.valueOf(minId), Integer.valueOf(maxId), Integer.valueOf(minId), Integer.valueOf(maxId), Integer.valueOf(minId), Integer.valueOf(maxId), Integer.valueOf(minId), Integer.valueOf(maxId)}), new Object[0]);
        }
        ArrayList<Hole> holes = null;
        while (cursor.next()) {
            if (holes == null) {
                holes = new ArrayList<>();
            }
            int holeType = cursor.intValue(0);
            int start = cursor.intValue(1);
            int end = cursor.intValue(2);
            if (start != end || start != 1) {
                holes.add(new Hole(holeType, start, end));
            }
        }
        cursor.dispose();
        if (holes != null) {
            int a = 0;
            while (a < holes.size()) {
                Hole hole = holes.get(a);
                if (i2 >= hole.end - i4) {
                    if (i <= hole.start + i4) {
                        SQLiteDatabase sQLiteDatabase = this.database;
                        Locale locale = Locale.US;
                        Object[] objArr = new Object[i3];
                        objArr[0] = Long.valueOf(did);
                        objArr[1] = Integer.valueOf(hole.type);
                        objArr[2] = Integer.valueOf(hole.start);
                        objArr[3] = Integer.valueOf(hole.end);
                        sQLiteDatabase.executeFast(String.format(locale, "DELETE FROM media_holes_v2 WHERE uid = %d AND type = %d AND start = %d AND end = %d", objArr)).stepThis().dispose();
                        i3 = 4;
                        a++;
                        i4 = 1;
                    }
                }
                if (i2 >= hole.end - 1) {
                    if (hole.end != i) {
                        try {
                            this.database.executeFast(String.format(Locale.US, "UPDATE media_holes_v2 SET end = %d WHERE uid = %d AND type = %d AND start = %d AND end = %d", new Object[]{Integer.valueOf(minId), Long.valueOf(did), Integer.valueOf(hole.type), Integer.valueOf(hole.start), Integer.valueOf(hole.end)})).stepThis().dispose();
                        } catch (Exception e2) {
                            FileLog.e((Throwable) e2, false);
                        }
                        i3 = 4;
                    } else {
                        i3 = 4;
                    }
                    a++;
                    i4 = 1;
                } else {
                    if (i > hole.start + 1) {
                        this.database.executeFast(String.format(Locale.US, "DELETE FROM media_holes_v2 WHERE uid = %d AND type = %d AND start = %d AND end = %d", new Object[]{Long.valueOf(did), Integer.valueOf(hole.type), Integer.valueOf(hole.start), Integer.valueOf(hole.end)})).stepThis().dispose();
                        SQLitePreparedStatement state = this.database.executeFast("REPLACE INTO media_holes_v2 VALUES(?, ?, ?, ?)");
                        state.requery();
                        state.bindLong(1, j);
                        state.bindInteger(2, hole.type);
                        state.bindInteger(3, hole.start);
                        state.bindInteger(4, i);
                        state.step();
                        state.requery();
                        state.bindLong(1, j);
                        state.bindInteger(2, hole.type);
                        state.bindInteger(3, i2);
                        i3 = 4;
                        state.bindInteger(4, hole.end);
                        state.step();
                        state.dispose();
                    } else if (hole.start != i2) {
                        try {
                            this.database.executeFast(String.format(Locale.US, "UPDATE media_holes_v2 SET start = %d WHERE uid = %d AND type = %d AND start = %d AND end = %d", new Object[]{Integer.valueOf(maxId), Long.valueOf(did), Integer.valueOf(hole.type), Integer.valueOf(hole.start), Integer.valueOf(hole.end)})).stepThis().dispose();
                        } catch (Exception e3) {
                            FileLog.e((Throwable) e3, false);
                        }
                        i3 = 4;
                    } else {
                        i3 = 4;
                    }
                    a++;
                    i4 = 1;
                }
            }
        }
    }

    private void closeHolesInTable(String table, long did, int minId, int maxId) {
        String str = table;
        long j = did;
        int i = minId;
        int i2 = maxId;
        try {
            int i3 = 1;
            SQLiteCursor cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT start, end FROM " + str + " WHERE uid = %d AND ((end >= %d AND end <= %d) OR (start >= %d AND start <= %d) OR (start >= %d AND end <= %d) OR (start <= %d AND end >= %d))", new Object[]{Long.valueOf(did), Integer.valueOf(minId), Integer.valueOf(maxId), Integer.valueOf(minId), Integer.valueOf(maxId), Integer.valueOf(minId), Integer.valueOf(maxId), Integer.valueOf(minId), Integer.valueOf(maxId)}), new Object[0]);
            ArrayList<Hole> holes = null;
            while (cursor.next()) {
                if (holes == null) {
                    holes = new ArrayList<>();
                }
                int start = cursor.intValue(0);
                int end = cursor.intValue(1);
                if (start != end || start != 1) {
                    holes.add(new Hole(start, end));
                }
            }
            cursor.dispose();
            if (holes != null) {
                int a = 0;
                while (a < holes.size()) {
                    Hole hole = holes.get(a);
                    if (i2 >= hole.end - i3) {
                        if (i <= hole.start + i3) {
                            this.database.executeFast(String.format(Locale.US, "DELETE FROM " + str + " WHERE uid = %d AND start = %d AND end = %d", new Object[]{Long.valueOf(did), Integer.valueOf(hole.start), Integer.valueOf(hole.end)})).stepThis().dispose();
                            a++;
                            i3 = 1;
                        }
                    }
                    if (i2 >= hole.end - 1) {
                        if (hole.end != i) {
                            try {
                                this.database.executeFast(String.format(Locale.US, "UPDATE " + str + " SET end = %d WHERE uid = %d AND start = %d AND end = %d", new Object[]{Integer.valueOf(minId), Long.valueOf(did), Integer.valueOf(hole.start), Integer.valueOf(hole.end)})).stepThis().dispose();
                            } catch (Exception e) {
                                FileLog.e((Throwable) e, false);
                            }
                        }
                        a++;
                        i3 = 1;
                    } else {
                        if (i > hole.start + 1) {
                            this.database.executeFast(String.format(Locale.US, "DELETE FROM " + str + " WHERE uid = %d AND start = %d AND end = %d", new Object[]{Long.valueOf(did), Integer.valueOf(hole.start), Integer.valueOf(hole.end)})).stepThis().dispose();
                            SQLitePreparedStatement state = this.database.executeFast("REPLACE INTO " + str + " VALUES(?, ?, ?)");
                            state.requery();
                            state.bindLong(1, j);
                            state.bindInteger(2, hole.start);
                            state.bindInteger(3, i);
                            state.step();
                            state.requery();
                            state.bindLong(1, j);
                            state.bindInteger(2, i2);
                            state.bindInteger(3, hole.end);
                            state.step();
                            state.dispose();
                        } else if (hole.start != i2) {
                            try {
                                this.database.executeFast(String.format(Locale.US, "UPDATE " + str + " SET start = %d WHERE uid = %d AND start = %d AND end = %d", new Object[]{Integer.valueOf(maxId), Long.valueOf(did), Integer.valueOf(hole.start), Integer.valueOf(hole.end)})).stepThis().dispose();
                            } catch (Exception e2) {
                                FileLog.e((Throwable) e2, false);
                            }
                        }
                        a++;
                        i3 = 1;
                    }
                }
            }
        } catch (Exception e3) {
            FileLog.e((Throwable) e3);
        }
    }

    public void replaceMessageIfExists(TLRPC.Message message, ArrayList<TLRPC.User> users, ArrayList<TLRPC.Chat> chats, boolean broadcast) {
        if (message != null) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda76(this, message, broadcast, users, chats));
        }
    }

    /* JADX WARNING: Code restructure failed: missing block: B:13:0x0045, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:74:0x01f5, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:76:0x01f7, code lost:
        if (r2 != null) goto L_0x01f9;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:77:0x01f9, code lost:
        r2.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:78:0x01fd, code lost:
        throw r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:79:0x01fe, code lost:
        org.telegram.messenger.FileLog.e((java.lang.Throwable) r0);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:84:?, code lost:
        return;
     */
    /* JADX WARNING: Exception block dominator not found, dom blocks: [B:5:0x0036, B:15:0x0049] */
    /* JADX WARNING: Removed duplicated region for block: B:32:0x00c7 A[Catch:{ all -> 0x0045, Exception -> 0x01f5 }] */
    /* JADX WARNING: Removed duplicated region for block: B:33:0x00cd A[Catch:{ all -> 0x0045, Exception -> 0x01f5 }] */
    /* JADX WARNING: Removed duplicated region for block: B:36:0x00d9 A[Catch:{ all -> 0x0045, Exception -> 0x01f5 }] */
    /* JADX WARNING: Removed duplicated region for block: B:37:0x00dd A[Catch:{ all -> 0x0045, Exception -> 0x01f5 }] */
    /* JADX WARNING: Removed duplicated region for block: B:43:0x00f1 A[Catch:{ all -> 0x0045, Exception -> 0x01f5 }] */
    /* JADX WARNING: Removed duplicated region for block: B:44:0x00f3 A[Catch:{ all -> 0x0045, Exception -> 0x01f5 }] */
    /* JADX WARNING: Removed duplicated region for block: B:47:0x0105 A[Catch:{ all -> 0x0045, Exception -> 0x01f5 }] */
    /* JADX WARNING: Removed duplicated region for block: B:48:0x011b A[Catch:{ all -> 0x0045, Exception -> 0x01f5 }] */
    /* JADX WARNING: Removed duplicated region for block: B:51:0x0125 A[Catch:{ all -> 0x0045, Exception -> 0x01f5 }] */
    /* JADX WARNING: Removed duplicated region for block: B:56:0x0138 A[Catch:{ all -> 0x0045, Exception -> 0x01f5 }] */
    /* JADX WARNING: Removed duplicated region for block: B:59:0x014d A[Catch:{ all -> 0x0045, Exception -> 0x01f5 }] */
    /* JADX WARNING: Removed duplicated region for block: B:61:0x0170 A[Catch:{ all -> 0x0045, Exception -> 0x01f5 }] */
    /* JADX WARNING: Removed duplicated region for block: B:64:0x0183 A[Catch:{ all -> 0x0045, Exception -> 0x01f5 }] */
    /* renamed from: lambda$replaceMessageIfExists$171$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void m981x8ec1e4c6(org.telegram.tgnet.TLRPC.Message r21, boolean r22, java.util.ArrayList r23, java.util.ArrayList r24) {
        /*
            r20 = this;
            r1 = r20
            r9 = r21
            r2 = 0
            r3 = 0
            r4 = 0
            r5 = 2
            r6 = 1
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0048 }
            java.util.Locale r7 = java.util.Locale.US     // Catch:{ Exception -> 0x0048 }
            java.lang.String r8 = "SELECT uid, read_state FROM messages_v2 WHERE mid = %d AND uid = %d LIMIT 1"
            java.lang.Object[] r10 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x0048 }
            int r11 = r9.id     // Catch:{ Exception -> 0x0048 }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r11)     // Catch:{ Exception -> 0x0048 }
            r10[r4] = r11     // Catch:{ Exception -> 0x0048 }
            long r11 = org.telegram.messenger.MessageObject.getDialogId(r21)     // Catch:{ Exception -> 0x0048 }
            java.lang.Long r11 = java.lang.Long.valueOf(r11)     // Catch:{ Exception -> 0x0048 }
            r10[r6] = r11     // Catch:{ Exception -> 0x0048 }
            java.lang.String r7 = java.lang.String.format(r7, r8, r10)     // Catch:{ Exception -> 0x0048 }
            java.lang.Object[] r8 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0048 }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r7, r8)     // Catch:{ Exception -> 0x0048 }
            r2 = r0
            boolean r0 = r2.next()     // Catch:{ Exception -> 0x0048 }
            if (r0 != 0) goto L_0x003a
            if (r2 == 0) goto L_0x0039
            r2.dispose()     // Catch:{ Exception -> 0x01f5 }
        L_0x0039:
            return
        L_0x003a:
            int r0 = r2.intValue(r6)     // Catch:{ Exception -> 0x0048 }
            r3 = r0
            if (r2 == 0) goto L_0x0051
            r2.dispose()     // Catch:{ Exception -> 0x01f5 }
            goto L_0x0051
        L_0x0045:
            r0 = move-exception
            goto L_0x01f7
        L_0x0048:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0045 }
            if (r2 == 0) goto L_0x0051
            r2.dispose()     // Catch:{ Exception -> 0x01f5 }
        L_0x0051:
            r0 = r2
            r10 = r3
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database     // Catch:{ Exception -> 0x01f5 }
            r2.beginTransaction()     // Catch:{ Exception -> 0x01f5 }
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database     // Catch:{ Exception -> 0x01f5 }
            java.lang.String r3 = "REPLACE INTO messages_v2 VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?, ?, ?, ?, ?, ?, 0)"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r3)     // Catch:{ Exception -> 0x01f5 }
            r11 = r2
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database     // Catch:{ Exception -> 0x01f5 }
            java.lang.String r3 = "REPLACE INTO media_v4 VALUES(?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r3)     // Catch:{ Exception -> 0x01f5 }
            r12 = r2
            long r2 = r9.dialog_id     // Catch:{ Exception -> 0x01f5 }
            r7 = 0
            int r13 = (r2 > r7 ? 1 : (r2 == r7 ? 0 : -1))
            if (r13 != 0) goto L_0x0075
            org.telegram.messenger.MessageObject.getDialogId(r21)     // Catch:{ Exception -> 0x01f5 }
        L_0x0075:
            r20.fixUnsupportedMedia(r21)     // Catch:{ Exception -> 0x01f5 }
            r11.requery()     // Catch:{ Exception -> 0x01f5 }
            org.telegram.tgnet.NativeByteBuffer r2 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x01f5 }
            int r3 = r21.getObjectSize()     // Catch:{ Exception -> 0x01f5 }
            r2.<init>((int) r3)     // Catch:{ Exception -> 0x01f5 }
            r13 = r2
            r9.serializeToStream(r13)     // Catch:{ Exception -> 0x01f5 }
            int r2 = r9.id     // Catch:{ Exception -> 0x01f5 }
            r11.bindInteger(r6, r2)     // Catch:{ Exception -> 0x01f5 }
            long r2 = r9.dialog_id     // Catch:{ Exception -> 0x01f5 }
            r11.bindLong(r5, r2)     // Catch:{ Exception -> 0x01f5 }
            r2 = 3
            r11.bindInteger(r2, r10)     // Catch:{ Exception -> 0x01f5 }
            int r3 = r9.send_state     // Catch:{ Exception -> 0x01f5 }
            r7 = 4
            r11.bindInteger(r7, r3)     // Catch:{ Exception -> 0x01f5 }
            int r3 = r9.date     // Catch:{ Exception -> 0x01f5 }
            r8 = 5
            r11.bindInteger(r8, r3)     // Catch:{ Exception -> 0x01f5 }
            r3 = 6
            r11.bindByteBuffer((int) r3, (org.telegram.tgnet.NativeByteBuffer) r13)     // Catch:{ Exception -> 0x01f5 }
            r3 = 7
            boolean r14 = org.telegram.messenger.MessageObject.isOut(r21)     // Catch:{ Exception -> 0x01f5 }
            if (r14 != 0) goto L_0x00b4
            boolean r14 = r9.from_scheduled     // Catch:{ Exception -> 0x01f5 }
            if (r14 == 0) goto L_0x00b2
            goto L_0x00b4
        L_0x00b2:
            r14 = 0
            goto L_0x00b5
        L_0x00b4:
            r14 = 1
        L_0x00b5:
            r11.bindInteger(r3, r14)     // Catch:{ Exception -> 0x01f5 }
            r3 = 8
            int r14 = r9.ttl     // Catch:{ Exception -> 0x01f5 }
            r11.bindInteger(r3, r14)     // Catch:{ Exception -> 0x01f5 }
            int r3 = r9.flags     // Catch:{ Exception -> 0x01f5 }
            r3 = r3 & 1024(0x400, float:1.435E-42)
            r14 = 9
            if (r3 == 0) goto L_0x00cd
            int r3 = r9.views     // Catch:{ Exception -> 0x01f5 }
            r11.bindInteger(r14, r3)     // Catch:{ Exception -> 0x01f5 }
            goto L_0x00d4
        L_0x00cd:
            int r3 = r20.getMessageMediaType(r21)     // Catch:{ Exception -> 0x01f5 }
            r11.bindInteger(r14, r3)     // Catch:{ Exception -> 0x01f5 }
        L_0x00d4:
            r3 = 0
            int r14 = r9.stickerVerified     // Catch:{ Exception -> 0x01f5 }
            if (r14 != 0) goto L_0x00dd
            r3 = r3 | 1
            r14 = r3
            goto L_0x00e6
        L_0x00dd:
            int r14 = r9.stickerVerified     // Catch:{ Exception -> 0x01f5 }
            if (r14 != r5) goto L_0x00e5
            r3 = r3 | 2
            r14 = r3
            goto L_0x00e6
        L_0x00e5:
            r14 = r3
        L_0x00e6:
            r3 = 10
            r11.bindInteger(r3, r14)     // Catch:{ Exception -> 0x01f5 }
            r3 = 11
            boolean r15 = r9.mentioned     // Catch:{ Exception -> 0x01f5 }
            if (r15 == 0) goto L_0x00f3
            r15 = 1
            goto L_0x00f4
        L_0x00f3:
            r15 = 0
        L_0x00f4:
            r11.bindInteger(r3, r15)     // Catch:{ Exception -> 0x01f5 }
            r3 = 12
            int r15 = r9.forwards     // Catch:{ Exception -> 0x01f5 }
            r11.bindInteger(r3, r15)     // Catch:{ Exception -> 0x01f5 }
            r3 = 0
            org.telegram.tgnet.TLRPC$MessageReplies r15 = r9.replies     // Catch:{ Exception -> 0x01f5 }
            r8 = 13
            if (r15 == 0) goto L_0x011b
            org.telegram.tgnet.NativeByteBuffer r15 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x01f5 }
            org.telegram.tgnet.TLRPC$MessageReplies r7 = r9.replies     // Catch:{ Exception -> 0x01f5 }
            int r7 = r7.getObjectSize()     // Catch:{ Exception -> 0x01f5 }
            r15.<init>((int) r7)     // Catch:{ Exception -> 0x01f5 }
            r3 = r15
            org.telegram.tgnet.TLRPC$MessageReplies r7 = r9.replies     // Catch:{ Exception -> 0x01f5 }
            r7.serializeToStream(r3)     // Catch:{ Exception -> 0x01f5 }
            r11.bindByteBuffer((int) r8, (org.telegram.tgnet.NativeByteBuffer) r3)     // Catch:{ Exception -> 0x01f5 }
            r15 = r3
            goto L_0x011f
        L_0x011b:
            r11.bindNull(r8)     // Catch:{ Exception -> 0x01f5 }
            r15 = r3
        L_0x011f:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r3 = r9.reply_to     // Catch:{ Exception -> 0x01f5 }
            r7 = 14
            if (r3 == 0) goto L_0x0138
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r3 = r9.reply_to     // Catch:{ Exception -> 0x01f5 }
            int r3 = r3.reply_to_top_id     // Catch:{ Exception -> 0x01f5 }
            if (r3 == 0) goto L_0x0130
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r3 = r9.reply_to     // Catch:{ Exception -> 0x01f5 }
            int r3 = r3.reply_to_top_id     // Catch:{ Exception -> 0x01f5 }
            goto L_0x0134
        L_0x0130:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r3 = r9.reply_to     // Catch:{ Exception -> 0x01f5 }
            int r3 = r3.reply_to_msg_id     // Catch:{ Exception -> 0x01f5 }
        L_0x0134:
            r11.bindInteger(r7, r3)     // Catch:{ Exception -> 0x01f5 }
            goto L_0x013b
        L_0x0138:
            r11.bindInteger(r7, r4)     // Catch:{ Exception -> 0x01f5 }
        L_0x013b:
            r3 = 15
            long r7 = org.telegram.messenger.MessageObject.getChannelId(r21)     // Catch:{ Exception -> 0x01f5 }
            r11.bindLong(r3, r7)     // Catch:{ Exception -> 0x01f5 }
            r11.step()     // Catch:{ Exception -> 0x01f5 }
            boolean r3 = org.telegram.messenger.MediaDataController.canAddMessageToMedia(r21)     // Catch:{ Exception -> 0x01f5 }
            if (r3 == 0) goto L_0x016e
            r12.requery()     // Catch:{ Exception -> 0x01f5 }
            int r3 = r9.id     // Catch:{ Exception -> 0x01f5 }
            r12.bindInteger(r6, r3)     // Catch:{ Exception -> 0x01f5 }
            long r3 = r9.dialog_id     // Catch:{ Exception -> 0x01f5 }
            r12.bindLong(r5, r3)     // Catch:{ Exception -> 0x01f5 }
            int r3 = r9.date     // Catch:{ Exception -> 0x01f5 }
            r12.bindInteger(r2, r3)     // Catch:{ Exception -> 0x01f5 }
            int r2 = org.telegram.messenger.MediaDataController.getMediaType(r21)     // Catch:{ Exception -> 0x01f5 }
            r3 = 4
            r12.bindInteger(r3, r2)     // Catch:{ Exception -> 0x01f5 }
            r2 = 5
            r12.bindByteBuffer((int) r2, (org.telegram.tgnet.NativeByteBuffer) r13)     // Catch:{ Exception -> 0x01f5 }
            r12.step()     // Catch:{ Exception -> 0x01f5 }
        L_0x016e:
            if (r15 == 0) goto L_0x0173
            r15.reuse()     // Catch:{ Exception -> 0x01f5 }
        L_0x0173:
            r13.reuse()     // Catch:{ Exception -> 0x01f5 }
            r11.dispose()     // Catch:{ Exception -> 0x01f5 }
            r12.dispose()     // Catch:{ Exception -> 0x01f5 }
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database     // Catch:{ Exception -> 0x01f5 }
            r2.commitTransaction()     // Catch:{ Exception -> 0x01f5 }
            if (r22 == 0) goto L_0x01f4
            java.util.HashMap r2 = new java.util.HashMap     // Catch:{ Exception -> 0x01f5 }
            r2.<init>()     // Catch:{ Exception -> 0x01f5 }
            r8 = r2
            java.util.HashMap r2 = new java.util.HashMap     // Catch:{ Exception -> 0x01f5 }
            r2.<init>()     // Catch:{ Exception -> 0x01f5 }
            r7 = r2
            r2 = 0
        L_0x0190:
            int r3 = r23.size()     // Catch:{ Exception -> 0x01f5 }
            if (r2 >= r3) goto L_0x01ab
            r6 = r23
            java.lang.Object r3 = r6.get(r2)     // Catch:{ Exception -> 0x01f5 }
            org.telegram.tgnet.TLRPC$User r3 = (org.telegram.tgnet.TLRPC.User) r3     // Catch:{ Exception -> 0x01f5 }
            long r4 = r3.id     // Catch:{ Exception -> 0x01f5 }
            java.lang.Long r4 = java.lang.Long.valueOf(r4)     // Catch:{ Exception -> 0x01f5 }
            r8.put(r4, r3)     // Catch:{ Exception -> 0x01f5 }
            int r2 = r2 + 1
            goto L_0x0190
        L_0x01ab:
            r6 = r23
            r2 = 0
        L_0x01ae:
            int r3 = r24.size()     // Catch:{ Exception -> 0x01f5 }
            if (r2 >= r3) goto L_0x01c9
            r5 = r24
            java.lang.Object r3 = r5.get(r2)     // Catch:{ Exception -> 0x01f5 }
            org.telegram.tgnet.TLRPC$Chat r3 = (org.telegram.tgnet.TLRPC.Chat) r3     // Catch:{ Exception -> 0x01f5 }
            long r4 = r3.id     // Catch:{ Exception -> 0x01f5 }
            java.lang.Long r4 = java.lang.Long.valueOf(r4)     // Catch:{ Exception -> 0x01f5 }
            r7.put(r4, r3)     // Catch:{ Exception -> 0x01f5 }
            int r2 = r2 + 1
            goto L_0x01ae
        L_0x01c9:
            org.telegram.messenger.MessageObject r16 = new org.telegram.messenger.MessageObject     // Catch:{ Exception -> 0x01f5 }
            int r3 = r1.currentAccount     // Catch:{ Exception -> 0x01f5 }
            r17 = 1
            r18 = 1
            r2 = r16
            r4 = r21
            r5 = r8
            r6 = r7
            r19 = r7
            r7 = r17
            r17 = r8
            r8 = r18
            r2.<init>((int) r3, (org.telegram.tgnet.TLRPC.Message) r4, (java.util.AbstractMap<java.lang.Long, org.telegram.tgnet.TLRPC.User>) r5, (java.util.AbstractMap<java.lang.Long, org.telegram.tgnet.TLRPC.Chat>) r6, (boolean) r7, (boolean) r8)     // Catch:{ Exception -> 0x01f5 }
            r2 = r16
            java.util.ArrayList r3 = new java.util.ArrayList     // Catch:{ Exception -> 0x01f5 }
            r3.<init>()     // Catch:{ Exception -> 0x01f5 }
            r3.add(r2)     // Catch:{ Exception -> 0x01f5 }
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda53 r4 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda53     // Catch:{ Exception -> 0x01f5 }
            r4.<init>(r1, r2, r3)     // Catch:{ Exception -> 0x01f5 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r4)     // Catch:{ Exception -> 0x01f5 }
        L_0x01f4:
            goto L_0x0201
        L_0x01f5:
            r0 = move-exception
            goto L_0x01fe
        L_0x01f7:
            if (r2 == 0) goto L_0x01fc
            r2.dispose()     // Catch:{ Exception -> 0x01f5 }
        L_0x01fc:
            throw r0     // Catch:{ Exception -> 0x01f5 }
        L_0x01fe:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x0201:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.m981x8ec1e4c6(org.telegram.tgnet.TLRPC$Message, boolean, java.util.ArrayList, java.util.ArrayList):void");
    }

    /* renamed from: lambda$replaceMessageIfExists$170$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m980x37a3f3e7(MessageObject messageObject, ArrayList arrayList) {
        getNotificationCenter().postNotificationName(NotificationCenter.replaceMessagesObjects, Long.valueOf(messageObject.getDialogId()), arrayList);
    }

    public void putMessages(TLRPC.messages_Messages messages, long dialogId, int load_type, int max_id, boolean createDialog, boolean scheduled) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda93(this, scheduled, dialogId, messages, load_type, max_id, createDialog));
    }

    /* JADX WARNING: Removed duplicated region for block: B:154:0x0523 A[Catch:{ Exception -> 0x07f3 }] */
    /* JADX WARNING: Removed duplicated region for block: B:155:0x052b A[Catch:{ Exception -> 0x07f3 }] */
    /* JADX WARNING: Removed duplicated region for block: B:158:0x0539 A[Catch:{ Exception -> 0x07f3 }] */
    /* JADX WARNING: Removed duplicated region for block: B:159:0x053d A[Catch:{ Exception -> 0x07f3 }] */
    /* JADX WARNING: Removed duplicated region for block: B:165:0x0550 A[Catch:{ Exception -> 0x07f3 }] */
    /* JADX WARNING: Removed duplicated region for block: B:166:0x0552 A[Catch:{ Exception -> 0x07f3 }] */
    /* JADX WARNING: Removed duplicated region for block: B:169:0x0564 A[Catch:{ Exception -> 0x07f3 }] */
    /* JADX WARNING: Removed duplicated region for block: B:170:0x057c A[Catch:{ Exception -> 0x07f3 }] */
    /* JADX WARNING: Removed duplicated region for block: B:173:0x0586 A[Catch:{ Exception -> 0x07f3 }] */
    /* JADX WARNING: Removed duplicated region for block: B:178:0x059b A[Catch:{ Exception -> 0x07f3 }] */
    /* JADX WARNING: Removed duplicated region for block: B:181:0x05b3 A[Catch:{ Exception -> 0x07f3 }] */
    /* JADX WARNING: Removed duplicated region for block: B:182:0x05dc A[Catch:{ Exception -> 0x07f3 }] */
    /* JADX WARNING: Removed duplicated region for block: B:198:0x0647 A[Catch:{ Exception -> 0x07f3 }] */
    /* JADX WARNING: Removed duplicated region for block: B:203:0x0655 A[Catch:{ Exception -> 0x07f3 }] */
    /* JADX WARNING: Removed duplicated region for block: B:207:0x0690 A[Catch:{ Exception -> 0x07f3 }] */
    /* JADX WARNING: Removed duplicated region for block: B:210:0x0698 A[Catch:{ Exception -> 0x07f3 }] */
    /* JADX WARNING: Removed duplicated region for block: B:214:0x06cb A[Catch:{ Exception -> 0x07f3 }] */
    /* renamed from: lambda$putMessages$173$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void m967lambda$putMessages$173$orgtelegrammessengerMessagesStorage(boolean r46, long r47, org.telegram.tgnet.TLRPC.messages_Messages r49, int r50, int r51, boolean r52) {
        /*
            r45 = this;
            r13 = r45
            r14 = r47
            r12 = r49
            r11 = r50
            r10 = r51
            r8 = 4
            r6 = 3
            r3 = 2
            r4 = 0
            r2 = 1
            if (r46 == 0) goto L_0x00a3
            org.telegram.SQLite.SQLiteDatabase r0 = r13.database     // Catch:{ Exception -> 0x07f8 }
            java.util.Locale r1 = java.util.Locale.US     // Catch:{ Exception -> 0x07f8 }
            java.lang.String r5 = "DELETE FROM scheduled_messages_v2 WHERE uid = %d AND mid > 0"
            java.lang.Object[] r9 = new java.lang.Object[r2]     // Catch:{ Exception -> 0x07f8 }
            java.lang.Long r17 = java.lang.Long.valueOf(r47)     // Catch:{ Exception -> 0x07f8 }
            r9[r4] = r17     // Catch:{ Exception -> 0x07f8 }
            java.lang.String r1 = java.lang.String.format(r1, r5, r9)     // Catch:{ Exception -> 0x07f8 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x07f8 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x07f8 }
            r0.dispose()     // Catch:{ Exception -> 0x07f8 }
            org.telegram.SQLite.SQLiteDatabase r0 = r13.database     // Catch:{ Exception -> 0x07f8 }
            java.lang.String r1 = "REPLACE INTO scheduled_messages_v2 VALUES(?, ?, ?, ?, ?, ?, NULL, 0)"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r1)     // Catch:{ Exception -> 0x07f8 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r12.messages     // Catch:{ Exception -> 0x07f8 }
            int r1 = r1.size()     // Catch:{ Exception -> 0x07f8 }
            r4 = 0
        L_0x003d:
            if (r4 >= r1) goto L_0x0086
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r5 = r12.messages     // Catch:{ Exception -> 0x07f8 }
            java.lang.Object r5 = r5.get(r4)     // Catch:{ Exception -> 0x07f8 }
            org.telegram.tgnet.TLRPC$Message r5 = (org.telegram.tgnet.TLRPC.Message) r5     // Catch:{ Exception -> 0x07f8 }
            boolean r9 = r5 instanceof org.telegram.tgnet.TLRPC.TL_messageEmpty     // Catch:{ Exception -> 0x07f8 }
            if (r9 == 0) goto L_0x004d
            r9 = 6
            goto L_0x0082
        L_0x004d:
            r13.fixUnsupportedMedia(r5)     // Catch:{ Exception -> 0x07f8 }
            r0.requery()     // Catch:{ Exception -> 0x07f8 }
            org.telegram.tgnet.NativeByteBuffer r9 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x07f8 }
            int r7 = r5.getObjectSize()     // Catch:{ Exception -> 0x07f8 }
            r9.<init>((int) r7)     // Catch:{ Exception -> 0x07f8 }
            r7 = r9
            r5.serializeToStream(r7)     // Catch:{ Exception -> 0x07f8 }
            int r9 = r5.id     // Catch:{ Exception -> 0x07f8 }
            r0.bindInteger(r2, r9)     // Catch:{ Exception -> 0x07f8 }
            r0.bindLong(r3, r14)     // Catch:{ Exception -> 0x07f8 }
            int r9 = r5.send_state     // Catch:{ Exception -> 0x07f8 }
            r0.bindInteger(r6, r9)     // Catch:{ Exception -> 0x07f8 }
            int r9 = r5.date     // Catch:{ Exception -> 0x07f8 }
            r0.bindInteger(r8, r9)     // Catch:{ Exception -> 0x07f8 }
            r9 = 5
            r0.bindByteBuffer((int) r9, (org.telegram.tgnet.NativeByteBuffer) r7)     // Catch:{ Exception -> 0x07f8 }
            int r3 = r5.ttl     // Catch:{ Exception -> 0x07f8 }
            r9 = 6
            r0.bindInteger(r9, r3)     // Catch:{ Exception -> 0x07f8 }
            r0.step()     // Catch:{ Exception -> 0x07f8 }
            r7.reuse()     // Catch:{ Exception -> 0x07f8 }
        L_0x0082:
            int r4 = r4 + 1
            r3 = 2
            goto L_0x003d
        L_0x0086:
            r0.dispose()     // Catch:{ Exception -> 0x07f8 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r2 = r12.users     // Catch:{ Exception -> 0x07f8 }
            r13.putUsersInternal(r2)     // Catch:{ Exception -> 0x07f8 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r2 = r12.chats     // Catch:{ Exception -> 0x07f8 }
            r13.putChatsInternal(r2)     // Catch:{ Exception -> 0x07f8 }
            org.telegram.SQLite.SQLiteDatabase r2 = r13.database     // Catch:{ Exception -> 0x07f8 }
            r2.commitTransaction()     // Catch:{ Exception -> 0x07f8 }
            java.lang.Long r2 = java.lang.Long.valueOf(r47)     // Catch:{ Exception -> 0x07f8 }
            r13.broadcastScheduledMessagesChange(r2)     // Catch:{ Exception -> 0x07f8 }
            r10 = r14
            r15 = r12
            goto L_0x07f2
        L_0x00a3:
            r9 = 6
            r0 = 2147483647(0x7fffffff, float:NaN)
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r12.messages     // Catch:{ Exception -> 0x07f8 }
            boolean r1 = r1.isEmpty()     // Catch:{ Exception -> 0x07f8 }
            r7 = -1
            if (r1 == 0) goto L_0x00bb
            if (r11 != 0) goto L_0x00ba
            java.lang.String r1 = "messages_holes"
            r13.doneHolesInTable(r1, r14, r10)     // Catch:{ Exception -> 0x07f8 }
            r13.doneHolesInMedia(r14, r10, r7)     // Catch:{ Exception -> 0x07f8 }
        L_0x00ba:
            return
        L_0x00bb:
            org.telegram.SQLite.SQLiteDatabase r1 = r13.database     // Catch:{ Exception -> 0x07f8 }
            r1.beginTransaction()     // Catch:{ Exception -> 0x07f8 }
            r3 = 2147483647(0x7fffffff, float:NaN)
            if (r11 != 0) goto L_0x0100
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r12.messages     // Catch:{ Exception -> 0x00fa }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r5 = r12.messages     // Catch:{ Exception -> 0x00fa }
            int r5 = r5.size()     // Catch:{ Exception -> 0x00fa }
            int r5 = r5 - r2
            java.lang.Object r1 = r1.get(r5)     // Catch:{ Exception -> 0x00fa }
            org.telegram.tgnet.TLRPC$Message r1 = (org.telegram.tgnet.TLRPC.Message) r1     // Catch:{ Exception -> 0x00fa }
            int r5 = r1.id     // Catch:{ Exception -> 0x00fa }
            java.lang.String r16 = "messages_holes"
            r1 = r45
            r2 = r16
            r3 = r47
            r6 = r51
            r1.closeHolesInTable(r2, r3, r5, r6)     // Catch:{ Exception -> 0x00fa }
            r1 = -1
            r6 = r45
            r2 = 4
            r3 = -1
            r4 = 5
            r7 = r47
            r9 = r5
            r10 = r51
            r14 = r11
            r11 = r1
            r6.closeHolesInMedia(r7, r9, r10, r11)     // Catch:{ Exception -> 0x00f8 }
            r15 = r12
            r4 = 2
            r6 = 3
            goto L_0x018f
        L_0x00f8:
            r0 = move-exception
            goto L_0x00fc
        L_0x00fa:
            r0 = move-exception
            r14 = r11
        L_0x00fc:
            r10 = r47
            goto L_0x07fa
        L_0x0100:
            r14 = r11
            r2 = 4
            r3 = -1
            r4 = 5
            r15 = 1
            if (r14 != r15) goto L_0x0139
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r12.messages     // Catch:{ Exception -> 0x0133 }
            r11 = 0
            java.lang.Object r1 = r1.get(r11)     // Catch:{ Exception -> 0x0133 }
            org.telegram.tgnet.TLRPC$Message r1 = (org.telegram.tgnet.TLRPC.Message) r1     // Catch:{ Exception -> 0x0133 }
            int r6 = r1.id     // Catch:{ Exception -> 0x0133 }
            java.lang.String r5 = "messages_holes"
            r1 = r45
            r10 = 4
            r2 = r5
            r8 = -1
            r9 = 5
            r3 = r47
            r5 = r51
            r1.closeHolesInTable(r2, r3, r5, r6)     // Catch:{ Exception -> 0x0133 }
            r1 = -1
            r7 = r45
            r3 = -1
            r4 = 5
            r8 = r47
            r2 = 4
            r10 = r51
            r5 = 0
            r11 = r6
            r15 = r12
            r12 = r1
            r7.closeHolesInMedia(r8, r10, r11, r12)     // Catch:{ Exception -> 0x07f5 }
            goto L_0x0144
        L_0x0133:
            r0 = move-exception
            r15 = r12
        L_0x0135:
            r10 = r47
            goto L_0x07fb
        L_0x0139:
            r15 = r12
            r5 = 0
            r12 = 3
            if (r14 == r12) goto L_0x0147
            r11 = 2
            if (r14 == r11) goto L_0x0148
            if (r14 != r2) goto L_0x0144
            goto L_0x0148
        L_0x0144:
            r4 = 2
            r6 = 3
            goto L_0x018f
        L_0x0147:
            r11 = 2
        L_0x0148:
            if (r51 != 0) goto L_0x0150
            if (r14 == r2) goto L_0x0150
            r6 = 2147483647(0x7fffffff, float:NaN)
            goto L_0x015b
        L_0x0150:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r15.messages     // Catch:{ Exception -> 0x07f5 }
            java.lang.Object r1 = r1.get(r5)     // Catch:{ Exception -> 0x07f5 }
            org.telegram.tgnet.TLRPC$Message r1 = (org.telegram.tgnet.TLRPC.Message) r1     // Catch:{ Exception -> 0x07f5 }
            int r1 = r1.id     // Catch:{ Exception -> 0x07f5 }
            r6 = r1
        L_0x015b:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r15.messages     // Catch:{ Exception -> 0x07f5 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r7 = r15.messages     // Catch:{ Exception -> 0x07f5 }
            int r7 = r7.size()     // Catch:{ Exception -> 0x07f5 }
            r8 = 1
            int r7 = r7 - r8
            java.lang.Object r1 = r1.get(r7)     // Catch:{ Exception -> 0x07f5 }
            org.telegram.tgnet.TLRPC$Message r1 = (org.telegram.tgnet.TLRPC.Message) r1     // Catch:{ Exception -> 0x07f5 }
            int r1 = r1.id     // Catch:{ Exception -> 0x07f5 }
            r10 = 0
            r5 = r1
            java.lang.String r7 = "messages_holes"
            r1 = r45
            r8 = 4
            r2 = r7
            r7 = 5
            r9 = -1
            r3 = r47
            r1.closeHolesInTable(r2, r3, r5, r6)     // Catch:{ Exception -> 0x07f5 }
            r1 = -1
            r4 = 5
            r7 = r45
            r2 = 4
            r3 = -1
            r8 = r47
            r4 = 0
            r10 = r5
            r4 = 2
            r11 = r6
            r16 = r6
            r6 = 3
            r12 = r1
            r7.closeHolesInMedia(r8, r10, r11, r12)     // Catch:{ Exception -> 0x07f5 }
        L_0x018f:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r15.messages     // Catch:{ Exception -> 0x07f5 }
            int r1 = r1.size()     // Catch:{ Exception -> 0x07f5 }
            r9 = r1
            java.util.ArrayList r1 = new java.util.ArrayList     // Catch:{ Exception -> 0x07f5 }
            r1.<init>()     // Catch:{ Exception -> 0x07f5 }
            r10 = r1
            java.util.ArrayList r1 = new java.util.ArrayList     // Catch:{ Exception -> 0x07f5 }
            r1.<init>()     // Catch:{ Exception -> 0x07f5 }
            r11 = r1
            java.util.ArrayList r1 = new java.util.ArrayList     // Catch:{ Exception -> 0x07f5 }
            r1.<init>()     // Catch:{ Exception -> 0x07f5 }
            r12 = r1
            org.telegram.SQLite.SQLiteDatabase r1 = r13.database     // Catch:{ Exception -> 0x07f5 }
            java.lang.String r5 = "REPLACE INTO messages_v2 VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?, ?, ?, ?, ?, ?, 0)"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r5)     // Catch:{ Exception -> 0x07f5 }
            r8 = r1
            org.telegram.SQLite.SQLiteDatabase r1 = r13.database     // Catch:{ Exception -> 0x07f5 }
            java.lang.String r5 = "REPLACE INTO media_v4 VALUES(?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r5)     // Catch:{ Exception -> 0x07f5 }
            r7 = r1
            r1 = 0
            r5 = 0
            r16 = 0
            r18 = 2147483647(0x7fffffff, float:NaN)
            r22 = 0
            r24 = 0
            r23 = 0
            r6 = r23
            r43 = r16
            r16 = r1
            r1 = r22
            r22 = r43
            r44 = r18
            r18 = r5
            r5 = r44
        L_0x01d7:
            r2 = 0
            if (r6 >= r9) goto L_0x072e
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r4 = r15.messages     // Catch:{ Exception -> 0x07f5 }
            java.lang.Object r4 = r4.get(r6)     // Catch:{ Exception -> 0x07f5 }
            org.telegram.tgnet.TLRPC$Message r4 = (org.telegram.tgnet.TLRPC.Message) r4     // Catch:{ Exception -> 0x07f5 }
            int r29 = (r24 > r2 ? 1 : (r24 == r2 ? 0 : -1))
            if (r29 != 0) goto L_0x01ed
            org.telegram.tgnet.TLRPC$Peer r2 = r4.peer_id     // Catch:{ Exception -> 0x07f5 }
            long r2 = r2.channel_id     // Catch:{ Exception -> 0x07f5 }
            r24 = r2
        L_0x01ed:
            r2 = -2
            if (r14 != r2) goto L_0x03b8
            org.telegram.SQLite.SQLiteDatabase r2 = r13.database     // Catch:{ Exception -> 0x07f5 }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x07f5 }
            r29 = r1
            java.lang.String r1 = "SELECT mid, data, ttl, mention, read_state, send_state FROM messages_v2 WHERE mid = %d AND uid = %d"
            r30 = r5
            r31 = r6
            r5 = 2
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x07f5 }
            int r5 = r4.id     // Catch:{ Exception -> 0x07f5 }
            java.lang.Integer r5 = java.lang.Integer.valueOf(r5)     // Catch:{ Exception -> 0x07f5 }
            r20 = 0
            r6[r20] = r5     // Catch:{ Exception -> 0x07f5 }
            long r32 = org.telegram.messenger.MessageObject.getDialogId(r4)     // Catch:{ Exception -> 0x07f5 }
            java.lang.Long r5 = java.lang.Long.valueOf(r32)     // Catch:{ Exception -> 0x07f5 }
            r19 = 1
            r6[r19] = r5     // Catch:{ Exception -> 0x07f5 }
            java.lang.String r1 = java.lang.String.format(r3, r1, r6)     // Catch:{ Exception -> 0x07f5 }
            r3 = 0
            java.lang.Object[] r5 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x07f5 }
            org.telegram.SQLite.SQLiteCursor r1 = r2.queryFinalized(r1, r5)     // Catch:{ Exception -> 0x07f5 }
            r6 = r1
            boolean r1 = r6.next()     // Catch:{ Exception -> 0x07f5 }
            r32 = r1
            if (r1 == 0) goto L_0x0394
            r1 = 1
            org.telegram.tgnet.NativeByteBuffer r2 = r6.byteBufferValue(r1)     // Catch:{ Exception -> 0x07f5 }
            r5 = r2
            if (r5 == 0) goto L_0x0322
            r3 = 0
            int r1 = r5.readInt32(r3)     // Catch:{ Exception -> 0x07f5 }
            org.telegram.tgnet.TLRPC$Message r1 = org.telegram.tgnet.TLRPC.Message.TLdeserialize(r5, r1, r3)     // Catch:{ Exception -> 0x07f5 }
            r2 = r1
            org.telegram.messenger.UserConfig r1 = r45.getUserConfig()     // Catch:{ Exception -> 0x07f5 }
            r20 = r4
            long r3 = r1.clientUserId     // Catch:{ Exception -> 0x07f5 }
            r2.readAttachPath(r5, r3)     // Catch:{ Exception -> 0x07f5 }
            r5.reuse()     // Catch:{ Exception -> 0x07f5 }
            r4 = 5
            int r1 = r6.intValue(r4)     // Catch:{ Exception -> 0x07f5 }
            r3 = r1
            r1 = 3
            if (r3 == r1) goto L_0x0273
            java.lang.String r1 = org.telegram.messenger.MessageObject.getFileName(r2)     // Catch:{ Exception -> 0x07f5 }
            java.lang.String r4 = org.telegram.messenger.MessageObject.getFileName(r20)     // Catch:{ Exception -> 0x07f5 }
            boolean r1 = r1.equals(r4)     // Catch:{ Exception -> 0x07f5 }
            if (r1 == 0) goto L_0x0267
            java.lang.String r1 = r2.attachPath     // Catch:{ Exception -> 0x07f5 }
            r4 = r20
            r4.attachPath = r1     // Catch:{ Exception -> 0x07f5 }
            goto L_0x0269
        L_0x0267:
            r4 = r20
        L_0x0269:
            r20 = r3
            r1 = 2
            int r3 = r6.intValue(r1)     // Catch:{ Exception -> 0x07f5 }
            r4.ttl = r3     // Catch:{ Exception -> 0x07f5 }
            goto L_0x0278
        L_0x0273:
            r4 = r20
            r1 = 2
            r20 = r3
        L_0x0278:
            r3 = 0
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r2.media     // Catch:{ Exception -> 0x07f5 }
            boolean r1 = r1 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaPhoto     // Catch:{ Exception -> 0x07f5 }
            if (r1 == 0) goto L_0x02af
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r4.media     // Catch:{ Exception -> 0x07f5 }
            boolean r1 = r1 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaPhoto     // Catch:{ Exception -> 0x07f5 }
            if (r1 == 0) goto L_0x02af
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r2.media     // Catch:{ Exception -> 0x07f5 }
            org.telegram.tgnet.TLRPC$Photo r1 = r1.photo     // Catch:{ Exception -> 0x07f5 }
            if (r1 == 0) goto L_0x02af
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r4.media     // Catch:{ Exception -> 0x07f5 }
            org.telegram.tgnet.TLRPC$Photo r1 = r1.photo     // Catch:{ Exception -> 0x07f5 }
            if (r1 == 0) goto L_0x02af
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r2.media     // Catch:{ Exception -> 0x07f5 }
            org.telegram.tgnet.TLRPC$Photo r1 = r1.photo     // Catch:{ Exception -> 0x07f5 }
            r35 = r5
            r34 = r6
            long r5 = r1.id     // Catch:{ Exception -> 0x07f5 }
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r4.media     // Catch:{ Exception -> 0x07f5 }
            org.telegram.tgnet.TLRPC$Photo r1 = r1.photo     // Catch:{ Exception -> 0x07f5 }
            r37 = r7
            r36 = r8
            long r7 = r1.id     // Catch:{ Exception -> 0x07f5 }
            int r1 = (r5 > r7 ? 1 : (r5 == r7 ? 0 : -1))
            if (r1 != 0) goto L_0x02ab
            r1 = 1
            goto L_0x02ac
        L_0x02ab:
            r1 = 0
        L_0x02ac:
            r3 = r1
            r7 = r3
            goto L_0x02e6
        L_0x02af:
            r35 = r5
            r34 = r6
            r37 = r7
            r36 = r8
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r2.media     // Catch:{ Exception -> 0x07f5 }
            boolean r1 = r1 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaDocument     // Catch:{ Exception -> 0x07f5 }
            if (r1 == 0) goto L_0x02e5
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r4.media     // Catch:{ Exception -> 0x07f5 }
            boolean r1 = r1 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaDocument     // Catch:{ Exception -> 0x07f5 }
            if (r1 == 0) goto L_0x02e5
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r2.media     // Catch:{ Exception -> 0x07f5 }
            org.telegram.tgnet.TLRPC$Document r1 = r1.document     // Catch:{ Exception -> 0x07f5 }
            if (r1 == 0) goto L_0x02e5
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r4.media     // Catch:{ Exception -> 0x07f5 }
            org.telegram.tgnet.TLRPC$Document r1 = r1.document     // Catch:{ Exception -> 0x07f5 }
            if (r1 == 0) goto L_0x02e5
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r2.media     // Catch:{ Exception -> 0x07f5 }
            org.telegram.tgnet.TLRPC$Document r1 = r1.document     // Catch:{ Exception -> 0x07f5 }
            long r5 = r1.id     // Catch:{ Exception -> 0x07f5 }
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r4.media     // Catch:{ Exception -> 0x07f5 }
            org.telegram.tgnet.TLRPC$Document r1 = r1.document     // Catch:{ Exception -> 0x07f5 }
            long r7 = r1.id     // Catch:{ Exception -> 0x07f5 }
            int r1 = (r5 > r7 ? 1 : (r5 == r7 ? 0 : -1))
            if (r1 != 0) goto L_0x02e1
            r1 = 1
            goto L_0x02e2
        L_0x02e1:
            r1 = 0
        L_0x02e2:
            r3 = r1
            r7 = r3
            goto L_0x02e6
        L_0x02e5:
            r7 = r3
        L_0x02e6:
            if (r7 != 0) goto L_0x030d
            r6 = 0
            r8 = r29
            r5 = 2
            r23 = 3
            r1 = r45
            r27 = r2
            r3 = 4
            r26 = 0
            r3 = r10
            r5 = r4
            r4 = r12
            r17 = r7
            r26 = r9
            r7 = r30
            r28 = r35
            r9 = r5
            r5 = r11
            r29 = r10
            r23 = r31
            r14 = r34
            r10 = 3
            r1.addFilesToDelete(r2, r3, r4, r5, r6)     // Catch:{ Exception -> 0x07f5 }
            goto L_0x0335
        L_0x030d:
            r27 = r2
            r17 = r7
            r26 = r9
            r8 = r29
            r7 = r30
            r23 = r31
            r14 = r34
            r28 = r35
            r9 = r4
            r29 = r10
            r10 = 3
            goto L_0x0335
        L_0x0322:
            r28 = r5
            r14 = r6
            r37 = r7
            r36 = r8
            r26 = r9
            r8 = r29
            r7 = r30
            r23 = r31
            r9 = r4
            r29 = r10
            r10 = 3
        L_0x0335:
            int r1 = r14.intValue(r10)     // Catch:{ Exception -> 0x07f5 }
            if (r1 == 0) goto L_0x033d
            r4 = 1
            goto L_0x033e
        L_0x033d:
            r4 = 0
        L_0x033e:
            r1 = r4
            r2 = 4
            int r3 = r14.intValue(r2)     // Catch:{ Exception -> 0x07f5 }
            boolean r4 = r9.mentioned     // Catch:{ Exception -> 0x07f5 }
            if (r1 == r4) goto L_0x038e
            r4 = 2147483647(0x7fffffff, float:NaN)
            if (r0 != r4) goto L_0x037a
            org.telegram.SQLite.SQLiteDatabase r5 = r13.database     // Catch:{ Exception -> 0x07f5 }
            java.lang.StringBuilder r6 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x07f5 }
            r6.<init>()     // Catch:{ Exception -> 0x07f5 }
            java.lang.String r4 = "SELECT unread_count_i FROM dialogs WHERE did = "
            r6.append(r4)     // Catch:{ Exception -> 0x07f5 }
            r17 = r11
            r10 = r47
            r6.append(r10)     // Catch:{ Exception -> 0x07f3 }
            java.lang.String r6 = r6.toString()     // Catch:{ Exception -> 0x07f3 }
            r4 = 0
            java.lang.Object[] r2 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x07f3 }
            org.telegram.SQLite.SQLiteCursor r2 = r5.queryFinalized(r6, r2)     // Catch:{ Exception -> 0x07f3 }
            boolean r5 = r2.next()     // Catch:{ Exception -> 0x07f3 }
            if (r5 == 0) goto L_0x0376
            int r5 = r2.intValue(r4)     // Catch:{ Exception -> 0x07f3 }
            r0 = r5
        L_0x0376:
            r2.dispose()     // Catch:{ Exception -> 0x07f3 }
            goto L_0x037f
        L_0x037a:
            r17 = r11
            r4 = 0
            r10 = r47
        L_0x037f:
            if (r1 == 0) goto L_0x0387
            r2 = 1
            if (r3 > r2) goto L_0x03a9
            int r0 = r0 + -1
            goto L_0x03a9
        L_0x0387:
            boolean r2 = r9.media_unread     // Catch:{ Exception -> 0x07f3 }
            if (r2 == 0) goto L_0x03a9
            int r0 = r0 + 1
            goto L_0x03a9
        L_0x038e:
            r17 = r11
            r4 = 0
            r10 = r47
            goto L_0x03a9
        L_0x0394:
            r14 = r6
            r37 = r7
            r36 = r8
            r26 = r9
            r17 = r11
            r8 = r29
            r7 = r30
            r23 = r31
            r9 = r4
            r29 = r10
            r4 = 0
            r10 = r47
        L_0x03a9:
            r14.dispose()     // Catch:{ Exception -> 0x07f3 }
            if (r32 != 0) goto L_0x03b6
            r5 = r7
            r1 = r8
            r14 = r36
            r4 = 2
            r6 = 3
            goto L_0x071c
        L_0x03b6:
            r1 = r0
            goto L_0x03cb
        L_0x03b8:
            r23 = r6
            r37 = r7
            r36 = r8
            r26 = r9
            r29 = r10
            r17 = r11
            r10 = r47
            r8 = r1
            r9 = r4
            r7 = r5
            r4 = 0
            r1 = r0
        L_0x03cb:
            r0 = 7
            if (r23 != 0) goto L_0x04cb
            if (r52 == 0) goto L_0x04cb
            r32 = 0
            r33 = 0
            r34 = 0
            org.telegram.SQLite.SQLiteDatabase r2 = r13.database     // Catch:{ Exception -> 0x07f3 }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x07f3 }
            r3.<init>()     // Catch:{ Exception -> 0x07f3 }
            java.lang.String r5 = "SELECT pinned, unread_count_i, flags FROM dialogs WHERE did = "
            r3.append(r5)     // Catch:{ Exception -> 0x07f3 }
            r3.append(r10)     // Catch:{ Exception -> 0x07f3 }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x07f3 }
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x07f3 }
            org.telegram.SQLite.SQLiteCursor r2 = r2.queryFinalized(r3, r5)     // Catch:{ Exception -> 0x07f3 }
            boolean r3 = r2.next()     // Catch:{ Exception -> 0x07f3 }
            r5 = r3
            if (r3 == 0) goto L_0x0411
            int r3 = r2.intValue(r4)     // Catch:{ Exception -> 0x07f3 }
            r32 = r3
            r3 = 1
            int r40 = r2.intValue(r3)     // Catch:{ Exception -> 0x07f3 }
            r33 = r40
            r3 = 2
            int r39 = r2.intValue(r3)     // Catch:{ Exception -> 0x07f3 }
            r34 = r39
            r41 = r32
            r14 = r33
            r42 = r34
            goto L_0x0418
        L_0x0411:
            r3 = 2
            r41 = r32
            r14 = r33
            r42 = r34
        L_0x0418:
            r2.dispose()     // Catch:{ Exception -> 0x07f3 }
            if (r5 == 0) goto L_0x0455
            org.telegram.SQLite.SQLiteDatabase r6 = r13.database     // Catch:{ Exception -> 0x07f3 }
            java.lang.String r4 = "UPDATE dialogs SET date = ?, last_mid = ?, inbox_max = ?, last_mid_i = ?, pts = ?, date_i = ? WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r4 = r6.executeFast(r4)     // Catch:{ Exception -> 0x07f3 }
            int r6 = r9.date     // Catch:{ Exception -> 0x07f3 }
            r3 = 1
            r4.bindInteger(r3, r6)     // Catch:{ Exception -> 0x07f3 }
            int r3 = r9.id     // Catch:{ Exception -> 0x07f3 }
            r6 = 2
            r4.bindInteger(r6, r3)     // Catch:{ Exception -> 0x07f3 }
            int r3 = r9.id     // Catch:{ Exception -> 0x07f3 }
            r6 = 3
            r4.bindInteger(r6, r3)     // Catch:{ Exception -> 0x07f3 }
            int r6 = r9.id     // Catch:{ Exception -> 0x07f3 }
            r3 = 4
            r4.bindInteger(r3, r6)     // Catch:{ Exception -> 0x07f3 }
            int r3 = r15.pts     // Catch:{ Exception -> 0x07f3 }
            r6 = 5
            r4.bindInteger(r6, r3)     // Catch:{ Exception -> 0x07f3 }
            int r3 = r9.date     // Catch:{ Exception -> 0x07f3 }
            r6 = 6
            r4.bindInteger(r6, r3)     // Catch:{ Exception -> 0x07f3 }
            r4.bindLong(r0, r10)     // Catch:{ Exception -> 0x07f3 }
            r38 = r1
            r3 = r41
            r6 = r42
            r42 = r2
            goto L_0x04c4
        L_0x0455:
            r6 = 6
            org.telegram.SQLite.SQLiteDatabase r3 = r13.database     // Catch:{ Exception -> 0x07f3 }
            java.lang.String r4 = "REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.executeFast(r4)     // Catch:{ Exception -> 0x07f3 }
            r4 = r3
            r3 = 1
            r4.bindLong(r3, r10)     // Catch:{ Exception -> 0x07f3 }
            int r3 = r9.date     // Catch:{ Exception -> 0x07f3 }
            r6 = 2
            r4.bindInteger(r6, r3)     // Catch:{ Exception -> 0x07f3 }
            r3 = 3
            r6 = 0
            r4.bindInteger(r3, r6)     // Catch:{ Exception -> 0x07f3 }
            int r6 = r9.id     // Catch:{ Exception -> 0x07f3 }
            r3 = 4
            r4.bindInteger(r3, r6)     // Catch:{ Exception -> 0x07f3 }
            int r3 = r9.id     // Catch:{ Exception -> 0x07f3 }
            r6 = 5
            r4.bindInteger(r6, r3)     // Catch:{ Exception -> 0x07f3 }
            r3 = 6
            r6 = 0
            r4.bindInteger(r3, r6)     // Catch:{ Exception -> 0x07f3 }
            int r3 = r9.id     // Catch:{ Exception -> 0x07f3 }
            r4.bindInteger(r0, r3)     // Catch:{ Exception -> 0x07f3 }
            r3 = 8
            r4.bindInteger(r3, r14)     // Catch:{ Exception -> 0x07f3 }
            int r3 = r15.pts     // Catch:{ Exception -> 0x07f3 }
            r6 = 9
            r4.bindInteger(r6, r3)     // Catch:{ Exception -> 0x07f3 }
            int r3 = r9.date     // Catch:{ Exception -> 0x07f3 }
            r6 = 10
            r4.bindInteger(r6, r3)     // Catch:{ Exception -> 0x07f3 }
            r3 = r41
            r6 = 11
            r4.bindInteger(r6, r3)     // Catch:{ Exception -> 0x07f3 }
            r6 = r42
            r0 = 12
            r4.bindInteger(r0, r6)     // Catch:{ Exception -> 0x07f3 }
            r38 = r1
            r0 = 13
            r1 = -1
            r4.bindInteger(r0, r1)     // Catch:{ Exception -> 0x07f3 }
            r0 = 14
            r4.bindNull(r0)     // Catch:{ Exception -> 0x07f3 }
            r0 = 15
            r1 = 0
            r4.bindInteger(r0, r1)     // Catch:{ Exception -> 0x07f3 }
            androidx.collection.LongSparseArray<java.lang.Boolean> r0 = r13.unknownDialogsIds     // Catch:{ Exception -> 0x07f3 }
            r42 = r2
            r1 = 1
            java.lang.Boolean r2 = java.lang.Boolean.valueOf(r1)     // Catch:{ Exception -> 0x07f3 }
            r0.put(r10, r2)     // Catch:{ Exception -> 0x07f3 }
        L_0x04c4:
            r4.step()     // Catch:{ Exception -> 0x07f3 }
            r4.dispose()     // Catch:{ Exception -> 0x07f3 }
            goto L_0x04cd
        L_0x04cb:
            r38 = r1
        L_0x04cd:
            r13.fixUnsupportedMedia(r9)     // Catch:{ Exception -> 0x07f3 }
            r36.requery()     // Catch:{ Exception -> 0x07f3 }
            org.telegram.tgnet.NativeByteBuffer r0 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x07f3 }
            int r1 = r9.getObjectSize()     // Catch:{ Exception -> 0x07f3 }
            r0.<init>((int) r1)     // Catch:{ Exception -> 0x07f3 }
            r1 = r0
            r9.serializeToStream(r1)     // Catch:{ Exception -> 0x07f3 }
            int r0 = r9.id     // Catch:{ Exception -> 0x07f3 }
            r14 = r36
            r2 = 1
            r14.bindInteger(r2, r0)     // Catch:{ Exception -> 0x07f3 }
            r2 = 2
            r14.bindLong(r2, r10)     // Catch:{ Exception -> 0x07f3 }
            int r0 = org.telegram.messenger.MessageObject.getUnreadFlags(r9)     // Catch:{ Exception -> 0x07f3 }
            r2 = 3
            r14.bindInteger(r2, r0)     // Catch:{ Exception -> 0x07f3 }
            int r0 = r9.send_state     // Catch:{ Exception -> 0x07f3 }
            r3 = 4
            r14.bindInteger(r3, r0)     // Catch:{ Exception -> 0x07f3 }
            int r0 = r9.date     // Catch:{ Exception -> 0x07f3 }
            r3 = 5
            r14.bindInteger(r3, r0)     // Catch:{ Exception -> 0x07f3 }
            r3 = 6
            r14.bindByteBuffer((int) r3, (org.telegram.tgnet.NativeByteBuffer) r1)     // Catch:{ Exception -> 0x07f3 }
            boolean r0 = org.telegram.messenger.MessageObject.isOut(r9)     // Catch:{ Exception -> 0x07f3 }
            if (r0 != 0) goto L_0x0511
            boolean r0 = r9.from_scheduled     // Catch:{ Exception -> 0x07f3 }
            if (r0 == 0) goto L_0x050f
            goto L_0x0511
        L_0x050f:
            r4 = 0
            goto L_0x0512
        L_0x0511:
            r4 = 1
        L_0x0512:
            r0 = 7
            r14.bindInteger(r0, r4)     // Catch:{ Exception -> 0x07f3 }
            int r0 = r9.ttl     // Catch:{ Exception -> 0x07f3 }
            r4 = 8
            r14.bindInteger(r4, r0)     // Catch:{ Exception -> 0x07f3 }
            int r0 = r9.flags     // Catch:{ Exception -> 0x07f3 }
            r0 = r0 & 1024(0x400, float:1.435E-42)
            if (r0 == 0) goto L_0x052b
            int r0 = r9.views     // Catch:{ Exception -> 0x07f3 }
            r4 = 9
            r14.bindInteger(r4, r0)     // Catch:{ Exception -> 0x07f3 }
            goto L_0x0534
        L_0x052b:
            int r0 = r13.getMessageMediaType(r9)     // Catch:{ Exception -> 0x07f3 }
            r4 = 9
            r14.bindInteger(r4, r0)     // Catch:{ Exception -> 0x07f3 }
        L_0x0534:
            r0 = 0
            int r4 = r9.stickerVerified     // Catch:{ Exception -> 0x07f3 }
            if (r4 != 0) goto L_0x053d
            r0 = r0 | 1
            r4 = r0
            goto L_0x0547
        L_0x053d:
            int r4 = r9.stickerVerified     // Catch:{ Exception -> 0x07f3 }
            r5 = 2
            if (r4 != r5) goto L_0x0546
            r0 = r0 | 2
            r4 = r0
            goto L_0x0547
        L_0x0546:
            r4 = r0
        L_0x0547:
            r0 = 10
            r14.bindInteger(r0, r4)     // Catch:{ Exception -> 0x07f3 }
            boolean r0 = r9.mentioned     // Catch:{ Exception -> 0x07f3 }
            if (r0 == 0) goto L_0x0552
            r0 = 1
            goto L_0x0553
        L_0x0552:
            r0 = 0
        L_0x0553:
            r5 = 11
            r14.bindInteger(r5, r0)     // Catch:{ Exception -> 0x07f3 }
            int r0 = r9.forwards     // Catch:{ Exception -> 0x07f3 }
            r5 = 12
            r14.bindInteger(r5, r0)     // Catch:{ Exception -> 0x07f3 }
            r0 = 0
            org.telegram.tgnet.TLRPC$MessageReplies r5 = r9.replies     // Catch:{ Exception -> 0x07f3 }
            if (r5 == 0) goto L_0x057c
            org.telegram.tgnet.NativeByteBuffer r5 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x07f3 }
            org.telegram.tgnet.TLRPC$MessageReplies r6 = r9.replies     // Catch:{ Exception -> 0x07f3 }
            int r6 = r6.getObjectSize()     // Catch:{ Exception -> 0x07f3 }
            r5.<init>((int) r6)     // Catch:{ Exception -> 0x07f3 }
            r0 = r5
            org.telegram.tgnet.TLRPC$MessageReplies r5 = r9.replies     // Catch:{ Exception -> 0x07f3 }
            r5.serializeToStream(r0)     // Catch:{ Exception -> 0x07f3 }
            r5 = 13
            r14.bindByteBuffer((int) r5, (org.telegram.tgnet.NativeByteBuffer) r0)     // Catch:{ Exception -> 0x07f3 }
            r5 = r0
            goto L_0x0582
        L_0x057c:
            r5 = 13
            r14.bindNull(r5)     // Catch:{ Exception -> 0x07f3 }
            r5 = r0
        L_0x0582:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r0 = r9.reply_to     // Catch:{ Exception -> 0x07f3 }
            if (r0 == 0) goto L_0x059b
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r0 = r9.reply_to     // Catch:{ Exception -> 0x07f3 }
            int r0 = r0.reply_to_top_id     // Catch:{ Exception -> 0x07f3 }
            if (r0 == 0) goto L_0x0591
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r0 = r9.reply_to     // Catch:{ Exception -> 0x07f3 }
            int r0 = r0.reply_to_top_id     // Catch:{ Exception -> 0x07f3 }
            goto L_0x0595
        L_0x0591:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r0 = r9.reply_to     // Catch:{ Exception -> 0x07f3 }
            int r0 = r0.reply_to_msg_id     // Catch:{ Exception -> 0x07f3 }
        L_0x0595:
            r6 = 14
            r14.bindInteger(r6, r0)     // Catch:{ Exception -> 0x07f3 }
            goto L_0x05a1
        L_0x059b:
            r0 = 14
            r6 = 0
            r14.bindInteger(r0, r6)     // Catch:{ Exception -> 0x07f3 }
        L_0x05a1:
            long r2 = org.telegram.messenger.MessageObject.getChannelId(r9)     // Catch:{ Exception -> 0x07f3 }
            r0 = 15
            r14.bindLong(r0, r2)     // Catch:{ Exception -> 0x07f3 }
            r14.step()     // Catch:{ Exception -> 0x07f3 }
            boolean r0 = org.telegram.messenger.MediaDataController.canAddMessageToMedia(r9)     // Catch:{ Exception -> 0x07f3 }
            if (r0 == 0) goto L_0x05dc
            r37.requery()     // Catch:{ Exception -> 0x07f3 }
            int r0 = r9.id     // Catch:{ Exception -> 0x07f3 }
            r2 = r37
            r3 = 1
            r2.bindInteger(r3, r0)     // Catch:{ Exception -> 0x07f3 }
            r3 = 2
            r2.bindLong(r3, r10)     // Catch:{ Exception -> 0x07f3 }
            int r0 = r9.date     // Catch:{ Exception -> 0x07f3 }
            r3 = 3
            r2.bindInteger(r3, r0)     // Catch:{ Exception -> 0x07f3 }
            int r0 = org.telegram.messenger.MediaDataController.getMediaType(r9)     // Catch:{ Exception -> 0x07f3 }
            r6 = 4
            r2.bindInteger(r6, r0)     // Catch:{ Exception -> 0x07f3 }
            r6 = 5
            r2.bindByteBuffer((int) r6, (org.telegram.tgnet.NativeByteBuffer) r1)     // Catch:{ Exception -> 0x07f3 }
            r2.step()     // Catch:{ Exception -> 0x07f3 }
            r37 = r2
            r28 = r4
            goto L_0x0645
        L_0x05dc:
            r2 = r37
            r6 = 5
            boolean r0 = r9 instanceof org.telegram.tgnet.TLRPC.TL_messageService     // Catch:{ Exception -> 0x07f3 }
            if (r0 == 0) goto L_0x0641
            org.telegram.tgnet.TLRPC$MessageAction r0 = r9.action     // Catch:{ Exception -> 0x07f3 }
            boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC.TL_messageActionHistoryClear     // Catch:{ Exception -> 0x07f3 }
            if (r0 == 0) goto L_0x0641
            org.telegram.SQLite.SQLiteDatabase r0 = r13.database     // Catch:{ Exception -> 0x0638 }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x0638 }
            java.lang.String r6 = "DELETE FROM media_v4 WHERE mid = %d AND uid = %d"
            r37 = r2
            r28 = r4
            r2 = 2
            java.lang.Object[] r4 = new java.lang.Object[r2]     // Catch:{ Exception -> 0x0636 }
            int r2 = r9.id     // Catch:{ Exception -> 0x0636 }
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x0636 }
            r30 = 0
            r4[r30] = r2     // Catch:{ Exception -> 0x0636 }
            java.lang.Long r2 = java.lang.Long.valueOf(r47)     // Catch:{ Exception -> 0x0636 }
            r19 = 1
            r4[r19] = r2     // Catch:{ Exception -> 0x0636 }
            java.lang.String r2 = java.lang.String.format(r3, r6, r4)     // Catch:{ Exception -> 0x0636 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x0636 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0636 }
            r0.dispose()     // Catch:{ Exception -> 0x0636 }
            org.telegram.SQLite.SQLiteDatabase r0 = r13.database     // Catch:{ Exception -> 0x0636 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0636 }
            r2.<init>()     // Catch:{ Exception -> 0x0636 }
            java.lang.String r3 = "DELETE FROM media_counts_v2 WHERE uid = "
            r2.append(r3)     // Catch:{ Exception -> 0x0636 }
            r2.append(r10)     // Catch:{ Exception -> 0x0636 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x0636 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x0636 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0636 }
            r0.dispose()     // Catch:{ Exception -> 0x0636 }
            goto L_0x0645
        L_0x0636:
            r0 = move-exception
            goto L_0x063d
        L_0x0638:
            r0 = move-exception
            r37 = r2
            r28 = r4
        L_0x063d:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ Exception -> 0x07f3 }
            goto L_0x0645
        L_0x0641:
            r37 = r2
            r28 = r4
        L_0x0645:
            if (r5 == 0) goto L_0x064a
            r5.reuse()     // Catch:{ Exception -> 0x07f3 }
        L_0x064a:
            r1.reuse()     // Catch:{ Exception -> 0x07f3 }
            int r0 = r9.ttl_period     // Catch:{ Exception -> 0x07f3 }
            if (r0 == 0) goto L_0x0690
            int r0 = r9.id     // Catch:{ Exception -> 0x07f3 }
            if (r0 <= 0) goto L_0x0690
            if (r22 != 0) goto L_0x0662
            org.telegram.SQLite.SQLiteDatabase r0 = r13.database     // Catch:{ Exception -> 0x07f3 }
            java.lang.String r2 = "REPLACE INTO enc_tasks_v4 VALUES(?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x07f3 }
            r22 = r0
            goto L_0x0664
        L_0x0662:
            r0 = r22
        L_0x0664:
            r0.requery()     // Catch:{ Exception -> 0x07f3 }
            int r2 = r9.id     // Catch:{ Exception -> 0x07f3 }
            r3 = 1
            r0.bindInteger(r3, r2)     // Catch:{ Exception -> 0x07f3 }
            long r2 = r9.dialog_id     // Catch:{ Exception -> 0x07f3 }
            r4 = 2
            r0.bindLong(r4, r2)     // Catch:{ Exception -> 0x07f3 }
            int r2 = r9.date     // Catch:{ Exception -> 0x07f3 }
            int r3 = r9.ttl_period     // Catch:{ Exception -> 0x07f3 }
            int r2 = r2 + r3
            r3 = 3
            r0.bindInteger(r3, r2)     // Catch:{ Exception -> 0x07f3 }
            r3 = 4
            r4 = 0
            r0.bindInteger(r3, r4)     // Catch:{ Exception -> 0x07f3 }
            r0.step()     // Catch:{ Exception -> 0x07f3 }
            int r4 = r9.date     // Catch:{ Exception -> 0x07f3 }
            int r6 = r9.ttl_period     // Catch:{ Exception -> 0x07f3 }
            int r4 = r4 + r6
            int r4 = java.lang.Math.min(r7, r4)     // Catch:{ Exception -> 0x07f3 }
            r22 = r0
            goto L_0x0692
        L_0x0690:
            r3 = 4
            r4 = r7
        L_0x0692:
            org.telegram.tgnet.TLRPC$MessageMedia r0 = r9.media     // Catch:{ Exception -> 0x07f3 }
            boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaPoll     // Catch:{ Exception -> 0x07f3 }
            if (r0 == 0) goto L_0x06cb
            if (r16 != 0) goto L_0x06a5
            org.telegram.SQLite.SQLiteDatabase r0 = r13.database     // Catch:{ Exception -> 0x07f3 }
            java.lang.String r6 = "REPLACE INTO polls_v2 VALUES(?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r6)     // Catch:{ Exception -> 0x07f3 }
            r16 = r0
            goto L_0x06a7
        L_0x06a5:
            r0 = r16
        L_0x06a7:
            org.telegram.tgnet.TLRPC$MessageMedia r6 = r9.media     // Catch:{ Exception -> 0x07f3 }
            org.telegram.tgnet.TLRPC$TL_messageMediaPoll r6 = (org.telegram.tgnet.TLRPC.TL_messageMediaPoll) r6     // Catch:{ Exception -> 0x07f3 }
            r0.requery()     // Catch:{ Exception -> 0x07f3 }
            int r7 = r9.id     // Catch:{ Exception -> 0x07f3 }
            r2 = 1
            r0.bindInteger(r2, r7)     // Catch:{ Exception -> 0x07f3 }
            r7 = r4
            long r3 = r9.dialog_id     // Catch:{ Exception -> 0x07f3 }
            r2 = 2
            r0.bindLong(r2, r3)     // Catch:{ Exception -> 0x07f3 }
            org.telegram.tgnet.TLRPC$Poll r2 = r6.poll     // Catch:{ Exception -> 0x07f3 }
            long r2 = r2.id     // Catch:{ Exception -> 0x07f3 }
            r4 = 3
            r0.bindLong(r4, r2)     // Catch:{ Exception -> 0x07f3 }
            r0.step()     // Catch:{ Exception -> 0x07f3 }
            r16 = r0
            r4 = 2
            r6 = 3
            goto L_0x0702
        L_0x06cb:
            r7 = r4
            org.telegram.tgnet.TLRPC$MessageMedia r0 = r9.media     // Catch:{ Exception -> 0x07f3 }
            boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaWebPage     // Catch:{ Exception -> 0x07f3 }
            if (r0 == 0) goto L_0x0700
            if (r18 != 0) goto L_0x06df
            org.telegram.SQLite.SQLiteDatabase r0 = r13.database     // Catch:{ Exception -> 0x07f3 }
            java.lang.String r3 = "REPLACE INTO webpage_pending_v2 VALUES(?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r3)     // Catch:{ Exception -> 0x07f3 }
            r18 = r0
            goto L_0x06e1
        L_0x06df:
            r0 = r18
        L_0x06e1:
            r0.requery()     // Catch:{ Exception -> 0x07f3 }
            org.telegram.tgnet.TLRPC$MessageMedia r3 = r9.media     // Catch:{ Exception -> 0x07f3 }
            org.telegram.tgnet.TLRPC$WebPage r3 = r3.webpage     // Catch:{ Exception -> 0x07f3 }
            long r3 = r3.id     // Catch:{ Exception -> 0x07f3 }
            r6 = 1
            r0.bindLong(r6, r3)     // Catch:{ Exception -> 0x07f3 }
            int r3 = r9.id     // Catch:{ Exception -> 0x07f3 }
            r4 = 2
            r0.bindInteger(r4, r3)     // Catch:{ Exception -> 0x07f3 }
            long r2 = r9.dialog_id     // Catch:{ Exception -> 0x07f3 }
            r6 = 3
            r0.bindLong(r6, r2)     // Catch:{ Exception -> 0x07f3 }
            r0.step()     // Catch:{ Exception -> 0x07f3 }
            r18 = r0
            goto L_0x0702
        L_0x0700:
            r4 = 2
            r6 = 3
        L_0x0702:
            if (r50 != 0) goto L_0x0718
            boolean r0 = r13.isValidKeyboardToSave(r9)     // Catch:{ Exception -> 0x07f3 }
            if (r0 == 0) goto L_0x0718
            if (r8 == 0) goto L_0x0712
            int r0 = r8.id     // Catch:{ Exception -> 0x07f3 }
            int r2 = r9.id     // Catch:{ Exception -> 0x07f3 }
            if (r0 >= r2) goto L_0x0718
        L_0x0712:
            r0 = r9
            r1 = r0
            r5 = r7
            r0 = r38
            goto L_0x071c
        L_0x0718:
            r5 = r7
            r1 = r8
            r0 = r38
        L_0x071c:
            int r2 = r23 + 1
            r6 = r2
            r8 = r14
            r11 = r17
            r9 = r26
            r10 = r29
            r7 = r37
            r2 = 4
            r3 = -1
            r14 = r50
            goto L_0x01d7
        L_0x072e:
            r23 = r6
            r14 = r8
            r26 = r9
            r29 = r10
            r17 = r11
            r10 = r47
            r8 = r1
            r9 = r7
            r1 = 2
            r7 = r5
            r14.dispose()     // Catch:{ Exception -> 0x07f3 }
            r9.dispose()     // Catch:{ Exception -> 0x07f3 }
            if (r18 == 0) goto L_0x0748
            r18.dispose()     // Catch:{ Exception -> 0x07f3 }
        L_0x0748:
            r4 = 0
            if (r22 == 0) goto L_0x0755
            r22.dispose()     // Catch:{ Exception -> 0x07f3 }
            org.telegram.messenger.MessagesController r5 = r45.getMessagesController()     // Catch:{ Exception -> 0x07f3 }
            r5.didAddedNewTask(r7, r2, r4)     // Catch:{ Exception -> 0x07f3 }
        L_0x0755:
            if (r16 == 0) goto L_0x075a
            r16.dispose()     // Catch:{ Exception -> 0x07f3 }
        L_0x075a:
            if (r8 == 0) goto L_0x0763
            org.telegram.messenger.MediaDataController r2 = r45.getMediaDataController()     // Catch:{ Exception -> 0x07f3 }
            r2.putBotKeyboard(r10, r8)     // Catch:{ Exception -> 0x07f3 }
        L_0x0763:
            r2 = 0
            r13.deleteFromDownloadQueue(r12, r2)     // Catch:{ Exception -> 0x07f3 }
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda37 r2 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda37     // Catch:{ Exception -> 0x07f3 }
            r6 = r17
            r2.<init>(r13, r6)     // Catch:{ Exception -> 0x07f3 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r2)     // Catch:{ Exception -> 0x07f3 }
            org.telegram.messenger.FileLoader r2 = r45.getFileLoader()     // Catch:{ Exception -> 0x07f3 }
            r5 = r29
            r3 = 0
            r2.deleteFiles(r5, r3)     // Catch:{ Exception -> 0x07f3 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r2 = r15.users     // Catch:{ Exception -> 0x07f3 }
            r13.putUsersInternal(r2)     // Catch:{ Exception -> 0x07f3 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r2 = r15.chats     // Catch:{ Exception -> 0x07f3 }
            r13.putChatsInternal(r2)     // Catch:{ Exception -> 0x07f3 }
            r2 = 2147483647(0x7fffffff, float:NaN)
            if (r0 == r2) goto L_0x07c2
            org.telegram.SQLite.SQLiteDatabase r2 = r13.database     // Catch:{ Exception -> 0x07f3 }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x07f3 }
            java.lang.String r4 = "UPDATE dialogs SET unread_count_i = %d WHERE did = %d"
            java.lang.Object[] r1 = new java.lang.Object[r1]     // Catch:{ Exception -> 0x07f3 }
            java.lang.Integer r20 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x07f3 }
            r21 = 0
            r1[r21] = r20     // Catch:{ Exception -> 0x07f3 }
            java.lang.Long r20 = java.lang.Long.valueOf(r47)     // Catch:{ Exception -> 0x07f3 }
            r19 = 1
            r1[r19] = r20     // Catch:{ Exception -> 0x07f3 }
            java.lang.String r1 = java.lang.String.format(r3, r4, r1)     // Catch:{ Exception -> 0x07f3 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r2.executeFast(r1)     // Catch:{ Exception -> 0x07f3 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x07f3 }
            r1.dispose()     // Catch:{ Exception -> 0x07f3 }
            org.telegram.messenger.support.LongSparseIntArray r1 = new org.telegram.messenger.support.LongSparseIntArray     // Catch:{ Exception -> 0x07f3 }
            r2 = 1
            r1.<init>(r2)     // Catch:{ Exception -> 0x07f3 }
            r1.put(r10, r0)     // Catch:{ Exception -> 0x07f3 }
            org.telegram.messenger.MessagesController r2 = r45.getMessagesController()     // Catch:{ Exception -> 0x07f3 }
            r3 = 0
            r2.processDialogsUpdateRead(r3, r1)     // Catch:{ Exception -> 0x07f3 }
        L_0x07c2:
            org.telegram.SQLite.SQLiteDatabase r1 = r13.database     // Catch:{ Exception -> 0x07f3 }
            r1.commitTransaction()     // Catch:{ Exception -> 0x07f3 }
            if (r52 == 0) goto L_0x07ea
            java.util.ArrayList r17 = new java.util.ArrayList     // Catch:{ Exception -> 0x07f3 }
            r17.<init>()     // Catch:{ Exception -> 0x07f3 }
            r19 = 0
            r20 = 0
            r1 = r45
            r2 = r47
            r21 = r5
            r4 = r24
            r23 = r6
            r6 = r17
            r17 = r7
            r7 = r19
            r19 = r8
            r8 = r20
            r1.updateDialogsWithDeletedMessages(r2, r4, r6, r7, r8)     // Catch:{ Exception -> 0x07f3 }
            goto L_0x07f2
        L_0x07ea:
            r21 = r5
            r23 = r6
            r17 = r7
            r19 = r8
        L_0x07f2:
            goto L_0x07fe
        L_0x07f3:
            r0 = move-exception
            goto L_0x07fb
        L_0x07f5:
            r0 = move-exception
            goto L_0x0135
        L_0x07f8:
            r0 = move-exception
            r10 = r14
        L_0x07fa:
            r15 = r12
        L_0x07fb:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x07fe:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.m967lambda$putMessages$173$orgtelegrammessengerMessagesStorage(boolean, long, org.telegram.tgnet.TLRPC$messages_Messages, int, int, boolean):void");
    }

    /* renamed from: lambda$putMessages$172$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m966lambda$putMessages$172$orgtelegrammessengerMessagesStorage(ArrayList namesToDelete) {
        getFileLoader().cancelLoadFiles(namesToDelete);
    }

    public static void addUsersAndChatsFromMessage(TLRPC.Message message, ArrayList<Long> usersToLoad, ArrayList<Long> chatsToLoad) {
        String peerIdStr;
        long fromId = MessageObject.getFromChatId(message);
        if (DialogObject.isUserDialog(fromId)) {
            if (!usersToLoad.contains(Long.valueOf(fromId))) {
                usersToLoad.add(Long.valueOf(fromId));
            }
        } else if (DialogObject.isChatDialog(fromId) && !chatsToLoad.contains(Long.valueOf(-fromId))) {
            chatsToLoad.add(Long.valueOf(-fromId));
        }
        if (message.via_bot_id != 0 && !usersToLoad.contains(Long.valueOf(message.via_bot_id))) {
            usersToLoad.add(Long.valueOf(message.via_bot_id));
        }
        if (message.action != null) {
            if (message.action.user_id != 0 && !usersToLoad.contains(Long.valueOf(message.action.user_id))) {
                usersToLoad.add(Long.valueOf(message.action.user_id));
            }
            if (message.action.channel_id != 0 && !chatsToLoad.contains(Long.valueOf(message.action.channel_id))) {
                chatsToLoad.add(Long.valueOf(message.action.channel_id));
            }
            if (message.action.chat_id != 0 && !chatsToLoad.contains(Long.valueOf(message.action.chat_id))) {
                chatsToLoad.add(Long.valueOf(message.action.chat_id));
            }
            if (message.action instanceof TLRPC.TL_messageActionGeoProximityReached) {
                TLRPC.TL_messageActionGeoProximityReached action = (TLRPC.TL_messageActionGeoProximityReached) message.action;
                long id = MessageObject.getPeerId(action.from_id);
                if (DialogObject.isUserDialog(id)) {
                    if (!usersToLoad.contains(Long.valueOf(id))) {
                        usersToLoad.add(Long.valueOf(id));
                    }
                } else if (!chatsToLoad.contains(Long.valueOf(-id))) {
                    chatsToLoad.add(Long.valueOf(-id));
                }
                long id2 = MessageObject.getPeerId(action.to_id);
                if (id2 > 0) {
                    if (!usersToLoad.contains(Long.valueOf(id2))) {
                        usersToLoad.add(Long.valueOf(id2));
                    }
                } else if (!chatsToLoad.contains(Long.valueOf(-id2))) {
                    chatsToLoad.add(Long.valueOf(-id2));
                }
            }
            if (!message.action.users.isEmpty()) {
                for (int a = 0; a < message.action.users.size(); a++) {
                    Long uid = message.action.users.get(a);
                    if (!usersToLoad.contains(uid)) {
                        usersToLoad.add(uid);
                    }
                }
            }
        }
        if (!message.entities.isEmpty()) {
            for (int a2 = 0; a2 < message.entities.size(); a2++) {
                TLRPC.MessageEntity entity = message.entities.get(a2);
                if (entity instanceof TLRPC.TL_messageEntityMentionName) {
                    usersToLoad.add(Long.valueOf(((TLRPC.TL_messageEntityMentionName) entity).user_id));
                } else if (entity instanceof TLRPC.TL_inputMessageEntityMentionName) {
                    usersToLoad.add(Long.valueOf(((TLRPC.TL_inputMessageEntityMentionName) entity).user_id.user_id));
                }
            }
        }
        if (message.media != null) {
            if (message.media.user_id != 0 && !usersToLoad.contains(Long.valueOf(message.media.user_id))) {
                usersToLoad.add(Long.valueOf(message.media.user_id));
            }
            if (message.media instanceof TLRPC.TL_messageMediaPoll) {
                TLRPC.TL_messageMediaPoll messageMediaPoll = (TLRPC.TL_messageMediaPoll) message.media;
                if (!messageMediaPoll.results.recent_voters.isEmpty()) {
                    usersToLoad.addAll(messageMediaPoll.results.recent_voters);
                }
            }
        }
        if (message.replies != null) {
            int N = message.replies.recent_repliers.size();
            for (int a3 = 0; a3 < N; a3++) {
                long id3 = MessageObject.getPeerId(message.replies.recent_repliers.get(a3));
                if (DialogObject.isUserDialog(id3)) {
                    if (!usersToLoad.contains(Long.valueOf(id3))) {
                        usersToLoad.add(Long.valueOf(id3));
                    }
                } else if (DialogObject.isChatDialog(id3) && !chatsToLoad.contains(Long.valueOf(-id3))) {
                    chatsToLoad.add(Long.valueOf(-id3));
                }
            }
        }
        if (!(message.reply_to == null || message.reply_to.reply_to_peer_id == null)) {
            long id4 = MessageObject.getPeerId(message.reply_to.reply_to_peer_id);
            if (DialogObject.isUserDialog(id4)) {
                if (!usersToLoad.contains(Long.valueOf(id4))) {
                    usersToLoad.add(Long.valueOf(id4));
                }
            } else if (DialogObject.isChatDialog(id4) && !chatsToLoad.contains(Long.valueOf(-id4))) {
                chatsToLoad.add(Long.valueOf(-id4));
            }
        }
        if (message.fwd_from != null) {
            if (message.fwd_from.from_id instanceof TLRPC.TL_peerUser) {
                if (!usersToLoad.contains(Long.valueOf(message.fwd_from.from_id.user_id))) {
                    usersToLoad.add(Long.valueOf(message.fwd_from.from_id.user_id));
                }
            } else if (message.fwd_from.from_id instanceof TLRPC.TL_peerChannel) {
                if (!chatsToLoad.contains(Long.valueOf(message.fwd_from.from_id.channel_id))) {
                    chatsToLoad.add(Long.valueOf(message.fwd_from.from_id.channel_id));
                }
            } else if ((message.fwd_from.from_id instanceof TLRPC.TL_peerChat) && !chatsToLoad.contains(Long.valueOf(message.fwd_from.from_id.chat_id))) {
                chatsToLoad.add(Long.valueOf(message.fwd_from.from_id.chat_id));
            }
            if (message.fwd_from.saved_from_peer != null) {
                if (message.fwd_from.saved_from_peer.user_id != 0) {
                    if (!chatsToLoad.contains(Long.valueOf(message.fwd_from.saved_from_peer.user_id))) {
                        usersToLoad.add(Long.valueOf(message.fwd_from.saved_from_peer.user_id));
                    }
                } else if (message.fwd_from.saved_from_peer.channel_id != 0) {
                    if (!chatsToLoad.contains(Long.valueOf(message.fwd_from.saved_from_peer.channel_id))) {
                        chatsToLoad.add(Long.valueOf(message.fwd_from.saved_from_peer.channel_id));
                    }
                } else if (message.fwd_from.saved_from_peer.chat_id != 0 && !chatsToLoad.contains(Long.valueOf(message.fwd_from.saved_from_peer.chat_id))) {
                    chatsToLoad.add(Long.valueOf(message.fwd_from.saved_from_peer.chat_id));
                }
            }
        }
        if (message.params != null && (peerIdStr = message.params.get("fwd_peer")) != null) {
            long peerId = Utilities.parseLong(peerIdStr).longValue();
            if (peerId < 0 && !chatsToLoad.contains(Long.valueOf(-peerId))) {
                chatsToLoad.add(Long.valueOf(-peerId));
            }
        }
    }

    public void getDialogs(int folderId, int offset, int count, boolean loadDraftsPeersAndFolders) {
        long[] draftsDialogIds;
        if (loadDraftsPeersAndFolders) {
            LongSparseArray<SparseArray<TLRPC.DraftMessage>> drafts = getMediaDataController().getDrafts();
            int draftsCount = drafts.size();
            if (draftsCount > 0) {
                draftsDialogIds = new long[draftsCount];
                for (int i = 0; i < draftsCount; i++) {
                    if (drafts.valueAt(i).get(0) != null) {
                        draftsDialogIds[i] = drafts.keyAt(i);
                    }
                }
            } else {
                draftsDialogIds = null;
            }
        } else {
            draftsDialogIds = null;
        }
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda128(this, folderId, offset, count, draftsDialogIds));
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v22, resolved type: org.telegram.tgnet.TLRPC$TL_dialog} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v28, resolved type: org.telegram.tgnet.TLRPC$TL_dialog} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v130, resolved type: org.telegram.tgnet.TLRPC$TL_dialogFolder} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v30, resolved type: org.telegram.tgnet.TLRPC$TL_dialog} */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:139:0x02d1 A[Catch:{ Exception -> 0x044d }] */
    /* JADX WARNING: Removed duplicated region for block: B:142:0x02e0 A[Catch:{ Exception -> 0x044d }] */
    /* JADX WARNING: Removed duplicated region for block: B:146:0x02f7 A[Catch:{ Exception -> 0x044d }] */
    /* JADX WARNING: Removed duplicated region for block: B:47:0x0164 A[Catch:{ Exception -> 0x033f }] */
    /* JADX WARNING: Removed duplicated region for block: B:48:0x0166 A[Catch:{ Exception -> 0x033f }] */
    /* JADX WARNING: Removed duplicated region for block: B:51:0x017c A[Catch:{ Exception -> 0x033f }] */
    /* JADX WARNING: Removed duplicated region for block: B:52:0x017e A[Catch:{ Exception -> 0x033f }] */
    /* JADX WARNING: Removed duplicated region for block: B:56:0x0199 A[SYNTHETIC, Splitter:B:56:0x0199] */
    /* JADX WARNING: Removed duplicated region for block: B:62:0x01b8  */
    /* JADX WARNING: Removed duplicated region for block: B:70:0x01d5 A[SYNTHETIC, Splitter:B:70:0x01d5] */
    /* JADX WARNING: Removed duplicated region for block: B:78:0x01ed A[Catch:{ Exception -> 0x0337 }] */
    /* renamed from: lambda$getDialogs$175$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void m893lambda$getDialogs$175$orgtelegrammessengerMessagesStorage(int r34, int r35, int r36, long[] r37) {
        /*
            r33 = this;
            r7 = r33
            r8 = r37
            org.telegram.tgnet.TLRPC$TL_messages_dialogs r0 = new org.telegram.tgnet.TLRPC$TL_messages_dialogs
            r0.<init>()
            r15 = r0
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            r14 = r0
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x04c9 }
            r0.<init>()     // Catch:{ Exception -> 0x04c9 }
            r13 = r0
            org.telegram.messenger.UserConfig r0 = r33.getUserConfig()     // Catch:{ Exception -> 0x04c9 }
            long r0 = r0.getClientUserId()     // Catch:{ Exception -> 0x04c9 }
            java.lang.Long r0 = java.lang.Long.valueOf(r0)     // Catch:{ Exception -> 0x04c9 }
            r13.add(r0)     // Catch:{ Exception -> 0x04c9 }
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x04c9 }
            r0.<init>()     // Catch:{ Exception -> 0x04c9 }
            r12 = r0
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x04c9 }
            r0.<init>()     // Catch:{ Exception -> 0x04c9 }
            r11 = r0
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x04c9 }
            r0.<init>()     // Catch:{ Exception -> 0x04c9 }
            r10 = r0
            androidx.collection.LongSparseArray r0 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x04c9 }
            r0.<init>()     // Catch:{ Exception -> 0x04c9 }
            r9 = r0
            androidx.collection.LongSparseArray r0 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x04c9 }
            r0.<init>()     // Catch:{ Exception -> 0x04c9 }
            r6 = r0
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x04c9 }
            r1 = 2
            r0.<init>(r1)     // Catch:{ Exception -> 0x04c9 }
            r5 = r0
            java.lang.Integer r0 = java.lang.Integer.valueOf(r34)     // Catch:{ Exception -> 0x04c9 }
            r5.add(r0)     // Catch:{ Exception -> 0x04c9 }
            r0 = 0
            r2 = r0
        L_0x0053:
            int r0 = r5.size()     // Catch:{ Exception -> 0x04c9 }
            if (r2 >= r0) goto L_0x0373
            java.lang.Object r0 = r5.get(r2)     // Catch:{ Exception -> 0x036c }
            java.lang.Integer r0 = (java.lang.Integer) r0     // Catch:{ Exception -> 0x036c }
            int r0 = r0.intValue()     // Catch:{ Exception -> 0x036c }
            r16 = r0
            if (r2 != 0) goto L_0x0070
            r0 = r35
            r17 = r36
            r18 = r17
            r17 = r0
            goto L_0x0077
        L_0x0070:
            r0 = 0
            r17 = 100
            r18 = r17
            r17 = r0
        L_0x0077:
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x036c }
            java.util.Locale r1 = java.util.Locale.US     // Catch:{ Exception -> 0x036c }
            java.lang.String r4 = "SELECT d.did, d.last_mid, d.unread_count, d.date, m.data, m.read_state, m.mid, m.send_state, s.flags, m.date, d.pts, d.inbox_max, d.outbox_max, m.replydata, d.pinned, d.unread_count_i, d.flags, d.folder_id, d.data, d.unread_reactions FROM dialogs as d LEFT JOIN messages_v2 as m ON d.last_mid = m.mid AND d.did = m.uid LEFT JOIN dialog_settings as s ON d.did = s.did WHERE d.folder_id = %d ORDER BY d.pinned DESC, d.date DESC LIMIT %d,%d"
            r3 = 3
            r22 = r14
            java.lang.Object[] r14 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x0364 }
            java.lang.Integer r23 = java.lang.Integer.valueOf(r16)     // Catch:{ Exception -> 0x0364 }
            r21 = 0
            r14[r21] = r23     // Catch:{ Exception -> 0x0364 }
            java.lang.Integer r23 = java.lang.Integer.valueOf(r17)     // Catch:{ Exception -> 0x0364 }
            r20 = 1
            r14[r20] = r23     // Catch:{ Exception -> 0x0364 }
            java.lang.Integer r23 = java.lang.Integer.valueOf(r18)     // Catch:{ Exception -> 0x0364 }
            r19 = 2
            r14[r19] = r23     // Catch:{ Exception -> 0x0364 }
            java.lang.String r1 = java.lang.String.format(r1, r4, r14)     // Catch:{ Exception -> 0x0364 }
            r4 = 0
            java.lang.Object[] r14 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0364 }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r1, r14)     // Catch:{ Exception -> 0x0364 }
            r1 = r0
        L_0x00a6:
            boolean r0 = r1.next()     // Catch:{ Exception -> 0x0364 }
            if (r0 == 0) goto L_0x0348
            r4 = 0
            long r23 = r1.longValue(r4)     // Catch:{ Exception -> 0x0364 }
            r25 = r23
            boolean r0 = org.telegram.messenger.DialogObject.isFolderDialogId(r25)     // Catch:{ Exception -> 0x0364 }
            if (r0 == 0) goto L_0x0100
            org.telegram.tgnet.TLRPC$TL_dialogFolder r0 = new org.telegram.tgnet.TLRPC$TL_dialogFolder     // Catch:{ Exception -> 0x00f9 }
            r0.<init>()     // Catch:{ Exception -> 0x00f9 }
            r4 = 18
            boolean r14 = r1.isNull(r4)     // Catch:{ Exception -> 0x00f9 }
            if (r14 != 0) goto L_0x00ea
            org.telegram.tgnet.NativeByteBuffer r4 = r1.byteBufferValue(r4)     // Catch:{ Exception -> 0x00f9 }
            if (r4 == 0) goto L_0x00db
            r14 = 0
            int r3 = r4.readInt32(r14)     // Catch:{ Exception -> 0x00f9 }
            org.telegram.tgnet.TLRPC$TL_folder r3 = org.telegram.tgnet.TLRPC.TL_folder.TLdeserialize(r4, r3, r14)     // Catch:{ Exception -> 0x00f9 }
            r0.folder = r3     // Catch:{ Exception -> 0x00f9 }
            r4.reuse()     // Catch:{ Exception -> 0x00f9 }
            goto L_0x00ea
        L_0x00db:
            org.telegram.tgnet.TLRPC$TL_folder r3 = new org.telegram.tgnet.TLRPC$TL_folder     // Catch:{ Exception -> 0x00f9 }
            r3.<init>()     // Catch:{ Exception -> 0x00f9 }
            r0.folder = r3     // Catch:{ Exception -> 0x00f9 }
            org.telegram.tgnet.TLRPC$TL_folder r3 = r0.folder     // Catch:{ Exception -> 0x00f9 }
            int r14 = org.telegram.messenger.DialogObject.getFolderId(r25)     // Catch:{ Exception -> 0x00f9 }
            r3.id = r14     // Catch:{ Exception -> 0x00f9 }
        L_0x00ea:
            r3 = r0
            if (r2 != 0) goto L_0x00f8
            org.telegram.tgnet.TLRPC$TL_folder r4 = r0.folder     // Catch:{ Exception -> 0x00f9 }
            int r4 = r4.id     // Catch:{ Exception -> 0x00f9 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r4)     // Catch:{ Exception -> 0x00f9 }
            r5.add(r4)     // Catch:{ Exception -> 0x00f9 }
        L_0x00f8:
            goto L_0x0106
        L_0x00f9:
            r0 = move-exception
            r4 = r7
            r3 = r15
            r2 = r22
            goto L_0x04cd
        L_0x0100:
            org.telegram.tgnet.TLRPC$TL_dialog r0 = new org.telegram.tgnet.TLRPC$TL_dialog     // Catch:{ Exception -> 0x0364 }
            r0.<init>()     // Catch:{ Exception -> 0x0364 }
            r3 = r0
        L_0x0106:
            r14 = r5
            r4 = r25
            r3.id = r4     // Catch:{ Exception -> 0x0364 }
            r24 = r14
            r14 = 1
            int r0 = r1.intValue(r14)     // Catch:{ Exception -> 0x0364 }
            r3.top_message = r0     // Catch:{ Exception -> 0x0364 }
            r14 = 2
            int r0 = r1.intValue(r14)     // Catch:{ Exception -> 0x0364 }
            r3.unread_count = r0     // Catch:{ Exception -> 0x0364 }
            r14 = 3
            int r0 = r1.intValue(r14)     // Catch:{ Exception -> 0x0364 }
            r3.last_message_date = r0     // Catch:{ Exception -> 0x0364 }
            r0 = 10
            int r0 = r1.intValue(r0)     // Catch:{ Exception -> 0x0364 }
            r3.pts = r0     // Catch:{ Exception -> 0x0364 }
            int r0 = r3.pts     // Catch:{ Exception -> 0x0364 }
            if (r0 == 0) goto L_0x0143
            r23 = r15
            long r14 = r3.id     // Catch:{ Exception -> 0x013b }
            boolean r0 = org.telegram.messenger.DialogObject.isUserDialog(r14)     // Catch:{ Exception -> 0x013b }
            if (r0 == 0) goto L_0x0139
            goto L_0x0145
        L_0x0139:
            r0 = 1
            goto L_0x0146
        L_0x013b:
            r0 = move-exception
            r4 = r7
        L_0x013d:
            r2 = r22
            r3 = r23
            goto L_0x04cd
        L_0x0143:
            r23 = r15
        L_0x0145:
            r0 = 0
        L_0x0146:
            r3.flags = r0     // Catch:{ Exception -> 0x033f }
            r0 = 11
            int r0 = r1.intValue(r0)     // Catch:{ Exception -> 0x033f }
            r3.read_inbox_max_id = r0     // Catch:{ Exception -> 0x033f }
            r0 = 12
            int r0 = r1.intValue(r0)     // Catch:{ Exception -> 0x033f }
            r3.read_outbox_max_id = r0     // Catch:{ Exception -> 0x033f }
            r0 = 14
            int r0 = r1.intValue(r0)     // Catch:{ Exception -> 0x033f }
            r3.pinnedNum = r0     // Catch:{ Exception -> 0x033f }
            int r0 = r3.pinnedNum     // Catch:{ Exception -> 0x033f }
            if (r0 == 0) goto L_0x0166
            r0 = 1
            goto L_0x0167
        L_0x0166:
            r0 = 0
        L_0x0167:
            r3.pinned = r0     // Catch:{ Exception -> 0x033f }
            r0 = 15
            int r0 = r1.intValue(r0)     // Catch:{ Exception -> 0x033f }
            r3.unread_mentions_count = r0     // Catch:{ Exception -> 0x033f }
            r0 = 16
            int r0 = r1.intValue(r0)     // Catch:{ Exception -> 0x033f }
            r14 = r0
            r0 = r14 & 1
            if (r0 == 0) goto L_0x017e
            r0 = 1
            goto L_0x017f
        L_0x017e:
            r0 = 0
        L_0x017f:
            r3.unread_mark = r0     // Catch:{ Exception -> 0x033f }
            r0 = 8
            long r26 = r1.longValue(r0)     // Catch:{ Exception -> 0x033f }
            r28 = r26
            r26 = r14
            r14 = r28
            int r7 = (int) r14     // Catch:{ Exception -> 0x033f }
            org.telegram.tgnet.TLRPC$TL_peerNotifySettings r0 = new org.telegram.tgnet.TLRPC$TL_peerNotifySettings     // Catch:{ Exception -> 0x033f }
            r0.<init>()     // Catch:{ Exception -> 0x033f }
            r3.notify_settings = r0     // Catch:{ Exception -> 0x033f }
            r0 = r7 & 1
            if (r0 == 0) goto L_0x01b8
            org.telegram.tgnet.TLRPC$PeerNotifySettings r0 = r3.notify_settings     // Catch:{ Exception -> 0x01b4 }
            r27 = 32
            r28 = r6
            r29 = r7
            long r6 = r14 >> r27
            int r7 = (int) r6     // Catch:{ Exception -> 0x01b4 }
            r0.mute_until = r7     // Catch:{ Exception -> 0x01b4 }
            org.telegram.tgnet.TLRPC$PeerNotifySettings r0 = r3.notify_settings     // Catch:{ Exception -> 0x01b4 }
            int r0 = r0.mute_until     // Catch:{ Exception -> 0x01b4 }
            if (r0 != 0) goto L_0x01bc
            org.telegram.tgnet.TLRPC$PeerNotifySettings r0 = r3.notify_settings     // Catch:{ Exception -> 0x01b4 }
            r6 = 2147483647(0x7fffffff, float:NaN)
            r0.mute_until = r6     // Catch:{ Exception -> 0x01b4 }
            goto L_0x01bc
        L_0x01b4:
            r0 = move-exception
            r4 = r33
            goto L_0x013d
        L_0x01b8:
            r28 = r6
            r29 = r7
        L_0x01bc:
            r0 = 17
            int r0 = r1.intValue(r0)     // Catch:{ Exception -> 0x033f }
            r3.folder_id = r0     // Catch:{ Exception -> 0x033f }
            r0 = 19
            int r0 = r1.intValue(r0)     // Catch:{ Exception -> 0x033f }
            r3.unread_reactions_count = r0     // Catch:{ Exception -> 0x033f }
            r7 = r23
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r0 = r7.dialogs     // Catch:{ Exception -> 0x0337 }
            r0.add(r3)     // Catch:{ Exception -> 0x0337 }
            if (r8 == 0) goto L_0x01e5
            java.lang.Long r0 = java.lang.Long.valueOf(r4)     // Catch:{ Exception -> 0x01dd }
            r10.add(r0)     // Catch:{ Exception -> 0x01dd }
            goto L_0x01e5
        L_0x01dd:
            r0 = move-exception
            r4 = r33
            r3 = r7
            r2 = r22
            goto L_0x04cd
        L_0x01e5:
            r0 = 4
            org.telegram.tgnet.NativeByteBuffer r0 = r1.byteBufferValue(r0)     // Catch:{ Exception -> 0x0337 }
            r6 = r0
            if (r6 == 0) goto L_0x02d1
            r30 = r14
            r14 = 0
            int r0 = r6.readInt32(r14)     // Catch:{ Exception -> 0x0337 }
            org.telegram.tgnet.TLRPC$Message r0 = org.telegram.tgnet.TLRPC.Message.TLdeserialize(r6, r0, r14)     // Catch:{ Exception -> 0x0337 }
            r14 = r0
            if (r14 == 0) goto L_0x02c6
            org.telegram.messenger.UserConfig r0 = r33.getUserConfig()     // Catch:{ Exception -> 0x0337 }
            r23 = r10
            r15 = r11
            long r10 = r0.clientUserId     // Catch:{ Exception -> 0x0337 }
            r14.readAttachPath(r6, r10)     // Catch:{ Exception -> 0x0337 }
            r6.reuse()     // Catch:{ Exception -> 0x0337 }
            r0 = 5
            int r0 = r1.intValue(r0)     // Catch:{ Exception -> 0x0337 }
            org.telegram.messenger.MessageObject.setUnreadFlags(r14, r0)     // Catch:{ Exception -> 0x0337 }
            r0 = 6
            int r0 = r1.intValue(r0)     // Catch:{ Exception -> 0x0337 }
            r14.id = r0     // Catch:{ Exception -> 0x0337 }
            r0 = 9
            int r0 = r1.intValue(r0)     // Catch:{ Exception -> 0x0337 }
            r10 = r0
            if (r10 == 0) goto L_0x0224
            r3.last_message_date = r10     // Catch:{ Exception -> 0x01dd }
        L_0x0224:
            r0 = 7
            int r0 = r1.intValue(r0)     // Catch:{ Exception -> 0x0337 }
            r14.send_state = r0     // Catch:{ Exception -> 0x0337 }
            r27 = r10
            long r10 = r3.id     // Catch:{ Exception -> 0x0337 }
            r14.dialog_id = r10     // Catch:{ Exception -> 0x0337 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r0 = r7.messages     // Catch:{ Exception -> 0x0337 }
            r0.add(r14)     // Catch:{ Exception -> 0x0337 }
            addUsersAndChatsFromMessage(r14, r13, r12)     // Catch:{ Exception -> 0x0337 }
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r0 = r14.reply_to     // Catch:{ Exception -> 0x02bd }
            if (r0 == 0) goto L_0x02b8
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r0 = r14.reply_to     // Catch:{ Exception -> 0x02bd }
            int r0 = r0.reply_to_msg_id     // Catch:{ Exception -> 0x02bd }
            if (r0 == 0) goto L_0x02b8
            org.telegram.tgnet.TLRPC$MessageAction r0 = r14.action     // Catch:{ Exception -> 0x02bd }
            boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC.TL_messageActionPinMessage     // Catch:{ Exception -> 0x02bd }
            if (r0 != 0) goto L_0x0263
            org.telegram.tgnet.TLRPC$MessageAction r0 = r14.action     // Catch:{ Exception -> 0x025c }
            boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC.TL_messageActionPaymentSent     // Catch:{ Exception -> 0x025c }
            if (r0 != 0) goto L_0x0263
            org.telegram.tgnet.TLRPC$MessageAction r0 = r14.action     // Catch:{ Exception -> 0x025c }
            boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC.TL_messageActionGameScore     // Catch:{ Exception -> 0x025c }
            if (r0 == 0) goto L_0x0256
            goto L_0x0263
        L_0x0256:
            r32 = r7
            r7 = r28
            goto L_0x02bc
        L_0x025c:
            r0 = move-exception
            r32 = r7
            r7 = r28
            goto L_0x02c2
        L_0x0263:
            r0 = 13
            boolean r10 = r1.isNull(r0)     // Catch:{ Exception -> 0x02bd }
            if (r10 != 0) goto L_0x02a3
            org.telegram.tgnet.NativeByteBuffer r0 = r1.byteBufferValue(r0)     // Catch:{ Exception -> 0x029d }
            if (r0 == 0) goto L_0x029a
            r10 = 0
            int r11 = r0.readInt32(r10)     // Catch:{ Exception -> 0x029d }
            org.telegram.tgnet.TLRPC$Message r11 = org.telegram.tgnet.TLRPC.Message.TLdeserialize(r0, r11, r10)     // Catch:{ Exception -> 0x029d }
            r14.replyMessage = r11     // Catch:{ Exception -> 0x029d }
            org.telegram.tgnet.TLRPC$Message r11 = r14.replyMessage     // Catch:{ Exception -> 0x029d }
            org.telegram.messenger.UserConfig r10 = r33.getUserConfig()     // Catch:{ Exception -> 0x029d }
            r32 = r7
            long r7 = r10.clientUserId     // Catch:{ Exception -> 0x0296 }
            r11.readAttachPath(r0, r7)     // Catch:{ Exception -> 0x0296 }
            r0.reuse()     // Catch:{ Exception -> 0x0296 }
            org.telegram.tgnet.TLRPC$Message r7 = r14.replyMessage     // Catch:{ Exception -> 0x0296 }
            if (r7 == 0) goto L_0x02a5
            org.telegram.tgnet.TLRPC$Message r7 = r14.replyMessage     // Catch:{ Exception -> 0x0296 }
            addUsersAndChatsFromMessage(r7, r13, r12)     // Catch:{ Exception -> 0x0296 }
            goto L_0x02a5
        L_0x0296:
            r0 = move-exception
            r7 = r28
            goto L_0x02c2
        L_0x029a:
            r32 = r7
            goto L_0x02a5
        L_0x029d:
            r0 = move-exception
            r32 = r7
            r7 = r28
            goto L_0x02c2
        L_0x02a3:
            r32 = r7
        L_0x02a5:
            org.telegram.tgnet.TLRPC$Message r0 = r14.replyMessage     // Catch:{ Exception -> 0x02b4 }
            if (r0 != 0) goto L_0x02b1
            r7 = r28
            addReplyMessages(r14, r9, r7)     // Catch:{ Exception -> 0x02af }
            goto L_0x02bc
        L_0x02af:
            r0 = move-exception
            goto L_0x02c2
        L_0x02b1:
            r7 = r28
            goto L_0x02bc
        L_0x02b4:
            r0 = move-exception
            r7 = r28
            goto L_0x02c2
        L_0x02b8:
            r32 = r7
            r7 = r28
        L_0x02bc:
            goto L_0x02c5
        L_0x02bd:
            r0 = move-exception
            r32 = r7
            r7 = r28
        L_0x02c2:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ Exception -> 0x044d }
        L_0x02c5:
            goto L_0x02da
        L_0x02c6:
            r32 = r7
            r23 = r10
            r15 = r11
            r7 = r28
            r6.reuse()     // Catch:{ Exception -> 0x044d }
            goto L_0x02da
        L_0x02d1:
            r32 = r7
            r23 = r10
            r30 = r14
            r7 = r28
            r15 = r11
        L_0x02da:
            boolean r0 = org.telegram.messenger.DialogObject.isEncryptedDialog(r4)     // Catch:{ Exception -> 0x044d }
            if (r0 == 0) goto L_0x02f7
            int r0 = org.telegram.messenger.DialogObject.getEncryptedChatId(r4)     // Catch:{ Exception -> 0x044d }
            java.lang.Integer r8 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x044d }
            r11 = r15
            boolean r8 = r11.contains(r8)     // Catch:{ Exception -> 0x044d }
            if (r8 != 0) goto L_0x02f6
            java.lang.Integer r8 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x044d }
            r11.add(r8)     // Catch:{ Exception -> 0x044d }
        L_0x02f6:
            goto L_0x0329
        L_0x02f7:
            r11 = r15
            boolean r0 = org.telegram.messenger.DialogObject.isUserDialog(r4)     // Catch:{ Exception -> 0x044d }
            if (r0 == 0) goto L_0x0310
            java.lang.Long r0 = java.lang.Long.valueOf(r4)     // Catch:{ Exception -> 0x044d }
            boolean r0 = r13.contains(r0)     // Catch:{ Exception -> 0x044d }
            if (r0 != 0) goto L_0x0329
            java.lang.Long r0 = java.lang.Long.valueOf(r4)     // Catch:{ Exception -> 0x044d }
            r13.add(r0)     // Catch:{ Exception -> 0x044d }
            goto L_0x0329
        L_0x0310:
            boolean r0 = org.telegram.messenger.DialogObject.isChatDialog(r4)     // Catch:{ Exception -> 0x044d }
            if (r0 == 0) goto L_0x0329
            long r14 = -r4
            java.lang.Long r0 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x044d }
            boolean r0 = r12.contains(r0)     // Catch:{ Exception -> 0x044d }
            if (r0 != 0) goto L_0x0329
            long r14 = -r4
            java.lang.Long r0 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x044d }
            r12.add(r0)     // Catch:{ Exception -> 0x044d }
        L_0x0329:
            r8 = r37
            r6 = r7
            r10 = r23
            r5 = r24
            r15 = r32
            r3 = 3
            r7 = r33
            goto L_0x00a6
        L_0x0337:
            r0 = move-exception
            r4 = r33
            r3 = r7
            r2 = r22
            goto L_0x04cd
        L_0x033f:
            r0 = move-exception
            r4 = r33
            r2 = r22
            r3 = r23
            goto L_0x04cd
        L_0x0348:
            r24 = r5
            r7 = r6
            r23 = r10
            r32 = r15
            r1.dispose()     // Catch:{ Exception -> 0x044d }
            int r2 = r2 + 1
            r8 = r37
            r6 = r7
            r14 = r22
            r10 = r23
            r5 = r24
            r15 = r32
            r1 = 2
            r7 = r33
            goto L_0x0053
        L_0x0364:
            r0 = move-exception
            r4 = r33
            r3 = r15
            r2 = r22
            goto L_0x04cd
        L_0x036c:
            r0 = move-exception
            r4 = r33
            r2 = r14
            r3 = r15
            goto L_0x04cd
        L_0x0373:
            r24 = r5
            r7 = r6
            r23 = r10
            r22 = r14
            r32 = r15
            r6 = 0
            r1 = r33
            r2 = r9
            r8 = 0
            r3 = r7
            r10 = 1
            r4 = r13
            r19 = r24
            r5 = r12
            r1.loadReplyMessages(r2, r3, r4, r5, r6)     // Catch:{ Exception -> 0x04c1 }
            java.lang.String r0 = ","
            r1 = r37
            if (r1 == 0) goto L_0x0456
            java.util.ArrayList r2 = new java.util.ArrayList     // Catch:{ Exception -> 0x044d }
            r2.<init>()     // Catch:{ Exception -> 0x044d }
            r3 = 0
        L_0x0396:
            int r4 = r1.length     // Catch:{ Exception -> 0x044d }
            if (r3 >= r4) goto L_0x03eb
            r4 = r1[r3]     // Catch:{ Exception -> 0x044d }
            boolean r6 = org.telegram.messenger.DialogObject.isEncryptedDialog(r4)     // Catch:{ Exception -> 0x044d }
            if (r6 == 0) goto L_0x03a4
            r14 = r23
            goto L_0x03e6
        L_0x03a4:
            r14 = 0
            int r6 = (r4 > r14 ? 1 : (r4 == r14 ? 0 : -1))
            if (r6 <= 0) goto L_0x03bc
            java.lang.Long r6 = java.lang.Long.valueOf(r4)     // Catch:{ Exception -> 0x044d }
            boolean r6 = r13.contains(r6)     // Catch:{ Exception -> 0x044d }
            if (r6 != 0) goto L_0x03cf
            java.lang.Long r6 = java.lang.Long.valueOf(r4)     // Catch:{ Exception -> 0x044d }
            r13.add(r6)     // Catch:{ Exception -> 0x044d }
            goto L_0x03cf
        L_0x03bc:
            long r14 = -r4
            java.lang.Long r6 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x044d }
            boolean r6 = r12.contains(r6)     // Catch:{ Exception -> 0x044d }
            if (r6 != 0) goto L_0x03cf
            long r14 = -r4
            java.lang.Long r6 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x044d }
            r12.add(r6)     // Catch:{ Exception -> 0x044d }
        L_0x03cf:
            r14 = r1[r3]     // Catch:{ Exception -> 0x044d }
            java.lang.Long r6 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x044d }
            r14 = r23
            boolean r6 = r14.contains(r6)     // Catch:{ Exception -> 0x044d }
            if (r6 != 0) goto L_0x03e6
            r15 = r1[r3]     // Catch:{ Exception -> 0x044d }
            java.lang.Long r6 = java.lang.Long.valueOf(r15)     // Catch:{ Exception -> 0x044d }
            r2.add(r6)     // Catch:{ Exception -> 0x044d }
        L_0x03e6:
            int r3 = r3 + 1
            r23 = r14
            goto L_0x0396
        L_0x03eb:
            r14 = r23
            boolean r3 = r2.isEmpty()     // Catch:{ Exception -> 0x044d }
            if (r3 != 0) goto L_0x0438
            androidx.collection.LongSparseArray r3 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x044d }
            int r4 = r2.size()     // Catch:{ Exception -> 0x044d }
            r3.<init>(r4)     // Catch:{ Exception -> 0x044d }
            r4 = r33
            org.telegram.SQLite.SQLiteDatabase r5 = r4.database     // Catch:{ Exception -> 0x0446 }
            java.util.Locale r6 = java.util.Locale.US     // Catch:{ Exception -> 0x0446 }
            java.lang.String r15 = "SELECT did, folder_id FROM dialogs WHERE did IN(%s)"
            java.lang.Object[] r8 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x0446 }
            java.lang.String r16 = android.text.TextUtils.join(r0, r2)     // Catch:{ Exception -> 0x0446 }
            r10 = 0
            r8[r10] = r16     // Catch:{ Exception -> 0x0446 }
            java.lang.String r6 = java.lang.String.format(r6, r15, r8)     // Catch:{ Exception -> 0x0446 }
            java.lang.Object[] r8 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x0446 }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r6, r8)     // Catch:{ Exception -> 0x0446 }
        L_0x0417:
            boolean r6 = r5.next()     // Catch:{ Exception -> 0x0446 }
            if (r6 == 0) goto L_0x0433
            r8 = r2
            r6 = 0
            long r1 = r5.longValue(r6)     // Catch:{ Exception -> 0x0446 }
            r10 = 1
            int r15 = r5.intValue(r10)     // Catch:{ Exception -> 0x0446 }
            java.lang.Integer r15 = java.lang.Integer.valueOf(r15)     // Catch:{ Exception -> 0x0446 }
            r3.put(r1, r15)     // Catch:{ Exception -> 0x0446 }
            r1 = r37
            r2 = r8
            goto L_0x0417
        L_0x0433:
            r8 = r2
            r5.dispose()     // Catch:{ Exception -> 0x0446 }
            goto L_0x043d
        L_0x0438:
            r4 = r33
            r8 = r2
            r1 = 0
            r3 = r1
        L_0x043d:
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda17 r1 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda17     // Catch:{ Exception -> 0x0446 }
            r1.<init>(r4, r3)     // Catch:{ Exception -> 0x0446 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r1)     // Catch:{ Exception -> 0x0446 }
            goto L_0x045a
        L_0x0446:
            r0 = move-exception
            r2 = r22
            r3 = r32
            goto L_0x04cd
        L_0x044d:
            r0 = move-exception
            r4 = r33
            r2 = r22
            r3 = r32
            goto L_0x04cd
        L_0x0456:
            r4 = r33
            r14 = r23
        L_0x045a:
            boolean r1 = r11.isEmpty()     // Catch:{ Exception -> 0x04bf }
            if (r1 != 0) goto L_0x0476
            java.lang.String r1 = android.text.TextUtils.join(r0, r11)     // Catch:{ Exception -> 0x046f }
            r2 = r22
            r4.getEncryptedChatsInternal(r1, r2, r13)     // Catch:{ Exception -> 0x046a }
            goto L_0x0478
        L_0x046a:
            r0 = move-exception
            r3 = r32
            goto L_0x04cd
        L_0x046f:
            r0 = move-exception
            r2 = r22
            r3 = r32
            goto L_0x04cd
        L_0x0476:
            r2 = r22
        L_0x0478:
            boolean r1 = r12.isEmpty()     // Catch:{ Exception -> 0x04bb }
            if (r1 != 0) goto L_0x048a
            java.lang.String r1 = android.text.TextUtils.join(r0, r12)     // Catch:{ Exception -> 0x04bb }
            r3 = r32
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r5 = r3.chats     // Catch:{ Exception -> 0x04b9 }
            r4.getChatsInternal(r1, r5)     // Catch:{ Exception -> 0x04b9 }
            goto L_0x048c
        L_0x048a:
            r3 = r32
        L_0x048c:
            boolean r1 = r13.isEmpty()     // Catch:{ Exception -> 0x04b9 }
            if (r1 != 0) goto L_0x049b
            java.lang.String r0 = android.text.TextUtils.join(r0, r13)     // Catch:{ Exception -> 0x04b9 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r1 = r3.users     // Catch:{ Exception -> 0x04b9 }
            r4.getUsersInternal(r0, r1)     // Catch:{ Exception -> 0x04b9 }
        L_0x049b:
            org.telegram.messenger.MessagesController r0 = r33.getMessagesController()     // Catch:{ Exception -> 0x04b9 }
            r15 = 1
            r16 = 0
            r17 = 0
            r18 = 1
            r1 = r9
            r9 = r0
            r5 = r14
            r10 = r3
            r6 = r11
            r11 = r2
            r8 = r12
            r12 = r34
            r20 = r13
            r13 = r35
            r14 = r36
            r9.processLoadedDialogs(r10, r11, r12, r13, r14, r15, r16, r17, r18)     // Catch:{ Exception -> 0x04b9 }
            goto L_0x04f7
        L_0x04b9:
            r0 = move-exception
            goto L_0x04cd
        L_0x04bb:
            r0 = move-exception
            r3 = r32
            goto L_0x04cd
        L_0x04bf:
            r0 = move-exception
            goto L_0x04c4
        L_0x04c1:
            r0 = move-exception
            r4 = r33
        L_0x04c4:
            r2 = r22
            r3 = r32
            goto L_0x04cd
        L_0x04c9:
            r0 = move-exception
            r4 = r7
            r2 = r14
            r3 = r15
        L_0x04cd:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r1 = r3.dialogs
            r1.clear()
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r1 = r3.users
            r1.clear()
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r1 = r3.chats
            r1.clear()
            r2.clear()
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
            org.telegram.messenger.MessagesController r9 = r33.getMessagesController()
            r13 = 0
            r14 = 100
            r15 = 1
            r16 = 1
            r17 = 0
            r18 = 1
            r10 = r3
            r11 = r2
            r12 = r34
            r9.processLoadedDialogs(r10, r11, r12, r13, r14, r15, r16, r17, r18)
        L_0x04f7:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.m893lambda$getDialogs$175$orgtelegrammessengerMessagesStorage(int, int, int, long[]):void");
    }

    /* renamed from: lambda$getDialogs$174$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m892lambda$getDialogs$174$orgtelegrammessengerMessagesStorage(LongSparseArray folderIds) {
        MediaDataController mediaDataController = getMediaDataController();
        mediaDataController.clearDraftsFolderIds();
        if (folderIds != null) {
            int size = folderIds.size();
            for (int i = 0; i < size; i++) {
                mediaDataController.setDraftFolderId(folderIds.keyAt(i), ((Integer) folderIds.valueAt(i)).intValue());
            }
        }
    }

    public static void createFirstHoles(long did, SQLitePreparedStatement state5, SQLitePreparedStatement state6, int messageId) throws Exception {
        state5.requery();
        state5.bindLong(1, did);
        state5.bindInteger(2, messageId == 1 ? 1 : 0);
        state5.bindInteger(3, messageId);
        state5.step();
        for (int b = 0; b < 8; b++) {
            state6.requery();
            state6.bindLong(1, did);
            state6.bindInteger(2, b);
            state6.bindInteger(3, messageId == 1 ? 1 : 0);
            state6.bindInteger(4, messageId);
            state6.step();
        }
    }

    /* JADX WARNING: Code restructure failed: missing block: B:35:0x0139, code lost:
        if (r6 < 0) goto L_0x013c;
     */
    /* JADX WARNING: Removed duplicated region for block: B:102:0x025f A[Catch:{ Exception -> 0x034f }] */
    /* JADX WARNING: Removed duplicated region for block: B:103:0x0287 A[Catch:{ Exception -> 0x034f }] */
    /* JADX WARNING: Removed duplicated region for block: B:105:0x028c A[Catch:{ Exception -> 0x034f }] */
    /* JADX WARNING: Removed duplicated region for block: B:110:0x029a A[Catch:{ Exception -> 0x034f }] */
    /* JADX WARNING: Removed duplicated region for block: B:113:0x02d3 A[Catch:{ Exception -> 0x034f }] */
    /* JADX WARNING: Removed duplicated region for block: B:116:0x02dd A[Catch:{ Exception -> 0x034f }] */
    /* JADX WARNING: Removed duplicated region for block: B:119:0x030b A[Catch:{ Exception -> 0x034f }] */
    /* JADX WARNING: Removed duplicated region for block: B:121:0x0311 A[Catch:{ Exception -> 0x034f }] */
    /* JADX WARNING: Removed duplicated region for block: B:122:0x033b A[Catch:{ Exception -> 0x034f }] */
    /* JADX WARNING: Removed duplicated region for block: B:126:0x0355  */
    /* JADX WARNING: Removed duplicated region for block: B:130:0x03ae A[Catch:{ Exception -> 0x0457 }] */
    /* JADX WARNING: Removed duplicated region for block: B:133:0x03c0 A[Catch:{ Exception -> 0x0457 }] */
    /* JADX WARNING: Removed duplicated region for block: B:134:0x03d9 A[Catch:{ Exception -> 0x0457 }] */
    /* JADX WARNING: Removed duplicated region for block: B:137:0x03eb A[Catch:{ Exception -> 0x0457 }] */
    /* JADX WARNING: Removed duplicated region for block: B:140:0x03f2 A[Catch:{ Exception -> 0x0457 }] */
    /* JADX WARNING: Removed duplicated region for block: B:145:0x040f A[Catch:{ Exception -> 0x0457 }] */
    /* JADX WARNING: Removed duplicated region for block: B:43:0x0156 A[SYNTHETIC, Splitter:B:43:0x0156] */
    /* JADX WARNING: Removed duplicated region for block: B:64:0x01cf A[SYNTHETIC, Splitter:B:64:0x01cf] */
    /* JADX WARNING: Removed duplicated region for block: B:66:0x01d2  */
    /* JADX WARNING: Removed duplicated region for block: B:71:0x01dd A[Catch:{ Exception -> 0x034f }] */
    /* JADX WARNING: Removed duplicated region for block: B:72:0x01e1 A[Catch:{ Exception -> 0x034f }] */
    /* JADX WARNING: Removed duplicated region for block: B:78:0x01f4 A[Catch:{ Exception -> 0x034f }] */
    /* JADX WARNING: Removed duplicated region for block: B:79:0x01f6 A[Catch:{ Exception -> 0x034f }] */
    /* JADX WARNING: Removed duplicated region for block: B:82:0x0208 A[SYNTHETIC, Splitter:B:82:0x0208] */
    /* JADX WARNING: Removed duplicated region for block: B:85:0x0223  */
    /* JADX WARNING: Removed duplicated region for block: B:90:0x022e A[SYNTHETIC, Splitter:B:90:0x022e] */
    /* JADX WARNING: Removed duplicated region for block: B:97:0x0245  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void putDialogsInternal(org.telegram.tgnet.TLRPC.messages_Dialogs r31, int r32) {
        /*
            r30 = this;
            r7 = r30
            r8 = r31
            r9 = r32
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x047d }
            r0.beginTransaction()     // Catch:{ Exception -> 0x047d }
            androidx.collection.LongSparseArray r0 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x047d }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r8.messages     // Catch:{ Exception -> 0x047d }
            int r1 = r1.size()     // Catch:{ Exception -> 0x047d }
            r0.<init>(r1)     // Catch:{ Exception -> 0x047d }
            r1 = 0
        L_0x0017:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r2 = r8.messages     // Catch:{ Exception -> 0x047d }
            int r2 = r2.size()     // Catch:{ Exception -> 0x047d }
            if (r1 >= r2) goto L_0x0031
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r2 = r8.messages     // Catch:{ Exception -> 0x047d }
            java.lang.Object r2 = r2.get(r1)     // Catch:{ Exception -> 0x047d }
            org.telegram.tgnet.TLRPC$Message r2 = (org.telegram.tgnet.TLRPC.Message) r2     // Catch:{ Exception -> 0x047d }
            long r3 = org.telegram.messenger.MessageObject.getDialogId(r2)     // Catch:{ Exception -> 0x047d }
            r0.put(r3, r2)     // Catch:{ Exception -> 0x047d }
            int r1 = r1 + 1
            goto L_0x0017
        L_0x0031:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r1 = r8.dialogs     // Catch:{ Exception -> 0x047d }
            boolean r1 = r1.isEmpty()     // Catch:{ Exception -> 0x047d }
            if (r1 != 0) goto L_0x045d
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0457 }
            java.lang.String r2 = "REPLACE INTO messages_v2 VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?, ?, ?, ?, ?, ?, 0)"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0457 }
            r11 = r1
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0457 }
            java.lang.String r2 = "REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0457 }
            r12 = r1
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0457 }
            java.lang.String r2 = "REPLACE INTO media_v4 VALUES(?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0457 }
            r13 = r1
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0457 }
            java.lang.String r2 = "REPLACE INTO dialog_settings VALUES(?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0457 }
            r14 = r1
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0457 }
            java.lang.String r2 = "REPLACE INTO messages_holes VALUES(?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0457 }
            r15 = r1
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0457 }
            java.lang.String r2 = "REPLACE INTO media_holes_v2 VALUES(?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0457 }
            r6 = r1
            r1 = 0
            r2 = 0
            r3 = 2147483647(0x7fffffff, float:NaN)
            r4 = 0
            r5 = r4
        L_0x0076:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r4 = r8.dialogs     // Catch:{ Exception -> 0x0457 }
            int r4 = r4.size()     // Catch:{ Exception -> 0x0457 }
            r16 = r11
            if (r5 >= r4) goto L_0x0427
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r4 = r8.dialogs     // Catch:{ Exception -> 0x0457 }
            java.lang.Object r4 = r4.get(r5)     // Catch:{ Exception -> 0x0457 }
            org.telegram.tgnet.TLRPC$Dialog r4 = (org.telegram.tgnet.TLRPC.Dialog) r4     // Catch:{ Exception -> 0x0457 }
            r17 = 0
            org.telegram.messenger.DialogObject.initDialog(r4)     // Catch:{ Exception -> 0x0457 }
            androidx.collection.LongSparseArray<java.lang.Boolean> r10 = r7.unknownDialogsIds     // Catch:{ Exception -> 0x0457 }
            r18 = r5
            r11 = r6
            long r5 = r4.id     // Catch:{ Exception -> 0x0457 }
            r10.remove(r5)     // Catch:{ Exception -> 0x0457 }
            r5 = 1
            if (r9 != r5) goto L_0x00ca
            org.telegram.SQLite.SQLiteDatabase r5 = r7.database     // Catch:{ Exception -> 0x047d }
            java.lang.StringBuilder r10 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x047d }
            r10.<init>()     // Catch:{ Exception -> 0x047d }
            java.lang.String r6 = "SELECT did FROM dialogs WHERE did = "
            r10.append(r6)     // Catch:{ Exception -> 0x047d }
            r6 = r11
            r21 = r12
            long r11 = r4.id     // Catch:{ Exception -> 0x047d }
            r10.append(r11)     // Catch:{ Exception -> 0x047d }
            java.lang.String r10 = r10.toString()     // Catch:{ Exception -> 0x047d }
            r11 = 0
            java.lang.Object[] r12 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x047d }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r10, r12)     // Catch:{ Exception -> 0x047d }
            boolean r10 = r5.next()     // Catch:{ Exception -> 0x047d }
            r17 = r10
            r5.dispose()     // Catch:{ Exception -> 0x047d }
            if (r17 == 0) goto L_0x00c7
            r12 = r6
            goto L_0x013c
        L_0x00c7:
            r12 = r6
            goto L_0x014a
        L_0x00ca:
            r6 = r11
            r21 = r12
            r5 = 2
            if (r9 != r5) goto L_0x0104
            org.telegram.SQLite.SQLiteDatabase r5 = r7.database     // Catch:{ Exception -> 0x047d }
            java.lang.StringBuilder r10 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x047d }
            r10.<init>()     // Catch:{ Exception -> 0x047d }
            java.lang.String r11 = "SELECT pinned FROM dialogs WHERE did = "
            r10.append(r11)     // Catch:{ Exception -> 0x047d }
            long r11 = r4.id     // Catch:{ Exception -> 0x047d }
            r10.append(r11)     // Catch:{ Exception -> 0x047d }
            java.lang.String r10 = r10.toString()     // Catch:{ Exception -> 0x047d }
            r11 = 0
            java.lang.Object[] r12 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x047d }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r10, r12)     // Catch:{ Exception -> 0x047d }
            boolean r10 = r5.next()     // Catch:{ Exception -> 0x047d }
            if (r10 == 0) goto L_0x00ff
            r17 = 1
            boolean r10 = r4.pinned     // Catch:{ Exception -> 0x047d }
            if (r10 == 0) goto L_0x00ff
            r10 = 0
            int r11 = r5.intValue(r10)     // Catch:{ Exception -> 0x047d }
            r4.pinnedNum = r11     // Catch:{ Exception -> 0x047d }
        L_0x00ff:
            r5.dispose()     // Catch:{ Exception -> 0x047d }
            r12 = r6
            goto L_0x014a
        L_0x0104:
            r5 = 3
            if (r9 != r5) goto L_0x0149
            r5 = 0
            org.telegram.SQLite.SQLiteDatabase r10 = r7.database     // Catch:{ Exception -> 0x047d }
            java.lang.StringBuilder r11 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x047d }
            r11.<init>()     // Catch:{ Exception -> 0x047d }
            java.lang.String r12 = "SELECT last_mid FROM dialogs WHERE did = "
            r11.append(r12)     // Catch:{ Exception -> 0x047d }
            r22 = r5
            r12 = r6
            long r5 = r4.id     // Catch:{ Exception -> 0x047d }
            r11.append(r5)     // Catch:{ Exception -> 0x047d }
            java.lang.String r5 = r11.toString()     // Catch:{ Exception -> 0x047d }
            r6 = 0
            java.lang.Object[] r11 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x047d }
            org.telegram.SQLite.SQLiteCursor r5 = r10.queryFinalized(r5, r11)     // Catch:{ Exception -> 0x047d }
            boolean r6 = r5.next()     // Catch:{ Exception -> 0x047d }
            if (r6 == 0) goto L_0x0134
            r6 = 0
            int r10 = r5.intValue(r6)     // Catch:{ Exception -> 0x047d }
            r6 = r10
            goto L_0x0136
        L_0x0134:
            r6 = r22
        L_0x0136:
            r5.dispose()     // Catch:{ Exception -> 0x047d }
            if (r6 >= 0) goto L_0x014a
        L_0x013c:
            r24 = r0
            r0 = r16
            r11 = r21
            r29 = r13
            r13 = r12
            r12 = r29
            goto L_0x0417
        L_0x0149:
            r12 = r6
        L_0x014a:
            r5 = 0
            long r10 = r4.id     // Catch:{ Exception -> 0x0457 }
            java.lang.Object r6 = r0.get(r10)     // Catch:{ Exception -> 0x0457 }
            org.telegram.tgnet.TLRPC$Message r6 = (org.telegram.tgnet.TLRPC.Message) r6     // Catch:{ Exception -> 0x0457 }
            r10 = r6
            if (r10 == 0) goto L_0x0355
            int r11 = r10.date     // Catch:{ Exception -> 0x034f }
            int r11 = java.lang.Math.max(r11, r5)     // Catch:{ Exception -> 0x034f }
            boolean r5 = r7.isValidKeyboardToSave(r10)     // Catch:{ Exception -> 0x034f }
            if (r5 == 0) goto L_0x0171
            org.telegram.messenger.MediaDataController r5 = r30.getMediaDataController()     // Catch:{ Exception -> 0x016c }
            long r6 = r4.id     // Catch:{ Exception -> 0x016c }
            r5.putBotKeyboard(r6, r10)     // Catch:{ Exception -> 0x016c }
            goto L_0x0171
        L_0x016c:
            r0 = move-exception
            r2 = r30
            goto L_0x047f
        L_0x0171:
            r7 = r30
            r7.fixUnsupportedMedia(r10)     // Catch:{ Exception -> 0x034f }
            org.telegram.tgnet.NativeByteBuffer r5 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x034f }
            int r6 = r10.getObjectSize()     // Catch:{ Exception -> 0x034f }
            r5.<init>((int) r6)     // Catch:{ Exception -> 0x034f }
            r6 = r5
            r10.serializeToStream(r6)     // Catch:{ Exception -> 0x034f }
            r16.requery()     // Catch:{ Exception -> 0x034f }
            int r5 = r10.id     // Catch:{ Exception -> 0x034f }
            r24 = r0
            r0 = r16
            r9 = 1
            r0.bindInteger(r9, r5)     // Catch:{ Exception -> 0x034f }
            r16 = r11
            r9 = r12
            long r11 = r4.id     // Catch:{ Exception -> 0x034f }
            r5 = 2
            r0.bindLong(r5, r11)     // Catch:{ Exception -> 0x034f }
            int r5 = org.telegram.messenger.MessageObject.getUnreadFlags(r10)     // Catch:{ Exception -> 0x034f }
            r11 = 3
            r0.bindInteger(r11, r5)     // Catch:{ Exception -> 0x034f }
            int r5 = r10.send_state     // Catch:{ Exception -> 0x034f }
            r11 = 4
            r0.bindInteger(r11, r5)     // Catch:{ Exception -> 0x034f }
            int r5 = r10.date     // Catch:{ Exception -> 0x034f }
            r11 = 5
            r0.bindInteger(r11, r5)     // Catch:{ Exception -> 0x034f }
            r11 = 6
            r0.bindByteBuffer((int) r11, (org.telegram.tgnet.NativeByteBuffer) r6)     // Catch:{ Exception -> 0x034f }
            boolean r5 = org.telegram.messenger.MessageObject.isOut(r10)     // Catch:{ Exception -> 0x034f }
            if (r5 != 0) goto L_0x01be
            boolean r5 = r10.from_scheduled     // Catch:{ Exception -> 0x047d }
            if (r5 == 0) goto L_0x01bc
            goto L_0x01be
        L_0x01bc:
            r5 = 0
            goto L_0x01bf
        L_0x01be:
            r5 = 1
        L_0x01bf:
            r12 = 7
            r0.bindInteger(r12, r5)     // Catch:{ Exception -> 0x034f }
            r5 = 0
            r12 = 8
            r0.bindInteger(r12, r5)     // Catch:{ Exception -> 0x034f }
            int r5 = r10.flags     // Catch:{ Exception -> 0x034f }
            r5 = r5 & 1024(0x400, float:1.435E-42)
            if (r5 == 0) goto L_0x01d2
            int r5 = r10.views     // Catch:{ Exception -> 0x047d }
            goto L_0x01d3
        L_0x01d2:
            r5 = 0
        L_0x01d3:
            r11 = 9
            r0.bindInteger(r11, r5)     // Catch:{ Exception -> 0x034f }
            r5 = 0
            int r11 = r10.stickerVerified     // Catch:{ Exception -> 0x034f }
            if (r11 != 0) goto L_0x01e1
            r5 = r5 | 1
            r11 = r5
            goto L_0x01eb
        L_0x01e1:
            int r11 = r10.stickerVerified     // Catch:{ Exception -> 0x034f }
            r12 = 2
            if (r11 != r12) goto L_0x01ea
            r5 = r5 | 2
            r11 = r5
            goto L_0x01eb
        L_0x01ea:
            r11 = r5
        L_0x01eb:
            r12 = 10
            r0.bindInteger(r12, r11)     // Catch:{ Exception -> 0x034f }
            boolean r5 = r10.mentioned     // Catch:{ Exception -> 0x034f }
            if (r5 == 0) goto L_0x01f6
            r5 = 1
            goto L_0x01f7
        L_0x01f6:
            r5 = 0
        L_0x01f7:
            r12 = 11
            r0.bindInteger(r12, r5)     // Catch:{ Exception -> 0x034f }
            int r5 = r10.forwards     // Catch:{ Exception -> 0x034f }
            r12 = 12
            r0.bindInteger(r12, r5)     // Catch:{ Exception -> 0x034f }
            r5 = 0
            org.telegram.tgnet.TLRPC$MessageReplies r12 = r10.replies     // Catch:{ Exception -> 0x034f }
            if (r12 == 0) goto L_0x0223
            org.telegram.tgnet.NativeByteBuffer r12 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x047d }
            r25 = r5
            org.telegram.tgnet.TLRPC$MessageReplies r5 = r10.replies     // Catch:{ Exception -> 0x047d }
            int r5 = r5.getObjectSize()     // Catch:{ Exception -> 0x047d }
            r12.<init>((int) r5)     // Catch:{ Exception -> 0x047d }
            r5 = r12
            org.telegram.tgnet.TLRPC$MessageReplies r12 = r10.replies     // Catch:{ Exception -> 0x047d }
            r12.serializeToStream(r5)     // Catch:{ Exception -> 0x047d }
            r12 = 13
            r0.bindByteBuffer((int) r12, (org.telegram.tgnet.NativeByteBuffer) r5)     // Catch:{ Exception -> 0x047d }
            r25 = r5
            goto L_0x022a
        L_0x0223:
            r25 = r5
            r5 = 13
            r0.bindNull(r5)     // Catch:{ Exception -> 0x034f }
        L_0x022a:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r5 = r10.reply_to     // Catch:{ Exception -> 0x034f }
            if (r5 == 0) goto L_0x0245
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r5 = r10.reply_to     // Catch:{ Exception -> 0x047d }
            int r5 = r5.reply_to_top_id     // Catch:{ Exception -> 0x047d }
            if (r5 == 0) goto L_0x0239
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r5 = r10.reply_to     // Catch:{ Exception -> 0x047d }
            int r5 = r5.reply_to_top_id     // Catch:{ Exception -> 0x047d }
            goto L_0x023d
        L_0x0239:
            org.telegram.tgnet.TLRPC$TL_messageReplyHeader r5 = r10.reply_to     // Catch:{ Exception -> 0x047d }
            int r5 = r5.reply_to_msg_id     // Catch:{ Exception -> 0x047d }
        L_0x023d:
            r12 = 14
            r0.bindInteger(r12, r5)     // Catch:{ Exception -> 0x047d }
            r12 = 14
            goto L_0x024b
        L_0x0245:
            r5 = 0
            r12 = 14
            r0.bindInteger(r12, r5)     // Catch:{ Exception -> 0x034f }
        L_0x024b:
            r23 = r13
            long r12 = org.telegram.messenger.MessageObject.getChannelId(r10)     // Catch:{ Exception -> 0x034f }
            r5 = 15
            r0.bindLong(r5, r12)     // Catch:{ Exception -> 0x034f }
            r0.step()     // Catch:{ Exception -> 0x034f }
            boolean r5 = org.telegram.messenger.MediaDataController.canAddMessageToMedia(r10)     // Catch:{ Exception -> 0x034f }
            if (r5 == 0) goto L_0x0287
            r23.requery()     // Catch:{ Exception -> 0x034f }
            int r5 = r10.id     // Catch:{ Exception -> 0x034f }
            r12 = r23
            r13 = 1
            r12.bindInteger(r13, r5)     // Catch:{ Exception -> 0x034f }
            r13 = r9
            long r8 = r4.id     // Catch:{ Exception -> 0x034f }
            r5 = 2
            r12.bindLong(r5, r8)     // Catch:{ Exception -> 0x034f }
            int r5 = r10.date     // Catch:{ Exception -> 0x034f }
            r8 = 3
            r12.bindInteger(r8, r5)     // Catch:{ Exception -> 0x034f }
            int r5 = org.telegram.messenger.MediaDataController.getMediaType(r10)     // Catch:{ Exception -> 0x034f }
            r8 = 4
            r12.bindInteger(r8, r5)     // Catch:{ Exception -> 0x034f }
            r5 = 5
            r12.bindByteBuffer((int) r5, (org.telegram.tgnet.NativeByteBuffer) r6)     // Catch:{ Exception -> 0x034f }
            r12.step()     // Catch:{ Exception -> 0x034f }
            goto L_0x028a
        L_0x0287:
            r13 = r9
            r12 = r23
        L_0x028a:
            if (r25 == 0) goto L_0x028f
            r25.reuse()     // Catch:{ Exception -> 0x034f }
        L_0x028f:
            r6.reuse()     // Catch:{ Exception -> 0x034f }
            int r5 = r10.ttl_period     // Catch:{ Exception -> 0x034f }
            if (r5 == 0) goto L_0x02d3
            int r5 = r10.id     // Catch:{ Exception -> 0x034f }
            if (r5 <= 0) goto L_0x02d3
            if (r2 != 0) goto L_0x02a5
            org.telegram.SQLite.SQLiteDatabase r5 = r7.database     // Catch:{ Exception -> 0x034f }
            java.lang.String r8 = "REPLACE INTO enc_tasks_v4 VALUES(?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r5 = r5.executeFast(r8)     // Catch:{ Exception -> 0x034f }
            r2 = r5
        L_0x02a5:
            r2.requery()     // Catch:{ Exception -> 0x034f }
            int r5 = r10.id     // Catch:{ Exception -> 0x034f }
            r8 = 1
            r2.bindInteger(r8, r5)     // Catch:{ Exception -> 0x034f }
            long r8 = r10.dialog_id     // Catch:{ Exception -> 0x034f }
            r5 = 2
            r2.bindLong(r5, r8)     // Catch:{ Exception -> 0x034f }
            int r5 = r10.date     // Catch:{ Exception -> 0x034f }
            int r8 = r10.ttl_period     // Catch:{ Exception -> 0x034f }
            int r5 = r5 + r8
            r8 = 3
            r2.bindInteger(r8, r5)     // Catch:{ Exception -> 0x034f }
            r5 = 0
            r8 = 4
            r2.bindInteger(r8, r5)     // Catch:{ Exception -> 0x034f }
            r2.step()     // Catch:{ Exception -> 0x034f }
            int r5 = r10.date     // Catch:{ Exception -> 0x034f }
            int r9 = r10.ttl_period     // Catch:{ Exception -> 0x034f }
            int r5 = r5 + r9
            int r5 = java.lang.Math.min(r3, r5)     // Catch:{ Exception -> 0x034f }
            r3 = r5
            r9 = r2
            r23 = r3
            goto L_0x02d7
        L_0x02d3:
            r8 = 4
            r9 = r2
            r23 = r3
        L_0x02d7:
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r10.media     // Catch:{ Exception -> 0x034f }
            boolean r2 = r2 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaPoll     // Catch:{ Exception -> 0x034f }
            if (r2 == 0) goto L_0x030b
            if (r1 != 0) goto L_0x02e8
            org.telegram.SQLite.SQLiteDatabase r2 = r7.database     // Catch:{ Exception -> 0x034f }
            java.lang.String r3 = "REPLACE INTO polls_v2 VALUES(?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r3)     // Catch:{ Exception -> 0x034f }
            r1 = r2
        L_0x02e8:
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r10.media     // Catch:{ Exception -> 0x034f }
            org.telegram.tgnet.TLRPC$TL_messageMediaPoll r2 = (org.telegram.tgnet.TLRPC.TL_messageMediaPoll) r2     // Catch:{ Exception -> 0x034f }
            r1.requery()     // Catch:{ Exception -> 0x034f }
            int r3 = r10.id     // Catch:{ Exception -> 0x034f }
            r5 = 1
            r1.bindInteger(r5, r3)     // Catch:{ Exception -> 0x034f }
            r19 = r6
            long r5 = r10.dialog_id     // Catch:{ Exception -> 0x034f }
            r3 = 2
            r1.bindLong(r3, r5)     // Catch:{ Exception -> 0x034f }
            org.telegram.tgnet.TLRPC$Poll r5 = r2.poll     // Catch:{ Exception -> 0x034f }
            long r5 = r5.id     // Catch:{ Exception -> 0x034f }
            r3 = 3
            r1.bindLong(r3, r5)     // Catch:{ Exception -> 0x034f }
            r1.step()     // Catch:{ Exception -> 0x034f }
            r26 = r1
            goto L_0x030f
        L_0x030b:
            r19 = r6
            r26 = r1
        L_0x030f:
            if (r17 == 0) goto L_0x033b
            java.lang.String r2 = "messages_holes"
            long r5 = r4.id     // Catch:{ Exception -> 0x034f }
            int r3 = r10.id     // Catch:{ Exception -> 0x034f }
            int r1 = r10.id     // Catch:{ Exception -> 0x034f }
            r27 = r1
            r1 = r30
            r20 = r3
            r8 = r4
            r28 = 2
            r3 = r5
            r6 = 1
            r5 = r20
            r20 = r9
            r9 = 1
            r6 = r27
            r1.closeHolesInTable(r2, r3, r5, r6)     // Catch:{ Exception -> 0x034f }
            long r2 = r8.id     // Catch:{ Exception -> 0x034f }
            int r4 = r10.id     // Catch:{ Exception -> 0x034f }
            int r5 = r10.id     // Catch:{ Exception -> 0x034f }
            r6 = -1
            r1 = r30
            r1.closeHolesInMedia(r2, r4, r5, r6)     // Catch:{ Exception -> 0x034f }
            goto L_0x0346
        L_0x033b:
            r8 = r4
            r20 = r9
            r9 = 1
            long r1 = r8.id     // Catch:{ Exception -> 0x034f }
            int r3 = r10.id     // Catch:{ Exception -> 0x034f }
            createFirstHoles(r1, r15, r13, r3)     // Catch:{ Exception -> 0x034f }
        L_0x0346:
            r5 = r16
            r2 = r20
            r3 = r23
            r1 = r26
            goto L_0x0360
        L_0x034f:
            r0 = move-exception
            r1 = r31
            r2 = r7
            goto L_0x0480
        L_0x0355:
            r24 = r0
            r8 = r4
            r0 = r16
            r9 = 1
            r29 = r13
            r13 = r12
            r12 = r29
        L_0x0360:
            r21.requery()     // Catch:{ Exception -> 0x0457 }
            r4 = r10
            long r9 = r8.id     // Catch:{ Exception -> 0x0457 }
            r11 = r21
            r6 = 1
            r11.bindLong(r6, r9)     // Catch:{ Exception -> 0x0457 }
            r9 = 2
            r11.bindInteger(r9, r5)     // Catch:{ Exception -> 0x0457 }
            int r9 = r8.unread_count     // Catch:{ Exception -> 0x0457 }
            r10 = 3
            r11.bindInteger(r10, r9)     // Catch:{ Exception -> 0x0457 }
            int r9 = r8.top_message     // Catch:{ Exception -> 0x0457 }
            r10 = 4
            r11.bindInteger(r10, r9)     // Catch:{ Exception -> 0x0457 }
            int r9 = r8.read_inbox_max_id     // Catch:{ Exception -> 0x0457 }
            r10 = 5
            r11.bindInteger(r10, r9)     // Catch:{ Exception -> 0x0457 }
            int r9 = r8.read_outbox_max_id     // Catch:{ Exception -> 0x0457 }
            r10 = 6
            r11.bindInteger(r10, r9)     // Catch:{ Exception -> 0x0457 }
            r6 = 0
            r9 = 7
            r11.bindLong(r9, r6)     // Catch:{ Exception -> 0x0457 }
            int r6 = r8.unread_mentions_count     // Catch:{ Exception -> 0x0457 }
            r7 = 8
            r11.bindInteger(r7, r6)     // Catch:{ Exception -> 0x0457 }
            int r6 = r8.pts     // Catch:{ Exception -> 0x0457 }
            r7 = 9
            r11.bindInteger(r7, r6)     // Catch:{ Exception -> 0x0457 }
            r6 = 10
            r7 = 0
            r11.bindInteger(r6, r7)     // Catch:{ Exception -> 0x0457 }
            int r6 = r8.pinnedNum     // Catch:{ Exception -> 0x0457 }
            r7 = 11
            r11.bindInteger(r7, r6)     // Catch:{ Exception -> 0x0457 }
            r6 = 0
            boolean r7 = r8.unread_mark     // Catch:{ Exception -> 0x0457 }
            if (r7 == 0) goto L_0x03b0
            r6 = r6 | 1
        L_0x03b0:
            r7 = 12
            r11.bindInteger(r7, r6)     // Catch:{ Exception -> 0x0457 }
            int r7 = r8.folder_id     // Catch:{ Exception -> 0x0457 }
            r9 = 13
            r11.bindInteger(r9, r7)     // Catch:{ Exception -> 0x0457 }
            boolean r7 = r8 instanceof org.telegram.tgnet.TLRPC.TL_dialogFolder     // Catch:{ Exception -> 0x0457 }
            if (r7 == 0) goto L_0x03d9
            r7 = r8
            org.telegram.tgnet.TLRPC$TL_dialogFolder r7 = (org.telegram.tgnet.TLRPC.TL_dialogFolder) r7     // Catch:{ Exception -> 0x0457 }
            org.telegram.tgnet.NativeByteBuffer r9 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0457 }
            org.telegram.tgnet.TLRPC$TL_folder r10 = r7.folder     // Catch:{ Exception -> 0x0457 }
            int r10 = r10.getObjectSize()     // Catch:{ Exception -> 0x0457 }
            r9.<init>((int) r10)     // Catch:{ Exception -> 0x0457 }
            org.telegram.tgnet.TLRPC$TL_folder r10 = r7.folder     // Catch:{ Exception -> 0x0457 }
            r10.serializeToStream(r9)     // Catch:{ Exception -> 0x0457 }
            r10 = 14
            r11.bindByteBuffer((int) r10, (org.telegram.tgnet.NativeByteBuffer) r9)     // Catch:{ Exception -> 0x0457 }
            goto L_0x03df
        L_0x03d9:
            r10 = 14
            r9 = 0
            r11.bindNull(r10)     // Catch:{ Exception -> 0x0457 }
        L_0x03df:
            int r7 = r8.unread_reactions_count     // Catch:{ Exception -> 0x0457 }
            r10 = 15
            r11.bindInteger(r10, r7)     // Catch:{ Exception -> 0x0457 }
            r11.step()     // Catch:{ Exception -> 0x0457 }
            if (r9 == 0) goto L_0x03ee
            r9.reuse()     // Catch:{ Exception -> 0x0457 }
        L_0x03ee:
            org.telegram.tgnet.TLRPC$PeerNotifySettings r7 = r8.notify_settings     // Catch:{ Exception -> 0x0457 }
            if (r7 == 0) goto L_0x040f
            r14.requery()     // Catch:{ Exception -> 0x0457 }
            r7 = r1
            r10 = r2
            long r1 = r8.id     // Catch:{ Exception -> 0x0457 }
            r16 = r3
            r3 = 1
            r14.bindLong(r3, r1)     // Catch:{ Exception -> 0x0457 }
            org.telegram.tgnet.TLRPC$PeerNotifySettings r1 = r8.notify_settings     // Catch:{ Exception -> 0x0457 }
            int r1 = r1.mute_until     // Catch:{ Exception -> 0x0457 }
            if (r1 == 0) goto L_0x0406
            goto L_0x0407
        L_0x0406:
            r3 = 0
        L_0x0407:
            r1 = 2
            r14.bindInteger(r1, r3)     // Catch:{ Exception -> 0x0457 }
            r14.step()     // Catch:{ Exception -> 0x0457 }
            goto L_0x0413
        L_0x040f:
            r7 = r1
            r10 = r2
            r16 = r3
        L_0x0413:
            r1 = r7
            r2 = r10
            r3 = r16
        L_0x0417:
            int r5 = r18 + 1
            r7 = r30
            r8 = r31
            r9 = r32
            r6 = r13
            r13 = r12
            r12 = r11
            r11 = r0
            r0 = r24
            goto L_0x0076
        L_0x0427:
            r24 = r0
            r18 = r5
            r11 = r12
            r12 = r13
            r0 = r16
            r13 = r6
            r0.dispose()     // Catch:{ Exception -> 0x0457 }
            r11.dispose()     // Catch:{ Exception -> 0x0457 }
            r12.dispose()     // Catch:{ Exception -> 0x0457 }
            r14.dispose()     // Catch:{ Exception -> 0x0457 }
            r15.dispose()     // Catch:{ Exception -> 0x0457 }
            r13.dispose()     // Catch:{ Exception -> 0x0457 }
            if (r2 == 0) goto L_0x0451
            r2.dispose()     // Catch:{ Exception -> 0x0457 }
            org.telegram.messenger.MessagesController r4 = r30.getMessagesController()     // Catch:{ Exception -> 0x0457 }
            r5 = 0
            r6 = 0
            r4.didAddedNewTask(r3, r6, r5)     // Catch:{ Exception -> 0x0457 }
        L_0x0451:
            if (r1 == 0) goto L_0x045f
            r1.dispose()     // Catch:{ Exception -> 0x0457 }
            goto L_0x045f
        L_0x0457:
            r0 = move-exception
            r2 = r30
            r1 = r31
            goto L_0x0480
        L_0x045d:
            r24 = r0
        L_0x045f:
            r1 = r31
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r0 = r1.users     // Catch:{ Exception -> 0x0479 }
            r2 = r30
            r2.putUsersInternal(r0)     // Catch:{ Exception -> 0x0477 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r0 = r1.chats     // Catch:{ Exception -> 0x0477 }
            r2.putChatsInternal(r0)     // Catch:{ Exception -> 0x0477 }
            org.telegram.SQLite.SQLiteDatabase r0 = r2.database     // Catch:{ Exception -> 0x0477 }
            r0.commitTransaction()     // Catch:{ Exception -> 0x0477 }
            r0 = 0
            r2.resetAllUnreadCounters(r0)     // Catch:{ Exception -> 0x0477 }
            goto L_0x0483
        L_0x0477:
            r0 = move-exception
            goto L_0x0480
        L_0x0479:
            r0 = move-exception
            r2 = r30
            goto L_0x0480
        L_0x047d:
            r0 = move-exception
            r2 = r7
        L_0x047f:
            r1 = r8
        L_0x0480:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x0483:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.putDialogsInternal(org.telegram.tgnet.TLRPC$messages_Dialogs, int):void");
    }

    public void getDialogFolderId(long dialogId, IntCallback callback) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda196(this, dialogId, callback));
    }

    /* renamed from: lambda$getDialogFolderId$177$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m887x34var_f(long dialogId, IntCallback callback) {
        int folderId;
        int folderId2;
        try {
            if (this.unknownDialogsIds.get(dialogId) != null) {
                folderId = -1;
            } else {
                SQLiteCursor cursor = this.database.queryFinalized("SELECT folder_id FROM dialogs WHERE did = ?", Long.valueOf(dialogId));
                if (cursor.next()) {
                    folderId2 = cursor.intValue(0);
                } else {
                    folderId2 = -1;
                }
                cursor.dispose();
                folderId = folderId2;
            }
            AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda109(callback, folderId));
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void setDialogsFolderId(ArrayList<TLRPC.TL_folderPeer> peers, ArrayList<TLRPC.TL_inputFolderPeer> inputPeers, long dialogId, int folderId) {
        if (peers != null || inputPeers != null || dialogId != 0) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda46(this, peers, inputPeers, folderId, dialogId));
        }
    }

    /* renamed from: lambda$setDialogsFolderId$178$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m996xcdcevar_(ArrayList peers, ArrayList inputPeers, int folderId, long dialogId) {
        ArrayList arrayList = peers;
        ArrayList arrayList2 = inputPeers;
        try {
            this.database.beginTransaction();
            SQLitePreparedStatement state = this.database.executeFast("UPDATE dialogs SET folder_id = ?, pinned = ? WHERE did = ?");
            if (arrayList != null) {
                int N = peers.size();
                for (int a = 0; a < N; a++) {
                    TLRPC.TL_folderPeer folderPeer = (TLRPC.TL_folderPeer) peers.get(a);
                    long did = DialogObject.getPeerDialogId(folderPeer.peer);
                    state.requery();
                    state.bindInteger(1, folderPeer.folder_id);
                    state.bindInteger(2, 0);
                    state.bindLong(3, did);
                    state.step();
                    this.unknownDialogsIds.remove(did);
                }
                int a2 = folderId;
                long j = dialogId;
            } else if (arrayList2 != null) {
                int N2 = inputPeers.size();
                for (int a3 = 0; a3 < N2; a3++) {
                    TLRPC.TL_inputFolderPeer folderPeer2 = (TLRPC.TL_inputFolderPeer) arrayList2.get(a3);
                    long did2 = DialogObject.getPeerDialogId(folderPeer2.peer);
                    state.requery();
                    state.bindInteger(1, folderPeer2.folder_id);
                    state.bindInteger(2, 0);
                    state.bindLong(3, did2);
                    state.step();
                    this.unknownDialogsIds.remove(did2);
                }
                int a4 = folderId;
                long j2 = dialogId;
            } else {
                state.requery();
                try {
                    state.bindInteger(1, folderId);
                    state.bindInteger(2, 0);
                    try {
                        state.bindLong(3, dialogId);
                        state.step();
                    } catch (Exception e) {
                        e = e;
                        FileLog.e((Throwable) e);
                    }
                } catch (Exception e2) {
                    e = e2;
                    long j3 = dialogId;
                    FileLog.e((Throwable) e);
                }
            }
            state.dispose();
            this.database.commitTransaction();
            m849xvar_c7f5a(1);
            resetAllUnreadCounters(false);
        } catch (Exception e3) {
            e = e3;
            int i = folderId;
            long j32 = dialogId;
            FileLog.e((Throwable) e);
        }
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:15:0x003c, code lost:
        r1 = false;
     */
    /* renamed from: checkIfFolderEmptyInternal */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void m849xvar_c7f5a(int r8) {
        /*
            r7 = this;
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x006d }
            java.lang.String r1 = "SELECT did FROM dialogs WHERE folder_id = ?"
            r2 = 1
            java.lang.Object[] r2 = new java.lang.Object[r2]     // Catch:{ Exception -> 0x006d }
            java.lang.Integer r3 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x006d }
            r4 = 0
            r2[r4] = r3     // Catch:{ Exception -> 0x006d }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r1, r2)     // Catch:{ Exception -> 0x006d }
            r1 = 1
        L_0x0013:
            boolean r2 = r0.next()     // Catch:{ Exception -> 0x006d }
            if (r2 == 0) goto L_0x003d
            long r2 = r0.longValue(r4)     // Catch:{ Exception -> 0x006d }
            boolean r5 = org.telegram.messenger.DialogObject.isUserDialog(r2)     // Catch:{ Exception -> 0x006d }
            if (r5 != 0) goto L_0x003c
            boolean r5 = org.telegram.messenger.DialogObject.isEncryptedDialog(r2)     // Catch:{ Exception -> 0x006d }
            if (r5 == 0) goto L_0x002a
            goto L_0x003c
        L_0x002a:
            long r5 = -r2
            org.telegram.tgnet.TLRPC$Chat r5 = r7.getChat(r5)     // Catch:{ Exception -> 0x006d }
            boolean r6 = org.telegram.messenger.ChatObject.isNotInChat(r5)     // Catch:{ Exception -> 0x006d }
            if (r6 != 0) goto L_0x003b
            org.telegram.tgnet.TLRPC$InputChannel r6 = r5.migrated_to     // Catch:{ Exception -> 0x006d }
            if (r6 != 0) goto L_0x003b
            r1 = 0
            goto L_0x003d
        L_0x003b:
            goto L_0x0013
        L_0x003c:
            r1 = 0
        L_0x003d:
            r0.dispose()     // Catch:{ Exception -> 0x006d }
            if (r1 == 0) goto L_0x006c
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda117 r2 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda117     // Catch:{ Exception -> 0x006d }
            r2.<init>(r7, r8)     // Catch:{ Exception -> 0x006d }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r2)     // Catch:{ Exception -> 0x006d }
            org.telegram.SQLite.SQLiteDatabase r2 = r7.database     // Catch:{ Exception -> 0x006d }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x006d }
            r3.<init>()     // Catch:{ Exception -> 0x006d }
            java.lang.String r4 = "DELETE FROM dialogs WHERE did = "
            r3.append(r4)     // Catch:{ Exception -> 0x006d }
            long r4 = org.telegram.messenger.DialogObject.makeFolderDialogId(r8)     // Catch:{ Exception -> 0x006d }
            r3.append(r4)     // Catch:{ Exception -> 0x006d }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x006d }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r3)     // Catch:{ Exception -> 0x006d }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.stepThis()     // Catch:{ Exception -> 0x006d }
            r2.dispose()     // Catch:{ Exception -> 0x006d }
        L_0x006c:
            goto L_0x0071
        L_0x006d:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x0071:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.m849xvar_c7f5a(int):void");
    }

    /* renamed from: lambda$checkIfFolderEmptyInternal$179$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m850xd54ea033(int folderId) {
        getMessagesController().onFolderEmpty(folderId);
    }

    public void checkIfFolderEmpty(int folderId) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda116(this, folderId));
    }

    public void unpinAllDialogsExceptNew(ArrayList<Long> dids, int folderId) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda40(this, dids, folderId));
    }

    /* renamed from: lambda$unpinAllDialogsExceptNew$181$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m999x1b21f7f2(ArrayList dids, int folderId) {
        try {
            ArrayList<Long> unpinnedDialogs = new ArrayList<>();
            SQLiteCursor cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT did, folder_id FROM dialogs WHERE pinned > 0 AND did NOT IN (%s)", new Object[]{TextUtils.join(",", dids)}), new Object[0]);
            while (cursor.next()) {
                long did = cursor.longValue(0);
                if (cursor.intValue(1) == folderId && !DialogObject.isEncryptedDialog(did) && !DialogObject.isFolderDialogId(did)) {
                    unpinnedDialogs.add(Long.valueOf(cursor.longValue(0)));
                }
            }
            cursor.dispose();
            if (!unpinnedDialogs.isEmpty()) {
                SQLitePreparedStatement state = this.database.executeFast("UPDATE dialogs SET pinned = ? WHERE did = ?");
                for (int a = 0; a < unpinnedDialogs.size(); a++) {
                    long did2 = unpinnedDialogs.get(a).longValue();
                    state.requery();
                    state.bindInteger(1, 0);
                    state.bindLong(2, did2);
                    state.step();
                }
                state.dispose();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void setDialogUnread(long did, boolean unread) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda9(this, did, unread));
    }

    /* JADX WARNING: Code restructure failed: missing block: B:13:0x0034, code lost:
        if (r1 == null) goto L_0x0039;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:16:0x003a, code lost:
        if (r9 == false) goto L_0x003e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:17:0x003c, code lost:
        r0 = r0 | 1;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:18:0x003e, code lost:
        r0 = r0 & -2;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:20:?, code lost:
        r4 = r6.database.executeFast("UPDATE dialogs SET flags = ? WHERE did = ?");
        r4.bindInteger(1, r0);
        r4.bindLong(2, r7);
        r4.step();
        r4.dispose();
        resetAllUnreadCounters(false);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:26:?, code lost:
        return;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:6:0x0028, code lost:
        if (r1 != null) goto L_0x002a;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:8:?, code lost:
        r1.dispose();
     */
    /* renamed from: lambda$setDialogUnread$182$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void m995xd3121633(long r7, boolean r9) {
        /*
            r6 = this;
            r0 = 0
            r1 = 0
            r2 = 0
            org.telegram.SQLite.SQLiteDatabase r3 = r6.database     // Catch:{ Exception -> 0x0030 }
            java.lang.StringBuilder r4 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0030 }
            r4.<init>()     // Catch:{ Exception -> 0x0030 }
            java.lang.String r5 = "SELECT flags FROM dialogs WHERE did = "
            r4.append(r5)     // Catch:{ Exception -> 0x0030 }
            r4.append(r7)     // Catch:{ Exception -> 0x0030 }
            java.lang.String r4 = r4.toString()     // Catch:{ Exception -> 0x0030 }
            java.lang.Object[] r5 = new java.lang.Object[r2]     // Catch:{ Exception -> 0x0030 }
            org.telegram.SQLite.SQLiteCursor r3 = r3.queryFinalized(r4, r5)     // Catch:{ Exception -> 0x0030 }
            r1 = r3
            boolean r3 = r1.next()     // Catch:{ Exception -> 0x0030 }
            if (r3 == 0) goto L_0x0028
            int r3 = r1.intValue(r2)     // Catch:{ Exception -> 0x0030 }
            r0 = r3
        L_0x0028:
            if (r1 == 0) goto L_0x0039
        L_0x002a:
            r1.dispose()     // Catch:{ Exception -> 0x0037 }
            goto L_0x0039
        L_0x002e:
            r2 = move-exception
            goto L_0x0059
        L_0x0030:
            r3 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r3)     // Catch:{ all -> 0x002e }
            if (r1 == 0) goto L_0x0039
            goto L_0x002a
        L_0x0037:
            r0 = move-exception
            goto L_0x0060
        L_0x0039:
            r3 = 1
            if (r9 == 0) goto L_0x003e
            r0 = r0 | r3
            goto L_0x0040
        L_0x003e:
            r0 = r0 & -2
        L_0x0040:
            org.telegram.SQLite.SQLiteDatabase r4 = r6.database     // Catch:{ Exception -> 0x0037 }
            java.lang.String r5 = "UPDATE dialogs SET flags = ? WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r4 = r4.executeFast(r5)     // Catch:{ Exception -> 0x0037 }
            r4.bindInteger(r3, r0)     // Catch:{ Exception -> 0x0037 }
            r3 = 2
            r4.bindLong(r3, r7)     // Catch:{ Exception -> 0x0037 }
            r4.step()     // Catch:{ Exception -> 0x0037 }
            r4.dispose()     // Catch:{ Exception -> 0x0037 }
            r6.resetAllUnreadCounters(r2)     // Catch:{ Exception -> 0x0037 }
            goto L_0x0063
        L_0x0059:
            if (r1 == 0) goto L_0x005e
            r1.dispose()     // Catch:{ Exception -> 0x0037 }
        L_0x005e:
            throw r2     // Catch:{ Exception -> 0x0037 }
        L_0x0060:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x0063:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.m995xd3121633(long, boolean):void");
    }

    private void resetAllUnreadCounters(boolean muted) {
        int N = this.dialogFilters.size();
        for (int a = 0; a < N; a++) {
            MessagesController.DialogFilter filter = this.dialogFilters.get(a);
            if (!muted) {
                filter.pendingUnreadCount = -1;
            } else if ((filter.flags & MessagesController.DIALOG_FILTER_FLAG_EXCLUDE_MUTED) != 0) {
                filter.pendingUnreadCount = -1;
            }
        }
        calcUnreadCounters(false);
        AndroidUtilities.runOnUIThread(new MessagesStorage$$ExternalSyntheticLambda108(this));
    }

    /* renamed from: lambda$resetAllUnreadCounters$183$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m982xcd1b8479() {
        ArrayList<MessagesController.DialogFilter> filters = getMessagesController().dialogFilters;
        int N = filters.size();
        for (int a = 0; a < N; a++) {
            filters.get(a).unreadCount = filters.get(a).pendingUnreadCount;
        }
        this.mainUnreadCount = this.pendingMainUnreadCount;
        this.archiveUnreadCount = this.pendingArchiveUnreadCount;
        getNotificationCenter().postNotificationName(NotificationCenter.updateInterfaces, Integer.valueOf(MessagesController.UPDATE_MASK_READ_DIALOG_MESSAGE));
    }

    public void setDialogPinned(long did, int pinned) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda135(this, pinned, did));
    }

    /* renamed from: lambda$setDialogPinned$184$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m994x7CLASSNAME(int pinned, long did) {
        try {
            SQLitePreparedStatement state = this.database.executeFast("UPDATE dialogs SET pinned = ? WHERE did = ?");
            state.bindInteger(1, pinned);
            state.bindLong(2, did);
            state.step();
            state.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void setDialogsPinned(ArrayList<Long> dids, ArrayList<Integer> pinned) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda45(this, dids, pinned));
    }

    /* renamed from: lambda$setDialogsPinned$185$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m997xaf9d076e(ArrayList dids, ArrayList pinned) {
        try {
            SQLitePreparedStatement state = this.database.executeFast("UPDATE dialogs SET pinned = ? WHERE did = ?");
            int N = dids.size();
            for (int a = 0; a < N; a++) {
                state.requery();
                state.bindInteger(1, ((Integer) pinned.get(a)).intValue());
                state.bindLong(2, ((Long) dids.get(a)).longValue());
                state.step();
            }
            state.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void putDialogs(TLRPC.messages_Dialogs dialogs, int check) {
        if (!dialogs.dialogs.isEmpty()) {
            this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda82(this, dialogs, check));
        }
    }

    /* renamed from: lambda$putDialogs$186$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m963lambda$putDialogs$186$orgtelegrammessengerMessagesStorage(TLRPC.messages_Dialogs dialogs, int check) {
        putDialogsInternal(dialogs, check);
        try {
            loadUnreadMessages();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void getDialogMaxMessageId(long dialog_id, IntCallback callback) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda1(this, dialog_id, callback));
    }

    /* JADX WARNING: Code restructure failed: missing block: B:11:0x0037, code lost:
        if (r0 == null) goto L_0x003a;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:12:0x003a, code lost:
        org.telegram.messenger.AndroidUtilities.runOnUIThread(new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda142(r9, r1));
     */
    /* JADX WARNING: Code restructure failed: missing block: B:13:0x0042, code lost:
        return;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:5:0x002b, code lost:
        if (r0 != null) goto L_0x002d;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:6:0x002d, code lost:
        r0.dispose();
     */
    /* renamed from: lambda$getDialogMaxMessageId$188$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void m888x376f1c8a(long r7, org.telegram.messenger.MessagesStorage.IntCallback r9) {
        /*
            r6 = this;
            r0 = 0
            r1 = 1
            int[] r1 = new int[r1]
            org.telegram.SQLite.SQLiteDatabase r2 = r6.database     // Catch:{ Exception -> 0x0033 }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0033 }
            r3.<init>()     // Catch:{ Exception -> 0x0033 }
            java.lang.String r4 = "SELECT MAX(mid) FROM messages_v2 WHERE uid = "
            r3.append(r4)     // Catch:{ Exception -> 0x0033 }
            r3.append(r7)     // Catch:{ Exception -> 0x0033 }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x0033 }
            r4 = 0
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0033 }
            org.telegram.SQLite.SQLiteCursor r2 = r2.queryFinalized(r3, r5)     // Catch:{ Exception -> 0x0033 }
            r0 = r2
            boolean r2 = r0.next()     // Catch:{ Exception -> 0x0033 }
            if (r2 == 0) goto L_0x002b
            int r2 = r0.intValue(r4)     // Catch:{ Exception -> 0x0033 }
            r1[r4] = r2     // Catch:{ Exception -> 0x0033 }
        L_0x002b:
            if (r0 == 0) goto L_0x003a
        L_0x002d:
            r0.dispose()
            goto L_0x003a
        L_0x0031:
            r2 = move-exception
            goto L_0x0043
        L_0x0033:
            r2 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r2)     // Catch:{ all -> 0x0031 }
            if (r0 == 0) goto L_0x003a
            goto L_0x002d
        L_0x003a:
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda142 r2 = new org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda142
            r2.<init>(r9, r1)
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r2)
            return
        L_0x0043:
            if (r0 == 0) goto L_0x0048
            r0.dispose()
        L_0x0048:
            goto L_0x004a
        L_0x0049:
            throw r2
        L_0x004a:
            goto L_0x0049
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.m888x376f1c8a(long, org.telegram.messenger.MessagesStorage$IntCallback):void");
    }

    public int getDialogReadMax(boolean outbox, long dialog_id) {
        CountDownLatch countDownLatch = new CountDownLatch(1);
        Integer[] max = {0};
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda94(this, outbox, dialog_id, max, countDownLatch));
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return max[0].intValue();
    }

    /* JADX WARNING: Code restructure failed: missing block: B:14:0x0055, code lost:
        if (r0 == null) goto L_0x0058;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:15:0x0058, code lost:
        r10.countDown();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:16:0x005b, code lost:
        return;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:8:0x0049, code lost:
        if (r0 != null) goto L_0x004b;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:9:0x004b, code lost:
        r0.dispose();
     */
    /* renamed from: lambda$getDialogReadMax$189$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void m891x956bcc5b(boolean r6, long r7, java.lang.Integer[] r9, java.util.concurrent.CountDownLatch r10) {
        /*
            r5 = this;
            r0 = 0
            r1 = 0
            if (r6 == 0) goto L_0x001f
            org.telegram.SQLite.SQLiteDatabase r2 = r5.database     // Catch:{ Exception -> 0x0051 }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0051 }
            r3.<init>()     // Catch:{ Exception -> 0x0051 }
            java.lang.String r4 = "SELECT outbox_max FROM dialogs WHERE did = "
            r3.append(r4)     // Catch:{ Exception -> 0x0051 }
            r3.append(r7)     // Catch:{ Exception -> 0x0051 }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x0051 }
            java.lang.Object[] r4 = new java.lang.Object[r1]     // Catch:{ Exception -> 0x0051 }
            org.telegram.SQLite.SQLiteCursor r2 = r2.queryFinalized(r3, r4)     // Catch:{ Exception -> 0x0051 }
            r0 = r2
            goto L_0x0039
        L_0x001f:
            org.telegram.SQLite.SQLiteDatabase r2 = r5.database     // Catch:{ Exception -> 0x0051 }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0051 }
            r3.<init>()     // Catch:{ Exception -> 0x0051 }
            java.lang.String r4 = "SELECT inbox_max FROM dialogs WHERE did = "
            r3.append(r4)     // Catch:{ Exception -> 0x0051 }
            r3.append(r7)     // Catch:{ Exception -> 0x0051 }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x0051 }
            java.lang.Object[] r4 = new java.lang.Object[r1]     // Catch:{ Exception -> 0x0051 }
            org.telegram.SQLite.SQLiteCursor r2 = r2.queryFinalized(r3, r4)     // Catch:{ Exception -> 0x0051 }
            r0 = r2
        L_0x0039:
            boolean r2 = r0.next()     // Catch:{ Exception -> 0x0051 }
            if (r2 == 0) goto L_0x0049
            int r2 = r0.intValue(r1)     // Catch:{ Exception -> 0x0051 }
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x0051 }
            r9[r1] = r2     // Catch:{ Exception -> 0x0051 }
        L_0x0049:
            if (r0 == 0) goto L_0x0058
        L_0x004b:
            r0.dispose()
            goto L_0x0058
        L_0x004f:
            r1 = move-exception
            goto L_0x005c
        L_0x0051:
            r1 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r1)     // Catch:{ all -> 0x004f }
            if (r0 == 0) goto L_0x0058
            goto L_0x004b
        L_0x0058:
            r10.countDown()
            return
        L_0x005c:
            if (r0 == 0) goto L_0x0061
            r0.dispose()
        L_0x0061:
            goto L_0x0063
        L_0x0062:
            throw r1
        L_0x0063:
            goto L_0x0062
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.m891x956bcc5b(boolean, long, java.lang.Integer[], java.util.concurrent.CountDownLatch):void");
    }

    public int getChannelPtsSync(long channelId) {
        CountDownLatch countDownLatch = new CountDownLatch(1);
        Integer[] pts = {0};
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda13(this, channelId, pts, countDownLatch));
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return pts[0].intValue();
    }

    /* JADX WARNING: Code restructure failed: missing block: B:11:0x0039, code lost:
        if (r0 == null) goto L_0x003c;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:13:?, code lost:
        r9.countDown();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:14:0x0040, code lost:
        r1 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:15:0x0041, code lost:
        org.telegram.messenger.FileLog.e((java.lang.Throwable) r1);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:19:?, code lost:
        return;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:20:?, code lost:
        return;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:5:0x002d, code lost:
        if (r0 != null) goto L_0x002f;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:6:0x002f, code lost:
        r0.dispose();
     */
    /* renamed from: lambda$getChannelPtsSync$190$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void m884x992e8db2(long r6, java.lang.Integer[] r8, java.util.concurrent.CountDownLatch r9) {
        /*
            r5 = this;
            r0 = 0
            org.telegram.SQLite.SQLiteDatabase r1 = r5.database     // Catch:{ Exception -> 0x0035 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0035 }
            r2.<init>()     // Catch:{ Exception -> 0x0035 }
            java.lang.String r3 = "SELECT pts FROM dialogs WHERE did = "
            r2.append(r3)     // Catch:{ Exception -> 0x0035 }
            long r3 = -r6
            r2.append(r3)     // Catch:{ Exception -> 0x0035 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x0035 }
            r3 = 0
            java.lang.Object[] r4 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x0035 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r2, r4)     // Catch:{ Exception -> 0x0035 }
            r0 = r1
            boolean r1 = r0.next()     // Catch:{ Exception -> 0x0035 }
            if (r1 == 0) goto L_0x002d
            int r1 = r0.intValue(r3)     // Catch:{ Exception -> 0x0035 }
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x0035 }
            r8[r3] = r1     // Catch:{ Exception -> 0x0035 }
        L_0x002d:
            if (r0 == 0) goto L_0x003c
        L_0x002f:
            r0.dispose()
            goto L_0x003c
        L_0x0033:
            r1 = move-exception
            goto L_0x0045
        L_0x0035:
            r1 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r1)     // Catch:{ all -> 0x0033 }
            if (r0 == 0) goto L_0x003c
            goto L_0x002f
        L_0x003c:
            r9.countDown()     // Catch:{ Exception -> 0x0040 }
            goto L_0x0044
        L_0x0040:
            r1 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r1)
        L_0x0044:
            return
        L_0x0045:
            if (r0 == 0) goto L_0x004a
            r0.dispose()
        L_0x004a:
            goto L_0x004c
        L_0x004b:
            throw r1
        L_0x004c:
            goto L_0x004b
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.m884x992e8db2(long, java.lang.Integer[], java.util.concurrent.CountDownLatch):void");
    }

    public TLRPC.User getUserSync(long userId) {
        CountDownLatch countDownLatch = new CountDownLatch(1);
        TLRPC.User[] user = new TLRPC.User[1];
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda101(this, user, userId, countDownLatch));
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return user[0];
    }

    /* renamed from: lambda$getUserSync$191$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m904lambda$getUserSync$191$orgtelegrammessengerMessagesStorage(TLRPC.User[] user, long userId, CountDownLatch countDownLatch) {
        user[0] = getUser(userId);
        countDownLatch.countDown();
    }

    public TLRPC.Chat getChatSync(long chatId) {
        CountDownLatch countDownLatch = new CountDownLatch(1);
        TLRPC.Chat[] chat = new TLRPC.Chat[1];
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda98(this, chat, chatId, countDownLatch));
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return chat[0];
    }

    /* renamed from: lambda$getChatSync$192$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m885lambda$getChatSync$192$orgtelegrammessengerMessagesStorage(TLRPC.Chat[] chat, long chatId, CountDownLatch countDownLatch) {
        chat[0] = getChat(chatId);
        countDownLatch.countDown();
    }

    public TLRPC.User getUser(long userId) {
        try {
            ArrayList<TLRPC.User> users = new ArrayList<>();
            getUsersInternal("" + userId, users);
            if (!users.isEmpty()) {
                return users.get(0);
            }
            return null;
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            return null;
        }
    }

    public ArrayList<TLRPC.User> getUsers(ArrayList<Long> uids) {
        ArrayList<TLRPC.User> users = new ArrayList<>();
        try {
            getUsersInternal(TextUtils.join(",", uids), users);
        } catch (Exception e) {
            users.clear();
            FileLog.e((Throwable) e);
        }
        return users;
    }

    public TLRPC.Chat getChat(long chatId) {
        try {
            ArrayList<TLRPC.Chat> chats = new ArrayList<>();
            getChatsInternal("" + chatId, chats);
            if (!chats.isEmpty()) {
                return chats.get(0);
            }
            return null;
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            return null;
        }
    }

    public TLRPC.EncryptedChat getEncryptedChat(long chatId) {
        try {
            ArrayList<TLRPC.EncryptedChat> encryptedChats = new ArrayList<>();
            getEncryptedChatsInternal("" + chatId, encryptedChats, (ArrayList<Long>) null);
            if (!encryptedChats.isEmpty()) {
                return encryptedChats.get(0);
            }
            return null;
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            return null;
        }
    }

    /* JADX WARNING: Code restructure failed: missing block: B:122:?, code lost:
        r13 = r4.byteBufferValue(0);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:123:0x023f, code lost:
        if (r13 == null) goto L_0x02aa;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:124:0x0241, code lost:
        r32 = r0;
        r33 = r1;
        r0 = org.telegram.tgnet.TLRPC.User.TLdeserialize(r13, r13.readInt32(false), false);
        r13.reuse();
        r34 = r5;
        r1 = r6;
        r5 = r10.get(r0.id);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:125:0x025f, code lost:
        if (r0.status == null) goto L_0x026d;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:126:0x0261, code lost:
        r18 = r13;
        r0.status.expires = r4.intValue(1);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:127:0x026d, code lost:
        r18 = r13;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:129:0x0270, code lost:
        if (r2 != 1) goto L_0x027d;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:130:0x0272, code lost:
        r5.name = org.telegram.messenger.AndroidUtilities.generateSearchName(r0.first_name, r0.last_name, r8);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:131:0x027d, code lost:
        r5.name = org.telegram.messenger.AndroidUtilities.generateSearchName("@" + r0.username, (java.lang.String) null, "@" + r8);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:132:0x02a4, code lost:
        r5.object = r0;
        r16 = r16 + 1;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:133:0x02aa, code lost:
        r32 = r0;
        r33 = r1;
        r34 = r5;
        r1 = r6;
        r18 = r13;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:217:0x0471, code lost:
        r14 = null;
        r27 = r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:220:0x047b, code lost:
        r0 = r4.byteBufferValue(0);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:221:0x047f, code lost:
        if (r0 == null) goto L_0x0493;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:222:0x0481, code lost:
        r31 = r2;
        r32 = r3;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:224:?, code lost:
        r14 = org.telegram.tgnet.TLRPC.EncryptedChat.TLdeserialize(r0, r0.readInt32(false), false);
        r0.reuse();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:225:0x0493, code lost:
        r31 = r2;
        r32 = r3;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:229:0x049c, code lost:
        r0 = r4.byteBufferValue(6);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:230:0x049d, code lost:
        if (r0 == null) goto L_0x04b0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:233:?, code lost:
        r18 = org.telegram.tgnet.TLRPC.User.TLdeserialize(r0, r0.readInt32(false), false);
        r0.reuse();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:234:0x04ad, code lost:
        r2 = r18;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:235:0x04b0, code lost:
        r2 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:236:0x04b2, code lost:
        if (r14 == null) goto L_0x05d1;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:237:0x04b4, code lost:
        if (r2 == null) goto L_0x05d1;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:239:?, code lost:
        r33 = r0;
        r18 = r1;
        r0 = r10.get(org.telegram.messenger.DialogObject.makeEncryptedDialogId((long) r14.id));
        r3 = r7;
        r34 = r8;
        r14.user_id = r4.longValue(2);
        r14.a_or_b = r4.byteArrayValue(3);
        r14.auth_key = r4.byteArrayValue(4);
        r14.ttl = r4.intValue(5);
        r14.layer = r4.intValue(8);
        r14.seq_in = r4.intValue(9);
        r14.seq_out = r4.intValue(10);
        r7 = r4.intValue(11);
        r14.key_use_count_in = (short) (r7 >> 16);
        r14.key_use_count_out = (short) r7;
        r22 = r2;
        r14.exchange_id = r4.longValue(12);
        r14.key_create_date = r4.intValue(13);
        r14.future_key_fingerprint = r4.longValue(14);
        r14.future_auth_key = r4.byteArrayValue(15);
        r14.key_hash = r4.byteArrayValue(16);
        r14.in_seq_no = r4.intValue(17);
        r1 = r4.longValue(18);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:241:0x0548, code lost:
        if (r1 == 0) goto L_0x054c;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:243:?, code lost:
        r14.admin_id = r1;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:246:?, code lost:
        r14.mtproto_seq = r4.intValue(19);
        r36 = r1;
        r8 = r22;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:247:0x055a, code lost:
        if (r8.status == null) goto L_0x0565;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:249:?, code lost:
        r8.status.expires = r4.intValue(7);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:251:0x0566, code lost:
        if (r6 != 1) goto L_0x0599;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:252:0x0568, code lost:
        r22 = r5;
        r0.name = new android.text.SpannableStringBuilder(org.telegram.messenger.ContactsController.formatName(r8.first_name, r8.last_name));
        r38 = r6;
        r39 = r7;
        ((android.text.SpannableStringBuilder) r0.name).setSpan(new android.text.style.ForegroundColorSpan(org.telegram.ui.ActionBar.Theme.getColor("chats_secretName")), 0, r0.name.length(), 33);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:253:0x0599, code lost:
        r22 = r5;
        r38 = r6;
        r39 = r7;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:255:?, code lost:
        r0.name = org.telegram.messenger.AndroidUtilities.generateSearchName("@" + r8.username, (java.lang.String) null, "@" + r13);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:256:0x05c6, code lost:
        r0.object = r14;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:259:?, code lost:
        r45.add(r8);
        r16 = r16 + 1;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:260:0x05d1, code lost:
        r33 = r0;
        r18 = r1;
        r22 = r5;
        r38 = r6;
        r3 = r7;
        r34 = r8;
        r1 = r45;
        r8 = r2;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:9:0x0042, code lost:
        if (r9.length() == 0) goto L_0x004c;
     */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:134:0x02b4 A[Catch:{ Exception -> 0x07eb }, LOOP:2: B:101:0x01e3->B:134:0x02b4, LOOP_END] */
    /* JADX WARNING: Removed duplicated region for block: B:261:0x05e0 A[Catch:{ Exception -> 0x07eb }, LOOP:6: B:197:0x0426->B:261:0x05e0, LOOP_END] */
    /* JADX WARNING: Removed duplicated region for block: B:336:0x07a8 A[Catch:{ Exception -> 0x07e2 }, LOOP:10: B:305:0x06d4->B:336:0x07a8, LOOP_END] */
    /* JADX WARNING: Removed duplicated region for block: B:369:0x0236 A[EDGE_INSN: B:369:0x0236->B:120:0x0236 ?: BREAK  , SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:386:0x0471 A[EDGE_INSN: B:386:0x0471->B:217:0x0471 ?: BREAK  , SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:396:0x072f A[SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void localSearch(int r41, java.lang.String r42, java.util.ArrayList<java.lang.Object> r43, java.util.ArrayList<java.lang.CharSequence> r44, java.util.ArrayList<org.telegram.tgnet.TLRPC.User> r45, int r46) {
        /*
            r40 = this;
            r1 = r40
            r2 = r41
            r3 = r43
            r4 = r44
            int r0 = r1.currentAccount
            org.telegram.messenger.UserConfig r0 = org.telegram.messenger.UserConfig.getInstance(r0)
            long r5 = r0.getClientUserId()
            java.lang.String r0 = r42.trim()     // Catch:{ Exception -> 0x07fb }
            java.lang.String r0 = r0.toLowerCase()     // Catch:{ Exception -> 0x07fb }
            boolean r7 = android.text.TextUtils.isEmpty(r0)     // Catch:{ Exception -> 0x07fb }
            if (r7 == 0) goto L_0x0021
            return
        L_0x0021:
            java.lang.String r7 = "SavedMessages"
            r8 = 2131627866(0x7f0e0f5a, float:1.8883009E38)
            java.lang.String r7 = org.telegram.messenger.LocaleController.getString(r7, r8)     // Catch:{ Exception -> 0x07fb }
            java.lang.String r7 = r7.toLowerCase()     // Catch:{ Exception -> 0x07fb }
            java.lang.String r8 = "saved messages"
            org.telegram.messenger.LocaleController r9 = org.telegram.messenger.LocaleController.getInstance()     // Catch:{ Exception -> 0x07fb }
            java.lang.String r9 = r9.getTranslitString(r0)     // Catch:{ Exception -> 0x07fb }
            boolean r10 = r0.equals(r9)     // Catch:{ Exception -> 0x07fb }
            if (r10 != 0) goto L_0x004c
            int r10 = r9.length()     // Catch:{ Exception -> 0x0045 }
            if (r10 != 0) goto L_0x004d
            goto L_0x004c
        L_0x0045:
            r0 = move-exception
            r8 = r3
            r11 = r4
        L_0x0048:
            r24 = r5
            goto L_0x0800
        L_0x004c:
            r9 = 0
        L_0x004d:
            r10 = 1
            r11 = 0
            if (r9 == 0) goto L_0x0053
            r12 = 1
            goto L_0x0054
        L_0x0053:
            r12 = 0
        L_0x0054:
            int r12 = r12 + r10
            java.lang.String[] r12 = new java.lang.String[r12]     // Catch:{ Exception -> 0x07fb }
            r12[r11] = r0     // Catch:{ Exception -> 0x07fb }
            if (r9 == 0) goto L_0x005d
            r12[r10] = r9     // Catch:{ Exception -> 0x0045 }
        L_0x005d:
            java.util.ArrayList r13 = new java.util.ArrayList     // Catch:{ Exception -> 0x07fb }
            r13.<init>()     // Catch:{ Exception -> 0x07fb }
            java.util.ArrayList r14 = new java.util.ArrayList     // Catch:{ Exception -> 0x07fb }
            r14.<init>()     // Catch:{ Exception -> 0x07fb }
            java.util.ArrayList r15 = new java.util.ArrayList     // Catch:{ Exception -> 0x07fb }
            r15.<init>()     // Catch:{ Exception -> 0x07fb }
            r16 = 0
            androidx.collection.LongSparseArray r17 = new androidx.collection.LongSparseArray     // Catch:{ Exception -> 0x07fb }
            r17.<init>()     // Catch:{ Exception -> 0x07fb }
            r18 = r17
            if (r46 < 0) goto L_0x0094
            org.telegram.SQLite.SQLiteDatabase r11 = r40.getDatabase()     // Catch:{ Exception -> 0x008f }
            java.lang.String r10 = "SELECT did, date FROM dialogs WHERE folder_id = ? ORDER BY date DESC LIMIT 600"
            r19 = r9
            r9 = 1
            java.lang.Object[] r4 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x008f }
            java.lang.Integer r9 = java.lang.Integer.valueOf(r46)     // Catch:{ Exception -> 0x008f }
            r17 = 0
            r4[r17] = r9     // Catch:{ Exception -> 0x008f }
            org.telegram.SQLite.SQLiteCursor r4 = r11.queryFinalized(r10, r4)     // Catch:{ Exception -> 0x008f }
            goto L_0x00a3
        L_0x008f:
            r0 = move-exception
            r11 = r44
            r8 = r3
            goto L_0x0048
        L_0x0094:
            r19 = r9
            org.telegram.SQLite.SQLiteDatabase r4 = r40.getDatabase()     // Catch:{ Exception -> 0x07f6 }
            java.lang.String r9 = "SELECT did, date FROM dialogs ORDER BY date DESC LIMIT 600"
            r10 = 0
            java.lang.Object[] r11 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x07f6 }
            org.telegram.SQLite.SQLiteCursor r4 = r4.queryFinalized(r9, r11)     // Catch:{ Exception -> 0x07f6 }
        L_0x00a3:
            boolean r9 = r4.next()     // Catch:{ Exception -> 0x07f6 }
            if (r9 == 0) goto L_0x0144
            r9 = 0
            long r21 = r4.longValue(r9)     // Catch:{ Exception -> 0x013c }
            r23 = r21
            org.telegram.ui.Adapters.DialogsSearchAdapter$DialogSearchResult r9 = new org.telegram.ui.Adapters.DialogsSearchAdapter$DialogSearchResult     // Catch:{ Exception -> 0x013c }
            r9.<init>()     // Catch:{ Exception -> 0x013c }
            r11 = 1
            int r10 = r4.intValue(r11)     // Catch:{ Exception -> 0x013c }
            r9.date = r10     // Catch:{ Exception -> 0x013c }
            r10 = r18
            r18 = r12
            r11 = r23
            r10.put(r11, r9)     // Catch:{ Exception -> 0x013c }
            boolean r23 = org.telegram.messenger.DialogObject.isEncryptedDialog(r11)     // Catch:{ Exception -> 0x013c }
            if (r23 != 0) goto L_0x0115
            boolean r20 = org.telegram.messenger.DialogObject.isUserDialog(r11)     // Catch:{ Exception -> 0x013c }
            if (r20 == 0) goto L_0x00f7
            r23 = r9
            r9 = 4
            if (r2 != r9) goto L_0x00dd
            int r9 = (r11 > r5 ? 1 : (r11 == r5 ? 0 : -1))
            if (r9 != 0) goto L_0x00dd
            r24 = r5
            goto L_0x0134
        L_0x00dd:
            r9 = 2
            if (r2 == r9) goto L_0x00f4
            java.lang.Long r9 = java.lang.Long.valueOf(r11)     // Catch:{ Exception -> 0x008f }
            boolean r9 = r13.contains(r9)     // Catch:{ Exception -> 0x008f }
            if (r9 != 0) goto L_0x00f4
            java.lang.Long r9 = java.lang.Long.valueOf(r11)     // Catch:{ Exception -> 0x008f }
            r13.add(r9)     // Catch:{ Exception -> 0x008f }
            r24 = r5
            goto L_0x0133
        L_0x00f4:
            r24 = r5
            goto L_0x0133
        L_0x00f7:
            r23 = r9
            r9 = 4
            if (r2 != r9) goto L_0x00ff
            r24 = r5
            goto L_0x0134
        L_0x00ff:
            r24 = r5
            long r5 = -r11
            java.lang.Long r5 = java.lang.Long.valueOf(r5)     // Catch:{ Exception -> 0x07f1 }
            boolean r5 = r14.contains(r5)     // Catch:{ Exception -> 0x07f1 }
            if (r5 != 0) goto L_0x0133
            long r5 = -r11
            java.lang.Long r5 = java.lang.Long.valueOf(r5)     // Catch:{ Exception -> 0x07f1 }
            r14.add(r5)     // Catch:{ Exception -> 0x07f1 }
            goto L_0x0133
        L_0x0115:
            r24 = r5
            r23 = r9
            if (r2 == 0) goto L_0x011e
            r5 = 3
            if (r2 != r5) goto L_0x0133
        L_0x011e:
            int r5 = org.telegram.messenger.DialogObject.getEncryptedChatId(r11)     // Catch:{ Exception -> 0x07f1 }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r5)     // Catch:{ Exception -> 0x07f1 }
            boolean r6 = r15.contains(r6)     // Catch:{ Exception -> 0x07f1 }
            if (r6 != 0) goto L_0x0133
            java.lang.Integer r6 = java.lang.Integer.valueOf(r5)     // Catch:{ Exception -> 0x07f1 }
            r15.add(r6)     // Catch:{ Exception -> 0x07f1 }
        L_0x0133:
        L_0x0134:
            r12 = r18
            r5 = r24
            r18 = r10
            goto L_0x00a3
        L_0x013c:
            r0 = move-exception
            r24 = r5
            r11 = r44
            r8 = r3
            goto L_0x0800
        L_0x0144:
            r24 = r5
            r10 = r18
            r18 = r12
            r4.dispose()     // Catch:{ Exception -> 0x07f1 }
            r5 = 4
            if (r2 == r5) goto L_0x0156
            boolean r5 = r7.startsWith(r0)     // Catch:{ Exception -> 0x07f1 }
            if (r5 != 0) goto L_0x015c
        L_0x0156:
            boolean r5 = r8.startsWith(r0)     // Catch:{ Exception -> 0x07f1 }
            if (r5 == 0) goto L_0x017b
        L_0x015c:
            int r5 = r1.currentAccount     // Catch:{ Exception -> 0x07f1 }
            org.telegram.messenger.UserConfig r5 = org.telegram.messenger.UserConfig.getInstance(r5)     // Catch:{ Exception -> 0x07f1 }
            org.telegram.tgnet.TLRPC$User r5 = r5.getCurrentUser()     // Catch:{ Exception -> 0x07f1 }
            org.telegram.ui.Adapters.DialogsSearchAdapter$DialogSearchResult r6 = new org.telegram.ui.Adapters.DialogsSearchAdapter$DialogSearchResult     // Catch:{ Exception -> 0x07f1 }
            r6.<init>()     // Catch:{ Exception -> 0x07f1 }
            r9 = 2147483647(0x7fffffff, float:NaN)
            r6.date = r9     // Catch:{ Exception -> 0x07f1 }
            r6.name = r7     // Catch:{ Exception -> 0x07f1 }
            r6.object = r5     // Catch:{ Exception -> 0x07f1 }
            long r11 = r5.id     // Catch:{ Exception -> 0x07f1 }
            r10.put(r11, r6)     // Catch:{ Exception -> 0x07f1 }
            int r16 = r16 + 1
        L_0x017b:
            boolean r5 = r13.isEmpty()     // Catch:{ Exception -> 0x07f1 }
            java.lang.String r9 = ";;;"
            java.lang.String r11 = ","
            java.lang.String r12 = "@"
            java.lang.String r6 = " "
            if (r5 != 0) goto L_0x02e4
            org.telegram.SQLite.SQLiteDatabase r5 = r40.getDatabase()     // Catch:{ Exception -> 0x07eb }
            r26 = r0
            java.util.Locale r0 = java.util.Locale.US     // Catch:{ Exception -> 0x07eb }
            java.lang.String r1 = "SELECT data, status, name FROM users WHERE uid IN(%s)"
            r27 = r4
            r28 = r7
            r4 = 1
            java.lang.Object[] r7 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x07eb }
            java.lang.String r4 = android.text.TextUtils.join(r11, r13)     // Catch:{ Exception -> 0x07eb }
            r29 = r8
            r8 = 0
            r7[r8] = r4     // Catch:{ Exception -> 0x07eb }
            java.lang.String r0 = java.lang.String.format(r0, r1, r7)     // Catch:{ Exception -> 0x07eb }
            java.lang.Object[] r1 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x07eb }
            org.telegram.SQLite.SQLiteCursor r0 = r5.queryFinalized(r0, r1)     // Catch:{ Exception -> 0x07eb }
            r4 = r0
        L_0x01ae:
            boolean r0 = r4.next()     // Catch:{ Exception -> 0x07eb }
            if (r0 == 0) goto L_0x02db
            r0 = 2
            java.lang.String r1 = r4.stringValue(r0)     // Catch:{ Exception -> 0x07eb }
            r0 = r1
            org.telegram.messenger.LocaleController r1 = org.telegram.messenger.LocaleController.getInstance()     // Catch:{ Exception -> 0x07eb }
            java.lang.String r1 = r1.getTranslitString(r0)     // Catch:{ Exception -> 0x07eb }
            boolean r5 = r0.equals(r1)     // Catch:{ Exception -> 0x07eb }
            if (r5 == 0) goto L_0x01c9
            r1 = 0
        L_0x01c9:
            r5 = 0
            int r7 = r0.lastIndexOf(r9)     // Catch:{ Exception -> 0x07eb }
            r8 = -1
            if (r7 == r8) goto L_0x01d8
            int r8 = r7 + 3
            java.lang.String r8 = r0.substring(r8)     // Catch:{ Exception -> 0x07f1 }
            r5 = r8
        L_0x01d8:
            r8 = 0
            r27 = r7
            r7 = r18
            r18 = r8
            int r8 = r7.length     // Catch:{ Exception -> 0x07eb }
            r30 = r13
            r13 = 0
        L_0x01e3:
            if (r13 >= r8) goto L_0x02c9
            r31 = r7[r13]     // Catch:{ Exception -> 0x07eb }
            r32 = r31
            r31 = r8
            r8 = r32
            boolean r32 = r0.startsWith(r8)     // Catch:{ Exception -> 0x07eb }
            if (r32 != 0) goto L_0x0233
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x07f1 }
            r2.<init>()     // Catch:{ Exception -> 0x07f1 }
            r2.append(r6)     // Catch:{ Exception -> 0x07f1 }
            r2.append(r8)     // Catch:{ Exception -> 0x07f1 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x07f1 }
            boolean r2 = r0.contains(r2)     // Catch:{ Exception -> 0x07f1 }
            if (r2 != 0) goto L_0x0233
            if (r1 == 0) goto L_0x0226
            boolean r2 = r1.startsWith(r8)     // Catch:{ Exception -> 0x07f1 }
            if (r2 != 0) goto L_0x0233
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x07f1 }
            r2.<init>()     // Catch:{ Exception -> 0x07f1 }
            r2.append(r6)     // Catch:{ Exception -> 0x07f1 }
            r2.append(r8)     // Catch:{ Exception -> 0x07f1 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x07f1 }
            boolean r2 = r1.contains(r2)     // Catch:{ Exception -> 0x07f1 }
            if (r2 == 0) goto L_0x0226
            goto L_0x0233
        L_0x0226:
            if (r5 == 0) goto L_0x0230
            boolean r2 = r5.startsWith(r8)     // Catch:{ Exception -> 0x07f1 }
            if (r2 == 0) goto L_0x0230
            r2 = 2
            goto L_0x0234
        L_0x0230:
            r2 = r18
            goto L_0x0234
        L_0x0233:
            r2 = 1
        L_0x0234:
            if (r2 == 0) goto L_0x02b4
            r13 = 0
            org.telegram.tgnet.NativeByteBuffer r17 = r4.byteBufferValue(r13)     // Catch:{ Exception -> 0x07eb }
            r18 = r17
            r13 = r18
            if (r13 == 0) goto L_0x02aa
            r32 = r0
            r33 = r1
            r0 = 0
            int r1 = r13.readInt32(r0)     // Catch:{ Exception -> 0x07eb }
            org.telegram.tgnet.TLRPC$User r1 = org.telegram.tgnet.TLRPC.User.TLdeserialize(r13, r1, r0)     // Catch:{ Exception -> 0x07eb }
            r0 = r1
            r13.reuse()     // Catch:{ Exception -> 0x07eb }
            r34 = r5
            r1 = r6
            long r5 = r0.id     // Catch:{ Exception -> 0x07eb }
            java.lang.Object r5 = r10.get(r5)     // Catch:{ Exception -> 0x07eb }
            org.telegram.ui.Adapters.DialogsSearchAdapter$DialogSearchResult r5 = (org.telegram.ui.Adapters.DialogsSearchAdapter.DialogSearchResult) r5     // Catch:{ Exception -> 0x07eb }
            org.telegram.tgnet.TLRPC$UserStatus r6 = r0.status     // Catch:{ Exception -> 0x07eb }
            if (r6 == 0) goto L_0x026d
            org.telegram.tgnet.TLRPC$UserStatus r6 = r0.status     // Catch:{ Exception -> 0x07eb }
            r18 = r13
            r13 = 1
            int r3 = r4.intValue(r13)     // Catch:{ Exception -> 0x07eb }
            r6.expires = r3     // Catch:{ Exception -> 0x07eb }
            goto L_0x026f
        L_0x026d:
            r18 = r13
        L_0x026f:
            r3 = 1
            if (r2 != r3) goto L_0x027d
            java.lang.String r3 = r0.first_name     // Catch:{ Exception -> 0x07eb }
            java.lang.String r6 = r0.last_name     // Catch:{ Exception -> 0x07eb }
            java.lang.CharSequence r3 = org.telegram.messenger.AndroidUtilities.generateSearchName(r3, r6, r8)     // Catch:{ Exception -> 0x07eb }
            r5.name = r3     // Catch:{ Exception -> 0x07eb }
            goto L_0x02a4
        L_0x027d:
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x07eb }
            r3.<init>()     // Catch:{ Exception -> 0x07eb }
            r3.append(r12)     // Catch:{ Exception -> 0x07eb }
            java.lang.String r6 = r0.username     // Catch:{ Exception -> 0x07eb }
            r3.append(r6)     // Catch:{ Exception -> 0x07eb }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x07eb }
            java.lang.StringBuilder r6 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x07eb }
            r6.<init>()     // Catch:{ Exception -> 0x07eb }
            r6.append(r12)     // Catch:{ Exception -> 0x07eb }
            r6.append(r8)     // Catch:{ Exception -> 0x07eb }
            java.lang.String r6 = r6.toString()     // Catch:{ Exception -> 0x07eb }
            r13 = 0
            java.lang.CharSequence r3 = org.telegram.messenger.AndroidUtilities.generateSearchName(r3, r13, r6)     // Catch:{ Exception -> 0x07eb }
            r5.name = r3     // Catch:{ Exception -> 0x07eb }
        L_0x02a4:
            r5.object = r0     // Catch:{ Exception -> 0x07eb }
            int r16 = r16 + 1
            goto L_0x02d0
        L_0x02aa:
            r32 = r0
            r33 = r1
            r34 = r5
            r1 = r6
            r18 = r13
            goto L_0x02d0
        L_0x02b4:
            r32 = r0
            r33 = r1
            r34 = r5
            r1 = r6
            int r13 = r13 + 1
            r3 = r43
            r18 = r2
            r8 = r31
            r1 = r33
            r2 = r41
            goto L_0x01e3
        L_0x02c9:
            r32 = r0
            r33 = r1
            r34 = r5
            r1 = r6
        L_0x02d0:
            r2 = r41
            r3 = r43
            r6 = r1
            r18 = r7
            r13 = r30
            goto L_0x01ae
        L_0x02db:
            r1 = r6
            r30 = r13
            r7 = r18
            r4.dispose()     // Catch:{ Exception -> 0x07eb }
            goto L_0x02f1
        L_0x02e4:
            r26 = r0
            r27 = r4
            r1 = r6
            r28 = r7
            r29 = r8
            r30 = r13
            r7 = r18
        L_0x02f1:
            boolean r0 = r14.isEmpty()     // Catch:{ Exception -> 0x07eb }
            if (r0 != 0) goto L_0x03d6
            org.telegram.SQLite.SQLiteDatabase r0 = r40.getDatabase()     // Catch:{ Exception -> 0x07eb }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x07eb }
            java.lang.String r3 = "SELECT data, name FROM chats WHERE uid IN(%s)"
            r5 = 1
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x07eb }
            java.lang.String r5 = android.text.TextUtils.join(r11, r14)     // Catch:{ Exception -> 0x07eb }
            r8 = 0
            r6[r8] = r5     // Catch:{ Exception -> 0x07eb }
            java.lang.String r2 = java.lang.String.format(r2, r3, r6)     // Catch:{ Exception -> 0x07eb }
            java.lang.Object[] r3 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x07eb }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r2, r3)     // Catch:{ Exception -> 0x07eb }
            r4 = r0
        L_0x0314:
            boolean r0 = r4.next()     // Catch:{ Exception -> 0x07eb }
            if (r0 == 0) goto L_0x03d1
            r0 = 1
            java.lang.String r2 = r4.stringValue(r0)     // Catch:{ Exception -> 0x07eb }
            r0 = r2
            org.telegram.messenger.LocaleController r2 = org.telegram.messenger.LocaleController.getInstance()     // Catch:{ Exception -> 0x07eb }
            java.lang.String r2 = r2.getTranslitString(r0)     // Catch:{ Exception -> 0x07eb }
            boolean r3 = r0.equals(r2)     // Catch:{ Exception -> 0x07eb }
            if (r3 == 0) goto L_0x032f
            r2 = 0
        L_0x032f:
            int r3 = r7.length     // Catch:{ Exception -> 0x07eb }
            r5 = 0
        L_0x0331:
            if (r5 >= r3) goto L_0x03c9
            r6 = r7[r5]     // Catch:{ Exception -> 0x07eb }
            boolean r8 = r0.startsWith(r6)     // Catch:{ Exception -> 0x07eb }
            if (r8 != 0) goto L_0x0371
            java.lang.StringBuilder r8 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x07eb }
            r8.<init>()     // Catch:{ Exception -> 0x07eb }
            r8.append(r1)     // Catch:{ Exception -> 0x07eb }
            r8.append(r6)     // Catch:{ Exception -> 0x07eb }
            java.lang.String r8 = r8.toString()     // Catch:{ Exception -> 0x07eb }
            boolean r8 = r0.contains(r8)     // Catch:{ Exception -> 0x07eb }
            if (r8 != 0) goto L_0x0371
            if (r2 == 0) goto L_0x036e
            boolean r8 = r2.startsWith(r6)     // Catch:{ Exception -> 0x07eb }
            if (r8 != 0) goto L_0x0371
            java.lang.StringBuilder r8 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x07eb }
            r8.<init>()     // Catch:{ Exception -> 0x07eb }
            r8.append(r1)     // Catch:{ Exception -> 0x07eb }
            r8.append(r6)     // Catch:{ Exception -> 0x07eb }
            java.lang.String r8 = r8.toString()     // Catch:{ Exception -> 0x07eb }
            boolean r8 = r2.contains(r8)     // Catch:{ Exception -> 0x07eb }
            if (r8 == 0) goto L_0x036e
            goto L_0x0371
        L_0x036e:
            int r5 = r5 + 1
            goto L_0x0331
        L_0x0371:
            r3 = 0
            org.telegram.tgnet.NativeByteBuffer r5 = r4.byteBufferValue(r3)     // Catch:{ Exception -> 0x07eb }
            if (r5 == 0) goto L_0x03c3
            int r8 = r5.readInt32(r3)     // Catch:{ Exception -> 0x07eb }
            org.telegram.tgnet.TLRPC$Chat r8 = org.telegram.tgnet.TLRPC.Chat.TLdeserialize(r5, r8, r3)     // Catch:{ Exception -> 0x07eb }
            r3 = r8
            r5.reuse()     // Catch:{ Exception -> 0x07eb }
            if (r3 == 0) goto L_0x03bd
            boolean r8 = r3.deactivated     // Catch:{ Exception -> 0x07eb }
            if (r8 != 0) goto L_0x03bd
            boolean r8 = org.telegram.messenger.ChatObject.isChannel(r3)     // Catch:{ Exception -> 0x07eb }
            if (r8 == 0) goto L_0x039d
            boolean r8 = org.telegram.messenger.ChatObject.isNotInChat(r3)     // Catch:{ Exception -> 0x07eb }
            if (r8 != 0) goto L_0x0397
            goto L_0x039d
        L_0x0397:
            r18 = r0
            r31 = r2
            r8 = r14
            goto L_0x03c2
        L_0x039d:
            r8 = r14
            long r13 = r3.id     // Catch:{ Exception -> 0x07eb }
            long r13 = -r13
            java.lang.Object r18 = r10.get(r13)     // Catch:{ Exception -> 0x07eb }
            org.telegram.ui.Adapters.DialogsSearchAdapter$DialogSearchResult r18 = (org.telegram.ui.Adapters.DialogsSearchAdapter.DialogSearchResult) r18     // Catch:{ Exception -> 0x07eb }
            r27 = r18
            r18 = r0
            java.lang.String r0 = r3.title     // Catch:{ Exception -> 0x07eb }
            r31 = r2
            r2 = 0
            java.lang.CharSequence r0 = org.telegram.messenger.AndroidUtilities.generateSearchName(r0, r2, r6)     // Catch:{ Exception -> 0x07eb }
            r2 = r27
            r2.name = r0     // Catch:{ Exception -> 0x07eb }
            r2.object = r3     // Catch:{ Exception -> 0x07eb }
            int r16 = r16 + 1
            goto L_0x03c2
        L_0x03bd:
            r18 = r0
            r31 = r2
            r8 = r14
        L_0x03c2:
            goto L_0x03ce
        L_0x03c3:
            r18 = r0
            r31 = r2
            r8 = r14
            goto L_0x03ce
        L_0x03c9:
            r18 = r0
            r31 = r2
            r8 = r14
        L_0x03ce:
            r14 = r8
            goto L_0x0314
        L_0x03d1:
            r8 = r14
            r4.dispose()     // Catch:{ Exception -> 0x07eb }
            goto L_0x03d7
        L_0x03d6:
            r8 = r14
        L_0x03d7:
            boolean r0 = r15.isEmpty()     // Catch:{ Exception -> 0x07eb }
            if (r0 != 0) goto L_0x0621
            org.telegram.SQLite.SQLiteDatabase r0 = r40.getDatabase()     // Catch:{ Exception -> 0x061c }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x061c }
            java.lang.String r3 = "SELECT q.data, u.name, q.user, q.g, q.authkey, q.ttl, u.data, u.status, q.layer, q.seq_in, q.seq_out, q.use_count, q.exchange_id, q.key_date, q.fprint, q.fauthkey, q.khash, q.in_seq_no, q.admin_id, q.mtproto_seq FROM enc_chats as q INNER JOIN users as u ON q.user = u.uid WHERE q.uid IN(%s)"
            r5 = 1
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x061c }
            java.lang.String r5 = android.text.TextUtils.join(r11, r15)     // Catch:{ Exception -> 0x061c }
            r11 = 0
            r6[r11] = r5     // Catch:{ Exception -> 0x061c }
            java.lang.String r2 = java.lang.String.format(r2, r3, r6)     // Catch:{ Exception -> 0x061c }
            java.lang.Object[] r3 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x061c }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r2, r3)     // Catch:{ Exception -> 0x061c }
            r4 = r0
        L_0x03fa:
            boolean r0 = r4.next()     // Catch:{ Exception -> 0x061c }
            if (r0 == 0) goto L_0x060f
            r0 = 1
            java.lang.String r2 = r4.stringValue(r0)     // Catch:{ Exception -> 0x061c }
            r0 = r2
            org.telegram.messenger.LocaleController r2 = org.telegram.messenger.LocaleController.getInstance()     // Catch:{ Exception -> 0x061c }
            java.lang.String r2 = r2.getTranslitString(r0)     // Catch:{ Exception -> 0x061c }
            boolean r3 = r0.equals(r2)     // Catch:{ Exception -> 0x061c }
            if (r3 == 0) goto L_0x0415
            r2 = 0
        L_0x0415:
            r3 = 0
            int r5 = r0.lastIndexOf(r9)     // Catch:{ Exception -> 0x061c }
            r6 = -1
            if (r5 == r6) goto L_0x0424
            int r6 = r5 + 2
            java.lang.String r6 = r0.substring(r6)     // Catch:{ Exception -> 0x07eb }
            r3 = r6
        L_0x0424:
            r6 = 0
            r11 = 0
        L_0x0426:
            int r13 = r7.length     // Catch:{ Exception -> 0x061c }
            if (r11 >= r13) goto L_0x05f9
            r13 = r7[r11]     // Catch:{ Exception -> 0x061c }
            boolean r14 = r0.startsWith(r13)     // Catch:{ Exception -> 0x061c }
            if (r14 != 0) goto L_0x046e
            java.lang.StringBuilder r14 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x07eb }
            r14.<init>()     // Catch:{ Exception -> 0x07eb }
            r14.append(r1)     // Catch:{ Exception -> 0x07eb }
            r14.append(r13)     // Catch:{ Exception -> 0x07eb }
            java.lang.String r14 = r14.toString()     // Catch:{ Exception -> 0x07eb }
            boolean r14 = r0.contains(r14)     // Catch:{ Exception -> 0x07eb }
            if (r14 != 0) goto L_0x046e
            if (r2 == 0) goto L_0x0464
            boolean r14 = r2.startsWith(r13)     // Catch:{ Exception -> 0x07eb }
            if (r14 != 0) goto L_0x046e
            java.lang.StringBuilder r14 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x07eb }
            r14.<init>()     // Catch:{ Exception -> 0x07eb }
            r14.append(r1)     // Catch:{ Exception -> 0x07eb }
            r14.append(r13)     // Catch:{ Exception -> 0x07eb }
            java.lang.String r14 = r14.toString()     // Catch:{ Exception -> 0x07eb }
            boolean r14 = r2.contains(r14)     // Catch:{ Exception -> 0x07eb }
            if (r14 == 0) goto L_0x0464
            goto L_0x046e
        L_0x0464:
            if (r3 == 0) goto L_0x046f
            boolean r14 = r3.startsWith(r13)     // Catch:{ Exception -> 0x07eb }
            if (r14 == 0) goto L_0x046f
            r6 = 2
            goto L_0x046f
        L_0x046e:
            r6 = 1
        L_0x046f:
            if (r6 == 0) goto L_0x05e0
            r14 = 0
            r18 = 0
            r27 = r0
            r0 = 0
            org.telegram.tgnet.NativeByteBuffer r17 = r4.byteBufferValue(r0)     // Catch:{ Exception -> 0x061c }
            r31 = r17
            r0 = r31
            if (r0 == 0) goto L_0x0493
            r31 = r2
            r32 = r3
            r2 = 0
            int r3 = r0.readInt32(r2)     // Catch:{ Exception -> 0x07eb }
            org.telegram.tgnet.TLRPC$EncryptedChat r3 = org.telegram.tgnet.TLRPC.EncryptedChat.TLdeserialize(r0, r3, r2)     // Catch:{ Exception -> 0x07eb }
            r14 = r3
            r0.reuse()     // Catch:{ Exception -> 0x07eb }
            goto L_0x0497
        L_0x0493:
            r31 = r2
            r32 = r3
        L_0x0497:
            r2 = 6
            org.telegram.tgnet.NativeByteBuffer r2 = r4.byteBufferValue(r2)     // Catch:{ Exception -> 0x061c }
            r0 = r2
            if (r0 == 0) goto L_0x04b0
            r2 = 0
            int r3 = r0.readInt32(r2)     // Catch:{ Exception -> 0x07eb }
            org.telegram.tgnet.TLRPC$User r3 = org.telegram.tgnet.TLRPC.User.TLdeserialize(r0, r3, r2)     // Catch:{ Exception -> 0x07eb }
            r18 = r3
            r0.reuse()     // Catch:{ Exception -> 0x07eb }
            r2 = r18
            goto L_0x04b2
        L_0x04b0:
            r2 = r18
        L_0x04b2:
            if (r14 == 0) goto L_0x05d1
            if (r2 == 0) goto L_0x05d1
            int r3 = r14.id     // Catch:{ Exception -> 0x061c }
            r33 = r0
            r18 = r1
            long r0 = (long) r3     // Catch:{ Exception -> 0x061c }
            long r0 = org.telegram.messenger.DialogObject.makeEncryptedDialogId(r0)     // Catch:{ Exception -> 0x061c }
            java.lang.Object r0 = r10.get(r0)     // Catch:{ Exception -> 0x061c }
            org.telegram.ui.Adapters.DialogsSearchAdapter$DialogSearchResult r0 = (org.telegram.ui.Adapters.DialogsSearchAdapter.DialogSearchResult) r0     // Catch:{ Exception -> 0x061c }
            r3 = r7
            r34 = r8
            r1 = 2
            long r7 = r4.longValue(r1)     // Catch:{ Exception -> 0x061c }
            r14.user_id = r7     // Catch:{ Exception -> 0x061c }
            r1 = 3
            byte[] r7 = r4.byteArrayValue(r1)     // Catch:{ Exception -> 0x061c }
            r14.a_or_b = r7     // Catch:{ Exception -> 0x061c }
            r1 = 4
            byte[] r7 = r4.byteArrayValue(r1)     // Catch:{ Exception -> 0x061c }
            r14.auth_key = r7     // Catch:{ Exception -> 0x061c }
            r7 = 5
            int r7 = r4.intValue(r7)     // Catch:{ Exception -> 0x061c }
            r14.ttl = r7     // Catch:{ Exception -> 0x061c }
            r7 = 8
            int r7 = r4.intValue(r7)     // Catch:{ Exception -> 0x061c }
            r14.layer = r7     // Catch:{ Exception -> 0x061c }
            r7 = 9
            int r7 = r4.intValue(r7)     // Catch:{ Exception -> 0x061c }
            r14.seq_in = r7     // Catch:{ Exception -> 0x061c }
            r7 = 10
            int r7 = r4.intValue(r7)     // Catch:{ Exception -> 0x061c }
            r14.seq_out = r7     // Catch:{ Exception -> 0x061c }
            r7 = 11
            int r7 = r4.intValue(r7)     // Catch:{ Exception -> 0x061c }
            int r8 = r7 >> 16
            short r8 = (short) r8     // Catch:{ Exception -> 0x061c }
            r14.key_use_count_in = r8     // Catch:{ Exception -> 0x061c }
            short r8 = (short) r7     // Catch:{ Exception -> 0x061c }
            r14.key_use_count_out = r8     // Catch:{ Exception -> 0x061c }
            r8 = 12
            r22 = r2
            long r1 = r4.longValue(r8)     // Catch:{ Exception -> 0x061c }
            r14.exchange_id = r1     // Catch:{ Exception -> 0x061c }
            r1 = 13
            int r1 = r4.intValue(r1)     // Catch:{ Exception -> 0x061c }
            r14.key_create_date = r1     // Catch:{ Exception -> 0x061c }
            r1 = 14
            long r1 = r4.longValue(r1)     // Catch:{ Exception -> 0x061c }
            r14.future_key_fingerprint = r1     // Catch:{ Exception -> 0x061c }
            r1 = 15
            byte[] r1 = r4.byteArrayValue(r1)     // Catch:{ Exception -> 0x061c }
            r14.future_auth_key = r1     // Catch:{ Exception -> 0x061c }
            r1 = 16
            byte[] r1 = r4.byteArrayValue(r1)     // Catch:{ Exception -> 0x061c }
            r14.key_hash = r1     // Catch:{ Exception -> 0x061c }
            r1 = 17
            int r1 = r4.intValue(r1)     // Catch:{ Exception -> 0x061c }
            r14.in_seq_no = r1     // Catch:{ Exception -> 0x061c }
            r1 = 18
            long r1 = r4.longValue(r1)     // Catch:{ Exception -> 0x061c }
            r36 = 0
            int r8 = (r1 > r36 ? 1 : (r1 == r36 ? 0 : -1))
            if (r8 == 0) goto L_0x054c
            r14.admin_id = r1     // Catch:{ Exception -> 0x07eb }
        L_0x054c:
            r8 = 19
            int r8 = r4.intValue(r8)     // Catch:{ Exception -> 0x061c }
            r14.mtproto_seq = r8     // Catch:{ Exception -> 0x061c }
            r36 = r1
            r8 = r22
            org.telegram.tgnet.TLRPC$UserStatus r1 = r8.status     // Catch:{ Exception -> 0x061c }
            if (r1 == 0) goto L_0x0565
            org.telegram.tgnet.TLRPC$UserStatus r1 = r8.status     // Catch:{ Exception -> 0x07eb }
            r2 = 7
            int r2 = r4.intValue(r2)     // Catch:{ Exception -> 0x07eb }
            r1.expires = r2     // Catch:{ Exception -> 0x07eb }
        L_0x0565:
            r1 = 1
            if (r6 != r1) goto L_0x0599
            android.text.SpannableStringBuilder r1 = new android.text.SpannableStringBuilder     // Catch:{ Exception -> 0x07eb }
            java.lang.String r2 = r8.first_name     // Catch:{ Exception -> 0x07eb }
            r22 = r5
            java.lang.String r5 = r8.last_name     // Catch:{ Exception -> 0x07eb }
            java.lang.String r2 = org.telegram.messenger.ContactsController.formatName(r2, r5)     // Catch:{ Exception -> 0x07eb }
            r1.<init>(r2)     // Catch:{ Exception -> 0x07eb }
            r0.name = r1     // Catch:{ Exception -> 0x07eb }
            java.lang.CharSequence r1 = r0.name     // Catch:{ Exception -> 0x07eb }
            android.text.SpannableStringBuilder r1 = (android.text.SpannableStringBuilder) r1     // Catch:{ Exception -> 0x07eb }
            android.text.style.ForegroundColorSpan r2 = new android.text.style.ForegroundColorSpan     // Catch:{ Exception -> 0x07eb }
            java.lang.String r5 = "chats_secretName"
            int r5 = org.telegram.ui.ActionBar.Theme.getColor(r5)     // Catch:{ Exception -> 0x07eb }
            r2.<init>(r5)     // Catch:{ Exception -> 0x07eb }
            java.lang.CharSequence r5 = r0.name     // Catch:{ Exception -> 0x07eb }
            int r5 = r5.length()     // Catch:{ Exception -> 0x07eb }
            r38 = r6
            r6 = 33
            r39 = r7
            r7 = 0
            r1.setSpan(r2, r7, r5, r6)     // Catch:{ Exception -> 0x07eb }
            goto L_0x05c6
        L_0x0599:
            r22 = r5
            r38 = r6
            r39 = r7
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x061c }
            r1.<init>()     // Catch:{ Exception -> 0x061c }
            r1.append(r12)     // Catch:{ Exception -> 0x061c }
            java.lang.String r2 = r8.username     // Catch:{ Exception -> 0x061c }
            r1.append(r2)     // Catch:{ Exception -> 0x061c }
            java.lang.String r1 = r1.toString()     // Catch:{ Exception -> 0x061c }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x061c }
            r2.<init>()     // Catch:{ Exception -> 0x061c }
            r2.append(r12)     // Catch:{ Exception -> 0x061c }
            r2.append(r13)     // Catch:{ Exception -> 0x061c }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x061c }
            r5 = 0
            java.lang.CharSequence r1 = org.telegram.messenger.AndroidUtilities.generateSearchName(r1, r5, r2)     // Catch:{ Exception -> 0x061c }
            r0.name = r1     // Catch:{ Exception -> 0x061c }
        L_0x05c6:
            r0.object = r14     // Catch:{ Exception -> 0x061c }
            r1 = r45
            r1.add(r8)     // Catch:{ Exception -> 0x07eb }
            int r16 = r16 + 1
            goto L_0x0608
        L_0x05d1:
            r33 = r0
            r18 = r1
            r22 = r5
            r38 = r6
            r3 = r7
            r34 = r8
            r1 = r45
            r8 = r2
            goto L_0x0608
        L_0x05e0:
            r27 = r0
            r18 = r1
            r31 = r2
            r32 = r3
            r22 = r5
            r38 = r6
            r3 = r7
            r34 = r8
            r1 = r45
            int r11 = r11 + 1
            r1 = r18
            r3 = r32
            goto L_0x0426
        L_0x05f9:
            r27 = r0
            r18 = r1
            r31 = r2
            r32 = r3
            r22 = r5
            r3 = r7
            r34 = r8
            r1 = r45
        L_0x0608:
            r7 = r3
            r1 = r18
            r8 = r34
            goto L_0x03fa
        L_0x060f:
            r18 = r1
            r3 = r7
            r34 = r8
            r1 = r45
            r4.dispose()     // Catch:{ Exception -> 0x07eb }
            r0 = r16
            goto L_0x062a
        L_0x061c:
            r0 = move-exception
            r1 = r45
            goto L_0x07ec
        L_0x0621:
            r18 = r1
            r3 = r7
            r34 = r8
            r1 = r45
            r0 = r16
        L_0x062a:
            java.util.ArrayList r2 = new java.util.ArrayList     // Catch:{ Exception -> 0x07eb }
            r2.<init>(r0)     // Catch:{ Exception -> 0x07eb }
            r5 = 0
        L_0x0630:
            int r6 = r10.size()     // Catch:{ Exception -> 0x07eb }
            if (r5 >= r6) goto L_0x064a
            java.lang.Object r6 = r10.valueAt(r5)     // Catch:{ Exception -> 0x07eb }
            org.telegram.ui.Adapters.DialogsSearchAdapter$DialogSearchResult r6 = (org.telegram.ui.Adapters.DialogsSearchAdapter.DialogSearchResult) r6     // Catch:{ Exception -> 0x07eb }
            org.telegram.tgnet.TLObject r7 = r6.object     // Catch:{ Exception -> 0x07eb }
            if (r7 == 0) goto L_0x0647
            java.lang.CharSequence r7 = r6.name     // Catch:{ Exception -> 0x07eb }
            if (r7 == 0) goto L_0x0647
            r2.add(r6)     // Catch:{ Exception -> 0x07eb }
        L_0x0647:
            int r5 = r5 + 1
            goto L_0x0630
        L_0x064a:
            org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda107 r5 = org.telegram.messenger.MessagesStorage$$ExternalSyntheticLambda107.INSTANCE     // Catch:{ Exception -> 0x07eb }
            java.util.Collections.sort(r2, r5)     // Catch:{ Exception -> 0x07eb }
            r5 = 0
        L_0x0650:
            int r6 = r2.size()     // Catch:{ Exception -> 0x07eb }
            if (r5 >= r6) goto L_0x0671
            java.lang.Object r6 = r2.get(r5)     // Catch:{ Exception -> 0x07eb }
            org.telegram.ui.Adapters.DialogsSearchAdapter$DialogSearchResult r6 = (org.telegram.ui.Adapters.DialogsSearchAdapter.DialogSearchResult) r6     // Catch:{ Exception -> 0x07eb }
            org.telegram.tgnet.TLObject r7 = r6.object     // Catch:{ Exception -> 0x07eb }
            r8 = r43
            r8.add(r7)     // Catch:{ Exception -> 0x066e }
            java.lang.CharSequence r7 = r6.name     // Catch:{ Exception -> 0x066e }
            r11 = r44
            r11.add(r7)     // Catch:{ Exception -> 0x07e2 }
            int r5 = r5 + 1
            goto L_0x0650
        L_0x066e:
            r0 = move-exception
            goto L_0x07ee
        L_0x0671:
            r8 = r43
            r11 = r44
            r5 = r41
            r6 = 2
            if (r5 == r6) goto L_0x07e4
            org.telegram.SQLite.SQLiteDatabase r6 = r40.getDatabase()     // Catch:{ Exception -> 0x07e2 }
            java.lang.String r7 = "SELECT u.data, u.status, u.name, u.uid FROM users as u INNER JOIN contacts as c ON u.uid = c.uid"
            r13 = 0
            java.lang.Object[] r14 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x07e2 }
            org.telegram.SQLite.SQLiteCursor r6 = r6.queryFinalized(r7, r14)     // Catch:{ Exception -> 0x07e2 }
            r4 = r6
        L_0x0688:
            boolean r6 = r4.next()     // Catch:{ Exception -> 0x07e2 }
            if (r6 == 0) goto L_0x07d8
            r6 = 3
            long r13 = r4.longValue(r6)     // Catch:{ Exception -> 0x07e2 }
            int r7 = r10.indexOfKey(r13)     // Catch:{ Exception -> 0x07e2 }
            if (r7 < 0) goto L_0x069a
            goto L_0x0688
        L_0x069a:
            r7 = 2
            java.lang.String r16 = r4.stringValue(r7)     // Catch:{ Exception -> 0x07e2 }
            r20 = r16
            org.telegram.messenger.LocaleController r6 = org.telegram.messenger.LocaleController.getInstance()     // Catch:{ Exception -> 0x07e2 }
            r7 = r20
            java.lang.String r6 = r6.getTranslitString(r7)     // Catch:{ Exception -> 0x07e2 }
            boolean r20 = r7.equals(r6)     // Catch:{ Exception -> 0x07e2 }
            if (r20 == 0) goto L_0x06b2
            r6 = 0
        L_0x06b2:
            r20 = 0
            int r22 = r7.lastIndexOf(r9)     // Catch:{ Exception -> 0x07e2 }
            r27 = r22
            r22 = r0
            r0 = r27
            r1 = -1
            if (r0 == r1) goto L_0x06ca
            int r1 = r0 + 3
            java.lang.String r1 = r7.substring(r1)     // Catch:{ Exception -> 0x07e2 }
            r20 = r1
            goto L_0x06cc
        L_0x06ca:
            r1 = r20
        L_0x06cc:
            r20 = 0
            r27 = r0
            int r0 = r3.length     // Catch:{ Exception -> 0x07e2 }
            r31 = r2
            r2 = 0
        L_0x06d4:
            if (r2 >= r0) goto L_0x07c0
            r32 = r3[r2]     // Catch:{ Exception -> 0x07e2 }
            r33 = r32
            r32 = r0
            r0 = r33
            boolean r33 = r7.startsWith(r0)     // Catch:{ Exception -> 0x07e2 }
            if (r33 != 0) goto L_0x0728
            r33 = r3
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x07e2 }
            r3.<init>()     // Catch:{ Exception -> 0x07e2 }
            r5 = r18
            r3.append(r5)     // Catch:{ Exception -> 0x07e2 }
            r3.append(r0)     // Catch:{ Exception -> 0x07e2 }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x07e2 }
            boolean r3 = r7.contains(r3)     // Catch:{ Exception -> 0x07e2 }
            if (r3 != 0) goto L_0x072c
            if (r6 == 0) goto L_0x071b
            boolean r3 = r6.startsWith(r0)     // Catch:{ Exception -> 0x07e2 }
            if (r3 != 0) goto L_0x072c
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x07e2 }
            r3.<init>()     // Catch:{ Exception -> 0x07e2 }
            r3.append(r5)     // Catch:{ Exception -> 0x07e2 }
            r3.append(r0)     // Catch:{ Exception -> 0x07e2 }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x07e2 }
            boolean r3 = r6.contains(r3)     // Catch:{ Exception -> 0x07e2 }
            if (r3 == 0) goto L_0x071b
            goto L_0x072c
        L_0x071b:
            if (r1 == 0) goto L_0x0725
            boolean r3 = r1.startsWith(r0)     // Catch:{ Exception -> 0x07e2 }
            if (r3 == 0) goto L_0x0725
            r3 = 2
            goto L_0x072d
        L_0x0725:
            r3 = r20
            goto L_0x072d
        L_0x0728:
            r33 = r3
            r5 = r18
        L_0x072c:
            r3 = 1
        L_0x072d:
            if (r3 == 0) goto L_0x07a8
            r2 = 0
            org.telegram.tgnet.NativeByteBuffer r17 = r4.byteBufferValue(r2)     // Catch:{ Exception -> 0x07e2 }
            r18 = r17
            r2 = r18
            if (r2 == 0) goto L_0x079d
            r18 = r1
            r17 = r5
            r1 = 0
            int r5 = r2.readInt32(r1)     // Catch:{ Exception -> 0x07e2 }
            org.telegram.tgnet.TLRPC$User r5 = org.telegram.tgnet.TLRPC.User.TLdeserialize(r2, r5, r1)     // Catch:{ Exception -> 0x07e2 }
            r2.reuse()     // Catch:{ Exception -> 0x07e2 }
            org.telegram.tgnet.TLRPC$UserStatus r1 = r5.status     // Catch:{ Exception -> 0x07e2 }
            if (r1 == 0) goto L_0x075c
            org.telegram.tgnet.TLRPC$UserStatus r1 = r5.status     // Catch:{ Exception -> 0x07e2 }
            r32 = r2
            r35 = r6
            r2 = 1
            int r6 = r4.intValue(r2)     // Catch:{ Exception -> 0x07e2 }
            r1.expires = r6     // Catch:{ Exception -> 0x07e2 }
            goto L_0x0760
        L_0x075c:
            r32 = r2
            r35 = r6
        L_0x0760:
            r1 = 1
            if (r3 != r1) goto L_0x0770
            java.lang.String r2 = r5.first_name     // Catch:{ Exception -> 0x07e2 }
            java.lang.String r6 = r5.last_name     // Catch:{ Exception -> 0x07e2 }
            java.lang.CharSequence r2 = org.telegram.messenger.AndroidUtilities.generateSearchName(r2, r6, r0)     // Catch:{ Exception -> 0x07e2 }
            r11.add(r2)     // Catch:{ Exception -> 0x07e2 }
            r1 = 0
            goto L_0x0798
        L_0x0770:
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x07e2 }
            r2.<init>()     // Catch:{ Exception -> 0x07e2 }
            r2.append(r12)     // Catch:{ Exception -> 0x07e2 }
            java.lang.String r6 = r5.username     // Catch:{ Exception -> 0x07e2 }
            r2.append(r6)     // Catch:{ Exception -> 0x07e2 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x07e2 }
            java.lang.StringBuilder r6 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x07e2 }
            r6.<init>()     // Catch:{ Exception -> 0x07e2 }
            r6.append(r12)     // Catch:{ Exception -> 0x07e2 }
            r6.append(r0)     // Catch:{ Exception -> 0x07e2 }
            java.lang.String r6 = r6.toString()     // Catch:{ Exception -> 0x07e2 }
            r1 = 0
            java.lang.CharSequence r2 = org.telegram.messenger.AndroidUtilities.generateSearchName(r2, r1, r6)     // Catch:{ Exception -> 0x07e2 }
            r11.add(r2)     // Catch:{ Exception -> 0x07e2 }
        L_0x0798:
            r8.add(r5)     // Catch:{ Exception -> 0x07e2 }
            r5 = 0
            goto L_0x07ca
        L_0x079d:
            r18 = r1
            r32 = r2
            r17 = r5
            r35 = r6
            r1 = 0
            r5 = 0
            goto L_0x07ca
        L_0x07a8:
            r18 = r1
            r17 = r5
            r35 = r6
            r1 = 0
            r5 = 0
            int r2 = r2 + 1
            r5 = r41
            r20 = r3
            r1 = r18
            r0 = r32
            r3 = r33
            r18 = r17
            goto L_0x06d4
        L_0x07c0:
            r33 = r3
            r35 = r6
            r17 = r18
            r5 = 0
            r18 = r1
            r1 = 0
        L_0x07ca:
            r5 = r41
            r1 = r45
            r18 = r17
            r0 = r22
            r2 = r31
            r3 = r33
            goto L_0x0688
        L_0x07d8:
            r22 = r0
            r31 = r2
            r33 = r3
            r4.dispose()     // Catch:{ Exception -> 0x07e2 }
            goto L_0x07ea
        L_0x07e2:
            r0 = move-exception
            goto L_0x0800
        L_0x07e4:
            r22 = r0
            r31 = r2
            r33 = r3
        L_0x07ea:
            goto L_0x0803
        L_0x07eb:
            r0 = move-exception
        L_0x07ec:
            r8 = r43
        L_0x07ee:
            r11 = r44
            goto L_0x0800
        L_0x07f1:
            r0 = move-exception
            r11 = r44
            r8 = r3
            goto L_0x0800
        L_0x07f6:
            r0 = move-exception
            r11 = r44
            r8 = r3
            goto L_0x07fe
        L_0x07fb:
            r0 = move-exception
            r8 = r3
            r11 = r4
        L_0x07fe:
            r24 = r5
        L_0x0800:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x0803:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.localSearch(int, java.lang.String, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, int):void");
    }

    static /* synthetic */ int lambda$localSearch$193(DialogsSearchAdapter.DialogSearchResult lhs, DialogsSearchAdapter.DialogSearchResult rhs) {
        if (lhs.date < rhs.date) {
            return 1;
        }
        if (lhs.date > rhs.date) {
            return -1;
        }
        return 0;
    }

    public ArrayList<Integer> getCachedMessagesInRange(long dialogId, int minDate, int maxDate) {
        ArrayList<Integer> messageIds = new ArrayList<>();
        try {
            SQLiteCursor cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT mid FROM messages_v2 WHERE uid = %d AND date >= %d AND date <= %d", new Object[]{Long.valueOf(dialogId), Integer.valueOf(minDate), Integer.valueOf(maxDate)}), new Object[0]);
            while (cursor.next()) {
                try {
                    messageIds.add(Integer.valueOf(cursor.intValue(0)));
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                }
            }
            cursor.dispose();
        } catch (Exception e2) {
            FileLog.e((Throwable) e2);
        }
        return messageIds;
    }

    public void updateUnreadReactionsCount(long dialogId, int count) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda137(this, count, dialogId));
    }

    /* renamed from: lambda$updateUnreadReactionsCount$194$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m1029x88cae334(int count, long dialogId) {
        try {
            SQLitePreparedStatement state = this.database.executeFast("UPDATE dialogs SET unread_reactions = ? WHERE did = ?");
            state.bindInteger(1, Math.max(count, 0));
            state.bindLong(2, dialogId);
            state.step();
            state.dispose();
            if (count == 0) {
                SQLitePreparedStatement state2 = this.database.executeFast("UPDATE reaction_mentions SET state = 0 WHERE dialog_id ?");
                state2.bindLong(1, dialogId);
                state2.step();
                state2.dispose();
            }
        } catch (SQLiteException e) {
            e.printStackTrace();
        }
    }

    public void markMessageReactionsAsRead(long dialogId, int messageId, boolean usequeue) {
        if (usequeue) {
            getStorageQueue().postRunnable(new MessagesStorage$$ExternalSyntheticLambda160(this, dialogId, messageId));
        } else {
            m941x396dbbd8(dialogId, messageId);
        }
    }

    /* renamed from: markMessageReactionsAsReadInternal */
    public void m941x396dbbd8(long dialogId, int messageId) {
        NativeByteBuffer data;
        try {
            SQLitePreparedStatement state = getMessagesStorage().getDatabase().executeFast("UPDATE reaction_mentions SET state = 0 WHERE message_id = ? AND dialog_id = ?");
            state.bindInteger(1, messageId);
            state.bindLong(2, dialogId);
            state.step();
            state.dispose();
            SQLiteCursor cursor = this.database.queryFinalized(String.format(Locale.US, "SELECT data FROM messages_v2 WHERE uid = %d AND mid = %d", new Object[]{Long.valueOf(dialogId), Integer.valueOf(messageId)}), new Object[0]);
            TLRPC.Message message = null;
            if (cursor.next() && (data = cursor.byteBufferValue(0)) != null) {
                message = TLRPC.Message.TLdeserialize(data, data.readInt32(false), false);
                message.readAttachPath(data, getUserConfig().clientUserId);
                data.reuse();
                if (!(message.reactions == null || message.reactions.recent_reactions == null)) {
                    for (int i = 0; i < message.reactions.recent_reactions.size(); i++) {
                        ((TLRPC.TL_messagePeerReaction) message.reactions.recent_reactions.get(i)).unread = false;
                    }
                }
            }
            cursor.dispose();
            if (message != null) {
                SQLitePreparedStatement state2 = getMessagesStorage().getDatabase().executeFast(String.format(Locale.US, "UPDATE messages_v2 SET data = ? WHERE uid = %d AND mid = %d", new Object[]{Long.valueOf(dialogId), Integer.valueOf(messageId)}));
                try {
                    NativeByteBuffer data2 = new NativeByteBuffer(message.getObjectSize());
                    message.serializeToStream(data2);
                    state2.bindByteBuffer(1, data2);
                    state2.step();
                    state2.dispose();
                    data2.reuse();
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                }
            }
        } catch (SQLiteException e2) {
            FileLog.e((Throwable) e2);
        }
    }

    public void updateDialogUnreadReactions(long dialogId, int newUnreadCount, boolean increment) {
        this.storageQueue.postRunnable(new MessagesStorage$$ExternalSyntheticLambda91(this, increment, dialogId, newUnreadCount));
    }

    /* renamed from: lambda$updateDialogUnreadReactions$196$org-telegram-messenger-MessagesStorage  reason: not valid java name */
    public /* synthetic */ void m1010xcb50845f(boolean increment, long dialogId, int newUnreadCount) {
        int oldUnreadRactions = 0;
        if (increment) {
            try {
                SQLiteDatabase sQLiteDatabase = this.database;
                SQLiteCursor cursor = sQLiteDatabase.queryFinalized("SELECT unread_reactions FROM dialogs WHERE did = " + dialogId, new Object[0]);
                if (cursor.next()) {
                    oldUnreadRactions = Math.max(0, cursor.intValue(0));
                }
                cursor.dispose();
            } catch (SQLiteException e) {
                e.printStackTrace();
                return;
            }
        }
        SQLitePreparedStatement state = getMessagesStorage().getDatabase().executeFast("UPDATE dialogs SET unread_reactions = ? WHERE did = ?");
        state.bindInteger(1, oldUnreadRactions + newUnreadCount);
        state.bindLong(2, dialogId);
        state.step();
        state.dispose();
    }
}
