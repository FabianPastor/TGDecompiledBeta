package org.telegram.messenger;

import android.text.TextUtils;
import android.util.LongSparseArray;
import android.util.SparseArray;
import android.util.SparseIntArray;
import java.io.File;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.atomic.AtomicLong;
import org.telegram.SQLite.SQLiteCursor;
import org.telegram.SQLite.SQLiteDatabase;
import org.telegram.SQLite.SQLitePreparedStatement;
import org.telegram.messenger.ContactsController;
import org.telegram.messenger.MessagesStorage;
import org.telegram.messenger.support.SparseLongArray;
import org.telegram.tgnet.NativeByteBuffer;
import org.telegram.tgnet.RequestDelegate;
import org.telegram.tgnet.TLObject;
import org.telegram.tgnet.TLRPC;
import org.telegram.ui.ActionBar.Theme;

public class MessagesStorage extends BaseController {
    private static volatile MessagesStorage[] Instance = new MessagesStorage[3];
    private static final int LAST_DB_VERSION = 64;
    private File cacheFile;
    private SQLiteDatabase database;
    private int lastDateValue = 0;
    private int lastPtsValue = 0;
    private int lastQtsValue = 0;
    private int lastSavedDate = 0;
    private int lastSavedPts = 0;
    private int lastSavedQts = 0;
    private int lastSavedSeq = 0;
    private int lastSecretVersion = 0;
    private int lastSeqValue = 0;
    private AtomicLong lastTaskId = new AtomicLong(System.currentTimeMillis());
    private CountDownLatch openSync = new CountDownLatch(1);
    private int secretG = 0;
    private byte[] secretPBytes = null;
    private File shmCacheFile;
    private DispatchQueue storageQueue = new DispatchQueue("storageQueue");
    private File walCacheFile;

    public interface BooleanCallback {
        void run(boolean z);
    }

    public interface IntCallback {
        void run(int i);
    }

    public static MessagesStorage getInstance(int i) {
        MessagesStorage messagesStorage = Instance[i];
        if (messagesStorage == null) {
            synchronized (MessagesStorage.class) {
                messagesStorage = Instance[i];
                if (messagesStorage == null) {
                    MessagesStorage[] messagesStorageArr = Instance;
                    MessagesStorage messagesStorage2 = new MessagesStorage(i);
                    messagesStorageArr[i] = messagesStorage2;
                    messagesStorage = messagesStorage2;
                }
            }
        }
        return messagesStorage;
    }

    private void ensureOpened() {
        try {
            this.openSync.await();
        } catch (Throwable unused) {
        }
    }

    public int getLastDateValue() {
        ensureOpened();
        return this.lastDateValue;
    }

    public void setLastDateValue(int i) {
        ensureOpened();
        this.lastDateValue = i;
    }

    public int getLastPtsValue() {
        ensureOpened();
        return this.lastPtsValue;
    }

    public void setLastPtsValue(int i) {
        ensureOpened();
        this.lastPtsValue = i;
    }

    public int getLastQtsValue() {
        ensureOpened();
        return this.lastQtsValue;
    }

    public void setLastQtsValue(int i) {
        ensureOpened();
        this.lastQtsValue = i;
    }

    public int getLastSeqValue() {
        ensureOpened();
        return this.lastSeqValue;
    }

    public void setLastSeqValue(int i) {
        ensureOpened();
        this.lastSeqValue = i;
    }

    public int getLastSecretVersion() {
        ensureOpened();
        return this.lastSecretVersion;
    }

    public void setLastSecretVersion(int i) {
        ensureOpened();
        this.lastSecretVersion = i;
    }

    public byte[] getSecretPBytes() {
        ensureOpened();
        return this.secretPBytes;
    }

    public void setSecretPBytes(byte[] bArr) {
        ensureOpened();
        this.secretPBytes = bArr;
    }

    public int getSecretG() {
        ensureOpened();
        return this.secretG;
    }

    public void setSecretG(int i) {
        ensureOpened();
        this.secretG = i;
    }

    public MessagesStorage(int i) {
        super(i);
        this.storageQueue.postRunnable(new Runnable() {
            public final void run() {
                MessagesStorage.this.lambda$new$0$MessagesStorage();
            }
        });
    }

    public /* synthetic */ void lambda$new$0$MessagesStorage() {
        openDatabase(1);
    }

    public SQLiteDatabase getDatabase() {
        return this.database;
    }

    public DispatchQueue getStorageQueue() {
        return this.storageQueue;
    }

    public long getDatabaseSize() {
        File file = this.cacheFile;
        long j = 0;
        if (file != null) {
            j = 0 + file.length();
        }
        File file2 = this.shmCacheFile;
        return file2 != null ? j + file2.length() : j;
    }

    public void openDatabase(int i) {
        int i2 = i;
        File filesDirFixed = ApplicationLoader.getFilesDirFixed();
        if (this.currentAccount != 0) {
            File file = new File(filesDirFixed, "account" + this.currentAccount + "/");
            file.mkdirs();
            filesDirFixed = file;
        }
        this.cacheFile = new File(filesDirFixed, "cache4.db");
        this.walCacheFile = new File(filesDirFixed, "cache4.db-wal");
        this.shmCacheFile = new File(filesDirFixed, "cache4.db-shm");
        boolean z = !this.cacheFile.exists();
        int i3 = 3;
        try {
            this.database = new SQLiteDatabase(this.cacheFile.getPath());
            this.database.executeFast("PRAGMA secure_delete = ON").stepThis().dispose();
            this.database.executeFast("PRAGMA temp_store = 1").stepThis().dispose();
            this.database.executeFast("PRAGMA journal_mode = WAL").stepThis().dispose();
            if (z) {
                if (BuildVars.LOGS_ENABLED) {
                    FileLog.d("create new database");
                }
                this.database.executeFast("CREATE TABLE messages_holes(uid INTEGER, start INTEGER, end INTEGER, PRIMARY KEY(uid, start));").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_end_messages_holes ON messages_holes(uid, end);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE media_holes_v2(uid INTEGER, type INTEGER, start INTEGER, end INTEGER, PRIMARY KEY(uid, type, start));").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_end_media_holes_v2 ON media_holes_v2(uid, type, end);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE scheduled_messages(mid INTEGER PRIMARY KEY, uid INTEGER, send_state INTEGER, date INTEGER, data BLOB, ttl INTEGER, replydata BLOB)").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS send_state_idx_scheduled_messages ON scheduled_messages(mid, send_state, date);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_date_idx_scheduled_messages ON scheduled_messages(uid, date);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE messages(mid INTEGER PRIMARY KEY, uid INTEGER, read_state INTEGER, send_state INTEGER, date INTEGER, data BLOB, out INTEGER, ttl INTEGER, media INTEGER, replydata BLOB, imp INTEGER, mention INTEGER)").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_mid_idx_messages ON messages(uid, mid);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_date_mid_idx_messages ON messages(uid, date, mid);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS mid_out_idx_messages ON messages(mid, out);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS task_idx_messages ON messages(uid, out, read_state, ttl, date, send_state);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS send_state_idx_messages2 ON messages(mid, send_state, date);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_mention_idx_messages ON messages(uid, mention, read_state);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE download_queue(uid INTEGER, type INTEGER, date INTEGER, data BLOB, parent TEXT, PRIMARY KEY (uid, type));").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS type_date_idx_download_queue ON download_queue(type, date);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE user_contacts_v7(key TEXT PRIMARY KEY, uid INTEGER, fname TEXT, sname TEXT, imported INTEGER)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE user_phones_v7(key TEXT, phone TEXT, sphone TEXT, deleted INTEGER, PRIMARY KEY (key, phone))").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS sphone_deleted_idx_user_phones ON user_phones_v7(sphone, deleted);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE dialogs(did INTEGER PRIMARY KEY, date INTEGER, unread_count INTEGER, last_mid INTEGER, inbox_max INTEGER, outbox_max INTEGER, last_mid_i INTEGER, unread_count_i INTEGER, pts INTEGER, date_i INTEGER, pinned INTEGER, flags INTEGER, folder_id INTEGER, data BLOB)").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS date_idx_dialogs ON dialogs(date);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS last_mid_idx_dialogs ON dialogs(last_mid);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS unread_count_idx_dialogs ON dialogs(unread_count);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS last_mid_i_idx_dialogs ON dialogs(last_mid_i);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS unread_count_i_idx_dialogs ON dialogs(unread_count_i);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS folder_id_idx_dialogs ON dialogs(folder_id);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE randoms(random_id INTEGER, mid INTEGER, PRIMARY KEY (random_id, mid))").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS mid_idx_randoms ON randoms(mid);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE enc_tasks_v2(mid INTEGER PRIMARY KEY, date INTEGER)").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS date_idx_enc_tasks_v2 ON enc_tasks_v2(date);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE messages_seq(mid INTEGER PRIMARY KEY, seq_in INTEGER, seq_out INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS seq_idx_messages_seq ON messages_seq(seq_in, seq_out);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE params(id INTEGER PRIMARY KEY, seq INTEGER, pts INTEGER, date INTEGER, qts INTEGER, lsv INTEGER, sg INTEGER, pbytes BLOB)").stepThis().dispose();
                this.database.executeFast("INSERT INTO params VALUES(1, 0, 0, 0, 0, 0, 0, NULL)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE media_v2(mid INTEGER PRIMARY KEY, uid INTEGER, date INTEGER, type INTEGER, data BLOB)").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_mid_type_date_idx_media ON media_v2(uid, mid, type, date);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE bot_keyboard(uid INTEGER PRIMARY KEY, mid INTEGER, info BLOB)").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS bot_keyboard_idx_mid ON bot_keyboard(mid);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE chat_settings_v2(uid INTEGER PRIMARY KEY, info BLOB, pinned INTEGER, online INTEGER)").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS chat_settings_pinned_idx ON chat_settings_v2(uid, pinned) WHERE pinned != 0;").stepThis().dispose();
                this.database.executeFast("CREATE TABLE user_settings(uid INTEGER PRIMARY KEY, info BLOB, pinned INTEGER)").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS user_settings_pinned_idx ON user_settings(uid, pinned) WHERE pinned != 0;").stepThis().dispose();
                this.database.executeFast("CREATE TABLE chat_pinned(uid INTEGER PRIMARY KEY, pinned INTEGER, data BLOB)").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS chat_pinned_mid_idx ON chat_pinned(uid, pinned) WHERE pinned != 0;").stepThis().dispose();
                this.database.executeFast("CREATE TABLE chat_hints(did INTEGER, type INTEGER, rating REAL, date INTEGER, PRIMARY KEY(did, type))").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS chat_hints_rating_idx ON chat_hints(rating);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE botcache(id TEXT PRIMARY KEY, date INTEGER, data BLOB)").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS botcache_date_idx ON botcache(date);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE users_data(uid INTEGER PRIMARY KEY, about TEXT)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE users(uid INTEGER PRIMARY KEY, name TEXT, status INTEGER, data BLOB)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE chats(uid INTEGER PRIMARY KEY, name TEXT, data BLOB)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE enc_chats(uid INTEGER PRIMARY KEY, user INTEGER, name TEXT, data BLOB, g BLOB, authkey BLOB, ttl INTEGER, layer INTEGER, seq_in INTEGER, seq_out INTEGER, use_count INTEGER, exchange_id INTEGER, key_date INTEGER, fprint INTEGER, fauthkey BLOB, khash BLOB, in_seq_no INTEGER, admin_id INTEGER, mtproto_seq INTEGER)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE channel_users_v2(did INTEGER, uid INTEGER, date INTEGER, data BLOB, PRIMARY KEY(did, uid))").stepThis().dispose();
                this.database.executeFast("CREATE TABLE channel_admins_v2(did INTEGER, uid INTEGER, rank TEXT, PRIMARY KEY(did, uid))").stepThis().dispose();
                this.database.executeFast("CREATE TABLE contacts(uid INTEGER PRIMARY KEY, mutual INTEGER)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE user_photos(uid INTEGER, id INTEGER, data BLOB, PRIMARY KEY (uid, id))").stepThis().dispose();
                this.database.executeFast("CREATE TABLE dialog_settings(did INTEGER PRIMARY KEY, flags INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE web_recent_v3(id TEXT, type INTEGER, image_url TEXT, thumb_url TEXT, local_url TEXT, width INTEGER, height INTEGER, size INTEGER, date INTEGER, document BLOB, PRIMARY KEY (id, type));").stepThis().dispose();
                this.database.executeFast("CREATE TABLE stickers_v2(id INTEGER PRIMARY KEY, data BLOB, date INTEGER, hash TEXT);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE stickers_featured(id INTEGER PRIMARY KEY, data BLOB, unread BLOB, date INTEGER, hash TEXT);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE hashtag_recent_v2(id TEXT PRIMARY KEY, date INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE webpage_pending(id INTEGER, mid INTEGER, PRIMARY KEY (id, mid));").stepThis().dispose();
                this.database.executeFast("CREATE TABLE sent_files_v2(uid TEXT, type INTEGER, data BLOB, parent TEXT, PRIMARY KEY (uid, type))").stepThis().dispose();
                this.database.executeFast("CREATE TABLE search_recent(did INTEGER PRIMARY KEY, date INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE media_counts_v2(uid INTEGER, type INTEGER, count INTEGER, old INTEGER, PRIMARY KEY(uid, type))").stepThis().dispose();
                this.database.executeFast("CREATE TABLE keyvalue(id TEXT PRIMARY KEY, value TEXT)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE bot_info(uid INTEGER PRIMARY KEY, info BLOB)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE pending_tasks(id INTEGER PRIMARY KEY, data BLOB);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE requested_holes(uid INTEGER, seq_out_start INTEGER, seq_out_end INTEGER, PRIMARY KEY (uid, seq_out_start, seq_out_end));").stepThis().dispose();
                this.database.executeFast("CREATE TABLE sharing_locations(uid INTEGER PRIMARY KEY, mid INTEGER, date INTEGER, period INTEGER, message BLOB);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE emoji_keywords_v2(lang TEXT, keyword TEXT, emoji TEXT, PRIMARY KEY(lang, keyword, emoji));").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS emoji_keywords_v2_keyword ON emoji_keywords_v2(keyword);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE emoji_keywords_info_v2(lang TEXT PRIMARY KEY, alias TEXT, version INTEGER, date INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE wallpapers2(uid INTEGER PRIMARY KEY, data BLOB, num INTEGER)").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS wallpapers_num ON wallpapers2(num);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE unread_push_messages(uid INTEGER, mid INTEGER, random INTEGER, date INTEGER, data BLOB, fm TEXT, name TEXT, uname TEXT, flags INTEGER, PRIMARY KEY(uid, mid))").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS unread_push_messages_idx_date ON unread_push_messages(date);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS unread_push_messages_idx_random ON unread_push_messages(random);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE polls(mid INTEGER PRIMARY KEY, id INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS polls_id ON polls(id);").stepThis().dispose();
                this.database.executeFast("PRAGMA user_version = 64").stepThis().dispose();
                loadUnreadMessages();
                loadPendingTasks();
                try {
                    this.openSync.countDown();
                } catch (Throwable unused) {
                }
            } else {
                int intValue = this.database.executeInt("PRAGMA user_version", new Object[0]).intValue();
                if (BuildVars.LOGS_ENABLED) {
                    FileLog.d("current db version = " + intValue);
                }
                if (intValue != 0) {
                    try {
                        SQLiteCursor queryFinalized = this.database.queryFinalized("SELECT seq, pts, date, qts, lsv, sg, pbytes FROM params WHERE id = 1", new Object[0]);
                        if (queryFinalized.next()) {
                            this.lastSeqValue = queryFinalized.intValue(0);
                            this.lastPtsValue = queryFinalized.intValue(1);
                            this.lastDateValue = queryFinalized.intValue(2);
                            this.lastQtsValue = queryFinalized.intValue(3);
                            this.lastSecretVersion = queryFinalized.intValue(4);
                            this.secretG = queryFinalized.intValue(5);
                            if (queryFinalized.isNull(6)) {
                                this.secretPBytes = null;
                            } else {
                                this.secretPBytes = queryFinalized.byteArrayValue(6);
                                if (this.secretPBytes != null && this.secretPBytes.length == 1) {
                                    this.secretPBytes = null;
                                }
                            }
                        }
                        queryFinalized.dispose();
                    } catch (Exception e) {
                        FileLog.e((Throwable) e);
                        try {
                            this.database.executeFast("CREATE TABLE IF NOT EXISTS params(id INTEGER PRIMARY KEY, seq INTEGER, pts INTEGER, date INTEGER, qts INTEGER, lsv INTEGER, sg INTEGER, pbytes BLOB)").stepThis().dispose();
                            this.database.executeFast("INSERT INTO params VALUES(1, 0, 0, 0, 0, 0, 0, NULL)").stepThis().dispose();
                        } catch (Exception e2) {
                            FileLog.e((Throwable) e2);
                        }
                    }
                    if (intValue < 64) {
                        updateDbToLastVersion(intValue);
                    }
                    loadUnreadMessages();
                    loadPendingTasks();
                    this.openSync.countDown();
                }
                throw new Exception("malformed");
            }
        } catch (Exception e3) {
            FileLog.e((Throwable) e3);
            if (i2 < 3 && e3.getMessage().contains("malformed")) {
                if (i2 == 2) {
                    cleanupInternal(true);
                    for (int i4 = 0; i4 < 2; i4++) {
                        getUserConfig().setDialogsLoadOffset(i4, 0, 0, 0, 0, 0, 0);
                        getUserConfig().setTotalDialogsCount(i4, 0);
                    }
                    getUserConfig().saveConfig(false);
                } else {
                    cleanupInternal(false);
                }
                if (i2 == 1) {
                    i3 = 2;
                }
                openDatabase(i3);
            }
        }
    }

    private void updateDbToLastVersion(int i) {
        this.storageQueue.postRunnable(new Runnable(i) {
            private final /* synthetic */ int f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$updateDbToLastVersion$1$MessagesStorage(this.f$1);
            }
        });
    }

    public /* synthetic */ void lambda$updateDbToLastVersion$1$MessagesStorage(int i) {
        if (i < 4) {
            try {
                this.database.executeFast("CREATE TABLE IF NOT EXISTS user_photos(uid INTEGER, id INTEGER, data BLOB, PRIMARY KEY (uid, id))").stepThis().dispose();
                this.database.executeFast("DROP INDEX IF EXISTS read_state_out_idx_messages;").stepThis().dispose();
                this.database.executeFast("DROP INDEX IF EXISTS ttl_idx_messages;").stepThis().dispose();
                this.database.executeFast("DROP INDEX IF EXISTS date_idx_messages;").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS mid_out_idx_messages ON messages(mid, out);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS task_idx_messages ON messages(uid, out, read_state, ttl, date, send_state);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_date_mid_idx_messages ON messages(uid, date, mid);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE IF NOT EXISTS user_contacts_v6(uid INTEGER PRIMARY KEY, fname TEXT, sname TEXT)").stepThis().dispose();
                this.database.executeFast("CREATE TABLE IF NOT EXISTS user_phones_v6(uid INTEGER, phone TEXT, sphone TEXT, deleted INTEGER, PRIMARY KEY (uid, phone))").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS sphone_deleted_idx_user_phones ON user_phones_v6(sphone, deleted);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS mid_idx_randoms ON randoms(mid);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE IF NOT EXISTS sent_files_v2(uid TEXT, type INTEGER, data BLOB, PRIMARY KEY (uid, type))").stepThis().dispose();
                this.database.executeFast("CREATE TABLE IF NOT EXISTS download_queue(uid INTEGER, type INTEGER, date INTEGER, data BLOB, PRIMARY KEY (uid, type));").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS type_date_idx_download_queue ON download_queue(type, date);").stepThis().dispose();
                this.database.executeFast("CREATE TABLE IF NOT EXISTS dialog_settings(did INTEGER PRIMARY KEY, flags INTEGER);").stepThis().dispose();
                this.database.executeFast("CREATE INDEX IF NOT EXISTS unread_count_idx_dialogs ON dialogs(unread_count);").stepThis().dispose();
                this.database.executeFast("UPDATE messages SET send_state = 2 WHERE mid < 0 AND send_state = 1").stepThis().dispose();
                fixNotificationSettings();
                this.database.executeFast("PRAGMA user_version = 4").stepThis().dispose();
                i = 4;
            } catch (Exception e) {
                FileLog.e((Throwable) e);
                return;
            }
        }
        if (i == 4) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS enc_tasks_v2(mid INTEGER PRIMARY KEY, date INTEGER)").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS date_idx_enc_tasks_v2 ON enc_tasks_v2(date);").stepThis().dispose();
            this.database.beginTransaction();
            SQLiteCursor queryFinalized = this.database.queryFinalized("SELECT date, data FROM enc_tasks WHERE 1", new Object[0]);
            SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO enc_tasks_v2 VALUES(?, ?)");
            if (queryFinalized.next()) {
                int intValue = queryFinalized.intValue(0);
                NativeByteBuffer byteBufferValue = queryFinalized.byteBufferValue(1);
                if (byteBufferValue != null) {
                    int limit = byteBufferValue.limit();
                    for (int i2 = 0; i2 < limit / 4; i2++) {
                        executeFast.requery();
                        executeFast.bindInteger(1, byteBufferValue.readInt32(false));
                        executeFast.bindInteger(2, intValue);
                        executeFast.step();
                    }
                    byteBufferValue.reuse();
                }
            }
            executeFast.dispose();
            queryFinalized.dispose();
            this.database.commitTransaction();
            this.database.executeFast("DROP INDEX IF EXISTS date_idx_enc_tasks;").stepThis().dispose();
            this.database.executeFast("DROP TABLE IF EXISTS enc_tasks;").stepThis().dispose();
            this.database.executeFast("ALTER TABLE messages ADD COLUMN media INTEGER default 0").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 6").stepThis().dispose();
            i = 6;
        }
        if (i == 6) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS messages_seq(mid INTEGER PRIMARY KEY, seq_in INTEGER, seq_out INTEGER);").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS seq_idx_messages_seq ON messages_seq(seq_in, seq_out);").stepThis().dispose();
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN layer INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN seq_in INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN seq_out INTEGER default 0").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 7").stepThis().dispose();
            i = 7;
        }
        if (i == 7 || i == 8 || i == 9) {
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN use_count INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN exchange_id INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN key_date INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN fprint INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN fauthkey BLOB default NULL").stepThis().dispose();
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN khash BLOB default NULL").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 10").stepThis().dispose();
            i = 10;
        }
        if (i == 10) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS web_recent_v3(id TEXT, type INTEGER, image_url TEXT, thumb_url TEXT, local_url TEXT, width INTEGER, height INTEGER, size INTEGER, date INTEGER, PRIMARY KEY (id, type));").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 11").stepThis().dispose();
            i = 11;
        }
        if (i == 11 || i == 12) {
            this.database.executeFast("DROP INDEX IF EXISTS uid_mid_idx_media;").stepThis().dispose();
            this.database.executeFast("DROP INDEX IF EXISTS mid_idx_media;").stepThis().dispose();
            this.database.executeFast("DROP INDEX IF EXISTS uid_date_mid_idx_media;").stepThis().dispose();
            this.database.executeFast("DROP TABLE IF EXISTS media;").stepThis().dispose();
            this.database.executeFast("DROP TABLE IF EXISTS media_counts;").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS media_v2(mid INTEGER PRIMARY KEY, uid INTEGER, date INTEGER, type INTEGER, data BLOB)").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS media_counts_v2(uid INTEGER, type INTEGER, count INTEGER, PRIMARY KEY(uid, type))").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_mid_type_date_idx_media ON media_v2(uid, mid, type, date);").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS keyvalue(id TEXT PRIMARY KEY, value TEXT)").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 13").stepThis().dispose();
            i = 13;
        }
        if (i == 13) {
            this.database.executeFast("ALTER TABLE messages ADD COLUMN replydata BLOB default NULL").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 14").stepThis().dispose();
            i = 14;
        }
        if (i == 14) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS hashtag_recent_v2(id TEXT PRIMARY KEY, date INTEGER);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 15").stepThis().dispose();
            i = 15;
        }
        if (i == 15) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS webpage_pending(id INTEGER, mid INTEGER, PRIMARY KEY (id, mid));").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 16").stepThis().dispose();
            i = 16;
        }
        if (i == 16) {
            this.database.executeFast("ALTER TABLE dialogs ADD COLUMN inbox_max INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE dialogs ADD COLUMN outbox_max INTEGER default 0").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 17").stepThis().dispose();
            i = 17;
        }
        if (i == 17) {
            this.database.executeFast("CREATE TABLE bot_info(uid INTEGER PRIMARY KEY, info BLOB)").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 18").stepThis().dispose();
            i = 18;
        }
        if (i == 18) {
            this.database.executeFast("DROP TABLE IF EXISTS stickers;").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS stickers_v2(id INTEGER PRIMARY KEY, data BLOB, date INTEGER, hash TEXT);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 19").stepThis().dispose();
            i = 19;
        }
        if (i == 19) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS bot_keyboard(uid INTEGER PRIMARY KEY, mid INTEGER, info BLOB)").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS bot_keyboard_idx_mid ON bot_keyboard(mid);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 20").stepThis().dispose();
            i = 20;
        }
        if (i == 20) {
            this.database.executeFast("CREATE TABLE search_recent(did INTEGER PRIMARY KEY, date INTEGER);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 21").stepThis().dispose();
            i = 21;
        }
        if (i == 21) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS chat_settings_v2(uid INTEGER PRIMARY KEY, info BLOB)").stepThis().dispose();
            SQLiteCursor queryFinalized2 = this.database.queryFinalized("SELECT uid, participants FROM chat_settings WHERE uid < 0", new Object[0]);
            SQLitePreparedStatement executeFast2 = this.database.executeFast("REPLACE INTO chat_settings_v2 VALUES(?, ?)");
            while (queryFinalized2.next()) {
                int intValue2 = queryFinalized2.intValue(0);
                NativeByteBuffer byteBufferValue2 = queryFinalized2.byteBufferValue(1);
                if (byteBufferValue2 != null) {
                    TLRPC.ChatParticipants TLdeserialize = TLRPC.ChatParticipants.TLdeserialize(byteBufferValue2, byteBufferValue2.readInt32(false), false);
                    byteBufferValue2.reuse();
                    if (TLdeserialize != null) {
                        TLRPC.TL_chatFull tL_chatFull = new TLRPC.TL_chatFull();
                        tL_chatFull.id = intValue2;
                        tL_chatFull.chat_photo = new TLRPC.TL_photoEmpty();
                        tL_chatFull.notify_settings = new TLRPC.TL_peerNotifySettingsEmpty_layer77();
                        tL_chatFull.exported_invite = new TLRPC.TL_chatInviteEmpty();
                        tL_chatFull.participants = TLdeserialize;
                        NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(tL_chatFull.getObjectSize());
                        tL_chatFull.serializeToStream(nativeByteBuffer);
                        executeFast2.requery();
                        executeFast2.bindInteger(1, intValue2);
                        executeFast2.bindByteBuffer(2, nativeByteBuffer);
                        executeFast2.step();
                        nativeByteBuffer.reuse();
                    }
                }
            }
            executeFast2.dispose();
            queryFinalized2.dispose();
            this.database.executeFast("DROP TABLE IF EXISTS chat_settings;").stepThis().dispose();
            this.database.executeFast("ALTER TABLE dialogs ADD COLUMN last_mid_i INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE dialogs ADD COLUMN unread_count_i INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE dialogs ADD COLUMN pts INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE dialogs ADD COLUMN date_i INTEGER default 0").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS last_mid_i_idx_dialogs ON dialogs(last_mid_i);").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS unread_count_i_idx_dialogs ON dialogs(unread_count_i);").stepThis().dispose();
            this.database.executeFast("ALTER TABLE messages ADD COLUMN imp INTEGER default 0").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS messages_holes(uid INTEGER, start INTEGER, end INTEGER, PRIMARY KEY(uid, start));").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_end_messages_holes ON messages_holes(uid, end);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 22").stepThis().dispose();
            i = 22;
        }
        if (i == 22) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS media_holes_v2(uid INTEGER, type INTEGER, start INTEGER, end INTEGER, PRIMARY KEY(uid, type, start));").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_end_media_holes_v2 ON media_holes_v2(uid, type, end);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 23").stepThis().dispose();
            i = 23;
        }
        if (i == 23 || i == 24) {
            this.database.executeFast("DELETE FROM media_holes_v2 WHERE uid != 0 AND type >= 0 AND start IN (0, 1)").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 25").stepThis().dispose();
            i = 25;
        }
        if (i == 25 || i == 26) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS channel_users_v2(did INTEGER, uid INTEGER, date INTEGER, data BLOB, PRIMARY KEY(did, uid))").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 27").stepThis().dispose();
            i = 27;
        }
        if (i == 27) {
            this.database.executeFast("ALTER TABLE web_recent_v3 ADD COLUMN document BLOB default NULL").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 28").stepThis().dispose();
            i = 28;
        }
        if (i == 28 || i == 29) {
            this.database.executeFast("DELETE FROM sent_files_v2 WHERE 1").stepThis().dispose();
            this.database.executeFast("DELETE FROM download_queue WHERE 1").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 30").stepThis().dispose();
            i = 30;
        }
        if (i == 30) {
            this.database.executeFast("ALTER TABLE chat_settings_v2 ADD COLUMN pinned INTEGER default 0").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS chat_settings_pinned_idx ON chat_settings_v2(uid, pinned) WHERE pinned != 0;").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS chat_pinned(uid INTEGER PRIMARY KEY, pinned INTEGER, data BLOB)").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS chat_pinned_mid_idx ON chat_pinned(uid, pinned) WHERE pinned != 0;").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS users_data(uid INTEGER PRIMARY KEY, about TEXT)").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 31").stepThis().dispose();
            i = 31;
        }
        if (i == 31) {
            this.database.executeFast("DROP TABLE IF EXISTS bot_recent;").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS chat_hints(did INTEGER, type INTEGER, rating REAL, date INTEGER, PRIMARY KEY(did, type))").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS chat_hints_rating_idx ON chat_hints(rating);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 32").stepThis().dispose();
            i = 32;
        }
        if (i == 32) {
            this.database.executeFast("DROP INDEX IF EXISTS uid_mid_idx_imp_messages;").stepThis().dispose();
            this.database.executeFast("DROP INDEX IF EXISTS uid_date_mid_imp_idx_messages;").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 33").stepThis().dispose();
            i = 33;
        }
        if (i == 33) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS pending_tasks(id INTEGER PRIMARY KEY, data BLOB);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 34").stepThis().dispose();
            i = 34;
        }
        if (i == 34) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS stickers_featured(id INTEGER PRIMARY KEY, data BLOB, unread BLOB, date INTEGER, hash TEXT);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 35").stepThis().dispose();
            i = 35;
        }
        if (i == 35) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS requested_holes(uid INTEGER, seq_out_start INTEGER, seq_out_end INTEGER, PRIMARY KEY (uid, seq_out_start, seq_out_end));").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 36").stepThis().dispose();
            i = 36;
        }
        if (i == 36) {
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN in_seq_no INTEGER default 0").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 37").stepThis().dispose();
            i = 37;
        }
        if (i == 37) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS botcache(id TEXT PRIMARY KEY, date INTEGER, data BLOB)").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS botcache_date_idx ON botcache(date);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 38").stepThis().dispose();
            i = 38;
        }
        if (i == 38) {
            this.database.executeFast("ALTER TABLE dialogs ADD COLUMN pinned INTEGER default 0").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 39").stepThis().dispose();
            i = 39;
        }
        if (i == 39) {
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN admin_id INTEGER default 0").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 40").stepThis().dispose();
            i = 40;
        }
        if (i == 40) {
            fixNotificationSettings();
            this.database.executeFast("PRAGMA user_version = 41").stepThis().dispose();
            i = 41;
        }
        if (i == 41) {
            this.database.executeFast("ALTER TABLE messages ADD COLUMN mention INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE user_contacts_v6 ADD COLUMN imported INTEGER default 0").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_mention_idx_messages ON messages(uid, mention, read_state);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 42").stepThis().dispose();
            i = 42;
        }
        if (i == 42) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS sharing_locations(uid INTEGER PRIMARY KEY, mid INTEGER, date INTEGER, period INTEGER, message BLOB);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 43").stepThis().dispose();
            i = 43;
        }
        if (i == 43) {
            this.database.executeFast("PRAGMA user_version = 44").stepThis().dispose();
            i = 44;
        }
        if (i == 44) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS user_contacts_v7(key TEXT PRIMARY KEY, uid INTEGER, fname TEXT, sname TEXT, imported INTEGER)").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS user_phones_v7(key TEXT, phone TEXT, sphone TEXT, deleted INTEGER, PRIMARY KEY (key, phone))").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS sphone_deleted_idx_user_phones ON user_phones_v7(sphone, deleted);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 45").stepThis().dispose();
            i = 45;
        }
        if (i == 45) {
            this.database.executeFast("ALTER TABLE enc_chats ADD COLUMN mtproto_seq INTEGER default 0").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 46").stepThis().dispose();
            i = 46;
        }
        if (i == 46) {
            this.database.executeFast("DELETE FROM botcache WHERE 1").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 47").stepThis().dispose();
            i = 47;
        }
        if (i == 47) {
            this.database.executeFast("ALTER TABLE dialogs ADD COLUMN flags INTEGER default 0").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 48").stepThis().dispose();
            i = 48;
        }
        if (i == 48) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS unread_push_messages(uid INTEGER, mid INTEGER, random INTEGER, date INTEGER, data BLOB, fm TEXT, name TEXT, uname TEXT, flags INTEGER, PRIMARY KEY(uid, mid))").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS unread_push_messages_idx_date ON unread_push_messages(date);").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS unread_push_messages_idx_random ON unread_push_messages(random);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 49").stepThis().dispose();
            i = 49;
        }
        if (i == 49) {
            this.database.executeFast("DELETE FROM chat_pinned WHERE uid = 1").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS user_settings(uid INTEGER PRIMARY KEY, info BLOB, pinned INTEGER)").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS user_settings_pinned_idx ON user_settings(uid, pinned) WHERE pinned != 0;").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 50").stepThis().dispose();
            i = 50;
        }
        if (i == 50) {
            this.database.executeFast("DELETE FROM sent_files_v2 WHERE 1").stepThis().dispose();
            this.database.executeFast("ALTER TABLE sent_files_v2 ADD COLUMN parent TEXT").stepThis().dispose();
            this.database.executeFast("DELETE FROM download_queue WHERE 1").stepThis().dispose();
            this.database.executeFast("ALTER TABLE download_queue ADD COLUMN parent TEXT").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 51").stepThis().dispose();
            i = 51;
        }
        if (i == 51) {
            this.database.executeFast("ALTER TABLE media_counts_v2 ADD COLUMN old INTEGER").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 52").stepThis().dispose();
            i = 52;
        }
        if (i == 52) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS polls(mid INTEGER PRIMARY KEY, id INTEGER);").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS polls_id ON polls(id);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 53").stepThis().dispose();
            i = 53;
        }
        if (i == 53) {
            this.database.executeFast("ALTER TABLE chat_settings_v2 ADD COLUMN online INTEGER default 0").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 54").stepThis().dispose();
            i = 54;
        }
        if (i == 54) {
            this.database.executeFast("DROP TABLE IF EXISTS wallpapers;").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 55").stepThis().dispose();
            i = 55;
        }
        if (i == 55) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS wallpapers2(uid INTEGER PRIMARY KEY, data BLOB, num INTEGER)").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS wallpapers_num ON wallpapers2(num);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 56").stepThis().dispose();
            i = 56;
        }
        if (i == 56 || i == 57) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS emoji_keywords_v2(lang TEXT, keyword TEXT, emoji TEXT, PRIMARY KEY(lang, keyword, emoji));").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS emoji_keywords_info_v2(lang TEXT PRIMARY KEY, alias TEXT, version INTEGER);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 58").stepThis().dispose();
            i = 58;
        }
        if (i == 58) {
            this.database.executeFast("CREATE INDEX IF NOT EXISTS emoji_keywords_v2_keyword ON emoji_keywords_v2(keyword);").stepThis().dispose();
            this.database.executeFast("ALTER TABLE emoji_keywords_info_v2 ADD COLUMN date INTEGER default 0").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 59").stepThis().dispose();
            i = 59;
        }
        if (i == 59) {
            this.database.executeFast("ALTER TABLE dialogs ADD COLUMN folder_id INTEGER default 0").stepThis().dispose();
            this.database.executeFast("ALTER TABLE dialogs ADD COLUMN data BLOB default NULL").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS folder_id_idx_dialogs ON dialogs(folder_id);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 60").stepThis().dispose();
            i = 60;
        }
        if (i == 60) {
            this.database.executeFast("DROP TABLE IF EXISTS channel_admins;").stepThis().dispose();
            this.database.executeFast("DROP TABLE IF EXISTS blocked_users;").stepThis().dispose();
            this.database.executeFast("CREATE TABLE IF NOT EXISTS channel_admins_v2(did INTEGER, uid INTEGER, rank TEXT, PRIMARY KEY(did, uid))").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 61").stepThis().dispose();
            i = 61;
        }
        if (i == 61) {
            this.database.executeFast("DROP INDEX IF EXISTS send_state_idx_messages;").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS send_state_idx_messages2 ON messages(mid, send_state, date);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 62").stepThis().dispose();
            i = 62;
        }
        if (i == 62) {
            this.database.executeFast("CREATE TABLE IF NOT EXISTS scheduled_messages(mid INTEGER PRIMARY KEY, uid INTEGER, send_state INTEGER, date INTEGER, data BLOB, ttl INTEGER, replydata BLOB)").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS send_state_idx_scheduled_messages ON scheduled_messages(mid, send_state, date);").stepThis().dispose();
            this.database.executeFast("CREATE INDEX IF NOT EXISTS uid_date_idx_scheduled_messages ON scheduled_messages(uid, date);").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 63").stepThis().dispose();
            i = 63;
        }
        if (i == 63) {
            this.database.executeFast("DELETE FROM download_queue WHERE 1").stepThis().dispose();
            this.database.executeFast("PRAGMA user_version = 64").stepThis().dispose();
        }
    }

    private void cleanupInternal(boolean z) {
        this.lastDateValue = 0;
        this.lastSeqValue = 0;
        this.lastPtsValue = 0;
        this.lastQtsValue = 0;
        this.lastSecretVersion = 0;
        this.lastSavedSeq = 0;
        this.lastSavedPts = 0;
        this.lastSavedDate = 0;
        this.lastSavedQts = 0;
        this.secretPBytes = null;
        this.secretG = 0;
        SQLiteDatabase sQLiteDatabase = this.database;
        if (sQLiteDatabase != null) {
            sQLiteDatabase.close();
            this.database = null;
        }
        if (z) {
            File file = this.cacheFile;
            if (file != null) {
                file.delete();
                this.cacheFile = null;
            }
            File file2 = this.walCacheFile;
            if (file2 != null) {
                file2.delete();
                this.walCacheFile = null;
            }
            File file3 = this.shmCacheFile;
            if (file3 != null) {
                file3.delete();
                this.shmCacheFile = null;
            }
        }
    }

    public void cleanup(boolean z) {
        if (!z) {
            this.storageQueue.cleanupQueue();
        }
        this.storageQueue.postRunnable(new Runnable(z) {
            private final /* synthetic */ boolean f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$cleanup$3$MessagesStorage(this.f$1);
            }
        });
    }

    public /* synthetic */ void lambda$cleanup$3$MessagesStorage(boolean z) {
        cleanupInternal(true);
        openDatabase(1);
        if (z) {
            Utilities.stageQueue.postRunnable(new Runnable() {
                public final void run() {
                    MessagesStorage.this.lambda$null$2$MessagesStorage();
                }
            });
        }
    }

    public /* synthetic */ void lambda$null$2$MessagesStorage() {
        getMessagesController().getDifference();
    }

    public void saveSecretParams(int i, int i2, byte[] bArr) {
        this.storageQueue.postRunnable(new Runnable(i, i2, bArr) {
            private final /* synthetic */ int f$1;
            private final /* synthetic */ int f$2;
            private final /* synthetic */ byte[] f$3;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$saveSecretParams$4$MessagesStorage(this.f$1, this.f$2, this.f$3);
            }
        });
    }

    public /* synthetic */ void lambda$saveSecretParams$4$MessagesStorage(int i, int i2, byte[] bArr) {
        try {
            SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE params SET lsv = ?, sg = ?, pbytes = ? WHERE id = 1");
            int i3 = 1;
            executeFast.bindInteger(1, i);
            executeFast.bindInteger(2, i2);
            if (bArr != null) {
                i3 = bArr.length;
            }
            NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(i3);
            if (bArr != null) {
                nativeByteBuffer.writeBytes(bArr);
            }
            executeFast.bindByteBuffer(3, nativeByteBuffer);
            executeFast.step();
            executeFast.dispose();
            nativeByteBuffer.reuse();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    private void fixNotificationSettings() {
        this.storageQueue.postRunnable(new Runnable() {
            public final void run() {
                MessagesStorage.this.lambda$fixNotificationSettings$5$MessagesStorage();
            }
        });
    }

    public /* synthetic */ void lambda$fixNotificationSettings$5$MessagesStorage() {
        try {
            LongSparseArray longSparseArray = new LongSparseArray();
            Map<String, ?> all = MessagesController.getNotificationsSettings(this.currentAccount).getAll();
            for (Map.Entry next : all.entrySet()) {
                String str = (String) next.getKey();
                if (str.startsWith("notify2_")) {
                    Integer num = (Integer) next.getValue();
                    if (num.intValue() == 2 || num.intValue() == 3) {
                        String replace = str.replace("notify2_", "");
                        long j = 1;
                        if (num.intValue() != 2) {
                            Integer num2 = (Integer) all.get("notifyuntil_" + replace);
                            if (num2 != null) {
                                j = 1 | (((long) num2.intValue()) << 32);
                            }
                        }
                        longSparseArray.put(Long.parseLong(replace), Long.valueOf(j));
                    }
                }
            }
            try {
                this.database.beginTransaction();
                SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO dialog_settings VALUES(?, ?)");
                for (int i = 0; i < longSparseArray.size(); i++) {
                    executeFast.requery();
                    executeFast.bindLong(1, longSparseArray.keyAt(i));
                    executeFast.bindLong(2, ((Long) longSparseArray.valueAt(i)).longValue());
                    executeFast.step();
                }
                executeFast.dispose();
                this.database.commitTransaction();
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        } catch (Exception e2) {
            e2.printStackTrace();
        } catch (Throwable th) {
            FileLog.e(th);
        }
    }

    public long createPendingTask(NativeByteBuffer nativeByteBuffer) {
        if (nativeByteBuffer == null) {
            return 0;
        }
        long andAdd = this.lastTaskId.getAndAdd(1);
        this.storageQueue.postRunnable(new Runnable(andAdd, nativeByteBuffer) {
            private final /* synthetic */ long f$1;
            private final /* synthetic */ NativeByteBuffer f$2;

            {
                this.f$1 = r2;
                this.f$2 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$createPendingTask$6$MessagesStorage(this.f$1, this.f$2);
            }
        });
        return andAdd;
    }

    public /* synthetic */ void lambda$createPendingTask$6$MessagesStorage(long j, NativeByteBuffer nativeByteBuffer) {
        try {
            SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO pending_tasks VALUES(?, ?)");
            executeFast.bindLong(1, j);
            executeFast.bindByteBuffer(2, nativeByteBuffer);
            executeFast.step();
            executeFast.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        } catch (Throwable th) {
            nativeByteBuffer.reuse();
            throw th;
        }
        nativeByteBuffer.reuse();
    }

    public void removePendingTask(long j) {
        this.storageQueue.postRunnable(new Runnable(j) {
            private final /* synthetic */ long f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$removePendingTask$7$MessagesStorage(this.f$1);
            }
        });
    }

    public /* synthetic */ void lambda$removePendingTask$7$MessagesStorage(long j) {
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM pending_tasks WHERE id = " + j).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    private void loadPendingTasks() {
        this.storageQueue.postRunnable(new Runnable() {
            public final void run() {
                MessagesStorage.this.lambda$loadPendingTasks$22$MessagesStorage();
            }
        });
    }

    public /* synthetic */ void lambda$loadPendingTasks$22$MessagesStorage() {
        try {
            SQLiteCursor queryFinalized = this.database.queryFinalized("SELECT id, data FROM pending_tasks WHERE 1", new Object[0]);
            while (queryFinalized.next()) {
                long longValue = queryFinalized.longValue(0);
                NativeByteBuffer byteBufferValue = queryFinalized.byteBufferValue(1);
                if (byteBufferValue != null) {
                    int readInt32 = byteBufferValue.readInt32(false);
                    switch (readInt32) {
                        case 0:
                            TLRPC.Chat TLdeserialize = TLRPC.Chat.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                            if (TLdeserialize != null) {
                                Utilities.stageQueue.postRunnable(new Runnable(TLdeserialize, longValue) {
                                    private final /* synthetic */ TLRPC.Chat f$1;
                                    private final /* synthetic */ long f$2;

                                    {
                                        this.f$1 = r2;
                                        this.f$2 = r3;
                                    }

                                    public final void run() {
                                        MessagesStorage.this.lambda$null$8$MessagesStorage(this.f$1, this.f$2);
                                    }
                                });
                                break;
                            }
                            break;
                        case 1:
                            Utilities.stageQueue.postRunnable(new Runnable(byteBufferValue.readInt32(false), byteBufferValue.readInt32(false), longValue) {
                                private final /* synthetic */ int f$1;
                                private final /* synthetic */ int f$2;
                                private final /* synthetic */ long f$3;

                                {
                                    this.f$1 = r2;
                                    this.f$2 = r3;
                                    this.f$3 = r4;
                                }

                                public final void run() {
                                    MessagesStorage.this.lambda$null$9$MessagesStorage(this.f$1, this.f$2, this.f$3);
                                }
                            });
                            break;
                        case 2:
                        case 5:
                        case 8:
                        case 10:
                        case 14:
                            TLRPC.TL_dialog tL_dialog = new TLRPC.TL_dialog();
                            tL_dialog.id = byteBufferValue.readInt64(false);
                            tL_dialog.top_message = byteBufferValue.readInt32(false);
                            tL_dialog.read_inbox_max_id = byteBufferValue.readInt32(false);
                            tL_dialog.read_outbox_max_id = byteBufferValue.readInt32(false);
                            tL_dialog.unread_count = byteBufferValue.readInt32(false);
                            tL_dialog.last_message_date = byteBufferValue.readInt32(false);
                            tL_dialog.pts = byteBufferValue.readInt32(false);
                            tL_dialog.flags = byteBufferValue.readInt32(false);
                            if (readInt32 >= 5) {
                                tL_dialog.pinned = byteBufferValue.readBool(false);
                                tL_dialog.pinnedNum = byteBufferValue.readInt32(false);
                            }
                            if (readInt32 >= 8) {
                                tL_dialog.unread_mentions_count = byteBufferValue.readInt32(false);
                            }
                            if (readInt32 >= 10) {
                                tL_dialog.unread_mark = byteBufferValue.readBool(false);
                            }
                            if (readInt32 >= 14) {
                                tL_dialog.folder_id = byteBufferValue.readInt32(false);
                            }
                            AndroidUtilities.runOnUIThread(new Runnable(tL_dialog, TLRPC.InputPeer.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false), longValue) {
                                private final /* synthetic */ TLRPC.Dialog f$1;
                                private final /* synthetic */ TLRPC.InputPeer f$2;
                                private final /* synthetic */ long f$3;

                                {
                                    this.f$1 = r2;
                                    this.f$2 = r3;
                                    this.f$3 = r4;
                                }

                                public final void run() {
                                    MessagesStorage.this.lambda$null$10$MessagesStorage(this.f$1, this.f$2, this.f$3);
                                }
                            });
                            break;
                        case 3:
                            getSendMessagesHelper().sendGame(TLRPC.InputPeer.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false), (TLRPC.TL_inputMediaGame) TLRPC.InputMedia.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false), byteBufferValue.readInt64(false), longValue);
                            break;
                        case 4:
                            AndroidUtilities.runOnUIThread(new Runnable(byteBufferValue.readInt64(false), byteBufferValue.readBool(false), TLRPC.InputPeer.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false), longValue) {
                                private final /* synthetic */ long f$1;
                                private final /* synthetic */ boolean f$2;
                                private final /* synthetic */ TLRPC.InputPeer f$3;
                                private final /* synthetic */ long f$4;

                                {
                                    this.f$1 = r2;
                                    this.f$2 = r4;
                                    this.f$3 = r5;
                                    this.f$4 = r6;
                                }

                                public final void run() {
                                    MessagesStorage.this.lambda$null$11$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4);
                                }
                            });
                            break;
                        case 6:
                            Utilities.stageQueue.postRunnable(new Runnable(byteBufferValue.readInt32(false), byteBufferValue.readInt32(false), longValue, TLRPC.InputChannel.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false)) {
                                private final /* synthetic */ int f$1;
                                private final /* synthetic */ int f$2;
                                private final /* synthetic */ long f$3;
                                private final /* synthetic */ TLRPC.InputChannel f$4;

                                {
                                    this.f$1 = r2;
                                    this.f$2 = r3;
                                    this.f$3 = r4;
                                    this.f$4 = r6;
                                }

                                public final void run() {
                                    MessagesStorage.this.lambda$null$12$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4);
                                }
                            });
                            break;
                        case 7:
                            int readInt322 = byteBufferValue.readInt32(false);
                            int readInt323 = byteBufferValue.readInt32(false);
                            TLObject TLdeserialize2 = TLRPC.TL_messages_deleteMessages.TLdeserialize(byteBufferValue, readInt323, false);
                            TLObject TLdeserialize3 = TLdeserialize2 == null ? TLRPC.TL_channels_deleteMessages.TLdeserialize(byteBufferValue, readInt323, false) : TLdeserialize2;
                            if (TLdeserialize3 != null) {
                                AndroidUtilities.runOnUIThread(new Runnable(readInt322, longValue, TLdeserialize3) {
                                    private final /* synthetic */ int f$1;
                                    private final /* synthetic */ long f$2;
                                    private final /* synthetic */ TLObject f$3;

                                    {
                                        this.f$1 = r2;
                                        this.f$2 = r3;
                                        this.f$3 = r5;
                                    }

                                    public final void run() {
                                        MessagesStorage.this.lambda$null$13$MessagesStorage(this.f$1, this.f$2, this.f$3);
                                    }
                                });
                                break;
                            } else {
                                removePendingTask(longValue);
                                break;
                            }
                        case 9:
                            AndroidUtilities.runOnUIThread(new Runnable(byteBufferValue.readInt64(false), TLRPC.InputPeer.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false), longValue) {
                                private final /* synthetic */ long f$1;
                                private final /* synthetic */ TLRPC.InputPeer f$2;
                                private final /* synthetic */ long f$3;

                                {
                                    this.f$1 = r2;
                                    this.f$2 = r4;
                                    this.f$3 = r5;
                                }

                                public final void run() {
                                    MessagesStorage.this.lambda$null$14$MessagesStorage(this.f$1, this.f$2, this.f$3);
                                }
                            });
                            break;
                        case 11:
                            int readInt324 = byteBufferValue.readInt32(false);
                            int readInt325 = byteBufferValue.readInt32(false);
                            AndroidUtilities.runOnUIThread(new Runnable(readInt324, readInt325, readInt325 != 0 ? TLRPC.InputChannel.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false) : null, byteBufferValue.readInt32(false), longValue) {
                                private final /* synthetic */ int f$1;
                                private final /* synthetic */ int f$2;
                                private final /* synthetic */ TLRPC.InputChannel f$3;
                                private final /* synthetic */ int f$4;
                                private final /* synthetic */ long f$5;

                                {
                                    this.f$1 = r2;
                                    this.f$2 = r3;
                                    this.f$3 = r4;
                                    this.f$4 = r5;
                                    this.f$5 = r6;
                                }

                                public final void run() {
                                    MessagesStorage.this.lambda$null$15$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5);
                                }
                            });
                            break;
                        case 12:
                        case 19:
                        case 20:
                            removePendingTask(longValue);
                            break;
                        case 13:
                            AndroidUtilities.runOnUIThread(new Runnable(byteBufferValue.readInt64(false), byteBufferValue.readBool(false), byteBufferValue.readInt32(false), byteBufferValue.readInt32(false), byteBufferValue.readBool(false), TLRPC.InputPeer.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false), longValue) {
                                private final /* synthetic */ long f$1;
                                private final /* synthetic */ boolean f$2;
                                private final /* synthetic */ int f$3;
                                private final /* synthetic */ int f$4;
                                private final /* synthetic */ boolean f$5;
                                private final /* synthetic */ TLRPC.InputPeer f$6;
                                private final /* synthetic */ long f$7;

                                {
                                    this.f$1 = r2;
                                    this.f$2 = r4;
                                    this.f$3 = r5;
                                    this.f$4 = r6;
                                    this.f$5 = r7;
                                    this.f$6 = r8;
                                    this.f$7 = r9;
                                }

                                public final void run() {
                                    MessagesStorage.this.lambda$null$17$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, this.f$6, this.f$7);
                                }
                            });
                            break;
                        case 15:
                            Utilities.stageQueue.postRunnable(new Runnable(TLRPC.InputPeer.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false), longValue) {
                                private final /* synthetic */ TLRPC.InputPeer f$1;
                                private final /* synthetic */ long f$2;

                                {
                                    this.f$1 = r2;
                                    this.f$2 = r3;
                                }

                                public final void run() {
                                    MessagesStorage.this.lambda$null$18$MessagesStorage(this.f$1, this.f$2);
                                }
                            });
                            break;
                        case 16:
                            int readInt326 = byteBufferValue.readInt32(false);
                            int readInt327 = byteBufferValue.readInt32(false);
                            ArrayList arrayList = new ArrayList();
                            for (int i = 0; i < readInt327; i++) {
                                arrayList.add(TLRPC.InputDialogPeer.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false));
                            }
                            AndroidUtilities.runOnUIThread(new Runnable(readInt326, arrayList, longValue) {
                                private final /* synthetic */ int f$1;
                                private final /* synthetic */ ArrayList f$2;
                                private final /* synthetic */ long f$3;

                                {
                                    this.f$1 = r2;
                                    this.f$2 = r3;
                                    this.f$3 = r4;
                                }

                                public final void run() {
                                    MessagesStorage.this.lambda$null$19$MessagesStorage(this.f$1, this.f$2, this.f$3);
                                }
                            });
                            break;
                        case 17:
                            int readInt328 = byteBufferValue.readInt32(false);
                            int readInt329 = byteBufferValue.readInt32(false);
                            ArrayList arrayList2 = new ArrayList();
                            for (int i2 = 0; i2 < readInt329; i2++) {
                                arrayList2.add(TLRPC.TL_inputFolderPeer.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false));
                            }
                            AndroidUtilities.runOnUIThread(new Runnable(readInt328, arrayList2, longValue) {
                                private final /* synthetic */ int f$1;
                                private final /* synthetic */ ArrayList f$2;
                                private final /* synthetic */ long f$3;

                                {
                                    this.f$1 = r2;
                                    this.f$2 = r3;
                                    this.f$3 = r4;
                                }

                                public final void run() {
                                    MessagesStorage.this.lambda$null$20$MessagesStorage(this.f$1, this.f$2, this.f$3);
                                }
                            });
                            break;
                        case 18:
                            long readInt64 = byteBufferValue.readInt64(false);
                            int readInt3210 = byteBufferValue.readInt32(false);
                            TLRPC.TL_messages_deleteScheduledMessages TLdeserialize4 = TLRPC.TL_messages_deleteScheduledMessages.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                            if (TLdeserialize4 != null) {
                                AndroidUtilities.runOnUIThread(new Runnable(readInt64, readInt3210, longValue, TLdeserialize4) {
                                    private final /* synthetic */ long f$1;
                                    private final /* synthetic */ int f$2;
                                    private final /* synthetic */ long f$3;
                                    private final /* synthetic */ TLObject f$4;

                                    {
                                        this.f$1 = r2;
                                        this.f$2 = r4;
                                        this.f$3 = r5;
                                        this.f$4 = r7;
                                    }

                                    public final void run() {
                                        MessagesStorage.this.lambda$null$21$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4);
                                    }
                                });
                                break;
                            } else {
                                removePendingTask(longValue);
                                break;
                            }
                        case 21:
                            Theme.OverrideWallpaperInfo overrideWallpaperInfo = new Theme.OverrideWallpaperInfo();
                            byteBufferValue.readInt64(false);
                            overrideWallpaperInfo.isBlurred = byteBufferValue.readBool(false);
                            overrideWallpaperInfo.isMotion = byteBufferValue.readBool(false);
                            overrideWallpaperInfo.color = byteBufferValue.readInt32(false);
                            overrideWallpaperInfo.gradientColor = byteBufferValue.readInt32(false);
                            overrideWallpaperInfo.rotation = byteBufferValue.readInt32(false);
                            overrideWallpaperInfo.intensity = (float) byteBufferValue.readDouble(false);
                            boolean readBool = byteBufferValue.readBool(false);
                            overrideWallpaperInfo.slug = byteBufferValue.readString(false);
                            overrideWallpaperInfo.originalFileName = byteBufferValue.readString(false);
                            AndroidUtilities.runOnUIThread(new Runnable(overrideWallpaperInfo, readBool, longValue) {
                                private final /* synthetic */ Theme.OverrideWallpaperInfo f$1;
                                private final /* synthetic */ boolean f$2;
                                private final /* synthetic */ long f$3;

                                {
                                    this.f$1 = r2;
                                    this.f$2 = r3;
                                    this.f$3 = r4;
                                }

                                public final void run() {
                                    MessagesStorage.this.lambda$null$16$MessagesStorage(this.f$1, this.f$2, this.f$3);
                                }
                            });
                            break;
                    }
                    byteBufferValue.reuse();
                }
            }
            queryFinalized.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public /* synthetic */ void lambda$null$8$MessagesStorage(TLRPC.Chat chat, long j) {
        getMessagesController().loadUnknownChannel(chat, j);
    }

    public /* synthetic */ void lambda$null$9$MessagesStorage(int i, int i2, long j) {
        getMessagesController().getChannelDifference(i, i2, j, (TLRPC.InputChannel) null);
    }

    public /* synthetic */ void lambda$null$10$MessagesStorage(TLRPC.Dialog dialog, TLRPC.InputPeer inputPeer, long j) {
        getMessagesController().checkLastDialogMessage(dialog, inputPeer, j);
    }

    public /* synthetic */ void lambda$null$11$MessagesStorage(long j, boolean z, TLRPC.InputPeer inputPeer, long j2) {
        getMessagesController().pinDialog(j, z, inputPeer, j2);
    }

    public /* synthetic */ void lambda$null$12$MessagesStorage(int i, int i2, long j, TLRPC.InputChannel inputChannel) {
        getMessagesController().getChannelDifference(i, i2, j, inputChannel);
    }

    public /* synthetic */ void lambda$null$13$MessagesStorage(int i, long j, TLObject tLObject) {
        getMessagesController().deleteMessages((ArrayList<Integer>) null, (ArrayList<Long>) null, (TLRPC.EncryptedChat) null, 0, i, true, false, j, tLObject);
    }

    public /* synthetic */ void lambda$null$14$MessagesStorage(long j, TLRPC.InputPeer inputPeer, long j2) {
        getMessagesController().markDialogAsUnread(j, inputPeer, j2);
    }

    public /* synthetic */ void lambda$null$15$MessagesStorage(int i, int i2, TLRPC.InputChannel inputChannel, int i3, long j) {
        getMessagesController().markMessageAsRead(i, i2, inputChannel, i3, j);
    }

    public /* synthetic */ void lambda$null$16$MessagesStorage(Theme.OverrideWallpaperInfo overrideWallpaperInfo, boolean z, long j) {
        getMessagesController().saveWallpaperToServer((File) null, overrideWallpaperInfo, z, j);
    }

    public /* synthetic */ void lambda$null$17$MessagesStorage(long j, boolean z, int i, int i2, boolean z2, TLRPC.InputPeer inputPeer, long j2) {
        getMessagesController().deleteDialog(j, z, i, i2, z2, inputPeer, j2);
    }

    public /* synthetic */ void lambda$null$18$MessagesStorage(TLRPC.InputPeer inputPeer, long j) {
        getMessagesController().loadUnknownDialog(inputPeer, j);
    }

    public /* synthetic */ void lambda$null$19$MessagesStorage(int i, ArrayList arrayList, long j) {
        getMessagesController().reorderPinnedDialogs(i, arrayList, j);
    }

    public /* synthetic */ void lambda$null$20$MessagesStorage(int i, ArrayList arrayList, long j) {
        getMessagesController().addDialogToFolder((ArrayList<Long>) null, i, -1, arrayList, j);
    }

    public /* synthetic */ void lambda$null$21$MessagesStorage(long j, int i, long j2, TLObject tLObject) {
        MessagesController.getInstance(this.currentAccount).deleteMessages((ArrayList<Integer>) null, (ArrayList<Long>) null, (TLRPC.EncryptedChat) null, j, i, true, true, j2, tLObject);
    }

    public void saveChannelPts(int i, int i2) {
        this.storageQueue.postRunnable(new Runnable(i2, i) {
            private final /* synthetic */ int f$1;
            private final /* synthetic */ int f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                MessagesStorage.this.lambda$saveChannelPts$23$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    public /* synthetic */ void lambda$saveChannelPts$23$MessagesStorage(int i, int i2) {
        try {
            SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE dialogs SET pts = ? WHERE did = ?");
            executeFast.bindInteger(1, i);
            executeFast.bindInteger(2, -i2);
            executeFast.step();
            executeFast.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: saveDiffParamsInternal */
    public void lambda$saveDiffParams$24$MessagesStorage(int i, int i2, int i3, int i4) {
        try {
            if (this.lastSavedSeq != i || this.lastSavedPts != i2 || this.lastSavedDate != i3 || this.lastQtsValue != i4) {
                SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE params SET seq = ?, pts = ?, date = ?, qts = ? WHERE id = 1");
                executeFast.bindInteger(1, i);
                executeFast.bindInteger(2, i2);
                executeFast.bindInteger(3, i3);
                executeFast.bindInteger(4, i4);
                executeFast.step();
                executeFast.dispose();
                this.lastSavedSeq = i;
                this.lastSavedPts = i2;
                this.lastSavedDate = i3;
                this.lastSavedQts = i4;
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void saveDiffParams(int i, int i2, int i3, int i4) {
        this.storageQueue.postRunnable(new Runnable(i, i2, i3, i4) {
            private final /* synthetic */ int f$1;
            private final /* synthetic */ int f$2;
            private final /* synthetic */ int f$3;
            private final /* synthetic */ int f$4;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
                this.f$4 = r5;
            }

            public final void run() {
                MessagesStorage.this.lambda$saveDiffParams$24$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4);
            }
        });
    }

    public void setDialogFlags(long j, long j2) {
        this.storageQueue.postRunnable(new Runnable(j, j2) {
            private final /* synthetic */ long f$1;
            private final /* synthetic */ long f$2;

            {
                this.f$1 = r2;
                this.f$2 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$setDialogFlags$25$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    public /* synthetic */ void lambda$setDialogFlags$25$MessagesStorage(long j, long j2) {
        try {
            this.database.executeFast(String.format(Locale.US, "REPLACE INTO dialog_settings VALUES(%d, %d)", new Object[]{Long.valueOf(j), Long.valueOf(j2)})).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void putPushMessage(MessageObject messageObject) {
        this.storageQueue.postRunnable(new Runnable(messageObject) {
            private final /* synthetic */ MessageObject f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$putPushMessage$26$MessagesStorage(this.f$1);
            }
        });
    }

    public /* synthetic */ void lambda$putPushMessage$26$MessagesStorage(MessageObject messageObject) {
        try {
            NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(messageObject.messageOwner.getObjectSize());
            messageObject.messageOwner.serializeToStream(nativeByteBuffer);
            long id = (long) messageObject.getId();
            if (messageObject.messageOwner.to_id.channel_id != 0) {
                id |= ((long) messageObject.messageOwner.to_id.channel_id) << 32;
            }
            int i = 0;
            if (messageObject.localType == 2) {
                i = 1;
            }
            if (messageObject.localChannel) {
                i |= 2;
            }
            SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO unread_push_messages VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?)");
            executeFast.requery();
            executeFast.bindLong(1, messageObject.getDialogId());
            executeFast.bindLong(2, id);
            executeFast.bindLong(3, messageObject.messageOwner.random_id);
            executeFast.bindInteger(4, messageObject.messageOwner.date);
            executeFast.bindByteBuffer(5, nativeByteBuffer);
            if (messageObject.messageText == null) {
                executeFast.bindNull(6);
            } else {
                executeFast.bindString(6, messageObject.messageText.toString());
            }
            if (messageObject.localName == null) {
                executeFast.bindNull(7);
            } else {
                executeFast.bindString(7, messageObject.localName);
            }
            if (messageObject.localUserName == null) {
                executeFast.bindNull(8);
            } else {
                executeFast.bindString(8, messageObject.localUserName);
            }
            executeFast.bindInteger(9, i);
            executeFast.step();
            nativeByteBuffer.reuse();
            executeFast.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    private class ReadDialog {
        public int date;
        public int lastMid;
        public int unreadCount;

        private ReadDialog() {
        }
    }

    public void readAllDialogs(int i) {
        this.storageQueue.postRunnable(new Runnable(i) {
            private final /* synthetic */ int f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$readAllDialogs$28$MessagesStorage(this.f$1);
            }
        });
    }

    public /* synthetic */ void lambda$readAllDialogs$28$MessagesStorage(int i) {
        SQLiteCursor sQLiteCursor;
        try {
            ArrayList arrayList = new ArrayList();
            ArrayList arrayList2 = new ArrayList();
            ArrayList arrayList3 = new ArrayList();
            LongSparseArray longSparseArray = new LongSparseArray();
            if (i >= 0) {
                sQLiteCursor = this.database.queryFinalized(String.format(Locale.US, "SELECT did, last_mid, unread_count, date FROM dialogs WHERE unread_count != 0 AND folder_id = %1$d", new Object[]{Integer.valueOf(i)}), new Object[0]);
            } else {
                sQLiteCursor = this.database.queryFinalized("SELECT did, last_mid, unread_count, date FROM dialogs WHERE unread_count != 0", new Object[0]);
            }
            while (sQLiteCursor.next()) {
                long longValue = sQLiteCursor.longValue(0);
                if (!DialogObject.isFolderDialogId(longValue)) {
                    ReadDialog readDialog = new ReadDialog();
                    readDialog.lastMid = sQLiteCursor.intValue(1);
                    readDialog.unreadCount = sQLiteCursor.intValue(2);
                    readDialog.date = sQLiteCursor.intValue(3);
                    longSparseArray.put(longValue, readDialog);
                    int i2 = (int) longValue;
                    int i3 = (int) (longValue >> 32);
                    if (i2 != 0) {
                        if (i2 < 0) {
                            int i4 = -i2;
                            if (!arrayList2.contains(Integer.valueOf(i4))) {
                                arrayList2.add(Integer.valueOf(i4));
                            }
                        } else if (!arrayList.contains(Integer.valueOf(i2))) {
                            arrayList.add(Integer.valueOf(i2));
                        }
                    } else if (!arrayList3.contains(Integer.valueOf(i3))) {
                        arrayList3.add(Integer.valueOf(i3));
                    }
                }
            }
            sQLiteCursor.dispose();
            ArrayList arrayList4 = new ArrayList();
            ArrayList arrayList5 = new ArrayList();
            ArrayList arrayList6 = new ArrayList();
            if (!arrayList3.isEmpty()) {
                getEncryptedChatsInternal(TextUtils.join(",", arrayList3), arrayList6, arrayList);
            }
            if (!arrayList.isEmpty()) {
                getUsersInternal(TextUtils.join(",", arrayList), arrayList4);
            }
            if (!arrayList2.isEmpty()) {
                getChatsInternal(TextUtils.join(",", arrayList2), arrayList5);
            }
            AndroidUtilities.runOnUIThread(new Runnable(arrayList4, arrayList5, arrayList6, longSparseArray) {
                private final /* synthetic */ ArrayList f$1;
                private final /* synthetic */ ArrayList f$2;
                private final /* synthetic */ ArrayList f$3;
                private final /* synthetic */ LongSparseArray f$4;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                    this.f$4 = r5;
                }

                public final void run() {
                    MessagesStorage.this.lambda$null$27$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4);
                }
            });
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public /* synthetic */ void lambda$null$27$MessagesStorage(ArrayList arrayList, ArrayList arrayList2, ArrayList arrayList3, LongSparseArray longSparseArray) {
        getMessagesController().putUsers(arrayList, true);
        getMessagesController().putChats(arrayList2, true);
        getMessagesController().putEncryptedChats(arrayList3, true);
        for (int i = 0; i < longSparseArray.size(); i++) {
            long keyAt = longSparseArray.keyAt(i);
            ReadDialog readDialog = (ReadDialog) longSparseArray.valueAt(i);
            MessagesController messagesController = getMessagesController();
            int i2 = readDialog.lastMid;
            messagesController.markDialogAsRead(keyAt, i2, i2, readDialog.date, false, readDialog.unreadCount, true, 0);
        }
    }

    public void loadUnreadMessages() {
        this.storageQueue.postRunnable(new Runnable() {
            public final void run() {
                MessagesStorage.this.lambda$loadUnreadMessages$30$MessagesStorage();
            }
        });
    }

    public /* synthetic */ void lambda$loadUnreadMessages$30$MessagesStorage() {
        String str;
        ArrayList arrayList;
        ArrayList arrayList2;
        ArrayList arrayList3;
        ArrayList arrayList4;
        LongSparseArray longSparseArray;
        ArrayList arrayList5;
        LongSparseArray longSparseArray2;
        int i;
        ArrayList arrayList6;
        ArrayList arrayList7;
        ArrayList arrayList8;
        ArrayList arrayList9;
        String str2;
        NativeByteBuffer byteBufferValue;
        try {
            ArrayList arrayList10 = new ArrayList();
            ArrayList arrayList11 = new ArrayList();
            ArrayList arrayList12 = new ArrayList();
            LongSparseArray longSparseArray3 = new LongSparseArray();
            SQLiteCursor queryFinalized = this.database.queryFinalized("SELECT d.did, d.unread_count, s.flags FROM dialogs as d LEFT JOIN dialog_settings as s ON d.did = s.did WHERE d.unread_count != 0", new Object[0]);
            StringBuilder sb = new StringBuilder();
            int currentTime = getConnectionsManager().getCurrentTime();
            while (true) {
                str = ",";
                if (!queryFinalized.next()) {
                    break;
                }
                long longValue = queryFinalized.longValue(2);
                boolean z = (longValue & 1) != 0;
                int i2 = (int) (longValue >> 32);
                if (queryFinalized.isNull(2) || !z || (i2 != 0 && i2 < currentTime)) {
                    long longValue2 = queryFinalized.longValue(0);
                    if (!DialogObject.isFolderDialogId(longValue2)) {
                        longSparseArray3.put(longValue2, Integer.valueOf(queryFinalized.intValue(1)));
                        if (sb.length() != 0) {
                            sb.append(str);
                        }
                        sb.append(longValue2);
                        int i3 = (int) longValue2;
                        int i4 = (int) (longValue2 >> 32);
                        if (i3 != 0) {
                            if (i3 < 0) {
                                int i5 = -i3;
                                if (!arrayList11.contains(Integer.valueOf(i5))) {
                                    arrayList11.add(Integer.valueOf(i5));
                                }
                            } else if (!arrayList10.contains(Integer.valueOf(i3))) {
                                arrayList10.add(Integer.valueOf(i3));
                            }
                        } else if (!arrayList12.contains(Integer.valueOf(i4))) {
                            arrayList12.add(Integer.valueOf(i4));
                        }
                    }
                }
            }
            queryFinalized.dispose();
            ArrayList arrayList13 = new ArrayList();
            SparseArray sparseArray = new SparseArray();
            ArrayList arrayList14 = new ArrayList();
            ArrayList arrayList15 = new ArrayList();
            ArrayList arrayList16 = new ArrayList();
            ArrayList arrayList17 = new ArrayList();
            ArrayList arrayList18 = new ArrayList();
            if (sb.length() > 0) {
                SQLiteDatabase sQLiteDatabase = this.database;
                StringBuilder sb2 = new StringBuilder();
                LongSparseArray longSparseArray4 = longSparseArray3;
                sb2.append("SELECT read_state, data, send_state, mid, date, uid, replydata FROM messages WHERE uid IN (");
                sb2.append(sb.toString());
                sb2.append(") AND out = 0 AND read_state IN(0,2) ORDER BY date DESC LIMIT 50");
                SQLiteCursor queryFinalized2 = sQLiteDatabase.queryFinalized(sb2.toString(), new Object[0]);
                int i6 = 0;
                while (queryFinalized2.next()) {
                    NativeByteBuffer byteBufferValue2 = queryFinalized2.byteBufferValue(1);
                    if (byteBufferValue2 != null) {
                        arrayList9 = arrayList17;
                        TLRPC.Message TLdeserialize = TLRPC.Message.TLdeserialize(byteBufferValue2, byteBufferValue2.readInt32(false), false);
                        TLdeserialize.readAttachPath(byteBufferValue2, getUserConfig().clientUserId);
                        byteBufferValue2.reuse();
                        MessageObject.setUnreadFlags(TLdeserialize, queryFinalized2.intValue(0));
                        TLdeserialize.id = queryFinalized2.intValue(3);
                        TLdeserialize.date = queryFinalized2.intValue(4);
                        arrayList8 = arrayList16;
                        str2 = str;
                        TLdeserialize.dialog_id = queryFinalized2.longValue(5);
                        arrayList14.add(TLdeserialize);
                        int max = Math.max(i6, TLdeserialize.date);
                        int i7 = (int) TLdeserialize.dialog_id;
                        addUsersAndChatsFromMessage(TLdeserialize, arrayList10, arrayList11);
                        TLdeserialize.send_state = queryFinalized2.intValue(2);
                        if ((TLdeserialize.to_id.channel_id == 0 && !MessageObject.isUnread(TLdeserialize) && i7 != 0) || TLdeserialize.id > 0) {
                            TLdeserialize.send_state = 0;
                        }
                        if (i7 == 0 && !queryFinalized2.isNull(5)) {
                            TLdeserialize.random_id = queryFinalized2.longValue(5);
                        }
                        try {
                            if (TLdeserialize.reply_to_msg_id != 0 && ((TLdeserialize.action instanceof TLRPC.TL_messageActionPinMessage) || (TLdeserialize.action instanceof TLRPC.TL_messageActionPaymentSent) || (TLdeserialize.action instanceof TLRPC.TL_messageActionGameScore))) {
                                if (!queryFinalized2.isNull(6) && (byteBufferValue = queryFinalized2.byteBufferValue(6)) != null) {
                                    TLdeserialize.replyMessage = TLRPC.Message.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                                    TLdeserialize.replyMessage.readAttachPath(byteBufferValue, getUserConfig().clientUserId);
                                    byteBufferValue.reuse();
                                    if (TLdeserialize.replyMessage != null) {
                                        if (MessageObject.isMegagroup(TLdeserialize)) {
                                            TLdeserialize.replyMessage.flags |= Integer.MIN_VALUE;
                                        }
                                        addUsersAndChatsFromMessage(TLdeserialize.replyMessage, arrayList10, arrayList11);
                                    }
                                }
                                if (TLdeserialize.replyMessage == null) {
                                    long j = (long) TLdeserialize.reply_to_msg_id;
                                    if (TLdeserialize.to_id.channel_id != 0) {
                                        arrayList6 = arrayList18;
                                        arrayList7 = arrayList14;
                                        j |= ((long) TLdeserialize.to_id.channel_id) << 32;
                                    } else {
                                        arrayList6 = arrayList18;
                                        arrayList7 = arrayList14;
                                    }
                                    try {
                                        if (!arrayList13.contains(Long.valueOf(j))) {
                                            arrayList13.add(Long.valueOf(j));
                                        }
                                        ArrayList arrayList19 = (ArrayList) sparseArray.get(TLdeserialize.reply_to_msg_id);
                                        if (arrayList19 == null) {
                                            arrayList19 = new ArrayList();
                                            sparseArray.put(TLdeserialize.reply_to_msg_id, arrayList19);
                                        }
                                        arrayList19.add(TLdeserialize);
                                    } catch (Exception e) {
                                        e = e;
                                        FileLog.e((Throwable) e);
                                        i6 = max;
                                        str = str2;
                                        arrayList17 = arrayList9;
                                        arrayList16 = arrayList8;
                                        arrayList14 = arrayList7;
                                        arrayList18 = arrayList6;
                                    }
                                    i6 = max;
                                }
                            }
                            arrayList6 = arrayList18;
                            arrayList7 = arrayList14;
                        } catch (Exception e2) {
                            e = e2;
                            arrayList6 = arrayList18;
                            arrayList7 = arrayList14;
                            FileLog.e((Throwable) e);
                            i6 = max;
                            str = str2;
                            arrayList17 = arrayList9;
                            arrayList16 = arrayList8;
                            arrayList14 = arrayList7;
                            arrayList18 = arrayList6;
                        }
                        i6 = max;
                    } else {
                        arrayList8 = arrayList16;
                        str2 = str;
                        arrayList9 = arrayList17;
                        arrayList6 = arrayList18;
                        arrayList7 = arrayList14;
                    }
                    str = str2;
                    arrayList17 = arrayList9;
                    arrayList16 = arrayList8;
                    arrayList14 = arrayList7;
                    arrayList18 = arrayList6;
                }
                ArrayList arrayList20 = arrayList16;
                String str3 = str;
                ArrayList arrayList21 = arrayList17;
                ArrayList arrayList22 = arrayList18;
                ArrayList arrayList23 = arrayList14;
                queryFinalized2.dispose();
                this.database.executeFast("DELETE FROM unread_push_messages WHERE date <= " + i6).stepThis().dispose();
                boolean z2 = false;
                SQLiteCursor queryFinalized3 = this.database.queryFinalized("SELECT data, mid, date, uid, random, fm, name, uname, flags FROM unread_push_messages WHERE 1 ORDER BY date DESC LIMIT 50", new Object[0]);
                while (queryFinalized3.next()) {
                    NativeByteBuffer byteBufferValue3 = queryFinalized3.byteBufferValue(z2 ? 1 : 0);
                    if (byteBufferValue3 != null) {
                        TLRPC.Message TLdeserialize2 = TLRPC.Message.TLdeserialize(byteBufferValue3, byteBufferValue3.readInt32(z2), z2);
                        byteBufferValue3.reuse();
                        TLdeserialize2.id = queryFinalized3.intValue(1);
                        TLdeserialize2.date = queryFinalized3.intValue(2);
                        TLdeserialize2.dialog_id = queryFinalized3.longValue(3);
                        TLdeserialize2.random_id = queryFinalized3.longValue(4);
                        String str4 = null;
                        String stringValue = queryFinalized3.isNull(5) ? null : queryFinalized3.stringValue(5);
                        String stringValue2 = queryFinalized3.isNull(6) ? null : queryFinalized3.stringValue(6);
                        if (!queryFinalized3.isNull(7)) {
                            str4 = queryFinalized3.stringValue(7);
                        }
                        String str5 = str4;
                        int intValue = queryFinalized3.intValue(8);
                        if (TLdeserialize2.from_id == 0 && (i = (int) TLdeserialize2.dialog_id) > 0) {
                            TLdeserialize2.from_id = i;
                        }
                        int i8 = (int) TLdeserialize2.dialog_id;
                        if (i8 > 0) {
                            if (!arrayList10.contains(Integer.valueOf(i8))) {
                                arrayList10.add(Integer.valueOf(i8));
                            }
                        } else if (i8 < 0) {
                            int i9 = -i8;
                            if (!arrayList11.contains(Integer.valueOf(i9))) {
                                arrayList11.add(Integer.valueOf(i9));
                            }
                        }
                        arrayList15.add(new MessageObject(this.currentAccount, TLdeserialize2, stringValue, stringValue2, str5, (intValue & 1) != 0, (intValue & 2) != 0, false));
                        addUsersAndChatsFromMessage(TLdeserialize2, arrayList10, arrayList11);
                    }
                    z2 = false;
                }
                queryFinalized3.dispose();
                if (!arrayList13.isEmpty()) {
                    boolean z3 = false;
                    SQLiteCursor queryFinalized4 = this.database.queryFinalized(String.format(Locale.US, "SELECT data, mid, date, uid FROM messages WHERE mid IN(%s)", new Object[]{TextUtils.join(str3, arrayList13)}), new Object[0]);
                    while (queryFinalized4.next()) {
                        NativeByteBuffer byteBufferValue4 = queryFinalized4.byteBufferValue(z3 ? 1 : 0);
                        if (byteBufferValue4 != null) {
                            TLRPC.Message TLdeserialize3 = TLRPC.Message.TLdeserialize(byteBufferValue4, byteBufferValue4.readInt32(z3), z3);
                            TLdeserialize3.readAttachPath(byteBufferValue4, getUserConfig().clientUserId);
                            byteBufferValue4.reuse();
                            TLdeserialize3.id = queryFinalized4.intValue(1);
                            TLdeserialize3.date = queryFinalized4.intValue(2);
                            TLdeserialize3.dialog_id = queryFinalized4.longValue(3);
                            addUsersAndChatsFromMessage(TLdeserialize3, arrayList10, arrayList11);
                            ArrayList arrayList24 = (ArrayList) sparseArray.get(TLdeserialize3.id);
                            if (arrayList24 != null) {
                                for (int i10 = 0; i10 < arrayList24.size(); i10++) {
                                    TLRPC.Message message = (TLRPC.Message) arrayList24.get(i10);
                                    message.replyMessage = TLdeserialize3;
                                    if (MessageObject.isMegagroup(message)) {
                                        message.replyMessage.flags |= Integer.MIN_VALUE;
                                    }
                                }
                            }
                        }
                        z3 = false;
                    }
                    queryFinalized4.dispose();
                }
                if (!arrayList12.isEmpty()) {
                    arrayList2 = arrayList22;
                    getEncryptedChatsInternal(TextUtils.join(str3, arrayList12), arrayList2, arrayList10);
                } else {
                    arrayList2 = arrayList22;
                }
                if (!arrayList10.isEmpty()) {
                    arrayList3 = arrayList20;
                    getUsersInternal(TextUtils.join(str3, arrayList10), arrayList3);
                } else {
                    arrayList3 = arrayList20;
                }
                if (!arrayList11.isEmpty()) {
                    arrayList = arrayList21;
                    getChatsInternal(TextUtils.join(str3, arrayList11), arrayList);
                    int i11 = 0;
                    while (i11 < arrayList.size()) {
                        TLRPC.Chat chat = (TLRPC.Chat) arrayList.get(i11);
                        if (chat == null || (!ChatObject.isNotInChat(chat) && chat.migrated_to == null)) {
                            longSparseArray2 = longSparseArray4;
                            arrayList5 = arrayList23;
                        } else {
                            long j2 = (long) (-chat.id);
                            this.database.executeFast("UPDATE dialogs SET unread_count = 0 WHERE did = " + j2).stepThis().dispose();
                            this.database.executeFast(String.format(Locale.US, "UPDATE messages SET read_state = 3 WHERE uid = %d AND mid > 0 AND read_state IN(0,2) AND out = 0", new Object[]{Long.valueOf(j2)})).stepThis().dispose();
                            arrayList.remove(i11);
                            i11 += -1;
                            longSparseArray2 = longSparseArray4;
                            longSparseArray2.remove(j2);
                            int i12 = 0;
                            while (i12 < arrayList23.size()) {
                                ArrayList arrayList25 = arrayList23;
                                if (((TLRPC.Message) arrayList25.get(i12)).dialog_id == j2) {
                                    arrayList25.remove(i12);
                                    i12--;
                                }
                                i12++;
                                arrayList23 = arrayList25;
                            }
                            arrayList5 = arrayList23;
                        }
                        i11++;
                        longSparseArray4 = longSparseArray2;
                        arrayList23 = arrayList5;
                    }
                    longSparseArray = longSparseArray4;
                } else {
                    longSparseArray = longSparseArray4;
                    arrayList = arrayList21;
                }
                arrayList4 = arrayList23;
            } else {
                longSparseArray = longSparseArray3;
                arrayList3 = arrayList16;
                arrayList = arrayList17;
                arrayList2 = arrayList18;
                arrayList4 = arrayList14;
            }
            Collections.reverse(arrayList4);
            AndroidUtilities.runOnUIThread(new Runnable(longSparseArray, arrayList4, arrayList15, arrayList3, arrayList, arrayList2) {
                private final /* synthetic */ LongSparseArray f$1;
                private final /* synthetic */ ArrayList f$2;
                private final /* synthetic */ ArrayList f$3;
                private final /* synthetic */ ArrayList f$4;
                private final /* synthetic */ ArrayList f$5;
                private final /* synthetic */ ArrayList f$6;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                    this.f$4 = r5;
                    this.f$5 = r6;
                    this.f$6 = r7;
                }

                public final void run() {
                    MessagesStorage.this.lambda$null$29$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, this.f$6);
                }
            });
        } catch (Exception e3) {
            FileLog.e((Throwable) e3);
        }
    }

    public /* synthetic */ void lambda$null$29$MessagesStorage(LongSparseArray longSparseArray, ArrayList arrayList, ArrayList arrayList2, ArrayList arrayList3, ArrayList arrayList4, ArrayList arrayList5) {
        getNotificationsController().processLoadedUnreadMessages(longSparseArray, arrayList, arrayList2, arrayList3, arrayList4, arrayList5);
    }

    public void putWallpapers(ArrayList<TLRPC.WallPaper> arrayList, int i) {
        this.storageQueue.postRunnable(new Runnable(i, arrayList) {
            private final /* synthetic */ int f$1;
            private final /* synthetic */ ArrayList f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                MessagesStorage.this.lambda$putWallpapers$31$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    public /* synthetic */ void lambda$putWallpapers$31$MessagesStorage(int i, ArrayList arrayList) {
        SQLitePreparedStatement sQLitePreparedStatement;
        if (i == 1) {
            try {
                this.database.executeFast("DELETE FROM wallpapers2 WHERE 1").stepThis().dispose();
            } catch (Exception e) {
                FileLog.e((Throwable) e);
                return;
            }
        }
        this.database.beginTransaction();
        if (i != 0) {
            sQLitePreparedStatement = this.database.executeFast("REPLACE INTO wallpapers2 VALUES(?, ?, ?)");
        } else {
            sQLitePreparedStatement = this.database.executeFast("UPDATE wallpapers2 SET data = ? WHERE uid = ?");
        }
        int size = arrayList.size();
        for (int i2 = 0; i2 < size; i2++) {
            TLRPC.TL_wallPaper tL_wallPaper = (TLRPC.TL_wallPaper) arrayList.get(i2);
            sQLitePreparedStatement.requery();
            NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(tL_wallPaper.getObjectSize());
            tL_wallPaper.serializeToStream(nativeByteBuffer);
            if (i != 0) {
                sQLitePreparedStatement.bindLong(1, tL_wallPaper.id);
                sQLitePreparedStatement.bindByteBuffer(2, nativeByteBuffer);
                sQLitePreparedStatement.bindInteger(3, i == 2 ? -1 : i2);
            } else {
                sQLitePreparedStatement.bindByteBuffer(1, nativeByteBuffer);
                sQLitePreparedStatement.bindLong(2, tL_wallPaper.id);
            }
            sQLitePreparedStatement.step();
            nativeByteBuffer.reuse();
        }
        sQLitePreparedStatement.dispose();
        this.database.commitTransaction();
    }

    public void getWallpapers() {
        this.storageQueue.postRunnable(new Runnable() {
            public final void run() {
                MessagesStorage.this.lambda$getWallpapers$33$MessagesStorage();
            }
        });
    }

    public /* synthetic */ void lambda$getWallpapers$33$MessagesStorage() {
        SQLiteCursor sQLiteCursor = null;
        try {
            sQLiteCursor = this.database.queryFinalized("SELECT data FROM wallpapers2 WHERE 1 ORDER BY num ASC", new Object[0]);
            ArrayList arrayList = new ArrayList();
            while (sQLiteCursor.next()) {
                NativeByteBuffer byteBufferValue = sQLiteCursor.byteBufferValue(0);
                if (byteBufferValue != null) {
                    TLRPC.TL_wallPaper tL_wallPaper = (TLRPC.TL_wallPaper) TLRPC.WallPaper.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                    byteBufferValue.reuse();
                    if (tL_wallPaper != null) {
                        arrayList.add(tL_wallPaper);
                    }
                }
            }
            AndroidUtilities.runOnUIThread(new Runnable(arrayList) {
                private final /* synthetic */ ArrayList f$0;

                {
                    this.f$0 = r1;
                }

                public final void run() {
                    NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.wallpapersDidLoad, this.f$0);
                }
            });
            if (sQLiteCursor == null) {
                return;
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (sQLiteCursor == null) {
                return;
            }
        } catch (Throwable th) {
            if (sQLiteCursor != null) {
                sQLiteCursor.dispose();
            }
            throw th;
        }
        sQLiteCursor.dispose();
    }

    public void addRecentLocalFile(String str, String str2, TLRPC.Document document) {
        if (str != null && str.length() != 0) {
            if ((str2 != null && str2.length() != 0) || document != null) {
                this.storageQueue.postRunnable(new Runnable(document, str, str2) {
                    private final /* synthetic */ TLRPC.Document f$1;
                    private final /* synthetic */ String f$2;
                    private final /* synthetic */ String f$3;

                    {
                        this.f$1 = r2;
                        this.f$2 = r3;
                        this.f$3 = r4;
                    }

                    public final void run() {
                        MessagesStorage.this.lambda$addRecentLocalFile$34$MessagesStorage(this.f$1, this.f$2, this.f$3);
                    }
                });
            }
        }
    }

    public /* synthetic */ void lambda$addRecentLocalFile$34$MessagesStorage(TLRPC.Document document, String str, String str2) {
        if (document != null) {
            try {
                SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE web_recent_v3 SET document = ? WHERE image_url = ?");
                executeFast.requery();
                NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(document.getObjectSize());
                document.serializeToStream(nativeByteBuffer);
                executeFast.bindByteBuffer(1, nativeByteBuffer);
                executeFast.bindString(2, str);
                executeFast.step();
                executeFast.dispose();
                nativeByteBuffer.reuse();
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        } else {
            SQLitePreparedStatement executeFast2 = this.database.executeFast("UPDATE web_recent_v3 SET local_url = ? WHERE image_url = ?");
            executeFast2.requery();
            executeFast2.bindString(1, str2);
            executeFast2.bindString(2, str);
            executeFast2.step();
            executeFast2.dispose();
        }
    }

    public void deleteUserChannelHistory(int i, int i2) {
        this.storageQueue.postRunnable(new Runnable(i, i2) {
            private final /* synthetic */ int f$1;
            private final /* synthetic */ int f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                MessagesStorage.this.lambda$deleteUserChannelHistory$37$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    public /* synthetic */ void lambda$deleteUserChannelHistory$37$MessagesStorage(int i, int i2) {
        long j = (long) (-i);
        try {
            ArrayList arrayList = new ArrayList();
            SQLiteDatabase sQLiteDatabase = this.database;
            SQLiteCursor queryFinalized = sQLiteDatabase.queryFinalized("SELECT data FROM messages WHERE uid = " + j, new Object[0]);
            ArrayList arrayList2 = new ArrayList();
            while (queryFinalized.next()) {
                try {
                    NativeByteBuffer byteBufferValue = queryFinalized.byteBufferValue(0);
                    if (byteBufferValue != null) {
                        TLRPC.Message TLdeserialize = TLRPC.Message.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                        TLdeserialize.readAttachPath(byteBufferValue, getUserConfig().clientUserId);
                        byteBufferValue.reuse();
                        if (!(TLdeserialize == null || TLdeserialize.from_id != i2 || TLdeserialize.id == 1)) {
                            arrayList.add(Integer.valueOf(TLdeserialize.id));
                            addFilesToDelete(TLdeserialize, arrayList2, false);
                        }
                    }
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                }
            }
            queryFinalized.dispose();
            AndroidUtilities.runOnUIThread(new Runnable(arrayList, i) {
                private final /* synthetic */ ArrayList f$1;
                private final /* synthetic */ int f$2;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                }

                public final void run() {
                    MessagesStorage.this.lambda$null$35$MessagesStorage(this.f$1, this.f$2);
                }
            });
            lambda$markMessagesAsDeleted$131$MessagesStorage(arrayList, i, false, false);
            lambda$updateDialogsWithDeletedMessages$130$MessagesStorage(arrayList, (ArrayList<Long>) null, i);
            getFileLoader().deleteFiles(arrayList2, 0);
            if (!arrayList.isEmpty()) {
                AndroidUtilities.runOnUIThread(new Runnable(arrayList, i) {
                    private final /* synthetic */ ArrayList f$1;
                    private final /* synthetic */ int f$2;

                    {
                        this.f$1 = r2;
                        this.f$2 = r3;
                    }

                    public final void run() {
                        MessagesStorage.this.lambda$null$36$MessagesStorage(this.f$1, this.f$2);
                    }
                });
            }
        } catch (Exception e2) {
            FileLog.e((Throwable) e2);
        }
    }

    public /* synthetic */ void lambda$null$35$MessagesStorage(ArrayList arrayList, int i) {
        getMessagesController().markChannelDialogMessageAsDeleted(arrayList, i);
    }

    public /* synthetic */ void lambda$null$36$MessagesStorage(ArrayList arrayList, int i) {
        getNotificationCenter().postNotificationName(NotificationCenter.messagesDeleted, arrayList, Integer.valueOf(i), false);
    }

    private boolean addFilesToDelete(TLRPC.Message message, ArrayList<File> arrayList, boolean z) {
        TLRPC.Document document;
        TLRPC.Photo photo;
        int i = 0;
        if (message == null) {
            return false;
        }
        TLRPC.MessageMedia messageMedia = message.media;
        if (!(messageMedia instanceof TLRPC.TL_messageMediaPhoto) || (photo = messageMedia.photo) == null) {
            TLRPC.MessageMedia messageMedia2 = message.media;
            if (!(messageMedia2 instanceof TLRPC.TL_messageMediaDocument) || (document = messageMedia2.document) == null) {
                return false;
            }
            File pathToAttach = FileLoader.getPathToAttach(document, z);
            if (pathToAttach != null && pathToAttach.toString().length() > 0) {
                arrayList.add(pathToAttach);
            }
            int size = message.media.document.thumbs.size();
            while (i < size) {
                File pathToAttach2 = FileLoader.getPathToAttach(message.media.document.thumbs.get(i));
                if (pathToAttach2 != null && pathToAttach2.toString().length() > 0) {
                    arrayList.add(pathToAttach2);
                }
                i++;
            }
            return true;
        }
        int size2 = photo.sizes.size();
        while (i < size2) {
            File pathToAttach3 = FileLoader.getPathToAttach(message.media.photo.sizes.get(i));
            if (pathToAttach3 != null && pathToAttach3.toString().length() > 0) {
                arrayList.add(pathToAttach3);
            }
            i++;
        }
        return true;
    }

    public void deleteDialog(long j, int i) {
        this.storageQueue.postRunnable(new Runnable(i, j) {
            private final /* synthetic */ int f$1;
            private final /* synthetic */ long f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                MessagesStorage.this.lambda$deleteDialog$39$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    /* JADX WARNING: Removed duplicated region for block: B:57:0x0212 A[Catch:{ Exception -> 0x0037 }] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$deleteDialog$39$MessagesStorage(int r20, long r21) {
        /*
            r19 = this;
            r1 = r19
            r2 = r20
            r3 = r21
            java.lang.String r5 = " AND mid != "
            r6 = 3
            r8 = 0
            if (r2 != r6) goto L_0x003a
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r9 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r9.<init>()     // Catch:{ Exception -> 0x0037 }
            java.lang.String r10 = "SELECT last_mid FROM dialogs WHERE did = "
            r9.append(r10)     // Catch:{ Exception -> 0x0037 }
            r9.append(r3)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r9 = r9.toString()     // Catch:{ Exception -> 0x0037 }
            java.lang.Object[] r10 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r9, r10)     // Catch:{ Exception -> 0x0037 }
            boolean r9 = r0.next()     // Catch:{ Exception -> 0x0037 }
            if (r9 == 0) goto L_0x0030
            int r9 = r0.intValue(r8)     // Catch:{ Exception -> 0x0037 }
            goto L_0x0031
        L_0x0030:
            r9 = -1
        L_0x0031:
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            if (r9 == 0) goto L_0x003a
            return
        L_0x0037:
            r0 = move-exception
            goto L_0x03bb
        L_0x003a:
            int r9 = (int) r3
            java.lang.String r10 = "SELECT data FROM messages WHERE uid = "
            r11 = 2
            if (r9 == 0) goto L_0x0042
            if (r2 != r11) goto L_0x0090
        L_0x0042:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r12 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r12.<init>()     // Catch:{ Exception -> 0x0037 }
            r12.append(r10)     // Catch:{ Exception -> 0x0037 }
            r12.append(r3)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r12 = r12.toString()     // Catch:{ Exception -> 0x0037 }
            java.lang.Object[] r13 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteCursor r12 = r0.queryFinalized(r12, r13)     // Catch:{ Exception -> 0x0037 }
            java.util.ArrayList r13 = new java.util.ArrayList     // Catch:{ Exception -> 0x0037 }
            r13.<init>()     // Catch:{ Exception -> 0x0037 }
        L_0x005e:
            boolean r0 = r12.next()     // Catch:{ Exception -> 0x0082 }
            if (r0 == 0) goto L_0x0086
            org.telegram.tgnet.NativeByteBuffer r0 = r12.byteBufferValue(r8)     // Catch:{ Exception -> 0x0082 }
            if (r0 == 0) goto L_0x005e
            int r14 = r0.readInt32(r8)     // Catch:{ Exception -> 0x0082 }
            org.telegram.tgnet.TLRPC$Message r14 = org.telegram.tgnet.TLRPC.Message.TLdeserialize(r0, r14, r8)     // Catch:{ Exception -> 0x0082 }
            org.telegram.messenger.UserConfig r15 = r19.getUserConfig()     // Catch:{ Exception -> 0x0082 }
            int r15 = r15.clientUserId     // Catch:{ Exception -> 0x0082 }
            r14.readAttachPath(r0, r15)     // Catch:{ Exception -> 0x0082 }
            r0.reuse()     // Catch:{ Exception -> 0x0082 }
            r1.addFilesToDelete(r14, r13, r8)     // Catch:{ Exception -> 0x0082 }
            goto L_0x005e
        L_0x0082:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ Exception -> 0x0037 }
        L_0x0086:
            r12.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.messenger.FileLoader r0 = r19.getFileLoader()     // Catch:{ Exception -> 0x0037 }
            r0.deleteFiles(r13, r2)     // Catch:{ Exception -> 0x0037 }
        L_0x0090:
            java.lang.String r13 = "DELETE FROM media_holes_v2 WHERE uid = "
            java.lang.String r14 = "DELETE FROM messages_holes WHERE uid = "
            java.lang.String r15 = "DELETE FROM media_v2 WHERE uid = "
            java.lang.String r7 = "DELETE FROM media_counts_v2 WHERE uid = "
            java.lang.String r12 = "DELETE FROM bot_keyboard WHERE uid = "
            java.lang.String r8 = "DELETE FROM messages WHERE uid = "
            if (r2 == 0) goto L_0x0226
            if (r2 != r6) goto L_0x00a2
            goto L_0x0226
        L_0x00a2:
            if (r2 != r11) goto L_0x0222
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r2.<init>()     // Catch:{ Exception -> 0x0037 }
            java.lang.String r6 = "SELECT last_mid_i, last_mid FROM dialogs WHERE did = "
            r2.append(r6)     // Catch:{ Exception -> 0x0037 }
            r2.append(r3)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x0037 }
            r6 = 0
            java.lang.Object[] r9 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteCursor r2 = r0.queryFinalized(r2, r9)     // Catch:{ Exception -> 0x0037 }
            boolean r0 = r2.next()     // Catch:{ Exception -> 0x0037 }
            if (r0 == 0) goto L_0x021c
            r17 = r12
            long r11 = r2.longValue(r6)     // Catch:{ Exception -> 0x0037 }
            r0 = 1
            r18 = r7
            long r6 = r2.longValue(r0)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r9 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r9.<init>()     // Catch:{ Exception -> 0x0037 }
            r9.append(r10)     // Catch:{ Exception -> 0x0037 }
            r9.append(r3)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r10 = " AND mid IN ("
            r9.append(r10)     // Catch:{ Exception -> 0x0037 }
            r9.append(r11)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r10 = ","
            r9.append(r10)     // Catch:{ Exception -> 0x0037 }
            r9.append(r6)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r10 = ")"
            r9.append(r10)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r9 = r9.toString()     // Catch:{ Exception -> 0x0037 }
            r20 = r2
            r10 = 0
            java.lang.Object[] r2 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteCursor r2 = r0.queryFinalized(r9, r2)     // Catch:{ Exception -> 0x0037 }
            r9 = -1
        L_0x0101:
            boolean r0 = r2.next()     // Catch:{ Exception -> 0x0134 }
            if (r0 == 0) goto L_0x0131
            org.telegram.tgnet.NativeByteBuffer r0 = r2.byteBufferValue(r10)     // Catch:{ Exception -> 0x0134 }
            if (r0 == 0) goto L_0x012b
            r16 = r9
            int r9 = r0.readInt32(r10)     // Catch:{ Exception -> 0x0129 }
            org.telegram.tgnet.TLRPC$Message r9 = org.telegram.tgnet.TLRPC.Message.TLdeserialize(r0, r9, r10)     // Catch:{ Exception -> 0x0129 }
            org.telegram.messenger.UserConfig r10 = r19.getUserConfig()     // Catch:{ Exception -> 0x0129 }
            int r10 = r10.clientUserId     // Catch:{ Exception -> 0x0129 }
            r9.readAttachPath(r0, r10)     // Catch:{ Exception -> 0x0129 }
            r0.reuse()     // Catch:{ Exception -> 0x0129 }
            if (r9 == 0) goto L_0x012d
            int r0 = r9.id     // Catch:{ Exception -> 0x0129 }
            r9 = r0
            goto L_0x012f
        L_0x0129:
            r0 = move-exception
            goto L_0x0137
        L_0x012b:
            r16 = r9
        L_0x012d:
            r9 = r16
        L_0x012f:
            r10 = 0
            goto L_0x0101
        L_0x0131:
            r16 = r9
            goto L_0x013a
        L_0x0134:
            r0 = move-exception
            r16 = r9
        L_0x0137:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ Exception -> 0x0037 }
        L_0x013a:
            r2.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r2.<init>()     // Catch:{ Exception -> 0x0037 }
            r2.append(r8)     // Catch:{ Exception -> 0x0037 }
            r2.append(r3)     // Catch:{ Exception -> 0x0037 }
            r2.append(r5)     // Catch:{ Exception -> 0x0037 }
            r2.append(r11)     // Catch:{ Exception -> 0x0037 }
            r2.append(r5)     // Catch:{ Exception -> 0x0037 }
            r2.append(r6)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r2.<init>()     // Catch:{ Exception -> 0x0037 }
            r2.append(r14)     // Catch:{ Exception -> 0x0037 }
            r2.append(r3)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r2.<init>()     // Catch:{ Exception -> 0x0037 }
            r5 = r17
            r2.append(r5)     // Catch:{ Exception -> 0x0037 }
            r2.append(r3)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r2.<init>()     // Catch:{ Exception -> 0x0037 }
            r6 = r18
            r2.append(r6)     // Catch:{ Exception -> 0x0037 }
            r2.append(r3)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r2.<init>()     // Catch:{ Exception -> 0x0037 }
            r2.append(r15)     // Catch:{ Exception -> 0x0037 }
            r2.append(r3)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r2.<init>()     // Catch:{ Exception -> 0x0037 }
            r2.append(r13)     // Catch:{ Exception -> 0x0037 }
            r2.append(r3)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.messenger.MediaDataController r0 = r19.getMediaDataController()     // Catch:{ Exception -> 0x0037 }
            r2 = 0
            r0.clearBotKeyboard(r3, r2)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0037 }
            java.lang.String r2 = "REPLACE INTO messages_holes VALUES(?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database     // Catch:{ Exception -> 0x0037 }
            java.lang.String r5 = "REPLACE INTO media_holes_v2 VALUES(?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r5)     // Catch:{ Exception -> 0x0037 }
            r9 = r16
            r5 = -1
            if (r9 == r5) goto L_0x0215
            createFirstHoles(r3, r0, r2, r9)     // Catch:{ Exception -> 0x0037 }
        L_0x0215:
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            r2.dispose()     // Catch:{ Exception -> 0x0037 }
            goto L_0x021e
        L_0x021c:
            r20 = r2
        L_0x021e:
            r20.dispose()     // Catch:{ Exception -> 0x0037 }
            return
        L_0x0222:
            r6 = r7
            r5 = r12
            goto L_0x02e4
        L_0x0226:
            r6 = r7
            r5 = r12
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r2.<init>()     // Catch:{ Exception -> 0x0037 }
            java.lang.String r7 = "DELETE FROM dialogs WHERE did = "
            r2.append(r7)     // Catch:{ Exception -> 0x0037 }
            r2.append(r3)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r2.<init>()     // Catch:{ Exception -> 0x0037 }
            java.lang.String r7 = "DELETE FROM chat_settings_v2 WHERE uid = "
            r2.append(r7)     // Catch:{ Exception -> 0x0037 }
            r2.append(r3)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r2.<init>()     // Catch:{ Exception -> 0x0037 }
            java.lang.String r7 = "DELETE FROM chat_pinned WHERE uid = "
            r2.append(r7)     // Catch:{ Exception -> 0x0037 }
            r2.append(r3)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r2.<init>()     // Catch:{ Exception -> 0x0037 }
            java.lang.String r7 = "DELETE FROM channel_users_v2 WHERE did = "
            r2.append(r7)     // Catch:{ Exception -> 0x0037 }
            r2.append(r3)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r2.<init>()     // Catch:{ Exception -> 0x0037 }
            java.lang.String r7 = "DELETE FROM search_recent WHERE did = "
            r2.append(r7)     // Catch:{ Exception -> 0x0037 }
            r2.append(r3)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            r0 = 32
            long r10 = r3 >> r0
            int r0 = (int) r10     // Catch:{ Exception -> 0x0037 }
            if (r9 == 0) goto L_0x02c6
            goto L_0x02e4
        L_0x02c6:
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r7.<init>()     // Catch:{ Exception -> 0x0037 }
            java.lang.String r9 = "DELETE FROM enc_chats WHERE uid = "
            r7.append(r9)     // Catch:{ Exception -> 0x0037 }
            r7.append(r0)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r0 = r7.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r2.executeFast(r0)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
        L_0x02e4:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r2.<init>()     // Catch:{ Exception -> 0x0037 }
            java.lang.String r7 = "UPDATE dialogs SET unread_count = 0, unread_count_i = 0 WHERE did = "
            r2.append(r7)     // Catch:{ Exception -> 0x0037 }
            r2.append(r3)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r2.<init>()     // Catch:{ Exception -> 0x0037 }
            r2.append(r8)     // Catch:{ Exception -> 0x0037 }
            r2.append(r3)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r2.<init>()     // Catch:{ Exception -> 0x0037 }
            r2.append(r5)     // Catch:{ Exception -> 0x0037 }
            r2.append(r3)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r2.<init>()     // Catch:{ Exception -> 0x0037 }
            r2.append(r6)     // Catch:{ Exception -> 0x0037 }
            r2.append(r3)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r2.<init>()     // Catch:{ Exception -> 0x0037 }
            r2.append(r15)     // Catch:{ Exception -> 0x0037 }
            r2.append(r3)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r2.<init>()     // Catch:{ Exception -> 0x0037 }
            r2.append(r14)     // Catch:{ Exception -> 0x0037 }
            r2.append(r3)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0037 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0037 }
            r2.<init>()     // Catch:{ Exception -> 0x0037 }
            r2.append(r13)     // Catch:{ Exception -> 0x0037 }
            r2.append(r3)     // Catch:{ Exception -> 0x0037 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0037 }
            r0.dispose()     // Catch:{ Exception -> 0x0037 }
            org.telegram.messenger.MediaDataController r0 = r19.getMediaDataController()     // Catch:{ Exception -> 0x0037 }
            r2 = 0
            r0.clearBotKeyboard(r3, r2)     // Catch:{ Exception -> 0x0037 }
            org.telegram.messenger.-$$Lambda$MessagesStorage$tBITSP4uIVXs3MrFSaqwnTCbLms r0 = new org.telegram.messenger.-$$Lambda$MessagesStorage$tBITSP4uIVXs3MrFSaqwnTCbLms     // Catch:{ Exception -> 0x0037 }
            r0.<init>()     // Catch:{ Exception -> 0x0037 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0)     // Catch:{ Exception -> 0x0037 }
            goto L_0x03be
        L_0x03bb:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x03be:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$deleteDialog$39$MessagesStorage(int, long):void");
    }

    public /* synthetic */ void lambda$null$38$MessagesStorage() {
        getNotificationCenter().postNotificationName(NotificationCenter.needReloadRecentDialogsSearch, new Object[0]);
    }

    public void onDeleteQueryComplete(long j) {
        this.storageQueue.postRunnable(new Runnable(j) {
            private final /* synthetic */ long f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$onDeleteQueryComplete$40$MessagesStorage(this.f$1);
            }
        });
    }

    public /* synthetic */ void lambda$onDeleteQueryComplete$40$MessagesStorage(long j) {
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM media_counts_v2 WHERE uid = " + j).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void getDialogPhotos(int i, int i2, long j, int i3) {
        this.storageQueue.postRunnable(new Runnable(j, i, i2, i3) {
            private final /* synthetic */ long f$1;
            private final /* synthetic */ int f$2;
            private final /* synthetic */ int f$3;
            private final /* synthetic */ int f$4;

            {
                this.f$1 = r2;
                this.f$2 = r4;
                this.f$3 = r5;
                this.f$4 = r6;
            }

            public final void run() {
                MessagesStorage.this.lambda$getDialogPhotos$42$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4);
            }
        });
    }

    public /* synthetic */ void lambda$getDialogPhotos$42$MessagesStorage(long j, int i, int i2, int i3) {
        SQLiteCursor sQLiteCursor;
        if (j != 0) {
            try {
                sQLiteCursor = this.database.queryFinalized(String.format(Locale.US, "SELECT data FROM user_photos WHERE uid = %d AND id < %d ORDER BY rowid ASC LIMIT %d", new Object[]{Integer.valueOf(i), Long.valueOf(j), Integer.valueOf(i2)}), new Object[0]);
            } catch (Exception e) {
                FileLog.e((Throwable) e);
                return;
            }
        } else {
            sQLiteCursor = this.database.queryFinalized(String.format(Locale.US, "SELECT data FROM user_photos WHERE uid = %d ORDER BY rowid ASC LIMIT %d", new Object[]{Integer.valueOf(i), Integer.valueOf(i2)}), new Object[0]);
        }
        TLRPC.TL_photos_photos tL_photos_photos = new TLRPC.TL_photos_photos();
        while (sQLiteCursor.next()) {
            NativeByteBuffer byteBufferValue = sQLiteCursor.byteBufferValue(0);
            if (byteBufferValue != null) {
                TLRPC.Photo TLdeserialize = TLRPC.Photo.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                byteBufferValue.reuse();
                tL_photos_photos.photos.add(TLdeserialize);
            }
        }
        sQLiteCursor.dispose();
        Utilities.stageQueue.postRunnable(new Runnable(tL_photos_photos, i, i2, j, i3) {
            private final /* synthetic */ TLRPC.photos_Photos f$1;
            private final /* synthetic */ int f$2;
            private final /* synthetic */ int f$3;
            private final /* synthetic */ long f$4;
            private final /* synthetic */ int f$5;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
                this.f$4 = r5;
                this.f$5 = r7;
            }

            public final void run() {
                MessagesStorage.this.lambda$null$41$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5);
            }
        });
    }

    public /* synthetic */ void lambda$null$41$MessagesStorage(TLRPC.photos_Photos photos_photos, int i, int i2, long j, int i3) {
        getMessagesController().processLoadedUserPhotos(photos_photos, i, i2, j, true, i3);
    }

    public void clearUserPhotos(int i) {
        this.storageQueue.postRunnable(new Runnable(i) {
            private final /* synthetic */ int f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$clearUserPhotos$43$MessagesStorage(this.f$1);
            }
        });
    }

    public /* synthetic */ void lambda$clearUserPhotos$43$MessagesStorage(int i) {
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM user_photos WHERE uid = " + i).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void clearUserPhoto(int i, long j) {
        this.storageQueue.postRunnable(new Runnable(i, j) {
            private final /* synthetic */ int f$1;
            private final /* synthetic */ long f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                MessagesStorage.this.lambda$clearUserPhoto$44$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    public /* synthetic */ void lambda$clearUserPhoto$44$MessagesStorage(int i, long j) {
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM user_photos WHERE uid = " + i + " AND id = " + j).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void resetDialogs(TLRPC.messages_Dialogs messages_dialogs, int i, int i2, int i3, int i4, int i5, LongSparseArray<TLRPC.Dialog> longSparseArray, LongSparseArray<MessageObject> longSparseArray2, TLRPC.Message message, int i6) {
        this.storageQueue.postRunnable(new Runnable(messages_dialogs, i6, i2, i3, i4, i5, message, i, longSparseArray, longSparseArray2) {
            private final /* synthetic */ TLRPC.messages_Dialogs f$1;
            private final /* synthetic */ LongSparseArray f$10;
            private final /* synthetic */ int f$2;
            private final /* synthetic */ int f$3;
            private final /* synthetic */ int f$4;
            private final /* synthetic */ int f$5;
            private final /* synthetic */ int f$6;
            private final /* synthetic */ TLRPC.Message f$7;
            private final /* synthetic */ int f$8;
            private final /* synthetic */ LongSparseArray f$9;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
                this.f$4 = r5;
                this.f$5 = r6;
                this.f$6 = r7;
                this.f$7 = r8;
                this.f$8 = r9;
                this.f$9 = r10;
                this.f$10 = r11;
            }

            public final void run() {
                MessagesStorage.this.lambda$resetDialogs$46$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, this.f$6, this.f$7, this.f$8, this.f$9, this.f$10);
            }
        });
    }

    public /* synthetic */ void lambda$resetDialogs$46$MessagesStorage(TLRPC.messages_Dialogs messages_dialogs, int i, int i2, int i3, int i4, int i5, TLRPC.Message message, int i6, LongSparseArray longSparseArray, LongSparseArray longSparseArray2) {
        long j;
        int i7;
        int i8;
        int i9;
        int i10;
        int i11;
        long j2;
        long j3;
        TLRPC.messages_Dialogs messages_dialogs2 = messages_dialogs;
        TLRPC.Message message2 = message;
        try {
            ArrayList arrayList = new ArrayList();
            int size = messages_dialogs2.dialogs.size() - i;
            LongSparseArray longSparseArray3 = new LongSparseArray();
            ArrayList arrayList2 = new ArrayList();
            ArrayList arrayList3 = new ArrayList();
            for (int i12 = i; i12 < messages_dialogs2.dialogs.size(); i12++) {
                arrayList3.add(Long.valueOf(messages_dialogs2.dialogs.get(i12).id));
            }
            SQLiteCursor queryFinalized = this.database.queryFinalized("SELECT did, pinned FROM dialogs WHERE 1", new Object[0]);
            int i13 = 0;
            while (queryFinalized.next()) {
                long longValue = queryFinalized.longValue(0);
                int intValue = queryFinalized.intValue(1);
                int i14 = (int) longValue;
                if (i14 != 0) {
                    arrayList.add(Integer.valueOf(i14));
                    if (intValue > 0) {
                        i13 = Math.max(intValue, i13);
                        longSparseArray3.put(longValue, Integer.valueOf(intValue));
                        arrayList2.add(Long.valueOf(longValue));
                    }
                }
            }
            Collections.sort(arrayList2, new Comparator(longSparseArray3) {
                private final /* synthetic */ LongSparseArray f$0;

                {
                    this.f$0 = r1;
                }

                public final int compare(Object obj, Object obj2) {
                    return MessagesStorage.lambda$null$45(this.f$0, (Long) obj, (Long) obj2);
                }
            });
            while (arrayList2.size() < size) {
                arrayList2.add(0, 0L);
            }
            queryFinalized.dispose();
            String str = "(" + TextUtils.join(",", arrayList) + ")";
            this.database.beginTransaction();
            this.database.executeFast("DELETE FROM dialogs WHERE did IN " + str).stepThis().dispose();
            this.database.executeFast("DELETE FROM messages WHERE uid IN " + str).stepThis().dispose();
            this.database.executeFast("DELETE FROM polls WHERE 1").stepThis().dispose();
            this.database.executeFast("DELETE FROM bot_keyboard WHERE uid IN " + str).stepThis().dispose();
            this.database.executeFast("DELETE FROM media_v2 WHERE uid IN " + str).stepThis().dispose();
            this.database.executeFast("DELETE FROM messages_holes WHERE uid IN " + str).stepThis().dispose();
            this.database.executeFast("DELETE FROM media_holes_v2 WHERE uid IN " + str).stepThis().dispose();
            this.database.commitTransaction();
            for (int i15 = 0; i15 < size; i15++) {
                TLRPC.Dialog dialog = messages_dialogs2.dialogs.get(i + i15);
                if (!(dialog instanceof TLRPC.TL_dialog) || dialog.pinned) {
                    int indexOf = arrayList2.indexOf(Long.valueOf(dialog.id));
                    int indexOf2 = arrayList3.indexOf(Long.valueOf(dialog.id));
                    if (!(indexOf == -1 || indexOf2 == -1)) {
                        if (indexOf == indexOf2) {
                            Integer num = (Integer) longSparseArray3.get(dialog.id);
                            if (num != null) {
                                dialog.pinnedNum = num.intValue();
                            }
                        } else {
                            Integer num2 = (Integer) longSparseArray3.get(((Long) arrayList2.get(indexOf2)).longValue());
                            if (num2 != null) {
                                dialog.pinnedNum = num2.intValue();
                            }
                        }
                    }
                    if (dialog.pinnedNum == 0) {
                        dialog.pinnedNum = (size - i15) + i13;
                    }
                }
            }
            putDialogsInternal(messages_dialogs2, 0);
            lambda$saveDiffParams$24$MessagesStorage(i2, i3, i4, i5);
            int totalDialogsCount = getUserConfig().getTotalDialogsCount(0);
            getUserConfig().getDialogLoadOffsets(0);
            int size2 = totalDialogsCount + messages_dialogs2.dialogs.size();
            int i16 = message2.id;
            int i17 = message2.date;
            if (message2.to_id.channel_id == 0) {
                if (message2.to_id.chat_id != 0) {
                    int i18 = message2.to_id.chat_id;
                    int i19 = 0;
                    while (true) {
                        if (i19 >= messages_dialogs2.chats.size()) {
                            j2 = 0;
                            break;
                        }
                        TLRPC.Chat chat = messages_dialogs2.chats.get(i19);
                        if (chat.id == i18) {
                            j2 = chat.access_hash;
                            break;
                        }
                        i19++;
                    }
                    j = j2;
                    i7 = 0;
                    i8 = i18;
                } else {
                    if (message2.to_id.user_id != 0) {
                        int i20 = message2.to_id.user_id;
                        int i21 = 0;
                        while (i21 < messages_dialogs2.users.size()) {
                            TLRPC.User user = messages_dialogs2.users.get(i21);
                            if (user.id == i20) {
                                j = user.access_hash;
                                i8 = 0;
                                i7 = i20;
                            } else {
                                i21++;
                            }
                        }
                        i11 = i20;
                        i9 = 0;
                        i10 = 0;
                    } else {
                        i9 = 0;
                        i10 = 0;
                        i11 = 0;
                    }
                    j = 0;
                }
                i9 = 0;
                break;
            }
            i9 = message2.to_id.channel_id;
            int i22 = 0;
            while (true) {
                if (i22 >= messages_dialogs2.chats.size()) {
                    j3 = 0;
                    break;
                }
                TLRPC.Chat chat2 = messages_dialogs2.chats.get(i22);
                if (chat2.id == i9) {
                    j3 = chat2.access_hash;
                    break;
                }
                i22++;
            }
            j = j3;
            i8 = 0;
            i7 = 0;
            int i23 = 0;
            while (i23 < 2) {
                getUserConfig().setDialogsLoadOffset(i23, i16, i17, i7, i8, i9, j);
                int i24 = i23;
                getUserConfig().setTotalDialogsCount(i24, size2);
                i23 = i24 + 1;
            }
            getUserConfig().draftsLoaded = false;
            getUserConfig().saveConfig(false);
            getMessagesController().completeDialogsReset(messages_dialogs, i6, i2, i3, i4, i5, longSparseArray, longSparseArray2, message);
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    static /* synthetic */ int lambda$null$45(LongSparseArray longSparseArray, Long l, Long l2) {
        Integer num = (Integer) longSparseArray.get(l.longValue());
        Integer num2 = (Integer) longSparseArray.get(l2.longValue());
        if (num.intValue() < num2.intValue()) {
            return 1;
        }
        return num.intValue() > num2.intValue() ? -1 : 0;
    }

    public void putDialogPhotos(int i, TLRPC.photos_Photos photos_photos) {
        if (photos_photos != null && !photos_photos.photos.isEmpty()) {
            this.storageQueue.postRunnable(new Runnable(i, photos_photos) {
                private final /* synthetic */ int f$1;
                private final /* synthetic */ TLRPC.photos_Photos f$2;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                }

                public final void run() {
                    MessagesStorage.this.lambda$putDialogPhotos$47$MessagesStorage(this.f$1, this.f$2);
                }
            });
        }
    }

    public /* synthetic */ void lambda$putDialogPhotos$47$MessagesStorage(int i, TLRPC.photos_Photos photos_photos) {
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM user_photos WHERE uid = " + i).stepThis().dispose();
            SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO user_photos VALUES(?, ?, ?)");
            int size = photos_photos.photos.size();
            for (int i2 = 0; i2 < size; i2++) {
                TLRPC.Photo photo = photos_photos.photos.get(i2);
                if (!(photo instanceof TLRPC.TL_photoEmpty)) {
                    executeFast.requery();
                    NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(photo.getObjectSize());
                    photo.serializeToStream(nativeByteBuffer);
                    executeFast.bindInteger(1, i);
                    executeFast.bindLong(2, photo.id);
                    executeFast.bindByteBuffer(3, nativeByteBuffer);
                    executeFast.step();
                    nativeByteBuffer.reuse();
                }
            }
            executeFast.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void emptyMessagesMedia(ArrayList<Integer> arrayList) {
        this.storageQueue.postRunnable(new Runnable(arrayList) {
            private final /* synthetic */ ArrayList f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$emptyMessagesMedia$49$MessagesStorage(this.f$1);
            }
        });
    }

    /* JADX WARNING: Removed duplicated region for block: B:32:0x0102 A[Catch:{ Exception -> 0x013d }] */
    /* JADX WARNING: Removed duplicated region for block: B:33:0x0108 A[Catch:{ Exception -> 0x013d }] */
    /* JADX WARNING: Removed duplicated region for block: B:36:0x011a A[Catch:{ Exception -> 0x013d }] */
    /* JADX WARNING: Removed duplicated region for block: B:37:0x011c A[Catch:{ Exception -> 0x013d }] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$emptyMessagesMedia$49$MessagesStorage(java.util.ArrayList r12) {
        /*
            r11 = this;
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x013d }
            r0.<init>()     // Catch:{ Exception -> 0x013d }
            java.util.ArrayList r1 = new java.util.ArrayList     // Catch:{ Exception -> 0x013d }
            r1.<init>()     // Catch:{ Exception -> 0x013d }
            org.telegram.SQLite.SQLiteDatabase r2 = r11.database     // Catch:{ Exception -> 0x013d }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x013d }
            java.lang.String r4 = "SELECT data, mid, date, uid FROM messages WHERE mid IN (%s)"
            r5 = 1
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x013d }
            java.lang.String r7 = ","
            java.lang.String r12 = android.text.TextUtils.join(r7, r12)     // Catch:{ Exception -> 0x013d }
            r7 = 0
            r6[r7] = r12     // Catch:{ Exception -> 0x013d }
            java.lang.String r12 = java.lang.String.format(r3, r4, r6)     // Catch:{ Exception -> 0x013d }
            java.lang.Object[] r3 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x013d }
            org.telegram.SQLite.SQLiteCursor r12 = r2.queryFinalized(r12, r3)     // Catch:{ Exception -> 0x013d }
        L_0x0026:
            boolean r2 = r12.next()     // Catch:{ Exception -> 0x013d }
            r3 = 3
            r4 = 2
            if (r2 == 0) goto L_0x0092
            org.telegram.tgnet.NativeByteBuffer r2 = r12.byteBufferValue(r7)     // Catch:{ Exception -> 0x013d }
            if (r2 == 0) goto L_0x0026
            int r6 = r2.readInt32(r7)     // Catch:{ Exception -> 0x013d }
            org.telegram.tgnet.TLRPC$Message r6 = org.telegram.tgnet.TLRPC.Message.TLdeserialize(r2, r6, r7)     // Catch:{ Exception -> 0x013d }
            org.telegram.messenger.UserConfig r8 = r11.getUserConfig()     // Catch:{ Exception -> 0x013d }
            int r8 = r8.clientUserId     // Catch:{ Exception -> 0x013d }
            r6.readAttachPath(r2, r8)     // Catch:{ Exception -> 0x013d }
            r2.reuse()     // Catch:{ Exception -> 0x013d }
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r6.media     // Catch:{ Exception -> 0x013d }
            if (r2 == 0) goto L_0x0026
            boolean r2 = r11.addFilesToDelete(r6, r0, r5)     // Catch:{ Exception -> 0x013d }
            if (r2 != 0) goto L_0x0053
            goto L_0x0026
        L_0x0053:
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r6.media     // Catch:{ Exception -> 0x013d }
            org.telegram.tgnet.TLRPC$Document r2 = r2.document     // Catch:{ Exception -> 0x013d }
            if (r2 == 0) goto L_0x0063
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r6.media     // Catch:{ Exception -> 0x013d }
            org.telegram.tgnet.TLRPC$TL_documentEmpty r8 = new org.telegram.tgnet.TLRPC$TL_documentEmpty     // Catch:{ Exception -> 0x013d }
            r8.<init>()     // Catch:{ Exception -> 0x013d }
            r2.document = r8     // Catch:{ Exception -> 0x013d }
            goto L_0x0072
        L_0x0063:
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r6.media     // Catch:{ Exception -> 0x013d }
            org.telegram.tgnet.TLRPC$Photo r2 = r2.photo     // Catch:{ Exception -> 0x013d }
            if (r2 == 0) goto L_0x0072
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r6.media     // Catch:{ Exception -> 0x013d }
            org.telegram.tgnet.TLRPC$TL_photoEmpty r8 = new org.telegram.tgnet.TLRPC$TL_photoEmpty     // Catch:{ Exception -> 0x013d }
            r8.<init>()     // Catch:{ Exception -> 0x013d }
            r2.photo = r8     // Catch:{ Exception -> 0x013d }
        L_0x0072:
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r6.media     // Catch:{ Exception -> 0x013d }
            org.telegram.tgnet.TLRPC$MessageMedia r8 = r6.media     // Catch:{ Exception -> 0x013d }
            int r8 = r8.flags     // Catch:{ Exception -> 0x013d }
            r8 = r8 & -2
            r2.flags = r8     // Catch:{ Exception -> 0x013d }
            int r2 = r12.intValue(r5)     // Catch:{ Exception -> 0x013d }
            r6.id = r2     // Catch:{ Exception -> 0x013d }
            int r2 = r12.intValue(r4)     // Catch:{ Exception -> 0x013d }
            r6.date = r2     // Catch:{ Exception -> 0x013d }
            long r2 = r12.longValue(r3)     // Catch:{ Exception -> 0x013d }
            r6.dialog_id = r2     // Catch:{ Exception -> 0x013d }
            r1.add(r6)     // Catch:{ Exception -> 0x013d }
            goto L_0x0026
        L_0x0092:
            r12.dispose()     // Catch:{ Exception -> 0x013d }
            boolean r12 = r1.isEmpty()     // Catch:{ Exception -> 0x013d }
            if (r12 != 0) goto L_0x0135
            org.telegram.SQLite.SQLiteDatabase r12 = r11.database     // Catch:{ Exception -> 0x013d }
            java.lang.String r2 = "REPLACE INTO messages VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r12 = r12.executeFast(r2)     // Catch:{ Exception -> 0x013d }
            r2 = 0
        L_0x00a4:
            int r6 = r1.size()     // Catch:{ Exception -> 0x013d }
            if (r2 >= r6) goto L_0x012a
            java.lang.Object r6 = r1.get(r2)     // Catch:{ Exception -> 0x013d }
            org.telegram.tgnet.TLRPC$Message r6 = (org.telegram.tgnet.TLRPC.Message) r6     // Catch:{ Exception -> 0x013d }
            org.telegram.tgnet.NativeByteBuffer r8 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x013d }
            int r9 = r6.getObjectSize()     // Catch:{ Exception -> 0x013d }
            r8.<init>((int) r9)     // Catch:{ Exception -> 0x013d }
            r6.serializeToStream(r8)     // Catch:{ Exception -> 0x013d }
            r12.requery()     // Catch:{ Exception -> 0x013d }
            int r9 = r6.id     // Catch:{ Exception -> 0x013d }
            long r9 = (long) r9     // Catch:{ Exception -> 0x013d }
            r12.bindLong(r5, r9)     // Catch:{ Exception -> 0x013d }
            long r9 = r6.dialog_id     // Catch:{ Exception -> 0x013d }
            r12.bindLong(r4, r9)     // Catch:{ Exception -> 0x013d }
            int r9 = org.telegram.messenger.MessageObject.getUnreadFlags(r6)     // Catch:{ Exception -> 0x013d }
            r12.bindInteger(r3, r9)     // Catch:{ Exception -> 0x013d }
            r9 = 4
            int r10 = r6.send_state     // Catch:{ Exception -> 0x013d }
            r12.bindInteger(r9, r10)     // Catch:{ Exception -> 0x013d }
            r9 = 5
            int r10 = r6.date     // Catch:{ Exception -> 0x013d }
            r12.bindInteger(r9, r10)     // Catch:{ Exception -> 0x013d }
            r9 = 6
            r12.bindByteBuffer((int) r9, (org.telegram.tgnet.NativeByteBuffer) r8)     // Catch:{ Exception -> 0x013d }
            r9 = 7
            boolean r10 = org.telegram.messenger.MessageObject.isOut(r6)     // Catch:{ Exception -> 0x013d }
            if (r10 != 0) goto L_0x00ef
            boolean r10 = r6.from_scheduled     // Catch:{ Exception -> 0x013d }
            if (r10 == 0) goto L_0x00ed
            goto L_0x00ef
        L_0x00ed:
            r10 = 0
            goto L_0x00f0
        L_0x00ef:
            r10 = 1
        L_0x00f0:
            r12.bindInteger(r9, r10)     // Catch:{ Exception -> 0x013d }
            r9 = 8
            int r10 = r6.ttl     // Catch:{ Exception -> 0x013d }
            r12.bindInteger(r9, r10)     // Catch:{ Exception -> 0x013d }
            int r9 = r6.flags     // Catch:{ Exception -> 0x013d }
            r9 = r9 & 1024(0x400, float:1.435E-42)
            r10 = 9
            if (r9 == 0) goto L_0x0108
            int r9 = r6.views     // Catch:{ Exception -> 0x013d }
            r12.bindInteger(r10, r9)     // Catch:{ Exception -> 0x013d }
            goto L_0x010f
        L_0x0108:
            int r9 = r11.getMessageMediaType(r6)     // Catch:{ Exception -> 0x013d }
            r12.bindInteger(r10, r9)     // Catch:{ Exception -> 0x013d }
        L_0x010f:
            r9 = 10
            r12.bindInteger(r9, r7)     // Catch:{ Exception -> 0x013d }
            r9 = 11
            boolean r6 = r6.mentioned     // Catch:{ Exception -> 0x013d }
            if (r6 == 0) goto L_0x011c
            r6 = 1
            goto L_0x011d
        L_0x011c:
            r6 = 0
        L_0x011d:
            r12.bindInteger(r9, r6)     // Catch:{ Exception -> 0x013d }
            r12.step()     // Catch:{ Exception -> 0x013d }
            r8.reuse()     // Catch:{ Exception -> 0x013d }
            int r2 = r2 + 1
            goto L_0x00a4
        L_0x012a:
            r12.dispose()     // Catch:{ Exception -> 0x013d }
            org.telegram.messenger.-$$Lambda$MessagesStorage$t7zI5TWNg08Mg1HnN5nF6Kp_mPY r12 = new org.telegram.messenger.-$$Lambda$MessagesStorage$t7zI5TWNg08Mg1HnN5nF6Kp_mPY     // Catch:{ Exception -> 0x013d }
            r12.<init>(r1)     // Catch:{ Exception -> 0x013d }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r12)     // Catch:{ Exception -> 0x013d }
        L_0x0135:
            org.telegram.messenger.FileLoader r12 = r11.getFileLoader()     // Catch:{ Exception -> 0x013d }
            r12.deleteFiles(r0, r7)     // Catch:{ Exception -> 0x013d }
            goto L_0x0141
        L_0x013d:
            r12 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r12)
        L_0x0141:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$emptyMessagesMedia$49$MessagesStorage(java.util.ArrayList):void");
    }

    public /* synthetic */ void lambda$null$48$MessagesStorage(ArrayList arrayList) {
        for (int i = 0; i < arrayList.size(); i++) {
            getNotificationCenter().postNotificationName(NotificationCenter.updateMessageMedia, arrayList.get(i));
        }
    }

    public void updateMessagePollResults(long j, TLRPC.TL_poll tL_poll, TLRPC.PollResults pollResults) {
        this.storageQueue.postRunnable(new Runnable(j, tL_poll, pollResults) {
            private final /* synthetic */ long f$1;
            private final /* synthetic */ TLRPC.TL_poll f$2;
            private final /* synthetic */ TLRPC.PollResults f$3;

            {
                this.f$1 = r2;
                this.f$2 = r4;
                this.f$3 = r5;
            }

            public final void run() {
                MessagesStorage.this.lambda$updateMessagePollResults$50$MessagesStorage(this.f$1, this.f$2, this.f$3);
            }
        });
    }

    public /* synthetic */ void lambda$updateMessagePollResults$50$MessagesStorage(long j, TLRPC.TL_poll tL_poll, TLRPC.PollResults pollResults) {
        ArrayList arrayList = null;
        try {
            SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT mid FROM polls WHERE id = %d", new Object[]{Long.valueOf(j)}), new Object[0]);
            while (queryFinalized.next()) {
                if (arrayList == null) {
                    arrayList = new ArrayList();
                }
                arrayList.add(Long.valueOf(queryFinalized.longValue(0)));
            }
            queryFinalized.dispose();
            if (arrayList != null) {
                this.database.beginTransaction();
                int size = arrayList.size();
                for (int i = 0; i < size; i++) {
                    Long l = (Long) arrayList.get(i);
                    SQLiteCursor queryFinalized2 = this.database.queryFinalized(String.format(Locale.US, "SELECT data FROM messages WHERE mid = %d", new Object[]{l}), new Object[0]);
                    if (queryFinalized2.next()) {
                        NativeByteBuffer byteBufferValue = queryFinalized2.byteBufferValue(0);
                        if (byteBufferValue != null) {
                            TLRPC.Message TLdeserialize = TLRPC.Message.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                            TLdeserialize.readAttachPath(byteBufferValue, getUserConfig().clientUserId);
                            byteBufferValue.reuse();
                            if (TLdeserialize.media instanceof TLRPC.TL_messageMediaPoll) {
                                TLRPC.TL_messageMediaPoll tL_messageMediaPoll = (TLRPC.TL_messageMediaPoll) TLdeserialize.media;
                                if (tL_poll != null) {
                                    tL_messageMediaPoll.poll = tL_poll;
                                }
                                if (pollResults != null) {
                                    MessageObject.updatePollResults(tL_messageMediaPoll, pollResults);
                                }
                                SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE messages SET data = ? WHERE mid = ?");
                                NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(TLdeserialize.getObjectSize());
                                TLdeserialize.serializeToStream(nativeByteBuffer);
                                executeFast.requery();
                                executeFast.bindByteBuffer(1, nativeByteBuffer);
                                executeFast.bindLong(2, l.longValue());
                                executeFast.step();
                                nativeByteBuffer.reuse();
                                executeFast.dispose();
                            }
                        }
                    } else {
                        this.database.executeFast(String.format(Locale.US, "DELETE FROM polls WHERE mid = %d", new Object[]{l})).stepThis().dispose();
                    }
                    queryFinalized2.dispose();
                }
                this.database.commitTransaction();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void updateMessageReactions(long j, int i, int i2, TLRPC.TL_messageReactions tL_messageReactions) {
        this.storageQueue.postRunnable(new Runnable(i, i2, tL_messageReactions) {
            private final /* synthetic */ int f$1;
            private final /* synthetic */ int f$2;
            private final /* synthetic */ TLRPC.TL_messageReactions f$3;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$updateMessageReactions$51$MessagesStorage(this.f$1, this.f$2, this.f$3);
            }
        });
    }

    public /* synthetic */ void lambda$updateMessageReactions$51$MessagesStorage(int i, int i2, TLRPC.TL_messageReactions tL_messageReactions) {
        NativeByteBuffer byteBufferValue;
        try {
            this.database.beginTransaction();
            long j = (long) i;
            if (i2 != 0) {
                j |= ((long) i2) << 32;
            }
            SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT data FROM messages WHERE mid = %d", new Object[]{Long.valueOf(j)}), new Object[0]);
            if (queryFinalized.next() && (byteBufferValue = queryFinalized.byteBufferValue(0)) != null) {
                TLRPC.Message TLdeserialize = TLRPC.Message.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                TLdeserialize.readAttachPath(byteBufferValue, getUserConfig().clientUserId);
                byteBufferValue.reuse();
                if (TLdeserialize != null) {
                    MessageObject.updateReactions(TLdeserialize, tL_messageReactions);
                    SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE messages SET data = ? WHERE mid = ?");
                    NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(TLdeserialize.getObjectSize());
                    TLdeserialize.serializeToStream(nativeByteBuffer);
                    executeFast.requery();
                    executeFast.bindByteBuffer(1, nativeByteBuffer);
                    executeFast.bindLong(2, j);
                    executeFast.step();
                    nativeByteBuffer.reuse();
                    executeFast.dispose();
                }
            }
            queryFinalized.dispose();
            this.database.commitTransaction();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void getNewTask(ArrayList<Integer> arrayList, int i) {
        this.storageQueue.postRunnable(new Runnable(arrayList) {
            private final /* synthetic */ ArrayList f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$getNewTask$52$MessagesStorage(this.f$1);
            }
        });
    }

    public /* synthetic */ void lambda$getNewTask$52$MessagesStorage(ArrayList arrayList) {
        if (arrayList != null) {
            try {
                this.database.executeFast(String.format(Locale.US, "DELETE FROM enc_tasks_v2 WHERE mid IN(%s)", new Object[]{TextUtils.join(",", arrayList)})).stepThis().dispose();
            } catch (Exception e) {
                FileLog.e((Throwable) e);
                return;
            }
        }
        SQLiteCursor queryFinalized = this.database.queryFinalized("SELECT mid, date FROM enc_tasks_v2 WHERE date = (SELECT min(date) FROM enc_tasks_v2)", new Object[0]);
        ArrayList arrayList2 = null;
        int i = -1;
        int i2 = 0;
        while (queryFinalized.next()) {
            long longValue = queryFinalized.longValue(0);
            if (i == -1 && (i = (int) (longValue >> 32)) < 0) {
                i = 0;
            }
            i2 = queryFinalized.intValue(1);
            if (arrayList2 == null) {
                arrayList2 = new ArrayList();
            }
            arrayList2.add(Integer.valueOf((int) longValue));
        }
        queryFinalized.dispose();
        getMessagesController().processLoadedDeleteTask(i2, arrayList2, i);
    }

    public void markMentionMessageAsRead(int i, int i2, long j) {
        this.storageQueue.postRunnable(new Runnable(i, i2, j) {
            private final /* synthetic */ int f$1;
            private final /* synthetic */ int f$2;
            private final /* synthetic */ long f$3;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$markMentionMessageAsRead$53$MessagesStorage(this.f$1, this.f$2, this.f$3);
            }
        });
    }

    public /* synthetic */ void lambda$markMentionMessageAsRead$53$MessagesStorage(int i, int i2, long j) {
        long j2 = (long) i;
        if (i2 != 0) {
            j2 |= ((long) i2) << 32;
        }
        try {
            this.database.executeFast(String.format(Locale.US, "UPDATE messages SET read_state = read_state | 2 WHERE mid = %d", new Object[]{Long.valueOf(j2)})).stepThis().dispose();
            SQLiteDatabase sQLiteDatabase = this.database;
            SQLiteCursor queryFinalized = sQLiteDatabase.queryFinalized("SELECT unread_count_i FROM dialogs WHERE did = " + j, new Object[0]);
            int max = queryFinalized.next() ? Math.max(0, queryFinalized.intValue(0) - 1) : 0;
            queryFinalized.dispose();
            this.database.executeFast(String.format(Locale.US, "UPDATE dialogs SET unread_count_i = %d WHERE did = %d", new Object[]{Integer.valueOf(max), Long.valueOf(j)})).stepThis().dispose();
            LongSparseArray longSparseArray = new LongSparseArray(1);
            longSparseArray.put(j, Integer.valueOf(max));
            getMessagesController().processDialogsUpdateRead((LongSparseArray<Integer>) null, longSparseArray);
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void markMessageAsMention(long j) {
        this.storageQueue.postRunnable(new Runnable(j) {
            private final /* synthetic */ long f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$markMessageAsMention$54$MessagesStorage(this.f$1);
            }
        });
    }

    public /* synthetic */ void lambda$markMessageAsMention$54$MessagesStorage(long j) {
        try {
            this.database.executeFast(String.format(Locale.US, "UPDATE messages SET mention = 1, read_state = read_state & ~2 WHERE mid = %d", new Object[]{Long.valueOf(j)})).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void resetMentionsCount(long j, int i) {
        this.storageQueue.postRunnable(new Runnable(i, j) {
            private final /* synthetic */ int f$1;
            private final /* synthetic */ long f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                MessagesStorage.this.lambda$resetMentionsCount$55$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    public /* synthetic */ void lambda$resetMentionsCount$55$MessagesStorage(int i, long j) {
        if (i == 0) {
            try {
                this.database.executeFast(String.format(Locale.US, "UPDATE messages SET read_state = read_state | 2 WHERE uid = %d AND mention = 1 AND read_state IN(0, 1)", new Object[]{Long.valueOf(j)})).stepThis().dispose();
            } catch (Exception e) {
                FileLog.e((Throwable) e);
                return;
            }
        }
        this.database.executeFast(String.format(Locale.US, "UPDATE dialogs SET unread_count_i = %d WHERE did = %d", new Object[]{Integer.valueOf(i), Long.valueOf(j)})).stepThis().dispose();
        LongSparseArray longSparseArray = new LongSparseArray(1);
        longSparseArray.put(j, Integer.valueOf(i));
        getMessagesController().processDialogsUpdateRead((LongSparseArray<Integer>) null, longSparseArray);
    }

    public void createTaskForMid(int i, int i2, int i3, int i4, int i5, boolean z) {
        this.storageQueue.postRunnable(new Runnable(i3, i4, i5, i, i2, z) {
            private final /* synthetic */ int f$1;
            private final /* synthetic */ int f$2;
            private final /* synthetic */ int f$3;
            private final /* synthetic */ int f$4;
            private final /* synthetic */ int f$5;
            private final /* synthetic */ boolean f$6;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
                this.f$4 = r5;
                this.f$5 = r6;
                this.f$6 = r7;
            }

            public final void run() {
                MessagesStorage.this.lambda$createTaskForMid$57$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, this.f$6);
            }
        });
    }

    public /* synthetic */ void lambda$createTaskForMid$57$MessagesStorage(int i, int i2, int i3, int i4, int i5, boolean z) {
        if (i <= i2) {
            i = i2;
        }
        int i6 = i + i3;
        try {
            SparseArray sparseArray = new SparseArray();
            ArrayList arrayList = new ArrayList();
            long j = (long) i4;
            if (i5 != 0) {
                j |= ((long) i5) << 32;
            }
            arrayList.add(Long.valueOf(j));
            sparseArray.put(i6, arrayList);
            AndroidUtilities.runOnUIThread(new Runnable(z, arrayList) {
                private final /* synthetic */ boolean f$1;
                private final /* synthetic */ ArrayList f$2;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                }

                public final void run() {
                    MessagesStorage.this.lambda$null$56$MessagesStorage(this.f$1, this.f$2);
                }
            });
            SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO enc_tasks_v2 VALUES(?, ?)");
            for (int i7 = 0; i7 < sparseArray.size(); i7++) {
                int keyAt = sparseArray.keyAt(i7);
                ArrayList arrayList2 = (ArrayList) sparseArray.get(keyAt);
                for (int i8 = 0; i8 < arrayList2.size(); i8++) {
                    executeFast.requery();
                    executeFast.bindLong(1, ((Long) arrayList2.get(i8)).longValue());
                    executeFast.bindInteger(2, keyAt);
                    executeFast.step();
                }
            }
            executeFast.dispose();
            this.database.executeFast(String.format(Locale.US, "UPDATE messages SET ttl = 0 WHERE mid = %d", new Object[]{Long.valueOf(j)})).stepThis().dispose();
            getMessagesController().didAddedNewTask(i6, sparseArray);
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public /* synthetic */ void lambda$null$56$MessagesStorage(boolean z, ArrayList arrayList) {
        if (!z) {
            markMessagesContentAsRead(arrayList, 0);
        }
        getNotificationCenter().postNotificationName(NotificationCenter.messagesReadContent, arrayList);
    }

    public void createTaskForSecretChat(int i, int i2, int i3, int i4, ArrayList<Long> arrayList) {
        this.storageQueue.postRunnable(new Runnable(arrayList, i, i4, i2, i3) {
            private final /* synthetic */ ArrayList f$1;
            private final /* synthetic */ int f$2;
            private final /* synthetic */ int f$3;
            private final /* synthetic */ int f$4;
            private final /* synthetic */ int f$5;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
                this.f$4 = r5;
                this.f$5 = r6;
            }

            public final void run() {
                MessagesStorage.this.lambda$createTaskForSecretChat$59$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5);
            }
        });
    }

    public /* synthetic */ void lambda$createTaskForSecretChat$59$MessagesStorage(ArrayList arrayList, int i, int i2, int i3, int i4) {
        SQLiteCursor sQLiteCursor;
        ArrayList arrayList2;
        ArrayList arrayList3 = arrayList;
        int i5 = Integer.MAX_VALUE;
        try {
            SparseArray sparseArray = new SparseArray();
            ArrayList arrayList4 = new ArrayList();
            StringBuilder sb = new StringBuilder();
            int i6 = 0;
            if (arrayList3 == null) {
                sQLiteCursor = this.database.queryFinalized(String.format(Locale.US, "SELECT mid, ttl FROM messages WHERE uid = %d AND out = %d AND read_state != 0 AND ttl > 0 AND date <= %d AND send_state = 0 AND media != 1", new Object[]{Long.valueOf(((long) i) << 32), Integer.valueOf(i2), Integer.valueOf(i3)}), new Object[0]);
            } else {
                sQLiteCursor = this.database.queryFinalized(String.format(Locale.US, "SELECT m.mid, m.ttl FROM messages as m INNER JOIN randoms as r ON m.mid = r.mid WHERE r.random_id IN (%s)", new Object[]{TextUtils.join(",", arrayList3)}), new Object[0]);
            }
            while (sQLiteCursor.next()) {
                int intValue = sQLiteCursor.intValue(1);
                long intValue2 = (long) sQLiteCursor.intValue(i6);
                if (arrayList3 != null) {
                    arrayList4.add(Long.valueOf(intValue2));
                }
                if (intValue > 0) {
                    int i7 = i3;
                    int i8 = i4;
                    int i9 = (i7 > i8 ? i7 : i8) + intValue;
                    i5 = Math.min(i5, i9);
                    ArrayList arrayList5 = (ArrayList) sparseArray.get(i9);
                    if (arrayList5 == null) {
                        arrayList2 = new ArrayList();
                        sparseArray.put(i9, arrayList2);
                    } else {
                        arrayList2 = arrayList5;
                    }
                    if (sb.length() != 0) {
                        sb.append(",");
                    }
                    sb.append(intValue2);
                    arrayList2.add(Long.valueOf(intValue2));
                    i6 = 0;
                }
            }
            sQLiteCursor.dispose();
            if (arrayList3 != null) {
                AndroidUtilities.runOnUIThread(new Runnable(arrayList4) {
                    private final /* synthetic */ ArrayList f$1;

                    {
                        this.f$1 = r2;
                    }

                    public final void run() {
                        MessagesStorage.this.lambda$null$58$MessagesStorage(this.f$1);
                    }
                });
            }
            if (sparseArray.size() != 0) {
                this.database.beginTransaction();
                SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO enc_tasks_v2 VALUES(?, ?)");
                for (int i10 = 0; i10 < sparseArray.size(); i10++) {
                    int keyAt = sparseArray.keyAt(i10);
                    ArrayList arrayList6 = (ArrayList) sparseArray.get(keyAt);
                    for (int i11 = 0; i11 < arrayList6.size(); i11++) {
                        executeFast.requery();
                        executeFast.bindLong(1, ((Long) arrayList6.get(i11)).longValue());
                        executeFast.bindInteger(2, keyAt);
                        executeFast.step();
                    }
                }
                executeFast.dispose();
                this.database.commitTransaction();
                this.database.executeFast(String.format(Locale.US, "UPDATE messages SET ttl = 0 WHERE mid IN(%s)", new Object[]{sb.toString()})).stepThis().dispose();
                getMessagesController().didAddedNewTask(i5, sparseArray);
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public /* synthetic */ void lambda$null$58$MessagesStorage(ArrayList arrayList) {
        markMessagesContentAsRead(arrayList, 0);
        getNotificationCenter().postNotificationName(NotificationCenter.messagesReadContent, arrayList);
    }

    private void updateDialogsWithReadMessagesInternal(ArrayList<Integer> arrayList, SparseLongArray sparseLongArray, SparseLongArray sparseLongArray2, ArrayList<Long> arrayList2) {
        int i;
        SparseLongArray sparseLongArray3 = sparseLongArray;
        SparseLongArray sparseLongArray4 = sparseLongArray2;
        ArrayList<Long> arrayList3 = arrayList2;
        try {
            LongSparseArray longSparseArray = new LongSparseArray();
            LongSparseArray longSparseArray2 = new LongSparseArray();
            ArrayList arrayList4 = new ArrayList();
            int i2 = 2;
            if (!isEmpty((List<?>) arrayList)) {
                SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT uid, read_state, out FROM messages WHERE mid IN(%s)", new Object[]{TextUtils.join(",", arrayList)}), new Object[0]);
                while (queryFinalized.next()) {
                    if (queryFinalized.intValue(2) == 0) {
                        if (queryFinalized.intValue(1) == 0) {
                            long longValue = queryFinalized.longValue(0);
                            Integer num = (Integer) longSparseArray.get(longValue);
                            if (num == null) {
                                longSparseArray.put(longValue, 1);
                            } else {
                                longSparseArray.put(longValue, Integer.valueOf(num.intValue() + 1));
                            }
                        }
                    }
                }
                queryFinalized.dispose();
                i = 0;
            } else {
                if (!isEmpty(sparseLongArray)) {
                    int i3 = 0;
                    while (i3 < sparseLongArray.size()) {
                        int keyAt = sparseLongArray3.keyAt(i3);
                        long j = sparseLongArray3.get(keyAt);
                        SQLiteDatabase sQLiteDatabase = this.database;
                        Locale locale = Locale.US;
                        Object[] objArr = new Object[i2];
                        objArr[0] = Integer.valueOf(keyAt);
                        objArr[1] = Long.valueOf(j);
                        SQLiteCursor queryFinalized2 = sQLiteDatabase.queryFinalized(String.format(locale, "SELECT COUNT(mid) FROM messages WHERE uid = %d AND mid > %d AND read_state IN(0,2) AND out = 0", objArr), new Object[0]);
                        if (queryFinalized2.next()) {
                            longSparseArray.put((long) keyAt, Integer.valueOf(queryFinalized2.intValue(0)));
                        }
                        queryFinalized2.dispose();
                        SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE dialogs SET inbox_max = max((SELECT inbox_max FROM dialogs WHERE did = ?), ?) WHERE did = ?");
                        executeFast.requery();
                        long j2 = (long) keyAt;
                        executeFast.bindLong(1, j2);
                        executeFast.bindInteger(2, (int) j);
                        executeFast.bindLong(3, j2);
                        executeFast.step();
                        executeFast.dispose();
                        i3++;
                        sparseLongArray3 = sparseLongArray;
                        i2 = 2;
                    }
                }
                if (!isEmpty((List<?>) arrayList2)) {
                    ArrayList arrayList5 = new ArrayList(arrayList3);
                    i = 0;
                    SQLiteCursor queryFinalized3 = this.database.queryFinalized(String.format(Locale.US, "SELECT uid, read_state, out, mention, mid FROM messages WHERE mid IN(%s)", new Object[]{TextUtils.join(",", arrayList3)}), new Object[0]);
                    while (queryFinalized3.next()) {
                        long longValue2 = queryFinalized3.longValue(i);
                        arrayList5.remove(Long.valueOf(queryFinalized3.longValue(4)));
                        if (queryFinalized3.intValue(1) < 2 && queryFinalized3.intValue(2) == 0 && queryFinalized3.intValue(3) == 1) {
                            Integer num2 = (Integer) longSparseArray2.get(longValue2);
                            if (num2 == null) {
                                SQLiteDatabase sQLiteDatabase2 = this.database;
                                SQLiteCursor queryFinalized4 = sQLiteDatabase2.queryFinalized("SELECT unread_count_i FROM dialogs WHERE did = " + longValue2, new Object[0]);
                                int intValue = queryFinalized4.next() ? queryFinalized4.intValue(0) : 0;
                                queryFinalized4.dispose();
                                longSparseArray2.put(longValue2, Integer.valueOf(Math.max(0, intValue - 1)));
                            } else {
                                i = 0;
                                longSparseArray2.put(longValue2, Integer.valueOf(Math.max(0, num2.intValue() - 1)));
                            }
                        }
                        i = 0;
                    }
                    queryFinalized3.dispose();
                    for (int i4 = 0; i4 < arrayList5.size(); i4++) {
                        int longValue3 = (int) (((Long) arrayList5.get(i4)).longValue() >> 32);
                        if (longValue3 > 0 && !arrayList4.contains(Integer.valueOf(longValue3))) {
                            arrayList4.add(Integer.valueOf(longValue3));
                        }
                    }
                } else {
                    i = 0;
                }
                if (!isEmpty(sparseLongArray2)) {
                    for (int i5 = 0; i5 < sparseLongArray2.size(); i5++) {
                        int keyAt2 = sparseLongArray4.keyAt(i5);
                        long j3 = sparseLongArray4.get(keyAt2);
                        SQLitePreparedStatement executeFast2 = this.database.executeFast("UPDATE dialogs SET outbox_max = max((SELECT outbox_max FROM dialogs WHERE did = ?), ?) WHERE did = ?");
                        executeFast2.requery();
                        long j4 = (long) keyAt2;
                        executeFast2.bindLong(1, j4);
                        executeFast2.bindInteger(2, (int) j3);
                        executeFast2.bindLong(3, j4);
                        executeFast2.step();
                        executeFast2.dispose();
                    }
                }
            }
            if (longSparseArray.size() > 0 || longSparseArray2.size() > 0) {
                this.database.beginTransaction();
                if (longSparseArray.size() > 0) {
                    SQLitePreparedStatement executeFast3 = this.database.executeFast("UPDATE dialogs SET unread_count = ? WHERE did = ?");
                    for (int i6 = 0; i6 < longSparseArray.size(); i6++) {
                        executeFast3.requery();
                        executeFast3.bindInteger(1, ((Integer) longSparseArray.valueAt(i6)).intValue());
                        executeFast3.bindLong(2, longSparseArray.keyAt(i6));
                        executeFast3.step();
                    }
                    executeFast3.dispose();
                }
                if (longSparseArray2.size() > 0) {
                    SQLitePreparedStatement executeFast4 = this.database.executeFast("UPDATE dialogs SET unread_count_i = ? WHERE did = ?");
                    while (i < longSparseArray2.size()) {
                        executeFast4.requery();
                        executeFast4.bindInteger(1, ((Integer) longSparseArray2.valueAt(i)).intValue());
                        executeFast4.bindLong(2, longSparseArray2.keyAt(i));
                        executeFast4.step();
                        i++;
                    }
                    executeFast4.dispose();
                }
                this.database.commitTransaction();
            }
            getMessagesController().processDialogsUpdateRead(longSparseArray, longSparseArray2);
            if (!arrayList4.isEmpty()) {
                getMessagesController().reloadMentionsCountForChannels(arrayList4);
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    private static boolean isEmpty(SparseArray<?> sparseArray) {
        return sparseArray == null || sparseArray.size() == 0;
    }

    private static boolean isEmpty(SparseLongArray sparseLongArray) {
        return sparseLongArray == null || sparseLongArray.size() == 0;
    }

    private static boolean isEmpty(List<?> list) {
        return list == null || list.isEmpty();
    }

    private static boolean isEmpty(SparseIntArray sparseIntArray) {
        return sparseIntArray == null || sparseIntArray.size() == 0;
    }

    private static boolean isEmpty(LongSparseArray<?> longSparseArray) {
        return longSparseArray == null || longSparseArray.size() == 0;
    }

    public void updateDialogsWithReadMessages(SparseLongArray sparseLongArray, SparseLongArray sparseLongArray2, ArrayList<Long> arrayList, boolean z) {
        if (isEmpty(sparseLongArray) && isEmpty((List<?>) arrayList)) {
            return;
        }
        if (z) {
            this.storageQueue.postRunnable(new Runnable(sparseLongArray, sparseLongArray2, arrayList) {
                private final /* synthetic */ SparseLongArray f$1;
                private final /* synthetic */ SparseLongArray f$2;
                private final /* synthetic */ ArrayList f$3;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                }

                public final void run() {
                    MessagesStorage.this.lambda$updateDialogsWithReadMessages$60$MessagesStorage(this.f$1, this.f$2, this.f$3);
                }
            });
        } else {
            updateDialogsWithReadMessagesInternal((ArrayList<Integer>) null, sparseLongArray, sparseLongArray2, arrayList);
        }
    }

    public /* synthetic */ void lambda$updateDialogsWithReadMessages$60$MessagesStorage(SparseLongArray sparseLongArray, SparseLongArray sparseLongArray2, ArrayList arrayList) {
        updateDialogsWithReadMessagesInternal((ArrayList<Integer>) null, sparseLongArray, sparseLongArray2, arrayList);
    }

    public void updateChatParticipants(TLRPC.ChatParticipants chatParticipants) {
        if (chatParticipants != null) {
            this.storageQueue.postRunnable(new Runnable(chatParticipants) {
                private final /* synthetic */ TLRPC.ChatParticipants f$1;

                {
                    this.f$1 = r2;
                }

                public final void run() {
                    MessagesStorage.this.lambda$updateChatParticipants$62$MessagesStorage(this.f$1);
                }
            });
        }
    }

    public /* synthetic */ void lambda$updateChatParticipants$62$MessagesStorage(TLRPC.ChatParticipants chatParticipants) {
        NativeByteBuffer byteBufferValue;
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            SQLiteCursor queryFinalized = sQLiteDatabase.queryFinalized("SELECT info, pinned, online FROM chat_settings_v2 WHERE uid = " + chatParticipants.chat_id, new Object[0]);
            TLRPC.ChatFull chatFull = null;
            new ArrayList();
            if (queryFinalized.next() && (byteBufferValue = queryFinalized.byteBufferValue(0)) != null) {
                chatFull = TLRPC.ChatFull.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                byteBufferValue.reuse();
                chatFull.pinned_msg_id = queryFinalized.intValue(1);
                chatFull.online_count = queryFinalized.intValue(2);
            }
            queryFinalized.dispose();
            if (chatFull instanceof TLRPC.TL_chatFull) {
                chatFull.participants = chatParticipants;
                AndroidUtilities.runOnUIThread(new Runnable(chatFull) {
                    private final /* synthetic */ TLRPC.ChatFull f$1;

                    {
                        this.f$1 = r2;
                    }

                    public final void run() {
                        MessagesStorage.this.lambda$null$61$MessagesStorage(this.f$1);
                    }
                });
                SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO chat_settings_v2 VALUES(?, ?, ?, ?)");
                NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(chatFull.getObjectSize());
                chatFull.serializeToStream(nativeByteBuffer);
                executeFast.bindInteger(1, chatFull.id);
                executeFast.bindByteBuffer(2, nativeByteBuffer);
                executeFast.bindInteger(3, chatFull.pinned_msg_id);
                executeFast.bindInteger(4, chatFull.online_count);
                executeFast.step();
                executeFast.dispose();
                nativeByteBuffer.reuse();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public /* synthetic */ void lambda$null$61$MessagesStorage(TLRPC.ChatFull chatFull) {
        getNotificationCenter().postNotificationName(NotificationCenter.chatInfoDidLoad, chatFull, 0, false, null);
    }

    public void loadChannelAdmins(int i) {
        this.storageQueue.postRunnable(new Runnable(i) {
            private final /* synthetic */ int f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$loadChannelAdmins$63$MessagesStorage(this.f$1);
            }
        });
    }

    public /* synthetic */ void lambda$loadChannelAdmins$63$MessagesStorage(int i) {
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            SQLiteCursor queryFinalized = sQLiteDatabase.queryFinalized("SELECT uid, rank FROM channel_admins_v2 WHERE did = " + i, new Object[0]);
            SparseArray sparseArray = new SparseArray();
            while (queryFinalized.next()) {
                sparseArray.put(queryFinalized.intValue(0), queryFinalized.stringValue(1));
            }
            queryFinalized.dispose();
            getMessagesController().processLoadedChannelAdmins(sparseArray, i, true);
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void putChannelAdmins(int i, SparseArray<String> sparseArray) {
        this.storageQueue.postRunnable(new Runnable(i, sparseArray) {
            private final /* synthetic */ int f$1;
            private final /* synthetic */ SparseArray f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                MessagesStorage.this.lambda$putChannelAdmins$64$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    public /* synthetic */ void lambda$putChannelAdmins$64$MessagesStorage(int i, SparseArray sparseArray) {
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM channel_admins_v2 WHERE did = " + i).stepThis().dispose();
            this.database.beginTransaction();
            SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO channel_admins_v2 VALUES(?, ?, ?)");
            long currentTimeMillis = System.currentTimeMillis() / 1000;
            for (int i2 = 0; i2 < sparseArray.size(); i2++) {
                executeFast.requery();
                executeFast.bindInteger(1, i);
                executeFast.bindInteger(2, sparseArray.keyAt(i2));
                executeFast.bindString(3, (String) sparseArray.valueAt(i2));
                executeFast.step();
            }
            executeFast.dispose();
            this.database.commitTransaction();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void updateChannelUsers(int i, ArrayList<TLRPC.ChannelParticipant> arrayList) {
        this.storageQueue.postRunnable(new Runnable(i, arrayList) {
            private final /* synthetic */ int f$1;
            private final /* synthetic */ ArrayList f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                MessagesStorage.this.lambda$updateChannelUsers$65$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    public /* synthetic */ void lambda$updateChannelUsers$65$MessagesStorage(int i, ArrayList arrayList) {
        long j = (long) (-i);
        try {
            this.database.executeFast("DELETE FROM channel_users_v2 WHERE did = " + j).stepThis().dispose();
            this.database.beginTransaction();
            SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO channel_users_v2 VALUES(?, ?, ?, ?)");
            int currentTimeMillis = (int) (System.currentTimeMillis() / 1000);
            for (int i2 = 0; i2 < arrayList.size(); i2++) {
                TLRPC.ChannelParticipant channelParticipant = (TLRPC.ChannelParticipant) arrayList.get(i2);
                executeFast.requery();
                executeFast.bindLong(1, j);
                executeFast.bindInteger(2, channelParticipant.user_id);
                executeFast.bindInteger(3, currentTimeMillis);
                NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(channelParticipant.getObjectSize());
                channelParticipant.serializeToStream(nativeByteBuffer);
                executeFast.bindByteBuffer(4, nativeByteBuffer);
                nativeByteBuffer.reuse();
                executeFast.step();
                currentTimeMillis--;
            }
            executeFast.dispose();
            this.database.commitTransaction();
            loadChatInfo(i, (CountDownLatch) null, false, true);
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void saveBotCache(String str, TLObject tLObject) {
        if (tLObject != null && !TextUtils.isEmpty(str)) {
            this.storageQueue.postRunnable(new Runnable(tLObject, str) {
                private final /* synthetic */ TLObject f$1;
                private final /* synthetic */ String f$2;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                }

                public final void run() {
                    MessagesStorage.this.lambda$saveBotCache$66$MessagesStorage(this.f$1, this.f$2);
                }
            });
        }
    }

    public /* synthetic */ void lambda$saveBotCache$66$MessagesStorage(TLObject tLObject, String str) {
        int i;
        try {
            int currentTime = getConnectionsManager().getCurrentTime();
            if (tLObject instanceof TLRPC.TL_messages_botCallbackAnswer) {
                i = ((TLRPC.TL_messages_botCallbackAnswer) tLObject).cache_time;
            } else {
                if (tLObject instanceof TLRPC.TL_messages_botResults) {
                    i = ((TLRPC.TL_messages_botResults) tLObject).cache_time;
                }
                SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO botcache VALUES(?, ?, ?)");
                NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(tLObject.getObjectSize());
                tLObject.serializeToStream(nativeByteBuffer);
                executeFast.bindString(1, str);
                executeFast.bindInteger(2, currentTime);
                executeFast.bindByteBuffer(3, nativeByteBuffer);
                executeFast.step();
                executeFast.dispose();
                nativeByteBuffer.reuse();
            }
            currentTime += i;
            SQLitePreparedStatement executeFast2 = this.database.executeFast("REPLACE INTO botcache VALUES(?, ?, ?)");
            NativeByteBuffer nativeByteBuffer2 = new NativeByteBuffer(tLObject.getObjectSize());
            tLObject.serializeToStream(nativeByteBuffer2);
            executeFast2.bindString(1, str);
            executeFast2.bindInteger(2, currentTime);
            executeFast2.bindByteBuffer(3, nativeByteBuffer2);
            executeFast2.step();
            executeFast2.dispose();
            nativeByteBuffer2.reuse();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void getBotCache(String str, RequestDelegate requestDelegate) {
        if (str != null && requestDelegate != null) {
            this.storageQueue.postRunnable(new Runnable(getConnectionsManager().getCurrentTime(), str, requestDelegate) {
                private final /* synthetic */ int f$1;
                private final /* synthetic */ String f$2;
                private final /* synthetic */ RequestDelegate f$3;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                }

                public final void run() {
                    MessagesStorage.this.lambda$getBotCache$67$MessagesStorage(this.f$1, this.f$2, this.f$3);
                }
            });
        }
    }

    /* JADX WARNING: Code restructure failed: missing block: B:21:0x005d, code lost:
        r5 = th;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:22:0x005e, code lost:
        r1 = null;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:23:0x0060, code lost:
        r5 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:24:0x0061, code lost:
        r1 = null;
     */
    /* JADX WARNING: Failed to process nested try/catch */
    /* JADX WARNING: Removed duplicated region for block: B:21:0x005d A[ExcHandler: all (th java.lang.Throwable), Splitter:B:1:0x0001] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$getBotCache$67$MessagesStorage(int r5, java.lang.String r6, org.telegram.tgnet.RequestDelegate r7) {
        /*
            r4 = this;
            r0 = 0
            org.telegram.SQLite.SQLiteDatabase r1 = r4.database     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            r2.<init>()     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            java.lang.String r3 = "DELETE FROM botcache WHERE date < "
            r2.append(r3)     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            r2.append(r5)     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            java.lang.String r5 = r2.toString()     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            org.telegram.SQLite.SQLitePreparedStatement r5 = r1.executeFast(r5)     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            org.telegram.SQLite.SQLitePreparedStatement r5 = r5.stepThis()     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            r5.dispose()     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            org.telegram.SQLite.SQLiteDatabase r5 = r4.database     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            java.lang.String r1 = "SELECT data FROM botcache WHERE id = ?"
            r2 = 1
            java.lang.Object[] r2 = new java.lang.Object[r2]     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            r3 = 0
            r2[r3] = r6     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r1, r2)     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            boolean r6 = r5.next()     // Catch:{ Exception -> 0x0060, all -> 0x005d }
            if (r6 == 0) goto L_0x0056
            org.telegram.tgnet.NativeByteBuffer r6 = r5.byteBufferValue(r3)     // Catch:{ Exception -> 0x0050, all -> 0x005d }
            if (r6 == 0) goto L_0x0056
            int r1 = r6.readInt32(r3)     // Catch:{ Exception -> 0x0050, all -> 0x005d }
            int r2 = org.telegram.tgnet.TLRPC.TL_messages_botCallbackAnswer.constructor     // Catch:{ Exception -> 0x0050, all -> 0x005d }
            if (r1 != r2) goto L_0x0046
            org.telegram.tgnet.TLRPC$TL_messages_botCallbackAnswer r1 = org.telegram.tgnet.TLRPC.TL_messages_botCallbackAnswer.TLdeserialize(r6, r1, r3)     // Catch:{ Exception -> 0x0050, all -> 0x005d }
            goto L_0x004a
        L_0x0046:
            org.telegram.tgnet.TLRPC$messages_BotResults r1 = org.telegram.tgnet.TLRPC.messages_BotResults.TLdeserialize(r6, r1, r3)     // Catch:{ Exception -> 0x0050, all -> 0x005d }
        L_0x004a:
            r6.reuse()     // Catch:{ Exception -> 0x004e }
            goto L_0x0057
        L_0x004e:
            r6 = move-exception
            goto L_0x0052
        L_0x0050:
            r6 = move-exception
            r1 = r0
        L_0x0052:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r6)     // Catch:{ Exception -> 0x005b }
            goto L_0x0057
        L_0x0056:
            r1 = r0
        L_0x0057:
            r5.dispose()     // Catch:{ Exception -> 0x005b }
            goto L_0x0065
        L_0x005b:
            r5 = move-exception
            goto L_0x0062
        L_0x005d:
            r5 = move-exception
            r1 = r0
            goto L_0x006a
        L_0x0060:
            r5 = move-exception
            r1 = r0
        L_0x0062:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r5)     // Catch:{ all -> 0x0069 }
        L_0x0065:
            r7.run(r1, r0)
            return
        L_0x0069:
            r5 = move-exception
        L_0x006a:
            r7.run(r1, r0)
            throw r5
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$getBotCache$67$MessagesStorage(int, java.lang.String, org.telegram.tgnet.RequestDelegate):void");
    }

    public void loadUserInfo(TLRPC.User user, boolean z, int i) {
        if (user != null) {
            this.storageQueue.postRunnable(new Runnable(user, z, i) {
                private final /* synthetic */ TLRPC.User f$1;
                private final /* synthetic */ boolean f$2;
                private final /* synthetic */ int f$3;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                }

                public final void run() {
                    MessagesStorage.this.lambda$loadUserInfo$68$MessagesStorage(this.f$1, this.f$2, this.f$3);
                }
            });
        }
    }

    public /* synthetic */ void lambda$loadUserInfo$68$MessagesStorage(TLRPC.User user, boolean z, int i) {
        TLRPC.UserFull userFull;
        NativeByteBuffer byteBufferValue;
        TLRPC.User user2 = user;
        MessageObject messageObject = null;
        TLRPC.UserFull userFull2 = null;
        try {
            SQLiteCursor queryFinalized = this.database.queryFinalized("SELECT info, pinned FROM user_settings WHERE uid = " + user2.id, new Object[0]);
            if (queryFinalized.next() && (byteBufferValue = queryFinalized.byteBufferValue(0)) != null) {
                userFull2 = TLRPC.UserFull.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                byteBufferValue.reuse();
                userFull2.pinned_msg_id = queryFinalized.intValue(1);
            }
            userFull = userFull2;
            try {
                queryFinalized.dispose();
                if (!(userFull == null || userFull.pinned_msg_id == 0)) {
                    messageObject = getMediaDataController().loadPinnedMessage((long) user2.id, 0, userFull.pinned_msg_id, false);
                }
            } catch (Exception e) {
                e = e;
                try {
                    FileLog.e((Throwable) e);
                    getMessagesController().processUserInfo(user, userFull, true, z, messageObject, i);
                } catch (Throwable th) {
                    th = th;
                    getMessagesController().processUserInfo(user, userFull, true, z, (MessageObject) null, i);
                    throw th;
                }
            }
        } catch (Exception e2) {
            e = e2;
            userFull = null;
            FileLog.e((Throwable) e);
            getMessagesController().processUserInfo(user, userFull, true, z, messageObject, i);
        } catch (Throwable th2) {
            th = th2;
            userFull = null;
            getMessagesController().processUserInfo(user, userFull, true, z, (MessageObject) null, i);
            throw th;
        }
        getMessagesController().processUserInfo(user, userFull, true, z, messageObject, i);
    }

    public void updateUserInfo(TLRPC.UserFull userFull, boolean z) {
        this.storageQueue.postRunnable(new Runnable(z, userFull) {
            private final /* synthetic */ boolean f$1;
            private final /* synthetic */ TLRPC.UserFull f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                MessagesStorage.this.lambda$updateUserInfo$69$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    public /* synthetic */ void lambda$updateUserInfo$69$MessagesStorage(boolean z, TLRPC.UserFull userFull) {
        if (z) {
            try {
                SQLiteDatabase sQLiteDatabase = this.database;
                SQLiteCursor queryFinalized = sQLiteDatabase.queryFinalized("SELECT uid FROM user_settings WHERE uid = " + userFull.user.id, new Object[0]);
                boolean next = queryFinalized.next();
                queryFinalized.dispose();
                if (!next) {
                    return;
                }
            } catch (Exception e) {
                FileLog.e((Throwable) e);
                return;
            }
        }
        SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO user_settings VALUES(?, ?, ?)");
        NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(userFull.getObjectSize());
        userFull.serializeToStream(nativeByteBuffer);
        executeFast.bindInteger(1, userFull.user.id);
        executeFast.bindByteBuffer(2, nativeByteBuffer);
        executeFast.bindInteger(3, userFull.pinned_msg_id);
        executeFast.step();
        executeFast.dispose();
        nativeByteBuffer.reuse();
    }

    public void updateChatInfo(TLRPC.ChatFull chatFull, boolean z) {
        this.storageQueue.postRunnable(new Runnable(chatFull, z) {
            private final /* synthetic */ TLRPC.ChatFull f$1;
            private final /* synthetic */ boolean f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                MessagesStorage.this.lambda$updateChatInfo$70$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    public /* synthetic */ void lambda$updateChatInfo$70$MessagesStorage(TLRPC.ChatFull chatFull, boolean z) {
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            SQLiteCursor queryFinalized = sQLiteDatabase.queryFinalized("SELECT online FROM chat_settings_v2 WHERE uid = " + chatFull.id, new Object[0]);
            int intValue = queryFinalized.next() ? queryFinalized.intValue(0) : -1;
            queryFinalized.dispose();
            if (!z || intValue != -1) {
                if (intValue >= 0 && (chatFull.flags & 8192) == 0) {
                    chatFull.online_count = intValue;
                }
                SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO chat_settings_v2 VALUES(?, ?, ?, ?)");
                NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(chatFull.getObjectSize());
                chatFull.serializeToStream(nativeByteBuffer);
                executeFast.bindInteger(1, chatFull.id);
                executeFast.bindByteBuffer(2, nativeByteBuffer);
                executeFast.bindInteger(3, chatFull.pinned_msg_id);
                executeFast.bindInteger(4, chatFull.online_count);
                executeFast.step();
                executeFast.dispose();
                nativeByteBuffer.reuse();
                if (chatFull instanceof TLRPC.TL_channelFull) {
                    SQLiteDatabase sQLiteDatabase2 = this.database;
                    SQLiteCursor queryFinalized2 = sQLiteDatabase2.queryFinalized("SELECT inbox_max, outbox_max FROM dialogs WHERE did = " + (-chatFull.id), new Object[0]);
                    if (queryFinalized2.next() && queryFinalized2.intValue(0) < chatFull.read_inbox_max_id) {
                        int intValue2 = queryFinalized2.intValue(1);
                        SQLitePreparedStatement executeFast2 = this.database.executeFast("UPDATE dialogs SET unread_count = ?, inbox_max = ?, outbox_max = ? WHERE did = ?");
                        executeFast2.bindInteger(1, chatFull.unread_count);
                        executeFast2.bindInteger(2, chatFull.read_inbox_max_id);
                        executeFast2.bindInteger(3, Math.max(intValue2, chatFull.read_outbox_max_id));
                        executeFast2.bindLong(4, (long) (-chatFull.id));
                        executeFast2.step();
                        executeFast2.dispose();
                    }
                    queryFinalized2.dispose();
                }
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void updateUserPinnedMessage(int i, int i2) {
        this.storageQueue.postRunnable(new Runnable(i, i2) {
            private final /* synthetic */ int f$1;
            private final /* synthetic */ int f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                MessagesStorage.this.lambda$updateUserPinnedMessage$72$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    public /* synthetic */ void lambda$updateUserPinnedMessage$72$MessagesStorage(int i, int i2) {
        NativeByteBuffer byteBufferValue;
        try {
            SQLiteCursor queryFinalized = this.database.queryFinalized("SELECT info, pinned FROM user_settings WHERE uid = " + i, new Object[0]);
            TLRPC.UserFull userFull = null;
            if (queryFinalized.next() && (byteBufferValue = queryFinalized.byteBufferValue(0)) != null) {
                userFull = TLRPC.UserFull.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                byteBufferValue.reuse();
                userFull.pinned_msg_id = queryFinalized.intValue(1);
            }
            queryFinalized.dispose();
            if (userFull instanceof TLRPC.UserFull) {
                userFull.pinned_msg_id = i2;
                userFull.flags |= 64;
                AndroidUtilities.runOnUIThread(new Runnable(i, userFull) {
                    private final /* synthetic */ int f$1;
                    private final /* synthetic */ TLRPC.UserFull f$2;

                    {
                        this.f$1 = r2;
                        this.f$2 = r3;
                    }

                    public final void run() {
                        MessagesStorage.this.lambda$null$71$MessagesStorage(this.f$1, this.f$2);
                    }
                });
                SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO user_settings VALUES(?, ?, ?)");
                NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(userFull.getObjectSize());
                userFull.serializeToStream(nativeByteBuffer);
                executeFast.bindInteger(1, i);
                executeFast.bindByteBuffer(2, nativeByteBuffer);
                executeFast.bindInteger(3, userFull.pinned_msg_id);
                executeFast.step();
                executeFast.dispose();
                nativeByteBuffer.reuse();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public /* synthetic */ void lambda$null$71$MessagesStorage(int i, TLRPC.UserFull userFull) {
        getNotificationCenter().postNotificationName(NotificationCenter.userInfoDidLoad, Integer.valueOf(i), userFull, null);
    }

    public void updateChatOnlineCount(int i, int i2) {
        this.storageQueue.postRunnable(new Runnable(i2, i) {
            private final /* synthetic */ int f$1;
            private final /* synthetic */ int f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                MessagesStorage.this.lambda$updateChatOnlineCount$73$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    public /* synthetic */ void lambda$updateChatOnlineCount$73$MessagesStorage(int i, int i2) {
        try {
            SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE chat_settings_v2 SET online = ? WHERE uid = ?");
            executeFast.requery();
            executeFast.bindInteger(1, i);
            executeFast.bindInteger(2, i2);
            executeFast.step();
            executeFast.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void updateChatPinnedMessage(int i, int i2) {
        this.storageQueue.postRunnable(new Runnable(i, i2) {
            private final /* synthetic */ int f$1;
            private final /* synthetic */ int f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                MessagesStorage.this.lambda$updateChatPinnedMessage$75$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    public /* synthetic */ void lambda$updateChatPinnedMessage$75$MessagesStorage(int i, int i2) {
        NativeByteBuffer byteBufferValue;
        try {
            SQLiteCursor queryFinalized = this.database.queryFinalized("SELECT info, pinned, online FROM chat_settings_v2 WHERE uid = " + i, new Object[0]);
            TLRPC.ChatFull chatFull = null;
            if (queryFinalized.next() && (byteBufferValue = queryFinalized.byteBufferValue(0)) != null) {
                chatFull = TLRPC.ChatFull.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                byteBufferValue.reuse();
                chatFull.pinned_msg_id = queryFinalized.intValue(1);
                chatFull.online_count = queryFinalized.intValue(2);
            }
            queryFinalized.dispose();
            if (chatFull != null) {
                if (chatFull instanceof TLRPC.TL_channelFull) {
                    chatFull.pinned_msg_id = i2;
                    chatFull.flags |= 32;
                } else if (chatFull instanceof TLRPC.TL_chatFull) {
                    chatFull.pinned_msg_id = i2;
                    chatFull.flags |= 64;
                }
                AndroidUtilities.runOnUIThread(new Runnable(chatFull) {
                    private final /* synthetic */ TLRPC.ChatFull f$1;

                    {
                        this.f$1 = r2;
                    }

                    public final void run() {
                        MessagesStorage.this.lambda$null$74$MessagesStorage(this.f$1);
                    }
                });
                SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO chat_settings_v2 VALUES(?, ?, ?, ?)");
                NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(chatFull.getObjectSize());
                chatFull.serializeToStream(nativeByteBuffer);
                executeFast.bindInteger(1, i);
                executeFast.bindByteBuffer(2, nativeByteBuffer);
                executeFast.bindInteger(3, chatFull.pinned_msg_id);
                executeFast.bindInteger(4, chatFull.online_count);
                executeFast.step();
                executeFast.dispose();
                nativeByteBuffer.reuse();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public /* synthetic */ void lambda$null$74$MessagesStorage(TLRPC.ChatFull chatFull) {
        getNotificationCenter().postNotificationName(NotificationCenter.chatInfoDidLoad, chatFull, 0, false, null);
    }

    public void updateChatInfo(int i, int i2, int i3, int i4, int i5) {
        this.storageQueue.postRunnable(new Runnable(i, i3, i2, i4, i5) {
            private final /* synthetic */ int f$1;
            private final /* synthetic */ int f$2;
            private final /* synthetic */ int f$3;
            private final /* synthetic */ int f$4;
            private final /* synthetic */ int f$5;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
                this.f$4 = r5;
                this.f$5 = r6;
            }

            public final void run() {
                MessagesStorage.this.lambda$updateChatInfo$77$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5);
            }
        });
    }

    public /* synthetic */ void lambda$updateChatInfo$77$MessagesStorage(int i, int i2, int i3, int i4, int i5) {
        TLRPC.ChatParticipant chatParticipant;
        NativeByteBuffer byteBufferValue;
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            int i6 = 0;
            SQLiteCursor queryFinalized = sQLiteDatabase.queryFinalized("SELECT info, pinned, online FROM chat_settings_v2 WHERE uid = " + i, new Object[0]);
            TLRPC.ChatFull chatFull = null;
            new ArrayList();
            if (queryFinalized.next() && (byteBufferValue = queryFinalized.byteBufferValue(0)) != null) {
                chatFull = TLRPC.ChatFull.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                byteBufferValue.reuse();
                chatFull.pinned_msg_id = queryFinalized.intValue(1);
                chatFull.online_count = queryFinalized.intValue(2);
            }
            queryFinalized.dispose();
            if (chatFull instanceof TLRPC.TL_chatFull) {
                if (i2 == 1) {
                    while (true) {
                        if (i6 >= chatFull.participants.participants.size()) {
                            break;
                        } else if (chatFull.participants.participants.get(i6).user_id == i3) {
                            chatFull.participants.participants.remove(i6);
                            break;
                        } else {
                            i6++;
                        }
                    }
                } else if (i2 == 0) {
                    Iterator<TLRPC.ChatParticipant> it = chatFull.participants.participants.iterator();
                    while (it.hasNext()) {
                        if (it.next().user_id == i3) {
                            return;
                        }
                    }
                    TLRPC.TL_chatParticipant tL_chatParticipant = new TLRPC.TL_chatParticipant();
                    tL_chatParticipant.user_id = i3;
                    tL_chatParticipant.inviter_id = i4;
                    tL_chatParticipant.date = getConnectionsManager().getCurrentTime();
                    chatFull.participants.participants.add(tL_chatParticipant);
                } else if (i2 == 2) {
                    while (true) {
                        if (i6 >= chatFull.participants.participants.size()) {
                            break;
                        }
                        TLRPC.ChatParticipant chatParticipant2 = chatFull.participants.participants.get(i6);
                        if (chatParticipant2.user_id == i3) {
                            if (i4 == 1) {
                                chatParticipant = new TLRPC.TL_chatParticipantAdmin();
                                chatParticipant.user_id = chatParticipant2.user_id;
                                chatParticipant.date = chatParticipant2.date;
                                chatParticipant.inviter_id = chatParticipant2.inviter_id;
                            } else {
                                chatParticipant = new TLRPC.TL_chatParticipant();
                                chatParticipant.user_id = chatParticipant2.user_id;
                                chatParticipant.date = chatParticipant2.date;
                                chatParticipant.inviter_id = chatParticipant2.inviter_id;
                            }
                            chatFull.participants.participants.set(i6, chatParticipant);
                        } else {
                            i6++;
                        }
                    }
                }
                chatFull.participants.version = i5;
                AndroidUtilities.runOnUIThread(new Runnable(chatFull) {
                    private final /* synthetic */ TLRPC.ChatFull f$1;

                    {
                        this.f$1 = r2;
                    }

                    public final void run() {
                        MessagesStorage.this.lambda$null$76$MessagesStorage(this.f$1);
                    }
                });
                SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO chat_settings_v2 VALUES(?, ?, ?, ?)");
                NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(chatFull.getObjectSize());
                chatFull.serializeToStream(nativeByteBuffer);
                executeFast.bindInteger(1, i);
                executeFast.bindByteBuffer(2, nativeByteBuffer);
                executeFast.bindInteger(3, chatFull.pinned_msg_id);
                executeFast.bindInteger(4, chatFull.online_count);
                executeFast.step();
                executeFast.dispose();
                nativeByteBuffer.reuse();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public /* synthetic */ void lambda$null$76$MessagesStorage(TLRPC.ChatFull chatFull) {
        getNotificationCenter().postNotificationName(NotificationCenter.chatInfoDidLoad, chatFull, 0, false, null);
    }

    public boolean isMigratedChat(int i) {
        CountDownLatch countDownLatch = new CountDownLatch(1);
        boolean[] zArr = new boolean[1];
        this.storageQueue.postRunnable(new Runnable(i, zArr, countDownLatch) {
            private final /* synthetic */ int f$1;
            private final /* synthetic */ boolean[] f$2;
            private final /* synthetic */ CountDownLatch f$3;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$isMigratedChat$78$MessagesStorage(this.f$1, this.f$2, this.f$3);
            }
        });
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return zArr[0];
    }

    public /* synthetic */ void lambda$isMigratedChat$78$MessagesStorage(int i, boolean[] zArr, CountDownLatch countDownLatch) {
        NativeByteBuffer byteBufferValue;
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            SQLiteCursor queryFinalized = sQLiteDatabase.queryFinalized("SELECT info FROM chat_settings_v2 WHERE uid = " + i, new Object[0]);
            TLRPC.ChatFull chatFull = null;
            new ArrayList();
            if (queryFinalized.next() && (byteBufferValue = queryFinalized.byteBufferValue(0)) != null) {
                chatFull = TLRPC.ChatFull.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                byteBufferValue.reuse();
            }
            queryFinalized.dispose();
            zArr[0] = (chatFull instanceof TLRPC.TL_channelFull) && chatFull.migrated_from_chat_id != 0;
            if (countDownLatch != null) {
                countDownLatch.countDown();
            }
            if (countDownLatch == null) {
                return;
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (countDownLatch == null) {
                return;
            }
        } catch (Throwable th) {
            if (countDownLatch != null) {
                countDownLatch.countDown();
            }
            throw th;
        }
        countDownLatch.countDown();
    }

    public TLRPC.ChatFull loadChatInfo(int i, CountDownLatch countDownLatch, boolean z, boolean z2) {
        TLRPC.ChatFull[] chatFullArr = new TLRPC.ChatFull[1];
        this.storageQueue.postRunnable(new Runnable(i, chatFullArr, z, z2, countDownLatch) {
            private final /* synthetic */ int f$1;
            private final /* synthetic */ TLRPC.ChatFull[] f$2;
            private final /* synthetic */ boolean f$3;
            private final /* synthetic */ boolean f$4;
            private final /* synthetic */ CountDownLatch f$5;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
                this.f$4 = r5;
                this.f$5 = r6;
            }

            public final void run() {
                MessagesStorage.this.lambda$loadChatInfo$79$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5);
            }
        });
        if (countDownLatch != null) {
            try {
                countDownLatch.await();
            } catch (Throwable unused) {
            }
        }
        return chatFullArr[0];
    }

    /* JADX WARNING: Removed duplicated region for block: B:81:0x01bc  */
    /* JADX WARNING: Removed duplicated region for block: B:97:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$loadChatInfo$79$MessagesStorage(int r18, org.telegram.tgnet.TLRPC.ChatFull[] r19, boolean r20, boolean r21, java.util.concurrent.CountDownLatch r22) {
        /*
            r17 = this;
            r1 = r17
            r3 = r18
            java.util.ArrayList r5 = new java.util.ArrayList
            r5.<init>()
            r2 = 0
            r4 = 0
            r9 = 0
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x018b, all -> 0x0188 }
            java.lang.StringBuilder r6 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x018b, all -> 0x0188 }
            r6.<init>()     // Catch:{ Exception -> 0x018b, all -> 0x0188 }
            java.lang.String r7 = "SELECT info, pinned, online FROM chat_settings_v2 WHERE uid = "
            r6.append(r7)     // Catch:{ Exception -> 0x018b, all -> 0x0188 }
            r6.append(r3)     // Catch:{ Exception -> 0x018b, all -> 0x0188 }
            java.lang.String r6 = r6.toString()     // Catch:{ Exception -> 0x018b, all -> 0x0188 }
            java.lang.Object[] r7 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x018b, all -> 0x0188 }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r6, r7)     // Catch:{ Exception -> 0x018b, all -> 0x0188 }
            boolean r6 = r0.next()     // Catch:{ Exception -> 0x018b, all -> 0x0188 }
            r7 = 2
            r8 = 1
            if (r6 == 0) goto L_0x004b
            org.telegram.tgnet.NativeByteBuffer r6 = r0.byteBufferValue(r4)     // Catch:{ Exception -> 0x018b, all -> 0x0188 }
            if (r6 == 0) goto L_0x004b
            int r10 = r6.readInt32(r4)     // Catch:{ Exception -> 0x018b, all -> 0x0188 }
            org.telegram.tgnet.TLRPC$ChatFull r10 = org.telegram.tgnet.TLRPC.ChatFull.TLdeserialize(r6, r10, r4)     // Catch:{ Exception -> 0x018b, all -> 0x0188 }
            r6.reuse()     // Catch:{ Exception -> 0x0186 }
            int r6 = r0.intValue(r8)     // Catch:{ Exception -> 0x0186 }
            r10.pinned_msg_id = r6     // Catch:{ Exception -> 0x0186 }
            int r6 = r0.intValue(r7)     // Catch:{ Exception -> 0x0186 }
            r10.online_count = r6     // Catch:{ Exception -> 0x0186 }
            goto L_0x004c
        L_0x004b:
            r10 = r2
        L_0x004c:
            r0.dispose()     // Catch:{ Exception -> 0x0186 }
            boolean r0 = r10 instanceof org.telegram.tgnet.TLRPC.TL_chatFull     // Catch:{ Exception -> 0x0186 }
            java.lang.String r6 = ","
            if (r0 == 0) goto L_0x008f
            java.lang.StringBuilder r0 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0186 }
            r0.<init>()     // Catch:{ Exception -> 0x0186 }
            r2 = 0
        L_0x005b:
            org.telegram.tgnet.TLRPC$ChatParticipants r7 = r10.participants     // Catch:{ Exception -> 0x0186 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$ChatParticipant> r7 = r7.participants     // Catch:{ Exception -> 0x0186 }
            int r7 = r7.size()     // Catch:{ Exception -> 0x0186 }
            if (r2 >= r7) goto L_0x0080
            org.telegram.tgnet.TLRPC$ChatParticipants r7 = r10.participants     // Catch:{ Exception -> 0x0186 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$ChatParticipant> r7 = r7.participants     // Catch:{ Exception -> 0x0186 }
            java.lang.Object r7 = r7.get(r2)     // Catch:{ Exception -> 0x0186 }
            org.telegram.tgnet.TLRPC$ChatParticipant r7 = (org.telegram.tgnet.TLRPC.ChatParticipant) r7     // Catch:{ Exception -> 0x0186 }
            int r8 = r0.length()     // Catch:{ Exception -> 0x0186 }
            if (r8 == 0) goto L_0x0078
            r0.append(r6)     // Catch:{ Exception -> 0x0186 }
        L_0x0078:
            int r7 = r7.user_id     // Catch:{ Exception -> 0x0186 }
            r0.append(r7)     // Catch:{ Exception -> 0x0186 }
            int r2 = r2 + 1
            goto L_0x005b
        L_0x0080:
            int r2 = r0.length()     // Catch:{ Exception -> 0x0186 }
            if (r2 == 0) goto L_0x0156
            java.lang.String r0 = r0.toString()     // Catch:{ Exception -> 0x0186 }
            r1.getUsersInternal(r0, r5)     // Catch:{ Exception -> 0x0186 }
            goto L_0x0156
        L_0x008f:
            boolean r0 = r10 instanceof org.telegram.tgnet.TLRPC.TL_channelFull     // Catch:{ Exception -> 0x0186 }
            if (r0 == 0) goto L_0x0156
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0186 }
            java.lang.StringBuilder r11 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0186 }
            r11.<init>()     // Catch:{ Exception -> 0x0186 }
            java.lang.String r12 = "SELECT us.data, us.status, cu.data, cu.date FROM channel_users_v2 as cu LEFT JOIN users as us ON us.uid = cu.uid WHERE cu.did = "
            r11.append(r12)     // Catch:{ Exception -> 0x0186 }
            int r12 = -r3
            r11.append(r12)     // Catch:{ Exception -> 0x0186 }
            java.lang.String r12 = " ORDER BY cu.date DESC"
            r11.append(r12)     // Catch:{ Exception -> 0x0186 }
            java.lang.String r11 = r11.toString()     // Catch:{ Exception -> 0x0186 }
            java.lang.Object[] r12 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0186 }
            org.telegram.SQLite.SQLiteCursor r11 = r0.queryFinalized(r11, r12)     // Catch:{ Exception -> 0x0186 }
            org.telegram.tgnet.TLRPC$TL_chatParticipants r0 = new org.telegram.tgnet.TLRPC$TL_chatParticipants     // Catch:{ Exception -> 0x0186 }
            r0.<init>()     // Catch:{ Exception -> 0x0186 }
            r10.participants = r0     // Catch:{ Exception -> 0x0186 }
        L_0x00b9:
            boolean r0 = r11.next()     // Catch:{ Exception -> 0x0186 }
            if (r0 == 0) goto L_0x011f
            org.telegram.tgnet.NativeByteBuffer r0 = r11.byteBufferValue(r4)     // Catch:{ Exception -> 0x011a }
            if (r0 == 0) goto L_0x00d1
            int r12 = r0.readInt32(r4)     // Catch:{ Exception -> 0x011a }
            org.telegram.tgnet.TLRPC$User r12 = org.telegram.tgnet.TLRPC.User.TLdeserialize(r0, r12, r4)     // Catch:{ Exception -> 0x011a }
            r0.reuse()     // Catch:{ Exception -> 0x011a }
            goto L_0x00d2
        L_0x00d1:
            r12 = r2
        L_0x00d2:
            org.telegram.tgnet.NativeByteBuffer r0 = r11.byteBufferValue(r7)     // Catch:{ Exception -> 0x011a }
            if (r0 == 0) goto L_0x00e4
            int r13 = r0.readInt32(r4)     // Catch:{ Exception -> 0x011a }
            org.telegram.tgnet.TLRPC$ChannelParticipant r13 = org.telegram.tgnet.TLRPC.ChannelParticipant.TLdeserialize(r0, r13, r4)     // Catch:{ Exception -> 0x011a }
            r0.reuse()     // Catch:{ Exception -> 0x011a }
            goto L_0x00e5
        L_0x00e4:
            r13 = r2
        L_0x00e5:
            if (r12 == 0) goto L_0x00b9
            if (r13 == 0) goto L_0x00b9
            org.telegram.tgnet.TLRPC$UserStatus r0 = r12.status     // Catch:{ Exception -> 0x011a }
            if (r0 == 0) goto L_0x00f5
            org.telegram.tgnet.TLRPC$UserStatus r0 = r12.status     // Catch:{ Exception -> 0x011a }
            int r14 = r11.intValue(r8)     // Catch:{ Exception -> 0x011a }
            r0.expires = r14     // Catch:{ Exception -> 0x011a }
        L_0x00f5:
            r5.add(r12)     // Catch:{ Exception -> 0x011a }
            r0 = 3
            int r0 = r11.intValue(r0)     // Catch:{ Exception -> 0x011a }
            r13.date = r0     // Catch:{ Exception -> 0x011a }
            org.telegram.tgnet.TLRPC$TL_chatChannelParticipant r0 = new org.telegram.tgnet.TLRPC$TL_chatChannelParticipant     // Catch:{ Exception -> 0x011a }
            r0.<init>()     // Catch:{ Exception -> 0x011a }
            int r12 = r13.user_id     // Catch:{ Exception -> 0x011a }
            r0.user_id = r12     // Catch:{ Exception -> 0x011a }
            int r12 = r13.date     // Catch:{ Exception -> 0x011a }
            r0.date = r12     // Catch:{ Exception -> 0x011a }
            int r12 = r13.inviter_id     // Catch:{ Exception -> 0x011a }
            r0.inviter_id = r12     // Catch:{ Exception -> 0x011a }
            r0.channelParticipant = r13     // Catch:{ Exception -> 0x011a }
            org.telegram.tgnet.TLRPC$ChatParticipants r12 = r10.participants     // Catch:{ Exception -> 0x011a }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$ChatParticipant> r12 = r12.participants     // Catch:{ Exception -> 0x011a }
            r12.add(r0)     // Catch:{ Exception -> 0x011a }
            goto L_0x00b9
        L_0x011a:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ Exception -> 0x0186 }
            goto L_0x00b9
        L_0x011f:
            r11.dispose()     // Catch:{ Exception -> 0x0186 }
            java.lang.StringBuilder r0 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0186 }
            r0.<init>()     // Catch:{ Exception -> 0x0186 }
            r2 = 0
        L_0x0128:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$BotInfo> r7 = r10.bot_info     // Catch:{ Exception -> 0x0186 }
            int r7 = r7.size()     // Catch:{ Exception -> 0x0186 }
            if (r2 >= r7) goto L_0x0149
            java.util.ArrayList<org.telegram.tgnet.TLRPC$BotInfo> r7 = r10.bot_info     // Catch:{ Exception -> 0x0186 }
            java.lang.Object r7 = r7.get(r2)     // Catch:{ Exception -> 0x0186 }
            org.telegram.tgnet.TLRPC$BotInfo r7 = (org.telegram.tgnet.TLRPC.BotInfo) r7     // Catch:{ Exception -> 0x0186 }
            int r8 = r0.length()     // Catch:{ Exception -> 0x0186 }
            if (r8 == 0) goto L_0x0141
            r0.append(r6)     // Catch:{ Exception -> 0x0186 }
        L_0x0141:
            int r7 = r7.user_id     // Catch:{ Exception -> 0x0186 }
            r0.append(r7)     // Catch:{ Exception -> 0x0186 }
            int r2 = r2 + 1
            goto L_0x0128
        L_0x0149:
            int r2 = r0.length()     // Catch:{ Exception -> 0x0186 }
            if (r2 == 0) goto L_0x0156
            java.lang.String r0 = r0.toString()     // Catch:{ Exception -> 0x0186 }
            r1.getUsersInternal(r0, r5)     // Catch:{ Exception -> 0x0186 }
        L_0x0156:
            if (r10 == 0) goto L_0x0172
            int r0 = r10.pinned_msg_id     // Catch:{ Exception -> 0x0186 }
            if (r0 == 0) goto L_0x0172
            org.telegram.messenger.MediaDataController r11 = r17.getMediaDataController()     // Catch:{ Exception -> 0x0186 }
            int r0 = -r3
            long r12 = (long) r0     // Catch:{ Exception -> 0x0186 }
            boolean r0 = r10 instanceof org.telegram.tgnet.TLRPC.TL_channelFull     // Catch:{ Exception -> 0x0186 }
            if (r0 == 0) goto L_0x0168
            r14 = r3
            goto L_0x0169
        L_0x0168:
            r14 = 0
        L_0x0169:
            int r15 = r10.pinned_msg_id     // Catch:{ Exception -> 0x0186 }
            r16 = 0
            org.telegram.messenger.MessageObject r0 = r11.loadPinnedMessage(r12, r14, r15, r16)     // Catch:{ Exception -> 0x0186 }
            r9 = r0
        L_0x0172:
            r19[r4] = r10
            org.telegram.messenger.MessagesController r2 = r17.getMessagesController()
            r6 = 1
            r3 = r18
            r4 = r10
            r7 = r20
            r8 = r21
            r2.processChatInfo(r3, r4, r5, r6, r7, r8, r9)
            if (r22 == 0) goto L_0x01a6
            goto L_0x01a3
        L_0x0186:
            r0 = move-exception
            goto L_0x018d
        L_0x0188:
            r0 = move-exception
            r10 = r2
            goto L_0x01a8
        L_0x018b:
            r0 = move-exception
            r10 = r2
        L_0x018d:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x01a7 }
            r19[r4] = r10
            org.telegram.messenger.MessagesController r2 = r17.getMessagesController()
            r6 = 1
            r3 = r18
            r4 = r10
            r7 = r20
            r8 = r21
            r2.processChatInfo(r3, r4, r5, r6, r7, r8, r9)
            if (r22 == 0) goto L_0x01a6
        L_0x01a3:
            r22.countDown()
        L_0x01a6:
            return
        L_0x01a7:
            r0 = move-exception
        L_0x01a8:
            r19[r4] = r10
            org.telegram.messenger.MessagesController r2 = r17.getMessagesController()
            r6 = 1
            r9 = 0
            r3 = r18
            r4 = r10
            r7 = r20
            r8 = r21
            r2.processChatInfo(r3, r4, r5, r6, r7, r8, r9)
            if (r22 == 0) goto L_0x01bf
            r22.countDown()
        L_0x01bf:
            goto L_0x01c1
        L_0x01c0:
            throw r0
        L_0x01c1:
            goto L_0x01c0
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$loadChatInfo$79$MessagesStorage(int, org.telegram.tgnet.TLRPC$ChatFull[], boolean, boolean, java.util.concurrent.CountDownLatch):void");
    }

    public void processPendingRead(long j, long j2, long j3, boolean z, int i) {
        this.storageQueue.postRunnable(new Runnable(j, j2, z, i, this.lastSavedDate, j3) {
            private final /* synthetic */ long f$1;
            private final /* synthetic */ long f$2;
            private final /* synthetic */ boolean f$3;
            private final /* synthetic */ int f$4;
            private final /* synthetic */ int f$5;
            private final /* synthetic */ long f$6;

            {
                this.f$1 = r2;
                this.f$2 = r4;
                this.f$3 = r6;
                this.f$4 = r7;
                this.f$5 = r8;
                this.f$6 = r9;
            }

            public final void run() {
                MessagesStorage.this.lambda$processPendingRead$80$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, this.f$6);
            }
        });
    }

    public /* synthetic */ void lambda$processPendingRead$80$MessagesStorage(long j, long j2, boolean z, int i, int i2, long j3) {
        long j4;
        int i3;
        long j5;
        long j6 = j;
        try {
            int i4 = 0;
            SQLiteCursor queryFinalized = this.database.queryFinalized("SELECT unread_count, inbox_max, last_mid FROM dialogs WHERE did = " + j6, new Object[0]);
            long j7 = 0;
            if (queryFinalized.next()) {
                i3 = queryFinalized.intValue(0);
                j7 = (long) queryFinalized.intValue(1);
                j4 = queryFinalized.longValue(2);
            } else {
                j4 = 0;
                i3 = 0;
            }
            queryFinalized.dispose();
            this.database.beginTransaction();
            int i5 = (int) j6;
            if (i5 != 0) {
                j5 = Math.max(j7, (long) ((int) j2));
                if (z) {
                    j5 |= ((long) (-i5)) << 32;
                }
                SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE messages SET read_state = read_state | 1 WHERE uid = ? AND mid <= ? AND read_state IN(0,2) AND out = 0");
                executeFast.requery();
                executeFast.bindLong(1, j6);
                executeFast.bindLong(2, j5);
                executeFast.step();
                executeFast.dispose();
                if (j5 < j4) {
                    SQLiteCursor queryFinalized2 = this.database.queryFinalized("SELECT changes()", new Object[0]);
                    int intValue = queryFinalized2.next() ? queryFinalized2.intValue(0) + i : 0;
                    queryFinalized2.dispose();
                    i4 = Math.max(0, i3 - intValue);
                }
                SQLitePreparedStatement executeFast2 = this.database.executeFast("DELETE FROM unread_push_messages WHERE uid = ? AND mid <= ?");
                executeFast2.requery();
                executeFast2.bindLong(1, j6);
                executeFast2.bindLong(2, j5);
                executeFast2.step();
                executeFast2.dispose();
                SQLitePreparedStatement executeFast3 = this.database.executeFast("DELETE FROM unread_push_messages WHERE uid = ? AND date <= ?");
                executeFast3.requery();
                executeFast3.bindLong(1, j6);
                executeFast3.bindLong(2, (long) i2);
                executeFast3.step();
                executeFast3.dispose();
            } else {
                j5 = (long) ((int) j3);
                SQLitePreparedStatement executeFast4 = this.database.executeFast("UPDATE messages SET read_state = read_state | 1 WHERE uid = ? AND mid >= ? AND read_state IN(0,2) AND out = 0");
                executeFast4.requery();
                executeFast4.bindLong(1, j6);
                executeFast4.bindLong(2, j5);
                executeFast4.step();
                executeFast4.dispose();
                if (j5 > j4) {
                    SQLiteCursor queryFinalized3 = this.database.queryFinalized("SELECT changes()", new Object[0]);
                    int intValue2 = queryFinalized3.next() ? queryFinalized3.intValue(0) + i : 0;
                    queryFinalized3.dispose();
                    i4 = Math.max(0, i3 - intValue2);
                }
            }
            SQLitePreparedStatement executeFast5 = this.database.executeFast("UPDATE dialogs SET unread_count = ?, inbox_max = ? WHERE did = ?");
            executeFast5.requery();
            executeFast5.bindInteger(1, i4);
            executeFast5.bindInteger(2, (int) j5);
            executeFast5.bindLong(3, j6);
            executeFast5.step();
            executeFast5.dispose();
            this.database.commitTransaction();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void putContacts(ArrayList<TLRPC.TL_contact> arrayList, boolean z) {
        if (!arrayList.isEmpty() || z) {
            this.storageQueue.postRunnable(new Runnable(z, new ArrayList(arrayList)) {
                private final /* synthetic */ boolean f$1;
                private final /* synthetic */ ArrayList f$2;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                }

                public final void run() {
                    MessagesStorage.this.lambda$putContacts$81$MessagesStorage(this.f$1, this.f$2);
                }
            });
        }
    }

    public /* synthetic */ void lambda$putContacts$81$MessagesStorage(boolean z, ArrayList arrayList) {
        if (z) {
            try {
                this.database.executeFast("DELETE FROM contacts WHERE 1").stepThis().dispose();
            } catch (Exception e) {
                FileLog.e((Throwable) e);
                return;
            }
        }
        this.database.beginTransaction();
        SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO contacts VALUES(?, ?)");
        for (int i = 0; i < arrayList.size(); i++) {
            TLRPC.TL_contact tL_contact = (TLRPC.TL_contact) arrayList.get(i);
            executeFast.requery();
            int i2 = 1;
            executeFast.bindInteger(1, tL_contact.user_id);
            if (!tL_contact.mutual) {
                i2 = 0;
            }
            executeFast.bindInteger(2, i2);
            executeFast.step();
        }
        executeFast.dispose();
        this.database.commitTransaction();
    }

    public void deleteContacts(ArrayList<Integer> arrayList) {
        if (arrayList != null && !arrayList.isEmpty()) {
            this.storageQueue.postRunnable(new Runnable(arrayList) {
                private final /* synthetic */ ArrayList f$1;

                {
                    this.f$1 = r2;
                }

                public final void run() {
                    MessagesStorage.this.lambda$deleteContacts$82$MessagesStorage(this.f$1);
                }
            });
        }
    }

    public /* synthetic */ void lambda$deleteContacts$82$MessagesStorage(ArrayList arrayList) {
        try {
            String join = TextUtils.join(",", arrayList);
            SQLiteDatabase sQLiteDatabase = this.database;
            sQLiteDatabase.executeFast("DELETE FROM contacts WHERE uid IN(" + join + ")").stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void applyPhoneBookUpdates(String str, String str2) {
        if (!TextUtils.isEmpty(str)) {
            this.storageQueue.postRunnable(new Runnable(str, str2) {
                private final /* synthetic */ String f$1;
                private final /* synthetic */ String f$2;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                }

                public final void run() {
                    MessagesStorage.this.lambda$applyPhoneBookUpdates$83$MessagesStorage(this.f$1, this.f$2);
                }
            });
        }
    }

    public /* synthetic */ void lambda$applyPhoneBookUpdates$83$MessagesStorage(String str, String str2) {
        try {
            if (str.length() != 0) {
                this.database.executeFast(String.format(Locale.US, "UPDATE user_phones_v7 SET deleted = 0 WHERE sphone IN(%s)", new Object[]{str})).stepThis().dispose();
            }
            if (str2.length() != 0) {
                this.database.executeFast(String.format(Locale.US, "UPDATE user_phones_v7 SET deleted = 1 WHERE sphone IN(%s)", new Object[]{str2})).stepThis().dispose();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void putCachedPhoneBook(HashMap<String, ContactsController.Contact> hashMap, boolean z, boolean z2) {
        if (hashMap == null) {
            return;
        }
        if (!hashMap.isEmpty() || z || z2) {
            this.storageQueue.postRunnable(new Runnable(hashMap, z) {
                private final /* synthetic */ HashMap f$1;
                private final /* synthetic */ boolean f$2;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                }

                public final void run() {
                    MessagesStorage.this.lambda$putCachedPhoneBook$84$MessagesStorage(this.f$1, this.f$2);
                }
            });
        }
    }

    public /* synthetic */ void lambda$putCachedPhoneBook$84$MessagesStorage(HashMap hashMap, boolean z) {
        try {
            if (BuildVars.LOGS_ENABLED) {
                FileLog.d(this.currentAccount + " save contacts to db " + hashMap.size());
            }
            this.database.executeFast("DELETE FROM user_contacts_v7 WHERE 1").stepThis().dispose();
            this.database.executeFast("DELETE FROM user_phones_v7 WHERE 1").stepThis().dispose();
            this.database.beginTransaction();
            SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO user_contacts_v7 VALUES(?, ?, ?, ?, ?)");
            SQLitePreparedStatement executeFast2 = this.database.executeFast("REPLACE INTO user_phones_v7 VALUES(?, ?, ?, ?)");
            Iterator it = hashMap.entrySet().iterator();
            while (true) {
                if (!it.hasNext()) {
                    break;
                }
                ContactsController.Contact contact = (ContactsController.Contact) ((Map.Entry) it.next()).getValue();
                if (!contact.phones.isEmpty()) {
                    if (!contact.shortPhones.isEmpty()) {
                        executeFast.requery();
                        executeFast.bindString(1, contact.key);
                        executeFast.bindInteger(2, contact.contact_id);
                        executeFast.bindString(3, contact.first_name);
                        executeFast.bindString(4, contact.last_name);
                        executeFast.bindInteger(5, contact.imported);
                        executeFast.step();
                        for (int i = 0; i < contact.phones.size(); i++) {
                            executeFast2.requery();
                            executeFast2.bindString(1, contact.key);
                            executeFast2.bindString(2, contact.phones.get(i));
                            executeFast2.bindString(3, contact.shortPhones.get(i));
                            executeFast2.bindInteger(4, contact.phoneDeleted.get(i).intValue());
                            executeFast2.step();
                        }
                    }
                }
            }
            executeFast.dispose();
            executeFast2.dispose();
            this.database.commitTransaction();
            if (z) {
                this.database.executeFast("DROP TABLE IF EXISTS user_contacts_v6;").stepThis().dispose();
                this.database.executeFast("DROP TABLE IF EXISTS user_phones_v6;").stepThis().dispose();
                getCachedPhoneBook(false);
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void getCachedPhoneBook(boolean z) {
        this.storageQueue.postRunnable(new Runnable(z) {
            private final /* synthetic */ boolean f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$getCachedPhoneBook$85$MessagesStorage(this.f$1);
            }
        });
    }

    /* JADX WARNING: Code restructure failed: missing block: B:100:0x01ae, code lost:
        if (r8.last_name != null) goto L_0x01b2;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:101:0x01b0, code lost:
        r8.last_name = "";
     */
    /* JADX WARNING: Code restructure failed: missing block: B:102:0x01b2, code lost:
        r10.put(r0, r8);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:103:0x01b5, code lost:
        r0 = r3.stringValue(4);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:104:0x01b9, code lost:
        if (r0 != null) goto L_0x01bd;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:106:0x01bd, code lost:
        r8.phones.add(r0);
        r14 = r3.stringValue(5);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:107:0x01c6, code lost:
        if (r14 != null) goto L_0x01c9;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:110:0x01cd, code lost:
        if (r14.length() != 8) goto L_0x01d9;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:112:0x01d3, code lost:
        if (r0.length() == 8) goto L_0x01d9;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:113:0x01d5, code lost:
        r14 = org.telegram.PhoneFormat.PhoneFormat.stripExceptNumbers(r0);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:114:0x01d9, code lost:
        r8.shortPhones.add(r14);
        r8.phoneDeleted.add(java.lang.Integer.valueOf(r3.intValue(6)));
        r8.phoneTypes.add("");
     */
    /* JADX WARNING: Code restructure failed: missing block: B:115:0x01f5, code lost:
        if (r10.size() != 5000) goto L_0x0176;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:116:0x01f7, code lost:
        r3.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:117:0x01fb, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:118:0x01fd, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:120:?, code lost:
        r10.clear();
        org.telegram.messenger.FileLog.e((java.lang.Throwable) r0);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:121:0x0204, code lost:
        if (r3 != null) goto L_0x0206;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:122:0x0206, code lost:
        r3.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:123:0x0209, code lost:
        getContactsController().performSyncPhoneBook(r10, true, true, false, false, !r27, false);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:124:0x021e, code lost:
        return;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:125:0x021f, code lost:
        if (r3 != null) goto L_0x0221;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:126:0x0221, code lost:
        r3.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:127:0x0224, code lost:
        throw r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:76:0x0134, code lost:
        if (r3 == null) goto L_0x0148;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:84:0x0143, code lost:
        if (r3 != null) goto L_0x0145;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:85:0x0145, code lost:
        r3.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:86:0x0148, code lost:
        r10 = new java.util.HashMap(r16);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:87:0x014f, code lost:
        if (r14 == 0) goto L_0x016b;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:89:?, code lost:
        r0 = r1.database;
        r0 = r0.queryFinalized("SELECT us.key, us.uid, us.fname, us.sname, up.phone, up.sphone, up.deleted, us.imported FROM user_contacts_v7 as us LEFT JOIN user_phones_v7 as up ON us.key = up.key WHERE 1 LIMIT 0," + r8, new java.lang.Object[0]);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:90:0x016b, code lost:
        r0 = r1.database.queryFinalized("SELECT us.key, us.uid, us.fname, us.sname, up.phone, up.sphone, up.deleted, us.imported FROM user_contacts_v7 as us LEFT JOIN user_phones_v7 as up ON us.key = up.key WHERE 1", new java.lang.Object[0]);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:91:0x0175, code lost:
        r3 = r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:93:0x017a, code lost:
        if (r3.next() == false) goto L_0x01f7;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:94:0x017c, code lost:
        r0 = r3.stringValue(0);
        r8 = (org.telegram.messenger.ContactsController.Contact) r10.get(r0);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:95:0x0186, code lost:
        if (r8 != null) goto L_0x01b5;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:96:0x0188, code lost:
        r8 = new org.telegram.messenger.ContactsController.Contact();
        r8.contact_id = r3.intValue(1);
        r8.first_name = r3.stringValue(2);
        r8.last_name = r3.stringValue(3);
        r8.imported = r3.intValue(7);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:97:0x01a8, code lost:
        if (r8.first_name != null) goto L_0x01ac;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:98:0x01aa, code lost:
        r8.first_name = "";
     */
    /* JADX WARNING: Removed duplicated region for block: B:54:0x00e6  */
    /* JADX WARNING: Removed duplicated region for block: B:61:0x00fb A[Catch:{ all -> 0x0137 }] */
    /* JADX WARNING: Removed duplicated region for block: B:75:0x0130  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$getCachedPhoneBook$85$MessagesStorage(boolean r27) {
        /*
            r26 = this;
            r1 = r26
            java.lang.String r2 = ""
            r3 = 6
            r4 = 3
            r5 = 2
            r6 = 5
            r7 = 4
            r9 = 1
            r11 = 8
            r12 = 5000(0x1388, float:7.006E-42)
            r13 = 0
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ all -> 0x00df }
            java.lang.String r14 = "SELECT name FROM sqlite_master WHERE type='table' AND name='user_contacts_v6'"
            java.lang.Object[] r15 = new java.lang.Object[r13]     // Catch:{ all -> 0x00df }
            org.telegram.SQLite.SQLiteCursor r14 = r0.queryFinalized(r14, r15)     // Catch:{ all -> 0x00df }
            boolean r0 = r14.next()     // Catch:{ all -> 0x00dc }
            r14.dispose()     // Catch:{ all -> 0x00dc }
            if (r0 == 0) goto L_0x00d9
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ all -> 0x00df }
            java.lang.String r14 = "SELECT COUNT(uid) FROM user_contacts_v6 WHERE 1"
            java.lang.Object[] r15 = new java.lang.Object[r13]     // Catch:{ all -> 0x00df }
            org.telegram.SQLite.SQLiteCursor r14 = r0.queryFinalized(r14, r15)     // Catch:{ all -> 0x00df }
            boolean r0 = r14.next()     // Catch:{ all -> 0x00dc }
            if (r0 == 0) goto L_0x003b
            int r0 = r14.intValue(r13)     // Catch:{ all -> 0x00dc }
            int r0 = java.lang.Math.min(r12, r0)     // Catch:{ all -> 0x00dc }
            goto L_0x003d
        L_0x003b:
            r0 = 16
        L_0x003d:
            r14.dispose()     // Catch:{ all -> 0x00dc }
            android.util.SparseArray r15 = new android.util.SparseArray     // Catch:{ all -> 0x00dc }
            r15.<init>(r0)     // Catch:{ all -> 0x00dc }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ all -> 0x00dc }
            java.lang.String r8 = "SELECT us.uid, us.fname, us.sname, up.phone, up.sphone, up.deleted, us.imported FROM user_contacts_v6 as us LEFT JOIN user_phones_v6 as up ON us.uid = up.uid WHERE 1"
            java.lang.Object[] r10 = new java.lang.Object[r13]     // Catch:{ all -> 0x00dc }
            org.telegram.SQLite.SQLiteCursor r10 = r0.queryFinalized(r8, r10)     // Catch:{ all -> 0x00dc }
        L_0x004f:
            boolean r0 = r10.next()     // Catch:{ all -> 0x00d7 }
            if (r0 == 0) goto L_0x00cc
            int r0 = r10.intValue(r13)     // Catch:{ all -> 0x00d7 }
            java.lang.Object r8 = r15.get(r0)     // Catch:{ all -> 0x00d7 }
            org.telegram.messenger.ContactsController$Contact r8 = (org.telegram.messenger.ContactsController.Contact) r8     // Catch:{ all -> 0x00d7 }
            if (r8 != 0) goto L_0x0089
            org.telegram.messenger.ContactsController$Contact r8 = new org.telegram.messenger.ContactsController$Contact     // Catch:{ all -> 0x00d7 }
            r8.<init>()     // Catch:{ all -> 0x00d7 }
            java.lang.String r14 = r10.stringValue(r9)     // Catch:{ all -> 0x00d7 }
            r8.first_name = r14     // Catch:{ all -> 0x00d7 }
            java.lang.String r14 = r10.stringValue(r5)     // Catch:{ all -> 0x00d7 }
            r8.last_name = r14     // Catch:{ all -> 0x00d7 }
            int r14 = r10.intValue(r3)     // Catch:{ all -> 0x00d7 }
            r8.imported = r14     // Catch:{ all -> 0x00d7 }
            java.lang.String r14 = r8.first_name     // Catch:{ all -> 0x00d7 }
            if (r14 != 0) goto L_0x007e
            r8.first_name = r2     // Catch:{ all -> 0x00d7 }
        L_0x007e:
            java.lang.String r14 = r8.last_name     // Catch:{ all -> 0x00d7 }
            if (r14 != 0) goto L_0x0084
            r8.last_name = r2     // Catch:{ all -> 0x00d7 }
        L_0x0084:
            r8.contact_id = r0     // Catch:{ all -> 0x00d7 }
            r15.put(r0, r8)     // Catch:{ all -> 0x00d7 }
        L_0x0089:
            java.lang.String r0 = r10.stringValue(r4)     // Catch:{ all -> 0x00d7 }
            if (r0 != 0) goto L_0x0090
            goto L_0x004f
        L_0x0090:
            java.util.ArrayList<java.lang.String> r14 = r8.phones     // Catch:{ all -> 0x00d7 }
            r14.add(r0)     // Catch:{ all -> 0x00d7 }
            java.lang.String r14 = r10.stringValue(r7)     // Catch:{ all -> 0x00d7 }
            if (r14 != 0) goto L_0x009c
            goto L_0x004f
        L_0x009c:
            int r3 = r14.length()     // Catch:{ all -> 0x00d7 }
            if (r3 != r11) goto L_0x00ac
            int r3 = r0.length()     // Catch:{ all -> 0x00d7 }
            if (r3 == r11) goto L_0x00ac
            java.lang.String r14 = org.telegram.PhoneFormat.PhoneFormat.stripExceptNumbers(r0)     // Catch:{ all -> 0x00d7 }
        L_0x00ac:
            java.util.ArrayList<java.lang.String> r0 = r8.shortPhones     // Catch:{ all -> 0x00d7 }
            r0.add(r14)     // Catch:{ all -> 0x00d7 }
            java.util.ArrayList<java.lang.Integer> r0 = r8.phoneDeleted     // Catch:{ all -> 0x00d7 }
            int r3 = r10.intValue(r6)     // Catch:{ all -> 0x00d7 }
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)     // Catch:{ all -> 0x00d7 }
            r0.add(r3)     // Catch:{ all -> 0x00d7 }
            java.util.ArrayList<java.lang.String> r0 = r8.phoneTypes     // Catch:{ all -> 0x00d7 }
            r0.add(r2)     // Catch:{ all -> 0x00d7 }
            int r0 = r15.size()     // Catch:{ all -> 0x00d7 }
            if (r0 != r12) goto L_0x00ca
            goto L_0x00cc
        L_0x00ca:
            r3 = 6
            goto L_0x004f
        L_0x00cc:
            r10.dispose()     // Catch:{ all -> 0x00d7 }
            org.telegram.messenger.ContactsController r0 = r26.getContactsController()     // Catch:{ all -> 0x00df }
            r0.migratePhoneBookToV7(r15)     // Catch:{ all -> 0x00df }
            return
        L_0x00d7:
            r0 = move-exception
            goto L_0x00e1
        L_0x00d9:
            r17 = 0
            goto L_0x00eb
        L_0x00dc:
            r0 = move-exception
            r10 = r14
            goto L_0x00e1
        L_0x00df:
            r0 = move-exception
            r10 = 0
        L_0x00e1:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x022d }
            if (r10 == 0) goto L_0x00e9
            r10.dispose()
        L_0x00e9:
            r17 = r10
        L_0x00eb:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ all -> 0x0139 }
            java.lang.String r3 = "SELECT COUNT(key) FROM user_contacts_v7 WHERE 1"
            java.lang.Object[] r8 = new java.lang.Object[r13]     // Catch:{ all -> 0x0139 }
            org.telegram.SQLite.SQLiteCursor r3 = r0.queryFinalized(r3, r8)     // Catch:{ all -> 0x0139 }
            boolean r0 = r3.next()     // Catch:{ all -> 0x0137 }
            if (r0 == 0) goto L_0x0130
            int r8 = r3.intValue(r13)     // Catch:{ all -> 0x0137 }
            int r10 = java.lang.Math.min(r12, r8)     // Catch:{ all -> 0x012e }
            if (r8 <= r12) goto L_0x0109
            int r0 = r8 + -5000
            r14 = r0
            goto L_0x010a
        L_0x0109:
            r14 = 0
        L_0x010a:
            boolean r0 = org.telegram.messenger.BuildVars.LOGS_ENABLED     // Catch:{ all -> 0x012a }
            if (r0 == 0) goto L_0x0127
            java.lang.StringBuilder r0 = new java.lang.StringBuilder     // Catch:{ all -> 0x012a }
            r0.<init>()     // Catch:{ all -> 0x012a }
            int r15 = r1.currentAccount     // Catch:{ all -> 0x012a }
            r0.append(r15)     // Catch:{ all -> 0x012a }
            java.lang.String r15 = " current cached contacts count = "
            r0.append(r15)     // Catch:{ all -> 0x012a }
            r0.append(r8)     // Catch:{ all -> 0x012a }
            java.lang.String r0 = r0.toString()     // Catch:{ all -> 0x012a }
            org.telegram.messenger.FileLog.d(r0)     // Catch:{ all -> 0x012a }
        L_0x0127:
            r16 = r10
            goto L_0x0134
        L_0x012a:
            r0 = move-exception
            r16 = r10
            goto L_0x0140
        L_0x012e:
            r0 = move-exception
            goto L_0x013d
        L_0x0130:
            r8 = 0
            r14 = 0
            r16 = 16
        L_0x0134:
            if (r3 == 0) goto L_0x0148
            goto L_0x0145
        L_0x0137:
            r0 = move-exception
            goto L_0x013c
        L_0x0139:
            r0 = move-exception
            r3 = r17
        L_0x013c:
            r8 = 0
        L_0x013d:
            r14 = 0
            r16 = 16
        L_0x0140:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0225 }
            if (r3 == 0) goto L_0x0148
        L_0x0145:
            r3.dispose()
        L_0x0148:
            r0 = r16
            java.util.HashMap r10 = new java.util.HashMap
            r10.<init>(r0)
            if (r14 == 0) goto L_0x016b
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x01fd }
            java.lang.StringBuilder r14 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x01fd }
            r14.<init>()     // Catch:{ Exception -> 0x01fd }
            java.lang.String r15 = "SELECT us.key, us.uid, us.fname, us.sname, up.phone, up.sphone, up.deleted, us.imported FROM user_contacts_v7 as us LEFT JOIN user_phones_v7 as up ON us.key = up.key WHERE 1 LIMIT 0,"
            r14.append(r15)     // Catch:{ Exception -> 0x01fd }
            r14.append(r8)     // Catch:{ Exception -> 0x01fd }
            java.lang.String r8 = r14.toString()     // Catch:{ Exception -> 0x01fd }
            java.lang.Object[] r14 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x01fd }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r8, r14)     // Catch:{ Exception -> 0x01fd }
            goto L_0x0175
        L_0x016b:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x01fd }
            java.lang.String r8 = "SELECT us.key, us.uid, us.fname, us.sname, up.phone, up.sphone, up.deleted, us.imported FROM user_contacts_v7 as us LEFT JOIN user_phones_v7 as up ON us.key = up.key WHERE 1"
            java.lang.Object[] r14 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x01fd }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r8, r14)     // Catch:{ Exception -> 0x01fd }
        L_0x0175:
            r3 = r0
        L_0x0176:
            boolean r0 = r3.next()     // Catch:{ Exception -> 0x01fd }
            if (r0 == 0) goto L_0x01f7
            java.lang.String r0 = r3.stringValue(r13)     // Catch:{ Exception -> 0x01fd }
            java.lang.Object r8 = r10.get(r0)     // Catch:{ Exception -> 0x01fd }
            org.telegram.messenger.ContactsController$Contact r8 = (org.telegram.messenger.ContactsController.Contact) r8     // Catch:{ Exception -> 0x01fd }
            if (r8 != 0) goto L_0x01b5
            org.telegram.messenger.ContactsController$Contact r8 = new org.telegram.messenger.ContactsController$Contact     // Catch:{ Exception -> 0x01fd }
            r8.<init>()     // Catch:{ Exception -> 0x01fd }
            int r14 = r3.intValue(r9)     // Catch:{ Exception -> 0x01fd }
            r8.contact_id = r14     // Catch:{ Exception -> 0x01fd }
            java.lang.String r14 = r3.stringValue(r5)     // Catch:{ Exception -> 0x01fd }
            r8.first_name = r14     // Catch:{ Exception -> 0x01fd }
            java.lang.String r14 = r3.stringValue(r4)     // Catch:{ Exception -> 0x01fd }
            r8.last_name = r14     // Catch:{ Exception -> 0x01fd }
            r14 = 7
            int r14 = r3.intValue(r14)     // Catch:{ Exception -> 0x01fd }
            r8.imported = r14     // Catch:{ Exception -> 0x01fd }
            java.lang.String r14 = r8.first_name     // Catch:{ Exception -> 0x01fd }
            if (r14 != 0) goto L_0x01ac
            r8.first_name = r2     // Catch:{ Exception -> 0x01fd }
        L_0x01ac:
            java.lang.String r14 = r8.last_name     // Catch:{ Exception -> 0x01fd }
            if (r14 != 0) goto L_0x01b2
            r8.last_name = r2     // Catch:{ Exception -> 0x01fd }
        L_0x01b2:
            r10.put(r0, r8)     // Catch:{ Exception -> 0x01fd }
        L_0x01b5:
            java.lang.String r0 = r3.stringValue(r7)     // Catch:{ Exception -> 0x01fd }
            if (r0 != 0) goto L_0x01bd
        L_0x01bb:
            r14 = 6
            goto L_0x0176
        L_0x01bd:
            java.util.ArrayList<java.lang.String> r14 = r8.phones     // Catch:{ Exception -> 0x01fd }
            r14.add(r0)     // Catch:{ Exception -> 0x01fd }
            java.lang.String r14 = r3.stringValue(r6)     // Catch:{ Exception -> 0x01fd }
            if (r14 != 0) goto L_0x01c9
            goto L_0x01bb
        L_0x01c9:
            int r15 = r14.length()     // Catch:{ Exception -> 0x01fd }
            if (r15 != r11) goto L_0x01d9
            int r15 = r0.length()     // Catch:{ Exception -> 0x01fd }
            if (r15 == r11) goto L_0x01d9
            java.lang.String r14 = org.telegram.PhoneFormat.PhoneFormat.stripExceptNumbers(r0)     // Catch:{ Exception -> 0x01fd }
        L_0x01d9:
            java.util.ArrayList<java.lang.String> r0 = r8.shortPhones     // Catch:{ Exception -> 0x01fd }
            r0.add(r14)     // Catch:{ Exception -> 0x01fd }
            java.util.ArrayList<java.lang.Integer> r0 = r8.phoneDeleted     // Catch:{ Exception -> 0x01fd }
            r14 = 6
            int r15 = r3.intValue(r14)     // Catch:{ Exception -> 0x01fd }
            java.lang.Integer r15 = java.lang.Integer.valueOf(r15)     // Catch:{ Exception -> 0x01fd }
            r0.add(r15)     // Catch:{ Exception -> 0x01fd }
            java.util.ArrayList<java.lang.String> r0 = r8.phoneTypes     // Catch:{ Exception -> 0x01fd }
            r0.add(r2)     // Catch:{ Exception -> 0x01fd }
            int r0 = r10.size()     // Catch:{ Exception -> 0x01fd }
            if (r0 != r12) goto L_0x0176
        L_0x01f7:
            r3.dispose()     // Catch:{ Exception -> 0x01fd }
            goto L_0x0209
        L_0x01fb:
            r0 = move-exception
            goto L_0x021f
        L_0x01fd:
            r0 = move-exception
            r10.clear()     // Catch:{ all -> 0x01fb }
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x01fb }
            if (r3 == 0) goto L_0x0209
            r3.dispose()
        L_0x0209:
            org.telegram.messenger.ContactsController r18 = r26.getContactsController()
            r20 = 1
            r21 = 1
            r22 = 0
            r23 = 0
            r24 = r27 ^ 1
            r25 = 0
            r19 = r10
            r18.performSyncPhoneBook(r19, r20, r21, r22, r23, r24, r25)
            return
        L_0x021f:
            if (r3 == 0) goto L_0x0224
            r3.dispose()
        L_0x0224:
            throw r0
        L_0x0225:
            r0 = move-exception
            r2 = r0
            if (r3 == 0) goto L_0x022c
            r3.dispose()
        L_0x022c:
            throw r2
        L_0x022d:
            r0 = move-exception
            r2 = r0
            if (r10 == 0) goto L_0x0234
            r10.dispose()
        L_0x0234:
            goto L_0x0236
        L_0x0235:
            throw r2
        L_0x0236:
            goto L_0x0235
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$getCachedPhoneBook$85$MessagesStorage(boolean):void");
    }

    public void getContacts() {
        this.storageQueue.postRunnable(new Runnable() {
            public final void run() {
                MessagesStorage.this.lambda$getContacts$86$MessagesStorage();
            }
        });
    }

    public /* synthetic */ void lambda$getContacts$86$MessagesStorage() {
        ArrayList arrayList = new ArrayList();
        ArrayList arrayList2 = new ArrayList();
        try {
            SQLiteCursor queryFinalized = this.database.queryFinalized("SELECT * FROM contacts WHERE 1", new Object[0]);
            StringBuilder sb = new StringBuilder();
            while (queryFinalized.next()) {
                int intValue = queryFinalized.intValue(0);
                TLRPC.TL_contact tL_contact = new TLRPC.TL_contact();
                tL_contact.user_id = intValue;
                tL_contact.mutual = queryFinalized.intValue(1) == 1;
                if (sb.length() != 0) {
                    sb.append(",");
                }
                arrayList.add(tL_contact);
                sb.append(tL_contact.user_id);
            }
            queryFinalized.dispose();
            if (sb.length() != 0) {
                getUsersInternal(sb.toString(), arrayList2);
            }
        } catch (Exception e) {
            arrayList.clear();
            arrayList2.clear();
            FileLog.e((Throwable) e);
        }
        getContactsController().processLoadedContacts(arrayList, arrayList2, 1);
    }

    public void getUnsentMessages(int i) {
        this.storageQueue.postRunnable(new Runnable(i) {
            private final /* synthetic */ int f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$getUnsentMessages$87$MessagesStorage(this.f$1);
            }
        });
    }

    public /* synthetic */ void lambda$getUnsentMessages$87$MessagesStorage(int i) {
        int i2;
        ArrayList arrayList;
        ArrayList arrayList2;
        ArrayList arrayList3;
        try {
            SparseArray sparseArray = new SparseArray();
            ArrayList arrayList4 = new ArrayList();
            ArrayList arrayList5 = new ArrayList();
            ArrayList arrayList6 = new ArrayList();
            ArrayList arrayList7 = new ArrayList();
            ArrayList arrayList8 = new ArrayList();
            ArrayList arrayList9 = new ArrayList();
            ArrayList arrayList10 = new ArrayList();
            ArrayList arrayList11 = new ArrayList();
            SQLiteDatabase sQLiteDatabase = this.database;
            boolean z = false;
            SQLiteCursor queryFinalized = sQLiteDatabase.queryFinalized("SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.uid, s.seq_in, s.seq_out, m.ttl FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid LEFT JOIN messages_seq as s ON m.mid = s.mid WHERE (m.mid < 0 AND m.send_state = 1) OR (m.mid > 0 AND m.send_state = 3) ORDER BY m.mid DESC LIMIT " + i, new Object[0]);
            while (true) {
                i2 = 1;
                if (!queryFinalized.next()) {
                    break;
                }
                NativeByteBuffer byteBufferValue = queryFinalized.byteBufferValue(1);
                if (byteBufferValue != null) {
                    TLRPC.Message TLdeserialize = TLRPC.Message.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                    TLdeserialize.send_state = queryFinalized.intValue(2);
                    TLdeserialize.readAttachPath(byteBufferValue, getUserConfig().clientUserId);
                    byteBufferValue.reuse();
                    if (sparseArray.indexOfKey(TLdeserialize.id) < 0) {
                        MessageObject.setUnreadFlags(TLdeserialize, queryFinalized.intValue(0));
                        TLdeserialize.id = queryFinalized.intValue(3);
                        TLdeserialize.date = queryFinalized.intValue(4);
                        if (!queryFinalized.isNull(5)) {
                            TLdeserialize.random_id = queryFinalized.longValue(5);
                        }
                        TLdeserialize.dialog_id = queryFinalized.longValue(6);
                        TLdeserialize.seq_in = queryFinalized.intValue(7);
                        TLdeserialize.seq_out = queryFinalized.intValue(8);
                        TLdeserialize.ttl = queryFinalized.intValue(9);
                        arrayList4.add(TLdeserialize);
                        sparseArray.put(TLdeserialize.id, TLdeserialize);
                        int i3 = (int) TLdeserialize.dialog_id;
                        int i4 = (int) (TLdeserialize.dialog_id >> 32);
                        if (i3 != 0) {
                            if (i3 < 0) {
                                int i5 = -i3;
                                if (!arrayList10.contains(Integer.valueOf(i5))) {
                                    arrayList10.add(Integer.valueOf(i5));
                                }
                            } else if (!arrayList9.contains(Integer.valueOf(i3))) {
                                arrayList9.add(Integer.valueOf(i3));
                            }
                        } else if (!arrayList11.contains(Integer.valueOf(i4))) {
                            arrayList11.add(Integer.valueOf(i4));
                        }
                        addUsersAndChatsFromMessage(TLdeserialize, arrayList9, arrayList10);
                        if (TLdeserialize.send_state != 3 && ((TLdeserialize.to_id.channel_id == 0 && !MessageObject.isUnread(TLdeserialize) && i3 != 0) || TLdeserialize.id > 0)) {
                            TLdeserialize.send_state = 0;
                        }
                    }
                }
            }
            queryFinalized.dispose();
            SQLiteCursor queryFinalized2 = this.database.queryFinalized("SELECT m.data, m.send_state, m.mid, m.date, r.random_id, m.uid, m.ttl FROM scheduled_messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE (m.mid < 0 AND m.send_state = 1) OR (m.mid > 0 AND m.send_state = 3) ORDER BY date ASC", new Object[0]);
            while (queryFinalized2.next()) {
                NativeByteBuffer byteBufferValue2 = queryFinalized2.byteBufferValue(z ? 1 : 0);
                if (byteBufferValue2 != null) {
                    TLRPC.Message TLdeserialize2 = TLRPC.Message.TLdeserialize(byteBufferValue2, byteBufferValue2.readInt32(z), z);
                    TLdeserialize2.send_state = queryFinalized2.intValue(i2);
                    TLdeserialize2.readAttachPath(byteBufferValue2, getUserConfig().clientUserId);
                    byteBufferValue2.reuse();
                    if (sparseArray.indexOfKey(TLdeserialize2.id) < 0) {
                        TLdeserialize2.id = queryFinalized2.intValue(2);
                        TLdeserialize2.date = queryFinalized2.intValue(3);
                        if (!queryFinalized2.isNull(4)) {
                            TLdeserialize2.random_id = queryFinalized2.longValue(4);
                        }
                        arrayList3 = arrayList6;
                        arrayList2 = arrayList7;
                        TLdeserialize2.dialog_id = queryFinalized2.longValue(5);
                        TLdeserialize2.ttl = queryFinalized2.intValue(6);
                        arrayList5.add(TLdeserialize2);
                        sparseArray.put(TLdeserialize2.id, TLdeserialize2);
                        int i6 = (int) TLdeserialize2.dialog_id;
                        int i7 = (int) (TLdeserialize2.dialog_id >> 32);
                        if (i6 != 0) {
                            if (i6 < 0) {
                                int i8 = -i6;
                                if (!arrayList10.contains(Integer.valueOf(i8))) {
                                    arrayList10.add(Integer.valueOf(i8));
                                }
                            } else if (!arrayList9.contains(Integer.valueOf(i6))) {
                                arrayList9.add(Integer.valueOf(i6));
                            }
                        } else if (!arrayList11.contains(Integer.valueOf(i7))) {
                            arrayList11.add(Integer.valueOf(i7));
                        }
                        addUsersAndChatsFromMessage(TLdeserialize2, arrayList9, arrayList10);
                        if (TLdeserialize2.send_state == 3 || ((TLdeserialize2.to_id.channel_id != 0 || MessageObject.isUnread(TLdeserialize2) || i6 == 0) && TLdeserialize2.id <= 0)) {
                            arrayList6 = arrayList3;
                            arrayList7 = arrayList2;
                            z = false;
                            i2 = 1;
                        } else {
                            TLdeserialize2.send_state = 0;
                            arrayList6 = arrayList3;
                            arrayList7 = arrayList2;
                            z = false;
                            i2 = 1;
                        }
                    }
                }
                arrayList3 = arrayList6;
                arrayList2 = arrayList7;
                arrayList6 = arrayList3;
                arrayList7 = arrayList2;
                z = false;
                i2 = 1;
            }
            ArrayList arrayList12 = arrayList6;
            ArrayList arrayList13 = arrayList7;
            queryFinalized2.dispose();
            if (!arrayList11.isEmpty()) {
                getEncryptedChatsInternal(TextUtils.join(",", arrayList11), arrayList8, arrayList9);
            }
            if (!arrayList9.isEmpty()) {
                getUsersInternal(TextUtils.join(",", arrayList9), arrayList12);
            }
            if (!arrayList10.isEmpty()) {
                StringBuilder sb = new StringBuilder();
                for (int i9 = 0; i9 < arrayList10.size(); i9++) {
                    Integer num = (Integer) arrayList10.get(i9);
                    if (sb.length() != 0) {
                        sb.append(",");
                    }
                    sb.append(num);
                }
                arrayList = arrayList13;
                getChatsInternal(sb.toString(), arrayList);
            } else {
                arrayList = arrayList13;
            }
            getSendMessagesHelper().processUnsentMessages(arrayList4, arrayList5, arrayList12, arrayList, arrayList8);
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public boolean checkMessageByRandomId(long j) {
        boolean[] zArr = new boolean[1];
        CountDownLatch countDownLatch = new CountDownLatch(1);
        this.storageQueue.postRunnable(new Runnable(j, zArr, countDownLatch) {
            private final /* synthetic */ long f$1;
            private final /* synthetic */ boolean[] f$2;
            private final /* synthetic */ CountDownLatch f$3;

            {
                this.f$1 = r2;
                this.f$2 = r4;
                this.f$3 = r5;
            }

            public final void run() {
                MessagesStorage.this.lambda$checkMessageByRandomId$88$MessagesStorage(this.f$1, this.f$2, this.f$3);
            }
        });
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return zArr[0];
    }

    /* JADX WARNING: Code restructure failed: missing block: B:10:0x002c, code lost:
        if (r0 == null) goto L_0x0031;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:11:0x002e, code lost:
        r0.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:12:0x0031, code lost:
        r10.countDown();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:13:0x0034, code lost:
        return;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:5:0x0023, code lost:
        if (r0 != null) goto L_0x002e;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$checkMessageByRandomId$88$MessagesStorage(long r7, boolean[] r9, java.util.concurrent.CountDownLatch r10) {
        /*
            r6 = this;
            r0 = 0
            org.telegram.SQLite.SQLiteDatabase r1 = r6.database     // Catch:{ Exception -> 0x0028 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x0028 }
            java.lang.String r3 = "SELECT random_id FROM randoms WHERE random_id = %d"
            r4 = 1
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0028 }
            java.lang.Long r7 = java.lang.Long.valueOf(r7)     // Catch:{ Exception -> 0x0028 }
            r8 = 0
            r5[r8] = r7     // Catch:{ Exception -> 0x0028 }
            java.lang.String r7 = java.lang.String.format(r2, r3, r5)     // Catch:{ Exception -> 0x0028 }
            java.lang.Object[] r2 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x0028 }
            org.telegram.SQLite.SQLiteCursor r0 = r1.queryFinalized(r7, r2)     // Catch:{ Exception -> 0x0028 }
            boolean r7 = r0.next()     // Catch:{ Exception -> 0x0028 }
            if (r7 == 0) goto L_0x0023
            r9[r8] = r4     // Catch:{ Exception -> 0x0028 }
        L_0x0023:
            if (r0 == 0) goto L_0x0031
            goto L_0x002e
        L_0x0026:
            r7 = move-exception
            goto L_0x0035
        L_0x0028:
            r7 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r7)     // Catch:{ all -> 0x0026 }
            if (r0 == 0) goto L_0x0031
        L_0x002e:
            r0.dispose()
        L_0x0031:
            r10.countDown()
            return
        L_0x0035:
            if (r0 == 0) goto L_0x003a
            r0.dispose()
        L_0x003a:
            throw r7
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$checkMessageByRandomId$88$MessagesStorage(long, boolean[], java.util.concurrent.CountDownLatch):void");
    }

    public boolean checkMessageId(long j, boolean z, int i) {
        boolean[] zArr = new boolean[1];
        CountDownLatch countDownLatch = new CountDownLatch(1);
        this.storageQueue.postRunnable(new Runnable(i, z, j, zArr, countDownLatch) {
            private final /* synthetic */ int f$1;
            private final /* synthetic */ boolean f$2;
            private final /* synthetic */ long f$3;
            private final /* synthetic */ boolean[] f$4;
            private final /* synthetic */ CountDownLatch f$5;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
                this.f$4 = r6;
                this.f$5 = r7;
            }

            public final void run() {
                MessagesStorage.this.lambda$checkMessageId$89$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5);
            }
        });
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return zArr[0];
    }

    /* JADX WARNING: Code restructure failed: missing block: B:13:0x003b, code lost:
        if (r6 == null) goto L_0x0040;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:14:0x003d, code lost:
        r6.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:15:0x0040, code lost:
        r11.countDown();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:16:0x0043, code lost:
        return;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:8:0x0032, code lost:
        if (r6 != null) goto L_0x003d;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$checkMessageId$89$MessagesStorage(int r6, boolean r7, long r8, boolean[] r10, java.util.concurrent.CountDownLatch r11) {
        /*
            r5 = this;
            long r0 = (long) r6
            if (r7 == 0) goto L_0x0008
            long r6 = -r8
            r2 = 32
            long r6 = r6 << r2
            long r0 = r0 | r6
        L_0x0008:
            r6 = 0
            org.telegram.SQLite.SQLiteDatabase r7 = r5.database     // Catch:{ Exception -> 0x0037 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x0037 }
            java.lang.String r3 = "SELECT mid FROM messages WHERE uid = %d AND mid = %d"
            r4 = 2
            java.lang.Object[] r4 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0037 }
            java.lang.Long r8 = java.lang.Long.valueOf(r8)     // Catch:{ Exception -> 0x0037 }
            r9 = 0
            r4[r9] = r8     // Catch:{ Exception -> 0x0037 }
            java.lang.Long r8 = java.lang.Long.valueOf(r0)     // Catch:{ Exception -> 0x0037 }
            r0 = 1
            r4[r0] = r8     // Catch:{ Exception -> 0x0037 }
            java.lang.String r8 = java.lang.String.format(r2, r3, r4)     // Catch:{ Exception -> 0x0037 }
            java.lang.Object[] r1 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x0037 }
            org.telegram.SQLite.SQLiteCursor r6 = r7.queryFinalized(r8, r1)     // Catch:{ Exception -> 0x0037 }
            boolean r7 = r6.next()     // Catch:{ Exception -> 0x0037 }
            if (r7 == 0) goto L_0x0032
            r10[r9] = r0     // Catch:{ Exception -> 0x0037 }
        L_0x0032:
            if (r6 == 0) goto L_0x0040
            goto L_0x003d
        L_0x0035:
            r7 = move-exception
            goto L_0x0044
        L_0x0037:
            r7 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r7)     // Catch:{ all -> 0x0035 }
            if (r6 == 0) goto L_0x0040
        L_0x003d:
            r6.dispose()
        L_0x0040:
            r11.countDown()
            return
        L_0x0044:
            if (r6 == 0) goto L_0x0049
            r6.dispose()
        L_0x0049:
            throw r7
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$checkMessageId$89$MessagesStorage(int, boolean, long, boolean[], java.util.concurrent.CountDownLatch):void");
    }

    public void getUnreadMention(long j, IntCallback intCallback) {
        this.storageQueue.postRunnable(new Runnable(j, intCallback) {
            private final /* synthetic */ long f$1;
            private final /* synthetic */ MessagesStorage.IntCallback f$2;

            {
                this.f$1 = r2;
                this.f$2 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$getUnreadMention$91$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    public /* synthetic */ void lambda$getUnreadMention$91$MessagesStorage(long j, IntCallback intCallback) {
        try {
            int i = 0;
            SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT MIN(mid) FROM messages WHERE uid = %d AND mention = 1 AND read_state IN(0, 1)", new Object[]{Long.valueOf(j)}), new Object[0]);
            if (queryFinalized.next()) {
                i = queryFinalized.intValue(0);
            }
            queryFinalized.dispose();
            AndroidUtilities.runOnUIThread(new Runnable(i) {
                private final /* synthetic */ int f$1;

                {
                    this.f$1 = r2;
                }

                public final void run() {
                    MessagesStorage.IntCallback.this.run(this.f$1);
                }
            });
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void getMessagesCount(long j, IntCallback intCallback) {
        this.storageQueue.postRunnable(new Runnable(j, intCallback) {
            private final /* synthetic */ long f$1;
            private final /* synthetic */ MessagesStorage.IntCallback f$2;

            {
                this.f$1 = r2;
                this.f$2 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$getMessagesCount$93$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    public /* synthetic */ void lambda$getMessagesCount$93$MessagesStorage(long j, IntCallback intCallback) {
        try {
            int i = 0;
            SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT COUNT(mid) FROM messages WHERE uid = %d", new Object[]{Long.valueOf(j)}), new Object[0]);
            if (queryFinalized.next()) {
                i = queryFinalized.intValue(0);
            }
            queryFinalized.dispose();
            AndroidUtilities.runOnUIThread(new Runnable(i) {
                private final /* synthetic */ int f$1;

                {
                    this.f$1 = r2;
                }

                public final void run() {
                    MessagesStorage.IntCallback.this.run(this.f$1);
                }
            });
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void getMessages(long j, int i, int i2, int i3, int i4, int i5, int i6, boolean z, boolean z2, int i7) {
        this.storageQueue.postRunnable(new Runnable(i, i2, z, j, z2, i6, i4, i3, i5, i7) {
            private final /* synthetic */ int f$1;
            private final /* synthetic */ int f$10;
            private final /* synthetic */ int f$2;
            private final /* synthetic */ boolean f$3;
            private final /* synthetic */ long f$4;
            private final /* synthetic */ boolean f$5;
            private final /* synthetic */ int f$6;
            private final /* synthetic */ int f$7;
            private final /* synthetic */ int f$8;
            private final /* synthetic */ int f$9;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
                this.f$4 = r5;
                this.f$5 = r7;
                this.f$6 = r8;
                this.f$7 = r9;
                this.f$8 = r10;
                this.f$9 = r11;
                this.f$10 = r12;
            }

            public final void run() {
                MessagesStorage.this.lambda$getMessages$95$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, this.f$6, this.f$7, this.f$8, this.f$9, this.f$10);
            }
        });
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v0, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v0, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v2, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v1, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v2, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v1, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v1, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v3, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v2, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v2, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v3, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v2, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v2, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v4, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v3, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v3, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v4, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v3, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v3, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v5, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v4, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v4, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v5, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v4, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v6, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v5, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v5, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v6, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v5, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v4, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v7, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v6, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v6, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v6, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v7, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v8, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v7, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v7, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v8, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v7, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v5, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v9, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v8, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v8, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v8, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v9, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v1, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v0, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v7, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v10, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v9, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v10, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v9, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v11, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v10, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v8, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v12, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v11, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v12, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v12, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v9, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v13, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v13, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v13, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v10, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v6, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v7, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v16, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v8, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v9, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v19, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v10, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v16, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v17, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v18, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v11, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v15, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v11, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v10, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v21, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r39v1, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v9, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v12, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v16, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v12, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v11, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v22, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v20, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v19, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v0, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v23, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v24, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v12, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v1, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v6, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v26, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v13, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v21, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v33, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v14, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v27, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v15, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v13, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v5, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v11, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v34, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v24, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v28, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v22, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v35, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v36, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v23, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v22, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v4, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v25, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v37, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v26, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v18, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v8, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v9, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v24, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v23, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v5, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v16, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v25, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v24, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v6, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v17, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v26, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v25, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v7, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v19, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v16, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v13, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v19, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v27, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v26, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v8, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v28, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v27, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v9, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v28, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v29, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v29, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v30, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v30, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v10, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v20, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v17, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v14, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v20, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v31, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v31, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v11, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v32, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v32, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v12, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v33, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v33, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v34, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v23, resolved type: org.telegram.tgnet.NativeByteBuffer} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v35, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v36, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v14, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v40, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v21, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v37, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v36, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v15, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v38, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v37, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r50v28, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v16, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v41, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v22, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r27v3, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r30v1, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v25, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v43, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r30v2, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r30v3, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r30v4, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r30v5, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r30v6, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v60, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v50, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v61, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v15, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v16, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v21, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v17, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v32, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v63, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v20, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v18, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v33, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v64, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v21, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v34, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v19, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v35, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v20, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v25, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v21, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v37, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v36, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v53, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v67, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v24, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v39, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v1, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v44, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v25, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v20, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v18, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v30, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v31, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v38, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v38, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v54, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v68, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v26, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v39, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v39, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v55, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v69, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v27, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v2, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v45, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v40, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v56, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v70, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v28, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v40, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v41, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v57, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v71, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v29, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v41, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v72, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v30, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v42, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v58, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v73, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v31, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v43, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v59, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v43, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v75, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v34, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v44, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v42, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v60, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v76, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v35, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v45, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v43, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v61, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v3, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v46, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v46, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v32, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v23, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v38, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v26, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v33, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v44, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v85, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v39, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v46, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v62, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v86, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v40, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v47, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v63, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v4, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v48, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v47, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v34, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v87, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v41, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v48, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v45, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v64, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v5, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v49, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v48, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v35, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v88, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v42, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v49, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v46, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v65, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v6, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v50, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v78, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v7, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v51, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v49, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v27, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v36, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v50, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v52, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v93, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v47, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v45, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v24, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v26, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v94, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v48, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v46, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v51, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v68, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v25, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v27, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v51, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v52, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v53, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v8, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v39, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v53, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v54, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v56, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v9, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v54, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v55, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v56, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v10, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v58, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v59, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v48, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v59, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v40, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v65, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v40, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v51, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v41, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v50, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v54, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v68, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v41, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v42, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v57, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v11, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v71, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v101, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v69, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v51, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v52, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v102, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v70, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v72, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v73, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v103, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v71, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v52, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v53, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v104, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v72, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v74, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v64, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v106, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v76, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v75, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v107, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v77, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v76, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v61, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v54, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v53, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v78, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v80, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v26, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v28, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v111, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v79, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v81, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v54, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v55, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v82, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v80, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v56, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v55, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v81, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v83, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v27, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v29, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v112, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v82, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v84, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v56, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v57, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v85, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v83, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v12, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v60, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v86, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v84, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v87, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v85, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v68, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v91, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v87, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v59, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v58, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v92, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v88, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v60, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v59, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v13, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v63, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v30, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v61, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v89, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v115, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v94, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v60, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v28, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v31, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v62, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v90, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v116, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v95, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v61, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v29, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v14, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r30v7, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v65, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v96, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v96, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v43, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v117, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v97, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v63, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v33, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v118, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v98, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v64, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v34, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v36, resolved type: org.telegram.SQLite.SQLiteDatabase} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v37, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v35, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v30, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v66, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v93, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v120, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v103, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v64, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v31, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v121, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v104, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v36, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v37, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v32, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v68, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v95, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v122, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v105, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v65, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v33, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v123, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v106, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v38, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v41, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v34, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v124, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v107, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v42, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v35, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v125, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v108, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v75, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v36, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v72, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v128, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v111, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v37, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v129, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v112, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v43, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v38, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v130, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v113, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v44, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r39v9, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v39, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v74, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v131, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v114, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v40, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v40, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v132, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v115, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v39, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v45, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v41, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v133, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v116, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v46, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v117, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v136, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v47, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v40, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v66, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v42, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v44, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v41, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v42, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v80, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v44, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v46, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r44v47, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v48, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v42, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v118, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v149, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v43, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v119, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v150, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v53, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v54, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r43v55, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v120, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v168, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v169, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v121, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v170, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v153, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v44, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v122, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v42, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v80, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r39v19, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v171, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v154, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v45, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v123, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v43, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v81, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v142, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v129, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v143, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v130, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v184, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v185, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v131, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v150, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v132, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v186, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v133, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v166, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v134, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v46, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v167, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v135, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v47, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v136, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v168, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v137, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v48, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v46, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v84, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v169, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v138, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v49, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v47, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v85, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v170, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v139, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v50, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v171, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v140, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v51, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v142, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v80, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v64, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v45, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v112, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v174, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v146, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v52, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v48, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v86, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v175, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v147, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v53, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v49, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v87, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v152, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v81, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v65, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v46, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v196, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v178, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v54, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v51, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v197, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v179, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v55, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v52, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v212, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v195, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v117, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v54, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v213, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v196, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v118, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v55, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v215, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v56, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v56, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v91, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v199, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v216, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v57, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v57, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v92, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v200, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v58, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v121, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v217, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v203, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v15, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v59, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v122, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v218, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v204, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v60, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v123, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v219, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v205, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v16, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v61, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v124, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v220, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v206, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v48, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v207, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v192, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v66, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r30v8, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v17, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v18, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v19, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v139, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v221, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v208, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v125, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v62, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v19, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v20, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v140, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v222, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v209, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v126, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v63, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v20, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v21, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v64, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v141, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v52, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v67, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v210, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v53, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r30v10, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v223, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v211, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v224, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v212, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v54, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v68, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v213, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v214, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r30v11, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v196, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v55, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v70, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v215, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v56, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v146, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v22, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v22, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v67, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v23, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v68, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v94, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v147, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v69, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v129, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v135, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v225, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v95, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v58, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v23, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v216, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v226, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v130, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v70, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v136, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v217, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v24, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v71, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v131, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v137, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v227, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v96, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v59, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v25, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v218, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v228, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v132, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v72, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v138, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v26, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v27, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v220, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v61, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v213, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v64, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v73, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v214, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v215, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v28, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v75, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v221, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v65, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v156, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v29, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v222, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v30, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v223, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v224, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v225, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v221, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v31, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v76, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v228, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v68, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v229, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v33, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v232, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v225, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v233, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v226, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v227, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v235, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v34, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v236, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v35, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v36, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v237, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v229, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v37, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v238, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v230, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v38, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v231, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v139, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v78, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v139, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v39, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v40, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v232, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v140, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v79, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v140, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v41, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v42, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v43, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v158, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v73, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v159, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v160, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v243, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v233, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v144, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v80, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v244, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v234, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v81, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v44, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v161, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v24, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v235, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v143, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v236, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v144, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v237, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v145, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v147, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v238, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v146, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v148, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v239, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v147, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v149, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v240, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v148, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v150, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v110, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v162, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v26, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r22v27, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v163, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v152, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v111, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v149, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v241, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v60, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v153, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v112, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v150, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v242, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v151, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v243, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v113, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v154, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v244, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v152, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v155, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v114, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v153, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v245, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v61, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v156, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v115, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v154, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v246, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v155, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v247, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v116, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v157, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v248, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v156, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v158, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v157, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v249, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v117, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v159, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v158, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v250, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v118, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v160, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v159, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v251, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v119, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v161, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v160, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v252, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v120, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r30v26, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v270, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v253, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v161, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v162, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v84, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v121, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v62, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v254, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v162, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v163, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v85, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v122, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v63, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v78, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r34v45, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v273, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v245, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v255, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v163, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v256, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v164, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v257, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v165, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v164, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v258, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v166, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v165, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v259, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v167, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v166, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v260, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v168, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v167, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v86, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v64, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v168, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v123, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v169, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v261, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v246, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v65, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v169, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v124, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v170, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v262, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v87, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v88, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v66, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v170, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v125, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v171, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v263, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v247, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v67, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v171, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v126, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v172, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v264, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v89, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v265, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v173, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v127, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v172, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v68, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v266, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v174, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v128, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r13v173, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v69, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v176, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v129, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v14, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v90, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v248, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v267, resolved type: int} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v70, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v71, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v72, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v73, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v296, resolved type: char} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v297, resolved type: char} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v302, resolved type: char} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v303, resolved type: char} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v304, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v305, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v306, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v307, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v308, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v309, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v311, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v312, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v313, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v314, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v315, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v316, resolved type: org.telegram.tgnet.TLRPC$TL_messages_messages} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v74, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v75, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v76, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v132, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v77, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v78, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v79, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v80, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v81, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v82, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v83, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v84, resolved type: boolean} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v143, resolved type: boolean} */
    /* JADX WARNING: type inference failed for: r18v3 */
    /* JADX WARNING: type inference failed for: r43v51 */
    /* JADX WARNING: type inference failed for: r8v93 */
    /* JADX WARNING: type inference failed for: r8v97 */
    /* JADX WARNING: type inference failed for: r8v141 */
    /* JADX WARNING: type inference failed for: r8v142 */
    /* JADX WARNING: Code restructure failed: missing block: B:1014:0x1730, code lost:
        r0 = th;
        r3 = r3;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:1015:0x1733, code lost:
        r0 = e;
        r3 = r3;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:835:0x13ee, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:837:0x13f2, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:838:0x13f3, code lost:
        r29 = r5;
        r28 = r7;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:860:0x1468, code lost:
        r0 = th;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:861:0x1469, code lost:
        r43 = r4;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:867:0x1488, code lost:
        r0 = e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:868:0x1489, code lost:
        r43 = r4;
     */
    /* JADX WARNING: Failed to process nested try/catch */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:1014:0x1730 A[ExcHandler: all (th java.lang.Throwable), PHI: r3 r22 r43 r44 r50 
      PHI: (r3v17 org.telegram.tgnet.TLRPC$TL_messages_messages) = (r3v297 char), (r3v303 char), (r3v305 org.telegram.tgnet.TLRPC$TL_messages_messages), (r3v307 org.telegram.tgnet.TLRPC$TL_messages_messages), (r3v309 org.telegram.tgnet.TLRPC$TL_messages_messages), (r3v311 org.telegram.tgnet.TLRPC$TL_messages_messages), (r3v313 org.telegram.tgnet.TLRPC$TL_messages_messages), (r3v314 org.telegram.tgnet.TLRPC$TL_messages_messages), (r3v315 org.telegram.tgnet.TLRPC$TL_messages_messages), (r3v316 org.telegram.tgnet.TLRPC$TL_messages_messages) binds: [B:719:0x11d0, B:725:0x11e0, B:728:0x11eb, B:752:0x1264, B:777:0x12b3, B:824:0x13bc, B:841:0x13fa, B:825:?, B:827:0x13c7, B:830:0x13d2] A[DONT_GENERATE, DONT_INLINE]
      PHI: (r22v6 int) = (r22v4 int), (r22v4 int), (r22v4 int), (r22v16 int), (r22v16 int), (r22v16 int), (r22v16 int), (r22v16 int), (r22v16 int), (r22v16 int) binds: [B:719:0x11d0, B:725:0x11e0, B:728:0x11eb, B:752:0x1264, B:777:0x12b3, B:824:0x13bc, B:841:0x13fa, B:825:?, B:827:0x13c7, B:830:0x13d2] A[DONT_GENERATE, DONT_INLINE]
      PHI: (r43v24 int) = (r43v22 int), (r43v38 int), (r43v38 int), (r43v38 int), (r43v38 int), (r43v38 int), (r43v38 int), (r43v38 int), (r43v38 int), (r43v38 int) binds: [B:719:0x11d0, B:725:0x11e0, B:728:0x11eb, B:752:0x1264, B:777:0x12b3, B:824:0x13bc, B:841:0x13fa, B:825:?, B:827:0x13c7, B:830:0x13d2] A[DONT_GENERATE, DONT_INLINE]
      PHI: (r44v25 int) = (r44v23 int), (r44v23 int), (r44v37 int), (r44v37 int), (r44v37 int), (r44v37 int), (r44v37 int), (r44v37 int), (r44v37 int), (r44v37 int) binds: [B:719:0x11d0, B:725:0x11e0, B:728:0x11eb, B:752:0x1264, B:777:0x12b3, B:824:0x13bc, B:841:0x13fa, B:825:?, B:827:0x13c7, B:830:0x13d2] A[DONT_GENERATE, DONT_INLINE]
      PHI: (r50v18 int) = (r50v16 int), (r50v16 int), (r50v16 int), (r50v28 int), (r50v28 int), (r50v28 int), (r50v28 int), (r50v28 int), (r50v28 int), (r50v28 int) binds: [B:719:0x11d0, B:725:0x11e0, B:728:0x11eb, B:752:0x1264, B:777:0x12b3, B:824:0x13bc, B:841:0x13fa, B:825:?, B:827:0x13c7, B:830:0x13d2] A[DONT_GENERATE, DONT_INLINE], Splitter:B:719:0x11d0] */
    /* JADX WARNING: Removed duplicated region for block: B:497:0x0ba6  */
    /* JADX WARNING: Removed duplicated region for block: B:498:0x0ba8  */
    /* JADX WARNING: Removed duplicated region for block: B:500:0x0bab A[SYNTHETIC, Splitter:B:500:0x0bab] */
    /* JADX WARNING: Removed duplicated region for block: B:516:0x0bfc  */
    /* JADX WARNING: Removed duplicated region for block: B:518:0x0CLASSNAME A[SYNTHETIC, Splitter:B:518:0x0CLASSNAME] */
    /* JADX WARNING: Removed duplicated region for block: B:554:0x0d33 A[Catch:{ Exception -> 0x0db1, all -> 0x0daf }] */
    /* JADX WARNING: Removed duplicated region for block: B:718:0x11ce  */
    /* JADX WARNING: Removed duplicated region for block: B:818:0x13a7 A[Catch:{ Exception -> 0x1733, all -> 0x1730 }] */
    /* JADX WARNING: Removed duplicated region for block: B:821:0x13b5 A[Catch:{ Exception -> 0x1733, all -> 0x1730 }] */
    /* JADX WARNING: Removed duplicated region for block: B:824:0x13bc A[SYNTHETIC, Splitter:B:824:0x13bc] */
    /* JADX WARNING: Removed duplicated region for block: B:843:0x13fe A[Catch:{ Exception -> 0x1733, all -> 0x1730 }] */
    /* JADX WARNING: Removed duplicated region for block: B:874:0x14a8 A[Catch:{ Exception -> 0x1733, all -> 0x1730 }] */
    /* JADX WARNING: Removed duplicated region for block: B:877:0x14c9 A[Catch:{ Exception -> 0x1733, all -> 0x1730 }] */
    /* JADX WARNING: Removed duplicated region for block: B:899:0x1509 A[Catch:{ Exception -> 0x1733, all -> 0x1730 }] */
    /* JADX WARNING: Removed duplicated region for block: B:930:0x15a3 A[SYNTHETIC, Splitter:B:930:0x15a3] */
    /* JADX WARNING: Removed duplicated region for block: B:966:0x165f  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$getMessages$95$MessagesStorage(int r43, int r44, boolean r45, long r46, boolean r48, int r49, int r50, int r51, int r52, int r53) {
        /*
            r42 = this;
            r1 = r42
            r2 = r43
            r3 = r44
            r4 = r46
            r15 = r49
            org.telegram.tgnet.TLRPC$TL_messages_messages r6 = new org.telegram.tgnet.TLRPC$TL_messages_messages
            r6.<init>()
            org.telegram.messenger.UserConfig r7 = r42.getUserConfig()
            int r7 = r7.clientUserId
            long r8 = (long) r3
            if (r45 == 0) goto L_0x001b
            int r11 = (int) r4
            int r11 = -r11
            goto L_0x001c
        L_0x001b:
            r11 = 0
        L_0x001c:
            r12 = 32
            r13 = 0
            int r16 = (r8 > r13 ? 1 : (r8 == r13 ? 0 : -1))
            if (r16 == 0) goto L_0x0029
            if (r11 == 0) goto L_0x0029
            long r13 = (long) r11
            long r13 = r13 << r12
            long r8 = r8 | r13
        L_0x0029:
            r13 = r8
            r8 = 777000(0xbdb28, double:3.83889E-318)
            int r19 = (r4 > r8 ? 1 : (r4 == r8 ? 0 : -1))
            if (r19 != 0) goto L_0x0034
            r8 = 10
            goto L_0x0035
        L_0x0034:
            r8 = 1
        L_0x0035:
            java.util.ArrayList r9 = new java.util.ArrayList     // Catch:{ Exception -> 0x1788, all -> 0x1776 }
            r9.<init>()     // Catch:{ Exception -> 0x1788, all -> 0x1776 }
            java.util.ArrayList r10 = new java.util.ArrayList     // Catch:{ Exception -> 0x1788, all -> 0x1776 }
            r10.<init>()     // Catch:{ Exception -> 0x1788, all -> 0x1776 }
            java.util.ArrayList r12 = new java.util.ArrayList     // Catch:{ Exception -> 0x1788, all -> 0x1776 }
            r12.<init>()     // Catch:{ Exception -> 0x1788, all -> 0x1776 }
            r21 = r13
            android.util.SparseArray r13 = new android.util.SparseArray     // Catch:{ Exception -> 0x1788, all -> 0x1776 }
            r13.<init>()     // Catch:{ Exception -> 0x1788, all -> 0x1776 }
            android.util.LongSparseArray r14 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x1788, all -> 0x1776 }
            r14.<init>()     // Catch:{ Exception -> 0x1788, all -> 0x1776 }
            r23 = -2147483648(0xfffffffvar_, float:-0.0)
            if (r48 == 0) goto L_0x01ec
            org.telegram.SQLite.SQLiteDatabase r8 = r1.database     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            java.util.Locale r11 = java.util.Locale.US     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            java.lang.String r3 = "SELECT m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.ttl FROM scheduled_messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d ORDER BY m.date DESC"
            r2 = 1
            java.lang.Object[] r1 = new java.lang.Object[r2]     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            java.lang.Long r2 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            r15 = 0
            r1[r15] = r2     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            java.lang.String r1 = java.lang.String.format(r11, r3, r1)     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            java.lang.Object[] r2 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            org.telegram.SQLite.SQLiteCursor r1 = r8.queryFinalized(r1, r2)     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
        L_0x006e:
            boolean r2 = r1.next()     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            if (r2 == 0) goto L_0x01a0
            org.telegram.tgnet.NativeByteBuffer r2 = r1.byteBufferValue(r15)     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            if (r2 == 0) goto L_0x0197
            int r3 = r2.readInt32(r15)     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            org.telegram.tgnet.TLRPC$Message r3 = org.telegram.tgnet.TLRPC.Message.TLdeserialize(r2, r3, r15)     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            r8 = 1
            int r11 = r1.intValue(r8)     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            r3.send_state = r11     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            r8 = 2
            int r11 = r1.intValue(r8)     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            r3.id = r11     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            int r8 = r3.id     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            if (r8 <= 0) goto L_0x00a0
            int r8 = r3.send_state     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            if (r8 == 0) goto L_0x00a0
            int r8 = r3.send_state     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            r11 = 3
            if (r8 == r11) goto L_0x00a0
            r8 = 0
            r3.send_state = r8     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
        L_0x00a0:
            r26 = r14
            long r14 = (long) r7     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            int r8 = (r4 > r14 ? 1 : (r4 == r14 ? 0 : -1))
            if (r8 != 0) goto L_0x00ae
            r8 = 1
            r3.out = r8     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            r8 = 0
            r3.unread = r8     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            goto L_0x00b1
        L_0x00ae:
            r8 = 1
            r3.unread = r8     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
        L_0x00b1:
            r3.readAttachPath(r2, r7)     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            r2.reuse()     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            r2 = 3
            int r8 = r1.intValue(r2)     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            r3.date = r8     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            r3.dialog_id = r4     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            int r2 = r3.ttl     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            if (r2 != 0) goto L_0x00cb
            r2 = 6
            int r8 = r1.intValue(r2)     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            r3.ttl = r8     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
        L_0x00cb:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r2 = r6.messages     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            r2.add(r3)     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            addUsersAndChatsFromMessage(r3, r9, r10)     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            int r2 = r3.reply_to_msg_id     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            if (r2 != 0) goto L_0x00e6
            long r14 = r3.reply_to_random_id     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            r16 = 0
            int r2 = (r14 > r16 ? 1 : (r14 == r16 ? 0 : -1))
            if (r2 == 0) goto L_0x00e0
            goto L_0x00e6
        L_0x00e0:
            r27 = r9
        L_0x00e2:
            r2 = r26
            goto L_0x019a
        L_0x00e6:
            r2 = 5
            boolean r8 = r1.isNull(r2)     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            if (r8 != 0) goto L_0x011d
            org.telegram.tgnet.NativeByteBuffer r8 = r1.byteBufferValue(r2)     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            if (r8 == 0) goto L_0x011d
            r2 = 0
            int r11 = r8.readInt32(r2)     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            org.telegram.tgnet.TLRPC$Message r11 = org.telegram.tgnet.TLRPC.Message.TLdeserialize(r8, r11, r2)     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            r3.replyMessage = r11     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            org.telegram.tgnet.TLRPC$Message r2 = r3.replyMessage     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            r2.readAttachPath(r8, r7)     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            r8.reuse()     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            org.telegram.tgnet.TLRPC$Message r2 = r3.replyMessage     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            if (r2 == 0) goto L_0x011d
            boolean r2 = org.telegram.messenger.MessageObject.isMegagroup(r3)     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            if (r2 == 0) goto L_0x0118
            org.telegram.tgnet.TLRPC$Message r2 = r3.replyMessage     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            int r8 = r2.flags     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            r8 = r8 | r23
            r2.flags = r8     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
        L_0x0118:
            org.telegram.tgnet.TLRPC$Message r2 = r3.replyMessage     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            addUsersAndChatsFromMessage(r2, r9, r10)     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
        L_0x011d:
            org.telegram.tgnet.TLRPC$Message r2 = r3.replyMessage     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            if (r2 != 0) goto L_0x00e0
            int r2 = r3.reply_to_msg_id     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            if (r2 == 0) goto L_0x0166
            int r2 = r3.reply_to_msg_id     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            long r14 = (long) r2     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            org.telegram.tgnet.TLRPC$Peer r2 = r3.to_id     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            int r2 = r2.channel_id     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            if (r2 == 0) goto L_0x013a
            org.telegram.tgnet.TLRPC$Peer r2 = r3.to_id     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            int r2 = r2.channel_id     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            r27 = r9
            long r8 = (long) r2     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            r2 = 32
            long r8 = r8 << r2
            long r14 = r14 | r8
            goto L_0x013c
        L_0x013a:
            r27 = r9
        L_0x013c:
            java.lang.Long r2 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            boolean r2 = r12.contains(r2)     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            if (r2 != 0) goto L_0x014d
            java.lang.Long r2 = java.lang.Long.valueOf(r14)     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            r12.add(r2)     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
        L_0x014d:
            int r2 = r3.reply_to_msg_id     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            java.lang.Object r2 = r13.get(r2)     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            java.util.ArrayList r2 = (java.util.ArrayList) r2     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            if (r2 != 0) goto L_0x0161
            java.util.ArrayList r2 = new java.util.ArrayList     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            r2.<init>()     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            int r8 = r3.reply_to_msg_id     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            r13.put(r8, r2)     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
        L_0x0161:
            r2.add(r3)     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            goto L_0x00e2
        L_0x0166:
            r27 = r9
            long r8 = r3.reply_to_random_id     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            java.lang.Long r2 = java.lang.Long.valueOf(r8)     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            boolean r2 = r12.contains(r2)     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            if (r2 != 0) goto L_0x017d
            long r8 = r3.reply_to_random_id     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            java.lang.Long r2 = java.lang.Long.valueOf(r8)     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            r12.add(r2)     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
        L_0x017d:
            long r8 = r3.reply_to_random_id     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            r2 = r26
            java.lang.Object r8 = r2.get(r8)     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            java.util.ArrayList r8 = (java.util.ArrayList) r8     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            if (r8 != 0) goto L_0x0193
            java.util.ArrayList r8 = new java.util.ArrayList     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            r8.<init>()     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            long r14 = r3.reply_to_random_id     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            r2.put(r14, r8)     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
        L_0x0193:
            r8.add(r3)     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            goto L_0x019a
        L_0x0197:
            r27 = r9
            r2 = r14
        L_0x019a:
            r14 = r2
            r9 = r27
            r15 = 0
            goto L_0x006e
        L_0x01a0:
            r27 = r9
            r2 = r14
            r1.dispose()     // Catch:{ Exception -> 0x01d9, all -> 0x01c6 }
            r14 = r42
            r15 = r49
            r4 = r2
            r3 = r6
            r29 = r7
            r32 = r12
            r36 = r13
            r33 = r27
            r1 = 0
            r11 = 0
            r12 = 0
            r18 = 1
            r21 = 0
            r22 = 0
            r35 = 0
            r6 = r43
            r7 = r44
            r13 = r10
            goto L_0x1541
        L_0x01c6:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r3 = r6
            r11 = 0
            r12 = 0
            r13 = 0
            r14 = 0
            r17 = 1
        L_0x01d1:
            r20 = 0
            r21 = 0
        L_0x01d5:
            r6 = r43
            goto L_0x17c4
        L_0x01d9:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r3 = r6
            r11 = 0
            r12 = 0
            r13 = 0
            r14 = 0
            r17 = 1
        L_0x01e4:
            r20 = 0
            r21 = 0
        L_0x01e8:
            r6 = r43
            goto L_0x1799
        L_0x01ec:
            r27 = r9
            r2 = r14
            int r1 = (int) r4
            if (r1 == 0) goto L_0x0e4e
            java.lang.String r9 = "SELECT inbox_max, unread_count, date, unread_count_i FROM dialogs WHERE did = "
            r15 = r49
            r14 = 3
            if (r15 != r14) goto L_0x02c9
            if (r50 != 0) goto L_0x02c9
            r14 = r42
            org.telegram.SQLite.SQLiteDatabase r8 = r14.database     // Catch:{ Exception -> 0x02bc, all -> 0x02af }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x02bc, all -> 0x02af }
            r3.<init>()     // Catch:{ Exception -> 0x02bc, all -> 0x02af }
            r3.append(r9)     // Catch:{ Exception -> 0x02bc, all -> 0x02af }
            r3.append(r4)     // Catch:{ Exception -> 0x02bc, all -> 0x02af }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x02bc, all -> 0x02af }
            r28 = r2
            r9 = 0
            java.lang.Object[] r2 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x02bc, all -> 0x02af }
            org.telegram.SQLite.SQLiteCursor r2 = r8.queryFinalized(r3, r2)     // Catch:{ Exception -> 0x02bc, all -> 0x02af }
            boolean r3 = r2.next()     // Catch:{ Exception -> 0x02bc, all -> 0x02af }
            if (r3 == 0) goto L_0x026e
            int r3 = r2.intValue(r9)     // Catch:{ Exception -> 0x02bc, all -> 0x02af }
            r8 = 1
            int r3 = r3 + r8
            int r9 = r2.intValue(r8)     // Catch:{ Exception -> 0x0266, all -> 0x025e }
            r8 = 2
            int r29 = r2.intValue(r8)     // Catch:{ Exception -> 0x0254, all -> 0x024a }
            r8 = 3
            int r30 = r2.intValue(r8)     // Catch:{ Exception -> 0x023e, all -> 0x0232 }
            goto L_0x0274
        L_0x0232:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r11 = r3
            r3 = r6
            r13 = r9
            r14 = r29
        L_0x023b:
            r12 = 0
            goto L_0x02b8
        L_0x023e:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r11 = r3
            r3 = r6
            r13 = r9
            r14 = r29
        L_0x0247:
            r12 = 0
            goto L_0x02c5
        L_0x024a:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r11 = r3
            r3 = r6
            r13 = r9
        L_0x0251:
            r12 = 0
            goto L_0x02b7
        L_0x0254:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r11 = r3
            r3 = r6
            r13 = r9
        L_0x025b:
            r12 = 0
            goto L_0x02c4
        L_0x025e:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r11 = r3
            r3 = r6
            goto L_0x02b5
        L_0x0266:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r11 = r3
            r3 = r6
            goto L_0x02c2
        L_0x026e:
            r3 = 0
            r9 = 0
            r29 = 0
            r30 = 0
        L_0x0274:
            r2.dispose()     // Catch:{ Exception -> 0x029d, all -> 0x028b }
            r2 = r43
            r34 = r3
            r37 = r6
            r36 = r10
            r32 = r12
            r35 = r29
            r3 = 0
            r10 = 0
            r6 = r44
            r29 = r13
            goto L_0x0642
        L_0x028b:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r11 = r3
            r3 = r6
            r13 = r9
            r14 = r29
            r21 = r30
            r12 = 0
            r17 = 0
            r20 = 0
            goto L_0x01d5
        L_0x029d:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r11 = r3
            r3 = r6
            r13 = r9
            r14 = r29
            r21 = r30
            r12 = 0
            r17 = 0
            r20 = 0
            goto L_0x01e8
        L_0x02af:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r3 = r6
            r11 = 0
        L_0x02b5:
            r12 = 0
            r13 = 0
        L_0x02b7:
            r14 = 0
        L_0x02b8:
            r17 = 0
            goto L_0x01d1
        L_0x02bc:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r3 = r6
            r11 = 0
        L_0x02c2:
            r12 = 0
            r13 = 0
        L_0x02c4:
            r14 = 0
        L_0x02c5:
            r17 = 0
            goto L_0x01e4
        L_0x02c9:
            r14 = r42
            r28 = r2
            r2 = 1
            if (r15 == r2) goto L_0x062d
            r2 = 3
            if (r15 == r2) goto L_0x062d
            r2 = 4
            if (r15 == r2) goto L_0x062d
            if (r50 != 0) goto L_0x062d
            r2 = 2
            if (r15 != r2) goto L_0x05c2
            org.telegram.SQLite.SQLiteDatabase r2 = r14.database     // Catch:{ Exception -> 0x02bc, all -> 0x02af }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x02bc, all -> 0x02af }
            r3.<init>()     // Catch:{ Exception -> 0x02bc, all -> 0x02af }
            r3.append(r9)     // Catch:{ Exception -> 0x02bc, all -> 0x02af }
            r3.append(r4)     // Catch:{ Exception -> 0x02bc, all -> 0x02af }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x02bc, all -> 0x02af }
            r29 = r13
            r9 = 0
            java.lang.Object[] r13 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x02bc, all -> 0x02af }
            org.telegram.SQLite.SQLiteCursor r2 = r2.queryFinalized(r3, r13)     // Catch:{ Exception -> 0x02bc, all -> 0x02af }
            boolean r3 = r2.next()     // Catch:{ Exception -> 0x02bc, all -> 0x02af }
            if (r3 == 0) goto L_0x0386
            int r3 = r2.intValue(r9)     // Catch:{ Exception -> 0x02bc, all -> 0x02af }
            r9 = r12
            long r12 = (long) r3
            r21 = r3
            r3 = 1
            int r22 = r2.intValue(r3)     // Catch:{ Exception -> 0x037d, all -> 0x0374 }
            r3 = 2
            int r30 = r2.intValue(r3)     // Catch:{ Exception -> 0x0369, all -> 0x035e }
            r3 = 3
            int r31 = r2.intValue(r3)     // Catch:{ Exception -> 0x0351, all -> 0x0344 }
            r16 = 0
            int r3 = (r12 > r16 ? 1 : (r12 == r16 ? 0 : -1))
            if (r3 == 0) goto L_0x0324
            if (r11 == 0) goto L_0x0324
            r32 = r9
            r3 = r10
            long r9 = (long) r11
            r18 = 32
            long r9 = r9 << r18
            long r9 = r9 | r12
            goto L_0x0328
        L_0x0324:
            r32 = r9
            r3 = r10
            r9 = r12
        L_0x0328:
            long r12 = (long) r7
            int r33 = (r4 > r12 ? 1 : (r4 == r12 ? 0 : -1))
            r12 = r21
            r13 = r30
            if (r33 != 0) goto L_0x0339
            r22 = r31
            r30 = r9
            r9 = 1
            r10 = 0
            goto L_0x0393
        L_0x0339:
            r40 = r9
            r10 = r22
            r22 = r31
            r9 = 1
            r30 = r40
            goto L_0x0393
        L_0x0344:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r3 = r6
            r11 = r21
            r13 = r22
            r14 = r30
            goto L_0x023b
        L_0x0351:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r3 = r6
            r11 = r21
            r13 = r22
            r14 = r30
            goto L_0x0247
        L_0x035e:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r3 = r6
            r11 = r21
            r13 = r22
            goto L_0x0251
        L_0x0369:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r3 = r6
            r11 = r21
            r13 = r22
            goto L_0x025b
        L_0x0374:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r3 = r6
            r11 = r21
            goto L_0x02b5
        L_0x037d:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r3 = r6
            r11 = r21
            goto L_0x02c2
        L_0x0386:
            r3 = r10
            r32 = r12
            r30 = r21
            r9 = 0
            r10 = 0
            r12 = 0
            r13 = 0
            r22 = 0
            r21 = r44
        L_0x0393:
            r2.dispose()     // Catch:{ Exception -> 0x05a5, all -> 0x0588 }
            if (r9 != 0) goto L_0x046d
            org.telegram.SQLite.SQLiteDatabase r2 = r14.database     // Catch:{ Exception -> 0x0457, all -> 0x0441 }
            r33 = r9
            java.util.Locale r9 = java.util.Locale.US     // Catch:{ Exception -> 0x043f, all -> 0x043d }
            r34 = r12
            java.lang.String r12 = "SELECT min(mid), max(date) FROM messages WHERE uid = %d AND out = 0 AND read_state IN(0,2) AND mid > 0"
            r36 = r3
            r35 = r13
            r13 = 1
            java.lang.Object[] r3 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0437, all -> 0x0435 }
            java.lang.Long r13 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x0437, all -> 0x0435 }
            r37 = r6
            r6 = 0
            r3[r6] = r13     // Catch:{ Exception -> 0x042d, all -> 0x0425 }
            java.lang.String r3 = java.lang.String.format(r9, r12, r3)     // Catch:{ Exception -> 0x042d, all -> 0x0425 }
            java.lang.Object[] r9 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x042d, all -> 0x0425 }
            org.telegram.SQLite.SQLiteCursor r2 = r2.queryFinalized(r3, r9)     // Catch:{ Exception -> 0x042d, all -> 0x0425 }
            boolean r3 = r2.next()     // Catch:{ Exception -> 0x042d, all -> 0x0425 }
            if (r3 == 0) goto L_0x03ec
            int r3 = r2.intValue(r6)     // Catch:{ Exception -> 0x042d, all -> 0x0425 }
            r6 = 1
            int r9 = r2.intValue(r6)     // Catch:{ Exception -> 0x03de, all -> 0x03d0 }
            r34 = r3
            r35 = r9
            goto L_0x03ec
        L_0x03d0:
            r0 = move-exception
            r6 = r43
            r7 = r44
            r1 = r0
            r11 = r3
            r13 = r10
            r21 = r22
            r20 = r33
            goto L_0x0615
        L_0x03de:
            r0 = move-exception
            r6 = r43
            r7 = r44
            r1 = r0
            r11 = r3
            r13 = r10
            r21 = r22
            r20 = r33
            goto L_0x0627
        L_0x03ec:
            r2.dispose()     // Catch:{ Exception -> 0x042d, all -> 0x0425 }
            if (r34 == 0) goto L_0x0421
            org.telegram.SQLite.SQLiteDatabase r2 = r14.database     // Catch:{ Exception -> 0x042d, all -> 0x0425 }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x042d, all -> 0x0425 }
            java.lang.String r6 = "SELECT COUNT(*) FROM messages WHERE uid = %d AND mid >= %d AND out = 0 AND read_state IN(0,2)"
            r9 = 2
            java.lang.Object[] r12 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x042d, all -> 0x0425 }
            java.lang.Long r9 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x042d, all -> 0x0425 }
            r13 = 0
            r12[r13] = r9     // Catch:{ Exception -> 0x042d, all -> 0x0425 }
            java.lang.Integer r9 = java.lang.Integer.valueOf(r34)     // Catch:{ Exception -> 0x042d, all -> 0x0425 }
            r19 = 1
            r12[r19] = r9     // Catch:{ Exception -> 0x042d, all -> 0x0425 }
            java.lang.String r3 = java.lang.String.format(r3, r6, r12)     // Catch:{ Exception -> 0x042d, all -> 0x0425 }
            java.lang.Object[] r6 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x042d, all -> 0x0425 }
            org.telegram.SQLite.SQLiteCursor r2 = r2.queryFinalized(r3, r6)     // Catch:{ Exception -> 0x042d, all -> 0x0425 }
            boolean r3 = r2.next()     // Catch:{ Exception -> 0x042d, all -> 0x0425 }
            if (r3 == 0) goto L_0x041e
            int r3 = r2.intValue(r13)     // Catch:{ Exception -> 0x042d, all -> 0x0425 }
            r10 = r3
        L_0x041e:
            r2.dispose()     // Catch:{ Exception -> 0x042d, all -> 0x0425 }
        L_0x0421:
            r2 = r43
            goto L_0x05d9
        L_0x0425:
            r0 = move-exception
            r6 = r43
            r7 = r44
            r1 = r0
            goto L_0x060e
        L_0x042d:
            r0 = move-exception
            r6 = r43
            r7 = r44
            r1 = r0
            goto L_0x0620
        L_0x0435:
            r0 = move-exception
            goto L_0x0448
        L_0x0437:
            r0 = move-exception
            goto L_0x045e
        L_0x0439:
            r0 = move-exception
            goto L_0x0446
        L_0x043b:
            r0 = move-exception
            goto L_0x045c
        L_0x043d:
            r0 = move-exception
            goto L_0x0444
        L_0x043f:
            r0 = move-exception
            goto L_0x045a
        L_0x0441:
            r0 = move-exception
            r33 = r9
        L_0x0444:
            r34 = r12
        L_0x0446:
            r35 = r13
        L_0x0448:
            r7 = r44
            r1 = r0
            r3 = r6
            r13 = r10
            r21 = r22
            r20 = r33
            r11 = r34
            r14 = r35
            goto L_0x05a0
        L_0x0457:
            r0 = move-exception
            r33 = r9
        L_0x045a:
            r34 = r12
        L_0x045c:
            r35 = r13
        L_0x045e:
            r7 = r44
            r1 = r0
            r3 = r6
            r13 = r10
            r21 = r22
            r20 = r33
            r11 = r34
            r14 = r35
            goto L_0x05bd
        L_0x046d:
            r36 = r3
            r37 = r6
            r33 = r9
            r34 = r12
            r35 = r13
            if (r21 != 0) goto L_0x04fd
            org.telegram.SQLite.SQLiteDatabase r2 = r14.database     // Catch:{ Exception -> 0x04f9, all -> 0x04f5 }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x04f9, all -> 0x04f5 }
            java.lang.String r6 = "SELECT COUNT(*) FROM messages WHERE uid = %d AND mid > 0 AND out = 0 AND read_state IN(0,2)"
            r9 = 1
            java.lang.Object[] r12 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x04f9, all -> 0x04f5 }
            java.lang.Long r9 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x04f9, all -> 0x04f5 }
            r13 = 0
            r12[r13] = r9     // Catch:{ Exception -> 0x04f9, all -> 0x04f5 }
            java.lang.String r3 = java.lang.String.format(r3, r6, r12)     // Catch:{ Exception -> 0x04f9, all -> 0x04f5 }
            java.lang.Object[] r6 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x04f9, all -> 0x04f5 }
            org.telegram.SQLite.SQLiteCursor r2 = r2.queryFinalized(r3, r6)     // Catch:{ Exception -> 0x04f9, all -> 0x04f5 }
            boolean r3 = r2.next()     // Catch:{ Exception -> 0x04f9, all -> 0x04f5 }
            if (r3 == 0) goto L_0x049e
            int r3 = r2.intValue(r13)     // Catch:{ Exception -> 0x042d, all -> 0x0425 }
            goto L_0x049f
        L_0x049e:
            r3 = 0
        L_0x049f:
            r2.dispose()     // Catch:{ Exception -> 0x04f9, all -> 0x04f5 }
            if (r3 != r10) goto L_0x04eb
            org.telegram.SQLite.SQLiteDatabase r2 = r14.database     // Catch:{ Exception -> 0x04f9, all -> 0x04f5 }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x04f9, all -> 0x04f5 }
            java.lang.String r6 = "SELECT min(mid) FROM messages WHERE uid = %d AND out = 0 AND read_state IN(0,2) AND mid > 0"
            r9 = 1
            java.lang.Object[] r12 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x04f9, all -> 0x04f5 }
            java.lang.Long r9 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x04f9, all -> 0x04f5 }
            r13 = 0
            r12[r13] = r9     // Catch:{ Exception -> 0x04f9, all -> 0x04f5 }
            java.lang.String r3 = java.lang.String.format(r3, r6, r12)     // Catch:{ Exception -> 0x04f9, all -> 0x04f5 }
            java.lang.Object[] r6 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x04f9, all -> 0x04f5 }
            org.telegram.SQLite.SQLiteCursor r2 = r2.queryFinalized(r3, r6)     // Catch:{ Exception -> 0x04f9, all -> 0x04f5 }
            boolean r3 = r2.next()     // Catch:{ Exception -> 0x04f9, all -> 0x04f5 }
            if (r3 == 0) goto L_0x04e2
            int r3 = r2.intValue(r13)     // Catch:{ Exception -> 0x04f9, all -> 0x04f5 }
            long r12 = (long) r3
            r16 = 0
            int r6 = (r12 > r16 ? 1 : (r12 == r16 ? 0 : -1))
            if (r6 == 0) goto L_0x04dc
            if (r11 == 0) goto L_0x04dc
            r6 = r10
            long r9 = (long) r11
            r18 = 32
            long r9 = r9 << r18
            long r30 = r12 | r9
            r34 = r3
            goto L_0x04e5
        L_0x04dc:
            r6 = r10
            r34 = r3
            r30 = r12
            goto L_0x04e5
        L_0x04e2:
            r6 = r10
            r3 = r21
        L_0x04e5:
            r2.dispose()     // Catch:{ Exception -> 0x0586, all -> 0x0584 }
            r21 = r3
            goto L_0x04ec
        L_0x04eb:
            r6 = r10
        L_0x04ec:
            r10 = r34
            r2 = r43
            r34 = r10
        L_0x04f2:
            r10 = r6
            goto L_0x05d9
        L_0x04f5:
            r0 = move-exception
            r6 = r10
            goto L_0x0592
        L_0x04f9:
            r0 = move-exception
            r6 = r10
            goto L_0x05af
        L_0x04fd:
            r6 = r10
            org.telegram.SQLite.SQLiteDatabase r2 = r14.database     // Catch:{ Exception -> 0x0586, all -> 0x0584 }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x0586, all -> 0x0584 }
            java.lang.String r9 = "SELECT start, end FROM messages_holes WHERE uid = %d AND start < %d AND end > %d"
            r10 = 3
            java.lang.Object[] r12 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x0586, all -> 0x0584 }
            java.lang.Long r10 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x0586, all -> 0x0584 }
            r13 = 0
            r12[r13] = r10     // Catch:{ Exception -> 0x0586, all -> 0x0584 }
            java.lang.Integer r10 = java.lang.Integer.valueOf(r21)     // Catch:{ Exception -> 0x0586, all -> 0x0584 }
            r13 = 1
            r12[r13] = r10     // Catch:{ Exception -> 0x0586, all -> 0x0584 }
            java.lang.Integer r10 = java.lang.Integer.valueOf(r21)     // Catch:{ Exception -> 0x0586, all -> 0x0584 }
            r13 = 2
            r12[r13] = r10     // Catch:{ Exception -> 0x0586, all -> 0x0584 }
            java.lang.String r3 = java.lang.String.format(r3, r9, r12)     // Catch:{ Exception -> 0x0586, all -> 0x0584 }
            r9 = 0
            java.lang.Object[] r10 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x0586, all -> 0x0584 }
            org.telegram.SQLite.SQLiteCursor r2 = r2.queryFinalized(r3, r10)     // Catch:{ Exception -> 0x0586, all -> 0x0584 }
            boolean r3 = r2.next()     // Catch:{ Exception -> 0x0586, all -> 0x0584 }
            if (r3 != 0) goto L_0x052f
            r3 = 1
            goto L_0x0530
        L_0x052f:
            r3 = 0
        L_0x0530:
            r2.dispose()     // Catch:{ Exception -> 0x0586, all -> 0x0584 }
            if (r3 == 0) goto L_0x0580
            org.telegram.SQLite.SQLiteDatabase r2 = r14.database     // Catch:{ Exception -> 0x0586, all -> 0x0584 }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x0586, all -> 0x0584 }
            java.lang.String r9 = "SELECT min(mid) FROM messages WHERE uid = %d AND out = 0 AND read_state IN(0,2) AND mid > %d"
            r10 = 2
            java.lang.Object[] r12 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x0586, all -> 0x0584 }
            java.lang.Long r10 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x0586, all -> 0x0584 }
            r13 = 0
            r12[r13] = r10     // Catch:{ Exception -> 0x0586, all -> 0x0584 }
            java.lang.Integer r10 = java.lang.Integer.valueOf(r21)     // Catch:{ Exception -> 0x0586, all -> 0x0584 }
            r19 = 1
            r12[r19] = r10     // Catch:{ Exception -> 0x0586, all -> 0x0584 }
            java.lang.String r3 = java.lang.String.format(r3, r9, r12)     // Catch:{ Exception -> 0x0586, all -> 0x0584 }
            java.lang.Object[] r9 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0586, all -> 0x0584 }
            org.telegram.SQLite.SQLiteCursor r2 = r2.queryFinalized(r3, r9)     // Catch:{ Exception -> 0x0586, all -> 0x0584 }
            boolean r3 = r2.next()     // Catch:{ Exception -> 0x0586, all -> 0x0584 }
            if (r3 == 0) goto L_0x0575
            int r3 = r2.intValue(r13)     // Catch:{ Exception -> 0x0586, all -> 0x0584 }
            long r9 = (long) r3     // Catch:{ Exception -> 0x0586, all -> 0x0584 }
            r12 = 0
            int r21 = (r9 > r12 ? 1 : (r9 == r12 ? 0 : -1))
            if (r21 == 0) goto L_0x0572
            if (r11 == 0) goto L_0x0572
            long r12 = (long) r11     // Catch:{ Exception -> 0x0586, all -> 0x0584 }
            r18 = 32
            long r12 = r12 << r18
            long r30 = r9 | r12
            goto L_0x0577
        L_0x0572:
            r30 = r9
            goto L_0x0577
        L_0x0575:
            r3 = r21
        L_0x0577:
            r2.dispose()     // Catch:{ Exception -> 0x0586, all -> 0x0584 }
            r2 = r43
            r21 = r3
            goto L_0x04f2
        L_0x0580:
            r2 = r43
            goto L_0x04f2
        L_0x0584:
            r0 = move-exception
            goto L_0x0592
        L_0x0586:
            r0 = move-exception
            goto L_0x05af
        L_0x0588:
            r0 = move-exception
            r37 = r6
            r33 = r9
            r6 = r10
            r34 = r12
            r35 = r13
        L_0x0592:
            r7 = r44
            r1 = r0
            r13 = r6
            r21 = r22
            r20 = r33
            r11 = r34
            r14 = r35
            r3 = r37
        L_0x05a0:
            r12 = 0
            r17 = 0
            goto L_0x01d5
        L_0x05a5:
            r0 = move-exception
            r37 = r6
            r33 = r9
            r6 = r10
            r34 = r12
            r35 = r13
        L_0x05af:
            r7 = r44
            r1 = r0
            r13 = r6
            r21 = r22
            r20 = r33
            r11 = r34
            r14 = r35
            r3 = r37
        L_0x05bd:
            r12 = 0
            r17 = 0
            goto L_0x01e8
        L_0x05c2:
            r37 = r6
            r36 = r10
            r32 = r12
            r29 = r13
            r2 = r43
            r30 = r21
            r10 = 0
            r22 = 0
            r33 = 0
            r34 = 0
            r35 = 0
            r21 = r44
        L_0x05d9:
            if (r2 > r10) goto L_0x05e8
            if (r10 >= r8) goto L_0x05de
            goto L_0x05e8
        L_0x05de:
            int r3 = r10 - r2
            int r2 = r2 + 10
            r9 = r10
            r6 = r21
            r10 = r33
            goto L_0x0602
        L_0x05e8:
            int r3 = r10 + 10
            int r2 = java.lang.Math.max(r2, r3)     // Catch:{ Exception -> 0x061b, all -> 0x0609 }
            if (r10 >= r8) goto L_0x05fc
            r6 = r21
            r30 = r22
            r3 = 0
            r9 = 0
            r10 = 0
            r21 = 0
            r34 = 0
            goto L_0x0642
        L_0x05fc:
            r9 = r10
            r6 = r21
            r10 = r33
            r3 = 0
        L_0x0602:
            r40 = r30
            r30 = r22
            r21 = r40
            goto L_0x0642
        L_0x0609:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r6 = r2
        L_0x060e:
            r13 = r10
            r21 = r22
            r20 = r33
        L_0x0613:
            r11 = r34
        L_0x0615:
            r14 = r35
            r3 = r37
            goto L_0x0e32
        L_0x061b:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r6 = r2
        L_0x0620:
            r13 = r10
            r21 = r22
            r20 = r33
        L_0x0625:
            r11 = r34
        L_0x0627:
            r14 = r35
            r3 = r37
            goto L_0x0e49
        L_0x062d:
            r2 = r43
            r37 = r6
            r36 = r10
            r32 = r12
            r29 = r13
            r6 = r44
            r3 = 0
            r9 = 0
            r10 = 0
            r30 = 0
            r34 = 0
            r35 = 0
        L_0x0642:
            org.telegram.SQLite.SQLiteDatabase r8 = r14.database     // Catch:{ Exception -> 0x0e37, all -> 0x0e20 }
            java.util.Locale r12 = java.util.Locale.US     // Catch:{ Exception -> 0x0e37, all -> 0x0e20 }
            java.lang.String r13 = "SELECT start FROM messages_holes WHERE uid = %d AND start IN (0, 1)"
            r31 = r1
            r43 = r6
            r6 = 1
            java.lang.Object[] r1 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0e37, all -> 0x0e20 }
            java.lang.Long r6 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x0e37, all -> 0x0e20 }
            r33 = r7
            r7 = 0
            r1[r7] = r6     // Catch:{ Exception -> 0x0e37, all -> 0x0e20 }
            java.lang.String r1 = java.lang.String.format(r12, r13, r1)     // Catch:{ Exception -> 0x0e37, all -> 0x0e20 }
            java.lang.Object[] r6 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x0e37, all -> 0x0e20 }
            org.telegram.SQLite.SQLiteCursor r1 = r8.queryFinalized(r1, r6)     // Catch:{ Exception -> 0x0e37, all -> 0x0e20 }
            boolean r6 = r1.next()     // Catch:{ Exception -> 0x0e37, all -> 0x0e20 }
            if (r6 == 0) goto L_0x06bb
            int r6 = r1.intValue(r7)     // Catch:{ Exception -> 0x06af, all -> 0x06a3 }
            r7 = 1
            if (r6 != r7) goto L_0x0671
            r6 = 1
            goto L_0x0672
        L_0x0671:
            r6 = 0
        L_0x0672:
            r1.dispose()     // Catch:{ Exception -> 0x068e, all -> 0x0679 }
            r12 = r6
            r1 = 3
            goto L_0x0707
        L_0x0679:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r17 = r6
            r13 = r9
            r20 = r10
            r21 = r30
            r11 = r34
            r14 = r35
            r3 = r37
            r12 = 0
            r6 = r2
            goto L_0x17c4
        L_0x068e:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r17 = r6
            r13 = r9
            r20 = r10
            r21 = r30
            r11 = r34
            r14 = r35
            r3 = r37
            r12 = 0
            r6 = r2
            goto L_0x1799
        L_0x06a3:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r6 = r2
            r13 = r9
            r20 = r10
            r21 = r30
            goto L_0x0613
        L_0x06af:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r6 = r2
            r13 = r9
            r20 = r10
            r21 = r30
            goto L_0x0625
        L_0x06bb:
            r1.dispose()     // Catch:{ Exception -> 0x0e37, all -> 0x0e20 }
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x0e37, all -> 0x0e20 }
            java.util.Locale r6 = java.util.Locale.US     // Catch:{ Exception -> 0x0e37, all -> 0x0e20 }
            java.lang.String r7 = "SELECT min(mid) FROM messages WHERE uid = %d AND mid > 0"
            r8 = 1
            java.lang.Object[] r12 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x0e37, all -> 0x0e20 }
            java.lang.Long r8 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x0e37, all -> 0x0e20 }
            r13 = 0
            r12[r13] = r8     // Catch:{ Exception -> 0x0e37, all -> 0x0e20 }
            java.lang.String r6 = java.lang.String.format(r6, r7, r12)     // Catch:{ Exception -> 0x0e37, all -> 0x0e20 }
            java.lang.Object[] r7 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0e37, all -> 0x0e20 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r6, r7)     // Catch:{ Exception -> 0x0e37, all -> 0x0e20 }
            boolean r6 = r1.next()     // Catch:{ Exception -> 0x0e37, all -> 0x0e20 }
            if (r6 == 0) goto L_0x0702
            int r6 = r1.intValue(r13)     // Catch:{ Exception -> 0x06af, all -> 0x06a3 }
            if (r6 == 0) goto L_0x0702
            org.telegram.SQLite.SQLiteDatabase r7 = r14.database     // Catch:{ Exception -> 0x06af, all -> 0x06a3 }
            java.lang.String r8 = "REPLACE INTO messages_holes VALUES(?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.executeFast(r8)     // Catch:{ Exception -> 0x06af, all -> 0x06a3 }
            r7.requery()     // Catch:{ Exception -> 0x06af, all -> 0x06a3 }
            r8 = 1
            r7.bindLong(r8, r4)     // Catch:{ Exception -> 0x06af, all -> 0x06a3 }
            r8 = 2
            r12 = 0
            r7.bindInteger(r8, r12)     // Catch:{ Exception -> 0x06af, all -> 0x06a3 }
            r8 = 3
            r7.bindInteger(r8, r6)     // Catch:{ Exception -> 0x06af, all -> 0x06a3 }
            r7.step()     // Catch:{ Exception -> 0x06af, all -> 0x06a3 }
            r7.dispose()     // Catch:{ Exception -> 0x06af, all -> 0x06a3 }
        L_0x0702:
            r1.dispose()     // Catch:{ Exception -> 0x0e37, all -> 0x0e20 }
            r1 = 3
            r12 = 0
        L_0x0707:
            if (r15 == r1) goto L_0x0a05
            r1 = 4
            if (r15 == r1) goto L_0x0a05
            r1 = 2
            if (r10 == 0) goto L_0x0713
            if (r15 != r1) goto L_0x0713
            goto L_0x0a05
        L_0x0713:
            r6 = 1
            if (r15 != r6) goto L_0x07ef
            org.telegram.SQLite.SQLiteDatabase r3 = r14.database     // Catch:{ Exception -> 0x07da, all -> 0x07c5 }
            java.util.Locale r6 = java.util.Locale.US     // Catch:{ Exception -> 0x07da, all -> 0x07c5 }
            java.lang.String r7 = "SELECT start, end FROM messages_holes WHERE uid = %d AND start >= %d AND start != 1 AND end != 1 ORDER BY start ASC LIMIT 1"
            java.lang.Object[] r8 = new java.lang.Object[r1]     // Catch:{ Exception -> 0x07da, all -> 0x07c5 }
            java.lang.Long r1 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x07da, all -> 0x07c5 }
            r13 = 0
            r8[r13] = r1     // Catch:{ Exception -> 0x07da, all -> 0x07c5 }
            java.lang.Integer r1 = java.lang.Integer.valueOf(r44)     // Catch:{ Exception -> 0x07da, all -> 0x07c5 }
            r19 = 1
            r8[r19] = r1     // Catch:{ Exception -> 0x07da, all -> 0x07c5 }
            java.lang.String r1 = java.lang.String.format(r6, r7, r8)     // Catch:{ Exception -> 0x07da, all -> 0x07c5 }
            java.lang.Object[] r6 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x07da, all -> 0x07c5 }
            org.telegram.SQLite.SQLiteCursor r1 = r3.queryFinalized(r1, r6)     // Catch:{ Exception -> 0x07da, all -> 0x07c5 }
            boolean r3 = r1.next()     // Catch:{ Exception -> 0x07da, all -> 0x07c5 }
            if (r3 == 0) goto L_0x074b
            int r3 = r1.intValue(r13)     // Catch:{ Exception -> 0x07da, all -> 0x07c5 }
            long r6 = (long) r3
            r8 = r10
            if (r11 == 0) goto L_0x074e
            long r10 = (long) r11
            r3 = 32
            long r10 = r10 << r3
            long r6 = r6 | r10
            goto L_0x074e
        L_0x074b:
            r8 = r10
            r6 = 0
        L_0x074e:
            r1.dispose()     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            r10 = 0
            int r1 = (r6 > r10 ? 1 : (r6 == r10 ? 0 : -1))
            if (r1 == 0) goto L_0x0793
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.String r10 = "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.date >= %d AND m.mid > %d AND m.mid <= %d ORDER BY m.date ASC, m.mid ASC LIMIT %d"
            r11 = 5
            java.lang.Object[] r13 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.Long r11 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            r19 = 0
            r13[r19] = r11     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r50)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            r20 = 1
            r13[r20] = r11     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.Long r11 = java.lang.Long.valueOf(r21)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            r21 = 2
            r13[r21] = r11     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.Long r6 = java.lang.Long.valueOf(r6)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            r7 = 3
            r13[r7] = r6     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            r7 = 4
            r13[r7] = r6     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.String r3 = java.lang.String.format(r3, r10, r13)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            r6 = 0
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r3, r7)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            goto L_0x08d4
        L_0x0793:
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.String r6 = "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.date >= %d AND m.mid > %d ORDER BY m.date ASC, m.mid ASC LIMIT %d"
            r7 = 4
            java.lang.Object[] r10 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.Long r7 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            r11 = 0
            r10[r11] = r7     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r50)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            r11 = 1
            r10[r11] = r7     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.Long r7 = java.lang.Long.valueOf(r21)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            r11 = 2
            r10[r11] = r7     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            r11 = 3
            r10[r11] = r7     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.String r3 = java.lang.String.format(r3, r6, r10)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            r6 = 0
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r3, r7)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            goto L_0x08d4
        L_0x07c5:
            r0 = move-exception
            r8 = r10
        L_0x07c7:
            r7 = r44
            r1 = r0
            r6 = r2
            r20 = r8
            r13 = r9
            r17 = r12
            r21 = r30
            r11 = r34
            r14 = r35
            r3 = r37
            goto L_0x0e06
        L_0x07da:
            r0 = move-exception
            r8 = r10
        L_0x07dc:
            r7 = r44
            r1 = r0
            r6 = r2
            r20 = r8
            r13 = r9
            r17 = r12
            r21 = r30
            r11 = r34
            r14 = r35
            r3 = r37
            goto L_0x0e1d
        L_0x07ef:
            r8 = r10
            if (r50 == 0) goto L_0x08e5
            r6 = 0
            int r1 = (r21 > r6 ? 1 : (r21 == r6 ? 0 : -1))
            if (r1 == 0) goto L_0x08a4
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.String r6 = "SELECT end FROM messages_holes WHERE uid = %d AND end <= %d ORDER BY end DESC LIMIT 1"
            r7 = 2
            java.lang.Object[] r10 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.Long r7 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            r13 = 0
            r10[r13] = r7     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r44)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            r19 = 1
            r10[r19] = r7     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.String r3 = java.lang.String.format(r3, r6, r10)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.Object[] r6 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r3, r6)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            boolean r3 = r1.next()     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            if (r3 == 0) goto L_0x082d
            int r3 = r1.intValue(r13)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            long r6 = (long) r3     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            if (r11 == 0) goto L_0x082f
            long r10 = (long) r11     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            r3 = 32
            long r10 = r10 << r3
            long r6 = r6 | r10
            goto L_0x082f
        L_0x082d:
            r6 = 0
        L_0x082f:
            r1.dispose()     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            r10 = 0
            int r1 = (r6 > r10 ? 1 : (r6 == r10 ? 0 : -1))
            if (r1 == 0) goto L_0x0873
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.String r10 = "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.date <= %d AND m.mid < %d AND (m.mid >= %d OR m.mid < 0) ORDER BY m.date DESC, m.mid DESC LIMIT %d"
            r11 = 5
            java.lang.Object[] r13 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.Long r11 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            r19 = 0
            r13[r19] = r11     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.Integer r11 = java.lang.Integer.valueOf(r50)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            r20 = 1
            r13[r20] = r11     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.Long r11 = java.lang.Long.valueOf(r21)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            r21 = 2
            r13[r21] = r11     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.Long r6 = java.lang.Long.valueOf(r6)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            r7 = 3
            r13[r7] = r6     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            r7 = 4
            r13[r7] = r6     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.String r3 = java.lang.String.format(r3, r10, r13)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            r6 = 0
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r3, r7)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            goto L_0x08d4
        L_0x0873:
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.String r6 = "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.date <= %d AND m.mid < %d ORDER BY m.date DESC, m.mid DESC LIMIT %d"
            r7 = 4
            java.lang.Object[] r10 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.Long r7 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            r11 = 0
            r10[r11] = r7     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r50)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            r11 = 1
            r10[r11] = r7     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.Long r7 = java.lang.Long.valueOf(r21)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            r11 = 2
            r10[r11] = r7     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            r11 = 3
            r10[r11] = r7     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.String r3 = java.lang.String.format(r3, r6, r10)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            r6 = 0
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r3, r7)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            goto L_0x08d4
        L_0x08a4:
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.util.Locale r6 = java.util.Locale.US     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.String r7 = "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.date <= %d ORDER BY m.date DESC, m.mid DESC LIMIT %d,%d"
            r10 = 4
            java.lang.Object[] r11 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.Long r10 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            r13 = 0
            r11[r13] = r10     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.Integer r10 = java.lang.Integer.valueOf(r50)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            r13 = 1
            r11[r13] = r10     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            r10 = 2
            r11[r10] = r3     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.Integer r3 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            r10 = 3
            r11[r10] = r3     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            java.lang.String r3 = java.lang.String.format(r6, r7, r11)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            r6 = 0
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r3, r7)     // Catch:{ Exception -> 0x08e2, all -> 0x08df }
        L_0x08d4:
            r6 = r43
            r4 = r44
            r5 = r2
            r2 = r30
            r3 = 6
            r10 = 0
            goto L_0x0fb5
        L_0x08df:
            r0 = move-exception
            goto L_0x07c7
        L_0x08e2:
            r0 = move-exception
            goto L_0x07dc
        L_0x08e5:
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x09f9, all -> 0x09ed }
            java.util.Locale r6 = java.util.Locale.US     // Catch:{ Exception -> 0x09f9, all -> 0x09ed }
            java.lang.String r7 = "SELECT max(mid) FROM messages WHERE uid = %d AND mid > 0"
            r10 = 1
            java.lang.Object[] r13 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x09f9, all -> 0x09ed }
            java.lang.Long r10 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x09f9, all -> 0x09ed }
            r38 = r8
            r8 = 0
            r13[r8] = r10     // Catch:{ Exception -> 0x09eb, all -> 0x09e9 }
            java.lang.String r6 = java.lang.String.format(r6, r7, r13)     // Catch:{ Exception -> 0x09eb, all -> 0x09e9 }
            java.lang.Object[] r7 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x09eb, all -> 0x09e9 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r6, r7)     // Catch:{ Exception -> 0x09eb, all -> 0x09e9 }
            boolean r6 = r1.next()     // Catch:{ Exception -> 0x09eb, all -> 0x09e9 }
            if (r6 == 0) goto L_0x090d
            int r6 = r1.intValue(r8)     // Catch:{ Exception -> 0x09eb, all -> 0x09e9 }
            r10 = r6
            goto L_0x090e
        L_0x090d:
            r10 = 0
        L_0x090e:
            r1.dispose()     // Catch:{ Exception -> 0x09d1, all -> 0x09b9 }
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x09d1, all -> 0x09b9 }
            java.util.Locale r6 = java.util.Locale.US     // Catch:{ Exception -> 0x09d1, all -> 0x09b9 }
            java.lang.String r7 = "SELECT max(end) FROM messages_holes WHERE uid = %d"
            r8 = 1
            java.lang.Object[] r13 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x09d1, all -> 0x09b9 }
            java.lang.Long r8 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x09d1, all -> 0x09b9 }
            r50 = r10
            r10 = 0
            r13[r10] = r8     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
            java.lang.String r6 = java.lang.String.format(r6, r7, r13)     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
            java.lang.Object[] r7 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r6, r7)     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
            boolean r6 = r1.next()     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
            if (r6 == 0) goto L_0x0940
            int r6 = r1.intValue(r10)     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
            long r6 = (long) r6     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
            if (r11 == 0) goto L_0x0942
            long r10 = (long) r11     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
            r8 = 32
            long r10 = r10 << r8
            long r6 = r6 | r10
            goto L_0x0942
        L_0x0940:
            r6 = 0
        L_0x0942:
            r1.dispose()     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
            r10 = 0
            int r1 = (r6 > r10 ? 1 : (r6 == r10 ? 0 : -1))
            if (r1 == 0) goto L_0x097d
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
            java.util.Locale r8 = java.util.Locale.US     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
            java.lang.String r10 = "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND (m.mid >= %d OR m.mid < 0) ORDER BY m.date DESC, m.mid DESC LIMIT %d,%d"
            r11 = 4
            java.lang.Object[] r13 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
            java.lang.Long r11 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
            r19 = 0
            r13[r19] = r11     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
            java.lang.Long r6 = java.lang.Long.valueOf(r6)     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
            r7 = 1
            r13[r7] = r6     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
            r6 = 2
            r13[r6] = r3     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
            java.lang.Integer r3 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
            r6 = 3
            r13[r6] = r3     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
            java.lang.String r3 = java.lang.String.format(r8, r10, r13)     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
            r6 = 0
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r3, r7)     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
            goto L_0x09a6
        L_0x097d:
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
            java.util.Locale r6 = java.util.Locale.US     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
            java.lang.String r7 = "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d ORDER BY m.date DESC, m.mid DESC LIMIT %d,%d"
            r8 = 3
            java.lang.Object[] r10 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
            java.lang.Long r8 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
            r11 = 0
            r10[r11] = r8     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
            r8 = 1
            r10[r8] = r3     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
            java.lang.Integer r3 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
            r8 = 2
            r10[r8] = r3     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
            java.lang.String r3 = java.lang.String.format(r6, r7, r10)     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
            r6 = 0
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r3, r7)     // Catch:{ Exception -> 0x09b7, all -> 0x09b5 }
        L_0x09a6:
            r6 = r43
            r4 = r44
            r39 = r50
            r5 = r2
            r2 = r30
            r8 = r38
            r3 = 6
            r10 = 0
            goto L_0x11c9
        L_0x09b5:
            r0 = move-exception
            goto L_0x09bc
        L_0x09b7:
            r0 = move-exception
            goto L_0x09d4
        L_0x09b9:
            r0 = move-exception
            r50 = r10
        L_0x09bc:
            r7 = r44
            r1 = r0
            r6 = r2
            r13 = r9
            r17 = r12
            r21 = r30
            r11 = r34
            r14 = r35
            r3 = r37
            r20 = r38
            r12 = r50
            goto L_0x17c4
        L_0x09d1:
            r0 = move-exception
            r50 = r10
        L_0x09d4:
            r7 = r44
            r1 = r0
            r6 = r2
            r13 = r9
            r17 = r12
            r21 = r30
            r11 = r34
            r14 = r35
            r3 = r37
            r20 = r38
            r12 = r50
            goto L_0x1799
        L_0x09e9:
            r0 = move-exception
            goto L_0x09f0
        L_0x09eb:
            r0 = move-exception
            goto L_0x09fc
        L_0x09ed:
            r0 = move-exception
            r38 = r8
        L_0x09f0:
            r7 = r44
            r1 = r0
            r6 = r2
            r13 = r9
            r17 = r12
            goto L_0x0dfc
        L_0x09f9:
            r0 = move-exception
            r38 = r8
        L_0x09fc:
            r7 = r44
            r1 = r0
            r6 = r2
            r13 = r9
            r17 = r12
            goto L_0x0e13
        L_0x0a05:
            r38 = r10
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x0e09, all -> 0x0df2 }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x0e09, all -> 0x0df2 }
            java.lang.String r6 = "SELECT max(mid) FROM messages WHERE uid = %d AND mid > 0"
            r7 = 1
            java.lang.Object[] r8 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x0e09, all -> 0x0df2 }
            java.lang.Long r7 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x0e09, all -> 0x0df2 }
            r10 = 0
            r8[r10] = r7     // Catch:{ Exception -> 0x0e09, all -> 0x0df2 }
            java.lang.String r3 = java.lang.String.format(r3, r6, r8)     // Catch:{ Exception -> 0x0e09, all -> 0x0df2 }
            java.lang.Object[] r6 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x0e09, all -> 0x0df2 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r3, r6)     // Catch:{ Exception -> 0x0e09, all -> 0x0df2 }
            boolean r3 = r1.next()     // Catch:{ Exception -> 0x0e09, all -> 0x0df2 }
            if (r3 == 0) goto L_0x0a2d
            int r3 = r1.intValue(r10)     // Catch:{ Exception -> 0x09eb, all -> 0x09e9 }
            r10 = r3
            goto L_0x0a2e
        L_0x0a2d:
            r10 = 0
        L_0x0a2e:
            r1.dispose()     // Catch:{ Exception -> 0x0dda, all -> 0x0dc2 }
            r1 = 4
            if (r15 != r1) goto L_0x0b9d
            if (r51 == 0) goto L_0x0b9d
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x0b85, all -> 0x0b6d }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x0b85, all -> 0x0b6d }
            java.lang.String r6 = "SELECT max(mid) FROM messages WHERE uid = %d AND date <= %d AND mid > 0"
            r7 = 2
            java.lang.Object[] r8 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x0b85, all -> 0x0b6d }
            java.lang.Long r7 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x0b85, all -> 0x0b6d }
            r13 = 0
            r8[r13] = r7     // Catch:{ Exception -> 0x0b85, all -> 0x0b6d }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r51)     // Catch:{ Exception -> 0x0b85, all -> 0x0b6d }
            r19 = 1
            r8[r19] = r7     // Catch:{ Exception -> 0x0b85, all -> 0x0b6d }
            java.lang.String r3 = java.lang.String.format(r3, r6, r8)     // Catch:{ Exception -> 0x0b85, all -> 0x0b6d }
            java.lang.Object[] r6 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0b85, all -> 0x0b6d }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r3, r6)     // Catch:{ Exception -> 0x0b85, all -> 0x0b6d }
            boolean r3 = r1.next()     // Catch:{ Exception -> 0x0b85, all -> 0x0b6d }
            if (r3 == 0) goto L_0x0a8d
            int r3 = r1.intValue(r13)     // Catch:{ Exception -> 0x0a78, all -> 0x0a63 }
            goto L_0x0a8e
        L_0x0a63:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r6 = r2
            r13 = r9
            r17 = r12
            r21 = r30
            r11 = r34
            r14 = r35
            r3 = r37
            r20 = r38
            r12 = r10
            goto L_0x17c4
        L_0x0a78:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r6 = r2
            r13 = r9
            r17 = r12
            r21 = r30
            r11 = r34
            r14 = r35
            r3 = r37
            r20 = r38
            r12 = r10
            goto L_0x1799
        L_0x0a8d:
            r3 = -1
        L_0x0a8e:
            r1.dispose()     // Catch:{ Exception -> 0x0b85, all -> 0x0b6d }
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x0b85, all -> 0x0b6d }
            java.util.Locale r7 = java.util.Locale.US     // Catch:{ Exception -> 0x0b85, all -> 0x0b6d }
            java.lang.String r8 = "SELECT min(mid) FROM messages WHERE uid = %d AND date >= %d AND mid > 0"
            r13 = 2
            java.lang.Object[] r6 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0b85, all -> 0x0b6d }
            java.lang.Long r13 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x0b85, all -> 0x0b6d }
            r39 = r10
            r10 = 0
            r6[r10] = r13     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r51)     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            r19 = 1
            r6[r19] = r13     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            java.lang.String r6 = java.lang.String.format(r7, r8, r6)     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            java.lang.Object[] r7 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r6, r7)     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            boolean r6 = r1.next()     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            if (r6 == 0) goto L_0x0ad4
            int r6 = r1.intValue(r10)     // Catch:{ Exception -> 0x0aca, all -> 0x0ac0 }
            goto L_0x0ad5
        L_0x0ac0:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r6 = r2
            r13 = r9
            r17 = r12
            goto L_0x0dce
        L_0x0aca:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r6 = r2
            r13 = r9
            r17 = r12
            goto L_0x0de6
        L_0x0ad4:
            r6 = -1
        L_0x0ad5:
            r1.dispose()     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            r1 = -1
            if (r3 == r1) goto L_0x0b9f
            if (r6 == r1) goto L_0x0b9f
            if (r3 != r6) goto L_0x0ae3
            r6 = r3
            r1 = r12
            goto L_0x0ba2
        L_0x0ae3:
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            java.util.Locale r7 = java.util.Locale.US     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            java.lang.String r8 = "SELECT start FROM messages_holes WHERE uid = %d AND start <= %d AND end > %d"
            r10 = 3
            java.lang.Object[] r13 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            java.lang.Long r10 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            r19 = 0
            r13[r19] = r10     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            java.lang.Integer r10 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            r20 = 1
            r13[r20] = r10     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            java.lang.Integer r10 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            r25 = 2
            r13[r25] = r10     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            java.lang.String r7 = java.lang.String.format(r7, r8, r13)     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            r8 = 0
            java.lang.Object[] r10 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r7, r10)     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            boolean r7 = r1.next()     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            if (r7 == 0) goto L_0x0b16
            r3 = -1
        L_0x0b16:
            r1.dispose()     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            r1 = -1
            if (r3 == r1) goto L_0x0b9f
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            java.lang.String r7 = "SELECT start FROM messages_holes WHERE uid = %d AND start <= %d AND end > %d"
            r8 = 3
            java.lang.Object[] r10 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            java.lang.Long r8 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            r13 = 0
            r10[r13] = r8     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            java.lang.Integer r8 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            r13 = 1
            r10[r13] = r8     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            java.lang.Integer r8 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            r13 = 2
            r10[r13] = r8     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            java.lang.String r3 = java.lang.String.format(r3, r7, r10)     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            r7 = 0
            java.lang.Object[] r8 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r3, r8)     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            boolean r3 = r1.next()     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            if (r3 == 0) goto L_0x0b4c
            r6 = -1
        L_0x0b4c:
            r1.dispose()     // Catch:{ Exception -> 0x0b6b, all -> 0x0b69 }
            r1 = -1
            if (r6 == r1) goto L_0x0b9f
            long r7 = (long) r6
            r16 = 0
            int r1 = (r7 > r16 ? 1 : (r7 == r16 ? 0 : -1))
            if (r1 == 0) goto L_0x0b64
            if (r11 == 0) goto L_0x0b64
            r1 = r12
            long r12 = (long) r11
            r3 = 32
            long r12 = r12 << r3
            long r21 = r7 | r12
            r3 = r6
            goto L_0x0ba4
        L_0x0b64:
            r1 = r12
            r3 = r6
            r21 = r7
            goto L_0x0ba4
        L_0x0b69:
            r0 = move-exception
            goto L_0x0b70
        L_0x0b6b:
            r0 = move-exception
            goto L_0x0b88
        L_0x0b6d:
            r0 = move-exception
            r39 = r10
        L_0x0b70:
            r1 = r12
            r7 = r44
            r17 = r1
            r6 = r2
            r13 = r9
            r21 = r30
            r11 = r34
            r14 = r35
            r3 = r37
            r20 = r38
            r12 = r39
            goto L_0x17c3
        L_0x0b85:
            r0 = move-exception
            r39 = r10
        L_0x0b88:
            r1 = r12
            r7 = r44
            r17 = r1
            r6 = r2
            r13 = r9
            r21 = r30
            r11 = r34
            r14 = r35
            r3 = r37
            r20 = r38
            r12 = r39
            goto L_0x115b
        L_0x0b9d:
            r39 = r10
        L_0x0b9f:
            r1 = r12
            r6 = r43
        L_0x0ba2:
            r3 = r44
        L_0x0ba4:
            if (r6 == 0) goto L_0x0ba8
            r10 = 1
            goto L_0x0ba9
        L_0x0ba8:
            r10 = 0
        L_0x0ba9:
            if (r10 == 0) goto L_0x0bfc
            org.telegram.SQLite.SQLiteDatabase r7 = r14.database     // Catch:{ Exception -> 0x0bf2, all -> 0x0be8 }
            java.util.Locale r8 = java.util.Locale.US     // Catch:{ Exception -> 0x0bf2, all -> 0x0be8 }
            java.lang.String r12 = "SELECT start FROM messages_holes WHERE uid = %d AND start < %d AND end > %d"
            r43 = r1
            r13 = 3
            java.lang.Object[] r1 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0be6, all -> 0x0be4 }
            java.lang.Long r13 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x0be6, all -> 0x0be4 }
            r19 = 0
            r1[r19] = r13     // Catch:{ Exception -> 0x0be6, all -> 0x0be4 }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x0be6, all -> 0x0be4 }
            r20 = 1
            r1[r20] = r13     // Catch:{ Exception -> 0x0be6, all -> 0x0be4 }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x0be6, all -> 0x0be4 }
            r25 = 2
            r1[r25] = r13     // Catch:{ Exception -> 0x0be6, all -> 0x0be4 }
            java.lang.String r1 = java.lang.String.format(r8, r12, r1)     // Catch:{ Exception -> 0x0be6, all -> 0x0be4 }
            r8 = 0
            java.lang.Object[] r12 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x0be6, all -> 0x0be4 }
            org.telegram.SQLite.SQLiteCursor r1 = r7.queryFinalized(r1, r12)     // Catch:{ Exception -> 0x0be6, all -> 0x0be4 }
            boolean r7 = r1.next()     // Catch:{ Exception -> 0x0be6, all -> 0x0be4 }
            if (r7 == 0) goto L_0x0be0
            r10 = 0
        L_0x0be0:
            r1.dispose()     // Catch:{ Exception -> 0x0be6, all -> 0x0be4 }
            goto L_0x0bfe
        L_0x0be4:
            r0 = move-exception
            goto L_0x0beb
        L_0x0be6:
            r0 = move-exception
            goto L_0x0bf5
        L_0x0be8:
            r0 = move-exception
            r43 = r1
        L_0x0beb:
            r17 = r43
            r1 = r0
            r6 = r2
            r7 = r3
            goto L_0x0dcd
        L_0x0bf2:
            r0 = move-exception
            r43 = r1
        L_0x0bf5:
            r17 = r43
            r1 = r0
            r6 = r2
            r7 = r3
            goto L_0x0de5
        L_0x0bfc:
            r43 = r1
        L_0x0bfe:
            if (r10 == 0) goto L_0x0d33
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x0d2e, all -> 0x0d29 }
            java.util.Locale r10 = java.util.Locale.US     // Catch:{ Exception -> 0x0d2e, all -> 0x0d29 }
            java.lang.String r12 = "SELECT start FROM messages_holes WHERE uid = %d AND start >= %d ORDER BY start ASC LIMIT 1"
            r13 = 2
            java.lang.Object[] r7 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0d2e, all -> 0x0d29 }
            java.lang.Long r8 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x0d2e, all -> 0x0d29 }
            r13 = 0
            r7[r13] = r8     // Catch:{ Exception -> 0x0d2e, all -> 0x0d29 }
            java.lang.Integer r8 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x0d2e, all -> 0x0d29 }
            r19 = 1
            r7[r19] = r8     // Catch:{ Exception -> 0x0d2e, all -> 0x0d29 }
            java.lang.String r7 = java.lang.String.format(r10, r12, r7)     // Catch:{ Exception -> 0x0d2e, all -> 0x0d29 }
            java.lang.Object[] r8 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0d2e, all -> 0x0d29 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r7, r8)     // Catch:{ Exception -> 0x0d2e, all -> 0x0d29 }
            boolean r7 = r1.next()     // Catch:{ Exception -> 0x0d2e, all -> 0x0d29 }
            if (r7 == 0) goto L_0x0CLASSNAME
            int r7 = r1.intValue(r13)     // Catch:{ Exception -> 0x0be6, all -> 0x0be4 }
            long r7 = (long) r7
            if (r11 == 0) goto L_0x0CLASSNAME
            long r12 = (long) r11
            r10 = 32
            long r12 = r12 << r10
            long r7 = r7 | r12
            goto L_0x0CLASSNAME
        L_0x0CLASSNAME:
            r7 = 0
        L_0x0CLASSNAME:
            r1.dispose()     // Catch:{ Exception -> 0x0d2e, all -> 0x0d29 }
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x0d2e, all -> 0x0d29 }
            java.util.Locale r10 = java.util.Locale.US     // Catch:{ Exception -> 0x0d2e, all -> 0x0d29 }
            java.lang.String r12 = "SELECT end FROM messages_holes WHERE uid = %d AND end <= %d ORDER BY end DESC LIMIT 1"
            r44 = r3
            r13 = 2
            java.lang.Object[] r3 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            java.lang.Long r13 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            r4 = 0
            r3[r4] = r13     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            java.lang.Integer r5 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            r13 = 1
            r3[r13] = r5     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            java.lang.String r3 = java.lang.String.format(r10, r12, r3)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r3, r5)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            boolean r3 = r1.next()     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            if (r3 == 0) goto L_0x0CLASSNAME
            int r3 = r1.intValue(r4)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            long r3 = (long) r3     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            if (r11 == 0) goto L_0x0CLASSNAME
            long r12 = (long) r11     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            r5 = 32
            long r12 = r12 << r5
            long r3 = r3 | r12
            goto L_0x0CLASSNAME
        L_0x0CLASSNAME:
            r3 = 1
        L_0x0CLASSNAME:
            r1.dispose()     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            r12 = 0
            int r1 = (r7 > r12 ? 1 : (r7 == r12 ? 0 : -1))
            if (r1 != 0) goto L_0x0cc5
            r12 = 1
            int r1 = (r3 > r12 ? 1 : (r3 == r12 ? 0 : -1))
            if (r1 == 0) goto L_0x0CLASSNAME
            goto L_0x0cc5
        L_0x0CLASSNAME:
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            java.lang.String r4 = "SELECT * FROM (SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid <= %d ORDER BY m.date DESC, m.mid DESC LIMIT %d) UNION SELECT * FROM (SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid > %d ORDER BY m.date ASC, m.mid ASC LIMIT %d)"
            r5 = 6
            java.lang.Object[] r7 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            java.lang.Long r5 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            r8 = 0
            r7[r8] = r5     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            java.lang.Long r5 = java.lang.Long.valueOf(r21)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            r8 = 1
            r7[r8] = r5     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            int r5 = r2 / 2
            java.lang.Integer r5 = java.lang.Integer.valueOf(r5)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            r8 = 2
            r7[r8] = r5     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            java.lang.Long r5 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            r8 = 3
            r7[r8] = r5     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            java.lang.Long r5 = java.lang.Long.valueOf(r21)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            r8 = 4
            r7[r8] = r5     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            int r5 = r2 / 2
            java.lang.Integer r5 = java.lang.Integer.valueOf(r5)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            r8 = 5
            r7[r8] = r5     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            java.lang.String r3 = java.lang.String.format(r3, r4, r7)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            r4 = 0
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r3, r5)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            goto L_0x0d26
        L_0x0cc5:
            r12 = 0
            int r1 = (r7 > r12 ? 1 : (r7 == r12 ? 0 : -1))
            if (r1 != 0) goto L_0x0cd5
            r7 = 1000000000(0x3b9aca00, double:4.94065646E-315)
            if (r11 == 0) goto L_0x0cd5
            long r10 = (long) r11     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            r1 = 32
            long r10 = r10 << r1
            long r7 = r7 | r10
        L_0x0cd5:
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            java.util.Locale r5 = java.util.Locale.US     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            java.lang.String r10 = "SELECT * FROM (SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid <= %d AND (m.mid >= %d OR m.mid < 0) ORDER BY m.date DESC, m.mid DESC LIMIT %d) UNION SELECT * FROM (SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid > %d AND (m.mid <= %d OR m.mid < 0) ORDER BY m.date ASC, m.mid ASC LIMIT %d)"
            r11 = 8
            java.lang.Object[] r11 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            java.lang.Long r12 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            r13 = 0
            r11[r13] = r12     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            java.lang.Long r12 = java.lang.Long.valueOf(r21)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            r13 = 1
            r11[r13] = r12     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            java.lang.Long r3 = java.lang.Long.valueOf(r3)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            r4 = 2
            r11[r4] = r3     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            int r3 = r2 / 2
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            r4 = 3
            r11[r4] = r3     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            java.lang.Long r3 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            r4 = 4
            r11[r4] = r3     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            java.lang.Long r3 = java.lang.Long.valueOf(r21)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            r4 = 5
            r11[r4] = r3     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            java.lang.Long r3 = java.lang.Long.valueOf(r7)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            r4 = 6
            r11[r4] = r3     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            r3 = 7
            int r4 = r2 / 2
            java.lang.Integer r4 = java.lang.Integer.valueOf(r4)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            r11[r3] = r4     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            java.lang.String r3 = java.lang.String.format(r5, r10, r11)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            r4 = 0
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r3, r5)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
        L_0x0d26:
            r5 = 6
            goto L_0x0db5
        L_0x0d29:
            r0 = move-exception
            r44 = r3
            goto L_0x0dc7
        L_0x0d2e:
            r0 = move-exception
            r44 = r3
            goto L_0x0ddf
        L_0x0d33:
            r44 = r3
            r1 = 2
            if (r15 != r1) goto L_0x0db3
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            java.lang.String r4 = "SELECT COUNT(*) FROM messages WHERE uid = %d AND mid != 0 AND out = 0 AND read_state IN(0,2)"
            r5 = 1
            java.lang.Object[] r7 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            java.lang.Long r5 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            r8 = 0
            r7[r8] = r5     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            java.lang.String r3 = java.lang.String.format(r3, r4, r7)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            java.lang.Object[] r4 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r3, r4)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            boolean r3 = r1.next()     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            if (r3 == 0) goto L_0x0d5d
            int r10 = r1.intValue(r8)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            goto L_0x0d5e
        L_0x0d5d:
            r10 = 0
        L_0x0d5e:
            r1.dispose()     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            if (r10 != r9) goto L_0x0da8
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            java.lang.String r4 = "SELECT * FROM (SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid <= %d ORDER BY m.date DESC, m.mid DESC LIMIT %d) UNION SELECT * FROM (SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid > %d ORDER BY m.date ASC, m.mid ASC LIMIT %d)"
            r5 = 6
            java.lang.Object[] r7 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            java.lang.Long r8 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            r10 = 0
            r7[r10] = r8     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            java.lang.Long r8 = java.lang.Long.valueOf(r21)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            r10 = 1
            r7[r10] = r8     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            int r8 = r2 / 2
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            r10 = 2
            r7[r10] = r8     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            java.lang.Long r8 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            r10 = 3
            r7[r10] = r8     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            java.lang.Long r8 = java.lang.Long.valueOf(r21)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            r10 = 4
            r7[r10] = r8     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            int r8 = r2 / 2
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            r10 = 5
            r7[r10] = r8     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            java.lang.String r3 = java.lang.String.format(r3, r4, r7)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            r4 = 0
            java.lang.Object[] r7 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r3, r7)     // Catch:{ Exception -> 0x0db1, all -> 0x0daf }
            r3 = r1
            r1 = 1
            goto L_0x0dac
        L_0x0da8:
            r5 = 6
            r1 = 0
            r3 = r1
            r1 = 0
        L_0x0dac:
            r10 = r1
            r1 = r3
            goto L_0x0db6
        L_0x0daf:
            r0 = move-exception
            goto L_0x0dc7
        L_0x0db1:
            r0 = move-exception
            goto L_0x0ddf
        L_0x0db3:
            r5 = 6
            r1 = 0
        L_0x0db5:
            r10 = 0
        L_0x0db6:
            r12 = r43
            r4 = r44
            r5 = r2
            r2 = r30
            r8 = r38
            r3 = 6
            goto L_0x11c9
        L_0x0dc2:
            r0 = move-exception
            r39 = r10
            r43 = r12
        L_0x0dc7:
            r17 = r43
            r7 = r44
            r1 = r0
            r6 = r2
        L_0x0dcd:
            r13 = r9
        L_0x0dce:
            r21 = r30
            r11 = r34
            r14 = r35
            r3 = r37
            r20 = r38
            goto L_0x1484
        L_0x0dda:
            r0 = move-exception
            r39 = r10
            r43 = r12
        L_0x0ddf:
            r17 = r43
            r7 = r44
            r1 = r0
            r6 = r2
        L_0x0de5:
            r13 = r9
        L_0x0de6:
            r21 = r30
            r11 = r34
            r14 = r35
            r3 = r37
            r20 = r38
            goto L_0x14a4
        L_0x0df2:
            r0 = move-exception
            r43 = r12
            r17 = r43
            r7 = r44
            r1 = r0
            r6 = r2
            r13 = r9
        L_0x0dfc:
            r21 = r30
            r11 = r34
            r14 = r35
            r3 = r37
            r20 = r38
        L_0x0e06:
            r12 = 0
            goto L_0x17c4
        L_0x0e09:
            r0 = move-exception
            r43 = r12
            r17 = r43
            r7 = r44
            r1 = r0
            r6 = r2
            r13 = r9
        L_0x0e13:
            r21 = r30
            r11 = r34
            r14 = r35
            r3 = r37
            r20 = r38
        L_0x0e1d:
            r12 = 0
            goto L_0x1799
        L_0x0e20:
            r0 = move-exception
            r38 = r10
            r7 = r44
            r1 = r0
            r6 = r2
            r13 = r9
            r21 = r30
            r11 = r34
            r14 = r35
            r3 = r37
            r20 = r38
        L_0x0e32:
            r12 = 0
            r17 = 0
            goto L_0x17c4
        L_0x0e37:
            r0 = move-exception
            r38 = r10
            r7 = r44
            r1 = r0
            r6 = r2
            r13 = r9
            r21 = r30
            r11 = r34
            r14 = r35
            r3 = r37
            r20 = r38
        L_0x0e49:
            r12 = 0
            r17 = 0
            goto L_0x1799
        L_0x0e4e:
            r14 = r42
            r15 = r49
            r31 = r1
            r28 = r2
            r37 = r6
            r33 = r7
            r36 = r10
            r32 = r12
            r29 = r13
            r5 = 6
            r2 = r43
            java.lang.String r1 = "SELECT min(mid) FROM messages WHERE uid = %d AND mid < 0"
            r3 = 3
            if (r15 != r3) goto L_0x0var_
            if (r50 != 0) goto L_0x0var_
            org.telegram.SQLite.SQLiteDatabase r3 = r14.database     // Catch:{ Exception -> 0x0var_, all -> 0x0f5a }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x0var_, all -> 0x0f5a }
            r6 = 1
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0var_, all -> 0x0f5a }
            java.lang.Long r6 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x0var_, all -> 0x0f5a }
            r9 = 0
            r7[r9] = r6     // Catch:{ Exception -> 0x0var_, all -> 0x0f5a }
            java.lang.String r4 = java.lang.String.format(r4, r1, r7)     // Catch:{ Exception -> 0x0var_, all -> 0x0f5a }
            java.lang.Object[] r6 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x0var_, all -> 0x0f5a }
            org.telegram.SQLite.SQLiteCursor r3 = r3.queryFinalized(r4, r6)     // Catch:{ Exception -> 0x0var_, all -> 0x0f5a }
            boolean r4 = r3.next()     // Catch:{ Exception -> 0x0var_, all -> 0x0f5a }
            if (r4 == 0) goto L_0x0e8d
            int r10 = r3.intValue(r9)     // Catch:{ Exception -> 0x0var_, all -> 0x0f5a }
            goto L_0x0e8e
        L_0x0e8d:
            r10 = 0
        L_0x0e8e:
            r3.dispose()     // Catch:{ Exception -> 0x0var_, all -> 0x0var_ }
            org.telegram.SQLite.SQLiteDatabase r3 = r14.database     // Catch:{ Exception -> 0x0var_, all -> 0x0var_ }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x0var_, all -> 0x0var_ }
            java.lang.String r6 = "SELECT max(mid), max(date) FROM messages WHERE uid = %d AND out = 0 AND read_state IN(0,2) AND mid < 0"
            r7 = 1
            java.lang.Object[] r9 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x0var_, all -> 0x0var_ }
            java.lang.Long r7 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x0var_, all -> 0x0var_ }
            r11 = 0
            r9[r11] = r7     // Catch:{ Exception -> 0x0var_, all -> 0x0var_ }
            java.lang.String r4 = java.lang.String.format(r4, r6, r9)     // Catch:{ Exception -> 0x0var_, all -> 0x0var_ }
            java.lang.Object[] r6 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x0var_, all -> 0x0var_ }
            org.telegram.SQLite.SQLiteCursor r3 = r3.queryFinalized(r4, r6)     // Catch:{ Exception -> 0x0var_, all -> 0x0var_ }
            boolean r4 = r3.next()     // Catch:{ Exception -> 0x0var_, all -> 0x0var_ }
            if (r4 == 0) goto L_0x0ebb
            int r4 = r3.intValue(r11)     // Catch:{ Exception -> 0x0var_, all -> 0x0var_ }
            r6 = 1
            int r7 = r3.intValue(r6)     // Catch:{ Exception -> 0x0var_, all -> 0x0var_ }
            goto L_0x0ebd
        L_0x0ebb:
            r4 = 0
            r7 = 0
        L_0x0ebd:
            r3.dispose()     // Catch:{ Exception -> 0x0var_, all -> 0x0var_ }
            if (r4 == 0) goto L_0x0f1a
            org.telegram.SQLite.SQLiteDatabase r3 = r14.database     // Catch:{ Exception -> 0x0var_, all -> 0x0f0e }
            java.util.Locale r6 = java.util.Locale.US     // Catch:{ Exception -> 0x0var_, all -> 0x0f0e }
            java.lang.String r9 = "SELECT COUNT(*) FROM messages WHERE uid = %d AND mid <= %d AND out = 0 AND read_state IN(0,2)"
            r10 = 2
            java.lang.Object[] r11 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x0var_, all -> 0x0f0e }
            java.lang.Long r10 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x0var_, all -> 0x0f0e }
            r12 = 0
            r11[r12] = r10     // Catch:{ Exception -> 0x0var_, all -> 0x0f0e }
            java.lang.Integer r10 = java.lang.Integer.valueOf(r4)     // Catch:{ Exception -> 0x0var_, all -> 0x0f0e }
            r13 = 1
            r11[r13] = r10     // Catch:{ Exception -> 0x0var_, all -> 0x0f0e }
            java.lang.String r6 = java.lang.String.format(r6, r9, r11)     // Catch:{ Exception -> 0x0var_, all -> 0x0f0e }
            java.lang.Object[] r9 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x0var_, all -> 0x0f0e }
            org.telegram.SQLite.SQLiteCursor r3 = r3.queryFinalized(r6, r9)     // Catch:{ Exception -> 0x0var_, all -> 0x0f0e }
            boolean r6 = r3.next()     // Catch:{ Exception -> 0x0var_, all -> 0x0f0e }
            if (r6 == 0) goto L_0x0eee
            int r10 = r3.intValue(r12)     // Catch:{ Exception -> 0x0var_, all -> 0x0f0e }
            goto L_0x0eef
        L_0x0eee:
            r10 = 0
        L_0x0eef:
            r3.dispose()     // Catch:{ Exception -> 0x0var_, all -> 0x0efa }
            r34 = r4
            r35 = r7
            r9 = r10
            r3 = 3
            goto L_0x0f7a
        L_0x0efa:
            r0 = move-exception
            r1 = r0
            r6 = r2
            r11 = r4
            r14 = r7
            r13 = r10
            r3 = r37
            r12 = 0
            goto L_0x0f2b
        L_0x0var_:
            r0 = move-exception
            r1 = r0
            r6 = r2
            r11 = r4
            r14 = r7
            r13 = r10
            r3 = r37
            r12 = 0
            goto L_0x0f3e
        L_0x0f0e:
            r0 = move-exception
            r1 = r0
            r6 = r2
            r11 = r4
            r14 = r7
            goto L_0x0var_
        L_0x0var_:
            r0 = move-exception
            r1 = r0
            r6 = r2
            r11 = r4
            r14 = r7
            goto L_0x0f3a
        L_0x0f1a:
            r35 = r7
            r34 = r10
            r3 = 3
            r9 = 0
            goto L_0x0f7a
        L_0x0var_:
            r0 = move-exception
            r1 = r0
            r6 = r2
            r14 = r7
            r11 = r10
        L_0x0var_:
            r3 = r37
            r12 = 0
            r13 = 0
        L_0x0f2b:
            r17 = 1
            r20 = 0
            r21 = 0
            r7 = r44
            goto L_0x17c4
        L_0x0var_:
            r0 = move-exception
            r1 = r0
            r6 = r2
            r14 = r7
            r11 = r10
        L_0x0f3a:
            r3 = r37
            r12 = 0
            r13 = 0
        L_0x0f3e:
            r17 = 1
            r20 = 0
            r21 = 0
            r7 = r44
            goto L_0x1799
        L_0x0var_:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r6 = r2
            r11 = r10
            r3 = r37
            goto L_0x0var_
        L_0x0var_:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r6 = r2
            r11 = r10
            r3 = r37
            goto L_0x0f6f
        L_0x0f5a:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r6 = r2
            r3 = r37
            r11 = 0
        L_0x0var_:
            r12 = 0
            r13 = 0
            r14 = 0
            goto L_0x1762
        L_0x0var_:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r6 = r2
            r3 = r37
            r11 = 0
        L_0x0f6f:
            r12 = 0
            r13 = 0
            r14 = 0
            goto L_0x1773
        L_0x0var_:
            r3 = 3
            r9 = 0
            r34 = 0
            r35 = 0
        L_0x0f7a:
            if (r15 == r3) goto L_0x115e
            r4 = 4
            if (r15 != r4) goto L_0x0var_
            goto L_0x115e
        L_0x0var_:
            r4 = 1
            if (r15 != r4) goto L_0x0fd5
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            java.lang.String r6 = "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid < %d ORDER BY m.mid DESC LIMIT %d"
            java.lang.Object[] r7 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            java.lang.Long r3 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            r8 = 0
            r7[r8] = r3     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            java.lang.Integer r3 = java.lang.Integer.valueOf(r44)     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            r8 = 1
            r7[r8] = r3     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            java.lang.Integer r3 = java.lang.Integer.valueOf(r43)     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            r8 = 2
            r7[r8] = r3     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            java.lang.String r3 = java.lang.String.format(r4, r6, r7)     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            r4 = 0
            java.lang.Object[] r6 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r3, r6)     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            r4 = r44
            r6 = r4
            r5 = r2
            r2 = 0
            r3 = 6
        L_0x0fb2:
            r8 = 0
            r10 = 0
            r12 = 1
        L_0x0fb5:
            r39 = 0
            goto L_0x11c9
        L_0x0fb9:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r6 = r2
            r13 = r9
            r11 = r34
            r14 = r35
            r3 = r37
            goto L_0x1761
        L_0x0fc7:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r6 = r2
            r13 = r9
            r11 = r34
            r14 = r35
            r3 = r37
            goto L_0x1772
        L_0x0fd5:
            if (r50 == 0) goto L_0x1039
            r3 = 6
            if (r44 == 0) goto L_0x1009
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            java.lang.String r5 = "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid > %d ORDER BY m.mid ASC LIMIT %d"
            r6 = 3
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            java.lang.Long r6 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            r8 = 0
            r7[r8] = r6     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r44)     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            r8 = 1
            r7[r8] = r6     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r43)     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            r8 = 2
            r7[r8] = r6     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            java.lang.String r4 = java.lang.String.format(r4, r5, r7)     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            r5 = 0
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r4, r6)     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
        L_0x1003:
            r4 = r44
            r6 = r4
            r5 = r2
            r2 = 0
            goto L_0x0fb2
        L_0x1009:
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            java.lang.String r5 = "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.date <= %d ORDER BY m.mid ASC LIMIT %d,%d"
            r6 = 4
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            java.lang.Long r6 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            r8 = 0
            r7[r8] = r6     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r50)     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            r10 = 1
            r7[r10] = r6     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            r10 = 2
            r7[r10] = r6     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r43)     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            r10 = 3
            r7[r10] = r6     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            java.lang.String r4 = java.lang.String.format(r4, r5, r7)     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            java.lang.Object[] r5 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r4, r5)     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            goto L_0x1003
        L_0x1039:
            r3 = 6
            r4 = 2
            if (r15 != r4) goto L_0x10c4
            org.telegram.SQLite.SQLiteDatabase r4 = r14.database     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            java.util.Locale r5 = java.util.Locale.US     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            r6 = 1
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            java.lang.Long r6 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            r10 = 0
            r7[r10] = r6     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            java.lang.String r1 = java.lang.String.format(r5, r1, r7)     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            java.lang.Object[] r5 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            org.telegram.SQLite.SQLiteCursor r1 = r4.queryFinalized(r1, r5)     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            boolean r4 = r1.next()     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            if (r4 == 0) goto L_0x1061
            int r4 = r1.intValue(r10)     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            r10 = r4
            goto L_0x1062
        L_0x1061:
            r10 = 0
        L_0x1062:
            r1.dispose()     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
            java.lang.String r5 = "SELECT max(mid), max(date) FROM messages WHERE uid = %d AND out = 0 AND read_state IN(0,2) AND mid < 0"
            r6 = 1
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
            java.lang.Long r6 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
            r11 = 0
            r7[r11] = r6     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
            java.lang.String r4 = java.lang.String.format(r4, r5, r7)     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
            java.lang.Object[] r5 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r4, r5)     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
            boolean r4 = r1.next()     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
            if (r4 == 0) goto L_0x108e
            int r34 = r1.intValue(r11)     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
            r4 = 1
            int r35 = r1.intValue(r4)     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
        L_0x108e:
            r1.dispose()     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
            if (r34 == 0) goto L_0x10c1
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
            java.lang.String r5 = "SELECT COUNT(*) FROM messages WHERE uid = %d AND mid <= %d AND out = 0 AND read_state IN(0,2)"
            r6 = 2
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
            java.lang.Long r6 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
            r11 = 0
            r7[r11] = r6     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r34)     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
            r12 = 1
            r7[r12] = r6     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
            java.lang.String r4 = java.lang.String.format(r4, r5, r7)     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
            java.lang.Object[] r5 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r4, r5)     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
            boolean r4 = r1.next()     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
            if (r4 == 0) goto L_0x10be
            int r9 = r1.intValue(r11)     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
        L_0x10be:
            r1.dispose()     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
        L_0x10c1:
            r1 = r10
            r10 = r9
            goto L_0x10c6
        L_0x10c4:
            r10 = r9
            r1 = 0
        L_0x10c6:
            if (r2 > r10) goto L_0x10d1
            if (r10 >= r8) goto L_0x10cb
            goto L_0x10d1
        L_0x10cb:
            int r4 = r10 - r2
            int r2 = r2 + 10
            r9 = r10
            goto L_0x10e1
        L_0x10d1:
            int r4 = r10 + 10
            int r2 = java.lang.Math.max(r2, r4)     // Catch:{ Exception -> 0x1149, all -> 0x1135 }
            if (r10 >= r8) goto L_0x10df
            r4 = 0
            r9 = 0
            r10 = 0
            r34 = 0
            goto L_0x10e2
        L_0x10df:
            r9 = r10
            r4 = 0
        L_0x10e1:
            r10 = r1
        L_0x10e2:
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
            java.util.Locale r5 = java.util.Locale.US     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
            java.lang.String r6 = "SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d ORDER BY m.mid ASC LIMIT %d,%d"
            r7 = 3
            java.lang.Object[] r8 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
            java.lang.Long r7 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
            r11 = 0
            r8[r11] = r7     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r4)     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
            r7 = 1
            r8[r7] = r4     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
            java.lang.Integer r4 = java.lang.Integer.valueOf(r2)     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
            r7 = 2
            r8[r7] = r4     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
            java.lang.String r4 = java.lang.String.format(r5, r6, r8)     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
            r5 = 0
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r4, r6)     // Catch:{ Exception -> 0x1126, all -> 0x1117 }
        L_0x110b:
            r4 = r44
            r6 = r4
            r5 = r2
            r39 = r10
            r2 = 0
            r8 = 0
            r10 = 0
            r12 = 1
            goto L_0x11c9
        L_0x1117:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r6 = r2
            r13 = r9
            r12 = r10
            r11 = r34
            r14 = r35
            r3 = r37
            goto L_0x1762
        L_0x1126:
            r0 = move-exception
            r7 = r44
            r1 = r0
            r6 = r2
            r13 = r9
            r12 = r10
            r11 = r34
            r14 = r35
            r3 = r37
            goto L_0x1773
        L_0x1135:
            r0 = move-exception
            r7 = r44
            r12 = r1
            r6 = r2
            r13 = r10
            r11 = r34
            r14 = r35
            r3 = r37
            r17 = 1
            r20 = 0
            r21 = 0
            goto L_0x17c3
        L_0x1149:
            r0 = move-exception
            r7 = r44
            r12 = r1
            r6 = r2
            r13 = r10
            r11 = r34
            r14 = r35
            r3 = r37
            r17 = 1
            r20 = 0
            r21 = 0
        L_0x115b:
            r1 = r0
            goto L_0x1799
        L_0x115e:
            r3 = 6
            org.telegram.SQLite.SQLiteDatabase r4 = r14.database     // Catch:{ Exception -> 0x1765, all -> 0x1754 }
            java.util.Locale r5 = java.util.Locale.US     // Catch:{ Exception -> 0x1765, all -> 0x1754 }
            r6 = 1
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x1765, all -> 0x1754 }
            java.lang.Long r6 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x1765, all -> 0x1754 }
            r8 = 0
            r7[r8] = r6     // Catch:{ Exception -> 0x1765, all -> 0x1754 }
            java.lang.String r1 = java.lang.String.format(r5, r1, r7)     // Catch:{ Exception -> 0x1765, all -> 0x1754 }
            java.lang.Object[] r5 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x1765, all -> 0x1754 }
            org.telegram.SQLite.SQLiteCursor r1 = r4.queryFinalized(r1, r5)     // Catch:{ Exception -> 0x1765, all -> 0x1754 }
            boolean r4 = r1.next()     // Catch:{ Exception -> 0x1765, all -> 0x1754 }
            if (r4 == 0) goto L_0x1182
            int r10 = r1.intValue(r8)     // Catch:{ Exception -> 0x0fc7, all -> 0x0fb9 }
            goto L_0x1183
        L_0x1182:
            r10 = 0
        L_0x1183:
            r1.dispose()     // Catch:{ Exception -> 0x1745, all -> 0x1736 }
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x1745, all -> 0x1736 }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x1745, all -> 0x1736 }
            java.lang.String r5 = "SELECT * FROM (SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid <= %d ORDER BY m.mid DESC LIMIT %d) UNION SELECT * FROM (SELECT m.read_state, m.data, m.send_state, m.mid, m.date, r.random_id, m.replydata, m.media, m.ttl, m.mention FROM messages as m LEFT JOIN randoms as r ON r.mid = m.mid WHERE m.uid = %d AND m.mid > %d ORDER BY m.mid ASC LIMIT %d)"
            java.lang.Object[] r6 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x1745, all -> 0x1736 }
            java.lang.Long r7 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x1745, all -> 0x1736 }
            r8 = 0
            r6[r8] = r7     // Catch:{ Exception -> 0x1745, all -> 0x1736 }
            java.lang.Long r7 = java.lang.Long.valueOf(r21)     // Catch:{ Exception -> 0x1745, all -> 0x1736 }
            r8 = 1
            r6[r8] = r7     // Catch:{ Exception -> 0x1745, all -> 0x1736 }
            int r7 = r2 / 2
            java.lang.Integer r7 = java.lang.Integer.valueOf(r7)     // Catch:{ Exception -> 0x1745, all -> 0x1736 }
            r8 = 2
            r6[r8] = r7     // Catch:{ Exception -> 0x1745, all -> 0x1736 }
            java.lang.Long r7 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x1745, all -> 0x1736 }
            r8 = 3
            r6[r8] = r7     // Catch:{ Exception -> 0x1745, all -> 0x1736 }
            java.lang.Long r7 = java.lang.Long.valueOf(r21)     // Catch:{ Exception -> 0x1745, all -> 0x1736 }
            r8 = 4
            r6[r8] = r7     // Catch:{ Exception -> 0x1745, all -> 0x1736 }
            int r7 = r2 / 2
            java.lang.Integer r7 = java.lang.Integer.valueOf(r7)     // Catch:{ Exception -> 0x1745, all -> 0x1736 }
            r8 = 5
            r6[r8] = r7     // Catch:{ Exception -> 0x1745, all -> 0x1736 }
            java.lang.String r4 = java.lang.String.format(r4, r5, r6)     // Catch:{ Exception -> 0x1745, all -> 0x1736 }
            r5 = 0
            java.lang.Object[] r6 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x1745, all -> 0x1736 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r4, r6)     // Catch:{ Exception -> 0x1745, all -> 0x1736 }
            goto L_0x110b
        L_0x11c9:
            r7 = 2147483647(0x7fffffff, float:NaN)
            if (r1 == 0) goto L_0x14a8
            r11 = -2147483648(0xfffffffvar_, float:-0.0)
        L_0x11d0:
            boolean r13 = r1.next()     // Catch:{ Exception -> 0x1488, all -> 0x1468 }
            if (r13 == 0) goto L_0x144d
            r13 = 1
            org.telegram.tgnet.NativeByteBuffer r3 = r1.byteBufferValue(r13)     // Catch:{ Exception -> 0x1488, all -> 0x1468 }
            if (r3 == 0) goto L_0x141c
            r43 = r4
            r13 = 0
            int r4 = r3.readInt32(r13)     // Catch:{ Exception -> 0x1419, all -> 0x1417 }
            org.telegram.tgnet.TLRPC$Message r4 = org.telegram.tgnet.TLRPC.Message.TLdeserialize(r3, r4, r13)     // Catch:{ Exception -> 0x1419, all -> 0x1417 }
            r44 = r5
            r13 = 2
            int r5 = r1.intValue(r13)     // Catch:{ Exception -> 0x1414, all -> 0x1411 }
            r4.send_state = r5     // Catch:{ Exception -> 0x1414, all -> 0x1411 }
            r5 = 3
            int r13 = r1.intValue(r5)     // Catch:{ Exception -> 0x1414, all -> 0x1411 }
            r4.id = r13     // Catch:{ Exception -> 0x1414, all -> 0x1411 }
            int r5 = r4.id     // Catch:{ Exception -> 0x1414, all -> 0x1411 }
            if (r5 <= 0) goto L_0x1233
            int r5 = r4.send_state     // Catch:{ Exception -> 0x121e, all -> 0x1209 }
            if (r5 == 0) goto L_0x1233
            int r5 = r4.send_state     // Catch:{ Exception -> 0x121e, all -> 0x1209 }
            r13 = 3
            if (r5 == r13) goto L_0x1233
            r5 = 0
            r4.send_state = r5     // Catch:{ Exception -> 0x121e, all -> 0x1209 }
            goto L_0x1233
        L_0x1209:
            r0 = move-exception
            r7 = r43
            r6 = r44
            r1 = r0
            r21 = r2
            r20 = r8
            r13 = r9
            r17 = r12
        L_0x1216:
            r11 = r34
            r14 = r35
            r3 = r37
            goto L_0x1484
        L_0x121e:
            r0 = move-exception
            r7 = r43
            r6 = r44
            r1 = r0
            r21 = r2
            r20 = r8
            r13 = r9
            r17 = r12
        L_0x122b:
            r11 = r34
            r14 = r35
            r3 = r37
            goto L_0x14a4
        L_0x1233:
            r50 = r12
            r5 = r33
            long r12 = (long) r5
            r22 = r9
            r21 = r10
            r9 = r46
            int r30 = (r9 > r12 ? 1 : (r9 == r12 ? 0 : -1))
            if (r30 != 0) goto L_0x1264
            r12 = 1
            r4.out = r12     // Catch:{ Exception -> 0x1255, all -> 0x1246 }
            goto L_0x1264
        L_0x1246:
            r0 = move-exception
            r7 = r43
            r6 = r44
            r17 = r50
            r1 = r0
            r21 = r2
            r20 = r8
            r13 = r22
            goto L_0x1216
        L_0x1255:
            r0 = move-exception
            r7 = r43
            r6 = r44
            r17 = r50
            r1 = r0
            r21 = r2
            r20 = r8
            r13 = r22
            goto L_0x122b
        L_0x1264:
            r4.readAttachPath(r3, r5)     // Catch:{ Exception -> 0x140e, all -> 0x140b }
            r3.reuse()     // Catch:{ Exception -> 0x140e, all -> 0x140b }
            r3 = 0
            int r12 = r1.intValue(r3)     // Catch:{ Exception -> 0x140e, all -> 0x140b }
            org.telegram.messenger.MessageObject.setUnreadFlags(r4, r12)     // Catch:{ Exception -> 0x140e, all -> 0x140b }
            int r3 = r4.id     // Catch:{ Exception -> 0x140e, all -> 0x140b }
            if (r3 <= 0) goto L_0x1282
            int r3 = r4.id     // Catch:{ Exception -> 0x1255, all -> 0x1246 }
            int r7 = java.lang.Math.min(r3, r7)     // Catch:{ Exception -> 0x1255, all -> 0x1246 }
            int r3 = r4.id     // Catch:{ Exception -> 0x1255, all -> 0x1246 }
            int r11 = java.lang.Math.max(r3, r11)     // Catch:{ Exception -> 0x1255, all -> 0x1246 }
        L_0x1282:
            r3 = 4
            int r12 = r1.intValue(r3)     // Catch:{ Exception -> 0x140e, all -> 0x140b }
            r4.date = r12     // Catch:{ Exception -> 0x140e, all -> 0x140b }
            r4.dialog_id = r9     // Catch:{ Exception -> 0x140e, all -> 0x140b }
            int r3 = r4.flags     // Catch:{ Exception -> 0x140e, all -> 0x140b }
            r3 = r3 & 1024(0x400, float:1.435E-42)
            if (r3 == 0) goto L_0x1298
            r3 = 7
            int r3 = r1.intValue(r3)     // Catch:{ Exception -> 0x1255, all -> 0x1246 }
            r4.views = r3     // Catch:{ Exception -> 0x1255, all -> 0x1246 }
        L_0x1298:
            if (r31 == 0) goto L_0x12a6
            int r3 = r4.ttl     // Catch:{ Exception -> 0x1255, all -> 0x1246 }
            if (r3 != 0) goto L_0x12a6
            r3 = 8
            int r3 = r1.intValue(r3)     // Catch:{ Exception -> 0x1255, all -> 0x1246 }
            r4.ttl = r3     // Catch:{ Exception -> 0x1255, all -> 0x1246 }
        L_0x12a6:
            r3 = 9
            int r3 = r1.intValue(r3)     // Catch:{ Exception -> 0x140e, all -> 0x140b }
            if (r3 == 0) goto L_0x12b1
            r3 = 1
            r4.mentioned = r3     // Catch:{ Exception -> 0x1255, all -> 0x1246 }
        L_0x12b1:
            r3 = r37
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r12 = r3.messages     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            r12.add(r4)     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            r12 = r27
            r13 = r36
            addUsersAndChatsFromMessage(r4, r12, r13)     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            r27 = r7
            int r7 = r4.reply_to_msg_id     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            if (r7 != 0) goto L_0x12da
            long r9 = r4.reply_to_random_id     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            r16 = 0
            int r7 = (r9 > r16 ? 1 : (r9 == r16 ? 0 : -1))
            if (r7 == 0) goto L_0x12ce
            goto L_0x12da
        L_0x12ce:
            r30 = r11
            r33 = r12
            r7 = r28
            r9 = r29
            r18 = 32
            goto L_0x13a5
        L_0x12da:
            r9 = 6
            boolean r7 = r1.isNull(r9)     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            if (r7 != 0) goto L_0x1311
            org.telegram.tgnet.NativeByteBuffer r7 = r1.byteBufferValue(r9)     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            if (r7 == 0) goto L_0x1311
            r10 = 0
            int r9 = r7.readInt32(r10)     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            org.telegram.tgnet.TLRPC$Message r9 = org.telegram.tgnet.TLRPC.Message.TLdeserialize(r7, r9, r10)     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            r4.replyMessage = r9     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            org.telegram.tgnet.TLRPC$Message r9 = r4.replyMessage     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            r9.readAttachPath(r7, r5)     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            r7.reuse()     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            org.telegram.tgnet.TLRPC$Message r7 = r4.replyMessage     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            if (r7 == 0) goto L_0x1311
            boolean r7 = org.telegram.messenger.MessageObject.isMegagroup(r4)     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            if (r7 == 0) goto L_0x130c
            org.telegram.tgnet.TLRPC$Message r7 = r4.replyMessage     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            int r9 = r7.flags     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            r9 = r9 | r23
            r7.flags = r9     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
        L_0x130c:
            org.telegram.tgnet.TLRPC$Message r7 = r4.replyMessage     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            addUsersAndChatsFromMessage(r7, r12, r13)     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
        L_0x1311:
            org.telegram.tgnet.TLRPC$Message r7 = r4.replyMessage     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            if (r7 != 0) goto L_0x12ce
            int r7 = r4.reply_to_msg_id     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            if (r7 == 0) goto L_0x1368
            int r7 = r4.reply_to_msg_id     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            long r9 = (long) r7     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            org.telegram.tgnet.TLRPC$Peer r7 = r4.to_id     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            int r7 = r7.channel_id     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            if (r7 == 0) goto L_0x1331
            org.telegram.tgnet.TLRPC$Peer r7 = r4.to_id     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            int r7 = r7.channel_id     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            r30 = r11
            r33 = r12
            long r11 = (long) r7     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            r18 = 32
            long r11 = r11 << r18
            long r9 = r9 | r11
            goto L_0x1337
        L_0x1331:
            r30 = r11
            r33 = r12
            r18 = 32
        L_0x1337:
            java.lang.Long r7 = java.lang.Long.valueOf(r9)     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            r12 = r32
            boolean r7 = r12.contains(r7)     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            if (r7 != 0) goto L_0x134a
            java.lang.Long r7 = java.lang.Long.valueOf(r9)     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            r12.add(r7)     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
        L_0x134a:
            int r7 = r4.reply_to_msg_id     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            r9 = r29
            java.lang.Object r7 = r9.get(r7)     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            java.util.ArrayList r7 = (java.util.ArrayList) r7     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            if (r7 != 0) goto L_0x1360
            java.util.ArrayList r7 = new java.util.ArrayList     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            r7.<init>()     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            int r10 = r4.reply_to_msg_id     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            r9.put(r10, r7)     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
        L_0x1360:
            r7.add(r4)     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            r32 = r12
            r7 = r28
            goto L_0x13a5
        L_0x1368:
            r30 = r11
            r33 = r12
            r9 = r29
            r12 = r32
            r18 = 32
            long r10 = r4.reply_to_random_id     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            java.lang.Long r7 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            boolean r7 = r12.contains(r7)     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            if (r7 != 0) goto L_0x1387
            long r10 = r4.reply_to_random_id     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            java.lang.Long r7 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            r12.add(r7)     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
        L_0x1387:
            long r10 = r4.reply_to_random_id     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            r7 = r28
            java.lang.Object r10 = r7.get(r10)     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            java.util.ArrayList r10 = (java.util.ArrayList) r10     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            if (r10 != 0) goto L_0x13a0
            java.util.ArrayList r10 = new java.util.ArrayList     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            r10.<init>()     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            r32 = r12
            long r11 = r4.reply_to_random_id     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            r7.put(r11, r10)     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            goto L_0x13a2
        L_0x13a0:
            r32 = r12
        L_0x13a2:
            r10.add(r4)     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
        L_0x13a5:
            if (r31 != 0) goto L_0x13b5
            r10 = 5
            boolean r11 = r1.isNull(r10)     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            if (r11 != 0) goto L_0x13b6
            long r11 = r1.longValue(r10)     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            r4.random_id = r11     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            goto L_0x13b6
        L_0x13b5:
            r10 = 5
        L_0x13b6:
            boolean r11 = org.telegram.messenger.MessageObject.isSecretMedia(r4)     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            if (r11 == 0) goto L_0x13fe
            org.telegram.SQLite.SQLiteDatabase r11 = r14.database     // Catch:{ Exception -> 0x13f2, all -> 0x1730 }
            java.util.Locale r12 = java.util.Locale.US     // Catch:{ Exception -> 0x13f2, all -> 0x1730 }
            java.lang.String r10 = "SELECT date FROM enc_tasks_v2 WHERE mid = %d"
            r29 = r5
            r28 = r7
            r7 = 1
            java.lang.Object[] r5 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x13f0, all -> 0x1730 }
            int r7 = r4.id     // Catch:{ Exception -> 0x13f0, all -> 0x1730 }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r7)     // Catch:{ Exception -> 0x13f0, all -> 0x1730 }
            r36 = r9
            r9 = 0
            r5[r9] = r7     // Catch:{ Exception -> 0x13ee, all -> 0x1730 }
            java.lang.String r5 = java.lang.String.format(r12, r10, r5)     // Catch:{ Exception -> 0x13ee, all -> 0x1730 }
            java.lang.Object[] r7 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x13ee, all -> 0x1730 }
            org.telegram.SQLite.SQLiteCursor r5 = r11.queryFinalized(r5, r7)     // Catch:{ Exception -> 0x13ee, all -> 0x1730 }
            boolean r7 = r5.next()     // Catch:{ Exception -> 0x13ee, all -> 0x1730 }
            if (r7 == 0) goto L_0x13ea
            int r7 = r5.intValue(r9)     // Catch:{ Exception -> 0x13ee, all -> 0x1730 }
            r4.destroyTime = r7     // Catch:{ Exception -> 0x13ee, all -> 0x1730 }
        L_0x13ea:
            r5.dispose()     // Catch:{ Exception -> 0x13ee, all -> 0x1730 }
            goto L_0x1404
        L_0x13ee:
            r0 = move-exception
            goto L_0x13f9
        L_0x13f0:
            r0 = move-exception
            goto L_0x13f7
        L_0x13f2:
            r0 = move-exception
            r29 = r5
            r28 = r7
        L_0x13f7:
            r36 = r9
        L_0x13f9:
            r4 = r0
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r4)     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            goto L_0x1404
        L_0x13fe:
            r29 = r5
            r28 = r7
            r36 = r9
        L_0x1404:
            r7 = r27
            r4 = r28
            r11 = r30
            goto L_0x1434
        L_0x140b:
            r0 = move-exception
            goto L_0x1471
        L_0x140e:
            r0 = move-exception
            goto L_0x1491
        L_0x1411:
            r0 = move-exception
            goto L_0x146d
        L_0x1414:
            r0 = move-exception
            goto L_0x148d
        L_0x1417:
            r0 = move-exception
            goto L_0x146b
        L_0x1419:
            r0 = move-exception
            goto L_0x148b
        L_0x141c:
            r43 = r4
            r44 = r5
            r22 = r9
            r21 = r10
            r50 = r12
            r4 = r28
            r13 = r36
            r3 = r37
            r18 = 32
            r36 = r29
            r29 = r33
            r33 = r27
        L_0x1434:
            r5 = r44
            r12 = r50
            r37 = r3
            r28 = r4
            r10 = r21
            r9 = r22
            r27 = r33
            r3 = 6
            r4 = r43
            r33 = r29
            r29 = r36
            r36 = r13
            goto L_0x11d0
        L_0x144d:
            r43 = r4
            r44 = r5
            r22 = r9
            r21 = r10
            r50 = r12
            r4 = r28
            r13 = r36
            r3 = r37
            r36 = r29
            r29 = r33
            r33 = r27
            r1.dispose()     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            goto L_0x14c0
        L_0x1468:
            r0 = move-exception
            r43 = r4
        L_0x146b:
            r44 = r5
        L_0x146d:
            r22 = r9
            r50 = r12
        L_0x1471:
            r3 = r37
        L_0x1473:
            r7 = r43
            r6 = r44
            r17 = r50
            r1 = r0
            r21 = r2
            r20 = r8
            r13 = r22
            r11 = r34
            r14 = r35
        L_0x1484:
            r12 = r39
            goto L_0x17c4
        L_0x1488:
            r0 = move-exception
            r43 = r4
        L_0x148b:
            r44 = r5
        L_0x148d:
            r22 = r9
            r50 = r12
        L_0x1491:
            r3 = r37
        L_0x1493:
            r7 = r43
            r6 = r44
            r17 = r50
            r1 = r0
            r21 = r2
            r20 = r8
            r13 = r22
            r11 = r34
            r14 = r35
        L_0x14a4:
            r12 = r39
            goto L_0x1799
        L_0x14a8:
            r43 = r4
            r44 = r5
            r22 = r9
            r21 = r10
            r50 = r12
            r4 = r28
            r13 = r36
            r3 = r37
            r36 = r29
            r29 = r33
            r33 = r27
            r11 = -2147483648(0xfffffffvar_, float:-0.0)
        L_0x14c0:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r3.messages     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            org.telegram.messenger.-$$Lambda$MessagesStorage$w-CS_xp2CSQ-MvRi_vpbZTsK6rk r5 = org.telegram.messenger.$$Lambda$MessagesStorage$wCS_xp2CSQMvRi_vpbZTsK6rk.INSTANCE     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            java.util.Collections.sort(r1, r5)     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            if (r31 == 0) goto L_0x1507
            r1 = 3
            if (r15 == r1) goto L_0x14d9
            r1 = 4
            if (r15 == r1) goto L_0x14d9
            r1 = 2
            if (r15 != r1) goto L_0x14d7
            if (r8 == 0) goto L_0x14d7
            if (r21 != 0) goto L_0x14d7
            goto L_0x14d9
        L_0x14d7:
            r1 = 4
            goto L_0x14f4
        L_0x14d9:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r3.messages     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            boolean r1 = r1.isEmpty()     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            if (r1 != 0) goto L_0x14d7
            if (r7 > r6) goto L_0x14e5
            if (r11 >= r6) goto L_0x14d7
        L_0x14e5:
            r32.clear()     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            r33.clear()     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            r13.clear()     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r3.messages     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            r1.clear()     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            goto L_0x14d7
        L_0x14f4:
            if (r15 == r1) goto L_0x14f9
            r1 = 3
            if (r15 != r1) goto L_0x1507
        L_0x14f9:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r3.messages     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            int r1 = r1.size()     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            r5 = 1
            if (r1 != r5) goto L_0x1507
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r3.messages     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            r1.clear()     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
        L_0x1507:
            if (r2 == 0) goto L_0x1534
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            java.util.Locale r5 = java.util.Locale.US     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            java.lang.String r6 = "SELECT COUNT(mid) FROM messages WHERE uid = %d AND mention = 1 AND read_state IN(0, 1)"
            r7 = 1
            java.lang.Object[] r9 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            java.lang.Long r7 = java.lang.Long.valueOf(r46)     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            r10 = 0
            r9[r10] = r7     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            java.lang.String r5 = java.lang.String.format(r5, r6, r9)     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            java.lang.Object[] r6 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r5, r6)     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            boolean r5 = r1.next()     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            if (r5 == 0) goto L_0x152f
            int r5 = r1.intValue(r10)     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
            if (r2 == r5) goto L_0x1531
        L_0x152f:
            int r2 = r2 * -1
        L_0x1531:
            r1.dispose()     // Catch:{ Exception -> 0x1733, all -> 0x1730 }
        L_0x1534:
            r7 = r43
            r6 = r44
            r18 = r50
            r21 = r2
            r1 = r8
            r11 = r34
            r12 = r39
        L_0x1541:
            boolean r2 = r32.isEmpty()     // Catch:{ Exception -> 0x171e, all -> 0x170c }
            java.lang.String r5 = ","
            if (r2 != 0) goto L_0x16b5
            int r2 = r36.size()     // Catch:{ Exception -> 0x171e, all -> 0x170c }
            if (r2 <= 0) goto L_0x157f
            org.telegram.SQLite.SQLiteDatabase r2 = r14.database     // Catch:{ Exception -> 0x157a, all -> 0x1575 }
            java.util.Locale r8 = java.util.Locale.US     // Catch:{ Exception -> 0x157a, all -> 0x1575 }
            java.lang.String r9 = "SELECT data, mid, date FROM messages WHERE mid IN(%s)"
            r10 = 1
            java.lang.Object[] r15 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x157a, all -> 0x1575 }
            r10 = r32
            java.lang.String r10 = android.text.TextUtils.join(r5, r10)     // Catch:{ Exception -> 0x157a, all -> 0x1575 }
            r43 = r1
            r1 = 0
            r15[r1] = r10     // Catch:{ Exception -> 0x1572, all -> 0x156f }
            java.lang.String r8 = java.lang.String.format(r8, r9, r15)     // Catch:{ Exception -> 0x1572, all -> 0x156f }
            java.lang.Object[] r9 = new java.lang.Object[r1]     // Catch:{ Exception -> 0x1572, all -> 0x156f }
            org.telegram.SQLite.SQLiteCursor r1 = r2.queryFinalized(r8, r9)     // Catch:{ Exception -> 0x1572, all -> 0x156f }
        L_0x156d:
            r10 = 0
            goto L_0x159d
        L_0x156f:
            r0 = move-exception
            goto L_0x1713
        L_0x1572:
            r0 = move-exception
            goto L_0x1725
        L_0x1575:
            r0 = move-exception
            r43 = r1
            goto L_0x1713
        L_0x157a:
            r0 = move-exception
            r43 = r1
            goto L_0x1725
        L_0x157f:
            r43 = r1
            r10 = r32
            org.telegram.SQLite.SQLiteDatabase r1 = r14.database     // Catch:{ Exception -> 0x16b2, all -> 0x16af }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x16b2, all -> 0x16af }
            java.lang.String r8 = "SELECT m.data, m.mid, m.date, r.random_id FROM randoms as r INNER JOIN messages as m ON r.mid = m.mid WHERE r.random_id IN(%s)"
            r9 = 1
            java.lang.Object[] r15 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x16b2, all -> 0x16af }
            java.lang.String r9 = android.text.TextUtils.join(r5, r10)     // Catch:{ Exception -> 0x16b2, all -> 0x16af }
            r10 = 0
            r15[r10] = r9     // Catch:{ Exception -> 0x16b2, all -> 0x16af }
            java.lang.String r2 = java.lang.String.format(r2, r8, r15)     // Catch:{ Exception -> 0x16b2, all -> 0x16af }
            java.lang.Object[] r8 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x16b2, all -> 0x16af }
            org.telegram.SQLite.SQLiteCursor r1 = r1.queryFinalized(r2, r8)     // Catch:{ Exception -> 0x16b2, all -> 0x16af }
        L_0x159d:
            boolean r2 = r1.next()     // Catch:{ Exception -> 0x16b2, all -> 0x16af }
            if (r2 == 0) goto L_0x165f
            org.telegram.tgnet.NativeByteBuffer r2 = r1.byteBufferValue(r10)     // Catch:{ Exception -> 0x165a, all -> 0x1655 }
            if (r2 == 0) goto L_0x164b
            int r8 = r2.readInt32(r10)     // Catch:{ Exception -> 0x165a, all -> 0x1655 }
            org.telegram.tgnet.TLRPC$Message r8 = org.telegram.tgnet.TLRPC.Message.TLdeserialize(r2, r8, r10)     // Catch:{ Exception -> 0x165a, all -> 0x1655 }
            r9 = r29
            r8.readAttachPath(r2, r9)     // Catch:{ Exception -> 0x165a, all -> 0x1655 }
            r2.reuse()     // Catch:{ Exception -> 0x165a, all -> 0x1655 }
            r15 = 1
            int r2 = r1.intValue(r15)     // Catch:{ Exception -> 0x165a, all -> 0x1655 }
            r8.id = r2     // Catch:{ Exception -> 0x165a, all -> 0x1655 }
            r2 = 2
            int r10 = r1.intValue(r2)     // Catch:{ Exception -> 0x165a, all -> 0x1655 }
            r8.date = r10     // Catch:{ Exception -> 0x165a, all -> 0x1655 }
            r29 = r9
            r9 = r46
            r8.dialog_id = r9     // Catch:{ Exception -> 0x165a, all -> 0x1655 }
            r2 = r33
            addUsersAndChatsFromMessage(r8, r2, r13)     // Catch:{ Exception -> 0x165a, all -> 0x1655 }
            int r20 = r36.size()     // Catch:{ Exception -> 0x165a, all -> 0x1655 }
            if (r20 <= 0) goto L_0x1610
            int r15 = r8.id     // Catch:{ Exception -> 0x1572, all -> 0x156f }
            r9 = r36
            java.lang.Object r10 = r9.get(r15)     // Catch:{ Exception -> 0x1572, all -> 0x156f }
            java.util.ArrayList r10 = (java.util.ArrayList) r10     // Catch:{ Exception -> 0x1572, all -> 0x156f }
            r36 = r9
            if (r10 == 0) goto L_0x160d
            r15 = 0
        L_0x15e7:
            int r9 = r10.size()     // Catch:{ Exception -> 0x1572, all -> 0x156f }
            if (r15 >= r9) goto L_0x160d
            java.lang.Object r9 = r10.get(r15)     // Catch:{ Exception -> 0x1572, all -> 0x156f }
            org.telegram.tgnet.TLRPC$Message r9 = (org.telegram.tgnet.TLRPC.Message) r9     // Catch:{ Exception -> 0x1572, all -> 0x156f }
            r9.replyMessage = r8     // Catch:{ Exception -> 0x1572, all -> 0x156f }
            boolean r24 = org.telegram.messenger.MessageObject.isMegagroup(r9)     // Catch:{ Exception -> 0x1572, all -> 0x156f }
            if (r24 == 0) goto L_0x1606
            org.telegram.tgnet.TLRPC$Message r9 = r9.replyMessage     // Catch:{ Exception -> 0x1572, all -> 0x156f }
            r44 = r10
            int r10 = r9.flags     // Catch:{ Exception -> 0x1572, all -> 0x156f }
            r10 = r10 | r23
            r9.flags = r10     // Catch:{ Exception -> 0x1572, all -> 0x156f }
            goto L_0x1608
        L_0x1606:
            r44 = r10
        L_0x1608:
            int r15 = r15 + 1
            r10 = r44
            goto L_0x15e7
        L_0x160d:
            r44 = r11
            goto L_0x164f
        L_0x1610:
            r44 = r11
            r9 = 3
            long r10 = r1.longValue(r9)     // Catch:{ Exception -> 0x1649, all -> 0x1647 }
            java.lang.Object r15 = r4.get(r10)     // Catch:{ Exception -> 0x1649, all -> 0x1647 }
            java.util.ArrayList r15 = (java.util.ArrayList) r15     // Catch:{ Exception -> 0x1649, all -> 0x1647 }
            r4.remove(r10)     // Catch:{ Exception -> 0x1649, all -> 0x1647 }
            if (r15 == 0) goto L_0x164f
            r10 = 0
        L_0x1623:
            int r11 = r15.size()     // Catch:{ Exception -> 0x1649, all -> 0x1647 }
            if (r10 >= r11) goto L_0x164f
            java.lang.Object r11 = r15.get(r10)     // Catch:{ Exception -> 0x1649, all -> 0x1647 }
            org.telegram.tgnet.TLRPC$Message r11 = (org.telegram.tgnet.TLRPC.Message) r11     // Catch:{ Exception -> 0x1649, all -> 0x1647 }
            r11.replyMessage = r8     // Catch:{ Exception -> 0x1649, all -> 0x1647 }
            int r9 = r8.id     // Catch:{ Exception -> 0x1649, all -> 0x1647 }
            r11.reply_to_msg_id = r9     // Catch:{ Exception -> 0x1649, all -> 0x1647 }
            boolean r9 = org.telegram.messenger.MessageObject.isMegagroup(r11)     // Catch:{ Exception -> 0x1649, all -> 0x1647 }
            if (r9 == 0) goto L_0x1643
            org.telegram.tgnet.TLRPC$Message r9 = r11.replyMessage     // Catch:{ Exception -> 0x1649, all -> 0x1647 }
            int r11 = r9.flags     // Catch:{ Exception -> 0x1649, all -> 0x1647 }
            r11 = r11 | r23
            r9.flags = r11     // Catch:{ Exception -> 0x1649, all -> 0x1647 }
        L_0x1643:
            int r10 = r10 + 1
            r9 = 3
            goto L_0x1623
        L_0x1647:
            r0 = move-exception
            goto L_0x16a0
        L_0x1649:
            r0 = move-exception
            goto L_0x16a9
        L_0x164b:
            r44 = r11
            r2 = r33
        L_0x164f:
            r11 = r44
            r33 = r2
            goto L_0x156d
        L_0x1655:
            r0 = move-exception
            r44 = r11
            goto L_0x1713
        L_0x165a:
            r0 = move-exception
            r44 = r11
            goto L_0x1725
        L_0x165f:
            r44 = r11
            r2 = r33
            r1.dispose()     // Catch:{ Exception -> 0x16a6, all -> 0x169d }
            int r1 = r4.size()     // Catch:{ Exception -> 0x16a6, all -> 0x169d }
            if (r1 <= 0) goto L_0x169a
            r1 = 0
        L_0x166d:
            int r8 = r4.size()     // Catch:{ Exception -> 0x16a6, all -> 0x169d }
            if (r1 >= r8) goto L_0x169a
            java.lang.Object r8 = r4.valueAt(r1)     // Catch:{ Exception -> 0x16a6, all -> 0x169d }
            java.util.ArrayList r8 = (java.util.ArrayList) r8     // Catch:{ Exception -> 0x16a6, all -> 0x169d }
            r9 = 0
        L_0x167a:
            int r10 = r8.size()     // Catch:{ Exception -> 0x16a6, all -> 0x169d }
            if (r9 >= r10) goto L_0x1691
            java.lang.Object r10 = r8.get(r9)     // Catch:{ Exception -> 0x16a6, all -> 0x169d }
            org.telegram.tgnet.TLRPC$Message r10 = (org.telegram.tgnet.TLRPC.Message) r10     // Catch:{ Exception -> 0x16a6, all -> 0x169d }
            r50 = r12
            r11 = 0
            r10.reply_to_random_id = r11     // Catch:{ Exception -> 0x1704, all -> 0x16fc }
            int r9 = r9 + 1
            r12 = r50
            goto L_0x167a
        L_0x1691:
            r50 = r12
            r11 = 0
            int r1 = r1 + 1
            r12 = r50
            goto L_0x166d
        L_0x169a:
            r50 = r12
            goto L_0x16bd
        L_0x169d:
            r0 = move-exception
            r50 = r12
        L_0x16a0:
            r20 = r43
            r11 = r44
            goto L_0x1715
        L_0x16a6:
            r0 = move-exception
            r50 = r12
        L_0x16a9:
            r20 = r43
            r11 = r44
            goto L_0x1727
        L_0x16af:
            r0 = move-exception
            goto L_0x170f
        L_0x16b2:
            r0 = move-exception
            goto L_0x1721
        L_0x16b5:
            r43 = r1
            r44 = r11
            r50 = r12
            r2 = r33
        L_0x16bd:
            boolean r1 = r2.isEmpty()     // Catch:{ Exception -> 0x1704, all -> 0x16fc }
            if (r1 != 0) goto L_0x16cc
            java.lang.String r1 = android.text.TextUtils.join(r5, r2)     // Catch:{ Exception -> 0x1704, all -> 0x16fc }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r2 = r3.users     // Catch:{ Exception -> 0x1704, all -> 0x16fc }
            r14.getUsersInternal(r1, r2)     // Catch:{ Exception -> 0x1704, all -> 0x16fc }
        L_0x16cc:
            boolean r1 = r13.isEmpty()     // Catch:{ Exception -> 0x1704, all -> 0x16fc }
            if (r1 != 0) goto L_0x16db
            java.lang.String r1 = android.text.TextUtils.join(r5, r13)     // Catch:{ Exception -> 0x1704, all -> 0x16fc }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r2 = r3.chats     // Catch:{ Exception -> 0x1704, all -> 0x16fc }
            r14.getChatsInternal(r1, r2)     // Catch:{ Exception -> 0x1704, all -> 0x16fc }
        L_0x16db:
            org.telegram.messenger.MessagesController r2 = r42.getMessagesController()
            r9 = 1
            r4 = r46
            r8 = r51
            r10 = r52
            r11 = r44
            r12 = r50
            r13 = r22
            r14 = r35
            r15 = r49
            r16 = r45
            r17 = r18
            r18 = r48
            r19 = r53
            r20 = r43
            goto L_0x17be
        L_0x16fc:
            r0 = move-exception
            r20 = r43
            r11 = r44
            r12 = r50
            goto L_0x1715
        L_0x1704:
            r0 = move-exception
            r20 = r43
            r11 = r44
            r12 = r50
            goto L_0x1727
        L_0x170c:
            r0 = move-exception
            r43 = r1
        L_0x170f:
            r44 = r11
            r50 = r12
        L_0x1713:
            r20 = r43
        L_0x1715:
            r1 = r0
            r17 = r18
            r13 = r22
            r14 = r35
            goto L_0x17c4
        L_0x171e:
            r0 = move-exception
            r43 = r1
        L_0x1721:
            r44 = r11
            r50 = r12
        L_0x1725:
            r20 = r43
        L_0x1727:
            r1 = r0
            r17 = r18
            r13 = r22
            r14 = r35
            goto L_0x1799
        L_0x1730:
            r0 = move-exception
            goto L_0x1473
        L_0x1733:
            r0 = move-exception
            goto L_0x1493
        L_0x1736:
            r0 = move-exception
            r3 = r37
            r1 = 0
            r7 = r44
            r1 = r0
            r6 = r2
            r13 = r9
            r12 = r10
            r11 = r34
            r14 = r35
            goto L_0x1762
        L_0x1745:
            r0 = move-exception
            r3 = r37
            r1 = 0
            r7 = r44
            r1 = r0
            r6 = r2
            r13 = r9
            r12 = r10
            r11 = r34
            r14 = r35
            goto L_0x1773
        L_0x1754:
            r0 = move-exception
            r3 = r37
            r1 = 0
            r7 = r44
            r1 = r0
            r6 = r2
            r13 = r9
            r11 = r34
            r14 = r35
        L_0x1761:
            r12 = 0
        L_0x1762:
            r17 = 1
            goto L_0x1783
        L_0x1765:
            r0 = move-exception
            r3 = r37
            r1 = 0
            r7 = r44
            r1 = r0
            r6 = r2
            r13 = r9
            r11 = r34
            r14 = r35
        L_0x1772:
            r12 = 0
        L_0x1773:
            r17 = 1
            goto L_0x1795
        L_0x1776:
            r0 = move-exception
            r3 = r6
            r1 = 0
            r7 = r44
            r1 = r0
            r6 = r2
            r11 = 0
            r12 = 0
            r13 = 0
            r14 = 0
            r17 = 0
        L_0x1783:
            r20 = 0
            r21 = 0
            goto L_0x17c4
        L_0x1788:
            r0 = move-exception
            r3 = r6
            r1 = 0
            r7 = r44
            r1 = r0
            r6 = r2
            r11 = 0
            r12 = 0
            r13 = 0
            r14 = 0
            r17 = 0
        L_0x1795:
            r20 = 0
            r21 = 0
        L_0x1799:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r2 = r3.messages     // Catch:{ all -> 0x17c2 }
            r2.clear()     // Catch:{ all -> 0x17c2 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r2 = r3.chats     // Catch:{ all -> 0x17c2 }
            r2.clear()     // Catch:{ all -> 0x17c2 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r2 = r3.users     // Catch:{ all -> 0x17c2 }
            r2.clear()     // Catch:{ all -> 0x17c2 }
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r1)     // Catch:{ all -> 0x17c2 }
            org.telegram.messenger.MessagesController r2 = r42.getMessagesController()
            r9 = 1
            r4 = r46
            r8 = r51
            r10 = r52
            r15 = r49
            r16 = r45
            r18 = r48
            r19 = r53
        L_0x17be:
            r2.processLoadedMessages(r3, r4, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21)
            return
        L_0x17c2:
            r0 = move-exception
        L_0x17c3:
            r1 = r0
        L_0x17c4:
            org.telegram.messenger.MessagesController r2 = r42.getMessagesController()
            r9 = 1
            r4 = r46
            r8 = r51
            r10 = r52
            r15 = r49
            r16 = r45
            r18 = r48
            r19 = r53
            r2.processLoadedMessages(r3, r4, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21)
            goto L_0x17dc
        L_0x17db:
            throw r1
        L_0x17dc:
            goto L_0x17db
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$getMessages$95$MessagesStorage(int, int, boolean, long, boolean, int, int, int, int, int):void");
    }

    static /* synthetic */ int lambda$null$94(TLRPC.Message message, TLRPC.Message message2) {
        int i;
        int i2;
        int i3 = message.id;
        if (i3 <= 0 || (i2 = message2.id) <= 0) {
            int i4 = message.id;
            if (i4 >= 0 || (i = message2.id) >= 0) {
                int i5 = message.date;
                int i6 = message2.date;
                if (i5 > i6) {
                    return -1;
                }
                if (i5 < i6) {
                    return 1;
                }
                return 0;
            } else if (i4 < i) {
                return -1;
            } else {
                if (i4 > i) {
                    return 1;
                }
                return 0;
            }
        } else if (i3 > i2) {
            return -1;
        } else {
            if (i3 < i2) {
                return 1;
            }
            return 0;
        }
    }

    public void clearSentMedia() {
        this.storageQueue.postRunnable(new Runnable() {
            public final void run() {
                MessagesStorage.this.lambda$clearSentMedia$96$MessagesStorage();
            }
        });
    }

    public /* synthetic */ void lambda$clearSentMedia$96$MessagesStorage() {
        try {
            this.database.executeFast("DELETE FROM sent_files_v2 WHERE 1").stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public Object[] getSentFile(String str, int i) {
        if (str == null || str.toLowerCase().endsWith("attheme")) {
            return null;
        }
        CountDownLatch countDownLatch = new CountDownLatch(1);
        Object[] objArr = new Object[2];
        this.storageQueue.postRunnable(new Runnable(str, i, objArr, countDownLatch) {
            private final /* synthetic */ String f$1;
            private final /* synthetic */ int f$2;
            private final /* synthetic */ Object[] f$3;
            private final /* synthetic */ CountDownLatch f$4;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
                this.f$4 = r5;
            }

            public final void run() {
                MessagesStorage.this.lambda$getSentFile$97$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4);
            }
        });
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        if (objArr[0] != null) {
            return objArr;
        }
        return null;
    }

    public /* synthetic */ void lambda$getSentFile$97$MessagesStorage(String str, int i, Object[] objArr, CountDownLatch countDownLatch) {
        NativeByteBuffer byteBufferValue;
        try {
            String MD5 = Utilities.MD5(str);
            if (MD5 != null) {
                SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT data, parent FROM sent_files_v2 WHERE uid = '%s' AND type = %d", new Object[]{MD5, Integer.valueOf(i)}), new Object[0]);
                if (queryFinalized.next() && (byteBufferValue = queryFinalized.byteBufferValue(0)) != null) {
                    TLRPC.MessageMedia TLdeserialize = TLRPC.MessageMedia.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                    byteBufferValue.reuse();
                    if (TLdeserialize instanceof TLRPC.TL_messageMediaDocument) {
                        objArr[0] = ((TLRPC.TL_messageMediaDocument) TLdeserialize).document;
                    } else if (TLdeserialize instanceof TLRPC.TL_messageMediaPhoto) {
                        objArr[0] = ((TLRPC.TL_messageMediaPhoto) TLdeserialize).photo;
                    }
                    if (objArr[0] != null) {
                        objArr[1] = queryFinalized.stringValue(1);
                    }
                }
                queryFinalized.dispose();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        } catch (Throwable th) {
            countDownLatch.countDown();
            throw th;
        }
        countDownLatch.countDown();
    }

    public void putSentFile(String str, TLObject tLObject, int i, String str2) {
        if (str != null && tLObject != null && str2 != null) {
            this.storageQueue.postRunnable(new Runnable(str, tLObject, i, str2) {
                private final /* synthetic */ String f$1;
                private final /* synthetic */ TLObject f$2;
                private final /* synthetic */ int f$3;
                private final /* synthetic */ String f$4;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                    this.f$4 = r5;
                }

                public final void run() {
                    MessagesStorage.this.lambda$putSentFile$98$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4);
                }
            });
        }
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v6, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaDocument} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r1v7, resolved type: org.telegram.tgnet.TLRPC$TL_messageMediaPhoto} */
    /* JADX WARNING: type inference failed for: r1v1, types: [org.telegram.tgnet.TLObject] */
    /* JADX WARNING: type inference failed for: r1v3 */
    /* JADX WARNING: Multi-variable type inference failed */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$putSentFile$98$MessagesStorage(java.lang.String r5, org.telegram.tgnet.TLObject r6, int r7, java.lang.String r8) {
        /*
            r4 = this;
            r0 = 0
            java.lang.String r5 = org.telegram.messenger.Utilities.MD5(r5)     // Catch:{ Exception -> 0x0066 }
            if (r5 == 0) goto L_0x005e
            boolean r1 = r6 instanceof org.telegram.tgnet.TLRPC.Photo     // Catch:{ Exception -> 0x0066 }
            r2 = 1
            if (r1 == 0) goto L_0x001b
            org.telegram.tgnet.TLRPC$TL_messageMediaPhoto r1 = new org.telegram.tgnet.TLRPC$TL_messageMediaPhoto     // Catch:{ Exception -> 0x0066 }
            r1.<init>()     // Catch:{ Exception -> 0x0066 }
            org.telegram.tgnet.TLRPC$Photo r6 = (org.telegram.tgnet.TLRPC.Photo) r6     // Catch:{ Exception -> 0x0066 }
            r1.photo = r6     // Catch:{ Exception -> 0x0066 }
            int r6 = r1.flags     // Catch:{ Exception -> 0x0066 }
            r6 = r6 | r2
            r1.flags = r6     // Catch:{ Exception -> 0x0066 }
            goto L_0x002f
        L_0x001b:
            boolean r1 = r6 instanceof org.telegram.tgnet.TLRPC.Document     // Catch:{ Exception -> 0x0066 }
            if (r1 == 0) goto L_0x002e
            org.telegram.tgnet.TLRPC$TL_messageMediaDocument r1 = new org.telegram.tgnet.TLRPC$TL_messageMediaDocument     // Catch:{ Exception -> 0x0066 }
            r1.<init>()     // Catch:{ Exception -> 0x0066 }
            org.telegram.tgnet.TLRPC$Document r6 = (org.telegram.tgnet.TLRPC.Document) r6     // Catch:{ Exception -> 0x0066 }
            r1.document = r6     // Catch:{ Exception -> 0x0066 }
            int r6 = r1.flags     // Catch:{ Exception -> 0x0066 }
            r6 = r6 | r2
            r1.flags = r6     // Catch:{ Exception -> 0x0066 }
            goto L_0x002f
        L_0x002e:
            r1 = r0
        L_0x002f:
            if (r1 != 0) goto L_0x0032
            return
        L_0x0032:
            org.telegram.SQLite.SQLiteDatabase r6 = r4.database     // Catch:{ Exception -> 0x0066 }
            java.lang.String r3 = "REPLACE INTO sent_files_v2 VALUES(?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r6.executeFast(r3)     // Catch:{ Exception -> 0x0066 }
            r0.requery()     // Catch:{ Exception -> 0x0066 }
            org.telegram.tgnet.NativeByteBuffer r6 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0066 }
            int r3 = r1.getObjectSize()     // Catch:{ Exception -> 0x0066 }
            r6.<init>((int) r3)     // Catch:{ Exception -> 0x0066 }
            r1.serializeToStream(r6)     // Catch:{ Exception -> 0x0066 }
            r0.bindString(r2, r5)     // Catch:{ Exception -> 0x0066 }
            r5 = 2
            r0.bindInteger(r5, r7)     // Catch:{ Exception -> 0x0066 }
            r5 = 3
            r0.bindByteBuffer((int) r5, (org.telegram.tgnet.NativeByteBuffer) r6)     // Catch:{ Exception -> 0x0066 }
            r5 = 4
            r0.bindString(r5, r8)     // Catch:{ Exception -> 0x0066 }
            r0.step()     // Catch:{ Exception -> 0x0066 }
            r6.reuse()     // Catch:{ Exception -> 0x0066 }
        L_0x005e:
            if (r0 == 0) goto L_0x006d
        L_0x0060:
            r0.dispose()
            goto L_0x006d
        L_0x0064:
            r5 = move-exception
            goto L_0x006e
        L_0x0066:
            r5 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r5)     // Catch:{ all -> 0x0064 }
            if (r0 == 0) goto L_0x006d
            goto L_0x0060
        L_0x006d:
            return
        L_0x006e:
            if (r0 == 0) goto L_0x0073
            r0.dispose()
        L_0x0073:
            goto L_0x0075
        L_0x0074:
            throw r5
        L_0x0075:
            goto L_0x0074
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$putSentFile$98$MessagesStorage(java.lang.String, org.telegram.tgnet.TLObject, int, java.lang.String):void");
    }

    public void updateEncryptedChatSeq(TLRPC.EncryptedChat encryptedChat, boolean z) {
        if (encryptedChat != null) {
            this.storageQueue.postRunnable(new Runnable(encryptedChat, z) {
                private final /* synthetic */ TLRPC.EncryptedChat f$1;
                private final /* synthetic */ boolean f$2;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                }

                public final void run() {
                    MessagesStorage.this.lambda$updateEncryptedChatSeq$99$MessagesStorage(this.f$1, this.f$2);
                }
            });
        }
    }

    public /* synthetic */ void lambda$updateEncryptedChatSeq$99$MessagesStorage(TLRPC.EncryptedChat encryptedChat, boolean z) {
        SQLitePreparedStatement sQLitePreparedStatement = null;
        try {
            sQLitePreparedStatement = this.database.executeFast("UPDATE enc_chats SET seq_in = ?, seq_out = ?, use_count = ?, in_seq_no = ?, mtproto_seq = ? WHERE uid = ?");
            sQLitePreparedStatement.bindInteger(1, encryptedChat.seq_in);
            sQLitePreparedStatement.bindInteger(2, encryptedChat.seq_out);
            sQLitePreparedStatement.bindInteger(3, (encryptedChat.key_use_count_in << 16) | encryptedChat.key_use_count_out);
            sQLitePreparedStatement.bindInteger(4, encryptedChat.in_seq_no);
            sQLitePreparedStatement.bindInteger(5, encryptedChat.mtproto_seq);
            sQLitePreparedStatement.bindInteger(6, encryptedChat.id);
            sQLitePreparedStatement.step();
            if (z && encryptedChat.in_seq_no != 0) {
                this.database.executeFast(String.format(Locale.US, "DELETE FROM messages WHERE mid IN (SELECT m.mid FROM messages as m LEFT JOIN messages_seq as s ON m.mid = s.mid WHERE m.uid = %d AND m.date = 0 AND m.mid < 0 AND s.seq_out <= %d)", new Object[]{Long.valueOf(((long) encryptedChat.id) << 32), Integer.valueOf(encryptedChat.in_seq_no)})).stepThis().dispose();
            }
            if (sQLitePreparedStatement == null) {
                return;
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (sQLitePreparedStatement == null) {
                return;
            }
        } catch (Throwable th) {
            if (sQLitePreparedStatement != null) {
                sQLitePreparedStatement.dispose();
            }
            throw th;
        }
        sQLitePreparedStatement.dispose();
    }

    public void updateEncryptedChatTTL(TLRPC.EncryptedChat encryptedChat) {
        if (encryptedChat != null) {
            this.storageQueue.postRunnable(new Runnable(encryptedChat) {
                private final /* synthetic */ TLRPC.EncryptedChat f$1;

                {
                    this.f$1 = r2;
                }

                public final void run() {
                    MessagesStorage.this.lambda$updateEncryptedChatTTL$100$MessagesStorage(this.f$1);
                }
            });
        }
    }

    public /* synthetic */ void lambda$updateEncryptedChatTTL$100$MessagesStorage(TLRPC.EncryptedChat encryptedChat) {
        SQLitePreparedStatement sQLitePreparedStatement = null;
        try {
            sQLitePreparedStatement = this.database.executeFast("UPDATE enc_chats SET ttl = ? WHERE uid = ?");
            sQLitePreparedStatement.bindInteger(1, encryptedChat.ttl);
            sQLitePreparedStatement.bindInteger(2, encryptedChat.id);
            sQLitePreparedStatement.step();
            if (sQLitePreparedStatement == null) {
                return;
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (sQLitePreparedStatement == null) {
                return;
            }
        } catch (Throwable th) {
            if (sQLitePreparedStatement != null) {
                sQLitePreparedStatement.dispose();
            }
            throw th;
        }
        sQLitePreparedStatement.dispose();
    }

    public void updateEncryptedChatLayer(TLRPC.EncryptedChat encryptedChat) {
        if (encryptedChat != null) {
            this.storageQueue.postRunnable(new Runnable(encryptedChat) {
                private final /* synthetic */ TLRPC.EncryptedChat f$1;

                {
                    this.f$1 = r2;
                }

                public final void run() {
                    MessagesStorage.this.lambda$updateEncryptedChatLayer$101$MessagesStorage(this.f$1);
                }
            });
        }
    }

    public /* synthetic */ void lambda$updateEncryptedChatLayer$101$MessagesStorage(TLRPC.EncryptedChat encryptedChat) {
        SQLitePreparedStatement sQLitePreparedStatement = null;
        try {
            sQLitePreparedStatement = this.database.executeFast("UPDATE enc_chats SET layer = ? WHERE uid = ?");
            sQLitePreparedStatement.bindInteger(1, encryptedChat.layer);
            sQLitePreparedStatement.bindInteger(2, encryptedChat.id);
            sQLitePreparedStatement.step();
            if (sQLitePreparedStatement == null) {
                return;
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (sQLitePreparedStatement == null) {
                return;
            }
        } catch (Throwable th) {
            if (sQLitePreparedStatement != null) {
                sQLitePreparedStatement.dispose();
            }
            throw th;
        }
        sQLitePreparedStatement.dispose();
    }

    public void updateEncryptedChat(TLRPC.EncryptedChat encryptedChat) {
        if (encryptedChat != null) {
            this.storageQueue.postRunnable(new Runnable(encryptedChat) {
                private final /* synthetic */ TLRPC.EncryptedChat f$1;

                {
                    this.f$1 = r2;
                }

                public final void run() {
                    MessagesStorage.this.lambda$updateEncryptedChat$102$MessagesStorage(this.f$1);
                }
            });
        }
    }

    public /* synthetic */ void lambda$updateEncryptedChat$102$MessagesStorage(TLRPC.EncryptedChat encryptedChat) {
        SQLitePreparedStatement sQLitePreparedStatement = null;
        try {
            if ((encryptedChat.key_hash == null || encryptedChat.key_hash.length < 16) && encryptedChat.auth_key != null) {
                encryptedChat.key_hash = AndroidUtilities.calcAuthKeyHash(encryptedChat.auth_key);
            }
            sQLitePreparedStatement = this.database.executeFast("UPDATE enc_chats SET data = ?, g = ?, authkey = ?, ttl = ?, layer = ?, seq_in = ?, seq_out = ?, use_count = ?, exchange_id = ?, key_date = ?, fprint = ?, fauthkey = ?, khash = ?, in_seq_no = ?, admin_id = ?, mtproto_seq = ? WHERE uid = ?");
            NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(encryptedChat.getObjectSize());
            NativeByteBuffer nativeByteBuffer2 = new NativeByteBuffer(encryptedChat.a_or_b != null ? encryptedChat.a_or_b.length : 1);
            NativeByteBuffer nativeByteBuffer3 = new NativeByteBuffer(encryptedChat.auth_key != null ? encryptedChat.auth_key.length : 1);
            NativeByteBuffer nativeByteBuffer4 = new NativeByteBuffer(encryptedChat.future_auth_key != null ? encryptedChat.future_auth_key.length : 1);
            NativeByteBuffer nativeByteBuffer5 = new NativeByteBuffer(encryptedChat.key_hash != null ? encryptedChat.key_hash.length : 1);
            encryptedChat.serializeToStream(nativeByteBuffer);
            sQLitePreparedStatement.bindByteBuffer(1, nativeByteBuffer);
            if (encryptedChat.a_or_b != null) {
                nativeByteBuffer2.writeBytes(encryptedChat.a_or_b);
            }
            if (encryptedChat.auth_key != null) {
                nativeByteBuffer3.writeBytes(encryptedChat.auth_key);
            }
            if (encryptedChat.future_auth_key != null) {
                nativeByteBuffer4.writeBytes(encryptedChat.future_auth_key);
            }
            if (encryptedChat.key_hash != null) {
                nativeByteBuffer5.writeBytes(encryptedChat.key_hash);
            }
            sQLitePreparedStatement.bindByteBuffer(2, nativeByteBuffer2);
            sQLitePreparedStatement.bindByteBuffer(3, nativeByteBuffer3);
            sQLitePreparedStatement.bindInteger(4, encryptedChat.ttl);
            sQLitePreparedStatement.bindInteger(5, encryptedChat.layer);
            sQLitePreparedStatement.bindInteger(6, encryptedChat.seq_in);
            sQLitePreparedStatement.bindInteger(7, encryptedChat.seq_out);
            sQLitePreparedStatement.bindInteger(8, (encryptedChat.key_use_count_in << 16) | encryptedChat.key_use_count_out);
            sQLitePreparedStatement.bindLong(9, encryptedChat.exchange_id);
            sQLitePreparedStatement.bindInteger(10, encryptedChat.key_create_date);
            sQLitePreparedStatement.bindLong(11, encryptedChat.future_key_fingerprint);
            sQLitePreparedStatement.bindByteBuffer(12, nativeByteBuffer4);
            sQLitePreparedStatement.bindByteBuffer(13, nativeByteBuffer5);
            sQLitePreparedStatement.bindInteger(14, encryptedChat.in_seq_no);
            sQLitePreparedStatement.bindInteger(15, encryptedChat.admin_id);
            sQLitePreparedStatement.bindInteger(16, encryptedChat.mtproto_seq);
            sQLitePreparedStatement.bindInteger(17, encryptedChat.id);
            sQLitePreparedStatement.step();
            nativeByteBuffer.reuse();
            nativeByteBuffer2.reuse();
            nativeByteBuffer3.reuse();
            nativeByteBuffer4.reuse();
            nativeByteBuffer5.reuse();
            if (sQLitePreparedStatement == null) {
                return;
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (sQLitePreparedStatement == null) {
                return;
            }
        } catch (Throwable th) {
            if (sQLitePreparedStatement != null) {
                sQLitePreparedStatement.dispose();
            }
            throw th;
        }
        sQLitePreparedStatement.dispose();
    }

    public void isDialogHasTopMessage(long j, Runnable runnable) {
        this.storageQueue.postRunnable(new Runnable(j, runnable) {
            private final /* synthetic */ long f$1;
            private final /* synthetic */ Runnable f$2;

            {
                this.f$1 = r2;
                this.f$2 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$isDialogHasTopMessage$103$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    public /* synthetic */ void lambda$isDialogHasTopMessage$103$MessagesStorage(long j, Runnable runnable) {
        boolean z = false;
        try {
            SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT last_mid FROM dialogs WHERE did = %d", new Object[]{Long.valueOf(j)}), new Object[0]);
            if (queryFinalized.next() && queryFinalized.intValue(0) != 0) {
                z = true;
            }
            queryFinalized.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        if (!z) {
            AndroidUtilities.runOnUIThread(runnable);
        }
    }

    public boolean isDialogHasMessages(long j) {
        CountDownLatch countDownLatch = new CountDownLatch(1);
        boolean[] zArr = new boolean[1];
        this.storageQueue.postRunnable(new Runnable(j, zArr, countDownLatch) {
            private final /* synthetic */ long f$1;
            private final /* synthetic */ boolean[] f$2;
            private final /* synthetic */ CountDownLatch f$3;

            {
                this.f$1 = r2;
                this.f$2 = r4;
                this.f$3 = r5;
            }

            public final void run() {
                MessagesStorage.this.lambda$isDialogHasMessages$104$MessagesStorage(this.f$1, this.f$2, this.f$3);
            }
        });
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return zArr[0];
    }

    public /* synthetic */ void lambda$isDialogHasMessages$104$MessagesStorage(long j, boolean[] zArr, CountDownLatch countDownLatch) {
        try {
            SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT mid FROM messages WHERE uid = %d LIMIT 1", new Object[]{Long.valueOf(j)}), new Object[0]);
            zArr[0] = queryFinalized.next();
            queryFinalized.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        } catch (Throwable th) {
            countDownLatch.countDown();
            throw th;
        }
        countDownLatch.countDown();
    }

    public boolean hasAuthMessage(int i) {
        CountDownLatch countDownLatch = new CountDownLatch(1);
        boolean[] zArr = new boolean[1];
        this.storageQueue.postRunnable(new Runnable(i, zArr, countDownLatch) {
            private final /* synthetic */ int f$1;
            private final /* synthetic */ boolean[] f$2;
            private final /* synthetic */ CountDownLatch f$3;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$hasAuthMessage$105$MessagesStorage(this.f$1, this.f$2, this.f$3);
            }
        });
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return zArr[0];
    }

    public /* synthetic */ void lambda$hasAuthMessage$105$MessagesStorage(int i, boolean[] zArr, CountDownLatch countDownLatch) {
        try {
            SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT mid FROM messages WHERE uid = 777000 AND date = %d AND mid < 0 LIMIT 1", new Object[]{Integer.valueOf(i)}), new Object[0]);
            zArr[0] = queryFinalized.next();
            queryFinalized.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        } catch (Throwable th) {
            countDownLatch.countDown();
            throw th;
        }
        countDownLatch.countDown();
    }

    public void getEncryptedChat(int i, CountDownLatch countDownLatch, ArrayList<TLObject> arrayList) {
        if (countDownLatch != null && arrayList != null) {
            this.storageQueue.postRunnable(new Runnable(i, arrayList, countDownLatch) {
                private final /* synthetic */ int f$1;
                private final /* synthetic */ ArrayList f$2;
                private final /* synthetic */ CountDownLatch f$3;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                }

                public final void run() {
                    MessagesStorage.this.lambda$getEncryptedChat$106$MessagesStorage(this.f$1, this.f$2, this.f$3);
                }
            });
        }
    }

    public /* synthetic */ void lambda$getEncryptedChat$106$MessagesStorage(int i, ArrayList arrayList, CountDownLatch countDownLatch) {
        try {
            ArrayList arrayList2 = new ArrayList();
            ArrayList arrayList3 = new ArrayList();
            getEncryptedChatsInternal("" + i, arrayList3, arrayList2);
            if (!arrayList3.isEmpty() && !arrayList2.isEmpty()) {
                ArrayList arrayList4 = new ArrayList();
                getUsersInternal(TextUtils.join(",", arrayList2), arrayList4);
                if (!arrayList4.isEmpty()) {
                    arrayList.add(arrayList3.get(0));
                    arrayList.add(arrayList4.get(0));
                }
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        } catch (Throwable th) {
            countDownLatch.countDown();
            throw th;
        }
        countDownLatch.countDown();
    }

    public void putEncryptedChat(TLRPC.EncryptedChat encryptedChat, TLRPC.User user, TLRPC.Dialog dialog) {
        if (encryptedChat != null) {
            this.storageQueue.postRunnable(new Runnable(encryptedChat, user, dialog) {
                private final /* synthetic */ TLRPC.EncryptedChat f$1;
                private final /* synthetic */ TLRPC.User f$2;
                private final /* synthetic */ TLRPC.Dialog f$3;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                }

                public final void run() {
                    MessagesStorage.this.lambda$putEncryptedChat$107$MessagesStorage(this.f$1, this.f$2, this.f$3);
                }
            });
        }
    }

    public /* synthetic */ void lambda$putEncryptedChat$107$MessagesStorage(TLRPC.EncryptedChat encryptedChat, TLRPC.User user, TLRPC.Dialog dialog) {
        TLRPC.EncryptedChat encryptedChat2 = encryptedChat;
        TLRPC.User user2 = user;
        TLRPC.Dialog dialog2 = dialog;
        try {
            if ((encryptedChat2.key_hash == null || encryptedChat2.key_hash.length < 16) && encryptedChat2.auth_key != null) {
                encryptedChat2.key_hash = AndroidUtilities.calcAuthKeyHash(encryptedChat2.auth_key);
            }
            SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO enc_chats VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
            NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(encryptedChat.getObjectSize());
            NativeByteBuffer nativeByteBuffer2 = new NativeByteBuffer(encryptedChat2.a_or_b != null ? encryptedChat2.a_or_b.length : 1);
            NativeByteBuffer nativeByteBuffer3 = new NativeByteBuffer(encryptedChat2.auth_key != null ? encryptedChat2.auth_key.length : 1);
            NativeByteBuffer nativeByteBuffer4 = new NativeByteBuffer(encryptedChat2.future_auth_key != null ? encryptedChat2.future_auth_key.length : 1);
            NativeByteBuffer nativeByteBuffer5 = new NativeByteBuffer(encryptedChat2.key_hash != null ? encryptedChat2.key_hash.length : 1);
            encryptedChat2.serializeToStream(nativeByteBuffer);
            executeFast.bindInteger(1, encryptedChat2.id);
            executeFast.bindInteger(2, user2.id);
            executeFast.bindString(3, formatUserSearchName(user2));
            executeFast.bindByteBuffer(4, nativeByteBuffer);
            if (encryptedChat2.a_or_b != null) {
                nativeByteBuffer2.writeBytes(encryptedChat2.a_or_b);
            }
            if (encryptedChat2.auth_key != null) {
                nativeByteBuffer3.writeBytes(encryptedChat2.auth_key);
            }
            if (encryptedChat2.future_auth_key != null) {
                nativeByteBuffer4.writeBytes(encryptedChat2.future_auth_key);
            }
            if (encryptedChat2.key_hash != null) {
                nativeByteBuffer5.writeBytes(encryptedChat2.key_hash);
            }
            executeFast.bindByteBuffer(5, nativeByteBuffer2);
            executeFast.bindByteBuffer(6, nativeByteBuffer3);
            executeFast.bindInteger(7, encryptedChat2.ttl);
            executeFast.bindInteger(8, encryptedChat2.layer);
            executeFast.bindInteger(9, encryptedChat2.seq_in);
            executeFast.bindInteger(10, encryptedChat2.seq_out);
            executeFast.bindInteger(11, encryptedChat2.key_use_count_out | (encryptedChat2.key_use_count_in << 16));
            executeFast.bindLong(12, encryptedChat2.exchange_id);
            executeFast.bindInteger(13, encryptedChat2.key_create_date);
            executeFast.bindLong(14, encryptedChat2.future_key_fingerprint);
            executeFast.bindByteBuffer(15, nativeByteBuffer4);
            executeFast.bindByteBuffer(16, nativeByteBuffer5);
            executeFast.bindInteger(17, encryptedChat2.in_seq_no);
            executeFast.bindInteger(18, encryptedChat2.admin_id);
            executeFast.bindInteger(19, encryptedChat2.mtproto_seq);
            executeFast.step();
            executeFast.dispose();
            nativeByteBuffer.reuse();
            nativeByteBuffer2.reuse();
            nativeByteBuffer3.reuse();
            nativeByteBuffer4.reuse();
            nativeByteBuffer5.reuse();
            if (dialog2 != null) {
                SQLitePreparedStatement executeFast2 = this.database.executeFast("REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                executeFast2.bindLong(1, dialog2.id);
                executeFast2.bindInteger(2, dialog2.last_message_date);
                executeFast2.bindInteger(3, dialog2.unread_count);
                executeFast2.bindInteger(4, dialog2.top_message);
                executeFast2.bindInteger(5, dialog2.read_inbox_max_id);
                executeFast2.bindInteger(6, dialog2.read_outbox_max_id);
                executeFast2.bindInteger(7, 0);
                executeFast2.bindInteger(8, dialog2.unread_mentions_count);
                executeFast2.bindInteger(9, dialog2.pts);
                executeFast2.bindInteger(10, 0);
                executeFast2.bindInteger(11, dialog2.pinnedNum);
                executeFast2.bindInteger(12, dialog2.flags);
                executeFast2.bindInteger(13, dialog2.folder_id);
                executeFast2.bindNull(14);
                executeFast2.step();
                executeFast2.dispose();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    private String formatUserSearchName(TLRPC.User user) {
        StringBuilder sb = new StringBuilder();
        String str = user.first_name;
        if (str != null && str.length() > 0) {
            sb.append(user.first_name);
        }
        String str2 = user.last_name;
        if (str2 != null && str2.length() > 0) {
            if (sb.length() > 0) {
                sb.append(" ");
            }
            sb.append(user.last_name);
        }
        sb.append(";;;");
        String str3 = user.username;
        if (str3 != null && str3.length() > 0) {
            sb.append(user.username);
        }
        return sb.toString().toLowerCase();
    }

    private void putUsersInternal(ArrayList<TLRPC.User> arrayList) throws Exception {
        if (arrayList != null && !arrayList.isEmpty()) {
            SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO users VALUES(?, ?, ?, ?)");
            for (int i = 0; i < arrayList.size(); i++) {
                TLRPC.User user = arrayList.get(i);
                if (user.min) {
                    SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT data FROM users WHERE uid = %d", new Object[]{Integer.valueOf(user.id)}), new Object[0]);
                    if (queryFinalized.next()) {
                        try {
                            NativeByteBuffer byteBufferValue = queryFinalized.byteBufferValue(0);
                            if (byteBufferValue != null) {
                                TLRPC.User TLdeserialize = TLRPC.User.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                                byteBufferValue.reuse();
                                if (TLdeserialize != null) {
                                    if (user.username != null) {
                                        TLdeserialize.username = user.username;
                                        TLdeserialize.flags |= 8;
                                    } else {
                                        TLdeserialize.username = null;
                                        TLdeserialize.flags &= -9;
                                    }
                                    if (user.photo != null) {
                                        TLdeserialize.photo = user.photo;
                                        TLdeserialize.flags |= 32;
                                    } else {
                                        TLdeserialize.photo = null;
                                        TLdeserialize.flags &= -33;
                                    }
                                    user = TLdeserialize;
                                }
                            }
                        } catch (Exception e) {
                            FileLog.e((Throwable) e);
                        }
                    }
                    queryFinalized.dispose();
                }
                executeFast.requery();
                NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(user.getObjectSize());
                user.serializeToStream(nativeByteBuffer);
                executeFast.bindInteger(1, user.id);
                executeFast.bindString(2, formatUserSearchName(user));
                TLRPC.UserStatus userStatus = user.status;
                if (userStatus != null) {
                    if (userStatus instanceof TLRPC.TL_userStatusRecently) {
                        userStatus.expires = -100;
                    } else if (userStatus instanceof TLRPC.TL_userStatusLastWeek) {
                        userStatus.expires = -101;
                    } else if (userStatus instanceof TLRPC.TL_userStatusLastMonth) {
                        userStatus.expires = -102;
                    }
                    executeFast.bindInteger(3, user.status.expires);
                } else {
                    executeFast.bindInteger(3, 0);
                }
                executeFast.bindByteBuffer(4, nativeByteBuffer);
                executeFast.step();
                nativeByteBuffer.reuse();
            }
            executeFast.dispose();
        }
    }

    public void updateChatDefaultBannedRights(int i, TLRPC.TL_chatBannedRights tL_chatBannedRights, int i2) {
        if (tL_chatBannedRights != null && i != 0) {
            this.storageQueue.postRunnable(new Runnable(i, i2, tL_chatBannedRights) {
                private final /* synthetic */ int f$1;
                private final /* synthetic */ int f$2;
                private final /* synthetic */ TLRPC.TL_chatBannedRights f$3;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                }

                public final void run() {
                    MessagesStorage.this.lambda$updateChatDefaultBannedRights$108$MessagesStorage(this.f$1, this.f$2, this.f$3);
                }
            });
        }
    }

    public /* synthetic */ void lambda$updateChatDefaultBannedRights$108$MessagesStorage(int i, int i2, TLRPC.TL_chatBannedRights tL_chatBannedRights) {
        NativeByteBuffer byteBufferValue;
        TLRPC.Chat chat = null;
        try {
            SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT data FROM chats WHERE uid = %d", new Object[]{Integer.valueOf(i)}), new Object[0]);
            if (queryFinalized.next() && (byteBufferValue = queryFinalized.byteBufferValue(0)) != null) {
                chat = TLRPC.Chat.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                byteBufferValue.reuse();
            }
            queryFinalized.dispose();
            if (chat == null) {
                return;
            }
            if (chat.default_banned_rights == null || i2 >= chat.version) {
                chat.default_banned_rights = tL_chatBannedRights;
                chat.flags |= 262144;
                chat.version = i2;
                SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE chats SET data = ? WHERE uid = ?");
                NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(chat.getObjectSize());
                chat.serializeToStream(nativeByteBuffer);
                executeFast.bindByteBuffer(1, nativeByteBuffer);
                executeFast.bindInteger(2, chat.id);
                executeFast.step();
                nativeByteBuffer.reuse();
                executeFast.dispose();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    private void putChatsInternal(ArrayList<TLRPC.Chat> arrayList) throws Exception {
        if (arrayList != null && !arrayList.isEmpty()) {
            SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO chats VALUES(?, ?, ?)");
            for (int i = 0; i < arrayList.size(); i++) {
                TLRPC.Chat chat = arrayList.get(i);
                if (chat.min) {
                    SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT data FROM chats WHERE uid = %d", new Object[]{Integer.valueOf(chat.id)}), new Object[0]);
                    if (queryFinalized.next()) {
                        try {
                            NativeByteBuffer byteBufferValue = queryFinalized.byteBufferValue(0);
                            if (byteBufferValue != null) {
                                TLRPC.Chat TLdeserialize = TLRPC.Chat.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                                byteBufferValue.reuse();
                                if (TLdeserialize != null) {
                                    TLdeserialize.title = chat.title;
                                    TLdeserialize.photo = chat.photo;
                                    TLdeserialize.broadcast = chat.broadcast;
                                    TLdeserialize.verified = chat.verified;
                                    TLdeserialize.megagroup = chat.megagroup;
                                    if (chat.default_banned_rights != null) {
                                        TLdeserialize.default_banned_rights = chat.default_banned_rights;
                                        TLdeserialize.flags |= 262144;
                                    }
                                    if (chat.admin_rights != null) {
                                        TLdeserialize.admin_rights = chat.admin_rights;
                                        TLdeserialize.flags |= 16384;
                                    }
                                    if (chat.banned_rights != null) {
                                        TLdeserialize.banned_rights = chat.banned_rights;
                                        TLdeserialize.flags |= 32768;
                                    }
                                    if (chat.username != null) {
                                        TLdeserialize.username = chat.username;
                                        TLdeserialize.flags |= 64;
                                    } else {
                                        TLdeserialize.username = null;
                                        TLdeserialize.flags &= -65;
                                    }
                                    chat = TLdeserialize;
                                }
                            }
                        } catch (Exception e) {
                            FileLog.e((Throwable) e);
                        }
                    }
                    queryFinalized.dispose();
                }
                executeFast.requery();
                NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(chat.getObjectSize());
                chat.serializeToStream(nativeByteBuffer);
                executeFast.bindInteger(1, chat.id);
                String str = chat.title;
                if (str != null) {
                    executeFast.bindString(2, str.toLowerCase());
                } else {
                    executeFast.bindString(2, "");
                }
                executeFast.bindByteBuffer(3, nativeByteBuffer);
                executeFast.step();
                nativeByteBuffer.reuse();
            }
            executeFast.dispose();
        }
    }

    public void getUsersInternal(String str, ArrayList<TLRPC.User> arrayList) throws Exception {
        if (str != null && str.length() != 0 && arrayList != null) {
            SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT data, status FROM users WHERE uid IN(%s)", new Object[]{str}), new Object[0]);
            while (queryFinalized.next()) {
                try {
                    NativeByteBuffer byteBufferValue = queryFinalized.byteBufferValue(0);
                    if (byteBufferValue != null) {
                        TLRPC.User TLdeserialize = TLRPC.User.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                        byteBufferValue.reuse();
                        if (TLdeserialize != null) {
                            if (TLdeserialize.status != null) {
                                TLdeserialize.status.expires = queryFinalized.intValue(1);
                            }
                            arrayList.add(TLdeserialize);
                        }
                    }
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                }
            }
            queryFinalized.dispose();
        }
    }

    public void getChatsInternal(String str, ArrayList<TLRPC.Chat> arrayList) throws Exception {
        if (str != null && str.length() != 0 && arrayList != null) {
            SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT data FROM chats WHERE uid IN(%s)", new Object[]{str}), new Object[0]);
            while (queryFinalized.next()) {
                try {
                    NativeByteBuffer byteBufferValue = queryFinalized.byteBufferValue(0);
                    if (byteBufferValue != null) {
                        TLRPC.Chat TLdeserialize = TLRPC.Chat.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                        byteBufferValue.reuse();
                        if (TLdeserialize != null) {
                            arrayList.add(TLdeserialize);
                        }
                    }
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                }
            }
            queryFinalized.dispose();
        }
    }

    public void getEncryptedChatsInternal(String str, ArrayList<TLRPC.EncryptedChat> arrayList, ArrayList<Integer> arrayList2) throws Exception {
        if (str != null && str.length() != 0 && arrayList != null) {
            SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT data, user, g, authkey, ttl, layer, seq_in, seq_out, use_count, exchange_id, key_date, fprint, fauthkey, khash, in_seq_no, admin_id, mtproto_seq FROM enc_chats WHERE uid IN(%s)", new Object[]{str}), new Object[0]);
            while (queryFinalized.next()) {
                try {
                    NativeByteBuffer byteBufferValue = queryFinalized.byteBufferValue(0);
                    if (byteBufferValue != null) {
                        TLRPC.EncryptedChat TLdeserialize = TLRPC.EncryptedChat.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                        byteBufferValue.reuse();
                        if (TLdeserialize != null) {
                            TLdeserialize.user_id = queryFinalized.intValue(1);
                            if (arrayList2 != null && !arrayList2.contains(Integer.valueOf(TLdeserialize.user_id))) {
                                arrayList2.add(Integer.valueOf(TLdeserialize.user_id));
                            }
                            TLdeserialize.a_or_b = queryFinalized.byteArrayValue(2);
                            TLdeserialize.auth_key = queryFinalized.byteArrayValue(3);
                            TLdeserialize.ttl = queryFinalized.intValue(4);
                            TLdeserialize.layer = queryFinalized.intValue(5);
                            TLdeserialize.seq_in = queryFinalized.intValue(6);
                            TLdeserialize.seq_out = queryFinalized.intValue(7);
                            int intValue = queryFinalized.intValue(8);
                            TLdeserialize.key_use_count_in = (short) (intValue >> 16);
                            TLdeserialize.key_use_count_out = (short) intValue;
                            TLdeserialize.exchange_id = queryFinalized.longValue(9);
                            TLdeserialize.key_create_date = queryFinalized.intValue(10);
                            TLdeserialize.future_key_fingerprint = queryFinalized.longValue(11);
                            TLdeserialize.future_auth_key = queryFinalized.byteArrayValue(12);
                            TLdeserialize.key_hash = queryFinalized.byteArrayValue(13);
                            TLdeserialize.in_seq_no = queryFinalized.intValue(14);
                            int intValue2 = queryFinalized.intValue(15);
                            if (intValue2 != 0) {
                                TLdeserialize.admin_id = intValue2;
                            }
                            TLdeserialize.mtproto_seq = queryFinalized.intValue(16);
                            arrayList.add(TLdeserialize);
                        }
                    }
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                }
            }
            queryFinalized.dispose();
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: putUsersAndChatsInternal */
    public void lambda$putUsersAndChats$109$MessagesStorage(ArrayList<TLRPC.User> arrayList, ArrayList<TLRPC.Chat> arrayList2, boolean z) {
        if (z) {
            try {
                this.database.beginTransaction();
            } catch (Exception e) {
                FileLog.e((Throwable) e);
                return;
            }
        }
        putUsersInternal(arrayList);
        putChatsInternal(arrayList2);
        if (z) {
            this.database.commitTransaction();
        }
    }

    public void putUsersAndChats(ArrayList<TLRPC.User> arrayList, ArrayList<TLRPC.Chat> arrayList2, boolean z, boolean z2) {
        if (arrayList != null && arrayList.isEmpty() && arrayList2 != null && arrayList2.isEmpty()) {
            return;
        }
        if (z2) {
            this.storageQueue.postRunnable(new Runnable(arrayList, arrayList2, z) {
                private final /* synthetic */ ArrayList f$1;
                private final /* synthetic */ ArrayList f$2;
                private final /* synthetic */ boolean f$3;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                }

                public final void run() {
                    MessagesStorage.this.lambda$putUsersAndChats$109$MessagesStorage(this.f$1, this.f$2, this.f$3);
                }
            });
        } else {
            lambda$putUsersAndChats$109$MessagesStorage(arrayList, arrayList2, z);
        }
    }

    public void removeFromDownloadQueue(long j, int i, boolean z) {
        this.storageQueue.postRunnable(new Runnable(z, i, j) {
            private final /* synthetic */ boolean f$1;
            private final /* synthetic */ int f$2;
            private final /* synthetic */ long f$3;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$removeFromDownloadQueue$110$MessagesStorage(this.f$1, this.f$2, this.f$3);
            }
        });
    }

    public /* synthetic */ void lambda$removeFromDownloadQueue$110$MessagesStorage(boolean z, int i, long j) {
        if (z) {
            try {
                SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT min(date) FROM download_queue WHERE type = %d", new Object[]{Integer.valueOf(i)}), new Object[0]);
                int intValue = queryFinalized.next() ? queryFinalized.intValue(0) : -1;
                queryFinalized.dispose();
                if (intValue != -1) {
                    this.database.executeFast(String.format(Locale.US, "UPDATE download_queue SET date = %d WHERE uid = %d AND type = %d", new Object[]{Integer.valueOf(intValue - 1), Long.valueOf(j), Integer.valueOf(i)})).stepThis().dispose();
                }
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        } else {
            this.database.executeFast(String.format(Locale.US, "DELETE FROM download_queue WHERE uid = %d AND type = %d", new Object[]{Long.valueOf(j), Integer.valueOf(i)})).stepThis().dispose();
        }
    }

    public void clearDownloadQueue(int i) {
        this.storageQueue.postRunnable(new Runnable(i) {
            private final /* synthetic */ int f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$clearDownloadQueue$111$MessagesStorage(this.f$1);
            }
        });
    }

    public /* synthetic */ void lambda$clearDownloadQueue$111$MessagesStorage(int i) {
        if (i == 0) {
            try {
                this.database.executeFast("DELETE FROM download_queue WHERE 1").stepThis().dispose();
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        } else {
            this.database.executeFast(String.format(Locale.US, "DELETE FROM download_queue WHERE type = %d", new Object[]{Integer.valueOf(i)})).stepThis().dispose();
        }
    }

    public void getDownloadQueue(int i) {
        this.storageQueue.postRunnable(new Runnable(i) {
            private final /* synthetic */ int f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$getDownloadQueue$113$MessagesStorage(this.f$1);
            }
        });
    }

    public /* synthetic */ void lambda$getDownloadQueue$113$MessagesStorage(int i) {
        try {
            ArrayList arrayList = new ArrayList();
            SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT uid, type, data, parent FROM download_queue WHERE type = %d ORDER BY date DESC LIMIT 3", new Object[]{Integer.valueOf(i)}), new Object[0]);
            while (queryFinalized.next()) {
                DownloadObject downloadObject = new DownloadObject();
                downloadObject.type = queryFinalized.intValue(1);
                downloadObject.id = queryFinalized.longValue(0);
                downloadObject.parent = queryFinalized.stringValue(3);
                NativeByteBuffer byteBufferValue = queryFinalized.byteBufferValue(2);
                if (byteBufferValue != null) {
                    TLRPC.MessageMedia TLdeserialize = TLRPC.MessageMedia.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                    byteBufferValue.reuse();
                    if (TLdeserialize.document != null) {
                        downloadObject.object = TLdeserialize.document;
                        downloadObject.secret = MessageObject.isVideoDocument(TLdeserialize.document) && TLdeserialize.ttl_seconds > 0 && TLdeserialize.ttl_seconds <= 60;
                    } else if (TLdeserialize.photo != null) {
                        downloadObject.object = TLdeserialize.photo;
                        downloadObject.secret = TLdeserialize.ttl_seconds > 0 && TLdeserialize.ttl_seconds <= 60;
                    }
                    downloadObject.forceCache = (TLdeserialize.flags & Integer.MIN_VALUE) != 0;
                }
                arrayList.add(downloadObject);
            }
            queryFinalized.dispose();
            AndroidUtilities.runOnUIThread(new Runnable(i, arrayList) {
                private final /* synthetic */ int f$1;
                private final /* synthetic */ ArrayList f$2;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                }

                public final void run() {
                    MessagesStorage.this.lambda$null$112$MessagesStorage(this.f$1, this.f$2);
                }
            });
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public /* synthetic */ void lambda$null$112$MessagesStorage(int i, ArrayList arrayList) {
        getDownloadController().processDownloadObjects(i, arrayList);
    }

    private int getMessageMediaType(TLRPC.Message message) {
        int i;
        if (!(message instanceof TLRPC.TL_message_secret)) {
            if (message instanceof TLRPC.TL_message) {
                TLRPC.MessageMedia messageMedia = message.media;
                if (((messageMedia instanceof TLRPC.TL_messageMediaPhoto) || (messageMedia instanceof TLRPC.TL_messageMediaDocument)) && message.media.ttl_seconds != 0) {
                    return 1;
                }
            }
            if ((message.media instanceof TLRPC.TL_messageMediaPhoto) || MessageObject.isVideoMessage(message)) {
                return 0;
            }
            return -1;
        } else if ((((message.media instanceof TLRPC.TL_messageMediaPhoto) || MessageObject.isGifMessage(message)) && (i = message.ttl) > 0 && i <= 60) || MessageObject.isVoiceMessage(message) || MessageObject.isVideoMessage(message) || MessageObject.isRoundVideoMessage(message)) {
            return 1;
        } else {
            if ((message.media instanceof TLRPC.TL_messageMediaPhoto) || MessageObject.isVideoMessage(message)) {
                return 0;
            }
            return -1;
        }
    }

    public void putWebPages(LongSparseArray<TLRPC.WebPage> longSparseArray) {
        if (!isEmpty((LongSparseArray<?>) longSparseArray)) {
            this.storageQueue.postRunnable(new Runnable(longSparseArray) {
                private final /* synthetic */ LongSparseArray f$1;

                {
                    this.f$1 = r2;
                }

                public final void run() {
                    MessagesStorage.this.lambda$putWebPages$115$MessagesStorage(this.f$1);
                }
            });
        }
    }

    public /* synthetic */ void lambda$putWebPages$115$MessagesStorage(LongSparseArray longSparseArray) {
        try {
            ArrayList arrayList = new ArrayList();
            for (int i = 0; i < longSparseArray.size(); i++) {
                SQLiteDatabase sQLiteDatabase = this.database;
                SQLiteCursor queryFinalized = sQLiteDatabase.queryFinalized("SELECT mid FROM webpage_pending WHERE id = " + longSparseArray.keyAt(i), new Object[0]);
                ArrayList arrayList2 = new ArrayList();
                while (queryFinalized.next()) {
                    arrayList2.add(Long.valueOf(queryFinalized.longValue(0)));
                }
                queryFinalized.dispose();
                if (!arrayList2.isEmpty()) {
                    SQLiteCursor queryFinalized2 = this.database.queryFinalized(String.format(Locale.US, "SELECT mid, data FROM messages WHERE mid IN (%s)", new Object[]{TextUtils.join(",", arrayList2)}), new Object[0]);
                    while (queryFinalized2.next()) {
                        int intValue = queryFinalized2.intValue(0);
                        NativeByteBuffer byteBufferValue = queryFinalized2.byteBufferValue(1);
                        if (byteBufferValue != null) {
                            TLRPC.Message TLdeserialize = TLRPC.Message.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                            TLdeserialize.readAttachPath(byteBufferValue, getUserConfig().clientUserId);
                            byteBufferValue.reuse();
                            if (TLdeserialize.media instanceof TLRPC.TL_messageMediaWebPage) {
                                TLdeserialize.id = intValue;
                                TLdeserialize.media.webpage = (TLRPC.WebPage) longSparseArray.valueAt(i);
                                arrayList.add(TLdeserialize);
                            }
                        }
                    }
                    queryFinalized2.dispose();
                }
            }
            if (!arrayList.isEmpty()) {
                this.database.beginTransaction();
                SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE messages SET data = ? WHERE mid = ?");
                SQLitePreparedStatement executeFast2 = this.database.executeFast("UPDATE media_v2 SET data = ? WHERE mid = ?");
                for (int i2 = 0; i2 < arrayList.size(); i2++) {
                    TLRPC.Message message = (TLRPC.Message) arrayList.get(i2);
                    NativeByteBuffer nativeByteBuffer = new NativeByteBuffer(message.getObjectSize());
                    message.serializeToStream(nativeByteBuffer);
                    long j = (long) message.id;
                    if (message.to_id.channel_id != 0) {
                        j |= ((long) message.to_id.channel_id) << 32;
                    }
                    executeFast.requery();
                    executeFast.bindByteBuffer(1, nativeByteBuffer);
                    executeFast.bindLong(2, j);
                    executeFast.step();
                    executeFast2.requery();
                    executeFast2.bindByteBuffer(1, nativeByteBuffer);
                    executeFast2.bindLong(2, j);
                    executeFast2.step();
                    nativeByteBuffer.reuse();
                }
                executeFast.dispose();
                executeFast2.dispose();
                this.database.commitTransaction();
                AndroidUtilities.runOnUIThread(new Runnable(arrayList) {
                    private final /* synthetic */ ArrayList f$1;

                    {
                        this.f$1 = r2;
                    }

                    public final void run() {
                        MessagesStorage.this.lambda$null$114$MessagesStorage(this.f$1);
                    }
                });
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public /* synthetic */ void lambda$null$114$MessagesStorage(ArrayList arrayList) {
        getNotificationCenter().postNotificationName(NotificationCenter.didReceivedWebpages, arrayList);
    }

    public void overwriteChannel(int i, TLRPC.TL_updates_channelDifferenceTooLong tL_updates_channelDifferenceTooLong, int i2) {
        this.storageQueue.postRunnable(new Runnable(i, i2, tL_updates_channelDifferenceTooLong) {
            private final /* synthetic */ int f$1;
            private final /* synthetic */ int f$2;
            private final /* synthetic */ TLRPC.TL_updates_channelDifferenceTooLong f$3;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$overwriteChannel$117$MessagesStorage(this.f$1, this.f$2, this.f$3);
            }
        });
    }

    /* JADX WARNING: Removed duplicated region for block: B:11:0x0112 A[Catch:{ Exception -> 0x0145 }] */
    /* JADX WARNING: Removed duplicated region for block: B:12:0x0114 A[Catch:{ Exception -> 0x0145 }] */
    /* JADX WARNING: Removed duplicated region for block: B:15:0x0133 A[Catch:{ Exception -> 0x0145 }] */
    /* JADX WARNING: Removed duplicated region for block: B:21:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$overwriteChannel$117$MessagesStorage(int r11, int r12, org.telegram.tgnet.TLRPC.TL_updates_channelDifferenceTooLong r13) {
        /*
            r10 = this;
            int r0 = -r11
            long r0 = (long) r0
            org.telegram.SQLite.SQLiteDatabase r2 = r10.database     // Catch:{ Exception -> 0x0145 }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0145 }
            r3.<init>()     // Catch:{ Exception -> 0x0145 }
            java.lang.String r4 = "SELECT pinned FROM dialogs WHERE did = "
            r3.append(r4)     // Catch:{ Exception -> 0x0145 }
            r3.append(r0)     // Catch:{ Exception -> 0x0145 }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x0145 }
            r4 = 0
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0145 }
            org.telegram.SQLite.SQLiteCursor r2 = r2.queryFinalized(r3, r5)     // Catch:{ Exception -> 0x0145 }
            boolean r3 = r2.next()     // Catch:{ Exception -> 0x0145 }
            r5 = 1
            if (r3 != 0) goto L_0x002a
            r3 = 0
            if (r12 == 0) goto L_0x0028
            r6 = 1
            goto L_0x002f
        L_0x0028:
            r6 = 0
            goto L_0x002f
        L_0x002a:
            int r3 = r2.intValue(r4)     // Catch:{ Exception -> 0x0145 }
            goto L_0x0028
        L_0x002f:
            r2.dispose()     // Catch:{ Exception -> 0x0145 }
            org.telegram.SQLite.SQLiteDatabase r2 = r10.database     // Catch:{ Exception -> 0x0145 }
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0145 }
            r7.<init>()     // Catch:{ Exception -> 0x0145 }
            java.lang.String r8 = "DELETE FROM messages WHERE uid = "
            r7.append(r8)     // Catch:{ Exception -> 0x0145 }
            r7.append(r0)     // Catch:{ Exception -> 0x0145 }
            java.lang.String r7 = r7.toString()     // Catch:{ Exception -> 0x0145 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r7)     // Catch:{ Exception -> 0x0145 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.stepThis()     // Catch:{ Exception -> 0x0145 }
            r2.dispose()     // Catch:{ Exception -> 0x0145 }
            org.telegram.SQLite.SQLiteDatabase r2 = r10.database     // Catch:{ Exception -> 0x0145 }
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0145 }
            r7.<init>()     // Catch:{ Exception -> 0x0145 }
            java.lang.String r8 = "DELETE FROM bot_keyboard WHERE uid = "
            r7.append(r8)     // Catch:{ Exception -> 0x0145 }
            r7.append(r0)     // Catch:{ Exception -> 0x0145 }
            java.lang.String r7 = r7.toString()     // Catch:{ Exception -> 0x0145 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r7)     // Catch:{ Exception -> 0x0145 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.stepThis()     // Catch:{ Exception -> 0x0145 }
            r2.dispose()     // Catch:{ Exception -> 0x0145 }
            org.telegram.SQLite.SQLiteDatabase r2 = r10.database     // Catch:{ Exception -> 0x0145 }
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0145 }
            r7.<init>()     // Catch:{ Exception -> 0x0145 }
            java.lang.String r8 = "UPDATE media_counts_v2 SET old = 1 WHERE uid = "
            r7.append(r8)     // Catch:{ Exception -> 0x0145 }
            r7.append(r0)     // Catch:{ Exception -> 0x0145 }
            java.lang.String r7 = r7.toString()     // Catch:{ Exception -> 0x0145 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r7)     // Catch:{ Exception -> 0x0145 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.stepThis()     // Catch:{ Exception -> 0x0145 }
            r2.dispose()     // Catch:{ Exception -> 0x0145 }
            org.telegram.SQLite.SQLiteDatabase r2 = r10.database     // Catch:{ Exception -> 0x0145 }
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0145 }
            r7.<init>()     // Catch:{ Exception -> 0x0145 }
            java.lang.String r8 = "DELETE FROM media_v2 WHERE uid = "
            r7.append(r8)     // Catch:{ Exception -> 0x0145 }
            r7.append(r0)     // Catch:{ Exception -> 0x0145 }
            java.lang.String r7 = r7.toString()     // Catch:{ Exception -> 0x0145 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r7)     // Catch:{ Exception -> 0x0145 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.stepThis()     // Catch:{ Exception -> 0x0145 }
            r2.dispose()     // Catch:{ Exception -> 0x0145 }
            org.telegram.SQLite.SQLiteDatabase r2 = r10.database     // Catch:{ Exception -> 0x0145 }
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0145 }
            r7.<init>()     // Catch:{ Exception -> 0x0145 }
            java.lang.String r8 = "DELETE FROM messages_holes WHERE uid = "
            r7.append(r8)     // Catch:{ Exception -> 0x0145 }
            r7.append(r0)     // Catch:{ Exception -> 0x0145 }
            java.lang.String r7 = r7.toString()     // Catch:{ Exception -> 0x0145 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r7)     // Catch:{ Exception -> 0x0145 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.stepThis()     // Catch:{ Exception -> 0x0145 }
            r2.dispose()     // Catch:{ Exception -> 0x0145 }
            org.telegram.SQLite.SQLiteDatabase r2 = r10.database     // Catch:{ Exception -> 0x0145 }
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0145 }
            r7.<init>()     // Catch:{ Exception -> 0x0145 }
            java.lang.String r8 = "DELETE FROM media_holes_v2 WHERE uid = "
            r7.append(r8)     // Catch:{ Exception -> 0x0145 }
            r7.append(r0)     // Catch:{ Exception -> 0x0145 }
            java.lang.String r7 = r7.toString()     // Catch:{ Exception -> 0x0145 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r7)     // Catch:{ Exception -> 0x0145 }
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.stepThis()     // Catch:{ Exception -> 0x0145 }
            r2.dispose()     // Catch:{ Exception -> 0x0145 }
            org.telegram.messenger.MediaDataController r2 = r10.getMediaDataController()     // Catch:{ Exception -> 0x0145 }
            r7 = 0
            r2.clearBotKeyboard(r0, r7)     // Catch:{ Exception -> 0x0145 }
            org.telegram.tgnet.TLRPC$TL_messages_dialogs r2 = new org.telegram.tgnet.TLRPC$TL_messages_dialogs     // Catch:{ Exception -> 0x0145 }
            r2.<init>()     // Catch:{ Exception -> 0x0145 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r8 = r2.chats     // Catch:{ Exception -> 0x0145 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r9 = r13.chats     // Catch:{ Exception -> 0x0145 }
            r8.addAll(r9)     // Catch:{ Exception -> 0x0145 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r8 = r2.users     // Catch:{ Exception -> 0x0145 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r9 = r13.users     // Catch:{ Exception -> 0x0145 }
            r8.addAll(r9)     // Catch:{ Exception -> 0x0145 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r8 = r2.messages     // Catch:{ Exception -> 0x0145 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r9 = r13.messages     // Catch:{ Exception -> 0x0145 }
            r8.addAll(r9)     // Catch:{ Exception -> 0x0145 }
            org.telegram.tgnet.TLRPC$Dialog r13 = r13.dialog     // Catch:{ Exception -> 0x0145 }
            r13.id = r0     // Catch:{ Exception -> 0x0145 }
            r13.flags = r5     // Catch:{ Exception -> 0x0145 }
            r13.notify_settings = r7     // Catch:{ Exception -> 0x0145 }
            if (r3 == 0) goto L_0x0114
            r8 = 1
            goto L_0x0115
        L_0x0114:
            r8 = 0
        L_0x0115:
            r13.pinned = r8     // Catch:{ Exception -> 0x0145 }
            r13.pinnedNum = r3     // Catch:{ Exception -> 0x0145 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r3 = r2.dialogs     // Catch:{ Exception -> 0x0145 }
            r3.add(r13)     // Catch:{ Exception -> 0x0145 }
            r10.putDialogsInternal(r2, r4)     // Catch:{ Exception -> 0x0145 }
            java.util.ArrayList r13 = new java.util.ArrayList     // Catch:{ Exception -> 0x0145 }
            r13.<init>()     // Catch:{ Exception -> 0x0145 }
            r10.updateDialogsWithDeletedMessages(r13, r7, r4, r11)     // Catch:{ Exception -> 0x0145 }
            org.telegram.messenger.-$$Lambda$MessagesStorage$Wb5AhXJSME14hTBqV6-I8T7JrAg r13 = new org.telegram.messenger.-$$Lambda$MessagesStorage$Wb5AhXJSME14hTBqV6-I8T7JrAg     // Catch:{ Exception -> 0x0145 }
            r13.<init>(r0)     // Catch:{ Exception -> 0x0145 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r13)     // Catch:{ Exception -> 0x0145 }
            if (r6 == 0) goto L_0x0149
            if (r12 != r5) goto L_0x013d
            org.telegram.messenger.MessagesController r12 = r10.getMessagesController()     // Catch:{ Exception -> 0x0145 }
            r12.checkChannelInviter(r11)     // Catch:{ Exception -> 0x0145 }
            goto L_0x0149
        L_0x013d:
            org.telegram.messenger.MessagesController r12 = r10.getMessagesController()     // Catch:{ Exception -> 0x0145 }
            r12.generateJoinMessage(r11, r4)     // Catch:{ Exception -> 0x0145 }
            goto L_0x0149
        L_0x0145:
            r11 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r11)
        L_0x0149:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$overwriteChannel$117$MessagesStorage(int, int, org.telegram.tgnet.TLRPC$TL_updates_channelDifferenceTooLong):void");
    }

    public /* synthetic */ void lambda$null$116$MessagesStorage(long j) {
        getNotificationCenter().postNotificationName(NotificationCenter.removeAllMessagesFromDialog, Long.valueOf(j), true);
    }

    public void putChannelViews(SparseArray<SparseIntArray> sparseArray, boolean z) {
        if (!isEmpty((SparseArray<?>) sparseArray)) {
            this.storageQueue.postRunnable(new Runnable(sparseArray, z) {
                private final /* synthetic */ SparseArray f$1;
                private final /* synthetic */ boolean f$2;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                }

                public final void run() {
                    MessagesStorage.this.lambda$putChannelViews$118$MessagesStorage(this.f$1, this.f$2);
                }
            });
        }
    }

    public /* synthetic */ void lambda$putChannelViews$118$MessagesStorage(SparseArray sparseArray, boolean z) {
        try {
            this.database.beginTransaction();
            SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE messages SET media = max((SELECT media FROM messages WHERE mid = ?), ?) WHERE mid = ?");
            for (int i = 0; i < sparseArray.size(); i++) {
                int keyAt = sparseArray.keyAt(i);
                SparseIntArray sparseIntArray = (SparseIntArray) sparseArray.get(keyAt);
                for (int i2 = 0; i2 < sparseIntArray.size(); i2++) {
                    int i3 = sparseIntArray.get(sparseIntArray.keyAt(i2));
                    long keyAt2 = (long) sparseIntArray.keyAt(i2);
                    if (z) {
                        keyAt2 |= ((long) (-keyAt)) << 32;
                    }
                    executeFast.requery();
                    executeFast.bindLong(1, keyAt2);
                    executeFast.bindInteger(2, i3);
                    executeFast.bindLong(3, keyAt2);
                    executeFast.step();
                }
            }
            executeFast.dispose();
            this.database.commitTransaction();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    private boolean isValidKeyboardToSave(TLRPC.Message message) {
        TLRPC.ReplyMarkup replyMarkup = message.reply_markup;
        return replyMarkup != null && !(replyMarkup instanceof TLRPC.TL_replyInlineMarkup) && (!replyMarkup.selective || message.mentioned);
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v59, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v42, resolved type: java.lang.Integer} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v46, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r29v6, resolved type: java.lang.Integer} */
    /* access modifiers changed from: private */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:207:0x058a A[Catch:{ Exception -> 0x0113 }] */
    /* JADX WARNING: Removed duplicated region for block: B:208:0x0592 A[Catch:{ Exception -> 0x0113 }] */
    /* JADX WARNING: Removed duplicated region for block: B:211:0x05a7 A[Catch:{ Exception -> 0x0113 }] */
    /* JADX WARNING: Removed duplicated region for block: B:212:0x05a9 A[Catch:{ Exception -> 0x0113 }] */
    /* JADX WARNING: Removed duplicated region for block: B:215:0x05b8 A[Catch:{ Exception -> 0x0113 }] */
    /* JADX WARNING: Removed duplicated region for block: B:216:0x05cd A[Catch:{ Exception -> 0x0113 }] */
    /* JADX WARNING: Removed duplicated region for block: B:219:0x05d7 A[Catch:{ Exception -> 0x0113 }] */
    /* JADX WARNING: Removed duplicated region for block: B:224:0x0609 A[Catch:{ Exception -> 0x0113 }] */
    /* JADX WARNING: Removed duplicated region for block: B:228:0x062e A[Catch:{ Exception -> 0x0113 }] */
    /* JADX WARNING: Removed duplicated region for block: B:249:0x0694 A[Catch:{ Exception -> 0x0113 }] */
    /* JADX WARNING: Removed duplicated region for block: B:250:0x06a6 A[Catch:{ Exception -> 0x0113 }] */
    /* JADX WARNING: Removed duplicated region for block: B:276:0x0730 A[Catch:{ Exception -> 0x0113 }] */
    /* renamed from: putMessagesInternal */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void lambda$putMessages$120$MessagesStorage(java.util.ArrayList<org.telegram.tgnet.TLRPC.Message> r33, boolean r34, boolean r35, int r36, boolean r37, boolean r38) {
        /*
            r32 = this;
            r1 = r32
            r2 = r33
            java.lang.String r3 = "REPLACE INTO randoms VALUES(?, ?)"
            r5 = 32
            r6 = 5
            if (r38 == 0) goto L_0x00d1
            if (r34 == 0) goto L_0x0012
            org.telegram.SQLite.SQLiteDatabase r14 = r1.database     // Catch:{ Exception -> 0x0113 }
            r14.beginTransaction()     // Catch:{ Exception -> 0x0113 }
        L_0x0012:
            org.telegram.SQLite.SQLiteDatabase r14 = r1.database     // Catch:{ Exception -> 0x0113 }
            java.lang.String r15 = "REPLACE INTO scheduled_messages VALUES(?, ?, ?, ?, ?, ?, NULL)"
            org.telegram.SQLite.SQLitePreparedStatement r14 = r14.executeFast(r15)     // Catch:{ Exception -> 0x0113 }
            org.telegram.SQLite.SQLiteDatabase r15 = r1.database     // Catch:{ Exception -> 0x0113 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r15.executeFast(r3)     // Catch:{ Exception -> 0x0113 }
            java.util.ArrayList r15 = new java.util.ArrayList     // Catch:{ Exception -> 0x0113 }
            r15.<init>()     // Catch:{ Exception -> 0x0113 }
            r13 = 0
        L_0x0026:
            int r7 = r33.size()     // Catch:{ Exception -> 0x0113 }
            if (r13 >= r7) goto L_0x00b1
            java.lang.Object r7 = r2.get(r13)     // Catch:{ Exception -> 0x0113 }
            org.telegram.tgnet.TLRPC$Message r7 = (org.telegram.tgnet.TLRPC.Message) r7     // Catch:{ Exception -> 0x0113 }
            r1.fixUnsupportedMedia(r7)     // Catch:{ Exception -> 0x0113 }
            r14.requery()     // Catch:{ Exception -> 0x0113 }
            int r8 = r7.id     // Catch:{ Exception -> 0x0113 }
            long r9 = (long) r8     // Catch:{ Exception -> 0x0113 }
            int r8 = r7.local_id     // Catch:{ Exception -> 0x0113 }
            if (r8 == 0) goto L_0x0042
            int r8 = r7.local_id     // Catch:{ Exception -> 0x0113 }
            long r9 = (long) r8     // Catch:{ Exception -> 0x0113 }
        L_0x0042:
            org.telegram.tgnet.TLRPC$Peer r8 = r7.to_id     // Catch:{ Exception -> 0x0113 }
            int r8 = r8.channel_id     // Catch:{ Exception -> 0x0113 }
            if (r8 == 0) goto L_0x004f
            org.telegram.tgnet.TLRPC$Peer r8 = r7.to_id     // Catch:{ Exception -> 0x0113 }
            int r8 = r8.channel_id     // Catch:{ Exception -> 0x0113 }
            long r11 = (long) r8     // Catch:{ Exception -> 0x0113 }
            long r11 = r11 << r5
            long r9 = r9 | r11
        L_0x004f:
            org.telegram.tgnet.NativeByteBuffer r8 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0113 }
            int r11 = r7.getObjectSize()     // Catch:{ Exception -> 0x0113 }
            r8.<init>((int) r11)     // Catch:{ Exception -> 0x0113 }
            r7.serializeToStream(r8)     // Catch:{ Exception -> 0x0113 }
            long r11 = org.telegram.messenger.MessageObject.getDialogId(r7)     // Catch:{ Exception -> 0x0113 }
            r5 = 1
            r14.bindLong(r5, r9)     // Catch:{ Exception -> 0x0113 }
            r5 = 2
            r14.bindLong(r5, r11)     // Catch:{ Exception -> 0x0113 }
            int r5 = r7.send_state     // Catch:{ Exception -> 0x0113 }
            r4 = 3
            r14.bindInteger(r4, r5)     // Catch:{ Exception -> 0x0113 }
            int r4 = r7.date     // Catch:{ Exception -> 0x0113 }
            r5 = 4
            r14.bindInteger(r5, r4)     // Catch:{ Exception -> 0x0113 }
            r14.bindByteBuffer((int) r6, (org.telegram.tgnet.NativeByteBuffer) r8)     // Catch:{ Exception -> 0x0113 }
            int r4 = r7.ttl     // Catch:{ Exception -> 0x0113 }
            r5 = 6
            r14.bindInteger(r5, r4)     // Catch:{ Exception -> 0x0113 }
            r14.step()     // Catch:{ Exception -> 0x0113 }
            long r4 = r7.random_id     // Catch:{ Exception -> 0x0113 }
            r17 = 0
            int r21 = (r4 > r17 ? 1 : (r4 == r17 ? 0 : -1))
            if (r21 == 0) goto L_0x0097
            r3.requery()     // Catch:{ Exception -> 0x0113 }
            long r4 = r7.random_id     // Catch:{ Exception -> 0x0113 }
            r7 = 1
            r3.bindLong(r7, r4)     // Catch:{ Exception -> 0x0113 }
            r4 = 2
            r3.bindLong(r4, r9)     // Catch:{ Exception -> 0x0113 }
            r3.step()     // Catch:{ Exception -> 0x0113 }
        L_0x0097:
            r8.reuse()     // Catch:{ Exception -> 0x0113 }
            java.lang.Long r4 = java.lang.Long.valueOf(r11)     // Catch:{ Exception -> 0x0113 }
            boolean r4 = r15.contains(r4)     // Catch:{ Exception -> 0x0113 }
            if (r4 != 0) goto L_0x00ab
            java.lang.Long r4 = java.lang.Long.valueOf(r11)     // Catch:{ Exception -> 0x0113 }
            r15.add(r4)     // Catch:{ Exception -> 0x0113 }
        L_0x00ab:
            int r13 = r13 + 1
            r5 = 32
            goto L_0x0026
        L_0x00b1:
            r14.dispose()     // Catch:{ Exception -> 0x0113 }
            r3.dispose()     // Catch:{ Exception -> 0x0113 }
            if (r34 == 0) goto L_0x00be
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database     // Catch:{ Exception -> 0x0113 }
            r2.commitTransaction()     // Catch:{ Exception -> 0x0113 }
        L_0x00be:
            int r2 = r15.size()     // Catch:{ Exception -> 0x0113 }
            r3 = 0
        L_0x00c3:
            if (r3 >= r2) goto L_0x0a5c
            java.lang.Object r4 = r15.get(r3)     // Catch:{ Exception -> 0x0113 }
            java.lang.Long r4 = (java.lang.Long) r4     // Catch:{ Exception -> 0x0113 }
            r1.broadcastScheduledMessagesChange(r4)     // Catch:{ Exception -> 0x0113 }
            int r3 = r3 + 1
            goto L_0x00c3
        L_0x00d1:
            if (r37 == 0) goto L_0x0117
            r5 = 0
            java.lang.Object r7 = r2.get(r5)     // Catch:{ Exception -> 0x0113 }
            org.telegram.tgnet.TLRPC$Message r7 = (org.telegram.tgnet.TLRPC.Message) r7     // Catch:{ Exception -> 0x0113 }
            long r8 = r7.dialog_id     // Catch:{ Exception -> 0x0113 }
            r10 = 0
            int r5 = (r8 > r10 ? 1 : (r8 == r10 ? 0 : -1))
            if (r5 != 0) goto L_0x00e5
            org.telegram.messenger.MessageObject.getDialogId(r7)     // Catch:{ Exception -> 0x0113 }
        L_0x00e5:
            org.telegram.SQLite.SQLiteDatabase r5 = r1.database     // Catch:{ Exception -> 0x0113 }
            java.lang.StringBuilder r8 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0113 }
            r8.<init>()     // Catch:{ Exception -> 0x0113 }
            java.lang.String r9 = "SELECT last_mid FROM dialogs WHERE did = "
            r8.append(r9)     // Catch:{ Exception -> 0x0113 }
            long r9 = r7.dialog_id     // Catch:{ Exception -> 0x0113 }
            r8.append(r9)     // Catch:{ Exception -> 0x0113 }
            java.lang.String r7 = r8.toString()     // Catch:{ Exception -> 0x0113 }
            r8 = 0
            java.lang.Object[] r9 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x0113 }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r7, r9)     // Catch:{ Exception -> 0x0113 }
            boolean r7 = r5.next()     // Catch:{ Exception -> 0x0113 }
            if (r7 == 0) goto L_0x010c
            int r7 = r5.intValue(r8)     // Catch:{ Exception -> 0x0113 }
            goto L_0x010d
        L_0x010c:
            r7 = -1
        L_0x010d:
            r5.dispose()     // Catch:{ Exception -> 0x0113 }
            if (r7 == 0) goto L_0x0117
            return
        L_0x0113:
            r0 = move-exception
        L_0x0114:
            r2 = r0
            goto L_0x0a59
        L_0x0117:
            if (r34 == 0) goto L_0x011e
            org.telegram.SQLite.SQLiteDatabase r5 = r1.database     // Catch:{ Exception -> 0x0113 }
            r5.beginTransaction()     // Catch:{ Exception -> 0x0113 }
        L_0x011e:
            android.util.LongSparseArray r5 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x0113 }
            r5.<init>()     // Catch:{ Exception -> 0x0113 }
            android.util.LongSparseArray r7 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x0113 }
            r7.<init>()     // Catch:{ Exception -> 0x0113 }
            android.util.LongSparseArray r8 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x0113 }
            r8.<init>()     // Catch:{ Exception -> 0x0113 }
            android.util.LongSparseArray r9 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x0113 }
            r9.<init>()     // Catch:{ Exception -> 0x0113 }
            java.lang.StringBuilder r10 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0113 }
            r10.<init>()     // Catch:{ Exception -> 0x0113 }
            android.util.LongSparseArray r11 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x0113 }
            r11.<init>()     // Catch:{ Exception -> 0x0113 }
            android.util.LongSparseArray r12 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x0113 }
            r12.<init>()     // Catch:{ Exception -> 0x0113 }
            android.util.LongSparseArray r13 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x0113 }
            r13.<init>()     // Catch:{ Exception -> 0x0113 }
            org.telegram.SQLite.SQLiteDatabase r14 = r1.database     // Catch:{ Exception -> 0x0113 }
            java.lang.String r15 = "REPLACE INTO messages VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r14 = r14.executeFast(r15)     // Catch:{ Exception -> 0x0113 }
            org.telegram.SQLite.SQLiteDatabase r15 = r1.database     // Catch:{ Exception -> 0x0113 }
            org.telegram.SQLite.SQLitePreparedStatement r3 = r15.executeFast(r3)     // Catch:{ Exception -> 0x0113 }
            org.telegram.SQLite.SQLiteDatabase r15 = r1.database     // Catch:{ Exception -> 0x0113 }
            java.lang.String r6 = "REPLACE INTO download_queue VALUES(?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r6 = r15.executeFast(r6)     // Catch:{ Exception -> 0x0113 }
            org.telegram.SQLite.SQLiteDatabase r15 = r1.database     // Catch:{ Exception -> 0x0113 }
            java.lang.String r4 = "REPLACE INTO webpage_pending VALUES(?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r4 = r15.executeFast(r4)     // Catch:{ Exception -> 0x0113 }
            r25 = r3
            r24 = r4
            r23 = r6
            r4 = 0
            r6 = 0
            r15 = 0
            r22 = 0
        L_0x016f:
            int r3 = r33.size()     // Catch:{ Exception -> 0x0113 }
            if (r15 >= r3) goto L_0x02b0
            java.lang.Object r3 = r2.get(r15)     // Catch:{ Exception -> 0x0113 }
            org.telegram.tgnet.TLRPC$Message r3 = (org.telegram.tgnet.TLRPC.Message) r3     // Catch:{ Exception -> 0x0113 }
            r26 = r5
            int r5 = r3.id     // Catch:{ Exception -> 0x0113 }
            r27 = r7
            r28 = r8
            long r7 = (long) r5     // Catch:{ Exception -> 0x0113 }
            r29 = r6
            long r5 = r3.dialog_id     // Catch:{ Exception -> 0x0113 }
            r17 = 0
            int r30 = (r5 > r17 ? 1 : (r5 == r17 ? 0 : -1))
            if (r30 != 0) goto L_0x0191
            org.telegram.messenger.MessageObject.getDialogId(r3)     // Catch:{ Exception -> 0x0113 }
        L_0x0191:
            org.telegram.tgnet.TLRPC$Peer r5 = r3.to_id     // Catch:{ Exception -> 0x0113 }
            int r5 = r5.channel_id     // Catch:{ Exception -> 0x0113 }
            if (r5 == 0) goto L_0x01a1
            org.telegram.tgnet.TLRPC$Peer r5 = r3.to_id     // Catch:{ Exception -> 0x0113 }
            int r5 = r5.channel_id     // Catch:{ Exception -> 0x0113 }
            long r5 = (long) r5     // Catch:{ Exception -> 0x0113 }
            r20 = 32
            long r5 = r5 << r20
            long r7 = r7 | r5
        L_0x01a1:
            boolean r5 = r3.mentioned     // Catch:{ Exception -> 0x0113 }
            if (r5 == 0) goto L_0x01b2
            boolean r5 = r3.media_unread     // Catch:{ Exception -> 0x0113 }
            if (r5 == 0) goto L_0x01b2
            long r5 = r3.dialog_id     // Catch:{ Exception -> 0x0113 }
            java.lang.Long r5 = java.lang.Long.valueOf(r5)     // Catch:{ Exception -> 0x0113 }
            r13.put(r7, r5)     // Catch:{ Exception -> 0x0113 }
        L_0x01b2:
            org.telegram.tgnet.TLRPC$MessageAction r5 = r3.action     // Catch:{ Exception -> 0x0113 }
            boolean r5 = r5 instanceof org.telegram.tgnet.TLRPC.TL_messageActionHistoryClear     // Catch:{ Exception -> 0x0113 }
            if (r5 != 0) goto L_0x023b
            boolean r5 = org.telegram.messenger.MessageObject.isOut(r3)     // Catch:{ Exception -> 0x0113 }
            if (r5 == 0) goto L_0x01c2
            boolean r5 = r3.from_scheduled     // Catch:{ Exception -> 0x0113 }
            if (r5 == 0) goto L_0x023b
        L_0x01c2:
            int r5 = r3.id     // Catch:{ Exception -> 0x0113 }
            if (r5 > 0) goto L_0x01cc
            boolean r5 = org.telegram.messenger.MessageObject.isUnread(r3)     // Catch:{ Exception -> 0x0113 }
            if (r5 == 0) goto L_0x023b
        L_0x01cc:
            long r5 = r3.dialog_id     // Catch:{ Exception -> 0x0113 }
            java.lang.Object r5 = r11.get(r5)     // Catch:{ Exception -> 0x0113 }
            java.lang.Integer r5 = (java.lang.Integer) r5     // Catch:{ Exception -> 0x0113 }
            if (r5 != 0) goto L_0x0213
            org.telegram.SQLite.SQLiteDatabase r5 = r1.database     // Catch:{ Exception -> 0x0113 }
            java.lang.StringBuilder r6 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0113 }
            r6.<init>()     // Catch:{ Exception -> 0x0113 }
            r30 = r14
            java.lang.String r14 = "SELECT inbox_max FROM dialogs WHERE did = "
            r6.append(r14)     // Catch:{ Exception -> 0x0113 }
            r31 = r13
            long r13 = r3.dialog_id     // Catch:{ Exception -> 0x0113 }
            r6.append(r13)     // Catch:{ Exception -> 0x0113 }
            java.lang.String r6 = r6.toString()     // Catch:{ Exception -> 0x0113 }
            r13 = 0
            java.lang.Object[] r14 = new java.lang.Object[r13]     // Catch:{ Exception -> 0x0113 }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r6, r14)     // Catch:{ Exception -> 0x0113 }
            boolean r6 = r5.next()     // Catch:{ Exception -> 0x0113 }
            if (r6 == 0) goto L_0x0205
            int r6 = r5.intValue(r13)     // Catch:{ Exception -> 0x0113 }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x0113 }
            goto L_0x0209
        L_0x0205:
            java.lang.Integer r6 = java.lang.Integer.valueOf(r13)     // Catch:{ Exception -> 0x0113 }
        L_0x0209:
            r5.dispose()     // Catch:{ Exception -> 0x0113 }
            long r13 = r3.dialog_id     // Catch:{ Exception -> 0x0113 }
            r11.put(r13, r6)     // Catch:{ Exception -> 0x0113 }
            r5 = r6
            goto L_0x0217
        L_0x0213:
            r31 = r13
            r30 = r14
        L_0x0217:
            int r6 = r3.id     // Catch:{ Exception -> 0x0113 }
            if (r6 < 0) goto L_0x0223
            int r5 = r5.intValue()     // Catch:{ Exception -> 0x0113 }
            int r6 = r3.id     // Catch:{ Exception -> 0x0113 }
            if (r5 >= r6) goto L_0x023f
        L_0x0223:
            int r5 = r10.length()     // Catch:{ Exception -> 0x0113 }
            if (r5 <= 0) goto L_0x022e
            java.lang.String r5 = ","
            r10.append(r5)     // Catch:{ Exception -> 0x0113 }
        L_0x022e:
            r10.append(r7)     // Catch:{ Exception -> 0x0113 }
            long r5 = r3.dialog_id     // Catch:{ Exception -> 0x0113 }
            java.lang.Long r5 = java.lang.Long.valueOf(r5)     // Catch:{ Exception -> 0x0113 }
            r12.put(r7, r5)     // Catch:{ Exception -> 0x0113 }
            goto L_0x023f
        L_0x023b:
            r31 = r13
            r30 = r14
        L_0x023f:
            boolean r5 = org.telegram.messenger.MediaDataController.canAddMessageToMedia(r3)     // Catch:{ Exception -> 0x0113 }
            if (r5 == 0) goto L_0x0285
            if (r22 != 0) goto L_0x025a
            java.lang.StringBuilder r22 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0113 }
            r22.<init>()     // Catch:{ Exception -> 0x0113 }
            android.util.LongSparseArray r6 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x0113 }
            r6.<init>()     // Catch:{ Exception -> 0x0113 }
            android.util.LongSparseArray r4 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x0113 }
            r4.<init>()     // Catch:{ Exception -> 0x0113 }
            r5 = r4
            r4 = r22
            goto L_0x025f
        L_0x025a:
            r5 = r4
            r4 = r22
            r6 = r29
        L_0x025f:
            int r13 = r4.length()     // Catch:{ Exception -> 0x0113 }
            if (r13 <= 0) goto L_0x026a
            java.lang.String r13 = ","
            r4.append(r13)     // Catch:{ Exception -> 0x0113 }
        L_0x026a:
            r4.append(r7)     // Catch:{ Exception -> 0x0113 }
            long r13 = r3.dialog_id     // Catch:{ Exception -> 0x0113 }
            java.lang.Long r13 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x0113 }
            r6.put(r7, r13)     // Catch:{ Exception -> 0x0113 }
            int r13 = org.telegram.messenger.MediaDataController.getMediaType(r3)     // Catch:{ Exception -> 0x0113 }
            java.lang.Integer r13 = java.lang.Integer.valueOf(r13)     // Catch:{ Exception -> 0x0113 }
            r5.put(r7, r13)     // Catch:{ Exception -> 0x0113 }
            r22 = r4
            r4 = r5
            goto L_0x0287
        L_0x0285:
            r6 = r29
        L_0x0287:
            boolean r5 = r1.isValidKeyboardToSave(r3)     // Catch:{ Exception -> 0x0113 }
            if (r5 == 0) goto L_0x02a2
            long r7 = r3.dialog_id     // Catch:{ Exception -> 0x0113 }
            java.lang.Object r5 = r9.get(r7)     // Catch:{ Exception -> 0x0113 }
            org.telegram.tgnet.TLRPC$Message r5 = (org.telegram.tgnet.TLRPC.Message) r5     // Catch:{ Exception -> 0x0113 }
            if (r5 == 0) goto L_0x029d
            int r5 = r5.id     // Catch:{ Exception -> 0x0113 }
            int r7 = r3.id     // Catch:{ Exception -> 0x0113 }
            if (r5 >= r7) goto L_0x02a2
        L_0x029d:
            long r7 = r3.dialog_id     // Catch:{ Exception -> 0x0113 }
            r9.put(r7, r3)     // Catch:{ Exception -> 0x0113 }
        L_0x02a2:
            int r15 = r15 + 1
            r5 = r26
            r7 = r27
            r8 = r28
            r14 = r30
            r13 = r31
            goto L_0x016f
        L_0x02b0:
            r26 = r5
            r29 = r6
            r27 = r7
            r28 = r8
            r31 = r13
            r30 = r14
            r3 = 0
        L_0x02bd:
            int r5 = r9.size()     // Catch:{ Exception -> 0x0113 }
            if (r3 >= r5) goto L_0x02d7
            org.telegram.messenger.MediaDataController r5 = r32.getMediaDataController()     // Catch:{ Exception -> 0x0113 }
            long r6 = r9.keyAt(r3)     // Catch:{ Exception -> 0x0113 }
            java.lang.Object r8 = r9.valueAt(r3)     // Catch:{ Exception -> 0x0113 }
            org.telegram.tgnet.TLRPC$Message r8 = (org.telegram.tgnet.TLRPC.Message) r8     // Catch:{ Exception -> 0x0113 }
            r5.putBotKeyboard(r6, r8)     // Catch:{ Exception -> 0x0113 }
            int r3 = r3 + 1
            goto L_0x02bd
        L_0x02d7:
            java.lang.String r3 = ")"
            if (r22 == 0) goto L_0x03e0
            org.telegram.SQLite.SQLiteDatabase r5 = r1.database     // Catch:{ Exception -> 0x0113 }
            java.lang.StringBuilder r6 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0113 }
            r6.<init>()     // Catch:{ Exception -> 0x0113 }
            java.lang.String r7 = "SELECT mid, type FROM media_v2 WHERE mid IN("
            r6.append(r7)     // Catch:{ Exception -> 0x0113 }
            java.lang.String r7 = r22.toString()     // Catch:{ Exception -> 0x0113 }
            r6.append(r7)     // Catch:{ Exception -> 0x0113 }
            r6.append(r3)     // Catch:{ Exception -> 0x0113 }
            java.lang.String r6 = r6.toString()     // Catch:{ Exception -> 0x0113 }
            r7 = 0
            java.lang.Object[] r8 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x0113 }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r6, r8)     // Catch:{ Exception -> 0x0113 }
            r6 = 0
        L_0x02fd:
            boolean r8 = r5.next()     // Catch:{ Exception -> 0x0113 }
            if (r8 == 0) goto L_0x0332
            long r8 = r5.longValue(r7)     // Catch:{ Exception -> 0x0113 }
            r7 = 1
            int r11 = r5.intValue(r7)     // Catch:{ Exception -> 0x0113 }
            java.lang.Object r7 = r4.get(r8)     // Catch:{ Exception -> 0x0113 }
            java.lang.Integer r7 = (java.lang.Integer) r7     // Catch:{ Exception -> 0x0113 }
            int r7 = r7.intValue()     // Catch:{ Exception -> 0x0113 }
            if (r11 != r7) goto L_0x031e
            r15 = r29
            r15.remove(r8)     // Catch:{ Exception -> 0x0113 }
            goto L_0x032e
        L_0x031e:
            r15 = r29
            if (r6 != 0) goto L_0x0327
            android.util.LongSparseArray r6 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x0113 }
            r6.<init>()     // Catch:{ Exception -> 0x0113 }
        L_0x0327:
            java.lang.Integer r7 = java.lang.Integer.valueOf(r11)     // Catch:{ Exception -> 0x0113 }
            r6.put(r8, r7)     // Catch:{ Exception -> 0x0113 }
        L_0x032e:
            r29 = r15
            r7 = 0
            goto L_0x02fd
        L_0x0332:
            r15 = r29
            r5.dispose()     // Catch:{ Exception -> 0x0113 }
            android.util.SparseArray r5 = new android.util.SparseArray     // Catch:{ Exception -> 0x0113 }
            r5.<init>()     // Catch:{ Exception -> 0x0113 }
            r7 = 0
        L_0x033d:
            int r8 = r15.size()     // Catch:{ Exception -> 0x0113 }
            if (r7 >= r8) goto L_0x03e1
            long r8 = r15.keyAt(r7)     // Catch:{ Exception -> 0x0113 }
            java.lang.Object r11 = r15.valueAt(r7)     // Catch:{ Exception -> 0x0113 }
            java.lang.Long r11 = (java.lang.Long) r11     // Catch:{ Exception -> 0x0113 }
            long r13 = r11.longValue()     // Catch:{ Exception -> 0x0113 }
            java.lang.Object r11 = r4.get(r8)     // Catch:{ Exception -> 0x0113 }
            java.lang.Integer r11 = (java.lang.Integer) r11     // Catch:{ Exception -> 0x0113 }
            r22 = r4
            int r4 = r11.intValue()     // Catch:{ Exception -> 0x0113 }
            java.lang.Object r4 = r5.get(r4)     // Catch:{ Exception -> 0x0113 }
            android.util.LongSparseArray r4 = (android.util.LongSparseArray) r4     // Catch:{ Exception -> 0x0113 }
            if (r4 != 0) goto L_0x0378
            android.util.LongSparseArray r4 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x0113 }
            r4.<init>()     // Catch:{ Exception -> 0x0113 }
            r16 = 0
            java.lang.Integer r29 = java.lang.Integer.valueOf(r16)     // Catch:{ Exception -> 0x0113 }
            int r11 = r11.intValue()     // Catch:{ Exception -> 0x0113 }
            r5.put(r11, r4)     // Catch:{ Exception -> 0x0113 }
            goto L_0x0380
        L_0x0378:
            java.lang.Object r11 = r4.get(r13)     // Catch:{ Exception -> 0x0113 }
            r29 = r11
            java.lang.Integer r29 = (java.lang.Integer) r29     // Catch:{ Exception -> 0x0113 }
        L_0x0380:
            if (r29 != 0) goto L_0x0387
            r11 = 0
            java.lang.Integer r29 = java.lang.Integer.valueOf(r11)     // Catch:{ Exception -> 0x0113 }
        L_0x0387:
            int r11 = r29.intValue()     // Catch:{ Exception -> 0x0113 }
            r19 = 1
            int r11 = r11 + 1
            java.lang.Integer r11 = java.lang.Integer.valueOf(r11)     // Catch:{ Exception -> 0x0113 }
            r4.put(r13, r11)     // Catch:{ Exception -> 0x0113 }
            if (r6 == 0) goto L_0x03da
            r4 = -1
            java.lang.Integer r11 = java.lang.Integer.valueOf(r4)     // Catch:{ Exception -> 0x0113 }
            java.lang.Object r4 = r6.get(r8, r11)     // Catch:{ Exception -> 0x0113 }
            java.lang.Integer r4 = (java.lang.Integer) r4     // Catch:{ Exception -> 0x0113 }
            int r4 = r4.intValue()     // Catch:{ Exception -> 0x0113 }
            if (r4 < 0) goto L_0x03da
            java.lang.Object r8 = r5.get(r4)     // Catch:{ Exception -> 0x0113 }
            android.util.LongSparseArray r8 = (android.util.LongSparseArray) r8     // Catch:{ Exception -> 0x0113 }
            if (r8 != 0) goto L_0x03bf
            android.util.LongSparseArray r8 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x0113 }
            r8.<init>()     // Catch:{ Exception -> 0x0113 }
            r9 = 0
            java.lang.Integer r11 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x0113 }
            r5.put(r4, r8)     // Catch:{ Exception -> 0x0113 }
            goto L_0x03c6
        L_0x03bf:
            java.lang.Object r4 = r8.get(r13)     // Catch:{ Exception -> 0x0113 }
            r11 = r4
            java.lang.Integer r11 = (java.lang.Integer) r11     // Catch:{ Exception -> 0x0113 }
        L_0x03c6:
            if (r11 != 0) goto L_0x03cd
            r4 = 0
            java.lang.Integer r11 = java.lang.Integer.valueOf(r4)     // Catch:{ Exception -> 0x0113 }
        L_0x03cd:
            int r4 = r11.intValue()     // Catch:{ Exception -> 0x0113 }
            r9 = 1
            int r4 = r4 - r9
            java.lang.Integer r4 = java.lang.Integer.valueOf(r4)     // Catch:{ Exception -> 0x0113 }
            r8.put(r13, r4)     // Catch:{ Exception -> 0x0113 }
        L_0x03da:
            int r7 = r7 + 1
            r4 = r22
            goto L_0x033d
        L_0x03e0:
            r5 = 0
        L_0x03e1:
            int r4 = r10.length()     // Catch:{ Exception -> 0x0113 }
            if (r4 <= 0) goto L_0x0489
            org.telegram.SQLite.SQLiteDatabase r4 = r1.database     // Catch:{ Exception -> 0x0113 }
            java.lang.StringBuilder r6 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0113 }
            r6.<init>()     // Catch:{ Exception -> 0x0113 }
            java.lang.String r7 = "SELECT mid FROM messages WHERE mid IN("
            r6.append(r7)     // Catch:{ Exception -> 0x0113 }
            java.lang.String r7 = r10.toString()     // Catch:{ Exception -> 0x0113 }
            r6.append(r7)     // Catch:{ Exception -> 0x0113 }
            r6.append(r3)     // Catch:{ Exception -> 0x0113 }
            java.lang.String r3 = r6.toString()     // Catch:{ Exception -> 0x0113 }
            r6 = 0
            java.lang.Object[] r7 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0113 }
            org.telegram.SQLite.SQLiteCursor r3 = r4.queryFinalized(r3, r7)     // Catch:{ Exception -> 0x0113 }
        L_0x0408:
            boolean r4 = r3.next()     // Catch:{ Exception -> 0x0113 }
            if (r4 == 0) goto L_0x041e
            long r7 = r3.longValue(r6)     // Catch:{ Exception -> 0x0113 }
            r12.remove(r7)     // Catch:{ Exception -> 0x0113 }
            r4 = r31
            r4.remove(r7)     // Catch:{ Exception -> 0x0113 }
            r31 = r4
            r6 = 0
            goto L_0x0408
        L_0x041e:
            r4 = r31
            r3.dispose()     // Catch:{ Exception -> 0x0113 }
            r3 = 0
        L_0x0424:
            int r6 = r12.size()     // Catch:{ Exception -> 0x0113 }
            if (r3 >= r6) goto L_0x0455
            java.lang.Object r6 = r12.valueAt(r3)     // Catch:{ Exception -> 0x0113 }
            java.lang.Long r6 = (java.lang.Long) r6     // Catch:{ Exception -> 0x0113 }
            long r6 = r6.longValue()     // Catch:{ Exception -> 0x0113 }
            r8 = r27
            java.lang.Object r9 = r8.get(r6)     // Catch:{ Exception -> 0x0113 }
            java.lang.Integer r9 = (java.lang.Integer) r9     // Catch:{ Exception -> 0x0113 }
            if (r9 != 0) goto L_0x0443
            r10 = 0
            java.lang.Integer r9 = java.lang.Integer.valueOf(r10)     // Catch:{ Exception -> 0x0113 }
        L_0x0443:
            int r9 = r9.intValue()     // Catch:{ Exception -> 0x0113 }
            r10 = 1
            int r9 = r9 + r10
            java.lang.Integer r9 = java.lang.Integer.valueOf(r9)     // Catch:{ Exception -> 0x0113 }
            r8.put(r6, r9)     // Catch:{ Exception -> 0x0113 }
            int r3 = r3 + 1
            r27 = r8
            goto L_0x0424
        L_0x0455:
            r8 = r27
            r3 = 0
        L_0x0458:
            int r6 = r4.size()     // Catch:{ Exception -> 0x0113 }
            if (r3 >= r6) goto L_0x048b
            java.lang.Object r6 = r4.valueAt(r3)     // Catch:{ Exception -> 0x0113 }
            java.lang.Long r6 = (java.lang.Long) r6     // Catch:{ Exception -> 0x0113 }
            long r6 = r6.longValue()     // Catch:{ Exception -> 0x0113 }
            r9 = r28
            java.lang.Object r10 = r9.get(r6)     // Catch:{ Exception -> 0x0113 }
            java.lang.Integer r10 = (java.lang.Integer) r10     // Catch:{ Exception -> 0x0113 }
            if (r10 != 0) goto L_0x0477
            r11 = 0
            java.lang.Integer r10 = java.lang.Integer.valueOf(r11)     // Catch:{ Exception -> 0x0113 }
        L_0x0477:
            int r10 = r10.intValue()     // Catch:{ Exception -> 0x0113 }
            r11 = 1
            int r10 = r10 + r11
            java.lang.Integer r10 = java.lang.Integer.valueOf(r10)     // Catch:{ Exception -> 0x0113 }
            r9.put(r6, r10)     // Catch:{ Exception -> 0x0113 }
            int r3 = r3 + 1
            r28 = r9
            goto L_0x0458
        L_0x0489:
            r8 = r27
        L_0x048b:
            r9 = r28
            r3 = 0
            r4 = 0
            r6 = 0
            r7 = 0
        L_0x0491:
            int r10 = r33.size()     // Catch:{ Exception -> 0x0113 }
            if (r3 >= r10) goto L_0x07b0
            java.lang.Object r10 = r2.get(r3)     // Catch:{ Exception -> 0x0113 }
            org.telegram.tgnet.TLRPC$Message r10 = (org.telegram.tgnet.TLRPC.Message) r10     // Catch:{ Exception -> 0x0113 }
            r1.fixUnsupportedMedia(r10)     // Catch:{ Exception -> 0x0113 }
            r30.requery()     // Catch:{ Exception -> 0x0113 }
            int r13 = r10.id     // Catch:{ Exception -> 0x0113 }
            long r13 = (long) r13     // Catch:{ Exception -> 0x0113 }
            int r15 = r10.local_id     // Catch:{ Exception -> 0x0113 }
            if (r15 == 0) goto L_0x04ad
            int r13 = r10.local_id     // Catch:{ Exception -> 0x0113 }
            long r13 = (long) r13     // Catch:{ Exception -> 0x0113 }
        L_0x04ad:
            org.telegram.tgnet.TLRPC$Peer r15 = r10.to_id     // Catch:{ Exception -> 0x0113 }
            int r15 = r15.channel_id     // Catch:{ Exception -> 0x0113 }
            if (r15 == 0) goto L_0x04bc
            org.telegram.tgnet.TLRPC$Peer r15 = r10.to_id     // Catch:{ Exception -> 0x0113 }
            int r15 = r15.channel_id     // Catch:{ Exception -> 0x0113 }
            long r11 = (long) r15     // Catch:{ Exception -> 0x0113 }
            r15 = 32
            long r11 = r11 << r15
            long r13 = r13 | r11
        L_0x04bc:
            org.telegram.tgnet.NativeByteBuffer r11 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0113 }
            int r12 = r10.getObjectSize()     // Catch:{ Exception -> 0x0113 }
            r11.<init>((int) r12)     // Catch:{ Exception -> 0x0113 }
            r10.serializeToStream(r11)     // Catch:{ Exception -> 0x0113 }
            org.telegram.tgnet.TLRPC$MessageAction r12 = r10.action     // Catch:{ Exception -> 0x0113 }
            boolean r12 = r12 instanceof org.telegram.tgnet.TLRPC.TL_messageEncryptedAction     // Catch:{ Exception -> 0x0113 }
            if (r12 == 0) goto L_0x04e2
            org.telegram.tgnet.TLRPC$MessageAction r12 = r10.action     // Catch:{ Exception -> 0x0113 }
            org.telegram.tgnet.TLRPC$DecryptedMessageAction r12 = r12.encryptedAction     // Catch:{ Exception -> 0x0113 }
            boolean r12 = r12 instanceof org.telegram.tgnet.TLRPC.TL_decryptedMessageActionSetMessageTTL     // Catch:{ Exception -> 0x0113 }
            if (r12 != 0) goto L_0x04e2
            org.telegram.tgnet.TLRPC$MessageAction r12 = r10.action     // Catch:{ Exception -> 0x0113 }
            org.telegram.tgnet.TLRPC$DecryptedMessageAction r12 = r12.encryptedAction     // Catch:{ Exception -> 0x0113 }
            boolean r12 = r12 instanceof org.telegram.tgnet.TLRPC.TL_decryptedMessageActionScreenshotMessages     // Catch:{ Exception -> 0x0113 }
            if (r12 != 0) goto L_0x04e2
            r28 = r5
            r5 = 0
            goto L_0x050f
        L_0x04e2:
            boolean r12 = r10.out     // Catch:{ Exception -> 0x0113 }
            if (r12 == 0) goto L_0x050c
            org.telegram.SQLite.SQLiteDatabase r12 = r1.database     // Catch:{ Exception -> 0x0113 }
            java.lang.StringBuilder r15 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0113 }
            r15.<init>()     // Catch:{ Exception -> 0x0113 }
            java.lang.String r2 = "SELECT mid FROM messages WHERE mid = "
            r15.append(r2)     // Catch:{ Exception -> 0x0113 }
            r15.append(r13)     // Catch:{ Exception -> 0x0113 }
            java.lang.String r2 = r15.toString()     // Catch:{ Exception -> 0x0113 }
            r28 = r5
            r15 = 0
            java.lang.Object[] r5 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x0113 }
            org.telegram.SQLite.SQLiteCursor r2 = r12.queryFinalized(r2, r5)     // Catch:{ Exception -> 0x0113 }
            boolean r5 = r2.next()     // Catch:{ Exception -> 0x0113 }
            r12 = 1
            r5 = r5 ^ r12
            r2.dispose()     // Catch:{ Exception -> 0x0113 }
            goto L_0x050f
        L_0x050c:
            r28 = r5
            r5 = 1
        L_0x050f:
            if (r5 == 0) goto L_0x053f
            r2 = r8
            r5 = r9
            long r8 = r10.dialog_id     // Catch:{ Exception -> 0x0113 }
            r12 = r26
            java.lang.Object r8 = r12.get(r8)     // Catch:{ Exception -> 0x0113 }
            org.telegram.tgnet.TLRPC$Message r8 = (org.telegram.tgnet.TLRPC.Message) r8     // Catch:{ Exception -> 0x0113 }
            if (r8 == 0) goto L_0x0539
            int r9 = r10.date     // Catch:{ Exception -> 0x0113 }
            int r15 = r8.date     // Catch:{ Exception -> 0x0113 }
            if (r9 > r15) goto L_0x0539
            int r9 = r8.id     // Catch:{ Exception -> 0x0113 }
            if (r9 <= 0) goto L_0x052f
            int r9 = r10.id     // Catch:{ Exception -> 0x0113 }
            int r15 = r8.id     // Catch:{ Exception -> 0x0113 }
            if (r9 > r15) goto L_0x0539
        L_0x052f:
            int r9 = r8.id     // Catch:{ Exception -> 0x0113 }
            if (r9 >= 0) goto L_0x0543
            int r9 = r10.id     // Catch:{ Exception -> 0x0113 }
            int r8 = r8.id     // Catch:{ Exception -> 0x0113 }
            if (r9 >= r8) goto L_0x0543
        L_0x0539:
            long r8 = r10.dialog_id     // Catch:{ Exception -> 0x0113 }
            r12.put(r8, r10)     // Catch:{ Exception -> 0x0113 }
            goto L_0x0543
        L_0x053f:
            r2 = r8
            r5 = r9
            r12 = r26
        L_0x0543:
            r8 = r30
            r9 = 1
            r8.bindLong(r9, r13)     // Catch:{ Exception -> 0x0113 }
            r15 = r2
            r9 = r3
            long r2 = r10.dialog_id     // Catch:{ Exception -> 0x0113 }
            r26 = r15
            r15 = 2
            r8.bindLong(r15, r2)     // Catch:{ Exception -> 0x0113 }
            int r2 = org.telegram.messenger.MessageObject.getUnreadFlags(r10)     // Catch:{ Exception -> 0x0113 }
            r3 = 3
            r8.bindInteger(r3, r2)     // Catch:{ Exception -> 0x0113 }
            int r2 = r10.send_state     // Catch:{ Exception -> 0x0113 }
            r3 = 4
            r8.bindInteger(r3, r2)     // Catch:{ Exception -> 0x0113 }
            int r2 = r10.date     // Catch:{ Exception -> 0x0113 }
            r3 = 5
            r8.bindInteger(r3, r2)     // Catch:{ Exception -> 0x0113 }
            r2 = 6
            r8.bindByteBuffer((int) r2, (org.telegram.tgnet.NativeByteBuffer) r11)     // Catch:{ Exception -> 0x0113 }
            r2 = 7
            boolean r3 = org.telegram.messenger.MessageObject.isOut(r10)     // Catch:{ Exception -> 0x0113 }
            if (r3 != 0) goto L_0x0579
            boolean r3 = r10.from_scheduled     // Catch:{ Exception -> 0x0113 }
            if (r3 == 0) goto L_0x0577
            goto L_0x0579
        L_0x0577:
            r3 = 0
            goto L_0x057a
        L_0x0579:
            r3 = 1
        L_0x057a:
            r8.bindInteger(r2, r3)     // Catch:{ Exception -> 0x0113 }
            int r2 = r10.ttl     // Catch:{ Exception -> 0x0113 }
            r3 = 8
            r8.bindInteger(r3, r2)     // Catch:{ Exception -> 0x0113 }
            int r2 = r10.flags     // Catch:{ Exception -> 0x0113 }
            r2 = r2 & 1024(0x400, float:1.435E-42)
            if (r2 == 0) goto L_0x0592
            int r2 = r10.views     // Catch:{ Exception -> 0x0113 }
            r3 = 9
            r8.bindInteger(r3, r2)     // Catch:{ Exception -> 0x0113 }
            goto L_0x059b
        L_0x0592:
            r3 = 9
            int r2 = r1.getMessageMediaType(r10)     // Catch:{ Exception -> 0x0113 }
            r8.bindInteger(r3, r2)     // Catch:{ Exception -> 0x0113 }
        L_0x059b:
            r2 = 10
            r3 = 0
            r8.bindInteger(r2, r3)     // Catch:{ Exception -> 0x0113 }
            r2 = 11
            boolean r3 = r10.mentioned     // Catch:{ Exception -> 0x0113 }
            if (r3 == 0) goto L_0x05a9
            r3 = 1
            goto L_0x05aa
        L_0x05a9:
            r3 = 0
        L_0x05aa:
            r8.bindInteger(r2, r3)     // Catch:{ Exception -> 0x0113 }
            r8.step()     // Catch:{ Exception -> 0x0113 }
            long r2 = r10.random_id     // Catch:{ Exception -> 0x0113 }
            r17 = 0
            int r15 = (r2 > r17 ? 1 : (r2 == r17 ? 0 : -1))
            if (r15 == 0) goto L_0x05cd
            r25.requery()     // Catch:{ Exception -> 0x0113 }
            long r2 = r10.random_id     // Catch:{ Exception -> 0x0113 }
            r15 = r25
            r25 = r5
            r5 = 1
            r15.bindLong(r5, r2)     // Catch:{ Exception -> 0x0113 }
            r2 = 2
            r15.bindLong(r2, r13)     // Catch:{ Exception -> 0x0113 }
            r15.step()     // Catch:{ Exception -> 0x0113 }
            goto L_0x05d1
        L_0x05cd:
            r15 = r25
            r25 = r5
        L_0x05d1:
            boolean r2 = org.telegram.messenger.MediaDataController.canAddMessageToMedia(r10)     // Catch:{ Exception -> 0x0113 }
            if (r2 == 0) goto L_0x0603
            if (r4 != 0) goto L_0x05e1
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database     // Catch:{ Exception -> 0x0113 }
            java.lang.String r3 = "REPLACE INTO media_v2 VALUES(?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r4 = r2.executeFast(r3)     // Catch:{ Exception -> 0x0113 }
        L_0x05e1:
            r4.requery()     // Catch:{ Exception -> 0x0113 }
            r2 = 1
            r4.bindLong(r2, r13)     // Catch:{ Exception -> 0x0113 }
            long r2 = r10.dialog_id     // Catch:{ Exception -> 0x0113 }
            r5 = 2
            r4.bindLong(r5, r2)     // Catch:{ Exception -> 0x0113 }
            int r2 = r10.date     // Catch:{ Exception -> 0x0113 }
            r3 = 3
            r4.bindInteger(r3, r2)     // Catch:{ Exception -> 0x0113 }
            int r2 = org.telegram.messenger.MediaDataController.getMediaType(r10)     // Catch:{ Exception -> 0x0113 }
            r3 = 4
            r4.bindInteger(r3, r2)     // Catch:{ Exception -> 0x0113 }
            r2 = 5
            r4.bindByteBuffer((int) r2, (org.telegram.tgnet.NativeByteBuffer) r11)     // Catch:{ Exception -> 0x0113 }
            r4.step()     // Catch:{ Exception -> 0x0113 }
        L_0x0603:
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r10.media     // Catch:{ Exception -> 0x0113 }
            boolean r2 = r2 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaPoll     // Catch:{ Exception -> 0x0113 }
            if (r2 == 0) goto L_0x062e
            if (r6 != 0) goto L_0x0613
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database     // Catch:{ Exception -> 0x0113 }
            java.lang.String r3 = "REPLACE INTO polls VALUES(?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r6 = r2.executeFast(r3)     // Catch:{ Exception -> 0x0113 }
        L_0x0613:
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r10.media     // Catch:{ Exception -> 0x0113 }
            org.telegram.tgnet.TLRPC$TL_messageMediaPoll r2 = (org.telegram.tgnet.TLRPC.TL_messageMediaPoll) r2     // Catch:{ Exception -> 0x0113 }
            r6.requery()     // Catch:{ Exception -> 0x0113 }
            r3 = 1
            r6.bindLong(r3, r13)     // Catch:{ Exception -> 0x0113 }
            org.telegram.tgnet.TLRPC$TL_poll r2 = r2.poll     // Catch:{ Exception -> 0x0113 }
            long r2 = r2.id     // Catch:{ Exception -> 0x0113 }
            r5 = 2
            r6.bindLong(r5, r2)     // Catch:{ Exception -> 0x0113 }
            r6.step()     // Catch:{ Exception -> 0x0113 }
        L_0x0629:
            r22 = r4
            r5 = r24
            goto L_0x064c
        L_0x062e:
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r10.media     // Catch:{ Exception -> 0x0113 }
            boolean r2 = r2 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaWebPage     // Catch:{ Exception -> 0x0113 }
            if (r2 == 0) goto L_0x0629
            r24.requery()     // Catch:{ Exception -> 0x0113 }
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r10.media     // Catch:{ Exception -> 0x0113 }
            org.telegram.tgnet.TLRPC$WebPage r2 = r2.webpage     // Catch:{ Exception -> 0x0113 }
            long r2 = r2.id     // Catch:{ Exception -> 0x0113 }
            r22 = r4
            r5 = r24
            r4 = 1
            r5.bindLong(r4, r2)     // Catch:{ Exception -> 0x0113 }
            r2 = 2
            r5.bindLong(r2, r13)     // Catch:{ Exception -> 0x0113 }
            r5.step()     // Catch:{ Exception -> 0x0113 }
        L_0x064c:
            r11.reuse()     // Catch:{ Exception -> 0x0113 }
            if (r36 == 0) goto L_0x0796
            org.telegram.tgnet.TLRPC$Peer r2 = r10.to_id     // Catch:{ Exception -> 0x0113 }
            int r2 = r2.channel_id     // Catch:{ Exception -> 0x0113 }
            if (r2 == 0) goto L_0x065b
            boolean r2 = r10.post     // Catch:{ Exception -> 0x0113 }
            if (r2 == 0) goto L_0x0796
        L_0x065b:
            int r2 = r10.date     // Catch:{ Exception -> 0x0113 }
            org.telegram.tgnet.ConnectionsManager r3 = r32.getConnectionsManager()     // Catch:{ Exception -> 0x0113 }
            int r3 = r3.getCurrentTime()     // Catch:{ Exception -> 0x0113 }
            int r3 = r3 + -3600
            if (r2 < r3) goto L_0x0796
            org.telegram.messenger.DownloadController r2 = r32.getDownloadController()     // Catch:{ Exception -> 0x0113 }
            int r2 = r2.canDownloadMedia((org.telegram.tgnet.TLRPC.Message) r10)     // Catch:{ Exception -> 0x0113 }
            r3 = 1
            if (r2 != r3) goto L_0x0796
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r10.media     // Catch:{ Exception -> 0x0113 }
            boolean r2 = r2 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaPhoto     // Catch:{ Exception -> 0x0113 }
            if (r2 != 0) goto L_0x0686
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r10.media     // Catch:{ Exception -> 0x0113 }
            boolean r2 = r2 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaDocument     // Catch:{ Exception -> 0x0113 }
            if (r2 != 0) goto L_0x0686
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r10.media     // Catch:{ Exception -> 0x0113 }
            boolean r2 = r2 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaWebPage     // Catch:{ Exception -> 0x0113 }
            if (r2 == 0) goto L_0x0796
        L_0x0686:
            org.telegram.tgnet.TLRPC$Document r2 = org.telegram.messenger.MessageObject.getDocument(r10)     // Catch:{ Exception -> 0x0113 }
            org.telegram.tgnet.TLRPC$Photo r3 = org.telegram.messenger.MessageObject.getPhoto(r10)     // Catch:{ Exception -> 0x0113 }
            boolean r4 = org.telegram.messenger.MessageObject.isVoiceMessage(r10)     // Catch:{ Exception -> 0x0113 }
            if (r4 == 0) goto L_0x06a6
            long r3 = r2.id     // Catch:{ Exception -> 0x0113 }
            org.telegram.tgnet.TLRPC$TL_messageMediaDocument r11 = new org.telegram.tgnet.TLRPC$TL_messageMediaDocument     // Catch:{ Exception -> 0x0113 }
            r11.<init>()     // Catch:{ Exception -> 0x0113 }
            r11.document = r2     // Catch:{ Exception -> 0x0113 }
            int r2 = r11.flags     // Catch:{ Exception -> 0x0113 }
            r13 = 1
            r2 = r2 | r13
            r11.flags = r2     // Catch:{ Exception -> 0x0113 }
            r2 = 2
            goto L_0x072e
        L_0x06a6:
            boolean r4 = org.telegram.messenger.MessageObject.isStickerMessage(r10)     // Catch:{ Exception -> 0x0113 }
            if (r4 != 0) goto L_0x071e
            boolean r4 = org.telegram.messenger.MessageObject.isAnimatedStickerMessage(r10)     // Catch:{ Exception -> 0x0113 }
            if (r4 == 0) goto L_0x06b4
            goto L_0x071e
        L_0x06b4:
            boolean r4 = org.telegram.messenger.MessageObject.isVideoMessage(r10)     // Catch:{ Exception -> 0x0113 }
            if (r4 != 0) goto L_0x070d
            boolean r4 = org.telegram.messenger.MessageObject.isRoundVideoMessage(r10)     // Catch:{ Exception -> 0x0113 }
            if (r4 != 0) goto L_0x070d
            boolean r4 = org.telegram.messenger.MessageObject.isGifMessage(r10)     // Catch:{ Exception -> 0x0113 }
            if (r4 == 0) goto L_0x06c7
            goto L_0x070d
        L_0x06c7:
            if (r2 == 0) goto L_0x06db
            long r3 = r2.id     // Catch:{ Exception -> 0x0113 }
            org.telegram.tgnet.TLRPC$TL_messageMediaDocument r11 = new org.telegram.tgnet.TLRPC$TL_messageMediaDocument     // Catch:{ Exception -> 0x0113 }
            r11.<init>()     // Catch:{ Exception -> 0x0113 }
            r11.document = r2     // Catch:{ Exception -> 0x0113 }
            int r2 = r11.flags     // Catch:{ Exception -> 0x0113 }
            r13 = 1
            r2 = r2 | r13
            r11.flags = r2     // Catch:{ Exception -> 0x0113 }
            r2 = 8
            goto L_0x072e
        L_0x06db:
            if (r3 == 0) goto L_0x0708
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r2 = r3.sizes     // Catch:{ Exception -> 0x0113 }
            int r4 = org.telegram.messenger.AndroidUtilities.getPhotoSize()     // Catch:{ Exception -> 0x0113 }
            org.telegram.tgnet.TLRPC$PhotoSize r2 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r2, r4)     // Catch:{ Exception -> 0x0113 }
            if (r2 == 0) goto L_0x0708
            long r13 = r3.id     // Catch:{ Exception -> 0x0113 }
            org.telegram.tgnet.TLRPC$TL_messageMediaPhoto r2 = new org.telegram.tgnet.TLRPC$TL_messageMediaPhoto     // Catch:{ Exception -> 0x0113 }
            r2.<init>()     // Catch:{ Exception -> 0x0113 }
            r2.photo = r3     // Catch:{ Exception -> 0x0113 }
            int r3 = r2.flags     // Catch:{ Exception -> 0x0113 }
            r4 = 1
            r3 = r3 | r4
            r2.flags = r3     // Catch:{ Exception -> 0x0113 }
            org.telegram.tgnet.TLRPC$MessageMedia r3 = r10.media     // Catch:{ Exception -> 0x0113 }
            boolean r3 = r3 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaWebPage     // Catch:{ Exception -> 0x0113 }
            if (r3 == 0) goto L_0x0705
            int r3 = r2.flags     // Catch:{ Exception -> 0x0113 }
            r4 = -2147483648(0xfffffffvar_, float:-0.0)
            r3 = r3 | r4
            r2.flags = r3     // Catch:{ Exception -> 0x0113 }
        L_0x0705:
            r11 = r2
            r3 = r13
            goto L_0x072d
        L_0x0708:
            r2 = 0
            r3 = 0
            r11 = 0
            goto L_0x072e
        L_0x070d:
            long r3 = r2.id     // Catch:{ Exception -> 0x0113 }
            org.telegram.tgnet.TLRPC$TL_messageMediaDocument r11 = new org.telegram.tgnet.TLRPC$TL_messageMediaDocument     // Catch:{ Exception -> 0x0113 }
            r11.<init>()     // Catch:{ Exception -> 0x0113 }
            r11.document = r2     // Catch:{ Exception -> 0x0113 }
            int r2 = r11.flags     // Catch:{ Exception -> 0x0113 }
            r13 = 1
            r2 = r2 | r13
            r11.flags = r2     // Catch:{ Exception -> 0x0113 }
            r2 = 4
            goto L_0x072e
        L_0x071e:
            long r3 = r2.id     // Catch:{ Exception -> 0x0113 }
            org.telegram.tgnet.TLRPC$TL_messageMediaDocument r11 = new org.telegram.tgnet.TLRPC$TL_messageMediaDocument     // Catch:{ Exception -> 0x0113 }
            r11.<init>()     // Catch:{ Exception -> 0x0113 }
            r11.document = r2     // Catch:{ Exception -> 0x0113 }
            int r2 = r11.flags     // Catch:{ Exception -> 0x0113 }
            r13 = 1
            r2 = r2 | r13
            r11.flags = r2     // Catch:{ Exception -> 0x0113 }
        L_0x072d:
            r2 = 1
        L_0x072e:
            if (r11 == 0) goto L_0x0796
            org.telegram.tgnet.TLRPC$MessageMedia r13 = r10.media     // Catch:{ Exception -> 0x0113 }
            int r13 = r13.ttl_seconds     // Catch:{ Exception -> 0x0113 }
            if (r13 == 0) goto L_0x0742
            org.telegram.tgnet.TLRPC$MessageMedia r13 = r10.media     // Catch:{ Exception -> 0x0113 }
            int r13 = r13.ttl_seconds     // Catch:{ Exception -> 0x0113 }
            r11.ttl_seconds = r13     // Catch:{ Exception -> 0x0113 }
            int r13 = r11.flags     // Catch:{ Exception -> 0x0113 }
            r14 = 4
            r13 = r13 | r14
            r11.flags = r13     // Catch:{ Exception -> 0x0113 }
        L_0x0742:
            r7 = r7 | r2
            r23.requery()     // Catch:{ Exception -> 0x0113 }
            org.telegram.tgnet.NativeByteBuffer r13 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0113 }
            int r14 = r11.getObjectSize()     // Catch:{ Exception -> 0x0113 }
            r13.<init>((int) r14)     // Catch:{ Exception -> 0x0113 }
            r11.serializeToStream(r13)     // Catch:{ Exception -> 0x0113 }
            r11 = r23
            r14 = 1
            r11.bindLong(r14, r3)     // Catch:{ Exception -> 0x0113 }
            r3 = 2
            r11.bindInteger(r3, r2)     // Catch:{ Exception -> 0x0113 }
            int r2 = r10.date     // Catch:{ Exception -> 0x0113 }
            r3 = 3
            r11.bindInteger(r3, r2)     // Catch:{ Exception -> 0x0113 }
            r2 = 4
            r11.bindByteBuffer((int) r2, (org.telegram.tgnet.NativeByteBuffer) r13)     // Catch:{ Exception -> 0x0113 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0113 }
            r2.<init>()     // Catch:{ Exception -> 0x0113 }
            java.lang.String r3 = "sent_"
            r2.append(r3)     // Catch:{ Exception -> 0x0113 }
            org.telegram.tgnet.TLRPC$Peer r3 = r10.to_id     // Catch:{ Exception -> 0x0113 }
            if (r3 == 0) goto L_0x0779
            org.telegram.tgnet.TLRPC$Peer r3 = r10.to_id     // Catch:{ Exception -> 0x0113 }
            int r3 = r3.channel_id     // Catch:{ Exception -> 0x0113 }
            goto L_0x077a
        L_0x0779:
            r3 = 0
        L_0x077a:
            r2.append(r3)     // Catch:{ Exception -> 0x0113 }
            java.lang.String r3 = "_"
            r2.append(r3)     // Catch:{ Exception -> 0x0113 }
            int r3 = r10.id     // Catch:{ Exception -> 0x0113 }
            r2.append(r3)     // Catch:{ Exception -> 0x0113 }
            java.lang.String r2 = r2.toString()     // Catch:{ Exception -> 0x0113 }
            r3 = 5
            r11.bindString(r3, r2)     // Catch:{ Exception -> 0x0113 }
            r11.step()     // Catch:{ Exception -> 0x0113 }
            r13.reuse()     // Catch:{ Exception -> 0x0113 }
            goto L_0x0798
        L_0x0796:
            r11 = r23
        L_0x0798:
            int r3 = r9 + 1
            r2 = r33
            r24 = r5
            r30 = r8
            r23 = r11
            r4 = r22
            r9 = r25
            r8 = r26
            r5 = r28
            r26 = r12
            r25 = r15
            goto L_0x0491
        L_0x07b0:
            r28 = r5
            r11 = r23
            r5 = r24
            r15 = r25
            r12 = r26
            r26 = r8
            r25 = r9
            r8 = r30
            r8.dispose()     // Catch:{ Exception -> 0x0113 }
            if (r4 == 0) goto L_0x07c8
            r4.dispose()     // Catch:{ Exception -> 0x0113 }
        L_0x07c8:
            if (r6 == 0) goto L_0x07cd
            r6.dispose()     // Catch:{ Exception -> 0x0113 }
        L_0x07cd:
            r15.dispose()     // Catch:{ Exception -> 0x0113 }
            r11.dispose()     // Catch:{ Exception -> 0x0113 }
            r5.dispose()     // Catch:{ Exception -> 0x0113 }
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database     // Catch:{ Exception -> 0x0113 }
            java.lang.String r3 = "REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r3)     // Catch:{ Exception -> 0x0113 }
            org.telegram.SQLite.SQLiteDatabase r3 = r1.database     // Catch:{ Exception -> 0x0113 }
            java.lang.String r4 = "UPDATE dialogs SET date = ?, unread_count = ?, last_mid = ?, unread_count_i = ? WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.executeFast(r4)     // Catch:{ Exception -> 0x0113 }
            r4 = 0
        L_0x07e7:
            int r5 = r12.size()     // Catch:{ Exception -> 0x0113 }
            if (r4 >= r5) goto L_0x0975
            long r5 = r12.keyAt(r4)     // Catch:{ Exception -> 0x0a54 }
            r8 = 0
            int r10 = (r5 > r8 ? 1 : (r5 == r8 ? 0 : -1))
            if (r10 != 0) goto L_0x080b
            r10 = r2
            r14 = r4
            r37 = r7
            r23 = r12
            r9 = r25
            r7 = r26
        L_0x0801:
            r1 = 5
            r2 = 8
            r4 = 6
            r5 = 0
            r11 = 9
            goto L_0x0965
        L_0x080b:
            java.lang.Object r8 = r12.valueAt(r4)     // Catch:{ Exception -> 0x0a54 }
            org.telegram.tgnet.TLRPC$Message r8 = (org.telegram.tgnet.TLRPC.Message) r8     // Catch:{ Exception -> 0x0a54 }
            if (r8 == 0) goto L_0x0818
            org.telegram.tgnet.TLRPC$Peer r9 = r8.to_id     // Catch:{ Exception -> 0x0113 }
            int r13 = r9.channel_id     // Catch:{ Exception -> 0x0113 }
            goto L_0x0819
        L_0x0818:
            r13 = 0
        L_0x0819:
            org.telegram.SQLite.SQLiteDatabase r9 = r1.database     // Catch:{ Exception -> 0x0a54 }
            java.lang.StringBuilder r10 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0a54 }
            r10.<init>()     // Catch:{ Exception -> 0x0a54 }
            java.lang.String r11 = "SELECT date, unread_count, last_mid, unread_count_i FROM dialogs WHERE did = "
            r10.append(r11)     // Catch:{ Exception -> 0x0a54 }
            r10.append(r5)     // Catch:{ Exception -> 0x0a54 }
            java.lang.String r10 = r10.toString()     // Catch:{ Exception -> 0x0a54 }
            r11 = 0
            java.lang.Object[] r14 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x0a54 }
            org.telegram.SQLite.SQLiteCursor r9 = r9.queryFinalized(r10, r14)     // Catch:{ Exception -> 0x0a54 }
            boolean r10 = r9.next()     // Catch:{ Exception -> 0x0a54 }
            if (r10 == 0) goto L_0x085e
            int r14 = r9.intValue(r11)     // Catch:{ Exception -> 0x0113 }
            r23 = r12
            r15 = 1
            int r12 = r9.intValue(r15)     // Catch:{ Exception -> 0x0113 }
            int r12 = java.lang.Math.max(r11, r12)     // Catch:{ Exception -> 0x0113 }
            r15 = 2
            int r24 = r9.intValue(r15)     // Catch:{ Exception -> 0x0113 }
            r33 = r12
            r15 = 3
            int r12 = r9.intValue(r15)     // Catch:{ Exception -> 0x0113 }
            int r12 = java.lang.Math.max(r11, r12)     // Catch:{ Exception -> 0x0113 }
            r11 = r33
            r15 = r14
            r14 = r24
            goto L_0x086d
        L_0x085e:
            r23 = r12
            if (r13 == 0) goto L_0x0869
            org.telegram.messenger.MessagesController r11 = r32.getMessagesController()     // Catch:{ Exception -> 0x0113 }
            r11.checkChannelInviter(r13)     // Catch:{ Exception -> 0x0113 }
        L_0x0869:
            r11 = 0
            r12 = 0
            r14 = 0
            r15 = 0
        L_0x086d:
            r9.dispose()     // Catch:{ Exception -> 0x0a54 }
            r9 = r25
            java.lang.Object r24 = r9.get(r5)     // Catch:{ Exception -> 0x0a54 }
            java.lang.Integer r24 = (java.lang.Integer) r24     // Catch:{ Exception -> 0x0a54 }
            r37 = r7
            r7 = r26
            java.lang.Object r25 = r7.get(r5)     // Catch:{ Exception -> 0x0a54 }
            java.lang.Integer r25 = (java.lang.Integer) r25     // Catch:{ Exception -> 0x0a54 }
            if (r25 != 0) goto L_0x088b
            r16 = 0
            java.lang.Integer r25 = java.lang.Integer.valueOf(r16)     // Catch:{ Exception -> 0x0113 }
            goto L_0x0898
        L_0x088b:
            int r26 = r25.intValue()     // Catch:{ Exception -> 0x0a54 }
            int r26 = r26 + r11
            java.lang.Integer r1 = java.lang.Integer.valueOf(r26)     // Catch:{ Exception -> 0x0a54 }
            r7.put(r5, r1)     // Catch:{ Exception -> 0x0a54 }
        L_0x0898:
            if (r24 != 0) goto L_0x08a0
            r1 = 0
            java.lang.Integer r24 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x0a54 }
            goto L_0x08ac
        L_0x08a0:
            int r1 = r24.intValue()     // Catch:{ Exception -> 0x0a54 }
            int r1 = r1 + r12
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x0a54 }
            r9.put(r5, r1)     // Catch:{ Exception -> 0x0a54 }
        L_0x08ac:
            if (r8 == 0) goto L_0x08b4
            int r1 = r8.id     // Catch:{ Exception -> 0x0a54 }
            r33 = r2
            long r1 = (long) r1     // Catch:{ Exception -> 0x0a54 }
            goto L_0x08b7
        L_0x08b4:
            r33 = r2
            long r1 = (long) r14     // Catch:{ Exception -> 0x0a54 }
        L_0x08b7:
            if (r8 == 0) goto L_0x08c0
            int r14 = r8.local_id     // Catch:{ Exception -> 0x0a54 }
            if (r14 == 0) goto L_0x08c0
            int r1 = r8.local_id     // Catch:{ Exception -> 0x0a54 }
            long r1 = (long) r1     // Catch:{ Exception -> 0x0a54 }
        L_0x08c0:
            r14 = r4
            r29 = r5
            if (r13 == 0) goto L_0x08cb
            long r4 = (long) r13     // Catch:{ Exception -> 0x0a54 }
            r6 = 32
            long r4 = r4 << r6
            long r1 = r1 | r4
            goto L_0x08cd
        L_0x08cb:
            r6 = 32
        L_0x08cd:
            if (r10 == 0) goto L_0x0901
            r3.requery()     // Catch:{ Exception -> 0x0a54 }
            if (r8 == 0) goto L_0x08da
            if (r35 == 0) goto L_0x08d8
            if (r15 != 0) goto L_0x08da
        L_0x08d8:
            int r15 = r8.date     // Catch:{ Exception -> 0x0a54 }
        L_0x08da:
            r4 = 1
            r3.bindInteger(r4, r15)     // Catch:{ Exception -> 0x0a54 }
            int r4 = r25.intValue()     // Catch:{ Exception -> 0x0a54 }
            int r11 = r11 + r4
            r4 = 2
            r3.bindInteger(r4, r11)     // Catch:{ Exception -> 0x0a54 }
            r4 = 3
            r3.bindLong(r4, r1)     // Catch:{ Exception -> 0x0a54 }
            int r1 = r24.intValue()     // Catch:{ Exception -> 0x0a54 }
            int r12 = r12 + r1
            r1 = 4
            r3.bindInteger(r1, r12)     // Catch:{ Exception -> 0x0a54 }
            r4 = r29
            r1 = 5
            r3.bindLong(r1, r4)     // Catch:{ Exception -> 0x0a54 }
            r3.step()     // Catch:{ Exception -> 0x0a54 }
            r10 = r33
            goto L_0x0801
        L_0x0901:
            r4 = r29
            r33.requery()     // Catch:{ Exception -> 0x0a54 }
            r10 = r33
            r6 = 1
            r10.bindLong(r6, r4)     // Catch:{ Exception -> 0x0a54 }
            if (r8 == 0) goto L_0x0914
            if (r35 == 0) goto L_0x0912
            if (r15 != 0) goto L_0x0914
        L_0x0912:
            int r15 = r8.date     // Catch:{ Exception -> 0x0a54 }
        L_0x0914:
            r4 = 2
            r10.bindInteger(r4, r15)     // Catch:{ Exception -> 0x0a54 }
            int r4 = r25.intValue()     // Catch:{ Exception -> 0x0a54 }
            int r11 = r11 + r4
            r4 = 3
            r10.bindInteger(r4, r11)     // Catch:{ Exception -> 0x0a54 }
            r4 = 4
            r10.bindLong(r4, r1)     // Catch:{ Exception -> 0x0a54 }
            r1 = 5
            r2 = 0
            r10.bindInteger(r1, r2)     // Catch:{ Exception -> 0x0a54 }
            r4 = 6
            r10.bindInteger(r4, r2)     // Catch:{ Exception -> 0x0a54 }
            r2 = 7
            r5 = 0
            r10.bindLong(r2, r5)     // Catch:{ Exception -> 0x0a54 }
            int r2 = r24.intValue()     // Catch:{ Exception -> 0x0a54 }
            int r12 = r12 + r2
            r2 = 8
            r10.bindInteger(r2, r12)     // Catch:{ Exception -> 0x0a54 }
            if (r13 == 0) goto L_0x0942
            r8 = 1
            goto L_0x0943
        L_0x0942:
            r8 = 0
        L_0x0943:
            r11 = 9
            r10.bindInteger(r11, r8)     // Catch:{ Exception -> 0x0a54 }
            r8 = 10
            r12 = 0
            r10.bindInteger(r8, r12)     // Catch:{ Exception -> 0x0a54 }
            r8 = 11
            r10.bindInteger(r8, r12)     // Catch:{ Exception -> 0x0a54 }
            r8 = 12
            r10.bindInteger(r8, r12)     // Catch:{ Exception -> 0x0a54 }
            r8 = 13
            r10.bindInteger(r8, r12)     // Catch:{ Exception -> 0x0a54 }
            r8 = 14
            r10.bindNull(r8)     // Catch:{ Exception -> 0x0a54 }
            r10.step()     // Catch:{ Exception -> 0x0a54 }
        L_0x0965:
            int r8 = r14 + 1
            r1 = r32
            r26 = r7
            r4 = r8
            r25 = r9
            r2 = r10
            r12 = r23
            r7 = r37
            goto L_0x07e7
        L_0x0975:
            r10 = r2
            r37 = r7
            r9 = r25
            r7 = r26
            r3.dispose()     // Catch:{ Exception -> 0x0a54 }
            r10.dispose()     // Catch:{ Exception -> 0x0a54 }
            if (r28 == 0) goto L_0x0a33
            r1 = r32
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database     // Catch:{ Exception -> 0x0113 }
            java.lang.String r3 = "REPLACE INTO media_counts_v2 VALUES(?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r3)     // Catch:{ Exception -> 0x0113 }
            r3 = 0
        L_0x098f:
            int r4 = r28.size()     // Catch:{ Exception -> 0x0113 }
            if (r3 >= r4) goto L_0x0a2d
            r5 = r28
            int r4 = r5.keyAt(r3)     // Catch:{ Exception -> 0x0113 }
            java.lang.Object r6 = r5.valueAt(r3)     // Catch:{ Exception -> 0x0113 }
            android.util.LongSparseArray r6 = (android.util.LongSparseArray) r6     // Catch:{ Exception -> 0x0113 }
            r8 = 0
        L_0x09a2:
            int r10 = r6.size()     // Catch:{ Exception -> 0x0113 }
            if (r8 >= r10) goto L_0x0a1d
            long r10 = r6.keyAt(r8)     // Catch:{ Exception -> 0x0113 }
            org.telegram.SQLite.SQLiteDatabase r12 = r1.database     // Catch:{ Exception -> 0x0113 }
            java.util.Locale r13 = java.util.Locale.US     // Catch:{ Exception -> 0x0113 }
            java.lang.String r14 = "SELECT count, old FROM media_counts_v2 WHERE uid = %d AND type = %d LIMIT 1"
            r28 = r5
            r15 = 2
            java.lang.Object[] r5 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x0113 }
            java.lang.Long r15 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x0113 }
            r27 = r7
            r7 = 0
            r5[r7] = r15     // Catch:{ Exception -> 0x0113 }
            java.lang.Integer r15 = java.lang.Integer.valueOf(r4)     // Catch:{ Exception -> 0x0113 }
            r16 = 1
            r5[r16] = r15     // Catch:{ Exception -> 0x0113 }
            java.lang.String r5 = java.lang.String.format(r13, r14, r5)     // Catch:{ Exception -> 0x0113 }
            java.lang.Object[] r13 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x0113 }
            org.telegram.SQLite.SQLiteCursor r5 = r12.queryFinalized(r5, r13)     // Catch:{ Exception -> 0x0113 }
            boolean r12 = r5.next()     // Catch:{ Exception -> 0x0113 }
            if (r12 == 0) goto L_0x09e2
            int r12 = r5.intValue(r7)     // Catch:{ Exception -> 0x0113 }
            r7 = 1
            int r13 = r5.intValue(r7)     // Catch:{ Exception -> 0x0113 }
            goto L_0x09e4
        L_0x09e2:
            r12 = -1
            r13 = 0
        L_0x09e4:
            r5.dispose()     // Catch:{ Exception -> 0x0113 }
            r5 = -1
            if (r12 == r5) goto L_0x0a11
            r2.requery()     // Catch:{ Exception -> 0x0113 }
            java.lang.Object r7 = r6.valueAt(r8)     // Catch:{ Exception -> 0x0113 }
            java.lang.Integer r7 = (java.lang.Integer) r7     // Catch:{ Exception -> 0x0113 }
            int r7 = r7.intValue()     // Catch:{ Exception -> 0x0113 }
            int r12 = r12 + r7
            r7 = 1
            r2.bindLong(r7, r10)     // Catch:{ Exception -> 0x0113 }
            r10 = 2
            r2.bindInteger(r10, r4)     // Catch:{ Exception -> 0x0113 }
            r11 = 0
            int r12 = java.lang.Math.max(r11, r12)     // Catch:{ Exception -> 0x0113 }
            r14 = 3
            r2.bindInteger(r14, r12)     // Catch:{ Exception -> 0x0113 }
            r12 = 4
            r2.bindInteger(r12, r13)     // Catch:{ Exception -> 0x0113 }
            r2.step()     // Catch:{ Exception -> 0x0113 }
            goto L_0x0a16
        L_0x0a11:
            r7 = 1
            r10 = 2
            r11 = 0
            r12 = 4
            r14 = 3
        L_0x0a16:
            int r8 = r8 + 1
            r7 = r27
            r5 = r28
            goto L_0x09a2
        L_0x0a1d:
            r28 = r5
            r27 = r7
            r5 = -1
            r7 = 1
            r10 = 2
            r11 = 0
            r12 = 4
            r14 = 3
            int r3 = r3 + 1
            r7 = r27
            goto L_0x098f
        L_0x0a2d:
            r27 = r7
            r2.dispose()     // Catch:{ Exception -> 0x0113 }
            goto L_0x0a37
        L_0x0a33:
            r1 = r32
            r27 = r7
        L_0x0a37:
            if (r34 == 0) goto L_0x0a3e
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database     // Catch:{ Exception -> 0x0113 }
            r2.commitTransaction()     // Catch:{ Exception -> 0x0113 }
        L_0x0a3e:
            org.telegram.messenger.MessagesController r2 = r32.getMessagesController()     // Catch:{ Exception -> 0x0113 }
            r3 = r27
            r2.processDialogsUpdateRead(r3, r9)     // Catch:{ Exception -> 0x0113 }
            if (r37 == 0) goto L_0x0a5c
            org.telegram.messenger.-$$Lambda$MessagesStorage$hdskr9sBcEtVOZp5sVxQkcTGMHk r2 = new org.telegram.messenger.-$$Lambda$MessagesStorage$hdskr9sBcEtVOZp5sVxQkcTGMHk     // Catch:{ Exception -> 0x0113 }
            r7 = r37
            r2.<init>(r7)     // Catch:{ Exception -> 0x0113 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r2)     // Catch:{ Exception -> 0x0113 }
            goto L_0x0a5c
        L_0x0a54:
            r0 = move-exception
            r1 = r32
            goto L_0x0114
        L_0x0a59:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r2)
        L_0x0a5c:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$putMessages$120$MessagesStorage(java.util.ArrayList, boolean, boolean, int, boolean, boolean):void");
    }

    public /* synthetic */ void lambda$putMessagesInternal$119$MessagesStorage(int i) {
        getDownloadController().newDownloadObjectsAvailable(i);
    }

    public void putMessages(ArrayList<TLRPC.Message> arrayList, boolean z, boolean z2, boolean z3, int i, boolean z4) {
        putMessages(arrayList, z, z2, z3, i, false, z4);
    }

    public void putMessages(ArrayList<TLRPC.Message> arrayList, boolean z, boolean z2, boolean z3, int i, boolean z4, boolean z5) {
        if (arrayList.size() != 0) {
            if (z2) {
                this.storageQueue.postRunnable(new Runnable(arrayList, z, z3, i, z4, z5) {
                    private final /* synthetic */ ArrayList f$1;
                    private final /* synthetic */ boolean f$2;
                    private final /* synthetic */ boolean f$3;
                    private final /* synthetic */ int f$4;
                    private final /* synthetic */ boolean f$5;
                    private final /* synthetic */ boolean f$6;

                    {
                        this.f$1 = r2;
                        this.f$2 = r3;
                        this.f$3 = r4;
                        this.f$4 = r5;
                        this.f$5 = r6;
                        this.f$6 = r7;
                    }

                    public final void run() {
                        MessagesStorage.this.lambda$putMessages$120$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, this.f$6);
                    }
                });
                return;
            }
            lambda$putMessages$120$MessagesStorage(arrayList, z, z3, i, z4, z5);
        }
    }

    public void markMessageAsSendError(TLRPC.Message message, boolean z) {
        this.storageQueue.postRunnable(new Runnable(message, z) {
            private final /* synthetic */ TLRPC.Message f$1;
            private final /* synthetic */ boolean f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                MessagesStorage.this.lambda$markMessageAsSendError$121$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    public /* synthetic */ void lambda$markMessageAsSendError$121$MessagesStorage(TLRPC.Message message, boolean z) {
        try {
            long j = (long) message.id;
            if (message.to_id.channel_id != 0) {
                j |= ((long) message.to_id.channel_id) << 32;
            }
            if (z) {
                SQLiteDatabase sQLiteDatabase = this.database;
                sQLiteDatabase.executeFast("UPDATE scheduled_messages SET send_state = 2 WHERE mid = " + j).stepThis().dispose();
                return;
            }
            SQLiteDatabase sQLiteDatabase2 = this.database;
            sQLiteDatabase2.executeFast("UPDATE messages SET send_state = 2 WHERE mid = " + j).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void setMessageSeq(int i, int i2, int i3) {
        this.storageQueue.postRunnable(new Runnable(i, i2, i3) {
            private final /* synthetic */ int f$1;
            private final /* synthetic */ int f$2;
            private final /* synthetic */ int f$3;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$setMessageSeq$122$MessagesStorage(this.f$1, this.f$2, this.f$3);
            }
        });
    }

    public /* synthetic */ void lambda$setMessageSeq$122$MessagesStorage(int i, int i2, int i3) {
        try {
            SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO messages_seq VALUES(?, ?, ?)");
            executeFast.requery();
            executeFast.bindInteger(1, i);
            executeFast.bindInteger(2, i2);
            executeFast.bindInteger(3, i3);
            executeFast.step();
            executeFast.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:100:0x0147, code lost:
        if (r3 == null) goto L_0x014c;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:101:0x0149, code lost:
        r3.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:103:0x0154, code lost:
        return new long[]{r7, r5};
     */
    /* JADX WARNING: Code restructure failed: missing block: B:113:0x016f, code lost:
        if (r2 != null) goto L_0x01c1;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:119:?, code lost:
        r1.database.executeFast(java.lang.String.format(java.util.Locale.US, "DELETE FROM messages WHERE mid = %d", new java.lang.Object[]{java.lang.Long.valueOf(r12)})).stepThis().dispose();
        r1.database.executeFast(java.lang.String.format(java.util.Locale.US, "DELETE FROM messages_seq WHERE mid = %d", new java.lang.Object[]{java.lang.Long.valueOf(r12)})).stepThis().dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:120:0x01b8, code lost:
        r0 = th;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:121:0x01bb, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:123:?, code lost:
        org.telegram.messenger.FileLog.e((java.lang.Throwable) r0);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:124:0x01bf, code lost:
        if (r2 == null) goto L_0x01c5;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:125:0x01c1, code lost:
        r2.dispose();
        r2 = r3;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:127:?, code lost:
        r2 = r1.database.executeFast("UPDATE media_v2 SET mid = ? WHERE mid = ?");
        r2.bindLong(1, r14);
        r2.bindLong(2, r12);
        r2.step();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:128:0x01d7, code lost:
        if (r2 == null) goto L_0x0207;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:129:0x01da, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:131:?, code lost:
        r1.database.executeFast(java.lang.String.format(java.util.Locale.US, "DELETE FROM media_v2 WHERE mid = %d", new java.lang.Object[]{java.lang.Long.valueOf(r12)})).stepThis().dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:132:0x01fd, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:134:?, code lost:
        org.telegram.messenger.FileLog.e((java.lang.Throwable) r0);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:135:0x0201, code lost:
        if (r2 == null) goto L_0x0207;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:136:0x0203, code lost:
        r2.dispose();
        r2 = r3;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:138:?, code lost:
        r2 = r1.database.executeFast("UPDATE dialogs SET last_mid = ? WHERE last_mid = ?");
        r2.bindLong(1, r14);
        r2.bindLong(2, r12);
        r2.step();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:139:0x0219, code lost:
        if (r2 == null) goto L_0x0283;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:140:0x021c, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:141:0x021e, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:143:?, code lost:
        org.telegram.messenger.FileLog.e((java.lang.Throwable) r0);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:144:0x0222, code lost:
        if (r2 == null) goto L_0x0283;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:145:0x0224, code lost:
        r2.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:146:0x0228, code lost:
        if (r2 != null) goto L_0x022a;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:147:0x022a, code lost:
        r2.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:148:0x022d, code lost:
        throw r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:149:0x022e, code lost:
        if (r2 != null) goto L_0x0230;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:150:0x0230, code lost:
        r2.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:151:0x0233, code lost:
        throw r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:153:0x0236, code lost:
        r2.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:159:0x024e, code lost:
        if (r3 != null) goto L_0x0279;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:160:0x0251, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:162:?, code lost:
        r1.database.executeFast(java.lang.String.format(java.util.Locale.US, "DELETE FROM scheduled_messages WHERE mid = %d", new java.lang.Object[]{java.lang.Long.valueOf(r12)})).stepThis().dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:163:0x0273, code lost:
        r0 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:165:?, code lost:
        org.telegram.messenger.FileLog.e((java.lang.Throwable) r0);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:166:0x0277, code lost:
        if (r3 == null) goto L_0x0283;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:167:0x0279, code lost:
        r3.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:168:0x027d, code lost:
        if (r3 != null) goto L_0x027f;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:169:0x027f, code lost:
        r3.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:170:0x0282, code lost:
        throw r0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:95:0x013e, code lost:
        if (r3 != null) goto L_0x0149;
     */
    /* JADX WARNING: Failed to process nested try/catch */
    /* JADX WARNING: Missing exception handler attribute for start block: B:118:0x0177 */
    /* JADX WARNING: Missing exception handler attribute for start block: B:130:0x01dc */
    /* JADX WARNING: Missing exception handler attribute for start block: B:161:0x0253 */
    /* JADX WARNING: Removed duplicated region for block: B:153:0x0236  */
    /* JADX WARNING: Removed duplicated region for block: B:18:0x004a  */
    /* JADX WARNING: Removed duplicated region for block: B:21:0x0051 A[RETURN] */
    /* JADX WARNING: Removed duplicated region for block: B:22:0x0052  */
    /* JADX WARNING: Removed duplicated region for block: B:26:0x0059  */
    /* JADX WARNING: Removed duplicated region for block: B:82:0x010b A[DONT_GENERATE] */
    /* JADX WARNING: Removed duplicated region for block: B:86:0x0116 A[RETURN] */
    /* JADX WARNING: Removed duplicated region for block: B:87:0x0118  */
    /* renamed from: updateMessageStateAndIdInternal */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public long[] lambda$updateMessageStateAndId$123$MessagesStorage(long r20, java.lang.Integer r22, int r23, int r24, int r25, int r26) {
        /*
            r19 = this;
            r1 = r19
            r2 = r24
            r3 = r25
            r0 = r23
            r4 = r26
            long r5 = (long) r0
            r7 = 0
            r8 = 0
            r9 = 1
            if (r22 != 0) goto L_0x005d
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0043, all -> 0x0041 }
            java.util.Locale r10 = java.util.Locale.US     // Catch:{ Exception -> 0x0043, all -> 0x0041 }
            java.lang.String r11 = "SELECT mid FROM randoms WHERE random_id = %d LIMIT 1"
            java.lang.Object[] r12 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x0043, all -> 0x0041 }
            java.lang.Long r13 = java.lang.Long.valueOf(r20)     // Catch:{ Exception -> 0x0043, all -> 0x0041 }
            r12[r8] = r13     // Catch:{ Exception -> 0x0043, all -> 0x0041 }
            java.lang.String r10 = java.lang.String.format(r10, r11, r12)     // Catch:{ Exception -> 0x0043, all -> 0x0041 }
            java.lang.Object[] r11 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x0043, all -> 0x0041 }
            org.telegram.SQLite.SQLiteCursor r10 = r0.queryFinalized(r10, r11)     // Catch:{ Exception -> 0x0043, all -> 0x0041 }
            boolean r0 = r10.next()     // Catch:{ Exception -> 0x003f }
            if (r0 == 0) goto L_0x0037
            int r0 = r10.intValue(r8)     // Catch:{ Exception -> 0x003f }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x003f }
            goto L_0x0039
        L_0x0037:
            r0 = r22
        L_0x0039:
            if (r10 == 0) goto L_0x004f
            r10.dispose()
            goto L_0x004f
        L_0x003f:
            r0 = move-exception
            goto L_0x0045
        L_0x0041:
            r0 = move-exception
            goto L_0x0057
        L_0x0043:
            r0 = move-exception
            r10 = r7
        L_0x0045:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0055 }
            if (r10 == 0) goto L_0x004d
            r10.dispose()
        L_0x004d:
            r0 = r22
        L_0x004f:
            if (r0 != 0) goto L_0x0052
            return r7
        L_0x0052:
            r11 = r10
            r10 = r0
            goto L_0x0060
        L_0x0055:
            r0 = move-exception
            r7 = r10
        L_0x0057:
            if (r7 == 0) goto L_0x005c
            r7.dispose()
        L_0x005c:
            throw r0
        L_0x005d:
            r10 = r22
            r11 = r7
        L_0x0060:
            int r0 = r10.intValue()
            long r12 = (long) r0
            if (r3 == 0) goto L_0x006e
            long r14 = (long) r3
            r0 = 32
            long r14 = r14 << r0
            long r12 = r12 | r14
            long r14 = r14 | r5
            goto L_0x006f
        L_0x006e:
            r14 = r5
        L_0x006f:
            r3 = -1
            r16 = 0
            if (r4 == r3) goto L_0x007b
            if (r4 != 0) goto L_0x0077
            goto L_0x007b
        L_0x0077:
            r9 = r4
            r7 = r16
            goto L_0x00ba
        L_0x007b:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x00ad }
            java.util.Locale r7 = java.util.Locale.US     // Catch:{ Exception -> 0x00ad }
            java.lang.String r3 = "SELECT uid FROM messages WHERE mid = %d LIMIT 1"
            java.lang.Object[] r8 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x00ad }
            java.lang.Long r18 = java.lang.Long.valueOf(r12)     // Catch:{ Exception -> 0x00ad }
            r9 = 0
            r8[r9] = r18     // Catch:{ Exception -> 0x00ad }
            java.lang.String r3 = java.lang.String.format(r7, r3, r8)     // Catch:{ Exception -> 0x00ad }
            java.lang.Object[] r7 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x00ad }
            org.telegram.SQLite.SQLiteCursor r11 = r0.queryFinalized(r3, r7)     // Catch:{ Exception -> 0x00ad }
            boolean r0 = r11.next()     // Catch:{ Exception -> 0x00ad }
            if (r0 == 0) goto L_0x00a1
            long r3 = r11.longValue(r9)     // Catch:{ Exception -> 0x00ad }
            r7 = r3
            r4 = 0
            goto L_0x00a3
        L_0x00a1:
            r7 = r16
        L_0x00a3:
            if (r11 == 0) goto L_0x00a8
            r11.dispose()
        L_0x00a8:
            r9 = r4
            goto L_0x00b9
        L_0x00aa:
            r0 = move-exception
            goto L_0x0297
        L_0x00ad:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x00aa }
            if (r11 == 0) goto L_0x00b6
            r11.dispose()
        L_0x00b6:
            r9 = r4
            r7 = r16
        L_0x00b9:
            r3 = -1
        L_0x00ba:
            if (r9 == r3) goto L_0x00c5
            r3 = 1
            if (r9 != r3) goto L_0x00c0
            goto L_0x00c6
        L_0x00c0:
            r20 = r7
            r18 = r9
            goto L_0x010e
        L_0x00c5:
            r3 = 1
        L_0x00c6:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0101 }
            java.util.Locale r4 = java.util.Locale.US     // Catch:{ Exception -> 0x0101 }
            r20 = r7
            java.lang.String r7 = "SELECT uid FROM scheduled_messages WHERE mid = %d LIMIT 1"
            java.lang.Object[] r8 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x00fc }
            java.lang.Long r3 = java.lang.Long.valueOf(r12)     // Catch:{ Exception -> 0x00fc }
            r18 = r9
            r9 = 0
            r8[r9] = r3     // Catch:{ Exception -> 0x00fa }
            java.lang.String r3 = java.lang.String.format(r4, r7, r8)     // Catch:{ Exception -> 0x00fa }
            java.lang.Object[] r4 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x00fa }
            org.telegram.SQLite.SQLiteCursor r11 = r0.queryFinalized(r3, r4)     // Catch:{ Exception -> 0x00fa }
            boolean r0 = r11.next()     // Catch:{ Exception -> 0x00fa }
            if (r0 == 0) goto L_0x00f0
            long r3 = r11.longValue(r9)     // Catch:{ Exception -> 0x00fa }
            r7 = r3
            r9 = 1
            goto L_0x00f4
        L_0x00f0:
            r7 = r20
            r9 = r18
        L_0x00f4:
            if (r11 == 0) goto L_0x0112
            r11.dispose()
            goto L_0x0112
        L_0x00fa:
            r0 = move-exception
            goto L_0x0106
        L_0x00fc:
            r0 = move-exception
            goto L_0x0104
        L_0x00fe:
            r0 = move-exception
            goto L_0x0291
        L_0x0101:
            r0 = move-exception
            r20 = r7
        L_0x0104:
            r18 = r9
        L_0x0106:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x00fe }
            if (r11 == 0) goto L_0x010e
            r11.dispose()
        L_0x010e:
            r7 = r20
            r9 = r18
        L_0x0112:
            int r0 = (r7 > r16 ? 1 : (r7 == r16 ? 0 : -1))
            if (r0 != 0) goto L_0x0118
            r3 = 0
            return r3
        L_0x0118:
            r3 = 0
            r4 = 2
            int r0 = (r12 > r14 ? 1 : (r12 == r14 ? 0 : -1))
            if (r0 != 0) goto L_0x015b
            if (r2 == 0) goto L_0x015b
            if (r9 != 0) goto L_0x012b
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0143 }
            java.lang.String r9 = "UPDATE messages SET send_state = 0, date = ? WHERE mid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r9)     // Catch:{ Exception -> 0x0143 }
            goto L_0x0133
        L_0x012b:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0143 }
            java.lang.String r9 = "UPDATE scheduled_messages SET send_state = 0, date = ? WHERE mid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r9)     // Catch:{ Exception -> 0x0143 }
        L_0x0133:
            r3 = r0
            r9 = 1
            r3.bindInteger(r9, r2)     // Catch:{ Exception -> 0x0143 }
            r3.bindLong(r4, r14)     // Catch:{ Exception -> 0x0143 }
            r3.step()     // Catch:{ Exception -> 0x0143 }
            if (r3 == 0) goto L_0x014c
            goto L_0x0149
        L_0x0141:
            r0 = move-exception
            goto L_0x0155
        L_0x0143:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0141 }
            if (r3 == 0) goto L_0x014c
        L_0x0149:
            r3.dispose()
        L_0x014c:
            long[] r0 = new long[r4]
            r2 = 0
            r0[r2] = r7
            r2 = 1
            r0[r2] = r5
            return r0
        L_0x0155:
            if (r3 == 0) goto L_0x015a
            r3.dispose()
        L_0x015a:
            throw r0
        L_0x015b:
            if (r9 != 0) goto L_0x023a
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0176, all -> 0x0172 }
            java.lang.String r2 = "UPDATE messages SET mid = ?, send_state = 0 WHERE mid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r0.executeFast(r2)     // Catch:{ Exception -> 0x0176, all -> 0x0172 }
            r5 = 1
            r2.bindLong(r5, r14)     // Catch:{ Exception -> 0x0177 }
            r2.bindLong(r4, r12)     // Catch:{ Exception -> 0x0177 }
            r2.step()     // Catch:{ Exception -> 0x0177 }
            if (r2 == 0) goto L_0x01c5
            goto L_0x01c1
        L_0x0172:
            r0 = move-exception
            r2 = r3
            goto L_0x0234
        L_0x0176:
            r2 = r3
        L_0x0177:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x01bb }
            java.util.Locale r5 = java.util.Locale.US     // Catch:{ Exception -> 0x01bb }
            java.lang.String r6 = "DELETE FROM messages WHERE mid = %d"
            r9 = 1
            java.lang.Object[] r11 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x01bb }
            java.lang.Long r9 = java.lang.Long.valueOf(r12)     // Catch:{ Exception -> 0x01bb }
            r16 = 0
            r11[r16] = r9     // Catch:{ Exception -> 0x01bb }
            java.lang.String r5 = java.lang.String.format(r5, r6, r11)     // Catch:{ Exception -> 0x01bb }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r5)     // Catch:{ Exception -> 0x01bb }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x01bb }
            r0.dispose()     // Catch:{ Exception -> 0x01bb }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x01bb }
            java.util.Locale r5 = java.util.Locale.US     // Catch:{ Exception -> 0x01bb }
            java.lang.String r6 = "DELETE FROM messages_seq WHERE mid = %d"
            r9 = 1
            java.lang.Object[] r11 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x01bb }
            java.lang.Long r9 = java.lang.Long.valueOf(r12)     // Catch:{ Exception -> 0x01bb }
            r16 = 0
            r11[r16] = r9     // Catch:{ Exception -> 0x01bb }
            java.lang.String r5 = java.lang.String.format(r5, r6, r11)     // Catch:{ Exception -> 0x01bb }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r5)     // Catch:{ Exception -> 0x01bb }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x01bb }
            r0.dispose()     // Catch:{ Exception -> 0x01bb }
            goto L_0x01bf
        L_0x01b8:
            r0 = move-exception
            goto L_0x0234
        L_0x01bb:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x01b8 }
        L_0x01bf:
            if (r2 == 0) goto L_0x01c5
        L_0x01c1:
            r2.dispose()
            r2 = r3
        L_0x01c5:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x01dc }
            java.lang.String r5 = "UPDATE media_v2 SET mid = ? WHERE mid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r0.executeFast(r5)     // Catch:{ Exception -> 0x01dc }
            r5 = 1
            r2.bindLong(r5, r14)     // Catch:{ Exception -> 0x01dc }
            r2.bindLong(r4, r12)     // Catch:{ Exception -> 0x01dc }
            r2.step()     // Catch:{ Exception -> 0x01dc }
            if (r2 == 0) goto L_0x0207
            goto L_0x0203
        L_0x01da:
            r0 = move-exception
            goto L_0x022e
        L_0x01dc:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x01fd }
            java.util.Locale r5 = java.util.Locale.US     // Catch:{ Exception -> 0x01fd }
            java.lang.String r6 = "DELETE FROM media_v2 WHERE mid = %d"
            r9 = 1
            java.lang.Object[] r11 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x01fd }
            java.lang.Long r9 = java.lang.Long.valueOf(r12)     // Catch:{ Exception -> 0x01fd }
            r16 = 0
            r11[r16] = r9     // Catch:{ Exception -> 0x01fd }
            java.lang.String r5 = java.lang.String.format(r5, r6, r11)     // Catch:{ Exception -> 0x01fd }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r5)     // Catch:{ Exception -> 0x01fd }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x01fd }
            r0.dispose()     // Catch:{ Exception -> 0x01fd }
            goto L_0x0201
        L_0x01fd:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x01da }
        L_0x0201:
            if (r2 == 0) goto L_0x0207
        L_0x0203:
            r2.dispose()
            r2 = r3
        L_0x0207:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x021e }
            java.lang.String r3 = "UPDATE dialogs SET last_mid = ? WHERE last_mid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r0.executeFast(r3)     // Catch:{ Exception -> 0x021e }
            r3 = 1
            r2.bindLong(r3, r14)     // Catch:{ Exception -> 0x021e }
            r2.bindLong(r4, r12)     // Catch:{ Exception -> 0x021e }
            r2.step()     // Catch:{ Exception -> 0x021e }
            if (r2 == 0) goto L_0x0283
            goto L_0x0224
        L_0x021c:
            r0 = move-exception
            goto L_0x0228
        L_0x021e:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x021c }
            if (r2 == 0) goto L_0x0283
        L_0x0224:
            r2.dispose()
            goto L_0x0283
        L_0x0228:
            if (r2 == 0) goto L_0x022d
            r2.dispose()
        L_0x022d:
            throw r0
        L_0x022e:
            if (r2 == 0) goto L_0x0233
            r2.dispose()
        L_0x0233:
            throw r0
        L_0x0234:
            if (r2 == 0) goto L_0x0239
            r2.dispose()
        L_0x0239:
            throw r0
        L_0x023a:
            r2 = 1
            if (r9 != r2) goto L_0x0283
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0253 }
            java.lang.String r5 = "UPDATE scheduled_messages SET mid = ?, send_state = 0 WHERE mid = ?"
            org.telegram.SQLite.SQLitePreparedStatement r3 = r0.executeFast(r5)     // Catch:{ Exception -> 0x0253 }
            r3.bindLong(r2, r14)     // Catch:{ Exception -> 0x0253 }
            r3.bindLong(r4, r12)     // Catch:{ Exception -> 0x0253 }
            r3.step()     // Catch:{ Exception -> 0x0253 }
            if (r3 == 0) goto L_0x0283
            goto L_0x0279
        L_0x0251:
            r0 = move-exception
            goto L_0x027d
        L_0x0253:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0273 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x0273 }
            java.lang.String r5 = "DELETE FROM scheduled_messages WHERE mid = %d"
            r6 = 1
            java.lang.Object[] r9 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0273 }
            java.lang.Long r6 = java.lang.Long.valueOf(r12)     // Catch:{ Exception -> 0x0273 }
            r11 = 0
            r9[r11] = r6     // Catch:{ Exception -> 0x0273 }
            java.lang.String r2 = java.lang.String.format(r2, r5, r9)     // Catch:{ Exception -> 0x0273 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x0273 }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x0273 }
            r0.dispose()     // Catch:{ Exception -> 0x0273 }
            goto L_0x0277
        L_0x0273:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0251 }
        L_0x0277:
            if (r3 == 0) goto L_0x0283
        L_0x0279:
            r3.dispose()
            goto L_0x0283
        L_0x027d:
            if (r3 == 0) goto L_0x0282
            r3.dispose()
        L_0x0282:
            throw r0
        L_0x0283:
            long[] r0 = new long[r4]
            r2 = 0
            r0[r2] = r7
            int r2 = r10.intValue()
            long r2 = (long) r2
            r4 = 1
            r0[r4] = r2
            return r0
        L_0x0291:
            if (r11 == 0) goto L_0x0296
            r11.dispose()
        L_0x0296:
            throw r0
        L_0x0297:
            if (r11 == 0) goto L_0x029c
            r11.dispose()
        L_0x029c:
            throw r0
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$updateMessageStateAndId$123$MessagesStorage(long, java.lang.Integer, int, int, int, int):long[]");
    }

    public long[] updateMessageStateAndId(long j, Integer num, int i, int i2, boolean z, int i3, int i4) {
        if (z) {
            this.storageQueue.postRunnable(new Runnable(j, num, i, i2, i3, i4) {
                private final /* synthetic */ long f$1;
                private final /* synthetic */ Integer f$2;
                private final /* synthetic */ int f$3;
                private final /* synthetic */ int f$4;
                private final /* synthetic */ int f$5;
                private final /* synthetic */ int f$6;

                {
                    this.f$1 = r2;
                    this.f$2 = r4;
                    this.f$3 = r5;
                    this.f$4 = r6;
                    this.f$5 = r7;
                    this.f$6 = r8;
                }

                public final void run() {
                    MessagesStorage.this.lambda$updateMessageStateAndId$123$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, this.f$6);
                }
            });
            return null;
        }
        return lambda$updateMessageStateAndId$123$MessagesStorage(j, num, i, i2, i3, i4);
    }

    /* access modifiers changed from: private */
    /* renamed from: updateUsersInternal */
    public void lambda$updateUsers$124$MessagesStorage(ArrayList<TLRPC.User> arrayList, boolean z, boolean z2) {
        if (z) {
            if (z2) {
                try {
                    this.database.beginTransaction();
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                    return;
                }
            }
            SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE users SET status = ? WHERE uid = ?");
            int size = arrayList.size();
            for (int i = 0; i < size; i++) {
                TLRPC.User user = arrayList.get(i);
                executeFast.requery();
                if (user.status != null) {
                    executeFast.bindInteger(1, user.status.expires);
                } else {
                    executeFast.bindInteger(1, 0);
                }
                executeFast.bindInteger(2, user.id);
                executeFast.step();
            }
            executeFast.dispose();
            if (z2) {
                this.database.commitTransaction();
                return;
            }
            return;
        }
        StringBuilder sb = new StringBuilder();
        SparseArray sparseArray = new SparseArray();
        int size2 = arrayList.size();
        for (int i2 = 0; i2 < size2; i2++) {
            TLRPC.User user2 = arrayList.get(i2);
            if (sb.length() != 0) {
                sb.append(",");
            }
            sb.append(user2.id);
            sparseArray.put(user2.id, user2);
        }
        ArrayList arrayList2 = new ArrayList();
        getUsersInternal(sb.toString(), arrayList2);
        int size3 = arrayList2.size();
        for (int i3 = 0; i3 < size3; i3++) {
            TLRPC.User user3 = (TLRPC.User) arrayList2.get(i3);
            TLRPC.User user4 = (TLRPC.User) sparseArray.get(user3.id);
            if (user4 != null) {
                if (user4.first_name != null && user4.last_name != null) {
                    if (!UserObject.isContact(user3)) {
                        user3.first_name = user4.first_name;
                        user3.last_name = user4.last_name;
                    }
                    user3.username = user4.username;
                } else if (user4.photo != null) {
                    user3.photo = user4.photo;
                } else if (user4.phone != null) {
                    user3.phone = user4.phone;
                }
            }
        }
        if (!arrayList2.isEmpty()) {
            if (z2) {
                this.database.beginTransaction();
            }
            putUsersInternal(arrayList2);
            if (z2) {
                this.database.commitTransaction();
            }
        }
    }

    public void updateUsers(ArrayList<TLRPC.User> arrayList, boolean z, boolean z2, boolean z3) {
        if (arrayList != null && !arrayList.isEmpty()) {
            if (z3) {
                this.storageQueue.postRunnable(new Runnable(arrayList, z, z2) {
                    private final /* synthetic */ ArrayList f$1;
                    private final /* synthetic */ boolean f$2;
                    private final /* synthetic */ boolean f$3;

                    {
                        this.f$1 = r2;
                        this.f$2 = r3;
                        this.f$3 = r4;
                    }

                    public final void run() {
                        MessagesStorage.this.lambda$updateUsers$124$MessagesStorage(this.f$1, this.f$2, this.f$3);
                    }
                });
            } else {
                lambda$updateUsers$124$MessagesStorage(arrayList, z, z2);
            }
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: markMessagesAsReadInternal */
    public void lambda$markMessagesAsRead$126$MessagesStorage(SparseLongArray sparseLongArray, SparseLongArray sparseLongArray2, SparseIntArray sparseIntArray) {
        SparseLongArray sparseLongArray3 = sparseLongArray;
        SparseLongArray sparseLongArray4 = sparseLongArray2;
        SparseIntArray sparseIntArray2 = sparseIntArray;
        try {
            if (!isEmpty(sparseLongArray)) {
                SQLitePreparedStatement executeFast = this.database.executeFast("DELETE FROM unread_push_messages WHERE uid = ? AND mid <= ?");
                for (int i = 0; i < sparseLongArray.size(); i++) {
                    int keyAt = sparseLongArray3.keyAt(i);
                    long j = sparseLongArray3.get(keyAt);
                    this.database.executeFast(String.format(Locale.US, "UPDATE messages SET read_state = read_state | 1 WHERE uid = %d AND mid > 0 AND mid <= %d AND read_state IN(0,2) AND out = 0", new Object[]{Integer.valueOf(keyAt), Long.valueOf(j)})).stepThis().dispose();
                    executeFast.requery();
                    executeFast.bindLong(1, (long) keyAt);
                    executeFast.bindLong(2, j);
                    executeFast.step();
                }
                executeFast.dispose();
            }
            if (!isEmpty(sparseLongArray2)) {
                for (int i2 = 0; i2 < sparseLongArray2.size(); i2++) {
                    int keyAt2 = sparseLongArray4.keyAt(i2);
                    long j2 = sparseLongArray4.get(keyAt2);
                    this.database.executeFast(String.format(Locale.US, "UPDATE messages SET read_state = read_state | 1 WHERE uid = %d AND mid > 0 AND mid <= %d AND read_state IN(0,2) AND out = 1", new Object[]{Integer.valueOf(keyAt2), Long.valueOf(j2)})).stepThis().dispose();
                }
            }
            if (sparseIntArray2 != null && !isEmpty(sparseIntArray)) {
                for (int i3 = 0; i3 < sparseIntArray.size(); i3++) {
                    int valueAt = sparseIntArray2.valueAt(i3);
                    SQLitePreparedStatement executeFast2 = this.database.executeFast("UPDATE messages SET read_state = read_state | 1 WHERE uid = ? AND date <= ? AND read_state IN(0,2) AND out = 1");
                    executeFast2.requery();
                    executeFast2.bindLong(1, ((long) sparseIntArray2.keyAt(i3)) << 32);
                    executeFast2.bindInteger(2, valueAt);
                    executeFast2.step();
                    executeFast2.dispose();
                }
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void markMessagesContentAsRead(ArrayList<Long> arrayList, int i) {
        if (!isEmpty((List<?>) arrayList)) {
            this.storageQueue.postRunnable(new Runnable(arrayList, i) {
                private final /* synthetic */ ArrayList f$1;
                private final /* synthetic */ int f$2;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                }

                public final void run() {
                    MessagesStorage.this.lambda$markMessagesContentAsRead$125$MessagesStorage(this.f$1, this.f$2);
                }
            });
        }
    }

    public /* synthetic */ void lambda$markMessagesContentAsRead$125$MessagesStorage(ArrayList arrayList, int i) {
        try {
            String join = TextUtils.join(",", arrayList);
            this.database.executeFast(String.format(Locale.US, "UPDATE messages SET read_state = read_state | 2 WHERE mid IN (%s)", new Object[]{join})).stepThis().dispose();
            if (i != 0) {
                SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT mid, ttl FROM messages WHERE mid IN (%s) AND ttl > 0", new Object[]{join}), new Object[0]);
                ArrayList arrayList2 = null;
                while (queryFinalized.next()) {
                    if (arrayList2 == null) {
                        arrayList2 = new ArrayList();
                    }
                    arrayList2.add(Integer.valueOf(queryFinalized.intValue(0)));
                }
                if (arrayList2 != null) {
                    emptyMessagesMedia(arrayList2);
                }
                queryFinalized.dispose();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void markMessagesAsRead(SparseLongArray sparseLongArray, SparseLongArray sparseLongArray2, SparseIntArray sparseIntArray, boolean z) {
        if (z) {
            this.storageQueue.postRunnable(new Runnable(sparseLongArray, sparseLongArray2, sparseIntArray) {
                private final /* synthetic */ SparseLongArray f$1;
                private final /* synthetic */ SparseLongArray f$2;
                private final /* synthetic */ SparseIntArray f$3;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                }

                public final void run() {
                    MessagesStorage.this.lambda$markMessagesAsRead$126$MessagesStorage(this.f$1, this.f$2, this.f$3);
                }
            });
        } else {
            lambda$markMessagesAsRead$126$MessagesStorage(sparseLongArray, sparseLongArray2, sparseIntArray);
        }
    }

    public void markMessagesAsDeletedByRandoms(ArrayList<Long> arrayList) {
        if (!arrayList.isEmpty()) {
            this.storageQueue.postRunnable(new Runnable(arrayList) {
                private final /* synthetic */ ArrayList f$1;

                {
                    this.f$1 = r2;
                }

                public final void run() {
                    MessagesStorage.this.lambda$markMessagesAsDeletedByRandoms$128$MessagesStorage(this.f$1);
                }
            });
        }
    }

    public /* synthetic */ void lambda$markMessagesAsDeletedByRandoms$128$MessagesStorage(ArrayList arrayList) {
        try {
            String join = TextUtils.join(",", arrayList);
            SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT mid FROM randoms WHERE random_id IN(%s)", new Object[]{join}), new Object[0]);
            ArrayList arrayList2 = new ArrayList();
            while (queryFinalized.next()) {
                arrayList2.add(Integer.valueOf(queryFinalized.intValue(0)));
            }
            queryFinalized.dispose();
            if (!arrayList2.isEmpty()) {
                AndroidUtilities.runOnUIThread(new Runnable(arrayList2) {
                    private final /* synthetic */ ArrayList f$1;

                    {
                        this.f$1 = r2;
                    }

                    public final void run() {
                        MessagesStorage.this.lambda$null$127$MessagesStorage(this.f$1);
                    }
                });
                updateDialogsWithReadMessagesInternal(arrayList2, (SparseLongArray) null, (SparseLongArray) null, (ArrayList<Long>) null);
                lambda$markMessagesAsDeleted$131$MessagesStorage(arrayList2, 0, true, false);
                lambda$updateDialogsWithDeletedMessages$130$MessagesStorage(arrayList2, (ArrayList<Long>) null, 0);
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public /* synthetic */ void lambda$null$127$MessagesStorage(ArrayList arrayList) {
        getNotificationCenter().postNotificationName(NotificationCenter.messagesDeleted, arrayList, 0, false);
    }

    /* access modifiers changed from: protected */
    public void deletePushMessages(long j, ArrayList<Integer> arrayList) {
        try {
            this.database.executeFast(String.format(Locale.US, "DELETE FROM unread_push_messages WHERE uid = %d AND mid IN(%s)", new Object[]{Long.valueOf(j), TextUtils.join(",", arrayList)})).stepThis().dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    private void broadcastScheduledMessagesChange(Long l) {
        try {
            int i = 0;
            SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT COUNT(mid) FROM scheduled_messages WHERE uid = %d", new Object[]{l}), new Object[0]);
            if (queryFinalized.next()) {
                i = queryFinalized.intValue(0);
            }
            queryFinalized.dispose();
            AndroidUtilities.runOnUIThread(new Runnable(l, i) {
                private final /* synthetic */ Long f$1;
                private final /* synthetic */ int f$2;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                }

                public final void run() {
                    MessagesStorage.this.lambda$broadcastScheduledMessagesChange$129$MessagesStorage(this.f$1, this.f$2);
                }
            });
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public /* synthetic */ void lambda$broadcastScheduledMessagesChange$129$MessagesStorage(Long l, int i) {
        getNotificationCenter().postNotificationName(NotificationCenter.scheduledMessagesUpdated, l, Integer.valueOf(i));
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r6v22, resolved type: java.lang.Object} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v4, resolved type: java.lang.Integer} */
    /* access modifiers changed from: private */
    /* JADX WARNING: Multi-variable type inference failed */
    /* renamed from: markMessagesAsDeletedInternal */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public java.util.ArrayList<java.lang.Long> lambda$markMessagesAsDeleted$131$MessagesStorage(java.util.ArrayList<java.lang.Integer> r21, int r22, boolean r23, boolean r24) {
        /*
            r20 = this;
            r1 = r20
            r2 = r21
            r3 = r22
            java.util.ArrayList r5 = new java.util.ArrayList     // Catch:{ Exception -> 0x041d }
            r5.<init>()     // Catch:{ Exception -> 0x041d }
            r0 = 44
            r6 = 32
            java.lang.String r7 = ","
            r8 = 1
            r9 = 0
            if (r24 == 0) goto L_0x00b8
            if (r3 == 0) goto L_0x0049
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x041d }
            int r10 = r21.size()     // Catch:{ Exception -> 0x041d }
            r7.<init>(r10)     // Catch:{ Exception -> 0x041d }
            r10 = 0
        L_0x0021:
            int r11 = r21.size()     // Catch:{ Exception -> 0x041d }
            if (r10 >= r11) goto L_0x0044
            java.lang.Object r11 = r2.get(r10)     // Catch:{ Exception -> 0x041d }
            java.lang.Integer r11 = (java.lang.Integer) r11     // Catch:{ Exception -> 0x041d }
            int r11 = r11.intValue()     // Catch:{ Exception -> 0x041d }
            long r11 = (long) r11     // Catch:{ Exception -> 0x041d }
            long r13 = (long) r3     // Catch:{ Exception -> 0x041d }
            long r13 = r13 << r6
            long r11 = r11 | r13
            int r13 = r7.length()     // Catch:{ Exception -> 0x041d }
            if (r13 <= 0) goto L_0x003e
            r7.append(r0)     // Catch:{ Exception -> 0x041d }
        L_0x003e:
            r7.append(r11)     // Catch:{ Exception -> 0x041d }
            int r10 = r10 + 1
            goto L_0x0021
        L_0x0044:
            java.lang.String r0 = r7.toString()     // Catch:{ Exception -> 0x041d }
            goto L_0x004d
        L_0x0049:
            java.lang.String r0 = android.text.TextUtils.join(r7, r2)     // Catch:{ Exception -> 0x041d }
        L_0x004d:
            r2 = r0
            java.util.ArrayList r3 = new java.util.ArrayList     // Catch:{ Exception -> 0x041d }
            r3.<init>()     // Catch:{ Exception -> 0x041d }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x041d }
            java.util.Locale r6 = java.util.Locale.US     // Catch:{ Exception -> 0x041d }
            java.lang.String r7 = "SELECT uid FROM scheduled_messages WHERE mid IN(%s)"
            java.lang.Object[] r10 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x041d }
            r10[r9] = r2     // Catch:{ Exception -> 0x041d }
            java.lang.String r6 = java.lang.String.format(r6, r7, r10)     // Catch:{ Exception -> 0x041d }
            java.lang.Object[] r7 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x041d }
            org.telegram.SQLite.SQLiteCursor r6 = r0.queryFinalized(r6, r7)     // Catch:{ Exception -> 0x041d }
        L_0x0067:
            boolean r0 = r6.next()     // Catch:{ Exception -> 0x0083 }
            if (r0 == 0) goto L_0x0087
            long r10 = r6.longValue(r9)     // Catch:{ Exception -> 0x0083 }
            java.lang.Long r0 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x0083 }
            boolean r0 = r3.contains(r0)     // Catch:{ Exception -> 0x0083 }
            if (r0 != 0) goto L_0x0067
            java.lang.Long r0 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x0083 }
            r3.add(r0)     // Catch:{ Exception -> 0x0083 }
            goto L_0x0067
        L_0x0083:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ Exception -> 0x041d }
        L_0x0087:
            r6.dispose()     // Catch:{ Exception -> 0x041d }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x041d }
            java.util.Locale r6 = java.util.Locale.US     // Catch:{ Exception -> 0x041d }
            java.lang.String r7 = "DELETE FROM scheduled_messages WHERE mid IN(%s)"
            java.lang.Object[] r8 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x041d }
            r8[r9] = r2     // Catch:{ Exception -> 0x041d }
            java.lang.String r2 = java.lang.String.format(r6, r7, r8)     // Catch:{ Exception -> 0x041d }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r2)     // Catch:{ Exception -> 0x041d }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x041d }
            r0.dispose()     // Catch:{ Exception -> 0x041d }
            int r0 = r3.size()     // Catch:{ Exception -> 0x041d }
        L_0x00a7:
            if (r9 >= r0) goto L_0x00b5
            java.lang.Object r2 = r3.get(r9)     // Catch:{ Exception -> 0x041d }
            java.lang.Long r2 = (java.lang.Long) r2     // Catch:{ Exception -> 0x041d }
            r1.broadcastScheduledMessagesChange(r2)     // Catch:{ Exception -> 0x041d }
            int r9 = r9 + 1
            goto L_0x00a7
        L_0x00b5:
            r14 = r5
            goto L_0x041c
        L_0x00b8:
            java.util.ArrayList r10 = new java.util.ArrayList     // Catch:{ Exception -> 0x041d }
            r10.<init>(r2)     // Catch:{ Exception -> 0x041d }
            android.util.LongSparseArray r11 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x041d }
            r11.<init>()     // Catch:{ Exception -> 0x041d }
            if (r3 == 0) goto L_0x00fc
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x041d }
            int r12 = r21.size()     // Catch:{ Exception -> 0x041d }
            r7.<init>(r12)     // Catch:{ Exception -> 0x041d }
            r12 = 0
        L_0x00ce:
            int r13 = r21.size()     // Catch:{ Exception -> 0x041d }
            if (r12 >= r13) goto L_0x00f5
            java.lang.Object r13 = r2.get(r12)     // Catch:{ Exception -> 0x041d }
            java.lang.Integer r13 = (java.lang.Integer) r13     // Catch:{ Exception -> 0x041d }
            int r13 = r13.intValue()     // Catch:{ Exception -> 0x041d }
            long r13 = (long) r13     // Catch:{ Exception -> 0x041d }
            r16 = r5
            long r4 = (long) r3     // Catch:{ Exception -> 0x041d }
            long r4 = r4 << r6
            long r4 = r4 | r13
            int r13 = r7.length()     // Catch:{ Exception -> 0x041d }
            if (r13 <= 0) goto L_0x00ed
            r7.append(r0)     // Catch:{ Exception -> 0x041d }
        L_0x00ed:
            r7.append(r4)     // Catch:{ Exception -> 0x041d }
            int r12 = r12 + 1
            r5 = r16
            goto L_0x00ce
        L_0x00f5:
            r16 = r5
            java.lang.String r0 = r7.toString()     // Catch:{ Exception -> 0x041d }
            goto L_0x0102
        L_0x00fc:
            r16 = r5
            java.lang.String r0 = android.text.TextUtils.join(r7, r2)     // Catch:{ Exception -> 0x041d }
        L_0x0102:
            r4 = r0
            java.util.ArrayList r5 = new java.util.ArrayList     // Catch:{ Exception -> 0x041d }
            r5.<init>()     // Catch:{ Exception -> 0x041d }
            org.telegram.messenger.UserConfig r0 = r20.getUserConfig()     // Catch:{ Exception -> 0x041d }
            int r0 = r0.getClientUserId()     // Catch:{ Exception -> 0x041d }
            org.telegram.SQLite.SQLiteDatabase r6 = r1.database     // Catch:{ Exception -> 0x041d }
            java.util.Locale r7 = java.util.Locale.US     // Catch:{ Exception -> 0x041d }
            java.lang.String r12 = "SELECT uid, data, read_state, out, mention, mid FROM messages WHERE mid IN(%s)"
            java.lang.Object[] r13 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x041d }
            r13[r9] = r4     // Catch:{ Exception -> 0x041d }
            java.lang.String r7 = java.lang.String.format(r7, r12, r13)     // Catch:{ Exception -> 0x041d }
            java.lang.Object[] r12 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x041d }
            org.telegram.SQLite.SQLiteCursor r6 = r6.queryFinalized(r7, r12)     // Catch:{ Exception -> 0x041d }
        L_0x0124:
            r7 = 3
            r12 = 2
            boolean r13 = r6.next()     // Catch:{ Exception -> 0x01b8 }
            if (r13 == 0) goto L_0x01bc
            long r13 = r6.longValue(r9)     // Catch:{ Exception -> 0x01b8 }
            r15 = 5
            int r15 = r6.intValue(r15)     // Catch:{ Exception -> 0x01b8 }
            java.lang.Integer r15 = java.lang.Integer.valueOf(r15)     // Catch:{ Exception -> 0x01b8 }
            r10.remove(r15)     // Catch:{ Exception -> 0x01b8 }
            long r8 = (long) r0     // Catch:{ Exception -> 0x01b8 }
            int r18 = (r13 > r8 ? 1 : (r13 == r8 ? 0 : -1))
            if (r18 == 0) goto L_0x0190
            int r8 = r6.intValue(r12)     // Catch:{ Exception -> 0x01b8 }
            int r9 = r6.intValue(r7)     // Catch:{ Exception -> 0x01b8 }
            if (r9 != 0) goto L_0x0190
            java.lang.Object r9 = r11.get(r13)     // Catch:{ Exception -> 0x01b8 }
            java.lang.Integer[] r9 = (java.lang.Integer[]) r9     // Catch:{ Exception -> 0x01b8 }
            if (r9 != 0) goto L_0x0167
            java.lang.Integer[] r9 = new java.lang.Integer[r12]     // Catch:{ Exception -> 0x01b8 }
            r17 = 0
            java.lang.Integer r18 = java.lang.Integer.valueOf(r17)     // Catch:{ Exception -> 0x01b8 }
            r9[r17] = r18     // Catch:{ Exception -> 0x01b8 }
            java.lang.Integer r18 = java.lang.Integer.valueOf(r17)     // Catch:{ Exception -> 0x01b8 }
            r15 = 1
            r9[r15] = r18     // Catch:{ Exception -> 0x01b8 }
            r11.put(r13, r9)     // Catch:{ Exception -> 0x01b8 }
        L_0x0167:
            if (r8 >= r12) goto L_0x017a
            r15 = 1
            r18 = r9[r15]     // Catch:{ Exception -> 0x01b8 }
            r18 = r9[r15]     // Catch:{ Exception -> 0x01b8 }
            int r18 = r18.intValue()     // Catch:{ Exception -> 0x01b8 }
            int r18 = r18 + 1
            java.lang.Integer r18 = java.lang.Integer.valueOf(r18)     // Catch:{ Exception -> 0x01b8 }
            r9[r15] = r18     // Catch:{ Exception -> 0x01b8 }
        L_0x017a:
            if (r8 == 0) goto L_0x017e
            if (r8 != r12) goto L_0x0190
        L_0x017e:
            r8 = 0
            r17 = r9[r8]     // Catch:{ Exception -> 0x01b8 }
            r17 = r9[r8]     // Catch:{ Exception -> 0x01b8 }
            int r17 = r17.intValue()     // Catch:{ Exception -> 0x01b8 }
            r15 = 1
            int r17 = r17 + 1
            java.lang.Integer r17 = java.lang.Integer.valueOf(r17)     // Catch:{ Exception -> 0x01b8 }
            r9[r8] = r17     // Catch:{ Exception -> 0x01b8 }
        L_0x0190:
            int r8 = (int) r13     // Catch:{ Exception -> 0x01b8 }
            if (r8 == 0) goto L_0x0198
            if (r23 != 0) goto L_0x0198
        L_0x0195:
            r8 = 1
            r9 = 0
            goto L_0x0124
        L_0x0198:
            r8 = 1
            org.telegram.tgnet.NativeByteBuffer r9 = r6.byteBufferValue(r8)     // Catch:{ Exception -> 0x01b8 }
            if (r9 == 0) goto L_0x0195
            r8 = 0
            int r13 = r9.readInt32(r8)     // Catch:{ Exception -> 0x01b8 }
            org.telegram.tgnet.TLRPC$Message r13 = org.telegram.tgnet.TLRPC.Message.TLdeserialize(r9, r13, r8)     // Catch:{ Exception -> 0x01b8 }
            org.telegram.messenger.UserConfig r14 = r20.getUserConfig()     // Catch:{ Exception -> 0x01b8 }
            int r14 = r14.clientUserId     // Catch:{ Exception -> 0x01b8 }
            r13.readAttachPath(r9, r14)     // Catch:{ Exception -> 0x01b8 }
            r9.reuse()     // Catch:{ Exception -> 0x01b8 }
            r1.addFilesToDelete(r13, r5, r8)     // Catch:{ Exception -> 0x01b8 }
            goto L_0x0195
        L_0x01b8:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ Exception -> 0x041d }
        L_0x01bc:
            r6.dispose()     // Catch:{ Exception -> 0x041d }
            org.telegram.messenger.FileLoader r0 = r20.getFileLoader()     // Catch:{ Exception -> 0x041d }
            r6 = 0
            r0.deleteFiles(r5, r6)     // Catch:{ Exception -> 0x041d }
            r0 = 0
        L_0x01c8:
            int r5 = r11.size()     // Catch:{ Exception -> 0x041d }
            if (r0 >= r5) goto L_0x024c
            long r5 = r11.keyAt(r0)     // Catch:{ Exception -> 0x041d }
            java.lang.Object r8 = r11.valueAt(r0)     // Catch:{ Exception -> 0x041d }
            java.lang.Integer[] r8 = (java.lang.Integer[]) r8     // Catch:{ Exception -> 0x041d }
            org.telegram.SQLite.SQLiteDatabase r9 = r1.database     // Catch:{ Exception -> 0x041d }
            java.lang.StringBuilder r13 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x041d }
            r13.<init>()     // Catch:{ Exception -> 0x041d }
            java.lang.String r14 = "SELECT unread_count, unread_count_i FROM dialogs WHERE did = "
            r13.append(r14)     // Catch:{ Exception -> 0x041d }
            r13.append(r5)     // Catch:{ Exception -> 0x041d }
            java.lang.String r13 = r13.toString()     // Catch:{ Exception -> 0x041d }
            r14 = 0
            java.lang.Object[] r15 = new java.lang.Object[r14]     // Catch:{ Exception -> 0x041d }
            org.telegram.SQLite.SQLiteCursor r9 = r9.queryFinalized(r13, r15)     // Catch:{ Exception -> 0x041d }
            boolean r13 = r9.next()     // Catch:{ Exception -> 0x041d }
            if (r13 == 0) goto L_0x0202
            int r13 = r9.intValue(r14)     // Catch:{ Exception -> 0x041d }
            r14 = 1
            int r18 = r9.intValue(r14)     // Catch:{ Exception -> 0x041d }
            goto L_0x0205
        L_0x0202:
            r13 = 0
            r18 = 0
        L_0x0205:
            r9.dispose()     // Catch:{ Exception -> 0x041d }
            java.lang.Long r9 = java.lang.Long.valueOf(r5)     // Catch:{ Exception -> 0x041d }
            r14 = r16
            r14.add(r9)     // Catch:{ Exception -> 0x041d }
            org.telegram.SQLite.SQLiteDatabase r9 = r1.database     // Catch:{ Exception -> 0x041d }
            java.lang.String r15 = "UPDATE dialogs SET unread_count = ?, unread_count_i = ? WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r9 = r9.executeFast(r15)     // Catch:{ Exception -> 0x041d }
            r9.requery()     // Catch:{ Exception -> 0x041d }
            r15 = 0
            r16 = r8[r15]     // Catch:{ Exception -> 0x041d }
            int r16 = r16.intValue()     // Catch:{ Exception -> 0x041d }
            int r13 = r13 - r16
            int r13 = java.lang.Math.max(r15, r13)     // Catch:{ Exception -> 0x041d }
            r15 = 1
            r9.bindInteger(r15, r13)     // Catch:{ Exception -> 0x041d }
            r8 = r8[r15]     // Catch:{ Exception -> 0x041d }
            r13 = 0
            int r8 = r8.intValue()     // Catch:{ Exception -> 0x041d }
            int r8 = r18 - r8
            int r8 = java.lang.Math.max(r13, r8)     // Catch:{ Exception -> 0x041d }
            r9.bindInteger(r12, r8)     // Catch:{ Exception -> 0x041d }
            r9.bindLong(r7, r5)     // Catch:{ Exception -> 0x041d }
            r9.step()     // Catch:{ Exception -> 0x041d }
            r9.dispose()     // Catch:{ Exception -> 0x041d }
            int r0 = r0 + 1
            r16 = r14
            goto L_0x01c8
        L_0x024c:
            r14 = r16
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x041d }
            java.util.Locale r5 = java.util.Locale.US     // Catch:{ Exception -> 0x041d }
            java.lang.String r6 = "DELETE FROM messages WHERE mid IN(%s)"
            r8 = 1
            java.lang.Object[] r9 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x041d }
            r8 = 0
            r9[r8] = r4     // Catch:{ Exception -> 0x041d }
            java.lang.String r5 = java.lang.String.format(r5, r6, r9)     // Catch:{ Exception -> 0x041d }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r5)     // Catch:{ Exception -> 0x041d }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x041d }
            r0.dispose()     // Catch:{ Exception -> 0x041d }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x041d }
            java.util.Locale r5 = java.util.Locale.US     // Catch:{ Exception -> 0x041d }
            java.lang.String r6 = "DELETE FROM polls WHERE mid IN(%s)"
            r8 = 1
            java.lang.Object[] r9 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x041d }
            r8 = 0
            r9[r8] = r4     // Catch:{ Exception -> 0x041d }
            java.lang.String r5 = java.lang.String.format(r5, r6, r9)     // Catch:{ Exception -> 0x041d }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r5)     // Catch:{ Exception -> 0x041d }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x041d }
            r0.dispose()     // Catch:{ Exception -> 0x041d }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x041d }
            java.util.Locale r5 = java.util.Locale.US     // Catch:{ Exception -> 0x041d }
            java.lang.String r6 = "DELETE FROM bot_keyboard WHERE mid IN(%s)"
            r8 = 1
            java.lang.Object[] r9 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x041d }
            r8 = 0
            r9[r8] = r4     // Catch:{ Exception -> 0x041d }
            java.lang.String r5 = java.lang.String.format(r5, r6, r9)     // Catch:{ Exception -> 0x041d }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r5)     // Catch:{ Exception -> 0x041d }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x041d }
            r0.dispose()     // Catch:{ Exception -> 0x041d }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x041d }
            java.util.Locale r5 = java.util.Locale.US     // Catch:{ Exception -> 0x041d }
            java.lang.String r6 = "DELETE FROM messages_seq WHERE mid IN(%s)"
            r8 = 1
            java.lang.Object[] r9 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x041d }
            r8 = 0
            r9[r8] = r4     // Catch:{ Exception -> 0x041d }
            java.lang.String r5 = java.lang.String.format(r5, r6, r9)     // Catch:{ Exception -> 0x041d }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r5)     // Catch:{ Exception -> 0x041d }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x041d }
            r0.dispose()     // Catch:{ Exception -> 0x041d }
            boolean r0 = r10.isEmpty()     // Catch:{ Exception -> 0x041d }
            if (r0 == 0) goto L_0x03c6
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x041d }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x041d }
            java.lang.String r5 = "SELECT uid, type FROM media_v2 WHERE mid IN(%s)"
            r6 = 1
            java.lang.Object[] r8 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x041d }
            r6 = 0
            r8[r6] = r4     // Catch:{ Exception -> 0x041d }
            java.lang.String r3 = java.lang.String.format(r3, r5, r8)     // Catch:{ Exception -> 0x041d }
            java.lang.Object[] r5 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x041d }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r3, r5)     // Catch:{ Exception -> 0x041d }
            r3 = 0
        L_0x02d7:
            boolean r5 = r0.next()     // Catch:{ Exception -> 0x041d }
            if (r5 == 0) goto L_0x0320
            long r8 = r0.longValue(r6)     // Catch:{ Exception -> 0x041d }
            r5 = 1
            int r6 = r0.intValue(r5)     // Catch:{ Exception -> 0x041d }
            if (r3 != 0) goto L_0x02ed
            android.util.SparseArray r3 = new android.util.SparseArray     // Catch:{ Exception -> 0x041d }
            r3.<init>()     // Catch:{ Exception -> 0x041d }
        L_0x02ed:
            java.lang.Object r5 = r3.get(r6)     // Catch:{ Exception -> 0x041d }
            android.util.LongSparseArray r5 = (android.util.LongSparseArray) r5     // Catch:{ Exception -> 0x041d }
            if (r5 != 0) goto L_0x0303
            android.util.LongSparseArray r5 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x041d }
            r5.<init>()     // Catch:{ Exception -> 0x041d }
            r10 = 0
            java.lang.Integer r11 = java.lang.Integer.valueOf(r10)     // Catch:{ Exception -> 0x041d }
            r3.put(r6, r5)     // Catch:{ Exception -> 0x041d }
            goto L_0x030a
        L_0x0303:
            java.lang.Object r6 = r5.get(r8)     // Catch:{ Exception -> 0x041d }
            r11 = r6
            java.lang.Integer r11 = (java.lang.Integer) r11     // Catch:{ Exception -> 0x041d }
        L_0x030a:
            if (r11 != 0) goto L_0x0311
            r6 = 0
            java.lang.Integer r11 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x041d }
        L_0x0311:
            int r6 = r11.intValue()     // Catch:{ Exception -> 0x041d }
            r10 = 1
            int r6 = r6 + r10
            java.lang.Integer r6 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x041d }
            r5.put(r8, r6)     // Catch:{ Exception -> 0x041d }
            r6 = 0
            goto L_0x02d7
        L_0x0320:
            r0.dispose()     // Catch:{ Exception -> 0x041d }
            if (r3 == 0) goto L_0x03f8
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x041d }
            java.lang.String r5 = "REPLACE INTO media_counts_v2 VALUES(?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r5)     // Catch:{ Exception -> 0x041d }
            r5 = 0
        L_0x032e:
            int r6 = r3.size()     // Catch:{ Exception -> 0x041d }
            if (r5 >= r6) goto L_0x03c2
            int r6 = r3.keyAt(r5)     // Catch:{ Exception -> 0x041d }
            java.lang.Object r8 = r3.valueAt(r5)     // Catch:{ Exception -> 0x041d }
            android.util.LongSparseArray r8 = (android.util.LongSparseArray) r8     // Catch:{ Exception -> 0x041d }
            r9 = 0
        L_0x033f:
            int r10 = r8.size()     // Catch:{ Exception -> 0x041d }
            if (r9 >= r10) goto L_0x03b6
            long r10 = r8.keyAt(r9)     // Catch:{ Exception -> 0x041d }
            org.telegram.SQLite.SQLiteDatabase r13 = r1.database     // Catch:{ Exception -> 0x041d }
            java.util.Locale r15 = java.util.Locale.US     // Catch:{ Exception -> 0x041d }
            java.lang.String r7 = "SELECT count, old FROM media_counts_v2 WHERE uid = %d AND type = %d LIMIT 1"
            r22 = r3
            java.lang.Object[] r3 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x041d }
            java.lang.Long r19 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x041d }
            r12 = 0
            r3[r12] = r19     // Catch:{ Exception -> 0x041d }
            java.lang.Integer r17 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x041d }
            r18 = 1
            r3[r18] = r17     // Catch:{ Exception -> 0x041d }
            java.lang.String r3 = java.lang.String.format(r15, r7, r3)     // Catch:{ Exception -> 0x041d }
            java.lang.Object[] r7 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x041d }
            org.telegram.SQLite.SQLiteCursor r3 = r13.queryFinalized(r3, r7)     // Catch:{ Exception -> 0x041d }
            boolean r7 = r3.next()     // Catch:{ Exception -> 0x041d }
            r13 = -1
            if (r7 == 0) goto L_0x037f
            int r7 = r3.intValue(r12)     // Catch:{ Exception -> 0x041d }
            r12 = 1
            int r18 = r3.intValue(r12)     // Catch:{ Exception -> 0x041d }
            r12 = r18
            goto L_0x0381
        L_0x037f:
            r7 = -1
            r12 = 0
        L_0x0381:
            r3.dispose()     // Catch:{ Exception -> 0x041d }
            if (r7 == r13) goto L_0x03ad
            r0.requery()     // Catch:{ Exception -> 0x041d }
            java.lang.Object r3 = r8.valueAt(r9)     // Catch:{ Exception -> 0x041d }
            java.lang.Integer r3 = (java.lang.Integer) r3     // Catch:{ Exception -> 0x041d }
            int r3 = r3.intValue()     // Catch:{ Exception -> 0x041d }
            int r7 = r7 - r3
            r3 = 0
            int r7 = java.lang.Math.max(r3, r7)     // Catch:{ Exception -> 0x041d }
            r3 = 1
            r0.bindLong(r3, r10)     // Catch:{ Exception -> 0x041d }
            r3 = 2
            r0.bindInteger(r3, r6)     // Catch:{ Exception -> 0x041d }
            r10 = 3
            r0.bindInteger(r10, r7)     // Catch:{ Exception -> 0x041d }
            r7 = 4
            r0.bindInteger(r7, r12)     // Catch:{ Exception -> 0x041d }
            r0.step()     // Catch:{ Exception -> 0x041d }
            goto L_0x03af
        L_0x03ad:
            r3 = 2
            r10 = 3
        L_0x03af:
            int r9 = r9 + 1
            r3 = r22
            r7 = 3
            r12 = 2
            goto L_0x033f
        L_0x03b6:
            r22 = r3
            r3 = 2
            r10 = 3
            int r5 = r5 + 1
            r3 = r22
            r7 = 3
            r12 = 2
            goto L_0x032e
        L_0x03c2:
            r0.dispose()     // Catch:{ Exception -> 0x041d }
            goto L_0x03f8
        L_0x03c6:
            if (r3 != 0) goto L_0x03d8
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x041d }
            java.lang.String r3 = "UPDATE media_counts_v2 SET old = 1 WHERE 1"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r3)     // Catch:{ Exception -> 0x041d }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x041d }
            r0.dispose()     // Catch:{ Exception -> 0x041d }
            goto L_0x03f8
        L_0x03d8:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x041d }
            java.util.Locale r5 = java.util.Locale.US     // Catch:{ Exception -> 0x041d }
            java.lang.String r6 = "UPDATE media_counts_v2 SET old = 1 WHERE uid = %d"
            r7 = 1
            java.lang.Object[] r8 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x041d }
            int r3 = -r3
            java.lang.Integer r3 = java.lang.Integer.valueOf(r3)     // Catch:{ Exception -> 0x041d }
            r7 = 0
            r8[r7] = r3     // Catch:{ Exception -> 0x041d }
            java.lang.String r3 = java.lang.String.format(r5, r6, r8)     // Catch:{ Exception -> 0x041d }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r3)     // Catch:{ Exception -> 0x041d }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x041d }
            r0.dispose()     // Catch:{ Exception -> 0x041d }
        L_0x03f8:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x041d }
            java.util.Locale r3 = java.util.Locale.US     // Catch:{ Exception -> 0x041d }
            java.lang.String r5 = "DELETE FROM media_v2 WHERE mid IN(%s)"
            r6 = 1
            java.lang.Object[] r6 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x041d }
            r7 = 0
            r6[r7] = r4     // Catch:{ Exception -> 0x041d }
            java.lang.String r3 = java.lang.String.format(r3, r5, r6)     // Catch:{ Exception -> 0x041d }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r3)     // Catch:{ Exception -> 0x041d }
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.stepThis()     // Catch:{ Exception -> 0x041d }
            r0.dispose()     // Catch:{ Exception -> 0x041d }
            org.telegram.messenger.MediaDataController r0 = r20.getMediaDataController()     // Catch:{ Exception -> 0x041d }
            r3 = 0
            r0.clearBotKeyboard(r3, r2)     // Catch:{ Exception -> 0x041d }
        L_0x041c:
            return r14
        L_0x041d:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
            r2 = 0
            return r2
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$markMessagesAsDeleted$131$MessagesStorage(java.util.ArrayList, int, boolean, boolean):java.util.ArrayList");
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v5, resolved type: org.telegram.tgnet.TLRPC$TL_dialog} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v15, resolved type: org.telegram.tgnet.TLRPC$TL_dialogFolder} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v16, resolved type: org.telegram.tgnet.TLRPC$TL_dialog} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v17, resolved type: org.telegram.tgnet.TLRPC$TL_dialog} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v18, resolved type: org.telegram.tgnet.TLRPC$TL_dialog} */
    /* access modifiers changed from: private */
    /* JADX WARNING: Multi-variable type inference failed */
    /* renamed from: updateDialogsWithDeletedMessagesInternal */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void lambda$updateDialogsWithDeletedMessages$130$MessagesStorage(java.util.ArrayList<java.lang.Integer> r18, java.util.ArrayList<java.lang.Long> r19, int r20) {
        /*
            r17 = this;
            r1 = r17
            r0 = r19
            r2 = r20
            java.util.ArrayList r3 = new java.util.ArrayList     // Catch:{ Exception -> 0x026f }
            r3.<init>()     // Catch:{ Exception -> 0x026f }
            boolean r4 = r18.isEmpty()     // Catch:{ Exception -> 0x026f }
            r5 = 3
            r6 = 2
            java.lang.String r7 = ","
            r8 = 1
            r9 = 0
            if (r4 != 0) goto L_0x0093
            if (r2 == 0) goto L_0x002b
            int r4 = -r2
            long r10 = (long) r4
            java.lang.Long r4 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x026f }
            r3.add(r4)     // Catch:{ Exception -> 0x026f }
            org.telegram.SQLite.SQLiteDatabase r4 = r1.database     // Catch:{ Exception -> 0x026f }
            java.lang.String r10 = "UPDATE dialogs SET last_mid = (SELECT mid FROM messages WHERE uid = ? AND date = (SELECT MAX(date) FROM messages WHERE uid = ?)) WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r4 = r4.executeFast(r10)     // Catch:{ Exception -> 0x026f }
            goto L_0x0062
        L_0x002b:
            r4 = r18
            java.lang.String r4 = android.text.TextUtils.join(r7, r4)     // Catch:{ Exception -> 0x026f }
            org.telegram.SQLite.SQLiteDatabase r10 = r1.database     // Catch:{ Exception -> 0x026f }
            java.util.Locale r11 = java.util.Locale.US     // Catch:{ Exception -> 0x026f }
            java.lang.String r12 = "SELECT did FROM dialogs WHERE last_mid IN(%s)"
            java.lang.Object[] r13 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x026f }
            r13[r9] = r4     // Catch:{ Exception -> 0x026f }
            java.lang.String r4 = java.lang.String.format(r11, r12, r13)     // Catch:{ Exception -> 0x026f }
            java.lang.Object[] r11 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x026f }
            org.telegram.SQLite.SQLiteCursor r4 = r10.queryFinalized(r4, r11)     // Catch:{ Exception -> 0x026f }
        L_0x0045:
            boolean r10 = r4.next()     // Catch:{ Exception -> 0x026f }
            if (r10 == 0) goto L_0x0057
            long r10 = r4.longValue(r9)     // Catch:{ Exception -> 0x026f }
            java.lang.Long r10 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x026f }
            r3.add(r10)     // Catch:{ Exception -> 0x026f }
            goto L_0x0045
        L_0x0057:
            r4.dispose()     // Catch:{ Exception -> 0x026f }
            org.telegram.SQLite.SQLiteDatabase r4 = r1.database     // Catch:{ Exception -> 0x026f }
            java.lang.String r10 = "UPDATE dialogs SET last_mid = (SELECT mid FROM messages WHERE uid = ? AND date = (SELECT MAX(date) FROM messages WHERE uid = ? AND date != 0)) WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r4 = r4.executeFast(r10)     // Catch:{ Exception -> 0x026f }
        L_0x0062:
            org.telegram.SQLite.SQLiteDatabase r10 = r1.database     // Catch:{ Exception -> 0x026f }
            r10.beginTransaction()     // Catch:{ Exception -> 0x026f }
            r10 = 0
        L_0x0068:
            int r11 = r3.size()     // Catch:{ Exception -> 0x026f }
            if (r10 >= r11) goto L_0x008a
            java.lang.Object r11 = r3.get(r10)     // Catch:{ Exception -> 0x026f }
            java.lang.Long r11 = (java.lang.Long) r11     // Catch:{ Exception -> 0x026f }
            long r11 = r11.longValue()     // Catch:{ Exception -> 0x026f }
            r4.requery()     // Catch:{ Exception -> 0x026f }
            r4.bindLong(r8, r11)     // Catch:{ Exception -> 0x026f }
            r4.bindLong(r6, r11)     // Catch:{ Exception -> 0x026f }
            r4.bindLong(r5, r11)     // Catch:{ Exception -> 0x026f }
            r4.step()     // Catch:{ Exception -> 0x026f }
            int r10 = r10 + 1
            goto L_0x0068
        L_0x008a:
            r4.dispose()     // Catch:{ Exception -> 0x026f }
            org.telegram.SQLite.SQLiteDatabase r4 = r1.database     // Catch:{ Exception -> 0x026f }
            r4.commitTransaction()     // Catch:{ Exception -> 0x026f }
            goto L_0x009c
        L_0x0093:
            int r4 = -r2
            long r10 = (long) r4     // Catch:{ Exception -> 0x026f }
            java.lang.Long r4 = java.lang.Long.valueOf(r10)     // Catch:{ Exception -> 0x026f }
            r3.add(r4)     // Catch:{ Exception -> 0x026f }
        L_0x009c:
            if (r0 == 0) goto L_0x00b7
            r4 = 0
        L_0x009f:
            int r10 = r19.size()     // Catch:{ Exception -> 0x026f }
            if (r4 >= r10) goto L_0x00b7
            java.lang.Object r10 = r0.get(r4)     // Catch:{ Exception -> 0x026f }
            java.lang.Long r10 = (java.lang.Long) r10     // Catch:{ Exception -> 0x026f }
            boolean r11 = r3.contains(r10)     // Catch:{ Exception -> 0x026f }
            if (r11 != 0) goto L_0x00b4
            r3.add(r10)     // Catch:{ Exception -> 0x026f }
        L_0x00b4:
            int r4 = r4 + 1
            goto L_0x009f
        L_0x00b7:
            java.lang.String r0 = android.text.TextUtils.join(r7, r3)     // Catch:{ Exception -> 0x026f }
            org.telegram.tgnet.TLRPC$TL_messages_dialogs r3 = new org.telegram.tgnet.TLRPC$TL_messages_dialogs     // Catch:{ Exception -> 0x026f }
            r3.<init>()     // Catch:{ Exception -> 0x026f }
            java.util.ArrayList r4 = new java.util.ArrayList     // Catch:{ Exception -> 0x026f }
            r4.<init>()     // Catch:{ Exception -> 0x026f }
            java.util.ArrayList r10 = new java.util.ArrayList     // Catch:{ Exception -> 0x026f }
            r10.<init>()     // Catch:{ Exception -> 0x026f }
            java.util.ArrayList r11 = new java.util.ArrayList     // Catch:{ Exception -> 0x026f }
            r11.<init>()     // Catch:{ Exception -> 0x026f }
            java.util.ArrayList r12 = new java.util.ArrayList     // Catch:{ Exception -> 0x026f }
            r12.<init>()     // Catch:{ Exception -> 0x026f }
            org.telegram.SQLite.SQLiteDatabase r13 = r1.database     // Catch:{ Exception -> 0x026f }
            java.util.Locale r14 = java.util.Locale.US     // Catch:{ Exception -> 0x026f }
            java.lang.String r15 = "SELECT d.did, d.last_mid, d.unread_count, d.date, m.data, m.read_state, m.mid, m.send_state, m.date, d.pts, d.inbox_max, d.outbox_max, d.pinned, d.unread_count_i, d.flags, d.folder_id, d.data FROM dialogs as d LEFT JOIN messages as m ON d.last_mid = m.mid WHERE d.did IN(%s)"
            java.lang.Object[] r5 = new java.lang.Object[r8]     // Catch:{ Exception -> 0x026f }
            r5[r9] = r0     // Catch:{ Exception -> 0x026f }
            java.lang.String r0 = java.lang.String.format(r14, r15, r5)     // Catch:{ Exception -> 0x026f }
            java.lang.Object[] r5 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x026f }
            org.telegram.SQLite.SQLiteCursor r0 = r13.queryFinalized(r0, r5)     // Catch:{ Exception -> 0x026f }
        L_0x00e8:
            boolean r5 = r0.next()     // Catch:{ Exception -> 0x026f }
            if (r5 == 0) goto L_0x022b
            long r13 = r0.longValue(r9)     // Catch:{ Exception -> 0x026f }
            boolean r5 = org.telegram.messenger.DialogObject.isFolderDialogId(r13)     // Catch:{ Exception -> 0x026f }
            r15 = 15
            if (r5 == 0) goto L_0x012b
            org.telegram.tgnet.TLRPC$TL_dialogFolder r5 = new org.telegram.tgnet.TLRPC$TL_dialogFolder     // Catch:{ Exception -> 0x026f }
            r5.<init>()     // Catch:{ Exception -> 0x026f }
            r6 = 16
            boolean r16 = r0.isNull(r6)     // Catch:{ Exception -> 0x026f }
            if (r16 != 0) goto L_0x0130
            org.telegram.tgnet.NativeByteBuffer r6 = r0.byteBufferValue(r6)     // Catch:{ Exception -> 0x026f }
            if (r6 == 0) goto L_0x0118
            int r8 = r6.readInt32(r9)     // Catch:{ Exception -> 0x026f }
            org.telegram.tgnet.TLRPC$TL_folder r8 = org.telegram.tgnet.TLRPC.TL_folder.TLdeserialize(r6, r8, r9)     // Catch:{ Exception -> 0x026f }
            r5.folder = r8     // Catch:{ Exception -> 0x026f }
            goto L_0x0127
        L_0x0118:
            org.telegram.tgnet.TLRPC$TL_folder r8 = new org.telegram.tgnet.TLRPC$TL_folder     // Catch:{ Exception -> 0x026f }
            r8.<init>()     // Catch:{ Exception -> 0x026f }
            r5.folder = r8     // Catch:{ Exception -> 0x026f }
            org.telegram.tgnet.TLRPC$TL_folder r8 = r5.folder     // Catch:{ Exception -> 0x026f }
            int r9 = r0.intValue(r15)     // Catch:{ Exception -> 0x026f }
            r8.id = r9     // Catch:{ Exception -> 0x026f }
        L_0x0127:
            r6.reuse()     // Catch:{ Exception -> 0x026f }
            goto L_0x0130
        L_0x012b:
            org.telegram.tgnet.TLRPC$TL_dialog r5 = new org.telegram.tgnet.TLRPC$TL_dialog     // Catch:{ Exception -> 0x026f }
            r5.<init>()     // Catch:{ Exception -> 0x026f }
        L_0x0130:
            r5.id = r13     // Catch:{ Exception -> 0x026f }
            r6 = 1
            int r8 = r0.intValue(r6)     // Catch:{ Exception -> 0x026f }
            r5.top_message = r8     // Catch:{ Exception -> 0x026f }
            r6 = 10
            int r6 = r0.intValue(r6)     // Catch:{ Exception -> 0x026f }
            r5.read_inbox_max_id = r6     // Catch:{ Exception -> 0x026f }
            r6 = 11
            int r6 = r0.intValue(r6)     // Catch:{ Exception -> 0x026f }
            r5.read_outbox_max_id = r6     // Catch:{ Exception -> 0x026f }
            r6 = 2
            int r8 = r0.intValue(r6)     // Catch:{ Exception -> 0x026f }
            r5.unread_count = r8     // Catch:{ Exception -> 0x026f }
            r8 = 13
            int r8 = r0.intValue(r8)     // Catch:{ Exception -> 0x026f }
            r5.unread_mentions_count = r8     // Catch:{ Exception -> 0x026f }
            r8 = 3
            int r9 = r0.intValue(r8)     // Catch:{ Exception -> 0x026f }
            r5.last_message_date = r9     // Catch:{ Exception -> 0x026f }
            r9 = 9
            int r9 = r0.intValue(r9)     // Catch:{ Exception -> 0x026f }
            r5.pts = r9     // Catch:{ Exception -> 0x026f }
            if (r2 != 0) goto L_0x016b
            r9 = 0
            goto L_0x016c
        L_0x016b:
            r9 = 1
        L_0x016c:
            r5.flags = r9     // Catch:{ Exception -> 0x026f }
            r9 = 12
            int r9 = r0.intValue(r9)     // Catch:{ Exception -> 0x026f }
            r5.pinnedNum = r9     // Catch:{ Exception -> 0x026f }
            int r9 = r5.pinnedNum     // Catch:{ Exception -> 0x026f }
            if (r9 == 0) goto L_0x017c
            r9 = 1
            goto L_0x017d
        L_0x017c:
            r9 = 0
        L_0x017d:
            r5.pinned = r9     // Catch:{ Exception -> 0x026f }
            r9 = 14
            int r9 = r0.intValue(r9)     // Catch:{ Exception -> 0x026f }
            r13 = 1
            r9 = r9 & r13
            if (r9 == 0) goto L_0x018b
            r9 = 1
            goto L_0x018c
        L_0x018b:
            r9 = 0
        L_0x018c:
            r5.unread_mark = r9     // Catch:{ Exception -> 0x026f }
            int r9 = r0.intValue(r15)     // Catch:{ Exception -> 0x026f }
            r5.folder_id = r9     // Catch:{ Exception -> 0x026f }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r9 = r3.dialogs     // Catch:{ Exception -> 0x026f }
            r9.add(r5)     // Catch:{ Exception -> 0x026f }
            r9 = 4
            org.telegram.tgnet.NativeByteBuffer r9 = r0.byteBufferValue(r9)     // Catch:{ Exception -> 0x026f }
            if (r9 == 0) goto L_0x01e2
            r14 = 0
            int r15 = r9.readInt32(r14)     // Catch:{ Exception -> 0x026f }
            org.telegram.tgnet.TLRPC$Message r15 = org.telegram.tgnet.TLRPC.Message.TLdeserialize(r9, r15, r14)     // Catch:{ Exception -> 0x026f }
            org.telegram.messenger.UserConfig r6 = r17.getUserConfig()     // Catch:{ Exception -> 0x026f }
            int r6 = r6.clientUserId     // Catch:{ Exception -> 0x026f }
            r15.readAttachPath(r9, r6)     // Catch:{ Exception -> 0x026f }
            r9.reuse()     // Catch:{ Exception -> 0x026f }
            r6 = 5
            int r6 = r0.intValue(r6)     // Catch:{ Exception -> 0x026f }
            org.telegram.messenger.MessageObject.setUnreadFlags(r15, r6)     // Catch:{ Exception -> 0x026f }
            r6 = 6
            int r6 = r0.intValue(r6)     // Catch:{ Exception -> 0x026f }
            r15.id = r6     // Catch:{ Exception -> 0x026f }
            r6 = 7
            int r6 = r0.intValue(r6)     // Catch:{ Exception -> 0x026f }
            r15.send_state = r6     // Catch:{ Exception -> 0x026f }
            r6 = 8
            int r6 = r0.intValue(r6)     // Catch:{ Exception -> 0x026f }
            if (r6 == 0) goto L_0x01d5
            r5.last_message_date = r6     // Catch:{ Exception -> 0x026f }
        L_0x01d5:
            long r8 = r5.id     // Catch:{ Exception -> 0x026f }
            r15.dialog_id = r8     // Catch:{ Exception -> 0x026f }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r6 = r3.messages     // Catch:{ Exception -> 0x026f }
            r6.add(r15)     // Catch:{ Exception -> 0x026f }
            addUsersAndChatsFromMessage(r15, r10, r11)     // Catch:{ Exception -> 0x026f }
            goto L_0x01e3
        L_0x01e2:
            r14 = 0
        L_0x01e3:
            long r8 = r5.id     // Catch:{ Exception -> 0x026f }
            int r6 = (int) r8     // Catch:{ Exception -> 0x026f }
            long r8 = r5.id     // Catch:{ Exception -> 0x026f }
            r5 = 32
            long r8 = r8 >> r5
            int r5 = (int) r8     // Catch:{ Exception -> 0x026f }
            if (r6 == 0) goto L_0x0215
            if (r6 <= 0) goto L_0x0202
            java.lang.Integer r5 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x026f }
            boolean r5 = r10.contains(r5)     // Catch:{ Exception -> 0x026f }
            if (r5 != 0) goto L_0x0226
            java.lang.Integer r5 = java.lang.Integer.valueOf(r6)     // Catch:{ Exception -> 0x026f }
            r10.add(r5)     // Catch:{ Exception -> 0x026f }
            goto L_0x0226
        L_0x0202:
            int r5 = -r6
            java.lang.Integer r6 = java.lang.Integer.valueOf(r5)     // Catch:{ Exception -> 0x026f }
            boolean r6 = r11.contains(r6)     // Catch:{ Exception -> 0x026f }
            if (r6 != 0) goto L_0x0226
            java.lang.Integer r5 = java.lang.Integer.valueOf(r5)     // Catch:{ Exception -> 0x026f }
            r11.add(r5)     // Catch:{ Exception -> 0x026f }
            goto L_0x0226
        L_0x0215:
            java.lang.Integer r6 = java.lang.Integer.valueOf(r5)     // Catch:{ Exception -> 0x026f }
            boolean r6 = r12.contains(r6)     // Catch:{ Exception -> 0x026f }
            if (r6 != 0) goto L_0x0226
            java.lang.Integer r5 = java.lang.Integer.valueOf(r5)     // Catch:{ Exception -> 0x026f }
            r12.add(r5)     // Catch:{ Exception -> 0x026f }
        L_0x0226:
            r6 = 2
            r8 = 1
            r9 = 0
            goto L_0x00e8
        L_0x022b:
            r0.dispose()     // Catch:{ Exception -> 0x026f }
            boolean r0 = r12.isEmpty()     // Catch:{ Exception -> 0x026f }
            if (r0 != 0) goto L_0x023b
            java.lang.String r0 = android.text.TextUtils.join(r7, r12)     // Catch:{ Exception -> 0x026f }
            r1.getEncryptedChatsInternal(r0, r4, r10)     // Catch:{ Exception -> 0x026f }
        L_0x023b:
            boolean r0 = r11.isEmpty()     // Catch:{ Exception -> 0x026f }
            if (r0 != 0) goto L_0x024a
            java.lang.String r0 = android.text.TextUtils.join(r7, r11)     // Catch:{ Exception -> 0x026f }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r2 = r3.chats     // Catch:{ Exception -> 0x026f }
            r1.getChatsInternal(r0, r2)     // Catch:{ Exception -> 0x026f }
        L_0x024a:
            boolean r0 = r10.isEmpty()     // Catch:{ Exception -> 0x026f }
            if (r0 != 0) goto L_0x0259
            java.lang.String r0 = android.text.TextUtils.join(r7, r10)     // Catch:{ Exception -> 0x026f }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r2 = r3.users     // Catch:{ Exception -> 0x026f }
            r1.getUsersInternal(r0, r2)     // Catch:{ Exception -> 0x026f }
        L_0x0259:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r0 = r3.dialogs     // Catch:{ Exception -> 0x026f }
            boolean r0 = r0.isEmpty()     // Catch:{ Exception -> 0x026f }
            if (r0 == 0) goto L_0x0267
            boolean r0 = r4.isEmpty()     // Catch:{ Exception -> 0x026f }
            if (r0 != 0) goto L_0x0273
        L_0x0267:
            org.telegram.messenger.MessagesController r0 = r17.getMessagesController()     // Catch:{ Exception -> 0x026f }
            r0.processDialogsUpdate(r3, r4)     // Catch:{ Exception -> 0x026f }
            goto L_0x0273
        L_0x026f:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x0273:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$updateDialogsWithDeletedMessages$130$MessagesStorage(java.util.ArrayList, java.util.ArrayList, int):void");
    }

    public void updateDialogsWithDeletedMessages(ArrayList<Integer> arrayList, ArrayList<Long> arrayList2, boolean z, int i) {
        if (arrayList.isEmpty() && i == 0) {
            return;
        }
        if (z) {
            this.storageQueue.postRunnable(new Runnable(arrayList, arrayList2, i) {
                private final /* synthetic */ ArrayList f$1;
                private final /* synthetic */ ArrayList f$2;
                private final /* synthetic */ int f$3;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                }

                public final void run() {
                    MessagesStorage.this.lambda$updateDialogsWithDeletedMessages$130$MessagesStorage(this.f$1, this.f$2, this.f$3);
                }
            });
        } else {
            lambda$updateDialogsWithDeletedMessages$130$MessagesStorage(arrayList, arrayList2, i);
        }
    }

    public ArrayList<Long> markMessagesAsDeleted(ArrayList<Integer> arrayList, boolean z, int i, boolean z2, boolean z3) {
        if (arrayList.isEmpty()) {
            return null;
        }
        if (!z) {
            return lambda$markMessagesAsDeleted$131$MessagesStorage(arrayList, i, z2, z3);
        }
        this.storageQueue.postRunnable(new Runnable(arrayList, i, z2, z3) {
            private final /* synthetic */ ArrayList f$1;
            private final /* synthetic */ int f$2;
            private final /* synthetic */ boolean f$3;
            private final /* synthetic */ boolean f$4;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
                this.f$4 = r5;
            }

            public final void run() {
                MessagesStorage.this.lambda$markMessagesAsDeleted$131$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4);
            }
        });
        return null;
    }

    /* access modifiers changed from: private */
    /* renamed from: markMessagesAsDeletedInternal */
    public ArrayList<Long> lambda$markMessagesAsDeleted$132$MessagesStorage(int i, int i2, boolean z) {
        int i3;
        int i4;
        NativeByteBuffer byteBufferValue;
        int i5 = i;
        try {
            ArrayList<Long> arrayList = new ArrayList<>();
            LongSparseArray longSparseArray = new LongSparseArray();
            long j = ((long) i2) | (((long) i5) << 32);
            ArrayList arrayList2 = new ArrayList();
            int clientUserId = getUserConfig().getClientUserId();
            int i6 = -i5;
            int i7 = 0;
            SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT uid, data, read_state, out, mention FROM messages WHERE uid = %d AND mid <= %d", new Object[]{Integer.valueOf(i6), Long.valueOf(j)}), new Object[0]);
            while (queryFinalized.next()) {
                try {
                    long longValue = queryFinalized.longValue(i7);
                    if (longValue != ((long) clientUserId)) {
                        int intValue = queryFinalized.intValue(2);
                        if (queryFinalized.intValue(3) == 0) {
                            Integer[] numArr = (Integer[]) longSparseArray.get(longValue);
                            if (numArr == null) {
                                numArr = new Integer[]{0, 0};
                                longSparseArray.put(longValue, numArr);
                            }
                            if (intValue < 2) {
                                Integer num = numArr[1];
                                numArr[1] = Integer.valueOf(numArr[1].intValue() + 1);
                            }
                            if (intValue == 0 || intValue == 2) {
                                Integer num2 = numArr[0];
                                numArr[0] = Integer.valueOf(numArr[0].intValue() + 1);
                            }
                        }
                    }
                    if ((((int) longValue) == 0 || z) && (byteBufferValue = queryFinalized.byteBufferValue(1)) != null) {
                        TLRPC.Message TLdeserialize = TLRPC.Message.TLdeserialize(byteBufferValue, byteBufferValue.readInt32(false), false);
                        TLdeserialize.readAttachPath(byteBufferValue, getUserConfig().clientUserId);
                        byteBufferValue.reuse();
                        addFilesToDelete(TLdeserialize, arrayList2, false);
                    }
                    i7 = 0;
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                }
            }
            queryFinalized.dispose();
            getFileLoader().deleteFiles(arrayList2, 0);
            for (int i8 = 0; i8 < longSparseArray.size(); i8++) {
                long keyAt = longSparseArray.keyAt(i8);
                Integer[] numArr2 = (Integer[]) longSparseArray.valueAt(i8);
                SQLiteDatabase sQLiteDatabase = this.database;
                SQLiteCursor queryFinalized2 = sQLiteDatabase.queryFinalized("SELECT unread_count, unread_count_i FROM dialogs WHERE did = " + keyAt, new Object[0]);
                if (queryFinalized2.next()) {
                    i4 = queryFinalized2.intValue(0);
                    i3 = queryFinalized2.intValue(1);
                } else {
                    i4 = 0;
                    i3 = 0;
                }
                queryFinalized2.dispose();
                arrayList.add(Long.valueOf(keyAt));
                SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE dialogs SET unread_count = ?, unread_count_i = ? WHERE did = ?");
                executeFast.requery();
                executeFast.bindInteger(1, Math.max(0, i4 - numArr2[0].intValue()));
                executeFast.bindInteger(2, Math.max(0, i3 - numArr2[1].intValue()));
                executeFast.bindLong(3, keyAt);
                executeFast.step();
                executeFast.dispose();
            }
            this.database.executeFast(String.format(Locale.US, "DELETE FROM messages WHERE uid = %d AND mid <= %d", new Object[]{Integer.valueOf(i6), Long.valueOf(j)})).stepThis().dispose();
            this.database.executeFast(String.format(Locale.US, "DELETE FROM media_v2 WHERE uid = %d AND mid <= %d", new Object[]{Integer.valueOf(i6), Long.valueOf(j)})).stepThis().dispose();
            this.database.executeFast(String.format(Locale.US, "UPDATE media_counts_v2 SET old = 1 WHERE uid = %d", new Object[]{Integer.valueOf(i6)})).stepThis().dispose();
            return arrayList;
        } catch (Exception e2) {
            FileLog.e((Throwable) e2);
            return null;
        }
    }

    public ArrayList<Long> markMessagesAsDeleted(int i, int i2, boolean z, boolean z2) {
        if (!z) {
            return lambda$markMessagesAsDeleted$132$MessagesStorage(i, i2, z2);
        }
        this.storageQueue.postRunnable(new Runnable(i, i2, z2) {
            private final /* synthetic */ int f$1;
            private final /* synthetic */ int f$2;
            private final /* synthetic */ boolean f$3;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$markMessagesAsDeleted$132$MessagesStorage(this.f$1, this.f$2, this.f$3);
            }
        });
        return null;
    }

    private void fixUnsupportedMedia(TLRPC.Message message) {
        if (message != null) {
            TLRPC.MessageMedia messageMedia = message.media;
            if (messageMedia instanceof TLRPC.TL_messageMediaUnsupported_old) {
                if (messageMedia.bytes.length == 0) {
                    messageMedia.bytes = new byte[1];
                    messageMedia.bytes[0] = 109;
                }
            } else if (messageMedia instanceof TLRPC.TL_messageMediaUnsupported) {
                message.media = new TLRPC.TL_messageMediaUnsupported_old();
                TLRPC.MessageMedia messageMedia2 = message.media;
                messageMedia2.bytes = new byte[1];
                messageMedia2.bytes[0] = 109;
                message.flags |= 512;
            }
        }
    }

    private void doneHolesInTable(String str, long j, int i) throws Exception {
        if (i == 0) {
            SQLiteDatabase sQLiteDatabase = this.database;
            Locale locale = Locale.US;
            sQLiteDatabase.executeFast(String.format(locale, "DELETE FROM " + str + " WHERE uid = %d", new Object[]{Long.valueOf(j)})).stepThis().dispose();
        } else {
            SQLiteDatabase sQLiteDatabase2 = this.database;
            Locale locale2 = Locale.US;
            sQLiteDatabase2.executeFast(String.format(locale2, "DELETE FROM " + str + " WHERE uid = %d AND start = 0", new Object[]{Long.valueOf(j)})).stepThis().dispose();
        }
        SQLiteDatabase sQLiteDatabase3 = this.database;
        SQLitePreparedStatement executeFast = sQLiteDatabase3.executeFast("REPLACE INTO " + str + " VALUES(?, ?, ?)");
        executeFast.requery();
        executeFast.bindLong(1, j);
        executeFast.bindInteger(2, 1);
        executeFast.bindInteger(3, 1);
        executeFast.step();
        executeFast.dispose();
    }

    public void doneHolesInMedia(long j, int i, int i2) throws Exception {
        if (i2 == -1) {
            if (i == 0) {
                this.database.executeFast(String.format(Locale.US, "DELETE FROM media_holes_v2 WHERE uid = %d", new Object[]{Long.valueOf(j)})).stepThis().dispose();
            } else {
                this.database.executeFast(String.format(Locale.US, "DELETE FROM media_holes_v2 WHERE uid = %d AND start = 0", new Object[]{Long.valueOf(j)})).stepThis().dispose();
            }
            SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO media_holes_v2 VALUES(?, ?, ?, ?)");
            for (int i3 = 0; i3 < 5; i3++) {
                executeFast.requery();
                executeFast.bindLong(1, j);
                executeFast.bindInteger(2, i3);
                executeFast.bindInteger(3, 1);
                executeFast.bindInteger(4, 1);
                executeFast.step();
            }
            executeFast.dispose();
            return;
        }
        if (i == 0) {
            this.database.executeFast(String.format(Locale.US, "DELETE FROM media_holes_v2 WHERE uid = %d AND type = %d", new Object[]{Long.valueOf(j), Integer.valueOf(i2)})).stepThis().dispose();
        } else {
            this.database.executeFast(String.format(Locale.US, "DELETE FROM media_holes_v2 WHERE uid = %d AND type = %d AND start = 0", new Object[]{Long.valueOf(j), Integer.valueOf(i2)})).stepThis().dispose();
        }
        SQLitePreparedStatement executeFast2 = this.database.executeFast("REPLACE INTO media_holes_v2 VALUES(?, ?, ?, ?)");
        executeFast2.requery();
        executeFast2.bindLong(1, j);
        executeFast2.bindInteger(2, i2);
        executeFast2.bindInteger(3, 1);
        executeFast2.bindInteger(4, 1);
        executeFast2.step();
        executeFast2.dispose();
    }

    private class Hole {
        public int end;
        public int start;
        public int type;

        public Hole(int i, int i2) {
            this.start = i;
            this.end = i2;
        }

        public Hole(int i, int i2, int i3) {
            this.type = i;
            this.start = i2;
            this.end = i3;
        }
    }

    public void closeHolesInMedia(long j, int i, int i2, int i3) {
        SQLiteCursor sQLiteCursor;
        long j2 = j;
        int i4 = i;
        int i5 = i2;
        int i6 = 4;
        if (i3 < 0) {
            try {
                sQLiteCursor = this.database.queryFinalized(String.format(Locale.US, "SELECT type, start, end FROM media_holes_v2 WHERE uid = %d AND type >= 0 AND ((end >= %d AND end <= %d) OR (start >= %d AND start <= %d) OR (start >= %d AND end <= %d) OR (start <= %d AND end >= %d))", new Object[]{Long.valueOf(j), Integer.valueOf(i), Integer.valueOf(i2), Integer.valueOf(i), Integer.valueOf(i2), Integer.valueOf(i), Integer.valueOf(i2), Integer.valueOf(i), Integer.valueOf(i2)}), new Object[0]);
            } catch (Exception e) {
                FileLog.e((Throwable) e);
                return;
            }
        } else {
            sQLiteCursor = this.database.queryFinalized(String.format(Locale.US, "SELECT type, start, end FROM media_holes_v2 WHERE uid = %d AND type = %d AND ((end >= %d AND end <= %d) OR (start >= %d AND start <= %d) OR (start >= %d AND end <= %d) OR (start <= %d AND end >= %d))", new Object[]{Long.valueOf(j), Integer.valueOf(i3), Integer.valueOf(i), Integer.valueOf(i2), Integer.valueOf(i), Integer.valueOf(i2), Integer.valueOf(i), Integer.valueOf(i2), Integer.valueOf(i), Integer.valueOf(i2)}), new Object[0]);
        }
        ArrayList arrayList = null;
        while (sQLiteCursor.next()) {
            if (arrayList == null) {
                arrayList = new ArrayList();
            }
            int intValue = sQLiteCursor.intValue(0);
            int intValue2 = sQLiteCursor.intValue(1);
            int intValue3 = sQLiteCursor.intValue(2);
            if (intValue2 != intValue3 || intValue2 != 1) {
                arrayList.add(new Hole(intValue, intValue2, intValue3));
            }
        }
        sQLiteCursor.dispose();
        if (arrayList != null) {
            int i7 = 0;
            while (i7 < arrayList.size()) {
                Hole hole = (Hole) arrayList.get(i7);
                if (i5 >= hole.end - 1) {
                    if (i4 <= hole.start + 1) {
                        SQLiteDatabase sQLiteDatabase = this.database;
                        Locale locale = Locale.US;
                        Object[] objArr = new Object[i6];
                        objArr[0] = Long.valueOf(j);
                        objArr[1] = Integer.valueOf(hole.type);
                        objArr[2] = Integer.valueOf(hole.start);
                        objArr[3] = Integer.valueOf(hole.end);
                        sQLiteDatabase.executeFast(String.format(locale, "DELETE FROM media_holes_v2 WHERE uid = %d AND type = %d AND start = %d AND end = %d", objArr)).stepThis().dispose();
                        i6 = 4;
                        i7++;
                    }
                }
                if (i5 >= hole.end - 1) {
                    if (hole.end != i4) {
                        try {
                            this.database.executeFast(String.format(Locale.US, "UPDATE media_holes_v2 SET end = %d WHERE uid = %d AND type = %d AND start = %d AND end = %d", new Object[]{Integer.valueOf(i), Long.valueOf(j), Integer.valueOf(hole.type), Integer.valueOf(hole.start), Integer.valueOf(hole.end)})).stepThis().dispose();
                        } catch (Exception e2) {
                            FileLog.e((Throwable) e2);
                        }
                    }
                    i6 = 4;
                    i7++;
                } else if (i4 <= hole.start + 1) {
                    if (hole.start != i5) {
                        try {
                            this.database.executeFast(String.format(Locale.US, "UPDATE media_holes_v2 SET start = %d WHERE uid = %d AND type = %d AND start = %d AND end = %d", new Object[]{Integer.valueOf(i2), Long.valueOf(j), Integer.valueOf(hole.type), Integer.valueOf(hole.start), Integer.valueOf(hole.end)})).stepThis().dispose();
                        } catch (Exception e3) {
                            FileLog.e((Throwable) e3);
                        }
                    }
                    i6 = 4;
                    i7++;
                } else {
                    this.database.executeFast(String.format(Locale.US, "DELETE FROM media_holes_v2 WHERE uid = %d AND type = %d AND start = %d AND end = %d", new Object[]{Long.valueOf(j), Integer.valueOf(hole.type), Integer.valueOf(hole.start), Integer.valueOf(hole.end)})).stepThis().dispose();
                    SQLitePreparedStatement executeFast = this.database.executeFast("REPLACE INTO media_holes_v2 VALUES(?, ?, ?, ?)");
                    executeFast.requery();
                    executeFast.bindLong(1, j2);
                    executeFast.bindInteger(2, hole.type);
                    executeFast.bindInteger(3, hole.start);
                    executeFast.bindInteger(4, i4);
                    executeFast.step();
                    executeFast.requery();
                    executeFast.bindLong(1, j2);
                    executeFast.bindInteger(2, hole.type);
                    executeFast.bindInteger(3, i5);
                    i6 = 4;
                    executeFast.bindInteger(4, hole.end);
                    executeFast.step();
                    executeFast.dispose();
                    i7++;
                }
            }
        }
    }

    private void closeHolesInTable(String str, long j, int i, int i2) {
        String str2 = str;
        long j2 = j;
        int i3 = i;
        int i4 = i2;
        try {
            SQLiteDatabase sQLiteDatabase = this.database;
            Locale locale = Locale.US;
            int i5 = 1;
            SQLiteCursor queryFinalized = sQLiteDatabase.queryFinalized(String.format(locale, "SELECT start, end FROM " + str2 + " WHERE uid = %d AND ((end >= %d AND end <= %d) OR (start >= %d AND start <= %d) OR (start >= %d AND end <= %d) OR (start <= %d AND end >= %d))", new Object[]{Long.valueOf(j), Integer.valueOf(i), Integer.valueOf(i2), Integer.valueOf(i), Integer.valueOf(i2), Integer.valueOf(i), Integer.valueOf(i2), Integer.valueOf(i), Integer.valueOf(i2)}), new Object[0]);
            ArrayList arrayList = null;
            while (queryFinalized.next()) {
                if (arrayList == null) {
                    arrayList = new ArrayList();
                }
                int intValue = queryFinalized.intValue(0);
                int intValue2 = queryFinalized.intValue(1);
                if (intValue != intValue2 || intValue != 1) {
                    arrayList.add(new Hole(intValue, intValue2));
                }
            }
            queryFinalized.dispose();
            if (arrayList != null) {
                int i6 = 0;
                while (i6 < arrayList.size()) {
                    Hole hole = (Hole) arrayList.get(i6);
                    if (i4 >= hole.end - i5) {
                        if (i3 <= hole.start + i5) {
                            SQLiteDatabase sQLiteDatabase2 = this.database;
                            Locale locale2 = Locale.US;
                            sQLiteDatabase2.executeFast(String.format(locale2, "DELETE FROM " + str2 + " WHERE uid = %d AND start = %d AND end = %d", new Object[]{Long.valueOf(j), Integer.valueOf(hole.start), Integer.valueOf(hole.end)})).stepThis().dispose();
                            i6++;
                            i5 = 1;
                        }
                    }
                    if (i4 >= hole.end - 1) {
                        if (hole.end != i3) {
                            try {
                                SQLiteDatabase sQLiteDatabase3 = this.database;
                                Locale locale3 = Locale.US;
                                sQLiteDatabase3.executeFast(String.format(locale3, "UPDATE " + str2 + " SET end = %d WHERE uid = %d AND start = %d AND end = %d", new Object[]{Integer.valueOf(i), Long.valueOf(j), Integer.valueOf(hole.start), Integer.valueOf(hole.end)})).stepThis().dispose();
                            } catch (Exception e) {
                                FileLog.e((Throwable) e);
                            }
                        }
                        i6++;
                        i5 = 1;
                    } else if (i3 <= hole.start + 1) {
                        if (hole.start != i4) {
                            try {
                                SQLiteDatabase sQLiteDatabase4 = this.database;
                                Locale locale4 = Locale.US;
                                sQLiteDatabase4.executeFast(String.format(locale4, "UPDATE " + str2 + " SET start = %d WHERE uid = %d AND start = %d AND end = %d", new Object[]{Integer.valueOf(i2), Long.valueOf(j), Integer.valueOf(hole.start), Integer.valueOf(hole.end)})).stepThis().dispose();
                            } catch (Exception e2) {
                                FileLog.e((Throwable) e2);
                            }
                        }
                        i6++;
                        i5 = 1;
                    } else {
                        SQLiteDatabase sQLiteDatabase5 = this.database;
                        Locale locale5 = Locale.US;
                        sQLiteDatabase5.executeFast(String.format(locale5, "DELETE FROM " + str2 + " WHERE uid = %d AND start = %d AND end = %d", new Object[]{Long.valueOf(j), Integer.valueOf(hole.start), Integer.valueOf(hole.end)})).stepThis().dispose();
                        SQLiteDatabase sQLiteDatabase6 = this.database;
                        SQLitePreparedStatement executeFast = sQLiteDatabase6.executeFast("REPLACE INTO " + str2 + " VALUES(?, ?, ?)");
                        executeFast.requery();
                        executeFast.bindLong(1, j2);
                        executeFast.bindInteger(2, hole.start);
                        executeFast.bindInteger(3, i3);
                        executeFast.step();
                        executeFast.requery();
                        executeFast.bindLong(1, j2);
                        executeFast.bindInteger(2, i4);
                        executeFast.bindInteger(3, hole.end);
                        executeFast.step();
                        executeFast.dispose();
                        i6++;
                        i5 = 1;
                    }
                }
            }
        } catch (Exception e3) {
            FileLog.e((Throwable) e3);
        }
    }

    public void replaceMessageIfExists(TLRPC.Message message, int i, ArrayList<TLRPC.User> arrayList, ArrayList<TLRPC.Chat> arrayList2, boolean z) {
        if (message != null) {
            this.storageQueue.postRunnable(new Runnable(message, z, arrayList, arrayList2, i) {
                private final /* synthetic */ TLRPC.Message f$1;
                private final /* synthetic */ boolean f$2;
                private final /* synthetic */ ArrayList f$3;
                private final /* synthetic */ ArrayList f$4;
                private final /* synthetic */ int f$5;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                    this.f$4 = r5;
                    this.f$5 = r6;
                }

                public final void run() {
                    MessagesStorage.this.lambda$replaceMessageIfExists$134$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5);
                }
            });
        }
    }

    /* JADX WARNING: Code restructure failed: missing block: B:12:0x003c, code lost:
        if (r5 != null) goto L_0x003e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:13:0x003e, code lost:
        r5.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:18:0x0049, code lost:
        if (r5 == null) goto L_0x004c;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:20:?, code lost:
        r1.database.beginTransaction();
        r0 = r1.database.executeFast("REPLACE INTO messages VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?, ?)");
        r5 = r1.database.executeFast("REPLACE INTO media_v2 VALUES(?, ?, ?, ?, ?)");
     */
    /* JADX WARNING: Code restructure failed: missing block: B:21:0x0067, code lost:
        if (r4.dialog_id != 0) goto L_0x006c;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:22:0x0069, code lost:
        org.telegram.messenger.MessageObject.getDialogId(r16);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:23:0x006c, code lost:
        fixUnsupportedMedia(r16);
        r0.requery();
        r8 = new org.telegram.tgnet.NativeByteBuffer(r16.getObjectSize());
        r4.serializeToStream(r8);
        r0.bindLong(1, r2);
        r0.bindLong(2, r4.dialog_id);
        r0.bindInteger(3, org.telegram.messenger.MessageObject.getUnreadFlags(r16));
        r0.bindInteger(4, r4.send_state);
        r0.bindInteger(5, r4.date);
        r0.bindByteBuffer(6, r8);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:24:0x00a4, code lost:
        if (org.telegram.messenger.MessageObject.isOut(r16) != false) goto L_0x00ad;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:26:0x00a8, code lost:
        if (r4.from_scheduled == false) goto L_0x00ab;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:28:0x00ab, code lost:
        r14 = 0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:29:0x00ad, code lost:
        r14 = 1;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:30:0x00ae, code lost:
        r0.bindInteger(7, r14);
        r0.bindInteger(8, r4.ttl);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:31:0x00be, code lost:
        if ((r4.flags & 1024) == 0) goto L_0x00c6;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:32:0x00c0, code lost:
        r0.bindInteger(9, r4.views);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:33:0x00c6, code lost:
        r0.bindInteger(9, getMessageMediaType(r16));
     */
    /* JADX WARNING: Code restructure failed: missing block: B:34:0x00cd, code lost:
        r0.bindInteger(10, 0);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:35:0x00d6, code lost:
        if (r4.mentioned == false) goto L_0x00da;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:36:0x00d8, code lost:
        r14 = 1;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:37:0x00da, code lost:
        r14 = 0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:38:0x00db, code lost:
        r0.bindInteger(11, r14);
        r0.step();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:39:0x00e5, code lost:
        if (org.telegram.messenger.MediaDataController.canAddMessageToMedia(r16) == false) goto L_0x0104;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:40:0x00e7, code lost:
        r5.requery();
        r5.bindLong(1, r2);
        r5.bindLong(2, r4.dialog_id);
        r5.bindInteger(3, r4.date);
        r5.bindInteger(4, org.telegram.messenger.MediaDataController.getMediaType(r16));
        r5.bindByteBuffer(5, r8);
        r5.step();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:41:0x0104, code lost:
        r8.reuse();
        r0.dispose();
        r5.dispose();
        r1.database.commitTransaction();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:42:0x0112, code lost:
        if (r17 == false) goto L_?;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:43:0x0114, code lost:
        r5 = new java.util.HashMap();
        r0 = new java.util.HashMap();
        r2 = 0;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:45:0x0123, code lost:
        if (r2 >= r18.size()) goto L_0x0139;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:46:0x0125, code lost:
        r7 = (org.telegram.tgnet.TLRPC.User) r18.get(r2);
        r5.put(java.lang.Integer.valueOf(r7.id), r7);
        r2 = r2 + 1;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:48:0x013d, code lost:
        if (r6 >= r19.size()) goto L_0x0153;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:49:0x013f, code lost:
        r3 = (org.telegram.tgnet.TLRPC.Chat) r19.get(r6);
        r0.put(java.lang.Integer.valueOf(r3.id), r3);
        r6 = r6 + 1;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:50:0x0153, code lost:
        r2 = new org.telegram.messenger.MessageObject(r20, r16, (java.util.AbstractMap<java.lang.Integer, org.telegram.tgnet.TLRPC.User>) r5, (java.util.AbstractMap<java.lang.Integer, org.telegram.tgnet.TLRPC.Chat>) r0, true);
        r0 = new java.util.ArrayList();
        r0.add(r2);
        org.telegram.messenger.AndroidUtilities.runOnUIThread(new org.telegram.messenger.$$Lambda$MessagesStorage$7AwElTDLipQXVyMJVyZGZ2nitE(r15, r2, r0));
     */
    /* JADX WARNING: Code restructure failed: missing block: B:61:?, code lost:
        return;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:62:?, code lost:
        return;
     */
    /* JADX WARNING: No exception handlers in catch block: Catch:{  } */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$replaceMessageIfExists$134$MessagesStorage(org.telegram.tgnet.TLRPC.Message r16, boolean r17, java.util.ArrayList r18, java.util.ArrayList r19, int r20) {
        /*
            r15 = this;
            r1 = r15
            r4 = r16
            int r0 = r4.id     // Catch:{ Exception -> 0x0176 }
            long r2 = (long) r0     // Catch:{ Exception -> 0x0176 }
            org.telegram.tgnet.TLRPC$Peer r0 = r4.to_id     // Catch:{ Exception -> 0x0176 }
            int r0 = r0.channel_id     // Catch:{ Exception -> 0x0176 }
            org.telegram.tgnet.TLRPC$Peer r5 = r4.to_id     // Catch:{ Exception -> 0x0176 }
            int r5 = r5.channel_id     // Catch:{ Exception -> 0x0176 }
            if (r5 == 0) goto L_0x0015
            long r5 = (long) r0
            r0 = 32
            long r5 = r5 << r0
            long r2 = r2 | r5
        L_0x0015:
            r5 = 0
            r6 = 0
            r7 = 1
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0045 }
            java.util.Locale r8 = java.util.Locale.US     // Catch:{ Exception -> 0x0045 }
            java.lang.String r9 = "SELECT uid FROM messages WHERE mid = %d LIMIT 1"
            java.lang.Object[] r10 = new java.lang.Object[r7]     // Catch:{ Exception -> 0x0045 }
            java.lang.Long r11 = java.lang.Long.valueOf(r2)     // Catch:{ Exception -> 0x0045 }
            r10[r6] = r11     // Catch:{ Exception -> 0x0045 }
            java.lang.String r8 = java.lang.String.format(r8, r9, r10)     // Catch:{ Exception -> 0x0045 }
            java.lang.Object[] r9 = new java.lang.Object[r6]     // Catch:{ Exception -> 0x0045 }
            org.telegram.SQLite.SQLiteCursor r5 = r0.queryFinalized(r8, r9)     // Catch:{ Exception -> 0x0045 }
            boolean r0 = r5.next()     // Catch:{ Exception -> 0x0045 }
            if (r0 != 0) goto L_0x003c
            if (r5 == 0) goto L_0x003b
            r5.dispose()     // Catch:{ Exception -> 0x0176 }
        L_0x003b:
            return
        L_0x003c:
            if (r5 == 0) goto L_0x004c
        L_0x003e:
            r5.dispose()     // Catch:{ Exception -> 0x0176 }
            goto L_0x004c
        L_0x0042:
            r0 = move-exception
            goto L_0x0170
        L_0x0045:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ all -> 0x0042 }
            if (r5 == 0) goto L_0x004c
            goto L_0x003e
        L_0x004c:
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0176 }
            r0.beginTransaction()     // Catch:{ Exception -> 0x0176 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0176 }
            java.lang.String r5 = "REPLACE INTO messages VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r0 = r0.executeFast(r5)     // Catch:{ Exception -> 0x0176 }
            org.telegram.SQLite.SQLiteDatabase r5 = r1.database     // Catch:{ Exception -> 0x0176 }
            java.lang.String r8 = "REPLACE INTO media_v2 VALUES(?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r5 = r5.executeFast(r8)     // Catch:{ Exception -> 0x0176 }
            long r8 = r4.dialog_id     // Catch:{ Exception -> 0x0176 }
            r10 = 0
            int r12 = (r8 > r10 ? 1 : (r8 == r10 ? 0 : -1))
            if (r12 != 0) goto L_0x006c
            org.telegram.messenger.MessageObject.getDialogId(r16)     // Catch:{ Exception -> 0x0176 }
        L_0x006c:
            r15.fixUnsupportedMedia(r16)     // Catch:{ Exception -> 0x0176 }
            r0.requery()     // Catch:{ Exception -> 0x0176 }
            org.telegram.tgnet.NativeByteBuffer r8 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0176 }
            int r9 = r16.getObjectSize()     // Catch:{ Exception -> 0x0176 }
            r8.<init>((int) r9)     // Catch:{ Exception -> 0x0176 }
            r4.serializeToStream(r8)     // Catch:{ Exception -> 0x0176 }
            r0.bindLong(r7, r2)     // Catch:{ Exception -> 0x0176 }
            long r9 = r4.dialog_id     // Catch:{ Exception -> 0x0176 }
            r11 = 2
            r0.bindLong(r11, r9)     // Catch:{ Exception -> 0x0176 }
            int r9 = org.telegram.messenger.MessageObject.getUnreadFlags(r16)     // Catch:{ Exception -> 0x0176 }
            r10 = 3
            r0.bindInteger(r10, r9)     // Catch:{ Exception -> 0x0176 }
            int r9 = r4.send_state     // Catch:{ Exception -> 0x0176 }
            r12 = 4
            r0.bindInteger(r12, r9)     // Catch:{ Exception -> 0x0176 }
            int r9 = r4.date     // Catch:{ Exception -> 0x0176 }
            r13 = 5
            r0.bindInteger(r13, r9)     // Catch:{ Exception -> 0x0176 }
            r9 = 6
            r0.bindByteBuffer((int) r9, (org.telegram.tgnet.NativeByteBuffer) r8)     // Catch:{ Exception -> 0x0176 }
            r9 = 7
            boolean r14 = org.telegram.messenger.MessageObject.isOut(r16)     // Catch:{ Exception -> 0x0176 }
            if (r14 != 0) goto L_0x00ad
            boolean r14 = r4.from_scheduled     // Catch:{ Exception -> 0x0176 }
            if (r14 == 0) goto L_0x00ab
            goto L_0x00ad
        L_0x00ab:
            r14 = 0
            goto L_0x00ae
        L_0x00ad:
            r14 = 1
        L_0x00ae:
            r0.bindInteger(r9, r14)     // Catch:{ Exception -> 0x0176 }
            r9 = 8
            int r14 = r4.ttl     // Catch:{ Exception -> 0x0176 }
            r0.bindInteger(r9, r14)     // Catch:{ Exception -> 0x0176 }
            int r9 = r4.flags     // Catch:{ Exception -> 0x0176 }
            r9 = r9 & 1024(0x400, float:1.435E-42)
            r14 = 9
            if (r9 == 0) goto L_0x00c6
            int r9 = r4.views     // Catch:{ Exception -> 0x0176 }
            r0.bindInteger(r14, r9)     // Catch:{ Exception -> 0x0176 }
            goto L_0x00cd
        L_0x00c6:
            int r9 = r15.getMessageMediaType(r16)     // Catch:{ Exception -> 0x0176 }
            r0.bindInteger(r14, r9)     // Catch:{ Exception -> 0x0176 }
        L_0x00cd:
            r9 = 10
            r0.bindInteger(r9, r6)     // Catch:{ Exception -> 0x0176 }
            r9 = 11
            boolean r14 = r4.mentioned     // Catch:{ Exception -> 0x0176 }
            if (r14 == 0) goto L_0x00da
            r14 = 1
            goto L_0x00db
        L_0x00da:
            r14 = 0
        L_0x00db:
            r0.bindInteger(r9, r14)     // Catch:{ Exception -> 0x0176 }
            r0.step()     // Catch:{ Exception -> 0x0176 }
            boolean r9 = org.telegram.messenger.MediaDataController.canAddMessageToMedia(r16)     // Catch:{ Exception -> 0x0176 }
            if (r9 == 0) goto L_0x0104
            r5.requery()     // Catch:{ Exception -> 0x0176 }
            r5.bindLong(r7, r2)     // Catch:{ Exception -> 0x0176 }
            long r2 = r4.dialog_id     // Catch:{ Exception -> 0x0176 }
            r5.bindLong(r11, r2)     // Catch:{ Exception -> 0x0176 }
            int r2 = r4.date     // Catch:{ Exception -> 0x0176 }
            r5.bindInteger(r10, r2)     // Catch:{ Exception -> 0x0176 }
            int r2 = org.telegram.messenger.MediaDataController.getMediaType(r16)     // Catch:{ Exception -> 0x0176 }
            r5.bindInteger(r12, r2)     // Catch:{ Exception -> 0x0176 }
            r5.bindByteBuffer((int) r13, (org.telegram.tgnet.NativeByteBuffer) r8)     // Catch:{ Exception -> 0x0176 }
            r5.step()     // Catch:{ Exception -> 0x0176 }
        L_0x0104:
            r8.reuse()     // Catch:{ Exception -> 0x0176 }
            r0.dispose()     // Catch:{ Exception -> 0x0176 }
            r5.dispose()     // Catch:{ Exception -> 0x0176 }
            org.telegram.SQLite.SQLiteDatabase r0 = r1.database     // Catch:{ Exception -> 0x0176 }
            r0.commitTransaction()     // Catch:{ Exception -> 0x0176 }
            if (r17 == 0) goto L_0x017a
            java.util.HashMap r5 = new java.util.HashMap     // Catch:{ Exception -> 0x0176 }
            r5.<init>()     // Catch:{ Exception -> 0x0176 }
            java.util.HashMap r0 = new java.util.HashMap     // Catch:{ Exception -> 0x0176 }
            r0.<init>()     // Catch:{ Exception -> 0x0176 }
            r2 = 0
        L_0x011f:
            int r3 = r18.size()     // Catch:{ Exception -> 0x0176 }
            if (r2 >= r3) goto L_0x0139
            r3 = r18
            java.lang.Object r7 = r3.get(r2)     // Catch:{ Exception -> 0x0176 }
            org.telegram.tgnet.TLRPC$User r7 = (org.telegram.tgnet.TLRPC.User) r7     // Catch:{ Exception -> 0x0176 }
            int r8 = r7.id     // Catch:{ Exception -> 0x0176 }
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x0176 }
            r5.put(r8, r7)     // Catch:{ Exception -> 0x0176 }
            int r2 = r2 + 1
            goto L_0x011f
        L_0x0139:
            int r2 = r19.size()     // Catch:{ Exception -> 0x0176 }
            if (r6 >= r2) goto L_0x0153
            r2 = r19
            java.lang.Object r3 = r2.get(r6)     // Catch:{ Exception -> 0x0176 }
            org.telegram.tgnet.TLRPC$Chat r3 = (org.telegram.tgnet.TLRPC.Chat) r3     // Catch:{ Exception -> 0x0176 }
            int r7 = r3.id     // Catch:{ Exception -> 0x0176 }
            java.lang.Integer r7 = java.lang.Integer.valueOf(r7)     // Catch:{ Exception -> 0x0176 }
            r0.put(r7, r3)     // Catch:{ Exception -> 0x0176 }
            int r6 = r6 + 1
            goto L_0x0139
        L_0x0153:
            org.telegram.messenger.MessageObject r8 = new org.telegram.messenger.MessageObject     // Catch:{ Exception -> 0x0176 }
            r7 = 1
            r2 = r8
            r3 = r20
            r4 = r16
            r6 = r0
            r2.<init>((int) r3, (org.telegram.tgnet.TLRPC.Message) r4, (java.util.AbstractMap<java.lang.Integer, org.telegram.tgnet.TLRPC.User>) r5, (java.util.AbstractMap<java.lang.Integer, org.telegram.tgnet.TLRPC.Chat>) r6, (boolean) r7)     // Catch:{ Exception -> 0x0176 }
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x0176 }
            r0.<init>()     // Catch:{ Exception -> 0x0176 }
            r0.add(r8)     // Catch:{ Exception -> 0x0176 }
            org.telegram.messenger.-$$Lambda$MessagesStorage$7AwElT-DLipQXVyMJVyZGZ2nitE r2 = new org.telegram.messenger.-$$Lambda$MessagesStorage$7AwElT-DLipQXVyMJVyZGZ2nitE     // Catch:{ Exception -> 0x0176 }
            r2.<init>(r8, r0)     // Catch:{ Exception -> 0x0176 }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r2)     // Catch:{ Exception -> 0x0176 }
            goto L_0x017a
        L_0x0170:
            if (r5 == 0) goto L_0x0175
            r5.dispose()     // Catch:{ Exception -> 0x0176 }
        L_0x0175:
            throw r0     // Catch:{ Exception -> 0x0176 }
        L_0x0176:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x017a:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$replaceMessageIfExists$134$MessagesStorage(org.telegram.tgnet.TLRPC$Message, boolean, java.util.ArrayList, java.util.ArrayList, int):void");
    }

    public /* synthetic */ void lambda$null$133$MessagesStorage(MessageObject messageObject, ArrayList arrayList) {
        getNotificationCenter().postNotificationName(NotificationCenter.replaceMessagesObjects, Long.valueOf(messageObject.getDialogId()), arrayList);
    }

    public void putMessages(TLRPC.messages_Messages messages_messages, long j, int i, int i2, boolean z, boolean z2) {
        this.storageQueue.postRunnable(new Runnable(z2, j, messages_messages, i, i2, z) {
            private final /* synthetic */ boolean f$1;
            private final /* synthetic */ long f$2;
            private final /* synthetic */ TLRPC.messages_Messages f$3;
            private final /* synthetic */ int f$4;
            private final /* synthetic */ int f$5;
            private final /* synthetic */ boolean f$6;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r5;
                this.f$4 = r6;
                this.f$5 = r7;
                this.f$6 = r8;
            }

            public final void run() {
                MessagesStorage.this.lambda$putMessages$135$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4, this.f$5, this.f$6);
            }
        });
    }

    /* JADX WARNING: Code restructure failed: missing block: B:64:0x022e, code lost:
        if (r10.media.photo.id == r15.media.photo.id) goto L_0x0230;
     */
    /* JADX WARNING: Removed duplicated region for block: B:128:0x03f6 A[Catch:{ Exception -> 0x0555 }] */
    /* JADX WARNING: Removed duplicated region for block: B:129:0x03fe A[Catch:{ Exception -> 0x0555 }] */
    /* JADX WARNING: Removed duplicated region for block: B:132:0x0413 A[Catch:{ Exception -> 0x0555 }] */
    /* JADX WARNING: Removed duplicated region for block: B:133:0x0415 A[Catch:{ Exception -> 0x0555 }] */
    /* JADX WARNING: Removed duplicated region for block: B:136:0x0422 A[Catch:{ Exception -> 0x0555 }] */
    /* JADX WARNING: Removed duplicated region for block: B:137:0x0445 A[Catch:{ Exception -> 0x0555 }] */
    /* JADX WARNING: Removed duplicated region for block: B:140:0x0453 A[Catch:{ Exception -> 0x0555 }] */
    /* JADX WARNING: Removed duplicated region for block: B:143:0x0478 A[Catch:{ Exception -> 0x0555 }] */
    /* JADX WARNING: Removed duplicated region for block: B:152:0x04a9 A[Catch:{ Exception -> 0x0555 }] */
    /* JADX WARNING: Removed duplicated region for block: B:157:0x04b6 A[Catch:{ Exception -> 0x0555 }] */
    /* JADX WARNING: Removed duplicated region for block: B:163:0x04dc A[Catch:{ Exception -> 0x0555 }] */
    /* JADX WARNING: Removed duplicated region for block: B:165:0x04e1 A[Catch:{ Exception -> 0x0555 }] */
    /* JADX WARNING: Removed duplicated region for block: B:167:0x04e6 A[Catch:{ Exception -> 0x0555 }] */
    /* JADX WARNING: Removed duplicated region for block: B:170:0x0508 A[Catch:{ Exception -> 0x0555 }] */
    /* JADX WARNING: Removed duplicated region for block: B:173:0x054a A[Catch:{ Exception -> 0x0555 }] */
    /* JADX WARNING: Removed duplicated region for block: B:186:? A[RETURN, SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:37:0x018b A[Catch:{ Exception -> 0x0555 }] */
    /* JADX WARNING: Removed duplicated region for block: B:79:0x0260 A[Catch:{ Exception -> 0x0555 }] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$putMessages$135$MessagesStorage(boolean r31, long r32, org.telegram.tgnet.TLRPC.messages_Messages r34, int r35, int r36, boolean r37) {
        /*
            r30 = this;
            r7 = r30
            r8 = r32
            r0 = r34
            r10 = r35
            r11 = r36
            r12 = 32
            r3 = 1
            r4 = 0
            if (r31 == 0) goto L_0x00ab
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0555 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x0555 }
            java.lang.String r10 = "DELETE FROM scheduled_messages WHERE uid = %d AND mid > 0"
            java.lang.Object[] r11 = new java.lang.Object[r3]     // Catch:{ Exception -> 0x0555 }
            java.lang.Long r16 = java.lang.Long.valueOf(r32)     // Catch:{ Exception -> 0x0555 }
            r11[r4] = r16     // Catch:{ Exception -> 0x0555 }
            java.lang.String r2 = java.lang.String.format(r2, r10, r11)     // Catch:{ Exception -> 0x0555 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0555 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x0555 }
            r1.dispose()     // Catch:{ Exception -> 0x0555 }
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0555 }
            java.lang.String r2 = "REPLACE INTO scheduled_messages VALUES(?, ?, ?, ?, ?, ?, NULL)"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0555 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r2 = r0.messages     // Catch:{ Exception -> 0x0555 }
            int r2 = r2.size()     // Catch:{ Exception -> 0x0555 }
            r10 = 0
        L_0x003c:
            if (r4 >= r2) goto L_0x0090
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r11 = r0.messages     // Catch:{ Exception -> 0x0555 }
            java.lang.Object r11 = r11.get(r4)     // Catch:{ Exception -> 0x0555 }
            org.telegram.tgnet.TLRPC$Message r11 = (org.telegram.tgnet.TLRPC.Message) r11     // Catch:{ Exception -> 0x0555 }
            int r13 = r11.id     // Catch:{ Exception -> 0x0555 }
            long r14 = (long) r13     // Catch:{ Exception -> 0x0555 }
            if (r10 != 0) goto L_0x004f
            org.telegram.tgnet.TLRPC$Peer r10 = r11.to_id     // Catch:{ Exception -> 0x0555 }
            int r10 = r10.channel_id     // Catch:{ Exception -> 0x0555 }
        L_0x004f:
            org.telegram.tgnet.TLRPC$Peer r13 = r11.to_id     // Catch:{ Exception -> 0x0555 }
            int r13 = r13.channel_id     // Catch:{ Exception -> 0x0555 }
            if (r13 == 0) goto L_0x0058
            long r5 = (long) r10     // Catch:{ Exception -> 0x0555 }
            long r5 = r5 << r12
            long r14 = r14 | r5
        L_0x0058:
            r7.fixUnsupportedMedia(r11)     // Catch:{ Exception -> 0x0555 }
            r1.requery()     // Catch:{ Exception -> 0x0555 }
            org.telegram.tgnet.NativeByteBuffer r5 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0555 }
            int r6 = r11.getObjectSize()     // Catch:{ Exception -> 0x0555 }
            r5.<init>((int) r6)     // Catch:{ Exception -> 0x0555 }
            r11.serializeToStream(r5)     // Catch:{ Exception -> 0x0555 }
            r1.bindLong(r3, r14)     // Catch:{ Exception -> 0x0555 }
            r6 = 2
            r1.bindLong(r6, r8)     // Catch:{ Exception -> 0x0555 }
            int r14 = r11.send_state     // Catch:{ Exception -> 0x0555 }
            r13 = 3
            r1.bindInteger(r13, r14)     // Catch:{ Exception -> 0x0555 }
            int r14 = r11.date     // Catch:{ Exception -> 0x0555 }
            r15 = 4
            r1.bindInteger(r15, r14)     // Catch:{ Exception -> 0x0555 }
            r14 = 5
            r1.bindByteBuffer((int) r14, (org.telegram.tgnet.NativeByteBuffer) r5)     // Catch:{ Exception -> 0x0555 }
            int r11 = r11.ttl     // Catch:{ Exception -> 0x0555 }
            r14 = 6
            r1.bindInteger(r14, r11)     // Catch:{ Exception -> 0x0555 }
            r1.step()     // Catch:{ Exception -> 0x0555 }
            r5.reuse()     // Catch:{ Exception -> 0x0555 }
            int r4 = r4 + 1
            goto L_0x003c
        L_0x0090:
            r1.dispose()     // Catch:{ Exception -> 0x0555 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r1 = r0.users     // Catch:{ Exception -> 0x0555 }
            r7.putUsersInternal(r1)     // Catch:{ Exception -> 0x0555 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r0 = r0.chats     // Catch:{ Exception -> 0x0555 }
            r7.putChatsInternal(r0)     // Catch:{ Exception -> 0x0555 }
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0555 }
            r0.commitTransaction()     // Catch:{ Exception -> 0x0555 }
            java.lang.Long r0 = java.lang.Long.valueOf(r32)     // Catch:{ Exception -> 0x0555 }
            r7.broadcastScheduledMessagesChange(r0)     // Catch:{ Exception -> 0x0555 }
            goto L_0x0559
        L_0x00ab:
            r6 = 2
            r13 = 3
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r0.messages     // Catch:{ Exception -> 0x0555 }
            boolean r1 = r1.isEmpty()     // Catch:{ Exception -> 0x0555 }
            if (r1 == 0) goto L_0x00c1
            if (r10 != 0) goto L_0x00c0
            java.lang.String r0 = "messages_holes"
            r7.doneHolesInTable(r0, r8, r11)     // Catch:{ Exception -> 0x0555 }
            r0 = -1
            r7.doneHolesInMedia(r8, r11, r0)     // Catch:{ Exception -> 0x0555 }
        L_0x00c0:
            return
        L_0x00c1:
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0555 }
            r1.beginTransaction()     // Catch:{ Exception -> 0x0555 }
            if (r10 != 0) goto L_0x00f5
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r0.messages     // Catch:{ Exception -> 0x0555 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r2 = r0.messages     // Catch:{ Exception -> 0x0555 }
            int r2 = r2.size()     // Catch:{ Exception -> 0x0555 }
            int r2 = r2 - r3
            java.lang.Object r1 = r1.get(r2)     // Catch:{ Exception -> 0x0555 }
            org.telegram.tgnet.TLRPC$Message r1 = (org.telegram.tgnet.TLRPC.Message) r1     // Catch:{ Exception -> 0x0555 }
            int r15 = r1.id     // Catch:{ Exception -> 0x0555 }
            java.lang.String r2 = "messages_holes"
            r1 = r30
            r5 = 1
            r13 = 0
            r3 = r32
            r14 = 1
            r5 = r15
            r12 = 3
            r6 = r36
            r1.closeHolesInTable(r2, r3, r5, r6)     // Catch:{ Exception -> 0x0555 }
            r6 = -1
            r1 = r30
            r2 = r32
            r4 = r15
            r5 = r36
            r1.closeHolesInMedia(r2, r4, r5, r6)     // Catch:{ Exception -> 0x0555 }
            goto L_0x011b
        L_0x00f5:
            r12 = 3
            r13 = 0
            r14 = 1
            if (r10 != r14) goto L_0x011d
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r0.messages     // Catch:{ Exception -> 0x0555 }
            java.lang.Object r1 = r1.get(r13)     // Catch:{ Exception -> 0x0555 }
            org.telegram.tgnet.TLRPC$Message r1 = (org.telegram.tgnet.TLRPC.Message) r1     // Catch:{ Exception -> 0x0555 }
            int r15 = r1.id     // Catch:{ Exception -> 0x0555 }
            java.lang.String r2 = "messages_holes"
            r1 = r30
            r3 = r32
            r5 = r36
            r6 = r15
            r1.closeHolesInTable(r2, r3, r5, r6)     // Catch:{ Exception -> 0x0555 }
            r6 = -1
            r1 = r30
            r2 = r32
            r4 = r36
            r5 = r15
            r1.closeHolesInMedia(r2, r4, r5, r6)     // Catch:{ Exception -> 0x0555 }
        L_0x011b:
            r15 = 2
            goto L_0x0164
        L_0x011d:
            if (r10 == r12) goto L_0x0126
            r15 = 2
            r1 = 4
            if (r10 == r15) goto L_0x0128
            if (r10 != r1) goto L_0x0164
            goto L_0x0128
        L_0x0126:
            r1 = 4
            r15 = 2
        L_0x0128:
            if (r11 != 0) goto L_0x0130
            if (r10 == r1) goto L_0x0130
            r11 = 2147483647(0x7fffffff, float:NaN)
            goto L_0x013b
        L_0x0130:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r0.messages     // Catch:{ Exception -> 0x0555 }
            java.lang.Object r1 = r1.get(r13)     // Catch:{ Exception -> 0x0555 }
            org.telegram.tgnet.TLRPC$Message r1 = (org.telegram.tgnet.TLRPC.Message) r1     // Catch:{ Exception -> 0x0555 }
            int r1 = r1.id     // Catch:{ Exception -> 0x0555 }
            r11 = r1
        L_0x013b:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r0.messages     // Catch:{ Exception -> 0x0555 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r2 = r0.messages     // Catch:{ Exception -> 0x0555 }
            int r2 = r2.size()     // Catch:{ Exception -> 0x0555 }
            int r2 = r2 - r14
            java.lang.Object r1 = r1.get(r2)     // Catch:{ Exception -> 0x0555 }
            org.telegram.tgnet.TLRPC$Message r1 = (org.telegram.tgnet.TLRPC.Message) r1     // Catch:{ Exception -> 0x0555 }
            int r6 = r1.id     // Catch:{ Exception -> 0x0555 }
            java.lang.String r2 = "messages_holes"
            r1 = r30
            r3 = r32
            r5 = r6
            r17 = r6
            r6 = r11
            r1.closeHolesInTable(r2, r3, r5, r6)     // Catch:{ Exception -> 0x0555 }
            r6 = -1
            r1 = r30
            r2 = r32
            r4 = r17
            r5 = r11
            r1.closeHolesInMedia(r2, r4, r5, r6)     // Catch:{ Exception -> 0x0555 }
        L_0x0164:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r0.messages     // Catch:{ Exception -> 0x0555 }
            int r1 = r1.size()     // Catch:{ Exception -> 0x0555 }
            java.util.ArrayList r2 = new java.util.ArrayList     // Catch:{ Exception -> 0x0555 }
            r2.<init>()     // Catch:{ Exception -> 0x0555 }
            org.telegram.SQLite.SQLiteDatabase r3 = r7.database     // Catch:{ Exception -> 0x0555 }
            java.lang.String r4 = "REPLACE INTO messages VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r3 = r3.executeFast(r4)     // Catch:{ Exception -> 0x0555 }
            org.telegram.SQLite.SQLiteDatabase r4 = r7.database     // Catch:{ Exception -> 0x0555 }
            java.lang.String r5 = "REPLACE INTO media_v2 VALUES(?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r4 = r4.executeFast(r5)     // Catch:{ Exception -> 0x0555 }
            r5 = 0
            r6 = 0
            r11 = 0
            r17 = 0
            r19 = 0
            r20 = 2147483647(0x7fffffff, float:NaN)
        L_0x0189:
            if (r6 >= r1) goto L_0x04cd
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r15 = r0.messages     // Catch:{ Exception -> 0x0555 }
            java.lang.Object r15 = r15.get(r6)     // Catch:{ Exception -> 0x0555 }
            org.telegram.tgnet.TLRPC$Message r15 = (org.telegram.tgnet.TLRPC.Message) r15     // Catch:{ Exception -> 0x0555 }
            int r12 = r15.id     // Catch:{ Exception -> 0x0555 }
            long r13 = (long) r12     // Catch:{ Exception -> 0x0555 }
            if (r5 != 0) goto L_0x019c
            org.telegram.tgnet.TLRPC$Peer r5 = r15.to_id     // Catch:{ Exception -> 0x0555 }
            int r5 = r5.channel_id     // Catch:{ Exception -> 0x0555 }
        L_0x019c:
            org.telegram.tgnet.TLRPC$Peer r12 = r15.to_id     // Catch:{ Exception -> 0x0555 }
            int r12 = r12.channel_id     // Catch:{ Exception -> 0x0555 }
            r21 = r11
            if (r12 == 0) goto L_0x01ab
            long r11 = (long) r5     // Catch:{ Exception -> 0x0555 }
            r18 = 32
            long r11 = r11 << r18
            long r13 = r13 | r11
            goto L_0x01ad
        L_0x01ab:
            r18 = 32
        L_0x01ad:
            r11 = -2
            if (r10 != r11) goto L_0x02d7
            org.telegram.SQLite.SQLiteDatabase r11 = r7.database     // Catch:{ Exception -> 0x0555 }
            java.util.Locale r12 = java.util.Locale.US     // Catch:{ Exception -> 0x0555 }
            r22 = r1
            java.lang.String r1 = "SELECT mid, data, ttl, mention, read_state, send_state FROM messages WHERE mid = %d"
            r23 = r5
            r5 = 1
            java.lang.Object[] r10 = new java.lang.Object[r5]     // Catch:{ Exception -> 0x0555 }
            java.lang.Long r5 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x0555 }
            r24 = r4
            r4 = 0
            r10[r4] = r5     // Catch:{ Exception -> 0x0555 }
            java.lang.String r1 = java.lang.String.format(r12, r1, r10)     // Catch:{ Exception -> 0x0555 }
            java.lang.Object[] r5 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0555 }
            org.telegram.SQLite.SQLiteCursor r1 = r11.queryFinalized(r1, r5)     // Catch:{ Exception -> 0x0555 }
            boolean r5 = r1.next()     // Catch:{ Exception -> 0x0555 }
            if (r5 == 0) goto L_0x02c5
            r10 = 1
            org.telegram.tgnet.NativeByteBuffer r11 = r1.byteBufferValue(r10)     // Catch:{ Exception -> 0x0555 }
            if (r11 == 0) goto L_0x0265
            int r10 = r11.readInt32(r4)     // Catch:{ Exception -> 0x0555 }
            org.telegram.tgnet.TLRPC$Message r10 = org.telegram.tgnet.TLRPC.Message.TLdeserialize(r11, r10, r4)     // Catch:{ Exception -> 0x0555 }
            org.telegram.messenger.UserConfig r4 = r30.getUserConfig()     // Catch:{ Exception -> 0x0555 }
            int r4 = r4.clientUserId     // Catch:{ Exception -> 0x0555 }
            r10.readAttachPath(r11, r4)     // Catch:{ Exception -> 0x0555 }
            r11.reuse()     // Catch:{ Exception -> 0x0555 }
            r4 = 5
            int r11 = r1.intValue(r4)     // Catch:{ Exception -> 0x0555 }
            if (r10 == 0) goto L_0x0206
            r4 = 3
            if (r11 == r4) goto L_0x0206
            java.lang.String r4 = r10.attachPath     // Catch:{ Exception -> 0x0555 }
            r15.attachPath = r4     // Catch:{ Exception -> 0x0555 }
            r4 = 2
            int r11 = r1.intValue(r4)     // Catch:{ Exception -> 0x0555 }
            r15.ttl = r11     // Catch:{ Exception -> 0x0555 }
        L_0x0206:
            org.telegram.tgnet.TLRPC$MessageMedia r4 = r10.media     // Catch:{ Exception -> 0x0555 }
            boolean r4 = r4 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaPhoto     // Catch:{ Exception -> 0x0555 }
            if (r4 == 0) goto L_0x0232
            org.telegram.tgnet.TLRPC$MessageMedia r4 = r15.media     // Catch:{ Exception -> 0x0555 }
            boolean r4 = r4 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaPhoto     // Catch:{ Exception -> 0x0555 }
            if (r4 == 0) goto L_0x0232
            org.telegram.tgnet.TLRPC$MessageMedia r4 = r10.media     // Catch:{ Exception -> 0x0555 }
            org.telegram.tgnet.TLRPC$Photo r4 = r4.photo     // Catch:{ Exception -> 0x0555 }
            if (r4 == 0) goto L_0x0232
            org.telegram.tgnet.TLRPC$MessageMedia r4 = r15.media     // Catch:{ Exception -> 0x0555 }
            org.telegram.tgnet.TLRPC$Photo r4 = r4.photo     // Catch:{ Exception -> 0x0555 }
            if (r4 == 0) goto L_0x0232
            org.telegram.tgnet.TLRPC$MessageMedia r4 = r10.media     // Catch:{ Exception -> 0x0555 }
            org.telegram.tgnet.TLRPC$Photo r4 = r4.photo     // Catch:{ Exception -> 0x0555 }
            long r11 = r4.id     // Catch:{ Exception -> 0x0555 }
            org.telegram.tgnet.TLRPC$MessageMedia r4 = r15.media     // Catch:{ Exception -> 0x0555 }
            org.telegram.tgnet.TLRPC$Photo r4 = r4.photo     // Catch:{ Exception -> 0x0555 }
            r25 = r3
            long r3 = r4.id     // Catch:{ Exception -> 0x0555 }
            int r26 = (r11 > r3 ? 1 : (r11 == r3 ? 0 : -1))
            if (r26 != 0) goto L_0x025d
        L_0x0230:
            r4 = 1
            goto L_0x025e
        L_0x0232:
            r25 = r3
            org.telegram.tgnet.TLRPC$MessageMedia r3 = r10.media     // Catch:{ Exception -> 0x0555 }
            boolean r3 = r3 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaDocument     // Catch:{ Exception -> 0x0555 }
            if (r3 == 0) goto L_0x025d
            org.telegram.tgnet.TLRPC$MessageMedia r3 = r15.media     // Catch:{ Exception -> 0x0555 }
            boolean r3 = r3 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaDocument     // Catch:{ Exception -> 0x0555 }
            if (r3 == 0) goto L_0x025d
            org.telegram.tgnet.TLRPC$MessageMedia r3 = r10.media     // Catch:{ Exception -> 0x0555 }
            org.telegram.tgnet.TLRPC$Document r3 = r3.document     // Catch:{ Exception -> 0x0555 }
            if (r3 == 0) goto L_0x025d
            org.telegram.tgnet.TLRPC$MessageMedia r3 = r15.media     // Catch:{ Exception -> 0x0555 }
            org.telegram.tgnet.TLRPC$Document r3 = r3.document     // Catch:{ Exception -> 0x0555 }
            if (r3 == 0) goto L_0x025d
            org.telegram.tgnet.TLRPC$MessageMedia r3 = r10.media     // Catch:{ Exception -> 0x0555 }
            org.telegram.tgnet.TLRPC$Document r3 = r3.document     // Catch:{ Exception -> 0x0555 }
            long r3 = r3.id     // Catch:{ Exception -> 0x0555 }
            org.telegram.tgnet.TLRPC$MessageMedia r11 = r15.media     // Catch:{ Exception -> 0x0555 }
            org.telegram.tgnet.TLRPC$Document r11 = r11.document     // Catch:{ Exception -> 0x0555 }
            long r11 = r11.id     // Catch:{ Exception -> 0x0555 }
            int r26 = (r3 > r11 ? 1 : (r3 == r11 ? 0 : -1))
            if (r26 != 0) goto L_0x025d
            goto L_0x0230
        L_0x025d:
            r4 = 0
        L_0x025e:
            if (r4 != 0) goto L_0x0267
            r3 = 0
            r7.addFilesToDelete(r10, r2, r3)     // Catch:{ Exception -> 0x0555 }
            goto L_0x0267
        L_0x0265:
            r25 = r3
        L_0x0267:
            r3 = 3
            int r4 = r1.intValue(r3)     // Catch:{ Exception -> 0x0555 }
            if (r4 == 0) goto L_0x0270
            r3 = 1
            goto L_0x0271
        L_0x0270:
            r3 = 0
        L_0x0271:
            r4 = 4
            int r10 = r1.intValue(r4)     // Catch:{ Exception -> 0x0555 }
            boolean r4 = r15.mentioned     // Catch:{ Exception -> 0x0555 }
            if (r3 == r4) goto L_0x02c2
            r4 = r20
            r11 = 2147483647(0x7fffffff, float:NaN)
            if (r4 != r11) goto L_0x02af
            org.telegram.SQLite.SQLiteDatabase r11 = r7.database     // Catch:{ Exception -> 0x0555 }
            java.lang.StringBuilder r12 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0555 }
            r12.<init>()     // Catch:{ Exception -> 0x0555 }
            r20 = r4
            java.lang.String r4 = "SELECT unread_count_i FROM dialogs WHERE did = "
            r12.append(r4)     // Catch:{ Exception -> 0x0555 }
            r12.append(r8)     // Catch:{ Exception -> 0x0555 }
            java.lang.String r4 = r12.toString()     // Catch:{ Exception -> 0x0555 }
            r26 = r2
            r12 = 0
            java.lang.Object[] r2 = new java.lang.Object[r12]     // Catch:{ Exception -> 0x0555 }
            org.telegram.SQLite.SQLiteCursor r2 = r11.queryFinalized(r4, r2)     // Catch:{ Exception -> 0x0555 }
            boolean r4 = r2.next()     // Catch:{ Exception -> 0x0555 }
            if (r4 == 0) goto L_0x02ab
            int r4 = r2.intValue(r12)     // Catch:{ Exception -> 0x0555 }
            r20 = r4
        L_0x02ab:
            r2.dispose()     // Catch:{ Exception -> 0x0555 }
            goto L_0x02b3
        L_0x02af:
            r26 = r2
            r20 = r4
        L_0x02b3:
            if (r3 == 0) goto L_0x02bb
            r2 = 1
            if (r10 > r2) goto L_0x02c9
            int r20 = r20 + -1
            goto L_0x02c9
        L_0x02bb:
            boolean r2 = r15.media_unread     // Catch:{ Exception -> 0x0555 }
            if (r2 == 0) goto L_0x02c9
            int r20 = r20 + 1
            goto L_0x02c9
        L_0x02c2:
            r26 = r2
            goto L_0x02c9
        L_0x02c5:
            r26 = r2
            r25 = r3
        L_0x02c9:
            r1.dispose()     // Catch:{ Exception -> 0x0555 }
            if (r5 != 0) goto L_0x02e1
            r11 = r21
            r2 = r24
            r3 = r25
            r5 = 6
            goto L_0x04bc
        L_0x02d7:
            r22 = r1
            r26 = r2
            r25 = r3
            r24 = r4
            r23 = r5
        L_0x02e1:
            r2 = 8
            r4 = 7
            if (r6 != 0) goto L_0x03a6
            if (r37 == 0) goto L_0x03a6
            org.telegram.SQLite.SQLiteDatabase r5 = r7.database     // Catch:{ Exception -> 0x0555 }
            java.lang.StringBuilder r10 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0555 }
            r10.<init>()     // Catch:{ Exception -> 0x0555 }
            java.lang.String r11 = "SELECT pinned, unread_count_i, flags FROM dialogs WHERE did = "
            r10.append(r11)     // Catch:{ Exception -> 0x0555 }
            r10.append(r8)     // Catch:{ Exception -> 0x0555 }
            java.lang.String r10 = r10.toString()     // Catch:{ Exception -> 0x0555 }
            r11 = 0
            java.lang.Object[] r12 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x0555 }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r10, r12)     // Catch:{ Exception -> 0x0555 }
            boolean r10 = r5.next()     // Catch:{ Exception -> 0x0555 }
            if (r10 == 0) goto L_0x031b
            int r12 = r5.intValue(r11)     // Catch:{ Exception -> 0x0555 }
            r11 = 1
            int r27 = r5.intValue(r11)     // Catch:{ Exception -> 0x0555 }
            r11 = 2
            int r28 = r5.intValue(r11)     // Catch:{ Exception -> 0x0555 }
            r11 = r27
            r29 = r28
            goto L_0x031f
        L_0x031b:
            r11 = 0
            r12 = 0
            r29 = 0
        L_0x031f:
            r5.dispose()     // Catch:{ Exception -> 0x0555 }
            if (r10 == 0) goto L_0x0350
            org.telegram.SQLite.SQLiteDatabase r5 = r7.database     // Catch:{ Exception -> 0x0555 }
            java.lang.String r10 = "UPDATE dialogs SET date = ?, last_mid = ?, inbox_max = ?, last_mid_i = ?, pts = ?, date_i = ? WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r5 = r5.executeFast(r10)     // Catch:{ Exception -> 0x0555 }
            int r10 = r15.date     // Catch:{ Exception -> 0x0555 }
            r11 = 1
            r5.bindInteger(r11, r10)     // Catch:{ Exception -> 0x0555 }
            r10 = 2
            r5.bindLong(r10, r13)     // Catch:{ Exception -> 0x0555 }
            int r10 = r15.id     // Catch:{ Exception -> 0x0555 }
            r11 = 3
            r5.bindInteger(r11, r10)     // Catch:{ Exception -> 0x0555 }
            r10 = 4
            r5.bindLong(r10, r13)     // Catch:{ Exception -> 0x0555 }
            int r10 = r0.pts     // Catch:{ Exception -> 0x0555 }
            r11 = 5
            r5.bindInteger(r11, r10)     // Catch:{ Exception -> 0x0555 }
            int r10 = r15.date     // Catch:{ Exception -> 0x0555 }
            r11 = 6
            r5.bindInteger(r11, r10)     // Catch:{ Exception -> 0x0555 }
            r5.bindLong(r4, r8)     // Catch:{ Exception -> 0x0555 }
            goto L_0x03a0
        L_0x0350:
            org.telegram.SQLite.SQLiteDatabase r5 = r7.database     // Catch:{ Exception -> 0x0555 }
            java.lang.String r10 = "REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r5 = r5.executeFast(r10)     // Catch:{ Exception -> 0x0555 }
            r10 = 1
            r5.bindLong(r10, r8)     // Catch:{ Exception -> 0x0555 }
            int r10 = r15.date     // Catch:{ Exception -> 0x0555 }
            r1 = 2
            r5.bindInteger(r1, r10)     // Catch:{ Exception -> 0x0555 }
            r1 = 3
            r10 = 0
            r5.bindInteger(r1, r10)     // Catch:{ Exception -> 0x0555 }
            r1 = 4
            r5.bindLong(r1, r13)     // Catch:{ Exception -> 0x0555 }
            int r1 = r15.id     // Catch:{ Exception -> 0x0555 }
            r3 = 5
            r5.bindInteger(r3, r1)     // Catch:{ Exception -> 0x0555 }
            r1 = 6
            r5.bindInteger(r1, r10)     // Catch:{ Exception -> 0x0555 }
            r5.bindLong(r4, r13)     // Catch:{ Exception -> 0x0555 }
            r5.bindInteger(r2, r11)     // Catch:{ Exception -> 0x0555 }
            int r1 = r0.pts     // Catch:{ Exception -> 0x0555 }
            r3 = 9
            r5.bindInteger(r3, r1)     // Catch:{ Exception -> 0x0555 }
            int r1 = r15.date     // Catch:{ Exception -> 0x0555 }
            r3 = 10
            r5.bindInteger(r3, r1)     // Catch:{ Exception -> 0x0555 }
            r1 = 11
            r5.bindInteger(r1, r12)     // Catch:{ Exception -> 0x0555 }
            r1 = 12
            r3 = r29
            r5.bindInteger(r1, r3)     // Catch:{ Exception -> 0x0555 }
            r1 = 13
            r3 = 0
            r5.bindInteger(r1, r3)     // Catch:{ Exception -> 0x0555 }
            r1 = 14
            r5.bindNull(r1)     // Catch:{ Exception -> 0x0555 }
        L_0x03a0:
            r5.step()     // Catch:{ Exception -> 0x0555 }
            r5.dispose()     // Catch:{ Exception -> 0x0555 }
        L_0x03a6:
            r7.fixUnsupportedMedia(r15)     // Catch:{ Exception -> 0x0555 }
            r25.requery()     // Catch:{ Exception -> 0x0555 }
            org.telegram.tgnet.NativeByteBuffer r1 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x0555 }
            int r3 = r15.getObjectSize()     // Catch:{ Exception -> 0x0555 }
            r1.<init>((int) r3)     // Catch:{ Exception -> 0x0555 }
            r15.serializeToStream(r1)     // Catch:{ Exception -> 0x0555 }
            r3 = r25
            r5 = 1
            r3.bindLong(r5, r13)     // Catch:{ Exception -> 0x0555 }
            r5 = 2
            r3.bindLong(r5, r8)     // Catch:{ Exception -> 0x0555 }
            int r5 = org.telegram.messenger.MessageObject.getUnreadFlags(r15)     // Catch:{ Exception -> 0x0555 }
            r10 = 3
            r3.bindInteger(r10, r5)     // Catch:{ Exception -> 0x0555 }
            int r5 = r15.send_state     // Catch:{ Exception -> 0x0555 }
            r10 = 4
            r3.bindInteger(r10, r5)     // Catch:{ Exception -> 0x0555 }
            int r5 = r15.date     // Catch:{ Exception -> 0x0555 }
            r10 = 5
            r3.bindInteger(r10, r5)     // Catch:{ Exception -> 0x0555 }
            r5 = 6
            r3.bindByteBuffer((int) r5, (org.telegram.tgnet.NativeByteBuffer) r1)     // Catch:{ Exception -> 0x0555 }
            boolean r10 = org.telegram.messenger.MessageObject.isOut(r15)     // Catch:{ Exception -> 0x0555 }
            if (r10 != 0) goto L_0x03e7
            boolean r10 = r15.from_scheduled     // Catch:{ Exception -> 0x0555 }
            if (r10 == 0) goto L_0x03e5
            goto L_0x03e7
        L_0x03e5:
            r10 = 0
            goto L_0x03e8
        L_0x03e7:
            r10 = 1
        L_0x03e8:
            r3.bindInteger(r4, r10)     // Catch:{ Exception -> 0x0555 }
            int r4 = r15.ttl     // Catch:{ Exception -> 0x0555 }
            r3.bindInteger(r2, r4)     // Catch:{ Exception -> 0x0555 }
            int r2 = r15.flags     // Catch:{ Exception -> 0x0555 }
            r2 = r2 & 1024(0x400, float:1.435E-42)
            if (r2 == 0) goto L_0x03fe
            int r2 = r15.views     // Catch:{ Exception -> 0x0555 }
            r4 = 9
            r3.bindInteger(r4, r2)     // Catch:{ Exception -> 0x0555 }
            goto L_0x0407
        L_0x03fe:
            r4 = 9
            int r2 = r7.getMessageMediaType(r15)     // Catch:{ Exception -> 0x0555 }
            r3.bindInteger(r4, r2)     // Catch:{ Exception -> 0x0555 }
        L_0x0407:
            r2 = 10
            r4 = 0
            r3.bindInteger(r2, r4)     // Catch:{ Exception -> 0x0555 }
            r2 = 11
            boolean r4 = r15.mentioned     // Catch:{ Exception -> 0x0555 }
            if (r4 == 0) goto L_0x0415
            r4 = 1
            goto L_0x0416
        L_0x0415:
            r4 = 0
        L_0x0416:
            r3.bindInteger(r2, r4)     // Catch:{ Exception -> 0x0555 }
            r3.step()     // Catch:{ Exception -> 0x0555 }
            boolean r2 = org.telegram.messenger.MediaDataController.canAddMessageToMedia(r15)     // Catch:{ Exception -> 0x0555 }
            if (r2 == 0) goto L_0x0445
            r24.requery()     // Catch:{ Exception -> 0x0555 }
            r2 = r24
            r4 = 1
            r2.bindLong(r4, r13)     // Catch:{ Exception -> 0x0555 }
            r4 = 2
            r2.bindLong(r4, r8)     // Catch:{ Exception -> 0x0555 }
            int r4 = r15.date     // Catch:{ Exception -> 0x0555 }
            r10 = 3
            r2.bindInteger(r10, r4)     // Catch:{ Exception -> 0x0555 }
            int r4 = org.telegram.messenger.MediaDataController.getMediaType(r15)     // Catch:{ Exception -> 0x0555 }
            r11 = 4
            r2.bindInteger(r11, r4)     // Catch:{ Exception -> 0x0555 }
            r4 = 5
            r2.bindByteBuffer((int) r4, (org.telegram.tgnet.NativeByteBuffer) r1)     // Catch:{ Exception -> 0x0555 }
            r2.step()     // Catch:{ Exception -> 0x0555 }
            goto L_0x044a
        L_0x0445:
            r2 = r24
            r4 = 5
            r10 = 3
            r11 = 4
        L_0x044a:
            r1.reuse()     // Catch:{ Exception -> 0x0555 }
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r15.media     // Catch:{ Exception -> 0x0555 }
            boolean r1 = r1 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaPoll     // Catch:{ Exception -> 0x0555 }
            if (r1 == 0) goto L_0x0478
            if (r17 != 0) goto L_0x045d
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0555 }
            java.lang.String r12 = "REPLACE INTO polls VALUES(?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r17 = r1.executeFast(r12)     // Catch:{ Exception -> 0x0555 }
        L_0x045d:
            r1 = r17
            org.telegram.tgnet.TLRPC$MessageMedia r12 = r15.media     // Catch:{ Exception -> 0x0555 }
            org.telegram.tgnet.TLRPC$TL_messageMediaPoll r12 = (org.telegram.tgnet.TLRPC.TL_messageMediaPoll) r12     // Catch:{ Exception -> 0x0555 }
            r1.requery()     // Catch:{ Exception -> 0x0555 }
            r4 = 1
            r1.bindLong(r4, r13)     // Catch:{ Exception -> 0x0555 }
            org.telegram.tgnet.TLRPC$TL_poll r4 = r12.poll     // Catch:{ Exception -> 0x0555 }
            long r12 = r4.id     // Catch:{ Exception -> 0x0555 }
            r4 = 2
            r1.bindLong(r4, r12)     // Catch:{ Exception -> 0x0555 }
            r1.step()     // Catch:{ Exception -> 0x0555 }
            r17 = r1
            goto L_0x04a1
        L_0x0478:
            org.telegram.tgnet.TLRPC$MessageMedia r1 = r15.media     // Catch:{ Exception -> 0x0555 }
            boolean r1 = r1 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaWebPage     // Catch:{ Exception -> 0x0555 }
            if (r1 == 0) goto L_0x04a1
            if (r21 != 0) goto L_0x0489
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0555 }
            java.lang.String r4 = "REPLACE INTO webpage_pending VALUES(?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r4)     // Catch:{ Exception -> 0x0555 }
            goto L_0x048b
        L_0x0489:
            r1 = r21
        L_0x048b:
            r1.requery()     // Catch:{ Exception -> 0x0555 }
            org.telegram.tgnet.TLRPC$MessageMedia r4 = r15.media     // Catch:{ Exception -> 0x0555 }
            org.telegram.tgnet.TLRPC$WebPage r4 = r4.webpage     // Catch:{ Exception -> 0x0555 }
            long r10 = r4.id     // Catch:{ Exception -> 0x0555 }
            r4 = 1
            r1.bindLong(r4, r10)     // Catch:{ Exception -> 0x0555 }
            r4 = 2
            r1.bindLong(r4, r13)     // Catch:{ Exception -> 0x0555 }
            r1.step()     // Catch:{ Exception -> 0x0555 }
            r21 = r1
        L_0x04a1:
            if (r35 != 0) goto L_0x04b6
            boolean r1 = r7.isValidKeyboardToSave(r15)     // Catch:{ Exception -> 0x0555 }
            if (r1 == 0) goto L_0x04b6
            r1 = r19
            if (r1 == 0) goto L_0x04b3
            int r4 = r1.id     // Catch:{ Exception -> 0x0555 }
            int r10 = r15.id     // Catch:{ Exception -> 0x0555 }
            if (r4 >= r10) goto L_0x04b8
        L_0x04b3:
            r19 = r15
            goto L_0x04ba
        L_0x04b6:
            r1 = r19
        L_0x04b8:
            r19 = r1
        L_0x04ba:
            r11 = r21
        L_0x04bc:
            int r6 = r6 + 1
            r10 = r35
            r4 = r2
            r1 = r22
            r5 = r23
            r2 = r26
            r12 = 3
            r13 = 0
            r14 = 1
            r15 = 2
            goto L_0x0189
        L_0x04cd:
            r26 = r2
            r2 = r4
            r21 = r11
            r1 = r19
            r3.dispose()     // Catch:{ Exception -> 0x0555 }
            r2.dispose()     // Catch:{ Exception -> 0x0555 }
            if (r21 == 0) goto L_0x04df
            r21.dispose()     // Catch:{ Exception -> 0x0555 }
        L_0x04df:
            if (r17 == 0) goto L_0x04e4
            r17.dispose()     // Catch:{ Exception -> 0x0555 }
        L_0x04e4:
            if (r1 == 0) goto L_0x04ed
            org.telegram.messenger.MediaDataController r2 = r30.getMediaDataController()     // Catch:{ Exception -> 0x0555 }
            r2.putBotKeyboard(r8, r1)     // Catch:{ Exception -> 0x0555 }
        L_0x04ed:
            org.telegram.messenger.FileLoader r1 = r30.getFileLoader()     // Catch:{ Exception -> 0x0555 }
            r2 = r26
            r3 = 0
            r1.deleteFiles(r2, r3)     // Catch:{ Exception -> 0x0555 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r1 = r0.users     // Catch:{ Exception -> 0x0555 }
            r7.putUsersInternal(r1)     // Catch:{ Exception -> 0x0555 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r0 = r0.chats     // Catch:{ Exception -> 0x0555 }
            r7.putChatsInternal(r0)     // Catch:{ Exception -> 0x0555 }
            r0 = r20
            r1 = 2147483647(0x7fffffff, float:NaN)
            if (r0 == r1) goto L_0x0543
            org.telegram.SQLite.SQLiteDatabase r1 = r7.database     // Catch:{ Exception -> 0x0555 }
            java.util.Locale r2 = java.util.Locale.US     // Catch:{ Exception -> 0x0555 }
            java.lang.String r3 = "UPDATE dialogs SET unread_count_i = %d WHERE did = %d"
            r4 = 2
            java.lang.Object[] r4 = new java.lang.Object[r4]     // Catch:{ Exception -> 0x0555 }
            java.lang.Integer r6 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x0555 }
            r10 = 0
            r4[r10] = r6     // Catch:{ Exception -> 0x0555 }
            java.lang.Long r6 = java.lang.Long.valueOf(r32)     // Catch:{ Exception -> 0x0555 }
            r10 = 1
            r4[r10] = r6     // Catch:{ Exception -> 0x0555 }
            java.lang.String r2 = java.lang.String.format(r2, r3, r4)     // Catch:{ Exception -> 0x0555 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0555 }
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.stepThis()     // Catch:{ Exception -> 0x0555 }
            r1.dispose()     // Catch:{ Exception -> 0x0555 }
            android.util.LongSparseArray r1 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x0555 }
            r2 = 1
            r1.<init>(r2)     // Catch:{ Exception -> 0x0555 }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x0555 }
            r1.put(r8, r0)     // Catch:{ Exception -> 0x0555 }
            org.telegram.messenger.MessagesController r0 = r30.getMessagesController()     // Catch:{ Exception -> 0x0555 }
            r2 = 0
            r0.processDialogsUpdateRead(r2, r1)     // Catch:{ Exception -> 0x0555 }
        L_0x0543:
            org.telegram.SQLite.SQLiteDatabase r0 = r7.database     // Catch:{ Exception -> 0x0555 }
            r0.commitTransaction()     // Catch:{ Exception -> 0x0555 }
            if (r37 == 0) goto L_0x0559
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x0555 }
            r0.<init>()     // Catch:{ Exception -> 0x0555 }
            r1 = 0
            r2 = 0
            r7.updateDialogsWithDeletedMessages(r0, r1, r2, r5)     // Catch:{ Exception -> 0x0555 }
            goto L_0x0559
        L_0x0555:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x0559:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$putMessages$135$MessagesStorage(boolean, long, org.telegram.tgnet.TLRPC$messages_Messages, int, int, boolean):void");
    }

    public static void addUsersAndChatsFromMessage(TLRPC.Message message, ArrayList<Integer> arrayList, ArrayList<Integer> arrayList2) {
        int i = message.from_id;
        if (i != 0) {
            if (i > 0) {
                if (!arrayList.contains(Integer.valueOf(i))) {
                    arrayList.add(Integer.valueOf(message.from_id));
                }
            } else if (!arrayList2.contains(Integer.valueOf(-i))) {
                arrayList2.add(Integer.valueOf(-message.from_id));
            }
        }
        int i2 = message.via_bot_id;
        if (i2 != 0 && !arrayList.contains(Integer.valueOf(i2))) {
            arrayList.add(Integer.valueOf(message.via_bot_id));
        }
        TLRPC.MessageAction messageAction = message.action;
        if (messageAction != null) {
            int i3 = messageAction.user_id;
            if (i3 != 0 && !arrayList.contains(Integer.valueOf(i3))) {
                arrayList.add(Integer.valueOf(message.action.user_id));
            }
            int i4 = message.action.channel_id;
            if (i4 != 0 && !arrayList2.contains(Integer.valueOf(i4))) {
                arrayList2.add(Integer.valueOf(message.action.channel_id));
            }
            int i5 = message.action.chat_id;
            if (i5 != 0 && !arrayList2.contains(Integer.valueOf(i5))) {
                arrayList2.add(Integer.valueOf(message.action.chat_id));
            }
            if (!message.action.users.isEmpty()) {
                for (int i6 = 0; i6 < message.action.users.size(); i6++) {
                    Integer num = message.action.users.get(i6);
                    if (!arrayList.contains(num)) {
                        arrayList.add(num);
                    }
                }
            }
        }
        if (!message.entities.isEmpty()) {
            for (int i7 = 0; i7 < message.entities.size(); i7++) {
                TLRPC.MessageEntity messageEntity = message.entities.get(i7);
                if (messageEntity instanceof TLRPC.TL_messageEntityMentionName) {
                    arrayList.add(Integer.valueOf(((TLRPC.TL_messageEntityMentionName) messageEntity).user_id));
                } else if (messageEntity instanceof TLRPC.TL_inputMessageEntityMentionName) {
                    arrayList.add(Integer.valueOf(((TLRPC.TL_inputMessageEntityMentionName) messageEntity).user_id.user_id));
                }
            }
        }
        TLRPC.MessageMedia messageMedia = message.media;
        if (messageMedia != null) {
            int i8 = messageMedia.user_id;
            if (i8 != 0 && !arrayList.contains(Integer.valueOf(i8))) {
                arrayList.add(Integer.valueOf(message.media.user_id));
            }
            TLRPC.MessageMedia messageMedia2 = message.media;
            if (messageMedia2 instanceof TLRPC.TL_messageMediaPoll) {
                TLRPC.TL_messageMediaPoll tL_messageMediaPoll = (TLRPC.TL_messageMediaPoll) messageMedia2;
                if (!tL_messageMediaPoll.results.recent_voters.isEmpty()) {
                    arrayList.addAll(tL_messageMediaPoll.results.recent_voters);
                }
            }
        }
        TLRPC.MessageFwdHeader messageFwdHeader = message.fwd_from;
        if (messageFwdHeader != null) {
            int i9 = messageFwdHeader.from_id;
            if (i9 != 0 && !arrayList.contains(Integer.valueOf(i9))) {
                arrayList.add(Integer.valueOf(message.fwd_from.from_id));
            }
            int i10 = message.fwd_from.channel_id;
            if (i10 != 0 && !arrayList2.contains(Integer.valueOf(i10))) {
                arrayList2.add(Integer.valueOf(message.fwd_from.channel_id));
            }
            TLRPC.Peer peer = message.fwd_from.saved_from_peer;
            if (peer != null) {
                int i11 = peer.user_id;
                if (i11 == 0) {
                    int i12 = peer.channel_id;
                    if (i12 == 0) {
                        int i13 = peer.chat_id;
                        if (i13 != 0 && !arrayList2.contains(Integer.valueOf(i13))) {
                            arrayList2.add(Integer.valueOf(message.fwd_from.saved_from_peer.chat_id));
                        }
                    } else if (!arrayList2.contains(Integer.valueOf(i12))) {
                        arrayList2.add(Integer.valueOf(message.fwd_from.saved_from_peer.channel_id));
                    }
                } else if (!arrayList2.contains(Integer.valueOf(i11))) {
                    arrayList.add(Integer.valueOf(message.fwd_from.saved_from_peer.user_id));
                }
            }
        }
        int i14 = message.ttl;
        if (i14 < 0 && !arrayList2.contains(Integer.valueOf(-i14))) {
            arrayList2.add(Integer.valueOf(-message.ttl));
        }
    }

    /* JADX WARNING: Code restructure failed: missing block: B:2:0x0003, code lost:
        r11 = getMediaDataController().getDrafts();
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void getDialogs(int r8, int r9, int r10, boolean r11) {
        /*
            r7 = this;
            r0 = 0
            if (r11 == 0) goto L_0x001f
            org.telegram.messenger.MediaDataController r11 = r7.getMediaDataController()
            android.util.LongSparseArray r11 = r11.getDrafts()
            int r1 = r11.size()
            if (r1 <= 0) goto L_0x001f
            long[] r0 = new long[r1]
            r2 = 0
        L_0x0014:
            if (r2 >= r1) goto L_0x001f
            long r3 = r11.keyAt(r2)
            r0[r2] = r3
            int r2 = r2 + 1
            goto L_0x0014
        L_0x001f:
            r6 = r0
            org.telegram.messenger.DispatchQueue r11 = r7.storageQueue
            org.telegram.messenger.-$$Lambda$MessagesStorage$f8D9lgr0gxvDfd_8TVHf6N1ju8M r0 = new org.telegram.messenger.-$$Lambda$MessagesStorage$f8D9lgr0gxvDfd_8TVHf6N1ju8M
            r1 = r0
            r2 = r7
            r3 = r8
            r4 = r9
            r5 = r10
            r1.<init>(r3, r4, r5, r6)
            r11.postRunnable(r0)
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.getDialogs(int, int, int, boolean):void");
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v121, resolved type: org.telegram.tgnet.TLRPC$TL_dialog} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v122, resolved type: org.telegram.tgnet.TLRPC$TL_dialogFolder} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r0v123, resolved type: org.telegram.tgnet.TLRPC$TL_dialogFolder} */
    /* JADX WARNING: type inference failed for: r0v35 */
    /* JADX WARNING: Failed to insert additional move for type inference */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:111:0x028c A[Catch:{ Exception -> 0x0462 }] */
    /* JADX WARNING: Removed duplicated region for block: B:118:0x02b3 A[Catch:{ Exception -> 0x0462 }] */
    /* JADX WARNING: Removed duplicated region for block: B:40:0x013f A[Catch:{ Exception -> 0x0462 }] */
    /* JADX WARNING: Removed duplicated region for block: B:41:0x0141 A[Catch:{ Exception -> 0x0462 }] */
    /* JADX WARNING: Removed duplicated region for block: B:44:0x0156 A[Catch:{ Exception -> 0x0462 }] */
    /* JADX WARNING: Removed duplicated region for block: B:45:0x0158 A[Catch:{ Exception -> 0x0462 }] */
    /* JADX WARNING: Removed duplicated region for block: B:48:0x0171 A[Catch:{ Exception -> 0x0462 }] */
    /* JADX WARNING: Removed duplicated region for block: B:53:0x0193 A[Catch:{ Exception -> 0x0462 }] */
    /* JADX WARNING: Removed duplicated region for block: B:56:0x01a1 A[Catch:{ Exception -> 0x0462 }] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$getDialogs$137$MessagesStorage(int r24, int r25, int r26, long[] r27) {
        /*
            r23 = this;
            r1 = r23
            r2 = r27
            org.telegram.tgnet.TLRPC$TL_messages_dialogs r12 = new org.telegram.tgnet.TLRPC$TL_messages_dialogs
            r12.<init>()
            java.util.ArrayList r13 = new java.util.ArrayList
            r13.<init>()
            java.util.ArrayList r3 = new java.util.ArrayList     // Catch:{ Exception -> 0x0468 }
            r3.<init>()     // Catch:{ Exception -> 0x0468 }
            org.telegram.messenger.UserConfig r0 = r23.getUserConfig()     // Catch:{ Exception -> 0x0468 }
            int r0 = r0.getClientUserId()     // Catch:{ Exception -> 0x0468 }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x0468 }
            r3.add(r0)     // Catch:{ Exception -> 0x0468 }
            java.util.ArrayList r4 = new java.util.ArrayList     // Catch:{ Exception -> 0x0468 }
            r4.<init>()     // Catch:{ Exception -> 0x0468 }
            java.util.ArrayList r5 = new java.util.ArrayList     // Catch:{ Exception -> 0x0468 }
            r5.<init>()     // Catch:{ Exception -> 0x0468 }
            java.util.ArrayList r6 = new java.util.ArrayList     // Catch:{ Exception -> 0x0468 }
            r6.<init>()     // Catch:{ Exception -> 0x0468 }
            java.util.ArrayList r7 = new java.util.ArrayList     // Catch:{ Exception -> 0x0468 }
            r7.<init>()     // Catch:{ Exception -> 0x0468 }
            android.util.LongSparseArray r8 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x0468 }
            r8.<init>()     // Catch:{ Exception -> 0x0468 }
            java.util.ArrayList r9 = new java.util.ArrayList     // Catch:{ Exception -> 0x0468 }
            r10 = 2
            r9.<init>(r10)     // Catch:{ Exception -> 0x0468 }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r24)     // Catch:{ Exception -> 0x0468 }
            r9.add(r0)     // Catch:{ Exception -> 0x0468 }
            r14 = 0
        L_0x0049:
            int r0 = r9.size()     // Catch:{ Exception -> 0x0468 }
            r15 = 3
            if (r14 >= r0) goto L_0x02ee
            java.lang.Object r0 = r9.get(r14)     // Catch:{ Exception -> 0x02e8 }
            java.lang.Integer r0 = (java.lang.Integer) r0     // Catch:{ Exception -> 0x02e8 }
            int r0 = r0.intValue()     // Catch:{ Exception -> 0x02e8 }
            if (r14 != 0) goto L_0x0061
            r17 = r25
            r18 = r26
            goto L_0x0067
        L_0x0061:
            r17 = 50
            r17 = 0
            r18 = 50
        L_0x0067:
            org.telegram.SQLite.SQLiteDatabase r10 = r1.database     // Catch:{ Exception -> 0x02e8 }
            java.util.Locale r11 = java.util.Locale.US     // Catch:{ Exception -> 0x02e8 }
            r20 = r13
            java.lang.String r13 = "SELECT d.did, d.last_mid, d.unread_count, d.date, m.data, m.read_state, m.mid, m.send_state, s.flags, m.date, d.pts, d.inbox_max, d.outbox_max, m.replydata, d.pinned, d.unread_count_i, d.flags, d.folder_id, d.data FROM dialogs as d LEFT JOIN messages as m ON d.last_mid = m.mid LEFT JOIN dialog_settings as s ON d.did = s.did WHERE d.folder_id = %d ORDER BY d.pinned DESC, d.date DESC LIMIT %d,%d"
            java.lang.Object[] r1 = new java.lang.Object[r15]     // Catch:{ Exception -> 0x0462 }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x0462 }
            r19 = 0
            r1[r19] = r0     // Catch:{ Exception -> 0x0462 }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r17)     // Catch:{ Exception -> 0x0462 }
            r17 = 1
            r1[r17] = r0     // Catch:{ Exception -> 0x0462 }
            java.lang.Integer r0 = java.lang.Integer.valueOf(r18)     // Catch:{ Exception -> 0x0462 }
            r16 = 2
            r1[r16] = r0     // Catch:{ Exception -> 0x0462 }
            java.lang.String r0 = java.lang.String.format(r11, r13, r1)     // Catch:{ Exception -> 0x0462 }
            r1 = 0
            java.lang.Object[] r11 = new java.lang.Object[r1]     // Catch:{ Exception -> 0x0462 }
            org.telegram.SQLite.SQLiteCursor r10 = r10.queryFinalized(r0, r11)     // Catch:{ Exception -> 0x0462 }
        L_0x0094:
            boolean r0 = r10.next()     // Catch:{ Exception -> 0x0462 }
            if (r0 == 0) goto L_0x02cf
            r11 = r7
            r13 = r8
            long r7 = r10.longValue(r1)     // Catch:{ Exception -> 0x0462 }
            boolean r0 = org.telegram.messenger.DialogObject.isFolderDialogId(r7)     // Catch:{ Exception -> 0x0462 }
            if (r0 == 0) goto L_0x00e9
            org.telegram.tgnet.TLRPC$TL_dialogFolder r0 = new org.telegram.tgnet.TLRPC$TL_dialogFolder     // Catch:{ Exception -> 0x0462 }
            r0.<init>()     // Catch:{ Exception -> 0x0462 }
            r1 = 18
            boolean r17 = r10.isNull(r1)     // Catch:{ Exception -> 0x0462 }
            if (r17 != 0) goto L_0x00d9
            org.telegram.tgnet.NativeByteBuffer r1 = r10.byteBufferValue(r1)     // Catch:{ Exception -> 0x0462 }
            if (r1 == 0) goto L_0x00c7
            r18 = r11
            r15 = 0
            int r11 = r1.readInt32(r15)     // Catch:{ Exception -> 0x0462 }
            org.telegram.tgnet.TLRPC$TL_folder r11 = org.telegram.tgnet.TLRPC.TL_folder.TLdeserialize(r1, r11, r15)     // Catch:{ Exception -> 0x0462 }
            r0.folder = r11     // Catch:{ Exception -> 0x0462 }
            goto L_0x00d5
        L_0x00c7:
            r18 = r11
            org.telegram.tgnet.TLRPC$TL_folder r11 = new org.telegram.tgnet.TLRPC$TL_folder     // Catch:{ Exception -> 0x0462 }
            r11.<init>()     // Catch:{ Exception -> 0x0462 }
            r0.folder = r11     // Catch:{ Exception -> 0x0462 }
            org.telegram.tgnet.TLRPC$TL_folder r11 = r0.folder     // Catch:{ Exception -> 0x0462 }
            int r15 = (int) r7     // Catch:{ Exception -> 0x0462 }
            r11.id = r15     // Catch:{ Exception -> 0x0462 }
        L_0x00d5:
            r1.reuse()     // Catch:{ Exception -> 0x0462 }
            goto L_0x00db
        L_0x00d9:
            r18 = r11
        L_0x00db:
            if (r14 != 0) goto L_0x00f0
            org.telegram.tgnet.TLRPC$TL_folder r1 = r0.folder     // Catch:{ Exception -> 0x0462 }
            int r1 = r1.id     // Catch:{ Exception -> 0x0462 }
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x0462 }
            r9.add(r1)     // Catch:{ Exception -> 0x0462 }
            goto L_0x00f0
        L_0x00e9:
            r18 = r11
            org.telegram.tgnet.TLRPC$TL_dialog r0 = new org.telegram.tgnet.TLRPC$TL_dialog     // Catch:{ Exception -> 0x0462 }
            r0.<init>()     // Catch:{ Exception -> 0x0462 }
        L_0x00f0:
            r1 = r0
            r1.id = r7     // Catch:{ Exception -> 0x0462 }
            r11 = 1
            int r0 = r10.intValue(r11)     // Catch:{ Exception -> 0x0462 }
            r1.top_message = r0     // Catch:{ Exception -> 0x0462 }
            r11 = 2
            int r0 = r10.intValue(r11)     // Catch:{ Exception -> 0x0462 }
            r1.unread_count = r0     // Catch:{ Exception -> 0x0462 }
            r11 = 3
            int r0 = r10.intValue(r11)     // Catch:{ Exception -> 0x0462 }
            r1.last_message_date = r0     // Catch:{ Exception -> 0x0462 }
            r0 = 10
            int r0 = r10.intValue(r0)     // Catch:{ Exception -> 0x0462 }
            r1.pts = r0     // Catch:{ Exception -> 0x0462 }
            int r0 = r1.pts     // Catch:{ Exception -> 0x0462 }
            if (r0 == 0) goto L_0x011e
            r15 = r13
            r11 = r14
            long r13 = r1.id     // Catch:{ Exception -> 0x0462 }
            int r0 = (int) r13     // Catch:{ Exception -> 0x0462 }
            if (r0 <= 0) goto L_0x011c
            goto L_0x0120
        L_0x011c:
            r0 = 1
            goto L_0x0121
        L_0x011e:
            r15 = r13
            r11 = r14
        L_0x0120:
            r0 = 0
        L_0x0121:
            r1.flags = r0     // Catch:{ Exception -> 0x0462 }
            r0 = 11
            int r0 = r10.intValue(r0)     // Catch:{ Exception -> 0x0462 }
            r1.read_inbox_max_id = r0     // Catch:{ Exception -> 0x0462 }
            r0 = 12
            int r0 = r10.intValue(r0)     // Catch:{ Exception -> 0x0462 }
            r1.read_outbox_max_id = r0     // Catch:{ Exception -> 0x0462 }
            r0 = 14
            int r0 = r10.intValue(r0)     // Catch:{ Exception -> 0x0462 }
            r1.pinnedNum = r0     // Catch:{ Exception -> 0x0462 }
            int r0 = r1.pinnedNum     // Catch:{ Exception -> 0x0462 }
            if (r0 == 0) goto L_0x0141
            r0 = 1
            goto L_0x0142
        L_0x0141:
            r0 = 0
        L_0x0142:
            r1.pinned = r0     // Catch:{ Exception -> 0x0462 }
            r0 = 15
            int r0 = r10.intValue(r0)     // Catch:{ Exception -> 0x0462 }
            r1.unread_mentions_count = r0     // Catch:{ Exception -> 0x0462 }
            r0 = 16
            int r0 = r10.intValue(r0)     // Catch:{ Exception -> 0x0462 }
            r13 = 1
            r0 = r0 & r13
            if (r0 == 0) goto L_0x0158
            r0 = 1
            goto L_0x0159
        L_0x0158:
            r0 = 0
        L_0x0159:
            r1.unread_mark = r0     // Catch:{ Exception -> 0x0462 }
            r0 = 8
            long r13 = r10.longValue(r0)     // Catch:{ Exception -> 0x0462 }
            int r0 = (int) r13     // Catch:{ Exception -> 0x0462 }
            r21 = r9
            org.telegram.tgnet.TLRPC$TL_peerNotifySettings r9 = new org.telegram.tgnet.TLRPC$TL_peerNotifySettings     // Catch:{ Exception -> 0x0462 }
            r9.<init>()     // Catch:{ Exception -> 0x0462 }
            r1.notify_settings = r9     // Catch:{ Exception -> 0x0462 }
            r9 = 1
            r0 = r0 & r9
            r9 = 32
            if (r0 == 0) goto L_0x0184
            org.telegram.tgnet.TLRPC$PeerNotifySettings r0 = r1.notify_settings     // Catch:{ Exception -> 0x0462 }
            long r13 = r13 >> r9
            int r14 = (int) r13     // Catch:{ Exception -> 0x0462 }
            r0.mute_until = r14     // Catch:{ Exception -> 0x0462 }
            org.telegram.tgnet.TLRPC$PeerNotifySettings r0 = r1.notify_settings     // Catch:{ Exception -> 0x0462 }
            int r0 = r0.mute_until     // Catch:{ Exception -> 0x0462 }
            if (r0 != 0) goto L_0x0184
            org.telegram.tgnet.TLRPC$PeerNotifySettings r0 = r1.notify_settings     // Catch:{ Exception -> 0x0462 }
            r13 = 2147483647(0x7fffffff, float:NaN)
            r0.mute_until = r13     // Catch:{ Exception -> 0x0462 }
        L_0x0184:
            r0 = 17
            int r0 = r10.intValue(r0)     // Catch:{ Exception -> 0x0462 }
            r1.folder_id = r0     // Catch:{ Exception -> 0x0462 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r0 = r12.dialogs     // Catch:{ Exception -> 0x0462 }
            r0.add(r1)     // Catch:{ Exception -> 0x0462 }
            if (r2 == 0) goto L_0x019a
            java.lang.Long r0 = java.lang.Long.valueOf(r7)     // Catch:{ Exception -> 0x0462 }
            r6.add(r0)     // Catch:{ Exception -> 0x0462 }
        L_0x019a:
            r0 = 4
            org.telegram.tgnet.NativeByteBuffer r0 = r10.byteBufferValue(r0)     // Catch:{ Exception -> 0x0462 }
            if (r0 == 0) goto L_0x027d
            r7 = 0
            int r8 = r0.readInt32(r7)     // Catch:{ Exception -> 0x0462 }
            org.telegram.tgnet.TLRPC$Message r8 = org.telegram.tgnet.TLRPC.Message.TLdeserialize(r0, r8, r7)     // Catch:{ Exception -> 0x0462 }
            org.telegram.messenger.UserConfig r7 = r23.getUserConfig()     // Catch:{ Exception -> 0x0462 }
            int r7 = r7.clientUserId     // Catch:{ Exception -> 0x0462 }
            r8.readAttachPath(r0, r7)     // Catch:{ Exception -> 0x0462 }
            r0.reuse()     // Catch:{ Exception -> 0x0462 }
            if (r8 == 0) goto L_0x027d
            r0 = 5
            int r0 = r10.intValue(r0)     // Catch:{ Exception -> 0x0462 }
            org.telegram.messenger.MessageObject.setUnreadFlags(r8, r0)     // Catch:{ Exception -> 0x0462 }
            r0 = 6
            int r0 = r10.intValue(r0)     // Catch:{ Exception -> 0x0462 }
            r8.id = r0     // Catch:{ Exception -> 0x0462 }
            r0 = 9
            int r0 = r10.intValue(r0)     // Catch:{ Exception -> 0x0462 }
            if (r0 == 0) goto L_0x01d1
            r1.last_message_date = r0     // Catch:{ Exception -> 0x0462 }
        L_0x01d1:
            r0 = 7
            int r0 = r10.intValue(r0)     // Catch:{ Exception -> 0x0462 }
            r8.send_state = r0     // Catch:{ Exception -> 0x0462 }
            long r13 = r1.id     // Catch:{ Exception -> 0x0462 }
            r8.dialog_id = r13     // Catch:{ Exception -> 0x0462 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r0 = r12.messages     // Catch:{ Exception -> 0x0462 }
            r0.add(r8)     // Catch:{ Exception -> 0x0462 }
            addUsersAndChatsFromMessage(r8, r3, r4)     // Catch:{ Exception -> 0x0462 }
            int r0 = r8.reply_to_msg_id     // Catch:{ Exception -> 0x0273 }
            if (r0 == 0) goto L_0x027d
            org.telegram.tgnet.TLRPC$MessageAction r0 = r8.action     // Catch:{ Exception -> 0x0273 }
            boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC.TL_messageActionPinMessage     // Catch:{ Exception -> 0x0273 }
            if (r0 != 0) goto L_0x01fa
            org.telegram.tgnet.TLRPC$MessageAction r0 = r8.action     // Catch:{ Exception -> 0x0273 }
            boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC.TL_messageActionPaymentSent     // Catch:{ Exception -> 0x0273 }
            if (r0 != 0) goto L_0x01fa
            org.telegram.tgnet.TLRPC$MessageAction r0 = r8.action     // Catch:{ Exception -> 0x0273 }
            boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC.TL_messageActionGameScore     // Catch:{ Exception -> 0x0273 }
            if (r0 == 0) goto L_0x027d
        L_0x01fa:
            r0 = 13
            boolean r7 = r10.isNull(r0)     // Catch:{ Exception -> 0x0273 }
            if (r7 != 0) goto L_0x0239
            org.telegram.tgnet.NativeByteBuffer r0 = r10.byteBufferValue(r0)     // Catch:{ Exception -> 0x0273 }
            if (r0 == 0) goto L_0x0239
            r7 = 0
            int r13 = r0.readInt32(r7)     // Catch:{ Exception -> 0x0273 }
            org.telegram.tgnet.TLRPC$Message r13 = org.telegram.tgnet.TLRPC.Message.TLdeserialize(r0, r13, r7)     // Catch:{ Exception -> 0x0273 }
            r8.replyMessage = r13     // Catch:{ Exception -> 0x0273 }
            org.telegram.tgnet.TLRPC$Message r7 = r8.replyMessage     // Catch:{ Exception -> 0x0273 }
            org.telegram.messenger.UserConfig r13 = r23.getUserConfig()     // Catch:{ Exception -> 0x0273 }
            int r13 = r13.clientUserId     // Catch:{ Exception -> 0x0273 }
            r7.readAttachPath(r0, r13)     // Catch:{ Exception -> 0x0273 }
            r0.reuse()     // Catch:{ Exception -> 0x0273 }
            org.telegram.tgnet.TLRPC$Message r0 = r8.replyMessage     // Catch:{ Exception -> 0x0273 }
            if (r0 == 0) goto L_0x0239
            boolean r0 = org.telegram.messenger.MessageObject.isMegagroup(r8)     // Catch:{ Exception -> 0x0273 }
            if (r0 == 0) goto L_0x0234
            org.telegram.tgnet.TLRPC$Message r0 = r8.replyMessage     // Catch:{ Exception -> 0x0273 }
            int r7 = r0.flags     // Catch:{ Exception -> 0x0273 }
            r13 = -2147483648(0xfffffffvar_, float:-0.0)
            r7 = r7 | r13
            r0.flags = r7     // Catch:{ Exception -> 0x0273 }
        L_0x0234:
            org.telegram.tgnet.TLRPC$Message r0 = r8.replyMessage     // Catch:{ Exception -> 0x0273 }
            addUsersAndChatsFromMessage(r0, r3, r4)     // Catch:{ Exception -> 0x0273 }
        L_0x0239:
            org.telegram.tgnet.TLRPC$Message r0 = r8.replyMessage     // Catch:{ Exception -> 0x0273 }
            if (r0 != 0) goto L_0x027d
            int r0 = r8.reply_to_msg_id     // Catch:{ Exception -> 0x0273 }
            long r13 = (long) r0     // Catch:{ Exception -> 0x0273 }
            org.telegram.tgnet.TLRPC$Peer r0 = r8.to_id     // Catch:{ Exception -> 0x0273 }
            int r0 = r0.channel_id     // Catch:{ Exception -> 0x0273 }
            if (r0 == 0) goto L_0x0250
            org.telegram.tgnet.TLRPC$Peer r0 = r8.to_id     // Catch:{ Exception -> 0x0273 }
            int r0 = r0.channel_id     // Catch:{ Exception -> 0x0273 }
            r22 = r6
            long r6 = (long) r0
            long r6 = r6 << r9
            long r13 = r13 | r6
            goto L_0x0252
        L_0x0250:
            r22 = r6
        L_0x0252:
            java.lang.Long r0 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x0271 }
            r6 = r18
            boolean r0 = r6.contains(r0)     // Catch:{ Exception -> 0x026e }
            if (r0 != 0) goto L_0x0265
            java.lang.Long r0 = java.lang.Long.valueOf(r13)     // Catch:{ Exception -> 0x026e }
            r6.add(r0)     // Catch:{ Exception -> 0x026e }
        L_0x0265:
            long r13 = r1.id     // Catch:{ Exception -> 0x026e }
            r7 = r15
            r7.put(r13, r8)     // Catch:{ Exception -> 0x026c }
            goto L_0x0282
        L_0x026c:
            r0 = move-exception
            goto L_0x0279
        L_0x026e:
            r0 = move-exception
            r7 = r15
            goto L_0x0279
        L_0x0271:
            r0 = move-exception
            goto L_0x0276
        L_0x0273:
            r0 = move-exception
            r22 = r6
        L_0x0276:
            r7 = r15
            r6 = r18
        L_0x0279:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)     // Catch:{ Exception -> 0x0462 }
            goto L_0x0282
        L_0x027d:
            r22 = r6
            r7 = r15
            r6 = r18
        L_0x0282:
            long r13 = r1.id     // Catch:{ Exception -> 0x0462 }
            int r0 = (int) r13     // Catch:{ Exception -> 0x0462 }
            long r13 = r1.id     // Catch:{ Exception -> 0x0462 }
            long r8 = r13 >> r9
            int r1 = (int) r8     // Catch:{ Exception -> 0x0462 }
            if (r0 == 0) goto L_0x02b3
            if (r0 <= 0) goto L_0x02a0
            java.lang.Integer r1 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x0462 }
            boolean r1 = r3.contains(r1)     // Catch:{ Exception -> 0x0462 }
            if (r1 != 0) goto L_0x02c4
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x0462 }
            r3.add(r0)     // Catch:{ Exception -> 0x0462 }
            goto L_0x02c4
        L_0x02a0:
            int r0 = -r0
            java.lang.Integer r1 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x0462 }
            boolean r1 = r4.contains(r1)     // Catch:{ Exception -> 0x0462 }
            if (r1 != 0) goto L_0x02c4
            java.lang.Integer r0 = java.lang.Integer.valueOf(r0)     // Catch:{ Exception -> 0x0462 }
            r4.add(r0)     // Catch:{ Exception -> 0x0462 }
            goto L_0x02c4
        L_0x02b3:
            java.lang.Integer r0 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x0462 }
            boolean r0 = r5.contains(r0)     // Catch:{ Exception -> 0x0462 }
            if (r0 != 0) goto L_0x02c4
            java.lang.Integer r0 = java.lang.Integer.valueOf(r1)     // Catch:{ Exception -> 0x0462 }
            r5.add(r0)     // Catch:{ Exception -> 0x0462 }
        L_0x02c4:
            r8 = r7
            r14 = r11
            r9 = r21
            r1 = 0
            r15 = 3
            r7 = r6
            r6 = r22
            goto L_0x0094
        L_0x02cf:
            r22 = r6
            r6 = r7
            r7 = r8
            r21 = r9
            r11 = r14
            r10.dispose()     // Catch:{ Exception -> 0x0462 }
            int r14 = r11 + 1
            r1 = r23
            r8 = r7
            r13 = r20
            r9 = r21
            r10 = 2
            r7 = r6
            r6 = r22
            goto L_0x0049
        L_0x02e8:
            r0 = move-exception
            r14 = r13
            r13 = r23
            goto L_0x046b
        L_0x02ee:
            r22 = r6
            r6 = r7
            r7 = r8
            r20 = r13
            boolean r0 = r6.isEmpty()     // Catch:{ Exception -> 0x0462 }
            java.lang.String r1 = ","
            if (r0 != 0) goto L_0x037d
            r13 = r23
            org.telegram.SQLite.SQLiteDatabase r0 = r13.database     // Catch:{ Exception -> 0x037a }
            java.util.Locale r8 = java.util.Locale.US     // Catch:{ Exception -> 0x037a }
            java.lang.String r9 = "SELECT data, mid, date, uid FROM messages WHERE mid IN(%s)"
            r10 = 1
            java.lang.Object[] r11 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x037a }
            java.lang.String r6 = android.text.TextUtils.join(r1, r6)     // Catch:{ Exception -> 0x037a }
            r10 = 0
            r11[r10] = r6     // Catch:{ Exception -> 0x037a }
            java.lang.String r6 = java.lang.String.format(r8, r9, r11)     // Catch:{ Exception -> 0x037a }
            java.lang.Object[] r8 = new java.lang.Object[r10]     // Catch:{ Exception -> 0x037a }
            org.telegram.SQLite.SQLiteCursor r0 = r0.queryFinalized(r6, r8)     // Catch:{ Exception -> 0x037a }
        L_0x0318:
            boolean r6 = r0.next()     // Catch:{ Exception -> 0x037a }
            if (r6 == 0) goto L_0x0376
            org.telegram.tgnet.NativeByteBuffer r6 = r0.byteBufferValue(r10)     // Catch:{ Exception -> 0x037a }
            if (r6 == 0) goto L_0x0370
            int r8 = r6.readInt32(r10)     // Catch:{ Exception -> 0x037a }
            org.telegram.tgnet.TLRPC$Message r8 = org.telegram.tgnet.TLRPC.Message.TLdeserialize(r6, r8, r10)     // Catch:{ Exception -> 0x037a }
            org.telegram.messenger.UserConfig r9 = r23.getUserConfig()     // Catch:{ Exception -> 0x037a }
            int r9 = r9.clientUserId     // Catch:{ Exception -> 0x037a }
            r8.readAttachPath(r6, r9)     // Catch:{ Exception -> 0x037a }
            r6.reuse()     // Catch:{ Exception -> 0x037a }
            r6 = 1
            int r9 = r0.intValue(r6)     // Catch:{ Exception -> 0x037a }
            r8.id = r9     // Catch:{ Exception -> 0x037a }
            r6 = 2
            int r9 = r0.intValue(r6)     // Catch:{ Exception -> 0x037a }
            r8.date = r9     // Catch:{ Exception -> 0x037a }
            r9 = 3
            long r10 = r0.longValue(r9)     // Catch:{ Exception -> 0x037a }
            r8.dialog_id = r10     // Catch:{ Exception -> 0x037a }
            addUsersAndChatsFromMessage(r8, r3, r4)     // Catch:{ Exception -> 0x037a }
            long r10 = r8.dialog_id     // Catch:{ Exception -> 0x037a }
            java.lang.Object r10 = r7.get(r10)     // Catch:{ Exception -> 0x037a }
            org.telegram.tgnet.TLRPC$Message r10 = (org.telegram.tgnet.TLRPC.Message) r10     // Catch:{ Exception -> 0x037a }
            if (r10 == 0) goto L_0x0372
            r10.replyMessage = r8     // Catch:{ Exception -> 0x037a }
            long r14 = r10.dialog_id     // Catch:{ Exception -> 0x037a }
            r8.dialog_id = r14     // Catch:{ Exception -> 0x037a }
            boolean r8 = org.telegram.messenger.MessageObject.isMegagroup(r10)     // Catch:{ Exception -> 0x037a }
            if (r8 == 0) goto L_0x0372
            org.telegram.tgnet.TLRPC$Message r8 = r10.replyMessage     // Catch:{ Exception -> 0x037a }
            int r10 = r8.flags     // Catch:{ Exception -> 0x037a }
            r11 = -2147483648(0xfffffffvar_, float:-0.0)
            r10 = r10 | r11
            r8.flags = r10     // Catch:{ Exception -> 0x037a }
            goto L_0x0374
        L_0x0370:
            r6 = 2
            r9 = 3
        L_0x0372:
            r11 = -2147483648(0xfffffffvar_, float:-0.0)
        L_0x0374:
            r10 = 0
            goto L_0x0318
        L_0x0376:
            r0.dispose()     // Catch:{ Exception -> 0x037a }
            goto L_0x037f
        L_0x037a:
            r0 = move-exception
            goto L_0x0465
        L_0x037d:
            r13 = r23
        L_0x037f:
            if (r2 == 0) goto L_0x041c
            java.util.ArrayList r0 = new java.util.ArrayList     // Catch:{ Exception -> 0x037a }
            r0.<init>()     // Catch:{ Exception -> 0x037a }
            r6 = 0
        L_0x0387:
            int r7 = r2.length     // Catch:{ Exception -> 0x037a }
            if (r6 >= r7) goto L_0x03cf
            r7 = r2[r6]     // Catch:{ Exception -> 0x037a }
            int r8 = (int) r7     // Catch:{ Exception -> 0x037a }
            if (r8 <= 0) goto L_0x03a1
            java.lang.Integer r7 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x037a }
            boolean r7 = r3.contains(r7)     // Catch:{ Exception -> 0x037a }
            if (r7 != 0) goto L_0x03b3
            java.lang.Integer r7 = java.lang.Integer.valueOf(r8)     // Catch:{ Exception -> 0x037a }
            r3.add(r7)     // Catch:{ Exception -> 0x037a }
            goto L_0x03b3
        L_0x03a1:
            int r7 = -r8
            java.lang.Integer r8 = java.lang.Integer.valueOf(r7)     // Catch:{ Exception -> 0x037a }
            boolean r8 = r4.contains(r8)     // Catch:{ Exception -> 0x037a }
            if (r8 != 0) goto L_0x03b3
            java.lang.Integer r7 = java.lang.Integer.valueOf(r7)     // Catch:{ Exception -> 0x037a }
            r4.add(r7)     // Catch:{ Exception -> 0x037a }
        L_0x03b3:
            r7 = r2[r6]     // Catch:{ Exception -> 0x037a }
            java.lang.Long r7 = java.lang.Long.valueOf(r7)     // Catch:{ Exception -> 0x037a }
            r8 = r22
            boolean r7 = r8.contains(r7)     // Catch:{ Exception -> 0x037a }
            if (r7 != 0) goto L_0x03ca
            r9 = r2[r6]     // Catch:{ Exception -> 0x037a }
            java.lang.Long r7 = java.lang.Long.valueOf(r9)     // Catch:{ Exception -> 0x037a }
            r0.add(r7)     // Catch:{ Exception -> 0x037a }
        L_0x03ca:
            int r6 = r6 + 1
            r22 = r8
            goto L_0x0387
        L_0x03cf:
            boolean r2 = r0.isEmpty()     // Catch:{ Exception -> 0x037a }
            if (r2 != 0) goto L_0x0413
            android.util.LongSparseArray r2 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x037a }
            int r6 = r0.size()     // Catch:{ Exception -> 0x037a }
            r2.<init>(r6)     // Catch:{ Exception -> 0x037a }
            org.telegram.SQLite.SQLiteDatabase r6 = r13.database     // Catch:{ Exception -> 0x037a }
            java.util.Locale r7 = java.util.Locale.US     // Catch:{ Exception -> 0x037a }
            java.lang.String r8 = "SELECT did, folder_id FROM dialogs WHERE did IN(%s)"
            r9 = 1
            java.lang.Object[] r10 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x037a }
            java.lang.String r0 = android.text.TextUtils.join(r1, r0)     // Catch:{ Exception -> 0x037a }
            r9 = 0
            r10[r9] = r0     // Catch:{ Exception -> 0x037a }
            java.lang.String r0 = java.lang.String.format(r7, r8, r10)     // Catch:{ Exception -> 0x037a }
            java.lang.Object[] r7 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x037a }
            org.telegram.SQLite.SQLiteCursor r0 = r6.queryFinalized(r0, r7)     // Catch:{ Exception -> 0x037a }
        L_0x03f8:
            boolean r6 = r0.next()     // Catch:{ Exception -> 0x037a }
            if (r6 == 0) goto L_0x040f
            long r6 = r0.longValue(r9)     // Catch:{ Exception -> 0x037a }
            r8 = 1
            int r10 = r0.intValue(r8)     // Catch:{ Exception -> 0x037a }
            java.lang.Integer r10 = java.lang.Integer.valueOf(r10)     // Catch:{ Exception -> 0x037a }
            r2.put(r6, r10)     // Catch:{ Exception -> 0x037a }
            goto L_0x03f8
        L_0x040f:
            r0.dispose()     // Catch:{ Exception -> 0x037a }
            goto L_0x0414
        L_0x0413:
            r2 = 0
        L_0x0414:
            org.telegram.messenger.-$$Lambda$MessagesStorage$owGsZv1e-cI-GuqRk1tSp2whjF0 r0 = new org.telegram.messenger.-$$Lambda$MessagesStorage$owGsZv1e-cI-GuqRk1tSp2whjF0     // Catch:{ Exception -> 0x037a }
            r0.<init>(r2)     // Catch:{ Exception -> 0x037a }
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0)     // Catch:{ Exception -> 0x037a }
        L_0x041c:
            boolean r0 = r5.isEmpty()     // Catch:{ Exception -> 0x037a }
            if (r0 != 0) goto L_0x042c
            java.lang.String r0 = android.text.TextUtils.join(r1, r5)     // Catch:{ Exception -> 0x037a }
            r14 = r20
            r13.getEncryptedChatsInternal(r0, r14, r3)     // Catch:{ Exception -> 0x0460 }
            goto L_0x042e
        L_0x042c:
            r14 = r20
        L_0x042e:
            boolean r0 = r4.isEmpty()     // Catch:{ Exception -> 0x0460 }
            if (r0 != 0) goto L_0x043d
            java.lang.String r0 = android.text.TextUtils.join(r1, r4)     // Catch:{ Exception -> 0x0460 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r2 = r12.chats     // Catch:{ Exception -> 0x0460 }
            r13.getChatsInternal(r0, r2)     // Catch:{ Exception -> 0x0460 }
        L_0x043d:
            boolean r0 = r3.isEmpty()     // Catch:{ Exception -> 0x0460 }
            if (r0 != 0) goto L_0x044c
            java.lang.String r0 = android.text.TextUtils.join(r1, r3)     // Catch:{ Exception -> 0x0460 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r1 = r12.users     // Catch:{ Exception -> 0x0460 }
            r13.getUsersInternal(r0, r1)     // Catch:{ Exception -> 0x0460 }
        L_0x044c:
            org.telegram.messenger.MessagesController r2 = r23.getMessagesController()     // Catch:{ Exception -> 0x0460 }
            r8 = 1
            r9 = 0
            r10 = 0
            r11 = 1
            r3 = r12
            r4 = r14
            r5 = r24
            r6 = r25
            r7 = r26
            r2.processLoadedDialogs(r3, r4, r5, r6, r7, r8, r9, r10, r11)     // Catch:{ Exception -> 0x0460 }
            goto L_0x0492
        L_0x0460:
            r0 = move-exception
            goto L_0x046b
        L_0x0462:
            r0 = move-exception
            r13 = r23
        L_0x0465:
            r14 = r20
            goto L_0x046b
        L_0x0468:
            r0 = move-exception
            r14 = r13
            r13 = r1
        L_0x046b:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r1 = r12.dialogs
            r1.clear()
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r1 = r12.users
            r1.clear()
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r1 = r12.chats
            r1.clear()
            r14.clear()
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
            org.telegram.messenger.MessagesController r2 = r23.getMessagesController()
            r6 = 0
            r7 = 100
            r8 = 1
            r9 = 1
            r10 = 0
            r11 = 1
            r3 = r12
            r4 = r14
            r5 = r24
            r2.processLoadedDialogs(r3, r4, r5, r6, r7, r8, r9, r10, r11)
        L_0x0492:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$getDialogs$137$MessagesStorage(int, int, int, long[]):void");
    }

    public /* synthetic */ void lambda$null$136$MessagesStorage(LongSparseArray longSparseArray) {
        MediaDataController mediaDataController = getMediaDataController();
        mediaDataController.clearDraftsFolderIds();
        if (longSparseArray != null) {
            int size = longSparseArray.size();
            for (int i = 0; i < size; i++) {
                mediaDataController.setDraftFolderId(longSparseArray.keyAt(i), ((Integer) longSparseArray.valueAt(i)).intValue());
            }
        }
    }

    public static void createFirstHoles(long j, SQLitePreparedStatement sQLitePreparedStatement, SQLitePreparedStatement sQLitePreparedStatement2, int i) throws Exception {
        sQLitePreparedStatement.requery();
        sQLitePreparedStatement.bindLong(1, j);
        sQLitePreparedStatement.bindInteger(2, i == 1 ? 1 : 0);
        sQLitePreparedStatement.bindInteger(3, i);
        sQLitePreparedStatement.step();
        for (int i2 = 0; i2 < 5; i2++) {
            sQLitePreparedStatement2.requery();
            sQLitePreparedStatement2.bindLong(1, j);
            sQLitePreparedStatement2.bindInteger(2, i2);
            sQLitePreparedStatement2.bindInteger(3, i == 1 ? 1 : 0);
            sQLitePreparedStatement2.bindInteger(4, i);
            sQLitePreparedStatement2.step();
        }
    }

    /* JADX WARNING: Removed duplicated region for block: B:114:0x02b4 A[SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:35:0x00f5 A[SYNTHETIC, Splitter:B:35:0x00f5] */
    /* JADX WARNING: Removed duplicated region for block: B:53:0x017a A[Catch:{ Exception -> 0x02f5 }] */
    /* JADX WARNING: Removed duplicated region for block: B:54:0x017d A[Catch:{ Exception -> 0x02f5 }] */
    /* JADX WARNING: Removed duplicated region for block: B:57:0x018d A[Catch:{ Exception -> 0x02f5 }] */
    /* JADX WARNING: Removed duplicated region for block: B:58:0x018f A[Catch:{ Exception -> 0x02f5 }] */
    /* JADX WARNING: Removed duplicated region for block: B:61:0x019e A[Catch:{ Exception -> 0x02f5 }] */
    /* JADX WARNING: Removed duplicated region for block: B:64:0x01c9 A[Catch:{ Exception -> 0x02f5 }] */
    /* JADX WARNING: Removed duplicated region for block: B:68:0x01ee A[Catch:{ Exception -> 0x02f5 }] */
    /* JADX WARNING: Removed duplicated region for block: B:71:0x01fc  */
    /* JADX WARNING: Removed duplicated region for block: B:80:0x0260 A[Catch:{ Exception -> 0x02f1 }] */
    /* JADX WARNING: Removed duplicated region for block: B:81:0x0262 A[Catch:{ Exception -> 0x02f1 }] */
    /* JADX WARNING: Removed duplicated region for block: B:84:0x0275 A[Catch:{ Exception -> 0x02f1 }] */
    /* JADX WARNING: Removed duplicated region for block: B:85:0x028c A[Catch:{ Exception -> 0x02f1 }] */
    /* JADX WARNING: Removed duplicated region for block: B:88:0x0295 A[Catch:{ Exception -> 0x02f1 }] */
    /* JADX WARNING: Removed duplicated region for block: B:91:0x029c A[Catch:{ Exception -> 0x02f1 }] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void putDialogsInternal(org.telegram.tgnet.TLRPC.messages_Dialogs r22, int r23) {
        /*
            r21 = this;
            r1 = r21
            r0 = r22
            r2 = r23
            org.telegram.SQLite.SQLiteDatabase r3 = r1.database     // Catch:{ Exception -> 0x02f5 }
            r3.beginTransaction()     // Catch:{ Exception -> 0x02f5 }
            android.util.LongSparseArray r3 = new android.util.LongSparseArray     // Catch:{ Exception -> 0x02f5 }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r4 = r0.messages     // Catch:{ Exception -> 0x02f5 }
            int r4 = r4.size()     // Catch:{ Exception -> 0x02f5 }
            r3.<init>(r4)     // Catch:{ Exception -> 0x02f5 }
            r5 = 0
        L_0x0017:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r6 = r0.messages     // Catch:{ Exception -> 0x02f5 }
            int r6 = r6.size()     // Catch:{ Exception -> 0x02f5 }
            if (r5 >= r6) goto L_0x0031
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r6 = r0.messages     // Catch:{ Exception -> 0x02f5 }
            java.lang.Object r6 = r6.get(r5)     // Catch:{ Exception -> 0x02f5 }
            org.telegram.tgnet.TLRPC$Message r6 = (org.telegram.tgnet.TLRPC.Message) r6     // Catch:{ Exception -> 0x02f5 }
            long r7 = org.telegram.messenger.MessageObject.getDialogId(r6)     // Catch:{ Exception -> 0x02f5 }
            r3.put(r7, r6)     // Catch:{ Exception -> 0x02f5 }
            int r5 = r5 + 1
            goto L_0x0017
        L_0x0031:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r5 = r0.dialogs     // Catch:{ Exception -> 0x02f5 }
            boolean r5 = r5.isEmpty()     // Catch:{ Exception -> 0x02f5 }
            if (r5 != 0) goto L_0x02db
            org.telegram.SQLite.SQLiteDatabase r5 = r1.database     // Catch:{ Exception -> 0x02f1 }
            java.lang.String r6 = "REPLACE INTO messages VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, NULL, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r5 = r5.executeFast(r6)     // Catch:{ Exception -> 0x02f1 }
            org.telegram.SQLite.SQLiteDatabase r6 = r1.database     // Catch:{ Exception -> 0x02f1 }
            java.lang.String r7 = "REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r6 = r6.executeFast(r7)     // Catch:{ Exception -> 0x02f1 }
            org.telegram.SQLite.SQLiteDatabase r7 = r1.database     // Catch:{ Exception -> 0x02f1 }
            java.lang.String r8 = "REPLACE INTO media_v2 VALUES(?, ?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r7 = r7.executeFast(r8)     // Catch:{ Exception -> 0x02f1 }
            org.telegram.SQLite.SQLiteDatabase r8 = r1.database     // Catch:{ Exception -> 0x02f1 }
            java.lang.String r9 = "REPLACE INTO dialog_settings VALUES(?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r8 = r8.executeFast(r9)     // Catch:{ Exception -> 0x02f1 }
            org.telegram.SQLite.SQLiteDatabase r9 = r1.database     // Catch:{ Exception -> 0x02f1 }
            java.lang.String r10 = "REPLACE INTO messages_holes VALUES(?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r9 = r9.executeFast(r10)     // Catch:{ Exception -> 0x02f1 }
            org.telegram.SQLite.SQLiteDatabase r10 = r1.database     // Catch:{ Exception -> 0x02f1 }
            java.lang.String r11 = "REPLACE INTO media_holes_v2 VALUES(?, ?, ?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r10 = r10.executeFast(r11)     // Catch:{ Exception -> 0x02f1 }
            r12 = 0
            r13 = 0
        L_0x006b:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r14 = r0.dialogs     // Catch:{ Exception -> 0x02f1 }
            int r14 = r14.size()     // Catch:{ Exception -> 0x02f1 }
            if (r12 >= r14) goto L_0x02c1
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Dialog> r14 = r0.dialogs     // Catch:{ Exception -> 0x02f1 }
            java.lang.Object r14 = r14.get(r12)     // Catch:{ Exception -> 0x02f1 }
            org.telegram.tgnet.TLRPC$Dialog r14 = (org.telegram.tgnet.TLRPC.Dialog) r14     // Catch:{ Exception -> 0x02f1 }
            org.telegram.messenger.DialogObject.initDialog(r14)     // Catch:{ Exception -> 0x02f1 }
            r11 = 1
            if (r2 != r11) goto L_0x00b1
            org.telegram.SQLite.SQLiteDatabase r11 = r1.database     // Catch:{ Exception -> 0x02f5 }
            java.lang.StringBuilder r15 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x02f5 }
            r15.<init>()     // Catch:{ Exception -> 0x02f5 }
            java.lang.String r4 = "SELECT did FROM dialogs WHERE did = "
            r15.append(r4)     // Catch:{ Exception -> 0x02f5 }
            r4 = r8
            r16 = r9
            long r8 = r14.id     // Catch:{ Exception -> 0x02f5 }
            r15.append(r8)     // Catch:{ Exception -> 0x02f5 }
            java.lang.String r8 = r15.toString()     // Catch:{ Exception -> 0x02f5 }
            r9 = 0
            java.lang.Object[] r15 = new java.lang.Object[r9]     // Catch:{ Exception -> 0x02f5 }
            org.telegram.SQLite.SQLiteCursor r8 = r11.queryFinalized(r8, r15)     // Catch:{ Exception -> 0x02f5 }
            boolean r9 = r8.next()     // Catch:{ Exception -> 0x02f5 }
            r8.dispose()     // Catch:{ Exception -> 0x02f5 }
            if (r9 == 0) goto L_0x00e8
            r19 = r3
            r15 = r12
            r9 = r16
            r1 = 0
            goto L_0x02b4
        L_0x00b1:
            r4 = r8
            r16 = r9
            boolean r8 = r14.pinned     // Catch:{ Exception -> 0x02f1 }
            if (r8 == 0) goto L_0x00e8
            r8 = 2
            if (r2 != r8) goto L_0x00e8
            org.telegram.SQLite.SQLiteDatabase r8 = r1.database     // Catch:{ Exception -> 0x02f5 }
            java.lang.StringBuilder r9 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x02f5 }
            r9.<init>()     // Catch:{ Exception -> 0x02f5 }
            java.lang.String r11 = "SELECT pinned FROM dialogs WHERE did = "
            r9.append(r11)     // Catch:{ Exception -> 0x02f5 }
            r15 = r12
            long r11 = r14.id     // Catch:{ Exception -> 0x02f5 }
            r9.append(r11)     // Catch:{ Exception -> 0x02f5 }
            java.lang.String r9 = r9.toString()     // Catch:{ Exception -> 0x02f5 }
            r11 = 0
            java.lang.Object[] r12 = new java.lang.Object[r11]     // Catch:{ Exception -> 0x02f5 }
            org.telegram.SQLite.SQLiteCursor r8 = r8.queryFinalized(r9, r12)     // Catch:{ Exception -> 0x02f5 }
            boolean r9 = r8.next()     // Catch:{ Exception -> 0x02f5 }
            if (r9 == 0) goto L_0x00e4
            int r9 = r8.intValue(r11)     // Catch:{ Exception -> 0x02f5 }
            r14.pinnedNum = r9     // Catch:{ Exception -> 0x02f5 }
        L_0x00e4:
            r8.dispose()     // Catch:{ Exception -> 0x02f5 }
            goto L_0x00e9
        L_0x00e8:
            r15 = r12
        L_0x00e9:
            long r8 = r14.id     // Catch:{ Exception -> 0x02f1 }
            java.lang.Object r8 = r3.get(r8)     // Catch:{ Exception -> 0x02f1 }
            org.telegram.tgnet.TLRPC$Message r8 = (org.telegram.tgnet.TLRPC.Message) r8     // Catch:{ Exception -> 0x02f1 }
            r17 = 32
            if (r8 == 0) goto L_0x01fc
            int r9 = r8.date     // Catch:{ Exception -> 0x02f5 }
            r11 = 0
            int r9 = java.lang.Math.max(r9, r11)     // Catch:{ Exception -> 0x02f5 }
            boolean r11 = r1.isValidKeyboardToSave(r8)     // Catch:{ Exception -> 0x02f5 }
            if (r11 == 0) goto L_0x010e
            org.telegram.messenger.MediaDataController r11 = r21.getMediaDataController()     // Catch:{ Exception -> 0x02f5 }
            r18 = r13
            long r12 = r14.id     // Catch:{ Exception -> 0x02f5 }
            r11.putBotKeyboard(r12, r8)     // Catch:{ Exception -> 0x02f5 }
            goto L_0x0110
        L_0x010e:
            r18 = r13
        L_0x0110:
            r1.fixUnsupportedMedia(r8)     // Catch:{ Exception -> 0x02f5 }
            org.telegram.tgnet.NativeByteBuffer r11 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x02f5 }
            int r12 = r8.getObjectSize()     // Catch:{ Exception -> 0x02f5 }
            r11.<init>((int) r12)     // Catch:{ Exception -> 0x02f5 }
            r8.serializeToStream(r11)     // Catch:{ Exception -> 0x02f5 }
            int r12 = r8.id     // Catch:{ Exception -> 0x02f5 }
            long r12 = (long) r12     // Catch:{ Exception -> 0x02f5 }
            org.telegram.tgnet.TLRPC$Peer r2 = r8.to_id     // Catch:{ Exception -> 0x02f5 }
            int r2 = r2.channel_id     // Catch:{ Exception -> 0x02f5 }
            if (r2 == 0) goto L_0x0133
            org.telegram.tgnet.TLRPC$Peer r2 = r8.to_id     // Catch:{ Exception -> 0x02f5 }
            int r2 = r2.channel_id     // Catch:{ Exception -> 0x02f5 }
            r19 = r3
            long r2 = (long) r2     // Catch:{ Exception -> 0x02f5 }
            long r2 = r2 << r17
            long r12 = r12 | r2
            goto L_0x0135
        L_0x0133:
            r19 = r3
        L_0x0135:
            r5.requery()     // Catch:{ Exception -> 0x02f5 }
            r2 = 1
            r5.bindLong(r2, r12)     // Catch:{ Exception -> 0x02f5 }
            long r2 = r14.id     // Catch:{ Exception -> 0x02f5 }
            r20 = r9
            r9 = 2
            r5.bindLong(r9, r2)     // Catch:{ Exception -> 0x02f5 }
            int r2 = org.telegram.messenger.MessageObject.getUnreadFlags(r8)     // Catch:{ Exception -> 0x02f5 }
            r3 = 3
            r5.bindInteger(r3, r2)     // Catch:{ Exception -> 0x02f5 }
            int r2 = r8.send_state     // Catch:{ Exception -> 0x02f5 }
            r3 = 4
            r5.bindInteger(r3, r2)     // Catch:{ Exception -> 0x02f5 }
            int r2 = r8.date     // Catch:{ Exception -> 0x02f5 }
            r3 = 5
            r5.bindInteger(r3, r2)     // Catch:{ Exception -> 0x02f5 }
            r2 = 6
            r5.bindByteBuffer((int) r2, (org.telegram.tgnet.NativeByteBuffer) r11)     // Catch:{ Exception -> 0x02f5 }
            boolean r2 = org.telegram.messenger.MessageObject.isOut(r8)     // Catch:{ Exception -> 0x02f5 }
            if (r2 != 0) goto L_0x0169
            boolean r2 = r8.from_scheduled     // Catch:{ Exception -> 0x02f5 }
            if (r2 == 0) goto L_0x0167
            goto L_0x0169
        L_0x0167:
            r2 = 0
            goto L_0x016a
        L_0x0169:
            r2 = 1
        L_0x016a:
            r3 = 7
            r5.bindInteger(r3, r2)     // Catch:{ Exception -> 0x02f5 }
            r2 = 8
            r3 = 0
            r5.bindInteger(r2, r3)     // Catch:{ Exception -> 0x02f5 }
            int r2 = r8.flags     // Catch:{ Exception -> 0x02f5 }
            r2 = r2 & 1024(0x400, float:1.435E-42)
            if (r2 == 0) goto L_0x017d
            int r2 = r8.views     // Catch:{ Exception -> 0x02f5 }
            goto L_0x017e
        L_0x017d:
            r2 = 0
        L_0x017e:
            r3 = 9
            r5.bindInteger(r3, r2)     // Catch:{ Exception -> 0x02f5 }
            r2 = 10
            r3 = 0
            r5.bindInteger(r2, r3)     // Catch:{ Exception -> 0x02f5 }
            boolean r2 = r8.mentioned     // Catch:{ Exception -> 0x02f5 }
            if (r2 == 0) goto L_0x018f
            r2 = 1
            goto L_0x0190
        L_0x018f:
            r2 = 0
        L_0x0190:
            r3 = 11
            r5.bindInteger(r3, r2)     // Catch:{ Exception -> 0x02f5 }
            r5.step()     // Catch:{ Exception -> 0x02f5 }
            boolean r2 = org.telegram.messenger.MediaDataController.canAddMessageToMedia(r8)     // Catch:{ Exception -> 0x02f5 }
            if (r2 == 0) goto L_0x01c0
            r7.requery()     // Catch:{ Exception -> 0x02f5 }
            r2 = 1
            r7.bindLong(r2, r12)     // Catch:{ Exception -> 0x02f5 }
            long r2 = r14.id     // Catch:{ Exception -> 0x02f5 }
            r9 = 2
            r7.bindLong(r9, r2)     // Catch:{ Exception -> 0x02f5 }
            int r2 = r8.date     // Catch:{ Exception -> 0x02f5 }
            r3 = 3
            r7.bindInteger(r3, r2)     // Catch:{ Exception -> 0x02f5 }
            int r2 = org.telegram.messenger.MediaDataController.getMediaType(r8)     // Catch:{ Exception -> 0x02f5 }
            r3 = 4
            r7.bindInteger(r3, r2)     // Catch:{ Exception -> 0x02f5 }
            r2 = 5
            r7.bindByteBuffer((int) r2, (org.telegram.tgnet.NativeByteBuffer) r11)     // Catch:{ Exception -> 0x02f5 }
            r7.step()     // Catch:{ Exception -> 0x02f5 }
        L_0x01c0:
            r11.reuse()     // Catch:{ Exception -> 0x02f5 }
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r8.media     // Catch:{ Exception -> 0x02f5 }
            boolean r2 = r2 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaPoll     // Catch:{ Exception -> 0x02f5 }
            if (r2 == 0) goto L_0x01ee
            if (r18 != 0) goto L_0x01d4
            org.telegram.SQLite.SQLiteDatabase r2 = r1.database     // Catch:{ Exception -> 0x02f5 }
            java.lang.String r3 = "REPLACE INTO polls VALUES(?, ?)"
            org.telegram.SQLite.SQLitePreparedStatement r2 = r2.executeFast(r3)     // Catch:{ Exception -> 0x02f5 }
            goto L_0x01d6
        L_0x01d4:
            r2 = r18
        L_0x01d6:
            org.telegram.tgnet.TLRPC$MessageMedia r3 = r8.media     // Catch:{ Exception -> 0x02f5 }
            org.telegram.tgnet.TLRPC$TL_messageMediaPoll r3 = (org.telegram.tgnet.TLRPC.TL_messageMediaPoll) r3     // Catch:{ Exception -> 0x02f5 }
            r2.requery()     // Catch:{ Exception -> 0x02f5 }
            r9 = 1
            r2.bindLong(r9, r12)     // Catch:{ Exception -> 0x02f5 }
            org.telegram.tgnet.TLRPC$TL_poll r3 = r3.poll     // Catch:{ Exception -> 0x02f5 }
            long r11 = r3.id     // Catch:{ Exception -> 0x02f5 }
            r3 = 2
            r2.bindLong(r3, r11)     // Catch:{ Exception -> 0x02f5 }
            r2.step()     // Catch:{ Exception -> 0x02f5 }
            r13 = r2
            goto L_0x01f0
        L_0x01ee:
            r13 = r18
        L_0x01f0:
            long r2 = r14.id     // Catch:{ Exception -> 0x02f5 }
            int r8 = r8.id     // Catch:{ Exception -> 0x02f5 }
            r9 = r16
            createFirstHoles(r2, r9, r10, r8)     // Catch:{ Exception -> 0x02f5 }
            r2 = r20
            goto L_0x0203
        L_0x01fc:
            r19 = r3
            r18 = r13
            r9 = r16
            r2 = 0
        L_0x0203:
            int r3 = r14.top_message     // Catch:{ Exception -> 0x02f1 }
            long r11 = (long) r3     // Catch:{ Exception -> 0x02f1 }
            org.telegram.tgnet.TLRPC$Peer r3 = r14.peer     // Catch:{ Exception -> 0x02f1 }
            if (r3 == 0) goto L_0x0218
            org.telegram.tgnet.TLRPC$Peer r3 = r14.peer     // Catch:{ Exception -> 0x02f1 }
            int r3 = r3.channel_id     // Catch:{ Exception -> 0x02f1 }
            if (r3 == 0) goto L_0x0218
            org.telegram.tgnet.TLRPC$Peer r3 = r14.peer     // Catch:{ Exception -> 0x02f1 }
            int r3 = r3.channel_id     // Catch:{ Exception -> 0x02f1 }
            long r0 = (long) r3     // Catch:{ Exception -> 0x02f1 }
            long r0 = r0 << r17
            long r11 = r11 | r0
        L_0x0218:
            r6.requery()     // Catch:{ Exception -> 0x02f1 }
            long r0 = r14.id     // Catch:{ Exception -> 0x02f1 }
            r3 = 1
            r6.bindLong(r3, r0)     // Catch:{ Exception -> 0x02f1 }
            r0 = 2
            r6.bindInteger(r0, r2)     // Catch:{ Exception -> 0x02f1 }
            int r0 = r14.unread_count     // Catch:{ Exception -> 0x02f1 }
            r1 = 3
            r6.bindInteger(r1, r0)     // Catch:{ Exception -> 0x02f1 }
            r0 = 4
            r6.bindLong(r0, r11)     // Catch:{ Exception -> 0x02f1 }
            int r0 = r14.read_inbox_max_id     // Catch:{ Exception -> 0x02f1 }
            r1 = 5
            r6.bindInteger(r1, r0)     // Catch:{ Exception -> 0x02f1 }
            int r0 = r14.read_outbox_max_id     // Catch:{ Exception -> 0x02f1 }
            r1 = 6
            r6.bindInteger(r1, r0)     // Catch:{ Exception -> 0x02f1 }
            r0 = 0
            r2 = 7
            r6.bindLong(r2, r0)     // Catch:{ Exception -> 0x02f1 }
            int r0 = r14.unread_mentions_count     // Catch:{ Exception -> 0x02f1 }
            r1 = 8
            r6.bindInteger(r1, r0)     // Catch:{ Exception -> 0x02f1 }
            int r0 = r14.pts     // Catch:{ Exception -> 0x02f1 }
            r1 = 9
            r6.bindInteger(r1, r0)     // Catch:{ Exception -> 0x02f1 }
            r0 = 10
            r1 = 0
            r6.bindInteger(r0, r1)     // Catch:{ Exception -> 0x02f1 }
            int r0 = r14.pinnedNum     // Catch:{ Exception -> 0x02f1 }
            r2 = 11
            r6.bindInteger(r2, r0)     // Catch:{ Exception -> 0x02f1 }
            boolean r0 = r14.unread_mark     // Catch:{ Exception -> 0x02f1 }
            if (r0 == 0) goto L_0x0262
            r0 = 1
            goto L_0x0263
        L_0x0262:
            r0 = 0
        L_0x0263:
            r2 = 12
            r6.bindInteger(r2, r0)     // Catch:{ Exception -> 0x02f1 }
            r0 = 13
            int r2 = r14.folder_id     // Catch:{ Exception -> 0x02f1 }
            r6.bindInteger(r0, r2)     // Catch:{ Exception -> 0x02f1 }
            boolean r0 = r14 instanceof org.telegram.tgnet.TLRPC.TL_dialogFolder     // Catch:{ Exception -> 0x02f1 }
            r2 = 14
            if (r0 == 0) goto L_0x028c
            r0 = r14
            org.telegram.tgnet.TLRPC$TL_dialogFolder r0 = (org.telegram.tgnet.TLRPC.TL_dialogFolder) r0     // Catch:{ Exception -> 0x02f1 }
            org.telegram.tgnet.NativeByteBuffer r11 = new org.telegram.tgnet.NativeByteBuffer     // Catch:{ Exception -> 0x02f1 }
            org.telegram.tgnet.TLRPC$TL_folder r3 = r0.folder     // Catch:{ Exception -> 0x02f1 }
            int r3 = r3.getObjectSize()     // Catch:{ Exception -> 0x02f1 }
            r11.<init>((int) r3)     // Catch:{ Exception -> 0x02f1 }
            org.telegram.tgnet.TLRPC$TL_folder r0 = r0.folder     // Catch:{ Exception -> 0x02f1 }
            r0.serializeToStream(r11)     // Catch:{ Exception -> 0x02f1 }
            r6.bindByteBuffer((int) r2, (org.telegram.tgnet.NativeByteBuffer) r11)     // Catch:{ Exception -> 0x02f1 }
            goto L_0x0290
        L_0x028c:
            r6.bindNull(r2)     // Catch:{ Exception -> 0x02f1 }
            r11 = 0
        L_0x0290:
            r6.step()     // Catch:{ Exception -> 0x02f1 }
            if (r11 == 0) goto L_0x0298
            r11.reuse()     // Catch:{ Exception -> 0x02f1 }
        L_0x0298:
            org.telegram.tgnet.TLRPC$PeerNotifySettings r0 = r14.notify_settings     // Catch:{ Exception -> 0x02f1 }
            if (r0 == 0) goto L_0x02b4
            r4.requery()     // Catch:{ Exception -> 0x02f1 }
            long r2 = r14.id     // Catch:{ Exception -> 0x02f1 }
            r0 = 1
            r4.bindLong(r0, r2)     // Catch:{ Exception -> 0x02f1 }
            org.telegram.tgnet.TLRPC$PeerNotifySettings r2 = r14.notify_settings     // Catch:{ Exception -> 0x02f1 }
            int r2 = r2.mute_until     // Catch:{ Exception -> 0x02f1 }
            if (r2 == 0) goto L_0x02ac
            goto L_0x02ad
        L_0x02ac:
            r0 = 0
        L_0x02ad:
            r2 = 2
            r4.bindInteger(r2, r0)     // Catch:{ Exception -> 0x02f1 }
            r4.step()     // Catch:{ Exception -> 0x02f1 }
        L_0x02b4:
            int r12 = r15 + 1
            r1 = r21
            r0 = r22
            r2 = r23
            r8 = r4
            r3 = r19
            goto L_0x006b
        L_0x02c1:
            r4 = r8
            r18 = r13
            r5.dispose()     // Catch:{ Exception -> 0x02f1 }
            r6.dispose()     // Catch:{ Exception -> 0x02f1 }
            r7.dispose()     // Catch:{ Exception -> 0x02f1 }
            r4.dispose()     // Catch:{ Exception -> 0x02f1 }
            r9.dispose()     // Catch:{ Exception -> 0x02f1 }
            r10.dispose()     // Catch:{ Exception -> 0x02f1 }
            if (r18 == 0) goto L_0x02db
            r18.dispose()     // Catch:{ Exception -> 0x02f1 }
        L_0x02db:
            r0 = r22
            java.util.ArrayList<org.telegram.tgnet.TLRPC$User> r1 = r0.users     // Catch:{ Exception -> 0x02f1 }
            r2 = r21
            r2.putUsersInternal(r1)     // Catch:{ Exception -> 0x02ef }
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Chat> r0 = r0.chats     // Catch:{ Exception -> 0x02ef }
            r2.putChatsInternal(r0)     // Catch:{ Exception -> 0x02ef }
            org.telegram.SQLite.SQLiteDatabase r0 = r2.database     // Catch:{ Exception -> 0x02ef }
            r0.commitTransaction()     // Catch:{ Exception -> 0x02ef }
            goto L_0x02fa
        L_0x02ef:
            r0 = move-exception
            goto L_0x02f7
        L_0x02f1:
            r0 = move-exception
            r2 = r21
            goto L_0x02f7
        L_0x02f5:
            r0 = move-exception
            r2 = r1
        L_0x02f7:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x02fa:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.putDialogsInternal(org.telegram.tgnet.TLRPC$messages_Dialogs, int):void");
    }

    public void getDialogFolderId(long j, IntCallback intCallback) {
        this.storageQueue.postRunnable(new Runnable(j, intCallback) {
            private final /* synthetic */ long f$1;
            private final /* synthetic */ MessagesStorage.IntCallback f$2;

            {
                this.f$1 = r2;
                this.f$2 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$getDialogFolderId$139$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    public /* synthetic */ void lambda$getDialogFolderId$139$MessagesStorage(long j, IntCallback intCallback) {
        try {
            SQLiteCursor queryFinalized = this.database.queryFinalized("SELECT folder_id FROM dialogs WHERE did = ?", Long.valueOf(j));
            int intValue = queryFinalized.next() ? queryFinalized.intValue(0) : -1;
            queryFinalized.dispose();
            AndroidUtilities.runOnUIThread(new Runnable(intValue) {
                private final /* synthetic */ int f$1;

                {
                    this.f$1 = r2;
                }

                public final void run() {
                    MessagesStorage.IntCallback.this.run(this.f$1);
                }
            });
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void setDialogsFolderId(ArrayList<TLRPC.TL_folderPeer> arrayList, ArrayList<TLRPC.TL_inputFolderPeer> arrayList2, long j, int i) {
        if (arrayList != null || arrayList2 != null || j != 0) {
            this.storageQueue.postRunnable(new Runnable(arrayList, arrayList2, i, j) {
                private final /* synthetic */ ArrayList f$1;
                private final /* synthetic */ ArrayList f$2;
                private final /* synthetic */ int f$3;
                private final /* synthetic */ long f$4;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                    this.f$3 = r4;
                    this.f$4 = r5;
                }

                public final void run() {
                    MessagesStorage.this.lambda$setDialogsFolderId$140$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4);
                }
            });
        }
    }

    public /* synthetic */ void lambda$setDialogsFolderId$140$MessagesStorage(ArrayList arrayList, ArrayList arrayList2, int i, long j) {
        try {
            this.database.beginTransaction();
            SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE dialogs SET folder_id = ?, pinned = ? WHERE did = ?");
            if (arrayList != null) {
                int size = arrayList.size();
                for (int i2 = 0; i2 < size; i2++) {
                    TLRPC.TL_folderPeer tL_folderPeer = (TLRPC.TL_folderPeer) arrayList.get(i2);
                    long peerDialogId = DialogObject.getPeerDialogId(tL_folderPeer.peer);
                    executeFast.requery();
                    executeFast.bindInteger(1, tL_folderPeer.folder_id);
                    executeFast.bindInteger(2, 0);
                    executeFast.bindLong(3, peerDialogId);
                    executeFast.step();
                }
            } else if (arrayList2 != null) {
                int size2 = arrayList2.size();
                for (int i3 = 0; i3 < size2; i3++) {
                    TLRPC.TL_inputFolderPeer tL_inputFolderPeer = (TLRPC.TL_inputFolderPeer) arrayList2.get(i3);
                    long peerDialogId2 = DialogObject.getPeerDialogId(tL_inputFolderPeer.peer);
                    executeFast.requery();
                    executeFast.bindInteger(1, tL_inputFolderPeer.folder_id);
                    executeFast.bindInteger(2, 0);
                    executeFast.bindLong(3, peerDialogId2);
                    executeFast.step();
                }
            } else {
                executeFast.requery();
                executeFast.bindInteger(1, i);
                executeFast.bindInteger(2, 0);
                executeFast.bindLong(3, j);
                executeFast.step();
            }
            executeFast.dispose();
            this.database.commitTransaction();
            lambda$checkIfFolderEmpty$142$MessagesStorage(1);
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: checkIfFolderEmptyInternal */
    public void lambda$checkIfFolderEmpty$142$MessagesStorage(int i) {
        try {
            SQLiteCursor queryFinalized = this.database.queryFinalized("SELECT did FROM dialogs WHERE folder_id = ?", Integer.valueOf(i));
            if (!queryFinalized.next()) {
                AndroidUtilities.runOnUIThread(new Runnable(i) {
                    private final /* synthetic */ int f$1;

                    {
                        this.f$1 = r2;
                    }

                    public final void run() {
                        MessagesStorage.this.lambda$checkIfFolderEmptyInternal$141$MessagesStorage(this.f$1);
                    }
                });
                SQLiteDatabase sQLiteDatabase = this.database;
                sQLiteDatabase.executeFast("DELETE FROM dialogs WHERE did = " + DialogObject.makeFolderDialogId(i)).stepThis().dispose();
            }
            queryFinalized.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public /* synthetic */ void lambda$checkIfFolderEmptyInternal$141$MessagesStorage(int i) {
        getMessagesController().onFolderEmpty(i);
    }

    public void checkIfFolderEmpty(int i) {
        this.storageQueue.postRunnable(new Runnable(i) {
            private final /* synthetic */ int f$1;

            {
                this.f$1 = r2;
            }

            public final void run() {
                MessagesStorage.this.lambda$checkIfFolderEmpty$142$MessagesStorage(this.f$1);
            }
        });
    }

    public void unpinAllDialogsExceptNew(ArrayList<Long> arrayList, int i) {
        this.storageQueue.postRunnable(new Runnable(arrayList, i) {
            private final /* synthetic */ ArrayList f$1;
            private final /* synthetic */ int f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                MessagesStorage.this.lambda$unpinAllDialogsExceptNew$143$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    public /* synthetic */ void lambda$unpinAllDialogsExceptNew$143$MessagesStorage(ArrayList arrayList, int i) {
        try {
            ArrayList arrayList2 = new ArrayList();
            SQLiteCursor queryFinalized = this.database.queryFinalized(String.format(Locale.US, "SELECT did, folder_id FROM dialogs WHERE pinned != 0 AND did NOT IN (%s)", new Object[]{TextUtils.join(",", arrayList)}), new Object[0]);
            while (queryFinalized.next()) {
                long longValue = queryFinalized.longValue(0);
                if (queryFinalized.intValue(1) == i && ((int) longValue) != 0 && !DialogObject.isFolderDialogId(longValue)) {
                    arrayList2.add(Long.valueOf(queryFinalized.longValue(0)));
                }
            }
            queryFinalized.dispose();
            if (!arrayList2.isEmpty()) {
                SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE dialogs SET pinned = ? WHERE did = ?");
                for (int i2 = 0; i2 < arrayList2.size(); i2++) {
                    long longValue2 = ((Long) arrayList2.get(i2)).longValue();
                    executeFast.requery();
                    executeFast.bindInteger(1, 0);
                    executeFast.bindLong(2, longValue2);
                    executeFast.step();
                }
                executeFast.dispose();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void setDialogUnread(long j, boolean z) {
        this.storageQueue.postRunnable(new Runnable(j, z) {
            private final /* synthetic */ long f$1;
            private final /* synthetic */ boolean f$2;

            {
                this.f$1 = r2;
                this.f$2 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$setDialogUnread$144$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    /* JADX WARNING: Code restructure failed: missing block: B:12:0x0031, code lost:
        if (r0 == null) goto L_0x0034;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:14:0x0035, code lost:
        if (r8 == false) goto L_0x003a;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:15:0x0037, code lost:
        r8 = r1 | 1;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:16:0x003a, code lost:
        r8 = r1 & -2;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:18:?, code lost:
        r1 = r5.database.executeFast("UPDATE dialogs SET flags = ? WHERE did = ?");
        r1.bindInteger(1, r8);
        r1.bindLong(2, r6);
        r1.step();
        r1.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:25:?, code lost:
        return;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:5:0x0025, code lost:
        if (r0 != null) goto L_0x0027;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:7:?, code lost:
        r0.dispose();
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$setDialogUnread$144$MessagesStorage(long r6, boolean r8) {
        /*
            r5 = this;
            r0 = 0
            r1 = 0
            org.telegram.SQLite.SQLiteDatabase r2 = r5.database     // Catch:{ Exception -> 0x002d }
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x002d }
            r3.<init>()     // Catch:{ Exception -> 0x002d }
            java.lang.String r4 = "SELECT flags FROM dialogs WHERE did = "
            r3.append(r4)     // Catch:{ Exception -> 0x002d }
            r3.append(r6)     // Catch:{ Exception -> 0x002d }
            java.lang.String r3 = r3.toString()     // Catch:{ Exception -> 0x002d }
            java.lang.Object[] r4 = new java.lang.Object[r1]     // Catch:{ Exception -> 0x002d }
            org.telegram.SQLite.SQLiteCursor r0 = r2.queryFinalized(r3, r4)     // Catch:{ Exception -> 0x002d }
            boolean r2 = r0.next()     // Catch:{ Exception -> 0x002d }
            if (r2 == 0) goto L_0x0025
            int r1 = r0.intValue(r1)     // Catch:{ Exception -> 0x002d }
        L_0x0025:
            if (r0 == 0) goto L_0x0034
        L_0x0027:
            r0.dispose()     // Catch:{ Exception -> 0x0058 }
            goto L_0x0034
        L_0x002b:
            r6 = move-exception
            goto L_0x0052
        L_0x002d:
            r2 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r2)     // Catch:{ all -> 0x002b }
            if (r0 == 0) goto L_0x0034
            goto L_0x0027
        L_0x0034:
            r0 = 1
            if (r8 == 0) goto L_0x003a
            r8 = r1 | 1
            goto L_0x003c
        L_0x003a:
            r8 = r1 & -2
        L_0x003c:
            org.telegram.SQLite.SQLiteDatabase r1 = r5.database     // Catch:{ Exception -> 0x0058 }
            java.lang.String r2 = "UPDATE dialogs SET flags = ? WHERE did = ?"
            org.telegram.SQLite.SQLitePreparedStatement r1 = r1.executeFast(r2)     // Catch:{ Exception -> 0x0058 }
            r1.bindInteger(r0, r8)     // Catch:{ Exception -> 0x0058 }
            r8 = 2
            r1.bindLong(r8, r6)     // Catch:{ Exception -> 0x0058 }
            r1.step()     // Catch:{ Exception -> 0x0058 }
            r1.dispose()     // Catch:{ Exception -> 0x0058 }
            goto L_0x005c
        L_0x0052:
            if (r0 == 0) goto L_0x0057
            r0.dispose()     // Catch:{ Exception -> 0x0058 }
        L_0x0057:
            throw r6     // Catch:{ Exception -> 0x0058 }
        L_0x0058:
            r6 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r6)
        L_0x005c:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$setDialogUnread$144$MessagesStorage(long, boolean):void");
    }

    public void setDialogPinned(long j, int i) {
        this.storageQueue.postRunnable(new Runnable(i, j) {
            private final /* synthetic */ int f$1;
            private final /* synthetic */ long f$2;

            {
                this.f$1 = r2;
                this.f$2 = r3;
            }

            public final void run() {
                MessagesStorage.this.lambda$setDialogPinned$145$MessagesStorage(this.f$1, this.f$2);
            }
        });
    }

    public /* synthetic */ void lambda$setDialogPinned$145$MessagesStorage(int i, long j) {
        try {
            SQLitePreparedStatement executeFast = this.database.executeFast("UPDATE dialogs SET pinned = ? WHERE did = ?");
            executeFast.bindInteger(1, i);
            executeFast.bindLong(2, j);
            executeFast.step();
            executeFast.dispose();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void putDialogs(TLRPC.messages_Dialogs messages_dialogs, int i) {
        if (!messages_dialogs.dialogs.isEmpty()) {
            this.storageQueue.postRunnable(new Runnable(messages_dialogs, i) {
                private final /* synthetic */ TLRPC.messages_Dialogs f$1;
                private final /* synthetic */ int f$2;

                {
                    this.f$1 = r2;
                    this.f$2 = r3;
                }

                public final void run() {
                    MessagesStorage.this.lambda$putDialogs$146$MessagesStorage(this.f$1, this.f$2);
                }
            });
        }
    }

    public /* synthetic */ void lambda$putDialogs$146$MessagesStorage(TLRPC.messages_Dialogs messages_dialogs, int i) {
        putDialogsInternal(messages_dialogs, i);
        try {
            loadUnreadMessages();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public int getDialogReadMax(boolean z, long j) {
        CountDownLatch countDownLatch = new CountDownLatch(1);
        Integer[] numArr = {0};
        this.storageQueue.postRunnable(new Runnable(z, j, numArr, countDownLatch) {
            private final /* synthetic */ boolean f$1;
            private final /* synthetic */ long f$2;
            private final /* synthetic */ Integer[] f$3;
            private final /* synthetic */ CountDownLatch f$4;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r5;
                this.f$4 = r6;
            }

            public final void run() {
                MessagesStorage.this.lambda$getDialogReadMax$147$MessagesStorage(this.f$1, this.f$2, this.f$3, this.f$4);
            }
        });
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return numArr[0].intValue();
    }

    /* JADX WARNING: Code restructure failed: missing block: B:13:0x0051, code lost:
        if (r1 == null) goto L_0x0056;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:14:0x0053, code lost:
        r1.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:15:0x0056, code lost:
        r9.countDown();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:16:0x0059, code lost:
        return;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:8:0x0048, code lost:
        if (r1 != null) goto L_0x0053;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$getDialogReadMax$147$MessagesStorage(boolean r5, long r6, java.lang.Integer[] r8, java.util.concurrent.CountDownLatch r9) {
        /*
            r4 = this;
            r0 = 0
            r1 = 0
            if (r5 == 0) goto L_0x001e
            org.telegram.SQLite.SQLiteDatabase r5 = r4.database     // Catch:{ Exception -> 0x004d }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x004d }
            r2.<init>()     // Catch:{ Exception -> 0x004d }
            java.lang.String r3 = "SELECT outbox_max FROM dialogs WHERE did = "
            r2.append(r3)     // Catch:{ Exception -> 0x004d }
            r2.append(r6)     // Catch:{ Exception -> 0x004d }
            java.lang.String r6 = r2.toString()     // Catch:{ Exception -> 0x004d }
            java.lang.Object[] r7 = new java.lang.Object[r0]     // Catch:{ Exception -> 0x004d }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r6, r7)     // Catch:{ Exception -> 0x004d }
            goto L_0x0037
        L_0x001e:
            org.telegram.SQLite.SQLiteDatabase r5 = r4.database     // Catch:{ Exception -> 0x004d }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x004d }
            r2.<init>()     // Catch:{ Exception -> 0x004d }
            java.lang.String r3 = "SELECT inbox_max FROM dialogs WHERE did = "
            r2.append(r3)     // Catch:{ Exception -> 0x004d }
            r2.append(r6)     // Catch:{ Exception -> 0x004d }
            java.lang.String r6 = r2.toString()     // Catch:{ Exception -> 0x004d }
            java.lang.Object[] r7 = new java.lang.Object[r0]     // Catch:{ Exception -> 0x004d }
            org.telegram.SQLite.SQLiteCursor r5 = r5.queryFinalized(r6, r7)     // Catch:{ Exception -> 0x004d }
        L_0x0037:
            r1 = r5
            boolean r5 = r1.next()     // Catch:{ Exception -> 0x004d }
            if (r5 == 0) goto L_0x0048
            int r5 = r1.intValue(r0)     // Catch:{ Exception -> 0x004d }
            java.lang.Integer r5 = java.lang.Integer.valueOf(r5)     // Catch:{ Exception -> 0x004d }
            r8[r0] = r5     // Catch:{ Exception -> 0x004d }
        L_0x0048:
            if (r1 == 0) goto L_0x0056
            goto L_0x0053
        L_0x004b:
            r5 = move-exception
            goto L_0x005a
        L_0x004d:
            r5 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r5)     // Catch:{ all -> 0x004b }
            if (r1 == 0) goto L_0x0056
        L_0x0053:
            r1.dispose()
        L_0x0056:
            r9.countDown()
            return
        L_0x005a:
            if (r1 == 0) goto L_0x005f
            r1.dispose()
        L_0x005f:
            throw r5
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$getDialogReadMax$147$MessagesStorage(boolean, long, java.lang.Integer[], java.util.concurrent.CountDownLatch):void");
    }

    public int getChannelPtsSync(int i) {
        CountDownLatch countDownLatch = new CountDownLatch(1);
        Integer[] numArr = {0};
        this.storageQueue.postRunnable(new Runnable(i, numArr, countDownLatch) {
            private final /* synthetic */ int f$1;
            private final /* synthetic */ Integer[] f$2;
            private final /* synthetic */ CountDownLatch f$3;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$getChannelPtsSync$148$MessagesStorage(this.f$1, this.f$2, this.f$3);
            }
        });
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return numArr[0].intValue();
    }

    /* JADX WARNING: Code restructure failed: missing block: B:10:0x0035, code lost:
        if (r0 == null) goto L_0x003a;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:11:0x0037, code lost:
        r0.dispose();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:12:0x003a, code lost:
        if (r7 == null) goto L_?;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:14:?, code lost:
        r7.countDown();
     */
    /* JADX WARNING: Code restructure failed: missing block: B:15:0x0040, code lost:
        r5 = move-exception;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:16:0x0041, code lost:
        org.telegram.messenger.FileLog.e((java.lang.Throwable) r5);
     */
    /* JADX WARNING: Code restructure failed: missing block: B:20:?, code lost:
        return;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:21:?, code lost:
        return;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:22:?, code lost:
        return;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:5:0x002c, code lost:
        if (r0 != null) goto L_0x0037;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$getChannelPtsSync$148$MessagesStorage(int r5, java.lang.Integer[] r6, java.util.concurrent.CountDownLatch r7) {
        /*
            r4 = this;
            r0 = 0
            org.telegram.SQLite.SQLiteDatabase r1 = r4.database     // Catch:{ Exception -> 0x0031 }
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0031 }
            r2.<init>()     // Catch:{ Exception -> 0x0031 }
            java.lang.String r3 = "SELECT pts FROM dialogs WHERE did = "
            r2.append(r3)     // Catch:{ Exception -> 0x0031 }
            int r5 = -r5
            r2.append(r5)     // Catch:{ Exception -> 0x0031 }
            java.lang.String r5 = r2.toString()     // Catch:{ Exception -> 0x0031 }
            r2 = 0
            java.lang.Object[] r3 = new java.lang.Object[r2]     // Catch:{ Exception -> 0x0031 }
            org.telegram.SQLite.SQLiteCursor r0 = r1.queryFinalized(r5, r3)     // Catch:{ Exception -> 0x0031 }
            boolean r5 = r0.next()     // Catch:{ Exception -> 0x0031 }
            if (r5 == 0) goto L_0x002c
            int r5 = r0.intValue(r2)     // Catch:{ Exception -> 0x0031 }
            java.lang.Integer r5 = java.lang.Integer.valueOf(r5)     // Catch:{ Exception -> 0x0031 }
            r6[r2] = r5     // Catch:{ Exception -> 0x0031 }
        L_0x002c:
            if (r0 == 0) goto L_0x003a
            goto L_0x0037
        L_0x002f:
            r5 = move-exception
            goto L_0x0045
        L_0x0031:
            r5 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r5)     // Catch:{ all -> 0x002f }
            if (r0 == 0) goto L_0x003a
        L_0x0037:
            r0.dispose()
        L_0x003a:
            if (r7 == 0) goto L_0x0044
            r7.countDown()     // Catch:{ Exception -> 0x0040 }
            goto L_0x0044
        L_0x0040:
            r5 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r5)
        L_0x0044:
            return
        L_0x0045:
            if (r0 == 0) goto L_0x004a
            r0.dispose()
        L_0x004a:
            throw r5
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.messenger.MessagesStorage.lambda$getChannelPtsSync$148$MessagesStorage(int, java.lang.Integer[], java.util.concurrent.CountDownLatch):void");
    }

    public TLRPC.User getUserSync(int i) {
        CountDownLatch countDownLatch = new CountDownLatch(1);
        TLRPC.User[] userArr = new TLRPC.User[1];
        this.storageQueue.postRunnable(new Runnable(userArr, i, countDownLatch) {
            private final /* synthetic */ TLRPC.User[] f$1;
            private final /* synthetic */ int f$2;
            private final /* synthetic */ CountDownLatch f$3;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$getUserSync$149$MessagesStorage(this.f$1, this.f$2, this.f$3);
            }
        });
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return userArr[0];
    }

    public /* synthetic */ void lambda$getUserSync$149$MessagesStorage(TLRPC.User[] userArr, int i, CountDownLatch countDownLatch) {
        userArr[0] = getUser(i);
        countDownLatch.countDown();
    }

    public TLRPC.Chat getChatSync(int i) {
        CountDownLatch countDownLatch = new CountDownLatch(1);
        TLRPC.Chat[] chatArr = new TLRPC.Chat[1];
        this.storageQueue.postRunnable(new Runnable(chatArr, i, countDownLatch) {
            private final /* synthetic */ TLRPC.Chat[] f$1;
            private final /* synthetic */ int f$2;
            private final /* synthetic */ CountDownLatch f$3;

            {
                this.f$1 = r2;
                this.f$2 = r3;
                this.f$3 = r4;
            }

            public final void run() {
                MessagesStorage.this.lambda$getChatSync$150$MessagesStorage(this.f$1, this.f$2, this.f$3);
            }
        });
        try {
            countDownLatch.await();
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        return chatArr[0];
    }

    public /* synthetic */ void lambda$getChatSync$150$MessagesStorage(TLRPC.Chat[] chatArr, int i, CountDownLatch countDownLatch) {
        chatArr[0] = getChat(i);
        countDownLatch.countDown();
    }

    public TLRPC.User getUser(int i) {
        try {
            ArrayList arrayList = new ArrayList();
            getUsersInternal("" + i, arrayList);
            if (!arrayList.isEmpty()) {
                return (TLRPC.User) arrayList.get(0);
            }
            return null;
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            return null;
        }
    }

    public ArrayList<TLRPC.User> getUsers(ArrayList<Integer> arrayList) {
        ArrayList<TLRPC.User> arrayList2 = new ArrayList<>();
        try {
            getUsersInternal(TextUtils.join(",", arrayList), arrayList2);
        } catch (Exception e) {
            arrayList2.clear();
            FileLog.e((Throwable) e);
        }
        return arrayList2;
    }

    public TLRPC.Chat getChat(int i) {
        try {
            ArrayList arrayList = new ArrayList();
            getChatsInternal("" + i, arrayList);
            if (!arrayList.isEmpty()) {
                return (TLRPC.Chat) arrayList.get(0);
            }
            return null;
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            return null;
        }
    }

    public TLRPC.EncryptedChat getEncryptedChat(int i) {
        try {
            ArrayList arrayList = new ArrayList();
            getEncryptedChatsInternal("" + i, arrayList, (ArrayList<Integer>) null);
            if (!arrayList.isEmpty()) {
                return (TLRPC.EncryptedChat) arrayList.get(0);
            }
            return null;
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            return null;
        }
    }
}
