package org.telegram.ui;

import android.animation.Animator;
import android.animation.AnimatorListenerAdapter;
import android.animation.AnimatorSet;
import android.animation.ArgbEvaluator;
import android.animation.ObjectAnimator;
import android.animation.TimeInterpolator;
import android.animation.ValueAnimator;
import android.annotation.SuppressLint;
import android.app.Activity;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.res.Configuration;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.ColorFilter;
import android.graphics.Outline;
import android.graphics.Paint;
import android.graphics.Point;
import android.graphics.PorterDuff;
import android.graphics.PorterDuffColorFilter;
import android.graphics.Rect;
import android.graphics.RectF;
import android.graphics.SurfaceTexture;
import android.graphics.drawable.ColorDrawable;
import android.graphics.drawable.Drawable;
import android.graphics.drawable.GradientDrawable;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.os.SystemClock;
import android.os.Vibrator;
import android.provider.Settings;
import android.text.Layout;
import android.text.SpannableString;
import android.text.SpannableStringBuilder;
import android.text.StaticLayout;
import android.text.TextPaint;
import android.text.TextUtils;
import android.text.style.ClickableSpan;
import android.text.style.URLSpan;
import android.transition.ChangeBounds;
import android.transition.Fade;
import android.transition.Transition;
import android.transition.TransitionManager;
import android.transition.TransitionSet;
import android.transition.TransitionValues;
import android.util.FloatProperty;
import android.util.Property;
import android.util.SparseArray;
import android.view.ActionMode;
import android.view.ContextThemeWrapper;
import android.view.KeyEvent;
import android.view.Menu;
import android.view.MotionEvent;
import android.view.OrientationEventListener;
import android.view.TextureView;
import android.view.VelocityTracker;
import android.view.View;
import android.view.ViewConfiguration;
import android.view.ViewGroup;
import android.view.ViewOutlineProvider;
import android.view.ViewPropertyAnimator;
import android.view.ViewTreeObserver;
import android.view.WindowInsets;
import android.view.WindowManager;
import android.view.accessibility.AccessibilityManager;
import android.view.animation.DecelerateInterpolator;
import android.view.animation.Interpolator;
import android.view.animation.LinearInterpolator;
import android.view.animation.OvershootInterpolator;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.OverScroller;
import android.widget.Scroller;
import android.widget.TextView;
import android.widget.Toast;
import androidx.annotation.Keep;
import androidx.collection.ArrayMap;
import androidx.collection.LongSparseArray;
import androidx.core.content.ContextCompat;
import androidx.core.graphics.ColorUtils;
import androidx.core.view.inputmethod.InputContentInfoCompat;
import androidx.core.widget.NestedScrollView;
import androidx.dynamicanimation.animation.DynamicAnimation;
import androidx.dynamicanimation.animation.SpringAnimation;
import androidx.exifinterface.media.ExifInterface;
import androidx.recyclerview.widget.DefaultItemAnimator;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.LinearSmoothScrollerEnd;
import androidx.recyclerview.widget.RecyclerView;
import com.google.android.exoplayer2.analytics.AnalyticsListener;
import com.google.android.exoplayer2.ui.AspectRatioFrameLayout;
import com.google.android.gms.vision.Frame;
import com.google.android.gms.vision.face.Face;
import com.google.android.gms.vision.face.FaceDetector;
import java.io.File;
import java.io.FileOutputStream;
import java.lang.reflect.Array;
import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import org.telegram.messenger.AccountInstance;
import org.telegram.messenger.AndroidUtilities;
import org.telegram.messenger.ApplicationLoader;
import org.telegram.messenger.Bitmaps;
import org.telegram.messenger.BringAppForegroundService;
import org.telegram.messenger.BuildVars;
import org.telegram.messenger.ChatObject;
import org.telegram.messenger.DialogObject;
import org.telegram.messenger.DispatchQueue;
import org.telegram.messenger.DownloadController;
import org.telegram.messenger.Emoji;
import org.telegram.messenger.FileLoader;
import org.telegram.messenger.FileLog;
import org.telegram.messenger.ImageLoader;
import org.telegram.messenger.ImageLocation;
import org.telegram.messenger.ImageReceiver;
import org.telegram.messenger.LocaleController;
import org.telegram.messenger.MediaController;
import org.telegram.messenger.MediaDataController;
import org.telegram.messenger.MessageObject;
import org.telegram.messenger.MessagesController;
import org.telegram.messenger.MessagesStorage;
import org.telegram.messenger.NotificationCenter;
import org.telegram.messenger.SecureDocument;
import org.telegram.messenger.SendMessagesHelper;
import org.telegram.messenger.SharedConfig;
import org.telegram.messenger.UserConfig;
import org.telegram.messenger.UserObject;
import org.telegram.messenger.Utilities;
import org.telegram.messenger.VideoEditedInfo;
import org.telegram.messenger.WebFile;
import org.telegram.messenger.utils.BitmapsCache;
import org.telegram.messenger.video.VideoPlayerRewinder;
import org.telegram.tgnet.ConnectionsManager;
import org.telegram.tgnet.TLObject;
import org.telegram.tgnet.TLRPC$BotInlineResult;
import org.telegram.tgnet.TLRPC$Chat;
import org.telegram.tgnet.TLRPC$Dialog;
import org.telegram.tgnet.TLRPC$Document;
import org.telegram.tgnet.TLRPC$EncryptedChat;
import org.telegram.tgnet.TLRPC$FileLocation;
import org.telegram.tgnet.TLRPC$InputFile;
import org.telegram.tgnet.TLRPC$InputPhoto;
import org.telegram.tgnet.TLRPC$Message;
import org.telegram.tgnet.TLRPC$MessageAction;
import org.telegram.tgnet.TLRPC$MessageEntity;
import org.telegram.tgnet.TLRPC$MessageMedia;
import org.telegram.tgnet.TLRPC$PageBlock;
import org.telegram.tgnet.TLRPC$Photo;
import org.telegram.tgnet.TLRPC$PhotoSize;
import org.telegram.tgnet.TLRPC$ReplyMarkup;
import org.telegram.tgnet.TLRPC$TL_error;
import org.telegram.tgnet.TLRPC$TL_fileLocationToBeDeprecated;
import org.telegram.tgnet.TLRPC$TL_inputChatPhoto;
import org.telegram.tgnet.TLRPC$TL_inputPhoto;
import org.telegram.tgnet.TLRPC$TL_message;
import org.telegram.tgnet.TLRPC$TL_messageActionEmpty;
import org.telegram.tgnet.TLRPC$TL_messageActionUserUpdatedPhoto;
import org.telegram.tgnet.TLRPC$TL_messageMediaEmpty;
import org.telegram.tgnet.TLRPC$TL_messageMediaInvoice;
import org.telegram.tgnet.TLRPC$TL_messageMediaPhoto;
import org.telegram.tgnet.TLRPC$TL_messageMediaWebPage;
import org.telegram.tgnet.TLRPC$TL_messageService;
import org.telegram.tgnet.TLRPC$TL_photo;
import org.telegram.tgnet.TLRPC$TL_photoEmpty;
import org.telegram.tgnet.TLRPC$TL_photos_photo;
import org.telegram.tgnet.TLRPC$TL_webDocument;
import org.telegram.tgnet.TLRPC$User;
import org.telegram.tgnet.TLRPC$WebDocument;
import org.telegram.tgnet.TLRPC$WebPage;
import org.telegram.ui.ActionBar.ActionBar;
import org.telegram.ui.ActionBar.ActionBarMenu;
import org.telegram.ui.ActionBar.ActionBarMenuItem;
import org.telegram.ui.ActionBar.ActionBarMenuSubItem;
import org.telegram.ui.ActionBar.ActionBarPopupWindow;
import org.telegram.ui.ActionBar.AdjustPanLayoutHelper;
import org.telegram.ui.ActionBar.AlertDialog;
import org.telegram.ui.ActionBar.BaseFragment;
import org.telegram.ui.ActionBar.BottomSheet;
import org.telegram.ui.ActionBar.SimpleTextView;
import org.telegram.ui.ActionBar.Theme;
import org.telegram.ui.Adapters.MentionsAdapter;
import org.telegram.ui.Cells.CheckBoxCell;
import org.telegram.ui.Cells.PhotoPickerPhotoCell;
import org.telegram.ui.ChooseSpeedLayout;
import org.telegram.ui.Components.AlertsCreator;
import org.telegram.ui.Components.AnimatedEmojiDrawable;
import org.telegram.ui.Components.AnimatedEmojiSpan;
import org.telegram.ui.Components.AnimatedFileDrawable;
import org.telegram.ui.Components.AnimationProperties;
import org.telegram.ui.Components.BackupImageView;
import org.telegram.ui.Components.Bulletin;
import org.telegram.ui.Components.BulletinFactory;
import org.telegram.ui.Components.ChatAttachAlert;
import org.telegram.ui.Components.CheckBox;
import org.telegram.ui.Components.ClippingImageView;
import org.telegram.ui.Components.CombinedDrawable;
import org.telegram.ui.Components.Crop.CropAreaView;
import org.telegram.ui.Components.Crop.CropTransform;
import org.telegram.ui.Components.CubicBezierInterpolator;
import org.telegram.ui.Components.FadingTextViewLayout;
import org.telegram.ui.Components.FloatSeekBarAccessibilityDelegate;
import org.telegram.ui.Components.GestureDetector2;
import org.telegram.ui.Components.GroupedPhotosListView;
import org.telegram.ui.Components.HideViewAfterAnimation;
import org.telegram.ui.Components.LayoutHelper;
import org.telegram.ui.Components.LinkSpanDrawable;
import org.telegram.ui.Components.NumberPicker;
import org.telegram.ui.Components.PaintingOverlay;
import org.telegram.ui.Components.PhotoCropView;
import org.telegram.ui.Components.PhotoFilterView;
import org.telegram.ui.Components.PhotoPaintView;
import org.telegram.ui.Components.PhotoViewerCaptionEnterView;
import org.telegram.ui.Components.PhotoViewerWebView;
import org.telegram.ui.Components.PickerBottomLayoutViewer;
import org.telegram.ui.Components.PipVideoOverlay;
import org.telegram.ui.Components.PlayPauseDrawable;
import org.telegram.ui.Components.Premium.LimitReachedBottomSheet;
import org.telegram.ui.Components.RLottieDrawable;
import org.telegram.ui.Components.RadialProgressView;
import org.telegram.ui.Components.RecyclerListView;
import org.telegram.ui.Components.ShareAlert;
import org.telegram.ui.Components.SizeNotifierFrameLayoutPhoto;
import org.telegram.ui.Components.StickersAlert;
import org.telegram.ui.Components.TextViewSwitcher;
import org.telegram.ui.Components.Tooltip;
import org.telegram.ui.Components.URLSpanReplacement;
import org.telegram.ui.Components.URLSpanUserMentionPhotoViewer;
import org.telegram.ui.Components.UndoView;
import org.telegram.ui.Components.VideoEditTextureView;
import org.telegram.ui.Components.VideoForwardDrawable;
import org.telegram.ui.Components.VideoPlayer;
import org.telegram.ui.Components.VideoPlayerSeekBar;
import org.telegram.ui.Components.VideoSeekPreviewImage;
import org.telegram.ui.Components.VideoTimelinePlayView;
import org.telegram.ui.Components.ViewHelper;
import org.telegram.ui.Components.spoilers.SpoilerEffect;
import org.telegram.ui.Components.spoilers.SpoilersTextView;

@SuppressLint({"WrongConstant"})
public class PhotoViewer implements NotificationCenter.NotificationCenterDelegate, GestureDetector2.OnGestureListener, GestureDetector2.OnDoubleTapListener {
    /* access modifiers changed from: private */
    @SuppressLint({"StaticFieldLeak"})
    public static volatile PhotoViewer Instance = null;
    /* access modifiers changed from: private */
    public static volatile PhotoViewer PipInstance = null;
    private static final Property<VideoPlayerControlFrameLayout, Float> VPC_PROGRESS;
    /* access modifiers changed from: private */
    public static DecelerateInterpolator decelerateInterpolator;
    /* access modifiers changed from: private */
    public static Drawable[] progressDrawables;
    /* access modifiers changed from: private */
    public static Paint progressPaint;
    public final Property<View, Float> FLASH_VIEW_VALUE = new AnimationProperties.FloatProperty<View>("flashViewAlpha") {
        public void setValue(View view, float f) {
            view.setAlpha(f);
            if (PhotoViewer.this.photoCropView != null) {
                PhotoViewer.this.photoCropView.setVideoThumbFlashAlpha(f);
            }
        }

        public Float get(View view) {
            return Float.valueOf(view.getAlpha());
        }
    };
    /* access modifiers changed from: private */
    public ActionBar actionBar;
    /* access modifiers changed from: private */
    public AnimatorSet actionBarAnimator;
    private Map<View, Boolean> actionBarItemsVisibility = new HashMap(3);
    /* access modifiers changed from: private */
    public boolean actionBarWasShownBeforeByEnd = false;
    private Context activityContext;
    private ActionBarMenuSubItem allMediaItem;
    /* access modifiers changed from: private */
    public boolean allowMentions;
    private boolean allowOrder = true;
    private boolean allowShare;
    /* access modifiers changed from: private */
    public boolean allowShowFullscreenButton;
    /* access modifiers changed from: private */
    public float animateToMirror;
    /* access modifiers changed from: private */
    public float animateToRotate;
    /* access modifiers changed from: private */
    public float animateToScale;
    /* access modifiers changed from: private */
    public float animateToX;
    /* access modifiers changed from: private */
    public float animateToY;
    /* access modifiers changed from: private */
    public ClippingImageView animatingImageView;
    /* access modifiers changed from: private */
    public Runnable animationEndRunnable;
    /* access modifiers changed from: private */
    public int animationInProgress;
    /* access modifiers changed from: private */
    public long animationStartTime;
    private float animationValue;
    /* access modifiers changed from: private */
    public float[][] animationValues = ((float[][]) Array.newInstance(float.class, new int[]{2, 13}));
    /* access modifiers changed from: private */
    public boolean applying;
    /* access modifiers changed from: private */
    public AspectRatioFrameLayout aspectRatioFrameLayout;
    /* access modifiers changed from: private */
    public boolean attachedToWindow;
    /* access modifiers changed from: private */
    public long audioFramesSize;
    /* access modifiers changed from: private */
    public float avatarStartProgress;
    /* access modifiers changed from: private */
    public long avatarStartTime;
    /* access modifiers changed from: private */
    public ArrayList<TLRPC$Photo> avatarsArr = new ArrayList<>();
    /* access modifiers changed from: private */
    public long avatarsDialogId;
    /* access modifiers changed from: private */
    public BackgroundDrawable backgroundDrawable = new BackgroundDrawable(-16777216);
    private Paint bitmapPaint = new Paint(2);
    /* access modifiers changed from: private */
    public int bitrate;
    /* access modifiers changed from: private */
    public Paint blackPaint = new Paint();
    /* access modifiers changed from: private */
    public LinearLayout bottomButtonsLayout;
    /* access modifiers changed from: private */
    public FrameLayout bottomLayout;
    /* access modifiers changed from: private */
    public boolean bottomTouchEnabled = true;
    /* access modifiers changed from: private */
    public ImageView cameraItem;
    private boolean canDragDown = true;
    private boolean canEditAvatar;
    private boolean canZoom = true;
    /* access modifiers changed from: private */
    public FrameLayout captionContainer;
    /* access modifiers changed from: private */
    public PhotoViewerCaptionEnterView captionEditText;
    public CharSequence captionForAllMedia;
    private boolean captionHwLayerEnabled;
    /* access modifiers changed from: private */
    public TextView captionLimitView;
    /* access modifiers changed from: private */
    public CaptionScrollView captionScrollView;
    /* access modifiers changed from: private */
    public CaptionTextViewSwitcher captionTextViewSwitcher;
    /* access modifiers changed from: private */
    public long captureFrameAtTime = -1;
    /* access modifiers changed from: private */
    public long captureFrameReadyAtTime = -1;
    /* access modifiers changed from: private */
    public ImageReceiver centerImage = new ImageReceiver();
    private boolean centerImageIsVideo;
    /* access modifiers changed from: private */
    public AnimatorSet changeModeAnimation;
    /* access modifiers changed from: private */
    public TextureView changedTextureView;
    private boolean changingPage;
    /* access modifiers changed from: private */
    public boolean changingTextureView;
    /* access modifiers changed from: private */
    public CheckBox checkImageView;
    ChooseSpeedLayout chooseSpeedLayout;
    private int classGuid;
    /* access modifiers changed from: private */
    public ImageView compressItem;
    private AnimatorSet compressItemAnimation;
    /* access modifiers changed from: private */
    public int compressionsCount = -1;
    /* access modifiers changed from: private */
    public FrameLayoutDrawer containerView;
    private boolean cropInitied;
    private ImageView cropItem;
    /* access modifiers changed from: private */
    public CropTransform cropTransform = new CropTransform();
    /* access modifiers changed from: private */
    public int currentAccount;
    private AnimatedFileDrawable currentAnimation;
    /* access modifiers changed from: private */
    public ImageLocation currentAvatarLocation = null;
    /* access modifiers changed from: private */
    public Bitmap currentBitmap;
    private TLRPC$BotInlineResult currentBotInlineResult;
    /* access modifiers changed from: private */
    public long currentDialogId;
    /* access modifiers changed from: private */
    public int currentEditMode;
    /* access modifiers changed from: private */
    public ImageLocation currentFileLocation;
    /* access modifiers changed from: private */
    public ImageLocation currentFileLocationVideo;
    /* access modifiers changed from: private */
    public String[] currentFileNames = new String[3];
    private String currentImageFaceKey;
    private int currentImageHasFace;
    private String currentImagePath;
    /* access modifiers changed from: private */
    public int currentIndex;
    /* access modifiers changed from: private */
    public AnimatorSet currentListViewAnimation;
    /* access modifiers changed from: private */
    public Runnable currentLoadingVideoRunnable;
    /* access modifiers changed from: private */
    public MessageObject currentMessageObject;
    private TLRPC$PageBlock currentPageBlock;
    /* access modifiers changed from: private */
    public float currentPanTranslationY;
    private String currentPathObject;
    /* access modifiers changed from: private */
    public PlaceProviderObject currentPlaceObject;
    private Uri currentPlayingVideoFile;
    /* access modifiers changed from: private */
    public SecureDocument currentSecureDocument;
    private String currentSubtitle;
    /* access modifiers changed from: private */
    public ImageReceiver.BitmapHolder currentThumb;
    /* access modifiers changed from: private */
    public boolean currentVideoFinishedLoading;
    /* access modifiers changed from: private */
    public float currentVideoSpeed;
    private int dateOverride;
    /* access modifiers changed from: private */
    public FadingTextViewLayout dateTextView;
    /* access modifiers changed from: private */
    public boolean disableShowCheck;
    private boolean discardTap;
    private TextView docInfoTextView;
    private TextView docNameTextView;
    private boolean doneButtonPressed;
    /* access modifiers changed from: private */
    public boolean dontAutoPlay;
    /* access modifiers changed from: private */
    public boolean dontChangeCaptionPosition;
    /* access modifiers changed from: private */
    public boolean dontResetZoomOnFirstLayout;
    private boolean doubleTap;
    private boolean doubleTapEnabled;
    private float dragY;
    private boolean draggingDown;
    private boolean[] drawPressedDrawable = new boolean[2];
    /* access modifiers changed from: private */
    public EditState editState = new EditState();
    /* access modifiers changed from: private */
    public PickerBottomLayoutViewer editorDoneLayout;
    private boolean[] endReached = {false, true};
    private long endTime;
    private long estimatedDuration;
    private long estimatedSize;
    /* access modifiers changed from: private */
    public ImageView exitFullscreenButton;
    private boolean firstAnimationDelay;
    /* access modifiers changed from: private */
    public FirstFrameView firstFrameView;
    /* access modifiers changed from: private */
    public AnimatorSet flashAnimator;
    /* access modifiers changed from: private */
    public View flashView;
    boolean fromCamera;
    /* access modifiers changed from: private */
    public ImageView[] fullscreenButton = new ImageView[3];
    /* access modifiers changed from: private */
    public int fullscreenedByButton;
    /* access modifiers changed from: private */
    public GestureDetector2 gestureDetector;
    /* access modifiers changed from: private */
    public GroupedPhotosListView groupedPhotosListView;
    public boolean hasCaptionForAllMedia;
    /* access modifiers changed from: private */
    public Runnable hideActionBarRunnable = new Runnable() {
        public void run() {
            PhotoViewer photoViewer;
            if (PhotoViewer.this.videoPlayerControlVisible && PhotoViewer.this.isPlaying && !ApplicationLoader.mainInterfacePaused) {
                if (PhotoViewer.this.menuItem != null && PhotoViewer.this.menuItem.isSubMenuShowing()) {
                    return;
                }
                if (PhotoViewer.this.captionScrollView != null && PhotoViewer.this.captionScrollView.getScrollY() != 0) {
                    return;
                }
                if ((PhotoViewer.this.miniProgressView == null || PhotoViewer.this.miniProgressView.getVisibility() != 0) && PhotoViewer.PipInstance != (photoViewer = PhotoViewer.this)) {
                    photoViewer.toggleActionBar(false, true);
                }
            }
        }
    };
    /* access modifiers changed from: private */
    public PlaceProviderObject hideAfterAnimation;
    /* access modifiers changed from: private */
    public UndoView hintView;
    private Rect hitRect = new Rect();
    private boolean ignoreDidSetImage;
    /* access modifiers changed from: private */
    public AnimatorSet imageMoveAnimation;
    /* access modifiers changed from: private */
    public ArrayList<MessageObject> imagesArr = new ArrayList<>();
    /* access modifiers changed from: private */
    public ArrayList<Object> imagesArrLocals = new ArrayList<>();
    /* access modifiers changed from: private */
    public ArrayList<ImageLocation> imagesArrLocations = new ArrayList<>();
    /* access modifiers changed from: private */
    public ArrayList<Long> imagesArrLocationsSizes = new ArrayList<>();
    /* access modifiers changed from: private */
    public ArrayList<ImageLocation> imagesArrLocationsVideo = new ArrayList<>();
    /* access modifiers changed from: private */
    public ArrayList<TLRPC$Message> imagesArrMessages = new ArrayList<>();
    private ArrayList<MessageObject> imagesArrTemp = new ArrayList<>();
    private SparseArray<MessageObject>[] imagesByIds = {new SparseArray<>(), new SparseArray<>()};
    private SparseArray<MessageObject>[] imagesByIdsTemp = {new SparseArray<>(), new SparseArray<>()};
    /* access modifiers changed from: private */
    public boolean inBubbleMode;
    /* access modifiers changed from: private */
    public boolean inPreview;
    private VideoPlayer injectingVideoPlayer;
    private SurfaceTexture injectingVideoPlayerSurface;
    /* access modifiers changed from: private */
    public float inlineOutAnimationProgress;
    private DecelerateInterpolator interpolator = new DecelerateInterpolator(1.5f);
    private boolean invalidCoords;
    /* access modifiers changed from: private */
    public boolean isActionBarVisible = true;
    /* access modifiers changed from: private */
    public boolean isCurrentVideo;
    private boolean isDocumentsPicker;
    /* access modifiers changed from: private */
    public boolean isEmbedVideo;
    /* access modifiers changed from: private */
    public boolean isEvent;
    private boolean isFirstLoading;
    /* access modifiers changed from: private */
    public boolean isInline;
    /* access modifiers changed from: private */
    public boolean isPhotosListViewVisible;
    /* access modifiers changed from: private */
    public boolean isPlaying;
    /* access modifiers changed from: private */
    public boolean isStreaming;
    /* access modifiers changed from: private */
    public boolean isVisible;
    /* access modifiers changed from: private */
    public LinearLayout itemsLayout;
    private boolean keepScreenOnFlagSet;
    boolean keyboardAnimationEnabled;
    /* access modifiers changed from: private */
    public int keyboardSize;
    /* access modifiers changed from: private */
    public long lastBufferedPositionCheck;
    private int lastImageId = -1;
    /* access modifiers changed from: private */
    public Object lastInsets;
    private long lastPhotoSetTime;
    /* access modifiers changed from: private */
    public long lastSaveTime;
    /* access modifiers changed from: private */
    public String lastTitle;
    /* access modifiers changed from: private */
    public MediaController.CropState leftCropState;
    /* access modifiers changed from: private */
    public CropTransform leftCropTransform = new CropTransform();
    /* access modifiers changed from: private */
    public ImageReceiver leftImage = new ImageReceiver();
    private boolean leftImageIsVideo;
    /* access modifiers changed from: private */
    public PaintingOverlay leftPaintingOverlay;
    private boolean loadInitialVideo;
    private boolean loadingMoreImages;
    Runnable longPressRunnable = new PhotoViewer$$ExternalSyntheticLambda47(this);
    float longPressX;
    /* access modifiers changed from: private */
    public boolean manuallyPaused;
    /* access modifiers changed from: private */
    public StickersAlert masksAlert;
    private ActionBarMenuItem masksItem;
    private int maxSelectedPhotos = -1;
    private float maxX;
    private float maxY;
    /* access modifiers changed from: private */
    public LinearLayoutManager mentionLayoutManager;
    /* access modifiers changed from: private */
    public AnimatorSet mentionListAnimation;
    /* access modifiers changed from: private */
    public RecyclerListView mentionListView;
    /* access modifiers changed from: private */
    public MentionsAdapter mentionsAdapter;
    /* access modifiers changed from: private */
    public ActionBarMenuItem menuItem;
    private long mergeDialogId;
    private float minX;
    private float minY;
    /* access modifiers changed from: private */
    public AnimatorSet miniProgressAnimator;
    private Runnable miniProgressShowRunnable = new PhotoViewer$$ExternalSyntheticLambda53(this);
    /* access modifiers changed from: private */
    public RadialProgressView miniProgressView;
    /* access modifiers changed from: private */
    public float mirror = 0.0f;
    /* access modifiers changed from: private */
    public ImageView mirrorItem;
    private float moveStartX;
    private float moveStartY;
    /* access modifiers changed from: private */
    public boolean moving;
    /* access modifiers changed from: private */
    public ImageView muteItem;
    /* access modifiers changed from: private */
    public boolean muteVideo;
    private String nameOverride;
    /* access modifiers changed from: private */
    public FadingTextViewLayout nameTextView;
    private ValueAnimator navBarAnimator;
    /* access modifiers changed from: private */
    public View navigationBar;
    /* access modifiers changed from: private */
    public int navigationBarHeight;
    /* access modifiers changed from: private */
    public boolean needCaptionLayout;
    /* access modifiers changed from: private */
    public long needCaptureFrameReadyAtTime = -1;
    private boolean needSearchImageInArr;
    /* access modifiers changed from: private */
    public boolean needShowOnReady;
    private Runnable onUserLeaveHintListener = new PhotoViewer$$ExternalSyntheticLambda54(this);
    /* access modifiers changed from: private */
    public boolean openedFullScreenVideo;
    private boolean opennedFromMedia;
    /* access modifiers changed from: private */
    public OrientationEventListener orientationEventListener;
    /* access modifiers changed from: private */
    public int originalBitrate;
    /* access modifiers changed from: private */
    public int originalHeight;
    private long originalSize;
    /* access modifiers changed from: private */
    public int originalWidth;
    /* access modifiers changed from: private */
    public boolean padImageForHorizontalInsets;
    /* access modifiers changed from: private */
    public PageBlocksAdapter pageBlocksAdapter;
    private ImageView paintButton;
    private ImageView paintItem;
    private int paintViewTouched;
    /* access modifiers changed from: private */
    public PaintingOverlay paintingOverlay;
    /* access modifiers changed from: private */
    public Activity parentActivity;
    /* access modifiers changed from: private */
    public ChatAttachAlert parentAlert;
    /* access modifiers changed from: private */
    public ChatActivity parentChatActivity;
    /* access modifiers changed from: private */
    public PhotoCropView photoCropView;
    /* access modifiers changed from: private */
    public PhotoFilterView photoFilterView;
    /* access modifiers changed from: private */
    public PhotoPaintView photoPaintView;
    /* access modifiers changed from: private */
    public PhotoProgressView[] photoProgressViews = new PhotoProgressView[3];
    /* access modifiers changed from: private */
    public PhotoViewerWebView photoViewerWebView;
    /* access modifiers changed from: private */
    public CounterView photosCounterView;
    /* access modifiers changed from: private */
    public FrameLayout pickerView;
    /* access modifiers changed from: private */
    public ImageView pickerViewSendButton;
    private Drawable pickerViewSendDrawable;
    private float pinchCenterX;
    private float pinchCenterY;
    private float pinchStartDistance;
    private float pinchStartScale = 1.0f;
    private float pinchStartX;
    private float pinchStartY;
    /* access modifiers changed from: private */
    public boolean pipAnimationInProgress;
    private boolean pipAvailable;
    /* access modifiers changed from: private */
    public ActionBarMenuItem pipItem;
    /* access modifiers changed from: private */
    public int[] pipPosition = new int[2];
    /* access modifiers changed from: private */
    public boolean pipVideoOverlayAnimateFlag = true;
    /* access modifiers changed from: private */
    public PhotoViewerProvider placeProvider;
    private View playButtonAccessibilityOverlay;
    /* access modifiers changed from: private */
    public boolean playerAutoStarted;
    private boolean playerInjected;
    private boolean playerLooping;
    private boolean playerWasPlaying;
    /* access modifiers changed from: private */
    public boolean playerWasReady;
    private GradientDrawable[] pressedDrawable = new GradientDrawable[2];
    private float[] pressedDrawableAlpha = new float[2];
    /* access modifiers changed from: private */
    public int prevOrientation = -10;
    private int previousCompression;
    private boolean previousCropMirrored;
    private int previousCropOrientation;
    private float previousCropPh;
    private float previousCropPw;
    private float previousCropPx;
    private float previousCropPy;
    private float previousCropRotation;
    private float previousCropScale;
    private boolean previousHasTransform;
    /* access modifiers changed from: private */
    public RadialProgressView progressView;
    /* access modifiers changed from: private */
    public QualityChooseView qualityChooseView;
    /* access modifiers changed from: private */
    public AnimatorSet qualityChooseViewAnimation;
    /* access modifiers changed from: private */
    public PickerBottomLayoutViewer qualityPicker;
    private boolean requestingPreview;
    private TextView resetButton;
    /* access modifiers changed from: private */
    public Theme.ResourcesProvider resourcesProvider;
    /* access modifiers changed from: private */
    public int resultHeight;
    /* access modifiers changed from: private */
    public int resultWidth;
    /* access modifiers changed from: private */
    public MediaController.CropState rightCropState;
    /* access modifiers changed from: private */
    public CropTransform rightCropTransform = new CropTransform();
    /* access modifiers changed from: private */
    public ImageReceiver rightImage = new ImageReceiver();
    private boolean rightImageIsVideo;
    /* access modifiers changed from: private */
    public PaintingOverlay rightPaintingOverlay;
    /* access modifiers changed from: private */
    public float rotate = 0.0f;
    /* access modifiers changed from: private */
    public ImageView rotateItem;
    /* access modifiers changed from: private */
    public int rotationValue;
    /* access modifiers changed from: private */
    public SavedState savedState = null;
    private ArrayMap<String, SavedVideoPosition> savedVideoPositions = new ArrayMap<>();
    /* access modifiers changed from: private */
    public float scale = 1.0f;
    private Scroller scroller;
    /* access modifiers changed from: private */
    public ArrayList<SecureDocument> secureDocuments = new ArrayList<>();
    /* access modifiers changed from: private */
    public float seekToProgressPending;
    private float seekToProgressPending2;
    /* access modifiers changed from: private */
    public int selectedCompression;
    /* access modifiers changed from: private */
    public ListAdapter selectedPhotosAdapter;
    /* access modifiers changed from: private */
    public SelectedPhotosListView selectedPhotosListView;
    private ActionBarMenuItem sendItem;
    /* access modifiers changed from: private */
    public int sendPhotoType;
    private ActionBarPopupWindow.ActionBarPopupWindowLayout sendPopupLayout;
    private ActionBarPopupWindow sendPopupWindow;
    private Runnable setLoadingRunnable = new Runnable() {
        public void run() {
            if (PhotoViewer.this.currentMessageObject != null) {
                FileLoader.getInstance(PhotoViewer.this.currentMessageObject.currentAccount).setLoadingVideo(PhotoViewer.this.currentMessageObject.getDocument(), true, false);
            }
        }
    };
    private ImageView shareButton;
    private ActionBarMenuItem shareItem;
    private int sharedMediaType;
    /* access modifiers changed from: private */
    public String shouldSavePositionForCurrentVideo;
    private String shouldSavePositionForCurrentVideoShortTerm;
    /* access modifiers changed from: private */
    public PlaceProviderObject showAfterAnimation;
    /* access modifiers changed from: private */
    public boolean shownControlsByEnd = false;
    private ImageReceiver sideImage;
    private boolean skipFirstBufferingProgress;
    /* access modifiers changed from: private */
    public int slideshowMessageId;
    private ActionBarPopupWindow.GapView speedGap;
    private ActionBarMenuSubItem speedItem;
    private int startOffset;
    /* access modifiers changed from: private */
    public long startTime;
    private long startedPlayTime;
    private boolean streamingAlertShown;
    /* access modifiers changed from: private */
    public TextureView.SurfaceTextureListener surfaceTextureListener = new TextureView.SurfaceTextureListener() {
        public void onSurfaceTextureAvailable(SurfaceTexture surfaceTexture, int i, int i2) {
        }

        public void onSurfaceTextureSizeChanged(SurfaceTexture surfaceTexture, int i, int i2) {
        }

        public boolean onSurfaceTextureDestroyed(SurfaceTexture surfaceTexture) {
            if (PhotoViewer.this.videoTextureView == null || !PhotoViewer.this.changingTextureView) {
                return true;
            }
            if (PhotoViewer.this.switchingInlineMode) {
                int unused = PhotoViewer.this.waitingForFirstTextureUpload = 2;
            }
            PhotoViewer.this.videoTextureView.setSurfaceTexture(surfaceTexture);
            PhotoViewer.this.videoTextureView.setVisibility(0);
            boolean unused2 = PhotoViewer.this.changingTextureView = false;
            PhotoViewer.this.containerView.invalidate();
            return false;
        }

        public void onSurfaceTextureUpdated(SurfaceTexture surfaceTexture) {
            if (PhotoViewer.this.waitingForFirstTextureUpload == 1) {
                PhotoViewer.this.changedTextureView.getViewTreeObserver().addOnPreDrawListener(new ViewTreeObserver.OnPreDrawListener() {
                    public boolean onPreDraw() {
                        PhotoViewer.this.changedTextureView.getViewTreeObserver().removeOnPreDrawListener(this);
                        if (PhotoViewer.this.textureImageView != null) {
                            if (PhotoViewer.this.isInline) {
                                AndroidUtilities.runOnUIThread(new PhotoViewer$7$1$$ExternalSyntheticLambda0(this), 300);
                            } else {
                                PhotoViewer.this.textureImageView.setVisibility(4);
                                PhotoViewer.this.textureImageView.setImageDrawable((Drawable) null);
                                if (PhotoViewer.this.currentBitmap != null) {
                                    PhotoViewer.this.currentBitmap.recycle();
                                    Bitmap unused = PhotoViewer.this.currentBitmap = null;
                                }
                            }
                        }
                        AndroidUtilities.runOnUIThread(new PhotoViewer$7$1$$ExternalSyntheticLambda1(this));
                        int unused2 = PhotoViewer.this.waitingForFirstTextureUpload = 0;
                        return true;
                    }

                    /* access modifiers changed from: private */
                    public /* synthetic */ void lambda$onPreDraw$0() {
                        PhotoViewer.this.textureImageView.setVisibility(4);
                        PhotoViewer.this.textureImageView.setImageDrawable((Drawable) null);
                        if (PhotoViewer.this.currentBitmap != null) {
                            PhotoViewer.this.currentBitmap.recycle();
                            Bitmap unused = PhotoViewer.this.currentBitmap = null;
                        }
                    }

                    /* access modifiers changed from: private */
                    public /* synthetic */ void lambda$onPreDraw$1() {
                        if (PhotoViewer.this.isInline) {
                            PhotoViewer.this.dismissInternal();
                        }
                    }
                });
                PhotoViewer.this.changedTextureView.invalidate();
            }
        }
    };
    private int switchImageAfterAnimation;
    /* access modifiers changed from: private */
    public Runnable switchToInlineRunnable = new Runnable() {
        public void run() {
            if (PipVideoOverlay.isVisible()) {
                PipVideoOverlay.dismiss();
                AndroidUtilities.runOnUIThread(this, 250);
                return;
            }
            boolean unused = PhotoViewer.this.switchingInlineMode = false;
            if (PhotoViewer.this.currentBitmap != null) {
                PhotoViewer.this.currentBitmap.recycle();
                Bitmap unused2 = PhotoViewer.this.currentBitmap = null;
            }
            boolean unused3 = PhotoViewer.this.changingTextureView = true;
            if (PhotoViewer.this.textureImageView != null) {
                try {
                    PhotoViewer photoViewer = PhotoViewer.this;
                    Bitmap unused4 = photoViewer.currentBitmap = Bitmaps.createBitmap(photoViewer.videoTextureView.getWidth(), PhotoViewer.this.videoTextureView.getHeight(), Bitmap.Config.ARGB_8888);
                    PhotoViewer.this.videoTextureView.getBitmap(PhotoViewer.this.currentBitmap);
                } catch (Throwable th) {
                    if (PhotoViewer.this.currentBitmap != null) {
                        PhotoViewer.this.currentBitmap.recycle();
                        Bitmap unused5 = PhotoViewer.this.currentBitmap = null;
                    }
                    FileLog.e(th);
                }
                if (PhotoViewer.this.currentBitmap != null) {
                    PhotoViewer.this.textureImageView.setVisibility(0);
                    PhotoViewer.this.textureImageView.setImageBitmap(PhotoViewer.this.currentBitmap);
                } else {
                    PhotoViewer.this.textureImageView.setImageDrawable((Drawable) null);
                }
            }
            boolean unused6 = PhotoViewer.this.isInline = true;
            TextureView unused7 = PhotoViewer.this.changedTextureView = new TextureView(PhotoViewer.this.parentActivity);
            if (PipVideoOverlay.show(false, PhotoViewer.this.parentActivity, PhotoViewer.this.changedTextureView, PhotoViewer.this.videoWidth, PhotoViewer.this.videoHeight, PhotoViewer.this.pipVideoOverlayAnimateFlag)) {
                PipVideoOverlay.setPhotoViewer(PhotoViewer.this);
            }
            boolean unused8 = PhotoViewer.this.pipVideoOverlayAnimateFlag = true;
            PhotoViewer.this.changedTextureView.setVisibility(4);
            PhotoViewer.this.aspectRatioFrameLayout.removeView(PhotoViewer.this.videoTextureView);
        }
    };
    /* access modifiers changed from: private */
    public boolean switchingInlineMode;
    private int switchingToIndex;
    /* access modifiers changed from: private */
    public int switchingToMode = -1;
    private int[] tempInt = new int[2];
    /* access modifiers changed from: private */
    public ImageView textureImageView;
    /* access modifiers changed from: private */
    public boolean textureUploaded;
    private ImageView timeItem;
    private Tooltip tooltip;
    private int totalImagesCount;
    private int totalImagesCountMerge;
    private int touchSlop;
    /* access modifiers changed from: private */
    public long transitionAnimationStartTime;
    /* access modifiers changed from: private */
    public int transitionIndex;
    /* access modifiers changed from: private */
    public float translationX;
    /* access modifiers changed from: private */
    public float translationY;
    private boolean tryStartRequestPreviewOnFinish;
    private ImageView tuneItem;
    private final Runnable updateContainerFlagsRunnable = new PhotoViewer$$ExternalSyntheticLambda49(this);
    /* access modifiers changed from: private */
    public Runnable updateProgressRunnable = new Runnable() {
        public void run() {
            float f;
            float f2;
            if (PhotoViewer.this.videoPlayer != null) {
                float f3 = 0.0f;
                if (!PhotoViewer.this.isCurrentVideo) {
                    float currentPosition = ((float) PhotoViewer.this.videoPlayer.getCurrentPosition()) / ((float) PhotoViewer.this.videoPlayer.getDuration());
                    if (PhotoViewer.this.shownControlsByEnd && !PhotoViewer.this.actionBarWasShownBeforeByEnd) {
                        currentPosition = 0.0f;
                    }
                    if (PhotoViewer.this.currentVideoFinishedLoading) {
                        f2 = 1.0f;
                    } else {
                        long elapsedRealtime = SystemClock.elapsedRealtime();
                        if (Math.abs(elapsedRealtime - PhotoViewer.this.lastBufferedPositionCheck) >= 500) {
                            if (PhotoViewer.this.isStreaming) {
                                f2 = FileLoader.getInstance(PhotoViewer.this.currentAccount).getBufferedProgressFromPosition(PhotoViewer.this.seekToProgressPending != 0.0f ? PhotoViewer.this.seekToProgressPending : f, PhotoViewer.this.currentFileNames[0]);
                            } else {
                                f2 = 1.0f;
                            }
                            long unused = PhotoViewer.this.lastBufferedPositionCheck = elapsedRealtime;
                        } else {
                            f2 = -1.0f;
                        }
                    }
                    if (PhotoViewer.this.inPreview || PhotoViewer.this.videoTimelineView.getVisibility() != 0) {
                        if (PhotoViewer.this.seekToProgressPending == 0.0f) {
                            PhotoViewer photoViewer = PhotoViewer.this;
                            VideoPlayerRewinder videoPlayerRewinder = photoViewer.videoPlayerRewinder;
                            if (videoPlayerRewinder.rewindCount == 0 || !videoPlayerRewinder.rewindByBackSeek) {
                                photoViewer.videoPlayerSeekbar.setProgress(f, false);
                            }
                        }
                        if (f2 != -1.0f) {
                            PhotoViewer.this.videoPlayerSeekbar.setBufferedProgress(f2);
                            PipVideoOverlay.setBufferedProgress(f2);
                        }
                    } else if (f >= PhotoViewer.this.videoTimelineView.getRightProgress()) {
                        boolean unused2 = PhotoViewer.this.manuallyPaused = false;
                        PhotoViewer.this.videoPlayer.pause();
                        PhotoViewer.this.videoPlayerSeekbar.setProgress(0.0f);
                        PhotoViewer.this.videoPlayer.seekTo((long) ((int) (PhotoViewer.this.videoTimelineView.getLeftProgress() * ((float) PhotoViewer.this.videoPlayer.getDuration()))));
                        PhotoViewer.this.containerView.invalidate();
                    } else {
                        float leftProgress = f - PhotoViewer.this.videoTimelineView.getLeftProgress();
                        if (leftProgress < 0.0f) {
                            leftProgress = 0.0f;
                        }
                        f = leftProgress / (PhotoViewer.this.videoTimelineView.getRightProgress() - PhotoViewer.this.videoTimelineView.getLeftProgress());
                        if (f > 1.0f) {
                            f = 1.0f;
                        }
                        PhotoViewer.this.videoPlayerSeekbar.setProgress(f);
                    }
                    PhotoViewer.this.videoPlayerSeekbarView.invalidate();
                    if (PhotoViewer.this.shouldSavePositionForCurrentVideo != null && f >= 0.0f && SystemClock.elapsedRealtime() - PhotoViewer.this.lastSaveTime >= 1000) {
                        String unused3 = PhotoViewer.this.shouldSavePositionForCurrentVideo;
                        long unused4 = PhotoViewer.this.lastSaveTime = SystemClock.elapsedRealtime();
                        Utilities.globalQueue.postRunnable(new PhotoViewer$5$$ExternalSyntheticLambda0(this, f));
                    }
                    PhotoViewer.this.updateVideoPlayerTime();
                } else if (!PhotoViewer.this.videoTimelineView.isDragging()) {
                    float currentPosition2 = ((float) PhotoViewer.this.videoPlayer.getCurrentPosition()) / ((float) PhotoViewer.this.videoPlayer.getDuration());
                    if (!PhotoViewer.this.shownControlsByEnd || PhotoViewer.this.actionBarWasShownBeforeByEnd) {
                        f3 = currentPosition2;
                    }
                    if (PhotoViewer.this.inPreview || (PhotoViewer.this.currentEditMode == 0 && PhotoViewer.this.videoTimelineView.getVisibility() != 0)) {
                        if (PhotoViewer.this.sendPhotoType != 1) {
                            PhotoViewer.this.videoTimelineView.setProgress(f3);
                        }
                    } else if (f3 >= PhotoViewer.this.videoTimelineView.getRightProgress()) {
                        PhotoViewer.this.videoTimelineView.setProgress(PhotoViewer.this.videoTimelineView.getLeftProgress());
                        PhotoViewer.this.videoPlayer.seekTo((long) ((int) (PhotoViewer.this.videoTimelineView.getLeftProgress() * ((float) PhotoViewer.this.videoPlayer.getDuration()))));
                        boolean unused5 = PhotoViewer.this.manuallyPaused = false;
                        PhotoViewer.this.cancelVideoPlayRunnable();
                        if (PhotoViewer.this.muteVideo || PhotoViewer.this.sendPhotoType == 1 || PhotoViewer.this.currentEditMode != 0 || PhotoViewer.this.switchingToMode > 0) {
                            PhotoViewer.this.videoPlayer.play();
                        } else {
                            PhotoViewer.this.videoPlayer.pause();
                        }
                        PhotoViewer.this.containerView.invalidate();
                    } else {
                        PhotoViewer.this.videoTimelineView.setProgress(f3);
                    }
                    PhotoViewer.this.updateVideoPlayerTime();
                }
            }
            if (PhotoViewer.this.firstFrameView != null) {
                PhotoViewer.this.firstFrameView.updateAlpha();
            }
            if (PhotoViewer.this.isPlaying) {
                AndroidUtilities.runOnUIThread(PhotoViewer.this.updateProgressRunnable, 17);
            }
        }

        /* access modifiers changed from: private */
        public /* synthetic */ void lambda$run$0(float f) {
            ApplicationLoader.applicationContext.getSharedPreferences("media_saved_pos", 0).edit().putFloat(PhotoViewer.this.shouldSavePositionForCurrentVideo, f).commit();
        }
    };
    /* access modifiers changed from: private */
    public boolean useSmoothKeyboard;
    private VelocityTracker velocityTracker;
    /* access modifiers changed from: private */
    public TextView videoAvatarTooltip;
    /* access modifiers changed from: private */
    public boolean videoConvertSupported;
    private float videoCrossfadeAlpha;
    private long videoCrossfadeAlphaLastTime;
    private boolean videoCrossfadeStarted;
    private float videoCutEnd;
    private float videoCutStart;
    /* access modifiers changed from: private */
    public float videoDuration;
    /* access modifiers changed from: private */
    public VideoForwardDrawable videoForwardDrawable;
    private Bitmap videoFrameBitmap = null;
    private Paint videoFrameBitmapPaint = new Paint();
    /* access modifiers changed from: private */
    public int videoFramerate;
    /* access modifiers changed from: private */
    public long videoFramesSize;
    /* access modifiers changed from: private */
    public int videoHeight;
    /* access modifiers changed from: private */
    public Runnable videoPlayRunnable;
    /* access modifiers changed from: private */
    public VideoPlayer videoPlayer;
    private Animator videoPlayerControlAnimator;
    /* access modifiers changed from: private */
    public VideoPlayerControlFrameLayout videoPlayerControlFrameLayout;
    /* access modifiers changed from: private */
    public boolean videoPlayerControlVisible = true;
    /* access modifiers changed from: private */
    public int[] videoPlayerCurrentTime = new int[2];
    VideoPlayerRewinder videoPlayerRewinder = new VideoPlayerRewinder() {
        /* access modifiers changed from: protected */
        public void onRewindCanceled() {
            boolean unused = PhotoViewer.this.onTouchEvent(MotionEvent.obtain(0, 0, 3, 0.0f, 0.0f, 0));
            PhotoViewer.this.videoForwardDrawable.setShowing(false);
            PipVideoOverlay.onRewindCanceled();
        }

        /* access modifiers changed from: protected */
        public void updateRewindProgressUi(long j, float f, boolean z) {
            PhotoViewer.this.videoForwardDrawable.setTime(Math.abs(j));
            if (z) {
                PhotoViewer.this.videoPlayerSeekbar.setProgress(f);
                PhotoViewer.this.videoPlayerSeekbarView.invalidate();
            }
            PipVideoOverlay.onUpdateRewindProgressUi(j, f, z);
        }

        /* access modifiers changed from: protected */
        public void onRewindStart(boolean z) {
            PhotoViewer.this.videoForwardDrawable.setOneShootAnimation(false);
            PhotoViewer.this.videoForwardDrawable.setLeftSide(!z);
            PhotoViewer.this.videoForwardDrawable.setShowing(true);
            PhotoViewer.this.containerView.invalidate();
            PipVideoOverlay.onRewindStart(z);
        }
    };
    /* access modifiers changed from: private */
    public VideoPlayerSeekBar videoPlayerSeekbar;
    /* access modifiers changed from: private */
    public View videoPlayerSeekbarView;
    /* access modifiers changed from: private */
    public SimpleTextView videoPlayerTime;
    /* access modifiers changed from: private */
    public int[] videoPlayerTotalTime = new int[2];
    /* access modifiers changed from: private */
    public VideoSeekPreviewImage videoPreviewFrame;
    /* access modifiers changed from: private */
    public AnimatorSet videoPreviewFrameAnimation;
    private MessageObject videoPreviewMessageObject;
    /* access modifiers changed from: private */
    public boolean videoSizeSet;
    /* access modifiers changed from: private */
    public TextureView videoTextureView;
    private ObjectAnimator videoTimelineAnimator;
    /* access modifiers changed from: private */
    public VideoTimelinePlayView videoTimelineView;
    /* access modifiers changed from: private */
    public int videoWidth;
    private AlertDialog visibleDialog;
    private int waitingForDraw;
    /* access modifiers changed from: private */
    public int waitingForFirstTextureUpload;
    /* access modifiers changed from: private */
    public boolean wasLayout;
    /* access modifiers changed from: private */
    public boolean wasRotated;
    /* access modifiers changed from: private */
    public WindowManager.LayoutParams windowLayoutParams;
    /* access modifiers changed from: private */
    public FrameLayout windowView;
    /* access modifiers changed from: private */
    public boolean zoomAnimation;
    private boolean zooming;

    public static class EmptyPhotoViewerProvider implements PhotoViewerProvider {
        public boolean allowCaption() {
            return true;
        }

        public boolean allowSendingSubmenu() {
            return true;
        }

        public boolean canCaptureMorePhotos() {
            return true;
        }

        public boolean canReplace(int i) {
            return false;
        }

        public boolean canScrollAway() {
            return true;
        }

        public boolean cancelButtonPressed() {
            return true;
        }

        public boolean closeKeyboard() {
            return false;
        }

        public void deleteImageAtIndex(int i) {
        }

        public String getDeleteMessageString() {
            return null;
        }

        public MessageObject getEditingMessageObject() {
            return null;
        }

        public int getPhotoIndex(int i) {
            return -1;
        }

        public PlaceProviderObject getPlaceForPhoto(MessageObject messageObject, TLRPC$FileLocation tLRPC$FileLocation, int i, boolean z) {
            return null;
        }

        public int getSelectedCount() {
            return 0;
        }

        public HashMap<Object, Object> getSelectedPhotos() {
            return null;
        }

        public ArrayList<Object> getSelectedPhotosOrder() {
            return null;
        }

        public CharSequence getSubtitleFor(int i) {
            return null;
        }

        public ImageReceiver.BitmapHolder getThumbForPhoto(MessageObject messageObject, TLRPC$FileLocation tLRPC$FileLocation, int i) {
            return null;
        }

        public CharSequence getTitleFor(int i) {
            return null;
        }

        public int getTotalImageCount() {
            return -1;
        }

        public boolean isPhotoChecked(int i) {
            return false;
        }

        public boolean loadMore() {
            return false;
        }

        public void needAddMorePhotos() {
        }

        public void onApplyCaption(CharSequence charSequence) {
        }

        public void onCaptionChanged(CharSequence charSequence) {
        }

        public void onClose() {
        }

        public void onOpen() {
        }

        public void openPhotoForEdit(String str, String str2, boolean z) {
        }

        public void replaceButtonPressed(int i, VideoEditedInfo videoEditedInfo) {
        }

        public boolean scaleToFill() {
            return false;
        }

        public void sendButtonPressed(int i, VideoEditedInfo videoEditedInfo, boolean z, int i2, boolean z2) {
        }

        public int setPhotoChecked(int i, VideoEditedInfo videoEditedInfo) {
            return -1;
        }

        public int setPhotoUnchecked(Object obj) {
            return -1;
        }

        public void updatePhotoAtIndex(int i) {
        }

        public void willHidePhotoViewer() {
        }

        public void willSwitchFromPhoto(MessageObject messageObject, TLRPC$FileLocation tLRPC$FileLocation, int i) {
        }
    }

    public interface PageBlocksAdapter {
        TLRPC$PageBlock get(int i);

        List<TLRPC$PageBlock> getAll();

        CharSequence getCaption(int i);

        File getFile(int i);

        TLRPC$PhotoSize getFileLocation(TLObject tLObject, int[] iArr);

        String getFileName(int i);

        int getItemsCount();

        TLObject getMedia(int i);

        Object getParentObject();

        boolean isVideo(int i);

        void updateSlideshowCell(TLRPC$PageBlock tLRPC$PageBlock);
    }

    public interface PhotoViewerProvider {
        boolean allowCaption();

        boolean allowSendingSubmenu();

        boolean canCaptureMorePhotos();

        boolean canReplace(int i);

        boolean canScrollAway();

        boolean cancelButtonPressed();

        boolean closeKeyboard();

        void deleteImageAtIndex(int i);

        String getDeleteMessageString();

        MessageObject getEditingMessageObject();

        int getPhotoIndex(int i);

        PlaceProviderObject getPlaceForPhoto(MessageObject messageObject, TLRPC$FileLocation tLRPC$FileLocation, int i, boolean z);

        int getSelectedCount();

        HashMap<Object, Object> getSelectedPhotos();

        ArrayList<Object> getSelectedPhotosOrder();

        CharSequence getSubtitleFor(int i);

        ImageReceiver.BitmapHolder getThumbForPhoto(MessageObject messageObject, TLRPC$FileLocation tLRPC$FileLocation, int i);

        CharSequence getTitleFor(int i);

        int getTotalImageCount();

        boolean isPhotoChecked(int i);

        boolean loadMore();

        void needAddMorePhotos();

        void onApplyCaption(CharSequence charSequence);

        void onCaptionChanged(CharSequence charSequence);

        void onClose();

        void onOpen();

        void openPhotoForEdit(String str, String str2, boolean z);

        void replaceButtonPressed(int i, VideoEditedInfo videoEditedInfo);

        boolean scaleToFill();

        void sendButtonPressed(int i, VideoEditedInfo videoEditedInfo, boolean z, int i2, boolean z2);

        int setPhotoChecked(int i, VideoEditedInfo videoEditedInfo);

        int setPhotoUnchecked(Object obj);

        void updatePhotoAtIndex(int i);

        void willHidePhotoViewer();

        void willSwitchFromPhoto(MessageObject messageObject, TLRPC$FileLocation tLRPC$FileLocation, int i);
    }

    public static class PlaceProviderObject {
        public boolean allowTakeAnimation = true;
        public ClippingImageView animatingImageView;
        public int animatingImageViewYOffset;
        public boolean canEdit;
        public int clipBottomAddition;
        public int clipTopAddition;
        public long dialogId;
        public ImageReceiver imageReceiver;
        public boolean isEvent;
        public View parentView;
        public int[] radius;
        public float scale = 1.0f;
        public long size;
        public int starOffset;
        public ImageReceiver.BitmapHolder thumb;
        public int viewX;
        public int viewY;
    }

    private boolean enableSwipeToPiP() {
        return false;
    }

    /* access modifiers changed from: private */
    public static /* synthetic */ boolean lambda$setParentActivity$24(View view, MotionEvent motionEvent) {
        return true;
    }

    /* access modifiers changed from: private */
    public static /* synthetic */ boolean lambda$setParentActivity$25(View view, MotionEvent motionEvent) {
        return true;
    }

    public void onConfigurationChanged(Configuration configuration) {
    }

    public boolean onDoubleTapEvent(MotionEvent motionEvent) {
        return false;
    }

    public void onLongPress(MotionEvent motionEvent) {
    }

    public boolean onScroll(MotionEvent motionEvent, MotionEvent motionEvent2, float f, float f2) {
        return false;
    }

    public void onShowPress(MotionEvent motionEvent) {
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$new$0() {
        toggleMiniProgressInternal(true);
    }

    public void addPhoto(MessageObject messageObject, int i) {
        if (i == this.classGuid) {
            if (this.imagesByIds[0].indexOfKey(messageObject.getId()) < 0) {
                if (this.opennedFromMedia) {
                    this.imagesArr.add(messageObject);
                } else {
                    this.imagesArr.add(0, messageObject);
                }
                this.imagesByIds[0].put(messageObject.getId(), messageObject);
            }
            this.endReached[0] = this.imagesArr.size() == this.totalImagesCount;
            setImages();
        }
    }

    public int getClassGuid() {
        return this.classGuid;
    }

    public void setCaption(CharSequence charSequence) {
        this.hasCaptionForAllMedia = true;
        this.captionForAllMedia = charSequence;
        setCurrentCaption((MessageObject) null, charSequence, false);
        updateCaptionTextForCurrentPhoto((Object) null);
    }

    private static class SavedVideoPosition {
        public final float position;
        public final long timestamp;

        public SavedVideoPosition(float f, long j) {
            this.position = f;
            this.timestamp = j;
        }
    }

    /* access modifiers changed from: private */
    public void onLinkClick(ClickableSpan clickableSpan, TextView textView) {
        if (textView == null || !(clickableSpan instanceof URLSpan)) {
            clickableSpan.onClick(textView);
            return;
        }
        String url = ((URLSpan) clickableSpan).getURL();
        if (url.startsWith("video")) {
            if (this.videoPlayer != null && this.currentMessageObject != null) {
                int intValue = Utilities.parseInt((CharSequence) url).intValue();
                if (this.videoPlayer.getDuration() == -9223372036854775807L) {
                    this.seekToProgressPending = ((float) intValue) / ((float) this.currentMessageObject.getDuration());
                    return;
                }
                long j = ((long) intValue) * 1000;
                this.videoPlayer.seekTo(j);
                this.videoPlayerSeekbar.setProgress(((float) j) / ((float) this.videoPlayer.getDuration()), true);
                this.videoPlayerSeekbarView.invalidate();
            }
        } else if (url.startsWith("#")) {
            if (this.parentActivity instanceof LaunchActivity) {
                DialogsActivity dialogsActivity = new DialogsActivity((Bundle) null);
                dialogsActivity.setSearchString(url);
                ((LaunchActivity) this.parentActivity).presentFragment(dialogsActivity, false, true);
                closePhoto(false, false);
            }
        } else if (this.parentChatActivity == null || (!(clickableSpan instanceof URLSpanReplacement) && !AndroidUtilities.shouldShowUrlInAlert(url))) {
            clickableSpan.onClick(textView);
        } else {
            AlertsCreator.showOpenUrlAlert(this.parentChatActivity, url, true, true);
        }
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:7:0x0036  */
    /* JADX WARNING: Removed duplicated region for block: B:8:0x003e  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void onLinkLongPress(android.text.style.URLSpan r11, android.widget.TextView r12, java.lang.Runnable r13) {
        /*
            r10 = this;
            org.telegram.ui.ActionBar.BottomSheet$Builder r0 = new org.telegram.ui.ActionBar.BottomSheet$Builder
            android.app.Activity r1 = r10.parentActivity
            org.telegram.ui.ActionBar.Theme$ResourcesProvider r2 = r10.resourcesProvider
            r3 = 0
            r4 = -14933463(0xffffffffff1CLASSNAME, float:-2.0753694E38)
            r0.<init>(r1, r3, r2, r4)
            java.lang.String r1 = r11.getURL()
            java.lang.String r2 = "video?"
            boolean r1 = r1.startsWith(r2)
            r2 = -1
            r5 = 1
            if (r1 == 0) goto L_0x0033
            java.lang.String r1 = r11.getURL()     // Catch:{ all -> 0x0033 }
            java.lang.String r6 = r11.getURL()     // Catch:{ all -> 0x0033 }
            r7 = 63
            int r6 = r6.indexOf(r7)     // Catch:{ all -> 0x0033 }
            int r6 = r6 + r5
            java.lang.String r1 = r1.substring(r6)     // Catch:{ all -> 0x0033 }
            int r1 = java.lang.Integer.parseInt(r1)     // Catch:{ all -> 0x0033 }
            goto L_0x0034
        L_0x0033:
            r1 = -1
        L_0x0034:
            if (r1 < 0) goto L_0x003e
            java.lang.String r6 = org.telegram.messenger.AndroidUtilities.formatDuration(r1, r3)
            r0.setTitle(r6)
            goto L_0x0045
        L_0x003e:
            java.lang.String r6 = r11.getURL()
            r0.setTitle(r6)
        L_0x0045:
            r6 = 2
            java.lang.CharSequence[] r7 = new java.lang.CharSequence[r6]
            r8 = 2131627142(0x7f0e0CLASSNAME, float:1.888154E38)
            java.lang.String r9 = "Open"
            java.lang.String r8 = org.telegram.messenger.LocaleController.getString(r9, r8)
            r7[r3] = r8
            r8 = 2131625272(0x7f0e0538, float:1.8877747E38)
            java.lang.String r9 = "Copy"
            java.lang.String r8 = org.telegram.messenger.LocaleController.getString(r9, r8)
            r7[r5] = r8
            org.telegram.ui.PhotoViewer$$ExternalSyntheticLambda9 r8 = new org.telegram.ui.PhotoViewer$$ExternalSyntheticLambda9
            r8.<init>(r10, r11, r12, r1)
            r0.setItems(r7, r8)
            org.telegram.ui.PhotoViewer$$ExternalSyntheticLambda10 r11 = new org.telegram.ui.PhotoViewer$$ExternalSyntheticLambda10
            r11.<init>(r13)
            r0.setOnPreDismissListener(r11)
            org.telegram.ui.ActionBar.BottomSheet r11 = r0.create()
            r11.scrollNavBar = r5
            r11.show()
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r12 = r10.containerView     // Catch:{ Exception -> 0x007c }
            r12.performHapticFeedback(r3, r6)     // Catch:{ Exception -> 0x007c }
        L_0x007c:
            r11.setItemColor(r3, r2, r2)
            r11.setItemColor(r5, r2, r2)
            r11.setBackgroundColor(r4)
            r12 = -7697782(0xffffffffff8a8a8a, float:NaN)
            r11.setTitleColor(r12)
            r11.setCalcMandatoryInsets(r5)
            android.view.Window r12 = r11.getWindow()
            org.telegram.messenger.AndroidUtilities.setNavigationBarColor(r12, r4, r3)
            android.view.Window r12 = r11.getWindow()
            org.telegram.messenger.AndroidUtilities.setLightNavigationBar((android.view.Window) r12, (boolean) r3)
            r11.scrollNavBar = r5
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.onLinkLongPress(android.text.style.URLSpan, android.widget.TextView, java.lang.Runnable):void");
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:51:0x0104  */
    /* JADX WARNING: Removed duplicated region for block: B:52:0x010e  */
    /* JADX WARNING: Removed duplicated region for block: B:61:0x0141  */
    /* JADX WARNING: Removed duplicated region for block: B:65:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ void lambda$onLinkLongPress$1(android.text.style.URLSpan r6, android.widget.TextView r7, int r8, android.content.DialogInterface r9, int r10) {
        /*
            r5 = this;
            if (r10 != 0) goto L_0x0007
            r5.onLinkClick(r6, r7)
            goto L_0x0153
        L_0x0007:
            r7 = 1
            if (r10 != r7) goto L_0x0153
            java.lang.String r6 = r6.getURL()
            java.lang.String r9 = "mailto:"
            boolean r9 = r6.startsWith(r9)
            r10 = 0
            if (r9 == 0) goto L_0x001f
            r7 = 7
            java.lang.String r6 = r6.substring(r7)
        L_0x001c:
            r7 = 0
            goto L_0x00ff
        L_0x001f:
            java.lang.String r9 = "tel:"
            boolean r9 = r6.startsWith(r9)
            if (r9 == 0) goto L_0x002e
            r8 = 4
            java.lang.String r6 = r6.substring(r8)
            goto L_0x00ff
        L_0x002e:
            if (r8 < 0) goto L_0x001c
            org.telegram.messenger.MessageObject r9 = r5.currentMessageObject
            if (r9 == 0) goto L_0x001c
            boolean r0 = r9.scheduled
            if (r0 != 0) goto L_0x001c
            boolean r0 = r9.isVideo()
            if (r0 != 0) goto L_0x0058
            org.telegram.messenger.MessageObject r0 = r5.currentMessageObject
            boolean r0 = r0.isRoundVideo()
            if (r0 != 0) goto L_0x0058
            org.telegram.messenger.MessageObject r0 = r5.currentMessageObject
            boolean r0 = r0.isVoice()
            if (r0 != 0) goto L_0x0058
            org.telegram.messenger.MessageObject r0 = r5.currentMessageObject
            boolean r0 = r0.isMusic()
            if (r0 == 0) goto L_0x0057
            goto L_0x0058
        L_0x0057:
            r7 = 0
        L_0x0058:
            if (r7 != 0) goto L_0x0061
            org.telegram.messenger.MessageObject r7 = r5.currentMessageObject
            org.telegram.messenger.MessageObject r7 = r7.replyMessageObject
            if (r7 == 0) goto L_0x0061
            r9 = r7
        L_0x0061:
            long r0 = r9.getDialogId()
            int r7 = r9.getId()
            org.telegram.tgnet.TLRPC$Message r2 = r9.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r2 = r2.fwd_from
            if (r2 == 0) goto L_0x008c
            org.telegram.tgnet.TLRPC$Peer r3 = r2.saved_from_peer
            if (r3 == 0) goto L_0x007e
            long r0 = org.telegram.messenger.MessageObject.getPeerId(r3)
            org.telegram.tgnet.TLRPC$Message r7 = r9.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r7 = r7.fwd_from
            int r7 = r7.saved_from_msg_id
            goto L_0x008c
        L_0x007e:
            org.telegram.tgnet.TLRPC$Peer r2 = r2.from_id
            if (r2 == 0) goto L_0x008c
            long r0 = org.telegram.messenger.MessageObject.getPeerId(r2)
            org.telegram.tgnet.TLRPC$Message r7 = r9.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r7 = r7.fwd_from
            int r7 = r7.channel_post
        L_0x008c:
            boolean r9 = org.telegram.messenger.DialogObject.isChatDialog(r0)
            java.lang.String r2 = "?t="
            java.lang.String r3 = "/"
            java.lang.String r4 = "https://t.me/"
            if (r9 == 0) goto L_0x00cc
            int r9 = r5.currentAccount
            org.telegram.messenger.MessagesController r9 = org.telegram.messenger.MessagesController.getInstance(r9)
            long r0 = -r0
            java.lang.Long r0 = java.lang.Long.valueOf(r0)
            org.telegram.tgnet.TLRPC$Chat r9 = r9.getChat(r0)
            if (r9 == 0) goto L_0x001c
            java.lang.String r0 = r9.username
            if (r0 == 0) goto L_0x001c
            java.lang.StringBuilder r6 = new java.lang.StringBuilder
            r6.<init>()
            r6.append(r4)
            java.lang.String r9 = r9.username
            r6.append(r9)
            r6.append(r3)
            r6.append(r7)
            r6.append(r2)
            r6.append(r8)
            java.lang.String r6 = r6.toString()
            goto L_0x001c
        L_0x00cc:
            int r9 = r5.currentAccount
            org.telegram.messenger.MessagesController r9 = org.telegram.messenger.MessagesController.getInstance(r9)
            java.lang.Long r0 = java.lang.Long.valueOf(r0)
            org.telegram.tgnet.TLRPC$User r9 = r9.getUser(r0)
            if (r9 == 0) goto L_0x001c
            java.lang.String r0 = r9.username
            if (r0 == 0) goto L_0x001c
            java.lang.StringBuilder r6 = new java.lang.StringBuilder
            r6.<init>()
            r6.append(r4)
            java.lang.String r9 = r9.username
            r6.append(r9)
            r6.append(r3)
            r6.append(r7)
            r6.append(r2)
            r6.append(r8)
            java.lang.String r6 = r6.toString()
            goto L_0x001c
        L_0x00ff:
            org.telegram.messenger.AndroidUtilities.addToClipboard(r6)
            if (r7 == 0) goto L_0x010e
            r6 = 2131627540(0x7f0e0e14, float:1.8882347E38)
            java.lang.String r7 = "PhoneCopied"
            java.lang.String r6 = org.telegram.messenger.LocaleController.getString(r7, r6)
            goto L_0x013b
        L_0x010e:
            java.lang.String r7 = "#"
            boolean r7 = r6.startsWith(r7)
            if (r7 == 0) goto L_0x0120
            r6 = 2131626175(0x7f0e08bf, float:1.8879579E38)
            java.lang.String r7 = "HashtagCopied"
            java.lang.String r6 = org.telegram.messenger.LocaleController.getString(r7, r6)
            goto L_0x013b
        L_0x0120:
            java.lang.String r7 = "@"
            boolean r6 = r6.startsWith(r7)
            if (r6 == 0) goto L_0x0132
            r6 = 2131628919(0x7f0e1377, float:1.8885144E38)
            java.lang.String r7 = "UsernameCopied"
            java.lang.String r6 = org.telegram.messenger.LocaleController.getString(r7, r6)
            goto L_0x013b
        L_0x0132:
            r6 = 2131626480(0x7f0e09f0, float:1.8880197E38)
            java.lang.String r7 = "LinkCopied"
            java.lang.String r6 = org.telegram.messenger.LocaleController.getString(r7, r6)
        L_0x013b:
            int r7 = android.os.Build.VERSION.SDK_INT
            r8 = 31
            if (r7 >= r8) goto L_0x0153
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r7 = r5.containerView
            org.telegram.ui.ActionBar.Theme$ResourcesProvider r8 = r5.resourcesProvider
            org.telegram.ui.Components.BulletinFactory r7 = org.telegram.ui.Components.BulletinFactory.of(r7, r8)
            r8 = 2131558613(0x7f0d00d5, float:1.8742547E38)
            org.telegram.ui.Components.Bulletin r6 = r7.createSimpleBulletin(r8, r6)
            r6.show()
        L_0x0153:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.lambda$onLinkLongPress$1(android.text.style.URLSpan, android.widget.TextView, int, android.content.DialogInterface, int):void");
    }

    /* access modifiers changed from: private */
    public void cancelFlashAnimations() {
        View view = this.flashView;
        if (view != null) {
            view.animate().setListener((Animator.AnimatorListener) null).cancel();
            this.flashView.setAlpha(0.0f);
        }
        AnimatorSet animatorSet = this.flashAnimator;
        if (animatorSet != null) {
            animatorSet.cancel();
            this.flashAnimator = null;
        }
        PhotoCropView photoCropView2 = this.photoCropView;
        if (photoCropView2 != null) {
            photoCropView2.cancelThumbAnimation();
        }
    }

    /* access modifiers changed from: private */
    public void cancelVideoPlayRunnable() {
        Runnable runnable = this.videoPlayRunnable;
        if (runnable != null) {
            AndroidUtilities.cancelRunOnUIThread(runnable);
            this.videoPlayRunnable = null;
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$new$3() {
        if (this.isVisible && this.animationInProgress == 0) {
            updateContainerFlags(this.isActionBarVisible);
        }
    }

    private static class EditState {
        public long averageDuration;
        public MediaController.CropState cropState;
        public ArrayList<VideoEditedInfo.MediaEntity> croppedMediaEntities;
        public String croppedPaintPath;
        public ArrayList<VideoEditedInfo.MediaEntity> mediaEntities;
        public String paintPath;
        public MediaController.SavedFilterState savedFilterState;

        private EditState() {
        }

        public void reset() {
            this.paintPath = null;
            this.cropState = null;
            this.savedFilterState = null;
            this.mediaEntities = null;
            this.croppedPaintPath = null;
            this.croppedMediaEntities = null;
            this.averageDuration = 0;
        }
    }

    private class SavedState {
        private int index;
        private ArrayList<MessageObject> messages;
        private PhotoViewerProvider provider;

        public SavedState(int i, ArrayList<MessageObject> arrayList, PhotoViewerProvider photoViewerProvider) {
            this.messages = arrayList;
            this.index = i;
            this.provider = photoViewerProvider;
        }

        public void restore() {
            PhotoViewerProvider unused = PhotoViewer.this.placeProvider = this.provider;
            if (Build.VERSION.SDK_INT >= 21) {
                PhotoViewer.this.windowLayoutParams.flags = -NUM;
            } else {
                PhotoViewer.this.windowLayoutParams.flags = 131072;
            }
            PhotoViewer.this.windowLayoutParams.softInputMode = (PhotoViewer.this.useSmoothKeyboard ? 32 : 16) | 256;
            PhotoViewer.this.windowView.setFocusable(false);
            PhotoViewer.this.containerView.setFocusable(false);
            PhotoViewer.this.backgroundDrawable.setAlpha(255);
            PhotoViewer.this.containerView.setAlpha(1.0f);
            PhotoViewer photoViewer = PhotoViewer.this;
            ArrayList<MessageObject> arrayList = this.messages;
            int i = this.index;
            photoViewer.onPhotoShow((MessageObject) null, (TLRPC$FileLocation) null, (ImageLocation) null, (ImageLocation) null, arrayList, (ArrayList<SecureDocument>) null, (List<Object>) null, i, this.provider.getPlaceForPhoto(arrayList.get(i), (TLRPC$FileLocation) null, this.index, true));
        }
    }

    private class BackgroundDrawable extends ColorDrawable {
        private boolean allowDrawContent;
        /* access modifiers changed from: private */
        public Runnable drawRunnable;
        private final Paint paint;
        private final RectF rect = new RectF();
        private final RectF visibleRect = new RectF();

        public BackgroundDrawable(int i) {
            super(i);
            Paint paint2 = new Paint(1);
            this.paint = paint2;
            paint2.setColor(i);
        }

        @Keep
        public void setAlpha(int i) {
            if (PhotoViewer.this.parentActivity instanceof LaunchActivity) {
                this.allowDrawContent = !PhotoViewer.this.isVisible || i != 255;
                ((LaunchActivity) PhotoViewer.this.parentActivity).drawerLayoutContainer.setAllowDrawContent(this.allowDrawContent);
                if (PhotoViewer.this.parentAlert != null) {
                    if (!this.allowDrawContent) {
                        AndroidUtilities.runOnUIThread(new PhotoViewer$BackgroundDrawable$$ExternalSyntheticLambda0(this), 50);
                    } else {
                        PhotoViewer.this.parentAlert.setAllowDrawContent(true);
                    }
                }
            }
            super.setAlpha(i);
            this.paint.setAlpha(i);
        }

        /* access modifiers changed from: private */
        public /* synthetic */ void lambda$setAlpha$0() {
            if (PhotoViewer.this.parentAlert != null) {
                PhotoViewer.this.parentAlert.setAllowDrawContent(this.allowDrawContent);
            }
        }

        public void draw(Canvas canvas) {
            Runnable runnable;
            if (PhotoViewer.this.animationInProgress == 0 || AndroidUtilities.isTablet() || PhotoViewer.this.currentPlaceObject == null || PhotoViewer.this.currentPlaceObject.animatingImageView == null) {
                super.draw(canvas);
            } else {
                PhotoViewer.this.animatingImageView.getClippedVisibleRect(this.visibleRect);
                if (!this.visibleRect.isEmpty()) {
                    this.visibleRect.inset((float) AndroidUtilities.dp(1.0f), (float) AndroidUtilities.dp(1.0f));
                    Rect bounds = getBounds();
                    float f = (float) bounds.right;
                    float f2 = (float) bounds.bottom;
                    for (int i = 0; i < 4; i++) {
                        if (i == 0) {
                            RectF rectF = this.rect;
                            RectF rectF2 = this.visibleRect;
                            rectF.set(0.0f, rectF2.top, rectF2.left, rectF2.bottom);
                        } else if (i == 1) {
                            this.rect.set(0.0f, 0.0f, f, this.visibleRect.top);
                        } else if (i == 2) {
                            RectF rectF3 = this.rect;
                            RectF rectF4 = this.visibleRect;
                            rectF3.set(rectF4.right, rectF4.top, f, rectF4.bottom);
                        } else if (i == 3) {
                            this.rect.set(0.0f, this.visibleRect.bottom, f, f2);
                        }
                        canvas.drawRect(this.rect, this.paint);
                    }
                }
            }
            if (getAlpha() != 0 && (runnable = this.drawRunnable) != null) {
                AndroidUtilities.runOnUIThread(runnable);
                this.drawRunnable = null;
            }
        }
    }

    private static class SelectedPhotosListView extends RecyclerListView {
        private Drawable arrowDrawable;
        private Paint paint = new Paint(1);
        private RectF rect = new RectF();

        public SelectedPhotosListView(Context context) {
            super(context);
            setWillNotDraw(false);
            setClipToPadding(false);
            setTranslationY((float) (-AndroidUtilities.dp(10.0f)));
            AnonymousClass1 r1 = new DefaultItemAnimator() {
                /* access modifiers changed from: protected */
                public void onMoveAnimationUpdate(RecyclerView.ViewHolder viewHolder) {
                    SelectedPhotosListView.this.invalidate();
                }
            };
            setItemAnimator(r1);
            r1.setDelayAnimations(false);
            r1.setSupportsChangeAnimations(false);
            setPadding(AndroidUtilities.dp(12.0f), AndroidUtilities.dp(12.0f), AndroidUtilities.dp(12.0f), AndroidUtilities.dp(6.0f));
            this.paint.setColor(NUM);
            this.arrowDrawable = context.getResources().getDrawable(NUM).mutate();
        }

        public void onDraw(Canvas canvas) {
            super.onDraw(canvas);
            int childCount = getChildCount();
            if (childCount > 0) {
                int measuredWidth = getMeasuredWidth() - AndroidUtilities.dp(87.0f);
                Drawable drawable = this.arrowDrawable;
                drawable.setBounds(measuredWidth, 0, drawable.getIntrinsicWidth() + measuredWidth, AndroidUtilities.dp(6.0f));
                this.arrowDrawable.draw(canvas);
                int i = Integer.MAX_VALUE;
                int i2 = Integer.MIN_VALUE;
                for (int i3 = 0; i3 < childCount; i3++) {
                    View childAt = getChildAt(i3);
                    i = (int) Math.min((double) i, Math.floor((double) childAt.getX()));
                    i2 = (int) Math.max((double) i2, Math.ceil((double) (childAt.getX() + ((float) childAt.getMeasuredWidth()))));
                }
                if (i != Integer.MAX_VALUE && i2 != Integer.MIN_VALUE) {
                    this.rect.set((float) (i - AndroidUtilities.dp(6.0f)), (float) AndroidUtilities.dp(6.0f), (float) (i2 + AndroidUtilities.dp(6.0f)), (float) AndroidUtilities.dp(103.0f));
                    canvas.drawRoundRect(this.rect, (float) AndroidUtilities.dp(8.0f), (float) AndroidUtilities.dp(8.0f), this.paint);
                }
            }
        }
    }

    private static class CounterView extends View {
        private int currentCount = 0;
        private int height;
        private Paint paint;
        private RectF rect;
        private float rotation;
        private StaticLayout staticLayout;
        private TextPaint textPaint;
        private int width;

        public CounterView(Context context) {
            super(context);
            TextPaint textPaint2 = new TextPaint(1);
            this.textPaint = textPaint2;
            textPaint2.setTextSize((float) AndroidUtilities.dp(15.0f));
            this.textPaint.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
            this.textPaint.setColor(-1);
            Paint paint2 = new Paint(1);
            this.paint = paint2;
            paint2.setColor(-1);
            this.paint.setStrokeWidth((float) AndroidUtilities.dp(2.0f));
            this.paint.setStyle(Paint.Style.STROKE);
            this.paint.setStrokeJoin(Paint.Join.ROUND);
            this.rect = new RectF();
            setCount(0);
        }

        @Keep
        public void setScaleX(float f) {
            super.setScaleX(f);
            invalidate();
        }

        @Keep
        public void setRotationX(float f) {
            this.rotation = f;
            invalidate();
        }

        public float getRotationX() {
            return this.rotation;
        }

        public void setCount(int i) {
            StaticLayout staticLayout2 = new StaticLayout("" + Math.max(1, i), this.textPaint, AndroidUtilities.dp(100.0f), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
            this.staticLayout = staticLayout2;
            this.width = (int) Math.ceil((double) staticLayout2.getLineWidth(0));
            this.height = this.staticLayout.getLineBottom(0);
            AnimatorSet animatorSet = new AnimatorSet();
            if (i == 0) {
                Paint paint2 = this.paint;
                Property<Paint, Integer> property = AnimationProperties.PAINT_ALPHA;
                animatorSet.playTogether(new Animator[]{ObjectAnimator.ofFloat(this, View.SCALE_X, new float[]{0.0f}), ObjectAnimator.ofFloat(this, View.SCALE_Y, new float[]{0.0f}), ObjectAnimator.ofInt(paint2, property, new int[]{0}), ObjectAnimator.ofInt(this.textPaint, property, new int[]{0})});
                animatorSet.setInterpolator(new DecelerateInterpolator());
            } else {
                int i2 = this.currentCount;
                if (i2 == 0) {
                    Paint paint3 = this.paint;
                    Property<Paint, Integer> property2 = AnimationProperties.PAINT_ALPHA;
                    animatorSet.playTogether(new Animator[]{ObjectAnimator.ofFloat(this, View.SCALE_X, new float[]{0.0f, 1.0f}), ObjectAnimator.ofFloat(this, View.SCALE_Y, new float[]{0.0f, 1.0f}), ObjectAnimator.ofInt(paint3, property2, new int[]{0, 255}), ObjectAnimator.ofInt(this.textPaint, property2, new int[]{0, 255})});
                    animatorSet.setInterpolator(new DecelerateInterpolator());
                } else if (i < i2) {
                    animatorSet.playTogether(new Animator[]{ObjectAnimator.ofFloat(this, View.SCALE_X, new float[]{1.1f, 1.0f}), ObjectAnimator.ofFloat(this, View.SCALE_Y, new float[]{1.1f, 1.0f})});
                    animatorSet.setInterpolator(new OvershootInterpolator());
                } else {
                    animatorSet.playTogether(new Animator[]{ObjectAnimator.ofFloat(this, View.SCALE_X, new float[]{0.9f, 1.0f}), ObjectAnimator.ofFloat(this, View.SCALE_Y, new float[]{0.9f, 1.0f})});
                    animatorSet.setInterpolator(new OvershootInterpolator());
                }
            }
            animatorSet.setDuration(180);
            animatorSet.start();
            requestLayout();
            this.currentCount = i;
        }

        /* access modifiers changed from: protected */
        public void onMeasure(int i, int i2) {
            super.onMeasure(View.MeasureSpec.makeMeasureSpec(Math.max(this.width + AndroidUtilities.dp(20.0f), AndroidUtilities.dp(30.0f)), NUM), View.MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(40.0f), NUM));
        }

        /* access modifiers changed from: protected */
        public void onDraw(Canvas canvas) {
            int measuredHeight = getMeasuredHeight() / 2;
            this.paint.setAlpha(255);
            this.rect.set((float) AndroidUtilities.dp(1.0f), (float) (measuredHeight - AndroidUtilities.dp(14.0f)), (float) (getMeasuredWidth() - AndroidUtilities.dp(1.0f)), (float) (measuredHeight + AndroidUtilities.dp(14.0f)));
            canvas.drawRoundRect(this.rect, (float) AndroidUtilities.dp(15.0f), (float) AndroidUtilities.dp(15.0f), this.paint);
            if (this.staticLayout != null) {
                this.textPaint.setAlpha((int) ((1.0f - this.rotation) * 255.0f));
                canvas.save();
                canvas.translate((float) ((getMeasuredWidth() - this.width) / 2), ((float) ((getMeasuredHeight() - this.height) / 2)) + AndroidUtilities.dpf2(0.2f) + (this.rotation * ((float) AndroidUtilities.dp(5.0f))));
                this.staticLayout.draw(canvas);
                canvas.restore();
                this.paint.setAlpha((int) (this.rotation * 255.0f));
                int centerX = (int) this.rect.centerX();
                int centerY = (int) (((float) ((int) this.rect.centerY())) - (((float) AndroidUtilities.dp(5.0f)) * (1.0f - this.rotation)));
                Canvas canvas2 = canvas;
                canvas2.drawLine((float) (AndroidUtilities.dp(5.0f) + centerX), (float) (centerY - AndroidUtilities.dp(5.0f)), (float) (centerX - AndroidUtilities.dp(5.0f)), (float) (AndroidUtilities.dp(5.0f) + centerY), this.paint);
                canvas2.drawLine((float) (centerX - AndroidUtilities.dp(5.0f)), (float) (centerY - AndroidUtilities.dp(5.0f)), (float) (centerX + AndroidUtilities.dp(5.0f)), (float) (centerY + AndroidUtilities.dp(5.0f)), this.paint);
            }
        }
    }

    private class PhotoProgressView {
        private float[] alphas = new float[3];
        /* access modifiers changed from: private */
        public float[] animAlphas = new float[3];
        private float animatedAlphaValue = 1.0f;
        private float animatedProgressValue = 0.0f;
        private float animationProgressStart = 0.0f;
        /* access modifiers changed from: private */
        public int backgroundState = -1;
        private float currentProgress = 0.0f;
        private long currentProgressTime = 0;
        private long lastUpdateTime = 0;
        private View parent;
        private final CombinedDrawable playDrawable;
        private final PlayPauseDrawable playPauseDrawable;
        /* access modifiers changed from: private */
        public int previousBackgroundState = -2;
        private RectF progressRect = new RectF();
        private float radOffset = 0.0f;
        private float scale = 1.0f;
        /* access modifiers changed from: private */
        public int size = AndroidUtilities.dp(64.0f);
        private boolean visible;

        /* access modifiers changed from: protected */
        public void onBackgroundStateUpdated(int i) {
            throw null;
        }

        /* access modifiers changed from: protected */
        public void onVisibilityChanged(boolean z) {
            throw null;
        }

        public PhotoProgressView(View view) {
            if (PhotoViewer.decelerateInterpolator == null) {
                DecelerateInterpolator unused = PhotoViewer.decelerateInterpolator = new DecelerateInterpolator(1.5f);
                Paint unused2 = PhotoViewer.progressPaint = new Paint(1);
                PhotoViewer.progressPaint.setStyle(Paint.Style.STROKE);
                PhotoViewer.progressPaint.setStrokeCap(Paint.Cap.ROUND);
                PhotoViewer.progressPaint.setStrokeWidth((float) AndroidUtilities.dp(3.0f));
                PhotoViewer.progressPaint.setColor(-1);
            }
            this.parent = view;
            resetAlphas();
            PlayPauseDrawable playPauseDrawable2 = new PlayPauseDrawable(28);
            this.playPauseDrawable = playPauseDrawable2;
            playPauseDrawable2.setDuration(200);
            this.playDrawable = new CombinedDrawable(ContextCompat.getDrawable(PhotoViewer.this.parentActivity, NUM).mutate(), playPauseDrawable2);
        }

        private void updateAnimation(boolean z) {
            boolean z2;
            long currentTimeMillis = System.currentTimeMillis();
            long j = currentTimeMillis - this.lastUpdateTime;
            if (j > 18) {
                j = 18;
            }
            this.lastUpdateTime = currentTimeMillis;
            int i = 0;
            if (z) {
                if (this.animatedProgressValue == 1.0f && this.currentProgress == 1.0f) {
                    z2 = false;
                } else {
                    this.radOffset += ((float) (360 * j)) / 3000.0f;
                    float f = this.currentProgress - this.animationProgressStart;
                    if (Math.abs(f) > 0.0f) {
                        long j2 = this.currentProgressTime + j;
                        this.currentProgressTime = j2;
                        if (j2 >= 300) {
                            float f2 = this.currentProgress;
                            this.animatedProgressValue = f2;
                            this.animationProgressStart = f2;
                            this.currentProgressTime = 0;
                        } else {
                            this.animatedProgressValue = this.animationProgressStart + (f * PhotoViewer.decelerateInterpolator.getInterpolation(((float) this.currentProgressTime) / 300.0f));
                        }
                    }
                    z2 = true;
                }
                float f3 = this.animatedAlphaValue;
                if (f3 > 0.0f && this.previousBackgroundState != -2) {
                    float f4 = f3 - (((float) j) / 200.0f);
                    this.animatedAlphaValue = f4;
                    if (f4 <= 0.0f) {
                        this.animatedAlphaValue = 0.0f;
                        this.previousBackgroundState = -2;
                    }
                    z2 = true;
                }
            } else {
                z2 = false;
            }
            while (true) {
                float[] fArr = this.alphas;
                if (i >= fArr.length) {
                    break;
                }
                float f5 = fArr[i];
                float[] fArr2 = this.animAlphas;
                if (f5 > fArr2[i]) {
                    fArr2[i] = Math.min(1.0f, fArr2[i] + (((float) j) / 200.0f));
                } else if (fArr[i] < fArr2[i]) {
                    fArr2[i] = Math.max(0.0f, fArr2[i] - (((float) j) / 200.0f));
                } else {
                    i++;
                }
                z2 = true;
                i++;
            }
            if (z2) {
                this.parent.postInvalidateOnAnimation();
            }
        }

        public void setProgress(float f, boolean z) {
            if (!z) {
                this.animatedProgressValue = f;
                this.animationProgressStart = f;
            } else {
                this.animationProgressStart = this.animatedProgressValue;
            }
            this.currentProgress = f;
            this.currentProgressTime = 0;
            this.parent.invalidate();
        }

        public void setBackgroundState(int i, boolean z, boolean z2) {
            int i2;
            int i3 = this.backgroundState;
            if (i3 != i) {
                PlayPauseDrawable playPauseDrawable2 = this.playPauseDrawable;
                if (playPauseDrawable2 != null) {
                    boolean z3 = z2 && (i3 == 3 || i3 == 4);
                    if (i == 3) {
                        playPauseDrawable2.setPause(false, z3);
                    } else if (i == 4) {
                        playPauseDrawable2.setPause(true, z3);
                    }
                    this.playPauseDrawable.setParent(this.parent);
                    this.playPauseDrawable.invalidateSelf();
                }
                this.lastUpdateTime = System.currentTimeMillis();
                if (!z || (i2 = this.backgroundState) == i) {
                    this.previousBackgroundState = -2;
                } else {
                    this.previousBackgroundState = i2;
                    this.animatedAlphaValue = 1.0f;
                }
                this.backgroundState = i;
                onBackgroundStateUpdated(i);
                this.parent.invalidate();
            }
        }

        public void setAlpha(float f) {
            setIndexedAlpha(0, f, false);
        }

        public void setScale(float f) {
            this.scale = f;
        }

        public void setIndexedAlpha(int i, float f, boolean z) {
            float[] fArr = this.alphas;
            if (fArr[i] != f) {
                fArr[i] = f;
                if (!z) {
                    this.animAlphas[i] = f;
                }
                checkVisibility();
                this.parent.invalidate();
            }
        }

        public void resetAlphas() {
            int i = 0;
            while (true) {
                float[] fArr = this.alphas;
                if (i < fArr.length) {
                    this.animAlphas[i] = 1.0f;
                    fArr[i] = 1.0f;
                    i++;
                } else {
                    checkVisibility();
                    return;
                }
            }
        }

        private float calculateAlpha() {
            float f;
            float f2 = 1.0f;
            int i = 0;
            while (true) {
                float[] fArr = this.animAlphas;
                if (i >= fArr.length) {
                    return f2;
                }
                if (i == 2) {
                    f = AndroidUtilities.accelerateInterpolator.getInterpolation(fArr[i]);
                } else {
                    f = fArr[i];
                }
                f2 *= f;
                i++;
            }
        }

        private void checkVisibility() {
            boolean z = false;
            int i = 0;
            while (true) {
                float[] fArr = this.alphas;
                if (i >= fArr.length) {
                    z = true;
                    break;
                } else if (fArr[i] != 1.0f) {
                    break;
                } else {
                    i++;
                }
            }
            if (z != this.visible) {
                this.visible = z;
                onVisibilityChanged(z);
            }
        }

        public boolean isVisible() {
            return this.visible;
        }

        public int getX() {
            return (PhotoViewer.this.containerView.getWidth() - ((int) (((float) this.size) * this.scale))) / 2;
        }

        public int getY() {
            int access$6700 = (int) (((float) (((AndroidUtilities.displaySize.y + (PhotoViewer.this.isStatusBarVisible() ? AndroidUtilities.statusBarHeight : 0)) - ((int) (((float) this.size) * this.scale))) / 2)) + PhotoViewer.this.currentPanTranslationY);
            return PhotoViewer.this.sendPhotoType == 1 ? access$6700 - AndroidUtilities.dp(38.0f) : access$6700;
        }

        public void onDraw(Canvas canvas) {
            int i;
            Drawable drawable;
            Drawable drawable2;
            int i2 = (int) (((float) this.size) * this.scale);
            int x = getX();
            int y = getY();
            float calculateAlpha = calculateAlpha();
            int i3 = this.previousBackgroundState;
            if (i3 >= 0 && i3 < PhotoViewer.progressDrawables.length + 2) {
                if (this.previousBackgroundState < PhotoViewer.progressDrawables.length) {
                    drawable2 = PhotoViewer.progressDrawables[this.previousBackgroundState];
                } else {
                    drawable2 = this.playDrawable;
                }
                if (drawable2 != null) {
                    drawable2.setAlpha((int) (this.animatedAlphaValue * 255.0f * calculateAlpha));
                    drawable2.setBounds(x, y, x + i2, y + i2);
                    drawable2.draw(canvas);
                }
            }
            int i4 = this.backgroundState;
            if (i4 >= 0 && i4 < PhotoViewer.progressDrawables.length + 2) {
                if (this.backgroundState < PhotoViewer.progressDrawables.length) {
                    drawable = PhotoViewer.progressDrawables[this.backgroundState];
                } else {
                    drawable = this.playDrawable;
                }
                if (drawable != null) {
                    if (this.previousBackgroundState != -2) {
                        drawable.setAlpha((int) ((1.0f - this.animatedAlphaValue) * 255.0f * calculateAlpha));
                    } else {
                        drawable.setAlpha((int) (calculateAlpha * 255.0f));
                    }
                    drawable.setBounds(x, y, x + i2, y + i2);
                    drawable.draw(canvas);
                }
            }
            int i5 = this.backgroundState;
            if (i5 == 0 || i5 == 1 || (i = this.previousBackgroundState) == 0 || i == 1) {
                int dp = AndroidUtilities.dp(4.0f);
                if (this.previousBackgroundState != -2) {
                    PhotoViewer.progressPaint.setAlpha((int) (this.animatedAlphaValue * 255.0f * calculateAlpha));
                } else {
                    PhotoViewer.progressPaint.setAlpha((int) (calculateAlpha * 255.0f));
                }
                this.progressRect.set((float) (x + dp), (float) (y + dp), (float) ((x + i2) - dp), (float) ((y + i2) - dp));
                canvas.drawArc(this.progressRect, this.radOffset - 0.049804688f, Math.max(4.0f, this.animatedProgressValue * 360.0f), false, PhotoViewer.progressPaint);
                updateAnimation(true);
                return;
            }
            updateAnimation(false);
        }
    }

    private class FrameLayoutDrawer extends SizeNotifierFrameLayoutPhoto {
        AdjustPanLayoutHelper adjustPanLayoutHelper = new AdjustPanLayoutHelper(this, false) {
            /* access modifiers changed from: protected */
            public void onPanTranslationUpdate(float f, float f2, boolean z) {
                float unused = PhotoViewer.this.currentPanTranslationY = f;
                if (PhotoViewer.this.currentEditMode != 3) {
                    PhotoViewer.this.actionBar.setTranslationY(f);
                }
                if (PhotoViewer.this.miniProgressView != null) {
                    PhotoViewer.this.miniProgressView.setTranslationY(f);
                }
                if (PhotoViewer.this.progressView != null) {
                    PhotoViewer.this.progressView.setTranslationY(f);
                }
                if (PhotoViewer.this.checkImageView != null) {
                    PhotoViewer.this.checkImageView.setTranslationY(f);
                }
                if (PhotoViewer.this.photosCounterView != null) {
                    PhotoViewer.this.photosCounterView.setTranslationY(f);
                }
                if (PhotoViewer.this.selectedPhotosListView != null) {
                    PhotoViewer.this.selectedPhotosListView.setTranslationY(f);
                }
                if (PhotoViewer.this.aspectRatioFrameLayout != null) {
                    PhotoViewer.this.aspectRatioFrameLayout.setTranslationY(f);
                }
                if (PhotoViewer.this.textureImageView != null) {
                    PhotoViewer.this.textureImageView.setTranslationY(f);
                }
                if (PhotoViewer.this.photoCropView != null) {
                    PhotoViewer.this.photoCropView.setTranslationY(f);
                }
                if (PhotoViewer.this.photoFilterView != null) {
                    PhotoViewer.this.photoFilterView.setTranslationY(f);
                }
                if (PhotoViewer.this.pickerView != null) {
                    PhotoViewer.this.pickerView.setTranslationY(f);
                }
                if (PhotoViewer.this.pickerViewSendButton != null) {
                    PhotoViewer.this.pickerViewSendButton.setTranslationY(f);
                }
                float f3 = 0.0f;
                if (PhotoViewer.this.currentEditMode == 3) {
                    if (PhotoViewer.this.captionEditText != null) {
                        PhotoViewer.this.captionEditText.setTranslationY(f);
                    }
                    if (PhotoViewer.this.photoPaintView != null) {
                        PhotoViewer.this.photoPaintView.setTranslationY(0.0f);
                        PhotoViewer.this.photoPaintView.getColorPicker().setTranslationY(f);
                        PhotoViewer.this.photoPaintView.getToolsView().setTranslationY(f);
                        PhotoViewer.this.photoPaintView.getColorPickerBackground().setTranslationY(f);
                        PhotoViewer.this.photoPaintView.getCurtainView().setTranslationY(f);
                    }
                } else {
                    if (PhotoViewer.this.photoPaintView != null) {
                        PhotoViewer.this.photoPaintView.setTranslationY(f);
                    }
                    if (PhotoViewer.this.captionEditText != null) {
                        if (f2 >= 0.5f) {
                            f3 = (f2 - 0.5f) / 0.5f;
                        }
                        PhotoViewer.this.captionEditText.setAlpha(f3);
                        PhotoViewerCaptionEnterView access$7700 = PhotoViewer.this.captionEditText;
                        float f4 = this.keyboardSize;
                        access$7700.setTranslationY((f - f4) + (((float) AndroidUtilities.dp(f4 / 2.0f)) * (1.0f - f2)));
                    }
                }
                if (PhotoViewer.this.muteItem != null) {
                    PhotoViewer.this.muteItem.setTranslationY(f);
                }
                if (PhotoViewer.this.cameraItem != null) {
                    PhotoViewer.this.cameraItem.setTranslationY(f);
                }
                if (PhotoViewer.this.captionLimitView != null) {
                    PhotoViewer.this.captionLimitView.setTranslationY(f);
                }
                FrameLayoutDrawer.this.invalidate();
            }

            /* access modifiers changed from: protected */
            public void onTransitionStart(boolean z, int i) {
                int i2;
                String str;
                PhotoViewer.this.navigationBar.setVisibility(4);
                PhotoViewer.this.animateNavBarColorTo(-16777216);
                if (PhotoViewer.this.captionEditText.getTag() == null || !z) {
                    PhotoViewer.this.checkImageView.animate().alpha(1.0f).setDuration(220).start();
                    PhotoViewer.this.photosCounterView.animate().alpha(1.0f).setDuration(220).start();
                    if (PhotoViewer.this.lastTitle != null && !PhotoViewer.this.isCurrentVideo) {
                        PhotoViewer.this.actionBar.setTitleAnimated(PhotoViewer.this.lastTitle, false, 220);
                        String unused = PhotoViewer.this.lastTitle = null;
                        return;
                    }
                    return;
                }
                if (PhotoViewer.this.isCurrentVideo) {
                    if (PhotoViewer.this.muteVideo) {
                        i2 = NUM;
                        str = "GifCaption";
                    } else {
                        i2 = NUM;
                        str = "VideoCaption";
                    }
                    PhotoViewer.this.actionBar.setTitleAnimated(LocaleController.getString(str, i2), true, 220);
                } else {
                    PhotoViewer.this.actionBar.setTitleAnimated(LocaleController.getString("PhotoCaption", NUM), true, 220);
                }
                PhotoViewer.this.captionEditText.setAlpha(0.0f);
                PhotoViewer.this.checkImageView.animate().alpha(0.0f).setDuration(220).start();
                PhotoViewer.this.photosCounterView.animate().alpha(0.0f).setDuration(220).start();
                PhotoViewer.this.selectedPhotosListView.animate().alpha(0.0f).translationY((float) (-AndroidUtilities.dp(10.0f))).setDuration(220).start();
            }

            /* access modifiers changed from: protected */
            public void onTransitionEnd() {
                super.onTransitionEnd();
                PhotoViewer.this.navigationBar.setVisibility(PhotoViewer.this.currentEditMode != 2 ? 0 : 4);
                if (PhotoViewer.this.captionEditText.getTag() == null) {
                    PhotoViewer.this.captionEditText.setVisibility(8);
                }
                PhotoViewer.this.captionEditText.setTranslationY(0.0f);
            }

            /* access modifiers changed from: protected */
            public boolean heightAnimationEnabled() {
                return !PhotoViewer.this.captionEditText.isPopupShowing() && PhotoViewer.this.keyboardAnimationEnabled;
            }
        };
        private boolean captionAbove;
        private boolean ignoreLayout;
        private Paint paint = new Paint();

        public FrameLayoutDrawer(Context context) {
            super(context, false);
            setWillNotDraw(false);
            this.paint.setColor(NUM);
        }

        /* access modifiers changed from: protected */
        /* JADX WARNING: Removed duplicated region for block: B:92:0x029c  */
        /* JADX WARNING: Removed duplicated region for block: B:93:0x029f  */
        /* Code decompiled incorrectly, please refer to instructions dump. */
        public void onMeasure(int r19, int r20) {
            /*
                r18 = this;
                r6 = r18
                int r7 = android.view.View.MeasureSpec.getSize(r19)
                int r0 = android.view.View.MeasureSpec.getSize(r20)
                android.view.ViewGroup$LayoutParams r1 = r18.getLayoutParams()
                int r1 = r1.height
                if (r1 <= 0) goto L_0x0018
                android.view.ViewGroup$LayoutParams r0 = r18.getLayoutParams()
                int r0 = r0.height
            L_0x0018:
                r8 = r0
                r6.setMeasuredDimension(r7, r8)
                org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                boolean r0 = r0.isCurrentVideo
                r9 = 1
                r10 = 0
                if (r0 != 0) goto L_0x0076
                r6.ignoreLayout = r9
                org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                boolean r0 = r0.needCaptionLayout
                if (r0 == 0) goto L_0x0057
                android.graphics.Point r0 = org.telegram.messenger.AndroidUtilities.displaySize
                int r1 = r0.x
                int r0 = r0.y
                if (r1 <= r0) goto L_0x003a
                r0 = 5
                goto L_0x003c
            L_0x003a:
                r0 = 10
            L_0x003c:
                org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.PhotoViewer$CaptionTextViewSwitcher r1 = r1.captionTextViewSwitcher
                android.widget.TextView r1 = r1.getCurrentView()
                r1.setMaxLines(r0)
                org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.PhotoViewer$CaptionTextViewSwitcher r1 = r1.captionTextViewSwitcher
                android.widget.TextView r1 = r1.getNextView()
                r1.setMaxLines(r0)
                goto L_0x0074
            L_0x0057:
                org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.PhotoViewer$CaptionTextViewSwitcher r0 = r0.captionTextViewSwitcher
                android.widget.TextView r0 = r0.getCurrentView()
                r1 = 2147483647(0x7fffffff, float:NaN)
                r0.setMaxLines(r1)
                org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.PhotoViewer$CaptionTextViewSwitcher r0 = r0.captionTextViewSwitcher
                android.widget.TextView r0 = r0.getNextView()
                r0.setMaxLines(r1)
            L_0x0074:
                r6.ignoreLayout = r10
            L_0x0076:
                org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.Components.PhotoViewerCaptionEnterView r1 = r0.captionEditText
                r3 = 0
                r5 = 0
                r0 = r18
                r2 = r19
                r4 = r20
                r0.measureChildWithMargins(r1, r2, r3, r4, r5)
                org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.Components.PhotoViewerCaptionEnterView r0 = r0.captionEditText
                int r11 = r0.getMeasuredHeight()
                org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                android.widget.FrameLayout r0 = r0.bottomLayout
                int r0 = r0.getVisibility()
                r12 = 8
                if (r0 == r12) goto L_0x00a7
                r0 = 1111490560(0x42400000, float:48.0)
                int r0 = org.telegram.messenger.AndroidUtilities.dp(r0)
                r13 = r0
                goto L_0x00a8
            L_0x00a7:
                r13 = 0
            L_0x00a8:
                org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.Components.GroupedPhotosListView r0 = r0.groupedPhotosListView
                if (r0 == 0) goto L_0x011f
                org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.Components.GroupedPhotosListView r0 = r0.groupedPhotosListView
                int r0 = r0.getVisibility()
                if (r0 == r12) goto L_0x011f
                org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.Components.GroupedPhotosListView r0 = r0.groupedPhotosListView
                android.view.ViewGroup$LayoutParams r0 = r0.getLayoutParams()
                android.view.ViewGroup$MarginLayoutParams r0 = (android.view.ViewGroup.MarginLayoutParams) r0
                r0.bottomMargin = r13
                org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.Components.GroupedPhotosListView r1 = r0.groupedPhotosListView
                r3 = 0
                r5 = 0
                r0 = r18
                r2 = r19
                r4 = r20
                r0.measureChildWithMargins(r1, r2, r3, r4, r5)
                org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.Components.GroupedPhotosListView r0 = r0.groupedPhotosListView
                int r0 = r0.getMeasuredHeight()
                r6.ignoreLayout = r9
                boolean r1 = org.telegram.messenger.AndroidUtilities.isTablet()
                if (r1 != 0) goto L_0x0106
                if (r8 >= r7) goto L_0x0106
                org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.Components.GroupedPhotosListView r1 = r1.groupedPhotosListView
                int r1 = r1.getVisibility()
                r2 = 4
                if (r1 == r2) goto L_0x011b
                org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.Components.GroupedPhotosListView r1 = r1.groupedPhotosListView
                r1.setVisibility(r2)
                goto L_0x011b
            L_0x0106:
                org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.Components.GroupedPhotosListView r1 = r1.groupedPhotosListView
                int r1 = r1.getVisibility()
                if (r1 == 0) goto L_0x011b
                org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.Components.GroupedPhotosListView r1 = r1.groupedPhotosListView
                r1.setVisibility(r10)
            L_0x011b:
                r6.ignoreLayout = r10
                r14 = r0
                goto L_0x0120
            L_0x011f:
                r14 = 0
            L_0x0120:
                org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.PhotoViewer$VideoPlayerControlFrameLayout r0 = r0.videoPlayerControlFrameLayout
                if (r0 == 0) goto L_0x013a
                org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.PhotoViewer$VideoPlayerControlFrameLayout r0 = r0.videoPlayerControlFrameLayout
                int unused = r0.parentWidth = r7
                org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.PhotoViewer$VideoPlayerControlFrameLayout r0 = r0.videoPlayerControlFrameLayout
                int unused = r0.parentHeight = r8
            L_0x013a:
                int r0 = r18.getPaddingRight()
                int r1 = r18.getPaddingLeft()
                int r0 = r0 + r1
                int r7 = r7 - r0
                int r0 = r18.getPaddingBottom()
                int r8 = r8 - r0
                int r15 = r18.getChildCount()
                r5 = 0
            L_0x014e:
                if (r5 >= r15) goto L_0x02d9
                android.view.View r1 = r6.getChildAt(r5)
                int r0 = r1.getVisibility()
                if (r0 == r12) goto L_0x02d1
                org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.Components.PhotoViewerCaptionEnterView r0 = r0.captionEditText
                if (r1 == r0) goto L_0x02d1
                org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.Components.GroupedPhotosListView r0 = r0.groupedPhotosListView
                if (r1 != r0) goto L_0x016c
                goto L_0x02d1
            L_0x016c:
                org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                com.google.android.exoplayer2.ui.AspectRatioFrameLayout r0 = r0.aspectRatioFrameLayout
                r2 = 1073741824(0x40000000, float:2.0)
                if (r1 != r0) goto L_0x0192
                android.graphics.Point r0 = org.telegram.messenger.AndroidUtilities.displaySize
                int r0 = r0.y
                org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                boolean r3 = r3.isStatusBarVisible()
                if (r3 == 0) goto L_0x0185
                int r3 = org.telegram.messenger.AndroidUtilities.statusBarHeight
                goto L_0x0186
            L_0x0185:
                r3 = 0
            L_0x0186:
                int r0 = r0 + r3
                int r0 = android.view.View.MeasureSpec.makeMeasureSpec(r0, r2)
                r4 = r19
                r1.measure(r4, r0)
                goto L_0x02d1
            L_0x0192:
                r4 = r19
                org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.Components.PaintingOverlay r0 = r0.paintingOverlay
                if (r1 != r0) goto L_0x01f2
                org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                com.google.android.exoplayer2.ui.AspectRatioFrameLayout r0 = r0.aspectRatioFrameLayout
                if (r0 == 0) goto L_0x01c5
                org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                com.google.android.exoplayer2.ui.AspectRatioFrameLayout r0 = r0.aspectRatioFrameLayout
                int r0 = r0.getVisibility()
                if (r0 != 0) goto L_0x01c5
                org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                android.view.TextureView r0 = r0.videoTextureView
                int r0 = r0.getMeasuredWidth()
                org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                android.view.TextureView r1 = r1.videoTextureView
                int r1 = r1.getMeasuredHeight()
                goto L_0x01d9
            L_0x01c5:
                org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                org.telegram.messenger.ImageReceiver r0 = r0.centerImage
                int r0 = r0.getBitmapWidth()
                org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                org.telegram.messenger.ImageReceiver r1 = r1.centerImage
                int r1 = r1.getBitmapHeight()
            L_0x01d9:
                if (r0 == 0) goto L_0x01dd
                if (r1 != 0) goto L_0x01df
            L_0x01dd:
                r0 = r7
                r1 = r8
            L_0x01df:
                org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.Components.PaintingOverlay r3 = r3.paintingOverlay
                int r0 = android.view.View.MeasureSpec.makeMeasureSpec(r0, r2)
                int r1 = android.view.View.MeasureSpec.makeMeasureSpec(r1, r2)
                r3.measure(r0, r1)
                goto L_0x02d1
            L_0x01f2:
                org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.Components.PhotoViewerCaptionEnterView r0 = r0.captionEditText
                boolean r0 = r0.isPopupView(r1)
                if (r0 == 0) goto L_0x0261
                org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                boolean r0 = r0.inBubbleMode
                if (r0 == 0) goto L_0x0215
                int r0 = android.view.View.MeasureSpec.makeMeasureSpec(r7, r2)
                int r3 = r8 - r11
                int r2 = android.view.View.MeasureSpec.makeMeasureSpec(r3, r2)
                r1.measure(r0, r2)
                goto L_0x02d1
            L_0x0215:
                boolean r0 = org.telegram.messenger.AndroidUtilities.isInMultiwindow
                if (r0 == 0) goto L_0x024e
                boolean r0 = org.telegram.messenger.AndroidUtilities.isTablet()
                if (r0 == 0) goto L_0x023c
                int r0 = android.view.View.MeasureSpec.makeMeasureSpec(r7, r2)
                r3 = 1134559232(0x43a00000, float:320.0)
                int r3 = org.telegram.messenger.AndroidUtilities.dp(r3)
                int r16 = r8 - r11
                int r17 = org.telegram.messenger.AndroidUtilities.statusBarHeight
                int r12 = r16 - r17
                int r3 = java.lang.Math.min(r3, r12)
                int r2 = android.view.View.MeasureSpec.makeMeasureSpec(r3, r2)
                r1.measure(r0, r2)
                goto L_0x02d1
            L_0x023c:
                int r0 = android.view.View.MeasureSpec.makeMeasureSpec(r7, r2)
                int r3 = r8 - r11
                int r12 = org.telegram.messenger.AndroidUtilities.statusBarHeight
                int r3 = r3 - r12
                int r2 = android.view.View.MeasureSpec.makeMeasureSpec(r3, r2)
                r1.measure(r0, r2)
                goto L_0x02d1
            L_0x024e:
                int r0 = android.view.View.MeasureSpec.makeMeasureSpec(r7, r2)
                android.view.ViewGroup$LayoutParams r3 = r1.getLayoutParams()
                int r3 = r3.height
                int r2 = android.view.View.MeasureSpec.makeMeasureSpec(r3, r2)
                r1.measure(r0, r2)
                goto L_0x02d1
            L_0x0261:
                org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.PhotoViewer$CaptionScrollView r0 = r0.captionScrollView
                if (r1 != r0) goto L_0x02c2
                org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                boolean r0 = r0.dontChangeCaptionPosition
                if (r0 == 0) goto L_0x0278
                boolean r0 = r6.captionAbove
                if (r0 == 0) goto L_0x0293
                int r0 = r13 + r14
                goto L_0x0294
            L_0x0278:
                org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.Components.GroupedPhotosListView r0 = r0.groupedPhotosListView
                boolean r0 = r0.hasPhotos()
                if (r0 == 0) goto L_0x0291
                boolean r0 = org.telegram.messenger.AndroidUtilities.isTablet()
                if (r0 != 0) goto L_0x028c
                if (r8 <= r7) goto L_0x0291
            L_0x028c:
                int r0 = r13 + r14
                r6.captionAbove = r9
                goto L_0x0294
            L_0x0291:
                r6.captionAbove = r10
            L_0x0293:
                r0 = r13
            L_0x0294:
                org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                boolean r3 = r3.isStatusBarVisible()
                if (r3 == 0) goto L_0x029f
                int r3 = org.telegram.messenger.AndroidUtilities.statusBarHeight
                goto L_0x02a0
            L_0x029f:
                r3 = 0
            L_0x02a0:
                int r12 = org.telegram.ui.ActionBar.ActionBar.getCurrentActionBarHeight()
                int r3 = r3 + r12
                int r3 = r8 - r3
                int r3 = r3 - r0
                org.telegram.ui.PhotoViewer r12 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.PhotoViewer$CaptionScrollView r12 = r12.captionScrollView
                android.view.ViewGroup$LayoutParams r12 = r12.getLayoutParams()
                android.view.ViewGroup$MarginLayoutParams r12 = (android.view.ViewGroup.MarginLayoutParams) r12
                r12.bottomMargin = r0
                int r0 = android.view.View.MeasureSpec.makeMeasureSpec(r7, r2)
                int r2 = android.view.View.MeasureSpec.makeMeasureSpec(r3, r2)
                r1.measure(r0, r2)
                goto L_0x02d1
            L_0x02c2:
                r3 = 0
                r12 = 0
                r0 = r18
                r2 = r19
                r4 = r20
                r16 = r5
                r5 = r12
                r0.measureChildWithMargins(r1, r2, r3, r4, r5)
                goto L_0x02d3
            L_0x02d1:
                r16 = r5
            L_0x02d3:
                int r5 = r16 + 1
                r12 = 8
                goto L_0x014e
            L_0x02d9:
                return
            */
            throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.FrameLayoutDrawer.onMeasure(int, int):void");
        }

        /* access modifiers changed from: protected */
        /* JADX WARNING: Removed duplicated region for block: B:25:0x008d  */
        /* JADX WARNING: Removed duplicated region for block: B:29:0x009b  */
        /* JADX WARNING: Removed duplicated region for block: B:33:0x00af  */
        /* JADX WARNING: Removed duplicated region for block: B:35:0x00bc  */
        /* Code decompiled incorrectly, please refer to instructions dump. */
        public void onLayout(boolean r16, int r17, int r18, int r19, int r20) {
            /*
                r15 = this;
                r0 = r15
                int r1 = r15.getChildCount()
                int r2 = r15.measureKeyboardHeight()
                org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                int unused = r3.keyboardSize = r2
                r3 = 1101004800(0x41a00000, float:20.0)
                int r3 = org.telegram.messenger.AndroidUtilities.dp(r3)
                r4 = 0
                if (r2 > r3) goto L_0x0026
                boolean r2 = org.telegram.messenger.AndroidUtilities.isInMultiwindow
                if (r2 != 0) goto L_0x0026
                org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.Components.PhotoViewerCaptionEnterView r2 = r2.captionEditText
                int r2 = r2.getEmojiPadding()
                goto L_0x0027
            L_0x0026:
                r2 = 0
            L_0x0027:
                if (r4 >= r1) goto L_0x01af
                android.view.View r3 = r15.getChildAt(r4)
                int r5 = r3.getVisibility()
                r6 = 8
                if (r5 != r6) goto L_0x0037
                goto L_0x01ab
            L_0x0037:
                org.telegram.ui.PhotoViewer r5 = org.telegram.ui.PhotoViewer.this
                com.google.android.exoplayer2.ui.AspectRatioFrameLayout r5 = r5.aspectRatioFrameLayout
                if (r3 != r5) goto L_0x0046
                r5 = r17
                r6 = r19
                r7 = r20
                goto L_0x0058
            L_0x0046:
                int r5 = r15.getPaddingLeft()
                int r5 = r17 + r5
                int r6 = r15.getPaddingRight()
                int r6 = r19 - r6
                int r7 = r15.getPaddingBottom()
                int r7 = r20 - r7
            L_0x0058:
                android.view.ViewGroup$LayoutParams r8 = r3.getLayoutParams()
                android.widget.FrameLayout$LayoutParams r8 = (android.widget.FrameLayout.LayoutParams) r8
                int r9 = r3.getMeasuredWidth()
                int r10 = r3.getMeasuredHeight()
                int r11 = r8.gravity
                r12 = -1
                if (r11 != r12) goto L_0x006d
                r11 = 51
            L_0x006d:
                r12 = r11 & 7
                r11 = r11 & 112(0x70, float:1.57E-43)
                r13 = 5
                r14 = 1
                if (r12 == r14) goto L_0x007f
                if (r12 == r13) goto L_0x007a
                int r6 = r8.leftMargin
                goto L_0x0089
            L_0x007a:
                int r6 = r6 - r5
                int r6 = r6 - r9
                int r12 = r8.rightMargin
                goto L_0x0088
            L_0x007f:
                int r6 = r6 - r5
                int r6 = r6 - r9
                int r6 = r6 / 2
                int r12 = r8.leftMargin
                int r6 = r6 + r12
                int r12 = r8.rightMargin
            L_0x0088:
                int r6 = r6 - r12
            L_0x0089:
                r12 = 16
                if (r11 == r12) goto L_0x009b
                r12 = 80
                if (r11 == r12) goto L_0x0094
                int r7 = r8.topMargin
                goto L_0x00a7
            L_0x0094:
                int r7 = r7 - r2
                int r7 = r7 - r18
                int r7 = r7 - r10
                int r8 = r8.bottomMargin
                goto L_0x00a6
            L_0x009b:
                int r7 = r7 - r2
                int r7 = r7 - r18
                int r7 = r7 - r10
                int r7 = r7 / 2
                int r11 = r8.topMargin
                int r7 = r7 + r11
                int r8 = r8.bottomMargin
            L_0x00a6:
                int r7 = r7 - r8
            L_0x00a7:
                org.telegram.ui.PhotoViewer r8 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.Components.RecyclerListView r8 = r8.mentionListView
                if (r3 != r8) goto L_0x00bc
                org.telegram.ui.PhotoViewer r8 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.Components.PhotoViewerCaptionEnterView r8 = r8.captionEditText
                int r8 = r8.getMeasuredHeight()
            L_0x00b9:
                int r7 = r7 - r8
                goto L_0x01a3
            L_0x00bc:
                org.telegram.ui.PhotoViewer r8 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.Components.PhotoViewerCaptionEnterView r8 = r8.captionEditText
                boolean r8 = r8.isPopupView(r3)
                if (r8 == 0) goto L_0x00ee
                boolean r7 = org.telegram.messenger.AndroidUtilities.isInMultiwindow
                if (r7 == 0) goto L_0x00e2
                org.telegram.ui.PhotoViewer r7 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.Components.PhotoViewerCaptionEnterView r7 = r7.captionEditText
                int r7 = r7.getTop()
                int r8 = r3.getMeasuredHeight()
                int r7 = r7 - r8
                r8 = 1065353216(0x3var_, float:1.0)
                int r8 = org.telegram.messenger.AndroidUtilities.dp(r8)
                goto L_0x0106
            L_0x00e2:
                org.telegram.ui.PhotoViewer r7 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.Components.PhotoViewerCaptionEnterView r7 = r7.captionEditText
                int r7 = r7.getBottom()
                goto L_0x01a3
            L_0x00ee:
                org.telegram.ui.PhotoViewer r8 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.PhotoViewer$SelectedPhotosListView r8 = r8.selectedPhotosListView
                if (r3 != r8) goto L_0x0109
                org.telegram.ui.PhotoViewer r7 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.ActionBar.ActionBar r7 = r7.actionBar
                int r7 = r7.getMeasuredHeight()
                r8 = 1084227584(0x40a00000, float:5.0)
                int r8 = org.telegram.messenger.AndroidUtilities.dp(r8)
            L_0x0106:
                int r7 = r7 + r8
                goto L_0x01a3
            L_0x0109:
                org.telegram.ui.PhotoViewer r8 = org.telegram.ui.PhotoViewer.this
                android.widget.ImageView r8 = r8.cameraItem
                if (r3 == r8) goto L_0x0158
                org.telegram.ui.PhotoViewer r8 = org.telegram.ui.PhotoViewer.this
                android.widget.ImageView r8 = r8.muteItem
                if (r3 != r8) goto L_0x011a
                goto L_0x0158
            L_0x011a:
                org.telegram.ui.PhotoViewer r8 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.Components.VideoTimelinePlayView r8 = r8.videoTimelineView
                if (r3 != r8) goto L_0x013d
                org.telegram.ui.PhotoViewer r8 = org.telegram.ui.PhotoViewer.this
                android.widget.FrameLayout r8 = r8.pickerView
                int r8 = r8.getHeight()
                int r7 = r7 - r8
                org.telegram.ui.PhotoViewer r8 = org.telegram.ui.PhotoViewer.this
                int r8 = r8.sendPhotoType
                if (r8 != r14) goto L_0x01a3
                r8 = 1112539136(0x42500000, float:52.0)
                int r8 = org.telegram.messenger.AndroidUtilities.dp(r8)
                goto L_0x00b9
            L_0x013d:
                org.telegram.ui.PhotoViewer r8 = org.telegram.ui.PhotoViewer.this
                android.widget.TextView r8 = r8.videoAvatarTooltip
                if (r3 != r8) goto L_0x01a3
                org.telegram.ui.PhotoViewer r8 = org.telegram.ui.PhotoViewer.this
                android.widget.FrameLayout r8 = r8.pickerView
                int r8 = r8.getHeight()
                r11 = 1106771968(0x41var_, float:31.0)
                int r11 = org.telegram.messenger.AndroidUtilities.dp(r11)
                int r8 = r8 + r11
                goto L_0x00b9
            L_0x0158:
                org.telegram.ui.PhotoViewer r7 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.Components.VideoTimelinePlayView r7 = r7.videoTimelineView
                if (r7 == 0) goto L_0x0177
                org.telegram.ui.PhotoViewer r7 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.Components.VideoTimelinePlayView r7 = r7.videoTimelineView
                int r7 = r7.getVisibility()
                if (r7 != 0) goto L_0x0177
                org.telegram.ui.PhotoViewer r7 = org.telegram.ui.PhotoViewer.this
                org.telegram.ui.Components.VideoTimelinePlayView r7 = r7.videoTimelineView
                int r7 = r7.getTop()
                goto L_0x0181
            L_0x0177:
                org.telegram.ui.PhotoViewer r7 = org.telegram.ui.PhotoViewer.this
                android.widget.FrameLayout r7 = r7.pickerView
                int r7 = r7.getTop()
            L_0x0181:
                org.telegram.ui.PhotoViewer r8 = org.telegram.ui.PhotoViewer.this
                int r8 = r8.sendPhotoType
                r11 = 4
                if (r8 == r11) goto L_0x0196
                org.telegram.ui.PhotoViewer r8 = org.telegram.ui.PhotoViewer.this
                int r8 = r8.sendPhotoType
                if (r8 != r13) goto L_0x0193
                goto L_0x0196
            L_0x0193:
                r8 = 1097859072(0x41700000, float:15.0)
                goto L_0x0198
            L_0x0196:
                r8 = 1109393408(0x42200000, float:40.0)
            L_0x0198:
                int r8 = org.telegram.messenger.AndroidUtilities.dp(r8)
                int r7 = r7 - r8
                int r8 = r3.getMeasuredHeight()
                goto L_0x00b9
            L_0x01a3:
                int r8 = r6 + r5
                int r6 = r6 + r9
                int r6 = r6 + r5
                int r10 = r10 + r7
                r3.layout(r8, r7, r6, r10)
            L_0x01ab:
                int r4 = r4 + 1
                goto L_0x0027
            L_0x01af:
                r15.notifyHeightChanged()
                return
            */
            throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.FrameLayoutDrawer.onLayout(boolean, int, int, int, int):void");
        }

        /* access modifiers changed from: protected */
        public void onDraw(Canvas canvas) {
            PhotoViewer.this.onDraw(canvas);
            if (PhotoViewer.this.isStatusBarVisible() && AndroidUtilities.statusBarHeight != 0 && PhotoViewer.this.actionBar != null) {
                this.paint.setAlpha((int) (PhotoViewer.this.actionBar.getAlpha() * 255.0f * 0.2f));
                canvas.drawRect(0.0f, PhotoViewer.this.currentPanTranslationY, (float) getMeasuredWidth(), PhotoViewer.this.currentPanTranslationY + ((float) AndroidUtilities.statusBarHeight), this.paint);
                this.paint.setAlpha((int) (PhotoViewer.this.actionBar.getAlpha() * 255.0f * 0.498f));
                if (getPaddingRight() > 0) {
                    canvas.drawRect((float) (getMeasuredWidth() - getPaddingRight()), 0.0f, (float) getMeasuredWidth(), (float) getMeasuredHeight(), this.paint);
                }
                if (getPaddingLeft() > 0) {
                    canvas.drawRect(0.0f, 0.0f, (float) getPaddingLeft(), (float) getMeasuredHeight(), this.paint);
                }
                if (getPaddingBottom() > 0) {
                    float dpf2 = AndroidUtilities.dpf2(24.0f) * (1.0f - PhotoViewer.this.actionBar.getAlpha());
                    canvas.drawRect(0.0f, ((float) (getMeasuredHeight() - getPaddingBottom())) + dpf2, (float) getMeasuredWidth(), ((float) getMeasuredHeight()) + dpf2, this.paint);
                }
            }
        }

        /* access modifiers changed from: protected */
        public void dispatchDraw(Canvas canvas) {
            canvas.save();
            canvas.clipRect(0, 0, getWidth(), getHeight());
            super.dispatchDraw(canvas);
            canvas.restore();
        }

        /* access modifiers changed from: protected */
        public boolean drawChild(Canvas canvas, View view, long j) {
            if (view == PhotoViewer.this.leftPaintingOverlay || view == PhotoViewer.this.rightPaintingOverlay) {
                return false;
            }
            if (view != PhotoViewer.this.navigationBar) {
                canvas.save();
                canvas.clipRect(0, 0, getWidth(), getHeight());
            }
            boolean drawChildInternal = drawChildInternal(canvas, view, j);
            if (view != PhotoViewer.this.navigationBar) {
                canvas.restore();
            }
            return drawChildInternal;
        }

        /* access modifiers changed from: protected */
        public boolean drawChildInternal(Canvas canvas, View view, long j) {
            if (view == PhotoViewer.this.mentionListView || view == PhotoViewer.this.captionEditText) {
                if (PhotoViewer.this.currentEditMode != 0 && PhotoViewer.this.currentPanTranslationY == 0.0f) {
                    return false;
                }
                if (AndroidUtilities.isInMultiwindow || AndroidUtilities.usingHardwareInput) {
                    if (!PhotoViewer.this.captionEditText.isPopupShowing() && PhotoViewer.this.captionEditText.getEmojiPadding() == 0 && PhotoViewer.this.captionEditText.getTag() == null) {
                        return false;
                    }
                } else if (!PhotoViewer.this.captionEditText.isPopupShowing() && PhotoViewer.this.captionEditText.getEmojiPadding() == 0 && getKeyboardHeight() == 0 && PhotoViewer.this.currentPanTranslationY == 0.0f) {
                    return false;
                }
                if (view == PhotoViewer.this.mentionListView) {
                    canvas.save();
                    canvas.clipRect(view.getX(), view.getY(), view.getX() + ((float) view.getWidth()), view.getY() + ((float) view.getHeight()));
                    boolean drawChild = super.drawChild(canvas, view, j);
                    canvas.restore();
                    return drawChild;
                }
            } else if (view == PhotoViewer.this.cameraItem || view == PhotoViewer.this.muteItem || view == PhotoViewer.this.pickerView || view == PhotoViewer.this.videoTimelineView || view == PhotoViewer.this.pickerViewSendButton || view == PhotoViewer.this.captionLimitView || view == PhotoViewer.this.captionTextViewSwitcher || (PhotoViewer.this.muteItem.getVisibility() == 0 && view == PhotoViewer.this.bottomLayout)) {
                if (PhotoViewer.this.captionEditText.isPopupAnimating()) {
                    view.setTranslationY((float) PhotoViewer.this.captionEditText.getEmojiPadding());
                    boolean unused = PhotoViewer.this.bottomTouchEnabled = false;
                } else {
                    int emojiPadding = (getKeyboardHeight() > AndroidUtilities.dp(20.0f) || AndroidUtilities.isInMultiwindow) ? 0 : PhotoViewer.this.captionEditText.getEmojiPadding();
                    if (PhotoViewer.this.captionEditText.isPopupShowing() || (((AndroidUtilities.isInMultiwindow || AndroidUtilities.usingHardwareInput) && PhotoViewer.this.captionEditText.getTag() != null) || getKeyboardHeight() > AndroidUtilities.dp(80.0f) || emojiPadding != 0)) {
                        boolean unused2 = PhotoViewer.this.bottomTouchEnabled = false;
                        return false;
                    }
                    boolean unused3 = PhotoViewer.this.bottomTouchEnabled = true;
                }
            } else if (view == PhotoViewer.this.checkImageView || view == PhotoViewer.this.photosCounterView) {
                if (PhotoViewer.this.captionEditText.getTag() != null) {
                    boolean unused4 = PhotoViewer.this.bottomTouchEnabled = false;
                    if (view.getAlpha() < 0.0f) {
                        return false;
                    }
                } else {
                    boolean unused5 = PhotoViewer.this.bottomTouchEnabled = true;
                }
            } else if (view == PhotoViewer.this.miniProgressView) {
                return false;
            }
            if (view == PhotoViewer.this.videoTimelineView && PhotoViewer.this.videoTimelineView.getTranslationY() > 0.0f && PhotoViewer.this.pickerView.getTranslationY() == 0.0f) {
                canvas.save();
                canvas.clipRect(PhotoViewer.this.videoTimelineView.getX(), PhotoViewer.this.videoTimelineView.getY(), PhotoViewer.this.videoTimelineView.getX() + ((float) PhotoViewer.this.videoTimelineView.getMeasuredWidth()), (float) PhotoViewer.this.videoTimelineView.getBottom());
                boolean drawChild2 = super.drawChild(canvas, view, j);
                canvas.restore();
                return drawChild2;
            }
            try {
                if (view == PhotoViewer.this.aspectRatioFrameLayout || view == PhotoViewer.this.paintingOverlay || !super.drawChild(canvas, view, j)) {
                    return false;
                }
                return true;
            } catch (Throwable unused6) {
                return true;
            }
        }

        public void requestLayout() {
            if (!this.ignoreLayout) {
                super.requestLayout();
            }
        }

        /* access modifiers changed from: protected */
        public void onAttachedToWindow() {
            super.onAttachedToWindow();
            this.adjustPanLayoutHelper.setResizableView(PhotoViewer.this.windowView);
            this.adjustPanLayoutHelper.onAttach();
            Bulletin.addDelegate((FrameLayout) this, (Bulletin.Delegate) new Bulletin.Delegate() {
                public /* synthetic */ void onHide(Bulletin bulletin) {
                    Bulletin.Delegate.CC.$default$onHide(this, bulletin);
                }

                public /* synthetic */ void onOffsetChange(float f) {
                    Bulletin.Delegate.CC.$default$onOffsetChange(this, f);
                }

                public /* synthetic */ void onShow(Bulletin bulletin) {
                    Bulletin.Delegate.CC.$default$onShow(this, bulletin);
                }

                public int getBottomOffset(int i) {
                    int i2 = 0;
                    if (PhotoViewer.this.bottomLayout != null && PhotoViewer.this.bottomLayout.getVisibility() == 0) {
                        i2 = 0 + PhotoViewer.this.bottomLayout.getHeight();
                    }
                    if (PhotoViewer.this.groupedPhotosListView == null || !PhotoViewer.this.groupedPhotosListView.hasPhotos()) {
                        return i2;
                    }
                    return (AndroidUtilities.isTablet() || PhotoViewer.this.containerView.getMeasuredHeight() > PhotoViewer.this.containerView.getMeasuredWidth()) ? i2 + PhotoViewer.this.groupedPhotosListView.getHeight() : i2;
                }
            });
        }

        /* access modifiers changed from: protected */
        public void onDetachedFromWindow() {
            super.onDetachedFromWindow();
            this.adjustPanLayoutHelper.onDetach();
            Bulletin.removeDelegate((FrameLayout) this);
        }

        public void notifyHeightChanged() {
            super.notifyHeightChanged();
            if (PhotoViewer.this.isCurrentVideo) {
                PhotoViewer.this.photoProgressViews[0].setIndexedAlpha(2, getKeyboardHeight() <= AndroidUtilities.dp(20.0f) ? 1.0f : 0.0f, true);
            }
        }
    }

    static {
        if (Build.VERSION.SDK_INT >= 24) {
            VPC_PROGRESS = new FloatProperty<VideoPlayerControlFrameLayout>("progress") {
                public void setValue(VideoPlayerControlFrameLayout videoPlayerControlFrameLayout, float f) {
                    videoPlayerControlFrameLayout.setProgress(f);
                }

                public Float get(VideoPlayerControlFrameLayout videoPlayerControlFrameLayout) {
                    return Float.valueOf(videoPlayerControlFrameLayout.getProgress());
                }
            };
        } else {
            VPC_PROGRESS = new Property<VideoPlayerControlFrameLayout, Float>(Float.class, "progress") {
                public void set(VideoPlayerControlFrameLayout videoPlayerControlFrameLayout, Float f) {
                    videoPlayerControlFrameLayout.setProgress(f.floatValue());
                }

                public Float get(VideoPlayerControlFrameLayout videoPlayerControlFrameLayout) {
                    return Float.valueOf(videoPlayerControlFrameLayout.getProgress());
                }
            };
        }
    }

    private class VideoPlayerControlFrameLayout extends FrameLayout {
        private boolean ignoreLayout;
        /* access modifiers changed from: private */
        public int parentHeight;
        /* access modifiers changed from: private */
        public int parentWidth;
        private float progress = 1.0f;
        private boolean seekBarTransitionEnabled;
        private boolean translationYAnimationEnabled = true;

        public VideoPlayerControlFrameLayout(Context context) {
            super(context);
            setWillNotDraw(false);
        }

        public boolean onTouchEvent(MotionEvent motionEvent) {
            if (this.progress < 1.0f) {
                return false;
            }
            if (PhotoViewer.this.videoPlayerSeekbar.onTouch(motionEvent.getAction(), motionEvent.getX() - ((float) AndroidUtilities.dp(2.0f)), motionEvent.getY())) {
                getParent().requestDisallowInterceptTouchEvent(true);
                PhotoViewer.this.videoPlayerSeekbarView.invalidate();
            }
            return true;
        }

        public void requestLayout() {
            if (!this.ignoreLayout) {
                super.requestLayout();
            }
        }

        /* access modifiers changed from: protected */
        public void onMeasure(int i, int i2) {
            int i3;
            this.ignoreLayout = true;
            FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) PhotoViewer.this.videoPlayerTime.getLayoutParams();
            if (this.parentWidth > this.parentHeight) {
                if (PhotoViewer.this.exitFullscreenButton.getVisibility() != 0) {
                    PhotoViewer.this.exitFullscreenButton.setVisibility(0);
                }
                i3 = AndroidUtilities.dp(48.0f);
                layoutParams.rightMargin = AndroidUtilities.dp(47.0f);
            } else {
                if (PhotoViewer.this.exitFullscreenButton.getVisibility() != 4) {
                    PhotoViewer.this.exitFullscreenButton.setVisibility(4);
                }
                layoutParams.rightMargin = AndroidUtilities.dp(12.0f);
                i3 = 0;
            }
            this.ignoreLayout = false;
            super.onMeasure(i, i2);
            long j = 0;
            if (PhotoViewer.this.videoPlayer != null) {
                long duration = PhotoViewer.this.videoPlayer.getDuration();
                if (duration != -9223372036854775807L) {
                    j = duration;
                }
            }
            long j2 = j / 1000;
            Paint paint = PhotoViewer.this.videoPlayerTime.getPaint();
            Locale locale = Locale.ROOT;
            long j3 = j2 / 60;
            long j4 = j2 % 60;
            Object[] objArr = {Long.valueOf(j3), Long.valueOf(j4), Long.valueOf(j3), Long.valueOf(j4)};
            PhotoViewer.this.videoPlayerSeekbar.setSize(((getMeasuredWidth() - AndroidUtilities.dp(16.0f)) - ((int) Math.ceil((double) paint.measureText(String.format(locale, "%02d:%02d / %02d:%02d", objArr))))) - i3, getMeasuredHeight());
        }

        /* access modifiers changed from: protected */
        public void onLayout(boolean z, int i, int i2, int i3, int i4) {
            super.onLayout(z, i, i2, i3, i4);
            float currentPosition = PhotoViewer.this.videoPlayer != null ? ((float) PhotoViewer.this.videoPlayer.getCurrentPosition()) / ((float) PhotoViewer.this.videoPlayer.getDuration()) : 0.0f;
            if (PhotoViewer.this.playerWasReady) {
                PhotoViewer.this.videoPlayerSeekbar.setProgress(currentPosition);
            }
            PhotoViewer.this.videoTimelineView.setProgress(currentPosition);
        }

        public float getProgress() {
            return this.progress;
        }

        public void setProgress(float f) {
            if (this.progress != f) {
                this.progress = f;
                onProgressChanged(f);
            }
        }

        private void onProgressChanged(float f) {
            PhotoViewer.this.videoPlayerTime.setAlpha(f);
            PhotoViewer.this.exitFullscreenButton.setAlpha(f);
            if (this.seekBarTransitionEnabled) {
                PhotoViewer.this.videoPlayerTime.setPivotX((float) PhotoViewer.this.videoPlayerTime.getWidth());
                PhotoViewer.this.videoPlayerTime.setPivotY((float) PhotoViewer.this.videoPlayerTime.getHeight());
                float f2 = 1.0f - f;
                float f3 = 1.0f - (0.1f * f2);
                PhotoViewer.this.videoPlayerTime.setScaleX(f3);
                PhotoViewer.this.videoPlayerTime.setScaleY(f3);
                PhotoViewer.this.videoPlayerSeekbar.setTransitionProgress(f2);
                return;
            }
            if (this.translationYAnimationEnabled) {
                setTranslationY(AndroidUtilities.dpf2(24.0f) * (1.0f - f));
            }
            PhotoViewer.this.videoPlayerSeekbarView.setAlpha(f);
        }

        public void setSeekBarTransitionEnabled(boolean z) {
            if (this.seekBarTransitionEnabled != z) {
                this.seekBarTransitionEnabled = z;
                if (z) {
                    setTranslationY(0.0f);
                    PhotoViewer.this.videoPlayerSeekbarView.setAlpha(1.0f);
                } else {
                    PhotoViewer.this.videoPlayerTime.setScaleX(1.0f);
                    PhotoViewer.this.videoPlayerTime.setScaleY(1.0f);
                    PhotoViewer.this.videoPlayerSeekbar.setTransitionProgress(0.0f);
                }
                onProgressChanged(this.progress);
            }
        }

        public void setTranslationYAnimationEnabled(boolean z) {
            if (this.translationYAnimationEnabled != z) {
                this.translationYAnimationEnabled = z;
                if (!z) {
                    setTranslationY(0.0f);
                }
                onProgressChanged(this.progress);
            }
        }
    }

    private class CaptionTextViewSwitcher extends TextViewSwitcher {
        private float alpha = 1.0f;
        private boolean inScrollView = false;

        public CaptionTextViewSwitcher(Context context) {
            super(context);
        }

        public void setVisibility(int i) {
            setVisibility(i, true);
        }

        public void setVisibility(int i, boolean z) {
            super.setVisibility(i);
            if (this.inScrollView && z) {
                PhotoViewer.this.captionScrollView.setVisibility(i);
            }
        }

        public void setAlpha(float f) {
            this.alpha = f;
            if (this.inScrollView) {
                PhotoViewer.this.captionScrollView.setAlpha(f);
            } else {
                super.setAlpha(f);
            }
        }

        public float getAlpha() {
            if (this.inScrollView) {
                return this.alpha;
            }
            return super.getAlpha();
        }

        public void setTranslationY(float f) {
            super.setTranslationY(f);
            if (this.inScrollView) {
                PhotoViewer.this.captionScrollView.invalidate();
            }
        }

        /* access modifiers changed from: protected */
        public void onAttachedToWindow() {
            super.onAttachedToWindow();
            if (PhotoViewer.this.captionContainer != null && getParent() == PhotoViewer.this.captionContainer) {
                this.inScrollView = true;
                PhotoViewer.this.captionScrollView.setVisibility(getVisibility());
                PhotoViewer.this.captionScrollView.setAlpha(this.alpha);
                super.setAlpha(1.0f);
            }
        }

        /* access modifiers changed from: protected */
        public void onDetachedFromWindow() {
            super.onDetachedFromWindow();
            if (this.inScrollView) {
                this.inScrollView = false;
                PhotoViewer.this.captionScrollView.setVisibility(8);
                super.setAlpha(this.alpha);
            }
        }
    }

    private class CaptionScrollView extends NestedScrollView {
        private Method abortAnimatedScrollMethod;
        /* access modifiers changed from: private */
        public float backgroundAlpha = 1.0f;
        /* access modifiers changed from: private */
        public boolean dontChangeTopMargin;
        private boolean isLandscape;
        private boolean nestedScrollStarted;
        private float overScrollY;
        private final Paint paint;
        private int pendingTopMargin = -1;
        private int prevHeight;
        private OverScroller scroller;
        private final SpringAnimation springAnimation;
        private int textHash;
        private float velocitySign;
        private float velocityY;

        /* access modifiers changed from: protected */
        public float getBottomFadingEdgeStrength() {
            return 1.0f;
        }

        /* access modifiers changed from: protected */
        public float getTopFadingEdgeStrength() {
            return 1.0f;
        }

        public CaptionScrollView(Context context) {
            super(context);
            Paint paint2 = new Paint(1);
            this.paint = paint2;
            setClipChildren(false);
            setOverScrollMode(2);
            paint2.setColor(-16777216);
            setFadingEdgeLength(AndroidUtilities.dp(12.0f));
            setVerticalFadingEdgeEnabled(true);
            setWillNotDraw(false);
            SpringAnimation springAnimation2 = new SpringAnimation(PhotoViewer.this.captionTextViewSwitcher, DynamicAnimation.TRANSLATION_Y, 0.0f);
            this.springAnimation = springAnimation2;
            springAnimation2.getSpring().setStiffness(100.0f);
            springAnimation2.setMinimumVisibleChange(1.0f);
            springAnimation2.addUpdateListener(new PhotoViewer$CaptionScrollView$$ExternalSyntheticLambda0(this));
            springAnimation2.getSpring().setDampingRatio(1.0f);
            try {
                Method declaredMethod = NestedScrollView.class.getDeclaredMethod("abortAnimatedScroll", new Class[0]);
                this.abortAnimatedScrollMethod = declaredMethod;
                declaredMethod.setAccessible(true);
            } catch (Exception e) {
                this.abortAnimatedScrollMethod = null;
                FileLog.e((Throwable) e);
            }
            try {
                Field declaredField = NestedScrollView.class.getDeclaredField("mScroller");
                declaredField.setAccessible(true);
                this.scroller = (OverScroller) declaredField.get(this);
            } catch (Exception e2) {
                this.scroller = null;
                FileLog.e((Throwable) e2);
            }
        }

        /* access modifiers changed from: private */
        public /* synthetic */ void lambda$new$0(DynamicAnimation dynamicAnimation, float f, float f2) {
            this.overScrollY = f;
            this.velocityY = f2;
        }

        public boolean onTouchEvent(MotionEvent motionEvent) {
            if (motionEvent.getAction() != 0 || motionEvent.getY() >= ((float) (PhotoViewer.this.captionContainer.getTop() - getScrollY())) + PhotoViewer.this.captionTextViewSwitcher.getTranslationY()) {
                return super.onTouchEvent(motionEvent);
            }
            return false;
        }

        /* access modifiers changed from: protected */
        public void onMeasure(int i, int i2) {
            updateTopMargin(View.MeasureSpec.getSize(i), View.MeasureSpec.getSize(i2));
            super.onMeasure(i, i2);
        }

        public void applyPendingTopMargin() {
            this.dontChangeTopMargin = false;
            if (this.pendingTopMargin >= 0) {
                ((ViewGroup.MarginLayoutParams) PhotoViewer.this.captionContainer.getLayoutParams()).topMargin = this.pendingTopMargin;
                this.pendingTopMargin = -1;
                requestLayout();
            }
        }

        public int getPendingMarginTopDiff() {
            int i = this.pendingTopMargin;
            if (i >= 0) {
                return i - ((ViewGroup.MarginLayoutParams) PhotoViewer.this.captionContainer.getLayoutParams()).topMargin;
            }
            return 0;
        }

        public void updateTopMargin() {
            updateTopMargin(getWidth(), getHeight());
        }

        private void updateTopMargin(int i, int i2) {
            int calculateNewContainerMarginTop = calculateNewContainerMarginTop(i, i2);
            if (calculateNewContainerMarginTop < 0) {
                return;
            }
            if (this.dontChangeTopMargin) {
                this.pendingTopMargin = calculateNewContainerMarginTop;
                return;
            }
            ((ViewGroup.MarginLayoutParams) PhotoViewer.this.captionContainer.getLayoutParams()).topMargin = calculateNewContainerMarginTop;
            this.pendingTopMargin = -1;
        }

        public int calculateNewContainerMarginTop(int i, int i2) {
            int i3;
            if (i == 0 || i2 == 0) {
                return -1;
            }
            TextView currentView = PhotoViewer.this.captionTextViewSwitcher.getCurrentView();
            CharSequence text = currentView.getText();
            int hashCode = text.hashCode();
            Point point = AndroidUtilities.displaySize;
            boolean z = point.x > point.y;
            if (this.textHash == hashCode && this.isLandscape == z && this.prevHeight == i2) {
                return -1;
            }
            this.textHash = hashCode;
            this.isLandscape = z;
            this.prevHeight = i2;
            currentView.measure(View.MeasureSpec.makeMeasureSpec(i, NUM), View.MeasureSpec.makeMeasureSpec(i2, Integer.MIN_VALUE));
            Layout layout = currentView.getLayout();
            int lineCount = layout.getLineCount();
            int i4 = 2;
            if ((!z || lineCount > 2) && (z || lineCount > 5)) {
                if (!z) {
                    i4 = 5;
                }
                int min = Math.min(i4, lineCount);
                loop0:
                while (min > 1) {
                    int i5 = min - 1;
                    for (int lineStart = layout.getLineStart(i5); lineStart < layout.getLineEnd(i5); lineStart++) {
                        if (Character.isLetterOrDigit(text.charAt(lineStart))) {
                            break loop0;
                        }
                    }
                    min--;
                }
                i2 -= currentView.getPaint().getFontMetricsInt((Paint.FontMetricsInt) null) * min;
                i3 = AndroidUtilities.dp(8.0f);
            } else {
                i3 = currentView.getMeasuredHeight();
            }
            return i2 - i3;
        }

        public void reset() {
            scrollTo(0, 0);
        }

        public void stopScrolling() {
            Method method = this.abortAnimatedScrollMethod;
            if (method != null) {
                try {
                    method.invoke(this, new Object[0]);
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                }
            }
        }

        public void fling(int i) {
            super.fling(i);
            this.velocitySign = Math.signum((float) i);
            this.velocityY = 0.0f;
        }

        public boolean dispatchNestedPreScroll(int i, int i2, int[] iArr, int[] iArr2, int i3) {
            iArr[1] = 0;
            if (this.nestedScrollStarted) {
                float f = this.overScrollY;
                if ((f > 0.0f && i2 > 0) || (f < 0.0f && i2 < 0)) {
                    float f2 = (float) i2;
                    float f3 = f - f2;
                    if (f > 0.0f) {
                        if (f3 < 0.0f) {
                            this.overScrollY = 0.0f;
                            iArr[1] = (int) (((float) iArr[1]) + f2 + f3);
                        } else {
                            this.overScrollY = f3;
                            iArr[1] = iArr[1] + i2;
                        }
                    } else if (f3 > 0.0f) {
                        this.overScrollY = 0.0f;
                        iArr[1] = (int) (((float) iArr[1]) + f2 + f3);
                    } else {
                        this.overScrollY = f3;
                        iArr[1] = iArr[1] + i2;
                    }
                    PhotoViewer.this.captionTextViewSwitcher.setTranslationY(this.overScrollY);
                    return true;
                }
            }
            return false;
        }

        public void dispatchNestedScroll(int i, int i2, int i3, int i4, int[] iArr, int i5, int[] iArr2) {
            float f;
            if (i4 != 0) {
                int round = Math.round(((float) i4) * (1.0f - Math.abs((-this.overScrollY) / ((float) (PhotoViewer.this.captionContainer.getTop() - ((PhotoViewer.this.isStatusBarVisible() ? AndroidUtilities.statusBarHeight : 0) + ActionBar.getCurrentActionBarHeight()))))));
                if (round == 0) {
                    return;
                }
                if (this.nestedScrollStarted) {
                    this.overScrollY -= (float) round;
                    PhotoViewer.this.captionTextViewSwitcher.setTranslationY(this.overScrollY);
                } else if (!this.springAnimation.isRunning()) {
                    OverScroller overScroller = this.scroller;
                    float currVelocity = overScroller != null ? overScroller.getCurrVelocity() : Float.NaN;
                    if (!Float.isNaN(currVelocity)) {
                        Point point = AndroidUtilities.displaySize;
                        float min = Math.min(point.x > point.y ? 3000.0f : 5000.0f, currVelocity);
                        round = (int) ((((float) round) * min) / currVelocity);
                        f = min * (-this.velocitySign);
                    } else {
                        f = 0.0f;
                    }
                    if (round != 0) {
                        this.overScrollY -= (float) round;
                        PhotoViewer.this.captionTextViewSwitcher.setTranslationY(this.overScrollY);
                    }
                    startSpringAnimationIfNotRunning(f);
                }
            }
        }

        private void startSpringAnimationIfNotRunning(float f) {
            if (!this.springAnimation.isRunning()) {
                this.springAnimation.setStartVelocity(f);
                this.springAnimation.start();
            }
        }

        public boolean startNestedScroll(int i, int i2) {
            if (i2 == 0) {
                this.springAnimation.cancel();
                this.nestedScrollStarted = true;
                this.overScrollY = PhotoViewer.this.captionTextViewSwitcher.getTranslationY();
            }
            return true;
        }

        public void computeScroll() {
            OverScroller overScroller;
            super.computeScroll();
            if (!this.nestedScrollStarted && this.overScrollY != 0.0f && (overScroller = this.scroller) != null && overScroller.isFinished()) {
                startSpringAnimationIfNotRunning(0.0f);
            }
        }

        public void stopNestedScroll(int i) {
            OverScroller overScroller;
            if (this.nestedScrollStarted && i == 0) {
                this.nestedScrollStarted = false;
                if (this.overScrollY != 0.0f && (overScroller = this.scroller) != null && overScroller.isFinished()) {
                    startSpringAnimationIfNotRunning(this.velocityY);
                }
            }
        }

        public void draw(Canvas canvas) {
            int width = getWidth();
            int height = getHeight();
            int scrollY = getScrollY();
            int save = canvas.save();
            int i = height + scrollY;
            canvas.clipRect(0, scrollY, width, i);
            this.paint.setAlpha((int) (this.backgroundAlpha * 127.0f));
            canvas.drawRect(0.0f, ((float) PhotoViewer.this.captionContainer.getTop()) + PhotoViewer.this.captionTextViewSwitcher.getTranslationY(), (float) width, (float) i, this.paint);
            super.draw(canvas);
            canvas.restoreToCount(save);
        }

        public void invalidate() {
            super.invalidate();
            if (PhotoViewer.this.isActionBarVisible) {
                int scrollY = getScrollY();
                float translationY = PhotoViewer.this.captionTextViewSwitcher.getTranslationY();
                float f = 0.0f;
                boolean z = scrollY == 0 && translationY == 0.0f;
                boolean z2 = scrollY == 0 && translationY == 0.0f;
                if (!z) {
                    int y = PhotoViewer.this.photoProgressViews[0].getY() + PhotoViewer.this.photoProgressViews[0].size;
                    int top = (((PhotoViewer.this.captionContainer.getTop() + ((int) translationY)) - scrollY) + ((PhotoViewer.this.isStatusBarVisible() ? AndroidUtilities.statusBarHeight : 0) + ActionBar.getCurrentActionBarHeight())) - AndroidUtilities.dp(12.0f);
                    z2 = top > ((int) PhotoViewer.this.fullscreenButton[0].getY()) + AndroidUtilities.dp(32.0f);
                    z = top > y;
                }
                if (PhotoViewer.this.allowShowFullscreenButton) {
                    if (PhotoViewer.this.fullscreenButton[0].getTag() != null && ((Integer) PhotoViewer.this.fullscreenButton[0].getTag()).intValue() == 3 && z2) {
                        PhotoViewer.this.fullscreenButton[0].setTag(2);
                        PhotoViewer.this.fullscreenButton[0].animate().alpha(1.0f).setDuration(150).setListener(new AnimatorListenerAdapter() {
                            public void onAnimationEnd(Animator animator) {
                                PhotoViewer.this.fullscreenButton[0].setTag((Object) null);
                            }
                        }).start();
                    } else if (PhotoViewer.this.fullscreenButton[0].getTag() == null && !z2) {
                        PhotoViewer.this.fullscreenButton[0].setTag(3);
                        PhotoViewer.this.fullscreenButton[0].animate().alpha(0.0f).setListener((Animator.AnimatorListener) null).setDuration(150).start();
                    }
                }
                PhotoProgressView photoProgressView = PhotoViewer.this.photoProgressViews[0];
                if (z) {
                    f = 1.0f;
                }
                photoProgressView.setIndexedAlpha(2, f, true);
            }
        }
    }

    public static PhotoViewer getPipInstance() {
        return PipInstance;
    }

    public static PhotoViewer getInstance() {
        PhotoViewer photoViewer = Instance;
        if (photoViewer == null) {
            synchronized (PhotoViewer.class) {
                photoViewer = Instance;
                if (photoViewer == null) {
                    photoViewer = new PhotoViewer();
                    Instance = photoViewer;
                }
            }
        }
        return photoViewer;
    }

    public boolean isOpenedFullScreenVideo() {
        return this.openedFullScreenVideo;
    }

    public static boolean hasInstance() {
        return Instance != null;
    }

    public PhotoViewer() {
        this.blackPaint.setColor(-16777216);
        this.videoFrameBitmapPaint.setColor(-1);
    }

    /* JADX WARNING: Code restructure failed: missing block: B:281:0x05dc, code lost:
        if (r1.get(r1.size() - 1).getDialogId() != r0.mergeDialogId) goto L_0x0621;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:294:0x061f, code lost:
        if (r0.imagesArrTemp.get(0).getDialogId() != r0.mergeDialogId) goto L_0x0621;
     */
    /* JADX WARNING: Removed duplicated region for block: B:150:0x0266  */
    /* JADX WARNING: Removed duplicated region for block: B:153:0x0274  */
    /* JADX WARNING: Removed duplicated region for block: B:154:0x0279  */
    /* JADX WARNING: Removed duplicated region for block: B:156:0x027c  */
    /* JADX WARNING: Removed duplicated region for block: B:161:0x02ae  */
    /* JADX WARNING: Removed duplicated region for block: B:300:0x062e  */
    /* JADX WARNING: Removed duplicated region for block: B:465:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void didReceivedNotification(int r21, int r22, java.lang.Object... r23) {
        /*
            r20 = this;
            r0 = r20
            r1 = r21
            int r2 = org.telegram.messenger.NotificationCenter.fileLoadFailed
            r3 = 1065353216(0x3var_, float:1.0)
            r4 = 3
            r5 = 2
            r6 = 1
            r7 = 0
            if (r1 != r2) goto L_0x0048
            r1 = r23[r7]
            java.lang.String r1 = (java.lang.String) r1
            r2 = 0
        L_0x0013:
            if (r2 >= r4) goto L_0x0863
            java.lang.String[] r8 = r0.currentFileNames
            r9 = r8[r2]
            if (r9 == 0) goto L_0x0045
            r8 = r8[r2]
            boolean r8 = r8.equals(r1)
            if (r8 == 0) goto L_0x0045
            if (r2 == 0) goto L_0x0038
            if (r2 != r6) goto L_0x002d
            org.telegram.messenger.ImageReceiver r1 = r0.sideImage
            org.telegram.messenger.ImageReceiver r4 = r0.rightImage
            if (r1 == r4) goto L_0x0038
        L_0x002d:
            if (r2 != r5) goto L_0x0036
            org.telegram.messenger.ImageReceiver r1 = r0.sideImage
            org.telegram.messenger.ImageReceiver r4 = r0.leftImage
            if (r1 != r4) goto L_0x0036
            goto L_0x0038
        L_0x0036:
            r1 = 0
            goto L_0x0039
        L_0x0038:
            r1 = 1
        L_0x0039:
            org.telegram.ui.PhotoViewer$PhotoProgressView[] r4 = r0.photoProgressViews
            r4 = r4[r2]
            r4.setProgress(r3, r1)
            r0.checkProgress(r2, r7, r6)
            goto L_0x0863
        L_0x0045:
            int r2 = r2 + 1
            goto L_0x0013
        L_0x0048:
            int r2 = org.telegram.messenger.NotificationCenter.fileLoaded
            if (r1 != r2) goto L_0x00c5
            r1 = r23[r7]
            java.lang.String r1 = (java.lang.String) r1
            r2 = 0
        L_0x0051:
            if (r2 >= r4) goto L_0x0863
            java.lang.String[] r8 = r0.currentFileNames
            r9 = r8[r2]
            if (r9 == 0) goto L_0x00c2
            r8 = r8[r2]
            boolean r8 = r8.equals(r1)
            if (r8 == 0) goto L_0x00c2
            if (r2 == 0) goto L_0x0076
            if (r2 != r6) goto L_0x006b
            org.telegram.messenger.ImageReceiver r1 = r0.sideImage
            org.telegram.messenger.ImageReceiver r4 = r0.rightImage
            if (r1 == r4) goto L_0x0076
        L_0x006b:
            if (r2 != r5) goto L_0x0074
            org.telegram.messenger.ImageReceiver r1 = r0.sideImage
            org.telegram.messenger.ImageReceiver r4 = r0.leftImage
            if (r1 != r4) goto L_0x0074
            goto L_0x0076
        L_0x0074:
            r1 = 0
            goto L_0x0077
        L_0x0076:
            r1 = 1
        L_0x0077:
            org.telegram.ui.PhotoViewer$PhotoProgressView[] r4 = r0.photoProgressViews
            r4 = r4[r2]
            r4.setProgress(r3, r1)
            r0.checkProgress(r2, r7, r1)
            org.telegram.ui.Components.VideoPlayer r1 = r0.videoPlayer
            if (r1 != 0) goto L_0x00b8
            if (r2 != 0) goto L_0x00b8
            org.telegram.messenger.MessageObject r1 = r0.currentMessageObject
            if (r1 == 0) goto L_0x0091
            boolean r1 = r1.isVideo()
            if (r1 != 0) goto L_0x00b5
        L_0x0091:
            org.telegram.tgnet.TLRPC$BotInlineResult r1 = r0.currentBotInlineResult
            if (r1 == 0) goto L_0x00a9
            java.lang.String r1 = r1.type
            java.lang.String r3 = "video"
            boolean r1 = r1.equals(r3)
            if (r1 != 0) goto L_0x00b5
            org.telegram.tgnet.TLRPC$BotInlineResult r1 = r0.currentBotInlineResult
            org.telegram.tgnet.TLRPC$Document r1 = r1.document
            boolean r1 = org.telegram.messenger.MessageObject.isVideoDocument(r1)
            if (r1 != 0) goto L_0x00b5
        L_0x00a9:
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r1 = r0.pageBlocksAdapter
            if (r1 == 0) goto L_0x00b8
            int r3 = r0.currentIndex
            boolean r1 = r1.isVideo(r3)
            if (r1 == 0) goto L_0x00b8
        L_0x00b5:
            r0.onActionClick(r7)
        L_0x00b8:
            if (r2 != 0) goto L_0x0863
            org.telegram.ui.Components.VideoPlayer r1 = r0.videoPlayer
            if (r1 == 0) goto L_0x0863
            r0.currentVideoFinishedLoading = r6
            goto L_0x0863
        L_0x00c2:
            int r2 = r2 + 1
            goto L_0x0051
        L_0x00c5:
            int r2 = org.telegram.messenger.NotificationCenter.fileLoadProgressChanged
            r8 = 0
            if (r1 != r2) goto L_0x0198
            r1 = r23[r7]
            java.lang.String r1 = (java.lang.String) r1
            r2 = 0
        L_0x00d0:
            if (r2 >= r4) goto L_0x0863
            java.lang.String[] r10 = r0.currentFileNames
            r11 = r10[r2]
            if (r11 == 0) goto L_0x018f
            r10 = r10[r2]
            boolean r10 = r10.equals(r1)
            if (r10 == 0) goto L_0x018f
            r10 = r23[r6]
            java.lang.Long r10 = (java.lang.Long) r10
            r11 = r23[r5]
            java.lang.Long r11 = (java.lang.Long) r11
            long r12 = r10.longValue()
            float r10 = (float) r12
            long r11 = r11.longValue()
            float r11 = (float) r11
            float r10 = r10 / r11
            float r10 = java.lang.Math.min(r3, r10)
            if (r2 == 0) goto L_0x010c
            if (r2 != r6) goto L_0x0101
            org.telegram.messenger.ImageReceiver r11 = r0.sideImage
            org.telegram.messenger.ImageReceiver r12 = r0.rightImage
            if (r11 == r12) goto L_0x010c
        L_0x0101:
            if (r2 != r5) goto L_0x010a
            org.telegram.messenger.ImageReceiver r11 = r0.sideImage
            org.telegram.messenger.ImageReceiver r12 = r0.leftImage
            if (r11 != r12) goto L_0x010a
            goto L_0x010c
        L_0x010a:
            r11 = 0
            goto L_0x010d
        L_0x010c:
            r11 = 1
        L_0x010d:
            org.telegram.ui.PhotoViewer$PhotoProgressView[] r12 = r0.photoProgressViews
            r12 = r12[r2]
            r12.setProgress(r10, r11)
            if (r2 != 0) goto L_0x018f
            org.telegram.ui.Components.VideoPlayer r11 = r0.videoPlayer
            if (r11 == 0) goto L_0x018f
            org.telegram.ui.Components.VideoPlayerSeekBar r11 = r0.videoPlayerSeekbar
            if (r11 == 0) goto L_0x018f
            boolean r11 = r0.currentVideoFinishedLoading
            if (r11 == 0) goto L_0x0125
        L_0x0122:
            r4 = -1082130432(0xffffffffbvar_, float:-1.0)
            goto L_0x017b
        L_0x0125:
            long r13 = android.os.SystemClock.elapsedRealtime()
            long r5 = r0.lastBufferedPositionCheck
            long r5 = r13 - r5
            long r5 = java.lang.Math.abs(r5)
            r15 = 500(0x1f4, double:2.47E-321)
            int r17 = (r5 > r15 ? 1 : (r5 == r15 ? 0 : -1))
            if (r17 < 0) goto L_0x0178
            float r5 = r0.seekToProgressPending
            r6 = 0
            int r15 = (r5 > r6 ? 1 : (r5 == r6 ? 0 : -1))
            if (r15 != 0) goto L_0x0160
            org.telegram.ui.Components.VideoPlayer r5 = r0.videoPlayer
            long r3 = r5.getDuration()
            org.telegram.ui.Components.VideoPlayer r5 = r0.videoPlayer
            long r11 = r5.getCurrentPosition()
            int r5 = (r3 > r8 ? 1 : (r3 == r8 ? 0 : -1))
            if (r5 < 0) goto L_0x015f
            r18 = -9223372036854775807(0xNUM, double:-4.9E-324)
            int r5 = (r3 > r18 ? 1 : (r3 == r18 ? 0 : -1))
            if (r5 == 0) goto L_0x015f
            int r5 = (r11 > r8 ? 1 : (r11 == r8 ? 0 : -1))
            if (r5 < 0) goto L_0x015f
            float r5 = (float) r11
            float r3 = (float) r3
            float r5 = r5 / r3
            goto L_0x0160
        L_0x015f:
            r5 = 0
        L_0x0160:
            boolean r3 = r0.isStreaming
            if (r3 == 0) goto L_0x0173
            int r3 = r0.currentAccount
            org.telegram.messenger.FileLoader r3 = org.telegram.messenger.FileLoader.getInstance(r3)
            java.lang.String[] r4 = r0.currentFileNames
            r4 = r4[r7]
            float r3 = r3.getBufferedProgressFromPosition(r5, r4)
            goto L_0x0175
        L_0x0173:
            r3 = 1065353216(0x3var_, float:1.0)
        L_0x0175:
            r0.lastBufferedPositionCheck = r13
            goto L_0x0122
        L_0x0178:
            r3 = -1082130432(0xffffffffbvar_, float:-1.0)
            goto L_0x0122
        L_0x017b:
            int r4 = (r3 > r4 ? 1 : (r3 == r4 ? 0 : -1))
            if (r4 == 0) goto L_0x018c
            org.telegram.ui.Components.VideoPlayerSeekBar r4 = r0.videoPlayerSeekbar
            r4.setBufferedProgress(r3)
            org.telegram.ui.Components.PipVideoOverlay.setBufferedProgress(r3)
            android.view.View r3 = r0.videoPlayerSeekbarView
            r3.invalidate()
        L_0x018c:
            r0.checkBufferedProgress(r10)
        L_0x018f:
            int r2 = r2 + 1
            r3 = 1065353216(0x3var_, float:1.0)
            r4 = 3
            r5 = 2
            r6 = 1
            goto L_0x00d0
        L_0x0198:
            int r2 = org.telegram.messenger.NotificationCenter.dialogPhotosLoaded
            r3 = 5
            r5 = 4
            r6 = -1
            if (r1 != r2) goto L_0x038d
            r2 = 3
            r1 = r23[r2]
            java.lang.Integer r1 = (java.lang.Integer) r1
            int r1 = r1.intValue()
            r2 = r23[r7]
            java.lang.Long r2 = (java.lang.Long) r2
            long r10 = r2.longValue()
            long r12 = r0.avatarsDialogId
            int r2 = (r12 > r10 ? 1 : (r12 == r10 ? 0 : -1))
            if (r2 != 0) goto L_0x0863
            int r2 = r0.classGuid
            if (r2 != r1) goto L_0x0863
            r1 = 2
            r1 = r23[r1]
            java.lang.Boolean r1 = (java.lang.Boolean) r1
            boolean r1 = r1.booleanValue()
            r2 = r23[r5]
            java.util.ArrayList r2 = (java.util.ArrayList) r2
            boolean r5 = r2.isEmpty()
            if (r5 == 0) goto L_0x01ce
            return
        L_0x01ce:
            r3 = r23[r3]
            java.util.ArrayList r3 = (java.util.ArrayList) r3
            java.util.ArrayList<org.telegram.messenger.ImageLocation> r5 = r0.imagesArrLocations
            r5.clear()
            java.util.ArrayList<java.lang.Long> r5 = r0.imagesArrLocationsSizes
            r5.clear()
            java.util.ArrayList<org.telegram.messenger.ImageLocation> r5 = r0.imagesArrLocationsVideo
            r5.clear()
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r5 = r0.imagesArrMessages
            r5.clear()
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Photo> r5 = r0.avatarsArr
            r5.clear()
            r5 = 0
            r10 = -1
        L_0x01ed:
            int r11 = r2.size()
            r12 = 0
            if (r5 >= r11) goto L_0x02ba
            java.lang.Object r11 = r2.get(r5)
            org.telegram.tgnet.TLRPC$Photo r11 = (org.telegram.tgnet.TLRPC$Photo) r11
            if (r11 == 0) goto L_0x02b1
            boolean r13 = r11 instanceof org.telegram.tgnet.TLRPC$TL_photoEmpty
            if (r13 != 0) goto L_0x02b1
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r13 = r11.sizes
            if (r13 != 0) goto L_0x0206
            goto L_0x02b1
        L_0x0206:
            r14 = 640(0x280, float:8.97E-43)
            org.telegram.tgnet.TLRPC$PhotoSize r13 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r13, r14)
            java.util.ArrayList<org.telegram.tgnet.TLRPC$VideoSize> r14 = r11.video_sizes
            boolean r14 = r14.isEmpty()
            if (r14 == 0) goto L_0x0216
            r14 = r12
            goto L_0x021e
        L_0x0216:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$VideoSize> r14 = r11.video_sizes
            java.lang.Object r14 = r14.get(r7)
            org.telegram.tgnet.TLRPC$VideoSize r14 = (org.telegram.tgnet.TLRPC$VideoSize) r14
        L_0x021e:
            if (r13 == 0) goto L_0x02b1
            if (r10 != r6) goto L_0x0260
            org.telegram.messenger.ImageLocation r15 = r0.currentFileLocation
            if (r15 == 0) goto L_0x0260
            r15 = 0
        L_0x0227:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r8 = r11.sizes
            int r8 = r8.size()
            if (r15 >= r8) goto L_0x0260
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r8 = r11.sizes
            java.lang.Object r8 = r8.get(r15)
            org.telegram.tgnet.TLRPC$PhotoSize r8 = (org.telegram.tgnet.TLRPC$PhotoSize) r8
            org.telegram.tgnet.TLRPC$FileLocation r8 = r8.location
            if (r8 == 0) goto L_0x0257
            int r9 = r8.local_id
            org.telegram.messenger.ImageLocation r6 = r0.currentFileLocation
            org.telegram.tgnet.TLRPC$TL_fileLocationToBeDeprecated r6 = r6.location
            int r7 = r6.local_id
            if (r9 != r7) goto L_0x0257
            long r7 = r8.volume_id
            r16 = r5
            long r4 = r6.volume_id
            int r6 = (r7 > r4 ? 1 : (r7 == r4 ? 0 : -1))
            if (r6 != 0) goto L_0x0259
            java.util.ArrayList<org.telegram.messenger.ImageLocation> r4 = r0.imagesArrLocations
            int r4 = r4.size()
            r10 = r4
            goto L_0x0262
        L_0x0257:
            r16 = r5
        L_0x0259:
            int r15 = r15 + 1
            r5 = r16
            r6 = -1
            r7 = 0
            goto L_0x0227
        L_0x0260:
            r16 = r5
        L_0x0262:
            int r4 = r11.dc_id
            if (r4 == 0) goto L_0x026e
            org.telegram.tgnet.TLRPC$FileLocation r5 = r13.location
            r5.dc_id = r4
            byte[] r4 = r11.file_reference
            r5.file_reference = r4
        L_0x026e:
            org.telegram.messenger.ImageLocation r4 = org.telegram.messenger.ImageLocation.getForPhoto((org.telegram.tgnet.TLRPC$PhotoSize) r13, (org.telegram.tgnet.TLRPC$Photo) r11)
            if (r14 == 0) goto L_0x0279
            org.telegram.messenger.ImageLocation r5 = org.telegram.messenger.ImageLocation.getForPhoto((org.telegram.tgnet.TLRPC$VideoSize) r14, (org.telegram.tgnet.TLRPC$Photo) r11)
            goto L_0x027a
        L_0x0279:
            r5 = r4
        L_0x027a:
            if (r4 == 0) goto L_0x02ae
            java.util.ArrayList<org.telegram.messenger.ImageLocation> r6 = r0.imagesArrLocations
            r6.add(r4)
            java.util.ArrayList<java.lang.Long> r4 = r0.imagesArrLocationsSizes
            long r6 = r5.currentSize
            java.lang.Long r6 = java.lang.Long.valueOf(r6)
            r4.add(r6)
            java.util.ArrayList<org.telegram.messenger.ImageLocation> r4 = r0.imagesArrLocationsVideo
            r4.add(r5)
            if (r3 == 0) goto L_0x02a1
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r4 = r0.imagesArrMessages
            r7 = r16
            java.lang.Object r5 = r3.get(r7)
            org.telegram.tgnet.TLRPC$Message r5 = (org.telegram.tgnet.TLRPC$Message) r5
            r4.add(r5)
            goto L_0x02a8
        L_0x02a1:
            r7 = r16
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r4 = r0.imagesArrMessages
            r4.add(r12)
        L_0x02a8:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Photo> r4 = r0.avatarsArr
            r4.add(r11)
            goto L_0x02b2
        L_0x02ae:
            r7 = r16
            goto L_0x02b2
        L_0x02b1:
            r7 = r5
        L_0x02b2:
            int r5 = r7 + 1
            r6 = -1
            r7 = 0
            r8 = 0
            goto L_0x01ed
        L_0x02ba:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Photo> r2 = r0.avatarsArr
            boolean r2 = r2.isEmpty()
            if (r2 != 0) goto L_0x02c9
            org.telegram.ui.ActionBar.ActionBarMenuItem r2 = r0.menuItem
            r3 = 6
            r2.showSubItem(r3)
            goto L_0x02cf
        L_0x02c9:
            r3 = 6
            org.telegram.ui.ActionBar.ActionBarMenuItem r2 = r0.menuItem
            r2.hideSubItem(r3)
        L_0x02cf:
            r2 = 0
            r0.needSearchImageInArr = r2
            r2 = -1
            r0.currentIndex = r2
            if (r10 == r2) goto L_0x02dc
            r0.setImageIndex(r10)
            goto L_0x0378
        L_0x02dc:
            long r2 = r0.avatarsDialogId
            r4 = 0
            int r6 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1))
            if (r6 <= 0) goto L_0x02f6
            int r2 = r0.currentAccount
            org.telegram.messenger.MessagesController r2 = org.telegram.messenger.MessagesController.getInstance(r2)
            long r3 = r0.avatarsDialogId
            java.lang.Long r3 = java.lang.Long.valueOf(r3)
            org.telegram.tgnet.TLRPC$User r2 = r2.getUser(r3)
            r3 = r12
            goto L_0x0309
        L_0x02f6:
            int r2 = r0.currentAccount
            org.telegram.messenger.MessagesController r2 = org.telegram.messenger.MessagesController.getInstance(r2)
            long r3 = r0.avatarsDialogId
            long r3 = -r3
            java.lang.Long r3 = java.lang.Long.valueOf(r3)
            org.telegram.tgnet.TLRPC$Chat r2 = r2.getChat(r3)
            r3 = r2
            r2 = r12
        L_0x0309:
            if (r2 != 0) goto L_0x030d
            if (r3 == 0) goto L_0x0378
        L_0x030d:
            if (r2 == 0) goto L_0x0315
            r4 = 0
            org.telegram.messenger.ImageLocation r2 = org.telegram.messenger.ImageLocation.getForUserOrChat(r2, r4)
            goto L_0x031a
        L_0x0315:
            r4 = 0
            org.telegram.messenger.ImageLocation r2 = org.telegram.messenger.ImageLocation.getForUserOrChat(r3, r4)
        L_0x031a:
            if (r2 == 0) goto L_0x0378
            java.util.ArrayList<org.telegram.messenger.ImageLocation> r3 = r0.imagesArrLocations
            boolean r3 = r3.isEmpty()
            if (r3 != 0) goto L_0x034d
            java.util.ArrayList<org.telegram.messenger.ImageLocation> r3 = r0.imagesArrLocations
            java.lang.Object r3 = r3.get(r4)
            org.telegram.messenger.ImageLocation r3 = (org.telegram.messenger.ImageLocation) r3
            long r5 = r3.photoId
            long r7 = r2.photoId
            int r3 = (r5 > r7 ? 1 : (r5 == r7 ? 0 : -1))
            if (r3 != 0) goto L_0x034d
            java.util.ArrayList<org.telegram.messenger.ImageLocation> r3 = r0.imagesArrLocations
            r3.remove(r4)
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Photo> r3 = r0.avatarsArr
            r3.remove(r4)
            java.util.ArrayList<java.lang.Long> r3 = r0.imagesArrLocationsSizes
            r3.remove(r4)
            java.util.ArrayList<org.telegram.messenger.ImageLocation> r3 = r0.imagesArrLocationsVideo
            r3.remove(r4)
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r3 = r0.imagesArrMessages
            r3.remove(r4)
        L_0x034d:
            java.util.ArrayList<org.telegram.messenger.ImageLocation> r3 = r0.imagesArrLocations
            r3.add(r4, r2)
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Photo> r2 = r0.avatarsArr
            org.telegram.tgnet.TLRPC$TL_photoEmpty r3 = new org.telegram.tgnet.TLRPC$TL_photoEmpty
            r3.<init>()
            r2.add(r4, r3)
            java.util.ArrayList<java.lang.Long> r2 = r0.imagesArrLocationsSizes
            org.telegram.messenger.ImageLocation r3 = r0.currentFileLocationVideo
            long r5 = r3.currentSize
            java.lang.Long r3 = java.lang.Long.valueOf(r5)
            r2.add(r4, r3)
            java.util.ArrayList<org.telegram.messenger.ImageLocation> r2 = r0.imagesArrLocationsVideo
            org.telegram.messenger.ImageLocation r3 = r0.currentFileLocationVideo
            r2.add(r4, r3)
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r2 = r0.imagesArrMessages
            r2.add(r4, r12)
            r0.setImageIndex(r4)
        L_0x0378:
            if (r1 == 0) goto L_0x0863
            int r1 = r0.currentAccount
            org.telegram.messenger.MessagesController r2 = org.telegram.messenger.MessagesController.getInstance(r1)
            long r3 = r0.avatarsDialogId
            r5 = 80
            r6 = 0
            r7 = 0
            int r8 = r0.classGuid
            r2.loadDialogPhotos(r3, r5, r6, r7, r8)
            goto L_0x0863
        L_0x038d:
            int r2 = org.telegram.messenger.NotificationCenter.mediaCountDidLoad
            if (r1 != r2) goto L_0x045e
            r2 = 0
            r1 = r23[r2]
            java.lang.Long r1 = (java.lang.Long) r1
            long r1 = r1.longValue()
            long r3 = r0.currentDialogId
            int r5 = (r1 > r3 ? 1 : (r1 == r3 ? 0 : -1))
            if (r5 == 0) goto L_0x03a6
            long r3 = r0.mergeDialogId
            int r5 = (r1 > r3 ? 1 : (r1 == r3 ? 0 : -1))
            if (r5 != 0) goto L_0x0863
        L_0x03a6:
            org.telegram.messenger.MessageObject r3 = r0.currentMessageObject
            if (r3 == 0) goto L_0x03b4
            org.telegram.tgnet.TLRPC$Message r3 = r3.messageOwner
            int r3 = org.telegram.messenger.MediaDataController.getMediaType(r3)
            int r4 = r0.sharedMediaType
            if (r3 != r4) goto L_0x0863
        L_0x03b4:
            long r3 = r0.currentDialogId
            int r5 = (r1 > r3 ? 1 : (r1 == r3 ? 0 : -1))
            if (r5 != 0) goto L_0x03c6
            r1 = 1
            r2 = r23[r1]
            java.lang.Integer r2 = (java.lang.Integer) r2
            int r2 = r2.intValue()
            r0.totalImagesCount = r2
            goto L_0x03d1
        L_0x03c6:
            r1 = 1
            r2 = r23[r1]
            java.lang.Integer r2 = (java.lang.Integer) r2
            int r2 = r2.intValue()
            r0.totalImagesCountMerge = r2
        L_0x03d1:
            boolean r2 = r0.needSearchImageInArr
            if (r2 == 0) goto L_0x03f5
            boolean r2 = r0.isFirstLoading
            if (r2 == 0) goto L_0x03f5
            r2 = 0
            r0.isFirstLoading = r2
            r0.loadingMoreImages = r1
            int r1 = r0.currentAccount
            org.telegram.messenger.MediaDataController r2 = org.telegram.messenger.MediaDataController.getInstance(r1)
            long r3 = r0.currentDialogId
            r5 = 20
            r6 = 0
            r7 = 0
            int r8 = r0.sharedMediaType
            r9 = 1
            int r10 = r0.classGuid
            r11 = 0
            r2.loadMedia(r3, r5, r6, r7, r8, r9, r10, r11)
            goto L_0x0863
        L_0x03f5:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r0.imagesArr
            boolean r1 = r1.isEmpty()
            if (r1 != 0) goto L_0x0863
            boolean r1 = r0.opennedFromMedia
            r2 = 2131627129(0x7f0e0CLASSNAME, float:1.8881514E38)
            java.lang.String r3 = "Of"
            if (r1 == 0) goto L_0x042d
            org.telegram.ui.ActionBar.ActionBar r1 = r0.actionBar
            r4 = 2
            java.lang.Object[] r4 = new java.lang.Object[r4]
            int r5 = r0.startOffset
            int r6 = r0.currentIndex
            int r5 = r5 + r6
            r6 = 1
            int r5 = r5 + r6
            java.lang.Integer r5 = java.lang.Integer.valueOf(r5)
            r7 = 0
            r4[r7] = r5
            int r5 = r0.totalImagesCount
            int r7 = r0.totalImagesCountMerge
            int r5 = r5 + r7
            java.lang.Integer r5 = java.lang.Integer.valueOf(r5)
            r4[r6] = r5
            java.lang.String r2 = org.telegram.messenger.LocaleController.formatString(r3, r2, r4)
            r1.setTitle(r2)
            goto L_0x0863
        L_0x042d:
            org.telegram.ui.ActionBar.ActionBar r1 = r0.actionBar
            r4 = 2
            java.lang.Object[] r4 = new java.lang.Object[r4]
            int r5 = r0.totalImagesCount
            int r6 = r0.totalImagesCountMerge
            int r5 = r5 + r6
            java.util.ArrayList<org.telegram.messenger.MessageObject> r6 = r0.imagesArr
            int r6 = r6.size()
            int r5 = r5 - r6
            int r6 = r0.currentIndex
            int r5 = r5 + r6
            r6 = 1
            int r5 = r5 + r6
            java.lang.Integer r5 = java.lang.Integer.valueOf(r5)
            r7 = 0
            r4[r7] = r5
            int r5 = r0.totalImagesCount
            int r7 = r0.totalImagesCountMerge
            int r5 = r5 + r7
            java.lang.Integer r5 = java.lang.Integer.valueOf(r5)
            r4[r6] = r5
            java.lang.String r2 = org.telegram.messenger.LocaleController.formatString(r3, r2, r4)
            r1.setTitle(r2)
            goto L_0x0863
        L_0x045e:
            int r2 = org.telegram.messenger.NotificationCenter.mediaDidLoad
            if (r1 != r2) goto L_0x06e2
            r2 = 0
            r1 = r23[r2]
            java.lang.Long r1 = (java.lang.Long) r1
            long r1 = r1.longValue()
            r4 = 3
            r4 = r23[r4]
            java.lang.Integer r4 = (java.lang.Integer) r4
            int r4 = r4.intValue()
            long r5 = r0.currentDialogId
            int r7 = (r1 > r5 ? 1 : (r1 == r5 ? 0 : -1))
            if (r7 == 0) goto L_0x0480
            long r7 = r0.mergeDialogId
            int r10 = (r1 > r7 ? 1 : (r1 == r7 ? 0 : -1))
            if (r10 != 0) goto L_0x0863
        L_0x0480:
            int r7 = r0.classGuid
            if (r4 != r7) goto L_0x0863
            r4 = 0
            r0.loadingMoreImages = r4
            int r4 = (r1 > r5 ? 1 : (r1 == r5 ? 0 : -1))
            if (r4 != 0) goto L_0x048d
            r1 = 0
            goto L_0x048e
        L_0x048d:
            r1 = 1
        L_0x048e:
            r2 = 2
            r4 = r23[r2]
            java.util.ArrayList r4 = (java.util.ArrayList) r4
            boolean[] r2 = r0.endReached
            r3 = r23[r3]
            java.lang.Boolean r3 = (java.lang.Boolean) r3
            boolean r3 = r3.booleanValue()
            r2[r1] = r3
            r2 = 6
            r2 = r23[r2]
            java.lang.Boolean r2 = (java.lang.Boolean) r2
            boolean r2 = r2.booleanValue()
            boolean r3 = r0.needSearchImageInArr
            if (r3 == 0) goto L_0x0650
            boolean r2 = r4.isEmpty()
            if (r2 == 0) goto L_0x04bc
            if (r1 != 0) goto L_0x064c
            long r2 = r0.mergeDialogId
            r5 = 0
            int r7 = (r2 > r5 ? 1 : (r2 == r5 ? 0 : -1))
            if (r7 == 0) goto L_0x064c
        L_0x04bc:
            int r2 = r0.currentIndex
            if (r2 < 0) goto L_0x064c
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r0.imagesArr
            int r3 = r3.size()
            if (r2 < r3) goto L_0x04ca
            goto L_0x064c
        L_0x04ca:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r0.imagesArr
            int r3 = r0.currentIndex
            java.lang.Object r2 = r2.get(r3)
            org.telegram.messenger.MessageObject r2 = (org.telegram.messenger.MessageObject) r2
            r3 = -1
            r5 = 0
            r6 = 0
        L_0x04d7:
            int r7 = r4.size()
            if (r5 >= r7) goto L_0x052d
            java.lang.Object r7 = r4.get(r5)
            org.telegram.messenger.MessageObject r7 = (org.telegram.messenger.MessageObject) r7
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r8 = r0.imagesByIdsTemp
            r8 = r8[r1]
            int r9 = r7.getId()
            int r8 = r8.indexOfKey(r9)
            if (r8 >= 0) goto L_0x052a
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r8 = r0.imagesByIdsTemp
            r8 = r8[r1]
            int r9 = r7.getId()
            r8.put(r9, r7)
            boolean r8 = r0.opennedFromMedia
            if (r8 == 0) goto L_0x0513
            java.util.ArrayList<org.telegram.messenger.MessageObject> r8 = r0.imagesArrTemp
            r8.add(r7)
            int r7 = r7.getId()
            int r8 = r2.getId()
            if (r7 != r8) goto L_0x0510
            r3 = r6
        L_0x0510:
            int r6 = r6 + 1
            goto L_0x052a
        L_0x0513:
            int r6 = r6 + 1
            java.util.ArrayList<org.telegram.messenger.MessageObject> r8 = r0.imagesArrTemp
            r9 = 0
            r8.add(r9, r7)
            int r7 = r7.getId()
            int r8 = r2.getId()
            if (r7 != r8) goto L_0x052a
            int r3 = r4.size()
            int r3 = r3 - r6
        L_0x052a:
            int r5 = r5 + 1
            goto L_0x04d7
        L_0x052d:
            if (r6 != 0) goto L_0x0544
            if (r1 != 0) goto L_0x0539
            long r4 = r0.mergeDialogId
            r6 = 0
            int r2 = (r4 > r6 ? 1 : (r4 == r6 ? 0 : -1))
            if (r2 != 0) goto L_0x0544
        L_0x0539:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r0.imagesArr
            int r2 = r2.size()
            r0.totalImagesCount = r2
            r2 = 0
            r0.totalImagesCountMerge = r2
        L_0x0544:
            r2 = -1
            if (r3 == r2) goto L_0x058e
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r0.imagesArr
            r1.clear()
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r0.imagesArr
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r0.imagesArrTemp
            r1.addAll(r2)
            r1 = 0
        L_0x0554:
            r2 = 2
            if (r1 >= r2) goto L_0x056d
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r2 = r0.imagesByIds
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r4 = r0.imagesByIdsTemp
            r4 = r4[r1]
            android.util.SparseArray r4 = r4.clone()
            r2[r1] = r4
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r2 = r0.imagesByIdsTemp
            r2 = r2[r1]
            r2.clear()
            int r1 = r1 + 1
            goto L_0x0554
        L_0x056d:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r0.imagesArrTemp
            r1.clear()
            r1 = 0
            r0.needSearchImageInArr = r1
            r1 = -1
            r0.currentIndex = r1
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r0.imagesArr
            int r1 = r1.size()
            if (r3 < r1) goto L_0x0589
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r0.imagesArr
            int r1 = r1.size()
            r2 = 1
            int r3 = r1 + -1
        L_0x0589:
            r0.setImageIndex(r3)
            goto L_0x0863
        L_0x058e:
            boolean r2 = r0.opennedFromMedia
            if (r2 == 0) goto L_0x05df
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r0.imagesArrTemp
            boolean r2 = r2.isEmpty()
            if (r2 == 0) goto L_0x059c
            r2 = 0
            goto L_0x05ae
        L_0x059c:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r0.imagesArrTemp
            int r3 = r2.size()
            r4 = 1
            int r3 = r3 - r4
            java.lang.Object r2 = r2.get(r3)
            org.telegram.messenger.MessageObject r2 = (org.telegram.messenger.MessageObject) r2
            int r2 = r2.getId()
        L_0x05ae:
            if (r1 != 0) goto L_0x0627
            boolean[] r3 = r0.endReached
            boolean r3 = r3[r1]
            if (r3 == 0) goto L_0x0627
            long r3 = r0.mergeDialogId
            r5 = 0
            int r7 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1))
            if (r7 == 0) goto L_0x0627
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r0.imagesArrTemp
            boolean r1 = r1.isEmpty()
            if (r1 != 0) goto L_0x0624
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r0.imagesArrTemp
            int r3 = r1.size()
            r4 = 1
            int r3 = r3 - r4
            java.lang.Object r1 = r1.get(r3)
            org.telegram.messenger.MessageObject r1 = (org.telegram.messenger.MessageObject) r1
            long r3 = r1.getDialogId()
            long r5 = r0.mergeDialogId
            int r1 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1))
            if (r1 == 0) goto L_0x0624
            goto L_0x0621
        L_0x05df:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r0.imagesArrTemp
            boolean r2 = r2.isEmpty()
            if (r2 == 0) goto L_0x05e9
            r2 = 0
            goto L_0x05f6
        L_0x05e9:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r0.imagesArrTemp
            r3 = 0
            java.lang.Object r2 = r2.get(r3)
            org.telegram.messenger.MessageObject r2 = (org.telegram.messenger.MessageObject) r2
            int r2 = r2.getId()
        L_0x05f6:
            if (r1 != 0) goto L_0x0627
            boolean[] r3 = r0.endReached
            boolean r3 = r3[r1]
            if (r3 == 0) goto L_0x0627
            long r3 = r0.mergeDialogId
            r5 = 0
            int r7 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1))
            if (r7 == 0) goto L_0x0627
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r0.imagesArrTemp
            boolean r1 = r1.isEmpty()
            if (r1 != 0) goto L_0x0624
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r0.imagesArrTemp
            r3 = 0
            java.lang.Object r1 = r1.get(r3)
            org.telegram.messenger.MessageObject r1 = (org.telegram.messenger.MessageObject) r1
            long r3 = r1.getDialogId()
            long r5 = r0.mergeDialogId
            int r1 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1))
            if (r1 == 0) goto L_0x0624
        L_0x0621:
            r1 = 1
            r6 = 0
            goto L_0x0628
        L_0x0624:
            r6 = r2
            r1 = 1
            goto L_0x0628
        L_0x0627:
            r6 = r2
        L_0x0628:
            boolean[] r2 = r0.endReached
            boolean r2 = r2[r1]
            if (r2 != 0) goto L_0x0863
            r2 = 1
            r0.loadingMoreImages = r2
            int r2 = r0.currentAccount
            org.telegram.messenger.MediaDataController r2 = org.telegram.messenger.MediaDataController.getInstance(r2)
            if (r1 != 0) goto L_0x063c
            long r3 = r0.currentDialogId
            goto L_0x063e
        L_0x063c:
            long r3 = r0.mergeDialogId
        L_0x063e:
            r5 = 40
            r7 = 0
            int r8 = r0.sharedMediaType
            r9 = 1
            int r10 = r0.classGuid
            r11 = 0
            r2.loadMedia(r3, r5, r6, r7, r8, r9, r10, r11)
            goto L_0x0863
        L_0x064c:
            r1 = 0
            r0.needSearchImageInArr = r1
            return
        L_0x0650:
            r3 = 0
            r5 = 0
        L_0x0652:
            int r6 = r4.size()
            if (r3 >= r6) goto L_0x06b0
            if (r2 == 0) goto L_0x0662
            int r6 = r4.size()
            r7 = 1
            int r6 = r6 - r7
            int r6 = r6 - r3
            goto L_0x0663
        L_0x0662:
            r6 = r3
        L_0x0663:
            java.lang.Object r6 = r4.get(r6)
            org.telegram.messenger.MessageObject r6 = (org.telegram.messenger.MessageObject) r6
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r7 = r0.imagesByIds
            r7 = r7[r1]
            int r8 = r6.getId()
            int r7 = r7.indexOfKey(r8)
            if (r7 >= 0) goto L_0x06ad
            int r5 = r5 + 1
            boolean r7 = r0.opennedFromMedia
            if (r7 == 0) goto L_0x069c
            if (r2 == 0) goto L_0x0695
            java.util.ArrayList<org.telegram.messenger.MessageObject> r7 = r0.imagesArr
            r8 = 0
            r7.add(r8, r6)
            int r7 = r0.startOffset
            r9 = 1
            int r7 = r7 - r9
            r0.startOffset = r7
            int r10 = r0.currentIndex
            int r10 = r10 + r9
            r0.currentIndex = r10
            if (r7 >= 0) goto L_0x06a2
            r0.startOffset = r8
            goto L_0x06a2
        L_0x0695:
            r8 = 0
            java.util.ArrayList<org.telegram.messenger.MessageObject> r7 = r0.imagesArr
            r7.add(r6)
            goto L_0x06a2
        L_0x069c:
            r8 = 0
            java.util.ArrayList<org.telegram.messenger.MessageObject> r7 = r0.imagesArr
            r7.add(r8, r6)
        L_0x06a2:
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r7 = r0.imagesByIds
            r7 = r7[r1]
            int r8 = r6.getId()
            r7.put(r8, r6)
        L_0x06ad:
            int r3 = r3 + 1
            goto L_0x0652
        L_0x06b0:
            boolean r1 = r0.opennedFromMedia
            if (r1 == 0) goto L_0x06c8
            if (r5 != 0) goto L_0x0863
            if (r2 != 0) goto L_0x0863
            int r1 = r0.startOffset
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r0.imagesArr
            int r2 = r2.size()
            int r1 = r1 + r2
            r0.totalImagesCount = r1
            r1 = 0
            r0.totalImagesCountMerge = r1
            goto L_0x0863
        L_0x06c8:
            if (r5 == 0) goto L_0x06d5
            int r1 = r0.currentIndex
            r2 = -1
            r0.currentIndex = r2
            int r1 = r1 + r5
            r0.setImageIndex(r1)
            goto L_0x0863
        L_0x06d5:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r0.imagesArr
            int r1 = r1.size()
            r0.totalImagesCount = r1
            r1 = 0
            r0.totalImagesCountMerge = r1
            goto L_0x0863
        L_0x06e2:
            int r2 = org.telegram.messenger.NotificationCenter.emojiLoaded
            if (r1 != r2) goto L_0x06ef
            org.telegram.ui.PhotoViewer$CaptionTextViewSwitcher r1 = r0.captionTextViewSwitcher
            if (r1 == 0) goto L_0x0863
            r1.invalidateViews()
            goto L_0x0863
        L_0x06ef:
            int r2 = org.telegram.messenger.NotificationCenter.filePreparingFailed
            if (r1 != r2) goto L_0x0732
            r2 = 0
            r1 = r23[r2]
            org.telegram.messenger.MessageObject r1 = (org.telegram.messenger.MessageObject) r1
            boolean r3 = r0.loadInitialVideo
            if (r3 == 0) goto L_0x070e
            r0.loadInitialVideo = r2
            org.telegram.ui.Components.RadialProgressView r1 = r0.progressView
            r1.setVisibility(r5)
            android.net.Uri r1 = r0.currentPlayingVideoFile
            org.telegram.ui.PhotoViewer$EditState r3 = r0.editState
            org.telegram.messenger.MediaController$SavedFilterState r3 = r3.savedFilterState
            r0.preparePlayer(r1, r2, r2, r3)
            goto L_0x0863
        L_0x070e:
            boolean r3 = r0.tryStartRequestPreviewOnFinish
            if (r3 == 0) goto L_0x0725
            r0.releasePlayer(r2)
            org.telegram.messenger.MediaController r1 = org.telegram.messenger.MediaController.getInstance()
            org.telegram.messenger.MessageObject r2 = r0.videoPreviewMessageObject
            r3 = 1
            boolean r1 = r1.scheduleVideoConvert(r2, r3)
            r1 = r1 ^ r3
            r0.tryStartRequestPreviewOnFinish = r1
            goto L_0x0863
        L_0x0725:
            org.telegram.messenger.MessageObject r3 = r0.videoPreviewMessageObject
            if (r1 != r3) goto L_0x0863
            r0.requestingPreview = r2
            org.telegram.ui.Components.RadialProgressView r1 = r0.progressView
            r1.setVisibility(r5)
            goto L_0x0863
        L_0x0732:
            r2 = 0
            int r3 = org.telegram.messenger.NotificationCenter.fileNewChunkAvailable
            if (r1 != r3) goto L_0x0788
            r1 = r23[r2]
            org.telegram.messenger.MessageObject r1 = (org.telegram.messenger.MessageObject) r1
            org.telegram.messenger.MessageObject r2 = r0.videoPreviewMessageObject
            if (r1 != r2) goto L_0x0863
            r1 = 1
            r2 = r23[r1]
            java.lang.String r2 = (java.lang.String) r2
            r3 = 3
            r4 = r23[r3]
            java.lang.Long r4 = (java.lang.Long) r4
            long r3 = r4.longValue()
            r5 = r23[r5]
            java.lang.Float r5 = (java.lang.Float) r5
            float r5 = r5.floatValue()
            org.telegram.ui.PhotoViewer$PhotoProgressView[] r6 = r0.photoProgressViews
            r7 = 0
            r6 = r6[r7]
            r6.setProgress(r5, r1)
            r5 = 0
            int r8 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1))
            if (r8 == 0) goto L_0x0863
            r0.requestingPreview = r7
            org.telegram.ui.PhotoViewer$PhotoProgressView[] r3 = r0.photoProgressViews
            r3 = r3[r7]
            r4 = 1065353216(0x3var_, float:1.0)
            r3.setProgress(r4, r1)
            org.telegram.ui.PhotoViewer$PhotoProgressView[] r3 = r0.photoProgressViews
            r3 = r3[r7]
            r4 = 3
            r3.setBackgroundState(r4, r1, r1)
            java.io.File r3 = new java.io.File
            r3.<init>(r2)
            android.net.Uri r2 = android.net.Uri.fromFile(r3)
            org.telegram.ui.PhotoViewer$EditState r3 = r0.editState
            org.telegram.messenger.MediaController$SavedFilterState r3 = r3.savedFilterState
            r0.preparePlayer(r2, r7, r1, r3)
            goto L_0x0863
        L_0x0788:
            int r2 = org.telegram.messenger.NotificationCenter.messagesDeleted
            if (r1 != r2) goto L_0x0863
            r1 = 2
            r2 = r23[r1]
            java.lang.Boolean r2 = (java.lang.Boolean) r2
            boolean r2 = r2.booleanValue()
            if (r2 == 0) goto L_0x0798
            return
        L_0x0798:
            r2 = 1
            r3 = r23[r2]
            java.lang.Long r3 = (java.lang.Long) r3
            long r2 = r3.longValue()
            r4 = 0
            r5 = r23[r4]
            java.util.ArrayList r5 = (java.util.ArrayList) r5
            r4 = 0
            r6 = 0
            r7 = 0
        L_0x07a9:
            if (r4 >= r1) goto L_0x0831
            if (r4 != 0) goto L_0x07b0
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r0.imagesArr
            goto L_0x07b2
        L_0x07b0:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r0.imagesArrTemp
        L_0x07b2:
            if (r4 != 0) goto L_0x07b7
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r8 = r0.imagesByIds
            goto L_0x07b9
        L_0x07b7:
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r8 = r0.imagesByIdsTemp
        L_0x07b9:
            boolean r9 = r1.isEmpty()
            if (r9 != 0) goto L_0x082b
            r9 = r7
            r10 = 2
            r7 = r6
            r6 = 0
        L_0x07c3:
            if (r6 >= r10) goto L_0x0828
            r11 = r8[r6]
            int r11 = r11.size()
            if (r11 <= 0) goto L_0x0825
            r11 = r8[r6]
            r12 = 0
            java.lang.Object r11 = r11.valueAt(r12)
            org.telegram.messenger.MessageObject r11 = (org.telegram.messenger.MessageObject) r11
            org.telegram.tgnet.TLRPC$Message r11 = r11.messageOwner
            org.telegram.tgnet.TLRPC$Peer r11 = r11.peer_id
            long r11 = r11.channel_id
            int r13 = (r11 > r2 ? 1 : (r11 == r2 ? 0 : -1))
            if (r13 != 0) goto L_0x0825
            int r11 = r5.size()
            r12 = 0
        L_0x07e5:
            if (r12 >= r11) goto L_0x0825
            java.lang.Object r13 = r5.get(r12)
            java.lang.Integer r13 = (java.lang.Integer) r13
            int r13 = r13.intValue()
            r14 = r8[r6]
            java.lang.Object r15 = r5.get(r12)
            java.lang.Integer r15 = (java.lang.Integer) r15
            int r15 = r15.intValue()
            java.lang.Object r14 = r14.get(r15)
            org.telegram.messenger.MessageObject r14 = (org.telegram.messenger.MessageObject) r14
            if (r14 == 0) goto L_0x0822
            r7 = r8[r6]
            r7.remove(r13)
            r1.remove(r14)
            if (r6 != 0) goto L_0x0816
            int r7 = r0.totalImagesCount
            r13 = 1
            int r7 = r7 - r13
            r0.totalImagesCount = r7
            goto L_0x081c
        L_0x0816:
            r13 = 1
            int r7 = r0.totalImagesCountMerge
            int r7 = r7 - r13
            r0.totalImagesCountMerge = r7
        L_0x081c:
            org.telegram.messenger.MessageObject r7 = r0.currentMessageObject
            if (r14 != r7) goto L_0x0821
            r9 = 1
        L_0x0821:
            r7 = 1
        L_0x0822:
            int r12 = r12 + 1
            goto L_0x07e5
        L_0x0825:
            int r6 = r6 + 1
            goto L_0x07c3
        L_0x0828:
            r6 = r7
            r7 = r9
            goto L_0x082c
        L_0x082b:
            r10 = 2
        L_0x082c:
            int r4 = r4 + 1
            r1 = 2
            goto L_0x07a9
        L_0x0831:
            if (r6 == 0) goto L_0x0863
            if (r7 == 0) goto L_0x083d
            org.telegram.ui.PhotoViewer r1 = PipInstance
            if (r0 != r1) goto L_0x083d
            r20.destroyPhotoViewer()
            goto L_0x0863
        L_0x083d:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r0.imagesArr
            boolean r1 = r1.isEmpty()
            if (r1 != 0) goto L_0x085e
            int r1 = r0.currentIndex
            r2 = -1
            r0.currentIndex = r2
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r0.imagesArr
            int r2 = r2.size()
            if (r1 < r2) goto L_0x085a
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r0.imagesArr
            int r1 = r1.size()
            r2 = 1
            int r1 = r1 - r2
        L_0x085a:
            r0.setImageIndex(r1)
            goto L_0x0863
        L_0x085e:
            r1 = 0
            r2 = 1
            r0.closePhoto(r1, r2)
        L_0x0863:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.didReceivedNotification(int, int, java.lang.Object[]):void");
    }

    /* access modifiers changed from: private */
    public void showDownloadAlert() {
        AlertDialog.Builder builder = new AlertDialog.Builder(this.parentActivity, this.resourcesProvider);
        builder.setTitle(LocaleController.getString("AppName", NUM));
        builder.setPositiveButton(LocaleController.getString("OK", NUM), (DialogInterface.OnClickListener) null);
        MessageObject messageObject = this.currentMessageObject;
        boolean z = false;
        if (messageObject != null && messageObject.isVideo() && FileLoader.getInstance(this.currentMessageObject.currentAccount).isLoadingFile(this.currentFileNames[0])) {
            z = true;
        }
        if (z) {
            builder.setMessage(LocaleController.getString("PleaseStreamDownload", NUM));
        } else {
            builder.setMessage(LocaleController.getString("PleaseDownload", NUM));
        }
        showAlertDialog(builder);
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Can't wrap try/catch for region: R(4:41|42|43|44) */
    /* JADX WARNING: Missing exception handler attribute for start block: B:43:0x00b9 */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void onSharePressed() {
        /*
            r10 = this;
            android.app.Activity r0 = r10.parentActivity
            if (r0 == 0) goto L_0x00e5
            boolean r0 = r10.allowShare
            if (r0 != 0) goto L_0x000a
            goto L_0x00e5
        L_0x000a:
            org.telegram.messenger.MessageObject r0 = r10.currentMessageObject     // Catch:{ Exception -> 0x00e1 }
            r1 = 1
            r2 = 0
            r3 = 0
            if (r0 == 0) goto L_0x0045
            boolean r2 = r0.isVideo()     // Catch:{ Exception -> 0x00e1 }
            org.telegram.messenger.MessageObject r0 = r10.currentMessageObject     // Catch:{ Exception -> 0x00e1 }
            org.telegram.tgnet.TLRPC$Message r0 = r0.messageOwner     // Catch:{ Exception -> 0x00e1 }
            java.lang.String r0 = r0.attachPath     // Catch:{ Exception -> 0x00e1 }
            boolean r0 = android.text.TextUtils.isEmpty(r0)     // Catch:{ Exception -> 0x00e1 }
            if (r0 != 0) goto L_0x0034
            java.io.File r0 = new java.io.File     // Catch:{ Exception -> 0x00e1 }
            org.telegram.messenger.MessageObject r4 = r10.currentMessageObject     // Catch:{ Exception -> 0x00e1 }
            org.telegram.tgnet.TLRPC$Message r4 = r4.messageOwner     // Catch:{ Exception -> 0x00e1 }
            java.lang.String r4 = r4.attachPath     // Catch:{ Exception -> 0x00e1 }
            r0.<init>(r4)     // Catch:{ Exception -> 0x00e1 }
            boolean r4 = r0.exists()     // Catch:{ Exception -> 0x00e1 }
            if (r4 != 0) goto L_0x0033
            goto L_0x0034
        L_0x0033:
            r3 = r0
        L_0x0034:
            if (r3 != 0) goto L_0x007a
            int r0 = r10.currentAccount     // Catch:{ Exception -> 0x00e1 }
            org.telegram.messenger.FileLoader r0 = org.telegram.messenger.FileLoader.getInstance(r0)     // Catch:{ Exception -> 0x00e1 }
            org.telegram.messenger.MessageObject r3 = r10.currentMessageObject     // Catch:{ Exception -> 0x00e1 }
            org.telegram.tgnet.TLRPC$Message r3 = r3.messageOwner     // Catch:{ Exception -> 0x00e1 }
            java.io.File r3 = r0.getPathToMessage(r3)     // Catch:{ Exception -> 0x00e1 }
            goto L_0x007a
        L_0x0045:
            org.telegram.messenger.ImageLocation r0 = r10.currentFileLocationVideo     // Catch:{ Exception -> 0x00e1 }
            if (r0 == 0) goto L_0x0070
            int r0 = r10.currentAccount     // Catch:{ Exception -> 0x00e1 }
            org.telegram.messenger.FileLoader r0 = org.telegram.messenger.FileLoader.getInstance(r0)     // Catch:{ Exception -> 0x00e1 }
            org.telegram.messenger.ImageLocation r3 = r10.currentFileLocationVideo     // Catch:{ Exception -> 0x00e1 }
            org.telegram.tgnet.TLRPC$FileLocation r3 = getFileLocation(r3)     // Catch:{ Exception -> 0x00e1 }
            org.telegram.messenger.ImageLocation r4 = r10.currentFileLocationVideo     // Catch:{ Exception -> 0x00e1 }
            java.lang.String r4 = getFileLocationExt(r4)     // Catch:{ Exception -> 0x00e1 }
            long r5 = r10.avatarsDialogId     // Catch:{ Exception -> 0x00e1 }
            r7 = 0
            int r9 = (r5 > r7 ? 1 : (r5 == r7 ? 0 : -1))
            if (r9 != 0) goto L_0x006a
            boolean r5 = r10.isEvent     // Catch:{ Exception -> 0x00e1 }
            if (r5 == 0) goto L_0x0068
            goto L_0x006a
        L_0x0068:
            r5 = 0
            goto L_0x006b
        L_0x006a:
            r5 = 1
        L_0x006b:
            java.io.File r3 = r0.getPathToAttach(r3, r4, r5)     // Catch:{ Exception -> 0x00e1 }
            goto L_0x007a
        L_0x0070:
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r0 = r10.pageBlocksAdapter     // Catch:{ Exception -> 0x00e1 }
            if (r0 == 0) goto L_0x007a
            int r3 = r10.currentIndex     // Catch:{ Exception -> 0x00e1 }
            java.io.File r3 = r0.getFile(r3)     // Catch:{ Exception -> 0x00e1 }
        L_0x007a:
            if (r3 == 0) goto L_0x00dd
            boolean r0 = r3.exists()     // Catch:{ Exception -> 0x00e1 }
            if (r0 == 0) goto L_0x00dd
            android.content.Intent r0 = new android.content.Intent     // Catch:{ Exception -> 0x00e1 }
            java.lang.String r4 = "android.intent.action.SEND"
            r0.<init>(r4)     // Catch:{ Exception -> 0x00e1 }
            if (r2 == 0) goto L_0x0091
            java.lang.String r2 = "video/mp4"
            r0.setType(r2)     // Catch:{ Exception -> 0x00e1 }
            goto L_0x00a2
        L_0x0091:
            org.telegram.messenger.MessageObject r2 = r10.currentMessageObject     // Catch:{ Exception -> 0x00e1 }
            if (r2 == 0) goto L_0x009d
            java.lang.String r2 = r2.getMimeType()     // Catch:{ Exception -> 0x00e1 }
            r0.setType(r2)     // Catch:{ Exception -> 0x00e1 }
            goto L_0x00a2
        L_0x009d:
            java.lang.String r2 = "image/jpeg"
            r0.setType(r2)     // Catch:{ Exception -> 0x00e1 }
        L_0x00a2:
            int r2 = android.os.Build.VERSION.SDK_INT     // Catch:{ Exception -> 0x00e1 }
            r4 = 24
            java.lang.String r5 = "android.intent.extra.STREAM"
            if (r2 < r4) goto L_0x00c1
            android.app.Activity r2 = r10.parentActivity     // Catch:{ Exception -> 0x00b9 }
            java.lang.String r4 = "org.telegram.messenger.beta.provider"
            android.net.Uri r2 = androidx.core.content.FileProvider.getUriForFile(r2, r4, r3)     // Catch:{ Exception -> 0x00b9 }
            r0.putExtra(r5, r2)     // Catch:{ Exception -> 0x00b9 }
            r0.setFlags(r1)     // Catch:{ Exception -> 0x00b9 }
            goto L_0x00c8
        L_0x00b9:
            android.net.Uri r1 = android.net.Uri.fromFile(r3)     // Catch:{ Exception -> 0x00e1 }
            r0.putExtra(r5, r1)     // Catch:{ Exception -> 0x00e1 }
            goto L_0x00c8
        L_0x00c1:
            android.net.Uri r1 = android.net.Uri.fromFile(r3)     // Catch:{ Exception -> 0x00e1 }
            r0.putExtra(r5, r1)     // Catch:{ Exception -> 0x00e1 }
        L_0x00c8:
            android.app.Activity r1 = r10.parentActivity     // Catch:{ Exception -> 0x00e1 }
            java.lang.String r2 = "ShareFile"
            r3 = 2131628337(0x7f0e1131, float:1.8883964E38)
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r2, r3)     // Catch:{ Exception -> 0x00e1 }
            android.content.Intent r0 = android.content.Intent.createChooser(r0, r2)     // Catch:{ Exception -> 0x00e1 }
            r2 = 500(0x1f4, float:7.0E-43)
            r1.startActivityForResult(r0, r2)     // Catch:{ Exception -> 0x00e1 }
            goto L_0x00e5
        L_0x00dd:
            r10.showDownloadAlert()     // Catch:{ Exception -> 0x00e1 }
            goto L_0x00e5
        L_0x00e1:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x00e5:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.onSharePressed():void");
    }

    /* access modifiers changed from: private */
    public void setScaleToFill() {
        float bitmapWidth = (float) this.centerImage.getBitmapWidth();
        float bitmapHeight = (float) this.centerImage.getBitmapHeight();
        if (bitmapWidth != 0.0f && bitmapHeight != 0.0f) {
            float containerViewWidth = (float) getContainerViewWidth();
            float containerViewHeight = (float) getContainerViewHeight();
            float min = Math.min(containerViewHeight / bitmapHeight, containerViewWidth / bitmapWidth);
            float max = Math.max(containerViewWidth / ((float) ((int) (bitmapWidth * min))), containerViewHeight / ((float) ((int) (bitmapHeight * min))));
            this.scale = max;
            updateMinMax(max);
        }
    }

    public void setParentAlert(ChatAttachAlert chatAttachAlert) {
        this.parentAlert = chatAttachAlert;
    }

    public void setParentActivity(Activity activity) {
        setParentActivity(activity, (Theme.ResourcesProvider) null);
    }

    public void setParentActivity(Activity activity, Theme.ResourcesProvider resourcesProvider2) {
        String str;
        Activity activity2 = activity;
        final Theme.ResourcesProvider resourcesProvider3 = resourcesProvider2;
        Theme.createChatResources(activity2, false);
        this.resourcesProvider = resourcesProvider3;
        int i = UserConfig.selectedAccount;
        this.currentAccount = i;
        this.centerImage.setCurrentAccount(i);
        this.leftImage.setCurrentAccount(this.currentAccount);
        this.rightImage.setCurrentAccount(this.currentAccount);
        PhotoViewerCaptionEnterView photoViewerCaptionEnterView = this.captionEditText;
        if (photoViewerCaptionEnterView != null) {
            photoViewerCaptionEnterView.currentAccount = UserConfig.selectedAccount;
        }
        if (this.parentActivity == activity2 || activity2 == null) {
            updateColors();
            return;
        }
        this.inBubbleMode = activity2 instanceof BubbleActivity;
        this.parentActivity = activity2;
        this.activityContext = new ContextThemeWrapper(this.parentActivity, NUM);
        this.touchSlop = ViewConfiguration.get(this.parentActivity).getScaledTouchSlop();
        if (progressDrawables == null) {
            progressDrawables = new Drawable[]{ContextCompat.getDrawable(this.parentActivity, NUM), ContextCompat.getDrawable(this.parentActivity, NUM), ContextCompat.getDrawable(this.parentActivity, NUM)};
        }
        this.scroller = new Scroller(activity2);
        AnonymousClass10 r1 = new FrameLayout(activity2) {
            public boolean onInterceptTouchEvent(MotionEvent motionEvent) {
                return PhotoViewer.this.isVisible && super.onInterceptTouchEvent(motionEvent);
            }

            public boolean onTouchEvent(MotionEvent motionEvent) {
                return PhotoViewer.this.isVisible && PhotoViewer.this.onTouchEvent(motionEvent);
            }

            public boolean dispatchKeyEvent(KeyEvent keyEvent) {
                keyEvent.getKeyCode();
                if (!PhotoViewer.this.muteVideo && PhotoViewer.this.sendPhotoType != 1 && PhotoViewer.this.isCurrentVideo && PhotoViewer.this.videoPlayer != null && keyEvent.getRepeatCount() == 0 && keyEvent.getAction() == 0 && (keyEvent.getKeyCode() == 24 || keyEvent.getKeyCode() == 25)) {
                    PhotoViewer.this.videoPlayer.setVolume(1.0f);
                }
                return super.dispatchKeyEvent(keyEvent);
            }

            /* JADX WARNING: Code restructure failed: missing block: B:13:0x0020, code lost:
                if (r0 != 6) goto L_0x0032;
             */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public boolean dispatchTouchEvent(android.view.MotionEvent r3) {
                /*
                    r2 = this;
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    boolean r0 = r0.videoPlayerControlVisible
                    if (r0 == 0) goto L_0x0032
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    boolean r0 = r0.isPlaying
                    if (r0 == 0) goto L_0x0032
                    int r0 = r3.getActionMasked()
                    if (r0 == 0) goto L_0x0029
                    r1 = 1
                    if (r0 == r1) goto L_0x0023
                    r1 = 3
                    if (r0 == r1) goto L_0x0023
                    r1 = 5
                    if (r0 == r1) goto L_0x0029
                    r1 = 6
                    if (r0 == r1) goto L_0x0023
                    goto L_0x0032
                L_0x0023:
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    r0.scheduleActionBarHide()
                    goto L_0x0032
                L_0x0029:
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    java.lang.Runnable r0 = r0.hideActionBarRunnable
                    org.telegram.messenger.AndroidUtilities.cancelRunOnUIThread(r0)
                L_0x0032:
                    boolean r3 = super.dispatchTouchEvent(r3)
                    return r3
                */
                throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.AnonymousClass10.dispatchTouchEvent(android.view.MotionEvent):boolean");
            }

            /* access modifiers changed from: protected */
            public boolean drawChild(Canvas canvas, View view, long j) {
                try {
                    return super.drawChild(canvas, view, j);
                } catch (Throwable unused) {
                    return false;
                }
            }

            /* access modifiers changed from: protected */
            public void onMeasure(int i, int i2) {
                int i3;
                int stableInsetBottom;
                int size = View.MeasureSpec.getSize(i);
                int size2 = View.MeasureSpec.getSize(i2);
                if (Build.VERSION.SDK_INT < 21 || PhotoViewer.this.lastInsets == null) {
                    int i4 = AndroidUtilities.displaySize.y;
                    if (size2 > i4) {
                        size2 = i4;
                    }
                } else {
                    WindowInsets windowInsets = (WindowInsets) PhotoViewer.this.lastInsets;
                    if (!PhotoViewer.this.inBubbleMode) {
                        if (AndroidUtilities.incorrectDisplaySizeFix) {
                            int i5 = AndroidUtilities.displaySize.y;
                            if (size2 > i5) {
                                size2 = i5;
                            }
                            size2 += AndroidUtilities.statusBarHeight;
                        } else if (windowInsets.getStableInsetBottom() >= 0 && (i3 = AndroidUtilities.statusBarHeight) >= 0 && (stableInsetBottom = (size2 - i3) - windowInsets.getStableInsetBottom()) > 0 && stableInsetBottom < 4096) {
                            AndroidUtilities.displaySize.y = stableInsetBottom;
                        }
                    }
                    int systemWindowInsetBottom = windowInsets.getSystemWindowInsetBottom();
                    if (PhotoViewer.this.captionEditText.isPopupShowing()) {
                        systemWindowInsetBottom -= PhotoViewer.this.containerView.getKeyboardHeight();
                    }
                    size2 -= systemWindowInsetBottom;
                }
                int paddingLeft = size - (getPaddingLeft() + getPaddingRight());
                int paddingBottom = size2 - getPaddingBottom();
                setMeasuredDimension(paddingLeft, paddingBottom);
                ViewGroup.LayoutParams layoutParams = PhotoViewer.this.animatingImageView.getLayoutParams();
                PhotoViewer.this.animatingImageView.measure(View.MeasureSpec.makeMeasureSpec(layoutParams.width, Integer.MIN_VALUE), View.MeasureSpec.makeMeasureSpec(layoutParams.height, Integer.MIN_VALUE));
                PhotoViewer.this.containerView.measure(View.MeasureSpec.makeMeasureSpec(paddingLeft, NUM), View.MeasureSpec.makeMeasureSpec(paddingBottom, NUM));
                PhotoViewer.this.navigationBar.measure(View.MeasureSpec.makeMeasureSpec(paddingLeft, NUM), View.MeasureSpec.makeMeasureSpec(PhotoViewer.this.navigationBarHeight, NUM));
            }

            /* access modifiers changed from: protected */
            public void onLayout(boolean z, int i, int i2, int i3, int i4) {
                PhotoViewer.this.animatingImageView.layout(getPaddingLeft(), 0, getPaddingLeft() + PhotoViewer.this.animatingImageView.getMeasuredWidth(), PhotoViewer.this.animatingImageView.getMeasuredHeight());
                PhotoViewer.this.containerView.layout(getPaddingLeft(), 0, getPaddingLeft() + PhotoViewer.this.containerView.getMeasuredWidth(), PhotoViewer.this.containerView.getMeasuredHeight());
                PhotoViewer.this.navigationBar.layout(getPaddingLeft(), PhotoViewer.this.containerView.getMeasuredHeight(), PhotoViewer.this.navigationBar.getMeasuredWidth(), PhotoViewer.this.containerView.getMeasuredHeight() + PhotoViewer.this.navigationBar.getMeasuredHeight());
                boolean unused = PhotoViewer.this.wasLayout = true;
                if (z) {
                    if (!PhotoViewer.this.dontResetZoomOnFirstLayout) {
                        float unused2 = PhotoViewer.this.scale = 1.0f;
                        float unused3 = PhotoViewer.this.translationX = 0.0f;
                        float unused4 = PhotoViewer.this.translationY = 0.0f;
                        PhotoViewer photoViewer = PhotoViewer.this;
                        photoViewer.updateMinMax(photoViewer.scale);
                    }
                    if (PhotoViewer.this.checkImageView != null) {
                        PhotoViewer.this.checkImageView.post(new PhotoViewer$10$$ExternalSyntheticLambda0(this));
                    }
                }
                if (PhotoViewer.this.dontResetZoomOnFirstLayout) {
                    PhotoViewer.this.setScaleToFill();
                    boolean unused5 = PhotoViewer.this.dontResetZoomOnFirstLayout = false;
                }
            }

            /* access modifiers changed from: private */
            public /* synthetic */ void lambda$onLayout$0() {
                FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) PhotoViewer.this.checkImageView.getLayoutParams();
                ((WindowManager) ApplicationLoader.applicationContext.getSystemService("window")).getDefaultDisplay().getRotation();
                int i = 0;
                int currentActionBarHeight = ((ActionBar.getCurrentActionBarHeight() - AndroidUtilities.dp(34.0f)) / 2) + (PhotoViewer.this.isStatusBarVisible() ? AndroidUtilities.statusBarHeight : 0);
                if (currentActionBarHeight != layoutParams.topMargin) {
                    layoutParams.topMargin = currentActionBarHeight;
                    PhotoViewer.this.checkImageView.setLayoutParams(layoutParams);
                }
                FrameLayout.LayoutParams layoutParams2 = (FrameLayout.LayoutParams) PhotoViewer.this.photosCounterView.getLayoutParams();
                int currentActionBarHeight2 = (ActionBar.getCurrentActionBarHeight() - AndroidUtilities.dp(40.0f)) / 2;
                if (PhotoViewer.this.isStatusBarVisible()) {
                    i = AndroidUtilities.statusBarHeight;
                }
                int i2 = currentActionBarHeight2 + i;
                if (layoutParams2.topMargin != i2) {
                    layoutParams2.topMargin = i2;
                    PhotoViewer.this.photosCounterView.setLayoutParams(layoutParams2);
                }
            }

            /* access modifiers changed from: protected */
            public void onAttachedToWindow() {
                super.onAttachedToWindow();
                PhotoViewer.this.centerImage.onAttachedToWindow();
                PhotoViewer.this.leftImage.onAttachedToWindow();
                PhotoViewer.this.rightImage.onAttachedToWindow();
                boolean unused = PhotoViewer.this.attachedToWindow = true;
            }

            /* access modifiers changed from: protected */
            public void onDetachedFromWindow() {
                super.onDetachedFromWindow();
                PhotoViewer.this.centerImage.onDetachedFromWindow();
                PhotoViewer.this.leftImage.onDetachedFromWindow();
                PhotoViewer.this.rightImage.onDetachedFromWindow();
                boolean unused = PhotoViewer.this.attachedToWindow = false;
                boolean unused2 = PhotoViewer.this.wasLayout = false;
            }

            public boolean dispatchKeyEventPreIme(KeyEvent keyEvent) {
                if (keyEvent == null || keyEvent.getKeyCode() != 4 || keyEvent.getAction() != 1) {
                    return super.dispatchKeyEventPreIme(keyEvent);
                }
                if (PhotoViewer.this.captionEditText.isPopupShowing() || PhotoViewer.this.captionEditText.isKeyboardVisible()) {
                    PhotoViewer.this.closeCaptionEnter(true);
                    return false;
                }
                PhotoViewer.getInstance().closePhoto(true, false);
                return true;
            }

            /* access modifiers changed from: protected */
            public void onDraw(Canvas canvas) {
                if (Build.VERSION.SDK_INT >= 21 && PhotoViewer.this.isVisible && PhotoViewer.this.lastInsets != null) {
                    PhotoViewer.this.blackPaint.setAlpha(PhotoViewer.this.backgroundDrawable.getAlpha());
                    canvas.drawRect(0.0f, (float) getMeasuredHeight(), (float) getMeasuredWidth(), (float) (getMeasuredHeight() + ((WindowInsets) PhotoViewer.this.lastInsets).getSystemWindowInsetBottom()), PhotoViewer.this.blackPaint);
                }
            }

            /* access modifiers changed from: protected */
            public void dispatchDraw(Canvas canvas) {
                super.dispatchDraw(canvas);
                if (PhotoViewer.this.parentChatActivity != null) {
                    UndoView undoView = PhotoViewer.this.parentChatActivity.getUndoView();
                    if (undoView.getVisibility() == 0) {
                        canvas.save();
                        View view = (View) undoView.getParent();
                        canvas.clipRect(view.getX(), view.getY(), view.getX() + ((float) view.getWidth()), view.getY() + ((float) view.getHeight()));
                        canvas.translate(undoView.getX(), undoView.getY());
                        undoView.draw(canvas);
                        canvas.restore();
                        invalidate();
                    }
                }
            }
        };
        this.windowView = r1;
        r1.setBackgroundDrawable(this.backgroundDrawable);
        this.windowView.setFocusable(false);
        ClippingImageView clippingImageView = new ClippingImageView(activity2);
        this.animatingImageView = clippingImageView;
        clippingImageView.setAnimationValues(this.animationValues);
        this.windowView.addView(this.animatingImageView, LayoutHelper.createFrame(40, 40.0f));
        FrameLayoutDrawer frameLayoutDrawer = new FrameLayoutDrawer(activity2);
        this.containerView = frameLayoutDrawer;
        frameLayoutDrawer.setFocusable(false);
        this.containerView.setClipChildren(true);
        this.containerView.setClipToPadding(true);
        this.windowView.setClipChildren(false);
        this.windowView.setClipToPadding(false);
        this.windowView.addView(this.containerView, LayoutHelper.createFrame(-1, -1, 51));
        int i2 = Build.VERSION.SDK_INT;
        if (i2 >= 21) {
            this.containerView.setFitsSystemWindows(true);
            this.containerView.setOnApplyWindowInsetsListener(new PhotoViewer$$ExternalSyntheticLambda12(this));
            this.containerView.setSystemUiVisibility(1792);
        }
        WindowManager.LayoutParams layoutParams = new WindowManager.LayoutParams();
        this.windowLayoutParams = layoutParams;
        layoutParams.height = -1;
        layoutParams.format = -3;
        layoutParams.width = -1;
        layoutParams.gravity = 51;
        layoutParams.type = 99;
        if (i2 >= 28) {
            layoutParams.layoutInDisplayCutoutMode = 1;
        }
        if (i2 >= 21) {
            layoutParams.flags = -NUM;
        } else {
            layoutParams.flags = 131072;
        }
        PaintingOverlay paintingOverlay2 = new PaintingOverlay(this.parentActivity);
        this.paintingOverlay = paintingOverlay2;
        this.containerView.addView(paintingOverlay2, LayoutHelper.createFrame(-2, -2.0f));
        PaintingOverlay paintingOverlay3 = new PaintingOverlay(this.parentActivity);
        this.leftPaintingOverlay = paintingOverlay3;
        this.containerView.addView(paintingOverlay3, LayoutHelper.createFrame(-2, -2.0f));
        PaintingOverlay paintingOverlay4 = new PaintingOverlay(this.parentActivity);
        this.rightPaintingOverlay = paintingOverlay4;
        this.containerView.addView(paintingOverlay4, LayoutHelper.createFrame(-2, -2.0f));
        AnonymousClass11 r12 = new ActionBar(activity2) {
            public void setAlpha(float f) {
                super.setAlpha(f);
                PhotoViewer.this.containerView.invalidate();
            }
        };
        this.actionBar = r12;
        r12.setOverlayTitleAnimation(true);
        this.actionBar.setTitleColor(-1);
        this.actionBar.setSubtitleColor(-1);
        this.actionBar.setBackgroundColor(NUM);
        this.actionBar.setOccupyStatusBar(isStatusBarVisible());
        this.actionBar.setItemsBackgroundColor(NUM, false);
        this.actionBar.setBackButtonImage(NUM);
        this.actionBar.setTitle(LocaleController.formatString("Of", NUM, 1, 1));
        this.containerView.addView(this.actionBar, LayoutHelper.createFrame(-1, -2.0f));
        this.actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
            /* access modifiers changed from: private */
            public /* synthetic */ void lambda$onItemClick$0(boolean z) {
                BulletinFactory.createSaveToGalleryBulletin(PhotoViewer.this.containerView, z, -NUM, -1).show();
            }

            /* access modifiers changed from: private */
            public /* synthetic */ void lambda$onItemClick$1(DialogInterface dialogInterface, int i) {
                ArrayList arrayList = new ArrayList(1);
                arrayList.add(PhotoViewer.this.currentMessageObject);
                PhotoViewer.this.showShareAlert(arrayList);
            }

            /* access modifiers changed from: private */
            public /* synthetic */ void lambda$onItemClick$2(ArrayList arrayList, DialogInterface dialogInterface, int i) {
                PhotoViewer.this.showShareAlert(arrayList);
            }

            /* access modifiers changed from: private */
            public /* synthetic */ void lambda$onItemClick$4(ArrayList arrayList, ChatActivity chatActivity, DialogsActivity dialogsActivity, ArrayList arrayList2, CharSequence charSequence, boolean z) {
                ArrayList arrayList3 = arrayList2;
                if (arrayList2.size() > 1 || ((Long) arrayList3.get(0)).longValue() == UserConfig.getInstance(PhotoViewer.this.currentAccount).getClientUserId() || charSequence != null) {
                    ArrayList arrayList4 = arrayList;
                    for (int i = 0; i < arrayList2.size(); i++) {
                        long longValue = ((Long) arrayList3.get(i)).longValue();
                        if (charSequence != null) {
                            SendMessagesHelper.getInstance(PhotoViewer.this.currentAccount).sendMessage(charSequence.toString(), longValue, (MessageObject) null, (MessageObject) null, (TLRPC$WebPage) null, true, (ArrayList<TLRPC$MessageEntity>) null, (TLRPC$ReplyMarkup) null, (HashMap<String, String>) null, true, 0, (MessageObject.SendAnimationData) null);
                        }
                        SendMessagesHelper.getInstance(PhotoViewer.this.currentAccount).sendMessage((ArrayList<MessageObject>) arrayList, longValue, false, false, true, 0);
                    }
                    dialogsActivity.finishFragment();
                    if (chatActivity == null) {
                        return;
                    }
                    if (arrayList2.size() == 1) {
                        chatActivity.getUndoView().showWithAction(((Long) arrayList3.get(0)).longValue(), 53, (Object) Integer.valueOf(arrayList.size()));
                    } else {
                        chatActivity.getUndoView().showWithAction(0, 53, (Object) Integer.valueOf(arrayList.size()), (Object) Integer.valueOf(arrayList2.size()), (Runnable) null, (Runnable) null);
                    }
                } else {
                    long longValue2 = ((Long) arrayList3.get(0)).longValue();
                    Bundle bundle = new Bundle();
                    bundle.putBoolean("scrollToTopOnResume", true);
                    if (DialogObject.isEncryptedDialog(longValue2)) {
                        bundle.putInt("enc_id", DialogObject.getEncryptedChatId(longValue2));
                    } else if (DialogObject.isUserDialog(longValue2)) {
                        bundle.putLong("user_id", longValue2);
                    } else {
                        bundle.putLong("chat_id", -longValue2);
                    }
                    NotificationCenter.getInstance(PhotoViewer.this.currentAccount).postNotificationName(NotificationCenter.closeChats, new Object[0]);
                    ChatActivity chatActivity2 = new ChatActivity(bundle);
                    if (((LaunchActivity) PhotoViewer.this.parentActivity).presentFragment(chatActivity2, true, false)) {
                        chatActivity2.showFieldPanelForForward(true, arrayList);
                    } else {
                        dialogsActivity.finishFragment();
                    }
                }
            }

            /* access modifiers changed from: private */
            public static /* synthetic */ void lambda$onItemClick$5(boolean[] zArr, View view) {
                zArr[0] = !zArr[0];
                ((CheckBoxCell) view).setChecked(zArr[0], true);
            }

            /* access modifiers changed from: private */
            public /* synthetic */ void lambda$onItemClick$6(boolean[] zArr, DialogInterface dialogInterface, int i) {
                TLRPC$EncryptedChat tLRPC$EncryptedChat;
                ArrayList arrayList;
                if (!PhotoViewer.this.imagesArr.isEmpty()) {
                    if (PhotoViewer.this.currentIndex >= 0 && PhotoViewer.this.currentIndex < PhotoViewer.this.imagesArr.size()) {
                        MessageObject messageObject = (MessageObject) PhotoViewer.this.imagesArr.get(PhotoViewer.this.currentIndex);
                        if (messageObject.isSent()) {
                            PhotoViewer.this.closePhoto(false, false);
                            ArrayList arrayList2 = new ArrayList();
                            if (PhotoViewer.this.slideshowMessageId != 0) {
                                arrayList2.add(Integer.valueOf(PhotoViewer.this.slideshowMessageId));
                            } else {
                                arrayList2.add(Integer.valueOf(messageObject.getId()));
                            }
                            if (!DialogObject.isEncryptedDialog(messageObject.getDialogId()) || messageObject.messageOwner.random_id == 0) {
                                arrayList = null;
                                tLRPC$EncryptedChat = null;
                            } else {
                                ArrayList arrayList3 = new ArrayList();
                                arrayList3.add(Long.valueOf(messageObject.messageOwner.random_id));
                                arrayList = arrayList3;
                                tLRPC$EncryptedChat = MessagesController.getInstance(PhotoViewer.this.currentAccount).getEncryptedChat(Integer.valueOf(DialogObject.getEncryptedChatId(messageObject.getDialogId())));
                            }
                            MessagesController.getInstance(PhotoViewer.this.currentAccount).deleteMessages(arrayList2, arrayList, tLRPC$EncryptedChat, messageObject.getDialogId(), zArr[0], messageObject.scheduled);
                        }
                    }
                } else if (!PhotoViewer.this.avatarsArr.isEmpty()) {
                    if (PhotoViewer.this.currentIndex >= 0 && PhotoViewer.this.currentIndex < PhotoViewer.this.avatarsArr.size()) {
                        TLRPC$Message tLRPC$Message = (TLRPC$Message) PhotoViewer.this.imagesArrMessages.get(PhotoViewer.this.currentIndex);
                        if (tLRPC$Message != null) {
                            ArrayList arrayList4 = new ArrayList();
                            arrayList4.add(Integer.valueOf(tLRPC$Message.id));
                            MessagesController.getInstance(PhotoViewer.this.currentAccount).deleteMessages(arrayList4, (ArrayList<Long>) null, (TLRPC$EncryptedChat) null, MessageObject.getDialogId(tLRPC$Message), true, false);
                            NotificationCenter.getInstance(PhotoViewer.this.currentAccount).postNotificationName(NotificationCenter.reloadDialogPhotos, new Object[0]);
                        }
                        if (PhotoViewer.this.isCurrentAvatarSet()) {
                            if (PhotoViewer.this.avatarsDialogId > 0) {
                                MessagesController.getInstance(PhotoViewer.this.currentAccount).deleteUserPhoto((TLRPC$InputPhoto) null);
                            } else {
                                MessagesController.getInstance(PhotoViewer.this.currentAccount).changeChatAvatar(-PhotoViewer.this.avatarsDialogId, (TLRPC$TL_inputChatPhoto) null, (TLRPC$InputFile) null, (TLRPC$InputFile) null, 0.0d, (String) null, (TLRPC$FileLocation) null, (TLRPC$FileLocation) null, (Runnable) null);
                            }
                            PhotoViewer.this.closePhoto(false, false);
                            return;
                        }
                        TLRPC$Photo tLRPC$Photo = (TLRPC$Photo) PhotoViewer.this.avatarsArr.get(PhotoViewer.this.currentIndex);
                        if (tLRPC$Photo != null) {
                            TLRPC$TL_inputPhoto tLRPC$TL_inputPhoto = new TLRPC$TL_inputPhoto();
                            tLRPC$TL_inputPhoto.id = tLRPC$Photo.id;
                            tLRPC$TL_inputPhoto.access_hash = tLRPC$Photo.access_hash;
                            byte[] bArr = tLRPC$Photo.file_reference;
                            tLRPC$TL_inputPhoto.file_reference = bArr;
                            if (bArr == null) {
                                tLRPC$TL_inputPhoto.file_reference = new byte[0];
                            }
                            if (PhotoViewer.this.avatarsDialogId > 0) {
                                MessagesController.getInstance(PhotoViewer.this.currentAccount).deleteUserPhoto(tLRPC$TL_inputPhoto);
                            }
                            MessagesStorage.getInstance(PhotoViewer.this.currentAccount).clearUserPhoto(PhotoViewer.this.avatarsDialogId, tLRPC$Photo.id);
                            PhotoViewer.this.imagesArrLocations.remove(PhotoViewer.this.currentIndex);
                            PhotoViewer.this.imagesArrLocationsSizes.remove(PhotoViewer.this.currentIndex);
                            PhotoViewer.this.imagesArrLocationsVideo.remove(PhotoViewer.this.currentIndex);
                            PhotoViewer.this.imagesArrMessages.remove(PhotoViewer.this.currentIndex);
                            PhotoViewer.this.avatarsArr.remove(PhotoViewer.this.currentIndex);
                            if (PhotoViewer.this.imagesArrLocations.isEmpty()) {
                                PhotoViewer.this.closePhoto(false, false);
                            } else {
                                int access$12900 = PhotoViewer.this.currentIndex;
                                if (access$12900 >= PhotoViewer.this.avatarsArr.size()) {
                                    access$12900 = PhotoViewer.this.avatarsArr.size() - 1;
                                }
                                int unused = PhotoViewer.this.currentIndex = -1;
                                PhotoViewer.this.setImageIndex(access$12900);
                            }
                            if (tLRPC$Message == null) {
                                NotificationCenter.getInstance(PhotoViewer.this.currentAccount).postNotificationName(NotificationCenter.reloadDialogPhotos, new Object[0]);
                            }
                        }
                    }
                } else if (!PhotoViewer.this.secureDocuments.isEmpty() && PhotoViewer.this.placeProvider != null) {
                    PhotoViewer.this.secureDocuments.remove(PhotoViewer.this.currentIndex);
                    PhotoViewer.this.placeProvider.deleteImageAtIndex(PhotoViewer.this.currentIndex);
                    if (PhotoViewer.this.secureDocuments.isEmpty()) {
                        PhotoViewer.this.closePhoto(false, false);
                        return;
                    }
                    int access$129002 = PhotoViewer.this.currentIndex;
                    if (access$129002 >= PhotoViewer.this.secureDocuments.size()) {
                        access$129002 = PhotoViewer.this.secureDocuments.size() - 1;
                    }
                    int unused2 = PhotoViewer.this.currentIndex = -1;
                    PhotoViewer.this.setImageIndex(access$129002);
                }
            }

            /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v1, resolved type: java.lang.String} */
            /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r9v3, resolved type: org.telegram.messenger.MessageObject$GroupedMessages} */
            /* JADX WARNING: type inference failed for: r9v0 */
            /* JADX WARNING: type inference failed for: r9v14 */
            /* JADX WARNING: type inference failed for: r9v18 */
            /* JADX WARNING: type inference failed for: r9v19 */
            /* JADX WARNING: type inference failed for: r9v22 */
            /* JADX WARNING: Multi-variable type inference failed */
            /* JADX WARNING: Removed duplicated region for block: B:105:0x02e7  */
            /* JADX WARNING: Removed duplicated region for block: B:140:0x041b  */
            /* JADX WARNING: Removed duplicated region for block: B:157:0x04ca  */
            /* JADX WARNING: Removed duplicated region for block: B:158:0x04d6  */
            /* JADX WARNING: Removed duplicated region for block: B:190:0x05bf  */
            /* JADX WARNING: Removed duplicated region for block: B:236:0x0737  */
            /* JADX WARNING: Removed duplicated region for block: B:373:? A[RETURN, SYNTHETIC] */
            /* JADX WARNING: Removed duplicated region for block: B:50:0x014b  */
            /* JADX WARNING: Removed duplicated region for block: B:51:0x0161  */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public void onItemClick(int r23) {
                /*
                    r22 = this;
                    r7 = r22
                    r0 = r23
                    r1 = -1
                    r2 = 1
                    java.lang.Integer r3 = java.lang.Integer.valueOf(r2)
                    r4 = 0
                    if (r0 != r1) goto L_0x003a
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    boolean r0 = r0.needCaptionLayout
                    if (r0 == 0) goto L_0x0033
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.ui.Components.PhotoViewerCaptionEnterView r0 = r0.captionEditText
                    boolean r0 = r0.isPopupShowing()
                    if (r0 != 0) goto L_0x002d
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.ui.Components.PhotoViewerCaptionEnterView r0 = r0.captionEditText
                    boolean r0 = r0.isKeyboardVisible()
                    if (r0 == 0) goto L_0x0033
                L_0x002d:
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    r0.closeCaptionEnter(r4)
                    return
                L_0x0033:
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    r0.closePhoto(r2, r4)
                    goto L_0x0c7a
                L_0x003a:
                    r5 = 0
                    r8 = 4
                    r9 = 0
                    if (r0 != r2) goto L_0x0168
                    int r0 = android.os.Build.VERSION.SDK_INT
                    r1 = 23
                    if (r0 < r1) goto L_0x006a
                    r1 = 28
                    if (r0 <= r1) goto L_0x004e
                    boolean r0 = org.telegram.messenger.BuildVars.NO_SCOPED_STORAGE
                    if (r0 == 0) goto L_0x006a
                L_0x004e:
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    android.app.Activity r0 = r0.parentActivity
                    java.lang.String r1 = "android.permission.WRITE_EXTERNAL_STORAGE"
                    int r0 = r0.checkSelfPermission(r1)
                    if (r0 == 0) goto L_0x006a
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    android.app.Activity r0 = r0.parentActivity
                    java.lang.String[] r2 = new java.lang.String[r2]
                    r2[r4] = r1
                    r0.requestPermissions(r2, r8)
                    return
                L_0x006a:
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r0 = r0.currentMessageObject
                    if (r0 == 0) goto L_0x00d9
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r0 = r0.currentMessageObject
                    org.telegram.tgnet.TLRPC$Message r0 = r0.messageOwner
                    org.telegram.tgnet.TLRPC$MessageMedia r0 = r0.media
                    boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaWebPage
                    if (r0 == 0) goto L_0x00b7
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r0 = r0.currentMessageObject
                    org.telegram.tgnet.TLRPC$Message r0 = r0.messageOwner
                    org.telegram.tgnet.TLRPC$MessageMedia r0 = r0.media
                    org.telegram.tgnet.TLRPC$WebPage r0 = r0.webpage
                    if (r0 == 0) goto L_0x00b7
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r0 = r0.currentMessageObject
                    org.telegram.tgnet.TLRPC$Message r0 = r0.messageOwner
                    org.telegram.tgnet.TLRPC$MessageMedia r0 = r0.media
                    org.telegram.tgnet.TLRPC$WebPage r0 = r0.webpage
                    org.telegram.tgnet.TLRPC$Document r0 = r0.document
                    if (r0 != 0) goto L_0x00b7
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    int r1 = r0.currentIndex
                    org.telegram.tgnet.TLObject r0 = r0.getFileLocation(r1, r9)
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    int r1 = r1.currentAccount
                    org.telegram.messenger.FileLoader r1 = org.telegram.messenger.FileLoader.getInstance(r1)
                    java.io.File r0 = r1.getPathToAttach(r0, r2)
                    goto L_0x00cd
                L_0x00b7:
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    int r0 = r0.currentAccount
                    org.telegram.messenger.FileLoader r0 = org.telegram.messenger.FileLoader.getInstance(r0)
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r1 = r1.currentMessageObject
                    org.telegram.tgnet.TLRPC$Message r1 = r1.messageOwner
                    java.io.File r0 = r0.getPathToMessage(r1)
                L_0x00cd:
                    r9 = r0
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r0 = r0.currentMessageObject
                    boolean r4 = r0.isVideo()
                    goto L_0x0140
                L_0x00d9:
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.ImageLocation r0 = r0.currentFileLocationVideo
                    if (r0 == 0) goto L_0x0118
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    int r0 = r0.currentAccount
                    org.telegram.messenger.FileLoader r0 = org.telegram.messenger.FileLoader.getInstance(r0)
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.ImageLocation r1 = r1.currentFileLocationVideo
                    org.telegram.tgnet.TLRPC$FileLocation r1 = org.telegram.ui.PhotoViewer.getFileLocation(r1)
                    org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.ImageLocation r3 = r3.currentFileLocationVideo
                    java.lang.String r3 = org.telegram.ui.PhotoViewer.getFileLocationExt(r3)
                    org.telegram.ui.PhotoViewer r8 = org.telegram.ui.PhotoViewer.this
                    long r8 = r8.avatarsDialogId
                    int r10 = (r8 > r5 ? 1 : (r8 == r5 ? 0 : -1))
                    if (r10 != 0) goto L_0x0113
                    org.telegram.ui.PhotoViewer r5 = org.telegram.ui.PhotoViewer.this
                    boolean r5 = r5.isEvent
                    if (r5 == 0) goto L_0x0112
                    goto L_0x0113
                L_0x0112:
                    r2 = 0
                L_0x0113:
                    java.io.File r9 = r0.getPathToAttach(r1, r3, r2)
                    goto L_0x0142
                L_0x0118:
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.ui.PhotoViewer$PageBlocksAdapter r0 = r0.pageBlocksAdapter
                    if (r0 == 0) goto L_0x0142
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.ui.PhotoViewer$PageBlocksAdapter r0 = r0.pageBlocksAdapter
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    int r1 = r1.currentIndex
                    java.io.File r9 = r0.getFile(r1)
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.ui.PhotoViewer$PageBlocksAdapter r0 = r0.pageBlocksAdapter
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    int r1 = r1.currentIndex
                    boolean r4 = r0.isVideo(r1)
                L_0x0140:
                    r12 = r4
                    goto L_0x0143
                L_0x0142:
                    r12 = 0
                L_0x0143:
                    if (r9 == 0) goto L_0x0161
                    boolean r0 = r9.exists()
                    if (r0 == 0) goto L_0x0161
                    java.lang.String r10 = r9.toString()
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    android.app.Activity r11 = r0.parentActivity
                    r13 = 0
                    r14 = 0
                    org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda7 r15 = new org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda7
                    r15.<init>(r7, r12)
                    org.telegram.messenger.MediaController.saveFile(r10, r11, r12, r13, r14, r15)
                    goto L_0x0c7a
                L_0x0161:
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    r0.showDownloadAlert()
                    goto L_0x0c7a
                L_0x0168:
                    r10 = 2
                    if (r0 != r10) goto L_0x01c0
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    long r0 = r0.currentDialogId
                    int r3 = (r0 > r5 ? 1 : (r0 == r5 ? 0 : -1))
                    if (r3 == 0) goto L_0x0c7a
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    boolean unused = r0.disableShowCheck = r2
                    android.os.Bundle r0 = new android.os.Bundle
                    r0.<init>()
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    long r5 = r1.currentDialogId
                    java.lang.String r1 = "dialog_id"
                    r0.putLong(r1, r5)
                    org.telegram.ui.Components.MediaActivity r1 = new org.telegram.ui.Components.MediaActivity
                    r1.<init>(r0, r9)
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.ui.ChatActivity r0 = r0.parentChatActivity
                    if (r0 == 0) goto L_0x01a4
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.ui.ChatActivity r0 = r0.parentChatActivity
                    org.telegram.tgnet.TLRPC$ChatFull r0 = r0.getCurrentChatInfo()
                    r1.setChatInfo(r0)
                L_0x01a4:
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    r0.closePhoto(r4, r4)
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    android.app.Activity r0 = r0.parentActivity
                    boolean r0 = r0 instanceof org.telegram.ui.LaunchActivity
                    if (r0 == 0) goto L_0x0c7a
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    android.app.Activity r0 = r0.parentActivity
                    org.telegram.ui.LaunchActivity r0 = (org.telegram.ui.LaunchActivity) r0
                    r0.presentFragment(r1, r4, r2)
                    goto L_0x0c7a
                L_0x01c0:
                    if (r0 != r8) goto L_0x0283
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r0 = r0.currentMessageObject
                    if (r0 != 0) goto L_0x01cb
                    return
                L_0x01cb:
                    android.os.Bundle r0 = new android.os.Bundle
                    r0.<init>()
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    long r5 = r1.currentDialogId
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r1 = r1.currentMessageObject
                    if (r1 == 0) goto L_0x01e8
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r1 = r1.currentMessageObject
                    long r5 = r1.getDialogId()
                L_0x01e8:
                    boolean r1 = org.telegram.messenger.DialogObject.isEncryptedDialog(r5)
                    if (r1 == 0) goto L_0x01f8
                    int r1 = org.telegram.messenger.DialogObject.getEncryptedChatId(r5)
                    java.lang.String r3 = "enc_id"
                    r0.putInt(r3, r1)
                    goto L_0x022d
                L_0x01f8:
                    boolean r1 = org.telegram.messenger.DialogObject.isUserDialog(r5)
                    if (r1 == 0) goto L_0x0204
                    java.lang.String r1 = "user_id"
                    r0.putLong(r1, r5)
                    goto L_0x022d
                L_0x0204:
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    int r1 = r1.currentAccount
                    org.telegram.messenger.MessagesController r1 = org.telegram.messenger.MessagesController.getInstance(r1)
                    long r10 = -r5
                    java.lang.Long r3 = java.lang.Long.valueOf(r10)
                    org.telegram.tgnet.TLRPC$Chat r1 = r1.getChat(r3)
                    if (r1 == 0) goto L_0x0227
                    org.telegram.tgnet.TLRPC$InputChannel r3 = r1.migrated_to
                    if (r3 == 0) goto L_0x0227
                    java.lang.String r3 = "migrated_to"
                    r0.putLong(r3, r5)
                    org.telegram.tgnet.TLRPC$InputChannel r1 = r1.migrated_to
                    long r5 = r1.channel_id
                    long r5 = -r5
                L_0x0227:
                    long r5 = -r5
                    java.lang.String r1 = "chat_id"
                    r0.putLong(r1, r5)
                L_0x022d:
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r1 = r1.currentMessageObject
                    int r1 = r1.getId()
                    java.lang.String r3 = "message_id"
                    r0.putInt(r3, r1)
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    int r1 = r1.currentAccount
                    org.telegram.messenger.NotificationCenter r1 = org.telegram.messenger.NotificationCenter.getInstance(r1)
                    int r3 = org.telegram.messenger.NotificationCenter.closeChats
                    java.lang.Object[] r5 = new java.lang.Object[r4]
                    r1.postNotificationName(r3, r5)
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    android.app.Activity r1 = r1.parentActivity
                    boolean r1 = r1 instanceof org.telegram.ui.LaunchActivity
                    if (r1 == 0) goto L_0x0277
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    android.app.Activity r1 = r1.parentActivity
                    org.telegram.ui.LaunchActivity r1 = (org.telegram.ui.LaunchActivity) r1
                    int r3 = r1.getMainFragmentsCount()
                    if (r3 > r2) goto L_0x026e
                    boolean r3 = org.telegram.messenger.AndroidUtilities.isTablet()
                    if (r3 == 0) goto L_0x026c
                    goto L_0x026e
                L_0x026c:
                    r3 = 0
                    goto L_0x026f
                L_0x026e:
                    r3 = 1
                L_0x026f:
                    org.telegram.ui.ChatActivity r5 = new org.telegram.ui.ChatActivity
                    r5.<init>(r0)
                    r1.presentFragment(r5, r3, r2)
                L_0x0277:
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    r0.closePhoto(r4, r4)
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject unused = r0.currentMessageObject = r9
                    goto L_0x0c7a
                L_0x0283:
                    r5 = 2131624832(0x7f0e0380, float:1.8876855E38)
                    java.lang.String r6 = "Cancel"
                    r8 = 3
                    if (r0 != r8) goto L_0x045e
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r0 = r0.currentMessageObject
                    if (r0 == 0) goto L_0x045d
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    android.app.Activity r0 = r0.parentActivity
                    boolean r0 = r0 instanceof org.telegram.ui.LaunchActivity
                    if (r0 != 0) goto L_0x029f
                    goto L_0x045d
                L_0x029f:
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r0 = r0.currentMessageObject
                    boolean r0 = r0.scheduled
                    if (r0 != 0) goto L_0x02d1
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r0 = r0.currentMessageObject
                    long r0 = r0.getDialogId()
                    boolean r3 = org.telegram.messenger.DialogObject.isChatDialog(r0)
                    if (r3 == 0) goto L_0x02d1
                    org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                    int r3 = r3.currentAccount
                    org.telegram.messenger.MessagesController r3 = org.telegram.messenger.MessagesController.getInstance(r3)
                    long r0 = -r0
                    java.lang.Long r0 = java.lang.Long.valueOf(r0)
                    org.telegram.tgnet.TLRPC$Chat r0 = r3.getChat(r0)
                    boolean r0 = org.telegram.messenger.ChatObject.isChannelAndNotMegaGroup(r0)
                    goto L_0x02d2
                L_0x02d1:
                    r0 = 0
                L_0x02d2:
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    android.app.Activity r1 = r1.parentActivity
                    org.telegram.ui.LaunchActivity r1 = (org.telegram.ui.LaunchActivity) r1
                    org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r3 = r3.currentMessageObject
                    int r3 = r3.currentAccount
                    r1.switchToAccount(r3, r2)
                    if (r0 == 0) goto L_0x041b
                    java.util.ArrayList r0 = new java.util.ArrayList
                    r0.<init>(r2)
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    org.telegram.ui.ChatActivity r1 = r1.parentChatActivity
                    if (r1 == 0) goto L_0x0308
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    org.telegram.ui.ChatActivity r1 = r1.parentChatActivity
                    org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r3 = r3.currentMessageObject
                    long r8 = r3.getGroupId()
                    org.telegram.messenger.MessageObject$GroupedMessages r9 = r1.getGroup(r8)
                L_0x0308:
                    if (r9 == 0) goto L_0x0310
                    java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r9.messages
                    r0.addAll(r1)
                    goto L_0x0319
                L_0x0310:
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r1 = r1.currentMessageObject
                    r0.add(r1)
                L_0x0319:
                    int r1 = r0.size()
                    if (r1 > r2) goto L_0x0326
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    r1.showShareAlert(r0)
                    goto L_0x0c7a
                L_0x0326:
                    r1 = 0
                L_0x0327:
                    int r3 = r0.size()
                    if (r1 >= r3) goto L_0x034b
                    java.lang.Object r3 = r0.get(r1)
                    org.telegram.messenger.MessageObject r3 = (org.telegram.messenger.MessageObject) r3
                    boolean r3 = r3.isPhoto()
                    if (r3 == 0) goto L_0x0349
                    java.lang.Object r3 = r0.get(r1)
                    org.telegram.messenger.MessageObject r3 = (org.telegram.messenger.MessageObject) r3
                    boolean r3 = r3.isVideo()
                    if (r3 == 0) goto L_0x0346
                    goto L_0x0349
                L_0x0346:
                    int r1 = r1 + 1
                    goto L_0x0327
                L_0x0349:
                    r1 = 0
                    goto L_0x034c
                L_0x034b:
                    r1 = 1
                L_0x034c:
                    org.telegram.ui.ActionBar.AlertDialog$Builder r3 = new org.telegram.ui.ActionBar.AlertDialog$Builder
                    org.telegram.ui.PhotoViewer r8 = org.telegram.ui.PhotoViewer.this
                    android.app.Activity r8 = r8.parentActivity
                    org.telegram.ui.ActionBar.Theme$ResourcesProvider r9 = r15
                    r3.<init>(r8, r9)
                    r8 = 2131625983(0x7f0e07ff, float:1.887919E38)
                    java.lang.String r9 = "ForwardGroupMedia"
                    java.lang.String r8 = org.telegram.messenger.LocaleController.getString(r9, r8)
                    org.telegram.ui.ActionBar.AlertDialog$Builder r3 = r3.setTitle(r8)
                    r8 = 2131625984(0x7f0e0800, float:1.8879191E38)
                    java.lang.String r9 = "ForwardGroupMediaMessage"
                    java.lang.String r8 = org.telegram.messenger.LocaleController.getString(r9, r8)
                    org.telegram.ui.ActionBar.AlertDialog$Builder r3 = r3.setMessage(r8)
                    java.lang.String r8 = "voipgroup_listeningText"
                    org.telegram.ui.ActionBar.AlertDialog$Builder r3 = r3.setDialogButtonColorKey(r8)
                    if (r1 == 0) goto L_0x0381
                    r8 = 2131628722(0x7f0e12b2, float:1.8884745E38)
                    java.lang.String r9 = "ThisPhoto"
                    goto L_0x0386
                L_0x0381:
                    r8 = 2131628721(0x7f0e12b1, float:1.8884743E38)
                    java.lang.String r9 = "ThisMedia"
                L_0x0386:
                    java.lang.String r8 = org.telegram.messenger.LocaleController.getString(r9, r8)
                    org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda0 r9 = new org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda0
                    r9.<init>(r7)
                    org.telegram.ui.ActionBar.AlertDialog$Builder r3 = r3.setNegativeButton(r8, r9)
                    if (r1 == 0) goto L_0x03a2
                    int r1 = r0.size()
                    java.lang.Object[] r4 = new java.lang.Object[r4]
                    java.lang.String r8 = "AllNPhotos"
                    java.lang.String r1 = org.telegram.messenger.LocaleController.formatPluralString(r8, r1, r4)
                    goto L_0x03ae
                L_0x03a2:
                    int r1 = r0.size()
                    java.lang.Object[] r4 = new java.lang.Object[r4]
                    java.lang.String r8 = "AllNMedia"
                    java.lang.String r1 = org.telegram.messenger.LocaleController.formatPluralString(r8, r1, r4)
                L_0x03ae:
                    org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda1 r4 = new org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda1
                    r4.<init>(r7, r0)
                    org.telegram.ui.ActionBar.AlertDialog$Builder r0 = r3.setPositiveButton(r1, r4)
                    java.lang.String r1 = org.telegram.messenger.LocaleController.getString(r6, r5)
                    org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda3 r3 = org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda3.INSTANCE
                    org.telegram.ui.ActionBar.AlertDialog$Builder r0 = r0.setNeutralButton(r1, r3)
                    org.telegram.ui.ActionBar.AlertDialog r0 = r0.create()
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    java.lang.String r3 = "voipgroup_dialogBackground"
                    int r1 = r1.getThemedColor(r3)
                    r0.setBackgroundColor(r1)
                    r0.show()
                    r1 = -3
                    android.view.View r1 = r0.getButton(r1)
                    boolean r3 = r1 instanceof android.widget.TextView
                    if (r3 == 0) goto L_0x040e
                    r3 = r1
                    android.widget.TextView r3 = (android.widget.TextView) r3
                    org.telegram.ui.PhotoViewer r4 = org.telegram.ui.PhotoViewer.this
                    java.lang.String r5 = "dialogTextRed"
                    int r4 = r4.getThemedColor(r5)
                    r3.setTextColor(r4)
                    org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                    int r3 = r3.getThemedColor(r5)
                    android.graphics.drawable.Drawable r3 = org.telegram.ui.ActionBar.Theme.getRoundRectSelectorDrawable(r3)
                    r1.setBackground(r3)
                    android.view.ViewGroup r3 = r0.getButtonsLayout()
                    boolean r3 = r3 instanceof android.widget.LinearLayout
                    if (r3 == 0) goto L_0x040e
                    android.view.ViewGroup r3 = r0.getButtonsLayout()
                    android.widget.LinearLayout r3 = (android.widget.LinearLayout) r3
                    int r3 = r3.getOrientation()
                    if (r3 != r2) goto L_0x040e
                    r1.bringToFront()
                L_0x040e:
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    java.lang.String r2 = "voipgroup_actionBarItems"
                    int r1 = r1.getThemedColor(r2)
                    r0.setTextColor(r1)
                    goto L_0x0c7a
                L_0x041b:
                    android.os.Bundle r0 = new android.os.Bundle
                    r0.<init>()
                    java.lang.String r1 = "onlySelect"
                    r0.putBoolean(r1, r2)
                    java.lang.String r1 = "dialogsType"
                    r0.putInt(r1, r8)
                    org.telegram.ui.DialogsActivity r1 = new org.telegram.ui.DialogsActivity
                    r1.<init>(r0)
                    java.util.ArrayList r0 = new java.util.ArrayList
                    r0.<init>()
                    org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r3 = r3.currentMessageObject
                    r0.add(r3)
                    org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                    org.telegram.ui.ChatActivity r3 = r3.parentChatActivity
                    org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda9 r5 = new org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda9
                    r5.<init>(r7, r0, r3)
                    r1.setDelegate(r5)
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    android.app.Activity r0 = r0.parentActivity
                    org.telegram.ui.LaunchActivity r0 = (org.telegram.ui.LaunchActivity) r0
                    r0.presentFragment(r1, r4, r2)
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    r0.closePhoto(r4, r4)
                    goto L_0x0c7a
                L_0x045d:
                    return
                L_0x045e:
                    r8 = 6
                    if (r0 != r8) goto L_0x0745
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    android.app.Activity r0 = r0.parentActivity
                    if (r0 == 0) goto L_0x0744
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.ui.PhotoViewer$PhotoViewerProvider r0 = r0.placeProvider
                    if (r0 != 0) goto L_0x0473
                    goto L_0x0744
                L_0x0473:
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r0 = r0.currentMessageObject
                    if (r0 == 0) goto L_0x04ad
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r0 = r0.currentMessageObject
                    boolean r0 = r0.scheduled
                    if (r0 != 0) goto L_0x04ad
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r0 = r0.currentMessageObject
                    long r10 = r0.getDialogId()
                    boolean r0 = org.telegram.messenger.DialogObject.isChatDialog(r10)
                    if (r0 == 0) goto L_0x04ad
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    int r0 = r0.currentAccount
                    org.telegram.messenger.MessagesController r0 = org.telegram.messenger.MessagesController.getInstance(r0)
                    long r10 = -r10
                    java.lang.Long r3 = java.lang.Long.valueOf(r10)
                    org.telegram.tgnet.TLRPC$Chat r0 = r0.getChat(r3)
                    boolean r0 = org.telegram.messenger.ChatObject.isChannel(r0)
                    goto L_0x04ae
                L_0x04ad:
                    r0 = 0
                L_0x04ae:
                    org.telegram.ui.ActionBar.AlertDialog$Builder r3 = new org.telegram.ui.ActionBar.AlertDialog$Builder
                    org.telegram.ui.PhotoViewer r8 = org.telegram.ui.PhotoViewer.this
                    android.app.Activity r8 = r8.parentActivity
                    r3.<init>((android.content.Context) r8)
                    org.telegram.ui.PhotoViewer r8 = org.telegram.ui.PhotoViewer.this
                    org.telegram.ui.PhotoViewer$PhotoViewerProvider r8 = r8.placeProvider
                    java.lang.String r8 = r8.getDeleteMessageString()
                    r10 = 2131624458(0x7f0e020a, float:1.8876096E38)
                    java.lang.String r11 = "AreYouSureDeletePhotoTitle"
                    if (r8 == 0) goto L_0x04d6
                    java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r11, r10)
                    r3.setTitle(r0)
                    r3.setMessage(r8)
                    goto L_0x059b
                L_0x04d6:
                    org.telegram.ui.PhotoViewer r8 = org.telegram.ui.PhotoViewer.this
                    boolean r8 = r8.isEmbedVideo
                    if (r8 != 0) goto L_0x0570
                    org.telegram.ui.PhotoViewer r8 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.ImageLocation r8 = r8.currentFileLocationVideo
                    if (r8 == 0) goto L_0x04f4
                    org.telegram.ui.PhotoViewer r8 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.ImageLocation r8 = r8.currentFileLocationVideo
                    org.telegram.ui.PhotoViewer r12 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.ImageLocation r12 = r12.currentFileLocation
                    if (r8 != r12) goto L_0x0570
                L_0x04f4:
                    org.telegram.ui.PhotoViewer r8 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r8 = r8.currentMessageObject
                    if (r8 == 0) goto L_0x0509
                    org.telegram.ui.PhotoViewer r8 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r8 = r8.currentMessageObject
                    boolean r8 = r8.isVideo()
                    if (r8 == 0) goto L_0x0509
                    goto L_0x0570
                L_0x0509:
                    org.telegram.ui.PhotoViewer r8 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r8 = r8.currentMessageObject
                    if (r8 == 0) goto L_0x0549
                    org.telegram.ui.PhotoViewer r8 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r8 = r8.currentMessageObject
                    boolean r8 = r8.isGif()
                    if (r8 == 0) goto L_0x0549
                    r8 = 2131624455(0x7f0e0207, float:1.887609E38)
                    java.lang.String r10 = "AreYouSureDeleteGIFTitle"
                    java.lang.String r8 = org.telegram.messenger.LocaleController.getString(r10, r8)
                    r3.setTitle(r8)
                    if (r0 == 0) goto L_0x053a
                    r0 = 2131624454(0x7f0e0206, float:1.8876088E38)
                    java.lang.Object[] r8 = new java.lang.Object[r4]
                    java.lang.String r10 = "AreYouSureDeleteGIFEveryone"
                    java.lang.String r0 = org.telegram.messenger.LocaleController.formatString(r10, r0, r8)
                    r3.setMessage(r0)
                    goto L_0x059b
                L_0x053a:
                    r0 = 2131624453(0x7f0e0205, float:1.8876086E38)
                    java.lang.Object[] r8 = new java.lang.Object[r4]
                    java.lang.String r10 = "AreYouSureDeleteGIF"
                    java.lang.String r0 = org.telegram.messenger.LocaleController.formatString(r10, r0, r8)
                    r3.setMessage(r0)
                    goto L_0x059b
                L_0x0549:
                    java.lang.String r8 = org.telegram.messenger.LocaleController.getString(r11, r10)
                    r3.setTitle(r8)
                    if (r0 == 0) goto L_0x0561
                    r0 = 2131624457(0x7f0e0209, float:1.8876094E38)
                    java.lang.Object[] r8 = new java.lang.Object[r4]
                    java.lang.String r10 = "AreYouSureDeletePhotoEveryone"
                    java.lang.String r0 = org.telegram.messenger.LocaleController.formatString(r10, r0, r8)
                    r3.setMessage(r0)
                    goto L_0x059b
                L_0x0561:
                    r0 = 2131624456(0x7f0e0208, float:1.8876092E38)
                    java.lang.Object[] r8 = new java.lang.Object[r4]
                    java.lang.String r10 = "AreYouSureDeletePhoto"
                    java.lang.String r0 = org.telegram.messenger.LocaleController.formatString(r10, r0, r8)
                    r3.setMessage(r0)
                    goto L_0x059b
                L_0x0570:
                    r8 = 2131624469(0x7f0e0215, float:1.8876119E38)
                    java.lang.String r10 = "AreYouSureDeleteVideoTitle"
                    java.lang.String r8 = org.telegram.messenger.LocaleController.getString(r10, r8)
                    r3.setTitle(r8)
                    if (r0 == 0) goto L_0x058d
                    r0 = 2131624468(0x7f0e0214, float:1.8876117E38)
                    java.lang.Object[] r8 = new java.lang.Object[r4]
                    java.lang.String r10 = "AreYouSureDeleteVideoEveryone"
                    java.lang.String r0 = org.telegram.messenger.LocaleController.formatString(r10, r0, r8)
                    r3.setMessage(r0)
                    goto L_0x059b
                L_0x058d:
                    r0 = 2131624467(0x7f0e0213, float:1.8876115E38)
                    java.lang.Object[] r8 = new java.lang.Object[r4]
                    java.lang.String r10 = "AreYouSureDeleteVideo"
                    java.lang.String r0 = org.telegram.messenger.LocaleController.formatString(r10, r0, r8)
                    r3.setMessage(r0)
                L_0x059b:
                    boolean[] r0 = new boolean[r2]
                    org.telegram.ui.PhotoViewer r8 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r8 = r8.currentMessageObject
                    if (r8 == 0) goto L_0x070e
                    org.telegram.ui.PhotoViewer r8 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r8 = r8.currentMessageObject
                    boolean r8 = r8.scheduled
                    if (r8 != 0) goto L_0x070e
                    org.telegram.ui.PhotoViewer r8 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r8 = r8.currentMessageObject
                    long r10 = r8.getDialogId()
                    boolean r8 = org.telegram.messenger.DialogObject.isEncryptedDialog(r10)
                    if (r8 != 0) goto L_0x070e
                    boolean r8 = org.telegram.messenger.DialogObject.isUserDialog(r10)
                    if (r8 == 0) goto L_0x05d9
                    org.telegram.ui.PhotoViewer r8 = org.telegram.ui.PhotoViewer.this
                    int r8 = r8.currentAccount
                    org.telegram.messenger.MessagesController r8 = org.telegram.messenger.MessagesController.getInstance(r8)
                    java.lang.Long r10 = java.lang.Long.valueOf(r10)
                    org.telegram.tgnet.TLRPC$User r8 = r8.getUser(r10)
                    r10 = r9
                    goto L_0x05ee
                L_0x05d9:
                    org.telegram.ui.PhotoViewer r8 = org.telegram.ui.PhotoViewer.this
                    int r8 = r8.currentAccount
                    org.telegram.messenger.MessagesController r8 = org.telegram.messenger.MessagesController.getInstance(r8)
                    long r10 = -r10
                    java.lang.Long r10 = java.lang.Long.valueOf(r10)
                    org.telegram.tgnet.TLRPC$Chat r8 = r8.getChat(r10)
                    r10 = r8
                    r8 = r9
                L_0x05ee:
                    if (r8 != 0) goto L_0x05f6
                    boolean r11 = org.telegram.messenger.ChatObject.isChannel(r10)
                    if (r11 != 0) goto L_0x070e
                L_0x05f6:
                    org.telegram.ui.PhotoViewer r11 = org.telegram.ui.PhotoViewer.this
                    int r11 = r11.currentAccount
                    org.telegram.tgnet.ConnectionsManager r11 = org.telegram.tgnet.ConnectionsManager.getInstance(r11)
                    int r11 = r11.getCurrentTime()
                    if (r8 == 0) goto L_0x0613
                    org.telegram.ui.PhotoViewer r12 = org.telegram.ui.PhotoViewer.this
                    int r12 = r12.currentAccount
                    org.telegram.messenger.MessagesController r12 = org.telegram.messenger.MessagesController.getInstance(r12)
                    int r12 = r12.revokeTimePmLimit
                    goto L_0x061f
                L_0x0613:
                    org.telegram.ui.PhotoViewer r12 = org.telegram.ui.PhotoViewer.this
                    int r12 = r12.currentAccount
                    org.telegram.messenger.MessagesController r12 = org.telegram.messenger.MessagesController.getInstance(r12)
                    int r12 = r12.revokeTimeLimit
                L_0x061f:
                    if (r8 == 0) goto L_0x0635
                    long r13 = r8.id
                    org.telegram.ui.PhotoViewer r15 = org.telegram.ui.PhotoViewer.this
                    int r15 = r15.currentAccount
                    org.telegram.messenger.UserConfig r15 = org.telegram.messenger.UserConfig.getInstance(r15)
                    long r15 = r15.getClientUserId()
                    int r17 = (r13 > r15 ? 1 : (r13 == r15 ? 0 : -1))
                    if (r17 != 0) goto L_0x0637
                L_0x0635:
                    if (r10 == 0) goto L_0x070e
                L_0x0637:
                    if (r8 == 0) goto L_0x0649
                    org.telegram.ui.PhotoViewer r13 = org.telegram.ui.PhotoViewer.this
                    int r13 = r13.currentAccount
                    org.telegram.messenger.MessagesController r13 = org.telegram.messenger.MessagesController.getInstance(r13)
                    boolean r13 = r13.canRevokePmInbox
                    if (r13 == 0) goto L_0x0649
                    r13 = 1
                    goto L_0x064a
                L_0x0649:
                    r13 = 0
                L_0x064a:
                    org.telegram.ui.PhotoViewer r14 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r14 = r14.currentMessageObject
                    org.telegram.tgnet.TLRPC$Message r14 = r14.messageOwner
                    org.telegram.tgnet.TLRPC$MessageAction r14 = r14.action
                    if (r14 == 0) goto L_0x0664
                    org.telegram.ui.PhotoViewer r14 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r14 = r14.currentMessageObject
                    org.telegram.tgnet.TLRPC$Message r14 = r14.messageOwner
                    org.telegram.tgnet.TLRPC$MessageAction r14 = r14.action
                    boolean r14 = r14 instanceof org.telegram.tgnet.TLRPC$TL_messageActionEmpty
                    if (r14 == 0) goto L_0x070e
                L_0x0664:
                    org.telegram.ui.PhotoViewer r14 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r14 = r14.currentMessageObject
                    boolean r14 = r14.isOut()
                    if (r14 != 0) goto L_0x0678
                    if (r13 != 0) goto L_0x0678
                    boolean r13 = org.telegram.messenger.ChatObject.hasAdminRights(r10)
                    if (r13 == 0) goto L_0x070e
                L_0x0678:
                    org.telegram.ui.PhotoViewer r13 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r13 = r13.currentMessageObject
                    org.telegram.tgnet.TLRPC$Message r13 = r13.messageOwner
                    int r13 = r13.date
                    int r11 = r11 - r13
                    if (r11 > r12) goto L_0x070e
                    android.widget.FrameLayout r11 = new android.widget.FrameLayout
                    org.telegram.ui.PhotoViewer r12 = org.telegram.ui.PhotoViewer.this
                    android.app.Activity r12 = r12.parentActivity
                    r11.<init>(r12)
                    org.telegram.ui.Cells.CheckBoxCell r12 = new org.telegram.ui.Cells.CheckBoxCell
                    org.telegram.ui.PhotoViewer r13 = org.telegram.ui.PhotoViewer.this
                    android.app.Activity r13 = r13.parentActivity
                    org.telegram.ui.ActionBar.Theme$ResourcesProvider r14 = r15
                    r12.<init>(r13, r2, r14)
                    android.graphics.drawable.Drawable r13 = org.telegram.ui.ActionBar.Theme.getSelectorDrawable(r4)
                    r12.setBackgroundDrawable(r13)
                    java.lang.String r13 = ""
                    if (r10 == 0) goto L_0x06b5
                    r2 = 2131625422(0x7f0e05ce, float:1.8878052E38)
                    java.lang.String r8 = "DeleteForAll"
                    java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r8, r2)
                    r12.setText(r2, r13, r4, r4)
                    goto L_0x06c9
                L_0x06b5:
                    r10 = 2131625423(0x7f0e05cf, float:1.8878054E38)
                    java.lang.Object[] r2 = new java.lang.Object[r2]
                    java.lang.String r8 = org.telegram.messenger.UserObject.getFirstName(r8)
                    r2[r4] = r8
                    java.lang.String r8 = "DeleteForUser"
                    java.lang.String r2 = org.telegram.messenger.LocaleController.formatString(r8, r10, r2)
                    r12.setText(r2, r13, r4, r4)
                L_0x06c9:
                    boolean r2 = org.telegram.messenger.LocaleController.isRTL
                    r8 = 1098907648(0x41800000, float:16.0)
                    r10 = 1090519040(0x41000000, float:8.0)
                    if (r2 == 0) goto L_0x06d6
                    int r2 = org.telegram.messenger.AndroidUtilities.dp(r8)
                    goto L_0x06da
                L_0x06d6:
                    int r2 = org.telegram.messenger.AndroidUtilities.dp(r10)
                L_0x06da:
                    boolean r13 = org.telegram.messenger.LocaleController.isRTL
                    if (r13 == 0) goto L_0x06e3
                    int r8 = org.telegram.messenger.AndroidUtilities.dp(r10)
                    goto L_0x06e7
                L_0x06e3:
                    int r8 = org.telegram.messenger.AndroidUtilities.dp(r8)
                L_0x06e7:
                    r12.setPadding(r2, r4, r8, r4)
                    r13 = -1
                    r14 = 1111490560(0x42400000, float:48.0)
                    r15 = 51
                    r16 = 0
                    r17 = 0
                    r18 = 0
                    r19 = 0
                    android.widget.FrameLayout$LayoutParams r2 = org.telegram.ui.Components.LayoutHelper.createFrame(r13, r14, r15, r16, r17, r18, r19)
                    r11.addView(r12, r2)
                    org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda4 r2 = new org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda4
                    r2.<init>(r0)
                    r12.setOnClickListener(r2)
                    r3.setView(r11)
                    r2 = 9
                    r3.setCustomViewOffset(r2)
                L_0x070e:
                    r2 = 2131625384(0x7f0e05a8, float:1.8877974E38)
                    java.lang.String r4 = "Delete"
                    java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r4, r2)
                    org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda2 r4 = new org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda2
                    r4.<init>(r7, r0)
                    r3.setPositiveButton(r2, r4)
                    java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r6, r5)
                    r3.setNegativeButton(r0, r9)
                    org.telegram.ui.ActionBar.AlertDialog r0 = r3.create()
                    org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                    r2.showAlertDialog(r3)
                    android.view.View r0 = r0.getButton(r1)
                    android.widget.TextView r0 = (android.widget.TextView) r0
                    if (r0 == 0) goto L_0x0c7a
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    java.lang.String r2 = "dialogTextRed2"
                    int r1 = r1.getThemedColor(r2)
                    r0.setTextColor(r1)
                    goto L_0x0c7a
                L_0x0744:
                    return
                L_0x0745:
                    r5 = 10
                    if (r0 == r5) goto L_0x0CLASSNAME
                    r5 = 18
                    if (r0 != r5) goto L_0x074f
                    goto L_0x0CLASSNAME
                L_0x074f:
                    r5 = 11
                    if (r0 != r5) goto L_0x07db
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this     // Catch:{ Exception -> 0x07d5 }
                    boolean r0 = r0.isEmbedVideo     // Catch:{ Exception -> 0x07d5 }
                    if (r0 == 0) goto L_0x0779
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this     // Catch:{ Exception -> 0x07d5 }
                    android.app.Activity r0 = r0.parentActivity     // Catch:{ Exception -> 0x07d5 }
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this     // Catch:{ Exception -> 0x07d5 }
                    org.telegram.messenger.MessageObject r1 = r1.currentMessageObject     // Catch:{ Exception -> 0x07d5 }
                    org.telegram.tgnet.TLRPC$Message r1 = r1.messageOwner     // Catch:{ Exception -> 0x07d5 }
                    org.telegram.tgnet.TLRPC$MessageMedia r1 = r1.media     // Catch:{ Exception -> 0x07d5 }
                    org.telegram.tgnet.TLRPC$WebPage r1 = r1.webpage     // Catch:{ Exception -> 0x07d5 }
                    java.lang.String r1 = r1.url     // Catch:{ Exception -> 0x07d5 }
                    org.telegram.messenger.browser.Browser.openUrl((android.content.Context) r0, (java.lang.String) r1)     // Catch:{ Exception -> 0x07d5 }
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this     // Catch:{ Exception -> 0x07d5 }
                    r0.closePhoto(r4, r4)     // Catch:{ Exception -> 0x07d5 }
                    goto L_0x0c7a
                L_0x0779:
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this     // Catch:{ Exception -> 0x07d5 }
                    org.telegram.messenger.MessageObject r0 = r0.currentMessageObject     // Catch:{ Exception -> 0x07d5 }
                    if (r0 == 0) goto L_0x07a3
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this     // Catch:{ Exception -> 0x07d5 }
                    org.telegram.messenger.MessageObject r0 = r0.currentMessageObject     // Catch:{ Exception -> 0x07d5 }
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this     // Catch:{ Exception -> 0x07d5 }
                    android.app.Activity r1 = r1.parentActivity     // Catch:{ Exception -> 0x07d5 }
                    org.telegram.ui.ActionBar.Theme$ResourcesProvider r2 = r15     // Catch:{ Exception -> 0x07d5 }
                    boolean r0 = org.telegram.messenger.AndroidUtilities.openForView((org.telegram.messenger.MessageObject) r0, (android.app.Activity) r1, (org.telegram.ui.ActionBar.Theme.ResourcesProvider) r2)     // Catch:{ Exception -> 0x07d5 }
                    if (r0 == 0) goto L_0x079c
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this     // Catch:{ Exception -> 0x07d5 }
                    r0.closePhoto(r4, r4)     // Catch:{ Exception -> 0x07d5 }
                    goto L_0x0c7a
                L_0x079c:
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this     // Catch:{ Exception -> 0x07d5 }
                    r0.showDownloadAlert()     // Catch:{ Exception -> 0x07d5 }
                    goto L_0x0c7a
                L_0x07a3:
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this     // Catch:{ Exception -> 0x07d5 }
                    org.telegram.ui.PhotoViewer$PageBlocksAdapter r0 = r0.pageBlocksAdapter     // Catch:{ Exception -> 0x07d5 }
                    if (r0 == 0) goto L_0x0c7a
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this     // Catch:{ Exception -> 0x07d5 }
                    org.telegram.ui.PhotoViewer$PageBlocksAdapter r0 = r0.pageBlocksAdapter     // Catch:{ Exception -> 0x07d5 }
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this     // Catch:{ Exception -> 0x07d5 }
                    int r1 = r1.currentIndex     // Catch:{ Exception -> 0x07d5 }
                    org.telegram.tgnet.TLObject r0 = r0.getMedia(r1)     // Catch:{ Exception -> 0x07d5 }
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this     // Catch:{ Exception -> 0x07d5 }
                    android.app.Activity r1 = r1.parentActivity     // Catch:{ Exception -> 0x07d5 }
                    boolean r0 = org.telegram.messenger.AndroidUtilities.openForView(r0, r1)     // Catch:{ Exception -> 0x07d5 }
                    if (r0 == 0) goto L_0x07ce
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this     // Catch:{ Exception -> 0x07d5 }
                    r0.closePhoto(r4, r4)     // Catch:{ Exception -> 0x07d5 }
                    goto L_0x0c7a
                L_0x07ce:
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this     // Catch:{ Exception -> 0x07d5 }
                    r0.showDownloadAlert()     // Catch:{ Exception -> 0x07d5 }
                    goto L_0x0c7a
                L_0x07d5:
                    r0 = move-exception
                    org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
                    goto L_0x0c7a
                L_0x07db:
                    r5 = 13
                    if (r0 == r5) goto L_0x0CLASSNAME
                    r5 = 15
                    if (r0 != r5) goto L_0x07e5
                    goto L_0x0CLASSNAME
                L_0x07e5:
                    r5 = 5
                    if (r0 != r5) goto L_0x085d
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r0.pipItem
                    float r0 = r0.getAlpha()
                    r1 = 1065353216(0x3var_, float:1.0)
                    int r0 = (r0 > r1 ? 1 : (r0 == r1 ? 0 : -1))
                    if (r0 == 0) goto L_0x07f9
                    return
                L_0x07f9:
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    boolean r0 = r0.isEmbedVideo
                    if (r0 == 0) goto L_0x0856
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.ui.Components.PhotoViewerWebView r0 = r0.photoViewerWebView
                    boolean r0 = r0.openInPip()
                    if (r0 == 0) goto L_0x0c7a
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.PipInstance
                    if (r0 == 0) goto L_0x081a
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.PipInstance
                    r0.destroyPhotoViewer()
                L_0x081a:
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    boolean unused = r0.isInline = r2
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.Instance
                    org.telegram.ui.PhotoViewer unused = org.telegram.ui.PhotoViewer.PipInstance = r0
                    org.telegram.ui.PhotoViewer unused = org.telegram.ui.PhotoViewer.Instance = r9
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    boolean unused = r0.isVisible = r4
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.ui.PhotoViewer$PlaceProviderObject r0 = r0.currentPlaceObject
                    if (r0 == 0) goto L_0x084f
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.ui.PhotoViewer$PlaceProviderObject r0 = r0.currentPlaceObject
                    org.telegram.messenger.ImageReceiver r0 = r0.imageReceiver
                    boolean r0 = r0.getVisible()
                    if (r0 != 0) goto L_0x084f
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.ui.PhotoViewer$PlaceProviderObject r0 = r0.currentPlaceObject
                    org.telegram.messenger.ImageReceiver r0 = r0.imageReceiver
                    r0.setVisible(r2, r2)
                L_0x084f:
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    r0.dismissInternal()
                    goto L_0x0c7a
                L_0x0856:
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    r0.switchToPip(r4)
                    goto L_0x0c7a
                L_0x085d:
                    r5 = 7
                    if (r0 != r5) goto L_0x0899
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r0 = r0.currentMessageObject
                    if (r0 != 0) goto L_0x0869
                    return
                L_0x0869:
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    int r0 = r0.currentAccount
                    org.telegram.messenger.FileLoader r0 = org.telegram.messenger.FileLoader.getInstance(r0)
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r1 = r1.currentMessageObject
                    org.telegram.tgnet.TLRPC$Document r1 = r1.getDocument()
                    r0.cancelLoadFile((org.telegram.tgnet.TLRPC$Document) r1)
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    r0.releasePlayer(r4)
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    android.widget.FrameLayout r0 = r0.bottomLayout
                    r0.setTag(r3)
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    android.widget.FrameLayout r0 = r0.bottomLayout
                    r0.setVisibility(r4)
                    goto L_0x0c7a
                L_0x0899:
                    r5 = 14
                    if (r0 != r5) goto L_0x0960
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r0 = r0.currentMessageObject
                    r3 = 1000(0x3e8, double:4.94E-321)
                    if (r0 == 0) goto L_0x08f6
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r0 = r0.currentMessageObject
                    org.telegram.tgnet.TLRPC$Document r0 = r0.getDocument()
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    org.telegram.ui.ChatActivity r1 = r1.parentChatActivity
                    if (r1 == 0) goto L_0x08cf
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    org.telegram.ui.ChatActivity r1 = r1.parentChatActivity
                    org.telegram.ui.Components.ChatActivityEnterView r1 = r1.chatActivityEnterView
                    if (r1 == 0) goto L_0x08cf
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    org.telegram.ui.ChatActivity r1 = r1.parentChatActivity
                    org.telegram.ui.Components.ChatActivityEnterView r1 = r1.chatActivityEnterView
                    r1.addRecentGif(r0)
                    goto L_0x08e2
                L_0x08cf:
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    int r1 = r1.currentAccount
                    org.telegram.messenger.MediaDataController r1 = org.telegram.messenger.MediaDataController.getInstance(r1)
                    long r5 = java.lang.System.currentTimeMillis()
                    long r5 = r5 / r3
                    int r3 = (int) r5
                    r1.addRecentGif(r0, r3, r2)
                L_0x08e2:
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    int r1 = r1.currentAccount
                    org.telegram.messenger.MessagesController r1 = org.telegram.messenger.MessagesController.getInstance(r1)
                    org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r2 = r2.currentMessageObject
                    r1.saveGif(r2, r0)
                    goto L_0x093e
                L_0x08f6:
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.ui.PhotoViewer$PageBlocksAdapter r0 = r0.pageBlocksAdapter
                    if (r0 == 0) goto L_0x095f
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.ui.PhotoViewer$PageBlocksAdapter r0 = r0.pageBlocksAdapter
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    int r1 = r1.currentIndex
                    org.telegram.tgnet.TLObject r0 = r0.getMedia(r1)
                    boolean r1 = r0 instanceof org.telegram.tgnet.TLRPC$Document
                    if (r1 == 0) goto L_0x093e
                    org.telegram.tgnet.TLRPC$Document r0 = (org.telegram.tgnet.TLRPC$Document) r0
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    int r1 = r1.currentAccount
                    org.telegram.messenger.MediaDataController r1 = org.telegram.messenger.MediaDataController.getInstance(r1)
                    long r5 = java.lang.System.currentTimeMillis()
                    long r5 = r5 / r3
                    int r3 = (int) r5
                    r1.addRecentGif(r0, r3, r2)
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    int r1 = r1.currentAccount
                    org.telegram.messenger.MessagesController r1 = org.telegram.messenger.MessagesController.getInstance(r1)
                    org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                    org.telegram.ui.PhotoViewer$PageBlocksAdapter r2 = r2.pageBlocksAdapter
                    java.lang.Object r2 = r2.getParentObject()
                    r1.saveGif(r2, r0)
                L_0x093e:
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.ui.PhotoViewer$FrameLayoutDrawer r0 = r0.containerView
                    if (r0 == 0) goto L_0x0c7a
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.ui.PhotoViewer$FrameLayoutDrawer r0 = r0.containerView
                    org.telegram.ui.ActionBar.Theme$ResourcesProvider r1 = r15
                    org.telegram.ui.Components.BulletinFactory r0 = org.telegram.ui.Components.BulletinFactory.of(r0, r1)
                    org.telegram.ui.Components.BulletinFactory$FileType r1 = org.telegram.ui.Components.BulletinFactory.FileType.GIF
                    org.telegram.ui.ActionBar.Theme$ResourcesProvider r2 = r15
                    org.telegram.ui.Components.Bulletin r0 = r0.createDownloadBulletin(r1, r2)
                    r0.show()
                    goto L_0x0c7a
                L_0x095f:
                    return
                L_0x0960:
                    r5 = 16
                    if (r0 != r5) goto L_0x0b9f
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    java.util.ArrayList r0 = r0.avatarsArr
                    org.telegram.ui.PhotoViewer r5 = org.telegram.ui.PhotoViewer.this
                    int r5 = r5.currentIndex
                    java.lang.Object r0 = r0.get(r5)
                    org.telegram.tgnet.TLRPC$Photo r0 = (org.telegram.tgnet.TLRPC$Photo) r0
                    if (r0 == 0) goto L_0x0b9e
                    java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r5 = r0.sizes
                    boolean r5 = r5.isEmpty()
                    if (r5 == 0) goto L_0x0982
                    goto L_0x0b9e
                L_0x0982:
                    java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r5 = r0.sizes
                    r6 = 800(0x320, float:1.121E-42)
                    org.telegram.tgnet.TLRPC$PhotoSize r5 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r5, r6)
                    java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r6 = r0.sizes
                    r8 = 90
                    org.telegram.tgnet.TLRPC$PhotoSize r6 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r6, r8)
                    org.telegram.ui.PhotoViewer r8 = org.telegram.ui.PhotoViewer.this
                    int r8 = r8.currentAccount
                    org.telegram.messenger.UserConfig r8 = org.telegram.messenger.UserConfig.getInstance(r8)
                    org.telegram.ui.PhotoViewer r10 = org.telegram.ui.PhotoViewer.this
                    long r10 = r10.avatarsDialogId
                    long r12 = r8.clientUserId
                    int r14 = (r10 > r12 ? 1 : (r10 == r12 ? 0 : -1))
                    if (r14 != 0) goto L_0x0a12
                    org.telegram.tgnet.TLRPC$TL_photos_updateProfilePhoto r10 = new org.telegram.tgnet.TLRPC$TL_photos_updateProfilePhoto
                    r10.<init>()
                    org.telegram.tgnet.TLRPC$TL_inputPhoto r11 = new org.telegram.tgnet.TLRPC$TL_inputPhoto
                    r11.<init>()
                    r10.id = r11
                    long r12 = r0.id
                    r11.id = r12
                    long r12 = r0.access_hash
                    r11.access_hash = r12
                    byte[] r12 = r0.file_reference
                    r11.file_reference = r12
                    org.telegram.ui.PhotoViewer r11 = org.telegram.ui.PhotoViewer.this
                    int r11 = r11.currentAccount
                    org.telegram.tgnet.ConnectionsManager r11 = org.telegram.tgnet.ConnectionsManager.getInstance(r11)
                    org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda8 r12 = new org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda8
                    r12.<init>(r7, r8, r0)
                    r11.sendRequest(r10, r12)
                    org.telegram.ui.PhotoViewer r10 = org.telegram.ui.PhotoViewer.this
                    int r10 = r10.currentAccount
                    org.telegram.messenger.MessagesController r10 = org.telegram.messenger.MessagesController.getInstance(r10)
                    long r11 = r8.clientUserId
                    java.lang.Long r11 = java.lang.Long.valueOf(r11)
                    org.telegram.tgnet.TLRPC$User r10 = r10.getUser(r11)
                    if (r10 == 0) goto L_0x0a8d
                    org.telegram.tgnet.TLRPC$UserProfilePhoto r11 = r10.photo
                    long r12 = r0.id
                    r11.photo_id = r12
                    int r12 = r0.dc_id
                    r11.dc_id = r12
                    org.telegram.tgnet.TLRPC$FileLocation r6 = r6.location
                    r11.photo_small = r6
                    org.telegram.tgnet.TLRPC$FileLocation r6 = r5.location
                    r11.photo_big = r6
                    r8.setCurrentUser(r10)
                    r8.saveConfig(r2)
                    org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                    int r2 = r2.currentAccount
                    org.telegram.messenger.NotificationCenter r2 = org.telegram.messenger.NotificationCenter.getInstance(r2)
                    int r6 = org.telegram.messenger.NotificationCenter.mainUserInfoChanged
                    java.lang.Object[] r8 = new java.lang.Object[r4]
                    r2.postNotificationName(r6, r8)
                    goto L_0x0a8d
                L_0x0a12:
                    org.telegram.ui.PhotoViewer r8 = org.telegram.ui.PhotoViewer.this
                    int r8 = r8.currentAccount
                    org.telegram.messenger.MessagesController r8 = org.telegram.messenger.MessagesController.getInstance(r8)
                    org.telegram.ui.PhotoViewer r10 = org.telegram.ui.PhotoViewer.this
                    long r10 = r10.avatarsDialogId
                    long r10 = -r10
                    java.lang.Long r10 = java.lang.Long.valueOf(r10)
                    org.telegram.tgnet.TLRPC$Chat r8 = r8.getChat(r10)
                    if (r8 != 0) goto L_0x0a2e
                    return
                L_0x0a2e:
                    org.telegram.tgnet.TLRPC$TL_inputChatPhoto r13 = new org.telegram.tgnet.TLRPC$TL_inputChatPhoto
                    r13.<init>()
                    org.telegram.tgnet.TLRPC$TL_inputPhoto r10 = new org.telegram.tgnet.TLRPC$TL_inputPhoto
                    r10.<init>()
                    r13.id = r10
                    long r11 = r0.id
                    r10.id = r11
                    long r11 = r0.access_hash
                    r10.access_hash = r11
                    byte[] r11 = r0.file_reference
                    r10.file_reference = r11
                    org.telegram.ui.PhotoViewer r10 = org.telegram.ui.PhotoViewer.this
                    int r10 = r10.currentAccount
                    org.telegram.messenger.MessagesController r10 = org.telegram.messenger.MessagesController.getInstance(r10)
                    org.telegram.ui.PhotoViewer r11 = org.telegram.ui.PhotoViewer.this
                    long r11 = r11.avatarsDialogId
                    long r11 = -r11
                    r14 = 0
                    r15 = 0
                    r16 = 0
                    r18 = 0
                    r19 = 0
                    r20 = 0
                    r21 = 0
                    r10.changeChatAvatar(r11, r13, r14, r15, r16, r18, r19, r20, r21)
                    org.telegram.tgnet.TLRPC$ChatPhoto r8 = r8.photo
                    int r10 = r0.dc_id
                    r8.dc_id = r10
                    org.telegram.tgnet.TLRPC$FileLocation r6 = r6.location
                    r8.photo_small = r6
                    org.telegram.tgnet.TLRPC$FileLocation r6 = r5.location
                    r8.photo_big = r6
                    org.telegram.ui.PhotoViewer r6 = org.telegram.ui.PhotoViewer.this
                    int r6 = r6.currentAccount
                    org.telegram.messenger.NotificationCenter r6 = org.telegram.messenger.NotificationCenter.getInstance(r6)
                    int r8 = org.telegram.messenger.NotificationCenter.updateInterfaces
                    java.lang.Object[] r2 = new java.lang.Object[r2]
                    int r10 = org.telegram.messenger.MessagesController.UPDATE_MASK_AVATAR
                    java.lang.Integer r10 = java.lang.Integer.valueOf(r10)
                    r2[r4] = r10
                    r6.postNotificationName(r8, r2)
                L_0x0a8d:
                    org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.ImageLocation r5 = org.telegram.messenger.ImageLocation.getForPhoto((org.telegram.tgnet.TLRPC$PhotoSize) r5, (org.telegram.tgnet.TLRPC$Photo) r0)
                    org.telegram.messenger.ImageLocation unused = r2.currentAvatarLocation = r5
                    org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                    java.util.ArrayList r2 = r2.avatarsArr
                    org.telegram.ui.PhotoViewer r5 = org.telegram.ui.PhotoViewer.this
                    int r5 = r5.currentIndex
                    r2.remove(r5)
                    org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                    java.util.ArrayList r2 = r2.avatarsArr
                    r2.add(r4, r0)
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    java.util.ArrayList r0 = r0.imagesArrLocations
                    org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                    int r2 = r2.currentIndex
                    java.lang.Object r0 = r0.get(r2)
                    org.telegram.messenger.ImageLocation r0 = (org.telegram.messenger.ImageLocation) r0
                    org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                    java.util.ArrayList r2 = r2.imagesArrLocations
                    org.telegram.ui.PhotoViewer r5 = org.telegram.ui.PhotoViewer.this
                    int r5 = r5.currentIndex
                    r2.remove(r5)
                    org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                    java.util.ArrayList r2 = r2.imagesArrLocations
                    r2.add(r4, r0)
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    java.util.ArrayList r0 = r0.imagesArrLocationsVideo
                    org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                    int r2 = r2.currentIndex
                    java.lang.Object r0 = r0.get(r2)
                    org.telegram.messenger.ImageLocation r0 = (org.telegram.messenger.ImageLocation) r0
                    org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                    java.util.ArrayList r2 = r2.imagesArrLocationsVideo
                    org.telegram.ui.PhotoViewer r5 = org.telegram.ui.PhotoViewer.this
                    int r5 = r5.currentIndex
                    r2.remove(r5)
                    org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                    java.util.ArrayList r2 = r2.imagesArrLocationsVideo
                    r2.add(r4, r0)
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    java.util.ArrayList r0 = r0.imagesArrLocationsSizes
                    org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                    int r2 = r2.currentIndex
                    java.lang.Object r0 = r0.get(r2)
                    java.lang.Long r0 = (java.lang.Long) r0
                    org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                    java.util.ArrayList r2 = r2.imagesArrLocationsSizes
                    org.telegram.ui.PhotoViewer r5 = org.telegram.ui.PhotoViewer.this
                    int r5 = r5.currentIndex
                    r2.remove(r5)
                    org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                    java.util.ArrayList r2 = r2.imagesArrLocationsSizes
                    r2.add(r4, r0)
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    java.util.ArrayList r0 = r0.imagesArrMessages
                    org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                    int r2 = r2.currentIndex
                    java.lang.Object r0 = r0.get(r2)
                    org.telegram.tgnet.TLRPC$Message r0 = (org.telegram.tgnet.TLRPC$Message) r0
                    org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                    java.util.ArrayList r2 = r2.imagesArrMessages
                    org.telegram.ui.PhotoViewer r5 = org.telegram.ui.PhotoViewer.this
                    int r5 = r5.currentIndex
                    r2.remove(r5)
                    org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                    java.util.ArrayList r2 = r2.imagesArrMessages
                    r2.add(r4, r0)
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    int unused = r0.currentIndex = r1
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    r0.setImageIndex(r4)
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.ui.Components.GroupedPhotosListView r0 = r0.groupedPhotosListView
                    r0.clear()
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.ui.Components.GroupedPhotosListView r0 = r0.groupedPhotosListView
                    r0.fillList()
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.ui.Components.UndoView r0 = r0.hintView
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    long r1 = r1.avatarsDialogId
                    r4 = 22
                    org.telegram.ui.PhotoViewer r5 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.ImageLocation r5 = r5.currentFileLocationVideo
                    org.telegram.ui.PhotoViewer r6 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.ImageLocation r6 = r6.currentFileLocation
                    if (r5 != r6) goto L_0x0b8f
                    r3 = r9
                L_0x0b8f:
                    r0.showWithAction((long) r1, (int) r4, (java.lang.Object) r3)
                    org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda5 r0 = new org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda5
                    r0.<init>(r7)
                    r1 = 300(0x12c, double:1.48E-321)
                    org.telegram.messenger.AndroidUtilities.runOnUIThread(r0, r1)
                    goto L_0x0c7a
                L_0x0b9e:
                    return
                L_0x0b9f:
                    r1 = 17
                    if (r0 != r1) goto L_0x0c7a
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    int r0 = r0.currentAccount
                    org.telegram.messenger.FileLoader r0 = org.telegram.messenger.FileLoader.getInstance(r0)
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.ImageLocation r1 = r1.currentFileLocationVideo
                    org.telegram.tgnet.TLRPC$FileLocation r1 = org.telegram.ui.PhotoViewer.getFileLocation(r1)
                    org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.ImageLocation r3 = r3.currentFileLocationVideo
                    java.lang.String r3 = org.telegram.ui.PhotoViewer.getFileLocationExt(r3)
                    java.io.File r0 = r0.getPathToAttach(r1, r3, r2)
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.ImageLocation r1 = r1.currentFileLocationVideo
                    int r1 = r1.imageType
                    if (r1 != r10) goto L_0x0bd0
                    r4 = 1
                L_0x0bd0:
                    if (r4 == 0) goto L_0x0bf8
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    int r1 = r1.currentAccount
                    org.telegram.messenger.FileLoader r1 = org.telegram.messenger.FileLoader.getInstance(r1)
                    org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.ImageLocation r3 = r3.currentFileLocation
                    org.telegram.tgnet.TLRPC$FileLocation r3 = org.telegram.ui.PhotoViewer.getFileLocation(r3)
                    org.telegram.ui.PhotoViewer r5 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.ImageLocation r5 = r5.currentFileLocation
                    java.lang.String r5 = org.telegram.ui.PhotoViewer.getFileLocationExt(r5)
                    java.io.File r1 = r1.getPathToAttach(r3, r5, r2)
                    java.lang.String r9 = r1.getAbsolutePath()
                L_0x0bf8:
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    org.telegram.ui.PhotoViewer$PhotoViewerProvider r1 = r1.placeProvider
                    java.lang.String r0 = r0.getAbsolutePath()
                    r1.openPhotoForEdit(r0, r9, r4)
                    goto L_0x0c7a
                L_0x0CLASSNAME:
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    android.app.Activity r0 = r0.parentActivity
                    if (r0 == 0) goto L_0x0CLASSNAME
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r0 = r0.currentMessageObject
                    if (r0 != 0) goto L_0x0CLASSNAME
                    goto L_0x0CLASSNAME
                L_0x0CLASSNAME:
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r0 = r0.currentMessageObject
                    org.telegram.tgnet.TLRPC$Message r0 = r0.messageOwner
                    org.telegram.tgnet.TLRPC$MessageMedia r0 = r0.media
                    boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaPhoto
                    if (r0 == 0) goto L_0x0CLASSNAME
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r0 = r0.currentMessageObject
                    org.telegram.tgnet.TLRPC$Message r0 = r0.messageOwner
                    org.telegram.tgnet.TLRPC$MessageMedia r0 = r0.media
                    org.telegram.tgnet.TLRPC$Photo r0 = r0.photo
                L_0x0CLASSNAME:
                    r5 = r0
                    goto L_0x0c4f
                L_0x0CLASSNAME:
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r0 = r0.currentMessageObject
                    org.telegram.tgnet.TLRPC$Message r0 = r0.messageOwner
                    org.telegram.tgnet.TLRPC$MessageMedia r0 = r0.media
                    boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaDocument
                    if (r0 == 0) goto L_0x0CLASSNAME
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r0 = r0.currentMessageObject
                    org.telegram.tgnet.TLRPC$Message r0 = r0.messageOwner
                    org.telegram.tgnet.TLRPC$MessageMedia r0 = r0.media
                    org.telegram.tgnet.TLRPC$Document r0 = r0.document
                    goto L_0x0CLASSNAME
                L_0x0c4f:
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.ui.PhotoViewer$12$1 r8 = new org.telegram.ui.PhotoViewer$12$1
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    android.app.Activity r3 = r1.parentActivity
                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                    org.telegram.messenger.MessageObject r4 = r1.currentMessageObject
                    org.telegram.ui.ActionBar.Theme$ResourcesProvider r6 = r15
                    r1 = r8
                    r2 = r22
                    r1.<init>(r3, r4, r5, r6)
                    org.telegram.ui.Components.StickersAlert unused = r0.masksAlert = r8
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.ui.Components.StickersAlert r0 = r0.masksAlert
                    r0.show()
                    goto L_0x0c7a
                L_0x0CLASSNAME:
                    return
                L_0x0CLASSNAME:
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    r0.onSharePressed()
                L_0x0c7a:
                    return
                */
                throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.AnonymousClass12.onItemClick(int):void");
            }

            /* access modifiers changed from: private */
            public /* synthetic */ void lambda$onItemClick$8(UserConfig userConfig, TLRPC$Photo tLRPC$Photo, TLObject tLObject, TLRPC$TL_error tLRPC$TL_error) {
                AndroidUtilities.runOnUIThread(new PhotoViewer$12$$ExternalSyntheticLambda6(this, tLObject, userConfig, tLRPC$Photo));
            }

            /* access modifiers changed from: private */
            public /* synthetic */ void lambda$onItemClick$7(TLObject tLObject, UserConfig userConfig, TLRPC$Photo tLRPC$Photo) {
                if (tLObject instanceof TLRPC$TL_photos_photo) {
                    TLRPC$TL_photos_photo tLRPC$TL_photos_photo = (TLRPC$TL_photos_photo) tLObject;
                    MessagesController.getInstance(PhotoViewer.this.currentAccount).putUsers(tLRPC$TL_photos_photo.users, false);
                    TLRPC$User user = MessagesController.getInstance(PhotoViewer.this.currentAccount).getUser(Long.valueOf(userConfig.clientUserId));
                    if (tLRPC$TL_photos_photo.photo instanceof TLRPC$TL_photo) {
                        int indexOf = PhotoViewer.this.avatarsArr.indexOf(tLRPC$Photo);
                        if (indexOf >= 0) {
                            PhotoViewer.this.avatarsArr.set(indexOf, tLRPC$TL_photos_photo.photo);
                        }
                        if (user != null) {
                            user.photo.photo_id = tLRPC$TL_photos_photo.photo.id;
                            userConfig.setCurrentUser(user);
                            userConfig.saveConfig(true);
                        }
                    }
                }
            }

            /* access modifiers changed from: private */
            public /* synthetic */ void lambda$onItemClick$9() {
                if (PhotoViewer.this.menuItem != null) {
                    PhotoViewer.this.menuItem.hideSubItem(16);
                }
            }

            public boolean canOpenMenu() {
                boolean z = true;
                if (PhotoViewer.this.currentMessageObject != null || PhotoViewer.this.currentSecureDocument != null) {
                    return true;
                }
                if (PhotoViewer.this.currentFileLocationVideo != null) {
                    FileLoader instance = FileLoader.getInstance(PhotoViewer.this.currentAccount);
                    TLRPC$FileLocation fileLocation = PhotoViewer.getFileLocation(PhotoViewer.this.currentFileLocationVideo);
                    String fileLocationExt = PhotoViewer.getFileLocationExt(PhotoViewer.this.currentFileLocationVideo);
                    if (PhotoViewer.this.avatarsDialogId == 0 && !PhotoViewer.this.isEvent) {
                        z = false;
                    }
                    return instance.getPathToAttach(fileLocation, fileLocationExt, z).exists();
                } else if (PhotoViewer.this.pageBlocksAdapter != null) {
                    return true;
                } else {
                    return false;
                }
            }
        });
        ActionBarMenu createMenu = this.actionBar.createMenu();
        ActionBarMenuItem addItem = createMenu.addItem(13, NUM);
        this.masksItem = addItem;
        addItem.setContentDescription(LocaleController.getString("Masks", NUM));
        ActionBarMenuItem addItem2 = createMenu.addItem(5, NUM);
        this.pipItem = addItem2;
        addItem2.setContentDescription(LocaleController.getString("AccDescrPipMode", NUM));
        ActionBarMenuItem addItem3 = createMenu.addItem(3, NUM);
        this.sendItem = addItem3;
        addItem3.setContentDescription(LocaleController.getString("Forward", NUM));
        ActionBarMenuItem addItem4 = createMenu.addItem(18, NUM);
        this.shareItem = addItem4;
        addItem4.setContentDescription(LocaleController.getString("ShareFile", NUM));
        ActionBarMenuItem addItem5 = createMenu.addItem(0, NUM);
        this.menuItem = addItem5;
        addItem5.getPopupLayout().swipeBackGravityRight = true;
        this.chooseSpeedLayout = new ChooseSpeedLayout(this.activityContext, this.menuItem.getPopupLayout().getSwipeBack(), new ChooseSpeedLayout.Callback() {
            public void onSpeedSelected(float f) {
                PhotoViewer.this.menuItem.toggleSubMenu();
                if (f != PhotoViewer.this.currentVideoSpeed) {
                    float unused = PhotoViewer.this.currentVideoSpeed = f;
                    if (PhotoViewer.this.currentMessageObject != null) {
                        SharedPreferences sharedPreferences = ApplicationLoader.applicationContext.getSharedPreferences("playback_speed", 0);
                        if (Math.abs(PhotoViewer.this.currentVideoSpeed - 1.0f) < 0.001f) {
                            SharedPreferences.Editor edit = sharedPreferences.edit();
                            edit.remove("speed" + PhotoViewer.this.currentMessageObject.getDialogId() + "_" + PhotoViewer.this.currentMessageObject.getId()).commit();
                        } else {
                            SharedPreferences.Editor edit2 = sharedPreferences.edit();
                            edit2.putFloat("speed" + PhotoViewer.this.currentMessageObject.getDialogId() + "_" + PhotoViewer.this.currentMessageObject.getId(), PhotoViewer.this.currentVideoSpeed).commit();
                        }
                    }
                    if (PhotoViewer.this.videoPlayer != null) {
                        PhotoViewer.this.videoPlayer.setPlaybackSpeed(PhotoViewer.this.currentVideoSpeed);
                    }
                    if (PhotoViewer.this.photoViewerWebView != null) {
                        PhotoViewer.this.photoViewerWebView.setPlaybackSpeed(PhotoViewer.this.currentVideoSpeed);
                    }
                    PhotoViewer.this.setMenuItemIcon();
                }
            }
        });
        this.speedItem = this.menuItem.addSwipeBackItem(NUM, (Drawable) null, LocaleController.getString("Speed", NUM), this.chooseSpeedLayout.speedSwipeBackLayout);
        this.menuItem.getPopupLayout().setSwipeBackForegroundColor(-14540254);
        this.speedItem.setSubtext(LocaleController.getString("SpeedNormal", NUM));
        this.speedItem.setColors(-328966, -328966);
        ActionBarPopupWindow.GapView addColoredGap = this.menuItem.addColoredGap();
        this.speedGap = addColoredGap;
        addColoredGap.setColor(-15198184);
        this.menuItem.getPopupLayout().setFitItems(true);
        this.menuItem.addSubItem(11, NUM, LocaleController.getString("OpenInExternalApp", NUM)).setColors(-328966, -328966);
        this.menuItem.setContentDescription(LocaleController.getString("AccDescrMoreOptions", NUM));
        ActionBarMenuSubItem addSubItem = this.menuItem.addSubItem(2, NUM, LocaleController.getString("ShowAllMedia", NUM));
        this.allMediaItem = addSubItem;
        addSubItem.setColors(-328966, -328966);
        this.menuItem.addSubItem(14, NUM, LocaleController.getString("SaveToGIFs", NUM)).setColors(-328966, -328966);
        this.menuItem.addSubItem(4, NUM, LocaleController.getString("ShowInChat", NUM)).setColors(-328966, -328966);
        this.menuItem.addSubItem(15, NUM, LocaleController.getString("ShowStickers", NUM)).setColors(-328966, -328966);
        this.menuItem.addSubItem(10, NUM, LocaleController.getString("ShareFile", NUM)).setColors(-328966, -328966);
        this.menuItem.addSubItem(1, NUM, LocaleController.getString("SaveToGallery", NUM)).setColors(-328966, -328966);
        this.menuItem.addSubItem(16, NUM, LocaleController.getString("SetAsMain", NUM)).setColors(-328966, -328966);
        this.menuItem.addSubItem(6, NUM, LocaleController.getString("Delete", NUM)).setColors(-328966, -328966);
        this.menuItem.addSubItem(7, NUM, LocaleController.getString("StopDownload", NUM)).setColors(-328966, -328966);
        this.menuItem.redrawPopup(-NUM);
        setMenuItemIcon();
        this.menuItem.setPopupItemsSelectorColor(NUM);
        this.menuItem.setSubMenuDelegate(new ActionBarMenuItem.ActionBarSubMenuItemDelegate() {
            public void onShowSubMenu() {
                if (PhotoViewer.this.videoPlayerControlVisible && PhotoViewer.this.isPlaying) {
                    AndroidUtilities.cancelRunOnUIThread(PhotoViewer.this.hideActionBarRunnable);
                }
            }

            public void onHideSubMenu() {
                if (PhotoViewer.this.videoPlayerControlVisible && PhotoViewer.this.isPlaying) {
                    PhotoViewer.this.scheduleActionBarHide();
                }
            }
        });
        AnonymousClass15 r13 = new FrameLayout(this.activityContext) {
            /* access modifiers changed from: protected */
            public void measureChildWithMargins(View view, int i, int i2, int i3, int i4) {
                if (view == PhotoViewer.this.nameTextView || view == PhotoViewer.this.dateTextView) {
                    i2 = PhotoViewer.this.bottomButtonsLayout.getMeasuredWidth();
                }
                super.measureChildWithMargins(view, i, i2, i3, i4);
            }
        };
        this.bottomLayout = r13;
        r13.setBackgroundColor(NUM);
        this.containerView.addView(this.bottomLayout, LayoutHelper.createFrame(-1, 48, 83));
        View view = new View(this.activityContext);
        this.navigationBar = view;
        view.setBackgroundColor(NUM);
        this.windowView.addView(this.navigationBar, LayoutHelper.createFrame(-1.0f, ((float) this.navigationBarHeight) / AndroidUtilities.density, 87));
        this.pressedDrawable[0] = new GradientDrawable(GradientDrawable.Orientation.LEFT_RIGHT, new int[]{NUM, 0});
        this.pressedDrawable[0].setShape(0);
        this.pressedDrawable[1] = new GradientDrawable(GradientDrawable.Orientation.RIGHT_LEFT, new int[]{NUM, 0});
        this.pressedDrawable[1].setShape(0);
        GroupedPhotosListView groupedPhotosListView2 = new GroupedPhotosListView(this.activityContext, AndroidUtilities.dp(10.0f));
        this.groupedPhotosListView = groupedPhotosListView2;
        this.containerView.addView(groupedPhotosListView2, LayoutHelper.createFrame(-1, 68, 83));
        this.groupedPhotosListView.setDelegate(new GroupedPhotosListView.GroupedPhotosListViewDelegate() {
            public int getCurrentIndex() {
                return PhotoViewer.this.currentIndex;
            }

            public int getCurrentAccount() {
                return PhotoViewer.this.currentAccount;
            }

            public long getAvatarsDialogId() {
                return PhotoViewer.this.avatarsDialogId;
            }

            public int getSlideshowMessageId() {
                return PhotoViewer.this.slideshowMessageId;
            }

            public ArrayList<ImageLocation> getImagesArrLocations() {
                return PhotoViewer.this.imagesArrLocations;
            }

            public ArrayList<MessageObject> getImagesArr() {
                return PhotoViewer.this.imagesArr;
            }

            public List<TLRPC$PageBlock> getPageBlockArr() {
                if (PhotoViewer.this.pageBlocksAdapter != null) {
                    return PhotoViewer.this.pageBlocksAdapter.getAll();
                }
                return null;
            }

            public Object getParentObject() {
                if (PhotoViewer.this.pageBlocksAdapter != null) {
                    return PhotoViewer.this.pageBlocksAdapter.getParentObject();
                }
                return null;
            }

            public void setCurrentIndex(int i) {
                int unused = PhotoViewer.this.currentIndex = -1;
                if (PhotoViewer.this.currentThumb != null) {
                    PhotoViewer.this.currentThumb.release();
                    ImageReceiver.BitmapHolder unused2 = PhotoViewer.this.currentThumb = null;
                }
                boolean unused3 = PhotoViewer.this.dontAutoPlay = true;
                PhotoViewer.this.setImageIndex(i);
                boolean unused4 = PhotoViewer.this.dontAutoPlay = false;
            }

            public void onShowAnimationStart() {
                PhotoViewer.this.containerView.requestLayout();
            }

            public void onStopScrolling() {
                PhotoViewer photoViewer = PhotoViewer.this;
                if (photoViewer.shouldMessageObjectAutoPlayed(photoViewer.currentMessageObject)) {
                    boolean unused = PhotoViewer.this.playerAutoStarted = true;
                    PhotoViewer.this.onActionClick(true);
                    PhotoViewer.this.checkProgress(0, false, true);
                }
            }
        });
        for (int i3 = 0; i3 < 3; i3++) {
            this.fullscreenButton[i3] = new ImageView(this.parentActivity);
            this.fullscreenButton[i3].setImageResource(NUM);
            this.fullscreenButton[i3].setContentDescription(LocaleController.getString("AccSwitchToFullscreen", NUM));
            this.fullscreenButton[i3].setScaleType(ImageView.ScaleType.CENTER);
            this.fullscreenButton[i3].setBackground(Theme.createSelectorDrawable(NUM));
            this.fullscreenButton[i3].setVisibility(4);
            this.fullscreenButton[i3].setAlpha(1.0f);
            this.containerView.addView(this.fullscreenButton[i3], LayoutHelper.createFrame(48, 48.0f));
            this.fullscreenButton[i3].setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda27(this));
        }
        CaptionTextViewSwitcher captionTextViewSwitcher2 = new CaptionTextViewSwitcher(this.containerView.getContext());
        this.captionTextViewSwitcher = captionTextViewSwitcher2;
        captionTextViewSwitcher2.setFactory(new PhotoViewer$$ExternalSyntheticLambda46(this));
        this.captionTextViewSwitcher.setVisibility(4);
        setCaptionHwLayerEnabled(true);
        for (int i4 = 0; i4 < 3; i4++) {
            this.photoProgressViews[i4] = new PhotoProgressView(this.containerView) {
                /* access modifiers changed from: protected */
                public void onBackgroundStateUpdated(int i) {
                    if (this == PhotoViewer.this.photoProgressViews[0]) {
                        PhotoViewer.this.updateAccessibilityOverlayVisibility();
                    }
                }

                /* access modifiers changed from: protected */
                public void onVisibilityChanged(boolean z) {
                    if (this == PhotoViewer.this.photoProgressViews[0]) {
                        PhotoViewer.this.updateAccessibilityOverlayVisibility();
                    }
                }
            };
            this.photoProgressViews[i4].setBackgroundState(0, false, true);
        }
        AnonymousClass18 r14 = new RadialProgressView(this.activityContext, resourcesProvider3) {
            public void setAlpha(float f) {
                super.setAlpha(f);
                if (PhotoViewer.this.containerView != null) {
                    PhotoViewer.this.containerView.invalidate();
                }
            }

            public void invalidate() {
                super.invalidate();
                if (PhotoViewer.this.containerView != null) {
                    PhotoViewer.this.containerView.invalidate();
                }
            }
        };
        this.miniProgressView = r14;
        r14.setUseSelfAlpha(true);
        this.miniProgressView.setProgressColor(-1);
        this.miniProgressView.setSize(AndroidUtilities.dp(54.0f));
        this.miniProgressView.setBackgroundResource(NUM);
        this.miniProgressView.setVisibility(4);
        this.miniProgressView.setAlpha(0.0f);
        this.containerView.addView(this.miniProgressView, LayoutHelper.createFrame(64, 64, 17));
        LinearLayout linearLayout = new LinearLayout(this.containerView.getContext());
        this.bottomButtonsLayout = linearLayout;
        linearLayout.setOrientation(0);
        this.bottomLayout.addView(this.bottomButtonsLayout, LayoutHelper.createFrame(-2, -1, 53));
        ImageView imageView = new ImageView(this.containerView.getContext());
        this.paintButton = imageView;
        imageView.setImageResource(NUM);
        this.paintButton.setScaleType(ImageView.ScaleType.CENTER);
        this.paintButton.setBackgroundDrawable(Theme.createSelectorDrawable(NUM));
        this.bottomButtonsLayout.addView(this.paintButton, LayoutHelper.createFrame(50, -1.0f));
        this.paintButton.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda26(this));
        this.paintButton.setContentDescription(LocaleController.getString("AccDescrPhotoEditor", NUM));
        ImageView imageView2 = new ImageView(this.containerView.getContext());
        this.shareButton = imageView2;
        imageView2.setImageResource(NUM);
        this.shareButton.setScaleType(ImageView.ScaleType.CENTER);
        this.shareButton.setBackgroundDrawable(Theme.createSelectorDrawable(NUM));
        this.bottomButtonsLayout.addView(this.shareButton, LayoutHelper.createFrame(50, -1.0f));
        this.shareButton.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda29(this));
        this.shareButton.setContentDescription(LocaleController.getString("ShareFile", NUM));
        AnonymousClass19 r15 = new FadingTextViewLayout(this, this.containerView.getContext()) {
            /* access modifiers changed from: protected */
            public void onTextViewCreated(TextView textView) {
                super.onTextViewCreated(textView);
                textView.setTextSize(1, 14.0f);
                textView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
                textView.setEllipsize(TextUtils.TruncateAt.END);
                textView.setTextColor(-1);
                textView.setGravity(3);
            }
        };
        this.nameTextView = r15;
        this.bottomLayout.addView(r15, LayoutHelper.createFrame(-1, -2.0f, 51, 16.0f, 5.0f, 8.0f, 0.0f));
        AnonymousClass20 r16 = new FadingTextViewLayout(this, this.containerView.getContext(), true) {
            private LocaleController.LocaleInfo lastLocaleInfo = null;
            private int staticCharsCount = 0;

            /* access modifiers changed from: protected */
            public void onTextViewCreated(TextView textView) {
                super.onTextViewCreated(textView);
                textView.setTextSize(1, 13.0f);
                textView.setEllipsize(TextUtils.TruncateAt.END);
                textView.setTextColor(-1);
                textView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
                textView.setGravity(3);
            }

            /* access modifiers changed from: protected */
            public int getStaticCharsCount() {
                LocaleController.LocaleInfo currentLocaleInfo = LocaleController.getInstance().getCurrentLocaleInfo();
                if (this.lastLocaleInfo != currentLocaleInfo) {
                    this.lastLocaleInfo = currentLocaleInfo;
                    this.staticCharsCount = LocaleController.formatString("formatDateAtTime", NUM, LocaleController.getInstance().formatterYear.format(new Date()), LocaleController.getInstance().formatterDay.format(new Date())).length();
                }
                return this.staticCharsCount;
            }

            public void setText(CharSequence charSequence, boolean z) {
                int staticCharsCount2;
                boolean z2 = false;
                if (z) {
                    if (!LocaleController.isRTL || (staticCharsCount2 = getStaticCharsCount()) <= 0 || (charSequence.length() == staticCharsCount2 && getText() != null && getText().length() == staticCharsCount2)) {
                        z2 = true;
                    }
                    setText(charSequence, true, z2);
                    return;
                }
                setText(charSequence, false, false);
            }
        };
        this.dateTextView = r16;
        this.bottomLayout.addView(r16, LayoutHelper.createFrame(-1, -2.0f, 51, 16.0f, 25.0f, 8.0f, 0.0f));
        createVideoControlsInterface();
        RadialProgressView radialProgressView = new RadialProgressView(this.parentActivity, resourcesProvider3);
        this.progressView = radialProgressView;
        radialProgressView.setProgressColor(-1);
        this.progressView.setBackgroundResource(NUM);
        this.progressView.setVisibility(4);
        this.containerView.addView(this.progressView, LayoutHelper.createFrame(54, 54, 17));
        PickerBottomLayoutViewer pickerBottomLayoutViewer = new PickerBottomLayoutViewer(this.parentActivity);
        this.qualityPicker = pickerBottomLayoutViewer;
        pickerBottomLayoutViewer.setBackgroundColor(NUM);
        this.qualityPicker.updateSelectedCount(0, false);
        this.qualityPicker.setTranslationY((float) AndroidUtilities.dp(120.0f));
        this.qualityPicker.doneButton.setText(LocaleController.getString("Done", NUM).toUpperCase());
        this.qualityPicker.doneButton.setTextColor(getThemedColor("dialogFloatingButton"));
        this.containerView.addView(this.qualityPicker, LayoutHelper.createFrame(-1, 48, 83));
        this.qualityPicker.cancelButton.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda25(this));
        this.qualityPicker.doneButton.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda33(this));
        VideoForwardDrawable videoForwardDrawable2 = new VideoForwardDrawable(false);
        this.videoForwardDrawable = videoForwardDrawable2;
        videoForwardDrawable2.setDelegate(new VideoForwardDrawable.VideoForwardDrawableDelegate() {
            public void onAnimationEnd() {
            }

            public void invalidate() {
                PhotoViewer.this.containerView.invalidate();
            }
        });
        QualityChooseView qualityChooseView2 = new QualityChooseView(this.parentActivity);
        this.qualityChooseView = qualityChooseView2;
        qualityChooseView2.setTranslationY((float) AndroidUtilities.dp(120.0f));
        this.qualityChooseView.setVisibility(4);
        this.qualityChooseView.setBackgroundColor(NUM);
        this.containerView.addView(this.qualityChooseView, LayoutHelper.createFrame(-1, 70.0f, 83, 0.0f, 0.0f, 0.0f, 48.0f));
        AnonymousClass22 r17 = new FrameLayout(this.activityContext) {
            public boolean dispatchTouchEvent(MotionEvent motionEvent) {
                return PhotoViewer.this.bottomTouchEnabled && super.dispatchTouchEvent(motionEvent);
            }

            public boolean onInterceptTouchEvent(MotionEvent motionEvent) {
                return PhotoViewer.this.bottomTouchEnabled && super.onInterceptTouchEvent(motionEvent);
            }

            public boolean onTouchEvent(MotionEvent motionEvent) {
                return PhotoViewer.this.bottomTouchEnabled && super.onTouchEvent(motionEvent);
            }

            public void setTranslationY(float f) {
                super.setTranslationY(f);
                if (!(PhotoViewer.this.videoTimelineView == null || PhotoViewer.this.videoTimelineView.getVisibility() == 8)) {
                    PhotoViewer.this.videoTimelineView.setTranslationY(f);
                    PhotoViewer.this.videoAvatarTooltip.setTranslationY(f);
                }
                if (PhotoViewer.this.videoAvatarTooltip != null && PhotoViewer.this.videoAvatarTooltip.getVisibility() != 8) {
                    PhotoViewer.this.videoAvatarTooltip.setTranslationY(f);
                }
            }

            public void setAlpha(float f) {
                super.setAlpha(f);
                if (PhotoViewer.this.videoTimelineView != null && PhotoViewer.this.videoTimelineView.getVisibility() != 8) {
                    PhotoViewer.this.videoTimelineView.setAlpha(f);
                }
            }

            public void setVisibility(int i) {
                super.setVisibility(i);
                if (PhotoViewer.this.videoTimelineView != null && PhotoViewer.this.videoTimelineView.getVisibility() != 8) {
                    PhotoViewer.this.videoTimelineView.setVisibility(i == 0 ? 0 : 4);
                }
            }

            /* access modifiers changed from: protected */
            public void onLayout(boolean z, int i, int i2, int i3, int i4) {
                super.onLayout(z, i, i2, i3, i4);
                if (PhotoViewer.this.itemsLayout.getVisibility() != 8) {
                    int dp = (((i3 - i) - AndroidUtilities.dp(70.0f)) - PhotoViewer.this.itemsLayout.getMeasuredWidth()) / 2;
                    PhotoViewer.this.itemsLayout.layout(dp, PhotoViewer.this.itemsLayout.getTop(), PhotoViewer.this.itemsLayout.getMeasuredWidth() + dp, PhotoViewer.this.itemsLayout.getTop() + PhotoViewer.this.itemsLayout.getMeasuredHeight());
                }
            }
        };
        this.pickerView = r17;
        r17.setBackgroundColor(NUM);
        this.containerView.addView(this.pickerView, LayoutHelper.createFrame(-1, -2, 83));
        TextView textView = new TextView(this.containerView.getContext());
        this.docNameTextView = textView;
        textView.setTextSize(1, 15.0f);
        this.docNameTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        this.docNameTextView.setSingleLine(true);
        this.docNameTextView.setMaxLines(1);
        this.docNameTextView.setEllipsize(TextUtils.TruncateAt.END);
        this.docNameTextView.setTextColor(-1);
        this.docNameTextView.setGravity(3);
        this.pickerView.addView(this.docNameTextView, LayoutHelper.createFrame(-1, -2.0f, 51, 20.0f, 23.0f, 84.0f, 0.0f));
        TextView textView2 = new TextView(this.containerView.getContext());
        this.docInfoTextView = textView2;
        textView2.setTextSize(1, 14.0f);
        this.docInfoTextView.setSingleLine(true);
        this.docInfoTextView.setMaxLines(1);
        this.docInfoTextView.setEllipsize(TextUtils.TruncateAt.END);
        this.docInfoTextView.setTextColor(-1);
        this.docInfoTextView.setGravity(3);
        this.pickerView.addView(this.docInfoTextView, LayoutHelper.createFrame(-1, -2.0f, 51, 20.0f, 46.0f, 84.0f, 0.0f));
        AnonymousClass23 r18 = new VideoTimelinePlayView(this.parentActivity) {
            public void setTranslationY(float f) {
                if (getTranslationY() != f) {
                    super.setTranslationY(f);
                    PhotoViewer.this.containerView.invalidate();
                }
            }
        };
        this.videoTimelineView = r18;
        r18.setDelegate(new VideoTimelinePlayView.VideoTimelineViewDelegate() {
            private int seekTo;
            private Runnable seekToRunnable;
            private boolean wasPlaying;

            public void onLeftProgressChanged(float f) {
                if (PhotoViewer.this.videoPlayer != null) {
                    if (PhotoViewer.this.videoPlayer.isPlaying()) {
                        boolean unused = PhotoViewer.this.manuallyPaused = false;
                        PhotoViewer.this.videoPlayer.pause();
                        PhotoViewer.this.containerView.invalidate();
                    }
                    updateAvatarStartTime(1);
                    seekTo(f);
                    PhotoViewer.this.videoPlayerSeekbar.setProgress(0.0f);
                    PhotoViewer.this.videoTimelineView.setProgress(f);
                    PhotoViewer.this.updateVideoInfo();
                }
            }

            public void onRightProgressChanged(float f) {
                if (PhotoViewer.this.videoPlayer != null) {
                    if (PhotoViewer.this.videoPlayer.isPlaying()) {
                        boolean unused = PhotoViewer.this.manuallyPaused = false;
                        PhotoViewer.this.videoPlayer.pause();
                        PhotoViewer.this.containerView.invalidate();
                    }
                    updateAvatarStartTime(2);
                    seekTo(f);
                    PhotoViewer.this.videoPlayerSeekbar.setProgress(1.0f);
                    PhotoViewer.this.videoTimelineView.setProgress(f);
                    PhotoViewer.this.updateVideoInfo();
                }
            }

            public void onPlayProgressChanged(float f) {
                if (PhotoViewer.this.videoPlayer != null) {
                    if (PhotoViewer.this.sendPhotoType == 1) {
                        updateAvatarStartTime(0);
                    }
                    seekTo(f);
                }
            }

            private void seekTo(float f) {
                this.seekTo = (int) (PhotoViewer.this.videoDuration * f);
                if (SharedConfig.getDevicePerformanceClass() == 2) {
                    if (PhotoViewer.this.videoPlayer != null) {
                        PhotoViewer.this.videoPlayer.seekTo((long) this.seekTo);
                    }
                    if (PhotoViewer.this.sendPhotoType == 1) {
                        long unused = PhotoViewer.this.needCaptureFrameReadyAtTime = (long) this.seekTo;
                        if (PhotoViewer.this.captureFrameReadyAtTime != PhotoViewer.this.needCaptureFrameReadyAtTime) {
                            long unused2 = PhotoViewer.this.captureFrameReadyAtTime = -1;
                        }
                    }
                    this.seekToRunnable = null;
                } else if (this.seekToRunnable == null) {
                    PhotoViewer$24$$ExternalSyntheticLambda0 photoViewer$24$$ExternalSyntheticLambda0 = new PhotoViewer$24$$ExternalSyntheticLambda0(this);
                    this.seekToRunnable = photoViewer$24$$ExternalSyntheticLambda0;
                    AndroidUtilities.runOnUIThread(photoViewer$24$$ExternalSyntheticLambda0, 100);
                }
            }

            /* access modifiers changed from: private */
            public /* synthetic */ void lambda$seekTo$0() {
                if (PhotoViewer.this.videoPlayer != null) {
                    PhotoViewer.this.videoPlayer.seekTo((long) this.seekTo);
                }
                if (PhotoViewer.this.sendPhotoType == 1) {
                    long unused = PhotoViewer.this.needCaptureFrameReadyAtTime = (long) this.seekTo;
                    if (PhotoViewer.this.captureFrameReadyAtTime != PhotoViewer.this.needCaptureFrameReadyAtTime) {
                        long unused2 = PhotoViewer.this.captureFrameReadyAtTime = -1;
                    }
                }
                this.seekToRunnable = null;
            }

            private void updateAvatarStartTime(int i) {
                if (PhotoViewer.this.sendPhotoType == 1) {
                    if (i == 0) {
                        PhotoViewer photoViewer = PhotoViewer.this;
                        float unused = photoViewer.avatarStartProgress = photoViewer.videoTimelineView.getProgress();
                        PhotoViewer photoViewer2 = PhotoViewer.this;
                        long unused2 = photoViewer2.avatarStartTime = (long) (photoViewer2.videoDuration * 1000.0f * PhotoViewer.this.avatarStartProgress);
                    } else if (PhotoViewer.this.photoCropView == null) {
                    } else {
                        if (PhotoViewer.this.videoTimelineView.getLeftProgress() > PhotoViewer.this.avatarStartProgress || PhotoViewer.this.videoTimelineView.getRightProgress() < PhotoViewer.this.avatarStartProgress) {
                            PhotoViewer.this.photoCropView.setVideoThumbVisible(false);
                            if (i == 1) {
                                PhotoViewer photoViewer3 = PhotoViewer.this;
                                long unused3 = photoViewer3.avatarStartTime = (long) (photoViewer3.videoDuration * 1000.0f * PhotoViewer.this.videoTimelineView.getLeftProgress());
                            } else {
                                PhotoViewer photoViewer4 = PhotoViewer.this;
                                long unused4 = photoViewer4.avatarStartTime = (long) (photoViewer4.videoDuration * 1000.0f * PhotoViewer.this.videoTimelineView.getRightProgress());
                            }
                            long unused5 = PhotoViewer.this.captureFrameAtTime = -1;
                        }
                    }
                }
            }

            public void didStartDragging(int i) {
                if (i == VideoTimelinePlayView.TYPE_PROGRESS) {
                    PhotoViewer.this.cancelVideoPlayRunnable();
                    boolean z = true;
                    if (PhotoViewer.this.sendPhotoType == 1) {
                        PhotoViewer.this.cancelFlashAnimations();
                        long unused = PhotoViewer.this.captureFrameAtTime = -1;
                    }
                    if (PhotoViewer.this.videoPlayer == null || !PhotoViewer.this.videoPlayer.isPlaying()) {
                        z = false;
                    }
                    this.wasPlaying = z;
                    if (z) {
                        boolean unused2 = PhotoViewer.this.manuallyPaused = false;
                        PhotoViewer.this.videoPlayer.pause();
                        PhotoViewer.this.containerView.invalidate();
                    }
                }
            }

            public void didStopDragging(int i) {
                Runnable runnable = this.seekToRunnable;
                if (runnable != null) {
                    AndroidUtilities.cancelRunOnUIThread(runnable);
                    this.seekToRunnable.run();
                }
                PhotoViewer.this.cancelVideoPlayRunnable();
                if (PhotoViewer.this.sendPhotoType == 1 && PhotoViewer.this.flashView != null && i == VideoTimelinePlayView.TYPE_PROGRESS) {
                    PhotoViewer.this.cancelFlashAnimations();
                    PhotoViewer photoViewer = PhotoViewer.this;
                    long unused = photoViewer.captureFrameAtTime = photoViewer.avatarStartTime;
                    if (PhotoViewer.this.captureFrameReadyAtTime == ((long) this.seekTo)) {
                        PhotoViewer.this.captureCurrentFrame();
                    }
                } else if (PhotoViewer.this.sendPhotoType == 1 || this.wasPlaying) {
                    boolean unused2 = PhotoViewer.this.manuallyPaused = false;
                    if (PhotoViewer.this.videoPlayer != null) {
                        PhotoViewer.this.videoPlayer.play();
                    }
                }
            }
        });
        showVideoTimeline(false, false);
        this.videoTimelineView.setBackgroundColor(NUM);
        this.containerView.addView(this.videoTimelineView, LayoutHelper.createFrame(-1, 58.0f, 83, 0.0f, 8.0f, 0.0f, 0.0f));
        TextView textView3 = new TextView(this.parentActivity);
        this.videoAvatarTooltip = textView3;
        textView3.setSingleLine(true);
        this.videoAvatarTooltip.setVisibility(8);
        this.videoAvatarTooltip.setText(LocaleController.getString("ChooseCover", NUM));
        this.videoAvatarTooltip.setGravity(1);
        this.videoAvatarTooltip.setTextSize(1, 14.0f);
        this.videoAvatarTooltip.setTextColor(-7566196);
        this.containerView.addView(this.videoAvatarTooltip, LayoutHelper.createFrame(-1, -2.0f, 83, 0.0f, 8.0f, 0.0f, 0.0f));
        AnonymousClass25 r19 = new ImageView(this.parentActivity) {
            public boolean dispatchTouchEvent(MotionEvent motionEvent) {
                return PhotoViewer.this.bottomTouchEnabled && super.dispatchTouchEvent(motionEvent);
            }

            public boolean onTouchEvent(MotionEvent motionEvent) {
                return PhotoViewer.this.bottomTouchEnabled && super.onTouchEvent(motionEvent);
            }

            public void setVisibility(int i) {
                super.setVisibility(i);
                if (PhotoViewer.this.captionEditText.getCaptionLimitOffset() < 0) {
                    PhotoViewer.this.captionLimitView.setVisibility(i);
                } else {
                    PhotoViewer.this.captionLimitView.setVisibility(8);
                }
            }

            public void setTranslationY(float f) {
                super.setTranslationY(f);
                PhotoViewer.this.captionLimitView.setTranslationY(f);
            }

            public void setAlpha(float f) {
                super.setAlpha(f);
                PhotoViewer.this.captionLimitView.setAlpha(f);
            }
        };
        this.pickerViewSendButton = r19;
        r19.setScaleType(ImageView.ScaleType.CENTER);
        int dp = AndroidUtilities.dp(56.0f);
        int themedColor = getThemedColor("dialogFloatingButton");
        int i5 = Build.VERSION.SDK_INT;
        if (i5 >= 21) {
            str = "dialogFloatingButtonPressed";
        } else {
            str = "dialogFloatingButton";
        }
        Drawable createSimpleSelectorCircleDrawable = Theme.createSimpleSelectorCircleDrawable(dp, themedColor, getThemedColor(str));
        this.pickerViewSendDrawable = createSimpleSelectorCircleDrawable;
        this.pickerViewSendButton.setBackgroundDrawable(createSimpleSelectorCircleDrawable);
        this.pickerViewSendButton.setColorFilter(new PorterDuffColorFilter(-1, PorterDuff.Mode.MULTIPLY));
        this.pickerViewSendButton.setImageResource(NUM);
        this.pickerViewSendButton.setColorFilter(new PorterDuffColorFilter(getThemedColor("dialogFloatingIcon"), PorterDuff.Mode.MULTIPLY));
        this.containerView.addView(this.pickerViewSendButton, LayoutHelper.createFrame(56, 56.0f, 85, 0.0f, 0.0f, 14.0f, 14.0f));
        this.pickerViewSendButton.setContentDescription(LocaleController.getString("Send", NUM));
        this.pickerViewSendButton.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda31(this));
        this.pickerViewSendButton.setOnLongClickListener(new PhotoViewer$$ExternalSyntheticLambda42(this, resourcesProvider3));
        TextView textView4 = new TextView(this.parentActivity);
        this.captionLimitView = textView4;
        textView4.setTextSize(1, 15.0f);
        this.captionLimitView.setTextColor(-1280137);
        this.captionLimitView.setGravity(17);
        this.captionLimitView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        this.containerView.addView(this.captionLimitView, LayoutHelper.createFrame(56, 20.0f, 85, 3.0f, 0.0f, 14.0f, 78.0f));
        AnonymousClass26 r110 = new LinearLayout(this.parentActivity) {
            /* access modifiers changed from: protected */
            public void onMeasure(int i, int i2) {
                int childCount = getChildCount();
                int i3 = 0;
                for (int i4 = 0; i4 < childCount; i4++) {
                    if (getChildAt(i4).getVisibility() == 0) {
                        i3++;
                    }
                }
                int size = View.MeasureSpec.getSize(i);
                int size2 = View.MeasureSpec.getSize(i2);
                if (i3 != 0) {
                    int min = Math.min(AndroidUtilities.dp(70.0f), size / i3);
                    if (PhotoViewer.this.compressItem.getVisibility() == 0) {
                        int max = Math.max(0, (min - AndroidUtilities.dp((float) (PhotoViewer.this.selectedCompression < 2 ? 48 : 64))) / 2);
                        PhotoViewer.this.compressItem.setPadding(max, 0, max, 0);
                    }
                    for (int i5 = 0; i5 < childCount; i5++) {
                        View childAt = getChildAt(i5);
                        if (childAt.getVisibility() != 8) {
                            childAt.measure(View.MeasureSpec.makeMeasureSpec(min, NUM), View.MeasureSpec.makeMeasureSpec(size2, NUM));
                        }
                    }
                    setMeasuredDimension(min * i3, size2);
                    return;
                }
                setMeasuredDimension(size, size2);
            }
        };
        this.itemsLayout = r110;
        r110.setOrientation(0);
        this.pickerView.addView(this.itemsLayout, LayoutHelper.createFrame(-2, 48.0f, 81, 0.0f, 0.0f, 70.0f, 0.0f));
        ImageView imageView3 = new ImageView(this.parentActivity);
        this.cropItem = imageView3;
        imageView3.setScaleType(ImageView.ScaleType.CENTER);
        this.cropItem.setImageResource(NUM);
        this.cropItem.setBackgroundDrawable(Theme.createSelectorDrawable(NUM));
        this.itemsLayout.addView(this.cropItem, LayoutHelper.createLinear(48, 48));
        this.cropItem.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda37(this));
        this.cropItem.setContentDescription(LocaleController.getString("CropImage", NUM));
        ImageView imageView4 = new ImageView(this.parentActivity);
        this.rotateItem = imageView4;
        imageView4.setScaleType(ImageView.ScaleType.CENTER);
        this.rotateItem.setImageResource(NUM);
        this.rotateItem.setBackgroundDrawable(Theme.createSelectorDrawable(NUM));
        this.itemsLayout.addView(this.rotateItem, LayoutHelper.createLinear(48, 48));
        this.rotateItem.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda20(this));
        this.rotateItem.setContentDescription(LocaleController.getString("AccDescrRotate", NUM));
        ImageView imageView5 = new ImageView(this.parentActivity);
        this.mirrorItem = imageView5;
        imageView5.setScaleType(ImageView.ScaleType.CENTER);
        this.mirrorItem.setImageResource(NUM);
        this.mirrorItem.setBackgroundDrawable(Theme.createSelectorDrawable(NUM));
        this.itemsLayout.addView(this.mirrorItem, LayoutHelper.createLinear(48, 48));
        this.mirrorItem.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda18(this));
        this.mirrorItem.setContentDescription(LocaleController.getString("AccDescrMirror", NUM));
        ImageView imageView6 = new ImageView(this.parentActivity);
        this.paintItem = imageView6;
        imageView6.setScaleType(ImageView.ScaleType.CENTER);
        this.paintItem.setImageResource(NUM);
        this.paintItem.setBackgroundDrawable(Theme.createSelectorDrawable(NUM));
        this.itemsLayout.addView(this.paintItem, LayoutHelper.createLinear(48, 48));
        this.paintItem.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda30(this));
        this.paintItem.setContentDescription(LocaleController.getString("AccDescrPhotoEditor", NUM));
        ImageView imageView7 = new ImageView(this.parentActivity);
        this.muteItem = imageView7;
        imageView7.setScaleType(ImageView.ScaleType.CENTER);
        this.muteItem.setBackgroundDrawable(Theme.createSelectorDrawable(NUM));
        this.containerView.addView(this.muteItem, LayoutHelper.createFrame(48, 48.0f, 83, 16.0f, 0.0f, 0.0f, 0.0f));
        this.muteItem.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda22(this));
        ImageView imageView8 = new ImageView(this.parentActivity);
        this.cameraItem = imageView8;
        imageView8.setScaleType(ImageView.ScaleType.CENTER);
        this.cameraItem.setImageResource(NUM);
        this.cameraItem.setBackgroundDrawable(Theme.createSelectorDrawable(NUM));
        this.cameraItem.setContentDescription(LocaleController.getString("AccDescrTakeMorePics", NUM));
        this.containerView.addView(this.cameraItem, LayoutHelper.createFrame(48, 48.0f, 85, 0.0f, 0.0f, 16.0f, 0.0f));
        this.cameraItem.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda32(this));
        ImageView imageView9 = new ImageView(this.parentActivity);
        this.tuneItem = imageView9;
        imageView9.setScaleType(ImageView.ScaleType.CENTER);
        this.tuneItem.setImageResource(NUM);
        this.tuneItem.setBackgroundDrawable(Theme.createSelectorDrawable(NUM));
        this.itemsLayout.addView(this.tuneItem, LayoutHelper.createLinear(48, 48));
        this.tuneItem.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda28(this));
        this.tuneItem.setContentDescription(LocaleController.getString("AccDescrPhotoAdjust", NUM));
        ImageView imageView10 = new ImageView(this.parentActivity);
        this.compressItem = imageView10;
        imageView10.setTag(1);
        this.compressItem.setScaleType(ImageView.ScaleType.CENTER);
        this.compressItem.setBackgroundDrawable(Theme.createSelectorDrawable(NUM));
        int selectCompression = selectCompression();
        this.selectedCompression = selectCompression;
        if (selectCompression <= 1) {
            this.compressItem.setImageResource(NUM);
        } else if (selectCompression == 2) {
            this.compressItem.setImageResource(NUM);
        } else {
            this.selectedCompression = this.compressionsCount - 1;
            this.compressItem.setImageResource(NUM);
        }
        this.compressItem.setContentDescription(LocaleController.getString("AccDescrVideoQuality", NUM));
        this.itemsLayout.addView(this.compressItem, LayoutHelper.createLinear(48, 48));
        this.compressItem.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda39(this, activity2));
        ImageView imageView11 = new ImageView(this.parentActivity);
        this.timeItem = imageView11;
        imageView11.setScaleType(ImageView.ScaleType.CENTER);
        this.timeItem.setImageResource(NUM);
        this.timeItem.setBackgroundDrawable(Theme.createSelectorDrawable(NUM));
        this.timeItem.setContentDescription(LocaleController.getString("SetTimer", NUM));
        this.itemsLayout.addView(this.timeItem, LayoutHelper.createLinear(48, 48));
        this.timeItem.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda40(this, resourcesProvider3));
        PickerBottomLayoutViewer pickerBottomLayoutViewer2 = new PickerBottomLayoutViewer(this.activityContext);
        this.editorDoneLayout = pickerBottomLayoutViewer2;
        pickerBottomLayoutViewer2.setBackgroundColor(-NUM);
        this.editorDoneLayout.updateSelectedCount(0, false);
        this.editorDoneLayout.setVisibility(8);
        this.containerView.addView(this.editorDoneLayout, LayoutHelper.createFrame(-1, 48, 83));
        this.editorDoneLayout.cancelButton.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda16(this));
        this.editorDoneLayout.doneButton.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda17(this));
        TextView textView5 = new TextView(this.activityContext);
        this.resetButton = textView5;
        textView5.setClickable(false);
        this.resetButton.setVisibility(8);
        this.resetButton.setTextSize(1, 14.0f);
        this.resetButton.setTextColor(-1);
        this.resetButton.setGravity(17);
        this.resetButton.setBackgroundDrawable(Theme.createSelectorDrawable(-12763843, 0));
        this.resetButton.setPadding(AndroidUtilities.dp(20.0f), 0, AndroidUtilities.dp(20.0f), 0);
        this.resetButton.setText(LocaleController.getString("Reset", NUM).toUpperCase());
        this.resetButton.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        this.editorDoneLayout.addView(this.resetButton, LayoutHelper.createFrame(-2, -1, 49));
        this.resetButton.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda15(this));
        GestureDetector2 gestureDetector2 = new GestureDetector2(this.containerView.getContext(), this);
        this.gestureDetector = gestureDetector2;
        gestureDetector2.setIsLongpressEnabled(false);
        setDoubleTapEnabled(true);
        PhotoViewer$$ExternalSyntheticLambda72 photoViewer$$ExternalSyntheticLambda72 = new PhotoViewer$$ExternalSyntheticLambda72(this);
        this.centerImage.setParentView(this.containerView);
        this.centerImage.setCrossfadeAlpha((byte) 2);
        this.centerImage.setInvalidateAll(true);
        this.centerImage.setDelegate(photoViewer$$ExternalSyntheticLambda72);
        this.leftImage.setParentView(this.containerView);
        this.leftImage.setCrossfadeAlpha((byte) 2);
        this.leftImage.setInvalidateAll(true);
        this.leftImage.setDelegate(photoViewer$$ExternalSyntheticLambda72);
        this.rightImage.setParentView(this.containerView);
        this.rightImage.setCrossfadeAlpha((byte) 2);
        this.rightImage.setInvalidateAll(true);
        this.rightImage.setDelegate(photoViewer$$ExternalSyntheticLambda72);
        int rotation = ((WindowManager) ApplicationLoader.applicationContext.getSystemService("window")).getDefaultDisplay().getRotation();
        AnonymousClass28 r111 = new CheckBox(this.containerView.getContext(), NUM) {
            public boolean onTouchEvent(MotionEvent motionEvent) {
                return PhotoViewer.this.bottomTouchEnabled && super.onTouchEvent(motionEvent);
            }
        };
        this.checkImageView = r111;
        r111.setDrawBackground(true);
        this.checkImageView.setHasBorder(true);
        this.checkImageView.setSize(34);
        this.checkImageView.setCheckOffset(AndroidUtilities.dp(1.0f));
        this.checkImageView.setColor(getThemedColor("dialogFloatingButton"), -1);
        this.checkImageView.setVisibility(8);
        this.containerView.addView(this.checkImageView, LayoutHelper.createFrame(34, 34.0f, 53, 0.0f, (rotation == 3 || rotation == 1) ? 61.0f : 71.0f, 11.0f, 0.0f));
        if (isStatusBarVisible()) {
            ((FrameLayout.LayoutParams) this.checkImageView.getLayoutParams()).topMargin += AndroidUtilities.statusBarHeight;
        }
        this.checkImageView.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda34(this));
        CounterView counterView = new CounterView(this.parentActivity);
        this.photosCounterView = counterView;
        this.containerView.addView(counterView, LayoutHelper.createFrame(40, 40.0f, 53, 0.0f, (rotation == 3 || rotation == 1) ? 58.0f : 68.0f, 64.0f, 0.0f));
        if (isStatusBarVisible()) {
            ((FrameLayout.LayoutParams) this.photosCounterView.getLayoutParams()).topMargin += AndroidUtilities.statusBarHeight;
        }
        this.photosCounterView.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda23(this));
        SelectedPhotosListView selectedPhotosListView2 = new SelectedPhotosListView(this.parentActivity);
        this.selectedPhotosListView = selectedPhotosListView2;
        selectedPhotosListView2.setVisibility(8);
        this.selectedPhotosListView.setAlpha(0.0f);
        this.selectedPhotosListView.setLayoutManager(new LinearLayoutManager(this, this.parentActivity, 0, true) {
            public void smoothScrollToPosition(RecyclerView recyclerView, RecyclerView.State state, int i) {
                AnonymousClass1 r2 = new LinearSmoothScrollerEnd(this, recyclerView.getContext()) {
                    /* access modifiers changed from: protected */
                    public int calculateTimeForDeceleration(int i) {
                        return Math.max(180, super.calculateTimeForDeceleration(i));
                    }
                };
                r2.setTargetPosition(i);
                startSmoothScroll(r2);
            }
        });
        SelectedPhotosListView selectedPhotosListView3 = this.selectedPhotosListView;
        ListAdapter listAdapter = new ListAdapter(this.parentActivity);
        this.selectedPhotosAdapter = listAdapter;
        selectedPhotosListView3.setAdapter(listAdapter);
        this.containerView.addView(this.selectedPhotosListView, LayoutHelper.createFrame(-1, 103, 51));
        this.selectedPhotosListView.setOnItemClickListener((RecyclerListView.OnItemClickListener) new PhotoViewer$$ExternalSyntheticLambda76(this));
        AnonymousClass30 r0 = new PhotoViewerCaptionEnterView(this.activityContext, this.containerView, this.windowView, resourcesProvider2) {
            public boolean dispatchTouchEvent(MotionEvent motionEvent) {
                try {
                    return !PhotoViewer.this.bottomTouchEnabled && super.dispatchTouchEvent(motionEvent);
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                    return false;
                }
            }

            public boolean onInterceptTouchEvent(MotionEvent motionEvent) {
                try {
                    return !PhotoViewer.this.bottomTouchEnabled && super.onInterceptTouchEvent(motionEvent);
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                    return false;
                }
            }

            public boolean onTouchEvent(MotionEvent motionEvent) {
                if (PhotoViewer.this.bottomTouchEnabled && motionEvent.getAction() == 0) {
                    PhotoViewer.this.keyboardAnimationEnabled = true;
                }
                if (PhotoViewer.this.bottomTouchEnabled || !super.onTouchEvent(motionEvent)) {
                    return false;
                }
                return true;
            }

            /* access modifiers changed from: protected */
            public void extendActionMode(ActionMode actionMode, Menu menu) {
                if (PhotoViewer.this.parentChatActivity != null) {
                    PhotoViewer.this.parentChatActivity.extendActionMode(menu);
                }
            }
        };
        this.captionEditText = r0;
        r0.setDelegate(new PhotoViewerCaptionEnterView.PhotoViewerCaptionEnterViewDelegate() {
            public void onCaptionEnter() {
                PhotoViewer.this.closeCaptionEnter(true);
            }

            public void onTextChanged(CharSequence charSequence) {
                if (!(PhotoViewer.this.mentionsAdapter == null || PhotoViewer.this.captionEditText == null || PhotoViewer.this.parentChatActivity == null || charSequence == null)) {
                    PhotoViewer.this.mentionsAdapter.searchUsernameOrHashtag(charSequence.toString(), PhotoViewer.this.captionEditText.getCursorPosition(), PhotoViewer.this.parentChatActivity.messages, false, false);
                }
                int access$13900 = PhotoViewer.this.getThemedColor("dialogFloatingIcon");
                if (PhotoViewer.this.captionEditText.getCaptionLimitOffset() < 0) {
                    PhotoViewer.this.captionLimitView.setText(Integer.toString(PhotoViewer.this.captionEditText.getCaptionLimitOffset()));
                    PhotoViewer.this.captionLimitView.setVisibility(PhotoViewer.this.pickerViewSendButton.getVisibility());
                    PhotoViewer.this.pickerViewSendButton.setColorFilter(new PorterDuffColorFilter(ColorUtils.setAlphaComponent(access$13900, (int) (((float) Color.alpha(access$13900)) * 0.58f)), PorterDuff.Mode.MULTIPLY));
                } else {
                    PhotoViewer.this.pickerViewSendButton.setColorFilter(new PorterDuffColorFilter(access$13900, PorterDuff.Mode.MULTIPLY));
                    PhotoViewer.this.captionLimitView.setVisibility(8);
                }
                if (PhotoViewer.this.placeProvider != null) {
                    PhotoViewer.this.placeProvider.onCaptionChanged(charSequence);
                }
            }

            public void onWindowSizeChanged(int i) {
                if (i - (ActionBar.getCurrentActionBarHeight() * 2) < AndroidUtilities.dp((float) ((Math.min(3, PhotoViewer.this.mentionsAdapter.getItemCount()) * 36) + (PhotoViewer.this.mentionsAdapter.getItemCount() > 3 ? 18 : 0)))) {
                    boolean unused = PhotoViewer.this.allowMentions = false;
                    if (PhotoViewer.this.mentionListView != null && PhotoViewer.this.mentionListView.getVisibility() == 0) {
                        PhotoViewer.this.mentionListView.setVisibility(4);
                        return;
                    }
                    return;
                }
                boolean unused2 = PhotoViewer.this.allowMentions = true;
                if (PhotoViewer.this.mentionListView != null && PhotoViewer.this.mentionListView.getVisibility() == 4) {
                    PhotoViewer.this.mentionListView.setVisibility(0);
                }
            }

            public void onEmojiViewOpen() {
                PhotoViewer.this.navigationBar.setVisibility(4);
                PhotoViewer photoViewer = PhotoViewer.this;
                photoViewer.animateNavBarColorTo(photoViewer.getThemedColor("chat_emojiPanelBackground"), false);
            }

            public void onEmojiViewCloseStart() {
                String str;
                int i;
                PhotoViewer.this.navigationBar.setVisibility(PhotoViewer.this.currentEditMode != 2 ? 0 : 4);
                PhotoViewer.this.animateNavBarColorTo(-16777216);
                setOffset(PhotoViewer.this.captionEditText.getEmojiPadding());
                if (PhotoViewer.this.captionEditText.getTag() != null) {
                    if (PhotoViewer.this.isCurrentVideo) {
                        ActionBar access$6900 = PhotoViewer.this.actionBar;
                        if (PhotoViewer.this.muteVideo) {
                            i = NUM;
                            str = "GifCaption";
                        } else {
                            i = NUM;
                            str = "VideoCaption";
                        }
                        access$6900.setTitleAnimated(LocaleController.getString(str, i), true, 220);
                    } else {
                        PhotoViewer.this.actionBar.setTitleAnimated(LocaleController.getString("PhotoCaption", NUM), true, 220);
                    }
                    PhotoViewer.this.checkImageView.animate().alpha(0.0f).setDuration(220).start();
                    PhotoViewer.this.photosCounterView.animate().alpha(0.0f).setDuration(220).start();
                    PhotoViewer.this.selectedPhotosListView.animate().alpha(0.0f).translationY((float) (-AndroidUtilities.dp(10.0f))).setDuration(220).start();
                    return;
                }
                PhotoViewer.this.checkImageView.animate().alpha(1.0f).setDuration(220).start();
                PhotoViewer.this.photosCounterView.animate().alpha(1.0f).setDuration(220).start();
                if (PhotoViewer.this.lastTitle != null) {
                    PhotoViewer.this.actionBar.setTitleAnimated(PhotoViewer.this.lastTitle, false, 220);
                    String unused = PhotoViewer.this.lastTitle = null;
                }
            }

            public void onEmojiViewCloseEnd() {
                setOffset(0);
                PhotoViewer.this.captionEditText.setVisibility(8);
            }

            private void setOffset(int i) {
                for (int i2 = 0; i2 < PhotoViewer.this.containerView.getChildCount(); i2++) {
                    View childAt = PhotoViewer.this.containerView.getChildAt(i2);
                    if (childAt == PhotoViewer.this.cameraItem || childAt == PhotoViewer.this.muteItem || childAt == PhotoViewer.this.pickerView || childAt == PhotoViewer.this.videoTimelineView || childAt == PhotoViewer.this.pickerViewSendButton || childAt == PhotoViewer.this.captionTextViewSwitcher || (PhotoViewer.this.muteItem.getVisibility() == 0 && childAt == PhotoViewer.this.bottomLayout)) {
                        childAt.setTranslationY((float) i);
                    }
                }
            }
        });
        if (i5 >= 19) {
            this.captionEditText.setImportantForAccessibility(4);
        }
        this.captionEditText.setVisibility(8);
        this.containerView.addView(this.captionEditText, LayoutHelper.createFrame(-1, -2, 83));
        AnonymousClass32 r02 = new RecyclerListView(this.activityContext, resourcesProvider3) {
            public boolean dispatchTouchEvent(MotionEvent motionEvent) {
                return !PhotoViewer.this.bottomTouchEnabled && super.dispatchTouchEvent(motionEvent);
            }

            public boolean onInterceptTouchEvent(MotionEvent motionEvent) {
                return !PhotoViewer.this.bottomTouchEnabled && super.onInterceptTouchEvent(motionEvent);
            }

            public boolean onTouchEvent(MotionEvent motionEvent) {
                return !PhotoViewer.this.bottomTouchEnabled && super.onTouchEvent(motionEvent);
            }
        };
        this.mentionListView = r02;
        r02.setTag(5);
        AnonymousClass33 r03 = new LinearLayoutManager(this, this.activityContext) {
            public boolean supportsPredictiveItemAnimations() {
                return false;
            }
        };
        this.mentionLayoutManager = r03;
        r03.setOrientation(1);
        this.mentionListView.setLayoutManager(this.mentionLayoutManager);
        this.mentionListView.setBackgroundColor(NUM);
        this.mentionListView.setVisibility(8);
        this.mentionListView.setClipToPadding(true);
        this.mentionListView.setOverScrollMode(2);
        this.containerView.addView(this.mentionListView, LayoutHelper.createFrame(-1, 110, 83));
        RecyclerListView recyclerListView = this.mentionListView;
        MentionsAdapter mentionsAdapter2 = new MentionsAdapter(this.activityContext, true, 0, 0, new MentionsAdapter.MentionsAdapterDelegate() {
            public void onContextClick(TLRPC$BotInlineResult tLRPC$BotInlineResult) {
            }

            public void onContextSearch(boolean z) {
            }

            public void onItemCountUpdate(int i, int i2) {
            }

            public void needChangePanelVisibility(boolean z) {
                if (z) {
                    FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) PhotoViewer.this.mentionListView.getLayoutParams();
                    float min = (float) ((Math.min(3, PhotoViewer.this.mentionsAdapter.getItemCount()) * 36) + (PhotoViewer.this.mentionsAdapter.getItemCount() > 3 ? 18 : 0));
                    layoutParams.height = AndroidUtilities.dp(min);
                    layoutParams.topMargin = -AndroidUtilities.dp(min);
                    PhotoViewer.this.mentionListView.setLayoutParams(layoutParams);
                    if (PhotoViewer.this.mentionListAnimation != null) {
                        PhotoViewer.this.mentionListAnimation.cancel();
                        AnimatorSet unused = PhotoViewer.this.mentionListAnimation = null;
                    }
                    if (PhotoViewer.this.mentionListView.getVisibility() == 0) {
                        PhotoViewer.this.mentionListView.setAlpha(1.0f);
                        return;
                    }
                    PhotoViewer.this.mentionLayoutManager.scrollToPositionWithOffset(0, 10000);
                    if (PhotoViewer.this.allowMentions) {
                        PhotoViewer.this.mentionListView.setVisibility(0);
                        AnimatorSet unused2 = PhotoViewer.this.mentionListAnimation = new AnimatorSet();
                        PhotoViewer.this.mentionListAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(PhotoViewer.this.mentionListView, View.ALPHA, new float[]{0.0f, 1.0f})});
                        PhotoViewer.this.mentionListAnimation.addListener(new AnimatorListenerAdapter() {
                            public void onAnimationEnd(Animator animator) {
                                if (PhotoViewer.this.mentionListAnimation != null && PhotoViewer.this.mentionListAnimation.equals(animator)) {
                                    AnimatorSet unused = PhotoViewer.this.mentionListAnimation = null;
                                }
                            }
                        });
                        PhotoViewer.this.mentionListAnimation.setDuration(200);
                        PhotoViewer.this.mentionListAnimation.start();
                        return;
                    }
                    PhotoViewer.this.mentionListView.setAlpha(1.0f);
                    PhotoViewer.this.mentionListView.setVisibility(4);
                    return;
                }
                if (PhotoViewer.this.mentionListAnimation != null) {
                    PhotoViewer.this.mentionListAnimation.cancel();
                    AnimatorSet unused3 = PhotoViewer.this.mentionListAnimation = null;
                }
                if (PhotoViewer.this.mentionListView.getVisibility() != 8) {
                    if (PhotoViewer.this.allowMentions) {
                        AnimatorSet unused4 = PhotoViewer.this.mentionListAnimation = new AnimatorSet();
                        PhotoViewer.this.mentionListAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(PhotoViewer.this.mentionListView, View.ALPHA, new float[]{0.0f})});
                        PhotoViewer.this.mentionListAnimation.addListener(new AnimatorListenerAdapter() {
                            public void onAnimationEnd(Animator animator) {
                                if (PhotoViewer.this.mentionListAnimation != null && PhotoViewer.this.mentionListAnimation.equals(animator)) {
                                    PhotoViewer.this.mentionListView.setVisibility(8);
                                    AnimatorSet unused = PhotoViewer.this.mentionListAnimation = null;
                                }
                            }
                        });
                        PhotoViewer.this.mentionListAnimation.setDuration(200);
                        PhotoViewer.this.mentionListAnimation.start();
                        return;
                    }
                    PhotoViewer.this.mentionListView.setVisibility(8);
                }
            }
        }, resourcesProvider2);
        this.mentionsAdapter = mentionsAdapter2;
        recyclerListView.setAdapter(mentionsAdapter2);
        this.mentionListView.setOnItemClickListener((RecyclerListView.OnItemClickListener) new PhotoViewer$$ExternalSyntheticLambda77(this));
        this.mentionListView.setOnItemLongClickListener((RecyclerListView.OnItemLongClickListener) new PhotoViewer$$ExternalSyntheticLambda78(this, resourcesProvider3));
        UndoView undoView = new UndoView(this.activityContext, (BaseFragment) null, false, resourcesProvider3);
        this.hintView = undoView;
        undoView.setAdditionalTranslationY((float) AndroidUtilities.dp(112.0f));
        this.hintView.setColors(-NUM, -1);
        this.containerView.addView(this.hintView, LayoutHelper.createFrame(-1, -2.0f, 83, 8.0f, 0.0f, 8.0f, 8.0f));
        if (AndroidUtilities.isAccessibilityScreenReaderEnabled()) {
            View view2 = new View(this.activityContext);
            this.playButtonAccessibilityOverlay = view2;
            view2.setContentDescription(LocaleController.getString("AccActionPlay", NUM));
            this.playButtonAccessibilityOverlay.setFocusable(true);
            this.containerView.addView(this.playButtonAccessibilityOverlay, LayoutHelper.createFrame(64, 64, 17));
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ WindowInsets lambda$setParentActivity$4(View view, WindowInsets windowInsets) {
        int systemWindowInsetTop = windowInsets.getSystemWindowInsetTop();
        Activity activity = this.parentActivity;
        if ((activity instanceof LaunchActivity) && ((systemWindowInsetTop != 0 || AndroidUtilities.isInMultiwindow) && !this.inBubbleMode && AndroidUtilities.statusBarHeight != systemWindowInsetTop)) {
            AndroidUtilities.statusBarHeight = systemWindowInsetTop;
            ((LaunchActivity) activity).drawerLayoutContainer.requestLayout();
        }
        WindowInsets windowInsets2 = (WindowInsets) this.lastInsets;
        this.lastInsets = windowInsets;
        if (windowInsets2 == null || !windowInsets2.toString().equals(windowInsets.toString())) {
            int i = this.animationInProgress;
            if (i == 1 || i == 3) {
                ClippingImageView clippingImageView = this.animatingImageView;
                clippingImageView.setTranslationX(clippingImageView.getTranslationX() - ((float) getLeftInset()));
                this.animationValues[0][2] = this.animatingImageView.getTranslationX();
            }
            FrameLayout frameLayout = this.windowView;
            if (frameLayout != null) {
                frameLayout.requestLayout();
            }
        }
        if (this.navigationBar != null) {
            this.navigationBarHeight = windowInsets.getSystemWindowInsetBottom();
            ViewGroup.MarginLayoutParams marginLayoutParams = (ViewGroup.MarginLayoutParams) this.navigationBar.getLayoutParams();
            int i2 = this.navigationBarHeight;
            marginLayoutParams.height = i2;
            marginLayoutParams.bottomMargin = (-i2) / 2;
            this.navigationBar.setLayoutParams(marginLayoutParams);
        }
        this.containerView.setPadding(windowInsets.getSystemWindowInsetLeft(), 0, windowInsets.getSystemWindowInsetRight(), 0);
        if (this.actionBar != null) {
            AndroidUtilities.cancelRunOnUIThread(this.updateContainerFlagsRunnable);
            if (this.isVisible && this.animationInProgress == 0) {
                AndroidUtilities.runOnUIThread(this.updateContainerFlagsRunnable, 200);
            }
        }
        if (Build.VERSION.SDK_INT >= 30) {
            return WindowInsets.CONSUMED;
        }
        return windowInsets.consumeSystemWindowInsets();
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$setParentActivity$5(View view) {
        Activity activity = this.parentActivity;
        if (activity != null) {
            this.wasRotated = false;
            this.fullscreenedByButton = 1;
            if (this.prevOrientation == -10) {
                this.prevOrientation = activity.getRequestedOrientation();
            }
            if (((WindowManager) this.parentActivity.getSystemService("window")).getDefaultDisplay().getRotation() == 3) {
                this.parentActivity.setRequestedOrientation(8);
            } else {
                this.parentActivity.setRequestedOrientation(0);
            }
            toggleActionBar(false, false);
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$setParentActivity$7(View view) {
        openCurrentPhotoInPaintModeForSelect();
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$setParentActivity$8(View view) {
        onSharePressed();
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$setParentActivity$9(View view) {
        this.selectedCompression = this.previousCompression;
        didChangedCompressionLevel(false);
        showQualityView(false);
        requestVideoPreview(2);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$setParentActivity$10(View view) {
        showQualityView(false);
        requestVideoPreview(2);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$setParentActivity$11(View view) {
        if (this.captionEditText.getCaptionLimitOffset() < 0) {
            AndroidUtilities.shakeView(this.captionLimitView, 2.0f, 0);
            Vibrator vibrator = (Vibrator) this.captionLimitView.getContext().getSystemService("vibrator");
            if (vibrator != null) {
                vibrator.vibrate(200);
                return;
            }
            return;
        }
        ChatActivity chatActivity = this.parentChatActivity;
        if (chatActivity == null || !chatActivity.isInScheduleMode() || this.parentChatActivity.isEditingMessageMedia()) {
            sendPressed(true, 0);
        } else {
            showScheduleDatePickerDialog();
        }
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:48:0x00d2, code lost:
        if (r13 != false) goto L_0x008b;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:51:0x00db, code lost:
        if (org.telegram.messenger.UserObject.isUserSelf(r2) != false) goto L_0x008b;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:53:0x00e0, code lost:
        if (r11 == 3) goto L_0x00e2;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:54:0x00e2, code lost:
        if (r4 == false) goto L_0x008b;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:55:0x00e5, code lost:
        if (r11 != 4) goto L_0x00f4;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:57:0x00e9, code lost:
        if (r0.isCurrentVideo == false) goto L_0x00eb;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:59:0x00f1, code lost:
        if (r0.timeItem.getColorFilter() == null) goto L_0x00f4;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public /* synthetic */ boolean lambda$setParentActivity$15(org.telegram.ui.ActionBar.Theme.ResourcesProvider r17, android.view.View r18) {
        /*
            r16 = this;
            r0 = r16
            r1 = r18
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r2 = r0.placeProvider
            r3 = 0
            if (r2 == 0) goto L_0x0010
            boolean r2 = r2.allowSendingSubmenu()
            if (r2 != 0) goto L_0x0010
            return r3
        L_0x0010:
            org.telegram.ui.ChatActivity r2 = r0.parentChatActivity
            if (r2 == 0) goto L_0x0231
            boolean r2 = r2.isInScheduleMode()
            if (r2 == 0) goto L_0x001c
            goto L_0x0231
        L_0x001c:
            org.telegram.ui.Components.PhotoViewerCaptionEnterView r2 = r0.captionEditText
            int r2 = r2.getCaptionLimitOffset()
            if (r2 >= 0) goto L_0x0025
            return r3
        L_0x0025:
            org.telegram.ui.ChatActivity r2 = r0.parentChatActivity
            r2.getCurrentChat()
            org.telegram.ui.ChatActivity r2 = r0.parentChatActivity
            org.telegram.tgnet.TLRPC$User r2 = r2.getCurrentUser()
            org.telegram.ui.ActionBar.ActionBarPopupWindow$ActionBarPopupWindowLayout r4 = new org.telegram.ui.ActionBar.ActionBarPopupWindow$ActionBarPopupWindowLayout
            android.app.Activity r5 = r0.parentActivity
            r4.<init>(r5)
            r0.sendPopupLayout = r4
            r4.setAnimationEnabled(r3)
            org.telegram.ui.ActionBar.ActionBarPopupWindow$ActionBarPopupWindowLayout r4 = r0.sendPopupLayout
            org.telegram.ui.PhotoViewer$$ExternalSyntheticLambda43 r5 = new org.telegram.ui.PhotoViewer$$ExternalSyntheticLambda43
            r5.<init>(r0)
            r4.setOnTouchListener(r5)
            org.telegram.ui.ActionBar.ActionBarPopupWindow$ActionBarPopupWindowLayout r4 = r0.sendPopupLayout
            org.telegram.ui.PhotoViewer$$ExternalSyntheticLambda73 r5 = new org.telegram.ui.PhotoViewer$$ExternalSyntheticLambda73
            r5.<init>(r0)
            r4.setDispatchKeyEventListener(r5)
            org.telegram.ui.ActionBar.ActionBarPopupWindow$ActionBarPopupWindowLayout r4 = r0.sendPopupLayout
            r4.setShownFromBottom(r3)
            org.telegram.ui.ActionBar.ActionBarPopupWindow$ActionBarPopupWindowLayout r4 = r0.sendPopupLayout
            r5 = -115203550(0xffffffffvar_, float:-5.2615274E34)
            r4.setBackgroundColor(r5)
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r4 = r0.placeProvider
            r5 = 1
            if (r4 == 0) goto L_0x006c
            int r6 = r0.currentIndex
            boolean r4 = r4.canReplace(r6)
            if (r4 == 0) goto L_0x006c
            r4 = 1
            goto L_0x006d
        L_0x006c:
            r4 = 0
        L_0x006d:
            r6 = 5
            int[] r7 = new int[r6]
            r7 = {4, 3, 2, 0, 1} // fill-array
            r8 = 0
        L_0x0074:
            r9 = 3
            r10 = 2
            if (r8 >= r6) goto L_0x0197
            r11 = r7[r8]
            if (r11 == r10) goto L_0x0081
            if (r11 == r9) goto L_0x0081
            if (r4 == 0) goto L_0x0081
            goto L_0x008b
        L_0x0081:
            if (r11 != 0) goto L_0x008f
            org.telegram.ui.ChatActivity r12 = r0.parentChatActivity
            boolean r12 = r12.canScheduleMessage()
            if (r12 != 0) goto L_0x008f
        L_0x008b:
            r6 = r17
            goto L_0x0191
        L_0x008f:
            r12 = 4
            if (r11 != 0) goto L_0x00d5
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r13 = r0.placeProvider
            if (r13 == 0) goto L_0x00d5
            java.util.HashMap r13 = r13.getSelectedPhotos()
            if (r13 == 0) goto L_0x00d5
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r13 = r0.placeProvider
            java.util.HashMap r13 = r13.getSelectedPhotos()
            java.util.Set r13 = r13.entrySet()
            java.util.Iterator r13 = r13.iterator()
        L_0x00aa:
            boolean r14 = r13.hasNext()
            if (r14 == 0) goto L_0x00d1
            java.lang.Object r14 = r13.next()
            java.util.Map$Entry r14 = (java.util.Map.Entry) r14
            java.lang.Object r14 = r14.getValue()
            boolean r15 = r14 instanceof org.telegram.messenger.MediaController.PhotoEntry
            if (r15 == 0) goto L_0x00c6
            org.telegram.messenger.MediaController$PhotoEntry r14 = (org.telegram.messenger.MediaController.PhotoEntry) r14
            int r14 = r14.ttl
            if (r14 == 0) goto L_0x00aa
        L_0x00c4:
            r13 = 1
            goto L_0x00d2
        L_0x00c6:
            boolean r15 = r14 instanceof org.telegram.messenger.MediaController.SearchImage
            if (r15 == 0) goto L_0x00aa
            org.telegram.messenger.MediaController$SearchImage r14 = (org.telegram.messenger.MediaController.SearchImage) r14
            int r14 = r14.ttl
            if (r14 == 0) goto L_0x00aa
            goto L_0x00c4
        L_0x00d1:
            r13 = 0
        L_0x00d2:
            if (r13 == 0) goto L_0x00f4
            goto L_0x008b
        L_0x00d5:
            if (r11 != r5) goto L_0x00de
            boolean r13 = org.telegram.messenger.UserObject.isUserSelf(r2)
            if (r13 == 0) goto L_0x00de
            goto L_0x008b
        L_0x00de:
            if (r11 == r10) goto L_0x00e2
            if (r11 != r9) goto L_0x00e5
        L_0x00e2:
            if (r4 != 0) goto L_0x00e5
            goto L_0x008b
        L_0x00e5:
            if (r11 != r12) goto L_0x00f4
            boolean r13 = r0.isCurrentVideo
            if (r13 != 0) goto L_0x008b
            android.widget.ImageView r13 = r0.timeItem
            android.graphics.ColorFilter r13 = r13.getColorFilter()
            if (r13 == 0) goto L_0x00f4
            goto L_0x008b
        L_0x00f4:
            org.telegram.ui.ActionBar.ActionBarMenuSubItem r13 = new org.telegram.ui.ActionBar.ActionBarMenuSubItem
            android.app.Activity r14 = r0.parentActivity
            if (r11 != 0) goto L_0x00fc
            r15 = 1
            goto L_0x00fd
        L_0x00fc:
            r15 = 0
        L_0x00fd:
            r6 = r17
            if (r11 != r9) goto L_0x0102
            r3 = 1
        L_0x0102:
            r13.<init>((android.content.Context) r14, (boolean) r15, (boolean) r3, (org.telegram.ui.ActionBar.Theme.ResourcesProvider) r6)
            if (r11 != 0) goto L_0x012a
            boolean r3 = org.telegram.messenger.UserObject.isUserSelf(r2)
            r9 = 2131165662(0x7var_de, float:1.7945547E38)
            if (r3 == 0) goto L_0x011d
            r3 = 2131628311(0x7f0e1117, float:1.8883911E38)
            java.lang.String r10 = "SetReminder"
            java.lang.String r3 = org.telegram.messenger.LocaleController.getString(r10, r3)
            r13.setTextAndIcon(r3, r9)
            goto L_0x0171
        L_0x011d:
            r3 = 2131628145(0x7f0e1071, float:1.8883574E38)
            java.lang.String r10 = "ScheduleMessage"
            java.lang.String r3 = org.telegram.messenger.LocaleController.getString(r10, r3)
            r13.setTextAndIcon(r3, r9)
            goto L_0x0171
        L_0x012a:
            if (r11 != r5) goto L_0x013c
            r3 = 2131628275(0x7f0e10f3, float:1.8883838E38)
            java.lang.String r9 = "SendWithoutSound"
            java.lang.String r3 = org.telegram.messenger.LocaleController.getString(r9, r3)
            r9 = 2131165539(0x7var_, float:1.7945298E38)
            r13.setTextAndIcon(r3, r9)
            goto L_0x0171
        L_0x013c:
            if (r11 != r10) goto L_0x014e
            r3 = 2131627980(0x7f0e0fcc, float:1.888324E38)
            java.lang.String r9 = "ReplacePhoto"
            java.lang.String r3 = org.telegram.messenger.LocaleController.getString(r9, r3)
            r9 = 2131165900(0x7var_cc, float:1.794603E38)
            r13.setTextAndIcon(r3, r9)
            goto L_0x0171
        L_0x014e:
            if (r11 != r9) goto L_0x0160
            r3 = 2131628242(0x7f0e10d2, float:1.8883771E38)
            java.lang.String r9 = "SendAsNewPhoto"
            java.lang.String r3 = org.telegram.messenger.LocaleController.getString(r9, r3)
            r9 = 2131165934(0x7var_ee, float:1.79461E38)
            r13.setTextAndIcon(r3, r9)
            goto L_0x0171
        L_0x0160:
            if (r11 != r12) goto L_0x0171
            r3 = 2131628273(0x7f0e10f1, float:1.8883834E38)
            java.lang.String r9 = "SendWithoutCompression"
            java.lang.String r3 = org.telegram.messenger.LocaleController.getString(r9, r3)
            r9 = 2131165935(0x7var_ef, float:1.7946101E38)
            r13.setTextAndIcon(r3, r9)
        L_0x0171:
            r3 = 1128529920(0x43440000, float:196.0)
            int r3 = org.telegram.messenger.AndroidUtilities.dp(r3)
            r13.setMinimumWidth(r3)
            r3 = -1
            r13.setColors(r3, r3)
            org.telegram.ui.ActionBar.ActionBarPopupWindow$ActionBarPopupWindowLayout r9 = r0.sendPopupLayout
            r10 = 48
            android.widget.LinearLayout$LayoutParams r3 = org.telegram.ui.Components.LayoutHelper.createLinear(r3, r10)
            r9.addView(r13, r3)
            org.telegram.ui.PhotoViewer$$ExternalSyntheticLambda38 r3 = new org.telegram.ui.PhotoViewer$$ExternalSyntheticLambda38
            r3.<init>(r0, r11)
            r13.setOnClickListener(r3)
        L_0x0191:
            int r8 = r8 + 1
            r3 = 0
            r6 = 5
            goto L_0x0074
        L_0x0197:
            org.telegram.ui.ActionBar.ActionBarPopupWindow$ActionBarPopupWindowLayout r2 = r0.sendPopupLayout
            int r2 = r2.getChildCount()
            if (r2 != 0) goto L_0x01a1
            r2 = 0
            return r2
        L_0x01a1:
            r2 = 0
            org.telegram.ui.ActionBar.ActionBarPopupWindow$ActionBarPopupWindowLayout r3 = r0.sendPopupLayout
            r4 = 620756991(0x24ffffff, float:1.11022296E-16)
            r3.setupRadialSelectors(r4)
            org.telegram.ui.ActionBar.ActionBarPopupWindow r3 = new org.telegram.ui.ActionBar.ActionBarPopupWindow
            org.telegram.ui.ActionBar.ActionBarPopupWindow$ActionBarPopupWindowLayout r4 = r0.sendPopupLayout
            r6 = -2
            r3.<init>(r4, r6, r6)
            r0.sendPopupWindow = r3
            r3.setAnimationEnabled(r2)
            org.telegram.ui.ActionBar.ActionBarPopupWindow r3 = r0.sendPopupWindow
            r4 = 2131689482(0x7f0var_a, float:1.900798E38)
            r3.setAnimationStyle(r4)
            org.telegram.ui.ActionBar.ActionBarPopupWindow r3 = r0.sendPopupWindow
            r3.setOutsideTouchable(r5)
            org.telegram.ui.ActionBar.ActionBarPopupWindow r3 = r0.sendPopupWindow
            r3.setClippingEnabled(r5)
            org.telegram.ui.ActionBar.ActionBarPopupWindow r3 = r0.sendPopupWindow
            r3.setInputMethodMode(r10)
            org.telegram.ui.ActionBar.ActionBarPopupWindow r3 = r0.sendPopupWindow
            r3.setSoftInputMode(r2)
            org.telegram.ui.ActionBar.ActionBarPopupWindow r2 = r0.sendPopupWindow
            android.view.View r2 = r2.getContentView()
            r2.setFocusableInTouchMode(r5)
            org.telegram.ui.ActionBar.ActionBarPopupWindow$ActionBarPopupWindowLayout r2 = r0.sendPopupLayout
            r3 = 1148846080(0x447a0000, float:1000.0)
            int r4 = org.telegram.messenger.AndroidUtilities.dp(r3)
            r6 = -2147483648(0xfffffffvar_, float:-0.0)
            int r4 = android.view.View.MeasureSpec.makeMeasureSpec(r4, r6)
            int r3 = org.telegram.messenger.AndroidUtilities.dp(r3)
            int r3 = android.view.View.MeasureSpec.makeMeasureSpec(r3, r6)
            r2.measure(r4, r3)
            org.telegram.ui.ActionBar.ActionBarPopupWindow r2 = r0.sendPopupWindow
            r2.setFocusable(r5)
            int[] r2 = new int[r10]
            r1.getLocationInWindow(r2)
            org.telegram.ui.ActionBar.ActionBarPopupWindow r3 = r0.sendPopupWindow
            r4 = 51
            r6 = 0
            r7 = r2[r6]
            int r6 = r18.getMeasuredWidth()
            int r7 = r7 + r6
            org.telegram.ui.ActionBar.ActionBarPopupWindow$ActionBarPopupWindowLayout r6 = r0.sendPopupLayout
            int r6 = r6.getMeasuredWidth()
            int r7 = r7 - r6
            r6 = 1096810496(0x41600000, float:14.0)
            int r6 = org.telegram.messenger.AndroidUtilities.dp(r6)
            int r7 = r7 + r6
            r2 = r2[r5]
            org.telegram.ui.ActionBar.ActionBarPopupWindow$ActionBarPopupWindowLayout r5 = r0.sendPopupLayout
            int r5 = r5.getMeasuredHeight()
            int r2 = r2 - r5
            r5 = 1099956224(0x41900000, float:18.0)
            int r5 = org.telegram.messenger.AndroidUtilities.dp(r5)
            int r2 = r2 - r5
            r3.showAtLocation(r1, r4, r7, r2)
            r1.performHapticFeedback(r9, r10)
            r1 = 0
            return r1
        L_0x0231:
            r1 = 0
            return r1
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.lambda$setParentActivity$15(org.telegram.ui.ActionBar.Theme$ResourcesProvider, android.view.View):boolean");
    }

    /* access modifiers changed from: private */
    public /* synthetic */ boolean lambda$setParentActivity$12(View view, MotionEvent motionEvent) {
        ActionBarPopupWindow actionBarPopupWindow;
        if (motionEvent.getActionMasked() != 0 || (actionBarPopupWindow = this.sendPopupWindow) == null || !actionBarPopupWindow.isShowing()) {
            return false;
        }
        view.getHitRect(this.hitRect);
        if (this.hitRect.contains((int) motionEvent.getX(), (int) motionEvent.getY())) {
            return false;
        }
        this.sendPopupWindow.dismiss();
        return false;
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$setParentActivity$13(KeyEvent keyEvent) {
        ActionBarPopupWindow actionBarPopupWindow;
        if (keyEvent.getKeyCode() == 4 && keyEvent.getRepeatCount() == 0 && (actionBarPopupWindow = this.sendPopupWindow) != null && actionBarPopupWindow.isShowing()) {
            this.sendPopupWindow.dismiss();
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$setParentActivity$14(int i, View view) {
        ActionBarPopupWindow actionBarPopupWindow = this.sendPopupWindow;
        if (actionBarPopupWindow != null && actionBarPopupWindow.isShowing()) {
            this.sendPopupWindow.dismiss();
        }
        if (i == 0) {
            showScheduleDatePickerDialog();
        } else if (i == 1) {
            sendPressed(false, 0);
        } else if (i == 2) {
            replacePressed();
        } else if (i == 3) {
            sendPressed(true, 0);
        } else if (i == 4) {
            sendPressed(true, 0, false, true);
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$setParentActivity$16(View view) {
        if (this.captionEditText.getTag() == null) {
            if (this.isCurrentVideo) {
                if (this.videoConvertSupported) {
                    TextureView textureView = this.videoTextureView;
                    if (textureView instanceof VideoEditTextureView) {
                        VideoEditTextureView videoEditTextureView = (VideoEditTextureView) textureView;
                        if (videoEditTextureView.getVideoWidth() <= 0 || videoEditTextureView.getVideoHeight() <= 0) {
                            return;
                        }
                    } else {
                        return;
                    }
                } else {
                    return;
                }
            }
            switchToEditMode(1);
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$setParentActivity$17(View view) {
        cropRotate(-90.0f);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$setParentActivity$18(View view) {
        cropMirror();
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$setParentActivity$19(View view) {
        if (this.captionEditText.getTag() == null) {
            if (this.isCurrentVideo) {
                if (this.videoConvertSupported) {
                    TextureView textureView = this.videoTextureView;
                    if (textureView instanceof VideoEditTextureView) {
                        VideoEditTextureView videoEditTextureView = (VideoEditTextureView) textureView;
                        if (videoEditTextureView.getVideoWidth() <= 0 || videoEditTextureView.getVideoHeight() <= 0) {
                            return;
                        }
                    } else {
                        return;
                    }
                } else {
                    return;
                }
            }
            switchToEditMode(3);
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$setParentActivity$20(View view) {
        if (this.captionEditText.getTag() == null) {
            this.muteVideo = !this.muteVideo;
            updateMuteButton();
            updateVideoInfo();
            if (!this.muteVideo || this.checkImageView.isChecked()) {
                Object obj = this.imagesArrLocals.get(this.currentIndex);
                if (obj instanceof MediaController.MediaEditState) {
                    ((MediaController.MediaEditState) obj).editedInfo = getCurrentVideoEditedInfo();
                    return;
                }
                return;
            }
            this.checkImageView.callOnClick();
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$setParentActivity$21(View view) {
        if (this.placeProvider != null && this.captionEditText.getTag() == null) {
            this.placeProvider.needAddMorePhotos();
            closePhoto(true, false);
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$setParentActivity$22(View view) {
        if (this.captionEditText.getTag() == null) {
            if (this.isCurrentVideo) {
                if (this.videoConvertSupported) {
                    TextureView textureView = this.videoTextureView;
                    if (textureView instanceof VideoEditTextureView) {
                        VideoEditTextureView videoEditTextureView = (VideoEditTextureView) textureView;
                        if (videoEditTextureView.getVideoWidth() <= 0 || videoEditTextureView.getVideoHeight() <= 0) {
                            return;
                        }
                    } else {
                        return;
                    }
                } else {
                    return;
                }
            }
            switchToEditMode(2);
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$setParentActivity$23(Activity activity, View view) {
        if (this.captionEditText.getTag() == null && !this.muteVideo) {
            if (this.compressItem.getTag() != null) {
                showQualityView(true);
                requestVideoPreview(1);
            } else if (this.videoConvertSupported) {
                if (this.tooltip == null) {
                    this.tooltip = new Tooltip(activity, this.containerView, -NUM, -1);
                }
                this.tooltip.setText(LocaleController.getString("VideoQualityIsTooLow", NUM));
                this.tooltip.show(this.compressItem);
            }
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$setParentActivity$29(Theme.ResourcesProvider resourcesProvider2, View view) {
        String str;
        int i;
        int i2;
        Theme.ResourcesProvider resourcesProvider3 = resourcesProvider2;
        if (this.parentActivity != null && this.captionEditText.getTag() == null) {
            BottomSheet.Builder builder = new BottomSheet.Builder(this.parentActivity, false, resourcesProvider3, -16777216);
            builder.setUseHardwareLayer(false);
            LinearLayout linearLayout = new LinearLayout(this.parentActivity);
            linearLayout.setOrientation(1);
            builder.setCustomView(linearLayout);
            TextView textView = new TextView(this.parentActivity);
            textView.setLines(1);
            textView.setSingleLine(true);
            textView.setText(LocaleController.getString("MessageLifetime", NUM));
            textView.setTextColor(-1);
            textView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
            textView.setTextSize(1, 20.0f);
            textView.setEllipsize(TextUtils.TruncateAt.MIDDLE);
            textView.setPadding(AndroidUtilities.dp(21.0f), AndroidUtilities.dp(8.0f), AndroidUtilities.dp(21.0f), AndroidUtilities.dp(4.0f));
            textView.setGravity(16);
            linearLayout.addView(textView, LayoutHelper.createFrame(-1, -2.0f));
            textView.setOnTouchListener(PhotoViewer$$ExternalSyntheticLambda45.INSTANCE);
            TextView textView2 = new TextView(this.parentActivity);
            if (this.isCurrentVideo) {
                i = NUM;
                str = "MessageLifetimeVideo";
            } else {
                i = NUM;
                str = "MessageLifetimePhoto";
            }
            textView2.setText(LocaleController.getString(str, i));
            textView2.setTextColor(-8355712);
            textView2.setTextSize(1, 14.0f);
            textView2.setEllipsize(TextUtils.TruncateAt.MIDDLE);
            textView2.setPadding(AndroidUtilities.dp(21.0f), 0, AndroidUtilities.dp(21.0f), AndroidUtilities.dp(8.0f));
            textView2.setGravity(16);
            linearLayout.addView(textView2, LayoutHelper.createFrame(-1, -2.0f));
            textView2.setOnTouchListener(PhotoViewer$$ExternalSyntheticLambda44.INSTANCE);
            BottomSheet create = builder.create();
            NumberPicker numberPicker = new NumberPicker((Context) this.parentActivity, resourcesProvider3);
            numberPicker.setMinValue(0);
            numberPicker.setMaxValue(28);
            Object obj = this.imagesArrLocals.get(this.currentIndex);
            if (obj instanceof MediaController.PhotoEntry) {
                i2 = ((MediaController.PhotoEntry) obj).ttl;
            } else {
                i2 = obj instanceof MediaController.SearchImage ? ((MediaController.SearchImage) obj).ttl : 0;
            }
            if (i2 == 0) {
                numberPicker.setValue(MessagesController.getGlobalMainSettings().getInt("self_destruct", 7));
            } else if (i2 < 0 || i2 >= 21) {
                numberPicker.setValue(((i2 / 5) + 21) - 5);
            } else {
                numberPicker.setValue(i2);
            }
            numberPicker.setTextColor(-1);
            numberPicker.setSelectorColor(-11711155);
            numberPicker.setFormatter(PhotoViewer$$ExternalSyntheticLambda75.INSTANCE);
            linearLayout.addView(numberPicker, LayoutHelper.createLinear(-1, -2));
            AnonymousClass27 r7 = new FrameLayout(this, this.parentActivity) {
                /* access modifiers changed from: protected */
                public void onLayout(boolean z, int i, int i2, int i3, int i4) {
                    int childCount = getChildCount();
                    int i5 = i3 - i;
                    for (int i6 = 0; i6 < childCount; i6++) {
                        View childAt = getChildAt(i6);
                        if (((Integer) childAt.getTag()).intValue() == -1) {
                            childAt.layout((i5 - getPaddingRight()) - childAt.getMeasuredWidth(), getPaddingTop(), i5 - getPaddingRight(), getPaddingTop() + childAt.getMeasuredHeight());
                        } else if (((Integer) childAt.getTag()).intValue() == -2) {
                            int paddingLeft = getPaddingLeft();
                            childAt.layout(paddingLeft, getPaddingTop(), childAt.getMeasuredWidth() + paddingLeft, getPaddingTop() + childAt.getMeasuredHeight());
                        } else {
                            childAt.layout(getPaddingLeft(), getPaddingTop(), getPaddingLeft() + childAt.getMeasuredWidth(), getPaddingTop() + childAt.getMeasuredHeight());
                        }
                    }
                }
            };
            r7.setPadding(AndroidUtilities.dp(8.0f), AndroidUtilities.dp(8.0f), AndroidUtilities.dp(8.0f), AndroidUtilities.dp(8.0f));
            linearLayout.addView(r7, LayoutHelper.createLinear(-1, 52));
            TextView textView3 = new TextView(this.parentActivity);
            textView3.setMinWidth(AndroidUtilities.dp(64.0f));
            textView3.setTag(-1);
            textView3.setTextSize(1, 14.0f);
            textView3.setTextColor(getThemedColor("dialogFloatingButton"));
            textView3.setGravity(17);
            textView3.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
            textView3.setText(LocaleController.getString("Done", NUM).toUpperCase());
            textView3.setBackgroundDrawable(Theme.getRoundRectSelectorDrawable(-11944718));
            textView3.setPadding(AndroidUtilities.dp(10.0f), 0, AndroidUtilities.dp(10.0f), 0);
            r7.addView(textView3, LayoutHelper.createFrame(-2, 36, 53));
            textView3.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda41(this, numberPicker, create));
            TextView textView4 = new TextView(this.parentActivity);
            textView4.setMinWidth(AndroidUtilities.dp(64.0f));
            textView4.setTag(-2);
            textView4.setTextSize(1, 14.0f);
            textView4.setTextColor(-1);
            textView4.setGravity(17);
            textView4.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
            textView4.setText(LocaleController.getString("Cancel", NUM).toUpperCase());
            textView4.setBackgroundDrawable(Theme.getRoundRectSelectorDrawable(-1));
            textView4.setPadding(AndroidUtilities.dp(10.0f), 0, AndroidUtilities.dp(10.0f), 0);
            r7.addView(textView4, LayoutHelper.createFrame(-2, 36, 53));
            textView4.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda13(create));
            create.setBackgroundColor(-16777216);
            create.show();
            AndroidUtilities.setNavigationBarColor(create.getWindow(), -16777216, false);
            AndroidUtilities.setLightNavigationBar(create.getWindow(), false);
        }
    }

    /* access modifiers changed from: private */
    public static /* synthetic */ String lambda$setParentActivity$26(int i) {
        if (i == 0) {
            return LocaleController.getString("ShortMessageLifetimeForever", NUM);
        }
        if (i < 1 || i >= 21) {
            return LocaleController.formatTTLString((i - 16) * 5);
        }
        return LocaleController.formatTTLString(i);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$setParentActivity$27(NumberPicker numberPicker, BottomSheet bottomSheet, View view) {
        int value = numberPicker.getValue();
        SharedPreferences.Editor edit = MessagesController.getGlobalMainSettings().edit();
        edit.putInt("self_destruct", value);
        edit.commit();
        bottomSheet.dismiss();
        if (value < 0 || value >= 21) {
            value = (value - 16) * 5;
        }
        Object obj = this.imagesArrLocals.get(this.currentIndex);
        if (obj instanceof MediaController.PhotoEntry) {
            ((MediaController.PhotoEntry) obj).ttl = value;
        } else if (obj instanceof MediaController.SearchImage) {
            ((MediaController.SearchImage) obj).ttl = value;
        }
        this.timeItem.setColorFilter(value != 0 ? new PorterDuffColorFilter(getThemedColor("dialogFloatingButton"), PorterDuff.Mode.MULTIPLY) : null);
        if (!this.checkImageView.isChecked()) {
            this.checkImageView.callOnClick();
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$setParentActivity$31(View view) {
        if (this.imageMoveAnimation == null) {
            PhotoViewer$$ExternalSyntheticLambda48 photoViewer$$ExternalSyntheticLambda48 = new PhotoViewer$$ExternalSyntheticLambda48(this);
            if (!this.previousHasTransform) {
                float stateOrientation = ((float) this.previousCropOrientation) - this.photoCropView.cropView.getStateOrientation();
                if (Math.abs(stateOrientation) > 180.0f) {
                    stateOrientation = stateOrientation < 0.0f ? stateOrientation + 360.0f : -(360.0f - stateOrientation);
                }
                cropRotate(stateOrientation, this.photoCropView.cropView.getStateMirror(), photoViewer$$ExternalSyntheticLambda48);
                return;
            }
            photoViewer$$ExternalSyntheticLambda48.run();
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$setParentActivity$30() {
        this.cropTransform.setViewTransform(this.previousHasTransform, this.previousCropPx, this.previousCropPy, this.previousCropRotation, this.previousCropOrientation, this.previousCropScale, 1.0f, 1.0f, this.previousCropPw, this.previousCropPh, 0.0f, 0.0f, this.previousCropMirrored);
        switchToEditMode(0);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$setParentActivity$32(View view) {
        if (this.currentEditMode != 1 || this.photoCropView.isReady()) {
            applyCurrentEditMode();
            switchToEditMode(0);
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$setParentActivity$34(View view) {
        float f = -this.photoCropView.cropView.getStateOrientation();
        if (Math.abs(f) > 180.0f) {
            f = f < 0.0f ? f + 360.0f : -(360.0f - f);
        }
        cropRotate(f, this.photoCropView.cropView.getStateMirror(), new PhotoViewer$$ExternalSyntheticLambda56(this));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$setParentActivity$33() {
        this.photoCropView.reset(true);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$setParentActivity$35(ImageReceiver imageReceiver, boolean z, boolean z2, boolean z3) {
        PhotoViewerProvider photoViewerProvider;
        Bitmap bitmap;
        if (imageReceiver == this.centerImage && z && !z2) {
            if (!this.isCurrentVideo && !((this.currentEditMode != 1 && this.sendPhotoType != 1) || this.photoCropView == null || (bitmap = imageReceiver.getBitmap()) == null)) {
                this.photoCropView.setBitmap(bitmap, imageReceiver.getOrientation(), this.sendPhotoType != 1, true, this.paintingOverlay, this.cropTransform, (VideoEditTextureView) null, (MediaController.CropState) null);
            }
            if (this.paintingOverlay.getVisibility() == 0) {
                this.containerView.requestLayout();
            }
            detectFaces();
        }
        if (imageReceiver == this.centerImage && z && (photoViewerProvider = this.placeProvider) != null && photoViewerProvider.scaleToFill() && !this.ignoreDidSetImage && this.sendPhotoType != 1) {
            if (!this.wasLayout) {
                this.dontResetZoomOnFirstLayout = true;
            } else {
                setScaleToFill();
            }
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$setParentActivity$36(View view) {
        if (this.captionEditText.getTag() == null) {
            setPhotoChecked();
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$setParentActivity$37(View view) {
        PhotoViewerProvider photoViewerProvider;
        if (this.captionEditText.getTag() == null && (photoViewerProvider = this.placeProvider) != null && photoViewerProvider.getSelectedPhotosOrder() != null && !this.placeProvider.getSelectedPhotosOrder().isEmpty()) {
            togglePhotosListView(!this.isPhotosListViewVisible, true);
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$setParentActivity$38(View view, int i) {
        int i2;
        if (!this.imagesArrLocals.isEmpty() && (i2 = this.currentIndex) >= 0 && i2 < this.imagesArrLocals.size()) {
            Object obj = this.imagesArrLocals.get(this.currentIndex);
            if (obj instanceof MediaController.MediaEditState) {
                ((MediaController.MediaEditState) obj).editedInfo = getCurrentVideoEditedInfo();
            }
        }
        this.ignoreDidSetImage = true;
        int indexOf = this.imagesArrLocals.indexOf(view.getTag());
        if (indexOf >= 0) {
            this.currentIndex = -1;
            setImageIndex(indexOf);
        }
        this.ignoreDidSetImage = false;
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$setParentActivity$39(View view, int i) {
        AnimatedEmojiSpan animatedEmojiSpan;
        Object item = this.mentionsAdapter.getItem(i);
        int resultStartPosition = this.mentionsAdapter.getResultStartPosition();
        int resultLength = this.mentionsAdapter.getResultLength();
        if (item instanceof TLRPC$User) {
            TLRPC$User tLRPC$User = (TLRPC$User) item;
            if (tLRPC$User.username != null) {
                PhotoViewerCaptionEnterView photoViewerCaptionEnterView = this.captionEditText;
                photoViewerCaptionEnterView.replaceWithText(resultStartPosition, resultLength, "@" + tLRPC$User.username + " ", false);
                return;
            }
            String firstName = UserObject.getFirstName(tLRPC$User);
            SpannableString spannableString = new SpannableString(firstName + " ");
            spannableString.setSpan(new URLSpanUserMentionPhotoViewer("" + tLRPC$User.id, true), 0, spannableString.length(), 33);
            this.captionEditText.replaceWithText(resultStartPosition, resultLength, spannableString, false);
        } else if (item instanceof String) {
            PhotoViewerCaptionEnterView photoViewerCaptionEnterView2 = this.captionEditText;
            photoViewerCaptionEnterView2.replaceWithText(resultStartPosition, resultLength, item + " ", false);
        } else if (item instanceof MediaDataController.KeywordResult) {
            String str = ((MediaDataController.KeywordResult) item).emoji;
            this.captionEditText.addEmojiToRecent(str);
            if (str == null || !str.startsWith("animated_")) {
                this.captionEditText.replaceWithText(resultStartPosition, resultLength, str, true);
                return;
            }
            try {
                long parseLong = Long.parseLong(str.substring(9));
                TLRPC$Document findDocument = AnimatedEmojiDrawable.findDocument(this.currentAccount, parseLong);
                SpannableString spannableString2 = new SpannableString(MessageObject.findAnimatedEmojiEmoticon(findDocument));
                if (findDocument != null) {
                    animatedEmojiSpan = new AnimatedEmojiSpan(findDocument, this.captionEditText.getMessageEditText().getPaint().getFontMetricsInt());
                } else {
                    animatedEmojiSpan = new AnimatedEmojiSpan(parseLong, this.captionEditText.getMessageEditText().getPaint().getFontMetricsInt());
                }
                spannableString2.setSpan(animatedEmojiSpan, 0, spannableString2.length(), 33);
                this.captionEditText.replaceWithText(resultStartPosition, resultLength, spannableString2, false);
            } catch (Exception unused) {
                this.captionEditText.replaceWithText(resultStartPosition, resultLength, str, true);
            }
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ boolean lambda$setParentActivity$41(Theme.ResourcesProvider resourcesProvider2, View view, int i) {
        if (!(this.mentionsAdapter.getItem(i) instanceof String)) {
            return false;
        }
        AlertDialog.Builder builder = new AlertDialog.Builder(this.parentActivity, resourcesProvider2);
        builder.setTitle(LocaleController.getString("AppName", NUM));
        builder.setMessage(LocaleController.getString("ClearSearch", NUM));
        builder.setPositiveButton(LocaleController.getString("ClearButton", NUM).toUpperCase(), new PhotoViewer$$ExternalSyntheticLambda7(this));
        builder.setNegativeButton(LocaleController.getString("Cancel", NUM), (DialogInterface.OnClickListener) null);
        showAlertDialog(builder);
        return true;
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$setParentActivity$40(DialogInterface dialogInterface, int i) {
        this.mentionsAdapter.clearRecentHashtags();
    }

    /* access modifiers changed from: private */
    public void animateNavBarColorTo(int i) {
        animateNavBarColorTo(i, true);
    }

    /* access modifiers changed from: private */
    public void animateNavBarColorTo(final int i, boolean z) {
        ValueAnimator valueAnimator = this.navBarAnimator;
        if (valueAnimator != null) {
            valueAnimator.cancel();
        }
        int color = this.blackPaint.getColor();
        AndroidUtilities.setLightNavigationBar((View) this.windowView, ((double) AndroidUtilities.computePerceivedBrightness(i)) >= 0.721d);
        if (z) {
            ValueAnimator ofFloat = ValueAnimator.ofFloat(new float[]{0.0f, 1.0f});
            this.navBarAnimator = ofFloat;
            ofFloat.addUpdateListener(new PhotoViewer$$ExternalSyntheticLambda4(this, color, i));
            this.navBarAnimator.addListener(new AnimatorListenerAdapter() {
                public void onAnimationEnd(Animator animator) {
                    PhotoViewer.this.blackPaint.setColor(i);
                    PhotoViewer.this.windowView.invalidate();
                }
            });
            this.navBarAnimator.setInterpolator(CubicBezierInterpolator.DEFAULT);
            this.navBarAnimator.setDuration(200);
            this.navBarAnimator.start();
            return;
        }
        this.navBarAnimator = null;
        this.blackPaint.setColor(i);
        this.windowView.invalidate();
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$animateNavBarColorTo$42(int i, int i2, ValueAnimator valueAnimator) {
        this.blackPaint.setColor(ColorUtils.blendARGB(i, i2, ((Float) valueAnimator.getAnimatedValue()).floatValue()));
        this.windowView.invalidate();
    }

    private void showScheduleDatePickerDialog() {
        if (this.parentChatActivity != null) {
            AlertsCreator.createScheduleDatePickerDialog((Context) this.parentActivity, this.parentChatActivity.getDialogId(), (AlertsCreator.ScheduleDatePickerDelegate) new PhotoViewer$$ExternalSyntheticLambda74(this), new AlertsCreator.ScheduleDatePickerColors(-1, -14342875, -1, NUM, -1, -NUM, NUM));
        }
    }

    /* access modifiers changed from: private */
    public void sendPressed(boolean z, int i) {
        sendPressed(z, i, false, false);
    }

    private void replacePressed() {
        sendPressed(false, 0, true, false);
    }

    private void sendPressed(boolean z, int i, boolean z2, boolean z3) {
        int i2;
        ChatActivity chatActivity;
        if (this.captionEditText.getTag() == null && this.placeProvider != null && !this.doneButtonPressed) {
            if (this.sendPhotoType == 1) {
                applyCurrentEditMode();
            }
            if (!z2 && (chatActivity = this.parentChatActivity) != null) {
                TLRPC$Chat currentChat = chatActivity.getCurrentChat();
                if (this.parentChatActivity.getCurrentUser() != null || ((ChatObject.isChannel(currentChat) && currentChat.megagroup) || !ChatObject.isChannel(currentChat))) {
                    SharedPreferences.Editor edit = MessagesController.getNotificationsSettings(this.currentAccount).edit();
                    edit.putBoolean("silent_" + this.parentChatActivity.getDialogId(), !z).commit();
                }
            }
            VideoEditedInfo currentVideoEditedInfo = getCurrentVideoEditedInfo();
            if (!this.imagesArrLocals.isEmpty() && (i2 = this.currentIndex) >= 0 && i2 < this.imagesArrLocals.size()) {
                Object obj = this.imagesArrLocals.get(this.currentIndex);
                if (obj instanceof MediaController.MediaEditState) {
                    ((MediaController.MediaEditState) obj).editedInfo = currentVideoEditedInfo;
                }
            }
            this.doneButtonPressed = true;
            if (currentVideoEditedInfo != null) {
                long j = (long) (((float) currentVideoEditedInfo.estimatedSize) * 0.9f);
                if ((j > NUM && !UserConfig.getInstance(this.currentAccount).isPremium()) || j > 4194304000L) {
                    new LimitReachedBottomSheet(this.parentAlert.getBaseFragment(), this.parentAlert.getContainer().getContext(), 6, UserConfig.selectedAccount).show();
                    return;
                }
            }
            if (!z2) {
                this.placeProvider.sendButtonPressed(this.currentIndex, currentVideoEditedInfo, z, i, z3);
            } else {
                this.placeProvider.replaceButtonPressed(this.currentIndex, currentVideoEditedInfo);
            }
            closePhoto(false, false);
        }
    }

    /* access modifiers changed from: private */
    public void showShareAlert(ArrayList<MessageObject> arrayList) {
        boolean z;
        boolean z2;
        final FrameLayoutDrawer frameLayoutDrawer = this.containerView;
        requestAdjustToNothing();
        ChatActivity chatActivity = this.parentChatActivity;
        if (chatActivity == null || chatActivity.getChatActivityEnterView() == null || this.parentChatActivity.getFragmentView() == null) {
            z = false;
        } else {
            if (this.parentChatActivity.getChatActivityEnterView().isKeyboardVisible()) {
                this.parentChatActivity.getChatActivityEnterView().showEmojiView();
                z2 = true;
            } else {
                z2 = false;
            }
            AndroidUtilities.setAdjustResizeToNothing(this.parentChatActivity.getParentActivity(), this.classGuid);
            this.parentChatActivity.getFragmentView().requestLayout();
            z = z2;
        }
        AnonymousClass36 r18 = r0;
        final boolean z3 = z;
        AnonymousClass36 r0 = new ShareAlert(this, this.parentActivity, this.parentChatActivity, arrayList, (String) null, (String) null, false, (String) null, (String) null, false, true, (Theme.ResourcesProvider) null) {
            final /* synthetic */ PhotoViewer this$0;

            {
                this.this$0 = r14;
            }

            /* access modifiers changed from: protected */
            public void onSend(LongSparseArray<TLRPC$Dialog> longSparseArray, int i) {
                AndroidUtilities.runOnUIThread(new PhotoViewer$36$$ExternalSyntheticLambda1(this, frameLayoutDrawer, longSparseArray, i), 250);
            }

            /* access modifiers changed from: private */
            public /* synthetic */ void lambda$onSend$0(FrameLayout frameLayout, LongSparseArray longSparseArray, int i) {
                BulletinFactory.createForwardedBulletin(this.this$0.parentActivity, frameLayout, longSparseArray.size(), longSparseArray.size() == 1 ? ((TLRPC$Dialog) longSparseArray.valueAt(0)).id : 0, i, -NUM, -1).show();
            }

            public void dismissInternal() {
                super.dismissInternal();
                if (z3) {
                    AndroidUtilities.runOnUIThread(new PhotoViewer$36$$ExternalSyntheticLambda0(this), 50);
                }
                this.this$0.requestAdjust();
            }

            /* access modifiers changed from: private */
            public /* synthetic */ void lambda$dismissInternal$1() {
                if (this.this$0.parentChatActivity != null && this.this$0.parentChatActivity.getChatActivityEnterView() != null) {
                    this.this$0.parentChatActivity.getChatActivityEnterView().openKeyboard();
                }
            }
        };
        AnonymousClass36 r02 = r18;
        r02.setFocusable(false);
        r02.getWindow().setSoftInputMode(48);
        AndroidUtilities.runOnUIThread(new PhotoViewer$$ExternalSyntheticLambda63(this, r02), 250);
        r02.show();
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$showShareAlert$43(ShareAlert shareAlert) {
        if (shareAlert != null && shareAlert.getWindow() != null) {
            shareAlert.setFocusable(true);
            ChatActivity chatActivity = this.parentChatActivity;
            if (chatActivity != null && chatActivity.getChatActivityEnterView() != null) {
                this.parentChatActivity.getChatActivityEnterView().hidePopup(false);
            }
        }
    }

    /* access modifiers changed from: private */
    public void setMenuItemIcon() {
        if (this.speedItem.getVisibility() != 0) {
            this.menuItem.setIcon(NUM);
            return;
        }
        if (Math.abs(this.currentVideoSpeed - 0.25f) < 0.001f) {
            this.menuItem.setIcon(NUM);
            this.speedItem.setSubtext(LocaleController.getString("SpeedVerySlow", NUM));
        } else if (Math.abs(this.currentVideoSpeed - 0.5f) < 0.001f) {
            this.menuItem.setIcon(NUM);
            this.speedItem.setSubtext(LocaleController.getString("SpeedSlow", NUM));
        } else if (Math.abs(this.currentVideoSpeed - 1.0f) < 0.001f) {
            this.menuItem.setIcon(NUM);
            this.speedItem.setSubtext(LocaleController.getString("SpeedNormal", NUM));
        } else if (Math.abs(this.currentVideoSpeed - 1.5f) < 0.001f) {
            this.menuItem.setIcon(NUM);
            this.speedItem.setSubtext(LocaleController.getString("SpeedFast", NUM));
        } else {
            this.menuItem.setIcon(NUM);
            this.speedItem.setSubtext(LocaleController.getString("SpeedVeryFast", NUM));
        }
        this.chooseSpeedLayout.update(this.currentVideoSpeed);
    }

    public float getCurrentVideoSpeed() {
        return this.currentVideoSpeed;
    }

    private boolean checkInlinePermissions() {
        Activity activity = this.parentActivity;
        if (activity == null) {
            return false;
        }
        if (Build.VERSION.SDK_INT < 23 || Settings.canDrawOverlays(activity)) {
            return true;
        }
        AlertsCreator.createDrawOverlayPermissionDialog(this.parentActivity, (DialogInterface.OnClickListener) null).show();
        return false;
    }

    /* access modifiers changed from: private */
    public void captureCurrentFrame() {
        TextureView textureView;
        if (this.captureFrameAtTime != -1 && (textureView = this.videoTextureView) != null) {
            this.captureFrameAtTime = -1;
            final Bitmap bitmap = textureView.getBitmap();
            this.flashView.animate().alpha(1.0f).setInterpolator(CubicBezierInterpolator.EASE_BOTH).setDuration(85).setListener(new AnimatorListenerAdapter() {
                public void onAnimationEnd(Animator animator) {
                    PhotoViewer.this.photoCropView.setVideoThumb(bitmap, 0);
                    AnimatorSet unused = PhotoViewer.this.flashAnimator = new AnimatorSet();
                    PhotoViewer.this.flashAnimator.playTogether(new Animator[]{ObjectAnimator.ofFloat(PhotoViewer.this.flashView, PhotoViewer.this.FLASH_VIEW_VALUE, new float[]{0.0f})});
                    PhotoViewer.this.flashAnimator.setDuration(85);
                    PhotoViewer.this.flashAnimator.setInterpolator(CubicBezierInterpolator.EASE_OUT);
                    PhotoViewer.this.flashAnimator.addListener(new AnimatorListenerAdapter() {
                        public void onAnimationEnd(Animator animator) {
                            if (PhotoViewer.this.flashAnimator != null) {
                                AndroidUtilities.runOnUIThread(PhotoViewer.this.videoPlayRunnable = new PhotoViewer$37$1$$ExternalSyntheticLambda0(this), 860);
                            }
                        }

                        /* access modifiers changed from: private */
                        public /* synthetic */ void lambda$onAnimationEnd$0() {
                            boolean unused = PhotoViewer.this.manuallyPaused = false;
                            if (PhotoViewer.this.videoPlayer != null) {
                                PhotoViewer.this.videoPlayer.play();
                            }
                            Runnable unused2 = PhotoViewer.this.videoPlayRunnable = null;
                        }

                        public void onAnimationCancel(Animator animator) {
                            AnimatorSet unused = PhotoViewer.this.flashAnimator = null;
                        }
                    });
                    PhotoViewer.this.flashAnimator.start();
                }
            }).start();
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: createCaptionTextView */
    public TextView lambda$setParentActivity$6() {
        AnonymousClass38 r0 = new SpoilersTextView(this.activityContext) {
            private AnimatedEmojiSpan.EmojiGroupedSpans animatedEmojiDrawables;
            private LinkSpanDrawable.LinkCollector links = new LinkSpanDrawable.LinkCollector(this);
            private LinkSpanDrawable<ClickableSpan> pressedLink;

            /* JADX WARNING: Removed duplicated region for block: B:27:0x00f9  */
            /* JADX WARNING: Removed duplicated region for block: B:36:0x0122  */
            /* JADX WARNING: Removed duplicated region for block: B:37:0x0124  */
            /* JADX WARNING: Removed duplicated region for block: B:40:0x012d A[ADDED_TO_REGION] */
            /* JADX WARNING: Removed duplicated region for block: B:42:? A[ADDED_TO_REGION, RETURN, SYNTHETIC] */
            /* Code decompiled incorrectly, please refer to instructions dump. */
            public boolean onTouchEvent(android.view.MotionEvent r10) {
                /*
                    r9 = this;
                    int r0 = r10.getAction()
                    r1 = 0
                    r2 = 0
                    r3 = 1
                    if (r0 == 0) goto L_0x0028
                    org.telegram.ui.Components.LinkSpanDrawable<android.text.style.ClickableSpan> r0 = r9.pressedLink
                    if (r0 == 0) goto L_0x0014
                    int r0 = r10.getAction()
                    if (r0 != r3) goto L_0x0014
                    goto L_0x0028
                L_0x0014:
                    int r0 = r10.getAction()
                    r4 = 3
                    if (r0 != r4) goto L_0x0025
                    org.telegram.ui.Components.LinkSpanDrawable$LinkCollector r0 = r9.links
                    r0.clear()
                    r9.pressedLink = r1
                L_0x0022:
                    r0 = 1
                    goto L_0x0119
                L_0x0025:
                    r0 = 0
                    goto L_0x0119
                L_0x0028:
                    float r0 = r10.getX()
                    int r4 = r9.getPaddingLeft()
                    float r4 = (float) r4
                    float r0 = r0 - r4
                    int r0 = (int) r0
                    float r4 = r10.getY()
                    int r5 = r9.getPaddingTop()
                    float r5 = (float) r5
                    float r4 = r4 - r5
                    int r4 = (int) r4
                    android.text.Layout r5 = r9.getLayout()
                    int r5 = r5.getLineForVertical(r4)
                    android.text.Layout r6 = r9.getLayout()
                    float r0 = (float) r0
                    int r6 = r6.getOffsetForHorizontal(r5, r0)
                    android.text.Layout r7 = r9.getLayout()
                    float r7 = r7.getLineLeft(r5)
                    int r8 = (r7 > r0 ? 1 : (r7 == r0 ? 0 : -1))
                    if (r8 > 0) goto L_0x00f1
                    android.text.Layout r8 = r9.getLayout()
                    float r5 = r8.getLineWidth(r5)
                    float r7 = r7 + r5
                    int r0 = (r7 > r0 ? 1 : (r7 == r0 ? 0 : -1))
                    if (r0 < 0) goto L_0x00f1
                    if (r4 < 0) goto L_0x00f1
                    android.text.Layout r0 = r9.getLayout()
                    int r0 = r0.getHeight()
                    if (r4 > r0) goto L_0x00f1
                    android.text.SpannableString r0 = new android.text.SpannableString
                    java.lang.CharSequence r4 = r9.getText()
                    r0.<init>(r4)
                    java.lang.Class<android.text.style.ClickableSpan> r4 = android.text.style.ClickableSpan.class
                    java.lang.Object[] r4 = r0.getSpans(r6, r6, r4)
                    android.text.style.ClickableSpan[] r4 = (android.text.style.ClickableSpan[]) r4
                    int r5 = r4.length
                    if (r5 == 0) goto L_0x00f1
                    r5 = r4[r2]
                    int r6 = r10.getAction()
                    if (r6 != 0) goto L_0x00f2
                    org.telegram.ui.Components.LinkSpanDrawable$LinkCollector r6 = r9.links
                    r6.clear()
                    org.telegram.ui.Components.LinkSpanDrawable r6 = new org.telegram.ui.Components.LinkSpanDrawable
                    r4 = r4[r2]
                    float r7 = r10.getX()
                    float r8 = r10.getY()
                    r6.<init>(r4, r1, r7, r8)
                    r9.pressedLink = r6
                    r4 = 1717742051(0x6662a9e3, float:2.6759717E23)
                    r6.setColor(r4)
                    org.telegram.ui.Components.LinkSpanDrawable$LinkCollector r4 = r9.links
                    org.telegram.ui.Components.LinkSpanDrawable<android.text.style.ClickableSpan> r6 = r9.pressedLink
                    r4.addLink(r6)
                    org.telegram.ui.Components.LinkSpanDrawable<android.text.style.ClickableSpan> r4 = r9.pressedLink
                    android.text.style.CharacterStyle r4 = r4.getSpan()
                    int r4 = r0.getSpanStart(r4)
                    org.telegram.ui.Components.LinkSpanDrawable<android.text.style.ClickableSpan> r6 = r9.pressedLink
                    android.text.style.CharacterStyle r6 = r6.getSpan()
                    int r0 = r0.getSpanEnd(r6)
                    org.telegram.ui.Components.LinkSpanDrawable<android.text.style.ClickableSpan> r6 = r9.pressedLink
                    org.telegram.ui.Components.LinkPath r6 = r6.obtainNewPath()
                    android.text.Layout r7 = r9.getLayout()
                    int r8 = r9.getPaddingTop()
                    float r8 = (float) r8
                    r6.setCurrentLayout(r7, r4, r8)
                    android.text.Layout r7 = r9.getLayout()
                    r7.getSelectionPath(r4, r0, r6)
                    org.telegram.ui.Components.LinkSpanDrawable<android.text.style.ClickableSpan> r0 = r9.pressedLink
                    org.telegram.ui.PhotoViewer$38$$ExternalSyntheticLambda1 r4 = new org.telegram.ui.PhotoViewer$38$$ExternalSyntheticLambda1
                    r4.<init>(r9, r0)
                    int r0 = android.view.ViewConfiguration.getLongPressTimeout()
                    long r6 = (long) r0
                    r9.postDelayed(r4, r6)
                    r0 = 1
                    goto L_0x00f3
                L_0x00f1:
                    r5 = r1
                L_0x00f2:
                    r0 = 0
                L_0x00f3:
                    int r4 = r10.getAction()
                    if (r4 != r3) goto L_0x0119
                    org.telegram.ui.Components.LinkSpanDrawable$LinkCollector r0 = r9.links
                    r0.clear()
                    org.telegram.ui.Components.LinkSpanDrawable<android.text.style.ClickableSpan> r0 = r9.pressedLink
                    if (r0 == 0) goto L_0x0115
                    android.text.style.CharacterStyle r0 = r0.getSpan()
                    if (r0 != r5) goto L_0x0115
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    org.telegram.ui.Components.LinkSpanDrawable<android.text.style.ClickableSpan> r4 = r9.pressedLink
                    android.text.style.CharacterStyle r4 = r4.getSpan()
                    android.text.style.ClickableSpan r4 = (android.text.style.ClickableSpan) r4
                    r0.onLinkClick(r4, r9)
                L_0x0115:
                    r9.pressedLink = r1
                    goto L_0x0022
                L_0x0119:
                    if (r0 != 0) goto L_0x0124
                    boolean r10 = super.onTouchEvent(r10)
                    if (r10 == 0) goto L_0x0122
                    goto L_0x0124
                L_0x0122:
                    r10 = 0
                    goto L_0x0125
                L_0x0124:
                    r10 = 1
                L_0x0125:
                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                    boolean r0 = r0.bottomTouchEnabled
                    if (r0 == 0) goto L_0x0130
                    if (r10 == 0) goto L_0x0130
                    r2 = 1
                L_0x0130:
                    return r2
                */
                throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.AnonymousClass38.onTouchEvent(android.view.MotionEvent):boolean");
            }

            /* access modifiers changed from: private */
            public /* synthetic */ void lambda$onTouchEvent$1(LinkSpanDrawable linkSpanDrawable) {
                LinkSpanDrawable<ClickableSpan> linkSpanDrawable2 = this.pressedLink;
                if (linkSpanDrawable == linkSpanDrawable2 && linkSpanDrawable2 != null && (linkSpanDrawable2.getSpan() instanceof URLSpan)) {
                    PhotoViewer.this.onLinkLongPress((URLSpan) this.pressedLink.getSpan(), this, new PhotoViewer$38$$ExternalSyntheticLambda0(this));
                    this.pressedLink = null;
                }
            }

            /* access modifiers changed from: private */
            public /* synthetic */ void lambda$onTouchEvent$0() {
                this.links.clear();
            }

            public void setPressed(boolean z) {
                boolean z2 = z != isPressed();
                super.setPressed(z);
                if (z2) {
                    invalidate();
                }
            }

            /* access modifiers changed from: protected */
            public void onDraw(Canvas canvas) {
                canvas.save();
                canvas.translate((float) getPaddingLeft(), 0.0f);
                if (this.links.draw(canvas)) {
                    invalidate();
                }
                canvas.restore();
                super.onDraw(canvas);
            }

            public void setText(CharSequence charSequence, TextView.BufferType bufferType) {
                super.setText(charSequence, bufferType);
                this.animatedEmojiDrawables = AnimatedEmojiSpan.update(0, (View) this, this.animatedEmojiDrawables, getLayout());
            }

            /* access modifiers changed from: protected */
            public void onDetachedFromWindow() {
                super.onDetachedFromWindow();
                AnimatedEmojiSpan.release((View) this, this.animatedEmojiDrawables);
            }

            /* access modifiers changed from: protected */
            public void dispatchDraw(Canvas canvas) {
                super.dispatchDraw(canvas);
                canvas.save();
                canvas.translate((float) getPaddingLeft(), (float) getPaddingTop());
                canvas.clipRect(0.0f, (float) getScrollY(), (float) (getWidth() - getPaddingRight()), ((float) (getHeight() + getScrollY())) - (((float) getPaddingBottom()) * 0.75f));
                AnimatedEmojiSpan.drawAnimatedEmojis(canvas, getLayout(), this.animatedEmojiDrawables, 0.0f, (List<SpoilerEffect>) null, 0.0f, 0.0f, 0.0f, 1.0f);
                canvas.restore();
            }
        };
        ViewHelper.setPadding(r0, 16.0f, 8.0f, 16.0f, 8.0f);
        r0.setLinkTextColor(-8796932);
        r0.setTextColor(-1);
        r0.setHighlightColor(NUM);
        r0.setGravity(LayoutHelper.getAbsoluteGravityStart() | 16);
        r0.setTextSize(1, 16.0f);
        r0.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda21(this));
        return r0;
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$createCaptionTextView$44(View view) {
        if (this.needCaptionLayout) {
            openCaptionEnter();
        }
    }

    /* access modifiers changed from: private */
    public int getLeftInset() {
        Object obj = this.lastInsets;
        if (obj == null || Build.VERSION.SDK_INT < 21) {
            return 0;
        }
        return ((WindowInsets) obj).getSystemWindowInsetLeft();
    }

    /* access modifiers changed from: private */
    public int getRightInset() {
        Object obj = this.lastInsets;
        if (obj == null || Build.VERSION.SDK_INT < 21) {
            return 0;
        }
        return ((WindowInsets) obj).getSystemWindowInsetRight();
    }

    /* access modifiers changed from: private */
    public void dismissInternal() {
        try {
            if (this.windowView.getParent() != null) {
                Activity activity = this.parentActivity;
                if (activity instanceof LaunchActivity) {
                    ((LaunchActivity) activity).drawerLayoutContainer.setAllowDrawContent(true);
                }
                ((WindowManager) this.parentActivity.getSystemService("window")).removeView(this.windowView);
                onHideView();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* access modifiers changed from: private */
    public void switchToPip(boolean z) {
        CubicBezierInterpolator cubicBezierInterpolator;
        CubicBezierInterpolator cubicBezierInterpolator2;
        if (this.videoPlayer != null && this.textureUploaded && checkInlinePermissions() && !this.changingTextureView && !this.switchingInlineMode && !this.isInline) {
            if (PipInstance != null) {
                PipInstance.destroyPhotoViewer();
            }
            this.openedFullScreenVideo = false;
            PipInstance = Instance;
            Instance = null;
            this.switchingInlineMode = true;
            this.isVisible = false;
            AndroidUtilities.cancelRunOnUIThread(this.hideActionBarRunnable);
            PlaceProviderObject placeProviderObject = this.currentPlaceObject;
            if (placeProviderObject != null && !placeProviderObject.imageReceiver.getVisible()) {
                this.currentPlaceObject.imageReceiver.setVisible(true, true);
                AnimatedFileDrawable animation = this.currentPlaceObject.imageReceiver.getAnimation();
                if (animation != null) {
                    Bitmap animatedBitmap = animation.getAnimatedBitmap();
                    if (animatedBitmap != null) {
                        try {
                            Bitmap bitmap = this.videoTextureView.getBitmap(animatedBitmap.getWidth(), animatedBitmap.getHeight());
                            new Canvas(animatedBitmap).drawBitmap(bitmap, 0.0f, 0.0f, (Paint) null);
                            bitmap.recycle();
                        } catch (Throwable th) {
                            FileLog.e(th);
                        }
                    }
                    animation.seekTo(this.videoPlayer.getCurrentPosition(), true);
                    if (z) {
                        this.currentPlaceObject.imageReceiver.setAlpha(0.0f);
                        final ImageReceiver imageReceiver = this.currentPlaceObject.imageReceiver;
                        ValueAnimator ofFloat = ValueAnimator.ofFloat(new float[]{0.0f, 1.0f});
                        ofFloat.addUpdateListener(new PhotoViewer$$ExternalSyntheticLambda0(imageReceiver));
                        ofFloat.addListener(new AnimatorListenerAdapter(this) {
                            public void onAnimationEnd(Animator animator) {
                                imageReceiver.setAlpha(1.0f);
                            }
                        });
                        ofFloat.setDuration(250);
                        ofFloat.start();
                    }
                    this.currentPlaceObject.imageReceiver.setAllowStartAnimation(true);
                    this.currentPlaceObject.imageReceiver.startAnimation();
                }
            }
            if (Build.VERSION.SDK_INT >= 21) {
                this.pipAnimationInProgress = true;
                org.telegram.ui.Components.Rect pipRect = PipVideoOverlay.getPipRect(true, this.aspectRatioFrameLayout.getAspectRatio());
                final float width = pipRect.width / ((float) this.videoTextureView.getWidth());
                final ValueAnimator ofFloat2 = ValueAnimator.ofFloat(new float[]{0.0f, 1.0f});
                float translationX2 = this.videoTextureView.getTranslationX();
                float translationY2 = this.videoTextureView.getTranslationY() + this.translationY;
                float translationY3 = this.textureImageView.getTranslationY() + this.translationY;
                float f = pipRect.x;
                float x = (f - this.aspectRatioFrameLayout.getX()) + ((float) getLeftInset());
                float f2 = pipRect.y;
                float y = f2 - this.aspectRatioFrameLayout.getY();
                this.textureImageView.setTranslationY(translationY3);
                this.videoTextureView.setTranslationY(translationY2);
                FirstFrameView firstFrameView2 = this.firstFrameView;
                if (firstFrameView2 != null) {
                    firstFrameView2.setTranslationY(translationY2);
                }
                this.translationY = 0.0f;
                this.containerView.invalidate();
                if (z) {
                    if (translationY2 < y) {
                        cubicBezierInterpolator2 = new CubicBezierInterpolator(0.5d, 0.0d, 0.9d, 0.9d);
                    } else {
                        cubicBezierInterpolator2 = new CubicBezierInterpolator(0.0d, 0.5d, 0.9d, 0.9d);
                    }
                    cubicBezierInterpolator = cubicBezierInterpolator2;
                } else {
                    cubicBezierInterpolator = null;
                }
                AnonymousClass40 r1 = new ViewOutlineProvider(this) {
                    public void getOutline(View view, Outline outline) {
                        outline.setRoundRect(0, 0, view.getMeasuredWidth(), view.getMeasuredHeight(), ((Float) ofFloat2.getAnimatedValue()).floatValue() * ((float) AndroidUtilities.dp(10.0f)) * (1.0f / width));
                    }
                };
                this.videoTextureView.setOutlineProvider(r1);
                this.videoTextureView.setClipToOutline(true);
                this.textureImageView.setOutlineProvider(r1);
                this.textureImageView.setClipToOutline(true);
                FirstFrameView firstFrameView3 = this.firstFrameView;
                if (firstFrameView3 != null) {
                    firstFrameView3.setOutlineProvider(r1);
                    this.firstFrameView.setClipToOutline(true);
                }
                PhotoViewer$$ExternalSyntheticLambda5 photoViewer$$ExternalSyntheticLambda5 = r1;
                float f3 = translationY2;
                float f4 = f2;
                ValueAnimator valueAnimator = ofFloat2;
                float f5 = width;
                PhotoViewer$$ExternalSyntheticLambda5 photoViewer$$ExternalSyntheticLambda52 = new PhotoViewer$$ExternalSyntheticLambda5(this, cubicBezierInterpolator, translationX2, f, translationY3, f4, x, f3, y);
                valueAnimator.addUpdateListener(photoViewer$$ExternalSyntheticLambda5);
                AnimatorSet animatorSet = new AnimatorSet();
                animatorSet.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.textureImageView, View.SCALE_X, new float[]{f5}), ObjectAnimator.ofFloat(this.textureImageView, View.SCALE_Y, new float[]{f5}), ObjectAnimator.ofFloat(this.videoTextureView, View.SCALE_X, new float[]{f5}), ObjectAnimator.ofFloat(this.videoTextureView, View.SCALE_Y, new float[]{f5}), ObjectAnimator.ofInt(this.backgroundDrawable, AnimationProperties.COLOR_DRAWABLE_ALPHA, new int[]{0}), valueAnimator});
                if (z) {
                    animatorSet.setInterpolator(CubicBezierInterpolator.EASE_OUT);
                    animatorSet.setDuration(300);
                } else {
                    animatorSet.setInterpolator(new DecelerateInterpolator());
                    animatorSet.setDuration(250);
                }
                animatorSet.addListener(new AnimatorListenerAdapter() {
                    public void onAnimationEnd(Animator animator) {
                        boolean unused = PhotoViewer.this.pipAnimationInProgress = false;
                        PhotoViewer.this.switchToInlineRunnable.run();
                        AndroidUtilities.runOnUIThread(new PhotoViewer$41$$ExternalSyntheticLambda0(this), 100);
                    }

                    /* access modifiers changed from: private */
                    public /* synthetic */ void lambda$onAnimationEnd$0() {
                        PhotoViewer.this.videoTextureView.setOutlineProvider((ViewOutlineProvider) null);
                        PhotoViewer.this.textureImageView.setOutlineProvider((ViewOutlineProvider) null);
                        if (PhotoViewer.this.firstFrameView != null) {
                            PhotoViewer.this.firstFrameView.setOutlineProvider((ViewOutlineProvider) null);
                        }
                    }
                });
                animatorSet.start();
                if (!z) {
                    toggleActionBar(false, true, new ActionBarToggleParams().enableStatusBarAnimation(false).enableTranslationAnimation(false).animationDuration(250).animationInterpolator(new DecelerateInterpolator()));
                }
            } else {
                this.switchToInlineRunnable.run();
                dismissInternal();
            }
            ChatActivity chatActivity = this.parentChatActivity;
            if (chatActivity != null) {
                chatActivity.getFragmentView().invalidate();
            }
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$switchToPip$46(CubicBezierInterpolator cubicBezierInterpolator, float f, float f2, float f3, float f4, float f5, float f6, float f7, ValueAnimator valueAnimator) {
        float f8;
        float floatValue = ((Float) valueAnimator.getAnimatedValue()).floatValue();
        if (cubicBezierInterpolator == null) {
            f8 = floatValue;
        } else {
            f8 = cubicBezierInterpolator.getInterpolation(floatValue);
        }
        ImageView imageView = this.textureImageView;
        if (imageView != null) {
            imageView.setTranslationX(((1.0f - floatValue) * f) + (f2 * floatValue));
            this.textureImageView.setTranslationY((f3 * (1.0f - f8)) + (f4 * f8));
            this.textureImageView.invalidateOutline();
        }
        TextureView textureView = this.videoTextureView;
        if (textureView != null) {
            textureView.setTranslationX((f * (1.0f - floatValue)) + (f5 * floatValue));
            this.videoTextureView.setTranslationY((f6 * (1.0f - f8)) + (f7 * f8));
            this.videoTextureView.invalidateOutline();
        }
        FirstFrameView firstFrameView2 = this.firstFrameView;
        if (firstFrameView2 != null) {
            firstFrameView2.setTranslationX(this.videoTextureView.getTranslationX());
            this.firstFrameView.setTranslationY(this.videoTextureView.getTranslationY());
            this.firstFrameView.setScaleX(this.videoTextureView.getScaleX());
            this.firstFrameView.setScaleY(this.videoTextureView.getScaleY());
            this.firstFrameView.invalidateOutline();
        }
    }

    /* access modifiers changed from: private */
    public boolean cropMirror() {
        if (this.imageMoveAnimation != null || this.photoCropView == null) {
            return false;
        }
        this.mirror = 0.0f;
        this.animateToMirror = 1.0f;
        this.animationStartTime = System.currentTimeMillis();
        AnimatorSet animatorSet = new AnimatorSet();
        this.imageMoveAnimation = animatorSet;
        animatorSet.playTogether(new Animator[]{ObjectAnimator.ofFloat(this, AnimationProperties.PHOTO_VIEWER_ANIMATION_VALUE, new float[]{0.0f, 1.0f})});
        this.imageMoveAnimation.setDuration(250);
        this.imageMoveAnimation.setInterpolator(CubicBezierInterpolator.DEFAULT);
        this.imageMoveAnimation.addListener(new AnimatorListenerAdapter() {
            public void onAnimationEnd(Animator animator) {
                AnimatorSet unused = PhotoViewer.this.imageMoveAnimation = null;
                if (PhotoViewer.this.photoCropView != null) {
                    if (PhotoViewer.this.photoCropView.mirror()) {
                        PhotoViewer.this.mirrorItem.setColorFilter(new PorterDuffColorFilter(PhotoViewer.this.getThemedColor("dialogFloatingButton"), PorterDuff.Mode.MULTIPLY));
                    } else {
                        PhotoViewer.this.mirrorItem.setColorFilter((ColorFilter) null);
                    }
                    PhotoViewer photoViewer = PhotoViewer.this;
                    float unused2 = photoViewer.mirror = photoViewer.animateToMirror = 0.0f;
                    PhotoViewer.this.containerView.invalidate();
                }
            }
        });
        this.imageMoveAnimation.start();
        return !this.photoCropView.cropView.isMirrored();
    }

    /* access modifiers changed from: private */
    public boolean cropRotate(float f) {
        return cropRotate(f, false, (Runnable) null);
    }

    private boolean cropRotate(final float f, boolean z, final Runnable runnable) {
        PhotoCropView photoCropView2;
        if (this.imageMoveAnimation != null || (photoCropView2 = this.photoCropView) == null) {
            return false;
        }
        photoCropView2.cropView.maximize(true);
        this.rotate = 0.0f;
        this.animateToRotate = 0.0f + f;
        if (z) {
            this.mirror = 0.0f;
            this.animateToMirror = 1.0f;
        }
        this.animationStartTime = System.currentTimeMillis();
        this.imageMoveAnimation = new AnimatorSet();
        ImageReceiver imageReceiver = this.centerImage;
        if (imageReceiver != null) {
            int bitmapWidth = imageReceiver.getBitmapWidth();
            int bitmapHeight = this.centerImage.getBitmapHeight();
            if (Math.abs((((int) this.photoCropView.cropView.getStateOrientation()) / 90) % 2) == 1) {
                int i = bitmapHeight;
                bitmapHeight = bitmapWidth;
                bitmapWidth = i;
            }
            MediaController.CropState cropState = this.editState.cropState;
            if (cropState != null) {
                bitmapWidth = (int) (((float) bitmapWidth) * cropState.cropPw);
                bitmapHeight = (int) (((float) bitmapHeight) * cropState.cropPh);
            }
            float f2 = (float) bitmapWidth;
            float f3 = (float) bitmapHeight;
            float min = Math.min(((float) getContainerViewWidth(1)) / f2, ((float) getContainerViewHeight(1)) / f3);
            this.animateToScale = (Math.abs((f / 90.0f) % 2.0f) == 1.0f ? Math.min(((float) getContainerViewWidth(1)) / f3, ((float) getContainerViewHeight(1)) / f2) : min) / min;
        }
        ValueAnimator ofFloat = ValueAnimator.ofFloat(new float[]{0.0f, 1.0f});
        ofFloat.addUpdateListener(new PhotoViewer$$ExternalSyntheticLambda3(this, f, this.photoCropView.wheelView.getRotation()));
        this.imageMoveAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(this, AnimationProperties.PHOTO_VIEWER_ANIMATION_VALUE, new float[]{0.0f, 1.0f}), ofFloat});
        this.imageMoveAnimation.setDuration(250);
        this.imageMoveAnimation.setInterpolator(CubicBezierInterpolator.DEFAULT);
        this.imageMoveAnimation.addListener(new AnimatorListenerAdapter() {
            public void onAnimationEnd(Animator animator) {
                AnimatorSet unused = PhotoViewer.this.imageMoveAnimation = null;
                PhotoViewer photoViewer = PhotoViewer.this;
                float unused2 = photoViewer.rotate = photoViewer.animateToRotate = 0.0f;
                PhotoViewer photoViewer2 = PhotoViewer.this;
                float unused3 = photoViewer2.mirror = photoViewer2.animateToMirror = 0.0f;
                PhotoViewer photoViewer3 = PhotoViewer.this;
                float unused4 = photoViewer3.scale = photoViewer3.animateToScale = 1.0f;
                PhotoViewer.this.containerView.invalidate();
                PhotoViewer.this.photoCropView.cropView.areaView.setRotationScaleTranslation(0.0f, 1.0f, 0.0f, 0.0f);
                PhotoViewer.this.photoCropView.wheelView.setRotated(false);
                if (Math.abs(f) > 0.0f) {
                    if (PhotoViewer.this.photoCropView.rotate(f)) {
                        PhotoViewer.this.rotateItem.setColorFilter(new PorterDuffColorFilter(PhotoViewer.this.getThemedColor("dialogFloatingButton"), PorterDuff.Mode.MULTIPLY));
                    } else {
                        PhotoViewer.this.rotateItem.setColorFilter((ColorFilter) null);
                    }
                }
                if (PhotoViewer.this.editState.cropState != null) {
                    MediaController.CropState cropState = PhotoViewer.this.editState.cropState;
                    PhotoViewer.this.editState.cropState.cropPy = 0.0f;
                    cropState.cropPx = 0.0f;
                    MediaController.CropState cropState2 = PhotoViewer.this.editState.cropState;
                    PhotoViewer.this.editState.cropState.cropPh = 1.0f;
                    cropState2.cropPw = 1.0f;
                }
                Runnable runnable = runnable;
                if (runnable != null) {
                    runnable.run();
                }
            }
        });
        this.imageMoveAnimation.start();
        if (Math.abs(this.photoCropView.cropView.getStateOrientation() + f) > 0.01f) {
            return true;
        }
        return false;
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$cropRotate$47(float f, float f2, ValueAnimator valueAnimator) {
        CropAreaView cropAreaView = this.photoCropView.cropView.areaView;
        float floatValue = ((Float) valueAnimator.getAnimatedValue()).floatValue() * f;
        float f3 = this.scale;
        cropAreaView.setRotationScaleTranslation(floatValue, f3 + ((this.animateToScale - f3) * this.animationValue), 0.0f, 0.0f);
        this.photoCropView.wheelView.setRotation(AndroidUtilities.lerp(f2, 0.0f, ((Float) valueAnimator.getAnimatedValue()).floatValue()), false);
    }

    public VideoPlayer getVideoPlayer() {
        return this.videoPlayer;
    }

    public void exitFromPip() {
        TextureView textureView;
        if (this.isInline) {
            if (Instance != null) {
                Instance.closePhoto(false, true);
            }
            PhotoViewerWebView photoViewerWebView2 = this.photoViewerWebView;
            if (photoViewerWebView2 != null) {
                photoViewerWebView2.exitFromPip();
            }
            Instance = PipInstance;
            PipInstance = null;
            if (this.photoViewerWebView == null) {
                this.switchingInlineMode = true;
                Bitmap bitmap = this.currentBitmap;
                if (bitmap != null) {
                    bitmap.recycle();
                    this.currentBitmap = null;
                }
                this.changingTextureView = true;
            }
            this.isInline = false;
            if (this.photoViewerWebView == null && (textureView = this.videoTextureView) != null) {
                if (textureView.getParent() != null) {
                    ((ViewGroup) this.videoTextureView.getParent()).removeView(this.videoTextureView);
                }
                this.videoTextureView.setVisibility(4);
                this.aspectRatioFrameLayout.addView(this.videoTextureView);
            }
            if (ApplicationLoader.mainInterfacePaused) {
                try {
                    this.parentActivity.startService(new Intent(ApplicationLoader.applicationContext, BringAppForegroundService.class));
                } catch (Throwable th) {
                    FileLog.e(th);
                }
            }
            if (this.photoViewerWebView == null) {
                if (Build.VERSION.SDK_INT < 21 || this.videoTextureView == null) {
                    PipVideoOverlay.dismiss(true);
                } else {
                    this.pipAnimationInProgress = true;
                    org.telegram.ui.Components.Rect pipRect = PipVideoOverlay.getPipRect(false, this.aspectRatioFrameLayout.getAspectRatio());
                    final float f = pipRect.width / ((float) this.textureImageView.getLayoutParams().width);
                    this.textureImageView.setScaleX(f);
                    this.textureImageView.setScaleY(f);
                    this.textureImageView.setTranslationX(pipRect.x);
                    this.textureImageView.setTranslationY(pipRect.y);
                    this.videoTextureView.setScaleX(f);
                    this.videoTextureView.setScaleY(f);
                    this.videoTextureView.setTranslationX(pipRect.x - this.aspectRatioFrameLayout.getX());
                    this.videoTextureView.setTranslationY(pipRect.y - this.aspectRatioFrameLayout.getY());
                    FirstFrameView firstFrameView2 = this.firstFrameView;
                    if (firstFrameView2 != null) {
                        firstFrameView2.setScaleX(f);
                        this.firstFrameView.setScaleY(f);
                        this.firstFrameView.setTranslationX(this.videoTextureView.getTranslationX());
                        this.firstFrameView.setTranslationY(this.videoTextureView.getTranslationY());
                    }
                    this.inlineOutAnimationProgress = 0.0f;
                    AnonymousClass44 r0 = new ViewOutlineProvider() {
                        public void getOutline(View view, Outline outline) {
                            outline.setRoundRect(0, 0, view.getMeasuredWidth(), view.getMeasuredHeight(), (1.0f - PhotoViewer.this.inlineOutAnimationProgress) * ((float) AndroidUtilities.dp(10.0f)) * (1.0f / f));
                        }
                    };
                    this.videoTextureView.setOutlineProvider(r0);
                    this.videoTextureView.setClipToOutline(true);
                    this.textureImageView.setOutlineProvider(r0);
                    this.textureImageView.setClipToOutline(true);
                    FirstFrameView firstFrameView3 = this.firstFrameView;
                    if (firstFrameView3 != null) {
                        firstFrameView3.setOutlineProvider(r0);
                        this.firstFrameView.setClipToOutline(true);
                    }
                }
            }
            try {
                this.isVisible = true;
                ((WindowManager) this.parentActivity.getSystemService("window")).addView(this.windowView, this.windowLayoutParams);
                onShowView();
                PlaceProviderObject placeProviderObject = this.currentPlaceObject;
                if (placeProviderObject != null) {
                    placeProviderObject.imageReceiver.setVisible(false, false);
                }
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
            if (Build.VERSION.SDK_INT >= 21) {
                this.waitingForDraw = 4;
            }
        }
    }

    private void onShowView() {
        Activity activity = this.parentActivity;
        if (activity instanceof LaunchActivity) {
            ((LaunchActivity) activity).addOnUserLeaveHintListener(this.onUserLeaveHintListener);
        }
    }

    private void onHideView() {
        Activity activity = this.parentActivity;
        if (activity instanceof LaunchActivity) {
            ((LaunchActivity) activity).removeOnUserLeaveHintListener(this.onUserLeaveHintListener);
        }
    }

    /* access modifiers changed from: private */
    public void onUserLeaveHint() {
        if (this.pipItem.getAlpha() == 1.0f && AndroidUtilities.checkInlinePermissions(this.parentActivity) && !PipVideoOverlay.isVisible() && this.isPlaying) {
            if (this.isEmbedVideo) {
                PhotoViewerWebView photoViewerWebView2 = this.photoViewerWebView;
                if (photoViewerWebView2 != null && !photoViewerWebView2.isInAppOnly() && this.photoViewerWebView.openInPip()) {
                    this.pipVideoOverlayAnimateFlag = false;
                    if (PipInstance != null) {
                        PipInstance.destroyPhotoViewer();
                    }
                    this.isInline = true;
                    PipInstance = Instance;
                    Instance = null;
                    this.isVisible = false;
                    PlaceProviderObject placeProviderObject = this.currentPlaceObject;
                    if (placeProviderObject != null && !placeProviderObject.imageReceiver.getVisible()) {
                        this.currentPlaceObject.imageReceiver.setVisible(true, true);
                    }
                    dismissInternal();
                    return;
                }
                return;
            }
            this.pipVideoOverlayAnimateFlag = false;
            switchToPip(false);
        }
    }

    /* access modifiers changed from: private */
    public void updateVideoSeekPreviewPosition() {
        int thumbX = (this.videoPlayerSeekbar.getThumbX() + AndroidUtilities.dp(2.0f)) - (this.videoPreviewFrame.getMeasuredWidth() / 2);
        int dp = AndroidUtilities.dp(10.0f);
        int measuredWidth = (this.videoPlayerControlFrameLayout.getMeasuredWidth() - AndroidUtilities.dp(10.0f)) - (this.videoPreviewFrame.getMeasuredWidth() / 2);
        if (thumbX < dp) {
            thumbX = dp;
        } else if (thumbX >= measuredWidth) {
            thumbX = measuredWidth;
        }
        this.videoPreviewFrame.setTranslationX((float) thumbX);
    }

    /* access modifiers changed from: private */
    public void showVideoSeekPreviewPosition(boolean z) {
        if (z && this.videoPreviewFrame.getTag() != null) {
            return;
        }
        if (!z && this.videoPreviewFrame.getTag() == null) {
            return;
        }
        if (!z || this.videoPreviewFrame.isReady()) {
            AnimatorSet animatorSet = this.videoPreviewFrameAnimation;
            if (animatorSet != null) {
                animatorSet.cancel();
            }
            this.videoPreviewFrame.setTag(z ? 1 : null);
            AnimatorSet animatorSet2 = new AnimatorSet();
            this.videoPreviewFrameAnimation = animatorSet2;
            Animator[] animatorArr = new Animator[1];
            VideoSeekPreviewImage videoSeekPreviewImage = this.videoPreviewFrame;
            Property property = View.ALPHA;
            float[] fArr = new float[1];
            fArr[0] = z ? 1.0f : 0.0f;
            animatorArr[0] = ObjectAnimator.ofFloat(videoSeekPreviewImage, property, fArr);
            animatorSet2.playTogether(animatorArr);
            this.videoPreviewFrameAnimation.addListener(new AnimatorListenerAdapter() {
                public void onAnimationEnd(Animator animator) {
                    AnimatorSet unused = PhotoViewer.this.videoPreviewFrameAnimation = null;
                }
            });
            this.videoPreviewFrameAnimation.setDuration(180);
            this.videoPreviewFrameAnimation.start();
            return;
        }
        this.needShowOnReady = true;
    }

    private void createVideoControlsInterface() {
        VideoPlayerControlFrameLayout videoPlayerControlFrameLayout2 = new VideoPlayerControlFrameLayout(this.containerView.getContext());
        this.videoPlayerControlFrameLayout = videoPlayerControlFrameLayout2;
        this.containerView.addView(videoPlayerControlFrameLayout2, LayoutHelper.createFrame(-1, 48, 83));
        final AnonymousClass46 r0 = new VideoPlayerSeekBar.SeekBarDelegate() {
            public void onSeekBarDrag(float f) {
                if (PhotoViewer.this.videoPlayer != null) {
                    if (!PhotoViewer.this.inPreview && PhotoViewer.this.videoTimelineView.getVisibility() == 0) {
                        f = PhotoViewer.this.videoTimelineView.getLeftProgress() + ((PhotoViewer.this.videoTimelineView.getRightProgress() - PhotoViewer.this.videoTimelineView.getLeftProgress()) * f);
                    }
                    long duration = PhotoViewer.this.videoPlayer.getDuration();
                    if (duration == -9223372036854775807L) {
                        float unused = PhotoViewer.this.seekToProgressPending = f;
                    } else {
                        PhotoViewer.this.videoPlayer.seekTo((long) ((int) (f * ((float) duration))));
                    }
                    PhotoViewer.this.showVideoSeekPreviewPosition(false);
                    boolean unused2 = PhotoViewer.this.needShowOnReady = false;
                }
            }

            public void onSeekBarContinuousDrag(float f) {
                if (!(PhotoViewer.this.videoPlayer == null || PhotoViewer.this.videoPreviewFrame == null)) {
                    PhotoViewer.this.videoPreviewFrame.setProgress(f, PhotoViewer.this.videoPlayerSeekbar.getWidth());
                }
                PhotoViewer.this.showVideoSeekPreviewPosition(true);
                PhotoViewer.this.updateVideoSeekPreviewPosition();
            }
        };
        AnonymousClass47 r1 = new FloatSeekBarAccessibilityDelegate() {
            public float getProgress() {
                return PhotoViewer.this.videoPlayerSeekbar.getProgress();
            }

            public void setProgress(float f) {
                r0.onSeekBarDrag(f);
                PhotoViewer.this.videoPlayerSeekbar.setProgress(f);
                PhotoViewer.this.videoPlayerSeekbarView.invalidate();
            }

            public String getContentDescription(View view) {
                return LocaleController.formatString("AccDescrPlayerDuration", NUM, LocaleController.formatPluralString("Minutes", PhotoViewer.this.videoPlayerCurrentTime[0], new Object[0]) + ' ' + LocaleController.formatPluralString("Seconds", PhotoViewer.this.videoPlayerCurrentTime[1], new Object[0]), LocaleController.formatPluralString("Minutes", PhotoViewer.this.videoPlayerTotalTime[0], new Object[0]) + ' ' + LocaleController.formatPluralString("Seconds", PhotoViewer.this.videoPlayerTotalTime[1], new Object[0]));
            }
        };
        AnonymousClass48 r4 = new View(this.containerView.getContext()) {
            /* access modifiers changed from: protected */
            public void onDraw(Canvas canvas) {
                PhotoViewer.this.videoPlayerSeekbar.draw(canvas, this);
            }
        };
        this.videoPlayerSeekbarView = r4;
        r4.setAccessibilityDelegate(r1);
        this.videoPlayerSeekbarView.setImportantForAccessibility(1);
        this.videoPlayerControlFrameLayout.addView(this.videoPlayerSeekbarView, LayoutHelper.createFrame(-1, -1.0f));
        VideoPlayerSeekBar videoPlayerSeekBar = new VideoPlayerSeekBar(this.videoPlayerSeekbarView);
        this.videoPlayerSeekbar = videoPlayerSeekBar;
        videoPlayerSeekBar.setHorizontalPadding(AndroidUtilities.dp(2.0f));
        this.videoPlayerSeekbar.setColors(NUM, NUM, -1, -1, -1, NUM);
        this.videoPlayerSeekbar.setDelegate(r0);
        AnonymousClass49 r02 = new VideoSeekPreviewImage(this.containerView.getContext(), new PhotoViewer$$ExternalSyntheticLambda80(this)) {
            /* access modifiers changed from: protected */
            public void onLayout(boolean z, int i, int i2, int i3, int i4) {
                super.onLayout(z, i, i2, i3, i4);
                PhotoViewer.this.updateVideoSeekPreviewPosition();
            }

            public void setVisibility(int i) {
                super.setVisibility(i);
                if (i == 0) {
                    PhotoViewer.this.updateVideoSeekPreviewPosition();
                }
            }
        };
        this.videoPreviewFrame = r02;
        r02.setAlpha(0.0f);
        this.containerView.addView(this.videoPreviewFrame, LayoutHelper.createFrame(-2, -2.0f, 83, 0.0f, 0.0f, 0.0f, 58.0f));
        SimpleTextView simpleTextView = new SimpleTextView(this.containerView.getContext());
        this.videoPlayerTime = simpleTextView;
        simpleTextView.setTextColor(-1);
        this.videoPlayerTime.setGravity(53);
        this.videoPlayerTime.setTextSize(14);
        this.videoPlayerTime.setImportantForAccessibility(2);
        this.videoPlayerControlFrameLayout.addView(this.videoPlayerTime, LayoutHelper.createFrame(-2, -2.0f, 53, 0.0f, 15.0f, 12.0f, 0.0f));
        ImageView imageView = new ImageView(this.containerView.getContext());
        this.exitFullscreenButton = imageView;
        imageView.setImageResource(NUM);
        this.exitFullscreenButton.setContentDescription(LocaleController.getString("AccExitFullscreen", NUM));
        this.exitFullscreenButton.setScaleType(ImageView.ScaleType.CENTER);
        this.exitFullscreenButton.setBackground(Theme.createSelectorDrawable(NUM));
        this.exitFullscreenButton.setVisibility(4);
        this.videoPlayerControlFrameLayout.addView(this.exitFullscreenButton, LayoutHelper.createFrame(48, 48, 53));
        this.exitFullscreenButton.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda35(this));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$createVideoControlsInterface$48() {
        if (this.needShowOnReady) {
            showVideoSeekPreviewPosition(true);
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$createVideoControlsInterface$49(View view) {
        Activity activity = this.parentActivity;
        if (activity != null) {
            this.wasRotated = false;
            this.fullscreenedByButton = 2;
            if (this.prevOrientation == -10) {
                this.prevOrientation = activity.getRequestedOrientation();
            }
            this.parentActivity.setRequestedOrientation(1);
        }
    }

    private void openCaptionEnter() {
        int i;
        if (this.imageMoveAnimation == null && this.changeModeAnimation == null && this.currentEditMode == 0 && (i = this.sendPhotoType) != 1 && i != 3 && i != 10) {
            if (!this.windowView.isFocusable()) {
                makeFocusable();
            }
            this.keyboardAnimationEnabled = true;
            this.selectedPhotosListView.setEnabled(false);
            this.photosCounterView.setRotationX(0.0f);
            this.isPhotosListViewVisible = false;
            this.captionEditText.setTag(1);
            this.captionEditText.openKeyboard();
            this.captionEditText.setImportantForAccessibility(0);
            this.lastTitle = this.actionBar.getTitle();
            this.captionEditText.setVisibility(0);
        }
    }

    /* JADX WARNING: Code restructure failed: missing block: B:13:0x0067, code lost:
        if (r4 == null) goto L_0x006a;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private int[] fixVideoWidthHeight(int r8, int r9) {
        /*
            r7 = this;
            java.lang.String r0 = "video/avc"
            r1 = 2
            int[] r1 = new int[r1]
            r2 = 0
            r1[r2] = r8
            r3 = 1
            r1[r3] = r9
            int r4 = android.os.Build.VERSION.SDK_INT
            r5 = 21
            if (r4 < r5) goto L_0x006a
            r4 = 0
            android.media.MediaCodec r4 = android.media.MediaCodec.createEncoderByType(r0)     // Catch:{ Exception -> 0x0067, all -> 0x0060 }
            android.media.MediaCodecInfo r5 = r4.getCodecInfo()     // Catch:{ Exception -> 0x0067, all -> 0x0060 }
            android.media.MediaCodecInfo$CodecCapabilities r0 = r5.getCapabilitiesForType(r0)     // Catch:{ Exception -> 0x0067, all -> 0x0060 }
            android.media.MediaCodecInfo$VideoCapabilities r0 = r0.getVideoCapabilities()     // Catch:{ Exception -> 0x0067, all -> 0x0060 }
            android.util.Range r5 = r0.getSupportedWidths()     // Catch:{ Exception -> 0x0067, all -> 0x0060 }
            android.util.Range r0 = r0.getSupportedHeights()     // Catch:{ Exception -> 0x0067, all -> 0x0060 }
            java.lang.Comparable r5 = r5.getLower()     // Catch:{ Exception -> 0x0067, all -> 0x0060 }
            java.lang.Integer r5 = (java.lang.Integer) r5     // Catch:{ Exception -> 0x0067, all -> 0x0060 }
            int r5 = r5.intValue()     // Catch:{ Exception -> 0x0067, all -> 0x0060 }
            float r8 = (float) r8     // Catch:{ Exception -> 0x0067, all -> 0x0060 }
            r6 = 1098907648(0x41800000, float:16.0)
            float r8 = r8 / r6
            int r8 = java.lang.Math.round(r8)     // Catch:{ Exception -> 0x0067, all -> 0x0060 }
            int r8 = r8 * 16
            int r8 = java.lang.Math.max(r5, r8)     // Catch:{ Exception -> 0x0067, all -> 0x0060 }
            r1[r2] = r8     // Catch:{ Exception -> 0x0067, all -> 0x0060 }
            java.lang.Comparable r8 = r0.getLower()     // Catch:{ Exception -> 0x0067, all -> 0x0060 }
            java.lang.Integer r8 = (java.lang.Integer) r8     // Catch:{ Exception -> 0x0067, all -> 0x0060 }
            int r8 = r8.intValue()     // Catch:{ Exception -> 0x0067, all -> 0x0060 }
            float r9 = (float) r9     // Catch:{ Exception -> 0x0067, all -> 0x0060 }
            float r9 = r9 / r6
            int r9 = java.lang.Math.round(r9)     // Catch:{ Exception -> 0x0067, all -> 0x0060 }
            int r9 = r9 * 16
            int r8 = java.lang.Math.max(r8, r9)     // Catch:{ Exception -> 0x0067, all -> 0x0060 }
            r1[r3] = r8     // Catch:{ Exception -> 0x0067, all -> 0x0060 }
        L_0x005c:
            r4.release()     // Catch:{ Exception -> 0x006a }
            goto L_0x006a
        L_0x0060:
            r8 = move-exception
            if (r4 == 0) goto L_0x0066
            r4.release()     // Catch:{ Exception -> 0x0066 }
        L_0x0066:
            throw r8
        L_0x0067:
            if (r4 == 0) goto L_0x006a
            goto L_0x005c
        L_0x006a:
            return r1
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.fixVideoWidthHeight(int, int):int[]");
    }

    /* access modifiers changed from: private */
    public VideoEditedInfo getCurrentVideoEditedInfo() {
        int i;
        long j;
        int i2 = -1;
        boolean z = false;
        ArrayList<VideoEditedInfo.MediaEntity> arrayList = null;
        if (!this.isCurrentVideo && hasAnimatedMediaEntities() && this.centerImage.getBitmapWidth() > 0) {
            float f = this.sendPhotoType == 1 ? 800.0f : 854.0f;
            VideoEditedInfo videoEditedInfo = new VideoEditedInfo();
            videoEditedInfo.startTime = 0;
            videoEditedInfo.start = (float) 0;
            videoEditedInfo.endTime = Math.min(3000, this.editState.averageDuration);
            while (true) {
                j = videoEditedInfo.endTime;
                if (j <= 0 || j >= 1000) {
                    videoEditedInfo.end = (float) j;
                    videoEditedInfo.rotationValue = 0;
                    videoEditedInfo.originalPath = this.currentImagePath;
                    videoEditedInfo.estimatedSize = (long) ((int) ((((float) j) / 1000.0f) * 115200.0f));
                    videoEditedInfo.estimatedDuration = j;
                    videoEditedInfo.framerate = 30;
                    videoEditedInfo.originalDuration = j;
                    EditState editState2 = this.editState;
                    videoEditedInfo.filterState = editState2.savedFilterState;
                    String str = editState2.croppedPaintPath;
                } else {
                    videoEditedInfo.endTime = j * 2;
                }
            }
            videoEditedInfo.end = (float) j;
            videoEditedInfo.rotationValue = 0;
            videoEditedInfo.originalPath = this.currentImagePath;
            videoEditedInfo.estimatedSize = (long) ((int) ((((float) j) / 1000.0f) * 115200.0f));
            videoEditedInfo.estimatedDuration = j;
            videoEditedInfo.framerate = 30;
            videoEditedInfo.originalDuration = j;
            EditState editState22 = this.editState;
            videoEditedInfo.filterState = editState22.savedFilterState;
            String str2 = editState22.croppedPaintPath;
            if (str2 != null) {
                videoEditedInfo.paintPath = str2;
                ArrayList<VideoEditedInfo.MediaEntity> arrayList2 = editState22.croppedMediaEntities;
                if (arrayList2 != null && !arrayList2.isEmpty()) {
                    arrayList = this.editState.croppedMediaEntities;
                }
                videoEditedInfo.mediaEntities = arrayList;
            } else {
                videoEditedInfo.paintPath = editState22.paintPath;
                videoEditedInfo.mediaEntities = editState22.mediaEntities;
            }
            videoEditedInfo.isPhoto = true;
            int bitmapWidth = this.centerImage.getBitmapWidth();
            int bitmapHeight = this.centerImage.getBitmapHeight();
            MediaController.CropState cropState = this.editState.cropState;
            if (cropState != null) {
                int i3 = cropState.transformRotation;
                if (i3 == 90 || i3 == 270) {
                    int i4 = bitmapHeight;
                    bitmapHeight = bitmapWidth;
                    bitmapWidth = i4;
                }
                bitmapWidth = (int) (((float) bitmapWidth) * cropState.cropPw);
                bitmapHeight = (int) (((float) bitmapHeight) * cropState.cropPh);
            }
            if (this.sendPhotoType == 1) {
                bitmapWidth = bitmapHeight;
            }
            float f2 = (float) bitmapWidth;
            float f3 = (float) bitmapHeight;
            float max = Math.max(f2 / f, f3 / f);
            if (max < 1.0f) {
                max = 1.0f;
            }
            int i5 = (int) (f2 / max);
            int i6 = (int) (f3 / max);
            if (i5 % 16 != 0) {
                i5 = Math.max(1, Math.round(((float) i5) / 16.0f)) * 16;
            }
            if (i6 % 16 != 0) {
                i6 = Math.max(1, Math.round(((float) i6) / 16.0f)) * 16;
            }
            videoEditedInfo.resultWidth = i5;
            videoEditedInfo.originalWidth = i5;
            videoEditedInfo.resultHeight = i6;
            videoEditedInfo.originalHeight = i6;
            videoEditedInfo.bitrate = -1;
            videoEditedInfo.muted = true;
            videoEditedInfo.avatarStartTime = 0;
            return videoEditedInfo;
        } else if (!this.isCurrentVideo || this.currentPlayingVideoFile == null || this.compressionsCount == 0) {
            return null;
        } else {
            VideoEditedInfo videoEditedInfo2 = new VideoEditedInfo();
            videoEditedInfo2.startTime = this.startTime;
            videoEditedInfo2.endTime = this.endTime;
            videoEditedInfo2.start = this.videoCutStart;
            videoEditedInfo2.end = this.videoCutEnd;
            videoEditedInfo2.rotationValue = this.rotationValue;
            videoEditedInfo2.originalWidth = this.originalWidth;
            videoEditedInfo2.originalHeight = this.originalHeight;
            videoEditedInfo2.bitrate = this.bitrate;
            videoEditedInfo2.originalPath = this.currentPathObject;
            long j2 = this.estimatedSize;
            if (j2 == 0) {
                j2 = 1;
            }
            videoEditedInfo2.estimatedSize = j2;
            videoEditedInfo2.estimatedDuration = this.estimatedDuration;
            videoEditedInfo2.framerate = this.videoFramerate;
            videoEditedInfo2.originalDuration = (long) (this.videoDuration * 1000.0f);
            EditState editState3 = this.editState;
            videoEditedInfo2.filterState = editState3.savedFilterState;
            String str3 = editState3.croppedPaintPath;
            if (str3 != null) {
                videoEditedInfo2.paintPath = str3;
                ArrayList<VideoEditedInfo.MediaEntity> arrayList3 = editState3.croppedMediaEntities;
                if (arrayList3 != null && !arrayList3.isEmpty()) {
                    arrayList = this.editState.croppedMediaEntities;
                }
                videoEditedInfo2.mediaEntities = arrayList;
            } else {
                videoEditedInfo2.paintPath = editState3.paintPath;
                ArrayList<VideoEditedInfo.MediaEntity> arrayList4 = editState3.mediaEntities;
                if (arrayList4 != null && !arrayList4.isEmpty()) {
                    arrayList = this.editState.mediaEntities;
                }
                videoEditedInfo2.mediaEntities = arrayList;
            }
            if (this.sendPhotoType == 1 || this.muteVideo || !(this.compressItem.getTag() == null || (videoEditedInfo2.resultWidth == this.originalWidth && videoEditedInfo2.resultHeight == this.originalHeight))) {
                if (this.muteVideo || this.sendPhotoType == 1) {
                    this.selectedCompression = 1;
                    updateWidthHeightBitrateForCompression();
                }
                videoEditedInfo2.resultWidth = this.resultWidth;
                videoEditedInfo2.resultHeight = this.resultHeight;
                if (!this.muteVideo && this.sendPhotoType != 1) {
                    i2 = this.bitrate;
                }
                videoEditedInfo2.bitrate = i2;
            } else {
                videoEditedInfo2.resultWidth = this.originalWidth;
                videoEditedInfo2.resultHeight = this.originalHeight;
                if (!this.muteVideo) {
                    i2 = this.originalBitrate;
                }
                videoEditedInfo2.bitrate = i2;
            }
            MediaController.CropState cropState2 = this.editState.cropState;
            videoEditedInfo2.cropState = cropState2;
            if (cropState2 != null) {
                videoEditedInfo2.rotationValue += cropState2.transformRotation;
                while (true) {
                    i = videoEditedInfo2.rotationValue;
                    if (i < 360) {
                        break;
                    }
                    videoEditedInfo2.rotationValue = i - 360;
                }
                if (i == 90 || i == 270) {
                    MediaController.CropState cropState3 = videoEditedInfo2.cropState;
                    cropState3.transformWidth = (int) (((float) videoEditedInfo2.resultWidth) * cropState3.cropPh);
                    cropState3.transformHeight = (int) (((float) videoEditedInfo2.resultHeight) * cropState3.cropPw);
                } else {
                    MediaController.CropState cropState4 = videoEditedInfo2.cropState;
                    cropState4.transformWidth = (int) (((float) videoEditedInfo2.resultWidth) * cropState4.cropPw);
                    cropState4.transformHeight = (int) (((float) videoEditedInfo2.resultHeight) * cropState4.cropPh);
                }
                if (this.sendPhotoType == 1) {
                    MediaController.CropState cropState5 = videoEditedInfo2.cropState;
                    if (cropState5.transformWidth > 800) {
                        cropState5.transformWidth = 800;
                    }
                    if (cropState5.transformHeight > 800) {
                        cropState5.transformHeight = 800;
                    }
                    int min = Math.min(cropState5.transformWidth, cropState5.transformHeight);
                    cropState5.transformHeight = min;
                    cropState5.transformWidth = min;
                }
                if (BuildVars.LOGS_ENABLED) {
                    FileLog.d("original transformed w = " + videoEditedInfo2.cropState.transformWidth + " h = " + videoEditedInfo2.cropState.transformHeight + " r = " + videoEditedInfo2.rotationValue);
                }
                MediaController.CropState cropState6 = videoEditedInfo2.cropState;
                int[] fixVideoWidthHeight = fixVideoWidthHeight(cropState6.transformWidth, cropState6.transformHeight);
                MediaController.CropState cropState7 = videoEditedInfo2.cropState;
                cropState7.transformWidth = fixVideoWidthHeight[0];
                cropState7.transformHeight = fixVideoWidthHeight[1];
                if (BuildVars.LOGS_ENABLED) {
                    FileLog.d("fixed transformed w = " + videoEditedInfo2.cropState.transformWidth + " h = " + videoEditedInfo2.cropState.transformHeight);
                }
            }
            int i7 = this.sendPhotoType;
            if (i7 == 1) {
                videoEditedInfo2.avatarStartTime = this.avatarStartTime;
                videoEditedInfo2.originalBitrate = this.originalBitrate;
            }
            if (this.muteVideo || i7 == 1) {
                z = true;
            }
            videoEditedInfo2.muted = z;
            return videoEditedInfo2;
        }
    }

    /* JADX WARNING: Code restructure failed: missing block: B:2:0x0004, code lost:
        r0 = r0.currentEncryptedChat;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private boolean supportsSendingNewEntities() {
        /*
            r2 = this;
            org.telegram.ui.ChatActivity r0 = r2.parentChatActivity
            if (r0 == 0) goto L_0x0014
            org.telegram.tgnet.TLRPC$EncryptedChat r0 = r0.currentEncryptedChat
            if (r0 == 0) goto L_0x0012
            int r0 = r0.layer
            int r0 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r0)
            r1 = 101(0x65, float:1.42E-43)
            if (r0 < r1) goto L_0x0014
        L_0x0012:
            r0 = 1
            goto L_0x0015
        L_0x0014:
            r0 = 0
        L_0x0015:
            return r0
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.supportsSendingNewEntities():boolean");
    }

    /* access modifiers changed from: private */
    public void closeCaptionEnter(boolean z) {
        int i = this.currentIndex;
        if (i >= 0 && i < this.imagesArrLocals.size() && this.captionEditText.getTag() != null) {
            Object obj = this.imagesArrLocals.get(this.currentIndex);
            if (z) {
                CharSequence fieldCharSequence = this.captionEditText.getFieldCharSequence();
                CharSequence[] charSequenceArr = {fieldCharSequence};
                if (this.hasCaptionForAllMedia && !TextUtils.equals(this.captionForAllMedia, fieldCharSequence) && this.placeProvider.getPhotoIndex(this.currentIndex) != 0 && this.placeProvider.getSelectedCount() > 0) {
                    this.hasCaptionForAllMedia = false;
                }
                ArrayList<TLRPC$MessageEntity> entities = MediaDataController.getInstance(this.currentAccount).getEntities(charSequenceArr, supportsSendingNewEntities());
                this.captionForAllMedia = fieldCharSequence;
                if (obj instanceof MediaController.PhotoEntry) {
                    MediaController.PhotoEntry photoEntry = (MediaController.PhotoEntry) obj;
                    photoEntry.caption = charSequenceArr[0];
                    photoEntry.entities = entities;
                } else if (obj instanceof MediaController.SearchImage) {
                    MediaController.SearchImage searchImage = (MediaController.SearchImage) obj;
                    searchImage.caption = charSequenceArr[0];
                    searchImage.entities = entities;
                }
                if (this.captionEditText.getFieldCharSequence().length() != 0 && !this.placeProvider.isPhotoChecked(this.currentIndex)) {
                    setPhotoChecked();
                }
                PhotoViewerProvider photoViewerProvider = this.placeProvider;
                if (photoViewerProvider != null) {
                    photoViewerProvider.onApplyCaption(fieldCharSequence);
                }
                setCurrentCaption((MessageObject) null, charSequenceArr[0], false);
            }
            this.captionEditText.setTag((Object) null);
            if (this.isCurrentVideo) {
                this.actionBar.setTitleAnimated(this.lastTitle, false, 220);
                this.actionBar.setSubtitle(this.muteVideo ? LocaleController.getString("SoundMuted", NUM) : this.currentSubtitle);
            }
            updateCaptionTextForCurrentPhoto(obj);
            if (this.captionEditText.isPopupShowing()) {
                this.captionEditText.hidePopup();
            }
            this.captionEditText.closeKeyboard();
            if (Build.VERSION.SDK_INT >= 19) {
                this.captionEditText.setImportantForAccessibility(4);
            }
        }
    }

    /* access modifiers changed from: private */
    public void updateVideoPlayerTime() {
        Arrays.fill(this.videoPlayerCurrentTime, 0);
        Arrays.fill(this.videoPlayerTotalTime, 0);
        VideoPlayer videoPlayer2 = this.videoPlayer;
        if (videoPlayer2 != null) {
            long max = Math.max(0, videoPlayer2.getCurrentPosition());
            if (this.shownControlsByEnd && !this.actionBarWasShownBeforeByEnd) {
                max = 0;
            }
            long max2 = Math.max(0, this.videoPlayer.getDuration());
            if (!this.inPreview && this.videoTimelineView.getVisibility() == 0) {
                max2 = (long) (((float) max2) * (this.videoTimelineView.getRightProgress() - this.videoTimelineView.getLeftProgress()));
                max = (long) (((float) max) - (this.videoTimelineView.getLeftProgress() * ((float) max2)));
                if (max > max2) {
                    max = max2;
                }
            }
            long j = max / 1000;
            long j2 = max2 / 1000;
            int[] iArr = this.videoPlayerCurrentTime;
            iArr[0] = (int) (j / 60);
            iArr[1] = (int) (j % 60);
            int[] iArr2 = this.videoPlayerTotalTime;
            iArr2[0] = (int) (j2 / 60);
            iArr2[1] = (int) (j2 % 60);
        }
        this.videoPlayerTime.setText(String.format(Locale.ROOT, "%02d:%02d / %02d:%02d", new Object[]{Integer.valueOf(this.videoPlayerCurrentTime[0]), Integer.valueOf(this.videoPlayerCurrentTime[1]), Integer.valueOf(this.videoPlayerTotalTime[0]), Integer.valueOf(this.videoPlayerTotalTime[1])}));
    }

    private void checkBufferedProgress(float f) {
        MessageObject messageObject;
        TLRPC$Document document;
        if (this.isStreaming && this.parentActivity != null && !this.streamingAlertShown && this.videoPlayer != null && (messageObject = this.currentMessageObject) != null && (document = messageObject.getDocument()) != null && this.currentMessageObject.getDuration() >= 20 && f < 0.9f) {
            long j = document.size;
            if ((((float) j) * f >= 5242880.0f || (f >= 0.5f && j >= 2097152)) && Math.abs(SystemClock.elapsedRealtime() - this.startedPlayTime) >= 2000) {
                if (this.videoPlayer.getDuration() == -9223372036854775807L) {
                    Toast.makeText(this.parentActivity, LocaleController.getString("VideoDoesNotSupportStreaming", NUM), 1).show();
                }
                this.streamingAlertShown = true;
            }
        }
    }

    public void updateColors() {
        String str;
        int themedColor = getThemedColor("dialogFloatingButton");
        ImageView imageView = this.pickerViewSendButton;
        if (imageView != null) {
            Drawable background = imageView.getBackground();
            Theme.setSelectorDrawableColor(background, themedColor, false);
            if (Build.VERSION.SDK_INT >= 21) {
                str = "dialogFloatingButtonPressed";
            } else {
                str = "dialogFloatingButton";
            }
            Theme.setSelectorDrawableColor(background, getThemedColor(str), true);
            this.pickerViewSendButton.setColorFilter(new PorterDuffColorFilter(getThemedColor("dialogFloatingIcon"), PorterDuff.Mode.MULTIPLY));
        }
        CheckBox checkBox = this.checkImageView;
        if (checkBox != null) {
            checkBox.setColor(getThemedColor("dialogFloatingButton"), -1);
        }
        PorterDuffColorFilter porterDuffColorFilter = new PorterDuffColorFilter(themedColor, PorterDuff.Mode.MULTIPLY);
        ImageView imageView2 = this.timeItem;
        if (!(imageView2 == null || imageView2.getColorFilter() == null)) {
            this.timeItem.setColorFilter(porterDuffColorFilter);
        }
        ImageView imageView3 = this.paintItem;
        if (!(imageView3 == null || imageView3.getColorFilter() == null)) {
            this.paintItem.setColorFilter(porterDuffColorFilter);
        }
        ImageView imageView4 = this.cropItem;
        if (!(imageView4 == null || imageView4.getColorFilter() == null)) {
            this.cropItem.setColorFilter(porterDuffColorFilter);
        }
        ImageView imageView5 = this.tuneItem;
        if (!(imageView5 == null || imageView5.getColorFilter() == null)) {
            this.tuneItem.setColorFilter(porterDuffColorFilter);
        }
        ImageView imageView6 = this.rotateItem;
        if (!(imageView6 == null || imageView6.getColorFilter() == null)) {
            this.rotateItem.setColorFilter(porterDuffColorFilter);
        }
        ImageView imageView7 = this.mirrorItem;
        if (!(imageView7 == null || imageView7.getColorFilter() == null)) {
            this.mirrorItem.setColorFilter(porterDuffColorFilter);
        }
        PickerBottomLayoutViewer pickerBottomLayoutViewer = this.editorDoneLayout;
        if (pickerBottomLayoutViewer != null) {
            pickerBottomLayoutViewer.doneButton.setTextColor(themedColor);
        }
        PickerBottomLayoutViewer pickerBottomLayoutViewer2 = this.qualityPicker;
        if (pickerBottomLayoutViewer2 != null) {
            pickerBottomLayoutViewer2.doneButton.setTextColor(themedColor);
        }
        PhotoPaintView photoPaintView2 = this.photoPaintView;
        if (photoPaintView2 != null) {
            photoPaintView2.updateColors();
        }
        PhotoFilterView photoFilterView2 = this.photoFilterView;
        if (photoFilterView2 != null) {
            photoFilterView2.updateColors();
        }
        PhotoViewerCaptionEnterView photoViewerCaptionEnterView = this.captionEditText;
        if (photoViewerCaptionEnterView != null) {
            photoViewerCaptionEnterView.updateColors();
        }
        VideoTimelinePlayView videoTimelinePlayView = this.videoTimelineView;
        if (videoTimelinePlayView != null) {
            videoTimelinePlayView.invalidate();
        }
        SelectedPhotosListView selectedPhotosListView2 = this.selectedPhotosListView;
        if (selectedPhotosListView2 != null) {
            int childCount = selectedPhotosListView2.getChildCount();
            for (int i = 0; i < childCount; i++) {
                View childAt = this.selectedPhotosListView.getChildAt(i);
                if (childAt instanceof PhotoPickerPhotoCell) {
                    ((PhotoPickerPhotoCell) childAt).updateColors();
                }
            }
        }
        StickersAlert stickersAlert = this.masksAlert;
        if (stickersAlert != null) {
            stickersAlert.updateColors(true);
        }
    }

    public void injectVideoPlayer(VideoPlayer videoPlayer2) {
        this.injectingVideoPlayer = videoPlayer2;
    }

    public void injectVideoPlayerSurface(SurfaceTexture surfaceTexture) {
        this.injectingVideoPlayerSurface = surfaceTexture;
    }

    public boolean isInjectingVideoPlayer() {
        return this.injectingVideoPlayer != null;
    }

    /* access modifiers changed from: private */
    public void scheduleActionBarHide() {
        scheduleActionBarHide(3000);
    }

    private void scheduleActionBarHide(int i) {
        if (!isAccessibilityEnabled()) {
            AndroidUtilities.cancelRunOnUIThread(this.hideActionBarRunnable);
            AndroidUtilities.runOnUIThread(this.hideActionBarRunnable, (long) i);
        }
    }

    private boolean isAccessibilityEnabled() {
        try {
            AccessibilityManager accessibilityManager = (AccessibilityManager) this.activityContext.getSystemService("accessibility");
            if (!accessibilityManager.isEnabled() || !accessibilityManager.isTouchExplorationEnabled()) {
                return false;
            }
            return true;
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            return false;
        }
    }

    /* access modifiers changed from: private */
    public void updatePlayerState(boolean z, int i) {
        MessageObject messageObject;
        if (this.videoPlayer != null) {
            float f = 0.0f;
            if (this.isStreaming) {
                if (i != 2 || !this.skipFirstBufferingProgress) {
                    boolean z2 = this.seekToProgressPending != 0.0f || i == 2;
                    if (z2) {
                        AndroidUtilities.cancelRunOnUIThread(this.hideActionBarRunnable);
                    } else {
                        scheduleActionBarHide();
                    }
                    toggleMiniProgress(z2, true);
                } else if (z) {
                    this.skipFirstBufferingProgress = false;
                }
            }
            AspectRatioFrameLayout aspectRatioFrameLayout2 = this.aspectRatioFrameLayout;
            int i2 = 4;
            if (aspectRatioFrameLayout2 != null) {
                aspectRatioFrameLayout2.setKeepScreenOn((!z || i == 4 || i == 1) ? false : true);
            }
            if (!z || i == 4 || i == 1) {
                try {
                    this.parentActivity.getWindow().clearFlags(128);
                    this.keepScreenOnFlagSet = false;
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                }
            } else {
                try {
                    this.parentActivity.getWindow().addFlags(128);
                    this.keepScreenOnFlagSet = true;
                } catch (Exception e2) {
                    FileLog.e((Throwable) e2);
                }
            }
            if (i == 3 || i == 1) {
                if (this.currentMessageObject != null) {
                    this.videoPreviewFrame.open(this.videoPlayer.getCurrentUri());
                }
                if (this.seekToProgressPending != 0.0f) {
                    this.videoPlayer.seekTo((long) ((int) (((float) this.videoPlayer.getDuration()) * this.seekToProgressPending)));
                    this.seekToProgressPending = 0.0f;
                    MessageObject messageObject2 = this.currentMessageObject;
                    if (messageObject2 != null && !FileLoader.getInstance(messageObject2.currentAccount).isLoadingVideoAny(this.currentMessageObject.getDocument())) {
                        this.skipFirstBufferingProgress = true;
                    }
                }
            }
            if (i == 3) {
                if (this.aspectRatioFrameLayout.getVisibility() != 0) {
                    this.aspectRatioFrameLayout.setVisibility(0);
                }
                if (!this.pipItem.isEnabled() && this.pipItem.getVisibility() == 0) {
                    this.pipAvailable = true;
                    this.pipItem.setEnabled(true);
                    this.pipItem.animate().alpha(1.0f).setDuration(175).withEndAction((Runnable) null).start();
                }
                this.playerWasReady = true;
                MessageObject messageObject3 = this.currentMessageObject;
                if (messageObject3 != null && messageObject3.isVideo()) {
                    AndroidUtilities.cancelRunOnUIThread(this.setLoadingRunnable);
                    FileLoader.getInstance(this.currentMessageObject.currentAccount).removeLoadingVideo(this.currentMessageObject.getDocument(), true, false);
                }
            } else if (i == 2 && z && (messageObject = this.currentMessageObject) != null && messageObject.isVideo()) {
                if (this.playerWasReady) {
                    this.setLoadingRunnable.run();
                } else {
                    AndroidUtilities.runOnUIThread(this.setLoadingRunnable, 1000);
                }
            }
            long j = 0;
            if (!this.videoPlayer.isPlaying() || i == 4) {
                if (this.isPlaying || i == 4) {
                    if (this.currentEditMode != 3) {
                        this.photoProgressViews[0].setIndexedAlpha(1, 1.0f, i == 4);
                        PhotoProgressView[] photoProgressViewArr = this.photoProgressViews;
                        photoProgressViewArr[0].setBackgroundState(3, false, photoProgressViewArr[0].animAlphas[1] > 0.0f);
                    }
                    this.isPlaying = false;
                    AndroidUtilities.cancelRunOnUIThread(this.updateProgressRunnable);
                    if (i == 4) {
                        if (!this.isCurrentVideo) {
                            this.videoPlayerSeekbar.setProgress(0.0f);
                            this.videoPlayerSeekbarView.invalidate();
                            if (this.inPreview || this.videoTimelineView.getVisibility() != 0) {
                                this.videoPlayer.seekTo(0);
                            } else {
                                this.videoPlayer.seekTo((long) ((int) (this.videoTimelineView.getLeftProgress() * ((float) this.videoPlayer.getDuration()))));
                            }
                            this.manuallyPaused = false;
                            this.videoPlayer.pause();
                            if (!this.isActionBarVisible) {
                                toggleActionBar(true, true);
                            }
                        } else if (!this.videoTimelineView.isDragging()) {
                            VideoTimelinePlayView videoTimelinePlayView = this.videoTimelineView;
                            videoTimelinePlayView.setProgress(videoTimelinePlayView.getLeftProgress());
                            if (this.inPreview || (this.currentEditMode == 0 && this.videoTimelineView.getVisibility() != 0)) {
                                this.videoPlayer.seekTo(0);
                            } else {
                                this.videoPlayer.seekTo((long) ((int) (this.videoTimelineView.getLeftProgress() * ((float) this.videoPlayer.getDuration()))));
                            }
                            this.manuallyPaused = false;
                            cancelVideoPlayRunnable();
                            if (this.sendPhotoType == 1 || this.currentEditMode != 0 || this.switchingToMode > 0) {
                                this.videoPlayer.play();
                            } else {
                                this.videoPlayer.pause();
                            }
                            this.containerView.invalidate();
                        }
                        PipVideoOverlay.onVideoCompleted();
                    }
                }
            } else if (!this.isPlaying) {
                this.isPlaying = true;
                PhotoProgressView photoProgressView = this.photoProgressViews[0];
                if (this.isCurrentVideo) {
                    i2 = -1;
                }
                photoProgressView.setBackgroundState(i2, false, true);
                PhotoProgressView photoProgressView2 = this.photoProgressViews[0];
                if (this.isCurrentVideo || ((isAccessibilityEnabled() && !this.playerWasPlaying) || ((!this.playerAutoStarted || this.playerWasPlaying) && this.isActionBarVisible))) {
                    f = 1.0f;
                }
                photoProgressView2.setIndexedAlpha(1, f, false);
                this.playerWasPlaying = true;
                AndroidUtilities.runOnUIThread(this.updateProgressRunnable);
            }
            PipVideoOverlay.updatePlayButton();
            VideoPlayerSeekBar videoPlayerSeekBar = this.videoPlayerSeekbar;
            MessageObject messageObject4 = this.currentMessageObject;
            VideoPlayer videoPlayer2 = this.videoPlayer;
            if (videoPlayer2 != null) {
                j = videoPlayer2.getDuration();
            }
            videoPlayerSeekBar.updateTimestamps(messageObject4, j);
            updateVideoPlayerTime();
        }
    }

    private void preparePlayer(Uri uri, boolean z, boolean z2) {
        preparePlayer(uri, z, z2, (MediaController.SavedFilterState) null);
    }

    private void preparePlayer(Uri uri, boolean z, boolean z2, MediaController.SavedFilterState savedFilterState) {
        boolean z3;
        Uri uri2 = uri;
        boolean z4 = z2;
        if (!z4) {
            this.currentPlayingVideoFile = uri2;
        }
        if (this.parentActivity != null) {
            this.streamingAlertShown = false;
            this.startedPlayTime = SystemClock.elapsedRealtime();
            this.currentVideoFinishedLoading = false;
            this.lastBufferedPositionCheck = 0;
            this.firstAnimationDelay = true;
            this.inPreview = z4;
            releasePlayer(false);
            SavedVideoPosition savedVideoPosition = null;
            if (this.imagesArrLocals.isEmpty()) {
                createVideoTextureView((MediaController.SavedFilterState) null);
            }
            if (Build.VERSION.SDK_INT >= 21 && this.textureImageView == null) {
                ImageView imageView = new ImageView(this.parentActivity);
                this.textureImageView = imageView;
                imageView.setBackgroundColor(-65536);
                this.textureImageView.setPivotX(0.0f);
                this.textureImageView.setPivotY(0.0f);
                this.textureImageView.setVisibility(4);
                this.containerView.addView(this.textureImageView);
            }
            checkFullscreenButton();
            if (this.orientationEventListener == null) {
                AnonymousClass50 r7 = new OrientationEventListener(ApplicationLoader.applicationContext) {
                    public void onOrientationChanged(int i) {
                        if (PhotoViewer.this.orientationEventListener != null && PhotoViewer.this.aspectRatioFrameLayout != null && PhotoViewer.this.aspectRatioFrameLayout.getVisibility() == 0 && PhotoViewer.this.parentActivity != null && PhotoViewer.this.fullscreenedByButton != 0) {
                            if (PhotoViewer.this.fullscreenedByButton == 1) {
                                if (i >= 240 && i <= 300) {
                                    boolean unused = PhotoViewer.this.wasRotated = true;
                                } else if (PhotoViewer.this.wasRotated && i > 0) {
                                    if (i >= 330 || i <= 30) {
                                        PhotoViewer.this.parentActivity.setRequestedOrientation(PhotoViewer.this.prevOrientation);
                                        int unused2 = PhotoViewer.this.fullscreenedByButton = 0;
                                        boolean unused3 = PhotoViewer.this.wasRotated = false;
                                    }
                                }
                            } else if (i > 0 && (i >= 330 || i <= 30)) {
                                boolean unused4 = PhotoViewer.this.wasRotated = true;
                            } else if (PhotoViewer.this.wasRotated && i >= 240 && i <= 300) {
                                PhotoViewer.this.parentActivity.setRequestedOrientation(PhotoViewer.this.prevOrientation);
                                int unused5 = PhotoViewer.this.fullscreenedByButton = 0;
                                boolean unused6 = PhotoViewer.this.wasRotated = false;
                            }
                        }
                    }
                };
                this.orientationEventListener = r7;
                if (r7.canDetectOrientation()) {
                    this.orientationEventListener.enable();
                } else {
                    this.orientationEventListener.disable();
                    this.orientationEventListener = null;
                }
            }
            this.textureUploaded = false;
            this.videoSizeSet = false;
            this.videoCrossfadeStarted = false;
            this.playerWasReady = false;
            this.playerWasPlaying = false;
            this.captureFrameReadyAtTime = -1;
            this.captureFrameAtTime = -1;
            this.needCaptureFrameReadyAtTime = -1;
            if (this.videoPlayer == null) {
                VideoPlayer videoPlayer2 = this.injectingVideoPlayer;
                if (videoPlayer2 != null) {
                    this.videoPlayer = videoPlayer2;
                    this.injectingVideoPlayer = null;
                    this.playerInjected = true;
                    updatePlayerState(videoPlayer2.getPlayWhenReady(), this.videoPlayer.getPlaybackState());
                    z3 = false;
                } else {
                    this.videoPlayer = new VideoPlayer() {
                        public void play() {
                            super.play();
                            PhotoViewer.this.playOrStopAnimatedStickers(true);
                        }

                        public void pause() {
                            super.pause();
                            if (PhotoViewer.this.currentEditMode == 0) {
                                PhotoViewer.this.playOrStopAnimatedStickers(false);
                            }
                        }

                        public void seekTo(long j) {
                            super.seekTo(j);
                            if (PhotoViewer.this.isCurrentVideo) {
                                PhotoViewer.this.seekAnimatedStickersTo(j);
                            }
                        }
                    };
                    z3 = true;
                }
                TextureView textureView = this.videoTextureView;
                if (textureView != null) {
                    this.videoPlayer.setTextureView(textureView);
                }
                FirstFrameView firstFrameView2 = this.firstFrameView;
                if (firstFrameView2 != null) {
                    firstFrameView2.clear();
                }
                this.videoPlayer.setDelegate(new VideoPlayer.VideoPlayerDelegate() {
                    public /* synthetic */ void onSeekFinished(AnalyticsListener.EventTime eventTime) {
                        VideoPlayer.VideoPlayerDelegate.CC.$default$onSeekFinished(this, eventTime);
                    }

                    public /* synthetic */ void onSeekStarted(AnalyticsListener.EventTime eventTime) {
                        VideoPlayer.VideoPlayerDelegate.CC.$default$onSeekStarted(this, eventTime);
                    }

                    public void onStateChanged(boolean z, int i) {
                        PhotoViewer.this.updatePlayerState(z, i);
                    }

                    public void onError(VideoPlayer videoPlayer, Exception exc) {
                        if (PhotoViewer.this.videoPlayer == videoPlayer) {
                            FileLog.e((Throwable) exc);
                            if (PhotoViewer.this.menuItem.isSubItemVisible(11)) {
                                AlertDialog.Builder builder = new AlertDialog.Builder(PhotoViewer.this.parentActivity, PhotoViewer.this.resourcesProvider);
                                builder.setTitle(LocaleController.getString("AppName", NUM));
                                builder.setMessage(LocaleController.getString("CantPlayVideo", NUM));
                                builder.setPositiveButton(LocaleController.getString("Open", NUM), new PhotoViewer$52$$ExternalSyntheticLambda1(this));
                                builder.setNegativeButton(LocaleController.getString("Cancel", NUM), (DialogInterface.OnClickListener) null);
                                PhotoViewer.this.showAlertDialog(builder);
                            }
                        }
                    }

                    /* access modifiers changed from: private */
                    public /* synthetic */ void lambda$onError$0(DialogInterface dialogInterface, int i) {
                        try {
                            AndroidUtilities.openForView(PhotoViewer.this.currentMessageObject, PhotoViewer.this.parentActivity, PhotoViewer.this.resourcesProvider);
                            PhotoViewer.this.closePhoto(false, false);
                        } catch (Exception e) {
                            FileLog.e((Throwable) e);
                        }
                    }

                    public void onVideoSizeChanged(int i, int i2, int i3, float f) {
                        if (PhotoViewer.this.aspectRatioFrameLayout != null) {
                            if (i3 == 90 || i3 == 270) {
                                int i4 = i2;
                                i2 = i;
                                i = i4;
                            }
                            float f2 = ((float) i) * f;
                            int i5 = (int) f2;
                            int unused = PhotoViewer.this.videoWidth = i5;
                            float f3 = (float) i2;
                            int unused2 = PhotoViewer.this.videoHeight = (int) (f * f3);
                            PhotoViewer.this.aspectRatioFrameLayout.setAspectRatio(i2 == 0 ? 1.0f : f2 / f3, i3);
                            if (PhotoViewer.this.videoTextureView instanceof VideoEditTextureView) {
                                ((VideoEditTextureView) PhotoViewer.this.videoTextureView).setVideoSize(i5, i2);
                                if (PhotoViewer.this.sendPhotoType == 1) {
                                    PhotoViewer.this.setCropBitmap();
                                }
                            }
                            boolean unused3 = PhotoViewer.this.videoSizeSet = true;
                        }
                    }

                    public void onRenderedFirstFrame() {
                        if (!PhotoViewer.this.textureUploaded) {
                            boolean unused = PhotoViewer.this.textureUploaded = true;
                            PhotoViewer.this.containerView.invalidate();
                        }
                        if (PhotoViewer.this.firstFrameView == null) {
                            return;
                        }
                        if (PhotoViewer.this.videoPlayer == null || !PhotoViewer.this.videoPlayer.isLooping()) {
                            AndroidUtilities.runOnUIThread(new PhotoViewer$52$$ExternalSyntheticLambda3(this), 64);
                        }
                    }

                    /* access modifiers changed from: private */
                    public /* synthetic */ void lambda$onRenderedFirstFrame$1() {
                        PhotoViewer.this.firstFrameView.updateAlpha();
                    }

                    public void onRenderedFirstFrame(AnalyticsListener.EventTime eventTime) {
                        if (eventTime.eventPlaybackPositionMs == PhotoViewer.this.needCaptureFrameReadyAtTime) {
                            long unused = PhotoViewer.this.captureFrameReadyAtTime = eventTime.eventPlaybackPositionMs;
                            long unused2 = PhotoViewer.this.needCaptureFrameReadyAtTime = -1;
                            PhotoViewer.this.captureCurrentFrame();
                        }
                        if (PhotoViewer.this.firstFrameView == null) {
                            return;
                        }
                        if (PhotoViewer.this.videoPlayer == null || !PhotoViewer.this.videoPlayer.isLooping()) {
                            AndroidUtilities.runOnUIThread(new PhotoViewer$52$$ExternalSyntheticLambda2(this), 64);
                        }
                    }

                    /* access modifiers changed from: private */
                    public /* synthetic */ void lambda$onRenderedFirstFrame$2() {
                        PhotoViewer.this.firstFrameView.updateAlpha();
                    }

                    public boolean onSurfaceDestroyed(SurfaceTexture surfaceTexture) {
                        if (PhotoViewer.this.changingTextureView) {
                            boolean unused = PhotoViewer.this.changingTextureView = false;
                            if (PhotoViewer.this.isInline) {
                                int unused2 = PhotoViewer.this.waitingForFirstTextureUpload = 1;
                                PhotoViewer.this.changedTextureView.setSurfaceTexture(surfaceTexture);
                                PhotoViewer.this.changedTextureView.setSurfaceTextureListener(PhotoViewer.this.surfaceTextureListener);
                                PhotoViewer.this.changedTextureView.setVisibility(0);
                                return true;
                            }
                        }
                        return false;
                    }

                    public void onSurfaceTextureUpdated(SurfaceTexture surfaceTexture) {
                        if (PhotoViewer.this.waitingForFirstTextureUpload == 2) {
                            if (PhotoViewer.this.textureImageView != null) {
                                PhotoViewer.this.textureImageView.setVisibility(4);
                                PhotoViewer.this.textureImageView.setImageDrawable((Drawable) null);
                                if (PhotoViewer.this.currentBitmap != null) {
                                    PhotoViewer.this.currentBitmap.recycle();
                                    Bitmap unused = PhotoViewer.this.currentBitmap = null;
                                }
                            }
                            boolean unused2 = PhotoViewer.this.switchingInlineMode = false;
                            if (Build.VERSION.SDK_INT >= 21) {
                                PhotoViewer.this.aspectRatioFrameLayout.getLocationInWindow(PhotoViewer.this.pipPosition);
                                int[] access$22900 = PhotoViewer.this.pipPosition;
                                access$22900[1] = (int) (((float) access$22900[1]) - PhotoViewer.this.containerView.getTranslationY());
                                if (PhotoViewer.this.textureImageView != null) {
                                    PhotoViewer.this.textureImageView.setTranslationX(PhotoViewer.this.textureImageView.getTranslationX() + ((float) PhotoViewer.this.getLeftInset()));
                                }
                                if (PhotoViewer.this.videoTextureView != null) {
                                    PhotoViewer.this.videoTextureView.setTranslationX((PhotoViewer.this.videoTextureView.getTranslationX() + ((float) PhotoViewer.this.getLeftInset())) - PhotoViewer.this.aspectRatioFrameLayout.getX());
                                }
                                if (PhotoViewer.this.firstFrameView != null) {
                                    PhotoViewer.this.firstFrameView.setTranslationX(PhotoViewer.this.videoTextureView.getTranslationX());
                                }
                                AnimatorSet animatorSet = new AnimatorSet();
                                ArrayList arrayList = new ArrayList();
                                arrayList.add(ObjectAnimator.ofFloat(PhotoViewer.this.textureImageView, View.SCALE_X, new float[]{1.0f}));
                                arrayList.add(ObjectAnimator.ofFloat(PhotoViewer.this.textureImageView, View.SCALE_Y, new float[]{1.0f}));
                                arrayList.add(ObjectAnimator.ofFloat(PhotoViewer.this.textureImageView, View.TRANSLATION_X, new float[]{(float) PhotoViewer.this.pipPosition[0]}));
                                arrayList.add(ObjectAnimator.ofFloat(PhotoViewer.this.textureImageView, View.TRANSLATION_Y, new float[]{(float) PhotoViewer.this.pipPosition[1]}));
                                arrayList.add(ObjectAnimator.ofFloat(PhotoViewer.this.videoTextureView, View.SCALE_X, new float[]{1.0f}));
                                arrayList.add(ObjectAnimator.ofFloat(PhotoViewer.this.videoTextureView, View.SCALE_Y, new float[]{1.0f}));
                                arrayList.add(ObjectAnimator.ofFloat(PhotoViewer.this.videoTextureView, View.TRANSLATION_X, new float[]{((float) PhotoViewer.this.pipPosition[0]) - PhotoViewer.this.aspectRatioFrameLayout.getX()}));
                                arrayList.add(ObjectAnimator.ofFloat(PhotoViewer.this.videoTextureView, View.TRANSLATION_Y, new float[]{((float) PhotoViewer.this.pipPosition[1]) - PhotoViewer.this.aspectRatioFrameLayout.getY()}));
                                arrayList.add(ObjectAnimator.ofInt(PhotoViewer.this.backgroundDrawable, AnimationProperties.COLOR_DRAWABLE_ALPHA, new int[]{255}));
                                if (PhotoViewer.this.firstFrameView != null) {
                                    arrayList.add(ObjectAnimator.ofFloat(PhotoViewer.this.firstFrameView, View.SCALE_X, new float[]{1.0f}));
                                    arrayList.add(ObjectAnimator.ofFloat(PhotoViewer.this.firstFrameView, View.SCALE_Y, new float[]{1.0f}));
                                    arrayList.add(ObjectAnimator.ofFloat(PhotoViewer.this.firstFrameView, View.TRANSLATION_X, new float[]{((float) PhotoViewer.this.pipPosition[0]) - PhotoViewer.this.aspectRatioFrameLayout.getX()}));
                                    arrayList.add(ObjectAnimator.ofFloat(PhotoViewer.this.firstFrameView, View.TRANSLATION_Y, new float[]{((float) PhotoViewer.this.pipPosition[1]) - PhotoViewer.this.aspectRatioFrameLayout.getY()}));
                                }
                                float f = PipVideoOverlay.getPipRect(false, PhotoViewer.this.aspectRatioFrameLayout.getAspectRatio()).width;
                                PhotoViewer.this.videoTextureView.getWidth();
                                ValueAnimator ofFloat = ValueAnimator.ofFloat(new float[]{0.0f, 1.0f});
                                ofFloat.addUpdateListener(new PhotoViewer$52$$ExternalSyntheticLambda0(this));
                                arrayList.add(ofFloat);
                                animatorSet.playTogether(arrayList);
                                DecelerateInterpolator decelerateInterpolator = new DecelerateInterpolator();
                                animatorSet.setInterpolator(decelerateInterpolator);
                                animatorSet.setDuration(250);
                                animatorSet.addListener(new AnimatorListenerAdapter() {
                                    public void onAnimationEnd(Animator animator) {
                                        boolean unused = PhotoViewer.this.pipAnimationInProgress = false;
                                        if (PhotoViewer.this.videoTextureView != null) {
                                            PhotoViewer.this.videoTextureView.setOutlineProvider((ViewOutlineProvider) null);
                                        }
                                        if (PhotoViewer.this.textureImageView != null) {
                                            PhotoViewer.this.textureImageView.setOutlineProvider((ViewOutlineProvider) null);
                                        }
                                        if (PhotoViewer.this.firstFrameView != null) {
                                            PhotoViewer.this.firstFrameView.setOutlineProvider((ViewOutlineProvider) null);
                                        }
                                    }
                                });
                                animatorSet.start();
                                PhotoViewer.this.toggleActionBar(true, true, new ActionBarToggleParams().enableStatusBarAnimation(false).enableTranslationAnimation(false).animationDuration(250).animationInterpolator(decelerateInterpolator));
                            } else {
                                PhotoViewer.this.toggleActionBar(true, false);
                            }
                            int unused3 = PhotoViewer.this.waitingForFirstTextureUpload = 0;
                        }
                        if (PhotoViewer.this.firstFrameView != null) {
                            PhotoViewer.this.firstFrameView.checkFromPlayer(PhotoViewer.this.videoPlayer);
                        }
                    }

                    /* access modifiers changed from: private */
                    public /* synthetic */ void lambda$onSurfaceTextureUpdated$3(ValueAnimator valueAnimator) {
                        float unused = PhotoViewer.this.inlineOutAnimationProgress = ((Float) valueAnimator.getAnimatedValue()).floatValue();
                        if (PhotoViewer.this.videoTextureView != null) {
                            PhotoViewer.this.videoTextureView.invalidateOutline();
                        }
                        if (PhotoViewer.this.textureImageView != null) {
                            PhotoViewer.this.textureImageView.invalidateOutline();
                        }
                        if (PhotoViewer.this.firstFrameView != null) {
                            PhotoViewer.this.firstFrameView.invalidateOutline();
                        }
                    }
                });
            } else {
                z3 = false;
            }
            if (!this.imagesArrLocals.isEmpty()) {
                createVideoTextureView(savedFilterState);
            }
            TextureView textureView2 = this.videoTextureView;
            this.videoCrossfadeAlpha = 0.0f;
            textureView2.setAlpha(0.0f);
            PaintingOverlay paintingOverlay2 = this.paintingOverlay;
            if (paintingOverlay2 != null) {
                paintingOverlay2.setAlpha(this.videoCrossfadeAlpha);
            }
            this.shouldSavePositionForCurrentVideo = null;
            this.shouldSavePositionForCurrentVideoShortTerm = null;
            this.lastSaveTime = 0;
            if (z3) {
                this.seekToProgressPending = this.seekToProgressPending2;
                this.videoPlayerSeekbar.setProgress(0.0f);
                this.videoTimelineView.setProgress(0.0f);
                this.videoPlayerSeekbar.setBufferedProgress(0.0f);
                MessageObject messageObject = this.currentMessageObject;
                if (messageObject != null) {
                    int duration = messageObject.getDuration();
                    String fileName = this.currentMessageObject.getFileName();
                    if (!TextUtils.isEmpty(fileName)) {
                        if (duration >= 600) {
                            if (this.currentMessageObject.forceSeekTo < 0.0f) {
                                float f = ApplicationLoader.applicationContext.getSharedPreferences("media_saved_pos", 0).getFloat(fileName, -1.0f);
                                if (f > 0.0f && f < 0.999f) {
                                    this.currentMessageObject.forceSeekTo = f;
                                    this.videoPlayerSeekbar.setProgress(f);
                                }
                            }
                            this.shouldSavePositionForCurrentVideo = fileName;
                        } else if (duration >= 10) {
                            for (int size = this.savedVideoPositions.size() - 1; size >= 0; size--) {
                                SavedVideoPosition valueAt = this.savedVideoPositions.valueAt(size);
                                if (valueAt.timestamp < SystemClock.elapsedRealtime() - 5000) {
                                    this.savedVideoPositions.removeAt(size);
                                } else if (savedVideoPosition == null && this.savedVideoPositions.keyAt(size).equals(fileName)) {
                                    savedVideoPosition = valueAt;
                                }
                            }
                            MessageObject messageObject2 = this.currentMessageObject;
                            if (messageObject2.forceSeekTo < 0.0f && savedVideoPosition != null) {
                                float f2 = savedVideoPosition.position;
                                if (f2 > 0.0f && f2 < 0.999f) {
                                    messageObject2.forceSeekTo = f2;
                                    this.videoPlayerSeekbar.setProgress(f2);
                                }
                            }
                            this.shouldSavePositionForCurrentVideoShortTerm = fileName;
                        }
                    }
                }
                this.videoPlayer.preparePlayer(uri2, "other");
                this.videoPlayer.setPlayWhenReady(z);
            }
            MessageObject messageObject3 = this.currentMessageObject;
            boolean z5 = messageObject3 != null && messageObject3.getDuration() <= 30;
            this.playerLooping = z5;
            this.videoPlayerControlFrameLayout.setSeekBarTransitionEnabled(z5);
            this.videoPlayer.setLooping(this.playerLooping);
            MessageObject messageObject4 = this.currentMessageObject;
            if (messageObject4 != null) {
                float f3 = messageObject4.forceSeekTo;
                if (f3 >= 0.0f) {
                    this.seekToProgressPending = f3;
                    messageObject4.forceSeekTo = -1.0f;
                }
            }
            TLRPC$BotInlineResult tLRPC$BotInlineResult = this.currentBotInlineResult;
            if (tLRPC$BotInlineResult == null || (!tLRPC$BotInlineResult.type.equals("video") && !MessageObject.isVideoDocument(this.currentBotInlineResult.document))) {
                this.bottomLayout.setPadding(0, 0, 0, 0);
            } else {
                this.bottomLayout.setVisibility(0);
                this.bottomLayout.setPadding(0, 0, AndroidUtilities.dp(84.0f), 0);
                this.pickerView.setVisibility(8);
            }
            if (this.pageBlocksAdapter != null) {
                this.bottomLayout.setVisibility(0);
            }
            setVideoPlayerControlVisible(!this.isCurrentVideo, true);
            if (!this.isCurrentVideo) {
                scheduleActionBarHide(this.playerAutoStarted ? 3000 : 1000);
            }
            if (this.currentMessageObject != null) {
                this.videoPlayer.setPlaybackSpeed(this.currentVideoSpeed);
            }
            this.inPreview = z4;
        }
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:19:0x004d, code lost:
        r7 = r13.videoTextureView;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void checkFullscreenButton() {
        /*
            r13 = this;
            java.util.ArrayList<org.telegram.messenger.MessageObject> r0 = r13.imagesArr
            boolean r0 = r0.isEmpty()
            r1 = 3
            r2 = 4
            r3 = 0
            if (r0 == 0) goto L_0x0018
        L_0x000b:
            if (r3 >= r1) goto L_0x0017
            android.widget.ImageView[] r0 = r13.fullscreenButton
            r0 = r0[r3]
            r0.setVisibility(r2)
            int r3 = r3 + 1
            goto L_0x000b
        L_0x0017:
            return
        L_0x0018:
            r0 = 0
        L_0x0019:
            if (r0 >= r1) goto L_0x012f
            int r4 = r13.currentIndex
            r5 = 2
            r6 = 1
            if (r0 != r6) goto L_0x0024
            int r4 = r4 + 1
            goto L_0x0028
        L_0x0024:
            if (r0 != r5) goto L_0x0028
            int r4 = r4 + -1
        L_0x0028:
            if (r4 < 0) goto L_0x0124
            java.util.ArrayList<org.telegram.messenger.MessageObject> r7 = r13.imagesArr
            int r7 = r7.size()
            if (r4 < r7) goto L_0x0034
            goto L_0x0124
        L_0x0034:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r7 = r13.imagesArr
            java.lang.Object r4 = r7.get(r4)
            org.telegram.messenger.MessageObject r4 = (org.telegram.messenger.MessageObject) r4
            boolean r7 = r4.isVideo()
            if (r7 != 0) goto L_0x004b
            android.widget.ImageView[] r4 = r13.fullscreenButton
            r4 = r4[r0]
            r4.setVisibility(r2)
            goto L_0x012b
        L_0x004b:
            if (r0 != 0) goto L_0x0056
            android.view.TextureView r7 = r13.videoTextureView
            if (r7 == 0) goto L_0x0056
            int r7 = r7.getMeasuredWidth()
            goto L_0x0057
        L_0x0056:
            r7 = 0
        L_0x0057:
            if (r0 != 0) goto L_0x0062
            android.view.TextureView r8 = r13.videoTextureView
            if (r8 == 0) goto L_0x0062
            int r8 = r8.getMeasuredHeight()
            goto L_0x0063
        L_0x0062:
            r8 = 0
        L_0x0063:
            org.telegram.tgnet.TLRPC$Document r4 = r4.getDocument()
            java.util.ArrayList<org.telegram.tgnet.TLRPC$DocumentAttribute> r9 = r4.attributes
            int r9 = r9.size()
            r10 = 0
        L_0x006e:
            if (r10 >= r9) goto L_0x0084
            java.util.ArrayList<org.telegram.tgnet.TLRPC$DocumentAttribute> r11 = r4.attributes
            java.lang.Object r11 = r11.get(r10)
            org.telegram.tgnet.TLRPC$DocumentAttribute r11 = (org.telegram.tgnet.TLRPC$DocumentAttribute) r11
            boolean r12 = r11 instanceof org.telegram.tgnet.TLRPC$TL_documentAttributeVideo
            if (r12 == 0) goto L_0x0081
            int r7 = r11.w
            int r8 = r11.h
            goto L_0x0084
        L_0x0081:
            int r10 = r10 + 1
            goto L_0x006e
        L_0x0084:
            android.graphics.Point r4 = org.telegram.messenger.AndroidUtilities.displaySize
            int r9 = r4.y
            int r4 = r4.x
            r10 = 1111490560(0x42400000, float:48.0)
            if (r9 <= r4) goto L_0x00cd
            android.view.TextureView r4 = r13.videoTextureView
            boolean r4 = r4 instanceof org.telegram.ui.Components.VideoEditTextureView
            if (r4 != 0) goto L_0x00cd
            if (r7 <= r8) goto L_0x00cd
            android.widget.ImageView[] r4 = r13.fullscreenButton
            r4 = r4[r0]
            int r4 = r4.getVisibility()
            if (r4 == 0) goto L_0x00a7
            android.widget.ImageView[] r4 = r13.fullscreenButton
            r4 = r4[r0]
            r4.setVisibility(r3)
        L_0x00a7:
            float r4 = (float) r7
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r7 = r13.containerView
            int r7 = r7.getMeasuredWidth()
            float r7 = (float) r7
            float r4 = r4 / r7
            float r7 = (float) r8
            float r7 = r7 / r4
            int r4 = (int) r7
            android.widget.ImageView[] r7 = r13.fullscreenButton
            r7 = r7[r0]
            android.view.ViewGroup$LayoutParams r7 = r7.getLayoutParams()
            android.widget.FrameLayout$LayoutParams r7 = (android.widget.FrameLayout.LayoutParams) r7
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r8 = r13.containerView
            int r8 = r8.getMeasuredHeight()
            int r8 = r8 + r4
            int r8 = r8 / r5
            int r4 = org.telegram.messenger.AndroidUtilities.dp(r10)
            int r8 = r8 - r4
            r7.topMargin = r8
            goto L_0x00de
        L_0x00cd:
            android.widget.ImageView[] r4 = r13.fullscreenButton
            r4 = r4[r0]
            int r4 = r4.getVisibility()
            if (r4 == r2) goto L_0x00de
            android.widget.ImageView[] r4 = r13.fullscreenButton
            r4 = r4[r0]
            r4.setVisibility(r2)
        L_0x00de:
            android.animation.AnimatorSet r4 = r13.imageMoveAnimation
            if (r4 == 0) goto L_0x00ed
            float r4 = r13.translationX
            float r7 = r13.animateToX
            float r7 = r7 - r4
            float r8 = r13.animationValue
            float r7 = r7 * r8
            float r4 = r4 + r7
            goto L_0x00ef
        L_0x00ed:
            float r4 = r13.translationX
        L_0x00ef:
            r7 = 0
            if (r0 != r6) goto L_0x00f3
            goto L_0x0110
        L_0x00f3:
            if (r0 != r5) goto L_0x0108
            android.graphics.Point r5 = org.telegram.messenger.AndroidUtilities.displaySize
            int r5 = r5.x
            int r5 = -r5
            r6 = 1097859072(0x41700000, float:15.0)
            int r6 = org.telegram.messenger.AndroidUtilities.dp(r6)
            int r5 = r5 - r6
            float r5 = (float) r5
            float r6 = r13.maxX
            float r4 = r4 - r6
            float r7 = r5 + r4
            goto L_0x0110
        L_0x0108:
            float r5 = r13.minX
            int r6 = (r4 > r5 ? 1 : (r4 == r5 ? 0 : -1))
            if (r6 >= 0) goto L_0x0110
            float r4 = r4 - r5
            r7 = r4
        L_0x0110:
            android.widget.ImageView[] r4 = r13.fullscreenButton
            r4 = r4[r0]
            android.graphics.Point r5 = org.telegram.messenger.AndroidUtilities.displaySize
            int r5 = r5.x
            float r5 = (float) r5
            float r7 = r7 + r5
            int r5 = org.telegram.messenger.AndroidUtilities.dp(r10)
            float r5 = (float) r5
            float r7 = r7 - r5
            r4.setTranslationX(r7)
            goto L_0x012b
        L_0x0124:
            android.widget.ImageView[] r4 = r13.fullscreenButton
            r4 = r4[r0]
            r4.setVisibility(r2)
        L_0x012b:
            int r0 = r0 + 1
            goto L_0x0019
        L_0x012f:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.checkFullscreenButton():void");
    }

    private void createVideoTextureView(MediaController.SavedFilterState savedFilterState) {
        if (this.videoTextureView == null) {
            AnonymousClass53 r0 = new AspectRatioFrameLayout(this.parentActivity) {
                /* access modifiers changed from: protected */
                public void onMeasure(int i, int i2) {
                    super.onMeasure(i, i2);
                    if (PhotoViewer.this.textureImageView != null) {
                        ViewGroup.LayoutParams layoutParams = PhotoViewer.this.textureImageView.getLayoutParams();
                        layoutParams.width = getMeasuredWidth();
                        layoutParams.height = getMeasuredHeight();
                    }
                    if (PhotoViewer.this.videoTextureView instanceof VideoEditTextureView) {
                        PhotoViewer.this.videoTextureView.setPivotX((float) (PhotoViewer.this.videoTextureView.getMeasuredWidth() / 2));
                        PhotoViewer.this.firstFrameView.setPivotX((float) (PhotoViewer.this.videoTextureView.getMeasuredWidth() / 2));
                    } else {
                        PhotoViewer.this.videoTextureView.setPivotX(0.0f);
                        PhotoViewer.this.firstFrameView.setPivotX(0.0f);
                    }
                    PhotoViewer.this.checkFullscreenButton();
                }
            };
            this.aspectRatioFrameLayout = r0;
            r0.setWillNotDraw(false);
            this.aspectRatioFrameLayout.setVisibility(4);
            this.containerView.addView(this.aspectRatioFrameLayout, 0, LayoutHelper.createFrame(-1, -1, 17));
            if (this.imagesArrLocals.isEmpty()) {
                this.videoTextureView = new TextureView(this.parentActivity);
            } else {
                VideoEditTextureView videoEditTextureView = new VideoEditTextureView(this.parentActivity, this.videoPlayer);
                if (savedFilterState != null) {
                    videoEditTextureView.setDelegate(new PhotoViewer$$ExternalSyntheticLambda79(savedFilterState));
                }
                this.videoTextureView = videoEditTextureView;
            }
            SurfaceTexture surfaceTexture = this.injectingVideoPlayerSurface;
            if (surfaceTexture != null) {
                this.videoTextureView.setSurfaceTexture(surfaceTexture);
                this.textureUploaded = true;
                this.videoSizeSet = true;
                this.injectingVideoPlayerSurface = null;
            }
            this.videoTextureView.setPivotX(0.0f);
            this.videoTextureView.setPivotY(0.0f);
            this.videoTextureView.setOpaque(false);
            this.aspectRatioFrameLayout.addView(this.videoTextureView, LayoutHelper.createFrame(-1, -1, 17));
            FirstFrameView firstFrameView2 = new FirstFrameView(this.parentActivity);
            this.firstFrameView = firstFrameView2;
            firstFrameView2.setPivotX(0.0f);
            this.firstFrameView.setPivotY(0.0f);
            this.firstFrameView.setScaleType(ImageView.ScaleType.FIT_XY);
            this.aspectRatioFrameLayout.addView(this.firstFrameView, LayoutHelper.createFrame(-1, -1, 17));
            if (this.sendPhotoType == 1) {
                View view = new View(this.parentActivity);
                this.flashView = view;
                view.setBackgroundColor(-1);
                this.flashView.setAlpha(0.0f);
                this.aspectRatioFrameLayout.addView(this.flashView, LayoutHelper.createFrame(-1, -1, 17));
            }
        }
    }

    /* access modifiers changed from: private */
    public void releasePlayer(boolean z) {
        if (this.videoPlayer != null) {
            cancelVideoPlayRunnable();
            AndroidUtilities.cancelRunOnUIThread(this.setLoadingRunnable);
            AndroidUtilities.cancelRunOnUIThread(this.hideActionBarRunnable);
            if (this.shouldSavePositionForCurrentVideoShortTerm != null) {
                this.savedVideoPositions.put(this.shouldSavePositionForCurrentVideoShortTerm, new SavedVideoPosition(((float) this.videoPlayer.getCurrentPosition()) / ((float) this.videoPlayer.getDuration()), SystemClock.elapsedRealtime()));
            }
            this.videoPlayer.releasePlayer(true);
            this.videoPlayer = null;
        } else {
            this.playerWasPlaying = false;
        }
        OrientationEventListener orientationEventListener2 = this.orientationEventListener;
        if (orientationEventListener2 != null) {
            orientationEventListener2.disable();
            this.orientationEventListener = null;
        }
        this.videoPreviewFrame.close();
        toggleMiniProgress(false, false);
        this.pipAvailable = false;
        this.playerInjected = false;
        if (this.pipItem.isEnabled()) {
            this.pipItem.setEnabled(false);
            this.pipItem.animate().alpha(0.5f).setDuration(175).withEndAction((Runnable) null).start();
        }
        if (this.keepScreenOnFlagSet) {
            try {
                this.parentActivity.getWindow().clearFlags(128);
                this.keepScreenOnFlagSet = false;
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        }
        AspectRatioFrameLayout aspectRatioFrameLayout2 = this.aspectRatioFrameLayout;
        if (aspectRatioFrameLayout2 != null) {
            try {
                this.containerView.removeView(aspectRatioFrameLayout2);
            } catch (Throwable unused) {
            }
            this.aspectRatioFrameLayout = null;
        }
        cancelFlashAnimations();
        this.flashView = null;
        TextureView textureView = this.videoTextureView;
        if (textureView != null) {
            if (textureView instanceof VideoEditTextureView) {
                ((VideoEditTextureView) textureView).release();
            }
            this.videoTextureView = null;
        }
        if (this.isPlaying) {
            this.isPlaying = false;
            AndroidUtilities.cancelRunOnUIThread(this.updateProgressRunnable);
        }
        if (!z && !this.inPreview && !this.requestingPreview) {
            setVideoPlayerControlVisible(false, true);
        }
        this.photoProgressViews[0].resetAlphas();
    }

    private void setVideoPlayerControlVisible(final boolean z, boolean z2) {
        if (this.videoPlayerControlVisible != z) {
            Animator animator = this.videoPlayerControlAnimator;
            if (animator != null) {
                animator.cancel();
            }
            this.videoPlayerControlVisible = z;
            float f = 1.0f;
            int i = 0;
            if (z2) {
                if (z) {
                    this.videoPlayerControlFrameLayout.setVisibility(0);
                } else {
                    this.dateTextView.setVisibility(0);
                    this.nameTextView.setVisibility(0);
                    if (this.allowShare) {
                        this.bottomButtonsLayout.setVisibility(0);
                    }
                }
                final boolean z3 = this.allowShare;
                float[] fArr = new float[2];
                fArr[0] = this.videoPlayerControlFrameLayout.getAlpha();
                if (!z) {
                    f = 0.0f;
                }
                fArr[1] = f;
                ValueAnimator ofFloat = ValueAnimator.ofFloat(fArr);
                ofFloat.setDuration(200);
                ofFloat.addUpdateListener(new PhotoViewer$$ExternalSyntheticLambda6(this, z3));
                ofFloat.addListener(new AnimatorListenerAdapter() {
                    public void onAnimationEnd(Animator animator) {
                        if (!z) {
                            PhotoViewer.this.videoPlayerControlFrameLayout.setVisibility(8);
                            return;
                        }
                        PhotoViewer.this.dateTextView.setVisibility(8);
                        PhotoViewer.this.nameTextView.setVisibility(8);
                        if (z3) {
                            PhotoViewer.this.bottomButtonsLayout.setVisibility(8);
                        }
                    }
                });
                this.videoPlayerControlAnimator = ofFloat;
                ofFloat.start();
            } else {
                this.videoPlayerControlFrameLayout.setVisibility(z ? 0 : 8);
                this.videoPlayerControlFrameLayout.setAlpha(z ? 1.0f : 0.0f);
                this.dateTextView.setVisibility(z ? 8 : 0);
                this.dateTextView.setAlpha(z ? 0.0f : 1.0f);
                this.nameTextView.setVisibility(z ? 8 : 0);
                this.nameTextView.setAlpha(z ? 0.0f : 1.0f);
                if (this.allowShare) {
                    LinearLayout linearLayout = this.bottomButtonsLayout;
                    if (z) {
                        i = 8;
                    }
                    linearLayout.setVisibility(i);
                    LinearLayout linearLayout2 = this.bottomButtonsLayout;
                    if (z) {
                        f = 0.0f;
                    }
                    linearLayout2.setAlpha(f);
                }
            }
            if (this.allowShare && this.pageBlocksAdapter == null) {
                if (z) {
                    this.menuItem.showSubItem(10);
                } else {
                    this.menuItem.hideSubItem(10);
                }
            }
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$setVideoPlayerControlVisible$51(boolean z, ValueAnimator valueAnimator) {
        float floatValue = ((Float) valueAnimator.getAnimatedValue()).floatValue();
        this.videoPlayerControlFrameLayout.setAlpha(floatValue);
        float f = 1.0f - floatValue;
        this.dateTextView.setAlpha(f);
        this.nameTextView.setAlpha(f);
        if (z) {
            this.bottomButtonsLayout.setAlpha(f);
        }
    }

    private void updateCaptionTextForCurrentPhoto(Object obj) {
        CharSequence charSequence;
        if (this.hasCaptionForAllMedia) {
            charSequence = this.captionForAllMedia;
        } else if (obj instanceof MediaController.PhotoEntry) {
            charSequence = ((MediaController.PhotoEntry) obj).caption;
        } else {
            charSequence = (!(obj instanceof TLRPC$BotInlineResult) && (obj instanceof MediaController.SearchImage)) ? ((MediaController.SearchImage) obj).caption : null;
        }
        if (TextUtils.isEmpty(charSequence)) {
            this.captionEditText.setFieldText("");
        } else {
            this.captionEditText.setFieldText(charSequence);
        }
        this.captionEditText.setAllowTextEntitiesIntersection(supportsSendingNewEntities());
    }

    public void showAlertDialog(AlertDialog.Builder builder) {
        if (this.parentActivity != null) {
            try {
                AlertDialog alertDialog = this.visibleDialog;
                if (alertDialog != null) {
                    alertDialog.dismiss();
                    this.visibleDialog = null;
                }
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
            try {
                AlertDialog show = builder.show();
                this.visibleDialog = show;
                show.setCanceledOnTouchOutside(true);
                this.visibleDialog.setOnDismissListener(new PhotoViewer$$ExternalSyntheticLambda11(this));
            } catch (Exception e2) {
                FileLog.e((Throwable) e2);
            }
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$showAlertDialog$52(DialogInterface dialogInterface) {
        this.visibleDialog = null;
    }

    private void mergeImages(String str, String str2, Bitmap bitmap, Bitmap bitmap2, float f, boolean z) {
        boolean z2;
        if (bitmap == null) {
            try {
                bitmap = BitmapFactory.decodeFile(str2);
                z2 = true;
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            } catch (Throwable th) {
                FileLog.e(th);
                return;
            }
        } else {
            z2 = false;
        }
        int width = bitmap.getWidth();
        int height = bitmap.getHeight();
        float f2 = (float) width;
        if (f2 > f || ((float) height) > f) {
            float max = ((float) Math.max(width, height)) / f;
            height = (int) (((float) height) / max);
            width = (int) (f2 / max);
        }
        Bitmap createBitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);
        Canvas canvas = new Canvas(createBitmap);
        Rect rect = new Rect(0, 0, width, height);
        if (z) {
            canvas.drawBitmap(bitmap2, (Rect) null, rect, this.bitmapPaint);
            canvas.drawBitmap(bitmap, (Rect) null, rect, this.bitmapPaint);
        } else {
            canvas.drawBitmap(bitmap, (Rect) null, rect, this.bitmapPaint);
            canvas.drawBitmap(bitmap2, (Rect) null, rect, this.bitmapPaint);
        }
        FileOutputStream fileOutputStream = new FileOutputStream(new File(str));
        createBitmap.compress(Bitmap.CompressFormat.JPEG, f == 512.0f ? 83 : 87, fileOutputStream);
        fileOutputStream.close();
        if (z2) {
            bitmap.recycle();
        }
        createBitmap.recycle();
    }

    /* access modifiers changed from: private */
    public void seekAnimatedStickersTo(long j) {
        RLottieDrawable lottieAnimation;
        ArrayList<VideoEditedInfo.MediaEntity> arrayList = this.editState.mediaEntities;
        if (arrayList != null) {
            int size = arrayList.size();
            for (int i = 0; i < size; i++) {
                VideoEditedInfo.MediaEntity mediaEntity = this.editState.mediaEntities.get(i);
                if (mediaEntity.type == 0 && (mediaEntity.subType & 1) != 0) {
                    View view = mediaEntity.view;
                    if ((view instanceof BackupImageView) && (lottieAnimation = ((BackupImageView) view).getImageReceiver().getLottieAnimation()) != null) {
                        long j2 = this.startTime;
                        long j3 = 0;
                        if (j2 > 0) {
                            j3 = j2 / 1000;
                        }
                        lottieAnimation.setProgressMs(j - j3);
                    }
                }
            }
        }
    }

    /* access modifiers changed from: private */
    public void playOrStopAnimatedStickers(boolean z) {
        RLottieDrawable lottieAnimation;
        ArrayList<VideoEditedInfo.MediaEntity> arrayList = this.editState.mediaEntities;
        if (arrayList != null) {
            int size = arrayList.size();
            for (int i = 0; i < size; i++) {
                VideoEditedInfo.MediaEntity mediaEntity = this.editState.mediaEntities.get(i);
                if (mediaEntity.type == 0 && (mediaEntity.subType & 1) != 0) {
                    View view = mediaEntity.view;
                    if ((view instanceof BackupImageView) && (lottieAnimation = ((BackupImageView) view).getImageReceiver().getLottieAnimation()) != null) {
                        if (z) {
                            lottieAnimation.start();
                        } else {
                            lottieAnimation.stop();
                        }
                    }
                }
            }
        }
    }

    private int getAnimatedMediaEntitiesCount(boolean z) {
        ArrayList<VideoEditedInfo.MediaEntity> arrayList = this.editState.mediaEntities;
        if (arrayList == null) {
            return 0;
        }
        int size = arrayList.size();
        int i = 0;
        for (int i2 = 0; i2 < size; i2++) {
            VideoEditedInfo.MediaEntity mediaEntity = this.editState.mediaEntities.get(i2);
            if (mediaEntity.type == 0) {
                byte b = mediaEntity.subType;
                if ((b & 1) != 0 || (b & 4) != 0) {
                    i++;
                    if (z) {
                        break;
                    }
                }
            }
        }
        return i;
    }

    private boolean hasAnimatedMediaEntities() {
        return getAnimatedMediaEntitiesCount(true) != 0;
    }

    /* JADX WARNING: Removed duplicated region for block: B:16:0x004d A[Catch:{ all -> 0x0083 }] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private android.graphics.Bitmap createCroppedBitmap(android.graphics.Bitmap r12, org.telegram.messenger.MediaController.CropState r13, int[] r14, boolean r15) {
        /*
            r11 = this;
            int r0 = r13.transformRotation     // Catch:{ all -> 0x0083 }
            r1 = 0
            if (r14 == 0) goto L_0x0007
            r1 = r14[r1]     // Catch:{ all -> 0x0083 }
        L_0x0007:
            int r0 = r0 + r1
            int r0 = r0 % 360
            int r14 = r12.getWidth()     // Catch:{ all -> 0x0083 }
            int r1 = r12.getHeight()     // Catch:{ all -> 0x0083 }
            r2 = 270(0x10e, float:3.78E-43)
            r3 = 90
            if (r0 == r3) goto L_0x001e
            if (r0 != r2) goto L_0x001b
            goto L_0x001e
        L_0x001b:
            r4 = r14
            r5 = r1
            goto L_0x0020
        L_0x001e:
            r5 = r14
            r4 = r1
        L_0x0020:
            float r4 = (float) r4     // Catch:{ all -> 0x0083 }
            float r6 = r13.cropPw     // Catch:{ all -> 0x0083 }
            float r6 = r6 * r4
            int r6 = (int) r6     // Catch:{ all -> 0x0083 }
            float r5 = (float) r5     // Catch:{ all -> 0x0083 }
            float r7 = r13.cropPh     // Catch:{ all -> 0x0083 }
            float r7 = r7 * r5
            int r7 = (int) r7     // Catch:{ all -> 0x0083 }
            android.graphics.Bitmap$Config r8 = android.graphics.Bitmap.Config.ARGB_8888     // Catch:{ all -> 0x0083 }
            android.graphics.Bitmap r8 = android.graphics.Bitmap.createBitmap(r6, r7, r8)     // Catch:{ all -> 0x0083 }
            android.graphics.Matrix r9 = new android.graphics.Matrix     // Catch:{ all -> 0x0083 }
            r9.<init>()     // Catch:{ all -> 0x0083 }
            int r14 = -r14
            r10 = 2
            int r14 = r14 / r10
            float r14 = (float) r14     // Catch:{ all -> 0x0083 }
            int r1 = -r1
            int r1 = r1 / r10
            float r1 = (float) r1     // Catch:{ all -> 0x0083 }
            r9.postTranslate(r14, r1)     // Catch:{ all -> 0x0083 }
            if (r15 == 0) goto L_0x0057
            boolean r14 = r13.mirrored     // Catch:{ all -> 0x0083 }
            if (r14 == 0) goto L_0x0057
            r14 = -1082130432(0xffffffffbvar_, float:-1.0)
            r15 = 1065353216(0x3var_, float:1.0)
            if (r0 == r3) goto L_0x0054
            if (r0 != r2) goto L_0x0050
            goto L_0x0054
        L_0x0050:
            r9.postScale(r14, r15)     // Catch:{ all -> 0x0083 }
            goto L_0x0057
        L_0x0054:
            r9.postScale(r15, r14)     // Catch:{ all -> 0x0083 }
        L_0x0057:
            float r14 = r13.cropRotate     // Catch:{ all -> 0x0083 }
            float r15 = (float) r0     // Catch:{ all -> 0x0083 }
            float r14 = r14 + r15
            r9.postRotate(r14)     // Catch:{ all -> 0x0083 }
            float r14 = r13.cropPx     // Catch:{ all -> 0x0083 }
            float r14 = r14 * r4
            float r15 = r13.cropPy     // Catch:{ all -> 0x0083 }
            float r15 = r15 * r5
            r9.postTranslate(r14, r15)     // Catch:{ all -> 0x0083 }
            float r13 = r13.cropScale     // Catch:{ all -> 0x0083 }
            r9.postScale(r13, r13)     // Catch:{ all -> 0x0083 }
            int r6 = r6 / r10
            float r13 = (float) r6     // Catch:{ all -> 0x0083 }
            int r7 = r7 / r10
            float r14 = (float) r7     // Catch:{ all -> 0x0083 }
            r9.postTranslate(r13, r14)     // Catch:{ all -> 0x0083 }
            android.graphics.Canvas r13 = new android.graphics.Canvas     // Catch:{ all -> 0x0083 }
            r13.<init>(r8)     // Catch:{ all -> 0x0083 }
            android.graphics.Paint r14 = new android.graphics.Paint     // Catch:{ all -> 0x0083 }
            r14.<init>(r10)     // Catch:{ all -> 0x0083 }
            r13.drawBitmap(r12, r9, r14)     // Catch:{ all -> 0x0083 }
            return r8
        L_0x0083:
            r12 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r12)
            r12 = 0
            return r12
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.createCroppedBitmap(android.graphics.Bitmap, org.telegram.messenger.MediaController$CropState, int[], boolean):android.graphics.Bitmap");
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v0, resolved type: java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r12v1, resolved type: org.telegram.messenger.MediaController$SavedFilterState} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v1, resolved type: java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v2, resolved type: java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v3, resolved type: java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v4, resolved type: java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v5, resolved type: java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v6, resolved type: java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v7, resolved type: java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v8, resolved type: java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v9, resolved type: java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r26v10, resolved type: java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v11, resolved type: java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity>} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r15v12, resolved type: java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity>} */
    /* JADX WARNING: type inference failed for: r4v47, types: [org.telegram.messenger.MediaController$SavedFilterState] */
    /* JADX WARNING: Code restructure failed: missing block: B:17:0x005b, code lost:
        r1 = r7.sendPhotoType;
     */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:166:0x050c  */
    /* JADX WARNING: Removed duplicated region for block: B:195:0x05f3 A[LOOP:1: B:191:0x05e9->B:195:0x05f3, LOOP_END] */
    /* JADX WARNING: Removed duplicated region for block: B:226:0x074a  */
    /* JADX WARNING: Removed duplicated region for block: B:229:0x0757  */
    /* JADX WARNING: Removed duplicated region for block: B:230:0x076a  */
    /* JADX WARNING: Removed duplicated region for block: B:245:0x07b1  */
    /* JADX WARNING: Removed duplicated region for block: B:248:0x07b9  */
    /* JADX WARNING: Removed duplicated region for block: B:249:0x0811  */
    /* JADX WARNING: Removed duplicated region for block: B:252:0x081e  */
    /* JADX WARNING: Removed duplicated region for block: B:259:0x082d  */
    /* JADX WARNING: Removed duplicated region for block: B:262:0x0835  */
    /* JADX WARNING: Removed duplicated region for block: B:45:0x00f9 A[RETURN] */
    /* JADX WARNING: Removed duplicated region for block: B:46:0x00fa  */
    /* JADX WARNING: Removed duplicated region for block: B:91:0x02b7  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void applyCurrentEditMode() {
        /*
            r44 = this;
            r7 = r44
            int r0 = r7.currentIndex
            if (r0 < 0) goto L_0x084e
            java.util.ArrayList<java.lang.Object> r1 = r7.imagesArrLocals
            int r1 = r1.size()
            if (r0 < r1) goto L_0x0010
            goto L_0x084e
        L_0x0010:
            java.util.ArrayList<java.lang.Object> r0 = r7.imagesArrLocals
            int r1 = r7.currentIndex
            java.lang.Object r0 = r0.get(r1)
            boolean r0 = r0 instanceof org.telegram.messenger.MediaController.MediaEditState
            if (r0 != 0) goto L_0x001d
            return
        L_0x001d:
            r8 = 1
            android.graphics.Bitmap[] r0 = new android.graphics.Bitmap[r8]
            java.util.ArrayList<java.lang.Object> r1 = r7.imagesArrLocals
            int r2 = r7.currentIndex
            java.lang.Object r1 = r1.get(r2)
            r9 = r1
            org.telegram.messenger.MediaController$MediaEditState r9 = (org.telegram.messenger.MediaController.MediaEditState) r9
            int r1 = r7.currentEditMode
            r2 = 1148846080(0x447a0000, float:1000.0)
            r10 = 3
            r3 = 1140850688(0x44000000, float:512.0)
            r11 = 2
            r12 = 0
            r13 = 0
            if (r1 == r8) goto L_0x008c
            if (r1 != 0) goto L_0x003e
            int r4 = r7.sendPhotoType
            if (r4 != r8) goto L_0x003e
            goto L_0x008c
        L_0x003e:
            if (r1 != r11) goto L_0x0053
            org.telegram.ui.Components.PhotoFilterView r1 = r7.photoFilterView
            android.graphics.Bitmap r1 = r1.getBitmap()
            org.telegram.ui.Components.PhotoFilterView r4 = r7.photoFilterView
            org.telegram.messenger.MediaController$SavedFilterState r4 = r4.getSavedFilterState()
            r6 = r1
            r5 = r4
            r1 = r12
            r4 = r1
            r15 = r4
            goto L_0x00f5
        L_0x0053:
            if (r1 != r10) goto L_0x0085
            int r1 = android.os.Build.VERSION.SDK_INT
            r4 = 18
            if (r1 < r4) goto L_0x0069
            int r1 = r7.sendPhotoType
            if (r1 == 0) goto L_0x0063
            if (r1 == r8) goto L_0x0063
            if (r1 != r11) goto L_0x0069
        L_0x0063:
            java.util.ArrayList r1 = new java.util.ArrayList
            r1.<init>()
            goto L_0x006a
        L_0x0069:
            r1 = r12
        L_0x006a:
            org.telegram.ui.Components.PhotoPaintView r4 = r7.photoPaintView
            boolean r4 = r4.hasChanges()
            org.telegram.ui.Components.PhotoPaintView r5 = r7.photoPaintView
            android.graphics.Bitmap r5 = r5.getBitmap(r1, r0)
            org.telegram.ui.Components.PhotoPaintView r6 = r7.photoPaintView
            java.util.ArrayList r6 = r6.getMasks()
            r22 = r4
            r15 = r6
            r4 = r1
            r6 = r5
            r1 = r12
            r5 = r1
            goto L_0x00f7
        L_0x0085:
            r1 = r12
            r4 = r1
            r5 = r4
            r6 = r5
            r15 = r6
            goto L_0x00f5
        L_0x008c:
            org.telegram.ui.Components.PhotoCropView r1 = r7.photoCropView
            r1.makeCrop(r9)
            org.telegram.messenger.MediaController$CropState r1 = r9.cropState
            if (r1 != 0) goto L_0x009a
            int r1 = r7.currentEditMode
            if (r1 == r8) goto L_0x009a
            return
        L_0x009a:
            boolean r1 = r7.isCurrentVideo
            if (r1 == 0) goto L_0x00e0
            java.lang.String r1 = r9.filterPath
            boolean r1 = android.text.TextUtils.isEmpty(r1)
            if (r1 != 0) goto L_0x00b0
            java.lang.String r1 = r9.filterPath
            android.graphics.Bitmap r1 = org.telegram.messenger.ImageLoader.loadBitmap(r1, r12, r3, r3, r8)
        L_0x00ac:
            r6 = r1
            r1 = r12
            r4 = r1
            goto L_0x00f3
        L_0x00b0:
            int r1 = r7.sendPhotoType
            if (r1 != r8) goto L_0x00c5
            int[] r1 = new int[r8]
            java.lang.String r4 = r9.getPath()
            long r5 = r7.avatarStartTime
            r14 = 1000(0x3e8, double:4.94E-321)
            long r5 = r5 / r14
            android.graphics.Bitmap r4 = org.telegram.messenger.SendMessagesHelper.createVideoThumbnailAtTime(r4, r5, r1, r8)
            r6 = r4
            goto L_0x00f2
        L_0x00c5:
            java.lang.String r1 = r9.getPath()
            org.telegram.ui.Components.VideoTimelinePlayView r4 = r7.videoTimelineView
            float r4 = r4.getLeftProgress()
            org.telegram.ui.Components.VideoPlayer r5 = r7.videoPlayer
            long r5 = r5.getDuration()
            float r5 = (float) r5
            float r4 = r4 * r5
            float r4 = r4 * r2
            long r4 = (long) r4
            android.graphics.Bitmap r1 = org.telegram.messenger.SendMessagesHelper.createVideoThumbnailAtTime(r1, r4)
            goto L_0x00ac
        L_0x00e0:
            org.telegram.messenger.ImageReceiver r1 = r7.centerImage
            android.graphics.Bitmap r1 = r1.getBitmap()
            int[] r4 = new int[r8]
            org.telegram.messenger.ImageReceiver r5 = r7.centerImage
            int r5 = r5.getOrientation()
            r4[r13] = r5
            r6 = r1
            r1 = r4
        L_0x00f2:
            r4 = r12
        L_0x00f3:
            r5 = r4
            r15 = r5
        L_0x00f5:
            r22 = 0
        L_0x00f7:
            if (r6 != 0) goto L_0x00fa
            return
        L_0x00fa:
            java.lang.String r14 = r9.thumbPath
            if (r14 == 0) goto L_0x010a
            java.io.File r14 = new java.io.File
            java.lang.String r3 = r9.thumbPath
            r14.<init>(r3)
            r14.delete()
            r9.thumbPath = r12
        L_0x010a:
            java.lang.String r3 = r9.imagePath
            if (r3 == 0) goto L_0x011a
            java.io.File r3 = new java.io.File
            java.lang.String r14 = r9.imagePath
            r3.<init>(r14)
            r3.delete()
            r9.imagePath = r12
        L_0x011a:
            int r3 = r7.currentEditMode
            java.lang.String r14 = "_temp.jpg"
            r10 = 4
            if (r3 == r8) goto L_0x0608
            if (r3 != 0) goto L_0x0129
            int r2 = r7.sendPhotoType
            if (r2 != r8) goto L_0x0129
            goto L_0x0608
        L_0x0129:
            if (r3 != r11) goto L_0x02c3
            java.lang.String r0 = r9.filterPath
            if (r0 == 0) goto L_0x0139
            java.io.File r0 = new java.io.File
            java.lang.String r1 = r9.filterPath
            r0.<init>(r1)
            r0.delete()
        L_0x0139:
            android.graphics.Bitmap$CompressFormat r15 = android.graphics.Bitmap.CompressFormat.JPEG
            int r0 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r0 = (float) r0
            int r1 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r1 = (float) r1
            r18 = 87
            r19 = 0
            r20 = 101(0x65, float:1.42E-43)
            r21 = 101(0x65, float:1.42E-43)
            r4 = r14
            r14 = r6
            r16 = r0
            r17 = r1
            org.telegram.tgnet.TLRPC$PhotoSize r0 = org.telegram.messenger.ImageLoader.scaleAndSaveImage((android.graphics.Bitmap) r14, (android.graphics.Bitmap.CompressFormat) r15, (float) r16, (float) r17, (int) r18, (boolean) r19, (int) r20, (int) r21)
            int r1 = r7.currentAccount
            org.telegram.messenger.FileLoader r1 = org.telegram.messenger.FileLoader.getInstance(r1)
            java.io.File r0 = r1.getPathToAttach(r0, r8)
            java.lang.String r0 = r0.toString()
            r9.filterPath = r0
            org.telegram.messenger.MediaController$CropState r0 = r9.cropState
            if (r0 == 0) goto L_0x0172
            android.graphics.Bitmap r0 = r7.createCroppedBitmap(r6, r0, r12, r8)
            r23 = r0
            goto L_0x0174
        L_0x0172:
            r23 = r6
        L_0x0174:
            java.lang.String r0 = r9.paintPath
            if (r0 != 0) goto L_0x01d5
            boolean r0 = r7.isCurrentVideo
            if (r0 != 0) goto L_0x01ac
            android.graphics.Bitmap$CompressFormat r15 = android.graphics.Bitmap.CompressFormat.JPEG
            int r0 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r0 = (float) r0
            int r1 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r1 = (float) r1
            r18 = 87
            r19 = 0
            r20 = 101(0x65, float:1.42E-43)
            r21 = 101(0x65, float:1.42E-43)
            r14 = r23
            r16 = r0
            r17 = r1
            org.telegram.tgnet.TLRPC$PhotoSize r0 = org.telegram.messenger.ImageLoader.scaleAndSaveImage((android.graphics.Bitmap) r14, (android.graphics.Bitmap.CompressFormat) r15, (float) r16, (float) r17, (int) r18, (boolean) r19, (int) r20, (int) r21)
            int r1 = r7.currentAccount
            org.telegram.messenger.FileLoader r1 = org.telegram.messenger.FileLoader.getInstance(r1)
            java.io.File r0 = r1.getPathToAttach(r0, r8)
            java.lang.String r0 = r0.toString()
            r7.currentImagePath = r0
            r9.imagePath = r0
        L_0x01ac:
            android.graphics.Bitmap$CompressFormat r15 = android.graphics.Bitmap.CompressFormat.JPEG
            r16 = 1140850688(0x44000000, float:512.0)
            r17 = 1140850688(0x44000000, float:512.0)
            r18 = 83
            r19 = 0
            r20 = 101(0x65, float:1.42E-43)
            r21 = 101(0x65, float:1.42E-43)
            r14 = r23
            org.telegram.tgnet.TLRPC$PhotoSize r0 = org.telegram.messenger.ImageLoader.scaleAndSaveImage((android.graphics.Bitmap) r14, (android.graphics.Bitmap.CompressFormat) r15, (float) r16, (float) r17, (int) r18, (boolean) r19, (int) r20, (int) r21)
            int r1 = r7.currentAccount
            org.telegram.messenger.FileLoader r1 = org.telegram.messenger.FileLoader.getInstance(r1)
            java.io.File r0 = r1.getPathToAttach(r0, r8)
            java.lang.String r0 = r0.toString()
            r9.thumbPath = r0
            r26 = r5
            r14 = r6
            goto L_0x02ba
        L_0x01d5:
            java.lang.String r3 = r9.fullPaintPath
            boolean r0 = r0.equals(r3)
            if (r0 == 0) goto L_0x01e4
            org.telegram.ui.Components.PaintingOverlay r0 = r7.paintingOverlay
            android.graphics.Bitmap r0 = r0.getThumb()
            goto L_0x01e5
        L_0x01e4:
            r0 = r12
        L_0x01e5:
            org.telegram.messenger.MediaController$CropState r1 = r9.cropState
            if (r1 == 0) goto L_0x0205
            if (r0 != 0) goto L_0x01fc
            java.lang.String r0 = r9.fullPaintPath
            android.graphics.Bitmap r0 = android.graphics.BitmapFactory.decodeFile(r0)
            org.telegram.messenger.MediaController$CropState r1 = r9.cropState
            android.graphics.Bitmap r1 = r7.createCroppedBitmap(r0, r1, r12, r13)
            r0.recycle()
            r0 = r1
            goto L_0x0200
        L_0x01fc:
            android.graphics.Bitmap r0 = r7.createCroppedBitmap(r0, r1, r12, r13)
        L_0x0200:
            r24 = r0
            r25 = 1
            goto L_0x0209
        L_0x0205:
            r24 = r0
            r25 = 0
        L_0x0209:
            boolean r0 = r7.isCurrentVideo
            if (r0 != 0) goto L_0x027f
            boolean r0 = r44.hasAnimatedMediaEntities()
            if (r0 == 0) goto L_0x0244
            android.graphics.Bitmap$CompressFormat r15 = android.graphics.Bitmap.CompressFormat.JPEG
            int r0 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r0 = (float) r0
            int r1 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r1 = (float) r1
            r18 = 87
            r19 = 0
            r20 = 101(0x65, float:1.42E-43)
            r21 = 101(0x65, float:1.42E-43)
            r14 = r23
            r16 = r0
            r17 = r1
            org.telegram.tgnet.TLRPC$PhotoSize r0 = org.telegram.messenger.ImageLoader.scaleAndSaveImage((android.graphics.Bitmap) r14, (android.graphics.Bitmap.CompressFormat) r15, (float) r16, (float) r17, (int) r18, (boolean) r19, (int) r20, (int) r21)
            int r1 = r7.currentAccount
            org.telegram.messenger.FileLoader r1 = org.telegram.messenger.FileLoader.getInstance(r1)
            java.io.File r0 = r1.getPathToAttach(r0, r8)
            java.lang.String r0 = r0.toString()
            r7.currentImagePath = r0
            r9.imagePath = r0
            goto L_0x027f
        L_0x0244:
            java.io.File r0 = new java.io.File
            java.io.File r1 = org.telegram.messenger.FileLoader.getDirectory(r10)
            java.lang.StringBuilder r2 = new java.lang.StringBuilder
            r2.<init>()
            int r14 = org.telegram.messenger.SharedConfig.getLastLocalId()
            r2.append(r14)
            r2.append(r4)
            java.lang.String r2 = r2.toString()
            r0.<init>(r1, r2)
            java.lang.String r1 = r0.getAbsolutePath()
            r9.imagePath = r1
            int r0 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r14 = (float) r0
            r15 = 1
            r0 = r44
            r2 = r3
            r16 = r3
            r3 = r24
            r11 = r4
            r4 = r23
            r26 = r5
            r5 = r14
            r14 = r6
            r6 = r15
            r0.mergeImages(r1, r2, r3, r4, r5, r6)
            goto L_0x0285
        L_0x027f:
            r16 = r3
            r11 = r4
            r26 = r5
            r14 = r6
        L_0x0285:
            java.io.File r0 = new java.io.File
            java.io.File r1 = org.telegram.messenger.FileLoader.getDirectory(r10)
            java.lang.StringBuilder r2 = new java.lang.StringBuilder
            r2.<init>()
            int r3 = org.telegram.messenger.SharedConfig.getLastLocalId()
            r2.append(r3)
            r2.append(r11)
            java.lang.String r2 = r2.toString()
            r0.<init>(r1, r2)
            java.lang.String r1 = r0.getAbsolutePath()
            r9.thumbPath = r1
            r5 = 1140850688(0x44000000, float:512.0)
            r6 = 1
            r0 = r44
            r2 = r16
            r3 = r24
            r4 = r23
            r0.mergeImages(r1, r2, r3, r4, r5, r6)
            if (r25 == 0) goto L_0x02ba
            r24.recycle()
        L_0x02ba:
            org.telegram.messenger.MediaController$CropState r0 = r9.cropState
            if (r0 == 0) goto L_0x0605
            r23.recycle()
            goto L_0x0605
        L_0x02c3:
            r26 = r5
            r11 = r14
            r1 = 3
            r14 = r6
            if (r3 != r1) goto L_0x0605
            java.lang.String r1 = r9.paintPath
            if (r1 == 0) goto L_0x02ec
            java.io.File r1 = new java.io.File
            java.lang.String r2 = r9.paintPath
            r1.<init>(r2)
            r1.delete()
            java.lang.String r1 = r9.paintPath
            java.lang.String r2 = r9.fullPaintPath
            boolean r1 = r1.equals(r2)
            if (r1 != 0) goto L_0x02ec
            java.io.File r1 = new java.io.File
            java.lang.String r2 = r9.fullPaintPath
            r1.<init>(r2)
            r1.delete()
        L_0x02ec:
            android.graphics.Bitmap$CompressFormat r1 = android.graphics.Bitmap.CompressFormat.PNG
            int r2 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r2 = (float) r2
            int r3 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r3 = (float) r3
            r18 = 87
            r19 = 0
            r20 = 101(0x65, float:1.42E-43)
            r21 = 101(0x65, float:1.42E-43)
            r6 = r14
            r5 = r15
            r15 = r1
            r16 = r2
            r17 = r3
            org.telegram.tgnet.TLRPC$PhotoSize r1 = org.telegram.messenger.ImageLoader.scaleAndSaveImage((android.graphics.Bitmap) r14, (android.graphics.Bitmap.CompressFormat) r15, (float) r16, (float) r17, (int) r18, (boolean) r19, (int) r20, (int) r21)
            r9.stickers = r5
            org.telegram.ui.PhotoViewer$EditState r2 = r7.editState
            int r3 = r7.currentAccount
            org.telegram.messenger.FileLoader r3 = org.telegram.messenger.FileLoader.getInstance(r3)
            java.io.File r1 = r3.getPathToAttach(r1, r8)
            java.lang.String r1 = r1.toString()
            r2.paintPath = r1
            r9.paintPath = r1
            org.telegram.ui.Components.PaintingOverlay r1 = r7.paintingOverlay
            org.telegram.ui.PhotoViewer$EditState r2 = r7.editState
            if (r4 == 0) goto L_0x032d
            boolean r3 = r4.isEmpty()
            if (r3 == 0) goto L_0x032e
        L_0x032d:
            r4 = r12
        L_0x032e:
            r2.mediaEntities = r4
            r9.mediaEntities = r4
            boolean r2 = r7.isCurrentVideo
            r1.setEntities(r4, r2, r8)
            org.telegram.ui.PhotoViewer$EditState r1 = r7.editState
            org.telegram.ui.Components.PhotoPaintView r2 = r7.photoPaintView
            long r2 = r2.getLcm()
            r1.averageDuration = r2
            r9.averageDuration = r2
            java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity> r1 = r9.mediaEntities
            if (r1 == 0) goto L_0x037a
            r1 = r0[r13]
            if (r1 == 0) goto L_0x037a
            r14 = r0[r13]
            android.graphics.Bitmap$CompressFormat r15 = android.graphics.Bitmap.CompressFormat.PNG
            int r1 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r1 = (float) r1
            int r2 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r2 = (float) r2
            r18 = 87
            r19 = 0
            r20 = 101(0x65, float:1.42E-43)
            r21 = 101(0x65, float:1.42E-43)
            r16 = r1
            r17 = r2
            org.telegram.tgnet.TLRPC$PhotoSize r1 = org.telegram.messenger.ImageLoader.scaleAndSaveImage((android.graphics.Bitmap) r14, (android.graphics.Bitmap.CompressFormat) r15, (float) r16, (float) r17, (int) r18, (boolean) r19, (int) r20, (int) r21)
            int r2 = r7.currentAccount
            org.telegram.messenger.FileLoader r2 = org.telegram.messenger.FileLoader.getInstance(r2)
            java.io.File r1 = r2.getPathToAttach(r1, r8)
            java.lang.String r1 = r1.toString()
            r9.fullPaintPath = r1
            goto L_0x037e
        L_0x037a:
            java.lang.String r1 = r9.paintPath
            r9.fullPaintPath = r1
        L_0x037e:
            org.telegram.ui.Components.PaintingOverlay r1 = r7.paintingOverlay
            r1.setBitmap(r6)
            org.telegram.messenger.MediaController$CropState r1 = r9.cropState
            if (r1 == 0) goto L_0x0462
            boolean r1 = r1.initied
            if (r1 == 0) goto L_0x0462
            org.telegram.ui.PhotoViewer$EditState r1 = r7.editState
            java.lang.String r1 = r1.paintPath
            java.lang.String r1 = org.telegram.ui.Components.Crop.CropView.getCopy(r1)
            org.telegram.ui.PhotoViewer$EditState r2 = r7.editState
            java.lang.String r2 = r2.croppedPaintPath
            if (r2 == 0) goto L_0x03a9
            java.io.File r2 = new java.io.File
            org.telegram.ui.PhotoViewer$EditState r3 = r7.editState
            java.lang.String r3 = r3.croppedPaintPath
            r2.<init>(r3)
            r2.delete()
            org.telegram.ui.PhotoViewer$EditState r2 = r7.editState
            r2.croppedPaintPath = r12
        L_0x03a9:
            org.telegram.ui.PhotoViewer$EditState r2 = r7.editState
            r2.croppedPaintPath = r1
            java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity> r2 = r2.mediaEntities
            if (r2 == 0) goto L_0x03e9
            boolean r2 = r2.isEmpty()
            if (r2 != 0) goto L_0x03e9
            org.telegram.ui.PhotoViewer$EditState r2 = r7.editState
            java.util.ArrayList r3 = new java.util.ArrayList
            org.telegram.ui.PhotoViewer$EditState r4 = r7.editState
            java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity> r4 = r4.mediaEntities
            int r4 = r4.size()
            r3.<init>(r4)
            r2.croppedMediaEntities = r3
            org.telegram.ui.PhotoViewer$EditState r2 = r7.editState
            java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity> r2 = r2.mediaEntities
            int r2 = r2.size()
            r3 = 0
        L_0x03d1:
            if (r3 >= r2) goto L_0x03ed
            org.telegram.ui.PhotoViewer$EditState r4 = r7.editState
            java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity> r5 = r4.croppedMediaEntities
            java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity> r4 = r4.mediaEntities
            java.lang.Object r4 = r4.get(r3)
            org.telegram.messenger.VideoEditedInfo$MediaEntity r4 = (org.telegram.messenger.VideoEditedInfo.MediaEntity) r4
            org.telegram.messenger.VideoEditedInfo$MediaEntity r4 = r4.copy()
            r5.add(r4)
            int r3 = r3 + 1
            goto L_0x03d1
        L_0x03e9:
            org.telegram.ui.PhotoViewer$EditState r2 = r7.editState
            r2.croppedMediaEntities = r12
        L_0x03ed:
            org.telegram.messenger.MediaController$CropState r2 = r9.cropState
            int r3 = r2.width
            int r2 = r2.height
            android.graphics.Bitmap$Config r4 = android.graphics.Bitmap.Config.ARGB_8888
            android.graphics.Bitmap r2 = android.graphics.Bitmap.createBitmap(r3, r2, r4)
            android.graphics.Canvas r3 = new android.graphics.Canvas
            r3.<init>(r2)
            boolean r4 = r7.isCurrentVideo
            if (r4 == 0) goto L_0x0413
            android.view.TextureView r4 = r7.videoTextureView
            org.telegram.ui.Components.VideoEditTextureView r4 = (org.telegram.ui.Components.VideoEditTextureView) r4
            int r5 = r4.getVideoWidth()
            int r4 = r4.getVideoHeight()
            r35 = r4
            r34 = r5
            goto L_0x0423
        L_0x0413:
            org.telegram.messenger.ImageReceiver r4 = r7.centerImage
            int r4 = r4.getBitmapWidth()
            org.telegram.messenger.ImageReceiver r5 = r7.centerImage
            int r5 = r5.getBitmapHeight()
            r34 = r4
            r35 = r5
        L_0x0423:
            android.app.Activity r4 = r7.parentActivity
            r29 = 0
            android.graphics.Bitmap$CompressFormat r32 = android.graphics.Bitmap.CompressFormat.PNG
            org.telegram.messenger.MediaController$CropState r5 = r9.cropState
            android.graphics.Matrix r14 = r5.matrix
            float r15 = r5.stateScale
            float r10 = r5.cropRotate
            int r8 = r5.transformRotation
            float r8 = (float) r8
            float r5 = r5.scale
            r40 = 0
            org.telegram.ui.PhotoViewer$EditState r12 = r7.editState
            java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity> r12 = r12.croppedMediaEntities
            r42 = 0
            r27 = r4
            r28 = r1
            r30 = r3
            r31 = r2
            r33 = r14
            r36 = r15
            r37 = r10
            r38 = r8
            r39 = r5
            r41 = r12
            org.telegram.ui.Components.Crop.CropView.editBitmap(r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42)
            r2.recycle()
            org.telegram.ui.PhotoViewer$EditState r1 = r7.editState
            java.lang.String r2 = r1.croppedPaintPath
            r9.croppedPaintPath = r2
            java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity> r1 = r1.croppedMediaEntities
            r9.croppedMediaEntities = r1
        L_0x0462:
            r1 = r0[r13]
            if (r1 == 0) goto L_0x0469
            r0 = r0[r13]
            goto L_0x046a
        L_0x0469:
            r0 = r6
        L_0x046a:
            org.telegram.messenger.MediaController$CropState r1 = r9.cropState
            if (r1 == 0) goto L_0x047a
            boolean r2 = r1.initied
            if (r2 == 0) goto L_0x047a
            r2 = 0
            android.graphics.Bitmap r0 = r7.createCroppedBitmap(r0, r1, r2, r13)
            r8 = r0
            r10 = 1
            goto L_0x047c
        L_0x047a:
            r8 = r0
            r10 = 0
        L_0x047c:
            boolean r0 = r7.isCurrentVideo
            if (r0 == 0) goto L_0x04bd
            java.lang.String r0 = r9.filterPath
            if (r0 != 0) goto L_0x04a3
            java.lang.String r0 = r9.getPath()
            org.telegram.ui.Components.VideoTimelinePlayView r1 = r7.videoTimelineView
            float r1 = r1.getLeftProgress()
            org.telegram.ui.Components.VideoPlayer r2 = r7.videoPlayer
            long r2 = r2.getDuration()
            float r2 = (float) r2
            float r1 = r1 * r2
            r2 = 1148846080(0x447a0000, float:1000.0)
            float r1 = r1 * r2
            long r1 = (long) r1
            android.graphics.Bitmap r0 = org.telegram.messenger.SendMessagesHelper.createVideoThumbnailAtTime(r0, r1)
            r1 = 1
            r3 = 0
            goto L_0x04ab
        L_0x04a3:
            r1 = 1
            r2 = 1140850688(0x44000000, float:512.0)
            r3 = 0
            android.graphics.Bitmap r0 = org.telegram.messenger.ImageLoader.loadBitmap(r0, r3, r2, r2, r1)
        L_0x04ab:
            org.telegram.messenger.MediaController$CropState r2 = r9.cropState
            if (r2 == 0) goto L_0x04b4
            android.graphics.Bitmap r2 = r7.createCroppedBitmap(r0, r2, r3, r1)
            goto L_0x04b5
        L_0x04b4:
            r2 = r0
        L_0x04b5:
            org.telegram.messenger.MediaController$CropState r3 = r9.cropState
            if (r3 == 0) goto L_0x04d8
            r0.recycle()
            goto L_0x04d8
        L_0x04bd:
            r1 = 1
            int[] r0 = new int[r1]
            org.telegram.messenger.ImageReceiver r2 = r7.centerImage
            int r2 = r2.getOrientation()
            r0[r13] = r2
            org.telegram.messenger.MediaController$CropState r2 = r9.cropState
            if (r2 == 0) goto L_0x04db
            org.telegram.messenger.ImageReceiver r2 = r7.centerImage
            android.graphics.Bitmap r2 = r2.getBitmap()
            org.telegram.messenger.MediaController$CropState r3 = r9.cropState
            android.graphics.Bitmap r2 = r7.createCroppedBitmap(r2, r3, r0, r1)
        L_0x04d8:
            r12 = r2
            r14 = 1
            goto L_0x0508
        L_0x04db:
            org.telegram.messenger.ImageReceiver r1 = r7.centerImage
            android.graphics.Bitmap r27 = r1.getBitmap()
            r1 = r0[r13]
            if (r1 == 0) goto L_0x0505
            android.graphics.Matrix r1 = new android.graphics.Matrix
            r1.<init>()
            r0 = r0[r13]
            float r0 = (float) r0
            r1.postRotate(r0)
            r28 = 0
            r29 = 0
            int r30 = r27.getWidth()
            int r31 = r27.getHeight()
            r33 = 1
            r32 = r1
            android.graphics.Bitmap r2 = org.telegram.messenger.Bitmaps.createBitmap(r27, r28, r29, r30, r31, r32, r33)
            goto L_0x04d8
        L_0x0505:
            r12 = r27
            r14 = 0
        L_0x0508:
            boolean r0 = r7.isCurrentVideo
            if (r0 != 0) goto L_0x0579
            boolean r0 = r44.hasAnimatedMediaEntities()
            if (r0 == 0) goto L_0x0544
            android.graphics.Bitmap$CompressFormat r28 = android.graphics.Bitmap.CompressFormat.JPEG
            int r0 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r0 = (float) r0
            int r1 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r1 = (float) r1
            r31 = 87
            r32 = 0
            r33 = 101(0x65, float:1.42E-43)
            r34 = 101(0x65, float:1.42E-43)
            r27 = r12
            r29 = r0
            r30 = r1
            org.telegram.tgnet.TLRPC$PhotoSize r0 = org.telegram.messenger.ImageLoader.scaleAndSaveImage((android.graphics.Bitmap) r27, (android.graphics.Bitmap.CompressFormat) r28, (float) r29, (float) r30, (int) r31, (boolean) r32, (int) r33, (int) r34)
            int r1 = r7.currentAccount
            org.telegram.messenger.FileLoader r1 = org.telegram.messenger.FileLoader.getInstance(r1)
            r2 = 1
            java.io.File r0 = r1.getPathToAttach(r0, r2)
            java.lang.String r0 = r0.toString()
            r7.currentImagePath = r0
            r9.imagePath = r0
            goto L_0x0579
        L_0x0544:
            java.io.File r0 = new java.io.File
            r1 = 4
            java.io.File r2 = org.telegram.messenger.FileLoader.getDirectory(r1)
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            int r3 = org.telegram.messenger.SharedConfig.getLastLocalId()
            r1.append(r3)
            r1.append(r11)
            java.lang.String r1 = r1.toString()
            r0.<init>(r2, r1)
            java.lang.String r1 = r0.getAbsolutePath()
            r9.imagePath = r1
            r2 = 0
            int r0 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r5 = (float) r0
            r15 = 0
            r0 = r44
            r3 = r12
            r4 = r8
            r43 = r6
            r6 = r15
            r0.mergeImages(r1, r2, r3, r4, r5, r6)
            goto L_0x057b
        L_0x0579:
            r43 = r6
        L_0x057b:
            java.io.File r0 = new java.io.File
            r1 = 4
            java.io.File r2 = org.telegram.messenger.FileLoader.getDirectory(r1)
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            int r3 = org.telegram.messenger.SharedConfig.getLastLocalId()
            r1.append(r3)
            r1.append(r11)
            java.lang.String r1 = r1.toString()
            r0.<init>(r2, r1)
            java.lang.String r1 = r0.getAbsolutePath()
            r9.thumbPath = r1
            r2 = 0
            r5 = 1140850688(0x44000000, float:512.0)
            r6 = 0
            r0 = r44
            r3 = r12
            r4 = r8
            r0.mergeImages(r1, r2, r3, r4, r5, r6)
            if (r10 == 0) goto L_0x05b0
            if (r8 == 0) goto L_0x05b0
            r8.recycle()
        L_0x05b0:
            if (r14 == 0) goto L_0x05b7
            if (r12 == 0) goto L_0x05b7
            r12.recycle()
        L_0x05b7:
            int r0 = r7.sendPhotoType
            r1 = 1
            if (r0 != r1) goto L_0x0740
            org.telegram.ui.Components.VideoPlayer r0 = r7.videoPlayer
            if (r0 == 0) goto L_0x0740
            boolean r0 = r7.isCurrentVideo
            if (r0 == 0) goto L_0x0740
            int r0 = r7.getAnimatedMediaEntitiesCount(r13)
            if (r0 != r1) goto L_0x0740
            org.telegram.ui.Components.VideoTimelinePlayView r0 = r7.videoTimelineView
            float r0 = r0.getLeftProgress()
            r1 = 0
            int r0 = (r0 > r1 ? 1 : (r0 == r1 ? 0 : -1))
            if (r0 > 0) goto L_0x0740
            org.telegram.ui.Components.VideoTimelinePlayView r0 = r7.videoTimelineView
            float r0 = r0.getRightProgress()
            r1 = 1065353216(0x3var_, float:1.0)
            int r0 = (r0 > r1 ? 1 : (r0 == r1 ? 0 : -1))
            if (r0 < 0) goto L_0x0740
            long r2 = r9.averageDuration
            org.telegram.ui.Components.VideoPlayer r0 = r7.videoPlayer
            long r4 = r0.getDuration()
        L_0x05e9:
            r10 = 3000(0xbb8, double:1.482E-320)
            int r0 = (r2 > r10 ? 1 : (r2 == r10 ? 0 : -1))
            if (r0 >= 0) goto L_0x05f7
            int r0 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1))
            if (r0 >= 0) goto L_0x05f7
            long r10 = r9.averageDuration
            long r2 = r2 + r10
            goto L_0x05e9
        L_0x05f7:
            org.telegram.ui.Components.VideoTimelinePlayView r0 = r7.videoTimelineView
            float r2 = (float) r2
            float r3 = (float) r4
            float r2 = r2 / r3
            float r1 = java.lang.Math.min(r1, r2)
            r0.setRightProgress(r1)
            goto L_0x0740
        L_0x0605:
            r12 = r14
            goto L_0x0742
        L_0x0608:
            r26 = r5
            r43 = r6
            r11 = r14
            org.telegram.ui.PhotoViewer$EditState r0 = r7.editState
            org.telegram.messenger.MediaController$CropState r2 = r9.cropState
            r0.cropState = r2
            java.lang.String r3 = r9.croppedPaintPath
            r0.croppedPaintPath = r3
            java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity> r3 = r9.croppedMediaEntities
            r0.croppedMediaEntities = r3
            if (r2 == 0) goto L_0x0740
            r12 = r43
            r0 = 1
            android.graphics.Bitmap r8 = r7.createCroppedBitmap(r12, r2, r1, r0)
            java.lang.String r0 = r9.paintPath
            if (r0 == 0) goto L_0x06db
            java.lang.String r0 = r9.fullPaintPath
            android.graphics.Bitmap r10 = android.graphics.BitmapFactory.decodeFile(r0)
            org.telegram.messenger.MediaController$CropState r0 = r9.cropState
            r1 = 0
            android.graphics.Bitmap r14 = r7.createCroppedBitmap(r10, r0, r1, r13)
            boolean r0 = r7.isCurrentVideo
            if (r0 != 0) goto L_0x06a2
            boolean r0 = r44.hasAnimatedMediaEntities()
            if (r0 == 0) goto L_0x0671
            android.graphics.Bitmap$CompressFormat r28 = android.graphics.Bitmap.CompressFormat.JPEG
            int r0 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r0 = (float) r0
            int r1 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r1 = (float) r1
            r31 = 87
            r32 = 0
            r33 = 101(0x65, float:1.42E-43)
            r34 = 101(0x65, float:1.42E-43)
            r27 = r8
            r29 = r0
            r30 = r1
            org.telegram.tgnet.TLRPC$PhotoSize r0 = org.telegram.messenger.ImageLoader.scaleAndSaveImage((android.graphics.Bitmap) r27, (android.graphics.Bitmap.CompressFormat) r28, (float) r29, (float) r30, (int) r31, (boolean) r32, (int) r33, (int) r34)
            int r1 = r7.currentAccount
            org.telegram.messenger.FileLoader r1 = org.telegram.messenger.FileLoader.getInstance(r1)
            r2 = 1
            java.io.File r0 = r1.getPathToAttach(r0, r2)
            java.lang.String r0 = r0.toString()
            r7.currentImagePath = r0
            r9.imagePath = r0
            goto L_0x06a2
        L_0x0671:
            java.io.File r0 = new java.io.File
            r1 = 4
            java.io.File r2 = org.telegram.messenger.FileLoader.getDirectory(r1)
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            int r3 = org.telegram.messenger.SharedConfig.getLastLocalId()
            r1.append(r3)
            r1.append(r11)
            java.lang.String r1 = r1.toString()
            r0.<init>(r2, r1)
            java.lang.String r1 = r0.getAbsolutePath()
            r9.imagePath = r1
            r2 = 0
            int r0 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r5 = (float) r0
            r6 = 1
            r0 = r44
            r3 = r14
            r4 = r8
            r0.mergeImages(r1, r2, r3, r4, r5, r6)
        L_0x06a2:
            java.io.File r0 = new java.io.File
            r1 = 4
            java.io.File r2 = org.telegram.messenger.FileLoader.getDirectory(r1)
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            int r3 = org.telegram.messenger.SharedConfig.getLastLocalId()
            r1.append(r3)
            r1.append(r11)
            java.lang.String r1 = r1.toString()
            r0.<init>(r2, r1)
            java.lang.String r1 = r0.getAbsolutePath()
            r9.thumbPath = r1
            r2 = 0
            r5 = 1140850688(0x44000000, float:512.0)
            r6 = 1
            r0 = r44
            r3 = r14
            r4 = r8
            r0.mergeImages(r1, r2, r3, r4, r5, r6)
            if (r14 == 0) goto L_0x06d5
            r14.recycle()
        L_0x06d5:
            if (r10 == 0) goto L_0x0733
            r10.recycle()
            goto L_0x0733
        L_0x06db:
            boolean r0 = r7.isCurrentVideo
            if (r0 != 0) goto L_0x0710
            android.graphics.Bitmap$CompressFormat r28 = android.graphics.Bitmap.CompressFormat.JPEG
            int r0 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r0 = (float) r0
            int r1 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r1 = (float) r1
            r31 = 87
            r32 = 0
            r33 = 101(0x65, float:1.42E-43)
            r34 = 101(0x65, float:1.42E-43)
            r27 = r8
            r29 = r0
            r30 = r1
            org.telegram.tgnet.TLRPC$PhotoSize r0 = org.telegram.messenger.ImageLoader.scaleAndSaveImage((android.graphics.Bitmap) r27, (android.graphics.Bitmap.CompressFormat) r28, (float) r29, (float) r30, (int) r31, (boolean) r32, (int) r33, (int) r34)
            int r1 = r7.currentAccount
            org.telegram.messenger.FileLoader r1 = org.telegram.messenger.FileLoader.getInstance(r1)
            r2 = 1
            java.io.File r0 = r1.getPathToAttach(r0, r2)
            java.lang.String r0 = r0.toString()
            r7.currentImagePath = r0
            r9.imagePath = r0
        L_0x0710:
            r28 = 1140850688(0x44000000, float:512.0)
            r29 = 1140850688(0x44000000, float:512.0)
            r30 = 70
            r31 = 0
            r32 = 101(0x65, float:1.42E-43)
            r33 = 101(0x65, float:1.42E-43)
            r27 = r8
            org.telegram.tgnet.TLRPC$PhotoSize r0 = org.telegram.messenger.ImageLoader.scaleAndSaveImage((android.graphics.Bitmap) r27, (float) r28, (float) r29, (int) r30, (boolean) r31, (int) r32, (int) r33)
            int r1 = r7.currentAccount
            org.telegram.messenger.FileLoader r1 = org.telegram.messenger.FileLoader.getInstance(r1)
            r2 = 1
            java.io.File r0 = r1.getPathToAttach(r0, r2)
            java.lang.String r0 = r0.toString()
            r9.thumbPath = r0
        L_0x0733:
            int r0 = r7.currentEditMode
            if (r0 != 0) goto L_0x0742
            boolean r0 = r7.isCurrentVideo
            if (r0 == 0) goto L_0x0742
            r12.recycle()
            r6 = r8
            goto L_0x0743
        L_0x0740:
            r12 = r43
        L_0x0742:
            r6 = r12
        L_0x0743:
            org.telegram.messenger.SharedConfig.saveConfig()
            r12 = r26
            if (r12 == 0) goto L_0x0750
            org.telegram.ui.PhotoViewer$EditState r0 = r7.editState
            r0.savedFilterState = r12
            r9.savedFilterState = r12
        L_0x0750:
            int r0 = r7.currentEditMode
            java.lang.String r1 = "dialogFloatingButton"
            r2 = 1
            if (r0 != r2) goto L_0x076a
            r9.isCropped = r2
            android.widget.ImageView r0 = r7.cropItem
            android.graphics.PorterDuffColorFilter r3 = new android.graphics.PorterDuffColorFilter
            int r1 = r7.getThemedColor(r1)
            android.graphics.PorterDuff$Mode r4 = android.graphics.PorterDuff.Mode.MULTIPLY
            r3.<init>(r1, r4)
            r0.setColorFilter(r3)
            goto L_0x0797
        L_0x076a:
            r3 = 2
            if (r0 != r3) goto L_0x0780
            r9.isFiltered = r2
            android.widget.ImageView r0 = r7.tuneItem
            android.graphics.PorterDuffColorFilter r3 = new android.graphics.PorterDuffColorFilter
            int r1 = r7.getThemedColor(r1)
            android.graphics.PorterDuff$Mode r4 = android.graphics.PorterDuff.Mode.MULTIPLY
            r3.<init>(r1, r4)
            r0.setColorFilter(r3)
            goto L_0x0797
        L_0x0780:
            r3 = 3
            if (r0 != r3) goto L_0x0797
            if (r22 == 0) goto L_0x0797
            r9.isPainted = r2
            android.widget.ImageView r0 = r7.paintItem
            android.graphics.PorterDuffColorFilter r2 = new android.graphics.PorterDuffColorFilter
            int r1 = r7.getThemedColor(r1)
            android.graphics.PorterDuff$Mode r3 = android.graphics.PorterDuff.Mode.MULTIPLY
            r2.<init>(r1, r3)
            r0.setColorFilter(r2)
        L_0x0797:
            int r0 = r7.sendPhotoType
            if (r0 == 0) goto L_0x079e
            r1 = 4
            if (r0 != r1) goto L_0x07b4
        L_0x079e:
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r0 = r7.placeProvider
            if (r0 == 0) goto L_0x07b4
            int r1 = r7.currentIndex
            r0.updatePhotoAtIndex(r1)
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r0 = r7.placeProvider
            int r1 = r7.currentIndex
            boolean r0 = r0.isPhotoChecked(r1)
            if (r0 != 0) goto L_0x07b4
            r44.setPhotoChecked()
        L_0x07b4:
            int r0 = r7.currentEditMode
            r1 = 1
            if (r0 != r1) goto L_0x0811
            org.telegram.ui.Components.PhotoCropView r0 = r7.photoCropView
            float r0 = r0.getRectSizeX()
            int r1 = r44.getContainerViewWidth()
            float r1 = (float) r1
            float r0 = r0 / r1
            org.telegram.ui.Components.PhotoCropView r1 = r7.photoCropView
            float r1 = r1.getRectSizeY()
            int r2 = r44.getContainerViewHeight()
            float r2 = (float) r2
            float r1 = r1 / r2
            float r0 = java.lang.Math.max(r0, r1)
            r7.scale = r0
            org.telegram.ui.Components.PhotoCropView r0 = r7.photoCropView
            float r0 = r0.getRectX()
            org.telegram.ui.Components.PhotoCropView r1 = r7.photoCropView
            float r1 = r1.getRectSizeX()
            r2 = 1073741824(0x40000000, float:2.0)
            float r1 = r1 / r2
            float r0 = r0 + r1
            int r1 = r44.getContainerViewWidth()
            r3 = 2
            int r1 = r1 / r3
            float r1 = (float) r1
            float r0 = r0 - r1
            r7.translationX = r0
            org.telegram.ui.Components.PhotoCropView r0 = r7.photoCropView
            float r0 = r0.getRectY()
            org.telegram.ui.Components.PhotoCropView r1 = r7.photoCropView
            float r1 = r1.getRectSizeY()
            float r1 = r1 / r2
            float r0 = r0 + r1
            int r1 = r44.getContainerViewHeight()
            int r1 = r1 / r3
            float r1 = (float) r1
            float r0 = r0 - r1
            r7.translationY = r0
            r0 = 1
            r7.zoomAnimation = r0
            org.telegram.ui.Components.PhotoCropView r1 = r7.photoCropView
            r1.onDisappear()
            goto L_0x0812
        L_0x0811:
            r0 = 1
        L_0x0812:
            org.telegram.messenger.ImageReceiver r1 = r7.centerImage
            r2 = 0
            r1.setParentView(r2)
            r7.ignoreDidSetImage = r0
            boolean r1 = r7.isCurrentVideo
            if (r1 == 0) goto L_0x082d
            int r1 = r7.currentEditMode
            if (r1 == r0) goto L_0x082b
            if (r1 != 0) goto L_0x0829
            int r1 = r7.sendPhotoType
            if (r1 != r0) goto L_0x0829
            goto L_0x082b
        L_0x0829:
            r1 = 0
            goto L_0x0833
        L_0x082b:
            r1 = 1
            goto L_0x0833
        L_0x082d:
            int r0 = r7.currentEditMode
            r1 = 2
            if (r0 != r1) goto L_0x0829
            goto L_0x082b
        L_0x0833:
            if (r1 == 0) goto L_0x0845
            org.telegram.messenger.ImageReceiver r0 = r7.centerImage
            r0.setImageBitmap((android.graphics.Bitmap) r6)
            org.telegram.messenger.ImageReceiver r0 = r7.centerImage
            r1 = 1
            r0.setOrientation(r13, r1)
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r0 = r7.containerView
            r0.requestLayout()
        L_0x0845:
            r7.ignoreDidSetImage = r13
            org.telegram.messenger.ImageReceiver r0 = r7.centerImage
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r1 = r7.containerView
            r0.setParentView(r1)
        L_0x084e:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.applyCurrentEditMode():void");
    }

    private void setPhotoChecked() {
        ChatActivity chatActivity;
        TLRPC$Chat currentChat;
        PhotoViewerProvider photoViewerProvider = this.placeProvider;
        if (photoViewerProvider == null) {
            return;
        }
        if (photoViewerProvider.getSelectedPhotos() == null || this.maxSelectedPhotos <= 0 || this.placeProvider.getSelectedPhotos().size() < this.maxSelectedPhotos || this.placeProvider.isPhotoChecked(this.currentIndex)) {
            int photoChecked = this.placeProvider.setPhotoChecked(this.currentIndex, getCurrentVideoEditedInfo());
            boolean isPhotoChecked = this.placeProvider.isPhotoChecked(this.currentIndex);
            this.checkImageView.setChecked(isPhotoChecked, true);
            if (photoChecked >= 0) {
                if (isPhotoChecked) {
                    this.selectedPhotosAdapter.notifyItemInserted(photoChecked);
                    this.selectedPhotosListView.smoothScrollToPosition(photoChecked);
                } else {
                    this.selectedPhotosAdapter.notifyItemRemoved(photoChecked);
                    if (photoChecked == 0) {
                        this.selectedPhotosAdapter.notifyItemChanged(0);
                    }
                }
            }
            updateSelectedCount();
        } else if (this.allowOrder && (chatActivity = this.parentChatActivity) != null && (currentChat = chatActivity.getCurrentChat()) != null && !ChatObject.hasAdminRights(currentChat) && currentChat.slowmode_enabled) {
            AlertsCreator.createSimpleAlert(this.parentActivity, LocaleController.getString("Slowmode", NUM), LocaleController.getString("SlowmodeSelectSendError", NUM)).show();
        }
    }

    /* access modifiers changed from: private */
    public void updateResetButtonVisibility(boolean z) {
        if (this.resetButton.isClickable() != z) {
            this.resetButton.setClickable(z);
            this.resetButton.setVisibility(0);
            this.resetButton.clearAnimation();
            this.resetButton.animate().alpha(z ? 1.0f : 0.0f).setInterpolator(CubicBezierInterpolator.DEFAULT).setDuration(150).withEndAction(new PhotoViewer$$ExternalSyntheticLambda67(this, z));
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$updateResetButtonVisibility$53(boolean z) {
        if (!z) {
            this.resetButton.setVisibility(8);
        }
    }

    private void createCropView() {
        if (this.photoCropView == null) {
            PhotoCropView photoCropView2 = new PhotoCropView(this.activityContext, this.resourcesProvider);
            this.photoCropView = photoCropView2;
            photoCropView2.setVisibility(8);
            this.photoCropView.onDisappear();
            this.containerView.addView(this.photoCropView, this.containerView.indexOfChild(this.videoTimelineView) - 1, LayoutHelper.createFrame(-1, -1.0f, 51, 0.0f, 0.0f, 0.0f, 48.0f));
            this.photoCropView.setDelegate(new PhotoCropView.PhotoCropViewDelegate() {
                public void onChange(boolean z) {
                    PhotoViewer.this.updateResetButtonVisibility(!z);
                }

                public void onUpdate() {
                    PhotoViewer.this.containerView.invalidate();
                }

                public void onTapUp() {
                    if (PhotoViewer.this.sendPhotoType == 1) {
                        boolean unused = PhotoViewer.this.manuallyPaused = true;
                        PhotoViewer.this.toggleVideoPlayer();
                    }
                }

                public void onVideoThumbClick() {
                    if (PhotoViewer.this.videoPlayer != null) {
                        PhotoViewer.this.videoPlayer.seekTo((long) (((float) PhotoViewer.this.videoPlayer.getDuration()) * PhotoViewer.this.avatarStartProgress));
                        PhotoViewer.this.videoPlayer.pause();
                        PhotoViewer.this.videoTimelineView.setProgress(PhotoViewer.this.avatarStartProgress);
                        PhotoViewer.this.cancelVideoPlayRunnable();
                        AndroidUtilities.runOnUIThread(PhotoViewer.this.videoPlayRunnable = new PhotoViewer$55$$ExternalSyntheticLambda0(this), 860);
                    }
                }

                /* access modifiers changed from: private */
                public /* synthetic */ void lambda$onVideoThumbClick$0() {
                    boolean unused = PhotoViewer.this.manuallyPaused = false;
                    if (PhotoViewer.this.videoPlayer != null) {
                        PhotoViewer.this.videoPlayer.play();
                    }
                    Runnable unused2 = PhotoViewer.this.videoPlayRunnable = null;
                }

                public boolean rotate() {
                    return PhotoViewer.this.cropRotate(-90.0f);
                }

                public boolean mirror() {
                    return PhotoViewer.this.cropMirror();
                }

                public int getVideoThumbX() {
                    return (int) (((float) AndroidUtilities.dp(16.0f)) + (((float) (PhotoViewer.this.videoTimelineView.getMeasuredWidth() - AndroidUtilities.dp(32.0f))) * PhotoViewer.this.avatarStartProgress));
                }
            });
        }
    }

    private void startVideoPlayer() {
        VideoPlayer videoPlayer2;
        if (this.isCurrentVideo && (videoPlayer2 = this.videoPlayer) != null && !videoPlayer2.isPlaying()) {
            if (!this.muteVideo || this.sendPhotoType == 1) {
                this.videoPlayer.setVolume(0.0f);
            }
            this.manuallyPaused = false;
            toggleVideoPlayer();
        }
    }

    private void detectFaces() {
        if (this.centerImage.getAnimation() == null && !this.imagesArrLocals.isEmpty() && this.sendPhotoType != 1) {
            String imageKey = this.centerImage.getImageKey();
            String str = this.currentImageFaceKey;
            if (str == null || !str.equals(imageKey)) {
                this.currentImageHasFace = 0;
                detectFaces(imageKey, this.centerImage.getBitmapSafe(), this.centerImage.getOrientation());
            }
        }
    }

    private void detectFaces(String str, ImageReceiver.BitmapHolder bitmapHolder, int i) {
        if (str != null && bitmapHolder != null && bitmapHolder.bitmap != null) {
            Utilities.globalQueue.postRunnable(new PhotoViewer$$ExternalSyntheticLambda61(this, bitmapHolder, i, str));
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$detectFaces$56(ImageReceiver.BitmapHolder bitmapHolder, int i, String str) {
        FaceDetector faceDetector = null;
        try {
            boolean z = false;
            faceDetector = new FaceDetector.Builder(ApplicationLoader.applicationContext).setMode(0).setLandmarkType(0).setTrackingEnabled(false).build();
            if (faceDetector.isOperational()) {
                SparseArray<Face> detect = faceDetector.detect(new Frame.Builder().setBitmap(bitmapHolder.bitmap).setRotation(i).build());
                if (!(detect == null || detect.size() == 0)) {
                    z = true;
                }
                AndroidUtilities.runOnUIThread(new PhotoViewer$$ExternalSyntheticLambda60(this, str, z));
            } else {
                if (BuildVars.LOGS_ENABLED) {
                    FileLog.e("face detection is not operational");
                }
                AndroidUtilities.runOnUIThread(new PhotoViewer$$ExternalSyntheticLambda62(this, bitmapHolder, str));
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (faceDetector == null) {
                return;
            }
        } catch (Throwable th) {
            if (faceDetector != null) {
                faceDetector.release();
            }
            throw th;
        }
        faceDetector.release();
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$detectFaces$54(String str, boolean z) {
        if (str.equals(this.centerImage.getImageKey())) {
            this.currentImageHasFace = z ? 1 : 0;
            this.currentImageFaceKey = str;
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$detectFaces$55(ImageReceiver.BitmapHolder bitmapHolder, String str) {
        bitmapHolder.release();
        if (str.equals(this.centerImage.getImageKey())) {
            this.currentImageHasFace = 2;
            this.currentImageFaceKey = str;
        }
    }

    private void switchToEditMode(int i) {
        int i2;
        int i3;
        MediaController.SavedFilterState savedFilterState;
        int i4;
        String str;
        Bitmap bitmap;
        Bitmap bitmap2;
        int i5;
        MediaController.CropState cropState;
        int i6;
        int i7;
        int i8;
        float f;
        float f2;
        int i9;
        MediaController.CropState cropState2;
        int i10;
        int i11;
        final int i12 = i;
        if (this.currentEditMode == i12) {
            return;
        }
        if ((!this.isCurrentVideo || this.photoProgressViews[0].backgroundState == 3 || this.isCurrentVideo || (this.centerImage.getBitmap() != null && this.photoProgressViews[0].backgroundState == -1)) && this.changeModeAnimation == null && this.imageMoveAnimation == null && this.captionEditText.getTag() == null) {
            this.windowView.setClipChildren(i12 == 2);
            int i13 = NUM;
            int color = this.navigationBar.getBackground() instanceof ColorDrawable ? ((ColorDrawable) this.navigationBar.getBackground()).getColor() : NUM;
            if (i12 == 1) {
                i13 = -NUM;
            } else if (i12 == 3) {
                i13 = -16777216;
            }
            this.navigationBar.setVisibility(i12 != 2 ? 0 : 4);
            this.switchingToMode = i12;
            if (i12 == 0) {
                if (this.centerImage.getBitmap() != null) {
                    int bitmapWidth = this.centerImage.getBitmapWidth();
                    int bitmapHeight = this.centerImage.getBitmapHeight();
                    int i14 = this.currentEditMode;
                    if (i14 == 3) {
                        if (this.sendPhotoType != 1) {
                            MediaController.CropState cropState3 = this.editState.cropState;
                            if (cropState3 != null) {
                                int i15 = cropState3.transformRotation;
                                if (i15 == 90 || i15 == 270) {
                                    int i16 = bitmapHeight;
                                    bitmapHeight = bitmapWidth;
                                    bitmapWidth = i16;
                                }
                                bitmapWidth = (int) (((float) bitmapWidth) * cropState3.cropPw);
                                i11 = (int) (((float) bitmapHeight) * cropState3.cropPh);
                                float f3 = (float) bitmapWidth;
                                float f4 = (float) i11;
                                f = Math.min(((float) getContainerViewWidth(0)) / f3, ((float) getContainerViewHeight(0)) / f4);
                                f2 = Math.min(((float) getContainerViewWidth(3)) / f3, ((float) getContainerViewHeight(3)) / f4);
                            }
                        } else if (this.cropTransform.getOrientation() == 90 || this.cropTransform.getOrientation() == 270) {
                            i11 = bitmapWidth;
                            bitmapWidth = bitmapHeight;
                            float var_ = (float) bitmapWidth;
                            float var_ = (float) i11;
                            f = Math.min(((float) getContainerViewWidth(0)) / var_, ((float) getContainerViewHeight(0)) / var_);
                            f2 = Math.min(((float) getContainerViewWidth(3)) / var_, ((float) getContainerViewHeight(3)) / var_);
                        }
                        i11 = bitmapHeight;
                        float var_ = (float) bitmapWidth;
                        float var_ = (float) i11;
                        f = Math.min(((float) getContainerViewWidth(0)) / var_, ((float) getContainerViewHeight(0)) / var_);
                        f2 = Math.min(((float) getContainerViewWidth(3)) / var_, ((float) getContainerViewHeight(3)) / var_);
                    } else {
                        if (i14 != 1 && (cropState2 = this.editState.cropState) != null && ((i10 = cropState2.transformRotation) == 90 || i10 == 270)) {
                            float f5 = (float) bitmapHeight;
                            float containerViewWidth = ((float) getContainerViewWidth()) / f5;
                            float f6 = (float) bitmapWidth;
                            if (containerViewWidth * f6 > ((float) getContainerViewHeight())) {
                                containerViewWidth = ((float) getContainerViewHeight()) / f6;
                            }
                            this.scale = 1.0f / (containerViewWidth / Math.min(((float) getContainerViewWidth()) / f6, ((float) getContainerViewHeight()) / f5));
                        } else if (this.sendPhotoType == 1 && (this.cropTransform.getOrientation() == 90 || this.cropTransform.getOrientation() == 270)) {
                            float f7 = (float) bitmapHeight;
                            float containerViewWidth2 = ((float) getContainerViewWidth()) / f7;
                            float f8 = (float) bitmapWidth;
                            if (containerViewWidth2 * f8 > ((float) getContainerViewHeight())) {
                                containerViewWidth2 = ((float) getContainerViewHeight()) / f8;
                            }
                            this.scale = 1.0f / ((((this.cropTransform.getScale() / this.cropTransform.getTrueCropScale()) * containerViewWidth2) / Math.min(((float) getContainerViewWidth()) / f8, ((float) getContainerViewHeight()) / f7)) / this.cropTransform.getMinScale());
                        }
                        MediaController.CropState cropState4 = this.editState.cropState;
                        if (cropState4 != null) {
                            int i17 = cropState4.transformRotation;
                            if (i17 == 90 || i17 == 270) {
                                int i18 = bitmapHeight;
                                bitmapHeight = bitmapWidth;
                                bitmapWidth = i18;
                            }
                            bitmapWidth = (int) (((float) bitmapWidth) * cropState4.cropPw);
                            i9 = (int) (((float) bitmapHeight) * cropState4.cropPh);
                        } else if (this.sendPhotoType == 1 && (this.cropTransform.getOrientation() == 90 || this.cropTransform.getOrientation() == 270)) {
                            i9 = bitmapWidth;
                            bitmapWidth = bitmapHeight;
                        } else {
                            i9 = bitmapHeight;
                        }
                        float f9 = (float) bitmapWidth;
                        float var_ = (float) i9;
                        float min = Math.min(((float) getContainerViewWidth()) / f9, ((float) getContainerViewHeight()) / var_);
                        if (this.sendPhotoType == 1) {
                            f = getCropFillScale(this.cropTransform.getOrientation() == 90 || this.cropTransform.getOrientation() == 270);
                        } else {
                            f = Math.min(((float) getContainerViewWidth(0)) / f9, ((float) getContainerViewHeight(0)) / var_);
                        }
                        f2 = min;
                    }
                    this.animateToScale = f / f2;
                    this.animateToX = 0.0f;
                    this.translationX = (float) ((getLeftInset() / 2) - (getRightInset() / 2));
                    if (this.sendPhotoType == 1) {
                        int i19 = this.currentEditMode;
                        if (i19 == 2) {
                            this.animateToY = (float) AndroidUtilities.dp(36.0f);
                        } else if (i19 == 3) {
                            this.animateToY = (float) (-AndroidUtilities.dp(12.0f));
                        }
                    } else {
                        int i20 = this.currentEditMode;
                        if (i20 == 1) {
                            this.animateToY = (float) AndroidUtilities.dp(56.0f);
                        } else if (i20 == 2) {
                            this.animateToY = (float) AndroidUtilities.dp(93.0f);
                        } else if (i20 == 3) {
                            this.animateToY = (float) AndroidUtilities.dp(44.0f);
                        }
                        if (isStatusBarVisible()) {
                            this.animateToY -= (float) (AndroidUtilities.statusBarHeight / 2);
                        }
                    }
                    this.animationStartTime = System.currentTimeMillis();
                    this.zoomAnimation = true;
                }
                this.padImageForHorizontalInsets = false;
                this.imageMoveAnimation = new AnimatorSet();
                ArrayList arrayList = new ArrayList(4);
                int i21 = this.currentEditMode;
                if (i21 == 1) {
                    arrayList.add(ObjectAnimator.ofFloat(this.editorDoneLayout, View.TRANSLATION_Y, new float[]{(float) AndroidUtilities.dp(48.0f)}));
                    i8 = 2;
                    arrayList.add(ObjectAnimator.ofFloat(this, AnimationProperties.PHOTO_VIEWER_ANIMATION_VALUE, new float[]{0.0f, 1.0f}));
                    arrayList.add(ObjectAnimator.ofFloat(this.photoCropView, View.ALPHA, new float[]{0.0f}));
                    ValueAnimator ofFloat = ValueAnimator.ofFloat(new float[]{0.0f, 1.0f});
                    ofFloat.addUpdateListener(new PhotoViewer$$ExternalSyntheticLambda1(this));
                    arrayList.add(ofFloat);
                } else {
                    if (i21 == 2) {
                        this.photoFilterView.shutdown();
                        arrayList.add(ObjectAnimator.ofFloat(this.photoFilterView.getToolsView(), View.TRANSLATION_Y, new float[]{(float) AndroidUtilities.dp(186.0f)}));
                        arrayList.add(ObjectAnimator.ofFloat(this.photoFilterView.getCurveControl(), View.ALPHA, new float[]{0.0f}));
                        arrayList.add(ObjectAnimator.ofFloat(this.photoFilterView.getBlurControl(), View.ALPHA, new float[]{0.0f}));
                        arrayList.add(ObjectAnimator.ofFloat(this, AnimationProperties.PHOTO_VIEWER_ANIMATION_VALUE, new float[]{0.0f, 1.0f}));
                    } else if (i21 == 3) {
                        this.paintingOverlay.showAll();
                        this.containerView.invalidate();
                        this.photoPaintView.shutdown();
                        arrayList.add(ObjectAnimator.ofFloat(this.photoPaintView.getToolsView(), View.TRANSLATION_Y, new float[]{(float) AndroidUtilities.dp(126.0f)}));
                        arrayList.add(ObjectAnimator.ofFloat(this.photoPaintView.getColorPickerBackground(), View.TRANSLATION_Y, new float[]{(float) AndroidUtilities.dp(126.0f)}));
                        arrayList.add(ObjectAnimator.ofFloat(this.photoPaintView.getColorPicker(), View.TRANSLATION_Y, new float[]{(float) AndroidUtilities.dp(126.0f)}));
                        i8 = 2;
                        arrayList.add(ObjectAnimator.ofFloat(this, AnimationProperties.PHOTO_VIEWER_ANIMATION_VALUE, new float[]{0.0f, 1.0f}));
                    }
                    i8 = 2;
                }
                View view = this.navigationBar;
                ArgbEvaluator argbEvaluator = new ArgbEvaluator();
                Object[] objArr = new Object[i8];
                objArr[0] = Integer.valueOf(color);
                objArr[1] = Integer.valueOf(i13);
                arrayList.add(ObjectAnimator.ofObject(view, "backgroundColor", argbEvaluator, objArr));
                this.imageMoveAnimation.playTogether(arrayList);
                this.imageMoveAnimation.setDuration(200);
                this.imageMoveAnimation.addListener(new AnimatorListenerAdapter() {
                    public void onAnimationEnd(Animator animator) {
                        if (PhotoViewer.this.currentEditMode == 1) {
                            PhotoViewer.this.photoCropView.onDisappear();
                            PhotoViewer.this.photoCropView.onHide();
                            PhotoViewer.this.editorDoneLayout.setVisibility(8);
                            PhotoViewer.this.photoCropView.setVisibility(8);
                            PhotoViewer.this.photoCropView.cropView.areaView.setRotationScaleTranslation(0.0f, 1.0f, 0.0f, 0.0f);
                        } else if (PhotoViewer.this.currentEditMode == 2) {
                            try {
                                PhotoViewer.this.containerView.removeView(PhotoViewer.this.photoFilterView);
                            } catch (Exception e) {
                                FileLog.e((Throwable) e);
                            }
                            PhotoFilterView unused = PhotoViewer.this.photoFilterView = null;
                        } else if (PhotoViewer.this.currentEditMode == 3) {
                            try {
                                PhotoViewer.this.containerView.removeView(PhotoViewer.this.photoPaintView);
                            } catch (Exception e2) {
                                FileLog.e((Throwable) e2);
                            }
                            PhotoPaintView unused2 = PhotoViewer.this.photoPaintView = null;
                        }
                        AnimatorSet unused3 = PhotoViewer.this.imageMoveAnimation = null;
                        int unused4 = PhotoViewer.this.currentEditMode = i12;
                        int unused5 = PhotoViewer.this.switchingToMode = -1;
                        boolean unused6 = PhotoViewer.this.applying = false;
                        if (PhotoViewer.this.sendPhotoType == 1) {
                            PhotoViewer.this.photoCropView.setVisibility(0);
                        }
                        float unused7 = PhotoViewer.this.animateToScale = 1.0f;
                        float unused8 = PhotoViewer.this.animateToX = 0.0f;
                        float unused9 = PhotoViewer.this.animateToY = 0.0f;
                        float unused10 = PhotoViewer.this.scale = 1.0f;
                        PhotoViewer photoViewer = PhotoViewer.this;
                        photoViewer.updateMinMax(photoViewer.scale);
                        PhotoViewer.this.containerView.invalidate();
                        if (PhotoViewer.this.savedState != null) {
                            PhotoViewer.this.savedState.restore();
                            SavedState unused11 = PhotoViewer.this.savedState = null;
                            ActionBarToggleParams enableStatusBarAnimation = new ActionBarToggleParams().enableStatusBarAnimation(false);
                            PhotoViewer.this.toggleActionBar(false, false, enableStatusBarAnimation);
                            PhotoViewer.this.toggleActionBar(true, true, enableStatusBarAnimation);
                            return;
                        }
                        AnimatorSet animatorSet = new AnimatorSet();
                        ArrayList arrayList = new ArrayList();
                        arrayList.add(ObjectAnimator.ofFloat(PhotoViewer.this.pickerView, View.TRANSLATION_Y, new float[]{0.0f}));
                        arrayList.add(ObjectAnimator.ofFloat(PhotoViewer.this.pickerViewSendButton, View.TRANSLATION_Y, new float[]{0.0f}));
                        if (PhotoViewer.this.sendPhotoType != 1) {
                            arrayList.add(ObjectAnimator.ofFloat(PhotoViewer.this.actionBar, View.TRANSLATION_Y, new float[]{0.0f}));
                        }
                        if (PhotoViewer.this.needCaptionLayout) {
                            arrayList.add(ObjectAnimator.ofFloat(PhotoViewer.this.captionTextViewSwitcher, View.TRANSLATION_Y, new float[]{0.0f}));
                        }
                        if (PhotoViewer.this.sendPhotoType == 0 || PhotoViewer.this.sendPhotoType == 4) {
                            arrayList.add(ObjectAnimator.ofFloat(PhotoViewer.this.checkImageView, View.ALPHA, new float[]{1.0f}));
                            arrayList.add(ObjectAnimator.ofFloat(PhotoViewer.this.photosCounterView, View.ALPHA, new float[]{1.0f}));
                        } else if (PhotoViewer.this.sendPhotoType == 1) {
                            arrayList.add(ObjectAnimator.ofFloat(PhotoViewer.this.photoCropView, View.ALPHA, new float[]{1.0f}));
                        }
                        if (PhotoViewer.this.cameraItem.getTag() != null) {
                            PhotoViewer.this.cameraItem.setVisibility(0);
                            arrayList.add(ObjectAnimator.ofFloat(PhotoViewer.this.cameraItem, View.ALPHA, new float[]{1.0f}));
                        }
                        if (PhotoViewer.this.muteItem.getTag() != null) {
                            PhotoViewer.this.muteItem.setVisibility(0);
                            arrayList.add(ObjectAnimator.ofFloat(PhotoViewer.this.muteItem, View.ALPHA, new float[]{1.0f}));
                        }
                        if (PhotoViewer.this.navigationBar != null) {
                            PhotoViewer.this.navigationBar.setVisibility(0);
                            arrayList.add(ObjectAnimator.ofFloat(PhotoViewer.this.navigationBar, View.ALPHA, new float[]{1.0f}));
                        }
                        animatorSet.playTogether(arrayList);
                        animatorSet.setDuration(200);
                        animatorSet.addListener(new AnimatorListenerAdapter() {
                            public void onAnimationStart(Animator animator) {
                                PhotoViewer.this.pickerView.setVisibility(0);
                                PhotoViewer.this.pickerViewSendButton.setVisibility(0);
                                PhotoViewer.this.actionBar.setVisibility(0);
                                if (PhotoViewer.this.needCaptionLayout) {
                                    PhotoViewer.this.captionTextViewSwitcher.setVisibility(PhotoViewer.this.captionTextViewSwitcher.getTag() != null ? 0 : 4);
                                }
                                if (PhotoViewer.this.sendPhotoType == 0 || PhotoViewer.this.sendPhotoType == 4 || ((PhotoViewer.this.sendPhotoType == 2 || PhotoViewer.this.sendPhotoType == 5) && PhotoViewer.this.imagesArrLocals.size() > 1)) {
                                    PhotoViewer.this.checkImageView.setVisibility(0);
                                    PhotoViewer.this.photosCounterView.setVisibility(0);
                                }
                            }
                        });
                        animatorSet.start();
                    }
                });
                this.imageMoveAnimation.start();
                return;
            }
            float var_ = 154.0f;
            if (i12 == 1) {
                startVideoPlayer();
                createCropView();
                this.previousHasTransform = this.cropTransform.hasViewTransform();
                this.previousCropPx = this.cropTransform.getCropPx();
                this.previousCropPy = this.cropTransform.getCropPy();
                this.previousCropScale = this.cropTransform.getScale();
                this.previousCropRotation = this.cropTransform.getRotation();
                this.previousCropOrientation = this.cropTransform.getOrientation();
                this.previousCropPw = this.cropTransform.getCropPw();
                this.previousCropPh = this.cropTransform.getCropPh();
                this.previousCropMirrored = this.cropTransform.isMirrored();
                this.photoCropView.onAppear();
                this.editorDoneLayout.doneButton.setText(LocaleController.getString("Crop", NUM));
                this.editorDoneLayout.doneButton.setTextColor(getThemedColor("dialogFloatingButton"));
                this.changeModeAnimation = new AnimatorSet();
                ArrayList arrayList2 = new ArrayList();
                FrameLayout frameLayout = this.pickerView;
                Property property = View.TRANSLATION_Y;
                float[] fArr = new float[2];
                fArr[0] = 0.0f;
                fArr[1] = (float) AndroidUtilities.dp(this.isCurrentVideo ? 154.0f : 96.0f);
                arrayList2.add(ObjectAnimator.ofFloat(frameLayout, property, fArr));
                ImageView imageView = this.pickerViewSendButton;
                Property property2 = View.TRANSLATION_Y;
                float[] fArr2 = new float[2];
                fArr2[0] = 0.0f;
                fArr2[1] = (float) AndroidUtilities.dp(this.isCurrentVideo ? 154.0f : 96.0f);
                arrayList2.add(ObjectAnimator.ofFloat(imageView, property2, fArr2));
                ActionBar actionBar2 = this.actionBar;
                arrayList2.add(ObjectAnimator.ofFloat(actionBar2, View.TRANSLATION_Y, new float[]{0.0f, (float) (-actionBar2.getHeight())}));
                arrayList2.add(ObjectAnimator.ofObject(this.navigationBar, "backgroundColor", new ArgbEvaluator(), new Object[]{Integer.valueOf(color), Integer.valueOf(i13)}));
                if (this.needCaptionLayout) {
                    CaptionTextViewSwitcher captionTextViewSwitcher2 = this.captionTextViewSwitcher;
                    Property property3 = View.TRANSLATION_Y;
                    float[] fArr3 = new float[2];
                    fArr3[0] = 0.0f;
                    if (!this.isCurrentVideo) {
                        var_ = 96.0f;
                    }
                    fArr3[1] = (float) AndroidUtilities.dp(var_);
                    arrayList2.add(ObjectAnimator.ofFloat(captionTextViewSwitcher2, property3, fArr3));
                }
                int i22 = this.sendPhotoType;
                if (i22 == 0 || i22 == 4) {
                    i7 = 2;
                    arrayList2.add(ObjectAnimator.ofFloat(this.checkImageView, View.ALPHA, new float[]{1.0f, 0.0f}));
                    arrayList2.add(ObjectAnimator.ofFloat(this.photosCounterView, View.ALPHA, new float[]{1.0f, 0.0f}));
                } else {
                    i7 = 2;
                }
                if (this.selectedPhotosListView.getVisibility() == 0) {
                    float[] fArr4 = new float[i7];
                    // fill-array-data instruction
                    fArr4[0] = NUM;
                    fArr4[1] = 0;
                    arrayList2.add(ObjectAnimator.ofFloat(this.selectedPhotosListView, View.ALPHA, fArr4));
                }
                if (this.cameraItem.getTag() != null) {
                    float[] fArr5 = new float[i7];
                    // fill-array-data instruction
                    fArr5[0] = NUM;
                    fArr5[1] = 0;
                    arrayList2.add(ObjectAnimator.ofFloat(this.cameraItem, View.ALPHA, fArr5));
                }
                if (this.muteItem.getTag() != null) {
                    float[] fArr6 = new float[i7];
                    // fill-array-data instruction
                    fArr6[0] = NUM;
                    fArr6[1] = 0;
                    arrayList2.add(ObjectAnimator.ofFloat(this.muteItem, View.ALPHA, fArr6));
                }
                View view2 = this.navigationBar;
                if (view2 != null) {
                    arrayList2.add(ObjectAnimator.ofFloat(view2, View.ALPHA, new float[]{1.0f}));
                }
                this.changeModeAnimation.playTogether(arrayList2);
                this.changeModeAnimation.setDuration(200);
                this.changeModeAnimation.addListener(new AnimatorListenerAdapter() {
                    /* JADX WARNING: type inference failed for: r1v66, types: [android.view.TextureView] */
                    /* JADX WARNING: Multi-variable type inference failed */
                    /* Code decompiled incorrectly, please refer to instructions dump. */
                    public void onAnimationEnd(android.animation.Animator r20) {
                        /*
                            r19 = this;
                            r0 = r19
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            r2 = 0
                            android.animation.AnimatorSet unused = r1.changeModeAnimation = r2
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            android.widget.FrameLayout r1 = r1.pickerView
                            r3 = 8
                            r1.setVisibility(r3)
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            android.widget.ImageView r1 = r1.pickerViewSendButton
                            r1.setVisibility(r3)
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            android.widget.ImageView r1 = r1.cameraItem
                            r1.setVisibility(r3)
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            android.widget.ImageView r1 = r1.muteItem
                            r1.setVisibility(r3)
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            org.telegram.ui.PhotoViewer$SelectedPhotosListView r1 = r1.selectedPhotosListView
                            r1.setVisibility(r3)
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            org.telegram.ui.PhotoViewer$SelectedPhotosListView r1 = r1.selectedPhotosListView
                            r4 = 0
                            r1.setAlpha(r4)
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            org.telegram.ui.PhotoViewer$SelectedPhotosListView r1 = r1.selectedPhotosListView
                            r5 = 1092616192(0x41200000, float:10.0)
                            int r5 = org.telegram.messenger.AndroidUtilities.dp(r5)
                            int r5 = -r5
                            float r5 = (float) r5
                            r1.setTranslationY(r5)
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            org.telegram.ui.PhotoViewer$CounterView r1 = r1.photosCounterView
                            r1.setRotationX(r4)
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            org.telegram.ui.PhotoViewer$SelectedPhotosListView r1 = r1.selectedPhotosListView
                            r5 = 0
                            r1.setEnabled(r5)
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            boolean unused = r1.isPhotosListViewVisible = r5
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            boolean r1 = r1.needCaptionLayout
                            r6 = 4
                            if (r1 == 0) goto L_0x007c
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            org.telegram.ui.PhotoViewer$CaptionTextViewSwitcher r1 = r1.captionTextViewSwitcher
                            r1.setVisibility(r6)
                        L_0x007c:
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            int r1 = r1.sendPhotoType
                            r7 = 2
                            r8 = 1
                            if (r1 == 0) goto L_0x00ab
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            int r1 = r1.sendPhotoType
                            if (r1 == r6) goto L_0x00ab
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            int r1 = r1.sendPhotoType
                            if (r1 == r7) goto L_0x009f
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            int r1 = r1.sendPhotoType
                            r6 = 5
                            if (r1 != r6) goto L_0x00bd
                        L_0x009f:
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            java.util.ArrayList r1 = r1.imagesArrLocals
                            int r1 = r1.size()
                            if (r1 <= r8) goto L_0x00bd
                        L_0x00ab:
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            org.telegram.ui.Components.CheckBox r1 = r1.checkImageView
                            r1.setVisibility(r3)
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            org.telegram.ui.PhotoViewer$CounterView r1 = r1.photosCounterView
                            r1.setVisibility(r3)
                        L_0x00bd:
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            org.telegram.messenger.ImageReceiver r1 = r1.centerImage
                            android.graphics.Bitmap r10 = r1.getBitmap()
                            if (r10 != 0) goto L_0x00d1
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            boolean r1 = r1.isCurrentVideo
                            if (r1 == 0) goto L_0x0209
                        L_0x00d1:
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            org.telegram.ui.Components.PhotoCropView r9 = r1.photoCropView
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            org.telegram.messenger.ImageReceiver r1 = r1.centerImage
                            int r11 = r1.getOrientation()
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            int r1 = r1.sendPhotoType
                            if (r1 == r8) goto L_0x00eb
                            r12 = 1
                            goto L_0x00ec
                        L_0x00eb:
                            r12 = 0
                        L_0x00ec:
                            r13 = 0
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            org.telegram.ui.Components.PaintingOverlay r14 = r1.paintingOverlay
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            org.telegram.ui.Components.Crop.CropTransform r15 = r1.cropTransform
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            boolean r1 = r1.isCurrentVideo
                            if (r1 == 0) goto L_0x010a
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            android.view.TextureView r1 = r1.videoTextureView
                            r2 = r1
                            org.telegram.ui.Components.VideoEditTextureView r2 = (org.telegram.ui.Components.VideoEditTextureView) r2
                        L_0x010a:
                            r16 = r2
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            org.telegram.ui.PhotoViewer$EditState r1 = r1.editState
                            org.telegram.messenger.MediaController$CropState r1 = r1.cropState
                            r17 = r1
                            r9.setBitmap(r10, r11, r12, r13, r14, r15, r16, r17)
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            org.telegram.ui.Components.PhotoCropView r1 = r1.photoCropView
                            r1.onDisappear()
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            org.telegram.messenger.ImageReceiver r1 = r1.centerImage
                            int r1 = r1.getBitmapWidth()
                            org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                            org.telegram.messenger.ImageReceiver r2 = r2.centerImage
                            int r2 = r2.getBitmapHeight()
                            org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                            org.telegram.ui.PhotoViewer$EditState r3 = r3.editState
                            org.telegram.messenger.MediaController$CropState r3 = r3.cropState
                            if (r3 == 0) goto L_0x017d
                            org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                            org.telegram.ui.PhotoViewer$EditState r3 = r3.editState
                            org.telegram.messenger.MediaController$CropState r3 = r3.cropState
                            int r3 = r3.transformRotation
                            r6 = 90
                            if (r3 == r6) goto L_0x015c
                            org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                            org.telegram.ui.PhotoViewer$EditState r3 = r3.editState
                            org.telegram.messenger.MediaController$CropState r3 = r3.cropState
                            int r3 = r3.transformRotation
                            r6 = 270(0x10e, float:3.78E-43)
                            if (r3 != r6) goto L_0x0161
                        L_0x015c:
                            r18 = r2
                            r2 = r1
                            r1 = r18
                        L_0x0161:
                            float r1 = (float) r1
                            org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                            org.telegram.ui.PhotoViewer$EditState r3 = r3.editState
                            org.telegram.messenger.MediaController$CropState r3 = r3.cropState
                            float r3 = r3.cropPw
                            float r1 = r1 * r3
                            int r1 = (int) r1
                            float r2 = (float) r2
                            org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                            org.telegram.ui.PhotoViewer$EditState r3 = r3.editState
                            org.telegram.messenger.MediaController$CropState r3 = r3.cropState
                            float r3 = r3.cropPh
                            float r2 = r2 * r3
                            int r2 = (int) r2
                        L_0x017d:
                            org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                            int r3 = r3.getContainerViewWidth()
                            float r3 = (float) r3
                            float r1 = (float) r1
                            float r3 = r3 / r1
                            org.telegram.ui.PhotoViewer r6 = org.telegram.ui.PhotoViewer.this
                            int r6 = r6.getContainerViewHeight()
                            float r6 = (float) r6
                            float r2 = (float) r2
                            float r6 = r6 / r2
                            org.telegram.ui.PhotoViewer r9 = org.telegram.ui.PhotoViewer.this
                            int r9 = r9.getContainerViewWidth(r8)
                            float r9 = (float) r9
                            float r9 = r9 / r1
                            org.telegram.ui.PhotoViewer r10 = org.telegram.ui.PhotoViewer.this
                            int r10 = r10.getContainerViewHeight(r8)
                            float r10 = (float) r10
                            float r10 = r10 / r2
                            float r3 = java.lang.Math.min(r3, r6)
                            float r6 = java.lang.Math.min(r9, r10)
                            org.telegram.ui.PhotoViewer r9 = org.telegram.ui.PhotoViewer.this
                            int r9 = r9.sendPhotoType
                            if (r9 != r8) goto L_0x01c7
                            org.telegram.ui.PhotoViewer r6 = org.telegram.ui.PhotoViewer.this
                            int r6 = r6.getContainerViewWidth(r8)
                            org.telegram.ui.PhotoViewer r9 = org.telegram.ui.PhotoViewer.this
                            int r9 = r9.getContainerViewHeight(r8)
                            int r6 = java.lang.Math.min(r6, r9)
                            float r6 = (float) r6
                            float r1 = r6 / r1
                            float r6 = r6 / r2
                            float r6 = java.lang.Math.max(r1, r6)
                        L_0x01c7:
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            float r6 = r6 / r3
                            float unused = r1.animateToScale = r6
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            int r2 = r1.getLeftInset()
                            int r2 = r2 / r7
                            org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                            int r3 = r3.getRightInset()
                            int r3 = r3 / r7
                            int r2 = r2 - r3
                            float r2 = (float) r2
                            float unused = r1.animateToX = r2
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            r2 = 1113587712(0x42600000, float:56.0)
                            int r2 = org.telegram.messenger.AndroidUtilities.dp(r2)
                            int r2 = -r2
                            org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                            boolean r3 = r3.isStatusBarVisible()
                            if (r3 == 0) goto L_0x01f5
                            int r3 = org.telegram.messenger.AndroidUtilities.statusBarHeight
                            int r3 = r3 / r7
                            goto L_0x01f6
                        L_0x01f5:
                            r3 = 0
                        L_0x01f6:
                            int r2 = r2 + r3
                            float r2 = (float) r2
                            float unused = r1.animateToY = r2
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            long r2 = java.lang.System.currentTimeMillis()
                            long unused = r1.animationStartTime = r2
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            boolean unused = r1.zoomAnimation = r8
                        L_0x0209:
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            android.animation.AnimatorSet r2 = new android.animation.AnimatorSet
                            r2.<init>()
                            android.animation.AnimatorSet unused = r1.imageMoveAnimation = r2
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            android.animation.AnimatorSet r1 = r1.imageMoveAnimation
                            r2 = 3
                            android.animation.Animator[] r2 = new android.animation.Animator[r2]
                            org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                            org.telegram.ui.Components.PickerBottomLayoutViewer r3 = r3.editorDoneLayout
                            android.util.Property r6 = android.view.View.TRANSLATION_Y
                            float[] r9 = new float[r7]
                            r10 = 1111490560(0x42400000, float:48.0)
                            int r10 = org.telegram.messenger.AndroidUtilities.dp(r10)
                            float r10 = (float) r10
                            r9[r5] = r10
                            r9[r8] = r4
                            android.animation.ObjectAnimator r3 = android.animation.ObjectAnimator.ofFloat(r3, r6, r9)
                            r2[r5] = r3
                            org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                            android.util.Property<org.telegram.ui.PhotoViewer, java.lang.Float> r4 = org.telegram.ui.Components.AnimationProperties.PHOTO_VIEWER_ANIMATION_VALUE
                            float[] r5 = new float[r7]
                            r5 = {0, NUM} // fill-array
                            android.animation.ObjectAnimator r3 = android.animation.ObjectAnimator.ofFloat(r3, r4, r5)
                            r2[r8] = r3
                            org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                            org.telegram.ui.Components.PhotoCropView r3 = r3.photoCropView
                            android.util.Property r4 = android.view.View.ALPHA
                            float[] r5 = new float[r7]
                            r5 = {0, NUM} // fill-array
                            android.animation.ObjectAnimator r3 = android.animation.ObjectAnimator.ofFloat(r3, r4, r5)
                            r2[r7] = r3
                            r1.playTogether(r2)
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            android.animation.AnimatorSet r1 = r1.imageMoveAnimation
                            r2 = 200(0xc8, double:9.9E-322)
                            r1.setDuration(r2)
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            android.animation.AnimatorSet r1 = r1.imageMoveAnimation
                            org.telegram.ui.PhotoViewer$57$1 r2 = new org.telegram.ui.PhotoViewer$57$1
                            r2.<init>()
                            r1.addListener(r2)
                            org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                            android.animation.AnimatorSet r1 = r1.imageMoveAnimation
                            r1.start()
                            return
                        */
                        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.AnonymousClass57.onAnimationEnd(android.animation.Animator):void");
                    }
                });
                this.changeModeAnimation.start();
            } else if (i12 == 2) {
                startVideoPlayer();
                if (this.photoFilterView == null) {
                    PaintingOverlay paintingOverlay2 = null;
                    if (!this.imagesArrLocals.isEmpty()) {
                        Object obj = this.imagesArrLocals.get(this.currentIndex);
                        i4 = obj instanceof MediaController.PhotoEntry ? ((MediaController.PhotoEntry) obj).orientation : 0;
                        MediaController.MediaEditState mediaEditState = (MediaController.MediaEditState) obj;
                        MediaController.SavedFilterState savedFilterState2 = mediaEditState.savedFilterState;
                        str = mediaEditState.getPath();
                        savedFilterState = savedFilterState2;
                    } else {
                        str = null;
                        savedFilterState = null;
                        i4 = 0;
                    }
                    if (this.videoTextureView != null) {
                        bitmap2 = null;
                    } else {
                        if (savedFilterState == null) {
                            bitmap = this.centerImage.getBitmap();
                            i4 = this.centerImage.getOrientation();
                        } else {
                            bitmap = BitmapFactory.decodeFile(str);
                        }
                        bitmap2 = bitmap;
                    }
                    int i23 = i4;
                    if (this.sendPhotoType == 1) {
                        i5 = 1;
                    } else if (this.isCurrentVideo || (i6 = this.currentImageHasFace) == 2) {
                        i5 = 2;
                    } else {
                        i5 = i6 == 1 ? 1 : 0;
                    }
                    Activity activity = this.parentActivity;
                    TextureView textureView = this.videoTextureView;
                    VideoEditTextureView videoEditTextureView = textureView != null ? (VideoEditTextureView) textureView : null;
                    if (!this.isCurrentVideo) {
                        paintingOverlay2 = this.paintingOverlay;
                    }
                    PhotoFilterView photoFilterView2 = new PhotoFilterView(activity, videoEditTextureView, bitmap2, i23, savedFilterState, paintingOverlay2, i5, textureView == null && (((cropState = this.editState.cropState) != null && cropState.mirrored) || this.cropTransform.isMirrored()), this.resourcesProvider);
                    this.photoFilterView = photoFilterView2;
                    this.containerView.addView(photoFilterView2, LayoutHelper.createFrame(-1, -1.0f));
                    this.photoFilterView.getDoneTextView().setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda36(this));
                    this.photoFilterView.getCancelTextView().setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda19(this));
                    this.photoFilterView.getToolsView().setTranslationY((float) AndroidUtilities.dp(186.0f));
                }
                this.changeModeAnimation = new AnimatorSet();
                ArrayList arrayList3 = new ArrayList();
                FrameLayout frameLayout2 = this.pickerView;
                Property property4 = View.TRANSLATION_Y;
                float[] fArr7 = new float[2];
                fArr7[0] = 0.0f;
                fArr7[1] = (float) AndroidUtilities.dp(this.isCurrentVideo ? 154.0f : 96.0f);
                arrayList3.add(ObjectAnimator.ofFloat(frameLayout2, property4, fArr7));
                ImageView imageView2 = this.pickerViewSendButton;
                Property property5 = View.TRANSLATION_Y;
                float[] fArr8 = new float[2];
                fArr8[0] = 0.0f;
                if (!this.isCurrentVideo) {
                    var_ = 96.0f;
                }
                fArr8[1] = (float) AndroidUtilities.dp(var_);
                arrayList3.add(ObjectAnimator.ofFloat(imageView2, property5, fArr8));
                ActionBar actionBar3 = this.actionBar;
                arrayList3.add(ObjectAnimator.ofFloat(actionBar3, View.TRANSLATION_Y, new float[]{0.0f, (float) (-actionBar3.getHeight())}));
                int i24 = this.sendPhotoType;
                if (i24 == 0 || i24 == 4) {
                    i3 = 2;
                    arrayList3.add(ObjectAnimator.ofFloat(this.checkImageView, View.ALPHA, new float[]{1.0f, 0.0f}));
                    arrayList3.add(ObjectAnimator.ofFloat(this.photosCounterView, View.ALPHA, new float[]{1.0f, 0.0f}));
                } else if (i24 == 1) {
                    i3 = 2;
                    arrayList3.add(ObjectAnimator.ofFloat(this.photoCropView, View.ALPHA, new float[]{1.0f, 0.0f}));
                } else {
                    i3 = 2;
                }
                if (this.selectedPhotosListView.getVisibility() == 0) {
                    float[] fArr9 = new float[i3];
                    // fill-array-data instruction
                    fArr9[0] = NUM;
                    fArr9[1] = 0;
                    arrayList3.add(ObjectAnimator.ofFloat(this.selectedPhotosListView, View.ALPHA, fArr9));
                }
                if (this.cameraItem.getTag() != null) {
                    float[] fArr10 = new float[i3];
                    // fill-array-data instruction
                    fArr10[0] = NUM;
                    fArr10[1] = 0;
                    arrayList3.add(ObjectAnimator.ofFloat(this.cameraItem, View.ALPHA, fArr10));
                }
                if (this.muteItem.getTag() != null) {
                    float[] fArr11 = new float[i3];
                    // fill-array-data instruction
                    fArr11[0] = NUM;
                    fArr11[1] = 0;
                    arrayList3.add(ObjectAnimator.ofFloat(this.muteItem, View.ALPHA, fArr11));
                }
                View view3 = this.navigationBar;
                ArgbEvaluator argbEvaluator2 = new ArgbEvaluator();
                Object[] objArr2 = new Object[i3];
                objArr2[0] = Integer.valueOf(color);
                objArr2[1] = Integer.valueOf(i13);
                arrayList3.add(ObjectAnimator.ofObject(view3, "backgroundColor", argbEvaluator2, objArr2));
                this.changeModeAnimation.playTogether(arrayList3);
                this.changeModeAnimation.setDuration(200);
                this.changeModeAnimation.addListener(new AnimatorListenerAdapter() {
                    public void onAnimationEnd(Animator animator) {
                        float f;
                        AnimatorSet unused = PhotoViewer.this.changeModeAnimation = null;
                        PhotoViewer.this.pickerView.setVisibility(8);
                        PhotoViewer.this.pickerViewSendButton.setVisibility(8);
                        PhotoViewer.this.actionBar.setVisibility(8);
                        PhotoViewer.this.cameraItem.setVisibility(8);
                        PhotoViewer.this.muteItem.setVisibility(8);
                        if (PhotoViewer.this.photoCropView != null) {
                            PhotoViewer.this.photoCropView.setVisibility(4);
                        }
                        PhotoViewer.this.selectedPhotosListView.setVisibility(8);
                        PhotoViewer.this.selectedPhotosListView.setAlpha(0.0f);
                        PhotoViewer.this.selectedPhotosListView.setTranslationY((float) (-AndroidUtilities.dp(10.0f)));
                        PhotoViewer.this.photosCounterView.setRotationX(0.0f);
                        PhotoViewer.this.selectedPhotosListView.setEnabled(false);
                        boolean unused2 = PhotoViewer.this.isPhotosListViewVisible = false;
                        if (PhotoViewer.this.needCaptionLayout) {
                            PhotoViewer.this.captionTextViewSwitcher.setVisibility(4);
                        }
                        if (PhotoViewer.this.sendPhotoType == 0 || PhotoViewer.this.sendPhotoType == 4 || ((PhotoViewer.this.sendPhotoType == 2 || PhotoViewer.this.sendPhotoType == 5) && PhotoViewer.this.imagesArrLocals.size() > 1)) {
                            PhotoViewer.this.checkImageView.setVisibility(8);
                            PhotoViewer.this.photosCounterView.setVisibility(8);
                        }
                        if (PhotoViewer.this.centerImage.getBitmap() != null) {
                            float bitmapWidth = (float) PhotoViewer.this.centerImage.getBitmapWidth();
                            float bitmapHeight = (float) PhotoViewer.this.centerImage.getBitmapHeight();
                            float min = Math.min(((float) PhotoViewer.this.getContainerViewWidth(2)) / bitmapWidth, ((float) PhotoViewer.this.getContainerViewHeight(2)) / bitmapHeight);
                            if (PhotoViewer.this.sendPhotoType == 1) {
                                float unused3 = PhotoViewer.this.animateToY = (float) (-AndroidUtilities.dp(36.0f));
                                f = PhotoViewer.this.getCropFillScale(false);
                            } else {
                                float unused4 = PhotoViewer.this.animateToY = (float) ((-AndroidUtilities.dp(93.0f)) + (PhotoViewer.this.isStatusBarVisible() ? AndroidUtilities.statusBarHeight / 2 : 0));
                                if (PhotoViewer.this.editState.cropState == null || !(PhotoViewer.this.editState.cropState.transformRotation == 90 || PhotoViewer.this.editState.cropState.transformRotation == 270)) {
                                    f = Math.min(((float) PhotoViewer.this.getContainerViewWidth()) / bitmapWidth, ((float) PhotoViewer.this.getContainerViewHeight()) / bitmapHeight);
                                } else {
                                    f = Math.min(((float) PhotoViewer.this.getContainerViewWidth()) / bitmapHeight, ((float) PhotoViewer.this.getContainerViewHeight()) / bitmapWidth);
                                }
                            }
                            float unused5 = PhotoViewer.this.animateToScale = min / f;
                            PhotoViewer photoViewer = PhotoViewer.this;
                            float unused6 = photoViewer.animateToX = (float) ((photoViewer.getLeftInset() / 2) - (PhotoViewer.this.getRightInset() / 2));
                            long unused7 = PhotoViewer.this.animationStartTime = System.currentTimeMillis();
                            boolean unused8 = PhotoViewer.this.zoomAnimation = true;
                        }
                        AnimatorSet unused9 = PhotoViewer.this.imageMoveAnimation = new AnimatorSet();
                        PhotoViewer.this.imageMoveAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(PhotoViewer.this, AnimationProperties.PHOTO_VIEWER_ANIMATION_VALUE, new float[]{0.0f, 1.0f}), ObjectAnimator.ofFloat(PhotoViewer.this.photoFilterView.getToolsView(), View.TRANSLATION_Y, new float[]{(float) AndroidUtilities.dp(186.0f), 0.0f})});
                        PhotoViewer.this.imageMoveAnimation.setDuration(200);
                        PhotoViewer.this.imageMoveAnimation.addListener(new AnimatorListenerAdapter() {
                            public void onAnimationStart(Animator animator) {
                            }

                            public void onAnimationEnd(Animator animator) {
                                PhotoViewer.this.photoFilterView.init();
                                AnimatorSet unused = PhotoViewer.this.imageMoveAnimation = null;
                                AnonymousClass58 r3 = AnonymousClass58.this;
                                int unused2 = PhotoViewer.this.currentEditMode = i12;
                                int unused3 = PhotoViewer.this.switchingToMode = -1;
                                float unused4 = PhotoViewer.this.animateToScale = 1.0f;
                                float unused5 = PhotoViewer.this.animateToX = 0.0f;
                                float unused6 = PhotoViewer.this.animateToY = 0.0f;
                                float unused7 = PhotoViewer.this.scale = 1.0f;
                                PhotoViewer photoViewer = PhotoViewer.this;
                                photoViewer.updateMinMax(photoViewer.scale);
                                boolean unused8 = PhotoViewer.this.padImageForHorizontalInsets = true;
                                PhotoViewer.this.containerView.invalidate();
                            }
                        });
                        PhotoViewer.this.imageMoveAnimation.start();
                    }
                });
                this.changeModeAnimation.start();
            } else if (i12 == 3) {
                startVideoPlayer();
                createPaintView();
                this.changeModeAnimation = new AnimatorSet();
                ArrayList arrayList4 = new ArrayList();
                FrameLayout frameLayout3 = this.pickerView;
                Property property6 = View.TRANSLATION_Y;
                float[] fArr12 = new float[1];
                fArr12[0] = (float) AndroidUtilities.dp(this.isCurrentVideo ? 154.0f : 96.0f);
                arrayList4.add(ObjectAnimator.ofFloat(frameLayout3, property6, fArr12));
                ImageView imageView3 = this.pickerViewSendButton;
                Property property7 = View.TRANSLATION_Y;
                float[] fArr13 = new float[1];
                fArr13[0] = (float) AndroidUtilities.dp(this.isCurrentVideo ? 154.0f : 96.0f);
                arrayList4.add(ObjectAnimator.ofFloat(imageView3, property7, fArr13));
                ActionBar actionBar4 = this.actionBar;
                arrayList4.add(ObjectAnimator.ofFloat(actionBar4, View.TRANSLATION_Y, new float[]{(float) (-actionBar4.getHeight())}));
                arrayList4.add(ObjectAnimator.ofObject(this.navigationBar, "backgroundColor", new ArgbEvaluator(), new Object[]{Integer.valueOf(color), Integer.valueOf(i13)}));
                if (this.needCaptionLayout) {
                    CaptionTextViewSwitcher captionTextViewSwitcher3 = this.captionTextViewSwitcher;
                    Property property8 = View.TRANSLATION_Y;
                    float[] fArr14 = new float[1];
                    if (!this.isCurrentVideo) {
                        var_ = 96.0f;
                    }
                    fArr14[0] = (float) AndroidUtilities.dp(var_);
                    arrayList4.add(ObjectAnimator.ofFloat(captionTextViewSwitcher3, property8, fArr14));
                }
                int i25 = this.sendPhotoType;
                if (i25 == 0 || i25 == 4) {
                    i2 = 2;
                    arrayList4.add(ObjectAnimator.ofFloat(this.checkImageView, View.ALPHA, new float[]{1.0f, 0.0f}));
                    arrayList4.add(ObjectAnimator.ofFloat(this.photosCounterView, View.ALPHA, new float[]{1.0f, 0.0f}));
                } else if (i25 == 1) {
                    i2 = 2;
                    arrayList4.add(ObjectAnimator.ofFloat(this.photoCropView, View.ALPHA, new float[]{1.0f, 0.0f}));
                } else {
                    i2 = 2;
                }
                if (this.selectedPhotosListView.getVisibility() == 0) {
                    float[] fArr15 = new float[i2];
                    // fill-array-data instruction
                    fArr15[0] = NUM;
                    fArr15[1] = 0;
                    arrayList4.add(ObjectAnimator.ofFloat(this.selectedPhotosListView, View.ALPHA, fArr15));
                }
                if (this.cameraItem.getTag() != null) {
                    float[] fArr16 = new float[i2];
                    // fill-array-data instruction
                    fArr16[0] = NUM;
                    fArr16[1] = 0;
                    arrayList4.add(ObjectAnimator.ofFloat(this.cameraItem, View.ALPHA, fArr16));
                }
                if (this.muteItem.getTag() != null) {
                    float[] fArr17 = new float[i2];
                    // fill-array-data instruction
                    fArr17[0] = NUM;
                    fArr17[1] = 0;
                    arrayList4.add(ObjectAnimator.ofFloat(this.muteItem, View.ALPHA, fArr17));
                }
                this.changeModeAnimation.playTogether(arrayList4);
                this.changeModeAnimation.setDuration(200);
                this.changeModeAnimation.addListener(new AnimatorListenerAdapter() {
                    public void onAnimationEnd(Animator animator) {
                        PhotoViewer.this.switchToPaintMode();
                    }
                });
                this.changeModeAnimation.start();
            }
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$switchToEditMode$57(ValueAnimator valueAnimator) {
        this.photoCropView.cropView.areaView.setRotationScaleTranslation(0.0f, AndroidUtilities.lerp(this.scale, this.animateToScale, this.animationValue), AndroidUtilities.lerp(this.translationX, this.animateToX, this.animationValue), AndroidUtilities.lerp(this.translationY, this.animateToY, this.animationValue));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$switchToEditMode$58(View view) {
        applyCurrentEditMode();
        switchToEditMode(0);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$switchToEditMode$60(View view) {
        if (this.photoFilterView.hasChanges()) {
            Activity activity = this.parentActivity;
            if (activity != null) {
                AlertDialog.Builder builder = new AlertDialog.Builder(activity, this.resourcesProvider);
                builder.setMessage(LocaleController.getString("DiscardChanges", NUM));
                builder.setTitle(LocaleController.getString("AppName", NUM));
                builder.setPositiveButton(LocaleController.getString("OK", NUM), new PhotoViewer$$ExternalSyntheticLambda8(this));
                builder.setNegativeButton(LocaleController.getString("Cancel", NUM), (DialogInterface.OnClickListener) null);
                showAlertDialog(builder);
                return;
            }
            return;
        }
        switchToEditMode(0);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$switchToEditMode$59(DialogInterface dialogInterface, int i) {
        switchToEditMode(0);
    }

    private void createPaintView() {
        int i;
        int i2;
        MediaController.CropState cropState;
        if (this.photoPaintView == null) {
            TextureView textureView = this.videoTextureView;
            if (textureView != null) {
                VideoEditTextureView videoEditTextureView = (VideoEditTextureView) textureView;
                i = videoEditTextureView.getVideoWidth();
                i2 = videoEditTextureView.getVideoHeight();
                while (true) {
                    if (i <= 1280 && i2 <= 1280) {
                        break;
                    }
                    i /= 2;
                    i2 /= 2;
                }
            } else {
                i = this.centerImage.getBitmapWidth();
                i2 = this.centerImage.getBitmapHeight();
            }
            Bitmap bitmap = this.paintingOverlay.getBitmap();
            if (bitmap == null) {
                bitmap = Bitmap.createBitmap(i, i2, Bitmap.Config.ARGB_8888);
            }
            Bitmap bitmap2 = bitmap;
            if (this.sendPhotoType == 1) {
                cropState = new MediaController.CropState();
                cropState.transformRotation = this.cropTransform.getOrientation();
            } else {
                cropState = this.editState.cropState;
            }
            AnonymousClass60 r3 = new PhotoPaintView(this.parentActivity, bitmap2, this.isCurrentVideo ? null : this.centerImage.getBitmap(), this.centerImage.getOrientation(), this.editState.mediaEntities, cropState, new PhotoViewer$$ExternalSyntheticLambda51(this), this.resourcesProvider) {
                /* access modifiers changed from: protected */
                public void onOpenCloseStickersAlert(boolean z) {
                    if (PhotoViewer.this.videoPlayer != null) {
                        boolean unused = PhotoViewer.this.manuallyPaused = false;
                        PhotoViewer.this.cancelVideoPlayRunnable();
                        if (z) {
                            PhotoViewer.this.videoPlayer.pause();
                        } else {
                            PhotoViewer.this.videoPlayer.play();
                        }
                    }
                }

                /* access modifiers changed from: protected */
                public void didSetAnimatedSticker(RLottieDrawable rLottieDrawable) {
                    if (PhotoViewer.this.videoPlayer != null) {
                        long currentPosition = PhotoViewer.this.videoPlayer.getCurrentPosition();
                        long j = 0;
                        if (PhotoViewer.this.startTime > 0) {
                            j = PhotoViewer.this.startTime / 1000;
                        }
                        rLottieDrawable.setProgressMs(currentPosition - j);
                    }
                }

                /* access modifiers changed from: protected */
                public void onTextAdd() {
                    if (!PhotoViewer.this.windowView.isFocusable()) {
                        PhotoViewer.this.makeFocusable();
                    }
                }
            };
            this.photoPaintView = r3;
            this.containerView.addView(r3, LayoutHelper.createFrame(-1, -1.0f));
            this.photoPaintView.getDoneTextView().setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda14(this));
            this.photoPaintView.getCancelTextView().setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda24(this));
            this.photoPaintView.getColorPicker().setTranslationY((float) AndroidUtilities.dp(126.0f));
            this.photoPaintView.getToolsView().setTranslationY((float) AndroidUtilities.dp(126.0f));
            this.photoPaintView.getColorPickerBackground().setTranslationY((float) AndroidUtilities.dp(126.0f));
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$createPaintView$61() {
        this.paintingOverlay.hideBitmap();
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$createPaintView$62(View view) {
        this.savedState = null;
        applyCurrentEditMode();
        switchToEditMode(0);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$createPaintView$63(View view) {
        closePaintMode();
    }

    private void closePaintMode() {
        this.photoPaintView.maybeShowDismissalAlert(this, this.parentActivity, new PhotoViewer$$ExternalSyntheticLambda52(this));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$closePaintMode$64() {
        switchToEditMode(0);
    }

    /* access modifiers changed from: private */
    public void switchToPaintMode() {
        this.changeModeAnimation = null;
        this.pickerView.setVisibility(8);
        this.pickerViewSendButton.setVisibility(8);
        this.cameraItem.setVisibility(8);
        this.muteItem.setVisibility(8);
        PhotoCropView photoCropView2 = this.photoCropView;
        if (photoCropView2 != null) {
            photoCropView2.setVisibility(4);
        }
        this.selectedPhotosListView.setVisibility(8);
        this.selectedPhotosListView.setAlpha(0.0f);
        this.selectedPhotosListView.setTranslationY((float) (-AndroidUtilities.dp(10.0f)));
        this.photosCounterView.setRotationX(0.0f);
        this.selectedPhotosListView.setEnabled(false);
        this.isPhotosListViewVisible = false;
        if (this.needCaptionLayout) {
            this.captionTextViewSwitcher.setVisibility(4);
        }
        int i = this.sendPhotoType;
        if (i == 0 || i == 4 || ((i == 2 || i == 5) && this.imagesArrLocals.size() > 1)) {
            this.checkImageView.setVisibility(8);
            this.photosCounterView.setVisibility(8);
        }
        if (this.centerImage.getBitmap() != null) {
            int bitmapWidth = this.centerImage.getBitmapWidth();
            int bitmapHeight = this.centerImage.getBitmapHeight();
            if (this.sendPhotoType == 1) {
                this.animateToY = (float) AndroidUtilities.dp(12.0f);
                if (this.cropTransform.getOrientation() == 90 || this.cropTransform.getOrientation() == 270) {
                    int i2 = bitmapHeight;
                    bitmapHeight = bitmapWidth;
                    bitmapWidth = i2;
                }
            } else {
                this.animateToY = (float) ((-AndroidUtilities.dp(44.0f)) + (isStatusBarVisible() ? AndroidUtilities.statusBarHeight / 2 : 0));
                MediaController.CropState cropState = this.editState.cropState;
                if (cropState != null) {
                    int i3 = cropState.transformRotation;
                    if (i3 == 90 || i3 == 270) {
                        int i4 = bitmapHeight;
                        bitmapHeight = bitmapWidth;
                        bitmapWidth = i4;
                    }
                    bitmapWidth = (int) (((float) bitmapWidth) * cropState.cropPw);
                    bitmapHeight = (int) (((float) bitmapHeight) * cropState.cropPh);
                }
            }
            float f = (float) bitmapWidth;
            float f2 = (float) bitmapHeight;
            this.animateToScale = Math.min(((float) getContainerViewWidth(3)) / f, ((float) getContainerViewHeight(3)) / f2) / Math.min(((float) getContainerViewWidth()) / f, ((float) getContainerViewHeight()) / f2);
            this.animateToX = (float) ((getLeftInset() / 2) - (getRightInset() / 2));
            this.animationStartTime = System.currentTimeMillis();
            this.zoomAnimation = true;
        }
        this.windowView.setClipChildren(true);
        this.navigationBar.setVisibility(4);
        AnimatorSet animatorSet = new AnimatorSet();
        this.imageMoveAnimation = animatorSet;
        animatorSet.playTogether(new Animator[]{ObjectAnimator.ofFloat(this, AnimationProperties.PHOTO_VIEWER_ANIMATION_VALUE, new float[]{0.0f, 1.0f}), ObjectAnimator.ofFloat(this.photoPaintView.getColorPicker(), View.TRANSLATION_Y, new float[]{(float) AndroidUtilities.dp(126.0f), 0.0f}), ObjectAnimator.ofFloat(this.photoPaintView.getToolsView(), View.TRANSLATION_Y, new float[]{(float) AndroidUtilities.dp(126.0f), 0.0f}), ObjectAnimator.ofFloat(this.photoPaintView.getColorPickerBackground(), View.TRANSLATION_Y, new float[]{(float) AndroidUtilities.dp(126.0f), 0.0f})});
        this.imageMoveAnimation.setDuration(200);
        this.imageMoveAnimation.addListener(new AnimatorListenerAdapter() {
            public void onAnimationStart(Animator animator) {
            }

            public void onAnimationEnd(Animator animator) {
                PhotoViewer.this.photoPaintView.init();
                PhotoViewer.this.paintingOverlay.hideEntities();
                AnimatorSet unused = PhotoViewer.this.imageMoveAnimation = null;
                int unused2 = PhotoViewer.this.currentEditMode = 3;
                int unused3 = PhotoViewer.this.switchingToMode = -1;
                PhotoViewer photoViewer = PhotoViewer.this;
                float unused4 = photoViewer.animateToScale = photoViewer.scale = 1.0f;
                float unused5 = PhotoViewer.this.animateToX = 0.0f;
                float unused6 = PhotoViewer.this.animateToY = 0.0f;
                PhotoViewer photoViewer2 = PhotoViewer.this;
                photoViewer2.updateMinMax(photoViewer2.scale);
                boolean unused7 = PhotoViewer.this.padImageForHorizontalInsets = true;
                PhotoViewer.this.containerView.invalidate();
            }
        });
        this.imageMoveAnimation.start();
    }

    private void toggleCheckImageView(boolean z) {
        AnimatorSet animatorSet = new AnimatorSet();
        ArrayList arrayList = new ArrayList();
        float dpf2 = AndroidUtilities.dpf2(24.0f);
        FrameLayout frameLayout = this.pickerView;
        Property property = View.ALPHA;
        float[] fArr = new float[1];
        float f = 1.0f;
        float f2 = 0.0f;
        fArr[0] = z ? 1.0f : 0.0f;
        arrayList.add(ObjectAnimator.ofFloat(frameLayout, property, fArr));
        FrameLayout frameLayout2 = this.pickerView;
        Property property2 = View.TRANSLATION_Y;
        float[] fArr2 = new float[1];
        fArr2[0] = z ? 0.0f : dpf2;
        arrayList.add(ObjectAnimator.ofFloat(frameLayout2, property2, fArr2));
        ImageView imageView = this.pickerViewSendButton;
        Property property3 = View.ALPHA;
        float[] fArr3 = new float[1];
        fArr3[0] = z ? 1.0f : 0.0f;
        arrayList.add(ObjectAnimator.ofFloat(imageView, property3, fArr3));
        ImageView imageView2 = this.pickerViewSendButton;
        Property property4 = View.TRANSLATION_Y;
        float[] fArr4 = new float[1];
        fArr4[0] = z ? 0.0f : dpf2;
        arrayList.add(ObjectAnimator.ofFloat(imageView2, property4, fArr4));
        int i = this.sendPhotoType;
        if (i == 0 || i == 4) {
            CheckBox checkBox = this.checkImageView;
            Property property5 = View.ALPHA;
            float[] fArr5 = new float[1];
            fArr5[0] = z ? 1.0f : 0.0f;
            arrayList.add(ObjectAnimator.ofFloat(checkBox, property5, fArr5));
            CheckBox checkBox2 = this.checkImageView;
            Property property6 = View.TRANSLATION_Y;
            float[] fArr6 = new float[1];
            fArr6[0] = z ? 0.0f : -dpf2;
            arrayList.add(ObjectAnimator.ofFloat(checkBox2, property6, fArr6));
            CounterView counterView = this.photosCounterView;
            Property property7 = View.ALPHA;
            float[] fArr7 = new float[1];
            if (!z) {
                f = 0.0f;
            }
            fArr7[0] = f;
            arrayList.add(ObjectAnimator.ofFloat(counterView, property7, fArr7));
            CounterView counterView2 = this.photosCounterView;
            Property property8 = View.TRANSLATION_Y;
            float[] fArr8 = new float[1];
            if (!z) {
                f2 = -dpf2;
            }
            fArr8[0] = f2;
            arrayList.add(ObjectAnimator.ofFloat(counterView2, property8, fArr8));
        }
        animatorSet.playTogether(arrayList);
        animatorSet.setDuration(200);
        animatorSet.start();
    }

    private void toggleMiniProgressInternal(final boolean z) {
        if (z) {
            this.miniProgressView.setVisibility(0);
        }
        AnimatorSet animatorSet = new AnimatorSet();
        this.miniProgressAnimator = animatorSet;
        Animator[] animatorArr = new Animator[1];
        RadialProgressView radialProgressView = this.miniProgressView;
        Property property = View.ALPHA;
        float[] fArr = new float[1];
        fArr[0] = z ? 1.0f : 0.0f;
        animatorArr[0] = ObjectAnimator.ofFloat(radialProgressView, property, fArr);
        animatorSet.playTogether(animatorArr);
        this.miniProgressAnimator.setDuration(200);
        this.miniProgressAnimator.addListener(new AnimatorListenerAdapter() {
            public void onAnimationEnd(Animator animator) {
                if (animator.equals(PhotoViewer.this.miniProgressAnimator)) {
                    if (!z) {
                        PhotoViewer.this.miniProgressView.setVisibility(4);
                    }
                    AnimatorSet unused = PhotoViewer.this.miniProgressAnimator = null;
                }
            }

            public void onAnimationCancel(Animator animator) {
                if (animator.equals(PhotoViewer.this.miniProgressAnimator)) {
                    AnimatorSet unused = PhotoViewer.this.miniProgressAnimator = null;
                }
            }
        });
        this.miniProgressAnimator.start();
    }

    private void toggleMiniProgress(boolean z, boolean z2) {
        AndroidUtilities.cancelRunOnUIThread(this.miniProgressShowRunnable);
        int i = 0;
        if (z2) {
            toggleMiniProgressInternal(z);
            if (z) {
                AnimatorSet animatorSet = this.miniProgressAnimator;
                if (animatorSet != null) {
                    animatorSet.cancel();
                    this.miniProgressAnimator = null;
                }
                if (this.firstAnimationDelay) {
                    this.firstAnimationDelay = false;
                    toggleMiniProgressInternal(true);
                    return;
                }
                AndroidUtilities.runOnUIThread(this.miniProgressShowRunnable, 500);
                return;
            }
            AnimatorSet animatorSet2 = this.miniProgressAnimator;
            if (animatorSet2 != null) {
                animatorSet2.cancel();
                toggleMiniProgressInternal(false);
                return;
            }
            return;
        }
        AnimatorSet animatorSet3 = this.miniProgressAnimator;
        if (animatorSet3 != null) {
            animatorSet3.cancel();
            this.miniProgressAnimator = null;
        }
        this.miniProgressView.setAlpha(z ? 1.0f : 0.0f);
        RadialProgressView radialProgressView = this.miniProgressView;
        if (!z) {
            i = 4;
        }
        radialProgressView.setVisibility(i);
    }

    private void updateContainerFlags(boolean z) {
        FrameLayoutDrawer frameLayoutDrawer;
        if (Build.VERSION.SDK_INT >= 21 && this.sendPhotoType != 1 && (frameLayoutDrawer = this.containerView) != null) {
            int i = 1792;
            if (!z) {
                i = 1796;
                if (frameLayoutDrawer.getPaddingLeft() > 0 || this.containerView.getPaddingRight() > 0) {
                    i = 5894;
                }
            }
            this.containerView.setSystemUiVisibility(i);
        }
    }

    private static class ActionBarToggleParams {
        public static final ActionBarToggleParams DEFAULT = new ActionBarToggleParams();
        public int animationDuration = 200;
        public Interpolator animationInterpolator;
        public boolean enableStatusBarAnimation = true;
        public boolean enableTranslationAnimation = true;

        public ActionBarToggleParams enableStatusBarAnimation(boolean z) {
            this.enableStatusBarAnimation = z;
            return this;
        }

        public ActionBarToggleParams enableTranslationAnimation(boolean z) {
            this.enableTranslationAnimation = z;
            return this;
        }

        public ActionBarToggleParams animationDuration(int i) {
            this.animationDuration = i;
            return this;
        }

        public ActionBarToggleParams animationInterpolator(Interpolator interpolator) {
            this.animationInterpolator = interpolator;
            return this;
        }
    }

    /* access modifiers changed from: private */
    public void toggleActionBar(boolean z, boolean z2) {
        toggleActionBar(z, z2, ActionBarToggleParams.DEFAULT);
    }

    /* access modifiers changed from: private */
    public void toggleActionBar(final boolean z, boolean z2, ActionBarToggleParams actionBarToggleParams) {
        CaptionScrollView captionScrollView2;
        CaptionScrollView captionScrollView3;
        if (this.currentEditMode == 0) {
            int i = this.switchingToMode;
            if (i == 0 || i == -1) {
                AnimatorSet animatorSet = this.actionBarAnimator;
                if (animatorSet != null) {
                    animatorSet.cancel();
                }
                if (z) {
                    this.actionBar.setVisibility(0);
                    if (this.bottomLayout.getTag() != null) {
                        this.bottomLayout.setVisibility(0);
                    }
                    if (this.captionTextViewSwitcher.getTag() != null) {
                        this.captionTextViewSwitcher.setVisibility(0);
                        VideoSeekPreviewImage videoSeekPreviewImage = this.videoPreviewFrame;
                        if (videoSeekPreviewImage != null) {
                            videoSeekPreviewImage.requestLayout();
                        }
                    }
                }
                this.isActionBarVisible = z;
                if (actionBarToggleParams.enableStatusBarAnimation) {
                    updateContainerFlags(z);
                }
                if (!this.videoPlayerControlVisible || !this.isPlaying || !z) {
                    AndroidUtilities.cancelRunOnUIThread(this.hideActionBarRunnable);
                } else {
                    scheduleActionBarHide();
                }
                if (!z) {
                    Bulletin.hide((FrameLayout) this.containerView);
                }
                float dpf2 = AndroidUtilities.dpf2(24.0f);
                this.videoPlayerControlFrameLayout.setSeekBarTransitionEnabled(actionBarToggleParams.enableTranslationAnimation && this.playerLooping);
                this.videoPlayerControlFrameLayout.setTranslationYAnimationEnabled(actionBarToggleParams.enableTranslationAnimation);
                float f = 1.0f;
                if (z2) {
                    ArrayList arrayList = new ArrayList();
                    ActionBar actionBar2 = this.actionBar;
                    Property property = View.ALPHA;
                    float[] fArr = new float[1];
                    fArr[0] = z ? 1.0f : 0.0f;
                    arrayList.add(ObjectAnimator.ofFloat(actionBar2, property, fArr));
                    if (actionBarToggleParams.enableTranslationAnimation) {
                        ActionBar actionBar3 = this.actionBar;
                        Property property2 = View.TRANSLATION_Y;
                        float[] fArr2 = new float[1];
                        fArr2[0] = z ? 0.0f : -dpf2;
                        arrayList.add(ObjectAnimator.ofFloat(actionBar3, property2, fArr2));
                    } else {
                        this.actionBar.setTranslationY(0.0f);
                    }
                    if (this.allowShowFullscreenButton) {
                        ImageView imageView = this.fullscreenButton[0];
                        Property property3 = View.ALPHA;
                        float[] fArr3 = new float[1];
                        fArr3[0] = z ? 1.0f : 0.0f;
                        arrayList.add(ObjectAnimator.ofFloat(imageView, property3, fArr3));
                    }
                    for (int i2 = 1; i2 < 3; i2++) {
                        this.fullscreenButton[i2].setTranslationY(z ? 0.0f : dpf2);
                    }
                    if (actionBarToggleParams.enableTranslationAnimation) {
                        ImageView imageView2 = this.fullscreenButton[0];
                        Property property4 = View.TRANSLATION_Y;
                        float[] fArr4 = new float[1];
                        fArr4[0] = z ? 0.0f : dpf2;
                        arrayList.add(ObjectAnimator.ofFloat(imageView2, property4, fArr4));
                    } else {
                        this.fullscreenButton[0].setTranslationY(0.0f);
                    }
                    FrameLayout frameLayout = this.bottomLayout;
                    if (frameLayout != null) {
                        Property property5 = View.ALPHA;
                        float[] fArr5 = new float[1];
                        fArr5[0] = z ? 1.0f : 0.0f;
                        arrayList.add(ObjectAnimator.ofFloat(frameLayout, property5, fArr5));
                        if (actionBarToggleParams.enableTranslationAnimation) {
                            FrameLayout frameLayout2 = this.bottomLayout;
                            Property property6 = View.TRANSLATION_Y;
                            float[] fArr6 = new float[1];
                            fArr6[0] = z ? 0.0f : dpf2;
                            arrayList.add(ObjectAnimator.ofFloat(frameLayout2, property6, fArr6));
                        } else {
                            this.bottomLayout.setTranslationY(0.0f);
                        }
                    }
                    View view = this.navigationBar;
                    if (view != null) {
                        Property property7 = View.ALPHA;
                        float[] fArr7 = new float[1];
                        fArr7[0] = z ? 1.0f : 0.0f;
                        arrayList.add(ObjectAnimator.ofFloat(view, property7, fArr7));
                    }
                    if (this.videoPlayerControlVisible) {
                        VideoPlayerControlFrameLayout videoPlayerControlFrameLayout2 = this.videoPlayerControlFrameLayout;
                        Property<VideoPlayerControlFrameLayout, Float> property8 = VPC_PROGRESS;
                        float[] fArr8 = new float[1];
                        fArr8[0] = z ? 1.0f : 0.0f;
                        arrayList.add(ObjectAnimator.ofFloat(videoPlayerControlFrameLayout2, property8, fArr8));
                    } else {
                        this.videoPlayerControlFrameLayout.setProgress(z ? 1.0f : 0.0f);
                    }
                    GroupedPhotosListView groupedPhotosListView2 = this.groupedPhotosListView;
                    Property property9 = View.ALPHA;
                    float[] fArr9 = new float[1];
                    fArr9[0] = z ? 1.0f : 0.0f;
                    arrayList.add(ObjectAnimator.ofFloat(groupedPhotosListView2, property9, fArr9));
                    if (actionBarToggleParams.enableTranslationAnimation) {
                        GroupedPhotosListView groupedPhotosListView3 = this.groupedPhotosListView;
                        Property property10 = View.TRANSLATION_Y;
                        float[] fArr10 = new float[1];
                        fArr10[0] = z ? 0.0f : dpf2;
                        arrayList.add(ObjectAnimator.ofFloat(groupedPhotosListView3, property10, fArr10));
                    } else {
                        this.groupedPhotosListView.setTranslationY(0.0f);
                    }
                    if (!this.needCaptionLayout && (captionScrollView3 = this.captionScrollView) != null) {
                        Property property11 = View.ALPHA;
                        float[] fArr11 = new float[1];
                        fArr11[0] = z ? 1.0f : 0.0f;
                        arrayList.add(ObjectAnimator.ofFloat(captionScrollView3, property11, fArr11));
                        if (actionBarToggleParams.enableTranslationAnimation) {
                            CaptionScrollView captionScrollView4 = this.captionScrollView;
                            Property property12 = View.TRANSLATION_Y;
                            float[] fArr12 = new float[1];
                            if (z) {
                                dpf2 = 0.0f;
                            }
                            fArr12[0] = dpf2;
                            arrayList.add(ObjectAnimator.ofFloat(captionScrollView4, property12, fArr12));
                        } else {
                            this.captionScrollView.setTranslationY(0.0f);
                        }
                    }
                    if (this.videoPlayerControlVisible && this.isPlaying) {
                        float[] fArr13 = new float[2];
                        fArr13[0] = this.photoProgressViews[0].animAlphas[1];
                        fArr13[1] = z ? 1.0f : 0.0f;
                        ValueAnimator ofFloat = ValueAnimator.ofFloat(fArr13);
                        ofFloat.addUpdateListener(new PhotoViewer$$ExternalSyntheticLambda2(this));
                        arrayList.add(ofFloat);
                    }
                    if (this.muteItem.getTag() != null) {
                        ImageView imageView3 = this.muteItem;
                        Property property13 = View.ALPHA;
                        float[] fArr14 = new float[1];
                        if (!z) {
                            f = 0.0f;
                        }
                        fArr14[0] = f;
                        arrayList.add(ObjectAnimator.ofFloat(imageView3, property13, fArr14));
                    }
                    AnimatorSet animatorSet2 = new AnimatorSet();
                    this.actionBarAnimator = animatorSet2;
                    animatorSet2.playTogether(arrayList);
                    this.actionBarAnimator.setDuration((long) actionBarToggleParams.animationDuration);
                    this.actionBarAnimator.setInterpolator(actionBarToggleParams.animationInterpolator);
                    this.actionBarAnimator.addListener(new AnimatorListenerAdapter() {
                        public void onAnimationEnd(Animator animator) {
                            if (animator.equals(PhotoViewer.this.actionBarAnimator)) {
                                if (!z) {
                                    PhotoViewer.this.actionBar.setVisibility(4);
                                    if (PhotoViewer.this.bottomLayout.getTag() != null) {
                                        PhotoViewer.this.bottomLayout.setVisibility(4);
                                    }
                                    if (PhotoViewer.this.captionTextViewSwitcher.getTag() != null) {
                                        PhotoViewer.this.captionTextViewSwitcher.setVisibility(4);
                                    }
                                }
                                AnimatorSet unused = PhotoViewer.this.actionBarAnimator = null;
                            }
                        }

                        public void onAnimationCancel(Animator animator) {
                            if (animator.equals(PhotoViewer.this.actionBarAnimator)) {
                                AnimatorSet unused = PhotoViewer.this.actionBarAnimator = null;
                            }
                        }
                    });
                    this.actionBarAnimator.start();
                    return;
                }
                this.actionBar.setAlpha(z ? 1.0f : 0.0f);
                if (this.fullscreenButton[0].getTranslationX() != 0.0f && this.allowShowFullscreenButton) {
                    this.fullscreenButton[0].setAlpha(z ? 1.0f : 0.0f);
                }
                for (int i3 = 0; i3 < 3; i3++) {
                    this.fullscreenButton[i3].setTranslationY(z ? 0.0f : dpf2);
                }
                this.actionBar.setTranslationY(z ? 0.0f : -dpf2);
                this.bottomLayout.setAlpha(z ? 1.0f : 0.0f);
                this.bottomLayout.setTranslationY(z ? 0.0f : dpf2);
                this.navigationBar.setAlpha(z ? 1.0f : 0.0f);
                this.groupedPhotosListView.setAlpha(z ? 1.0f : 0.0f);
                this.groupedPhotosListView.setTranslationY(z ? 0.0f : dpf2);
                if (!this.needCaptionLayout && (captionScrollView2 = this.captionScrollView) != null) {
                    captionScrollView2.setAlpha(z ? 1.0f : 0.0f);
                    CaptionScrollView captionScrollView5 = this.captionScrollView;
                    if (z) {
                        dpf2 = 0.0f;
                    }
                    captionScrollView5.setTranslationY(dpf2);
                }
                this.videoPlayerControlFrameLayout.setProgress(z ? 1.0f : 0.0f);
                if (this.muteItem.getTag() != null) {
                    this.muteItem.setAlpha(z ? 1.0f : 0.0f);
                }
                if (this.videoPlayerControlVisible && this.isPlaying) {
                    PhotoProgressView photoProgressView = this.photoProgressViews[0];
                    if (!z) {
                        f = 0.0f;
                    }
                    photoProgressView.setIndexedAlpha(1, f, false);
                }
            }
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$toggleActionBar$65(ValueAnimator valueAnimator) {
        this.photoProgressViews[0].setIndexedAlpha(1, ((Float) valueAnimator.getAnimatedValue()).floatValue(), false);
    }

    private void togglePhotosListView(boolean z, boolean z2) {
        if (z != this.isPhotosListViewVisible) {
            if (z) {
                this.selectedPhotosListView.setVisibility(0);
            }
            this.isPhotosListViewVisible = z;
            this.selectedPhotosListView.setEnabled(z);
            float f = 1.0f;
            if (z2) {
                ArrayList arrayList = new ArrayList();
                SelectedPhotosListView selectedPhotosListView2 = this.selectedPhotosListView;
                Property property = View.ALPHA;
                float[] fArr = new float[1];
                fArr[0] = z ? 1.0f : 0.0f;
                arrayList.add(ObjectAnimator.ofFloat(selectedPhotosListView2, property, fArr));
                SelectedPhotosListView selectedPhotosListView3 = this.selectedPhotosListView;
                Property property2 = View.TRANSLATION_Y;
                float[] fArr2 = new float[1];
                fArr2[0] = z ? 0.0f : (float) (-AndroidUtilities.dp(10.0f));
                arrayList.add(ObjectAnimator.ofFloat(selectedPhotosListView3, property2, fArr2));
                CounterView counterView = this.photosCounterView;
                Property property3 = View.ROTATION_X;
                float[] fArr3 = new float[1];
                if (!z) {
                    f = 0.0f;
                }
                fArr3[0] = f;
                arrayList.add(ObjectAnimator.ofFloat(counterView, property3, fArr3));
                AnimatorSet animatorSet = new AnimatorSet();
                this.currentListViewAnimation = animatorSet;
                animatorSet.playTogether(arrayList);
                if (!z) {
                    this.currentListViewAnimation.addListener(new AnimatorListenerAdapter() {
                        public void onAnimationEnd(Animator animator) {
                            if (PhotoViewer.this.currentListViewAnimation != null && PhotoViewer.this.currentListViewAnimation.equals(animator)) {
                                PhotoViewer.this.selectedPhotosListView.setVisibility(8);
                                AnimatorSet unused = PhotoViewer.this.currentListViewAnimation = null;
                            }
                        }
                    });
                }
                this.currentListViewAnimation.setDuration(200);
                this.currentListViewAnimation.start();
                return;
            }
            this.selectedPhotosListView.setAlpha(z ? 1.0f : 0.0f);
            this.selectedPhotosListView.setTranslationY(z ? 0.0f : (float) (-AndroidUtilities.dp(10.0f)));
            CounterView counterView2 = this.photosCounterView;
            if (!z) {
                f = 0.0f;
            }
            counterView2.setRotationX(f);
            if (!z) {
                this.selectedPhotosListView.setVisibility(8);
            }
        }
    }

    /* access modifiers changed from: private */
    public void toggleVideoPlayer() {
        if (this.videoPlayer != null) {
            cancelVideoPlayRunnable();
            AndroidUtilities.cancelRunOnUIThread(this.hideActionBarRunnable);
            if (this.isPlaying) {
                this.videoPlayer.pause();
            } else {
                if (!this.isCurrentVideo) {
                    if (Math.abs(this.videoPlayerSeekbar.getProgress() - this.videoTimelineView.getRightProgress()) < 0.01f || this.videoPlayer.getCurrentPosition() == this.videoPlayer.getDuration()) {
                        this.videoPlayer.seekTo(0);
                    }
                    scheduleActionBarHide();
                } else if (Math.abs(this.videoTimelineView.getProgress() - this.videoTimelineView.getRightProgress()) < 0.01f || this.videoPlayer.getCurrentPosition() == this.videoPlayer.getDuration()) {
                    this.videoPlayer.seekTo((long) ((int) (this.videoTimelineView.getLeftProgress() * ((float) this.videoPlayer.getDuration()))));
                }
                this.videoPlayer.play();
            }
            this.containerView.invalidate();
        }
    }

    private String getFileName(int i) {
        if (i < 0) {
            return null;
        }
        if (!this.secureDocuments.isEmpty()) {
            if (i >= this.secureDocuments.size()) {
                return null;
            }
            SecureDocument secureDocument = this.secureDocuments.get(i);
            return secureDocument.secureFile.dc_id + "_" + secureDocument.secureFile.id + ".jpg";
        } else if (this.imagesArrLocations.isEmpty() && this.imagesArr.isEmpty()) {
            if (this.imagesArrLocals.isEmpty()) {
                PageBlocksAdapter pageBlocksAdapter2 = this.pageBlocksAdapter;
                if (pageBlocksAdapter2 != null) {
                    return pageBlocksAdapter2.getFileName(i);
                }
            } else if (i >= this.imagesArrLocals.size()) {
                return null;
            } else {
                Object obj = this.imagesArrLocals.get(i);
                if (obj instanceof MediaController.SearchImage) {
                    return ((MediaController.SearchImage) obj).getAttachName();
                }
                if (obj instanceof TLRPC$BotInlineResult) {
                    TLRPC$BotInlineResult tLRPC$BotInlineResult = (TLRPC$BotInlineResult) obj;
                    TLRPC$Document tLRPC$Document = tLRPC$BotInlineResult.document;
                    if (tLRPC$Document != null) {
                        return FileLoader.getAttachFileName(tLRPC$Document);
                    }
                    TLRPC$Photo tLRPC$Photo = tLRPC$BotInlineResult.photo;
                    if (tLRPC$Photo != null) {
                        return FileLoader.getAttachFileName(FileLoader.getClosestPhotoSizeWithSize(tLRPC$Photo.sizes, AndroidUtilities.getPhotoSize()));
                    }
                    if (tLRPC$BotInlineResult.content instanceof TLRPC$TL_webDocument) {
                        StringBuilder sb = new StringBuilder();
                        sb.append(Utilities.MD5(tLRPC$BotInlineResult.content.url));
                        sb.append(".");
                        TLRPC$WebDocument tLRPC$WebDocument = tLRPC$BotInlineResult.content;
                        sb.append(ImageLoader.getHttpUrlExtension(tLRPC$WebDocument.url, FileLoader.getMimeTypePart(tLRPC$WebDocument.mime_type)));
                        return sb.toString();
                    }
                }
            }
            return null;
        } else if (!this.imagesArrLocations.isEmpty()) {
            if (i >= this.imagesArrLocations.size()) {
                return null;
            }
            ImageLocation imageLocation = this.imagesArrLocations.get(i);
            ImageLocation imageLocation2 = this.imagesArrLocationsVideo.get(i);
            if (imageLocation == null) {
                return null;
            }
            if (imageLocation2 != imageLocation) {
                return imageLocation2.location.volume_id + "_" + imageLocation2.location.local_id + ".mp4";
            }
            return imageLocation.location.volume_id + "_" + imageLocation.location.local_id + ".jpg";
        } else if (i >= this.imagesArr.size()) {
            return null;
        } else {
            return FileLoader.getMessageFileName(this.imagesArr.get(i).messageOwner);
        }
    }

    private ImageLocation getImageLocation(int i, long[] jArr) {
        if (i < 0) {
            return null;
        }
        if (!this.secureDocuments.isEmpty()) {
            if (i >= this.secureDocuments.size()) {
                return null;
            }
            if (jArr != null) {
                jArr[0] = this.secureDocuments.get(i).secureFile.size;
            }
            return ImageLocation.getForSecureDocument(this.secureDocuments.get(i));
        } else if (!this.imagesArrLocations.isEmpty()) {
            if (i >= this.imagesArrLocations.size()) {
                return null;
            }
            if (jArr != null) {
                jArr[0] = this.imagesArrLocationsSizes.get(i).longValue();
            }
            return this.imagesArrLocationsVideo.get(i);
        } else if (this.imagesArr.isEmpty() || i >= this.imagesArr.size()) {
            return null;
        } else {
            MessageObject messageObject = this.imagesArr.get(i);
            TLRPC$Message tLRPC$Message = messageObject.messageOwner;
            if (!(tLRPC$Message instanceof TLRPC$TL_messageService)) {
                TLRPC$MessageMedia tLRPC$MessageMedia = tLRPC$Message.media;
                if ((!(tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaPhoto) || tLRPC$MessageMedia.photo == null) && (!(tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaWebPage) || tLRPC$MessageMedia.webpage == null)) {
                    if (tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaInvoice) {
                        return ImageLocation.getForWebFile(WebFile.createWithWebDocument(((TLRPC$TL_messageMediaInvoice) tLRPC$MessageMedia).photo));
                    }
                    if (messageObject.getDocument() != null) {
                        TLRPC$Document document = messageObject.getDocument();
                        if (this.sharedMediaType == 5) {
                            return ImageLocation.getForDocument(document);
                        }
                        if (MessageObject.isDocumentHasThumb(messageObject.getDocument())) {
                            TLRPC$PhotoSize closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(document.thumbs, 90);
                            if (jArr != null) {
                                jArr[0] = (long) closestPhotoSizeWithSize.size;
                                if (jArr[0] == 0) {
                                    jArr[0] = -1;
                                }
                            }
                            return ImageLocation.getForDocument(closestPhotoSizeWithSize, document);
                        }
                    }
                } else if (messageObject.isGif()) {
                    return ImageLocation.getForDocument(messageObject.getDocument());
                } else {
                    TLRPC$PhotoSize closestPhotoSizeWithSize2 = FileLoader.getClosestPhotoSizeWithSize(messageObject.photoThumbs, AndroidUtilities.getPhotoSize(), false, (TLRPC$PhotoSize) null, true);
                    if (closestPhotoSizeWithSize2 != null) {
                        if (jArr != null) {
                            jArr[0] = (long) closestPhotoSizeWithSize2.size;
                            if (jArr[0] == 0) {
                                jArr[0] = -1;
                            }
                        }
                        return ImageLocation.getForObject(closestPhotoSizeWithSize2, messageObject.photoThumbsObject);
                    } else if (jArr != null) {
                        jArr[0] = -1;
                    }
                }
            } else if (tLRPC$Message.action instanceof TLRPC$TL_messageActionUserUpdatedPhoto) {
                return null;
            } else {
                TLRPC$PhotoSize closestPhotoSizeWithSize3 = FileLoader.getClosestPhotoSizeWithSize(messageObject.photoThumbs, AndroidUtilities.getPhotoSize());
                if (closestPhotoSizeWithSize3 != null) {
                    if (jArr != null) {
                        jArr[0] = (long) closestPhotoSizeWithSize3.size;
                        if (jArr[0] == 0) {
                            jArr[0] = -1;
                        }
                    }
                    return ImageLocation.getForObject(closestPhotoSizeWithSize3, messageObject.photoThumbsObject);
                } else if (jArr != null) {
                    jArr[0] = -1;
                }
            }
            return null;
        }
    }

    /* access modifiers changed from: private */
    public TLObject getFileLocation(int i, long[] jArr) {
        if (i < 0) {
            return null;
        }
        if (!this.secureDocuments.isEmpty()) {
            if (i >= this.secureDocuments.size()) {
                return null;
            }
            if (jArr != null) {
                jArr[0] = this.secureDocuments.get(i).secureFile.size;
            }
            return this.secureDocuments.get(i);
        } else if (!this.imagesArrLocations.isEmpty()) {
            if (i >= this.imagesArrLocations.size()) {
                return null;
            }
            if (jArr != null) {
                jArr[0] = this.imagesArrLocationsSizes.get(i).longValue();
            }
            return this.imagesArrLocationsVideo.get(i).location;
        } else if (this.imagesArr.isEmpty() || i >= this.imagesArr.size()) {
            return null;
        } else {
            MessageObject messageObject = this.imagesArr.get(i);
            TLRPC$Message tLRPC$Message = messageObject.messageOwner;
            if (tLRPC$Message instanceof TLRPC$TL_messageService) {
                TLRPC$MessageAction tLRPC$MessageAction = tLRPC$Message.action;
                if (tLRPC$MessageAction instanceof TLRPC$TL_messageActionUserUpdatedPhoto) {
                    return tLRPC$MessageAction.newUserPhoto.photo_big;
                }
                TLRPC$PhotoSize closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(messageObject.photoThumbs, AndroidUtilities.getPhotoSize());
                if (closestPhotoSizeWithSize != null) {
                    if (jArr != null) {
                        jArr[0] = (long) closestPhotoSizeWithSize.size;
                        if (jArr[0] == 0) {
                            jArr[0] = -1;
                        }
                    }
                    return closestPhotoSizeWithSize;
                } else if (jArr != null) {
                    jArr[0] = -1;
                }
            } else {
                TLRPC$MessageMedia tLRPC$MessageMedia = tLRPC$Message.media;
                if (((tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaPhoto) && tLRPC$MessageMedia.photo != null) || ((tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaWebPage) && tLRPC$MessageMedia.webpage != null)) {
                    TLRPC$PhotoSize closestPhotoSizeWithSize2 = FileLoader.getClosestPhotoSizeWithSize(messageObject.photoThumbs, AndroidUtilities.getPhotoSize(), false, (TLRPC$PhotoSize) null, true);
                    if (closestPhotoSizeWithSize2 != null) {
                        if (jArr != null) {
                            jArr[0] = (long) closestPhotoSizeWithSize2.size;
                            if (jArr[0] == 0) {
                                jArr[0] = -1;
                            }
                        }
                        return closestPhotoSizeWithSize2;
                    } else if (jArr != null) {
                        jArr[0] = -1;
                    }
                } else if (tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaInvoice) {
                    return ((TLRPC$TL_messageMediaInvoice) tLRPC$MessageMedia).photo;
                } else {
                    if (messageObject.getDocument() != null && MessageObject.isDocumentHasThumb(messageObject.getDocument())) {
                        TLRPC$PhotoSize closestPhotoSizeWithSize3 = FileLoader.getClosestPhotoSizeWithSize(messageObject.getDocument().thumbs, 90);
                        if (jArr != null) {
                            jArr[0] = (long) closestPhotoSizeWithSize3.size;
                            if (jArr[0] == 0) {
                                jArr[0] = -1;
                            }
                        }
                        return closestPhotoSizeWithSize3;
                    }
                }
            }
            return null;
        }
    }

    /* access modifiers changed from: private */
    public void updateSelectedCount() {
        PhotoViewerProvider photoViewerProvider = this.placeProvider;
        if (photoViewerProvider != null) {
            int selectedCount = photoViewerProvider.getSelectedCount();
            this.photosCounterView.setCount(selectedCount);
            if (selectedCount == 0) {
                togglePhotosListView(false, true);
            }
        }
    }

    /* access modifiers changed from: private */
    public boolean isCurrentAvatarSet() {
        int i;
        if (this.currentAvatarLocation != null && (i = this.currentIndex) >= 0 && i < this.avatarsArr.size()) {
            TLRPC$Photo tLRPC$Photo = this.avatarsArr.get(this.currentIndex);
            ImageLocation imageLocation = this.imagesArrLocations.get(this.currentIndex);
            if (tLRPC$Photo instanceof TLRPC$TL_photoEmpty) {
                tLRPC$Photo = null;
            }
            if (tLRPC$Photo != null) {
                int size = tLRPC$Photo.sizes.size();
                for (int i2 = 0; i2 < size; i2++) {
                    TLRPC$FileLocation tLRPC$FileLocation = tLRPC$Photo.sizes.get(i2).location;
                    if (tLRPC$FileLocation != null) {
                        int i3 = tLRPC$FileLocation.local_id;
                        TLRPC$TL_fileLocationToBeDeprecated tLRPC$TL_fileLocationToBeDeprecated = this.currentAvatarLocation.location;
                        if (i3 == tLRPC$TL_fileLocationToBeDeprecated.local_id && tLRPC$FileLocation.volume_id == tLRPC$TL_fileLocationToBeDeprecated.volume_id) {
                            return true;
                        }
                    }
                }
            } else {
                TLRPC$TL_fileLocationToBeDeprecated tLRPC$TL_fileLocationToBeDeprecated2 = imageLocation.location;
                int i4 = tLRPC$TL_fileLocationToBeDeprecated2.local_id;
                TLRPC$TL_fileLocationToBeDeprecated tLRPC$TL_fileLocationToBeDeprecated3 = this.currentAvatarLocation.location;
                if (i4 == tLRPC$TL_fileLocationToBeDeprecated3.local_id && tLRPC$TL_fileLocationToBeDeprecated2.volume_id == tLRPC$TL_fileLocationToBeDeprecated3.volume_id) {
                    return true;
                }
                return false;
            }
        }
        return false;
    }

    private void setItemVisible(View view, boolean z, boolean z2) {
        setItemVisible(view, z, z2, 1.0f);
    }

    private void setItemVisible(View view, boolean z, boolean z2, float f) {
        Boolean bool = this.actionBarItemsVisibility.get(view);
        if (bool == null || bool.booleanValue() != z) {
            this.actionBarItemsVisibility.put(view, Boolean.valueOf(z));
            view.animate().cancel();
            float f2 = (z ? 1.0f : 0.0f) * f;
            int i = 0;
            if (!z2 || bool == null) {
                if (!z) {
                    i = 8;
                }
                view.setVisibility(i);
                view.setAlpha(f2);
                return;
            }
            if (z) {
                view.setVisibility(0);
            }
            view.animate().alpha(f2).setDuration(100).setInterpolator(new LinearInterpolator()).withEndAction(new PhotoViewer$$ExternalSyntheticLambda69(z, view)).start();
        }
    }

    /* access modifiers changed from: private */
    public static /* synthetic */ void lambda$setItemVisible$66(boolean z, View view) {
        if (!z) {
            view.setVisibility(8);
        }
    }

    /* JADX WARNING: type inference failed for: r11v1, types: [android.animation.AnimatorSet, java.lang.String] */
    /* JADX WARNING: type inference failed for: r11v22 */
    /* JADX WARNING: type inference failed for: r11v23 */
    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:322:0x07bc  */
    /* JADX WARNING: Removed duplicated region for block: B:327:0x0803  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void onPhotoShow(org.telegram.messenger.MessageObject r19, org.telegram.tgnet.TLRPC$FileLocation r20, org.telegram.messenger.ImageLocation r21, org.telegram.messenger.ImageLocation r22, java.util.ArrayList<org.telegram.messenger.MessageObject> r23, java.util.ArrayList<org.telegram.messenger.SecureDocument> r24, java.util.List<java.lang.Object> r25, int r26, org.telegram.ui.PhotoViewer.PlaceProviderObject r27) {
        /*
            r18 = this;
            r0 = r18
            r1 = r19
            r2 = r23
            r3 = r24
            r4 = r25
            r5 = r26
            r6 = r27
            int r7 = org.telegram.tgnet.ConnectionsManager.generateClassGuid()
            r0.classGuid = r7
            r7 = 0
            r0.currentMessageObject = r7
            r0.currentFileLocation = r7
            r0.currentFileLocationVideo = r7
            r0.currentSecureDocument = r7
            r0.currentPathObject = r7
            r0.currentPageBlock = r7
            r8 = 0
            r0.fromCamera = r8
            r0.currentBotInlineResult = r7
            r9 = 0
            r0.avatarStartProgress = r9
            r10 = 0
            r0.avatarStartTime = r10
            r12 = -1
            r0.currentIndex = r12
            java.lang.String[] r13 = r0.currentFileNames
            r13[r8] = r7
            r14 = 1
            java.lang.Integer r15 = java.lang.Integer.valueOf(r14)
            r13[r14] = r7
            r12 = 2
            r13[r12] = r7
            r0.avatarsDialogId = r10
            r0.canEditAvatar = r8
            r0.totalImagesCount = r8
            r0.totalImagesCountMerge = r8
            r0.currentEditMode = r8
            r0.isFirstLoading = r14
            r0.needSearchImageInArr = r8
            r0.loadingMoreImages = r8
            boolean[] r13 = r0.endReached
            r13[r8] = r8
            long r7 = r0.mergeDialogId
            int r17 = (r7 > r10 ? 1 : (r7 == r10 ? 0 : -1))
            if (r17 != 0) goto L_0x005a
            r7 = 1
            goto L_0x005b
        L_0x005a:
            r7 = 0
        L_0x005b:
            r13[r14] = r7
            r7 = 0
            r0.opennedFromMedia = r7
            r0.needCaptionLayout = r7
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r8 = r0.containerView
            r8.setTag(r15)
            r0.playerAutoStarted = r7
            r0.isCurrentVideo = r7
            r0.shownControlsByEnd = r7
            java.util.ArrayList<org.telegram.messenger.MessageObject> r7 = r0.imagesArr
            r7.clear()
            java.util.ArrayList<org.telegram.messenger.ImageLocation> r7 = r0.imagesArrLocations
            r7.clear()
            java.util.ArrayList<java.lang.Long> r7 = r0.imagesArrLocationsSizes
            r7.clear()
            java.util.ArrayList<org.telegram.messenger.ImageLocation> r7 = r0.imagesArrLocationsVideo
            r7.clear()
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r7 = r0.imagesArrMessages
            r7.clear()
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Photo> r7 = r0.avatarsArr
            r7.clear()
            java.util.ArrayList<org.telegram.messenger.SecureDocument> r7 = r0.secureDocuments
            r7.clear()
            java.util.ArrayList<java.lang.Object> r7 = r0.imagesArrLocals
            r7.clear()
            r7 = 0
        L_0x0096:
            if (r7 >= r12) goto L_0x00a9
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r8 = r0.imagesByIds
            r8 = r8[r7]
            r8.clear()
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r8 = r0.imagesByIdsTemp
            r8 = r8[r7]
            r8.clear()
            int r7 = r7 + 1
            goto L_0x0096
        L_0x00a9:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r7 = r0.imagesArrTemp
            r7.clear()
            r7 = 0
            r0.currentAvatarLocation = r7
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r7 = r0.containerView
            r8 = 0
            r7.setPadding(r8, r8, r8, r8)
            org.telegram.messenger.ImageReceiver$BitmapHolder r7 = r0.currentThumb
            if (r7 == 0) goto L_0x00be
            r7.release()
        L_0x00be:
            org.telegram.ui.Components.VideoTimelinePlayView r7 = r0.videoTimelineView
            if (r7 == 0) goto L_0x00d0
            int r8 = r0.sendPhotoType
            if (r8 != r14) goto L_0x00cb
            r8 = 0
            r7.setBackground(r8)
            goto L_0x00d0
        L_0x00cb:
            r8 = 2130706432(0x7var_, float:1.7014118E38)
            r7.setBackgroundColor(r8)
        L_0x00d0:
            if (r6 == 0) goto L_0x00d5
            org.telegram.messenger.ImageReceiver$BitmapHolder r7 = r6.thumb
            goto L_0x00d6
        L_0x00d5:
            r7 = 0
        L_0x00d6:
            r0.currentThumb = r7
            if (r6 == 0) goto L_0x00e0
            boolean r7 = r6.isEvent
            if (r7 == 0) goto L_0x00e0
            r7 = 1
            goto L_0x00e1
        L_0x00e0:
            r7 = 0
        L_0x00e1:
            r0.isEvent = r7
            r7 = 0
            r0.sharedMediaType = r7
            org.telegram.ui.ActionBar.ActionBarMenuSubItem r8 = r0.allMediaItem
            r13 = 2131628395(0x7f0e116b, float:1.8884081E38)
            java.lang.String r10 = "ShowAllMedia"
            java.lang.String r10 = org.telegram.messenger.LocaleController.getString(r10, r13)
            r8.setText(r10)
            org.telegram.ui.ActionBar.ActionBarMenuItem r8 = r0.sendItem
            r0.setItemVisible(r8, r7, r7)
            org.telegram.ui.ActionBar.ActionBarMenuItem r8 = r0.pipItem
            r0.setItemVisible(r8, r7, r14)
            android.widget.ImageView r8 = r0.cameraItem
            r10 = 8
            r8.setVisibility(r10)
            android.widget.ImageView r8 = r0.cameraItem
            r11 = 0
            r8.setTag(r11)
            android.widget.FrameLayout r8 = r0.bottomLayout
            r8.setVisibility(r7)
            android.widget.FrameLayout r7 = r0.bottomLayout
            r7.setTag(r15)
            android.widget.FrameLayout r7 = r0.bottomLayout
            r7.setTranslationY(r9)
            org.telegram.ui.PhotoViewer$CaptionTextViewSwitcher r7 = r0.captionTextViewSwitcher
            r7.setTranslationY(r9)
            android.widget.LinearLayout r7 = r0.bottomButtonsLayout
            r7.setVisibility(r10)
            android.widget.ImageView r7 = r0.paintButton
            r7.setVisibility(r10)
            org.telegram.ui.PhotoViewer$QualityChooseView r7 = r0.qualityChooseView
            r8 = 4
            if (r7 == 0) goto L_0x013d
            r7.setVisibility(r8)
            org.telegram.ui.Components.PickerBottomLayoutViewer r7 = r0.qualityPicker
            r7.setVisibility(r8)
            org.telegram.ui.PhotoViewer$QualityChooseView r7 = r0.qualityChooseView
            r11 = 0
            r7.setTag(r11)
            goto L_0x013e
        L_0x013d:
            r11 = 0
        L_0x013e:
            android.animation.AnimatorSet r7 = r0.qualityChooseViewAnimation
            if (r7 == 0) goto L_0x0147
            r7.cancel()
            r0.qualityChooseViewAnimation = r11
        L_0x0147:
            r0.setDoubleTapEnabled(r14)
            r7 = 0
            r0.allowShare = r7
            r0.slideshowMessageId = r7
            r0.nameOverride = r11
            r0.dateOverride = r7
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.menuItem
            r7.hideSubItem(r12)
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.menuItem
            r7.hideSubItem(r8)
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.menuItem
            r11 = 10
            r7.hideSubItem(r11)
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.menuItem
            r13 = 11
            r7.hideSubItem(r13)
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.menuItem
            r13 = 14
            r7.hideSubItem(r13)
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.menuItem
            r13 = 15
            r7.hideSubItem(r13)
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.menuItem
            r13 = 17
            r7.hideSubItem(r13)
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.menuItem
            r13 = 16
            r7.hideSubItem(r13)
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.menuItem
            r13 = 6
            r7.hideSubItem(r13)
            org.telegram.ui.ActionBar.ActionBarMenuSubItem r7 = r0.speedItem
            r7.setVisibility(r10)
            org.telegram.ui.ActionBar.ActionBarPopupWindow$GapView r7 = r0.speedGap
            r7.setVisibility(r10)
            org.telegram.ui.ActionBar.ActionBar r7 = r0.actionBar
            r7.setTranslationY(r9)
            org.telegram.ui.Components.CheckBox r7 = r0.checkImageView
            r13 = 1065353216(0x3var_, float:1.0)
            r7.setAlpha(r13)
            org.telegram.ui.Components.CheckBox r7 = r0.checkImageView
            r7.setTranslationY(r9)
            org.telegram.ui.Components.CheckBox r7 = r0.checkImageView
            r7.setVisibility(r10)
            org.telegram.ui.ActionBar.ActionBar r7 = r0.actionBar
            r11 = 0
            r7.setTitleRightMargin(r11)
            org.telegram.ui.PhotoViewer$CounterView r7 = r0.photosCounterView
            r7.setAlpha(r13)
            org.telegram.ui.PhotoViewer$CounterView r7 = r0.photosCounterView
            r7.setTranslationY(r9)
            org.telegram.ui.PhotoViewer$CounterView r7 = r0.photosCounterView
            r7.setVisibility(r10)
            android.widget.FrameLayout r7 = r0.pickerView
            r7.setVisibility(r10)
            android.widget.ImageView r7 = r0.pickerViewSendButton
            r7.setVisibility(r10)
            android.widget.ImageView r7 = r0.pickerViewSendButton
            r7.setTranslationY(r9)
            android.widget.FrameLayout r7 = r0.pickerView
            r7.setAlpha(r13)
            android.widget.ImageView r7 = r0.pickerViewSendButton
            r7.setAlpha(r13)
            android.widget.FrameLayout r7 = r0.pickerView
            r7.setTranslationY(r9)
            android.widget.ImageView r7 = r0.paintItem
            r7.setVisibility(r10)
            android.widget.ImageView r7 = r0.paintItem
            r11 = 0
            r7.setTag(r11)
            android.widget.ImageView r7 = r0.cropItem
            r7.setVisibility(r10)
            android.widget.ImageView r7 = r0.tuneItem
            r7.setVisibility(r10)
            android.widget.ImageView r7 = r0.tuneItem
            r7.setTag(r11)
            android.widget.ImageView r7 = r0.timeItem
            r7.setVisibility(r10)
            android.widget.ImageView r7 = r0.rotateItem
            r7.setVisibility(r10)
            android.widget.ImageView r7 = r0.mirrorItem
            r7.setVisibility(r10)
            android.widget.FrameLayout r7 = r0.pickerView
            android.view.ViewGroup$LayoutParams r7 = r7.getLayoutParams()
            r11 = -2
            r7.height = r11
            android.widget.TextView r7 = r0.docInfoTextView
            r7.setVisibility(r10)
            android.widget.TextView r7 = r0.docNameTextView
            r7.setVisibility(r10)
            r7 = 0
            r0.showVideoTimeline(r7, r7)
            android.widget.TextView r11 = r0.videoAvatarTooltip
            r11.setVisibility(r10)
            android.widget.ImageView r11 = r0.compressItem
            r11.setVisibility(r10)
            org.telegram.ui.Components.PhotoViewerCaptionEnterView r11 = r0.captionEditText
            r11.setVisibility(r10)
            org.telegram.ui.Components.RecyclerListView r11 = r0.mentionListView
            r11.setVisibility(r10)
            android.widget.ImageView r11 = r0.muteItem
            org.telegram.messenger.AndroidUtilities.updateViewVisibilityAnimated(r11, r7, r13, r7)
            org.telegram.ui.ActionBar.ActionBar r11 = r0.actionBar
            r9 = 0
            r11.setSubtitle(r9)
            org.telegram.ui.ActionBar.ActionBarMenuItem r9 = r0.masksItem
            r0.setItemVisible(r9, r7, r14)
            org.telegram.ui.ActionBar.ActionBarMenuItem r9 = r0.shareItem
            r9.setVisibility(r10)
            r0.muteVideo = r7
            android.widget.ImageView r7 = r0.muteItem
            r9 = 2131166210(0x7var_, float:1.7946659E38)
            r7.setImageResource(r9)
            org.telegram.ui.Components.PickerBottomLayoutViewer r7 = r0.editorDoneLayout
            r7.setVisibility(r10)
            org.telegram.ui.PhotoViewer$CaptionTextViewSwitcher r7 = r0.captionTextViewSwitcher
            r9 = 0
            r7.setTag(r9)
            org.telegram.ui.PhotoViewer$CaptionTextViewSwitcher r7 = r0.captionTextViewSwitcher
            r7.setVisibility(r8)
            org.telegram.ui.Components.PhotoCropView r7 = r0.photoCropView
            if (r7 == 0) goto L_0x026a
            r7.setVisibility(r10)
        L_0x026a:
            org.telegram.ui.Components.PhotoFilterView r7 = r0.photoFilterView
            if (r7 == 0) goto L_0x0271
            r7.setVisibility(r10)
        L_0x0271:
            r7 = 0
        L_0x0272:
            r9 = 3
            if (r7 >= r9) goto L_0x0288
            org.telegram.ui.PhotoViewer$PhotoProgressView[] r9 = r0.photoProgressViews
            r11 = r9[r7]
            if (r11 == 0) goto L_0x0283
            r9 = r9[r7]
            r11 = -1
            r12 = 0
            r9.setBackgroundState(r11, r12, r14)
            goto L_0x0284
        L_0x0283:
            r11 = -1
        L_0x0284:
            int r7 = r7 + 1
            r12 = 2
            goto L_0x0272
        L_0x0288:
            org.telegram.ui.Components.GroupedPhotosListView r7 = r0.groupedPhotosListView
            if (r7 == 0) goto L_0x0299
            r7.reset()
            org.telegram.ui.Components.GroupedPhotosListView r7 = r0.groupedPhotosListView
            boolean r9 = org.telegram.messenger.ApplicationLoader.isNetworkOnline()
            r9 = r9 ^ r14
            r7.setAnimateBackground(r9)
        L_0x0299:
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r7 = r0.placeProvider
            if (r7 == 0) goto L_0x02ab
            int r7 = r7.getTotalImageCount()
            if (r7 <= 0) goto L_0x02ab
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r7 = r0.placeProvider
            int r7 = r7.getTotalImageCount()
            r0.totalImagesCount = r7
        L_0x02ab:
            if (r1 == 0) goto L_0x02de
            android.content.Context r7 = org.telegram.messenger.ApplicationLoader.applicationContext
            java.lang.String r9 = "playback_speed"
            r11 = 0
            android.content.SharedPreferences r7 = r7.getSharedPreferences(r9, r11)
            java.lang.StringBuilder r9 = new java.lang.StringBuilder
            r9.<init>()
            java.lang.String r11 = "speed"
            r9.append(r11)
            long r11 = r19.getDialogId()
            r9.append(r11)
            java.lang.String r11 = "_"
            r9.append(r11)
            int r11 = r19.getId()
            r9.append(r11)
            java.lang.String r9 = r9.toString()
            float r7 = r7.getFloat(r9, r13)
            r0.currentVideoSpeed = r7
            goto L_0x02e0
        L_0x02de:
            r0.currentVideoSpeed = r13
        L_0x02e0:
            r18.setMenuItemIcon()
            if (r1 == 0) goto L_0x02ff
            int r7 = r0.currentAccount
            org.telegram.messenger.MessagesController r7 = org.telegram.messenger.MessagesController.getInstance(r7)
            long r11 = r19.getChatId()
            boolean r7 = r7.isChatNoForwards((long) r11)
            if (r7 != 0) goto L_0x02fd
            org.telegram.tgnet.TLRPC$Message r7 = r1.messageOwner
            if (r7 == 0) goto L_0x02ff
            boolean r7 = r7.noforwards
            if (r7 == 0) goto L_0x02ff
        L_0x02fd:
            r7 = 1
            goto L_0x0300
        L_0x02ff:
            r7 = 0
        L_0x0300:
            r9 = 2131628394(0x7f0e116a, float:1.888408E38)
            java.lang.String r11 = "ShowAllGIFs"
            r12 = 2131628393(0x7f0e1169, float:1.8884077E38)
            java.lang.String r13 = "ShowAllFiles"
            r8 = 5
            if (r1 == 0) goto L_0x0456
            if (r2 != 0) goto L_0x0456
            org.telegram.tgnet.TLRPC$Message r2 = r1.messageOwner
            if (r2 == 0) goto L_0x03a1
            org.telegram.tgnet.TLRPC$MessageMedia r2 = r2.media
            boolean r3 = r2 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaWebPage
            if (r3 == 0) goto L_0x03a1
            org.telegram.tgnet.TLRPC$WebPage r2 = r2.webpage
            if (r2 == 0) goto L_0x03a1
            java.lang.String r3 = r2.site_name
            if (r3 == 0) goto L_0x03a1
            java.lang.String r3 = r3.toLowerCase()
            java.lang.String r4 = "instagram"
            boolean r4 = r3.equals(r4)
            if (r4 != 0) goto L_0x033f
            java.lang.String r4 = "twitter"
            boolean r3 = r3.equals(r4)
            if (r3 != 0) goto L_0x033f
            java.lang.String r3 = r2.type
            java.lang.String r4 = "telegram_album"
            boolean r3 = r4.equals(r3)
            if (r3 == 0) goto L_0x03a1
        L_0x033f:
            java.lang.String r3 = r2.author
            boolean r3 = android.text.TextUtils.isEmpty(r3)
            if (r3 != 0) goto L_0x034b
            java.lang.String r3 = r2.author
            r0.nameOverride = r3
        L_0x034b:
            org.telegram.tgnet.TLRPC$Page r3 = r2.cached_page
            boolean r3 = r3 instanceof org.telegram.tgnet.TLRPC$TL_page
            if (r3 == 0) goto L_0x0374
            r3 = 0
        L_0x0352:
            org.telegram.tgnet.TLRPC$Page r4 = r2.cached_page
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PageBlock> r4 = r4.blocks
            int r4 = r4.size()
            if (r3 >= r4) goto L_0x0374
            org.telegram.tgnet.TLRPC$Page r4 = r2.cached_page
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PageBlock> r4 = r4.blocks
            java.lang.Object r4 = r4.get(r3)
            org.telegram.tgnet.TLRPC$PageBlock r4 = (org.telegram.tgnet.TLRPC$PageBlock) r4
            boolean r6 = r4 instanceof org.telegram.tgnet.TLRPC$TL_pageBlockAuthorDate
            if (r6 == 0) goto L_0x0371
            org.telegram.tgnet.TLRPC$TL_pageBlockAuthorDate r4 = (org.telegram.tgnet.TLRPC$TL_pageBlockAuthorDate) r4
            int r2 = r4.published_date
            r0.dateOverride = r2
            goto L_0x0374
        L_0x0371:
            int r3 = r3 + 1
            goto L_0x0352
        L_0x0374:
            r2 = 0
            java.util.ArrayList r3 = r1.getWebPagePhotos(r2, r2)
            boolean r2 = r3.isEmpty()
            if (r2 != 0) goto L_0x03a1
            int r2 = r19.getId()
            r0.slideshowMessageId = r2
            r2 = 0
            r0.needSearchImageInArr = r2
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r0.imagesArr
            r2.addAll(r3)
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r0.imagesArr
            int r2 = r2.size()
            r0.totalImagesCount = r2
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r0.imagesArr
            int r2 = r2.indexOf(r1)
            if (r2 >= 0) goto L_0x039e
            r2 = 0
        L_0x039e:
            r0.setImageIndex(r2)
        L_0x03a1:
            boolean r2 = r19.canPreviewDocument()
            if (r2 == 0) goto L_0x03b3
            r0.sharedMediaType = r14
            org.telegram.ui.ActionBar.ActionBarMenuSubItem r2 = r0.allMediaItem
            java.lang.String r3 = org.telegram.messenger.LocaleController.getString(r13, r12)
            r2.setText(r3)
            goto L_0x03c4
        L_0x03b3:
            boolean r2 = r19.isGif()
            if (r2 == 0) goto L_0x03c4
            r0.sharedMediaType = r8
            org.telegram.ui.ActionBar.ActionBarMenuSubItem r2 = r0.allMediaItem
            java.lang.String r3 = org.telegram.messenger.LocaleController.getString(r11, r9)
            r2.setText(r3)
        L_0x03c4:
            boolean r2 = r0.isEmbedVideo
            if (r2 == 0) goto L_0x03d3
            android.widget.FrameLayout r2 = r0.bottomLayout
            r3 = 0
            r2.setTag(r3)
            android.widget.FrameLayout r2 = r0.bottomLayout
            r2.setVisibility(r10)
        L_0x03d3:
            int r2 = r0.slideshowMessageId
            if (r2 != 0) goto L_0x0460
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r0.imagesArr
            r2.add(r1)
            long r2 = r1.eventId
            r8 = 0
            int r4 = (r2 > r8 ? 1 : (r2 == r8 ? 0 : -1))
            if (r4 == 0) goto L_0x03e8
            r4 = 0
            r0.needSearchImageInArr = r4
            goto L_0x0452
        L_0x03e8:
            r4 = 0
            org.telegram.ui.Components.AnimatedFileDrawable r6 = r0.currentAnimation
            if (r6 == 0) goto L_0x03fd
            r0.needSearchImageInArr = r4
            boolean r1 = r19.canForwardMessage()
            if (r1 == 0) goto L_0x0452
            if (r7 != 0) goto L_0x0452
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.sendItem
            r0.setItemVisible(r1, r14, r4)
            goto L_0x0452
        L_0x03fd:
            boolean r4 = r1.scheduled
            if (r4 != 0) goto L_0x0442
            org.telegram.tgnet.TLRPC$Message r4 = r1.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r6 = r4.media
            boolean r8 = r6 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaInvoice
            if (r8 != 0) goto L_0x0442
            boolean r6 = r6 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaWebPage
            if (r6 != 0) goto L_0x0442
            org.telegram.tgnet.TLRPC$MessageAction r4 = r4.action
            if (r4 == 0) goto L_0x0415
            boolean r4 = r4 instanceof org.telegram.tgnet.TLRPC$TL_messageActionEmpty
            if (r4 == 0) goto L_0x0442
        L_0x0415:
            r0.needSearchImageInArr = r14
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r2 = r0.imagesByIds
            r3 = 0
            r2 = r2[r3]
            int r3 = r19.getId()
            r2.put(r3, r1)
            org.telegram.ui.ChatActivity r1 = r0.parentChatActivity
            if (r1 == 0) goto L_0x042d
            boolean r1 = r1.isThreadChat()
            if (r1 != 0) goto L_0x0439
        L_0x042d:
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.menuItem
            r2 = 4
            r1.showSubItem(r2)
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.menuItem
            r2 = 2
            r1.showSubItem(r2)
        L_0x0439:
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.sendItem
            r2 = r7 ^ 1
            r4 = 0
            r0.setItemVisible(r1, r2, r4)
            goto L_0x0452
        L_0x0442:
            r4 = 0
            boolean r1 = r0.isEmbedVideo
            if (r1 == 0) goto L_0x0452
            r6 = 0
            int r1 = (r2 > r6 ? 1 : (r2 == r6 ? 0 : -1))
            if (r1 != 0) goto L_0x0452
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.sendItem
            r0.setItemVisible(r1, r14, r4)
        L_0x0452:
            r0.setImageIndex(r4)
            goto L_0x0460
        L_0x0456:
            if (r3 == 0) goto L_0x0463
            java.util.ArrayList<org.telegram.messenger.SecureDocument> r1 = r0.secureDocuments
            r1.addAll(r3)
            r0.setImageIndex(r5)
        L_0x0460:
            r2 = 0
            goto L_0x07a0
        L_0x0463:
            if (r20 == 0) goto L_0x0518
            if (r6 == 0) goto L_0x046a
            long r1 = r6.dialogId
            goto L_0x046c
        L_0x046a:
            r1 = 0
        L_0x046c:
            r0.avatarsDialogId = r1
            if (r6 == 0) goto L_0x0476
            boolean r3 = r6.canEdit
            if (r3 == 0) goto L_0x0476
            r3 = 1
            goto L_0x0477
        L_0x0476:
            r3 = 0
        L_0x0477:
            r0.canEditAvatar = r3
            if (r21 != 0) goto L_0x04b2
            r3 = 0
            int r7 = (r1 > r3 ? 1 : (r1 == r3 ? 0 : -1))
            if (r7 == 0) goto L_0x04b2
            int r7 = (r1 > r3 ? 1 : (r1 == r3 ? 0 : -1))
            if (r7 <= 0) goto L_0x049b
            int r1 = r0.currentAccount
            org.telegram.messenger.MessagesController r1 = org.telegram.messenger.MessagesController.getInstance(r1)
            long r2 = r0.avatarsDialogId
            java.lang.Long r2 = java.lang.Long.valueOf(r2)
            org.telegram.tgnet.TLRPC$User r1 = r1.getUser(r2)
            r2 = 0
            org.telegram.messenger.ImageLocation r1 = org.telegram.messenger.ImageLocation.getForUserOrChat(r1, r2)
            goto L_0x04b4
        L_0x049b:
            r2 = 0
            int r1 = r0.currentAccount
            org.telegram.messenger.MessagesController r1 = org.telegram.messenger.MessagesController.getInstance(r1)
            long r3 = r0.avatarsDialogId
            long r3 = -r3
            java.lang.Long r3 = java.lang.Long.valueOf(r3)
            org.telegram.tgnet.TLRPC$Chat r1 = r1.getChat(r3)
            org.telegram.messenger.ImageLocation r1 = org.telegram.messenger.ImageLocation.getForUserOrChat(r1, r2)
            goto L_0x04b4
        L_0x04b2:
            r1 = r21
        L_0x04b4:
            if (r1 != 0) goto L_0x04b7
            return
        L_0x04b7:
            java.util.ArrayList<org.telegram.messenger.ImageLocation> r2 = r0.imagesArrLocations
            r2.add(r1)
            java.util.ArrayList<org.telegram.messenger.ImageLocation> r2 = r0.imagesArrLocationsVideo
            if (r22 == 0) goto L_0x04c3
            r3 = r22
            goto L_0x04c4
        L_0x04c3:
            r3 = r1
        L_0x04c4:
            r2.add(r3)
            r0.currentAvatarLocation = r1
            java.util.ArrayList<java.lang.Long> r1 = r0.imagesArrLocationsSizes
            if (r6 == 0) goto L_0x04d0
            long r2 = r6.size
            goto L_0x04d2
        L_0x04d0:
            r2 = 0
        L_0x04d2:
            java.lang.Long r2 = java.lang.Long.valueOf(r2)
            r1.add(r2)
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r1 = r0.imagesArrMessages
            r2 = 0
            r1.add(r2)
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Photo> r1 = r0.avatarsArr
            org.telegram.tgnet.TLRPC$TL_photoEmpty r2 = new org.telegram.tgnet.TLRPC$TL_photoEmpty
            r2.<init>()
            r1.add(r2)
            android.widget.LinearLayout r1 = r0.bottomButtonsLayout
            boolean r2 = r0.videoPlayerControlVisible
            if (r2 != 0) goto L_0x04f0
            r10 = 0
        L_0x04f0:
            r1.setVisibility(r10)
            r0.allowShare = r14
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.menuItem
            r2 = 2
            r1.hideSubItem(r2)
            android.widget.LinearLayout r1 = r0.bottomButtonsLayout
            int r1 = r1.getVisibility()
            if (r1 != 0) goto L_0x050b
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.menuItem
            r2 = 10
            r1.hideSubItem(r2)
            goto L_0x0512
        L_0x050b:
            r2 = 10
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.menuItem
            r1.showSubItem(r2)
        L_0x0512:
            r1 = 0
            r0.setImageIndex(r1)
            goto L_0x0460
        L_0x0518:
            if (r2 == 0) goto L_0x05b4
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r0.imagesArr
            r1.addAll(r2)
            r1 = 0
        L_0x0520:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r0.imagesArr
            int r2 = r2.size()
            if (r1 >= r2) goto L_0x054e
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r0.imagesArr
            java.lang.Object r2 = r2.get(r1)
            org.telegram.messenger.MessageObject r2 = (org.telegram.messenger.MessageObject) r2
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r3 = r0.imagesByIds
            long r15 = r2.getDialogId()
            long r9 = r0.currentDialogId
            int r4 = (r15 > r9 ? 1 : (r15 == r9 ? 0 : -1))
            if (r4 != 0) goto L_0x053e
            r4 = 0
            goto L_0x053f
        L_0x053e:
            r4 = 1
        L_0x053f:
            r3 = r3[r4]
            int r4 = r2.getId()
            r3.put(r4, r2)
            int r1 = r1 + 1
            r9 = 2131628394(0x7f0e116a, float:1.888408E38)
            goto L_0x0520
        L_0x054e:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r0.imagesArr
            java.lang.Object r1 = r1.get(r5)
            org.telegram.messenger.MessageObject r1 = (org.telegram.messenger.MessageObject) r1
            boolean r2 = r1.scheduled
            if (r2 != 0) goto L_0x05a7
            org.telegram.ui.ChatActivity r2 = r0.parentChatActivity
            if (r2 == 0) goto L_0x0564
            boolean r2 = r2.isThreadChat()
            if (r2 != 0) goto L_0x05a7
        L_0x0564:
            r0.opennedFromMedia = r14
            if (r6 == 0) goto L_0x056c
            int r2 = r6.starOffset
            r0.startOffset = r2
        L_0x056c:
            org.telegram.ui.ActionBar.ActionBarMenuItem r2 = r0.menuItem
            r3 = 4
            r2.showSubItem(r3)
            boolean r2 = r1.canForwardMessage()
            if (r2 == 0) goto L_0x0580
            if (r7 != 0) goto L_0x0580
            org.telegram.ui.ActionBar.ActionBarMenuItem r2 = r0.sendItem
            r3 = 0
            r0.setItemVisible(r2, r14, r3)
        L_0x0580:
            boolean r2 = r1.canPreviewDocument()
            if (r2 == 0) goto L_0x0592
            r0.sharedMediaType = r14
            org.telegram.ui.ActionBar.ActionBarMenuSubItem r1 = r0.allMediaItem
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r13, r12)
            r1.setText(r2)
            goto L_0x05af
        L_0x0592:
            boolean r1 = r1.isGif()
            if (r1 == 0) goto L_0x05af
            r0.sharedMediaType = r8
            org.telegram.ui.ActionBar.ActionBarMenuSubItem r1 = r0.allMediaItem
            r2 = 2131628394(0x7f0e116a, float:1.888408E38)
            java.lang.String r2 = org.telegram.messenger.LocaleController.getString(r11, r2)
            r1.setText(r2)
            goto L_0x05af
        L_0x05a7:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r0.imagesArr
            int r1 = r1.size()
            r0.totalImagesCount = r1
        L_0x05af:
            r0.setImageIndex(r5)
            goto L_0x0460
        L_0x05b4:
            if (r4 == 0) goto L_0x079c
            int r1 = r0.sendPhotoType
            if (r1 == 0) goto L_0x05c8
            r2 = 4
            if (r1 == r2) goto L_0x05c8
            r2 = 2
            if (r1 == r2) goto L_0x05c2
            if (r1 != r8) goto L_0x05de
        L_0x05c2:
            int r1 = r25.size()
            if (r1 <= r14) goto L_0x05de
        L_0x05c8:
            org.telegram.ui.Components.CheckBox r1 = r0.checkImageView
            r2 = 0
            r1.setVisibility(r2)
            org.telegram.ui.PhotoViewer$CounterView r1 = r0.photosCounterView
            r1.setVisibility(r2)
            org.telegram.ui.ActionBar.ActionBar r1 = r0.actionBar
            r2 = 1120403456(0x42CLASSNAME, float:100.0)
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r2)
            r1.setTitleRightMargin(r2)
        L_0x05de:
            int r1 = r0.sendPhotoType
            r2 = 2
            if (r1 == r2) goto L_0x05e5
            if (r1 != r8) goto L_0x05f8
        L_0x05e5:
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r1 = r0.placeProvider
            boolean r1 = r1.canCaptureMorePhotos()
            if (r1 == 0) goto L_0x05f8
            android.widget.ImageView r1 = r0.cameraItem
            r2 = 0
            r1.setVisibility(r2)
            android.widget.ImageView r1 = r0.cameraItem
            r1.setTag(r15)
        L_0x05f8:
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.menuItem
            r1.setVisibility(r10)
            java.util.ArrayList<java.lang.Object> r1 = r0.imagesArrLocals
            r1.addAll(r4)
            java.util.ArrayList<java.lang.Object> r1 = r0.imagesArrLocals
            java.lang.Object r1 = r1.get(r5)
            boolean r2 = r1 instanceof org.telegram.messenger.MediaController.PhotoEntry
            if (r2 == 0) goto L_0x06a7
            int r2 = r0.sendPhotoType
            r3 = 10
            if (r2 != r3) goto L_0x0623
            android.widget.ImageView r1 = r0.cropItem
            r1.setVisibility(r10)
            android.widget.ImageView r1 = r0.rotateItem
            r1.setVisibility(r10)
            android.widget.ImageView r1 = r0.mirrorItem
            r1.setVisibility(r10)
            goto L_0x06a3
        L_0x0623:
            boolean r3 = r0.isDocumentsPicker
            if (r3 == 0) goto L_0x0650
            android.widget.ImageView r1 = r0.cropItem
            r1.setVisibility(r10)
            android.widget.ImageView r1 = r0.rotateItem
            r1.setVisibility(r10)
            android.widget.ImageView r1 = r0.mirrorItem
            r1.setVisibility(r10)
            android.widget.TextView r1 = r0.docInfoTextView
            r2 = 0
            r1.setVisibility(r2)
            android.widget.TextView r1 = r0.docNameTextView
            r1.setVisibility(r2)
            android.widget.FrameLayout r1 = r0.pickerView
            android.view.ViewGroup$LayoutParams r1 = r1.getLayoutParams()
            r2 = 1118306304(0x42a80000, float:84.0)
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r2)
            r1.height = r2
            goto L_0x06a3
        L_0x0650:
            org.telegram.messenger.MediaController$PhotoEntry r1 = (org.telegram.messenger.MediaController.PhotoEntry) r1
            boolean r1 = r1.isVideo
            if (r1 == 0) goto L_0x067e
            android.widget.ImageView r1 = r0.cropItem
            r1.setVisibility(r10)
            android.widget.ImageView r1 = r0.rotateItem
            r1.setVisibility(r10)
            android.widget.ImageView r1 = r0.mirrorItem
            r1.setVisibility(r10)
            android.widget.FrameLayout r1 = r0.bottomLayout
            r2 = 0
            r1.setVisibility(r2)
            android.widget.FrameLayout r1 = r0.bottomLayout
            r1.setTag(r15)
            android.widget.FrameLayout r1 = r0.bottomLayout
            r2 = 1111490560(0x42400000, float:48.0)
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r2)
            int r2 = -r2
            float r2 = (float) r2
            r1.setTranslationY(r2)
            goto L_0x06a3
        L_0x067e:
            android.widget.ImageView r1 = r0.cropItem
            if (r2 == r14) goto L_0x0684
            r2 = 0
            goto L_0x0686
        L_0x0684:
            r2 = 8
        L_0x0686:
            r1.setVisibility(r2)
            android.widget.ImageView r1 = r0.rotateItem
            int r2 = r0.sendPhotoType
            if (r2 == r14) goto L_0x0692
            r2 = 8
            goto L_0x0693
        L_0x0692:
            r2 = 0
        L_0x0693:
            r1.setVisibility(r2)
            android.widget.ImageView r1 = r0.mirrorItem
            int r2 = r0.sendPhotoType
            if (r2 == r14) goto L_0x069f
            r2 = 8
            goto L_0x06a0
        L_0x069f:
            r2 = 0
        L_0x06a0:
            r1.setVisibility(r2)
        L_0x06a3:
            boolean r1 = r0.isDocumentsPicker
            r1 = r1 ^ r14
            goto L_0x06e2
        L_0x06a7:
            boolean r2 = r1 instanceof org.telegram.tgnet.TLRPC$BotInlineResult
            if (r2 == 0) goto L_0x06bc
            android.widget.ImageView r1 = r0.cropItem
            r1.setVisibility(r10)
            android.widget.ImageView r1 = r0.rotateItem
            r1.setVisibility(r10)
            android.widget.ImageView r1 = r0.mirrorItem
            r1.setVisibility(r10)
        L_0x06ba:
            r1 = 0
            goto L_0x06e2
        L_0x06bc:
            android.widget.ImageView r2 = r0.cropItem
            boolean r3 = r1 instanceof org.telegram.messenger.MediaController.SearchImage
            if (r3 == 0) goto L_0x06ca
            org.telegram.messenger.MediaController$SearchImage r1 = (org.telegram.messenger.MediaController.SearchImage) r1
            int r1 = r1.type
            if (r1 != 0) goto L_0x06ca
            r1 = 0
            goto L_0x06cc
        L_0x06ca:
            r1 = 8
        L_0x06cc:
            r2.setVisibility(r1)
            android.widget.ImageView r1 = r0.rotateItem
            r1.setVisibility(r10)
            android.widget.ImageView r1 = r0.mirrorItem
            r1.setVisibility(r10)
            android.widget.ImageView r1 = r0.cropItem
            int r1 = r1.getVisibility()
            if (r1 != 0) goto L_0x06ba
            r1 = 1
        L_0x06e2:
            org.telegram.ui.ChatActivity r2 = r0.parentChatActivity
            if (r2 == 0) goto L_0x0726
            org.telegram.ui.Adapters.MentionsAdapter r3 = r0.mentionsAdapter
            org.telegram.tgnet.TLRPC$ChatFull r2 = r2.chatInfo
            r3.setChatInfo(r2)
            org.telegram.ui.Adapters.MentionsAdapter r2 = r0.mentionsAdapter
            org.telegram.ui.ChatActivity r3 = r0.parentChatActivity
            org.telegram.tgnet.TLRPC$Chat r3 = r3.currentChat
            if (r3 == 0) goto L_0x06f7
            r3 = 1
            goto L_0x06f8
        L_0x06f7:
            r3 = 0
        L_0x06f8:
            r2.setNeedUsernames(r3)
            org.telegram.ui.Adapters.MentionsAdapter r2 = r0.mentionsAdapter
            r3 = 0
            r2.setNeedBotContext(r3)
            if (r1 == 0) goto L_0x070f
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r1 = r0.placeProvider
            if (r1 == 0) goto L_0x070d
            boolean r1 = r1.allowCaption()
            if (r1 == 0) goto L_0x070f
        L_0x070d:
            r1 = 1
            goto L_0x0710
        L_0x070f:
            r1 = 0
        L_0x0710:
            r0.needCaptionLayout = r1
            org.telegram.ui.Components.PhotoViewerCaptionEnterView r2 = r0.captionEditText
            if (r1 == 0) goto L_0x0718
            r1 = 0
            goto L_0x071a
        L_0x0718:
            r1 = 8
        L_0x071a:
            r2.setVisibility(r1)
            boolean r1 = r0.needCaptionLayout
            if (r1 == 0) goto L_0x0726
            org.telegram.ui.Components.PhotoViewerCaptionEnterView r1 = r0.captionEditText
            r1.onCreate()
        L_0x0726:
            android.widget.FrameLayout r1 = r0.pickerView
            r2 = 0
            r1.setVisibility(r2)
            android.widget.ImageView r1 = r0.pickerViewSendButton
            r1.setVisibility(r2)
            android.widget.ImageView r1 = r0.pickerViewSendButton
            r3 = 0
            r1.setTranslationY(r3)
            android.widget.ImageView r1 = r0.pickerViewSendButton
            r3 = 1065353216(0x3var_, float:1.0)
            r1.setAlpha(r3)
            android.view.View r1 = r0.navigationBar
            if (r1 == 0) goto L_0x074a
            r1.setVisibility(r2)
            android.view.View r1 = r0.navigationBar
            r1.setAlpha(r3)
        L_0x074a:
            android.widget.FrameLayout r1 = r0.bottomLayout
            r1.setVisibility(r10)
            android.widget.FrameLayout r1 = r0.bottomLayout
            r2 = 0
            r1.setTag(r2)
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r1 = r0.containerView
            r1.setTag(r2)
            r0.setImageIndex(r5)
            int r1 = r0.sendPhotoType
            if (r1 != r14) goto L_0x076d
            android.widget.ImageView r1 = r0.paintItem
            r3 = 0
            r1.setVisibility(r3)
            android.widget.ImageView r1 = r0.tuneItem
            r1.setVisibility(r3)
            goto L_0x0798
        L_0x076d:
            r3 = 4
            if (r1 == r3) goto L_0x078e
            if (r1 == r8) goto L_0x078e
            android.widget.ImageView r1 = r0.paintItem
            java.lang.Object r3 = r1.getTag()
            if (r3 == 0) goto L_0x077c
            r3 = 0
            goto L_0x077e
        L_0x077c:
            r3 = 8
        L_0x077e:
            r1.setVisibility(r3)
            android.widget.ImageView r1 = r0.tuneItem
            java.lang.Object r3 = r1.getTag()
            if (r3 == 0) goto L_0x078a
            r10 = 0
        L_0x078a:
            r1.setVisibility(r10)
            goto L_0x0798
        L_0x078e:
            android.widget.ImageView r1 = r0.paintItem
            r1.setVisibility(r10)
            android.widget.ImageView r1 = r0.tuneItem
            r1.setVisibility(r10)
        L_0x0798:
            r18.updateSelectedCount()
            goto L_0x07a0
        L_0x079c:
            r2 = 0
            r0.setImageIndex(r5)
        L_0x07a0:
            org.telegram.ui.Components.AnimatedFileDrawable r1 = r0.currentAnimation
            if (r1 != 0) goto L_0x0828
            boolean r1 = r0.isEvent
            if (r1 != 0) goto L_0x0828
            long r3 = r0.currentDialogId
            r6 = 0
            int r1 = (r3 > r6 ? 1 : (r3 == r6 ? 0 : -1))
            if (r1 == 0) goto L_0x0803
            int r1 = r0.totalImagesCount
            if (r1 != 0) goto L_0x0803
            org.telegram.messenger.MessageObject r1 = r0.currentMessageObject
            if (r1 == 0) goto L_0x0803
            boolean r3 = r1.scheduled
            if (r3 != 0) goto L_0x0803
            org.telegram.tgnet.TLRPC$Message r1 = r1.messageOwner
            int r1 = org.telegram.messenger.MediaDataController.getMediaType(r1)
            int r3 = r0.sharedMediaType
            if (r1 != r3) goto L_0x0828
            int r1 = r0.currentAccount
            org.telegram.messenger.MediaDataController r1 = org.telegram.messenger.MediaDataController.getInstance(r1)
            long r3 = r0.currentDialogId
            int r6 = r0.sharedMediaType
            int r7 = r0.classGuid
            r8 = 1
            r19 = r1
            r20 = r3
            r22 = r6
            r23 = r7
            r24 = r8
            r19.getMediaCount(r20, r22, r23, r24)
            long r3 = r0.mergeDialogId
            r6 = 0
            int r1 = (r3 > r6 ? 1 : (r3 == r6 ? 0 : -1))
            if (r1 == 0) goto L_0x0828
            int r1 = r0.currentAccount
            org.telegram.messenger.MediaDataController r1 = org.telegram.messenger.MediaDataController.getInstance(r1)
            long r3 = r0.mergeDialogId
            int r6 = r0.sharedMediaType
            int r7 = r0.classGuid
            r8 = 1
            r19 = r1
            r20 = r3
            r22 = r6
            r23 = r7
            r24 = r8
            r19.getMediaCount(r20, r22, r23, r24)
            goto L_0x0828
        L_0x0803:
            long r3 = r0.avatarsDialogId
            r6 = 0
            int r1 = (r3 > r6 ? 1 : (r3 == r6 ? 0 : -1))
            if (r1 == 0) goto L_0x0828
            int r1 = r0.currentAccount
            org.telegram.messenger.MessagesController r1 = org.telegram.messenger.MessagesController.getInstance(r1)
            long r3 = r0.avatarsDialogId
            r6 = 80
            r7 = 0
            r8 = 1
            int r9 = r0.classGuid
            r19 = r1
            r20 = r3
            r22 = r6
            r23 = r7
            r24 = r8
            r25 = r9
            r19.loadDialogPhotos(r20, r22, r23, r24, r25)
        L_0x0828:
            org.telegram.messenger.MessageObject r1 = r0.currentMessageObject
            if (r1 == 0) goto L_0x0832
            boolean r1 = r1.isVideo()
            if (r1 != 0) goto L_0x0854
        L_0x0832:
            org.telegram.tgnet.TLRPC$BotInlineResult r1 = r0.currentBotInlineResult
            if (r1 == 0) goto L_0x084a
            java.lang.String r1 = r1.type
            java.lang.String r3 = "video"
            boolean r1 = r1.equals(r3)
            if (r1 != 0) goto L_0x0854
            org.telegram.tgnet.TLRPC$BotInlineResult r1 = r0.currentBotInlineResult
            org.telegram.tgnet.TLRPC$Document r1 = r1.document
            boolean r1 = org.telegram.messenger.MessageObject.isVideoDocument(r1)
            if (r1 != 0) goto L_0x0854
        L_0x084a:
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r1 = r0.pageBlocksAdapter
            if (r1 == 0) goto L_0x085c
            boolean r1 = r1.isVideo(r5)
            if (r1 == 0) goto L_0x085c
        L_0x0854:
            r0.playerAutoStarted = r14
            r1 = 0
            r0.onActionClick(r1)
            goto L_0x08ce
        L_0x085c:
            java.util.ArrayList<java.lang.Object> r1 = r0.imagesArrLocals
            boolean r1 = r1.isEmpty()
            if (r1 != 0) goto L_0x08ce
            java.util.ArrayList<java.lang.Object> r1 = r0.imagesArrLocals
            java.lang.Object r1 = r1.get(r5)
            org.telegram.ui.ChatActivity r3 = r0.parentChatActivity
            if (r3 == 0) goto L_0x0873
            org.telegram.tgnet.TLRPC$User r7 = r3.getCurrentUser()
            goto L_0x0874
        L_0x0873:
            r7 = r2
        L_0x0874:
            boolean r2 = r0.isDocumentsPicker
            if (r2 != 0) goto L_0x08a0
            org.telegram.ui.ChatActivity r2 = r0.parentChatActivity
            if (r2 == 0) goto L_0x08a0
            boolean r2 = r2.isSecretChat()
            if (r2 != 0) goto L_0x08a0
            org.telegram.ui.ChatActivity r2 = r0.parentChatActivity
            boolean r2 = r2.isInScheduleMode()
            if (r2 != 0) goto L_0x08a0
            if (r7 == 0) goto L_0x08a0
            boolean r2 = r7.bot
            if (r2 != 0) goto L_0x08a0
            boolean r2 = org.telegram.messenger.UserObject.isUserSelf(r7)
            if (r2 != 0) goto L_0x08a0
            org.telegram.ui.ChatActivity r2 = r0.parentChatActivity
            boolean r2 = r2.isEditingMessageMedia()
            if (r2 != 0) goto L_0x08a0
            r7 = 1
            goto L_0x08a1
        L_0x08a0:
            r7 = 0
        L_0x08a1:
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r2 = r0.placeProvider
            if (r2 == 0) goto L_0x08ac
            org.telegram.messenger.MessageObject r2 = r2.getEditingMessageObject()
            if (r2 == 0) goto L_0x08ac
            r7 = 0
        L_0x08ac:
            boolean r2 = r1 instanceof org.telegram.tgnet.TLRPC$BotInlineResult
            if (r2 == 0) goto L_0x08b2
            r7 = 0
            goto L_0x08c6
        L_0x08b2:
            boolean r2 = r1 instanceof org.telegram.messenger.MediaController.PhotoEntry
            if (r2 == 0) goto L_0x08b7
            goto L_0x08c6
        L_0x08b7:
            if (r7 == 0) goto L_0x08c6
            boolean r2 = r1 instanceof org.telegram.messenger.MediaController.SearchImage
            if (r2 == 0) goto L_0x08c6
            org.telegram.messenger.MediaController$SearchImage r1 = (org.telegram.messenger.MediaController.SearchImage) r1
            int r1 = r1.type
            if (r1 != 0) goto L_0x08c4
            goto L_0x08c5
        L_0x08c4:
            r14 = 0
        L_0x08c5:
            r7 = r14
        L_0x08c6:
            if (r7 == 0) goto L_0x08ce
            android.widget.ImageView r1 = r0.timeItem
            r2 = 0
            r1.setVisibility(r2)
        L_0x08ce:
            r18.checkFullscreenButton()
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.onPhotoShow(org.telegram.messenger.MessageObject, org.telegram.tgnet.TLRPC$FileLocation, org.telegram.messenger.ImageLocation, org.telegram.messenger.ImageLocation, java.util.ArrayList, java.util.ArrayList, java.util.List, int, org.telegram.ui.PhotoViewer$PlaceProviderObject):void");
    }

    /* JADX WARNING: Code restructure failed: missing block: B:4:0x0008, code lost:
        r0 = r0.currentChat;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private boolean canSendMediaToParentChatActivity() {
        /*
            r2 = this;
            org.telegram.ui.ChatActivity r0 = r2.parentChatActivity
            if (r0 == 0) goto L_0x001e
            org.telegram.tgnet.TLRPC$User r1 = r0.currentUser
            if (r1 != 0) goto L_0x001c
            org.telegram.tgnet.TLRPC$Chat r0 = r0.currentChat
            if (r0 == 0) goto L_0x001e
            boolean r0 = org.telegram.messenger.ChatObject.isNotInChat(r0)
            if (r0 != 0) goto L_0x001e
            org.telegram.ui.ChatActivity r0 = r2.parentChatActivity
            org.telegram.tgnet.TLRPC$Chat r0 = r0.currentChat
            boolean r0 = org.telegram.messenger.ChatObject.canSendMedia(r0)
            if (r0 == 0) goto L_0x001e
        L_0x001c:
            r0 = 1
            goto L_0x001f
        L_0x001e:
            r0 = 0
        L_0x001f:
            return r0
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.canSendMediaToParentChatActivity():boolean");
    }

    private void setDoubleTapEnabled(boolean z) {
        this.doubleTapEnabled = z;
        this.gestureDetector.setOnDoubleTapListener(z ? this : null);
    }

    /* access modifiers changed from: private */
    public void setImages() {
        if (this.animationInProgress == 0) {
            setIndexToImage(this.centerImage, this.currentIndex, (CropTransform) null);
            setIndexToPaintingOverlay(this.currentIndex, this.paintingOverlay);
            setIndexToImage(this.rightImage, this.currentIndex + 1, this.rightCropTransform);
            setIndexToPaintingOverlay(this.currentIndex + 1, this.rightPaintingOverlay);
            setIndexToImage(this.leftImage, this.currentIndex - 1, this.leftCropTransform);
            setIndexToPaintingOverlay(this.currentIndex - 1, this.leftPaintingOverlay);
        }
    }

    /* JADX WARNING: Code restructure failed: missing block: B:18:0x008a, code lost:
        r6 = r1.messageOwner;
     */
    /* JADX WARNING: Removed duplicated region for block: B:312:0x0778  */
    /* JADX WARNING: Removed duplicated region for block: B:313:0x077f  */
    /* JADX WARNING: Removed duplicated region for block: B:372:0x08b4  */
    /* JADX WARNING: Removed duplicated region for block: B:392:0x09c5  */
    /* JADX WARNING: Removed duplicated region for block: B:426:0x0a8a  */
    /* JADX WARNING: Removed duplicated region for block: B:439:0x0ab9  */
    /* JADX WARNING: Removed duplicated region for block: B:445:0x0ad9  */
    /* JADX WARNING: Removed duplicated region for block: B:448:0x0ae8  */
    /* JADX WARNING: Removed duplicated region for block: B:451:0x0b04  */
    /* JADX WARNING: Removed duplicated region for block: B:454:0x0b2d  */
    /* JADX WARNING: Removed duplicated region for block: B:476:0x0b9a  */
    /* JADX WARNING: Removed duplicated region for block: B:477:0x0b9c  */
    /* JADX WARNING: Removed duplicated region for block: B:480:0x0ba4  */
    /* JADX WARNING: Removed duplicated region for block: B:481:0x0ba6  */
    /* JADX WARNING: Removed duplicated region for block: B:484:0x0bae  */
    /* JADX WARNING: Removed duplicated region for block: B:485:0x0bb0  */
    /* JADX WARNING: Removed duplicated region for block: B:488:0x0bb8  */
    /* JADX WARNING: Removed duplicated region for block: B:489:0x0bba  */
    /* JADX WARNING: Removed duplicated region for block: B:492:0x0bc2  */
    /* JADX WARNING: Removed duplicated region for block: B:504:0x0bdb  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void setIsAboutToSwitchToIndex(int r31, boolean r32, boolean r33) {
        /*
            r30 = this;
            r0 = r30
            r1 = r31
            r2 = r33
            if (r32 != 0) goto L_0x000d
            int r3 = r0.switchingToIndex
            if (r3 != r1) goto L_0x000d
            return
        L_0x000d:
            r0.switchingToIndex = r1
            java.lang.String r3 = r30.getFileName(r31)
            r4 = 0
            if (r2 == 0) goto L_0x0043
            int r5 = android.os.Build.VERSION.SDK_INT
            r6 = 19
            if (r5 < r6) goto L_0x0043
            android.transition.TransitionSet r5 = new android.transition.TransitionSet
            r5.<init>()
            android.transition.Fade r6 = new android.transition.Fade
            r6.<init>()
            r5.addTransition(r6)
            android.transition.ChangeBounds r6 = new android.transition.ChangeBounds
            r6.<init>()
            r5.addTransition(r6)
            r5.setOrdering(r4)
            r6 = 220(0xdc, double:1.087E-321)
            r5.setDuration(r6)
            org.telegram.ui.Components.CubicBezierInterpolator r6 = org.telegram.ui.Components.CubicBezierInterpolator.DEFAULT
            r5.setInterpolator(r6)
            android.widget.LinearLayout r6 = r0.itemsLayout
            android.transition.TransitionManager.beginDelayedTransition(r6, r5)
        L_0x0043:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r5 = r0.imagesArr
            boolean r5 = r5.isEmpty()
            java.lang.String r7 = "AttachVideo"
            r8 = 14
            java.lang.String r10 = "AttachPhoto"
            java.lang.String r15 = "Of"
            r14 = 6
            java.lang.String r13 = ""
            r11 = 0
            r12 = 1
            if (r5 != 0) goto L_0x06b7
            int r1 = r0.switchingToIndex
            if (r1 < 0) goto L_0x06b6
            java.util.ArrayList<org.telegram.messenger.MessageObject> r5 = r0.imagesArr
            int r5 = r5.size()
            if (r1 < r5) goto L_0x0066
            goto L_0x06b6
        L_0x0066:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r0.imagesArr
            int r5 = r0.switchingToIndex
            java.lang.Object r1 = r1.get(r5)
            org.telegram.messenger.MessageObject r1 = (org.telegram.messenger.MessageObject) r1
            boolean r5 = r1.isVideo()
            boolean r18 = r1.isInvoice()
            int r9 = r0.currentAccount
            org.telegram.messenger.MessagesController r9 = org.telegram.messenger.MessagesController.getInstance(r9)
            r19 = r7
            long r6 = r1.getChatId()
            boolean r6 = r9.isChatNoForwards((long) r6)
            if (r6 != 0) goto L_0x0095
            org.telegram.tgnet.TLRPC$Message r6 = r1.messageOwner
            if (r6 == 0) goto L_0x0093
            boolean r6 = r6.noforwards
            if (r6 == 0) goto L_0x0093
            goto L_0x0095
        L_0x0093:
            r6 = 0
            goto L_0x0096
        L_0x0095:
            r6 = 1
        L_0x0096:
            if (r18 == 0) goto L_0x00d3
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.masksItem
            r0.setItemVisible(r3, r4, r12)
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.menuItem
            r3.hideSubItem(r14)
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.menuItem
            r5 = 11
            r3.hideSubItem(r5)
            org.telegram.tgnet.TLRPC$Message r3 = r1.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r3 = r3.media
            java.lang.String r3 = r3.description
            r0.allowShare = r4
            android.widget.FrameLayout r5 = r0.bottomLayout
            r7 = 1111490560(0x42400000, float:48.0)
            int r8 = org.telegram.messenger.AndroidUtilities.dp(r7)
            float r8 = (float) r8
            r5.setTranslationY(r8)
            org.telegram.ui.PhotoViewer$CaptionTextViewSwitcher r5 = r0.captionTextViewSwitcher
            int r7 = org.telegram.messenger.AndroidUtilities.dp(r7)
            float r7 = (float) r7
            r5.setTranslationY(r7)
            org.telegram.ui.Components.FadingTextViewLayout r5 = r0.nameTextView
            r5.setText(r13)
            org.telegram.ui.Components.FadingTextViewLayout r5 = r0.dateTextView
            r5.setText(r13)
            goto L_0x032e
        L_0x00d3:
            r7 = r6 ^ 1
            r0.allowShare = r7
            boolean r7 = r1.isNewGif()
            if (r7 == 0) goto L_0x00e6
            boolean r7 = r0.allowShare
            if (r7 == 0) goto L_0x00e6
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.menuItem
            r7.showSubItem(r8)
        L_0x00e6:
            org.telegram.ui.ChatActivity r7 = r0.parentChatActivity
            if (r7 == 0) goto L_0x00f2
            boolean r7 = r7.isInScheduleMode()
            if (r7 == 0) goto L_0x00f2
            r7 = 1
            goto L_0x00f3
        L_0x00f2:
            r7 = 0
        L_0x00f3:
            boolean r7 = r1.canDeleteMessage(r7, r11)
            if (r7 == 0) goto L_0x0103
            int r7 = r0.slideshowMessageId
            if (r7 != 0) goto L_0x0103
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.menuItem
            r7.showSubItem(r14)
            goto L_0x0108
        L_0x0103:
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.menuItem
            r7.hideSubItem(r14)
        L_0x0108:
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.menuItem
            r7.checkHideMenuItem()
            boolean r7 = r0.isEmbedVideo
            if (r7 == 0) goto L_0x011f
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.menuItem
            r8 = 11
            r7.showSubItem(r8)
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.pipItem
            r0.setItemVisible(r7, r12, r4)
            goto L_0x01fa
        L_0x011f:
            if (r5 == 0) goto L_0x01b5
            if (r6 == 0) goto L_0x015f
            int r7 = r0.slideshowMessageId
            if (r7 != 0) goto L_0x0134
            org.telegram.tgnet.TLRPC$Message r7 = r1.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r7.media
            org.telegram.tgnet.TLRPC$WebPage r7 = r7.webpage
            if (r7 == 0) goto L_0x0157
            java.lang.String r7 = r7.url
            if (r7 == 0) goto L_0x0157
            goto L_0x015f
        L_0x0134:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r7 = r0.imagesArr
            java.lang.Object r7 = r7.get(r4)
            org.telegram.messenger.MessageObject r7 = (org.telegram.messenger.MessageObject) r7
            org.telegram.tgnet.TLRPC$Message r7 = r7.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r7.media
            org.telegram.tgnet.TLRPC$WebPage r7 = r7.webpage
            if (r7 == 0) goto L_0x0157
            java.util.ArrayList<org.telegram.messenger.MessageObject> r7 = r0.imagesArr
            java.lang.Object r7 = r7.get(r4)
            org.telegram.messenger.MessageObject r7 = (org.telegram.messenger.MessageObject) r7
            org.telegram.tgnet.TLRPC$Message r7 = r7.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r7.media
            org.telegram.tgnet.TLRPC$WebPage r7 = r7.webpage
            java.lang.String r7 = r7.url
            if (r7 == 0) goto L_0x0157
            goto L_0x015f
        L_0x0157:
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.menuItem
            r8 = 11
            r7.hideSubItem(r8)
            goto L_0x0166
        L_0x015f:
            r8 = 11
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.menuItem
            r7.showSubItem(r8)
        L_0x0166:
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.masksItem
            int r7 = r7.getVisibility()
            if (r7 != 0) goto L_0x0170
            r7 = 1
            goto L_0x0171
        L_0x0170:
            r7 = 0
        L_0x0171:
            if (r7 == 0) goto L_0x0178
            org.telegram.ui.ActionBar.ActionBarMenuItem r8 = r0.masksItem
            r0.setItemVisible(r8, r4, r4)
        L_0x0178:
            boolean r8 = r0.pipAvailable
            if (r8 != 0) goto L_0x018a
            org.telegram.ui.ActionBar.ActionBarMenuItem r8 = r0.pipItem
            r8.setEnabled(r4)
            org.telegram.ui.ActionBar.ActionBarMenuItem r8 = r0.pipItem
            r7 = r7 ^ r12
            r9 = 1056964608(0x3var_, float:0.5)
            r0.setItemVisible(r8, r12, r7, r9)
            goto L_0x0190
        L_0x018a:
            org.telegram.ui.ActionBar.ActionBarMenuItem r8 = r0.pipItem
            r7 = r7 ^ r12
            r0.setItemVisible(r8, r12, r7)
        L_0x0190:
            boolean r7 = r1.hasAttachedStickers()
            if (r7 == 0) goto L_0x01a8
            long r7 = r1.getDialogId()
            boolean r7 = org.telegram.messenger.DialogObject.isEncryptedDialog(r7)
            if (r7 != 0) goto L_0x01a8
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.menuItem
            r8 = 15
            r7.showSubItem(r8)
            goto L_0x01af
        L_0x01a8:
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.menuItem
            r8 = 15
            r7.hideSubItem(r8)
        L_0x01af:
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.menuItem
            r7.checkHideMenuItem()
            goto L_0x01fa
        L_0x01b5:
            org.telegram.ui.ActionBar.ActionBarMenuSubItem r7 = r0.speedItem
            r8 = 8
            r7.setVisibility(r8)
            org.telegram.ui.ActionBar.ActionBarPopupWindow$GapView r7 = r0.speedGap
            r7.setVisibility(r8)
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.menuItem
            r8 = 11
            r7.hideSubItem(r8)
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.menuItem
            r7.checkHideMenuItem()
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.pipItem
            int r7 = r7.getVisibility()
            if (r7 != 0) goto L_0x01d7
            r7 = 1
            goto L_0x01d8
        L_0x01d7:
            r7 = 0
        L_0x01d8:
            boolean r8 = r1.hasAttachedStickers()
            if (r8 == 0) goto L_0x01ea
            long r8 = r1.getDialogId()
            boolean r8 = org.telegram.messenger.DialogObject.isEncryptedDialog(r8)
            if (r8 != 0) goto L_0x01ea
            r8 = 1
            goto L_0x01eb
        L_0x01ea:
            r8 = 0
        L_0x01eb:
            if (r7 == 0) goto L_0x01f4
            org.telegram.ui.ActionBar.ActionBarMenuItem r9 = r0.pipItem
            r14 = r8 ^ 1
            r0.setItemVisible(r9, r4, r14)
        L_0x01f4:
            org.telegram.ui.ActionBar.ActionBarMenuItem r9 = r0.masksItem
            r7 = r7 ^ r12
            r0.setItemVisible(r9, r8, r7)
        L_0x01fa:
            boolean r7 = r0.shouldMessageObjectAutoPlayed(r1)
            if (r7 != 0) goto L_0x0305
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r7 = r0.placeProvider
            int r8 = r0.switchingToIndex
            java.lang.CharSequence r7 = r7.getTitleFor(r8)
            boolean r7 = android.text.TextUtils.isEmpty(r7)
            if (r7 == 0) goto L_0x0305
            boolean r7 = r0.playerWasPlaying
            r7 = r7 ^ r12
            java.lang.String r8 = r0.nameOverride
            if (r8 == 0) goto L_0x021c
            org.telegram.ui.Components.FadingTextViewLayout r9 = r0.nameTextView
            r9.setText(r8)
            goto L_0x02a1
        L_0x021c:
            org.telegram.tgnet.TLRPC$Message r8 = r1.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r8 = r8.fwd_from
            if (r8 == 0) goto L_0x022d
            java.lang.String r8 = r8.from_name
            if (r8 == 0) goto L_0x022d
            org.telegram.ui.Components.FadingTextViewLayout r9 = r0.nameTextView
            r9.setText(r8, r7)
            goto L_0x02a1
        L_0x022d:
            boolean r8 = r1.isFromUser()
            if (r8 == 0) goto L_0x0259
            int r8 = r0.currentAccount
            org.telegram.messenger.MessagesController r8 = org.telegram.messenger.MessagesController.getInstance(r8)
            org.telegram.tgnet.TLRPC$Message r9 = r1.messageOwner
            org.telegram.tgnet.TLRPC$Peer r9 = r9.from_id
            long r11 = r9.user_id
            java.lang.Long r9 = java.lang.Long.valueOf(r11)
            org.telegram.tgnet.TLRPC$User r8 = r8.getUser(r9)
            if (r8 == 0) goto L_0x0253
            org.telegram.ui.Components.FadingTextViewLayout r9 = r0.nameTextView
            java.lang.String r8 = org.telegram.messenger.UserObject.getUserName(r8)
            r9.setText(r8, r7)
            goto L_0x02a1
        L_0x0253:
            org.telegram.ui.Components.FadingTextViewLayout r8 = r0.nameTextView
            r8.setText(r13, r7)
            goto L_0x02a1
        L_0x0259:
            int r8 = r0.currentAccount
            org.telegram.messenger.MessagesController r8 = org.telegram.messenger.MessagesController.getInstance(r8)
            long r11 = r1.getSenderId()
            long r11 = -r11
            java.lang.Long r9 = java.lang.Long.valueOf(r11)
            org.telegram.tgnet.TLRPC$Chat r8 = r8.getChat(r9)
            boolean r9 = org.telegram.messenger.ChatObject.isChannel(r8)
            if (r9 == 0) goto L_0x0292
            boolean r9 = r8.megagroup
            if (r9 == 0) goto L_0x0292
            boolean r9 = r1.isForwardedChannelPost()
            if (r9 == 0) goto L_0x0292
            int r8 = r0.currentAccount
            org.telegram.messenger.MessagesController r8 = org.telegram.messenger.MessagesController.getInstance(r8)
            org.telegram.tgnet.TLRPC$Message r9 = r1.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r9 = r9.fwd_from
            org.telegram.tgnet.TLRPC$Peer r9 = r9.from_id
            long r11 = r9.channel_id
            java.lang.Long r9 = java.lang.Long.valueOf(r11)
            org.telegram.tgnet.TLRPC$Chat r8 = r8.getChat(r9)
        L_0x0292:
            if (r8 == 0) goto L_0x029c
            org.telegram.ui.Components.FadingTextViewLayout r9 = r0.nameTextView
            java.lang.String r8 = r8.title
            r9.setText(r8, r7)
            goto L_0x02a1
        L_0x029c:
            org.telegram.ui.Components.FadingTextViewLayout r8 = r0.nameTextView
            r8.setText(r13, r7)
        L_0x02a1:
            int r8 = r0.dateOverride
            if (r8 == 0) goto L_0x02a6
            goto L_0x02aa
        L_0x02a6:
            org.telegram.tgnet.TLRPC$Message r8 = r1.messageOwner
            int r8 = r8.date
        L_0x02aa:
            long r8 = (long) r8
            r11 = 1000(0x3e8, double:4.94E-321)
            long r8 = r8 * r11
            r11 = 2131629424(0x7f0e1570, float:1.8886169E38)
            r12 = 2
            java.lang.Object[] r13 = new java.lang.Object[r12]
            org.telegram.messenger.LocaleController r12 = org.telegram.messenger.LocaleController.getInstance()
            org.telegram.messenger.time.FastDateFormat r12 = r12.formatterYear
            java.util.Date r14 = new java.util.Date
            r14.<init>(r8)
            java.lang.String r12 = r12.format((java.util.Date) r14)
            r13[r4] = r12
            org.telegram.messenger.LocaleController r12 = org.telegram.messenger.LocaleController.getInstance()
            org.telegram.messenger.time.FastDateFormat r12 = r12.formatterDay
            java.util.Date r14 = new java.util.Date
            r14.<init>(r8)
            java.lang.String r8 = r12.format((java.util.Date) r14)
            r9 = 1
            r13[r9] = r8
            java.lang.String r8 = "formatDateAtTime"
            java.lang.String r8 = org.telegram.messenger.LocaleController.formatString(r8, r11, r13)
            if (r3 == 0) goto L_0x02ff
            if (r5 == 0) goto L_0x02ff
            org.telegram.ui.Components.FadingTextViewLayout r3 = r0.dateTextView
            r5 = 2
            java.lang.Object[] r7 = new java.lang.Object[r5]
            r7[r4] = r8
            org.telegram.tgnet.TLRPC$Document r5 = r1.getDocument()
            long r11 = r5.size
            java.lang.String r5 = org.telegram.messenger.AndroidUtilities.formatFileSize(r11)
            r7[r9] = r5
            java.lang.String r5 = "%s (%s)"
            java.lang.String r5 = java.lang.String.format(r5, r7)
            r3.setText(r5, r2)
            goto L_0x031d
        L_0x02ff:
            org.telegram.ui.Components.FadingTextViewLayout r3 = r0.dateTextView
            r3.setText(r8, r7)
            goto L_0x031d
        L_0x0305:
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r3 = r0.placeProvider
            int r5 = r0.switchingToIndex
            java.lang.CharSequence r3 = r3.getTitleFor(r5)
            boolean r3 = android.text.TextUtils.isEmpty(r3)
            if (r3 != 0) goto L_0x031d
            org.telegram.ui.Components.FadingTextViewLayout r3 = r0.nameTextView
            r3.setText(r13)
            org.telegram.ui.Components.FadingTextViewLayout r3 = r0.dateTextView
            r3.setText(r13)
        L_0x031d:
            org.telegram.tgnet.TLRPC$Message r3 = r1.messageOwner
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_restrictionReason> r3 = r3.restriction_reason
            java.lang.String r3 = org.telegram.messenger.MessagesController.getRestrictionReason(r3)
            boolean r5 = android.text.TextUtils.isEmpty(r3)
            if (r5 != 0) goto L_0x032c
            goto L_0x032e
        L_0x032c:
            java.lang.CharSequence r3 = r1.caption
        L_0x032e:
            org.telegram.ui.Components.AnimatedFileDrawable r5 = r0.currentAnimation
            if (r5 == 0) goto L_0x039a
            org.telegram.ui.ActionBar.ActionBarMenuItem r5 = r0.menuItem
            r7 = 1
            r5.hideSubItem(r7)
            org.telegram.ui.ActionBar.ActionBarMenuItem r5 = r0.menuItem
            r7 = 10
            r5.hideSubItem(r7)
            org.telegram.ui.ChatActivity r5 = r0.parentChatActivity
            if (r5 == 0) goto L_0x034b
            boolean r5 = r5.isInScheduleMode()
            if (r5 == 0) goto L_0x034b
            r5 = 1
            goto L_0x034c
        L_0x034b:
            r5 = 0
        L_0x034c:
            r7 = 0
            boolean r5 = r1.canDeleteMessage(r5, r7)
            if (r5 != 0) goto L_0x0359
            org.telegram.ui.ActionBar.ActionBarMenuItem r5 = r0.menuItem
            r7 = 6
            r5.hideSubItem(r7)
        L_0x0359:
            r5 = 1
            r5 = r5 ^ r6
            r0.allowShare = r5
            android.widget.LinearLayout r5 = r0.bottomButtonsLayout
            r5.setVisibility(r4)
            android.widget.ImageView r5 = r0.paintButton
            r6 = 8
            r5.setVisibility(r6)
            org.telegram.ui.ActionBar.ActionBarMenuItem r5 = r0.shareItem
            boolean r6 = r0.allowShare
            if (r6 == 0) goto L_0x0371
            r6 = 0
            goto L_0x0373
        L_0x0371:
            r6 = 8
        L_0x0373:
            r5.setVisibility(r6)
            android.widget.ImageView r5 = r0.shareButton
            boolean r6 = r0.allowShare
            if (r6 == 0) goto L_0x0385
            org.telegram.ui.ActionBar.ActionBarMenuItem r6 = r0.shareItem
            int r6 = r6.getVisibility()
            if (r6 == 0) goto L_0x0385
            goto L_0x0387
        L_0x0385:
            r4 = 8
        L_0x0387:
            r5.setVisibility(r4)
            org.telegram.ui.ActionBar.ActionBar r4 = r0.actionBar
            r5 = 2131624494(0x7f0e022e, float:1.887617E38)
            java.lang.String r6 = "AttachGif"
            java.lang.String r5 = org.telegram.messenger.LocaleController.getString(r6, r5)
            r4.setTitle(r5)
            goto L_0x06ae
        L_0x039a:
            int r5 = r0.totalImagesCount
            int r7 = r0.totalImagesCountMerge
            int r5 = r5 + r7
            if (r5 == 0) goto L_0x0594
            boolean r5 = r0.needSearchImageInArr
            if (r5 != 0) goto L_0x0594
            boolean r5 = r0.opennedFromMedia
            if (r5 == 0) goto L_0x04dd
            int r5 = r0.startOffset
            java.util.ArrayList<org.telegram.messenger.MessageObject> r7 = r0.imagesArr
            int r7 = r7.size()
            int r5 = r5 + r7
            int r7 = r0.totalImagesCount
            int r8 = r0.totalImagesCountMerge
            int r7 = r7 + r8
            if (r5 >= r7) goto L_0x044b
            boolean r5 = r0.loadingMoreImages
            if (r5 != 0) goto L_0x044b
            int r5 = r0.switchingToIndex
            java.util.ArrayList<org.telegram.messenger.MessageObject> r7 = r0.imagesArr
            int r7 = r7.size()
            r8 = 5
            int r7 = r7 - r8
            if (r5 <= r7) goto L_0x044b
            java.util.ArrayList<org.telegram.messenger.MessageObject> r5 = r0.imagesArr
            boolean r5 = r5.isEmpty()
            if (r5 == 0) goto L_0x03d3
            r5 = 0
            goto L_0x03e5
        L_0x03d3:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r5 = r0.imagesArr
            int r7 = r5.size()
            r8 = 1
            int r7 = r7 - r8
            java.lang.Object r5 = r5.get(r7)
            org.telegram.messenger.MessageObject r5 = (org.telegram.messenger.MessageObject) r5
            int r5 = r5.getId()
        L_0x03e5:
            boolean[] r7 = r0.endReached
            boolean r7 = r7[r4]
            if (r7 == 0) goto L_0x041b
            long r7 = r0.mergeDialogId
            r9 = 0
            int r11 = (r7 > r9 ? 1 : (r7 == r9 ? 0 : -1))
            if (r11 == 0) goto L_0x041b
            java.util.ArrayList<org.telegram.messenger.MessageObject> r7 = r0.imagesArr
            boolean r7 = r7.isEmpty()
            if (r7 != 0) goto L_0x0417
            java.util.ArrayList<org.telegram.messenger.MessageObject> r7 = r0.imagesArr
            int r8 = r7.size()
            r9 = 1
            int r8 = r8 - r9
            java.lang.Object r7 = r7.get(r8)
            org.telegram.messenger.MessageObject r7 = (org.telegram.messenger.MessageObject) r7
            long r7 = r7.getDialogId()
            long r9 = r0.mergeDialogId
            int r11 = (r7 > r9 ? 1 : (r7 == r9 ? 0 : -1))
            if (r11 == 0) goto L_0x0417
            r5 = 1
            r24 = 0
            goto L_0x041e
        L_0x0417:
            r24 = r5
            r5 = 1
            goto L_0x041e
        L_0x041b:
            r24 = r5
            r5 = 0
        L_0x041e:
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r7 = r0.placeProvider
            boolean r7 = r7.loadMore()
            if (r7 != 0) goto L_0x044b
            int r7 = r0.currentAccount
            org.telegram.messenger.MediaDataController r20 = org.telegram.messenger.MediaDataController.getInstance(r7)
            if (r5 != 0) goto L_0x0431
            long r7 = r0.currentDialogId
            goto L_0x0433
        L_0x0431:
            long r7 = r0.mergeDialogId
        L_0x0433:
            r21 = r7
            r23 = 40
            r25 = 0
            int r5 = r0.sharedMediaType
            r27 = 1
            int r7 = r0.classGuid
            r29 = 0
            r26 = r5
            r28 = r7
            r20.loadMedia(r21, r23, r24, r25, r26, r27, r28, r29)
            r5 = 1
            r0.loadingMoreImages = r5
        L_0x044b:
            int r5 = r0.startOffset
            if (r5 <= 0) goto L_0x0490
            int r5 = r0.switchingToIndex
            r7 = 5
            if (r5 >= r7) goto L_0x0490
            java.util.ArrayList<org.telegram.messenger.MessageObject> r5 = r0.imagesArr
            boolean r5 = r5.isEmpty()
            if (r5 != 0) goto L_0x0490
            java.util.ArrayList<org.telegram.messenger.MessageObject> r5 = r0.imagesArr
            java.lang.Object r5 = r5.get(r4)
            org.telegram.messenger.MessageObject r5 = (org.telegram.messenger.MessageObject) r5
            int r25 = r5.getId()
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r5 = r0.placeProvider
            boolean r5 = r5.loadMore()
            if (r5 != 0) goto L_0x0490
            int r5 = r0.currentAccount
            org.telegram.messenger.MediaDataController r20 = org.telegram.messenger.MediaDataController.getInstance(r5)
            long r7 = r0.currentDialogId
            r23 = 40
            r24 = 0
            int r5 = r0.sharedMediaType
            r27 = 1
            int r9 = r0.classGuid
            r29 = 0
            r21 = r7
            r26 = r5
            r28 = r9
            r20.loadMedia(r21, r23, r24, r25, r26, r27, r28, r29)
            r5 = 1
            r0.loadingMoreImages = r5
        L_0x0490:
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r5 = r0.placeProvider
            int r7 = r0.switchingToIndex
            java.lang.CharSequence r5 = r5.getTitleFor(r7)
            if (r5 == 0) goto L_0x04b4
            org.telegram.ui.ActionBar.ActionBar r7 = r0.actionBar
            r7.setTitle(r5)
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r5 = r0.placeProvider
            int r7 = r0.switchingToIndex
            java.lang.CharSequence r5 = r5.getSubtitleFor(r7)
            org.telegram.ui.ActionBar.ActionBar r7 = r0.actionBar
            r7.setSubtitle(r5)
            org.telegram.ui.ActionBar.ActionBar r5 = r0.actionBar
            r7 = 1
            r5.setTitleScrollNonFitText(r7)
            goto L_0x061b
        L_0x04b4:
            r7 = 1
            org.telegram.ui.ActionBar.ActionBar r5 = r0.actionBar
            r8 = 2
            java.lang.Object[] r8 = new java.lang.Object[r8]
            int r9 = r0.startOffset
            int r10 = r0.switchingToIndex
            int r9 = r9 + r10
            int r9 = r9 + r7
            java.lang.Integer r9 = java.lang.Integer.valueOf(r9)
            r8[r4] = r9
            int r9 = r0.totalImagesCount
            int r10 = r0.totalImagesCountMerge
            int r9 = r9 + r10
            java.lang.Integer r9 = java.lang.Integer.valueOf(r9)
            r8[r7] = r9
            r7 = 2131627129(0x7f0e0CLASSNAME, float:1.8881514E38)
            java.lang.String r7 = org.telegram.messenger.LocaleController.formatString(r15, r7, r8)
            r5.setTitle(r7)
            goto L_0x061b
        L_0x04dd:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r5 = r0.imagesArr
            int r5 = r5.size()
            int r7 = r0.totalImagesCount
            int r8 = r0.totalImagesCountMerge
            int r7 = r7 + r8
            if (r5 >= r7) goto L_0x0561
            boolean r5 = r0.loadingMoreImages
            if (r5 != 0) goto L_0x0561
            int r5 = r0.switchingToIndex
            r7 = 5
            if (r5 >= r7) goto L_0x0561
            java.util.ArrayList<org.telegram.messenger.MessageObject> r5 = r0.imagesArr
            boolean r5 = r5.isEmpty()
            if (r5 == 0) goto L_0x04fd
            r5 = 0
            goto L_0x0509
        L_0x04fd:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r5 = r0.imagesArr
            java.lang.Object r5 = r5.get(r4)
            org.telegram.messenger.MessageObject r5 = (org.telegram.messenger.MessageObject) r5
            int r5 = r5.getId()
        L_0x0509:
            boolean[] r7 = r0.endReached
            boolean r7 = r7[r4]
            if (r7 == 0) goto L_0x0539
            long r7 = r0.mergeDialogId
            r9 = 0
            int r11 = (r7 > r9 ? 1 : (r7 == r9 ? 0 : -1))
            if (r11 == 0) goto L_0x0539
            java.util.ArrayList<org.telegram.messenger.MessageObject> r7 = r0.imagesArr
            boolean r7 = r7.isEmpty()
            if (r7 != 0) goto L_0x0535
            java.util.ArrayList<org.telegram.messenger.MessageObject> r7 = r0.imagesArr
            java.lang.Object r7 = r7.get(r4)
            org.telegram.messenger.MessageObject r7 = (org.telegram.messenger.MessageObject) r7
            long r7 = r7.getDialogId()
            long r9 = r0.mergeDialogId
            int r11 = (r7 > r9 ? 1 : (r7 == r9 ? 0 : -1))
            if (r11 == 0) goto L_0x0535
            r5 = 1
            r24 = 0
            goto L_0x053c
        L_0x0535:
            r24 = r5
            r5 = 1
            goto L_0x053c
        L_0x0539:
            r24 = r5
            r5 = 0
        L_0x053c:
            int r7 = r0.currentAccount
            org.telegram.messenger.MediaDataController r20 = org.telegram.messenger.MediaDataController.getInstance(r7)
            if (r5 != 0) goto L_0x0547
            long r7 = r0.currentDialogId
            goto L_0x0549
        L_0x0547:
            long r7 = r0.mergeDialogId
        L_0x0549:
            r21 = r7
            r23 = 80
            r25 = 0
            int r5 = r0.sharedMediaType
            r27 = 1
            int r7 = r0.classGuid
            r29 = 0
            r26 = r5
            r28 = r7
            r20.loadMedia(r21, r23, r24, r25, r26, r27, r28, r29)
            r5 = 1
            r0.loadingMoreImages = r5
        L_0x0561:
            org.telegram.ui.ActionBar.ActionBar r5 = r0.actionBar
            r7 = 2
            java.lang.Object[] r7 = new java.lang.Object[r7]
            int r8 = r0.totalImagesCount
            int r9 = r0.totalImagesCountMerge
            int r8 = r8 + r9
            java.util.ArrayList<org.telegram.messenger.MessageObject> r9 = r0.imagesArr
            int r9 = r9.size()
            int r8 = r8 - r9
            int r9 = r0.switchingToIndex
            int r8 = r8 + r9
            r9 = 1
            int r8 = r8 + r9
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)
            r7[r4] = r8
            int r8 = r0.totalImagesCount
            int r10 = r0.totalImagesCountMerge
            int r8 = r8 + r10
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)
            r7[r9] = r8
            r8 = 2131627129(0x7f0e0CLASSNAME, float:1.8881514E38)
            java.lang.String r7 = org.telegram.messenger.LocaleController.formatString(r15, r8, r7)
            r5.setTitle(r7)
            goto L_0x061b
        L_0x0594:
            int r5 = r0.slideshowMessageId
            if (r5 != 0) goto L_0x05e4
            org.telegram.tgnet.TLRPC$Message r5 = r1.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r5 = r5.media
            boolean r5 = r5 instanceof org.telegram.tgnet.TLRPC$TL_messageMediaWebPage
            if (r5 == 0) goto L_0x05e4
            boolean r5 = r0.isEmbedVideo
            if (r5 == 0) goto L_0x05ad
            org.telegram.ui.ActionBar.ActionBar r5 = r0.actionBar
            java.lang.String r7 = "YouTube"
            r5.setTitle(r7)
            goto L_0x061b
        L_0x05ad:
            boolean r5 = r1.canPreviewDocument()
            if (r5 == 0) goto L_0x05c2
            org.telegram.ui.ActionBar.ActionBar r5 = r0.actionBar
            r7 = 2131624492(0x7f0e022c, float:1.8876165E38)
            java.lang.String r8 = "AttachDocument"
            java.lang.String r7 = org.telegram.messenger.LocaleController.getString(r8, r7)
            r5.setTitle(r7)
            goto L_0x061b
        L_0x05c2:
            boolean r5 = r1.isVideo()
            if (r5 == 0) goto L_0x05d7
            org.telegram.ui.ActionBar.ActionBar r5 = r0.actionBar
            r9 = r19
            r7 = 2131624519(0x7f0e0247, float:1.887622E38)
            java.lang.String r7 = org.telegram.messenger.LocaleController.getString(r9, r7)
            r5.setTitle(r7)
            goto L_0x061b
        L_0x05d7:
            org.telegram.ui.ActionBar.ActionBar r5 = r0.actionBar
            r7 = 2131624513(0x7f0e0241, float:1.8876208E38)
            java.lang.String r7 = org.telegram.messenger.LocaleController.getString(r10, r7)
            r5.setTitle(r7)
            goto L_0x061b
        L_0x05e4:
            r9 = r19
            if (r18 == 0) goto L_0x05f4
            org.telegram.ui.ActionBar.ActionBar r5 = r0.actionBar
            org.telegram.tgnet.TLRPC$Message r7 = r1.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r7 = r7.media
            java.lang.String r7 = r7.title
            r5.setTitle(r7)
            goto L_0x061b
        L_0x05f4:
            boolean r5 = r1.isVideo()
            if (r5 == 0) goto L_0x0607
            org.telegram.ui.ActionBar.ActionBar r5 = r0.actionBar
            r7 = 2131624519(0x7f0e0247, float:1.887622E38)
            java.lang.String r7 = org.telegram.messenger.LocaleController.getString(r9, r7)
            r5.setTitle(r7)
            goto L_0x061b
        L_0x0607:
            org.telegram.tgnet.TLRPC$Document r5 = r1.getDocument()
            if (r5 == 0) goto L_0x061b
            org.telegram.ui.ActionBar.ActionBar r5 = r0.actionBar
            r7 = 2131624492(0x7f0e022c, float:1.8876165E38)
            java.lang.String r8 = "AttachDocument"
            java.lang.String r7 = org.telegram.messenger.LocaleController.getString(r8, r7)
            r5.setTitle(r7)
        L_0x061b:
            long r7 = r0.currentDialogId
            boolean r5 = org.telegram.messenger.DialogObject.isEncryptedDialog(r7)
            if (r5 == 0) goto L_0x0627
            boolean r5 = r0.isEmbedVideo
            if (r5 == 0) goto L_0x0629
        L_0x0627:
            if (r6 == 0) goto L_0x062e
        L_0x0629:
            org.telegram.ui.ActionBar.ActionBarMenuItem r5 = r0.sendItem
            r0.setItemVisible(r5, r4, r4)
        L_0x062e:
            boolean r5 = r0.isEmbedVideo
            if (r5 != 0) goto L_0x0698
            org.telegram.tgnet.TLRPC$Message r5 = r1.messageOwner
            int r5 = r5.ttl
            if (r5 == 0) goto L_0x063c
            r7 = 3600(0xe10, float:5.045E-42)
            if (r5 < r7) goto L_0x0698
        L_0x063c:
            if (r6 == 0) goto L_0x063f
            goto L_0x0698
        L_0x063f:
            r5 = 1
            r0.allowShare = r5
            org.telegram.ui.ActionBar.ActionBarMenuItem r6 = r0.menuItem
            r6.showSubItem(r5)
            org.telegram.tgnet.TLRPC$Document r5 = r1.getDocument()
            if (r5 == 0) goto L_0x0662
            boolean r5 = r1.canPreviewDocument()
            if (r5 != 0) goto L_0x0662
            java.lang.String r5 = r1.getMimeType()
            java.lang.String r6 = "video/"
            boolean r5 = r5.startsWith(r6)
            if (r5 == 0) goto L_0x0660
            goto L_0x0662
        L_0x0660:
            r12 = 0
            goto L_0x0663
        L_0x0662:
            r12 = 1
        L_0x0663:
            android.widget.ImageView r5 = r0.paintButton
            if (r12 == 0) goto L_0x066f
            boolean r6 = r30.canSendMediaToParentChatActivity()
            if (r6 == 0) goto L_0x066f
            r6 = 0
            goto L_0x0671
        L_0x066f:
            r6 = 8
        L_0x0671:
            r5.setVisibility(r6)
            android.widget.LinearLayout r5 = r0.bottomButtonsLayout
            boolean r6 = r0.videoPlayerControlVisible
            if (r6 != 0) goto L_0x067b
            goto L_0x067d
        L_0x067b:
            r4 = 8
        L_0x067d:
            r5.setVisibility(r4)
            android.widget.LinearLayout r4 = r0.bottomButtonsLayout
            int r4 = r4.getVisibility()
            if (r4 != 0) goto L_0x0690
            org.telegram.ui.ActionBar.ActionBarMenuItem r4 = r0.menuItem
            r5 = 10
            r4.hideSubItem(r5)
            goto L_0x06ae
        L_0x0690:
            r5 = 10
            org.telegram.ui.ActionBar.ActionBarMenuItem r4 = r0.menuItem
            r4.showSubItem(r5)
            goto L_0x06ae
        L_0x0698:
            r5 = 10
            r0.allowShare = r4
            org.telegram.ui.ActionBar.ActionBarMenuItem r4 = r0.menuItem
            r6 = 1
            r4.hideSubItem(r6)
            android.widget.LinearLayout r4 = r0.bottomButtonsLayout
            r6 = 8
            r4.setVisibility(r6)
            org.telegram.ui.ActionBar.ActionBarMenuItem r4 = r0.menuItem
            r4.hideSubItem(r5)
        L_0x06ae:
            org.telegram.ui.Components.GroupedPhotosListView r4 = r0.groupedPhotosListView
            r4.fillList()
            r11 = r1
            goto L_0x0d1e
        L_0x06b6:
            return
        L_0x06b7:
            r9 = r7
            java.util.ArrayList<org.telegram.messenger.SecureDocument> r3 = r0.secureDocuments
            boolean r3 = r3.isEmpty()
            if (r3 != 0) goto L_0x06ff
            r0.allowShare = r4
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.menuItem
            r3 = 6
            r1.showSubItem(r3)
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.menuItem
            r3 = 1
            r1.hideSubItem(r3)
            org.telegram.ui.Components.FadingTextViewLayout r1 = r0.nameTextView
            r1.setText(r13)
            org.telegram.ui.Components.FadingTextViewLayout r1 = r0.dateTextView
            r1.setText(r13)
            org.telegram.ui.ActionBar.ActionBar r1 = r0.actionBar
            r5 = 2
            java.lang.Object[] r5 = new java.lang.Object[r5]
            int r6 = r0.switchingToIndex
            int r6 = r6 + r3
            java.lang.Integer r6 = java.lang.Integer.valueOf(r6)
            r5[r4] = r6
            java.util.ArrayList<org.telegram.messenger.SecureDocument> r4 = r0.secureDocuments
            int r4 = r4.size()
            java.lang.Integer r4 = java.lang.Integer.valueOf(r4)
            r5[r3] = r4
            r3 = 2131627129(0x7f0e0CLASSNAME, float:1.8881514E38)
            java.lang.String r3 = org.telegram.messenger.LocaleController.formatString(r15, r3, r5)
            r1.setTitle(r3)
        L_0x06fc:
            r12 = 0
            goto L_0x0d1c
        L_0x06ff:
            java.util.ArrayList<org.telegram.messenger.ImageLocation> r3 = r0.imagesArrLocations
            boolean r3 = r3.isEmpty()
            if (r3 != 0) goto L_0x083b
            if (r1 < 0) goto L_0x083a
            java.util.ArrayList<org.telegram.messenger.ImageLocation> r3 = r0.imagesArrLocations
            int r3 = r3.size()
            if (r1 < r3) goto L_0x0713
            goto L_0x083a
        L_0x0713:
            org.telegram.ui.Components.FadingTextViewLayout r3 = r0.nameTextView
            r3.setText(r13)
            org.telegram.ui.Components.FadingTextViewLayout r3 = r0.dateTextView
            r3.setText(r13)
            boolean r3 = r0.canEditAvatar
            r5 = 17
            r6 = 16
            if (r3 == 0) goto L_0x0786
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Photo> r3 = r0.avatarsArr
            boolean r3 = r3.isEmpty()
            if (r3 != 0) goto L_0x0786
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.menuItem
            r3.showSubItem(r5)
            boolean r3 = r30.isCurrentAvatarSet()
            if (r3 == 0) goto L_0x073e
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.menuItem
            r3.hideSubItem(r6)
            goto L_0x0743
        L_0x073e:
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.menuItem
            r3.showSubItem(r6)
        L_0x0743:
            long r5 = r0.avatarsDialogId
            r7 = 0
            int r3 = (r5 > r7 ? 1 : (r5 == r7 ? 0 : -1))
            if (r3 <= 0) goto L_0x074d
        L_0x074b:
            r1 = 1
            goto L_0x0776
        L_0x074d:
            int r3 = r0.currentAccount
            org.telegram.messenger.MessagesController r3 = org.telegram.messenger.MessagesController.getInstance(r3)
            long r5 = r0.avatarsDialogId
            long r5 = -r5
            java.lang.Long r5 = java.lang.Long.valueOf(r5)
            org.telegram.tgnet.TLRPC$Chat r3 = r3.getChat(r5)
            boolean r5 = r30.isCurrentAvatarSet()
            if (r5 != 0) goto L_0x074b
            int r5 = r0.currentAccount
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r6 = r0.imagesArrMessages
            java.lang.Object r1 = r6.get(r1)
            org.telegram.tgnet.TLRPC$Message r1 = (org.telegram.tgnet.TLRPC$Message) r1
            boolean r1 = org.telegram.messenger.MessageObject.canDeleteMessage(r5, r4, r1, r3)
            if (r1 == 0) goto L_0x0775
            goto L_0x074b
        L_0x0775:
            r1 = 0
        L_0x0776:
            if (r1 == 0) goto L_0x077f
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.menuItem
            r3 = 6
            r1.showSubItem(r3)
            goto L_0x0796
        L_0x077f:
            r3 = 6
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.menuItem
            r1.hideSubItem(r3)
            goto L_0x0796
        L_0x0786:
            r3 = 6
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.menuItem
            r1.hideSubItem(r5)
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.menuItem
            r1.hideSubItem(r6)
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.menuItem
            r1.hideSubItem(r3)
        L_0x0796:
            boolean r1 = r0.isEvent
            if (r1 == 0) goto L_0x07a7
            org.telegram.ui.ActionBar.ActionBar r1 = r0.actionBar
            r3 = 2131624513(0x7f0e0241, float:1.8876208E38)
            java.lang.String r3 = org.telegram.messenger.LocaleController.getString(r10, r3)
            r1.setTitle(r3)
            goto L_0x07cc
        L_0x07a7:
            org.telegram.ui.ActionBar.ActionBar r1 = r0.actionBar
            r3 = 2
            java.lang.Object[] r3 = new java.lang.Object[r3]
            int r5 = r0.switchingToIndex
            r6 = 1
            int r5 = r5 + r6
            java.lang.Integer r5 = java.lang.Integer.valueOf(r5)
            r3[r4] = r5
            java.util.ArrayList<org.telegram.messenger.ImageLocation> r5 = r0.imagesArrLocations
            int r5 = r5.size()
            java.lang.Integer r5 = java.lang.Integer.valueOf(r5)
            r3[r6] = r5
            r5 = 2131627129(0x7f0e0CLASSNAME, float:1.8881514E38)
            java.lang.String r3 = org.telegram.messenger.LocaleController.formatString(r15, r5, r3)
            r1.setTitle(r3)
        L_0x07cc:
            long r5 = r0.avatarsDialogId
            r7 = 0
            int r1 = (r5 > r7 ? 1 : (r5 == r7 ? 0 : -1))
            if (r1 == 0) goto L_0x07e5
            int r1 = r0.currentAccount
            org.telegram.messenger.MessagesController r1 = org.telegram.messenger.MessagesController.getInstance(r1)
            long r5 = r0.avatarsDialogId
            long r5 = -r5
            boolean r1 = r1.isChatNoForwards((long) r5)
            if (r1 == 0) goto L_0x07e5
            r1 = 1
            goto L_0x07e6
        L_0x07e5:
            r1 = 0
        L_0x07e6:
            if (r1 == 0) goto L_0x07ef
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.menuItem
            r5 = 1
            r3.hideSubItem(r5)
            goto L_0x07f5
        L_0x07ef:
            r5 = 1
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.menuItem
            r3.showSubItem(r5)
        L_0x07f5:
            r1 = r1 ^ r5
            r0.allowShare = r1
            android.widget.ImageView r3 = r0.shareButton
            if (r1 == 0) goto L_0x0806
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.shareItem
            int r1 = r1.getVisibility()
            if (r1 == 0) goto L_0x0806
            r1 = 0
            goto L_0x0808
        L_0x0806:
            r1 = 8
        L_0x0808:
            r3.setVisibility(r1)
            android.widget.LinearLayout r1 = r0.bottomButtonsLayout
            boolean r3 = r0.videoPlayerControlVisible
            if (r3 != 0) goto L_0x0812
            goto L_0x0814
        L_0x0812:
            r4 = 8
        L_0x0814:
            r1.setVisibility(r4)
            android.widget.LinearLayout r1 = r0.bottomButtonsLayout
            int r1 = r1.getVisibility()
            if (r1 != 0) goto L_0x0827
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.menuItem
            r3 = 10
            r1.hideSubItem(r3)
            goto L_0x082e
        L_0x0827:
            r3 = 10
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.menuItem
            r1.showSubItem(r3)
        L_0x082e:
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.menuItem
            r1.checkHideMenuItem()
            org.telegram.ui.Components.GroupedPhotosListView r1 = r0.groupedPhotosListView
            r1.fillList()
            goto L_0x06fc
        L_0x083a:
            return
        L_0x083b:
            java.util.ArrayList<java.lang.Object> r3 = r0.imagesArrLocals
            boolean r3 = r3.isEmpty()
            if (r3 != 0) goto L_0x0bfb
            if (r1 < 0) goto L_0x0bfa
            java.util.ArrayList<java.lang.Object> r3 = r0.imagesArrLocals
            int r3 = r3.size()
            if (r1 < r3) goto L_0x084f
            goto L_0x0bfa
        L_0x084f:
            java.util.ArrayList<java.lang.Object> r3 = r0.imagesArrLocals
            java.lang.Object r1 = r3.get(r1)
            boolean r3 = r1 instanceof org.telegram.tgnet.TLRPC$BotInlineResult
            if (r3 == 0) goto L_0x0881
            r3 = r1
            org.telegram.tgnet.TLRPC$BotInlineResult r3 = (org.telegram.tgnet.TLRPC$BotInlineResult) r3
            r0.currentBotInlineResult = r3
            org.telegram.tgnet.TLRPC$Document r5 = r3.document
            if (r5 == 0) goto L_0x0867
            boolean r3 = org.telegram.messenger.MessageObject.isVideoDocument(r5)
            goto L_0x0877
        L_0x0867:
            org.telegram.tgnet.TLRPC$WebDocument r5 = r3.content
            boolean r5 = r5 instanceof org.telegram.tgnet.TLRPC$TL_webDocument
            if (r5 == 0) goto L_0x0876
            java.lang.String r3 = r3.type
            java.lang.String r5 = "video"
            boolean r3 = r3.equals(r5)
            goto L_0x0877
        L_0x0876:
            r3 = 0
        L_0x0877:
            r8 = r2
            r6 = r3
            r2 = 0
            r3 = 0
            r5 = 0
        L_0x087c:
            r7 = 0
            r11 = 0
            r12 = 0
            goto L_0x0acf
        L_0x0881:
            boolean r3 = r1 instanceof org.telegram.messenger.MediaController.PhotoEntry
            if (r3 == 0) goto L_0x0892
            r5 = r1
            org.telegram.messenger.MediaController$PhotoEntry r5 = (org.telegram.messenger.MediaController.PhotoEntry) r5
            java.lang.String r6 = r5.path
            r0.currentPathObject = r6
            boolean r6 = r5.isVideo
            org.telegram.messenger.MediaController$CropState r5 = r5.cropState
            r7 = 1
            goto L_0x08af
        L_0x0892:
            boolean r5 = r1 instanceof org.telegram.messenger.MediaController.SearchImage
            if (r5 == 0) goto L_0x08ac
            r5 = r1
            org.telegram.messenger.MediaController$SearchImage r5 = (org.telegram.messenger.MediaController.SearchImage) r5
            java.lang.String r6 = r5.getPathToAttach()
            r0.currentPathObject = r6
            org.telegram.messenger.MediaController$CropState r6 = r5.cropState
            int r5 = r5.type
            r7 = 1
            if (r5 != r7) goto L_0x08aa
            r5 = r6
            r6 = 0
            r8 = 1
            goto L_0x08b0
        L_0x08aa:
            r5 = r6
            goto L_0x08ae
        L_0x08ac:
            r7 = 1
            r5 = 0
        L_0x08ae:
            r6 = 0
        L_0x08af:
            r8 = 0
        L_0x08b0:
            r11 = 1065353216(0x3var_, float:1.0)
            if (r6 == 0) goto L_0x09c5
            boolean r8 = r0.isCurrentVideo
            if (r8 != 0) goto L_0x08ba
            r8 = 0
            goto L_0x08bb
        L_0x08ba:
            r8 = r2
        L_0x08bb:
            r0.isCurrentVideo = r7
            r7 = 0
            if (r3 == 0) goto L_0x08ce
            r12 = r1
            org.telegram.messenger.MediaController$PhotoEntry r12 = (org.telegram.messenger.MediaController.PhotoEntry) r12
            org.telegram.messenger.VideoEditedInfo r12 = r12.editedInfo
            if (r12 == 0) goto L_0x08ce
            boolean r7 = r12.muted
            float r13 = r12.start
            float r12 = r12.end
            goto L_0x08d2
        L_0x08ce:
            r7 = 0
            r12 = 1065353216(0x3var_, float:1.0)
            r13 = 0
        L_0x08d2:
            java.lang.String r14 = r0.currentPathObject
            r0.processOpenVideo(r14, r7, r13, r12)
            boolean r7 = r0.isDocumentsPicker
            if (r7 != 0) goto L_0x097c
            int r7 = android.os.Build.VERSION.SDK_INT
            r12 = 18
            if (r7 >= r12) goto L_0x08e3
            goto L_0x097c
        L_0x08e3:
            r7 = 1
            r0.showVideoTimeline(r7, r2)
            int r12 = r0.sendPhotoType
            if (r12 == r7) goto L_0x0921
            android.widget.TextView r12 = r0.videoAvatarTooltip
            r13 = 8
            r12.setVisibility(r13)
            android.widget.ImageView r12 = r0.cropItem
            r12.setVisibility(r4)
            android.widget.ImageView r12 = r0.cropItem
            java.lang.Integer r14 = java.lang.Integer.valueOf(r7)
            r12.setTag(r14)
            android.widget.ImageView r12 = r0.rotateItem
            r12.setVisibility(r13)
            android.widget.ImageView r12 = r0.rotateItem
            r14 = 0
            r12.setTag(r14)
            android.widget.ImageView r12 = r0.mirrorItem
            r12.setVisibility(r13)
            android.widget.ImageView r12 = r0.mirrorItem
            r12.setTag(r14)
            android.widget.ImageView r12 = r0.muteItem
            org.telegram.messenger.AndroidUtilities.updateViewVisibilityAnimated(r12, r7, r11, r2)
            android.widget.ImageView r2 = r0.compressItem
            r2.setVisibility(r4)
            r12 = 1
            goto L_0x095c
        L_0x0921:
            r13 = 8
            r14 = 0
            android.widget.TextView r7 = r0.videoAvatarTooltip
            r7.setVisibility(r4)
            android.widget.ImageView r7 = r0.cropItem
            r7.setVisibility(r13)
            android.widget.ImageView r7 = r0.cropItem
            r7.setTag(r14)
            android.widget.ImageView r7 = r0.rotateItem
            r7.setVisibility(r4)
            android.widget.ImageView r7 = r0.rotateItem
            r12 = 1
            java.lang.Integer r13 = java.lang.Integer.valueOf(r12)
            r7.setTag(r13)
            android.widget.ImageView r7 = r0.mirrorItem
            r7.setVisibility(r4)
            android.widget.ImageView r7 = r0.mirrorItem
            java.lang.Integer r13 = java.lang.Integer.valueOf(r12)
            r7.setTag(r13)
            android.widget.ImageView r7 = r0.muteItem
            org.telegram.messenger.AndroidUtilities.updateViewVisibilityAnimated(r7, r4, r11, r2)
            android.widget.ImageView r2 = r0.compressItem
            r7 = 8
            r2.setVisibility(r7)
        L_0x095c:
            android.widget.ImageView r2 = r0.tuneItem
            r2.setVisibility(r4)
            android.widget.ImageView r2 = r0.tuneItem
            java.lang.Integer r7 = java.lang.Integer.valueOf(r12)
            r2.setTag(r7)
            android.widget.ImageView r2 = r0.paintItem
            r2.setVisibility(r4)
            android.widget.ImageView r2 = r0.paintItem
            java.lang.Integer r7 = java.lang.Integer.valueOf(r12)
            r2.setTag(r7)
            r12 = 8
            goto L_0x0a88
        L_0x097c:
            r0.showVideoTimeline(r4, r2)
            android.widget.TextView r7 = r0.videoAvatarTooltip
            r12 = 8
            r7.setVisibility(r12)
            android.widget.ImageView r7 = r0.cropItem
            r7.setVisibility(r12)
            android.widget.ImageView r7 = r0.cropItem
            r13 = 0
            r7.setTag(r13)
            android.widget.ImageView r7 = r0.tuneItem
            r7.setVisibility(r12)
            android.widget.ImageView r7 = r0.tuneItem
            r7.setTag(r13)
            android.widget.ImageView r7 = r0.paintItem
            r7.setVisibility(r12)
            android.widget.ImageView r7 = r0.paintItem
            r7.setTag(r13)
            android.widget.ImageView r7 = r0.rotateItem
            r7.setVisibility(r12)
            android.widget.ImageView r7 = r0.rotateItem
            r7.setTag(r13)
            android.widget.ImageView r7 = r0.mirrorItem
            r7.setVisibility(r12)
            android.widget.ImageView r7 = r0.mirrorItem
            r7.setTag(r13)
            android.widget.ImageView r7 = r0.muteItem
            org.telegram.messenger.AndroidUtilities.updateViewVisibilityAnimated(r7, r4, r11, r2)
            android.widget.ImageView r2 = r0.compressItem
            r2.setVisibility(r12)
            goto L_0x0a88
        L_0x09c5:
            r12 = 8
            r0.showVideoTimeline(r4, r2)
            android.widget.TextView r7 = r0.videoAvatarTooltip
            r7.setVisibility(r12)
            android.widget.ImageView r7 = r0.muteItem
            org.telegram.messenger.AndroidUtilities.updateViewVisibilityAnimated(r7, r4, r11, r2)
            boolean r7 = r0.isCurrentVideo
            if (r7 == 0) goto L_0x09da
            r7 = 0
            goto L_0x09db
        L_0x09da:
            r7 = r2
        L_0x09db:
            r0.isCurrentVideo = r4
            android.widget.ImageView r11 = r0.compressItem
            r11.setVisibility(r12)
            if (r8 != 0) goto L_0x0a55
            int r8 = r0.sendPhotoType
            r11 = 10
            if (r8 == r11) goto L_0x0a55
            boolean r11 = r0.isDocumentsPicker
            if (r11 == 0) goto L_0x09ef
            goto L_0x0a55
        L_0x09ef:
            r11 = 4
            if (r8 == r11) goto L_0x0a14
            r11 = 5
            if (r8 != r11) goto L_0x09f6
            goto L_0x0a14
        L_0x09f6:
            android.widget.ImageView r8 = r0.paintItem
            r8.setVisibility(r4)
            android.widget.ImageView r8 = r0.paintItem
            r11 = 1
            java.lang.Integer r12 = java.lang.Integer.valueOf(r11)
            r8.setTag(r12)
            android.widget.ImageView r8 = r0.tuneItem
            r8.setVisibility(r4)
            android.widget.ImageView r8 = r0.tuneItem
            java.lang.Integer r12 = java.lang.Integer.valueOf(r11)
            r8.setTag(r12)
            goto L_0x0a2b
        L_0x0a14:
            android.widget.ImageView r8 = r0.paintItem
            r11 = 8
            r8.setVisibility(r11)
            android.widget.ImageView r8 = r0.paintItem
            r12 = 0
            r8.setTag(r12)
            android.widget.ImageView r8 = r0.tuneItem
            r8.setVisibility(r11)
            android.widget.ImageView r8 = r0.tuneItem
            r8.setTag(r12)
        L_0x0a2b:
            android.widget.ImageView r8 = r0.cropItem
            int r11 = r0.sendPhotoType
            r12 = 1
            if (r11 == r12) goto L_0x0a34
            r11 = 0
            goto L_0x0a36
        L_0x0a34:
            r11 = 8
        L_0x0a36:
            r8.setVisibility(r11)
            android.widget.ImageView r8 = r0.rotateItem
            int r11 = r0.sendPhotoType
            if (r11 == r12) goto L_0x0a42
            r11 = 8
            goto L_0x0a43
        L_0x0a42:
            r11 = 0
        L_0x0a43:
            r8.setVisibility(r11)
            android.widget.ImageView r8 = r0.mirrorItem
            int r11 = r0.sendPhotoType
            if (r11 == r12) goto L_0x0a4f
            r11 = 8
            goto L_0x0a50
        L_0x0a4f:
            r11 = 0
        L_0x0a50:
            r8.setVisibility(r11)
            r12 = 0
            goto L_0x0a7b
        L_0x0a55:
            android.widget.ImageView r8 = r0.paintItem
            r11 = 8
            r8.setVisibility(r11)
            android.widget.ImageView r8 = r0.paintItem
            r12 = 0
            r8.setTag(r12)
            android.widget.ImageView r8 = r0.cropItem
            r8.setVisibility(r11)
            android.widget.ImageView r8 = r0.rotateItem
            r8.setVisibility(r11)
            android.widget.ImageView r8 = r0.mirrorItem
            r8.setVisibility(r11)
            android.widget.ImageView r8 = r0.tuneItem
            r8.setVisibility(r11)
            android.widget.ImageView r8 = r0.tuneItem
            r8.setTag(r12)
        L_0x0a7b:
            if (r2 == 0) goto L_0x0a82
            org.telegram.ui.ActionBar.ActionBar r2 = r0.actionBar
            r2.beginDelayedTransition()
        L_0x0a82:
            org.telegram.ui.ActionBar.ActionBar r2 = r0.actionBar
            r2.setSubtitle(r12)
            r8 = r7
        L_0x0a88:
            if (r3 == 0) goto L_0x0ab9
            r2 = r1
            org.telegram.messenger.MediaController$PhotoEntry r2 = (org.telegram.messenger.MediaController.PhotoEntry) r2
            int r3 = r2.bucketId
            if (r3 != 0) goto L_0x0aa4
            long r11 = r2.dateTaken
            r16 = 0
            int r3 = (r11 > r16 ? 1 : (r11 == r16 ? 0 : -1))
            if (r3 != 0) goto L_0x0aa4
            java.util.ArrayList<java.lang.Object> r3 = r0.imagesArrLocals
            int r3 = r3.size()
            r7 = 1
            if (r3 != r7) goto L_0x0aa4
            r3 = 1
            goto L_0x0aa5
        L_0x0aa4:
            r3 = 0
        L_0x0aa5:
            r0.fromCamera = r3
            boolean r3 = r0.hasCaptionForAllMedia
            if (r3 == 0) goto L_0x0aae
            java.lang.CharSequence r3 = r0.captionForAllMedia
            goto L_0x0ab0
        L_0x0aae:
            java.lang.CharSequence r3 = r2.caption
        L_0x0ab0:
            int r7 = r2.ttl
            boolean r11 = r2.isFiltered
            boolean r12 = r2.isPainted
            boolean r2 = r2.isCropped
            goto L_0x0acf
        L_0x0ab9:
            boolean r2 = r1 instanceof org.telegram.messenger.MediaController.SearchImage
            if (r2 == 0) goto L_0x0acb
            r2 = r1
            org.telegram.messenger.MediaController$SearchImage r2 = (org.telegram.messenger.MediaController.SearchImage) r2
            java.lang.CharSequence r3 = r2.caption
            int r7 = r2.ttl
            boolean r11 = r2.isFiltered
            boolean r12 = r2.isPainted
            boolean r2 = r2.isCropped
            goto L_0x0acf
        L_0x0acb:
            r2 = 0
            r3 = 0
            goto L_0x087c
        L_0x0acf:
            android.widget.FrameLayout r13 = r0.bottomLayout
            int r13 = r13.getVisibility()
            r14 = 8
            if (r13 == r14) goto L_0x0ade
            android.widget.FrameLayout r13 = r0.bottomLayout
            r13.setVisibility(r14)
        L_0x0ade:
            android.widget.FrameLayout r13 = r0.bottomLayout
            r14 = 0
            r13.setTag(r14)
            boolean r13 = r0.fromCamera
            if (r13 == 0) goto L_0x0b04
            if (r6 == 0) goto L_0x0af7
            org.telegram.ui.ActionBar.ActionBar r6 = r0.actionBar
            r10 = 2131624519(0x7f0e0247, float:1.887622E38)
            java.lang.String r9 = org.telegram.messenger.LocaleController.getString(r9, r10)
            r6.setTitle(r9)
            goto L_0x0b29
        L_0x0af7:
            org.telegram.ui.ActionBar.ActionBar r6 = r0.actionBar
            r9 = 2131624513(0x7f0e0241, float:1.8876208E38)
            java.lang.String r9 = org.telegram.messenger.LocaleController.getString(r10, r9)
            r6.setTitle(r9)
            goto L_0x0b29
        L_0x0b04:
            org.telegram.ui.ActionBar.ActionBar r6 = r0.actionBar
            r9 = 2
            java.lang.Object[] r10 = new java.lang.Object[r9]
            int r9 = r0.switchingToIndex
            r13 = 1
            int r9 = r9 + r13
            java.lang.Integer r9 = java.lang.Integer.valueOf(r9)
            r10[r4] = r9
            java.util.ArrayList<java.lang.Object> r9 = r0.imagesArrLocals
            int r9 = r9.size()
            java.lang.Integer r9 = java.lang.Integer.valueOf(r9)
            r10[r13] = r9
            r9 = 2131627129(0x7f0e0CLASSNAME, float:1.8881514E38)
            java.lang.String r9 = org.telegram.messenger.LocaleController.formatString(r15, r9, r10)
            r6.setTitle(r9)
        L_0x0b29:
            org.telegram.ui.ChatActivity r6 = r0.parentChatActivity
            if (r6 == 0) goto L_0x0b63
            org.telegram.tgnet.TLRPC$Chat r6 = r6.getCurrentChat()
            if (r6 == 0) goto L_0x0b3b
            org.telegram.ui.ActionBar.ActionBar r9 = r0.actionBar
            java.lang.String r6 = r6.title
            r9.setTitle(r6)
            goto L_0x0b63
        L_0x0b3b:
            org.telegram.ui.ChatActivity r6 = r0.parentChatActivity
            org.telegram.tgnet.TLRPC$User r6 = r6.getCurrentUser()
            if (r6 == 0) goto L_0x0b63
            boolean r9 = r6.self
            if (r9 == 0) goto L_0x0b56
            org.telegram.ui.ActionBar.ActionBar r6 = r0.actionBar
            r9 = 2131628140(0x7f0e106c, float:1.8883564E38)
            java.lang.String r10 = "SavedMessages"
            java.lang.String r9 = org.telegram.messenger.LocaleController.getString(r10, r9)
            r6.setTitle(r9)
            goto L_0x0b63
        L_0x0b56:
            org.telegram.ui.ActionBar.ActionBar r9 = r0.actionBar
            java.lang.String r10 = r6.first_name
            java.lang.String r6 = r6.last_name
            java.lang.String r6 = org.telegram.messenger.ContactsController.formatName(r10, r6)
            r9.setTitle(r6)
        L_0x0b63:
            int r6 = r0.sendPhotoType
            if (r6 == 0) goto L_0x0b79
            r9 = 4
            if (r6 == r9) goto L_0x0b79
            r9 = 2
            if (r6 == r9) goto L_0x0b70
            r9 = 5
            if (r6 != r9) goto L_0x0b86
        L_0x0b70:
            java.util.ArrayList<java.lang.Object> r6 = r0.imagesArrLocals
            int r6 = r6.size()
            r9 = 1
            if (r6 <= r9) goto L_0x0b86
        L_0x0b79:
            org.telegram.ui.Components.CheckBox r6 = r0.checkImageView
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r9 = r0.placeProvider
            int r10 = r0.switchingToIndex
            boolean r9 = r9.isPhotoChecked(r10)
            r6.setChecked(r9, r4)
        L_0x0b86:
            r0.updateCaptionTextForCurrentPhoto(r1)
            android.graphics.PorterDuffColorFilter r1 = new android.graphics.PorterDuffColorFilter
            java.lang.String r4 = "dialogFloatingButton"
            int r4 = r0.getThemedColor(r4)
            android.graphics.PorterDuff$Mode r6 = android.graphics.PorterDuff.Mode.MULTIPLY
            r1.<init>(r4, r6)
            android.widget.ImageView r4 = r0.timeItem
            if (r7 == 0) goto L_0x0b9c
            r6 = r1
            goto L_0x0b9d
        L_0x0b9c:
            r6 = 0
        L_0x0b9d:
            r4.setColorFilter(r6)
            android.widget.ImageView r4 = r0.paintItem
            if (r12 == 0) goto L_0x0ba6
            r6 = r1
            goto L_0x0ba7
        L_0x0ba6:
            r6 = 0
        L_0x0ba7:
            r4.setColorFilter(r6)
            android.widget.ImageView r4 = r0.cropItem
            if (r2 == 0) goto L_0x0bb0
            r2 = r1
            goto L_0x0bb1
        L_0x0bb0:
            r2 = 0
        L_0x0bb1:
            r4.setColorFilter(r2)
            android.widget.ImageView r2 = r0.tuneItem
            if (r11 == 0) goto L_0x0bba
            r4 = r1
            goto L_0x0bbb
        L_0x0bba:
            r4 = 0
        L_0x0bbb:
            r2.setColorFilter(r4)
            boolean r2 = r0.fromCamera
            if (r2 == 0) goto L_0x0bdb
            android.widget.ImageView r2 = r0.mirrorItem
            if (r5 == 0) goto L_0x0bd6
            boolean r4 = r0.isCurrentVideo
            if (r4 == 0) goto L_0x0bce
            boolean r6 = r5.mirrored
            if (r6 == 0) goto L_0x0bd4
        L_0x0bce:
            if (r4 != 0) goto L_0x0bd6
            boolean r4 = r5.mirrored
            if (r4 == 0) goto L_0x0bd6
        L_0x0bd4:
            r4 = r1
            goto L_0x0bd7
        L_0x0bd6:
            r4 = 0
        L_0x0bd7:
            r2.setColorFilter(r4)
            goto L_0x0be9
        L_0x0bdb:
            android.widget.ImageView r2 = r0.mirrorItem
            if (r5 == 0) goto L_0x0be5
            boolean r4 = r5.mirrored
            if (r4 == 0) goto L_0x0be5
            r4 = r1
            goto L_0x0be6
        L_0x0be5:
            r4 = 0
        L_0x0be6:
            r2.setColorFilter(r4)
        L_0x0be9:
            android.widget.ImageView r2 = r0.rotateItem
            if (r5 == 0) goto L_0x0bf2
            int r4 = r5.transformRotation
            if (r4 == 0) goto L_0x0bf2
            goto L_0x0bf3
        L_0x0bf2:
            r1 = 0
        L_0x0bf3:
            r2.setColorFilter(r1)
            r2 = r8
            r11 = 0
            goto L_0x0d1e
        L_0x0bfa:
            return
        L_0x0bfb:
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r1 = r0.pageBlocksAdapter
            if (r1 == 0) goto L_0x06fc
            int r1 = r1.getItemsCount()
            int r3 = r0.switchingToIndex
            if (r3 < 0) goto L_0x0d1b
            if (r3 < r1) goto L_0x0c0b
            goto L_0x0d1b
        L_0x0c0b:
            int r3 = r0.currentAccount
            org.telegram.messenger.MessagesController r3 = org.telegram.messenger.MessagesController.getInstance(r3)
            long r5 = r0.currentDialogId
            long r5 = -r5
            boolean r3 = r3.isChatNoForwards((long) r5)
            r5 = 1
            r3 = r3 ^ r5
            r0.allowShare = r3
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r3 = r0.pageBlocksAdapter
            int r5 = r0.switchingToIndex
            org.telegram.tgnet.TLRPC$PageBlock r3 = r3.get(r5)
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r5 = r0.pageBlocksAdapter
            int r6 = r0.switchingToIndex
            java.lang.CharSequence r5 = r5.getCaption(r6)
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r6 = r0.pageBlocksAdapter
            int r7 = r0.switchingToIndex
            boolean r6 = r6.isVideo(r7)
            if (r6 == 0) goto L_0x0CLASSNAME
            boolean r7 = r0.allowShare
            if (r7 == 0) goto L_0x0CLASSNAME
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.menuItem
            r11 = 11
            r7.showSubItem(r11)
            goto L_0x0CLASSNAME
        L_0x0CLASSNAME:
            r11 = 11
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.menuItem
            r7.hideSubItem(r11)
        L_0x0CLASSNAME:
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.menuItem
            r7.checkHideMenuItem()
            boolean r7 = r0.pipAvailable
            if (r7 != 0) goto L_0x0CLASSNAME
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.pipItem
            r7.setEnabled(r4)
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.pipItem
            r11 = 1056964608(0x3var_, float:0.5)
            r12 = 1
            r0.setItemVisible(r7, r12, r12, r11)
            goto L_0x0CLASSNAME
        L_0x0CLASSNAME:
            r12 = 1
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.pipItem
            r0.setItemVisible(r7, r12, r12)
            goto L_0x0CLASSNAME
        L_0x0CLASSNAME:
            r12 = 1
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.menuItem
            r11 = 11
            r7.hideSubItem(r11)
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.pipItem
            r0.setItemVisible(r7, r4, r12)
        L_0x0CLASSNAME:
            android.widget.FrameLayout r7 = r0.bottomLayout
            int r7 = r7.getVisibility()
            r11 = 8
            if (r7 == r11) goto L_0x0CLASSNAME
            android.widget.FrameLayout r7 = r0.bottomLayout
            r7.setVisibility(r11)
        L_0x0CLASSNAME:
            android.widget.FrameLayout r7 = r0.bottomLayout
            r12 = 0
            r7.setTag(r12)
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.shareItem
            boolean r13 = r0.allowShare
            if (r13 == 0) goto L_0x0CLASSNAME
            r11 = 0
        L_0x0CLASSNAME:
            r7.setVisibility(r11)
            org.telegram.ui.Components.AnimatedFileDrawable r7 = r0.currentAnimation
            if (r7 == 0) goto L_0x0cc0
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.menuItem
            r4 = 1
            r1.hideSubItem(r4)
            boolean r1 = r0.allowShare
            if (r1 == 0) goto L_0x0ca7
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.menuItem
            r1.showSubItem(r8)
            goto L_0x0cac
        L_0x0ca7:
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.menuItem
            r1.hideSubItem(r8)
        L_0x0cac:
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.menuItem
            r1.checkHideMenuItem()
            org.telegram.ui.ActionBar.ActionBar r1 = r0.actionBar
            r4 = 2131624494(0x7f0e022e, float:1.887617E38)
            java.lang.String r6 = "AttachGif"
            java.lang.String r4 = org.telegram.messenger.LocaleController.getString(r6, r4)
            r1.setTitle(r4)
            goto L_0x0d0e
        L_0x0cc0:
            r7 = 1
            if (r1 != r7) goto L_0x0ce0
            if (r6 == 0) goto L_0x0cd2
            org.telegram.ui.ActionBar.ActionBar r1 = r0.actionBar
            r4 = 2131624519(0x7f0e0247, float:1.887622E38)
            java.lang.String r4 = org.telegram.messenger.LocaleController.getString(r9, r4)
            r1.setTitle(r4)
            goto L_0x0cde
        L_0x0cd2:
            org.telegram.ui.ActionBar.ActionBar r1 = r0.actionBar
            r4 = 2131624513(0x7f0e0241, float:1.8876208E38)
            java.lang.String r4 = org.telegram.messenger.LocaleController.getString(r10, r4)
            r1.setTitle(r4)
        L_0x0cde:
            r10 = 1
            goto L_0x0cff
        L_0x0ce0:
            org.telegram.ui.ActionBar.ActionBar r6 = r0.actionBar
            r7 = 2
            java.lang.Object[] r7 = new java.lang.Object[r7]
            int r9 = r0.switchingToIndex
            r10 = 1
            int r9 = r9 + r10
            java.lang.Integer r9 = java.lang.Integer.valueOf(r9)
            r7[r4] = r9
            java.lang.Integer r1 = java.lang.Integer.valueOf(r1)
            r7[r10] = r1
            r1 = 2131627129(0x7f0e0CLASSNAME, float:1.8881514E38)
            java.lang.String r1 = org.telegram.messenger.LocaleController.formatString(r15, r1, r7)
            r6.setTitle(r1)
        L_0x0cff:
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.menuItem
            r1.showSubItem(r10)
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.menuItem
            r1.hideSubItem(r8)
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.menuItem
            r1.checkHideMenuItem()
        L_0x0d0e:
            org.telegram.ui.Components.GroupedPhotosListView r1 = r0.groupedPhotosListView
            r1.fillList()
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r1 = r0.pageBlocksAdapter
            r1.updateSlideshowCell(r3)
            r3 = r5
            r11 = r12
            goto L_0x0d1e
        L_0x0d1b:
            return
        L_0x0d1c:
            r3 = r12
            r11 = r3
        L_0x0d1e:
            r0.setCurrentCaption(r11, r3, r2)
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.setIsAboutToSwitchToIndex(int, boolean, boolean):void");
    }

    private void showVideoTimeline(boolean z, boolean z2) {
        int i = null;
        int i2 = 0;
        if (!z2) {
            this.videoTimelineView.animate().setListener((Animator.AnimatorListener) null).cancel();
            VideoTimelinePlayView videoTimelinePlayView = this.videoTimelineView;
            if (!z) {
                i2 = 8;
            }
            videoTimelinePlayView.setVisibility(i2);
            this.videoTimelineView.setTranslationY(0.0f);
            this.videoTimelineView.setAlpha(this.pickerView.getAlpha());
        } else if (z && this.videoTimelineView.getTag() == null) {
            if (this.videoTimelineView.getVisibility() != 0) {
                this.videoTimelineView.setVisibility(0);
                this.videoTimelineView.setAlpha(this.pickerView.getAlpha());
                this.videoTimelineView.setTranslationY((float) AndroidUtilities.dp(58.0f));
            }
            ObjectAnimator objectAnimator = this.videoTimelineAnimator;
            if (objectAnimator != null) {
                objectAnimator.removeAllListeners();
                this.videoTimelineAnimator.cancel();
            }
            VideoTimelinePlayView videoTimelinePlayView2 = this.videoTimelineView;
            ObjectAnimator ofFloat = ObjectAnimator.ofFloat(videoTimelinePlayView2, View.TRANSLATION_Y, new float[]{videoTimelinePlayView2.getTranslationY(), 0.0f});
            this.videoTimelineAnimator = ofFloat;
            ofFloat.setDuration(220);
            this.videoTimelineAnimator.setInterpolator(CubicBezierInterpolator.DEFAULT);
            this.videoTimelineAnimator.start();
        } else if (!z && this.videoTimelineView.getTag() != null) {
            ObjectAnimator objectAnimator2 = this.videoTimelineAnimator;
            if (objectAnimator2 != null) {
                objectAnimator2.removeAllListeners();
                this.videoTimelineAnimator.cancel();
            }
            VideoTimelinePlayView videoTimelinePlayView3 = this.videoTimelineView;
            ObjectAnimator ofFloat2 = ObjectAnimator.ofFloat(videoTimelinePlayView3, View.TRANSLATION_Y, new float[]{videoTimelinePlayView3.getTranslationY(), (float) AndroidUtilities.dp(58.0f)});
            this.videoTimelineAnimator = ofFloat2;
            ofFloat2.addListener(new HideViewAfterAnimation(this.videoTimelineView));
            this.videoTimelineAnimator.setDuration(220);
            this.videoTimelineAnimator.setInterpolator(CubicBezierInterpolator.DEFAULT);
            this.videoTimelineAnimator.start();
        }
        VideoTimelinePlayView videoTimelinePlayView4 = this.videoTimelineView;
        if (z) {
            i = 1;
        }
        videoTimelinePlayView4.setTag(i);
    }

    public static TLRPC$FileLocation getFileLocation(ImageLocation imageLocation) {
        if (imageLocation == null) {
            return null;
        }
        return imageLocation.location;
    }

    public static String getFileLocationExt(ImageLocation imageLocation) {
        if (imageLocation == null || imageLocation.imageType != 2) {
            return null;
        }
        return "mp4";
    }

    /* access modifiers changed from: private */
    public void setImageIndex(int i) {
        setImageIndex(i, true, false);
    }

    /* JADX WARNING: Code restructure failed: missing block: B:11:0x005f, code lost:
        r8 = r8.cropState;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void setImageIndex(int r34, boolean r35, boolean r36) {
        /*
            r33 = this;
            r0 = r33
            r1 = r34
            int r2 = r0.currentIndex
            if (r2 == r1) goto L_0x0582
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r2 = r0.placeProvider
            if (r2 != 0) goto L_0x000e
            goto L_0x0582
        L_0x000e:
            r2 = 0
            if (r35 != 0) goto L_0x001a
            org.telegram.messenger.ImageReceiver$BitmapHolder r3 = r0.currentThumb
            if (r3 == 0) goto L_0x001a
            r3.release()
            r0.currentThumb = r2
        L_0x001a:
            java.lang.String[] r3 = r0.currentFileNames
            java.lang.String r4 = r33.getFileName(r34)
            r5 = 0
            r3[r5] = r4
            java.lang.String[] r3 = r0.currentFileNames
            int r4 = r1 + 1
            java.lang.String r4 = r0.getFileName(r4)
            r6 = 1
            r3[r6] = r4
            java.lang.String[] r3 = r0.currentFileNames
            int r4 = r1 + -1
            java.lang.String r4 = r0.getFileName(r4)
            r7 = 2
            r3[r7] = r4
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r3 = r0.placeProvider
            org.telegram.messenger.MessageObject r4 = r0.currentMessageObject
            org.telegram.messenger.ImageLocation r8 = r0.currentFileLocation
            org.telegram.tgnet.TLRPC$FileLocation r8 = getFileLocation(r8)
            int r9 = r0.currentIndex
            r3.willSwitchFromPhoto(r4, r8, r9)
            long r3 = android.os.SystemClock.elapsedRealtime()
            r0.lastPhotoSetTime = r3
            int r3 = r0.currentIndex
            r0.currentIndex = r1
            r33.setIsAboutToSwitchToIndex(r34, r35, r36)
            org.telegram.ui.Components.Crop.CropTransform r4 = r0.cropTransform
            org.telegram.ui.Components.Crop.CropTransform r4 = r4.clone()
            org.telegram.ui.PhotoViewer$EditState r8 = r0.editState
            if (r8 == 0) goto L_0x0069
            org.telegram.messenger.MediaController$CropState r8 = r8.cropState
            if (r8 != 0) goto L_0x0064
            goto L_0x0069
        L_0x0064:
            org.telegram.messenger.MediaController$CropState r8 = r8.clone()
            goto L_0x006a
        L_0x0069:
            r8 = r2
        L_0x006a:
            boolean r9 = r0.centerImageIsVideo
            org.telegram.ui.PhotoViewer$EditState r10 = r0.editState
            r10.reset()
            java.util.ArrayList<org.telegram.messenger.MessageObject> r10 = r0.imagesArr
            boolean r10 = r10.isEmpty()
            if (r10 != 0) goto L_0x0104
            int r1 = r0.currentIndex
            if (r1 < 0) goto L_0x0100
            java.util.ArrayList<org.telegram.messenger.MessageObject> r10 = r0.imagesArr
            int r10 = r10.size()
            if (r1 < r10) goto L_0x0087
            goto L_0x0100
        L_0x0087:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r0.imagesArr
            int r10 = r0.currentIndex
            java.lang.Object r1 = r1.get(r10)
            org.telegram.messenger.MessageObject r1 = (org.telegram.messenger.MessageObject) r1
            if (r35 == 0) goto L_0x00a3
            org.telegram.messenger.MessageObject r10 = r0.currentMessageObject
            if (r10 == 0) goto L_0x00a3
            int r10 = r10.getId()
            int r13 = r1.getId()
            if (r10 != r13) goto L_0x00a3
            r10 = 1
            goto L_0x00a4
        L_0x00a3:
            r10 = 0
        L_0x00a4:
            r0.currentMessageObject = r1
            boolean r13 = r1.isVideo()
            int r14 = r0.sharedMediaType
            if (r14 != r6) goto L_0x00d1
            boolean r1 = r1.canPreviewDocument()
            r0.canZoom = r1
            if (r1 == 0) goto L_0x00c9
            boolean r1 = r0.allowShare
            if (r1 == 0) goto L_0x00c0
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.menuItem
            r1.showSubItem(r6)
            goto L_0x00c5
        L_0x00c0:
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.menuItem
            r1.hideSubItem(r6)
        L_0x00c5:
            r0.setDoubleTapEnabled(r6)
            goto L_0x00d1
        L_0x00c9:
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.menuItem
            r1.hideSubItem(r6)
            r0.setDoubleTapEnabled(r5)
        L_0x00d1:
            if (r13 != 0) goto L_0x00ea
            boolean r1 = r0.isEmbedVideo
            if (r1 == 0) goto L_0x00d8
            goto L_0x00ea
        L_0x00d8:
            org.telegram.ui.ActionBar.ActionBarMenuSubItem r1 = r0.speedItem
            r14 = 8
            r1.setVisibility(r14)
            org.telegram.ui.ActionBar.ActionBarPopupWindow$GapView r1 = r0.speedGap
            r1.setVisibility(r14)
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.menuItem
            r1.checkHideMenuItem()
            goto L_0x00fb
        L_0x00ea:
            org.telegram.ui.ActionBar.ActionBarMenuSubItem r1 = r0.speedItem
            r1.setVisibility(r5)
            org.telegram.ui.ActionBar.ActionBarPopupWindow$GapView r1 = r0.speedGap
            r1.setVisibility(r5)
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.menuItem
            r14 = 19
            r1.showSubItem(r14)
        L_0x00fb:
            r1 = r2
            r16 = r3
            goto L_0x03c0
        L_0x0100:
            r0.closePhoto(r5, r5)
            return
        L_0x0104:
            java.util.ArrayList<org.telegram.messenger.SecureDocument> r10 = r0.secureDocuments
            boolean r10 = r10.isEmpty()
            if (r10 != 0) goto L_0x0129
            if (r1 < 0) goto L_0x0125
            java.util.ArrayList<org.telegram.messenger.SecureDocument> r10 = r0.secureDocuments
            int r10 = r10.size()
            if (r1 < r10) goto L_0x0117
            goto L_0x0125
        L_0x0117:
            java.util.ArrayList<org.telegram.messenger.SecureDocument> r10 = r0.secureDocuments
            java.lang.Object r1 = r10.get(r1)
            org.telegram.messenger.SecureDocument r1 = (org.telegram.messenger.SecureDocument) r1
            r0.currentSecureDocument = r1
            r16 = r3
            goto L_0x03bd
        L_0x0125:
            r0.closePhoto(r5, r5)
            return
        L_0x0129:
            java.util.ArrayList<org.telegram.messenger.ImageLocation> r10 = r0.imagesArrLocations
            boolean r10 = r10.isEmpty()
            if (r10 != 0) goto L_0x0181
            if (r1 < 0) goto L_0x017d
            java.util.ArrayList<org.telegram.messenger.ImageLocation> r10 = r0.imagesArrLocations
            int r10 = r10.size()
            if (r1 < r10) goto L_0x013c
            goto L_0x017d
        L_0x013c:
            org.telegram.messenger.ImageLocation r10 = r0.currentFileLocation
            java.util.ArrayList<org.telegram.messenger.ImageLocation> r13 = r0.imagesArrLocations
            java.lang.Object r13 = r13.get(r1)
            org.telegram.messenger.ImageLocation r13 = (org.telegram.messenger.ImageLocation) r13
            if (r35 == 0) goto L_0x0162
            if (r10 == 0) goto L_0x0162
            if (r13 == 0) goto L_0x0162
            org.telegram.tgnet.TLRPC$TL_fileLocationToBeDeprecated r10 = r10.location
            int r14 = r10.local_id
            org.telegram.tgnet.TLRPC$TL_fileLocationToBeDeprecated r13 = r13.location
            int r15 = r13.local_id
            if (r14 != r15) goto L_0x0162
            long r14 = r10.volume_id
            r16 = r3
            long r2 = r13.volume_id
            int r13 = (r14 > r2 ? 1 : (r14 == r2 ? 0 : -1))
            if (r13 != 0) goto L_0x0164
            r2 = 1
            goto L_0x0165
        L_0x0162:
            r16 = r3
        L_0x0164:
            r2 = 0
        L_0x0165:
            java.util.ArrayList<org.telegram.messenger.ImageLocation> r3 = r0.imagesArrLocations
            java.lang.Object r3 = r3.get(r1)
            org.telegram.messenger.ImageLocation r3 = (org.telegram.messenger.ImageLocation) r3
            r0.currentFileLocation = r3
            java.util.ArrayList<org.telegram.messenger.ImageLocation> r3 = r0.imagesArrLocationsVideo
            java.lang.Object r1 = r3.get(r1)
            org.telegram.messenger.ImageLocation r1 = (org.telegram.messenger.ImageLocation) r1
            r0.currentFileLocationVideo = r1
            r10 = r2
            r1 = 0
            goto L_0x03bf
        L_0x017d:
            r0.closePhoto(r5, r5)
            return
        L_0x0181:
            r16 = r3
            java.util.ArrayList<java.lang.Object> r2 = r0.imagesArrLocals
            boolean r2 = r2.isEmpty()
            if (r2 != 0) goto L_0x038c
            if (r1 < 0) goto L_0x0387
            java.util.ArrayList<java.lang.Object> r2 = r0.imagesArrLocals
            int r2 = r2.size()
            if (r1 < r2) goto L_0x0197
            goto L_0x0387
        L_0x0197:
            java.util.ArrayList<java.lang.Object> r2 = r0.imagesArrLocals
            java.lang.Object r1 = r2.get(r1)
            boolean r2 = r1 instanceof org.telegram.tgnet.TLRPC$BotInlineResult
            if (r2 == 0) goto L_0x01fc
            org.telegram.tgnet.TLRPC$BotInlineResult r1 = (org.telegram.tgnet.TLRPC$BotInlineResult) r1
            r0.currentBotInlineResult = r1
            org.telegram.tgnet.TLRPC$Document r2 = r1.document
            if (r2 == 0) goto L_0x01c2
            int r2 = r0.currentAccount
            org.telegram.messenger.FileLoader r2 = org.telegram.messenger.FileLoader.getInstance(r2)
            org.telegram.tgnet.TLRPC$Document r3 = r1.document
            java.io.File r2 = r2.getPathToAttach(r3)
            java.lang.String r2 = r2.getAbsolutePath()
            r0.currentPathObject = r2
            org.telegram.tgnet.TLRPC$Document r1 = r1.document
            boolean r1 = org.telegram.messenger.MessageObject.isVideoDocument(r1)
            goto L_0x01f7
        L_0x01c2:
            org.telegram.tgnet.TLRPC$Photo r2 = r1.photo
            if (r2 == 0) goto L_0x01e3
            int r2 = r0.currentAccount
            org.telegram.messenger.FileLoader r2 = org.telegram.messenger.FileLoader.getInstance(r2)
            org.telegram.tgnet.TLRPC$Photo r1 = r1.photo
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r1 = r1.sizes
            int r3 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            org.telegram.tgnet.TLRPC$PhotoSize r1 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r1, r3)
            java.io.File r1 = r2.getPathToAttach(r1)
            java.lang.String r1 = r1.getAbsolutePath()
            r0.currentPathObject = r1
            goto L_0x01f6
        L_0x01e3:
            org.telegram.tgnet.TLRPC$WebDocument r2 = r1.content
            boolean r3 = r2 instanceof org.telegram.tgnet.TLRPC$TL_webDocument
            if (r3 == 0) goto L_0x01f6
            java.lang.String r2 = r2.url
            r0.currentPathObject = r2
            java.lang.String r1 = r1.type
            java.lang.String r2 = "video"
            boolean r1 = r1.equals(r2)
            goto L_0x01f7
        L_0x01f6:
            r1 = 0
        L_0x01f7:
            r13 = r1
            r1 = 0
            r10 = 0
            goto L_0x0305
        L_0x01fc:
            boolean r2 = r1 instanceof org.telegram.messenger.MediaController.PhotoEntry
            if (r2 == 0) goto L_0x02b8
            r2 = r1
            org.telegram.messenger.MediaController$PhotoEntry r2 = (org.telegram.messenger.MediaController.PhotoEntry) r2
            java.lang.String r3 = r2.path
            r0.currentPathObject = r3
            if (r3 != 0) goto L_0x020d
            r0.closePhoto(r5, r5)
            return
        L_0x020d:
            boolean r3 = r2.isVideo
            org.telegram.ui.PhotoViewer$EditState r13 = r0.editState
            org.telegram.messenger.MediaController$SavedFilterState r14 = r2.savedFilterState
            r13.savedFilterState = r14
            java.lang.String r14 = r2.paintPath
            r13.paintPath = r14
            java.lang.String r14 = r2.croppedPaintPath
            r13.croppedPaintPath = r14
            java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity> r14 = r2.croppedMediaEntities
            r13.croppedMediaEntities = r14
            long r14 = r2.averageDuration
            r13.averageDuration = r14
            java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity> r14 = r2.mediaEntities
            r13.mediaEntities = r14
            org.telegram.messenger.MediaController$CropState r14 = r2.cropState
            r13.cropState = r14
            java.io.File r13 = new java.io.File
            java.lang.String r14 = r2.path
            r13.<init>(r14)
            android.net.Uri r14 = android.net.Uri.fromFile(r13)
            boolean r15 = r0.isDocumentsPicker
            if (r15 == 0) goto L_0x02af
            java.lang.StringBuilder r15 = new java.lang.StringBuilder
            r15.<init>()
            int r10 = r2.width
            java.lang.String r11 = ", "
            if (r10 == 0) goto L_0x0271
            int r10 = r2.height
            if (r10 == 0) goto L_0x0271
            int r10 = r15.length()
            if (r10 <= 0) goto L_0x0254
            r15.append(r11)
        L_0x0254:
            java.util.Locale r10 = java.util.Locale.US
            java.lang.Object[] r12 = new java.lang.Object[r7]
            int r7 = r2.width
            java.lang.Integer r7 = java.lang.Integer.valueOf(r7)
            r12[r5] = r7
            int r7 = r2.height
            java.lang.Integer r7 = java.lang.Integer.valueOf(r7)
            r12[r6] = r7
            java.lang.String r7 = "%dx%d"
            java.lang.String r7 = java.lang.String.format(r10, r7, r12)
            r15.append(r7)
        L_0x0271:
            boolean r7 = r2.isVideo
            if (r7 == 0) goto L_0x0287
            int r7 = r15.length()
            if (r7 <= 0) goto L_0x027e
            r15.append(r11)
        L_0x027e:
            int r7 = r2.duration
            java.lang.String r7 = org.telegram.messenger.AndroidUtilities.formatShortDuration(r7)
            r15.append(r7)
        L_0x0287:
            long r6 = r2.size
            r17 = 0
            int r10 = (r6 > r17 ? 1 : (r6 == r17 ? 0 : -1))
            if (r10 == 0) goto L_0x02a1
            int r6 = r15.length()
            if (r6 <= 0) goto L_0x0298
            r15.append(r11)
        L_0x0298:
            long r6 = r2.size
            java.lang.String r2 = org.telegram.messenger.AndroidUtilities.formatFileSize(r6)
            r15.append(r2)
        L_0x02a1:
            android.widget.TextView r2 = r0.docNameTextView
            java.lang.String r6 = r13.getName()
            r2.setText(r6)
            android.widget.TextView r2 = r0.docInfoTextView
            r2.setText(r15)
        L_0x02af:
            org.telegram.ui.PhotoViewer$SavedState r2 = r0.savedState
            if (r2 == 0) goto L_0x02b5
            r2 = 1
            goto L_0x02b6
        L_0x02b5:
            r2 = 0
        L_0x02b6:
            r10 = r14
            goto L_0x02e6
        L_0x02b8:
            boolean r2 = r1 instanceof org.telegram.messenger.MediaController.SearchImage
            if (r2 == 0) goto L_0x02e3
            r2 = r1
            org.telegram.messenger.MediaController$SearchImage r2 = (org.telegram.messenger.MediaController.SearchImage) r2
            java.lang.String r3 = r2.getPathToAttach()
            r0.currentPathObject = r3
            org.telegram.ui.PhotoViewer$EditState r3 = r0.editState
            org.telegram.messenger.MediaController$SavedFilterState r6 = r2.savedFilterState
            r3.savedFilterState = r6
            java.lang.String r6 = r2.paintPath
            r3.paintPath = r6
            java.lang.String r6 = r2.croppedPaintPath
            r3.croppedPaintPath = r6
            java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity> r6 = r2.croppedMediaEntities
            r3.croppedMediaEntities = r6
            long r6 = r2.averageDuration
            r3.averageDuration = r6
            java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity> r6 = r2.mediaEntities
            r3.mediaEntities = r6
            org.telegram.messenger.MediaController$CropState r2 = r2.cropState
            r3.cropState = r2
        L_0x02e3:
            r2 = 0
            r3 = 0
            r10 = 0
        L_0x02e6:
            boolean r6 = r1 instanceof org.telegram.messenger.MediaController.MediaEditState
            if (r6 == 0) goto L_0x0302
            org.telegram.messenger.MediaController$MediaEditState r1 = (org.telegram.messenger.MediaController.MediaEditState) r1
            boolean r6 = r33.hasAnimatedMediaEntities()
            if (r6 == 0) goto L_0x02f7
            java.lang.String r1 = r1.imagePath
            r0.currentImagePath = r1
            goto L_0x0302
        L_0x02f7:
            java.lang.String r1 = r1.filterPath
            if (r1 == 0) goto L_0x02fe
            r0.currentImagePath = r1
            goto L_0x0302
        L_0x02fe:
            java.lang.String r1 = r0.currentPathObject
            r0.currentImagePath = r1
        L_0x0302:
            r13 = r3
            r1 = r10
            r10 = r2
        L_0x0305:
            org.telegram.ui.PhotoViewer$EditState r2 = r0.editState
            org.telegram.messenger.MediaController$CropState r2 = r2.cropState
            if (r2 == 0) goto L_0x0352
            r3 = 1
            r0.previousHasTransform = r3
            float r6 = r2.cropPx
            r0.previousCropPx = r6
            float r7 = r2.cropPy
            r0.previousCropPy = r7
            float r11 = r2.cropScale
            r0.previousCropScale = r11
            float r14 = r2.cropRotate
            r0.previousCropRotation = r14
            int r15 = r2.transformRotation
            r0.previousCropOrientation = r15
            float r12 = r2.cropPw
            r0.previousCropPw = r12
            float r5 = r2.cropPh
            r0.previousCropPh = r5
            boolean r2 = r2.mirrored
            r0.previousCropMirrored = r2
            org.telegram.ui.Components.Crop.CropTransform r3 = r0.cropTransform
            r26 = 1065353216(0x3var_, float:1.0)
            r27 = 1065353216(0x3var_, float:1.0)
            r30 = 0
            r31 = 0
            r19 = r3
            r3 = 1
            r20 = r3
            r21 = r6
            r22 = r7
            r23 = r14
            r24 = r15
            r25 = r11
            r28 = r12
            r29 = r5
            r32 = r2
            r19.setViewTransform(r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32)
            goto L_0x03c0
        L_0x0352:
            r2 = 0
            r0.previousHasTransform = r2
            org.telegram.ui.Components.Crop.CropTransform r2 = r0.cropTransform
            r20 = 0
            float r3 = r0.previousCropPx
            float r5 = r0.previousCropPy
            float r6 = r0.previousCropRotation
            int r7 = r0.previousCropOrientation
            float r11 = r0.previousCropScale
            r26 = 1065353216(0x3var_, float:1.0)
            r27 = 1065353216(0x3var_, float:1.0)
            float r12 = r0.previousCropPw
            float r14 = r0.previousCropPh
            r30 = 0
            r31 = 0
            boolean r15 = r0.previousCropMirrored
            r19 = r2
            r21 = r3
            r22 = r5
            r23 = r6
            r24 = r7
            r25 = r11
            r28 = r12
            r29 = r14
            r32 = r15
            r19.setViewTransform(r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32)
            goto L_0x03c0
        L_0x0387:
            r1 = 0
            r0.closePhoto(r1, r1)
            return
        L_0x038c:
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r1 = r0.pageBlocksAdapter
            if (r1 == 0) goto L_0x03bd
            int r2 = r0.currentIndex
            if (r2 < 0) goto L_0x03b8
            int r1 = r1.getItemsCount()
            if (r2 < r1) goto L_0x039b
            goto L_0x03b8
        L_0x039b:
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r1 = r0.pageBlocksAdapter
            int r2 = r0.currentIndex
            org.telegram.tgnet.TLRPC$PageBlock r1 = r1.get(r2)
            org.telegram.tgnet.TLRPC$PageBlock r2 = r0.currentPageBlock
            if (r2 == 0) goto L_0x03ab
            if (r2 != r1) goto L_0x03ab
            r10 = 1
            goto L_0x03ac
        L_0x03ab:
            r10 = 0
        L_0x03ac:
            r0.currentPageBlock = r1
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r1 = r0.pageBlocksAdapter
            int r2 = r0.currentIndex
            boolean r13 = r1.isVideo(r2)
            r1 = 0
            goto L_0x03c0
        L_0x03b8:
            r1 = 0
            r0.closePhoto(r1, r1)
            return
        L_0x03bd:
            r1 = 0
            r10 = 0
        L_0x03bf:
            r13 = 0
        L_0x03c0:
            r33.setMenuItemIcon()
            org.telegram.ui.PhotoViewer$PlaceProviderObject r2 = r0.currentPlaceObject
            if (r2 == 0) goto L_0x03d4
            int r3 = r0.animationInProgress
            if (r3 != 0) goto L_0x03d2
            org.telegram.messenger.ImageReceiver r2 = r2.imageReceiver
            r3 = 1
            r2.setVisible(r3, r3)
            goto L_0x03d4
        L_0x03d2:
            r0.showAfterAnimation = r2
        L_0x03d4:
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r2 = r0.placeProvider
            org.telegram.messenger.MessageObject r3 = r0.currentMessageObject
            org.telegram.messenger.ImageLocation r5 = r0.currentFileLocation
            org.telegram.tgnet.TLRPC$FileLocation r5 = getFileLocation(r5)
            int r6 = r0.currentIndex
            r7 = 0
            org.telegram.ui.PhotoViewer$PlaceProviderObject r2 = r2.getPlaceForPhoto(r3, r5, r6, r7)
            r0.currentPlaceObject = r2
            if (r2 == 0) goto L_0x03f6
            int r3 = r0.animationInProgress
            if (r3 != 0) goto L_0x03f4
            org.telegram.messenger.ImageReceiver r2 = r2.imageReceiver
            r3 = 1
            r2.setVisible(r7, r3)
            goto L_0x03f6
        L_0x03f4:
            r0.hideAfterAnimation = r2
        L_0x03f6:
            if (r10 != 0) goto L_0x046f
            r0.draggingDown = r7
            r2 = 0
            r0.translationX = r2
            r0.translationY = r2
            r3 = 1065353216(0x3var_, float:1.0)
            r0.scale = r3
            r0.animateToX = r2
            r0.animateToY = r2
            r0.animateToScale = r3
            r0.animateToRotate = r2
            r5 = 0
            r0.animationStartTime = r5
            r0.zoomAnimation = r7
            r5 = 0
            r0.imageMoveAnimation = r5
            r0.changeModeAnimation = r5
            com.google.android.exoplayer2.ui.AspectRatioFrameLayout r5 = r0.aspectRatioFrameLayout
            if (r5 == 0) goto L_0x041e
            r6 = 4
            r5.setVisibility(r6)
        L_0x041e:
            r0.pinchStartDistance = r2
            r0.pinchStartScale = r3
            r0.pinchCenterX = r2
            r0.pinchCenterY = r2
            r0.pinchStartX = r2
            r0.pinchStartY = r2
            r0.moveStartX = r2
            r0.moveStartY = r2
            r2 = 0
            r0.zooming = r2
            r0.moving = r2
            r0.paintViewTouched = r2
            r0.doubleTap = r2
            r0.invalidCoords = r2
            r3 = 1
            r0.canDragDown = r3
            r0.changingPage = r2
            r0.switchImageAfterAnimation = r2
            int r5 = r0.sharedMediaType
            if (r5 == r3) goto L_0x0465
            boolean r3 = r0.isEmbedVideo
            if (r3 != 0) goto L_0x0462
            java.util.ArrayList<java.lang.Object> r3 = r0.imagesArrLocals
            boolean r3 = r3.isEmpty()
            if (r3 == 0) goto L_0x0460
            java.lang.String[] r3 = r0.currentFileNames
            r3 = r3[r2]
            if (r3 == 0) goto L_0x0462
            org.telegram.ui.PhotoViewer$PhotoProgressView[] r3 = r0.photoProgressViews
            r3 = r3[r2]
            int r2 = r3.backgroundState
            if (r2 == 0) goto L_0x0462
        L_0x0460:
            r2 = 1
            goto L_0x0463
        L_0x0462:
            r2 = 0
        L_0x0463:
            r0.canZoom = r2
        L_0x0465:
            float r2 = r0.scale
            r0.updateMinMax(r2)
            r2 = 0
            r0.releasePlayer(r2)
            goto L_0x0470
        L_0x046f:
            r2 = 0
        L_0x0470:
            if (r13 == 0) goto L_0x0485
            if (r1 == 0) goto L_0x0485
            r0.isStreaming = r2
            int r3 = r0.sendPhotoType
            r5 = 1
            if (r3 != r5) goto L_0x047d
            r3 = 1
            goto L_0x047e
        L_0x047d:
            r3 = 0
        L_0x047e:
            org.telegram.ui.PhotoViewer$EditState r5 = r0.editState
            org.telegram.messenger.MediaController$SavedFilterState r5 = r5.savedFilterState
            r0.preparePlayer(r1, r3, r2, r5)
        L_0x0485:
            java.util.ArrayList<java.lang.Object> r1 = r0.imagesArrLocals
            boolean r1 = r1.isEmpty()
            if (r1 != 0) goto L_0x048e
            goto L_0x0493
        L_0x048e:
            org.telegram.ui.PhotoViewer$EditState r1 = r0.editState
            r1.reset()
        L_0x0493:
            r0.centerImageIsVideo = r13
            r1 = -1
            r2 = r16
            if (r2 != r1) goto L_0x04a8
            r33.setImages()
            r1 = 0
        L_0x049e:
            r2 = 3
            if (r1 >= r2) goto L_0x057f
            r3 = 0
            r0.checkProgress(r1, r3, r3)
            int r1 = r1 + 1
            goto L_0x049e
        L_0x04a8:
            r1 = 1
            r3 = 0
            r0.checkProgress(r3, r1, r3)
            int r1 = r0.currentIndex
            if (r2 <= r1) goto L_0x0513
            org.telegram.messenger.ImageReceiver r1 = r0.rightImage
            org.telegram.messenger.ImageReceiver r2 = r0.centerImage
            r0.rightImage = r2
            org.telegram.messenger.ImageReceiver r2 = r0.leftImage
            r0.centerImage = r2
            r0.leftImage = r1
            r0.rightImageIsVideo = r9
            r0.rightCropTransform = r4
            r0.rightCropState = r8
            org.telegram.ui.PhotoViewer$PhotoProgressView[] r1 = r0.photoProgressViews
            r2 = 0
            r3 = r1[r2]
            r4 = 2
            r5 = r1[r4]
            r1[r2] = r5
            r1[r4] = r3
            android.widget.ImageView[] r1 = r0.fullscreenButton
            r3 = r1[r2]
            r5 = r1[r4]
            r1[r2] = r5
            r1[r4] = r3
            r1 = r1[r2]
            float r2 = r3.getTranslationY()
            r1.setTranslationY(r2)
            r1 = 0
            r0.leftCropState = r1
            int r1 = r0.currentIndex
            r2 = 1
            int r1 = r1 - r2
            org.telegram.ui.Components.PaintingOverlay r3 = r0.leftPaintingOverlay
            r0.setIndexToPaintingOverlay(r1, r3)
            int r1 = r0.currentIndex
            org.telegram.ui.Components.PaintingOverlay r3 = r0.paintingOverlay
            r0.setIndexToPaintingOverlay(r1, r3)
            int r1 = r0.currentIndex
            int r1 = r1 + r2
            org.telegram.ui.Components.PaintingOverlay r3 = r0.rightPaintingOverlay
            r0.setIndexToPaintingOverlay(r1, r3)
            org.telegram.messenger.ImageReceiver r1 = r0.leftImage
            int r3 = r0.currentIndex
            int r3 = r3 - r2
            org.telegram.ui.Components.Crop.CropTransform r4 = r0.leftCropTransform
            r0.setIndexToImage(r1, r3, r4)
            r33.updateAccessibilityOverlayVisibility()
            r1 = 0
            r0.checkProgress(r2, r2, r1)
            r3 = 2
            r0.checkProgress(r3, r2, r1)
            goto L_0x0575
        L_0x0513:
            if (r2 >= r1) goto L_0x0575
            org.telegram.messenger.ImageReceiver r1 = r0.leftImage
            org.telegram.messenger.ImageReceiver r2 = r0.centerImage
            r0.leftImage = r2
            org.telegram.messenger.ImageReceiver r2 = r0.rightImage
            r0.centerImage = r2
            r0.rightImage = r1
            r0.leftImageIsVideo = r9
            r0.leftCropTransform = r4
            r0.leftCropState = r8
            org.telegram.ui.PhotoViewer$PhotoProgressView[] r1 = r0.photoProgressViews
            r2 = 0
            r3 = r1[r2]
            r4 = 1
            r5 = r1[r4]
            r1[r2] = r5
            r1[r4] = r3
            android.widget.ImageView[] r1 = r0.fullscreenButton
            r3 = r1[r2]
            r5 = r1[r4]
            r1[r2] = r5
            r1[r4] = r3
            r1 = r1[r2]
            float r2 = r3.getTranslationY()
            r1.setTranslationY(r2)
            r1 = 0
            r0.rightCropState = r1
            int r1 = r0.currentIndex
            int r1 = r1 - r4
            org.telegram.ui.Components.PaintingOverlay r2 = r0.leftPaintingOverlay
            r0.setIndexToPaintingOverlay(r1, r2)
            int r1 = r0.currentIndex
            org.telegram.ui.Components.PaintingOverlay r2 = r0.paintingOverlay
            r0.setIndexToPaintingOverlay(r1, r2)
            int r1 = r0.currentIndex
            int r1 = r1 + r4
            org.telegram.ui.Components.PaintingOverlay r2 = r0.rightPaintingOverlay
            r0.setIndexToPaintingOverlay(r1, r2)
            org.telegram.messenger.ImageReceiver r1 = r0.rightImage
            int r2 = r0.currentIndex
            int r2 = r2 + r4
            org.telegram.ui.Components.Crop.CropTransform r3 = r0.rightCropTransform
            r0.setIndexToImage(r1, r2, r3)
            r33.updateAccessibilityOverlayVisibility()
            r1 = 0
            r0.checkProgress(r4, r4, r1)
            r2 = 2
            r0.checkProgress(r2, r4, r1)
        L_0x0575:
            android.graphics.Bitmap r1 = r0.videoFrameBitmap
            if (r1 == 0) goto L_0x057f
            r1.recycle()
            r1 = 0
            r0.videoFrameBitmap = r1
        L_0x057f:
            r33.detectFaces()
        L_0x0582:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.setImageIndex(int, boolean, boolean):void");
    }

    private void setCurrentCaption(MessageObject messageObject, CharSequence charSequence, boolean z) {
        boolean z2;
        CharSequence charSequence2;
        int i;
        int i2;
        MessageObject messageObject2 = messageObject;
        CharSequence charSequence3 = charSequence;
        boolean z3 = z;
        boolean z4 = true;
        int i3 = 0;
        if (!this.needCaptionLayout) {
            if (this.captionScrollView == null) {
                this.captionScrollView = new CaptionScrollView(this.containerView.getContext());
                FrameLayout frameLayout = new FrameLayout(this.containerView.getContext());
                this.captionContainer = frameLayout;
                frameLayout.setClipChildren(false);
                this.captionScrollView.addView((View) this.captionContainer, new ViewGroup.LayoutParams(-1, -2));
                this.containerView.addView(this.captionScrollView, LayoutHelper.createFrame(-1, -1, 80));
            }
            if (this.captionTextViewSwitcher.getParent() != this.captionContainer) {
                this.pickerView.removeView(this.captionTextViewSwitcher);
                this.captionTextViewSwitcher.setMeasureAllChildren(true);
                this.captionContainer.addView(this.captionTextViewSwitcher, -1, -2);
                this.videoPreviewFrame.bringToFront();
            }
        } else if (this.captionTextViewSwitcher.getParent() != this.pickerView) {
            FrameLayout frameLayout2 = this.captionContainer;
            if (frameLayout2 != null) {
                frameLayout2.removeView(this.captionTextViewSwitcher);
            }
            this.captionTextViewSwitcher.setMeasureAllChildren(false);
            this.pickerView.addView(this.captionTextViewSwitcher, LayoutHelper.createFrame(-1, -2.0f, 83, 0.0f, 0.0f, 76.0f, 48.0f));
        }
        final boolean isEmpty = TextUtils.isEmpty(charSequence);
        final boolean isEmpty2 = TextUtils.isEmpty(this.captionTextViewSwitcher.getCurrentView().getText());
        CaptionTextViewSwitcher captionTextViewSwitcher2 = this.captionTextViewSwitcher;
        TextView nextView = z3 ? captionTextViewSwitcher2.getNextView() : captionTextViewSwitcher2.getCurrentView();
        if (!this.isCurrentVideo) {
            int maxLines = nextView.getMaxLines();
            if (maxLines == 1) {
                this.captionTextViewSwitcher.getCurrentView().setSingleLine(false);
                this.captionTextViewSwitcher.getNextView().setSingleLine(false);
            }
            if (this.needCaptionLayout) {
                Point point = AndroidUtilities.displaySize;
                i2 = point.x > point.y ? 5 : 10;
            } else {
                i2 = Integer.MAX_VALUE;
            }
            if (maxLines != i2) {
                this.captionTextViewSwitcher.getCurrentView().setMaxLines(i2);
                this.captionTextViewSwitcher.getNextView().setMaxLines(i2);
                this.captionTextViewSwitcher.getCurrentView().setEllipsize((TextUtils.TruncateAt) null);
                this.captionTextViewSwitcher.getNextView().setEllipsize((TextUtils.TruncateAt) null);
            }
        } else if (nextView.getMaxLines() != 1) {
            this.captionTextViewSwitcher.getCurrentView().setMaxLines(1);
            this.captionTextViewSwitcher.getNextView().setMaxLines(1);
            this.captionTextViewSwitcher.getCurrentView().setSingleLine(true);
            this.captionTextViewSwitcher.getNextView().setSingleLine(true);
            this.captionTextViewSwitcher.getCurrentView().setEllipsize(TextUtils.TruncateAt.END);
            this.captionTextViewSwitcher.getNextView().setEllipsize(TextUtils.TruncateAt.END);
        }
        nextView.setScrollX(0);
        boolean z5 = this.needCaptionLayout;
        this.dontChangeCaptionPosition = !z5 && z3 && isEmpty;
        if (!z5) {
            boolean unused = this.captionScrollView.dontChangeTopMargin = false;
        }
        if (!z3 || (i = Build.VERSION.SDK_INT) < 19) {
            this.captionTextViewSwitcher.getCurrentView().setText((CharSequence) null);
            CaptionScrollView captionScrollView2 = this.captionScrollView;
            if (captionScrollView2 != null) {
                captionScrollView2.scrollTo(0, 0);
            }
            z2 = false;
        } else {
            if (i >= 23) {
                TransitionManager.endTransitions(this.needCaptionLayout ? this.pickerView : this.captionScrollView);
            }
            if (this.needCaptionLayout) {
                TransitionSet transitionSet = new TransitionSet();
                transitionSet.setOrdering(0);
                transitionSet.addTransition(new ChangeBounds());
                transitionSet.addTransition(new Fade(2));
                transitionSet.addTransition(new Fade(1));
                transitionSet.setDuration(200);
                TransitionManager.beginDelayedTransition(this.pickerView, transitionSet);
            } else {
                TransitionSet duration = new TransitionSet().addTransition(new Fade(2) {
                    public Animator onDisappear(ViewGroup viewGroup, View view, TransitionValues transitionValues, TransitionValues transitionValues2) {
                        Animator onDisappear = super.onDisappear(viewGroup, view, transitionValues, transitionValues2);
                        if (!isEmpty2 && isEmpty && view == PhotoViewer.this.captionTextViewSwitcher) {
                            onDisappear.addListener(new AnimatorListenerAdapter() {
                                public void onAnimationEnd(Animator animator) {
                                    PhotoViewer.this.captionScrollView.setVisibility(4);
                                    float unused = PhotoViewer.this.captionScrollView.backgroundAlpha = 1.0f;
                                }
                            });
                            ((ObjectAnimator) onDisappear).addUpdateListener(new PhotoViewer$66$$ExternalSyntheticLambda0(this));
                        }
                        return onDisappear;
                    }

                    /* access modifiers changed from: private */
                    public /* synthetic */ void lambda$onDisappear$0(ValueAnimator valueAnimator) {
                        float unused = PhotoViewer.this.captionScrollView.backgroundAlpha = ((Float) valueAnimator.getAnimatedValue()).floatValue();
                        PhotoViewer.this.captionScrollView.invalidate();
                    }
                }).addTransition(new Fade(1) {
                    public Animator onAppear(ViewGroup viewGroup, View view, TransitionValues transitionValues, TransitionValues transitionValues2) {
                        Animator onAppear = super.onAppear(viewGroup, view, transitionValues, transitionValues2);
                        if (isEmpty2 && !isEmpty && view == PhotoViewer.this.captionTextViewSwitcher) {
                            onAppear.addListener(new AnimatorListenerAdapter() {
                                public void onAnimationEnd(Animator animator) {
                                    float unused = PhotoViewer.this.captionScrollView.backgroundAlpha = 1.0f;
                                }
                            });
                            ((ObjectAnimator) onAppear).addUpdateListener(new PhotoViewer$65$$ExternalSyntheticLambda0(this));
                        }
                        return onAppear;
                    }

                    /* access modifiers changed from: private */
                    public /* synthetic */ void lambda$onAppear$0(ValueAnimator valueAnimator) {
                        float unused = PhotoViewer.this.captionScrollView.backgroundAlpha = ((Float) valueAnimator.getAnimatedValue()).floatValue();
                        PhotoViewer.this.captionScrollView.invalidate();
                    }
                }).setDuration(200);
                if (!isEmpty2) {
                    boolean unused2 = this.captionScrollView.dontChangeTopMargin = true;
                    duration.addTransition(new Transition() {
                        public void captureStartValues(TransitionValues transitionValues) {
                            if (transitionValues.view == PhotoViewer.this.captionScrollView) {
                                transitionValues.values.put("scrollY", Integer.valueOf(PhotoViewer.this.captionScrollView.getScrollY()));
                            }
                        }

                        public void captureEndValues(TransitionValues transitionValues) {
                            if (transitionValues.view == PhotoViewer.this.captionTextViewSwitcher) {
                                transitionValues.values.put("translationY", Integer.valueOf(PhotoViewer.this.captionScrollView.getPendingMarginTopDiff()));
                            }
                        }

                        public Animator createAnimator(ViewGroup viewGroup, TransitionValues transitionValues, TransitionValues transitionValues2) {
                            int intValue;
                            if (transitionValues.view == PhotoViewer.this.captionScrollView) {
                                ValueAnimator ofInt = ValueAnimator.ofInt(new int[]{((Integer) transitionValues.values.get("scrollY")).intValue(), 0});
                                ofInt.addListener(new AnimatorListenerAdapter() {
                                    public void onAnimationEnd(Animator animator) {
                                        PhotoViewer.this.captionTextViewSwitcher.getNextView().setText((CharSequence) null);
                                        PhotoViewer.this.captionScrollView.applyPendingTopMargin();
                                    }

                                    public void onAnimationStart(Animator animator) {
                                        PhotoViewer.this.captionScrollView.stopScrolling();
                                    }
                                });
                                ofInt.addUpdateListener(new PhotoViewer$67$$ExternalSyntheticLambda0(this));
                                return ofInt;
                            } else if (transitionValues2.view != PhotoViewer.this.captionTextViewSwitcher || (intValue = ((Integer) transitionValues2.values.get("translationY")).intValue()) == 0) {
                                return null;
                            } else {
                                ObjectAnimator ofFloat = ObjectAnimator.ofFloat(PhotoViewer.this.captionTextViewSwitcher, View.TRANSLATION_Y, new float[]{0.0f, (float) intValue});
                                ofFloat.addListener(new AnimatorListenerAdapter() {
                                    public void onAnimationEnd(Animator animator) {
                                        PhotoViewer.this.captionTextViewSwitcher.setTranslationY(0.0f);
                                    }
                                });
                                return ofFloat;
                            }
                        }

                        /* access modifiers changed from: private */
                        public /* synthetic */ void lambda$createAnimator$0(ValueAnimator valueAnimator) {
                            PhotoViewer.this.captionScrollView.scrollTo(0, ((Integer) valueAnimator.getAnimatedValue()).intValue());
                        }
                    });
                }
                if (isEmpty2 && !isEmpty) {
                    duration.addTarget(this.captionTextViewSwitcher);
                }
                TransitionManager.beginDelayedTransition(this.captionScrollView, duration);
            }
            z2 = true;
        }
        if (!isEmpty) {
            Theme.createChatResources((Context) null, true);
            if (messageObject2 == null || messageObject2.messageOwner.entities.isEmpty()) {
                charSequence2 = Emoji.replaceEmoji(new SpannableStringBuilder(charSequence3), nextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(20.0f), false);
            } else {
                SpannableString spannableString = new SpannableString(charSequence3);
                messageObject2.addEntitiesToText(spannableString, true, false);
                if (messageObject.isVideo()) {
                    MessageObject.addUrlsByPattern(messageObject.isOutOwner(), spannableString, false, 3, messageObject.getDuration(), false);
                }
                charSequence2 = Emoji.replaceEmoji(spannableString, nextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(20.0f), false);
            }
            this.captionTextViewSwitcher.setTag(charSequence2);
            try {
                this.captionTextViewSwitcher.setText(charSequence2, z3);
                CaptionScrollView captionScrollView3 = this.captionScrollView;
                if (captionScrollView3 != null) {
                    captionScrollView3.updateTopMargin();
                }
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
            nextView.setScrollY(0);
            nextView.setTextColor(-1);
            if (!this.isActionBarVisible || !(this.bottomLayout.getVisibility() == 0 || this.pickerView.getVisibility() == 0 || this.pageBlocksAdapter != null)) {
                z4 = false;
            }
            CaptionTextViewSwitcher captionTextViewSwitcher3 = this.captionTextViewSwitcher;
            if (!z4) {
                i3 = 4;
            }
            captionTextViewSwitcher3.setVisibility(i3);
        } else if (this.needCaptionLayout) {
            this.captionTextViewSwitcher.setText(LocaleController.getString("AddCaption", NUM), z3);
            this.captionTextViewSwitcher.getCurrentView().setTextColor(-NUM);
            this.captionTextViewSwitcher.setTag("empty");
            this.captionTextViewSwitcher.setVisibility(0);
        } else {
            this.captionTextViewSwitcher.setText((CharSequence) null, z3);
            this.captionTextViewSwitcher.getCurrentView().setTextColor(-1);
            CaptionTextViewSwitcher captionTextViewSwitcher4 = this.captionTextViewSwitcher;
            if (z2 && !isEmpty2) {
                z4 = false;
            }
            captionTextViewSwitcher4.setVisibility(4, z4);
            this.captionTextViewSwitcher.setTag((Object) null);
        }
    }

    /* access modifiers changed from: private */
    public void setCaptionHwLayerEnabled(boolean z) {
        if (this.captionHwLayerEnabled != z) {
            this.captionHwLayerEnabled = z;
            this.captionTextViewSwitcher.setLayerType(2, (Paint) null);
            this.captionTextViewSwitcher.getCurrentView().setLayerType(2, (Paint) null);
            this.captionTextViewSwitcher.getNextView().setLayerType(2, (Paint) null);
        }
    }

    /* access modifiers changed from: private */
    public void checkProgress(int i, boolean z, boolean z2) {
        boolean z3;
        boolean z4;
        MessageObject messageObject;
        File file;
        File file2;
        boolean z5;
        File file3;
        File file4;
        File file5;
        MessageObject messageObject2;
        boolean shouldIndexAutoPlayed;
        File file6;
        boolean z6;
        File file7;
        boolean z7;
        File file8;
        File file9;
        FileLoader.FileResolver fileResolver;
        TLRPC$WebPage tLRPC$WebPage;
        AnimatedFileDrawable animatedFileDrawable;
        int i2 = i;
        boolean z8 = z2;
        int i3 = this.currentIndex;
        int i4 = i2 == 1 ? i3 + 1 : i2 == 2 ? i3 - 1 : i3;
        boolean z9 = false;
        if (this.currentFileNames[i2] != null) {
            boolean hasBitmap = (i2 == 0 && i3 == 0 && (animatedFileDrawable = this.currentAnimation) != null) ? animatedFileDrawable.hasBitmap() : false;
            FileLoader.FileResolver fileResolver2 = null;
            if (this.currentMessageObject == null) {
                if (this.currentBotInlineResult == null) {
                    if (this.currentFileLocation != null) {
                        if (i4 < 0 || i4 >= this.imagesArrLocationsVideo.size()) {
                            this.photoProgressViews[i2].setBackgroundState(-1, z8, true);
                            return;
                        } else {
                            ImageLocation imageLocation = this.imagesArrLocationsVideo.get(i4);
                            file3 = FileLoader.getInstance(this.currentAccount).getPathToAttach(imageLocation.location, getFileLocationExt(imageLocation), this.avatarsDialogId != 0 || this.isEvent);
                        }
                    } else if (this.currentSecureDocument == null) {
                        if (this.currentPathObject != null) {
                            file4 = new File(FileLoader.getDirectory(3), this.currentFileNames[i2]);
                            file5 = new File(FileLoader.getDirectory(4), this.currentFileNames[i2]);
                            messageObject2 = null;
                        } else {
                            PageBlocksAdapter pageBlocksAdapter2 = this.pageBlocksAdapter;
                            if (pageBlocksAdapter2 != null) {
                                File file10 = pageBlocksAdapter2.getFile(i4);
                                boolean isVideo = this.pageBlocksAdapter.isVideo(i4);
                                shouldIndexAutoPlayed = shouldIndexAutoPlayed(i4);
                                file6 = file10;
                                z6 = isVideo;
                                file7 = null;
                                messageObject = null;
                            } else {
                                file5 = null;
                                file4 = null;
                                messageObject2 = null;
                            }
                        }
                        z5 = false;
                        z4 = false;
                        z3 = false;
                    } else if (i4 < 0 || i4 >= this.secureDocuments.size()) {
                        this.photoProgressViews[i2].setBackgroundState(-1, z8, true);
                        return;
                    } else {
                        file3 = FileLoader.getInstance(this.currentAccount).getPathToAttach(this.secureDocuments.get(i4), true);
                    }
                    file4 = file3;
                    file5 = null;
                    messageObject2 = null;
                    z5 = false;
                    z4 = false;
                    z3 = false;
                } else if (i4 < 0 || i4 >= this.imagesArrLocals.size()) {
                    this.photoProgressViews[i2].setBackgroundState(-1, z8, true);
                    return;
                } else {
                    TLRPC$BotInlineResult tLRPC$BotInlineResult = (TLRPC$BotInlineResult) this.imagesArrLocals.get(i4);
                    if (tLRPC$BotInlineResult.type.equals("video") || MessageObject.isVideoDocument(tLRPC$BotInlineResult.document)) {
                        if (tLRPC$BotInlineResult.document != null) {
                            file9 = FileLoader.getInstance(this.currentAccount).getPathToAttach(tLRPC$BotInlineResult.document);
                        } else if (tLRPC$BotInlineResult.content instanceof TLRPC$TL_webDocument) {
                            file9 = new File(FileLoader.getDirectory(4), Utilities.MD5(tLRPC$BotInlineResult.content.url) + "." + ImageLoader.getHttpUrlExtension(tLRPC$BotInlineResult.content.url, "mp4"));
                        } else {
                            file9 = null;
                        }
                        z7 = true;
                    } else {
                        if (tLRPC$BotInlineResult.document != null) {
                            file8 = new File(FileLoader.getDirectory(3), this.currentFileNames[i2]);
                        } else {
                            file8 = tLRPC$BotInlineResult.photo != null ? new File(FileLoader.getDirectory(0), this.currentFileNames[i2]) : null;
                        }
                        z7 = false;
                    }
                    file7 = new File(FileLoader.getDirectory(4), this.currentFileNames[i2]);
                    file6 = file8;
                    z6 = z7;
                    messageObject = null;
                    shouldIndexAutoPlayed = false;
                }
                z4 = false;
            } else if (i4 < 0 || i4 >= this.imagesArr.size()) {
                this.photoProgressViews[i2].setBackgroundState(-1, z8, true);
                return;
            } else {
                MessageObject messageObject3 = this.imagesArr.get(i4);
                boolean shouldMessageObjectAutoPlayed = shouldMessageObjectAutoPlayed(messageObject3);
                if (this.sharedMediaType != 1 || messageObject3.canPreviewDocument()) {
                    file = !TextUtils.isEmpty(messageObject3.messageOwner.attachPath) ? new File(messageObject3.messageOwner.attachPath) : null;
                    TLRPC$Message tLRPC$Message = messageObject3.messageOwner;
                    TLRPC$MessageMedia tLRPC$MessageMedia = tLRPC$Message.media;
                    if (!(tLRPC$MessageMedia instanceof TLRPC$TL_messageMediaWebPage) || (tLRPC$WebPage = tLRPC$MessageMedia.webpage) == null || tLRPC$WebPage.document != null) {
                        fileResolver = new PhotoViewer$$ExternalSyntheticLambda71(this, tLRPC$Message);
                    } else {
                        fileResolver = new PhotoViewer$$ExternalSyntheticLambda70(this, getFileLocation(i4, (long[]) null));
                    }
                    if (messageObject3.isVideo()) {
                        z4 = SharedConfig.streamMedia && messageObject3.canStreamVideo() && !DialogObject.isEncryptedDialog(messageObject3.getDialogId());
                        z5 = shouldMessageObjectAutoPlayed;
                        file2 = null;
                        fileResolver2 = fileResolver;
                        z3 = true;
                    } else {
                        z5 = shouldMessageObjectAutoPlayed;
                        file2 = null;
                        fileResolver2 = fileResolver;
                        z4 = false;
                        z3 = false;
                    }
                    messageObject = messageObject3;
                } else {
                    this.photoProgressViews[i2].setBackgroundState(-1, z8, true);
                    return;
                }
            }
            boolean z10 = z4;
            PhotoViewer$$ExternalSyntheticLambda68 photoViewer$$ExternalSyntheticLambda68 = r0;
            PhotoViewer$$ExternalSyntheticLambda68 photoViewer$$ExternalSyntheticLambda682 = new PhotoViewer$$ExternalSyntheticLambda68(this, hasBitmap, file, file2, fileResolver2, i, messageObject, z10, z3, (i2 != 0 || !this.dontAutoPlay) && z5, z2);
            Utilities.globalQueue.postRunnable(photoViewer$$ExternalSyntheticLambda68);
            return;
        }
        if (!this.imagesArrLocals.isEmpty() && i4 >= 0 && i4 < this.imagesArrLocals.size()) {
            Object obj = this.imagesArrLocals.get(i4);
            if (obj instanceof MediaController.PhotoEntry) {
                z9 = ((MediaController.PhotoEntry) obj).isVideo;
            }
        }
        if (z9) {
            this.photoProgressViews[i2].setBackgroundState(3, z8, true);
        } else {
            this.photoProgressViews[i2].setBackgroundState(-1, z8, true);
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ File lambda$checkProgress$67(TLObject tLObject) {
        return FileLoader.getInstance(this.currentAccount).getPathToAttach(tLObject, true);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ File lambda$checkProgress$68(TLRPC$Message tLRPC$Message) {
        return FileLoader.getInstance(this.currentAccount).getPathToMessage(tLRPC$Message);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$checkProgress$70(boolean z, File file, File file2, FileLoader.FileResolver fileResolver, int i, MessageObject messageObject, boolean z2, boolean z3, boolean z4, boolean z5) {
        File file3;
        ChatActivity chatActivity;
        TLRPC$Document document;
        MessageObject messageObject2 = messageObject;
        boolean exists = (z || file == null) ? z : file.exists();
        File file4 = null;
        if (file2 != null || fileResolver == null) {
            if (fileResolver != null) {
                file4 = fileResolver.getFile();
            }
            file3 = file2;
        } else {
            file3 = fileResolver.getFile();
        }
        if (!exists && file3 != null) {
            exists = file3.exists();
        }
        if (!exists && file4 != null) {
            exists = file4.exists();
        }
        boolean z6 = exists;
        if (!z6 && i != 0 && messageObject2 != null && z2 && DownloadController.getInstance(this.currentAccount).canDownloadMedia(messageObject2.messageOwner) != 0 && (((chatActivity = this.parentChatActivity) == null || chatActivity.getCurrentEncryptedChat() == null) && !messageObject.shouldEncryptPhotoOrVideo() && (document = messageObject.getDocument()) != null)) {
            FileLoader.getInstance(this.currentAccount).loadFile(document, messageObject2, 0, 10);
        }
        AndroidUtilities.runOnUIThread(new PhotoViewer$$ExternalSyntheticLambda58(this, i, file, file3, z6, z2, z3, z4, z5));
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$checkProgress$69(int i, File file, File file2, boolean z, boolean z2, boolean z3, boolean z4, boolean z5) {
        boolean z6 = false;
        if (!this.shownControlsByEnd || this.actionBarWasShownBeforeByEnd || !this.isPlaying) {
            if (!(file == null && file2 == null) && (z || z2)) {
                if (i != 0 || !this.isPlaying) {
                    if (!z3 || (z4 && (i != 0 || !this.playerWasPlaying))) {
                        this.photoProgressViews[i].setBackgroundState(-1, z5, true);
                    } else {
                        this.photoProgressViews[i].setBackgroundState(3, z5, true);
                    }
                }
                if (i == 0) {
                    if (z) {
                        this.menuItem.hideSubItem(7);
                    } else if (!FileLoader.getInstance(this.currentAccount).isLoadingFile(this.currentFileNames[i])) {
                        this.menuItem.hideSubItem(7);
                    } else {
                        this.menuItem.showSubItem(7);
                    }
                }
            } else {
                if (!z3) {
                    this.photoProgressViews[i].setBackgroundState(0, z5, true);
                } else if (!FileLoader.getInstance(this.currentAccount).isLoadingFile(this.currentFileNames[i])) {
                    this.photoProgressViews[i].setBackgroundState(2, false, true);
                } else {
                    this.photoProgressViews[i].setBackgroundState(1, false, true);
                }
                Float fileProgress = ImageLoader.getInstance().getFileProgress(this.currentFileNames[i]);
                if (fileProgress == null) {
                    fileProgress = Float.valueOf(0.0f);
                }
                this.photoProgressViews[i].setProgress(fileProgress.floatValue(), false);
            }
            if (i == 0) {
                if (!this.isEmbedVideo && (!this.imagesArrLocals.isEmpty() || !(this.currentFileNames[0] == null || this.photoProgressViews[0].backgroundState == 0))) {
                    z6 = true;
                }
                this.canZoom = z6;
                return;
            }
            return;
        }
        this.photoProgressViews[i].setBackgroundState(3, false, false);
    }

    public int getSelectiongLength() {
        PhotoViewerCaptionEnterView photoViewerCaptionEnterView = this.captionEditText;
        if (photoViewerCaptionEnterView != null) {
            return photoViewerCaptionEnterView.getSelectionLength();
        }
        return 0;
    }

    private void setIndexToPaintingOverlay(int i, PaintingOverlay paintingOverlay2) {
        ArrayList<VideoEditedInfo.MediaEntity> arrayList;
        boolean z;
        if (paintingOverlay2 != null) {
            paintingOverlay2.reset();
            paintingOverlay2.setVisibility(8);
            if (!this.imagesArrLocals.isEmpty() && i >= 0 && i < this.imagesArrLocals.size()) {
                Object obj = this.imagesArrLocals.get(i);
                String str = null;
                if (obj instanceof MediaController.PhotoEntry) {
                    MediaController.PhotoEntry photoEntry = (MediaController.PhotoEntry) obj;
                    z = photoEntry.isVideo;
                    str = photoEntry.paintPath;
                    arrayList = photoEntry.mediaEntities;
                } else {
                    if (obj instanceof MediaController.SearchImage) {
                        MediaController.SearchImage searchImage = (MediaController.SearchImage) obj;
                        str = searchImage.paintPath;
                        arrayList = searchImage.mediaEntities;
                    } else {
                        arrayList = null;
                    }
                    z = false;
                }
                paintingOverlay2.setVisibility(0);
                paintingOverlay2.setData(str, arrayList, z, false);
            }
        }
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v0, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r10v2, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v1, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v3, resolved type: org.telegram.tgnet.TLObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v4, resolved type: org.telegram.tgnet.TLObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v5, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v6, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v7, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r18v8, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v34, resolved type: android.graphics.drawable.BitmapDrawable} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v35, resolved type: android.graphics.drawable.BitmapDrawable} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v40, resolved type: android.graphics.drawable.BitmapDrawable} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v28, resolved type: org.telegram.tgnet.TLRPC$Photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v30, resolved type: org.telegram.tgnet.TLRPC$Photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v31, resolved type: org.telegram.tgnet.TLRPC$Photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v32, resolved type: org.telegram.tgnet.TLRPC$Photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v33, resolved type: org.telegram.tgnet.TLRPC$Document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v35, resolved type: org.telegram.tgnet.TLRPC$Photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v37, resolved type: org.telegram.tgnet.TLRPC$Photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v38, resolved type: org.telegram.tgnet.TLRPC$Photo} */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:161:0x03a0  */
    /* JADX WARNING: Removed duplicated region for block: B:166:0x03db  */
    /* JADX WARNING: Removed duplicated region for block: B:167:0x03e1  */
    /* JADX WARNING: Removed duplicated region for block: B:343:0x0705  */
    /* JADX WARNING: Removed duplicated region for block: B:354:0x0740  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void setIndexToImage(org.telegram.messenger.ImageReceiver r33, int r34, org.telegram.ui.Components.Crop.CropTransform r35) {
        /*
            r32 = this;
            r0 = r32
            r14 = r33
            r1 = r34
            r15 = r35
            r13 = 0
            r14.setOrientation(r13, r13)
            java.util.ArrayList<org.telegram.messenger.SecureDocument> r2 = r0.secureDocuments
            boolean r2 = r2.isEmpty()
            r3 = 0
            if (r2 != 0) goto L_0x006c
            if (r1 < 0) goto L_0x0792
            java.util.ArrayList<org.telegram.messenger.SecureDocument> r2 = r0.secureDocuments
            int r2 = r2.size()
            if (r1 >= r2) goto L_0x0792
            java.util.ArrayList<org.telegram.messenger.SecureDocument> r2 = r0.secureDocuments
            r2.get(r1)
            org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r2 = org.telegram.messenger.AndroidUtilities.density
            org.telegram.messenger.ImageReceiver$BitmapHolder r2 = r0.currentThumb
            if (r2 == 0) goto L_0x0032
            org.telegram.messenger.ImageReceiver r4 = r0.centerImage
            if (r14 != r4) goto L_0x0032
            goto L_0x0033
        L_0x0032:
            r2 = r3
        L_0x0033:
            if (r2 != 0) goto L_0x003b
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r2 = r0.placeProvider
            org.telegram.messenger.ImageReceiver$BitmapHolder r2 = r2.getThumbForPhoto(r3, r3, r1)
        L_0x003b:
            java.util.ArrayList<org.telegram.messenger.SecureDocument> r4 = r0.secureDocuments
            java.lang.Object r1 = r4.get(r1)
            org.telegram.messenger.SecureDocument r1 = (org.telegram.messenger.SecureDocument) r1
            org.telegram.tgnet.TLRPC$TL_secureFile r4 = r1.secureFile
            long r7 = r4.size
            org.telegram.messenger.ImageLocation r4 = org.telegram.messenger.ImageLocation.getForSecureDocument(r1)
            r5 = 0
            r6 = 0
            if (r2 == 0) goto L_0x0058
            android.graphics.drawable.BitmapDrawable r1 = new android.graphics.drawable.BitmapDrawable
            android.graphics.Bitmap r2 = r2.bitmap
            r1.<init>(r2)
            r9 = r1
            goto L_0x0059
        L_0x0058:
            r9 = r3
        L_0x0059:
            r10 = 0
            r11 = 0
            r12 = 0
            java.lang.String r3 = "d"
            r1 = r33
            r2 = r4
            r4 = r5
            r5 = r6
            r6 = r9
            r9 = r10
            r10 = r11
            r11 = r12
            r1.setImage(r2, r3, r4, r5, r6, r7, r9, r10, r11)
            goto L_0x0792
        L_0x006c:
            java.util.ArrayList<java.lang.Object> r2 = r0.imagesArrLocals
            boolean r2 = r2.isEmpty()
            java.lang.String r4 = "%d_%d"
            r5 = 2
            r12 = 1
            if (r2 != 0) goto L_0x03f1
            if (r1 < 0) goto L_0x03eb
            java.util.ArrayList<java.lang.Object> r2 = r0.imagesArrLocals
            int r2 = r2.size()
            if (r1 >= r2) goto L_0x03eb
            java.util.ArrayList<java.lang.Object> r2 = r0.imagesArrLocals
            java.lang.Object r11 = r2.get(r1)
            int r2 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r2 = (float) r2
            float r8 = org.telegram.messenger.AndroidUtilities.density
            float r2 = r2 / r8
            int r2 = (int) r2
            org.telegram.messenger.ImageReceiver$BitmapHolder r8 = r0.currentThumb
            if (r8 == 0) goto L_0x009a
            org.telegram.messenger.ImageReceiver r9 = r0.centerImage
            if (r14 != r9) goto L_0x009a
            goto L_0x009b
        L_0x009a:
            r8 = r3
        L_0x009b:
            if (r8 != 0) goto L_0x00a3
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r8 = r0.placeProvider
            org.telegram.messenger.ImageReceiver$BitmapHolder r8 = r8.getThumbForPhoto(r3, r3, r1)
        L_0x00a3:
            boolean r1 = r11 instanceof org.telegram.messenger.MediaController.PhotoEntry
            java.lang.String r10 = "d"
            if (r1 == 0) goto L_0x011e
            r1 = r11
            org.telegram.messenger.MediaController$PhotoEntry r1 = (org.telegram.messenger.MediaController.PhotoEntry) r1
            org.telegram.messenger.MediaController$CropState r10 = r1.cropState
            boolean r6 = r1.isVideo
            if (r6 == 0) goto L_0x00e9
            java.lang.String r7 = r1.thumbPath
            if (r7 == 0) goto L_0x00ca
            boolean r9 = r0.fromCamera
            if (r9 == 0) goto L_0x00e7
            android.graphics.Bitmap r7 = android.graphics.BitmapFactory.decodeFile(r7)
            if (r7 == 0) goto L_0x00c7
            org.telegram.messenger.ImageReceiver$BitmapHolder r8 = new org.telegram.messenger.ImageReceiver$BitmapHolder
            r8.<init>(r7)
            r1.thumbPath = r3
        L_0x00c7:
            r1 = r3
            r7 = r1
            goto L_0x010a
        L_0x00ca:
            java.lang.StringBuilder r7 = new java.lang.StringBuilder
            r7.<init>()
            java.lang.String r9 = "vthumb://"
            r7.append(r9)
            int r9 = r1.imageId
            r7.append(r9)
            java.lang.String r9 = ":"
            r7.append(r9)
            java.lang.String r1 = r1.path
            r7.append(r1)
            java.lang.String r7 = r7.toString()
        L_0x00e7:
            r1 = r3
            goto L_0x010a
        L_0x00e9:
            java.lang.String r7 = r1.filterPath
            if (r7 == 0) goto L_0x00ee
            goto L_0x00f6
        L_0x00ee:
            int r7 = r1.orientation
            r14.setOrientation(r7, r13)
            java.lang.String r1 = r1.path
            r7 = r1
        L_0x00f6:
            java.util.Locale r1 = java.util.Locale.US
            java.lang.Object[] r9 = new java.lang.Object[r5]
            java.lang.Integer r18 = java.lang.Integer.valueOf(r2)
            r9[r13] = r18
            java.lang.Integer r18 = java.lang.Integer.valueOf(r2)
            r9[r12] = r18
            java.lang.String r1 = java.lang.String.format(r1, r4, r9)
        L_0x010a:
            r29 = r3
            r9 = r4
            r17 = r7
            r30 = r10
            r16 = 0
            r20 = 0
            r3 = r1
            r1 = r29
            r4 = r1
            r7 = r4
            r10 = r6
            r6 = r7
            goto L_0x0270
        L_0x011e:
            boolean r1 = r11 instanceof org.telegram.tgnet.TLRPC$BotInlineResult
            if (r1 == 0) goto L_0x0214
            r1 = r11
            org.telegram.tgnet.TLRPC$BotInlineResult r1 = (org.telegram.tgnet.TLRPC$BotInlineResult) r1
            java.lang.String r6 = r1.type
            java.lang.String r7 = "video"
            boolean r6 = r6.equals(r7)
            if (r6 != 0) goto L_0x01de
            org.telegram.tgnet.TLRPC$Document r6 = r1.document
            boolean r6 = org.telegram.messenger.MessageObject.isVideoDocument(r6)
            if (r6 == 0) goto L_0x0139
            goto L_0x01de
        L_0x0139:
            java.lang.String r6 = r1.type
            java.lang.String r7 = "gif"
            boolean r6 = r6.equals(r7)
            if (r6 == 0) goto L_0x015f
            org.telegram.tgnet.TLRPC$Document r6 = r1.document
            if (r6 == 0) goto L_0x015f
            r18 = r4
            long r3 = r6.size
            org.telegram.tgnet.TLRPC$VideoSize r1 = org.telegram.messenger.MessageObject.getDocumentVideoThumb(r6)
            if (r1 == 0) goto L_0x0156
            org.telegram.messenger.ImageLocation r1 = org.telegram.messenger.ImageLocation.getForDocument((org.telegram.tgnet.TLRPC$VideoSize) r1, (org.telegram.tgnet.TLRPC$Document) r6)
            goto L_0x0157
        L_0x0156:
            r1 = 0
        L_0x0157:
            r16 = r3
            r9 = r18
            r4 = 0
            r7 = 0
            r3 = r1
            goto L_0x0190
        L_0x015f:
            r18 = r4
            org.telegram.tgnet.TLRPC$Photo r3 = r1.photo
            if (r3 == 0) goto L_0x0193
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r3 = r3.sizes
            int r4 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            org.telegram.tgnet.TLRPC$PhotoSize r3 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r3, r4)
            org.telegram.tgnet.TLRPC$Photo r1 = r1.photo
            int r4 = r3.size
            long r6 = (long) r4
            java.util.Locale r4 = java.util.Locale.US
            java.lang.Object[] r10 = new java.lang.Object[r5]
            java.lang.Integer r16 = java.lang.Integer.valueOf(r2)
            r10[r13] = r16
            java.lang.Integer r16 = java.lang.Integer.valueOf(r2)
            r10[r12] = r16
            r9 = r18
            java.lang.String r10 = java.lang.String.format(r4, r9, r10)
            r4 = r3
            r16 = r6
            r3 = 0
            r6 = 0
            r7 = r1
        L_0x0190:
            r1 = 0
            goto L_0x0206
        L_0x0193:
            r9 = r18
            org.telegram.tgnet.TLRPC$WebDocument r3 = r1.content
            boolean r3 = r3 instanceof org.telegram.tgnet.TLRPC$TL_webDocument
            if (r3 == 0) goto L_0x01fe
            java.lang.String r3 = r1.type
            boolean r3 = r3.equals(r7)
            if (r3 == 0) goto L_0x01be
            org.telegram.tgnet.TLRPC$WebDocument r3 = r1.thumb
            boolean r4 = r3 instanceof org.telegram.tgnet.TLRPC$TL_webDocument
            if (r4 == 0) goto L_0x01d3
            java.lang.String r3 = r3.mime_type
            java.lang.String r4 = "video/mp4"
            boolean r3 = r4.equals(r3)
            if (r3 == 0) goto L_0x01d3
            org.telegram.tgnet.TLRPC$WebDocument r3 = r1.thumb
            org.telegram.messenger.WebFile r3 = org.telegram.messenger.WebFile.createWithWebDocument(r3)
            org.telegram.messenger.ImageLocation r3 = org.telegram.messenger.ImageLocation.getForWebFile(r3)
            goto L_0x01d4
        L_0x01be:
            java.util.Locale r3 = java.util.Locale.US
            java.lang.Object[] r4 = new java.lang.Object[r5]
            java.lang.Integer r6 = java.lang.Integer.valueOf(r2)
            r4[r13] = r6
            java.lang.Integer r6 = java.lang.Integer.valueOf(r2)
            r4[r12] = r6
            java.lang.String r3 = java.lang.String.format(r3, r9, r4)
            r10 = r3
        L_0x01d3:
            r3 = 0
        L_0x01d4:
            org.telegram.tgnet.TLRPC$WebDocument r1 = r1.content
            org.telegram.messenger.WebFile r1 = org.telegram.messenger.WebFile.createWithWebDocument(r1)
            r4 = 0
            r6 = 0
            r7 = 0
            goto L_0x0204
        L_0x01de:
            r9 = r4
            org.telegram.tgnet.TLRPC$Document r3 = r1.document
            if (r3 == 0) goto L_0x01f3
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r3 = r3.thumbs
            r4 = 90
            org.telegram.tgnet.TLRPC$PhotoSize r3 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r3, r4)
            org.telegram.tgnet.TLRPC$Document r1 = r1.document
            r7 = r1
            r4 = r3
            r1 = 0
            r3 = 0
            r6 = 0
            goto L_0x0203
        L_0x01f3:
            org.telegram.tgnet.TLRPC$WebDocument r1 = r1.thumb
            boolean r3 = r1 instanceof org.telegram.tgnet.TLRPC$TL_webDocument
            if (r3 == 0) goto L_0x01fe
            org.telegram.messenger.WebFile r1 = org.telegram.messenger.WebFile.createWithWebDocument(r1)
            goto L_0x01ff
        L_0x01fe:
            r1 = 0
        L_0x01ff:
            r3 = 0
            r4 = 0
            r6 = 0
            r7 = 0
        L_0x0203:
            r10 = 0
        L_0x0204:
            r16 = 0
        L_0x0206:
            r29 = r7
            r20 = r16
            r16 = 1
            r17 = 0
            r30 = 0
            r7 = r1
            r1 = r4
            r4 = r3
            goto L_0x025d
        L_0x0214:
            r9 = r4
            boolean r1 = r11 instanceof org.telegram.messenger.MediaController.SearchImage
            if (r1 == 0) goto L_0x0260
            r1 = r11
            org.telegram.messenger.MediaController$SearchImage r1 = (org.telegram.messenger.MediaController.SearchImage) r1
            org.telegram.tgnet.TLRPC$PhotoSize r3 = r1.photoSize
            if (r3 == 0) goto L_0x022c
            org.telegram.tgnet.TLRPC$Photo r4 = r1.photo
            int r6 = r3.size
            long r6 = (long) r6
            r16 = r4
            r17 = 0
            r4 = r3
            r3 = 0
            goto L_0x024f
        L_0x022c:
            java.lang.String r3 = r1.filterPath
            if (r3 == 0) goto L_0x0239
            r17 = r3
            r3 = 0
            r4 = 0
            r6 = 0
        L_0x0236:
            r16 = 0
            goto L_0x024f
        L_0x0239:
            org.telegram.tgnet.TLRPC$Document r3 = r1.document
            if (r3 == 0) goto L_0x0245
            long r6 = r3.size
            r4 = 0
            r16 = 0
            r17 = 0
            goto L_0x024f
        L_0x0245:
            java.lang.String r3 = r1.imageUrl
            int r4 = r1.size
            long r6 = (long) r4
            r17 = r3
            r3 = 0
            r4 = 0
            goto L_0x0236
        L_0x024f:
            org.telegram.messenger.MediaController$CropState r1 = r1.cropState
            r30 = r1
            r1 = r4
            r20 = r6
            r29 = r16
            r4 = 0
            r7 = 0
            r16 = 1
            r6 = r3
        L_0x025d:
            r3 = r10
            r10 = 0
            goto L_0x0270
        L_0x0260:
            r1 = 0
            r3 = 0
            r4 = 0
            r6 = 0
            r7 = 0
            r10 = 0
            r16 = 0
            r17 = 0
            r20 = 0
            r29 = 0
            r30 = 0
        L_0x0270:
            if (r6 == 0) goto L_0x0307
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r1 = r6.thumbs
            r3 = 90
            org.telegram.tgnet.TLRPC$PhotoSize r1 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r1, r3)
            if (r4 == 0) goto L_0x02c4
            org.telegram.messenger.ImageLocation r3 = org.telegram.messenger.ImageLocation.getForDocument(r6)
            r7 = 0
            if (r8 != 0) goto L_0x0289
            org.telegram.messenger.ImageLocation r1 = org.telegram.messenger.ImageLocation.getForDocument((org.telegram.tgnet.TLRPC$PhotoSize) r1, (org.telegram.tgnet.TLRPC$Document) r6)
            r6 = r1
            goto L_0x028a
        L_0x0289:
            r6 = 0
        L_0x028a:
            java.util.Locale r1 = java.util.Locale.US
            java.lang.Object[] r5 = new java.lang.Object[r5]
            java.lang.Integer r17 = java.lang.Integer.valueOf(r2)
            r5[r13] = r17
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r5[r12] = r2
            java.lang.String r9 = java.lang.String.format(r1, r9, r5)
            if (r8 == 0) goto L_0x02a9
            android.graphics.drawable.BitmapDrawable r1 = new android.graphics.drawable.BitmapDrawable
            android.graphics.Bitmap r2 = r8.bitmap
            r1.<init>(r2)
            r8 = r1
            goto L_0x02aa
        L_0x02a9:
            r8 = 0
        L_0x02aa:
            r12 = 0
            java.lang.String r5 = "d"
            r1 = r33
            r2 = r3
            r3 = r5
            r5 = r7
            r7 = r9
            r31 = r10
            r9 = r20
            r18 = r11
            r11 = r12
            r12 = r18
            r14 = 0
            r13 = r16
            r1.setImage(r2, r3, r4, r5, r6, r7, r8, r9, r11, r12, r13)
            goto L_0x0343
        L_0x02c4:
            r31 = r10
            r18 = r11
            r14 = 0
            org.telegram.messenger.ImageLocation r3 = org.telegram.messenger.ImageLocation.getForDocument(r6)
            if (r8 != 0) goto L_0x02d5
            org.telegram.messenger.ImageLocation r1 = org.telegram.messenger.ImageLocation.getForDocument((org.telegram.tgnet.TLRPC$PhotoSize) r1, (org.telegram.tgnet.TLRPC$Document) r6)
            r4 = r1
            goto L_0x02d6
        L_0x02d5:
            r4 = 0
        L_0x02d6:
            java.util.Locale r1 = java.util.Locale.US
            java.lang.Object[] r5 = new java.lang.Object[r5]
            java.lang.Integer r6 = java.lang.Integer.valueOf(r2)
            r5[r14] = r6
            java.lang.Integer r2 = java.lang.Integer.valueOf(r2)
            r5[r12] = r2
            java.lang.String r5 = java.lang.String.format(r1, r9, r5)
            if (r8 == 0) goto L_0x02f5
            android.graphics.drawable.BitmapDrawable r1 = new android.graphics.drawable.BitmapDrawable
            android.graphics.Bitmap r2 = r8.bitmap
            r1.<init>(r2)
            r6 = r1
            goto L_0x02f6
        L_0x02f5:
            r6 = 0
        L_0x02f6:
            r9 = 0
            java.lang.String r7 = "d"
            r1 = r33
            r2 = r3
            r3 = r7
            r7 = r20
            r10 = r18
            r11 = r16
            r1.setImage(r2, r3, r4, r5, r6, r7, r9, r10, r11)
            goto L_0x0343
        L_0x0307:
            r31 = r10
            r18 = r11
            r14 = 0
            if (r1 == 0) goto L_0x032d
            r2 = r29
            org.telegram.messenger.ImageLocation r2 = org.telegram.messenger.ImageLocation.getForObject(r1, r2)
            if (r8 == 0) goto L_0x031f
            android.graphics.drawable.BitmapDrawable r1 = new android.graphics.drawable.BitmapDrawable
            android.graphics.Bitmap r4 = r8.bitmap
            r1.<init>(r4)
            r4 = r1
            goto L_0x0320
        L_0x031f:
            r4 = 0
        L_0x0320:
            r7 = 0
            r1 = r33
            r5 = r20
            r8 = r18
            r9 = r16
            r1.setImage((org.telegram.messenger.ImageLocation) r2, (java.lang.String) r3, (android.graphics.drawable.Drawable) r4, (long) r5, (java.lang.String) r7, (java.lang.Object) r8, (int) r9)
            goto L_0x0343
        L_0x032d:
            r1 = 2131166008(0x7var_, float:1.794625E38)
            if (r7 == 0) goto L_0x0375
            if (r4 == 0) goto L_0x0346
            org.telegram.messenger.ImageLocation r2 = org.telegram.messenger.ImageLocation.getForWebFile(r7)
            r5 = 0
            r6 = 0
            r1 = r33
            r7 = r18
            r8 = r16
            r1.setImage((org.telegram.messenger.ImageLocation) r2, (java.lang.String) r3, (org.telegram.messenger.ImageLocation) r4, (java.lang.String) r5, (android.graphics.drawable.Drawable) r6, (java.lang.Object) r7, (int) r8)
        L_0x0343:
            r13 = r31
            goto L_0x039c
        L_0x0346:
            org.telegram.messenger.ImageLocation r2 = org.telegram.messenger.ImageLocation.getForWebFile(r7)
            if (r8 == 0) goto L_0x0357
            android.graphics.drawable.BitmapDrawable r1 = new android.graphics.drawable.BitmapDrawable
            android.graphics.Bitmap r4 = r8.bitmap
            r1.<init>(r4)
            r4 = r1
            r13 = r31
            goto L_0x036a
        L_0x0357:
            r13 = r31
            if (r13 == 0) goto L_0x0369
            android.app.Activity r4 = r0.parentActivity
            if (r4 == 0) goto L_0x0369
            android.content.res.Resources r4 = r4.getResources()
            android.graphics.drawable.Drawable r1 = r4.getDrawable(r1)
            r4 = r1
            goto L_0x036a
        L_0x0369:
            r4 = 0
        L_0x036a:
            r5 = 0
            r1 = r33
            r6 = r18
            r7 = r16
            r1.setImage(r2, r3, r4, r5, r6, r7)
            goto L_0x039c
        L_0x0375:
            r13 = r31
            if (r8 == 0) goto L_0x0382
            android.graphics.drawable.BitmapDrawable r1 = new android.graphics.drawable.BitmapDrawable
            android.graphics.Bitmap r2 = r8.bitmap
            r1.<init>(r2)
        L_0x0380:
            r4 = r1
            goto L_0x0392
        L_0x0382:
            if (r13 == 0) goto L_0x0391
            android.app.Activity r2 = r0.parentActivity
            if (r2 == 0) goto L_0x0391
            android.content.res.Resources r2 = r2.getResources()
            android.graphics.drawable.Drawable r1 = r2.getDrawable(r1)
            goto L_0x0380
        L_0x0391:
            r4 = 0
        L_0x0392:
            r5 = 0
            r1 = r33
            r2 = r17
            r6 = r20
            r1.setImage(r2, r3, r4, r5, r6)
        L_0x039c:
            r1 = r30
            if (r15 == 0) goto L_0x03d5
            if (r1 == 0) goto L_0x03d2
            r16 = 1
            float r2 = r1.cropPx
            float r3 = r1.cropPy
            float r4 = r1.cropRotate
            int r5 = r1.transformRotation
            float r6 = r1.cropScale
            r22 = 1065353216(0x3var_, float:1.0)
            r23 = 1065353216(0x3var_, float:1.0)
            float r7 = r1.cropPw
            float r8 = r1.cropPh
            r26 = 0
            r27 = 0
            boolean r9 = r1.mirrored
            r15 = r35
            r17 = r2
            r18 = r3
            r19 = r4
            r20 = r5
            r21 = r6
            r24 = r7
            r25 = r8
            r28 = r9
            r15.setViewTransform(r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28)
            goto L_0x03d5
        L_0x03d2:
            r15.setViewTransform(r14)
        L_0x03d5:
            org.telegram.messenger.ImageReceiver r2 = r0.leftImage
            r14 = r33
            if (r14 != r2) goto L_0x03e1
            r0.leftCropState = r1
            r0.leftImageIsVideo = r13
            goto L_0x0792
        L_0x03e1:
            org.telegram.messenger.ImageReceiver r2 = r0.rightImage
            if (r14 != r2) goto L_0x0792
            r0.rightCropState = r1
            r0.rightImageIsVideo = r13
            goto L_0x0792
        L_0x03eb:
            r1 = r3
            r14.setImageBitmap((android.graphics.Bitmap) r1)
            goto L_0x0792
        L_0x03f1:
            r9 = r4
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r3 = r0.pageBlocksAdapter
            r4 = 2131166058(0x7var_a, float:1.794635E38)
            if (r3 == 0) goto L_0x04dc
            int[] r5 = new int[r12]
            org.telegram.tgnet.TLObject r3 = r3.getMedia(r1)
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r6 = r0.pageBlocksAdapter
            org.telegram.tgnet.TLRPC$PhotoSize r6 = r6.getFileLocation(r3, r5)
            if (r6 == 0) goto L_0x04c3
            boolean r7 = r3 instanceof org.telegram.tgnet.TLRPC$Photo
            if (r7 == 0) goto L_0x0457
            org.telegram.tgnet.TLRPC$Photo r3 = (org.telegram.tgnet.TLRPC$Photo) r3
            org.telegram.messenger.ImageReceiver$BitmapHolder r9 = r0.currentThumb
            if (r9 == 0) goto L_0x0416
            org.telegram.messenger.ImageReceiver r1 = r0.centerImage
            if (r14 != r1) goto L_0x0416
            goto L_0x0417
        L_0x0416:
            r9 = 0
        L_0x0417:
            r1 = r5[r13]
            if (r1 != 0) goto L_0x041e
            r1 = -1
            r5[r13] = r1
        L_0x041e:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r1 = r3.sizes
            r4 = 80
            org.telegram.tgnet.TLRPC$PhotoSize r1 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r1, r4)
            org.telegram.messenger.ImageLocation r4 = org.telegram.messenger.ImageLocation.getForPhoto((org.telegram.tgnet.TLRPC$PhotoSize) r6, (org.telegram.tgnet.TLRPC$Photo) r3)
            r6 = 0
            org.telegram.messenger.ImageLocation r7 = org.telegram.messenger.ImageLocation.getForPhoto((org.telegram.tgnet.TLRPC$PhotoSize) r1, (org.telegram.tgnet.TLRPC$Photo) r3)
            if (r9 == 0) goto L_0x043a
            android.graphics.drawable.BitmapDrawable r1 = new android.graphics.drawable.BitmapDrawable
            android.graphics.Bitmap r2 = r9.bitmap
            r1.<init>(r2)
            r8 = r1
            goto L_0x043b
        L_0x043a:
            r8 = 0
        L_0x043b:
            r1 = r5[r13]
            long r9 = (long) r1
            r11 = 0
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r1 = r0.pageBlocksAdapter
            java.lang.Object r12 = r1.getParentObject()
            r13 = 1
            java.lang.String r5 = "b"
            r1 = r33
            r2 = r4
            r3 = r6
            r4 = r7
            r6 = r8
            r7 = r9
            r9 = r11
            r10 = r12
            r11 = r13
            r1.setImage(r2, r3, r4, r5, r6, r7, r9, r10, r11)
            goto L_0x0792
        L_0x0457:
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r5 = r0.pageBlocksAdapter
            boolean r1 = r5.isVideo(r1)
            if (r1 == 0) goto L_0x04b3
            org.telegram.tgnet.TLRPC$FileLocation r1 = r6.location
            boolean r1 = r1 instanceof org.telegram.tgnet.TLRPC$TL_fileLocationUnavailable
            if (r1 != 0) goto L_0x04a4
            org.telegram.messenger.ImageReceiver$BitmapHolder r9 = r0.currentThumb
            if (r9 == 0) goto L_0x046e
            org.telegram.messenger.ImageReceiver r1 = r0.centerImage
            if (r14 != r1) goto L_0x046e
            goto L_0x046f
        L_0x046e:
            r9 = 0
        L_0x046f:
            r4 = 0
            r5 = 0
            if (r9 != 0) goto L_0x047b
            org.telegram.tgnet.TLRPC$Document r3 = (org.telegram.tgnet.TLRPC$Document) r3
            org.telegram.messenger.ImageLocation r1 = org.telegram.messenger.ImageLocation.getForDocument((org.telegram.tgnet.TLRPC$PhotoSize) r6, (org.telegram.tgnet.TLRPC$Document) r3)
            r6 = r1
            goto L_0x047c
        L_0x047b:
            r6 = 0
        L_0x047c:
            if (r9 == 0) goto L_0x0487
            android.graphics.drawable.BitmapDrawable r1 = new android.graphics.drawable.BitmapDrawable
            android.graphics.Bitmap r2 = r9.bitmap
            r1.<init>(r2)
            r7 = r1
            goto L_0x0488
        L_0x0487:
            r7 = 0
        L_0x0488:
            r8 = 0
            r10 = 0
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r1 = r0.pageBlocksAdapter
            java.lang.Object r11 = r1.getParentObject()
            r12 = 1
            java.lang.String r13 = "b"
            r1 = r33
            r2 = r4
            r3 = r5
            r4 = r6
            r5 = r13
            r6 = r7
            r7 = r8
            r9 = r10
            r10 = r11
            r11 = r12
            r1.setImage(r2, r3, r4, r5, r6, r7, r9, r10, r11)
            goto L_0x0792
        L_0x04a4:
            android.app.Activity r1 = r0.parentActivity
            android.content.res.Resources r1 = r1.getResources()
            android.graphics.drawable.Drawable r1 = r1.getDrawable(r4)
            r14.setImageBitmap((android.graphics.drawable.Drawable) r1)
            goto L_0x0792
        L_0x04b3:
            org.telegram.ui.Components.AnimatedFileDrawable r1 = r0.currentAnimation
            if (r1 == 0) goto L_0x0792
            r14.setImageBitmap((android.graphics.drawable.Drawable) r1)
            org.telegram.ui.Components.AnimatedFileDrawable r1 = r0.currentAnimation
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r2 = r0.containerView
            r1.addSecondParentView(r2)
            goto L_0x0792
        L_0x04c3:
            r1 = r5[r13]
            if (r1 != 0) goto L_0x04cd
            r1 = 0
            r14.setImageBitmap((android.graphics.Bitmap) r1)
            goto L_0x0792
        L_0x04cd:
            android.app.Activity r1 = r0.parentActivity
            android.content.res.Resources r1 = r1.getResources()
            android.graphics.drawable.Drawable r1 = r1.getDrawable(r4)
            r14.setImageBitmap((android.graphics.drawable.Drawable) r1)
            goto L_0x0792
        L_0x04dc:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r0.imagesArr
            boolean r3 = r3.isEmpty()
            if (r3 != 0) goto L_0x04fb
            if (r1 < 0) goto L_0x04fb
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r0.imagesArr
            int r3 = r3.size()
            if (r1 >= r3) goto L_0x04fb
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r0.imagesArr
            java.lang.Object r3 = r3.get(r1)
            org.telegram.messenger.MessageObject r3 = (org.telegram.messenger.MessageObject) r3
            r14.setShouldGenerateQualityThumb(r12)
            r10 = r3
            goto L_0x04fc
        L_0x04fb:
            r10 = 0
        L_0x04fc:
            r3 = 100
            if (r10 == 0) goto L_0x060c
            org.telegram.tgnet.TLRPC$Message r6 = r10.messageOwner
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_restrictionReason> r6 = r6.restriction_reason
            java.lang.String r6 = org.telegram.messenger.MessagesController.getRestrictionReason(r6)
            boolean r6 = android.text.TextUtils.isEmpty(r6)
            if (r6 != 0) goto L_0x051c
            android.app.Activity r1 = r0.parentActivity
            android.content.res.Resources r1 = r1.getResources()
            android.graphics.drawable.Drawable r1 = r1.getDrawable(r4)
            r14.setImageBitmap((android.graphics.drawable.Drawable) r1)
            return
        L_0x051c:
            boolean r6 = r10.isVideo()
            if (r6 == 0) goto L_0x0589
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r1 = r10.photoThumbs
            if (r1 == 0) goto L_0x057b
            boolean r1 = r1.isEmpty()
            if (r1 != 0) goto L_0x057b
            org.telegram.messenger.ImageReceiver$BitmapHolder r1 = r0.currentThumb
            if (r1 == 0) goto L_0x0535
            org.telegram.messenger.ImageReceiver r4 = r0.centerImage
            if (r14 != r4) goto L_0x0535
            goto L_0x0536
        L_0x0535:
            r1 = 0
        L_0x0536:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r4 = r10.photoThumbs
            r5 = 320(0x140, float:4.48E-43)
            org.telegram.tgnet.TLRPC$PhotoSize r4 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r4, r5)
            int r5 = r4.w
            if (r5 >= r3) goto L_0x0547
            int r5 = r4.h
            if (r5 >= r3) goto L_0x0547
            goto L_0x0548
        L_0x0547:
            r12 = 0
        L_0x0548:
            r14.setNeedsQualityThumb(r12)
            r3 = 0
            r5 = 0
            if (r1 != 0) goto L_0x0556
            org.telegram.tgnet.TLObject r6 = r10.photoThumbsObject
            org.telegram.messenger.ImageLocation r4 = org.telegram.messenger.ImageLocation.getForObject(r4, r6)
            goto L_0x0557
        L_0x0556:
            r4 = 0
        L_0x0557:
            if (r1 == 0) goto L_0x0562
            android.graphics.drawable.BitmapDrawable r2 = new android.graphics.drawable.BitmapDrawable
            android.graphics.Bitmap r1 = r1.bitmap
            r2.<init>(r1)
            r6 = r2
            goto L_0x0563
        L_0x0562:
            r6 = 0
        L_0x0563:
            r7 = 0
            r9 = 0
            r11 = 1
            java.lang.String r12 = "b"
            r1 = r33
            r2 = r3
            r3 = r5
            r5 = r12
            r1.setImage(r2, r3, r4, r5, r6, r7, r9, r10, r11)
            org.telegram.messenger.ImageReceiver$BitmapHolder r1 = r0.currentThumb
            if (r1 == 0) goto L_0x0588
            int r1 = r1.orientation
            r14.setOrientation(r1, r13)
            goto L_0x0588
        L_0x057b:
            android.app.Activity r1 = r0.parentActivity
            android.content.res.Resources r1 = r1.getResources()
            android.graphics.drawable.Drawable r1 = r1.getDrawable(r4)
            r14.setImageBitmap((android.graphics.drawable.Drawable) r1)
        L_0x0588:
            return
        L_0x0589:
            org.telegram.ui.Components.AnimatedFileDrawable r6 = r0.currentAnimation
            if (r6 == 0) goto L_0x0598
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r1 = r0.containerView
            r6.addSecondParentView(r1)
            org.telegram.ui.Components.AnimatedFileDrawable r1 = r0.currentAnimation
            r14.setImageBitmap((android.graphics.drawable.Drawable) r1)
            return
        L_0x0598:
            int r6 = r0.sharedMediaType
            if (r6 != r12) goto L_0x060c
            boolean r1 = r10.canPreviewDocument()
            if (r1 == 0) goto L_0x05ff
            org.telegram.tgnet.TLRPC$Document r1 = r10.getDocument()
            r14.setNeedsQualityThumb(r12)
            org.telegram.messenger.ImageReceiver$BitmapHolder r4 = r0.currentThumb
            if (r4 == 0) goto L_0x05b2
            org.telegram.messenger.ImageReceiver r6 = r0.centerImage
            if (r14 != r6) goto L_0x05b2
            goto L_0x05b3
        L_0x05b2:
            r4 = 0
        L_0x05b3:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r6 = r10.photoThumbs
            org.telegram.tgnet.TLRPC$PhotoSize r3 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r6, r3)
            r6 = 1157627904(0x45000000, float:2048.0)
            float r7 = org.telegram.messenger.AndroidUtilities.density
            float r6 = r6 / r7
            int r6 = (int) r6
            org.telegram.messenger.ImageLocation r7 = org.telegram.messenger.ImageLocation.getForDocument(r1)
            java.util.Locale r8 = java.util.Locale.US
            java.lang.Object[] r5 = new java.lang.Object[r5]
            java.lang.Integer r11 = java.lang.Integer.valueOf(r6)
            r5[r13] = r11
            java.lang.Integer r6 = java.lang.Integer.valueOf(r6)
            r5[r12] = r6
            java.lang.String r5 = java.lang.String.format(r8, r9, r5)
            if (r4 != 0) goto L_0x05df
            org.telegram.messenger.ImageLocation r3 = org.telegram.messenger.ImageLocation.getForDocument((org.telegram.tgnet.TLRPC$PhotoSize) r3, (org.telegram.tgnet.TLRPC$Document) r1)
            r6 = r3
            goto L_0x05e0
        L_0x05df:
            r6 = 0
        L_0x05e0:
            if (r4 == 0) goto L_0x05eb
            android.graphics.drawable.BitmapDrawable r2 = new android.graphics.drawable.BitmapDrawable
            android.graphics.Bitmap r3 = r4.bitmap
            r2.<init>(r3)
            r8 = r2
            goto L_0x05ec
        L_0x05eb:
            r8 = 0
        L_0x05ec:
            long r11 = r1.size
            r9 = 0
            r13 = 0
            java.lang.String r15 = "b"
            r1 = r33
            r2 = r7
            r3 = r5
            r4 = r6
            r5 = r15
            r6 = r8
            r7 = r11
            r11 = r13
            r1.setImage(r2, r3, r4, r5, r6, r7, r9, r10, r11)
            goto L_0x060b
        L_0x05ff:
            org.telegram.ui.Components.OtherDocumentPlaceholderDrawable r1 = new org.telegram.ui.Components.OtherDocumentPlaceholderDrawable
            android.app.Activity r2 = r0.parentActivity
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r3 = r0.containerView
            r1.<init>(r2, r3, r10)
            r14.setImageBitmap((android.graphics.drawable.Drawable) r1)
        L_0x060b:
            return
        L_0x060c:
            long[] r6 = new long[r12]
            org.telegram.messenger.ImageLocation r7 = r0.getImageLocation(r1, r6)
            org.telegram.tgnet.TLObject r1 = r0.getFileLocation(r1, r6)
            r14.setNeedsQualityThumb(r12)
            if (r7 == 0) goto L_0x0778
            org.telegram.messenger.ImageReceiver$BitmapHolder r4 = r0.currentThumb
            if (r4 == 0) goto L_0x0626
            org.telegram.messenger.ImageReceiver r8 = r0.centerImage
            if (r14 != r8) goto L_0x0626
            r19 = r4
            goto L_0x0628
        L_0x0626:
            r19 = 0
        L_0x0628:
            r8 = r6[r13]
            r15 = 0
            int r4 = (r8 > r15 ? 1 : (r8 == r15 ? 0 : -1))
            if (r4 != 0) goto L_0x0634
            r8 = -1
            r6[r13] = r8
        L_0x0634:
            if (r10 == 0) goto L_0x063f
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r4 = r10.photoThumbs
            org.telegram.tgnet.TLRPC$PhotoSize r3 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r4, r3)
            org.telegram.tgnet.TLObject r4 = r10.photoThumbsObject
            goto L_0x0641
        L_0x063f:
            r3 = 0
            r4 = 0
        L_0x0641:
            if (r3 == 0) goto L_0x0646
            if (r3 != r1) goto L_0x0646
            r3 = 0
        L_0x0646:
            if (r3 != 0) goto L_0x0678
            org.telegram.tgnet.TLRPC$Photo r1 = r7.photo
            if (r1 == 0) goto L_0x0678
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r1 = r1.sizes
            if (r1 == 0) goto L_0x0678
            r1 = 0
        L_0x0651:
            org.telegram.tgnet.TLRPC$Photo r8 = r7.photo
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r8 = r8.sizes
            int r8 = r8.size()
            if (r1 >= r8) goto L_0x0678
            org.telegram.tgnet.TLRPC$Photo r8 = r7.photo
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r8 = r8.sizes
            java.lang.Object r8 = r8.get(r1)
            boolean r8 = r8 instanceof org.telegram.tgnet.TLRPC$TL_photoStrippedSize
            if (r8 == 0) goto L_0x0675
            org.telegram.tgnet.TLRPC$Photo r3 = r7.photo
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r3 = r3.sizes
            java.lang.Object r1 = r3.get(r1)
            r3 = r1
            org.telegram.tgnet.TLRPC$PhotoSize r3 = (org.telegram.tgnet.TLRPC$PhotoSize) r3
            org.telegram.tgnet.TLRPC$Photo r4 = r7.photo
            goto L_0x0678
        L_0x0675:
            int r1 = r1 + 1
            goto L_0x0651
        L_0x0678:
            if (r10 == 0) goto L_0x0680
            boolean r1 = r10.isWebpage()
            if (r1 != 0) goto L_0x068f
        L_0x0680:
            long r8 = r0.avatarsDialogId
            r15 = 0
            int r1 = (r8 > r15 ? 1 : (r8 == r15 ? 0 : -1))
            if (r1 != 0) goto L_0x068f
            boolean r1 = r0.isEvent
            if (r1 == 0) goto L_0x068d
            goto L_0x068f
        L_0x068d:
            r15 = 0
            goto L_0x0690
        L_0x068f:
            r15 = 1
        L_0x0690:
            r1 = 5
            if (r10 == 0) goto L_0x06b2
            int r8 = r0.sharedMediaType
            if (r8 != r1) goto L_0x06ac
            org.telegram.tgnet.TLRPC$Document r8 = r10.getDocument()
            org.telegram.tgnet.TLRPC$VideoSize r9 = org.telegram.messenger.MessageObject.getDocumentVideoThumb(r8)
            if (r9 == 0) goto L_0x06a6
            org.telegram.messenger.ImageLocation r8 = org.telegram.messenger.ImageLocation.getForDocument((org.telegram.tgnet.TLRPC$VideoSize) r9, (org.telegram.tgnet.TLRPC$Document) r8)
            goto L_0x06a7
        L_0x06a6:
            r8 = 0
        L_0x06a7:
            r18 = r10
            r9 = r19
            goto L_0x0701
        L_0x06ac:
            r18 = r10
        L_0x06ae:
            r9 = r19
        L_0x06b0:
            r8 = 0
            goto L_0x0701
        L_0x06b2:
            long r8 = r0.avatarsDialogId
            r10 = 0
            int r16 = (r8 > r10 ? 1 : (r8 == r10 ? 0 : -1))
            if (r16 == 0) goto L_0x06fc
            int r18 = (r8 > r10 ? 1 : (r8 == r10 ? 0 : -1))
            if (r18 <= 0) goto L_0x06cf
            int r8 = r0.currentAccount
            org.telegram.messenger.MessagesController r8 = org.telegram.messenger.MessagesController.getInstance(r8)
            long r9 = r0.avatarsDialogId
            java.lang.Long r9 = java.lang.Long.valueOf(r9)
            org.telegram.tgnet.TLRPC$User r8 = r8.getUser(r9)
            goto L_0x06e0
        L_0x06cf:
            int r8 = r0.currentAccount
            org.telegram.messenger.MessagesController r8 = org.telegram.messenger.MessagesController.getInstance(r8)
            long r9 = r0.avatarsDialogId
            long r9 = -r9
            java.lang.Long r9 = java.lang.Long.valueOf(r9)
            org.telegram.tgnet.TLRPC$Chat r8 = r8.getChat(r9)
        L_0x06e0:
            if (r4 == 0) goto L_0x06e3
            r8 = r4
        L_0x06e3:
            if (r19 != 0) goto L_0x06f9
            boolean r9 = r3 instanceof org.telegram.tgnet.TLRPC$TL_photoStrippedSize
            if (r9 == 0) goto L_0x06f9
            org.telegram.messenger.ImageReceiver$BitmapHolder r9 = new org.telegram.messenger.ImageReceiver$BitmapHolder
            byte[] r10 = r3.bytes
            java.lang.String r11 = "b"
            android.graphics.Bitmap r10 = org.telegram.messenger.ImageLoader.getStrippedPhotoBitmap(r10, r11)
            r9.<init>(r10)
            r18 = r8
            goto L_0x06b0
        L_0x06f9:
            r18 = r8
            goto L_0x06ae
        L_0x06fc:
            r9 = r19
            r8 = 0
            r18 = 0
        L_0x0701:
            java.lang.String r19 = "g"
            if (r8 == 0) goto L_0x0740
            int r5 = r0.sharedMediaType
            if (r5 != r1) goto L_0x070a
            goto L_0x070c
        L_0x070a:
            r19 = 0
        L_0x070c:
            r5 = 0
            if (r9 != 0) goto L_0x0715
            org.telegram.messenger.ImageLocation r1 = org.telegram.messenger.ImageLocation.getForObject(r3, r4)
            r10 = r1
            goto L_0x0716
        L_0x0715:
            r10 = 0
        L_0x0716:
            if (r9 == 0) goto L_0x0721
            android.graphics.drawable.BitmapDrawable r1 = new android.graphics.drawable.BitmapDrawable
            android.graphics.Bitmap r2 = r9.bitmap
            r1.<init>(r2)
            r9 = r1
            goto L_0x0722
        L_0x0721:
            r9 = 0
        L_0x0722:
            r16 = r6[r13]
            r11 = 0
            java.lang.String r13 = "b"
            r1 = r33
            r2 = r7
            r3 = r19
            r4 = r8
            r6 = r10
            r7 = r13
            r8 = r9
            r9 = r16
            r13 = 1
            r12 = r18
            r0 = 1
            r13 = r15
            r1.setImage(r2, r3, r4, r5, r6, r7, r8, r9, r11, r12, r13)
            r14.setAllowStartAnimation(r0)
            r0 = r32
            goto L_0x0792
        L_0x0740:
            long r10 = r0.avatarsDialogId
            r16 = 0
            int r1 = (r10 > r16 ? 1 : (r10 == r16 ? 0 : -1))
            if (r1 == 0) goto L_0x074d
            int r1 = r7.imageType
            if (r1 != r5) goto L_0x074d
            goto L_0x074f
        L_0x074d:
            r19 = 0
        L_0x074f:
            if (r9 != 0) goto L_0x0757
            org.telegram.messenger.ImageLocation r1 = org.telegram.messenger.ImageLocation.getForObject(r3, r4)
            r4 = r1
            goto L_0x0758
        L_0x0757:
            r4 = 0
        L_0x0758:
            if (r9 == 0) goto L_0x0763
            android.graphics.drawable.BitmapDrawable r1 = new android.graphics.drawable.BitmapDrawable
            android.graphics.Bitmap r2 = r9.bitmap
            r1.<init>(r2)
            r8 = r1
            goto L_0x0764
        L_0x0763:
            r8 = 0
        L_0x0764:
            r9 = r6[r13]
            r11 = 0
            java.lang.String r5 = "b"
            r1 = r33
            r2 = r7
            r3 = r19
            r6 = r8
            r7 = r9
            r9 = r11
            r10 = r18
            r11 = r15
            r1.setImage(r2, r3, r4, r5, r6, r7, r9, r10, r11)
            goto L_0x0792
        L_0x0778:
            r5 = r6[r13]
            r7 = 0
            int r1 = (r5 > r7 ? 1 : (r5 == r7 ? 0 : -1))
            if (r1 != 0) goto L_0x0785
            r1 = 0
            r14.setImageBitmap((android.graphics.Bitmap) r1)
            goto L_0x0792
        L_0x0785:
            android.app.Activity r1 = r0.parentActivity
            android.content.res.Resources r1 = r1.getResources()
            android.graphics.drawable.Drawable r1 = r1.getDrawable(r4)
            r14.setImageBitmap((android.graphics.drawable.Drawable) r1)
        L_0x0792:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.setIndexToImage(org.telegram.messenger.ImageReceiver, int, org.telegram.ui.Components.Crop.CropTransform):void");
    }

    /* JADX WARNING: Removed duplicated region for block: B:24:0x004f  */
    /* JADX WARNING: Removed duplicated region for block: B:39:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public static boolean isShowingImage(org.telegram.messenger.MessageObject r7) {
        /*
            org.telegram.ui.PhotoViewer r0 = Instance
            r1 = 1
            r2 = 0
            if (r0 == 0) goto L_0x0048
            org.telegram.ui.PhotoViewer r0 = Instance
            boolean r0 = r0.pipAnimationInProgress
            if (r0 != 0) goto L_0x0048
            org.telegram.ui.PhotoViewer r0 = Instance
            boolean r0 = r0.isVisible
            if (r0 == 0) goto L_0x0048
            org.telegram.ui.PhotoViewer r0 = Instance
            boolean r0 = r0.disableShowCheck
            if (r0 != 0) goto L_0x0048
            if (r7 == 0) goto L_0x0048
            org.telegram.ui.PhotoViewer r0 = Instance
            org.telegram.messenger.MessageObject r0 = r0.currentMessageObject
            if (r0 != 0) goto L_0x002e
            org.telegram.ui.PhotoViewer r3 = Instance
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r3 = r3.placeProvider
            if (r3 == 0) goto L_0x002e
            org.telegram.ui.PhotoViewer r0 = Instance
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r0 = r0.placeProvider
            org.telegram.messenger.MessageObject r0 = r0.getEditingMessageObject()
        L_0x002e:
            if (r0 == 0) goto L_0x0048
            int r3 = r0.getId()
            int r4 = r7.getId()
            if (r3 != r4) goto L_0x0048
            long r3 = r0.getDialogId()
            long r5 = r7.getDialogId()
            int r0 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1))
            if (r0 != 0) goto L_0x0048
            r0 = 1
            goto L_0x0049
        L_0x0048:
            r0 = 0
        L_0x0049:
            if (r0 != 0) goto L_0x0084
            org.telegram.ui.PhotoViewer r3 = PipInstance
            if (r3 == 0) goto L_0x0084
            org.telegram.ui.PhotoViewer r0 = PipInstance
            boolean r0 = r0.isVisible
            if (r0 == 0) goto L_0x0082
            org.telegram.ui.PhotoViewer r0 = PipInstance
            boolean r0 = r0.disableShowCheck
            if (r0 != 0) goto L_0x0082
            if (r7 == 0) goto L_0x0082
            org.telegram.ui.PhotoViewer r0 = PipInstance
            org.telegram.messenger.MessageObject r0 = r0.currentMessageObject
            if (r0 == 0) goto L_0x0082
            org.telegram.ui.PhotoViewer r0 = PipInstance
            org.telegram.messenger.MessageObject r0 = r0.currentMessageObject
            int r0 = r0.getId()
            int r3 = r7.getId()
            if (r0 != r3) goto L_0x0082
            org.telegram.ui.PhotoViewer r0 = PipInstance
            org.telegram.messenger.MessageObject r0 = r0.currentMessageObject
            long r3 = r0.getDialogId()
            long r5 = r7.getDialogId()
            int r7 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1))
            if (r7 != 0) goto L_0x0082
            goto L_0x0083
        L_0x0082:
            r1 = 0
        L_0x0083:
            r0 = r1
        L_0x0084:
            return r0
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.isShowingImage(org.telegram.messenger.MessageObject):boolean");
    }

    public static boolean isPlayingMessageInPip(MessageObject messageObject) {
        return (PipInstance == null || messageObject == null || PipInstance.currentMessageObject == null || PipInstance.currentMessageObject.getId() != messageObject.getId() || PipInstance.currentMessageObject.getDialogId() != messageObject.getDialogId()) ? false : true;
    }

    public static boolean isPlayingMessage(MessageObject messageObject) {
        return Instance != null && !Instance.pipAnimationInProgress && Instance.isVisible && messageObject != null && Instance.currentMessageObject != null && Instance.currentMessageObject.getId() == messageObject.getId() && Instance.currentMessageObject.getDialogId() == messageObject.getDialogId();
    }

    public static boolean isShowingImage(TLRPC$FileLocation tLRPC$FileLocation) {
        if (Instance == null || !Instance.isVisible || Instance.disableShowCheck || tLRPC$FileLocation == null) {
            return false;
        }
        if ((Instance.currentFileLocation != null && tLRPC$FileLocation.local_id == Instance.currentFileLocation.location.local_id && tLRPC$FileLocation.volume_id == Instance.currentFileLocation.location.volume_id && tLRPC$FileLocation.dc_id == Instance.currentFileLocation.dc_id) || (Instance.currentFileLocationVideo != null && tLRPC$FileLocation.local_id == Instance.currentFileLocationVideo.location.local_id && tLRPC$FileLocation.volume_id == Instance.currentFileLocationVideo.location.volume_id && tLRPC$FileLocation.dc_id == Instance.currentFileLocationVideo.dc_id)) {
            return true;
        }
        return false;
    }

    public static boolean isShowingImage(TLRPC$BotInlineResult tLRPC$BotInlineResult) {
        if (Instance == null || !Instance.isVisible || Instance.disableShowCheck || tLRPC$BotInlineResult == null || Instance.currentBotInlineResult == null || tLRPC$BotInlineResult.id != Instance.currentBotInlineResult.id) {
            return false;
        }
        return true;
    }

    public static boolean isShowingImage(String str) {
        if (Instance == null || !Instance.isVisible || Instance.disableShowCheck || str == null || !str.equals(Instance.currentPathObject)) {
            return false;
        }
        return true;
    }

    public void setParentChatActivity(ChatActivity chatActivity) {
        this.parentChatActivity = chatActivity;
    }

    public void setMaxSelectedPhotos(int i, boolean z) {
        this.maxSelectedPhotos = i;
        this.allowOrder = z;
    }

    public void checkCurrentImageVisibility() {
        PlaceProviderObject placeProviderObject = this.currentPlaceObject;
        if (placeProviderObject != null) {
            placeProviderObject.imageReceiver.setVisible(true, true);
        }
        PhotoViewerProvider photoViewerProvider = this.placeProvider;
        PlaceProviderObject placeForPhoto = photoViewerProvider == null ? null : photoViewerProvider.getPlaceForPhoto(this.currentMessageObject, getFileLocation(this.currentFileLocation), this.currentIndex, false);
        this.currentPlaceObject = placeForPhoto;
        if (placeForPhoto != null) {
            placeForPhoto.imageReceiver.setVisible(false, true);
        }
    }

    public boolean openPhoto(MessageObject messageObject, ChatActivity chatActivity, long j, long j2, PhotoViewerProvider photoViewerProvider) {
        return openPhoto(messageObject, (TLRPC$FileLocation) null, (ImageLocation) null, (ImageLocation) null, (ArrayList<MessageObject>) null, (ArrayList<SecureDocument>) null, (ArrayList<Object>) null, 0, photoViewerProvider, chatActivity, j, j2, true, (PageBlocksAdapter) null, (Integer) null);
    }

    public boolean openPhoto(MessageObject messageObject, int i, ChatActivity chatActivity, long j, long j2, PhotoViewerProvider photoViewerProvider) {
        return openPhoto(messageObject, (TLRPC$FileLocation) null, (ImageLocation) null, (ImageLocation) null, (ArrayList<MessageObject>) null, (ArrayList<SecureDocument>) null, (ArrayList<Object>) null, 0, photoViewerProvider, chatActivity, j, j2, true, (PageBlocksAdapter) null, Integer.valueOf(i));
    }

    public boolean openPhoto(MessageObject messageObject, long j, long j2, PhotoViewerProvider photoViewerProvider, boolean z) {
        return openPhoto(messageObject, (TLRPC$FileLocation) null, (ImageLocation) null, (ImageLocation) null, (ArrayList<MessageObject>) null, (ArrayList<SecureDocument>) null, (ArrayList<Object>) null, 0, photoViewerProvider, (ChatActivity) null, j, j2, z, (PageBlocksAdapter) null, (Integer) null);
    }

    public boolean openPhoto(TLRPC$FileLocation tLRPC$FileLocation, PhotoViewerProvider photoViewerProvider) {
        return openPhoto((MessageObject) null, tLRPC$FileLocation, (ImageLocation) null, (ImageLocation) null, (ArrayList<MessageObject>) null, (ArrayList<SecureDocument>) null, (ArrayList<Object>) null, 0, photoViewerProvider, (ChatActivity) null, 0, 0, true, (PageBlocksAdapter) null, (Integer) null);
    }

    public boolean openPhotoWithVideo(TLRPC$FileLocation tLRPC$FileLocation, ImageLocation imageLocation, PhotoViewerProvider photoViewerProvider) {
        return openPhoto((MessageObject) null, tLRPC$FileLocation, (ImageLocation) null, imageLocation, (ArrayList<MessageObject>) null, (ArrayList<SecureDocument>) null, (ArrayList<Object>) null, 0, photoViewerProvider, (ChatActivity) null, 0, 0, true, (PageBlocksAdapter) null, (Integer) null);
    }

    public boolean openPhoto(TLRPC$FileLocation tLRPC$FileLocation, ImageLocation imageLocation, PhotoViewerProvider photoViewerProvider) {
        return openPhoto((MessageObject) null, tLRPC$FileLocation, imageLocation, (ImageLocation) null, (ArrayList<MessageObject>) null, (ArrayList<SecureDocument>) null, (ArrayList<Object>) null, 0, photoViewerProvider, (ChatActivity) null, 0, 0, true, (PageBlocksAdapter) null, (Integer) null);
    }

    public boolean openPhoto(ArrayList<MessageObject> arrayList, int i, long j, long j2, PhotoViewerProvider photoViewerProvider) {
        PhotoViewerProvider photoViewerProvider2 = photoViewerProvider;
        return openPhoto(arrayList.get(i), (TLRPC$FileLocation) null, (ImageLocation) null, (ImageLocation) null, arrayList, (ArrayList<SecureDocument>) null, (ArrayList<Object>) null, i, photoViewerProvider2, (ChatActivity) null, j, j2, true, (PageBlocksAdapter) null, (Integer) null);
    }

    public boolean openPhoto(ArrayList<SecureDocument> arrayList, int i, PhotoViewerProvider photoViewerProvider) {
        return openPhoto((MessageObject) null, (TLRPC$FileLocation) null, (ImageLocation) null, (ImageLocation) null, (ArrayList<MessageObject>) null, arrayList, (ArrayList<Object>) null, i, photoViewerProvider, (ChatActivity) null, 0, 0, true, (PageBlocksAdapter) null, (Integer) null);
    }

    public boolean openPhoto(int i, PageBlocksAdapter pageBlocksAdapter2, PhotoViewerProvider photoViewerProvider) {
        return openPhoto((MessageObject) null, (TLRPC$FileLocation) null, (ImageLocation) null, (ImageLocation) null, (ArrayList<MessageObject>) null, (ArrayList<SecureDocument>) null, (ArrayList<Object>) null, i, photoViewerProvider, (ChatActivity) null, 0, 0, true, pageBlocksAdapter2, (Integer) null);
    }

    public boolean openPhotoForSelect(ArrayList<Object> arrayList, int i, int i2, boolean z, PhotoViewerProvider photoViewerProvider, ChatActivity chatActivity) {
        int i3 = i2;
        this.isDocumentsPicker = z;
        ImageView imageView = this.pickerViewSendButton;
        if (imageView != null) {
            FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) imageView.getLayoutParams();
            if (i3 == 4 || i3 == 5) {
                this.pickerViewSendButton.setImageResource(NUM);
                layoutParams.bottomMargin = AndroidUtilities.dp(19.0f);
            } else if (i3 == 1 || i3 == 3 || i3 == 10) {
                this.pickerViewSendButton.setImageResource(NUM);
                this.pickerViewSendButton.setPadding(0, AndroidUtilities.dp(1.0f), 0, 0);
                layoutParams.bottomMargin = AndroidUtilities.dp(19.0f);
            } else {
                this.pickerViewSendButton.setImageResource(NUM);
                layoutParams.bottomMargin = AndroidUtilities.dp(14.0f);
            }
            this.pickerViewSendButton.setLayoutParams(layoutParams);
        }
        if (this.sendPhotoType == 1 || i3 != 1 || !this.isVisible) {
            PhotoViewerProvider photoViewerProvider2 = photoViewerProvider;
            this.sendPhotoType = i3;
            return openPhoto((MessageObject) null, (TLRPC$FileLocation) null, (ImageLocation) null, (ImageLocation) null, (ArrayList<MessageObject>) null, (ArrayList<SecureDocument>) null, arrayList, i, photoViewerProvider, chatActivity, 0, 0, true, (PageBlocksAdapter) null, (Integer) null);
        }
        this.sendPhotoType = i3;
        this.doneButtonPressed = false;
        this.actionBar.setTitle(LocaleController.formatString("Of", NUM, 1, 1));
        this.placeProvider = photoViewerProvider;
        this.mergeDialogId = 0;
        this.currentDialogId = 0;
        this.selectedPhotosAdapter.notifyDataSetChanged();
        this.pageBlocksAdapter = null;
        if (this.velocityTracker == null) {
            this.velocityTracker = VelocityTracker.obtain();
        }
        this.isVisible = true;
        togglePhotosListView(false, false);
        this.openedFullScreenVideo = false;
        createCropView();
        toggleActionBar(false, false);
        this.seekToProgressPending2 = 0.0f;
        this.skipFirstBufferingProgress = false;
        this.playerInjected = false;
        makeFocusable();
        this.backgroundDrawable.setAlpha(255);
        this.containerView.setAlpha(1.0f);
        onPhotoShow((MessageObject) null, (TLRPC$FileLocation) null, (ImageLocation) null, (ImageLocation) null, (ArrayList<MessageObject>) null, (ArrayList<SecureDocument>) null, arrayList, i, (PlaceProviderObject) null);
        initCropView();
        setCropBitmap();
        return true;
    }

    private void openCurrentPhotoInPaintModeForSelect() {
        boolean z;
        MessageObject messageObject;
        boolean z2;
        File file;
        if (canSendMediaToParentChatActivity()) {
            MessageObject messageObject2 = this.currentMessageObject;
            File file2 = null;
            if (messageObject2 != null) {
                boolean z3 = messageObject2.canEditMedia() && !this.currentMessageObject.isDocument();
                boolean isVideo = this.currentMessageObject.isVideo();
                if (!TextUtils.isEmpty(this.currentMessageObject.messageOwner.attachPath)) {
                    File file3 = new File(this.currentMessageObject.messageOwner.attachPath);
                    if (file3.exists()) {
                        file2 = file3;
                    }
                }
                if (file2 == null) {
                    file2 = FileLoader.getInstance(this.currentAccount).getPathToMessage(this.currentMessageObject.messageOwner);
                }
                messageObject = messageObject2;
                file = file2;
                z = z3;
                z2 = isVideo;
            } else {
                file = null;
                messageObject = null;
                z2 = false;
                z = false;
            }
            if (file == null || !file.exists()) {
                showDownloadAlert();
                return;
            }
            this.savedState = new SavedState(this.currentIndex, new ArrayList(this.imagesArr), this.placeProvider);
            ActionBarToggleParams enableStatusBarAnimation = new ActionBarToggleParams().enableStatusBarAnimation(false);
            toggleActionBar(false, true, enableStatusBarAnimation);
            AndroidUtilities.runOnUIThread(new PhotoViewer$$ExternalSyntheticLambda59(this, file, z2, messageObject, z), (long) enableStatusBarAnimation.animationDuration);
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$openCurrentPhotoInPaintModeForSelect$71(File file, boolean z, MessageObject messageObject, boolean z2) {
        int i;
        try {
            int attributeInt = new ExifInterface(file.getAbsolutePath()).getAttributeInt("Orientation", 1);
            i = attributeInt != 3 ? attributeInt != 6 ? attributeInt != 8 ? 0 : 270 : 90 : 180;
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            i = 0;
        }
        int i2 = this.lastImageId;
        this.lastImageId = i2 - 1;
        MediaController.PhotoEntry photoEntry = new MediaController.PhotoEntry(0, i2, 0, file.getAbsolutePath(), i, z, 0, 0, 0);
        this.sendPhotoType = 2;
        this.doneButtonPressed = false;
        final PhotoViewerProvider photoViewerProvider = this.placeProvider;
        final MessageObject messageObject2 = messageObject;
        final MediaController.PhotoEntry photoEntry2 = photoEntry;
        final boolean z3 = z2;
        this.placeProvider = new EmptyPhotoViewerProvider() {
            private final ImageReceiver.BitmapHolder thumbHolder;

            public boolean canCaptureMorePhotos() {
                return false;
            }

            {
                this.thumbHolder = PhotoViewer.this.centerImage.getBitmapSafe();
            }

            public PlaceProviderObject getPlaceForPhoto(MessageObject messageObject, TLRPC$FileLocation tLRPC$FileLocation, int i, boolean z) {
                PhotoViewerProvider photoViewerProvider = photoViewerProvider;
                if (photoViewerProvider != null) {
                    return photoViewerProvider.getPlaceForPhoto(messageObject2, (TLRPC$FileLocation) null, 0, z);
                }
                return null;
            }

            public ImageReceiver.BitmapHolder getThumbForPhoto(MessageObject messageObject, TLRPC$FileLocation tLRPC$FileLocation, int i) {
                return this.thumbHolder;
            }

            public void sendButtonPressed(int i, VideoEditedInfo videoEditedInfo, boolean z, int i2, boolean z2) {
                sendMedia(videoEditedInfo, z, i2, false, z2);
            }

            public void replaceButtonPressed(int i, VideoEditedInfo videoEditedInfo) {
                MediaController.PhotoEntry photoEntry = photoEntry2;
                if (photoEntry.isCropped || photoEntry.isPainted || photoEntry.isFiltered || videoEditedInfo != null || !TextUtils.isEmpty(photoEntry.caption)) {
                    sendMedia(videoEditedInfo, false, 0, true, false);
                }
            }

            public boolean canReplace(int i) {
                return photoViewerProvider != null && z3;
            }

            public MessageObject getEditingMessageObject() {
                return messageObject2;
            }

            private void sendMedia(VideoEditedInfo videoEditedInfo, boolean z, int i, boolean z2, boolean z3) {
                if (PhotoViewer.this.parentChatActivity != null) {
                    MessageObject messageObject = z2 ? messageObject2 : null;
                    if (messageObject != null && !TextUtils.isEmpty(photoEntry2.caption)) {
                        MediaController.PhotoEntry photoEntry = photoEntry2;
                        messageObject.editingMessage = photoEntry.caption;
                        messageObject.editingMessageEntities = photoEntry.entities;
                    }
                    MediaController.PhotoEntry photoEntry2 = photoEntry2;
                    if (photoEntry2.isVideo) {
                        if (videoEditedInfo != null) {
                            AccountInstance accountInstance = PhotoViewer.this.parentChatActivity.getAccountInstance();
                            String str = photoEntry2.path;
                            long dialogId = PhotoViewer.this.parentChatActivity.getDialogId();
                            MessageObject replyMessage = PhotoViewer.this.parentChatActivity.getReplyMessage();
                            MessageObject threadMessage = PhotoViewer.this.parentChatActivity.getThreadMessage();
                            MediaController.PhotoEntry photoEntry3 = photoEntry2;
                            SendMessagesHelper.prepareSendingVideo(accountInstance, str, videoEditedInfo, dialogId, replyMessage, threadMessage, photoEntry3.caption, photoEntry3.entities, photoEntry3.ttl, messageObject, z, i, z3);
                            return;
                        }
                        AccountInstance accountInstance2 = PhotoViewer.this.parentChatActivity.getAccountInstance();
                        String str2 = photoEntry2.path;
                        long dialogId2 = PhotoViewer.this.parentChatActivity.getDialogId();
                        MessageObject replyMessage2 = PhotoViewer.this.parentChatActivity.getReplyMessage();
                        MessageObject threadMessage2 = PhotoViewer.this.parentChatActivity.getThreadMessage();
                        MediaController.PhotoEntry photoEntry4 = photoEntry2;
                        SendMessagesHelper.prepareSendingVideo(accountInstance2, str2, (VideoEditedInfo) null, dialogId2, replyMessage2, threadMessage2, photoEntry4.caption, photoEntry4.entities, photoEntry4.ttl, messageObject, z, i, z3);
                    } else if (photoEntry2.imagePath != null) {
                        AccountInstance accountInstance3 = PhotoViewer.this.parentChatActivity.getAccountInstance();
                        MediaController.PhotoEntry photoEntry5 = photoEntry2;
                        String str3 = photoEntry5.imagePath;
                        String str4 = photoEntry5.thumbPath;
                        long dialogId3 = PhotoViewer.this.parentChatActivity.getDialogId();
                        MessageObject replyMessage3 = PhotoViewer.this.parentChatActivity.getReplyMessage();
                        MessageObject threadMessage3 = PhotoViewer.this.parentChatActivity.getThreadMessage();
                        MediaController.PhotoEntry photoEntry6 = photoEntry2;
                        SendMessagesHelper.prepareSendingPhoto(accountInstance3, str3, str4, (Uri) null, dialogId3, replyMessage3, threadMessage3, photoEntry6.caption, photoEntry6.entities, photoEntry6.stickers, (InputContentInfoCompat) null, photoEntry6.ttl, messageObject, videoEditedInfo, z, i, z3);
                    } else if (photoEntry2.path != null) {
                        AccountInstance accountInstance4 = PhotoViewer.this.parentChatActivity.getAccountInstance();
                        MediaController.PhotoEntry photoEntry7 = photoEntry2;
                        String str5 = photoEntry7.path;
                        String str6 = photoEntry7.thumbPath;
                        long dialogId4 = PhotoViewer.this.parentChatActivity.getDialogId();
                        MessageObject replyMessage4 = PhotoViewer.this.parentChatActivity.getReplyMessage();
                        MessageObject threadMessage4 = PhotoViewer.this.parentChatActivity.getThreadMessage();
                        MediaController.PhotoEntry photoEntry8 = photoEntry2;
                        SendMessagesHelper.prepareSendingPhoto(accountInstance4, str5, str6, (Uri) null, dialogId4, replyMessage4, threadMessage4, photoEntry8.caption, photoEntry8.entities, photoEntry8.stickers, (InputContentInfoCompat) null, photoEntry8.ttl, messageObject, videoEditedInfo, z, i, z3);
                    }
                }
            }
        };
        this.selectedPhotosAdapter.notifyDataSetChanged();
        if (this.velocityTracker == null) {
            this.velocityTracker = VelocityTracker.obtain();
        }
        togglePhotosListView(false, false);
        toggleActionBar(true, false);
        ChatActivity chatActivity = this.parentChatActivity;
        if (chatActivity == null || chatActivity.getChatActivityEnterView() == null || !this.parentChatActivity.isKeyboardVisible()) {
            makeFocusable();
        } else {
            this.parentChatActivity.getChatActivityEnterView().closeKeyboard();
        }
        this.backgroundDrawable.setAlpha(255);
        this.containerView.setAlpha(1.0f);
        onPhotoShow((MessageObject) null, (TLRPC$FileLocation) null, (ImageLocation) null, (ImageLocation) null, (ArrayList<MessageObject>) null, (ArrayList<SecureDocument>) null, Collections.singletonList(photoEntry), 0, (PlaceProviderObject) null);
        float f = 154.0f;
        this.pickerView.setTranslationY((float) AndroidUtilities.dp(this.isCurrentVideo ? 154.0f : 96.0f));
        this.pickerViewSendButton.setTranslationY((float) AndroidUtilities.dp(this.isCurrentVideo ? 154.0f : 96.0f));
        ActionBar actionBar2 = this.actionBar;
        actionBar2.setTranslationY((float) (-actionBar2.getHeight()));
        CaptionTextViewSwitcher captionTextViewSwitcher2 = this.captionTextViewSwitcher;
        if (!this.isCurrentVideo) {
            f = 96.0f;
        }
        captionTextViewSwitcher2.setTranslationY((float) AndroidUtilities.dp(f));
        createPaintView();
        switchToPaintMode();
    }

    private boolean checkAnimation() {
        if (this.animationInProgress != 0 && Math.abs(this.transitionAnimationStartTime - System.currentTimeMillis()) >= 500) {
            Runnable runnable = this.animationEndRunnable;
            if (runnable != null) {
                runnable.run();
                this.animationEndRunnable = null;
            }
            this.animationInProgress = 0;
        }
        if (this.animationInProgress != 0) {
            return true;
        }
        return false;
    }

    /* access modifiers changed from: private */
    public void setCropBitmap() {
        VideoEditTextureView videoEditTextureView;
        if (!this.cropInitied && this.sendPhotoType == 1) {
            if (!this.isCurrentVideo || ((videoEditTextureView = (VideoEditTextureView) this.videoTextureView) != null && videoEditTextureView.getVideoWidth() > 0 && videoEditTextureView.getVideoHeight() > 0)) {
                this.cropInitied = true;
                Bitmap bitmap = this.centerImage.getBitmap();
                int orientation = this.centerImage.getOrientation();
                if (bitmap == null) {
                    bitmap = this.animatingImageView.getBitmap();
                    orientation = this.animatingImageView.getOrientation();
                }
                Bitmap bitmap2 = bitmap;
                int i = orientation;
                if (bitmap2 != null || this.videoTextureView != null) {
                    this.photoCropView.setBitmap(bitmap2, i, false, false, this.paintingOverlay, this.cropTransform, this.isCurrentVideo ? (VideoEditTextureView) this.videoTextureView : null, this.editState.cropState);
                }
            }
        }
    }

    private void initCropView() {
        PhotoCropView photoCropView2 = this.photoCropView;
        if (photoCropView2 != null) {
            photoCropView2.setBitmap((Bitmap) null, 0, false, false, (PaintingOverlay) null, (CropTransform) null, (VideoEditTextureView) null, (MediaController.CropState) null);
            if (this.sendPhotoType == 1) {
                this.photoCropView.onAppear();
                this.photoCropView.setVisibility(0);
                this.photoCropView.setAlpha(1.0f);
                this.photoCropView.onAppeared();
                this.padImageForHorizontalInsets = true;
            }
        }
    }

    /* JADX WARNING: Failed to process nested try/catch */
    /* JADX WARNING: Missing exception handler attribute for start block: B:18:0x004f */
    /* JADX WARNING: Removed duplicated region for block: B:115:0x0352  */
    /* JADX WARNING: Removed duplicated region for block: B:130:0x03bc  */
    /* JADX WARNING: Removed duplicated region for block: B:21:0x005b A[Catch:{ Exception -> 0x03d9 }] */
    /* JADX WARNING: Removed duplicated region for block: B:22:0x0061 A[Catch:{ Exception -> 0x03d9 }] */
    /* JADX WARNING: Removed duplicated region for block: B:41:0x00b5 A[Catch:{ Exception -> 0x03d9 }] */
    /* JADX WARNING: Removed duplicated region for block: B:42:0x00b8 A[Catch:{ Exception -> 0x03d9 }] */
    /* JADX WARNING: Removed duplicated region for block: B:46:0x00de  */
    /* JADX WARNING: Removed duplicated region for block: B:47:0x00e0  */
    /* JADX WARNING: Removed duplicated region for block: B:50:0x0186  */
    /* JADX WARNING: Removed duplicated region for block: B:53:0x0197  */
    /* JADX WARNING: Removed duplicated region for block: B:54:0x019b  */
    /* JADX WARNING: Removed duplicated region for block: B:60:0x01be  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public boolean openPhoto(org.telegram.messenger.MessageObject r19, org.telegram.tgnet.TLRPC$FileLocation r20, org.telegram.messenger.ImageLocation r21, org.telegram.messenger.ImageLocation r22, java.util.ArrayList<org.telegram.messenger.MessageObject> r23, java.util.ArrayList<org.telegram.messenger.SecureDocument> r24, java.util.ArrayList<java.lang.Object> r25, int r26, org.telegram.ui.PhotoViewer.PhotoViewerProvider r27, org.telegram.ui.ChatActivity r28, long r29, long r31, boolean r33, org.telegram.ui.PhotoViewer.PageBlocksAdapter r34, java.lang.Integer r35) {
        /*
            r18 = this;
            r12 = r18
            r0 = r19
            r3 = r20
            r11 = r27
            r1 = r28
            r13 = r34
            r14 = r35
            android.app.Activity r2 = r12.parentActivity
            r15 = 0
            if (r2 == 0) goto L_0x03dd
            boolean r2 = r12.isVisible
            if (r2 != 0) goto L_0x03dd
            if (r11 != 0) goto L_0x001f
            boolean r2 = r18.checkAnimation()
            if (r2 != 0) goto L_0x03dd
        L_0x001f:
            if (r0 != 0) goto L_0x002f
            if (r3 != 0) goto L_0x002f
            if (r23 != 0) goto L_0x002f
            if (r25 != 0) goto L_0x002f
            if (r24 != 0) goto L_0x002f
            if (r21 != 0) goto L_0x002f
            if (r13 != 0) goto L_0x002f
            goto L_0x03dd
        L_0x002f:
            r10 = 1
            r9 = r26
            org.telegram.ui.PhotoViewer$PlaceProviderObject r8 = r11.getPlaceForPhoto(r0, r3, r9, r10)
            r2 = 0
            r12.lastInsets = r2
            android.app.Activity r4 = r12.parentActivity
            java.lang.String r5 = "window"
            java.lang.Object r4 = r4.getSystemService(r5)
            android.view.WindowManager r4 = (android.view.WindowManager) r4
            boolean r5 = r12.attachedToWindow
            if (r5 == 0) goto L_0x004f
            android.widget.FrameLayout r5 = r12.windowView     // Catch:{ Exception -> 0x004f }
            r4.removeView(r5)     // Catch:{ Exception -> 0x004f }
            r18.onHideView()     // Catch:{ Exception -> 0x004f }
        L_0x004f:
            android.view.WindowManager$LayoutParams r5 = r12.windowLayoutParams     // Catch:{ Exception -> 0x03d9 }
            r6 = 99
            r5.type = r6     // Catch:{ Exception -> 0x03d9 }
            int r6 = android.os.Build.VERSION.SDK_INT     // Catch:{ Exception -> 0x03d9 }
            r7 = 21
            if (r6 < r7) goto L_0x0061
            r6 = -2147286784(0xfffffffvar_, float:-2.75865E-40)
            r5.flags = r6     // Catch:{ Exception -> 0x03d9 }
            goto L_0x0065
        L_0x0061:
            r6 = 131072(0x20000, float:1.83671E-40)
            r5.flags = r6     // Catch:{ Exception -> 0x03d9 }
        L_0x0065:
            if (r1 == 0) goto L_0x006d
            org.telegram.tgnet.TLRPC$EncryptedChat r5 = r28.getCurrentEncryptedChat()     // Catch:{ Exception -> 0x03d9 }
            if (r5 != 0) goto L_0x009e
        L_0x006d:
            long r5 = r12.avatarsDialogId     // Catch:{ Exception -> 0x03d9 }
            r16 = 0
            int r7 = (r5 > r16 ? 1 : (r5 == r16 ? 0 : -1))
            if (r7 == 0) goto L_0x0084
            int r5 = r12.currentAccount     // Catch:{ Exception -> 0x03d9 }
            org.telegram.messenger.MessagesController r5 = org.telegram.messenger.MessagesController.getInstance(r5)     // Catch:{ Exception -> 0x03d9 }
            long r6 = r12.avatarsDialogId     // Catch:{ Exception -> 0x03d9 }
            long r6 = -r6
            boolean r5 = r5.isChatNoForwards((long) r6)     // Catch:{ Exception -> 0x03d9 }
            if (r5 != 0) goto L_0x009e
        L_0x0084:
            if (r0 == 0) goto L_0x00a7
            int r5 = r12.currentAccount     // Catch:{ Exception -> 0x03d9 }
            org.telegram.messenger.MessagesController r5 = org.telegram.messenger.MessagesController.getInstance(r5)     // Catch:{ Exception -> 0x03d9 }
            long r6 = r19.getChatId()     // Catch:{ Exception -> 0x03d9 }
            boolean r5 = r5.isChatNoForwards((long) r6)     // Catch:{ Exception -> 0x03d9 }
            if (r5 != 0) goto L_0x009e
            org.telegram.tgnet.TLRPC$Message r5 = r0.messageOwner     // Catch:{ Exception -> 0x03d9 }
            if (r5 == 0) goto L_0x00a7
            boolean r5 = r5.noforwards     // Catch:{ Exception -> 0x03d9 }
            if (r5 == 0) goto L_0x00a7
        L_0x009e:
            android.view.WindowManager$LayoutParams r5 = r12.windowLayoutParams     // Catch:{ Exception -> 0x03d9 }
            int r6 = r5.flags     // Catch:{ Exception -> 0x03d9 }
            r6 = r6 | 8192(0x2000, float:1.14794E-41)
            r5.flags = r6     // Catch:{ Exception -> 0x03d9 }
            goto L_0x00af
        L_0x00a7:
            android.view.WindowManager$LayoutParams r5 = r12.windowLayoutParams     // Catch:{ Exception -> 0x03d9 }
            int r6 = r5.flags     // Catch:{ Exception -> 0x03d9 }
            r6 = r6 & -8193(0xffffffffffffdfff, float:NaN)
            r5.flags = r6     // Catch:{ Exception -> 0x03d9 }
        L_0x00af:
            android.view.WindowManager$LayoutParams r5 = r12.windowLayoutParams     // Catch:{ Exception -> 0x03d9 }
            boolean r6 = r12.useSmoothKeyboard     // Catch:{ Exception -> 0x03d9 }
            if (r6 == 0) goto L_0x00b8
            r6 = 32
            goto L_0x00ba
        L_0x00b8:
            r6 = 16
        L_0x00ba:
            r6 = r6 | 256(0x100, float:3.59E-43)
            r5.softInputMode = r6     // Catch:{ Exception -> 0x03d9 }
            android.widget.FrameLayout r5 = r12.windowView     // Catch:{ Exception -> 0x03d9 }
            r5.setFocusable(r15)     // Catch:{ Exception -> 0x03d9 }
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r5 = r12.containerView     // Catch:{ Exception -> 0x03d9 }
            r5.setFocusable(r15)     // Catch:{ Exception -> 0x03d9 }
            android.widget.FrameLayout r5 = r12.windowView     // Catch:{ Exception -> 0x03d9 }
            android.view.WindowManager$LayoutParams r6 = r12.windowLayoutParams     // Catch:{ Exception -> 0x03d9 }
            r4.addView(r5, r6)     // Catch:{ Exception -> 0x03d9 }
            r18.onShowView()     // Catch:{ Exception -> 0x03d9 }
            r12.hasCaptionForAllMedia = r15
            r12.doneButtonPressed = r15
            r12.allowShowFullscreenButton = r10
            r12.parentChatActivity = r1
            r12.lastTitle = r2
            if (r14 == 0) goto L_0x00e0
            r1 = 1
            goto L_0x00e1
        L_0x00e0:
            r1 = 0
        L_0x00e1:
            r12.isEmbedVideo = r1
            org.telegram.ui.ActionBar.ActionBar r1 = r12.actionBar
            r4 = 2131627129(0x7f0e0CLASSNAME, float:1.8881514E38)
            r5 = 2
            java.lang.Object[] r5 = new java.lang.Object[r5]
            java.lang.Integer r6 = java.lang.Integer.valueOf(r10)
            r5[r15] = r6
            java.lang.Integer r6 = java.lang.Integer.valueOf(r10)
            r5[r10] = r6
            java.lang.String r6 = "Of"
            java.lang.String r4 = org.telegram.messenger.LocaleController.formatString(r6, r4, r5)
            r1.setTitle(r4)
            org.telegram.ui.ActionBar.ActionBar r1 = r12.actionBar
            r1.setTitleScrollNonFitText(r15)
            int r1 = r12.currentAccount
            org.telegram.messenger.NotificationCenter r1 = org.telegram.messenger.NotificationCenter.getInstance(r1)
            int r4 = org.telegram.messenger.NotificationCenter.fileLoadFailed
            r1.addObserver(r12, r4)
            int r1 = r12.currentAccount
            org.telegram.messenger.NotificationCenter r1 = org.telegram.messenger.NotificationCenter.getInstance(r1)
            int r4 = org.telegram.messenger.NotificationCenter.fileLoaded
            r1.addObserver(r12, r4)
            int r1 = r12.currentAccount
            org.telegram.messenger.NotificationCenter r1 = org.telegram.messenger.NotificationCenter.getInstance(r1)
            int r4 = org.telegram.messenger.NotificationCenter.fileLoadProgressChanged
            r1.addObserver(r12, r4)
            int r1 = r12.currentAccount
            org.telegram.messenger.NotificationCenter r1 = org.telegram.messenger.NotificationCenter.getInstance(r1)
            int r4 = org.telegram.messenger.NotificationCenter.mediaCountDidLoad
            r1.addObserver(r12, r4)
            int r1 = r12.currentAccount
            org.telegram.messenger.NotificationCenter r1 = org.telegram.messenger.NotificationCenter.getInstance(r1)
            int r4 = org.telegram.messenger.NotificationCenter.mediaDidLoad
            r1.addObserver(r12, r4)
            int r1 = r12.currentAccount
            org.telegram.messenger.NotificationCenter r1 = org.telegram.messenger.NotificationCenter.getInstance(r1)
            int r4 = org.telegram.messenger.NotificationCenter.dialogPhotosLoaded
            r1.addObserver(r12, r4)
            int r1 = r12.currentAccount
            org.telegram.messenger.NotificationCenter r1 = org.telegram.messenger.NotificationCenter.getInstance(r1)
            int r4 = org.telegram.messenger.NotificationCenter.messagesDeleted
            r1.addObserver(r12, r4)
            org.telegram.messenger.NotificationCenter r1 = org.telegram.messenger.NotificationCenter.getGlobalInstance()
            int r4 = org.telegram.messenger.NotificationCenter.emojiLoaded
            r1.addObserver(r12, r4)
            int r1 = r12.currentAccount
            org.telegram.messenger.NotificationCenter r1 = org.telegram.messenger.NotificationCenter.getInstance(r1)
            int r4 = org.telegram.messenger.NotificationCenter.filePreparingFailed
            r1.addObserver(r12, r4)
            int r1 = r12.currentAccount
            org.telegram.messenger.NotificationCenter r1 = org.telegram.messenger.NotificationCenter.getInstance(r1)
            int r4 = org.telegram.messenger.NotificationCenter.fileNewChunkAvailable
            r1.addObserver(r12, r4)
            r12.placeProvider = r11
            r4 = r31
            r12.mergeDialogId = r4
            r4 = r29
            r12.currentDialogId = r4
            org.telegram.ui.PhotoViewer$ListAdapter r1 = r12.selectedPhotosAdapter
            r1.notifyDataSetChanged()
            r12.pageBlocksAdapter = r13
            android.view.VelocityTracker r1 = r12.velocityTracker
            if (r1 != 0) goto L_0x018c
            android.view.VelocityTracker r1 = android.view.VelocityTracker.obtain()
            r12.velocityTracker = r1
        L_0x018c:
            r12.isVisible = r10
            r12.togglePhotosListView(r15, r15)
            r1 = r33 ^ 1
            r12.openedFullScreenVideo = r1
            if (r1 == 0) goto L_0x019b
            r12.toggleActionBar(r15, r15)
            goto L_0x01a9
        L_0x019b:
            int r1 = r12.sendPhotoType
            if (r1 != r10) goto L_0x01a6
            r18.createCropView()
            r12.toggleActionBar(r15, r15)
            goto L_0x01a9
        L_0x01a6:
            r12.toggleActionBar(r10, r15)
        L_0x01a9:
            android.widget.FrameLayout r1 = r12.windowView
            r1.setClipChildren(r15)
            android.view.View r1 = r12.navigationBar
            r1.setVisibility(r15)
            r7 = 0
            r12.seekToProgressPending2 = r7
            r12.skipFirstBufferingProgress = r15
            r12.playerInjected = r15
            r6 = 1065353216(0x3var_, float:1.0)
            if (r8 == 0) goto L_0x0352
            r12.disableShowCheck = r10
            r12.animationInProgress = r10
            if (r0 == 0) goto L_0x0233
            boolean r1 = r8.allowTakeAnimation
            if (r1 == 0) goto L_0x01cf
            org.telegram.messenger.ImageReceiver r1 = r8.imageReceiver
            org.telegram.ui.Components.AnimatedFileDrawable r1 = r1.getAnimation()
            goto L_0x01d0
        L_0x01cf:
            r1 = r2
        L_0x01d0:
            r12.currentAnimation = r1
            if (r1 == 0) goto L_0x023d
            boolean r1 = r19.isVideo()
            if (r1 == 0) goto L_0x0226
            org.telegram.messenger.ImageReceiver r1 = r8.imageReceiver
            r1.setAllowStartAnimation(r15)
            org.telegram.messenger.ImageReceiver r1 = r8.imageReceiver
            r1.stopAnimation()
            org.telegram.messenger.MediaController r1 = org.telegram.messenger.MediaController.getInstance()
            boolean r1 = r1.isPlayingMessage(r0)
            if (r1 == 0) goto L_0x01f2
            float r1 = r0.audioProgress
            r12.seekToProgressPending2 = r1
        L_0x01f2:
            org.telegram.ui.Components.VideoPlayer r1 = r12.injectingVideoPlayer
            if (r1 != 0) goto L_0x0220
            int r1 = r0.currentAccount
            org.telegram.messenger.FileLoader r1 = org.telegram.messenger.FileLoader.getInstance(r1)
            org.telegram.tgnet.TLRPC$Document r4 = r19.getDocument()
            boolean r1 = r1.isLoadingVideo(r4, r10)
            if (r1 != 0) goto L_0x0220
            org.telegram.ui.Components.AnimatedFileDrawable r1 = r12.currentAnimation
            boolean r1 = r1.hasBitmap()
            if (r1 != 0) goto L_0x021e
            int r1 = r0.currentAccount
            org.telegram.messenger.FileLoader r1 = org.telegram.messenger.FileLoader.getInstance(r1)
            org.telegram.tgnet.TLRPC$Document r4 = r19.getDocument()
            boolean r1 = r1.isLoadingVideo(r4, r15)
            if (r1 != 0) goto L_0x0220
        L_0x021e:
            r1 = 1
            goto L_0x0221
        L_0x0220:
            r1 = 0
        L_0x0221:
            r12.skipFirstBufferingProgress = r1
            r12.currentAnimation = r2
            goto L_0x023d
        L_0x0226:
            java.util.ArrayList r1 = r0.getWebPagePhotos(r2, r2)
            int r1 = r1.size()
            if (r1 <= r10) goto L_0x023d
            r12.currentAnimation = r2
            goto L_0x023d
        L_0x0233:
            if (r13 == 0) goto L_0x023d
            org.telegram.messenger.ImageReceiver r1 = r8.imageReceiver
            org.telegram.ui.Components.AnimatedFileDrawable r1 = r1.getAnimation()
            r12.currentAnimation = r1
        L_0x023d:
            r1 = r18
            r2 = r19
            r3 = r20
            r4 = r21
            r5 = r22
            r0 = 1065353216(0x3var_, float:1.0)
            r6 = r23
            r0 = 0
            r7 = r24
            r28 = r8
            r8 = r25
            r9 = r26
            r0 = 1
            r10 = r28
            r1.onPhotoShow(r2, r3, r4, r5, r6, r7, r8, r9, r10)
            int r1 = r12.sendPhotoType
            if (r1 != r0) goto L_0x026e
            org.telegram.ui.Components.PhotoCropView r1 = r12.photoCropView
            r1.setVisibility(r15)
            org.telegram.ui.Components.PhotoCropView r1 = r12.photoCropView
            r2 = 0
            r1.setAlpha(r2)
            org.telegram.ui.Components.PhotoCropView r1 = r12.photoCropView
            r1.setFreeform(r15)
        L_0x026e:
            r10 = r28
            org.telegram.messenger.ImageReceiver r1 = r10.imageReceiver
            android.graphics.RectF r1 = r1.getDrawRegion()
            float r5 = r1.left
            float r7 = r1.top
            org.telegram.messenger.ImageReceiver r2 = r10.imageReceiver
            int r2 = r2.getOrientation()
            org.telegram.messenger.ImageReceiver r3 = r10.imageReceiver
            int r3 = r3.getAnimatedOrientation()
            if (r3 == 0) goto L_0x0289
            r2 = r3
        L_0x0289:
            org.telegram.ui.Components.ClippingImageView[] r3 = r12.getAnimatingImageViews(r10)
            r4 = 0
        L_0x028e:
            int r6 = r3.length
            if (r4 >= r6) goto L_0x02b3
            r6 = r3[r4]
            float[][] r8 = r12.animationValues
            r6.setAnimationValues(r8)
            r6 = r3[r4]
            r6.setVisibility(r15)
            r6 = r3[r4]
            int[] r8 = r10.radius
            r6.setRadius(r8)
            r6 = r3[r4]
            r6.setOrientation(r2)
            r6 = r3[r4]
            org.telegram.messenger.ImageReceiver$BitmapHolder r8 = r10.thumb
            r6.setImageBitmap(r8)
            int r4 = r4 + 1
            goto L_0x028e
        L_0x02b3:
            r18.initCropView()
            int r2 = r12.sendPhotoType
            if (r2 != r0) goto L_0x02c1
            org.telegram.ui.Components.PhotoCropView r2 = r12.photoCropView
            r4 = 1065353216(0x3var_, float:1.0)
            r2.setAspectRatio(r4)
        L_0x02c1:
            org.telegram.ui.Components.ClippingImageView r2 = r12.animatingImageView
            android.view.ViewGroup$LayoutParams r4 = r2.getLayoutParams()
            float r2 = r1.width()
            int r2 = (int) r2
            r4.width = r2
            float r2 = r1.height()
            int r2 = (int) r2
            r4.height = r2
            int r6 = r4.width
            r8 = 100
            if (r6 > 0) goto L_0x02dd
            r4.width = r8
        L_0x02dd:
            if (r2 > 0) goto L_0x02e1
            r4.height = r8
        L_0x02e1:
            int r2 = r3.length
            if (r15 >= r2) goto L_0x0336
            int r2 = r3.length
            if (r2 <= r0) goto L_0x02f0
            r2 = r3[r15]
            r6 = 0
            r2.setAlpha(r6)
            r8 = 1065353216(0x3var_, float:1.0)
            goto L_0x02f8
        L_0x02f0:
            r6 = 0
            r2 = r3[r15]
            r8 = 1065353216(0x3var_, float:1.0)
            r2.setAlpha(r8)
        L_0x02f8:
            r2 = r3[r15]
            r2.setPivotX(r6)
            r2 = r3[r15]
            r2.setPivotY(r6)
            r2 = r3[r15]
            float r9 = r10.scale
            r2.setScaleX(r9)
            r2 = r3[r15]
            float r9 = r10.scale
            r2.setScaleY(r9)
            r2 = r3[r15]
            int r9 = r10.viewX
            float r9 = (float) r9
            float r6 = r1.left
            float r8 = r10.scale
            float r6 = r6 * r8
            float r9 = r9 + r6
            r2.setTranslationX(r9)
            r2 = r3[r15]
            int r6 = r10.viewY
            float r6 = (float) r6
            float r8 = r1.top
            float r9 = r10.scale
            float r8 = r8 * r9
            float r6 = r6 + r8
            r2.setTranslationY(r6)
            r2 = r3[r15]
            r2.setLayoutParams(r4)
            int r15 = r15 + 1
            goto L_0x02e1
        L_0x0336:
            android.widget.FrameLayout r1 = r12.windowView
            android.view.ViewTreeObserver r15 = r1.getViewTreeObserver()
            org.telegram.ui.PhotoViewer$69 r9 = new org.telegram.ui.PhotoViewer$69
            r1 = r9
            r2 = r18
            r6 = r10
            r8 = r34
            r13 = r9
            r9 = r25
            r10 = r35
            r11 = r27
            r1.<init>(r3, r4, r5, r6, r7, r8, r9, r10, r11)
            r15.addOnPreDrawListener(r13)
            goto L_0x03ac
        L_0x0352:
            r10 = r8
            r0 = 1
            r1 = 1065353216(0x3var_, float:1.0)
            if (r25 == 0) goto L_0x036a
            int r2 = r12.sendPhotoType
            r4 = 3
            if (r2 == r4) goto L_0x036a
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r2 = r12.placeProvider
            if (r2 == 0) goto L_0x0367
            boolean r2 = r2.closeKeyboard()
            if (r2 != 0) goto L_0x036a
        L_0x0367:
            r18.makeFocusable()
        L_0x036a:
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r2 = r12.containerView
            r2.setAlpha(r1)
            r1 = r18
            r2 = r19
            r3 = r20
            r4 = r21
            r5 = r22
            r6 = r23
            r7 = r24
            r8 = r25
            r9 = r26
            r1.onPhotoShow(r2, r3, r4, r5, r6, r7, r8, r9, r10)
            r18.initCropView()
            r18.setCropBitmap()
            org.telegram.ui.ChatActivity r1 = r12.parentChatActivity
            if (r1 == 0) goto L_0x039e
            org.telegram.ui.Components.UndoView r1 = r1.getUndoView()
            r1.hide(r15, r0)
            org.telegram.ui.ChatActivity r1 = r12.parentChatActivity
            android.view.View r1 = r1.getFragmentView()
            r1.invalidate()
        L_0x039e:
            android.widget.FrameLayout r1 = r12.windowView
            android.view.ViewTreeObserver r1 = r1.getViewTreeObserver()
            org.telegram.ui.PhotoViewer$70 r2 = new org.telegram.ui.PhotoViewer$70
            r2.<init>(r14, r11)
            r1.addOnPreDrawListener(r2)
        L_0x03ac:
            android.app.Activity r1 = r12.parentActivity
            java.lang.String r2 = "accessibility"
            java.lang.Object r1 = r1.getSystemService(r2)
            android.view.accessibility.AccessibilityManager r1 = (android.view.accessibility.AccessibilityManager) r1
            boolean r2 = r1.isTouchExplorationEnabled()
            if (r2 == 0) goto L_0x03d8
            android.view.accessibility.AccessibilityEvent r2 = android.view.accessibility.AccessibilityEvent.obtain()
            r3 = 16384(0x4000, float:2.2959E-41)
            r2.setEventType(r3)
            java.util.List r3 = r2.getText()
            r4 = 2131624039(0x7f0e0067, float:1.8875246E38)
            java.lang.String r5 = "AccDescrPhotoViewer"
            java.lang.String r4 = org.telegram.messenger.LocaleController.getString(r5, r4)
            r3.add(r4)
            r1.sendAccessibilityEvent(r2)
        L_0x03d8:
            return r0
        L_0x03d9:
            r0 = move-exception
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x03dd:
            return r15
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.openPhoto(org.telegram.messenger.MessageObject, org.telegram.tgnet.TLRPC$FileLocation, org.telegram.messenger.ImageLocation, org.telegram.messenger.ImageLocation, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, int, org.telegram.ui.PhotoViewer$PhotoViewerProvider, org.telegram.ui.ChatActivity, long, long, boolean, org.telegram.ui.PhotoViewer$PageBlocksAdapter, java.lang.Integer):boolean");
    }

    /* access modifiers changed from: private */
    public void initEmbedVideo(int i) {
        if (this.isEmbedVideo) {
            AnonymousClass71 r0 = new PhotoViewerWebView(this.parentActivity, this.pipItem) {
                Rect rect = new Rect();

                /* access modifiers changed from: protected */
                public void drawBlackBackground(Canvas canvas, int i, int i2) {
                    Bitmap bitmap = PhotoViewer.this.centerImage.getBitmap();
                    if (bitmap != null) {
                        float min = Math.min(((float) i) / ((float) bitmap.getWidth()), ((float) i2) / ((float) bitmap.getHeight()));
                        int width = (int) (((float) bitmap.getWidth()) * min);
                        int height = (int) (((float) bitmap.getHeight()) * min);
                        int i3 = (i2 - height) / 2;
                        int i4 = (i - width) / 2;
                        this.rect.set(i4, i3, width + i4, height + i3);
                        canvas.drawBitmap(bitmap, (Rect) null, this.rect, (Paint) null);
                    }
                }

                /* access modifiers changed from: protected */
                public void processTouch(MotionEvent motionEvent) {
                    PhotoViewer.this.gestureDetector.onTouchEvent(motionEvent);
                }
            };
            this.photoViewerWebView = r0;
            r0.init(i, this.currentMessageObject.messageOwner.media.webpage);
            this.photoViewerWebView.setPlaybackSpeed(this.currentVideoSpeed);
            this.containerView.addView(this.photoViewerWebView, 0, LayoutHelper.createFrame(-1, -1.0f));
        }
    }

    /* access modifiers changed from: private */
    public void makeFocusable() {
        if (Build.VERSION.SDK_INT >= 21) {
            this.windowLayoutParams.flags = -NUM;
        } else {
            this.windowLayoutParams.flags = 0;
        }
        this.windowLayoutParams.softInputMode = (this.useSmoothKeyboard ? 32 : 16) | 256;
        try {
            ((WindowManager) this.parentActivity.getSystemService("window")).updateViewLayout(this.windowView, this.windowLayoutParams);
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        this.windowView.setFocusable(true);
        this.containerView.setFocusable(true);
    }

    private void requestAdjustToNothing() {
        this.windowLayoutParams.softInputMode = 48;
        try {
            ((WindowManager) this.parentActivity.getSystemService("window")).updateViewLayout(this.windowView, this.windowLayoutParams);
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* access modifiers changed from: private */
    public void requestAdjust() {
        this.windowLayoutParams.softInputMode = (this.useSmoothKeyboard ? 32 : 16) | 256;
        try {
            ((WindowManager) this.parentActivity.getSystemService("window")).updateViewLayout(this.windowView, this.windowLayoutParams);
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void injectVideoPlayerToMediaController() {
        if (this.videoPlayer.isPlaying()) {
            if (this.playerLooping) {
                this.videoPlayer.setLooping(false);
            }
            MediaController.getInstance().injectVideoPlayer(this.videoPlayer, this.currentMessageObject);
            this.videoPlayer = null;
        }
    }

    public void closePhoto(boolean z, boolean z2) {
        AnimatedFileDrawable animatedFileDrawable;
        RectF rectF;
        float f;
        float f2;
        AnimatedFileDrawable animation;
        Bitmap animatedBitmap;
        int i;
        int i2;
        if (z2 || (i2 = this.currentEditMode) == 0) {
            QualityChooseView qualityChooseView2 = this.qualityChooseView;
            if (qualityChooseView2 == null || qualityChooseView2.getTag() == null) {
                this.openedFullScreenVideo = false;
                try {
                    AlertDialog alertDialog = this.visibleDialog;
                    if (alertDialog != null) {
                        alertDialog.dismiss();
                        this.visibleDialog = null;
                    }
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                }
                if (Build.VERSION.SDK_INT >= 21 && this.containerView != null) {
                    AndroidUtilities.cancelRunOnUIThread(this.updateContainerFlagsRunnable);
                    updateContainerFlags(true);
                }
                int i3 = this.currentEditMode;
                if (i3 != 0) {
                    if (i3 == 2) {
                        this.photoFilterView.shutdown();
                        this.containerView.removeView(this.photoFilterView);
                        this.photoFilterView = null;
                    } else if (i3 == 1) {
                        this.editorDoneLayout.setVisibility(8);
                        this.photoCropView.setVisibility(8);
                    } else if (i3 == 3) {
                        this.photoPaintView.shutdown();
                        this.containerView.removeView(this.photoPaintView);
                        this.photoPaintView = null;
                        this.savedState = null;
                    }
                    this.currentEditMode = 0;
                }
                View view = this.navigationBar;
                if (view != null) {
                    view.setVisibility(0);
                }
                FrameLayout frameLayout = this.windowView;
                if (frameLayout != null) {
                    frameLayout.setClipChildren(false);
                }
                if (this.parentActivity == null) {
                    return;
                }
                if ((!this.isInline && !this.isVisible) || checkAnimation() || this.placeProvider == null) {
                    return;
                }
                if (!this.captionEditText.hideActionMode() || z2) {
                    Activity activity = this.parentActivity;
                    if (!(activity == null || this.fullscreenedByButton == 0)) {
                        activity.setRequestedOrientation(this.prevOrientation);
                        this.fullscreenedByButton = 0;
                        this.wasRotated = false;
                    }
                    if (!this.doneButtonPressed && !this.imagesArrLocals.isEmpty() && (i = this.currentIndex) >= 0 && i < this.imagesArrLocals.size()) {
                        Object obj = this.imagesArrLocals.get(this.currentIndex);
                        if (obj instanceof MediaController.MediaEditState) {
                            ((MediaController.MediaEditState) obj).editedInfo = getCurrentVideoEditedInfo();
                        }
                    }
                    PlaceProviderObject placeForPhoto = this.placeProvider.getPlaceForPhoto(this.currentMessageObject, getFileLocation(this.currentFileLocation), this.currentIndex, true);
                    if (!(this.videoPlayer == null || placeForPhoto == null || (animation = placeForPhoto.imageReceiver.getAnimation()) == null)) {
                        if (this.textureUploaded && (animatedBitmap = animation.getAnimatedBitmap()) != null) {
                            try {
                                Bitmap bitmap = this.videoTextureView.getBitmap(animatedBitmap.getWidth(), animatedBitmap.getHeight());
                                new Canvas(animatedBitmap).drawBitmap(bitmap, 0.0f, 0.0f, (Paint) null);
                                bitmap.recycle();
                            } catch (Throwable th) {
                                FileLog.e(th);
                            }
                        }
                        if (this.currentMessageObject != null) {
                            long startTime2 = animation.getStartTime();
                            long currentPosition = this.videoPlayer.getCurrentPosition();
                            if (startTime2 <= 0) {
                                startTime2 = 0;
                            }
                            animation.seekTo(currentPosition + startTime2, !FileLoader.getInstance(this.currentMessageObject.currentAccount).isLoadingVideo(this.currentMessageObject.getDocument(), true));
                        }
                        placeForPhoto.imageReceiver.setAllowStartAnimation(true);
                        placeForPhoto.imageReceiver.startAnimation();
                    }
                    if (!this.doneButtonPressed) {
                        releasePlayer(true);
                    }
                    PhotoViewerWebView photoViewerWebView2 = this.photoViewerWebView;
                    if (photoViewerWebView2 != null) {
                        photoViewerWebView2.release();
                        this.containerView.removeView(this.photoViewerWebView);
                        this.photoViewerWebView = null;
                    }
                    this.captionEditText.onDestroy();
                    ChatActivity chatActivity = this.parentChatActivity;
                    if (!(chatActivity == null || chatActivity.getFragmentView() == null)) {
                        this.parentChatActivity.getFragmentView().invalidate();
                    }
                    this.parentChatActivity = null;
                    removeObservers();
                    this.isActionBarVisible = false;
                    VelocityTracker velocityTracker2 = this.velocityTracker;
                    if (velocityTracker2 != null) {
                        velocityTracker2.recycle();
                        this.velocityTracker = null;
                    }
                    if (this.isInline) {
                        this.isInline = false;
                        this.animationInProgress = 0;
                        onPhotoClosed(placeForPhoto);
                        this.containerView.setScaleX(1.0f);
                        this.containerView.setScaleY(1.0f);
                        return;
                    }
                    if (z) {
                        ClippingImageView[] animatingImageViews = getAnimatingImageViews(placeForPhoto);
                        for (int i4 = 0; i4 < animatingImageViews.length; i4++) {
                            animatingImageViews[i4].setAnimationValues(this.animationValues);
                            animatingImageViews[i4].setVisibility(0);
                        }
                        this.animationInProgress = 3;
                        this.containerView.invalidate();
                        AnimatorSet animatorSet = new AnimatorSet();
                        ViewGroup.LayoutParams layoutParams = this.animatingImageView.getLayoutParams();
                        if (placeForPhoto != null) {
                            rectF = placeForPhoto.imageReceiver.getDrawRegion();
                            layoutParams.width = (int) rectF.width();
                            layoutParams.height = (int) rectF.height();
                            int orientation = placeForPhoto.imageReceiver.getOrientation();
                            int animatedOrientation = placeForPhoto.imageReceiver.getAnimatedOrientation();
                            if (animatedOrientation != 0) {
                                orientation = animatedOrientation;
                            }
                            for (int i5 = 0; i5 < animatingImageViews.length; i5++) {
                                animatingImageViews[i5].setOrientation(orientation);
                                animatingImageViews[i5].setImageBitmap(placeForPhoto.thumb);
                            }
                        } else {
                            layoutParams.width = (int) this.centerImage.getImageWidth();
                            layoutParams.height = (int) this.centerImage.getImageHeight();
                            for (int i6 = 0; i6 < animatingImageViews.length; i6++) {
                                animatingImageViews[i6].setOrientation(this.centerImage.getOrientation());
                                animatingImageViews[i6].setImageBitmap(this.centerImage.getBitmapSafe());
                            }
                            rectF = null;
                        }
                        if (layoutParams.width <= 0) {
                            layoutParams.width = 100;
                        }
                        if (layoutParams.height <= 0) {
                            layoutParams.height = 100;
                        }
                        if (this.sendPhotoType == 1) {
                            float min = Math.min((float) this.photoCropView.getMeasuredWidth(), (((float) this.photoCropView.getMeasuredHeight()) - ((float) AndroidUtilities.dp(64.0f))) - ((float) (isStatusBarVisible() ? AndroidUtilities.statusBarHeight : 0))) - ((float) (AndroidUtilities.dp(16.0f) * 2));
                            f = Math.max(min / ((float) layoutParams.width), min / ((float) layoutParams.height));
                        } else {
                            f = Math.min(((float) this.windowView.getMeasuredWidth()) / ((float) layoutParams.width), ((float) (AndroidUtilities.displaySize.y + (isStatusBarVisible() ? AndroidUtilities.statusBarHeight : 0))) / ((float) layoutParams.height));
                        }
                        float f3 = this.scale;
                        float f4 = ((float) layoutParams.height) * f3 * f;
                        float measuredWidth = (((float) this.windowView.getMeasuredWidth()) - ((((float) layoutParams.width) * f3) * f)) / 2.0f;
                        if (this.sendPhotoType == 1) {
                            f2 = ((float) this.photoCropView.getMeasuredHeight()) - ((float) (isStatusBarVisible() ? AndroidUtilities.statusBarHeight : 0));
                        } else {
                            f2 = (float) (AndroidUtilities.displaySize.y + (isStatusBarVisible() ? AndroidUtilities.statusBarHeight : 0));
                        }
                        float f5 = (f2 - f4) / 2.0f;
                        for (int i7 = 0; i7 < animatingImageViews.length; i7++) {
                            animatingImageViews[i7].setLayoutParams(layoutParams);
                            animatingImageViews[i7].setTranslationX(this.translationX + measuredWidth);
                            animatingImageViews[i7].setTranslationY(this.translationY + f5);
                            animatingImageViews[i7].setScaleX(this.scale * f);
                            animatingImageViews[i7].setScaleY(this.scale * f);
                        }
                        if (placeForPhoto != null) {
                            placeForPhoto.imageReceiver.setVisible(false, true);
                            int abs = (int) Math.abs(rectF.left - placeForPhoto.imageReceiver.getImageX());
                            int abs2 = (int) Math.abs(rectF.top - placeForPhoto.imageReceiver.getImageY());
                            if (this.pageBlocksAdapter != null && placeForPhoto.imageReceiver.isAspectFit()) {
                                abs = 0;
                            }
                            int[] iArr = new int[2];
                            placeForPhoto.parentView.getLocationInWindow(iArr);
                            int i8 = iArr[1];
                            int i9 = Build.VERSION.SDK_INT;
                            int i10 = i9 >= 21 ? 0 : AndroidUtilities.statusBarHeight;
                            int i11 = placeForPhoto.viewY;
                            float f6 = rectF.top;
                            int i12 = (int) ((((float) (i8 - i10)) - (((float) i11) + f6)) + ((float) placeForPhoto.clipTopAddition));
                            if (i12 < 0) {
                                i12 = 0;
                            }
                            int height = (int) ((((((float) i11) + f6) + (rectF.bottom - f6)) - ((float) ((iArr[1] + placeForPhoto.parentView.getHeight()) - (i9 >= 21 ? 0 : AndroidUtilities.statusBarHeight)))) + ((float) placeForPhoto.clipBottomAddition));
                            if (height < 0) {
                                height = 0;
                            }
                            int max = Math.max(i12, abs2);
                            int max2 = Math.max(height, abs2);
                            this.animationValues[0][0] = this.animatingImageView.getScaleX();
                            this.animationValues[0][1] = this.animatingImageView.getScaleY();
                            this.animationValues[0][2] = this.animatingImageView.getTranslationX();
                            this.animationValues[0][3] = this.animatingImageView.getTranslationY();
                            float[][] fArr = this.animationValues;
                            fArr[0][4] = 0.0f;
                            fArr[0][5] = 0.0f;
                            fArr[0][6] = 0.0f;
                            fArr[0][7] = 0.0f;
                            fArr[0][8] = 0.0f;
                            fArr[0][9] = 0.0f;
                            fArr[0][10] = 0.0f;
                            fArr[0][11] = 0.0f;
                            fArr[0][12] = 0.0f;
                            float[] fArr2 = fArr[1];
                            float f7 = placeForPhoto.scale;
                            fArr2[0] = f7;
                            fArr[1][1] = f7;
                            fArr[1][2] = ((float) placeForPhoto.viewX) + (rectF.left * f7);
                            fArr[1][3] = ((float) placeForPhoto.viewY) + (rectF.top * f7);
                            float f8 = (float) abs;
                            fArr[1][4] = f8 * f7;
                            fArr[1][5] = ((float) max) * f7;
                            fArr[1][6] = ((float) max2) * f7;
                            int i13 = 0;
                            for (int i14 = 4; i13 < i14; i14 = 4) {
                                float[] fArr3 = this.animationValues[1];
                                int i15 = i13 + 7;
                                int[] iArr2 = placeForPhoto.radius;
                                fArr3[i15] = iArr2 != null ? (float) iArr2[i13] : 0.0f;
                                i13++;
                            }
                            float[][] fArr4 = this.animationValues;
                            float[] fArr5 = fArr4[1];
                            float f9 = placeForPhoto.scale;
                            fArr5[11] = ((float) abs2) * f9;
                            fArr4[1][12] = f8 * f9;
                            ArrayList arrayList = new ArrayList((this.sendPhotoType == 1 ? 3 : 2) + animatingImageViews.length + (animatingImageViews.length > 1 ? 1 : 0));
                            for (ClippingImageView ofFloat : animatingImageViews) {
                                arrayList.add(ObjectAnimator.ofFloat(ofFloat, AnimationProperties.CLIPPING_IMAGE_VIEW_PROGRESS, new float[]{0.0f, 1.0f}));
                            }
                            if (animatingImageViews.length > 1) {
                                arrayList.add(ObjectAnimator.ofFloat(this.animatingImageView, View.ALPHA, new float[]{0.0f}));
                                animatingImageViews[1].setAdditionalTranslationX((float) (-getLeftInset()));
                            }
                            arrayList.add(ObjectAnimator.ofInt(this.backgroundDrawable, AnimationProperties.COLOR_DRAWABLE_ALPHA, new int[]{0}));
                            arrayList.add(ObjectAnimator.ofFloat(this.containerView, View.ALPHA, new float[]{0.0f}));
                            arrayList.add(ObjectAnimator.ofFloat(this.navigationBar, View.ALPHA, new float[]{0.0f}));
                            if (this.sendPhotoType == 1) {
                                arrayList.add(ObjectAnimator.ofFloat(this.photoCropView, View.ALPHA, new float[]{0.0f}));
                            }
                            animatorSet.playTogether(arrayList);
                        } else {
                            int i16 = AndroidUtilities.displaySize.y + (isStatusBarVisible() ? AndroidUtilities.statusBarHeight : 0);
                            Animator[] animatorArr = new Animator[5];
                            animatorArr[0] = ObjectAnimator.ofInt(this.backgroundDrawable, AnimationProperties.COLOR_DRAWABLE_ALPHA, new int[]{0});
                            animatorArr[1] = ObjectAnimator.ofFloat(this.animatingImageView, View.ALPHA, new float[]{0.0f});
                            ClippingImageView clippingImageView = this.animatingImageView;
                            Property property = View.TRANSLATION_Y;
                            float[] fArr6 = new float[1];
                            if (this.translationY < 0.0f) {
                                i16 = -i16;
                            }
                            fArr6[0] = (float) i16;
                            animatorArr[2] = ObjectAnimator.ofFloat(clippingImageView, property, fArr6);
                            animatorArr[3] = ObjectAnimator.ofFloat(this.containerView, View.ALPHA, new float[]{0.0f});
                            animatorArr[4] = ObjectAnimator.ofFloat(this.navigationBar, View.ALPHA, new float[]{0.0f});
                            animatorSet.playTogether(animatorArr);
                        }
                        this.animationEndRunnable = new PhotoViewer$$ExternalSyntheticLambda64(this, placeForPhoto);
                        animatorSet.setDuration(200);
                        animatorSet.addListener(new AnimatorListenerAdapter() {
                            public void onAnimationEnd(Animator animator) {
                                AndroidUtilities.runOnUIThread(new PhotoViewer$72$$ExternalSyntheticLambda0(this));
                            }

                            /* access modifiers changed from: private */
                            public /* synthetic */ void lambda$onAnimationEnd$0() {
                                if (PhotoViewer.this.animationEndRunnable != null) {
                                    PhotoViewer.this.animationEndRunnable.run();
                                    Runnable unused = PhotoViewer.this.animationEndRunnable = null;
                                }
                            }
                        });
                        this.transitionAnimationStartTime = System.currentTimeMillis();
                        if (Build.VERSION.SDK_INT >= 18) {
                            this.containerView.setLayerType(2, (Paint) null);
                        }
                        animatorSet.start();
                        animatedFileDrawable = null;
                    } else {
                        AnimatorSet animatorSet2 = new AnimatorSet();
                        animatorSet2.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.containerView, View.SCALE_X, new float[]{0.9f}), ObjectAnimator.ofFloat(this.containerView, View.SCALE_Y, new float[]{0.9f}), ObjectAnimator.ofInt(this.backgroundDrawable, AnimationProperties.COLOR_DRAWABLE_ALPHA, new int[]{0}), ObjectAnimator.ofFloat(this.containerView, View.ALPHA, new float[]{0.0f}), ObjectAnimator.ofFloat(this.navigationBar, View.ALPHA, new float[]{0.0f})});
                        this.animationInProgress = 2;
                        this.animationEndRunnable = new PhotoViewer$$ExternalSyntheticLambda65(this, placeForPhoto);
                        animatorSet2.setDuration(200);
                        animatorSet2.addListener(new AnimatorListenerAdapter() {
                            /* JADX WARNING: type inference failed for: r0v7, types: [org.telegram.ui.ActionBar.BaseFragment] */
                            /* JADX WARNING: Multi-variable type inference failed */
                            /* JADX WARNING: Unknown variable types count: 1 */
                            /* Code decompiled incorrectly, please refer to instructions dump. */
                            public void onAnimationEnd(android.animation.Animator r3) {
                                /*
                                    r2 = this;
                                    org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                                    java.lang.Runnable r3 = r3.animationEndRunnable
                                    if (r3 == 0) goto L_0x0044
                                    org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                                    org.telegram.ui.ChatActivity r3 = r3.parentChatActivity
                                    if (r3 != 0) goto L_0x0029
                                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                                    org.telegram.ui.Components.ChatAttachAlert r0 = r0.parentAlert
                                    if (r0 == 0) goto L_0x0029
                                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                                    org.telegram.ui.Components.ChatAttachAlert r0 = r0.parentAlert
                                    org.telegram.ui.ActionBar.BaseFragment r0 = r0.getBaseFragment()
                                    boolean r1 = r0 instanceof org.telegram.ui.ChatActivity
                                    if (r1 == 0) goto L_0x0029
                                    r3 = r0
                                    org.telegram.ui.ChatActivity r3 = (org.telegram.ui.ChatActivity) r3
                                L_0x0029:
                                    if (r3 == 0) goto L_0x0035
                                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                                    java.lang.Runnable r0 = r0.animationEndRunnable
                                    r3.lambda$openDiscussionMessageChat$228(r0)
                                    goto L_0x0044
                                L_0x0035:
                                    org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                                    java.lang.Runnable r3 = r3.animationEndRunnable
                                    r3.run()
                                    org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                                    r0 = 0
                                    java.lang.Runnable unused = r3.animationEndRunnable = r0
                                L_0x0044:
                                    return
                                */
                                throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.AnonymousClass73.onAnimationEnd(android.animation.Animator):void");
                            }
                        });
                        this.transitionAnimationStartTime = System.currentTimeMillis();
                        if (Build.VERSION.SDK_INT >= 18) {
                            animatedFileDrawable = null;
                            this.containerView.setLayerType(2, (Paint) null);
                        } else {
                            animatedFileDrawable = null;
                        }
                        animatorSet2.start();
                    }
                    AnimatedFileDrawable animatedFileDrawable2 = this.currentAnimation;
                    if (animatedFileDrawable2 != null) {
                        animatedFileDrawable2.removeSecondParentView(this.containerView);
                        this.currentAnimation = animatedFileDrawable;
                        this.centerImage.setImageBitmap((Drawable) animatedFileDrawable);
                    }
                    PhotoViewerProvider photoViewerProvider = this.placeProvider;
                    if (photoViewerProvider != null && !photoViewerProvider.canScrollAway()) {
                        this.placeProvider.cancelButtonPressed();
                        return;
                    }
                    return;
                }
                return;
            }
            this.qualityPicker.cancelButton.callOnClick();
        } else if (i2 != 3 || this.photoPaintView == null) {
            if (i2 == 1) {
                this.cropTransform.setViewTransform(this.previousHasTransform, this.previousCropPx, this.previousCropPy, this.previousCropRotation, this.previousCropOrientation, this.previousCropScale, 1.0f, 1.0f, this.previousCropPw, this.previousCropPh, 0.0f, 0.0f, this.previousCropMirrored);
            }
            switchToEditMode(0);
        } else {
            closePaintMode();
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$closePhoto$72(PlaceProviderObject placeProviderObject) {
        this.animationEndRunnable = null;
        if (Build.VERSION.SDK_INT >= 18) {
            this.containerView.setLayerType(0, (Paint) null);
        }
        this.animationInProgress = 0;
        onPhotoClosed(placeProviderObject);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$closePhoto$73(PlaceProviderObject placeProviderObject) {
        this.animationEndRunnable = null;
        FrameLayoutDrawer frameLayoutDrawer = this.containerView;
        if (frameLayoutDrawer != null) {
            if (Build.VERSION.SDK_INT >= 18) {
                frameLayoutDrawer.setLayerType(0, (Paint) null);
            }
            this.animationInProgress = 0;
            onPhotoClosed(placeProviderObject);
            this.containerView.setScaleX(1.0f);
            this.containerView.setScaleY(1.0f);
        }
    }

    private ClippingImageView[] getAnimatingImageViews(PlaceProviderObject placeProviderObject) {
        int i = (AndroidUtilities.isTablet() || placeProviderObject == null || placeProviderObject.animatingImageView == null) ? 0 : 1;
        ClippingImageView[] clippingImageViewArr = new ClippingImageView[(i + 1)];
        clippingImageViewArr[0] = this.animatingImageView;
        if (i != 0) {
            ClippingImageView clippingImageView = placeProviderObject.animatingImageView;
            clippingImageViewArr[1] = clippingImageView;
            clippingImageView.setAdditionalTranslationY((float) placeProviderObject.animatingImageViewYOffset);
        }
        return clippingImageViewArr;
    }

    private void removeObservers() {
        NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.fileLoadFailed);
        NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.fileLoaded);
        NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.fileLoadProgressChanged);
        NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.mediaCountDidLoad);
        NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.mediaDidLoad);
        NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.dialogPhotosLoaded);
        NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.messagesDeleted);
        NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.emojiLoaded);
        NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.filePreparingFailed);
        NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.fileNewChunkAvailable);
        ConnectionsManager.getInstance(this.currentAccount).cancelRequestsForGuid(this.classGuid);
    }

    public void destroyPhotoViewer() {
        if (this.parentActivity != null && this.windowView != null) {
            if (PipVideoOverlay.isVisible()) {
                PipVideoOverlay.dismiss();
            }
            removeObservers();
            releasePlayer(false);
            try {
                if (this.windowView.getParent() != null) {
                    ((WindowManager) this.parentActivity.getSystemService("window")).removeViewImmediate(this.windowView);
                    onHideView();
                }
                this.windowView = null;
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
            ImageReceiver.BitmapHolder bitmapHolder = this.currentThumb;
            if (bitmapHolder != null) {
                bitmapHolder.release();
                this.currentThumb = null;
            }
            this.animatingImageView.setImageBitmap((ImageReceiver.BitmapHolder) null);
            PhotoViewerCaptionEnterView photoViewerCaptionEnterView = this.captionEditText;
            if (photoViewerCaptionEnterView != null) {
                photoViewerCaptionEnterView.onDestroy();
            }
            if (this == PipInstance) {
                PipInstance = null;
            } else {
                Instance = null;
            }
            onHideView();
        }
    }

    private void onPhotoClosed(PlaceProviderObject placeProviderObject) {
        if (this.doneButtonPressed) {
            releasePlayer(true);
        }
        this.isVisible = false;
        this.cropInitied = false;
        this.disableShowCheck = true;
        this.currentMessageObject = null;
        this.currentBotInlineResult = null;
        this.currentFileLocation = null;
        this.currentFileLocationVideo = null;
        this.currentSecureDocument = null;
        this.currentPageBlock = null;
        this.currentPathObject = null;
        if (this.videoPlayerControlFrameLayout != null) {
            setVideoPlayerControlVisible(false, false);
        }
        CaptionScrollView captionScrollView2 = this.captionScrollView;
        if (captionScrollView2 != null) {
            captionScrollView2.reset();
        }
        this.sendPhotoType = 0;
        this.isDocumentsPicker = false;
        ImageReceiver.BitmapHolder bitmapHolder = this.currentThumb;
        if (bitmapHolder != null) {
            bitmapHolder.release();
            this.currentThumb = null;
        }
        this.parentAlert = null;
        AnimatedFileDrawable animatedFileDrawable = this.currentAnimation;
        if (animatedFileDrawable != null) {
            animatedFileDrawable.removeSecondParentView(this.containerView);
            this.currentAnimation = null;
        }
        for (int i = 0; i < 3; i++) {
            PhotoProgressView[] photoProgressViewArr = this.photoProgressViews;
            if (photoProgressViewArr[i] != null) {
                photoProgressViewArr[i].setBackgroundState(-1, false, true);
            }
        }
        requestVideoPreview(0);
        VideoTimelinePlayView videoTimelinePlayView = this.videoTimelineView;
        if (videoTimelinePlayView != null) {
            videoTimelinePlayView.setBackgroundColor(NUM);
            this.videoTimelineView.destroy();
        }
        this.hintView.hide(false, 0);
        this.centerImage.setImageBitmap((Bitmap) null);
        this.leftImage.setImageBitmap((Bitmap) null);
        this.rightImage.setImageBitmap((Bitmap) null);
        this.containerView.post(new PhotoViewer$$ExternalSyntheticLambda66(this, placeProviderObject));
        PhotoViewerProvider photoViewerProvider = this.placeProvider;
        if (photoViewerProvider != null) {
            photoViewerProvider.willHidePhotoViewer();
        }
        this.groupedPhotosListView.clear();
        PhotoViewerProvider photoViewerProvider2 = this.placeProvider;
        if (photoViewerProvider2 != null) {
            photoViewerProvider2.onClose();
        }
        this.placeProvider = null;
        this.selectedPhotosAdapter.notifyDataSetChanged();
        this.pageBlocksAdapter = null;
        this.disableShowCheck = false;
        this.shownControlsByEnd = false;
        this.videoCutStart = 0.0f;
        this.videoCutEnd = 1.0f;
        if (placeProviderObject != null) {
            placeProviderObject.imageReceiver.setVisible(true, true);
        }
        ChatActivity chatActivity = this.parentChatActivity;
        if (chatActivity != null) {
            chatActivity.getFragmentView().invalidate();
        }
        Bitmap bitmap = this.videoFrameBitmap;
        if (bitmap != null) {
            bitmap.recycle();
            this.videoFrameBitmap = null;
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$onPhotoClosed$74(PlaceProviderObject placeProviderObject) {
        ClippingImageView clippingImageView;
        this.animatingImageView.setImageBitmap((ImageReceiver.BitmapHolder) null);
        if (!(placeProviderObject == null || AndroidUtilities.isTablet() || (clippingImageView = placeProviderObject.animatingImageView) == null)) {
            clippingImageView.setImageBitmap((ImageReceiver.BitmapHolder) null);
        }
        try {
            if (this.windowView.getParent() != null) {
                ((WindowManager) this.parentActivity.getSystemService("window")).removeView(this.windowView);
                onHideView();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    private void redraw(int i) {
        FrameLayoutDrawer frameLayoutDrawer;
        if (i < 6 && (frameLayoutDrawer = this.containerView) != null) {
            frameLayoutDrawer.invalidate();
            AndroidUtilities.runOnUIThread(new PhotoViewer$$ExternalSyntheticLambda57(this, i), 100);
        }
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$redraw$75(int i) {
        redraw(i + 1);
    }

    public void onResume() {
        redraw(0);
        VideoPlayer videoPlayer2 = this.videoPlayer;
        if (videoPlayer2 != null) {
            videoPlayer2.seekTo(videoPlayer2.getCurrentPosition() + 1);
            if (this.playerLooping) {
                this.videoPlayer.setLooping(true);
            }
        }
        PhotoPaintView photoPaintView2 = this.photoPaintView;
        if (photoPaintView2 != null) {
            photoPaintView2.onResume();
        }
    }

    public void onPause() {
        if (this.currentAnimation != null) {
            closePhoto(false, false);
            return;
        }
        if (this.lastTitle != null) {
            closeCaptionEnter(true);
        }
        VideoPlayer videoPlayer2 = this.videoPlayer;
        if (videoPlayer2 != null && this.playerLooping) {
            videoPlayer2.setLooping(false);
        }
    }

    public boolean isVisible() {
        return this.isVisible && this.placeProvider != null;
    }

    /* access modifiers changed from: private */
    public void updateMinMax(float f) {
        AspectRatioFrameLayout aspectRatioFrameLayout2 = this.aspectRatioFrameLayout;
        if (aspectRatioFrameLayout2 != null && aspectRatioFrameLayout2.getVisibility() == 0 && this.textureUploaded) {
            f *= Math.min(((float) getContainerViewWidth()) / ((float) this.videoTextureView.getMeasuredWidth()), ((float) getContainerViewHeight()) / ((float) this.videoTextureView.getMeasuredHeight()));
        }
        float imageWidth = this.centerImage.getImageWidth();
        float imageHeight = this.centerImage.getImageHeight();
        MediaController.CropState cropState = this.editState.cropState;
        if (cropState != null) {
            imageWidth *= cropState.cropPw;
            imageHeight *= cropState.cropPh;
        }
        int containerViewWidth = ((int) ((imageWidth * f) - ((float) getContainerViewWidth()))) / 2;
        int containerViewHeight = ((int) ((imageHeight * f) - ((float) getContainerViewHeight()))) / 2;
        if (containerViewWidth > 0) {
            this.minX = (float) (-containerViewWidth);
            this.maxX = (float) containerViewWidth;
        } else {
            this.maxX = 0.0f;
            this.minX = 0.0f;
        }
        if (containerViewHeight > 0) {
            this.minY = (float) (-containerViewHeight);
            this.maxY = (float) containerViewHeight;
            return;
        }
        this.maxY = 0.0f;
        this.minY = 0.0f;
    }

    private int getAdditionX() {
        int i = this.currentEditMode;
        if (i == 1 || (i == 0 && this.sendPhotoType == 1)) {
            return AndroidUtilities.dp(16.0f);
        }
        if (i == 0 || i == 3) {
            return 0;
        }
        return AndroidUtilities.dp(14.0f);
    }

    private int getAdditionY() {
        int i = this.currentEditMode;
        int i2 = 0;
        if (i == 1 || (i == 0 && this.sendPhotoType == 1)) {
            int dp = AndroidUtilities.dp(16.0f);
            if (isStatusBarVisible()) {
                i2 = AndroidUtilities.statusBarHeight;
            }
            return dp + i2;
        } else if (i == 3) {
            int dp2 = AndroidUtilities.dp(8.0f);
            if (isStatusBarVisible()) {
                i2 = AndroidUtilities.statusBarHeight;
            }
            return dp2 + i2;
        } else if (i == 0) {
            return 0;
        } else {
            int dp3 = AndroidUtilities.dp(14.0f);
            if (isStatusBarVisible()) {
                i2 = AndroidUtilities.statusBarHeight;
            }
            return dp3 + i2;
        }
    }

    /* access modifiers changed from: private */
    public int getContainerViewWidth() {
        return getContainerViewWidth(this.currentEditMode);
    }

    /* access modifiers changed from: private */
    public int getContainerViewWidth(int i) {
        int i2;
        int width = this.containerView.getWidth();
        if (i == 1 || (i == 0 && this.sendPhotoType == 1)) {
            i2 = AndroidUtilities.dp(32.0f);
        } else if (i == 0 || i == 3) {
            return width;
        } else {
            i2 = AndroidUtilities.dp(28.0f);
        }
        return width - i2;
    }

    /* access modifiers changed from: private */
    public int getContainerViewHeight() {
        return getContainerViewHeight(this.currentEditMode);
    }

    /* access modifiers changed from: private */
    public int getContainerViewHeight(int i) {
        return getContainerViewHeight(false, i);
    }

    private int getContainerViewHeight(boolean z, int i) {
        int i2;
        int i3;
        if (z || this.inBubbleMode) {
            i2 = this.containerView.getMeasuredHeight();
        } else {
            i2 = AndroidUtilities.displaySize.y;
            if (i == 0 && this.sendPhotoType != 1 && isStatusBarVisible()) {
                i2 += AndroidUtilities.statusBarHeight;
            }
        }
        if ((i == 0 && this.sendPhotoType == 1) || i == 1) {
            i3 = AndroidUtilities.dp(144.0f);
        } else if (i == 2) {
            i3 = AndroidUtilities.dp(214.0f);
        } else if (i != 3) {
            return i2;
        } else {
            i3 = AndroidUtilities.dp(48.0f) + ActionBar.getCurrentActionBarHeight();
        }
        return i2 - i3;
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:209:0x0425, code lost:
        if (r1 > r4) goto L_0x041f;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:214:0x0434, code lost:
        if (r2 > r4) goto L_0x042e;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:222:0x0459, code lost:
        if (r3 > r4) goto L_0x0453;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:227:0x046a, code lost:
        if (r3 > r4) goto L_0x0464;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:276:0x0549, code lost:
        if (r3 > r4) goto L_0x0543;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:281:0x055a, code lost:
        if (r3 > r4) goto L_0x0554;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public boolean onTouchEvent(android.view.MotionEvent r20) {
        /*
            r19 = this;
            r0 = r19
            r1 = r20
            int r2 = r0.currentEditMode
            r3 = 5
            r4 = 0
            r6 = 3
            r7 = 2
            r8 = 1
            if (r2 != r6) goto L_0x002b
            long r9 = r0.animationStartTime
            int r2 = (r9 > r4 ? 1 : (r9 == r4 ? 0 : -1))
            if (r2 == 0) goto L_0x002b
            int r2 = r20.getActionMasked()
            if (r2 == 0) goto L_0x0020
            int r2 = r20.getActionMasked()
            if (r2 != r3) goto L_0x002b
        L_0x0020:
            int r2 = r20.getPointerCount()
            if (r2 < r7) goto L_0x002a
            r19.cancelMoveZoomAnimation()
            goto L_0x002b
        L_0x002a:
            return r8
        L_0x002b:
            int r2 = r0.animationInProgress
            r9 = 0
            if (r2 != 0) goto L_0x0682
            long r10 = r0.animationStartTime
            int r2 = (r10 > r4 ? 1 : (r10 == r4 ? 0 : -1))
            if (r2 == 0) goto L_0x0038
            goto L_0x0682
        L_0x0038:
            org.telegram.messenger.video.VideoPlayerRewinder r2 = r0.videoPlayerRewinder
            int r2 = r2.rewindCount
            if (r2 <= 0) goto L_0x0052
            int r2 = r20.getAction()
            if (r2 == r8) goto L_0x004c
            int r1 = r20.getAction()
            if (r1 != r6) goto L_0x004b
            goto L_0x004c
        L_0x004b:
            return r8
        L_0x004c:
            org.telegram.messenger.video.VideoPlayerRewinder r1 = r0.videoPlayerRewinder
            r1.cancelRewind()
            return r9
        L_0x0052:
            int r2 = r0.currentEditMode
            if (r2 != r7) goto L_0x005c
            org.telegram.ui.Components.PhotoFilterView r2 = r0.photoFilterView
            r2.onTouch(r1)
            return r8
        L_0x005c:
            if (r2 == r8) goto L_0x0681
            if (r2 == r6) goto L_0x0066
            int r2 = r0.sendPhotoType
            if (r2 != r8) goto L_0x0066
            goto L_0x0681
        L_0x0066:
            org.telegram.ui.Components.PhotoViewerCaptionEnterView r2 = r0.captionEditText
            boolean r2 = r2.isPopupShowing()
            if (r2 != 0) goto L_0x0678
            org.telegram.ui.Components.PhotoViewerCaptionEnterView r2 = r0.captionEditText
            boolean r2 = r2.isKeyboardVisible()
            if (r2 == 0) goto L_0x0078
            goto L_0x0678
        L_0x0078:
            int r2 = r0.currentEditMode
            if (r2 != 0) goto L_0x009c
            int r2 = r0.sendPhotoType
            if (r2 == r8) goto L_0x009c
            int r2 = r20.getPointerCount()
            if (r2 != r8) goto L_0x009c
            org.telegram.ui.Components.GestureDetector2 r2 = r0.gestureDetector
            boolean r2 = r2.onTouchEvent(r1)
            if (r2 == 0) goto L_0x009c
            boolean r2 = r0.doubleTap
            if (r2 == 0) goto L_0x009c
            r0.doubleTap = r9
            r0.moving = r9
            r0.zooming = r9
            r0.checkMinMax(r9)
            return r8
        L_0x009c:
            org.telegram.ui.Components.Tooltip r2 = r0.tooltip
            if (r2 == 0) goto L_0x00a3
            r2.hide()
        L_0x00a3:
            int r2 = r20.getActionMasked()
            r10 = 1073741824(0x40000000, float:2.0)
            if (r2 == 0) goto L_0x0564
            int r2 = r20.getActionMasked()
            if (r2 != r3) goto L_0x00b3
            goto L_0x0564
        L_0x00b3:
            int r2 = r20.getActionMasked()
            r3 = 1077936128(0x40400000, float:3.0)
            r11 = 1065353216(0x3var_, float:1.0)
            r12 = 0
            if (r2 != r7) goto L_0x0384
            boolean r2 = r0.canZoom
            if (r2 == 0) goto L_0x01c3
            int r2 = r20.getPointerCount()
            if (r2 != r7) goto L_0x01c3
            boolean r2 = r0.draggingDown
            if (r2 != 0) goto L_0x01c3
            boolean r2 = r0.zooming
            if (r2 == 0) goto L_0x01c3
            boolean r2 = r0.changingPage
            if (r2 != 0) goto L_0x01c3
            r0.discardTap = r8
            int r2 = r0.currentEditMode
            if (r2 != r6) goto L_0x0158
            float r2 = r1.getX(r9)
            float r4 = r1.getX(r8)
            float r2 = r2 + r4
            float r2 = r2 / r10
            float r4 = r1.getY(r9)
            float r5 = r1.getY(r8)
            float r4 = r4 + r5
            float r4 = r4 / r10
            float r5 = r0.moveStartX
            float r5 = r5 - r2
            float r6 = r0.moveStartY
            float r6 = r6 - r4
            r0.moveStartX = r2
            r0.moveStartY = r4
            float r10 = r0.translationX
            float r11 = r0.minX
            int r11 = (r10 > r11 ? 1 : (r10 == r11 ? 0 : -1))
            if (r11 < 0) goto L_0x0106
            float r11 = r0.maxX
            int r10 = (r10 > r11 ? 1 : (r10 == r11 ? 0 : -1))
            if (r10 <= 0) goto L_0x0107
        L_0x0106:
            float r5 = r5 / r3
        L_0x0107:
            float r10 = r0.translationY
            float r11 = r0.minY
            int r11 = (r10 > r11 ? 1 : (r10 == r11 ? 0 : -1))
            if (r11 < 0) goto L_0x0115
            float r11 = r0.maxY
            int r10 = (r10 > r11 ? 1 : (r10 == r11 ? 0 : -1))
            if (r10 <= 0) goto L_0x0116
        L_0x0115:
            float r6 = r6 / r3
        L_0x0116:
            float r3 = r0.pinchCenterX
            int r10 = r19.getContainerViewWidth()
            int r10 = r10 / r7
            float r10 = (float) r10
            float r3 = r3 - r10
            float r10 = r0.pinchCenterX
            int r11 = r19.getContainerViewWidth()
            int r11 = r11 / r7
            float r11 = (float) r11
            float r10 = r10 - r11
            float r11 = r0.translationX
            float r10 = r10 - r11
            float r11 = r0.scale
            float r12 = r0.pinchStartScale
            float r11 = r11 / r12
            float r10 = r10 / r11
            float r3 = r3 - r10
            float r3 = r3 - r5
            r0.pinchStartX = r3
            float r3 = r0.pinchCenterY
            int r5 = r19.getContainerViewHeight()
            int r5 = r5 / r7
            float r5 = (float) r5
            float r3 = r3 - r5
            float r5 = r0.pinchCenterY
            int r10 = r19.getContainerViewHeight()
            int r10 = r10 / r7
            float r10 = (float) r10
            float r5 = r5 - r10
            float r10 = r0.translationY
            float r5 = r5 - r10
            float r10 = r0.scale
            float r11 = r0.pinchStartScale
            float r10 = r10 / r11
            float r5 = r5 / r10
            float r3 = r3 - r5
            float r3 = r3 - r6
            r0.pinchStartY = r3
            r0.pinchCenterX = r2
            r0.pinchCenterY = r4
        L_0x0158:
            float r2 = r1.getX(r8)
            float r3 = r1.getX(r9)
            float r2 = r2 - r3
            double r2 = (double) r2
            float r4 = r1.getY(r8)
            float r1 = r1.getY(r9)
            float r4 = r4 - r1
            double r4 = (double) r4
            double r1 = java.lang.Math.hypot(r2, r4)
            float r1 = (float) r1
            float r2 = r0.pinchStartDistance
            float r1 = r1 / r2
            float r2 = r0.pinchStartScale
            float r1 = r1 * r2
            r0.scale = r1
            float r1 = r0.pinchCenterX
            int r2 = r19.getContainerViewWidth()
            int r2 = r2 / r7
            float r2 = (float) r2
            float r1 = r1 - r2
            float r2 = r0.pinchCenterX
            int r3 = r19.getContainerViewWidth()
            int r3 = r3 / r7
            float r3 = (float) r3
            float r2 = r2 - r3
            float r3 = r0.pinchStartX
            float r2 = r2 - r3
            float r3 = r0.scale
            float r4 = r0.pinchStartScale
            float r3 = r3 / r4
            float r2 = r2 * r3
            float r1 = r1 - r2
            r0.translationX = r1
            float r1 = r0.pinchCenterY
            int r2 = r19.getContainerViewHeight()
            int r2 = r2 / r7
            float r2 = (float) r2
            float r1 = r1 - r2
            float r2 = r0.pinchCenterY
            int r3 = r19.getContainerViewHeight()
            int r3 = r3 / r7
            float r3 = (float) r3
            float r2 = r2 - r3
            float r3 = r0.pinchStartY
            float r2 = r2 - r3
            float r3 = r0.scale
            float r4 = r0.pinchStartScale
            float r4 = r3 / r4
            float r2 = r2 * r4
            float r1 = r1 - r2
            r0.translationY = r1
            r0.updateMinMax(r3)
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r1 = r0.containerView
            r1.invalidate()
            goto L_0x0677
        L_0x01c3:
            int r2 = r20.getPointerCount()
            if (r2 != r8) goto L_0x0677
            int r2 = r0.paintViewTouched
            if (r2 != r8) goto L_0x01eb
            android.view.MotionEvent r1 = android.view.MotionEvent.obtain(r20)
            org.telegram.ui.Components.PhotoPaintView r2 = r0.photoPaintView
            float r2 = r2.getX()
            float r2 = -r2
            org.telegram.ui.Components.PhotoPaintView r3 = r0.photoPaintView
            float r3 = r3.getY()
            float r3 = -r3
            r1.offsetLocation(r2, r3)
            org.telegram.ui.Components.PhotoPaintView r2 = r0.photoPaintView
            r2.onTouch(r1)
            r1.recycle()
            return r8
        L_0x01eb:
            android.view.VelocityTracker r2 = r0.velocityTracker
            if (r2 == 0) goto L_0x01f2
            r2.addMovement(r1)
        L_0x01f2:
            float r2 = r20.getX()
            float r6 = r0.moveStartX
            float r2 = r2 - r6
            float r2 = java.lang.Math.abs(r2)
            float r6 = r20.getY()
            float r7 = r0.dragY
            float r6 = r6 - r7
            float r6 = java.lang.Math.abs(r6)
            int r7 = r0.touchSlop
            float r13 = (float) r7
            int r13 = (r2 > r13 ? 1 : (r2 == r13 ? 0 : -1))
            if (r13 > 0) goto L_0x0214
            float r7 = (float) r7
            int r7 = (r6 > r7 ? 1 : (r6 == r7 ? 0 : -1))
            if (r7 <= 0) goto L_0x0229
        L_0x0214:
            r0.discardTap = r8
            r19.hidePressedDrawables()
            java.lang.Runnable r7 = r0.longPressRunnable
            org.telegram.messenger.AndroidUtilities.cancelRunOnUIThread(r7)
            org.telegram.ui.PhotoViewer$QualityChooseView r7 = r0.qualityChooseView
            if (r7 == 0) goto L_0x0229
            int r7 = r7.getVisibility()
            if (r7 != 0) goto L_0x0229
            return r8
        L_0x0229:
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r7 = r0.placeProvider
            boolean r7 = r7.canScrollAway()
            if (r7 == 0) goto L_0x0286
            int r7 = r0.currentEditMode
            if (r7 != 0) goto L_0x0286
            int r7 = r0.sendPhotoType
            if (r7 == r8) goto L_0x0286
            boolean r7 = r0.canDragDown
            if (r7 == 0) goto L_0x0286
            boolean r7 = r0.draggingDown
            if (r7 != 0) goto L_0x0286
            float r7 = r0.scale
            int r7 = (r7 > r11 ? 1 : (r7 == r11 ? 0 : -1))
            if (r7 != 0) goto L_0x0286
            r7 = 1106247680(0x41var_, float:30.0)
            int r7 = org.telegram.messenger.AndroidUtilities.dp(r7)
            float r7 = (float) r7
            int r7 = (r6 > r7 ? 1 : (r6 == r7 ? 0 : -1))
            if (r7 < 0) goto L_0x0286
            float r6 = r6 / r10
            int r2 = (r6 > r2 ? 1 : (r6 == r2 ? 0 : -1))
            if (r2 <= 0) goto L_0x0286
            r0.draggingDown = r8
            r19.hidePressedDrawables()
            r0.moving = r9
            float r1 = r20.getY()
            r0.dragY = r1
            boolean r1 = r0.isActionBarVisible
            if (r1 == 0) goto L_0x0274
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r1 = r0.containerView
            java.lang.Object r1 = r1.getTag()
            if (r1 == 0) goto L_0x0274
            r0.toggleActionBar(r9, r8)
            goto L_0x0285
        L_0x0274:
            android.widget.FrameLayout r1 = r0.pickerView
            int r1 = r1.getVisibility()
            if (r1 != 0) goto L_0x0285
            r0.toggleActionBar(r9, r8)
            r0.togglePhotosListView(r9, r8)
            r0.toggleCheckImageView(r9)
        L_0x0285:
            return r8
        L_0x0286:
            boolean r2 = r0.draggingDown
            if (r2 == 0) goto L_0x029a
            float r1 = r20.getY()
            float r2 = r0.dragY
            float r1 = r1 - r2
            r0.translationY = r1
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r1 = r0.containerView
            r1.invalidate()
            goto L_0x0677
        L_0x029a:
            boolean r2 = r0.invalidCoords
            if (r2 != 0) goto L_0x0374
            long r6 = r0.animationStartTime
            int r2 = (r6 > r4 ? 1 : (r6 == r4 ? 0 : -1))
            if (r2 != 0) goto L_0x0374
            float r2 = r0.moveStartX
            float r4 = r20.getX()
            float r2 = r2 - r4
            float r4 = r0.moveStartY
            float r5 = r20.getY()
            float r4 = r4 - r5
            boolean r5 = r0.moving
            if (r5 != 0) goto L_0x02da
            int r5 = r0.currentEditMode
            if (r5 != 0) goto L_0x02da
            float r5 = r0.scale
            int r5 = (r5 > r11 ? 1 : (r5 == r11 ? 0 : -1))
            if (r5 != 0) goto L_0x02d4
            float r5 = java.lang.Math.abs(r4)
            r6 = 1094713344(0x41400000, float:12.0)
            int r6 = org.telegram.messenger.AndroidUtilities.dp(r6)
            float r6 = (float) r6
            float r5 = r5 + r6
            float r6 = java.lang.Math.abs(r2)
            int r5 = (r5 > r6 ? 1 : (r5 == r6 ? 0 : -1))
            if (r5 < 0) goto L_0x02da
        L_0x02d4:
            float r5 = r0.scale
            int r5 = (r5 > r11 ? 1 : (r5 == r11 ? 0 : -1))
            if (r5 == 0) goto L_0x0677
        L_0x02da:
            boolean r5 = r0.moving
            if (r5 != 0) goto L_0x02e7
            r0.moving = r8
            r0.canDragDown = r9
            r19.hidePressedDrawables()
            r2 = 0
            r4 = 0
        L_0x02e7:
            float r5 = r20.getX()
            r0.moveStartX = r5
            float r1 = r20.getY()
            r0.moveStartY = r1
            float r1 = r0.scale
            r0.updateMinMax(r1)
            float r1 = r0.translationX
            float r5 = r0.minX
            int r1 = (r1 > r5 ? 1 : (r1 == r5 ? 0 : -1))
            if (r1 >= 0) goto L_0x030c
            int r1 = r0.currentEditMode
            if (r1 != 0) goto L_0x0320
            org.telegram.messenger.ImageReceiver r1 = r0.rightImage
            boolean r1 = r1.hasImageSet()
            if (r1 == 0) goto L_0x0320
        L_0x030c:
            float r1 = r0.translationX
            float r5 = r0.maxX
            int r1 = (r1 > r5 ? 1 : (r1 == r5 ? 0 : -1))
            if (r1 <= 0) goto L_0x0321
            int r1 = r0.currentEditMode
            if (r1 != 0) goto L_0x0320
            org.telegram.messenger.ImageReceiver r1 = r0.leftImage
            boolean r1 = r1.hasImageSet()
            if (r1 != 0) goto L_0x0321
        L_0x0320:
            float r2 = r2 / r3
        L_0x0321:
            float r1 = r0.maxY
            int r5 = (r1 > r12 ? 1 : (r1 == r12 ? 0 : -1))
            if (r5 != 0) goto L_0x0348
            float r5 = r0.minY
            int r6 = (r5 > r12 ? 1 : (r5 == r12 ? 0 : -1))
            if (r6 != 0) goto L_0x0348
            int r6 = r0.currentEditMode
            if (r6 != 0) goto L_0x0348
            int r6 = r0.sendPhotoType
            if (r6 == r8) goto L_0x0348
            float r3 = r0.translationY
            float r6 = r3 - r4
            int r6 = (r6 > r5 ? 1 : (r6 == r5 ? 0 : -1))
            if (r6 >= 0) goto L_0x0340
            r0.translationY = r5
            goto L_0x0359
        L_0x0340:
            float r3 = r3 - r4
            int r3 = (r3 > r1 ? 1 : (r3 == r1 ? 0 : -1))
            if (r3 <= 0) goto L_0x0355
            r0.translationY = r1
            goto L_0x0359
        L_0x0348:
            float r5 = r0.translationY
            float r6 = r0.minY
            int r6 = (r5 > r6 ? 1 : (r5 == r6 ? 0 : -1))
            if (r6 < 0) goto L_0x0357
            int r1 = (r5 > r1 ? 1 : (r5 == r1 ? 0 : -1))
            if (r1 <= 0) goto L_0x0355
            goto L_0x0357
        L_0x0355:
            r12 = r4
            goto L_0x0359
        L_0x0357:
            float r12 = r4 / r3
        L_0x0359:
            float r1 = r0.translationX
            float r1 = r1 - r2
            r0.translationX = r1
            float r1 = r0.scale
            int r1 = (r1 > r11 ? 1 : (r1 == r11 ? 0 : -1))
            if (r1 != 0) goto L_0x0368
            int r1 = r0.currentEditMode
            if (r1 == 0) goto L_0x036d
        L_0x0368:
            float r1 = r0.translationY
            float r1 = r1 - r12
            r0.translationY = r1
        L_0x036d:
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r1 = r0.containerView
            r1.invalidate()
            goto L_0x0677
        L_0x0374:
            r0.invalidCoords = r9
            float r2 = r20.getX()
            r0.moveStartX = r2
            float r1 = r20.getY()
            r0.moveStartY = r1
            goto L_0x0677
        L_0x0384:
            int r2 = r20.getActionMasked()
            if (r2 == r6) goto L_0x0397
            int r2 = r20.getActionMasked()
            if (r2 == r8) goto L_0x0397
            int r2 = r20.getActionMasked()
            r4 = 6
            if (r2 != r4) goto L_0x0677
        L_0x0397:
            java.lang.Runnable r2 = r0.longPressRunnable
            org.telegram.messenger.AndroidUtilities.cancelRunOnUIThread(r2)
            int r2 = r0.paintViewTouched
            if (r2 != r8) goto L_0x03c4
            org.telegram.ui.Components.PhotoPaintView r2 = r0.photoPaintView
            if (r2 == 0) goto L_0x03c1
            android.view.MotionEvent r1 = android.view.MotionEvent.obtain(r20)
            org.telegram.ui.Components.PhotoPaintView r2 = r0.photoPaintView
            float r2 = r2.getX()
            float r2 = -r2
            org.telegram.ui.Components.PhotoPaintView r3 = r0.photoPaintView
            float r3 = r3.getY()
            float r3 = -r3
            r1.offsetLocation(r2, r3)
            org.telegram.ui.Components.PhotoPaintView r2 = r0.photoPaintView
            r2.onTouch(r1)
            r1.recycle()
        L_0x03c1:
            r0.paintViewTouched = r9
            return r8
        L_0x03c4:
            r0.paintViewTouched = r9
            boolean r2 = r0.zooming
            if (r2 == 0) goto L_0x0478
            r0.invalidCoords = r8
            float r1 = r0.scale
            int r2 = (r1 > r11 ? 1 : (r1 == r11 ? 0 : -1))
            if (r2 >= 0) goto L_0x03da
            r0.updateMinMax(r11)
            r0.animateTo(r11, r12, r12, r8)
            goto L_0x0472
        L_0x03da:
            int r1 = (r1 > r3 ? 1 : (r1 == r3 ? 0 : -1))
            if (r1 <= 0) goto L_0x043b
            float r1 = r0.pinchCenterX
            int r2 = r19.getContainerViewWidth()
            int r2 = r2 / r7
            float r2 = (float) r2
            float r1 = r1 - r2
            float r2 = r0.pinchCenterX
            int r4 = r19.getContainerViewWidth()
            int r4 = r4 / r7
            float r4 = (float) r4
            float r2 = r2 - r4
            float r4 = r0.pinchStartX
            float r2 = r2 - r4
            float r4 = r0.pinchStartScale
            float r4 = r3 / r4
            float r2 = r2 * r4
            float r1 = r1 - r2
            float r2 = r0.pinchCenterY
            int r4 = r19.getContainerViewHeight()
            int r4 = r4 / r7
            float r4 = (float) r4
            float r2 = r2 - r4
            float r4 = r0.pinchCenterY
            int r5 = r19.getContainerViewHeight()
            int r5 = r5 / r7
            float r5 = (float) r5
            float r4 = r4 - r5
            float r5 = r0.pinchStartY
            float r4 = r4 - r5
            float r5 = r0.pinchStartScale
            float r5 = r3 / r5
            float r4 = r4 * r5
            float r2 = r2 - r4
            r0.updateMinMax(r3)
            float r4 = r0.minX
            int r5 = (r1 > r4 ? 1 : (r1 == r4 ? 0 : -1))
            if (r5 >= 0) goto L_0x0421
        L_0x041f:
            r1 = r4
            goto L_0x0428
        L_0x0421:
            float r4 = r0.maxX
            int r5 = (r1 > r4 ? 1 : (r1 == r4 ? 0 : -1))
            if (r5 <= 0) goto L_0x0428
            goto L_0x041f
        L_0x0428:
            float r4 = r0.minY
            int r5 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1))
            if (r5 >= 0) goto L_0x0430
        L_0x042e:
            r2 = r4
            goto L_0x0437
        L_0x0430:
            float r4 = r0.maxY
            int r5 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1))
            if (r5 <= 0) goto L_0x0437
            goto L_0x042e
        L_0x0437:
            r0.animateTo(r3, r1, r2, r8)
            goto L_0x0472
        L_0x043b:
            r0.checkMinMax(r8)
            int r1 = r0.currentEditMode
            if (r1 != r6) goto L_0x0472
            float r1 = r0.translationX
            float r2 = r0.translationY
            float r3 = r0.scale
            r0.updateMinMax(r3)
            float r3 = r0.translationX
            float r4 = r0.minX
            int r5 = (r3 > r4 ? 1 : (r3 == r4 ? 0 : -1))
            if (r5 >= 0) goto L_0x0455
        L_0x0453:
            r1 = r4
            goto L_0x045c
        L_0x0455:
            float r4 = r0.maxX
            int r3 = (r3 > r4 ? 1 : (r3 == r4 ? 0 : -1))
            if (r3 <= 0) goto L_0x045c
            goto L_0x0453
        L_0x045c:
            float r3 = r0.translationY
            float r4 = r0.minY
            int r5 = (r3 > r4 ? 1 : (r3 == r4 ? 0 : -1))
            if (r5 >= 0) goto L_0x0466
        L_0x0464:
            r2 = r4
            goto L_0x046d
        L_0x0466:
            float r4 = r0.maxY
            int r3 = (r3 > r4 ? 1 : (r3 == r4 ? 0 : -1))
            if (r3 <= 0) goto L_0x046d
            goto L_0x0464
        L_0x046d:
            float r3 = r0.scale
            r0.animateTo(r3, r1, r2, r9)
        L_0x0472:
            r0.zooming = r9
            r0.moving = r9
            goto L_0x0677
        L_0x0478:
            boolean r2 = r0.draggingDown
            if (r2 == 0) goto L_0x04c1
            float r2 = r0.dragY
            float r3 = r20.getY()
            float r2 = r2 - r3
            float r2 = java.lang.Math.abs(r2)
            int r3 = r19.getContainerViewHeight()
            float r3 = (float) r3
            r4 = 1086324736(0x40CLASSNAME, float:6.0)
            float r3 = r3 / r4
            int r2 = (r2 > r3 ? 1 : (r2 == r3 ? 0 : -1))
            if (r2 <= 0) goto L_0x04ac
            boolean r2 = r19.enableSwipeToPiP()
            if (r2 == 0) goto L_0x04a8
            float r2 = r0.dragY
            float r1 = r20.getY()
            float r2 = r2 - r1
            int r1 = (r2 > r12 ? 1 : (r2 == r12 ? 0 : -1))
            if (r1 <= 0) goto L_0x04a8
            r0.switchToPip(r8)
            goto L_0x04bd
        L_0x04a8:
            r0.closePhoto(r8, r9)
            goto L_0x04bd
        L_0x04ac:
            android.widget.FrameLayout r1 = r0.pickerView
            int r1 = r1.getVisibility()
            if (r1 != 0) goto L_0x04ba
            r0.toggleActionBar(r8, r8)
            r0.toggleCheckImageView(r8)
        L_0x04ba:
            r0.animateTo(r11, r12, r12, r9)
        L_0x04bd:
            r0.draggingDown = r9
            goto L_0x0677
        L_0x04c1:
            boolean r1 = r0.moving
            if (r1 == 0) goto L_0x0677
            float r1 = r0.translationX
            float r2 = r0.translationY
            float r3 = r0.scale
            r0.updateMinMax(r3)
            r0.moving = r9
            r0.canDragDown = r8
            android.view.VelocityTracker r3 = r0.velocityTracker
            if (r3 == 0) goto L_0x04e7
            float r4 = r0.scale
            int r4 = (r4 > r11 ? 1 : (r4 == r11 ? 0 : -1))
            if (r4 != 0) goto L_0x04e7
            r4 = 1000(0x3e8, float:1.401E-42)
            r3.computeCurrentVelocity(r4)
            android.view.VelocityTracker r3 = r0.velocityTracker
            float r12 = r3.getXVelocity()
        L_0x04e7:
            int r3 = r0.currentEditMode
            if (r3 != 0) goto L_0x053b
            int r3 = r0.sendPhotoType
            if (r3 == r8) goto L_0x053b
            float r3 = r0.translationX
            float r4 = r0.minX
            int r5 = r19.getContainerViewWidth()
            int r5 = r5 / r6
            float r5 = (float) r5
            float r4 = r4 - r5
            r5 = 1143111680(0x44228000, float:650.0)
            int r3 = (r3 > r4 ? 1 : (r3 == r4 ? 0 : -1))
            if (r3 < 0) goto L_0x050b
            int r3 = org.telegram.messenger.AndroidUtilities.dp(r5)
            int r3 = -r3
            float r3 = (float) r3
            int r3 = (r12 > r3 ? 1 : (r12 == r3 ? 0 : -1))
            if (r3 >= 0) goto L_0x0517
        L_0x050b:
            org.telegram.messenger.ImageReceiver r3 = r0.rightImage
            boolean r3 = r3.hasImageSet()
            if (r3 == 0) goto L_0x0517
            r19.goToNext()
            return r8
        L_0x0517:
            float r3 = r0.translationX
            float r4 = r0.maxX
            int r7 = r19.getContainerViewWidth()
            int r7 = r7 / r6
            float r6 = (float) r7
            float r4 = r4 + r6
            int r3 = (r3 > r4 ? 1 : (r3 == r4 ? 0 : -1))
            if (r3 > 0) goto L_0x052f
            int r3 = org.telegram.messenger.AndroidUtilities.dp(r5)
            float r3 = (float) r3
            int r3 = (r12 > r3 ? 1 : (r12 == r3 ? 0 : -1))
            if (r3 <= 0) goto L_0x053b
        L_0x052f:
            org.telegram.messenger.ImageReceiver r3 = r0.leftImage
            boolean r3 = r3.hasImageSet()
            if (r3 == 0) goto L_0x053b
            r19.goToPrev()
            return r8
        L_0x053b:
            float r3 = r0.translationX
            float r4 = r0.minX
            int r5 = (r3 > r4 ? 1 : (r3 == r4 ? 0 : -1))
            if (r5 >= 0) goto L_0x0545
        L_0x0543:
            r1 = r4
            goto L_0x054c
        L_0x0545:
            float r4 = r0.maxX
            int r3 = (r3 > r4 ? 1 : (r3 == r4 ? 0 : -1))
            if (r3 <= 0) goto L_0x054c
            goto L_0x0543
        L_0x054c:
            float r3 = r0.translationY
            float r4 = r0.minY
            int r5 = (r3 > r4 ? 1 : (r3 == r4 ? 0 : -1))
            if (r5 >= 0) goto L_0x0556
        L_0x0554:
            r2 = r4
            goto L_0x055d
        L_0x0556:
            float r4 = r0.maxY
            int r3 = (r3 > r4 ? 1 : (r3 == r4 ? 0 : -1))
            if (r3 <= 0) goto L_0x055d
            goto L_0x0554
        L_0x055d:
            float r3 = r0.scale
            r0.animateTo(r3, r1, r2, r9)
            goto L_0x0677
        L_0x0564:
            r0.discardTap = r9
            android.widget.Scroller r2 = r0.scroller
            boolean r2 = r2.isFinished()
            if (r2 != 0) goto L_0x0573
            android.widget.Scroller r2 = r0.scroller
            r2.abortAnimation()
        L_0x0573:
            boolean r2 = r0.draggingDown
            if (r2 != 0) goto L_0x065e
            boolean r2 = r0.changingPage
            if (r2 != 0) goto L_0x065e
            boolean r2 = r0.canZoom
            if (r2 == 0) goto L_0x05fe
            int r2 = r20.getPointerCount()
            if (r2 != r7) goto L_0x05fe
            int r2 = r0.paintViewTouched
            if (r2 != r8) goto L_0x05a2
            r11 = 0
            r13 = 0
            r15 = 3
            r16 = 0
            r17 = 0
            r18 = 0
            android.view.MotionEvent r2 = android.view.MotionEvent.obtain(r11, r13, r15, r16, r17, r18)
            org.telegram.ui.Components.PhotoPaintView r3 = r0.photoPaintView
            r3.onTouch(r2)
            r2.recycle()
            r0.paintViewTouched = r7
        L_0x05a2:
            float r2 = r1.getX(r8)
            float r3 = r1.getX(r9)
            float r2 = r2 - r3
            double r2 = (double) r2
            float r4 = r1.getY(r8)
            float r5 = r1.getY(r9)
            float r4 = r4 - r5
            double r4 = (double) r4
            double r2 = java.lang.Math.hypot(r2, r4)
            float r2 = (float) r2
            r0.pinchStartDistance = r2
            float r2 = r0.scale
            r0.pinchStartScale = r2
            float r2 = r1.getX(r9)
            float r3 = r1.getX(r8)
            float r2 = r2 + r3
            float r2 = r2 / r10
            r0.pinchCenterX = r2
            float r2 = r1.getY(r9)
            float r3 = r1.getY(r8)
            float r2 = r2 + r3
            float r2 = r2 / r10
            r0.pinchCenterY = r2
            float r3 = r0.translationX
            r0.pinchStartX = r3
            float r3 = r0.translationY
            r0.pinchStartY = r3
            r0.zooming = r8
            r0.moving = r9
            int r3 = r0.currentEditMode
            if (r3 != r6) goto L_0x05f3
            float r3 = r0.pinchCenterX
            r0.moveStartX = r3
            r0.moveStartY = r2
            r0.draggingDown = r9
            r0.canDragDown = r9
        L_0x05f3:
            r19.hidePressedDrawables()
            android.view.VelocityTracker r2 = r0.velocityTracker
            if (r2 == 0) goto L_0x065e
            r2.clear()
            goto L_0x065e
        L_0x05fe:
            int r2 = r20.getPointerCount()
            if (r2 != r8) goto L_0x065e
            int r2 = r0.currentEditMode
            if (r2 != r6) goto L_0x0645
            int r2 = r0.paintViewTouched
            if (r2 != 0) goto L_0x065e
            org.telegram.ui.Components.PhotoPaintView r2 = r0.photoPaintView
            android.graphics.Rect r3 = r0.hitRect
            r2.getHitRect(r3)
            android.graphics.Rect r2 = r0.hitRect
            float r3 = r20.getX()
            int r3 = (int) r3
            float r4 = r20.getY()
            int r4 = (int) r4
            boolean r2 = r2.contains(r3, r4)
            if (r2 == 0) goto L_0x065e
            android.view.MotionEvent r2 = android.view.MotionEvent.obtain(r20)
            org.telegram.ui.Components.PhotoPaintView r3 = r0.photoPaintView
            float r3 = r3.getX()
            float r3 = -r3
            org.telegram.ui.Components.PhotoPaintView r4 = r0.photoPaintView
            float r4 = r4.getY()
            float r4 = -r4
            r2.offsetLocation(r3, r4)
            org.telegram.ui.Components.PhotoPaintView r3 = r0.photoPaintView
            r3.onTouch(r2)
            r2.recycle()
            r0.paintViewTouched = r8
            goto L_0x065e
        L_0x0645:
            float r2 = r20.getX()
            r0.moveStartX = r2
            float r2 = r20.getY()
            r0.moveStartY = r2
            r0.dragY = r2
            r0.draggingDown = r9
            r0.canDragDown = r8
            android.view.VelocityTracker r2 = r0.velocityTracker
            if (r2 == 0) goto L_0x065e
            r2.clear()
        L_0x065e:
            int r2 = r20.getActionMasked()
            if (r2 != 0) goto L_0x0672
            float r1 = r20.getX()
            r0.longPressX = r1
            java.lang.Runnable r1 = r0.longPressRunnable
            r2 = 300(0x12c, double:1.48E-321)
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r1, r2)
            goto L_0x0677
        L_0x0672:
            java.lang.Runnable r1 = r0.longPressRunnable
            org.telegram.messenger.AndroidUtilities.cancelRunOnUIThread(r1)
        L_0x0677:
            return r9
        L_0x0678:
            int r1 = r20.getAction()
            if (r1 != r8) goto L_0x0681
            r0.closeCaptionEnter(r8)
        L_0x0681:
            return r8
        L_0x0682:
            return r9
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.onTouchEvent(android.view.MotionEvent):boolean");
    }

    /* JADX WARNING: Code restructure failed: missing block: B:4:0x0017, code lost:
        if (r2 > r3) goto L_0x0011;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:9:0x0028, code lost:
        if (r2 > r3) goto L_0x0022;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void checkMinMax(boolean r6) {
        /*
            r5 = this;
            float r0 = r5.translationX
            float r1 = r5.translationY
            float r2 = r5.scale
            r5.updateMinMax(r2)
            float r2 = r5.translationX
            float r3 = r5.minX
            int r4 = (r2 > r3 ? 1 : (r2 == r3 ? 0 : -1))
            if (r4 >= 0) goto L_0x0013
        L_0x0011:
            r0 = r3
            goto L_0x001a
        L_0x0013:
            float r3 = r5.maxX
            int r2 = (r2 > r3 ? 1 : (r2 == r3 ? 0 : -1))
            if (r2 <= 0) goto L_0x001a
            goto L_0x0011
        L_0x001a:
            float r2 = r5.translationY
            float r3 = r5.minY
            int r4 = (r2 > r3 ? 1 : (r2 == r3 ? 0 : -1))
            if (r4 >= 0) goto L_0x0024
        L_0x0022:
            r1 = r3
            goto L_0x002b
        L_0x0024:
            float r3 = r5.maxY
            int r2 = (r2 > r3 ? 1 : (r2 == r3 ? 0 : -1))
            if (r2 <= 0) goto L_0x002b
            goto L_0x0022
        L_0x002b:
            float r2 = r5.scale
            r5.animateTo(r2, r0, r1, r6)
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.checkMinMax(boolean):void");
    }

    private void goToNext() {
        float containerViewWidth = this.scale != 1.0f ? ((((float) getContainerViewWidth()) - this.centerImage.getImageWidth()) / 2.0f) * this.scale : 0.0f;
        this.switchImageAfterAnimation = 1;
        animateTo(this.scale, ((this.minX - ((float) getContainerViewWidth())) - containerViewWidth) - ((float) (AndroidUtilities.dp(30.0f) / 2)), this.translationY, false);
    }

    private void goToPrev() {
        float containerViewWidth = this.scale != 1.0f ? ((((float) getContainerViewWidth()) - this.centerImage.getImageWidth()) / 2.0f) * this.scale : 0.0f;
        this.switchImageAfterAnimation = 2;
        animateTo(this.scale, this.maxX + ((float) getContainerViewWidth()) + containerViewWidth + ((float) (AndroidUtilities.dp(30.0f) / 2)), this.translationY, false);
    }

    private void cancelMoveZoomAnimation() {
        AnimatorSet animatorSet = this.imageMoveAnimation;
        if (animatorSet != null) {
            float f = this.scale;
            float f2 = this.animationValue;
            float f3 = f + ((this.animateToScale - f) * f2);
            float f4 = this.translationX;
            float f5 = f4 + ((this.animateToX - f4) * f2);
            float f6 = this.translationY;
            float f7 = f6 + ((this.animateToY - f6) * f2);
            float f8 = this.rotate;
            animatorSet.cancel();
            this.scale = f3;
            this.translationX = f5;
            this.translationY = f7;
            this.animationStartTime = 0;
            this.rotate = f8 + ((this.animateToRotate - f8) * f2);
            updateMinMax(f3);
            this.zoomAnimation = false;
            this.containerView.invalidate();
        }
    }

    private void animateTo(float f, float f2, float f3, boolean z) {
        animateTo(f, f2, f3, z, 250);
    }

    private void animateTo(float f, float f2, float f3, boolean z, int i) {
        if (this.scale != f || this.translationX != f2 || this.translationY != f3) {
            this.zoomAnimation = z;
            this.animateToScale = f;
            this.animateToX = f2;
            this.animateToY = f3;
            this.animationStartTime = System.currentTimeMillis();
            AnimatorSet animatorSet = new AnimatorSet();
            this.imageMoveAnimation = animatorSet;
            animatorSet.playTogether(new Animator[]{ObjectAnimator.ofFloat(this, AnimationProperties.PHOTO_VIEWER_ANIMATION_VALUE, new float[]{0.0f, 1.0f})});
            this.imageMoveAnimation.setInterpolator(this.interpolator);
            this.imageMoveAnimation.setDuration((long) i);
            this.imageMoveAnimation.addListener(new AnimatorListenerAdapter() {
                public void onAnimationEnd(Animator animator) {
                    AnimatorSet unused = PhotoViewer.this.imageMoveAnimation = null;
                    PhotoViewer.this.containerView.invalidate();
                }
            });
            this.imageMoveAnimation.start();
        }
    }

    @Keep
    public void setAnimationValue(float f) {
        this.animationValue = f;
        this.containerView.invalidate();
    }

    @Keep
    public float getAnimationValue() {
        return this.animationValue;
    }

    private void switchToNextIndex(int i, boolean z) {
        if (this.currentMessageObject != null) {
            releasePlayer(false);
            FileLoader.getInstance(this.currentAccount).cancelLoadFile(this.currentMessageObject.getDocument());
        } else if (this.currentPageBlock != null) {
            TLObject media = this.pageBlocksAdapter.getMedia(this.currentIndex);
            if (media instanceof TLRPC$Document) {
                releasePlayer(false);
                FileLoader.getInstance(this.currentAccount).cancelLoadFile((TLRPC$Document) media);
            }
        }
        GroupedPhotosListView groupedPhotosListView2 = this.groupedPhotosListView;
        if (groupedPhotosListView2 != null) {
            groupedPhotosListView2.setAnimateBackground(true);
        }
        this.playerAutoStarted = false;
        setImageIndex(this.currentIndex + i, z, true);
        if (shouldMessageObjectAutoPlayed(this.currentMessageObject) || shouldIndexAutoPlayed(this.currentIndex)) {
            this.playerAutoStarted = true;
            onActionClick(true);
            checkProgress(0, false, true);
        }
        checkFullscreenButton();
    }

    /* access modifiers changed from: private */
    public boolean shouldMessageObjectAutoPlayed(MessageObject messageObject) {
        return messageObject != null && messageObject.isVideo() && (messageObject.mediaExists || messageObject.attachPathExists || (messageObject.canStreamVideo() && SharedConfig.streamMedia)) && SharedConfig.autoplayVideo;
    }

    /* JADX WARNING: Code restructure failed: missing block: B:6:0x000e, code lost:
        r2 = r1.pageBlocksAdapter.getFile(r2);
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private boolean shouldIndexAutoPlayed(int r2) {
        /*
            r1 = this;
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r0 = r1.pageBlocksAdapter
            if (r0 == 0) goto L_0x001e
            boolean r0 = r0.isVideo(r2)
            if (r0 == 0) goto L_0x001e
            boolean r0 = org.telegram.messenger.SharedConfig.autoplayVideo
            if (r0 == 0) goto L_0x001e
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r0 = r1.pageBlocksAdapter
            java.io.File r2 = r0.getFile(r2)
            if (r2 == 0) goto L_0x001e
            boolean r2 = r2.exists()
            if (r2 == 0) goto L_0x001e
            r2 = 1
            return r2
        L_0x001e:
            r2 = 0
            return r2
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.shouldIndexAutoPlayed(int):boolean");
    }

    /* access modifiers changed from: private */
    public float getCropFillScale(boolean z) {
        ImageReceiver imageReceiver = this.centerImage;
        int bitmapHeight = z ? imageReceiver.getBitmapHeight() : imageReceiver.getBitmapWidth();
        int bitmapWidth = z ? this.centerImage.getBitmapWidth() : this.centerImage.getBitmapHeight();
        float min = Math.min((float) this.photoCropView.getMeasuredWidth(), (((float) this.photoCropView.getMeasuredHeight()) - ((float) AndroidUtilities.dp(64.0f))) - ((float) (isStatusBarVisible() ? AndroidUtilities.statusBarHeight : 0))) - ((float) (AndroidUtilities.dp(16.0f) * 2));
        return Math.max(min / ((float) bitmapHeight), min / ((float) bitmapWidth));
    }

    /* access modifiers changed from: private */
    public boolean isStatusBarVisible() {
        return Build.VERSION.SDK_INT >= 21 && !this.inBubbleMode;
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:305:0x074f, code lost:
        if (r14 == 2) goto L_0x076d;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:309:0x0757, code lost:
        if (r9 == -1) goto L_0x075b;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:314:0x0760, code lost:
        if (r9 == r0) goto L_0x076d;
     */
    /* JADX WARNING: Removed duplicated region for block: B:124:0x02ce  */
    /* JADX WARNING: Removed duplicated region for block: B:137:0x02fd  */
    /* JADX WARNING: Removed duplicated region for block: B:138:0x0302  */
    /* JADX WARNING: Removed duplicated region for block: B:144:0x031d  */
    /* JADX WARNING: Removed duplicated region for block: B:145:0x031f  */
    /* JADX WARNING: Removed duplicated region for block: B:149:0x0326  */
    /* JADX WARNING: Removed duplicated region for block: B:161:0x0375  */
    /* JADX WARNING: Removed duplicated region for block: B:169:0x03ad  */
    /* JADX WARNING: Removed duplicated region for block: B:191:0x0464  */
    /* JADX WARNING: Removed duplicated region for block: B:196:0x0497  */
    /* JADX WARNING: Removed duplicated region for block: B:203:0x04e1  */
    /* JADX WARNING: Removed duplicated region for block: B:205:0x04e8  */
    /* JADX WARNING: Removed duplicated region for block: B:208:0x0541  */
    /* JADX WARNING: Removed duplicated region for block: B:210:0x054c  */
    /* JADX WARNING: Removed duplicated region for block: B:215:0x056c  */
    /* JADX WARNING: Removed duplicated region for block: B:229:0x05a1  */
    /* JADX WARNING: Removed duplicated region for block: B:230:0x05a4  */
    /* JADX WARNING: Removed duplicated region for block: B:233:0x05ae A[ADDED_TO_REGION] */
    /* JADX WARNING: Removed duplicated region for block: B:239:0x05da  */
    /* JADX WARNING: Removed duplicated region for block: B:240:0x05dd  */
    /* JADX WARNING: Removed duplicated region for block: B:250:0x0615 A[ADDED_TO_REGION] */
    /* JADX WARNING: Removed duplicated region for block: B:290:0x06f7  */
    /* JADX WARNING: Removed duplicated region for block: B:291:0x0704  */
    /* JADX WARNING: Removed duplicated region for block: B:294:0x0734  */
    /* JADX WARNING: Removed duplicated region for block: B:317:0x0769  */
    /* JADX WARNING: Removed duplicated region for block: B:320:0x0770  */
    /* JADX WARNING: Removed duplicated region for block: B:357:0x0802  */
    /* JADX WARNING: Removed duplicated region for block: B:368:0x0825  */
    /* JADX WARNING: Removed duplicated region for block: B:374:0x0852  */
    /* JADX WARNING: Removed duplicated region for block: B:379:0x086e  */
    /* JADX WARNING: Removed duplicated region for block: B:434:0x0977  */
    /* JADX WARNING: Removed duplicated region for block: B:437:0x098a  */
    /* JADX WARNING: Removed duplicated region for block: B:444:0x09b7  */
    /* JADX WARNING: Removed duplicated region for block: B:458:0x09df  */
    /* JADX WARNING: Removed duplicated region for block: B:459:0x09ec  */
    /* JADX WARNING: Removed duplicated region for block: B:462:0x09f4  */
    /* JADX WARNING: Removed duplicated region for block: B:471:0x0a1e  */
    /* JADX WARNING: Removed duplicated region for block: B:474:0x0a26  */
    /* JADX WARNING: Removed duplicated region for block: B:475:0x0a41  */
    /* JADX WARNING: Removed duplicated region for block: B:482:0x0a5f  */
    /* JADX WARNING: Removed duplicated region for block: B:505:0x0ae7  */
    /* JADX WARNING: Removed duplicated region for block: B:507:0x0aed  */
    /* JADX WARNING: Removed duplicated region for block: B:524:0x0b34  */
    /* JADX WARNING: Removed duplicated region for block: B:551:0x0bf3  */
    /* JADX WARNING: Removed duplicated region for block: B:575:0x0c8f  */
    /* JADX WARNING: Removed duplicated region for block: B:576:0x0CLASSNAME  */
    /* JADX WARNING: Removed duplicated region for block: B:581:0x0cbb  */
    /* JADX WARNING: Removed duplicated region for block: B:587:0x0cff  */
    /* JADX WARNING: Removed duplicated region for block: B:594:0x0d5c  */
    /* JADX WARNING: Removed duplicated region for block: B:599:0x0d6f  */
    /* JADX WARNING: Removed duplicated region for block: B:620:0x0dc9  */
    /* JADX WARNING: Removed duplicated region for block: B:625:0x0dd8  */
    /* JADX WARNING: Removed duplicated region for block: B:630:0x0bdf A[EDGE_INSN: B:630:0x0bdf->B:549:0x0bdf ?: BREAK  , SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:638:? A[RETURN, SYNTHETIC] */
    @android.annotation.SuppressLint({"NewApi", "DrawAllocation"})
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void onDraw(android.graphics.Canvas r47) {
        /*
            r46 = this;
            r10 = r46
            r11 = r47
            int r0 = r10.animationInProgress
            r12 = 0
            r13 = 2
            r14 = 1
            java.lang.Integer r1 = java.lang.Integer.valueOf(r14)
            r15 = 1065353216(0x3var_, float:1.0)
            if (r0 != r14) goto L_0x0085
            boolean r0 = r10.padImageForHorizontalInsets
            if (r0 == 0) goto L_0x0027
            r47.save()
            int r0 = r46.getLeftInset()
            int r0 = r0 / r13
            int r1 = r46.getRightInset()
            int r1 = r1 / r13
            int r0 = r0 - r1
            float r0 = (float) r0
            r11.translate(r0, r12)
        L_0x0027:
            org.telegram.ui.Components.ClippingImageView r0 = r10.animatingImageView
            if (r0 == 0) goto L_0x0069
            r47.save()
            org.telegram.ui.Components.ClippingImageView r0 = r10.animatingImageView
            float r0 = r0.getCenterX()
            int r1 = r47.getWidth()
            int r1 = r1 / r13
            float r1 = (float) r1
            float r0 = r0 - r1
            org.telegram.ui.Components.ClippingImageView r1 = r10.animatingImageView
            float r1 = r1.getCenterY()
            int r2 = r47.getHeight()
            int r2 = r2 / r13
            float r2 = (float) r2
            float r1 = r1 - r2
            r11.translate(r0, r1)
            org.telegram.ui.Components.ClippingImageView r0 = r10.animatingImageView
            float r0 = r0.getAnimationProgress()
            int r1 = r10.animationInProgress
            if (r1 != r14) goto L_0x0056
            goto L_0x0058
        L_0x0056:
            float r0 = r15 - r0
        L_0x0058:
            int r1 = r47.getWidth()
            int r1 = r1 / r13
            float r1 = (float) r1
            int r2 = r47.getHeight()
            int r2 = r2 / r13
            float r2 = (float) r2
            r11.scale(r0, r0, r1, r2)
            r6 = r0
            goto L_0x006b
        L_0x0069:
            r6 = 1065353216(0x3var_, float:1.0)
        L_0x006b:
            r3 = 0
            r4 = 1065353216(0x3var_, float:1.0)
            r5 = 0
            r1 = r46
            r2 = r47
            r1.drawProgress(r2, r3, r4, r5, r6)
            org.telegram.ui.Components.ClippingImageView r0 = r10.animatingImageView
            if (r0 == 0) goto L_0x007d
            r47.restore()
        L_0x007d:
            boolean r0 = r10.padImageForHorizontalInsets
            if (r0 == 0) goto L_0x0084
            r47.restore()
        L_0x0084:
            return
        L_0x0085:
            r9 = 3
            if (r0 == r9) goto L_0x0e12
            boolean r2 = r10.isVisible
            if (r2 != 0) goto L_0x0094
            if (r0 == r13) goto L_0x0094
            boolean r0 = r10.pipAnimationInProgress
            if (r0 != 0) goto L_0x0094
            goto L_0x0e12
        L_0x0094:
            boolean r0 = r10.padImageForHorizontalInsets
            if (r0 == 0) goto L_0x00aa
            r47.save()
            int r0 = r46.getLeftInset()
            int r0 = r0 / r13
            int r2 = r46.getRightInset()
            int r2 = r2 / r13
            int r0 = r0 - r2
            float r0 = (float) r0
            r11.translate(r0, r12)
        L_0x00aa:
            long r2 = java.lang.System.currentTimeMillis()
            long r4 = r10.videoCrossfadeAlphaLastTime
            long r4 = r2 - r4
            r6 = 20
            int r0 = (r4 > r6 ? 1 : (r4 == r6 ? 0 : -1))
            if (r0 <= 0) goto L_0x00ba
            r4 = 17
        L_0x00ba:
            r7 = r4
            r10.videoCrossfadeAlphaLastTime = r2
            android.animation.AnimatorSet r0 = r10.imageMoveAnimation
            if (r0 == 0) goto L_0x0119
            android.widget.Scroller r0 = r10.scroller
            boolean r0 = r0.isFinished()
            if (r0 != 0) goto L_0x00ce
            android.widget.Scroller r0 = r10.scroller
            r0.abortAnimation()
        L_0x00ce:
            float r0 = r10.scale
            float r2 = r10.animateToScale
            float r3 = r2 - r0
            float r4 = r10.animationValue
            float r3 = r3 * r4
            float r3 = r3 + r0
            float r9 = r10.rotate
            float r6 = r10.animateToRotate
            float r6 = r6 - r9
            float r6 = r6 * r4
            float r9 = r9 + r6
            float r6 = r10.translationX
            float r13 = r10.animateToX
            float r13 = r13 - r6
            float r13 = r13 * r4
            float r13 = r13 + r6
            float r14 = r10.translationY
            float r5 = r10.animateToY
            float r5 = r5 - r14
            float r5 = r5 * r4
            float r14 = r14 + r5
            float r5 = r10.mirror
            float r12 = r10.animateToMirror
            float r12 = r12 - r5
            float r12 = r12 * r4
            float r5 = r5 + r12
            int r2 = (r2 > r15 ? 1 : (r2 == r15 ? 0 : -1))
            if (r2 != 0) goto L_0x0108
            int r0 = (r0 > r15 ? 1 : (r0 == r15 ? 0 : -1))
            if (r0 != 0) goto L_0x0108
            r0 = 0
            int r2 = (r6 > r0 ? 1 : (r6 == r0 ? 0 : -1))
            if (r2 != 0) goto L_0x0108
            r0 = r14
            goto L_0x010a
        L_0x0108:
            r0 = -1082130432(0xffffffffbvar_, float:-1.0)
        L_0x010a:
            r10.updateMinMax(r3)
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r2 = r10.containerView
            r2.invalidate()
            r12 = r3
            r6 = r14
        L_0x0114:
            r14 = r9
            r9 = r13
            r13 = r5
            goto L_0x01f3
        L_0x0119:
            long r2 = r10.animationStartTime
            r4 = 0
            int r0 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1))
            if (r0 == 0) goto L_0x0135
            float r0 = r10.animateToX
            r10.translationX = r0
            float r0 = r10.animateToY
            r10.translationY = r0
            float r0 = r10.animateToScale
            r10.scale = r0
            r10.animationStartTime = r4
            r10.updateMinMax(r0)
            r2 = 0
            r10.zoomAnimation = r2
        L_0x0135:
            android.widget.Scroller r0 = r10.scroller
            boolean r0 = r0.isFinished()
            if (r0 != 0) goto L_0x0190
            android.widget.Scroller r0 = r10.scroller
            boolean r0 = r0.computeScrollOffset()
            if (r0 == 0) goto L_0x0190
            android.widget.Scroller r0 = r10.scroller
            int r0 = r0.getStartX()
            float r0 = (float) r0
            float r2 = r10.maxX
            int r0 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
            if (r0 >= 0) goto L_0x0168
            android.widget.Scroller r0 = r10.scroller
            int r0 = r0.getStartX()
            float r0 = (float) r0
            float r2 = r10.minX
            int r0 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
            if (r0 <= 0) goto L_0x0168
            android.widget.Scroller r0 = r10.scroller
            int r0 = r0.getCurrX()
            float r0 = (float) r0
            r10.translationX = r0
        L_0x0168:
            android.widget.Scroller r0 = r10.scroller
            int r0 = r0.getStartY()
            float r0 = (float) r0
            float r2 = r10.maxY
            int r0 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
            if (r0 >= 0) goto L_0x018b
            android.widget.Scroller r0 = r10.scroller
            int r0 = r0.getStartY()
            float r0 = (float) r0
            float r2 = r10.minY
            int r0 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
            if (r0 <= 0) goto L_0x018b
            android.widget.Scroller r0 = r10.scroller
            int r0 = r0.getCurrY()
            float r0 = (float) r0
            r10.translationY = r0
        L_0x018b:
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r0 = r10.containerView
            r0.invalidate()
        L_0x0190:
            int r0 = r10.switchImageAfterAnimation
            if (r0 == 0) goto L_0x01db
            r2 = 0
            r10.openedFullScreenVideo = r2
            java.util.ArrayList<java.lang.Object> r0 = r10.imagesArrLocals
            boolean r0 = r0.isEmpty()
            if (r0 != 0) goto L_0x01bf
            int r0 = r10.currentIndex
            if (r0 < 0) goto L_0x01bf
            java.util.ArrayList<java.lang.Object> r2 = r10.imagesArrLocals
            int r2 = r2.size()
            if (r0 >= r2) goto L_0x01bf
            java.util.ArrayList<java.lang.Object> r0 = r10.imagesArrLocals
            int r2 = r10.currentIndex
            java.lang.Object r0 = r0.get(r2)
            boolean r2 = r0 instanceof org.telegram.messenger.MediaController.MediaEditState
            if (r2 == 0) goto L_0x01bf
            org.telegram.messenger.MediaController$MediaEditState r0 = (org.telegram.messenger.MediaController.MediaEditState) r0
            org.telegram.messenger.VideoEditedInfo r2 = r46.getCurrentVideoEditedInfo()
            r0.editedInfo = r2
        L_0x01bf:
            int r0 = r10.switchImageAfterAnimation
            r2 = 1
            if (r0 != r2) goto L_0x01cd
            org.telegram.ui.PhotoViewer$$ExternalSyntheticLambda55 r0 = new org.telegram.ui.PhotoViewer$$ExternalSyntheticLambda55
            r0.<init>(r10)
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0)
            goto L_0x01d8
        L_0x01cd:
            r2 = 2
            if (r0 != r2) goto L_0x01d8
            org.telegram.ui.PhotoViewer$$ExternalSyntheticLambda50 r0 = new org.telegram.ui.PhotoViewer$$ExternalSyntheticLambda50
            r0.<init>(r10)
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0)
        L_0x01d8:
            r2 = 0
            r10.switchImageAfterAnimation = r2
        L_0x01db:
            float r3 = r10.scale
            float r5 = r10.mirror
            float r9 = r10.rotate
            float r14 = r10.translationY
            float r13 = r10.translationX
            boolean r0 = r10.moving
            r12 = r3
            if (r0 != 0) goto L_0x01ee
            r0 = r14
            r6 = r0
            goto L_0x0114
        L_0x01ee:
            r6 = r14
            r0 = -1082130432(0xffffffffbvar_, float:-1.0)
            goto L_0x0114
        L_0x01f3:
            org.telegram.ui.Components.PhotoViewerWebView r2 = r10.photoViewerWebView
            if (r2 == 0) goto L_0x01fa
            r2.setTranslationY(r6)
        L_0x01fa:
            boolean r2 = r10.isActionBarVisible
            if (r2 == 0) goto L_0x0269
            r2 = 1065354055(0x3var_, float:1.0001)
            r3 = 120(0x78, double:5.93E-322)
            int r2 = (r12 > r2 ? 1 : (r12 == r2 ? 0 : -1))
            if (r2 > 0) goto L_0x023d
            boolean r2 = r10.allowShowFullscreenButton
            if (r2 != 0) goto L_0x0269
            android.widget.ImageView[] r2 = r10.fullscreenButton
            r5 = 0
            r2 = r2[r5]
            java.lang.Object r2 = r2.getTag()
            if (r2 != 0) goto L_0x026a
            android.widget.ImageView[] r2 = r10.fullscreenButton
            r2 = r2[r5]
            android.view.ViewPropertyAnimator r2 = r2.animate()
            android.view.ViewPropertyAnimator r2 = r2.alpha(r15)
            android.view.ViewPropertyAnimator r2 = r2.setDuration(r3)
            org.telegram.ui.PhotoViewer$75 r3 = new org.telegram.ui.PhotoViewer$75
            r3.<init>()
            android.view.ViewPropertyAnimator r2 = r2.setListener(r3)
            r2.start()
            android.widget.ImageView[] r2 = r10.fullscreenButton
            r2 = r2[r5]
            r2.setTag(r1)
            r1 = 1
            r10.allowShowFullscreenButton = r1
            goto L_0x026a
        L_0x023d:
            r5 = 0
            boolean r2 = r10.allowShowFullscreenButton
            if (r2 == 0) goto L_0x026a
            android.widget.ImageView[] r2 = r10.fullscreenButton
            r2 = r2[r5]
            android.view.ViewPropertyAnimator r2 = r2.animate()
            r15 = 0
            android.view.ViewPropertyAnimator r2 = r2.alpha(r15)
            android.view.ViewPropertyAnimator r2 = r2.setDuration(r3)
            org.telegram.ui.PhotoViewer$76 r3 = new org.telegram.ui.PhotoViewer$76
            r3.<init>()
            android.view.ViewPropertyAnimator r2 = r2.setListener(r3)
            r2.start()
            android.widget.ImageView[] r2 = r10.fullscreenButton
            r2 = r2[r5]
            r2.setTag(r1)
            r10.allowShowFullscreenButton = r5
            goto L_0x026a
        L_0x0269:
            r5 = 0
        L_0x026a:
            int r15 = r46.getContainerViewWidth()
            int r4 = r46.getContainerViewHeight()
            int r1 = r10.animationInProgress
            r2 = 4
            r27 = 1132396544(0x437var_, float:255.0)
            r28 = 1082130432(0x40800000, float:4.0)
            r3 = 2
            if (r1 == r3) goto L_0x02ca
            if (r1 == r2) goto L_0x02ca
            boolean r3 = r10.pipAnimationInProgress
            if (r3 != 0) goto L_0x02ca
            boolean r3 = r10.isInline
            if (r3 != 0) goto L_0x02ca
            int r1 = r10.currentEditMode
            if (r1 != 0) goto L_0x02c0
            int r1 = r10.sendPhotoType
            r2 = 1
            if (r1 == r2) goto L_0x02c0
            float r1 = r10.scale
            r2 = 1065353216(0x3var_, float:1.0)
            int r1 = (r1 > r2 ? 1 : (r1 == r2 ? 0 : -1))
            if (r1 != 0) goto L_0x02c0
            r17 = -1082130432(0xffffffffbvar_, float:-1.0)
            int r1 = (r0 > r17 ? 1 : (r0 == r17 ? 0 : -1))
            if (r1 == 0) goto L_0x02c2
            boolean r1 = r10.zoomAnimation
            if (r1 != 0) goto L_0x02c2
            float r1 = (float) r15
            float r1 = r1 / r28
            org.telegram.ui.PhotoViewer$BackgroundDrawable r2 = r10.backgroundDrawable
            r3 = 1123942400(0x42fe0000, float:127.0)
            float r0 = java.lang.Math.abs(r0)
            float r0 = java.lang.Math.min(r0, r1)
            float r0 = r0 / r1
            r1 = 1065353216(0x3var_, float:1.0)
            float r0 = r1 - r0
            float r0 = r0 * r27
            float r0 = java.lang.Math.max(r3, r0)
            int r0 = (int) r0
            r2.setAlpha(r0)
            goto L_0x02d3
        L_0x02c0:
            r17 = -1082130432(0xffffffffbvar_, float:-1.0)
        L_0x02c2:
            org.telegram.ui.PhotoViewer$BackgroundDrawable r0 = r10.backgroundDrawable
            r1 = 255(0xff, float:3.57E-43)
            r0.setAlpha(r1)
            goto L_0x02d3
        L_0x02ca:
            r17 = -1082130432(0xffffffffbvar_, float:-1.0)
            if (r1 != r2) goto L_0x02d3
            r0 = -16777216(0xfffffffffvar_, float:-1.7014118E38)
            r11.drawColor(r0)
        L_0x02d3:
            r3 = 0
            r10.sideImage = r3
            int r0 = r10.currentEditMode
            if (r0 != 0) goto L_0x0322
            int r0 = r10.sendPhotoType
            r1 = 1
            if (r0 == r1) goto L_0x0322
            float r0 = r10.scale
            r1 = 1065353216(0x3var_, float:1.0)
            int r0 = (r0 > r1 ? 1 : (r0 == r1 ? 0 : -1))
            if (r0 < 0) goto L_0x0319
            boolean r0 = r10.zoomAnimation
            if (r0 != 0) goto L_0x0319
            boolean r0 = r10.zooming
            if (r0 != 0) goto L_0x0319
            float r0 = r10.maxX
            r1 = 1084227584(0x40a00000, float:5.0)
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r1)
            float r2 = (float) r2
            float r0 = r0 + r2
            int r0 = (r9 > r0 ? 1 : (r9 == r0 ? 0 : -1))
            if (r0 <= 0) goto L_0x0302
            org.telegram.messenger.ImageReceiver r0 = r10.leftImage
            r10.sideImage = r0
            goto L_0x0319
        L_0x0302:
            float r0 = r10.minX
            int r1 = org.telegram.messenger.AndroidUtilities.dp(r1)
            float r1 = (float) r1
            float r0 = r0 - r1
            int r0 = (r9 > r0 ? 1 : (r9 == r0 ? 0 : -1))
            if (r0 >= 0) goto L_0x0313
            org.telegram.messenger.ImageReceiver r0 = r10.rightImage
            r10.sideImage = r0
            goto L_0x0319
        L_0x0313:
            org.telegram.ui.Components.GroupedPhotosListView r0 = r10.groupedPhotosListView
            r1 = 0
            r0.setMoveProgress(r1)
        L_0x0319:
            org.telegram.messenger.ImageReceiver r0 = r10.sideImage
            if (r0 == 0) goto L_0x031f
            r0 = 1
            goto L_0x0320
        L_0x031f:
            r0 = 0
        L_0x0320:
            r10.changingPage = r0
        L_0x0322:
            r0 = 3
            r2 = 0
        L_0x0324:
            if (r2 >= r0) goto L_0x0368
            r1 = 1
            if (r2 != r1) goto L_0x032b
        L_0x0329:
            r0 = 0
            goto L_0x034c
        L_0x032b:
            r1 = 2
            if (r2 != r1) goto L_0x0344
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r1 = r10.containerView
            int r1 = r1.getMeasuredWidth()
            int r1 = -r1
            r16 = 1097859072(0x41700000, float:15.0)
            int r16 = org.telegram.messenger.AndroidUtilities.dp(r16)
            int r1 = r1 - r16
            float r1 = (float) r1
            float r0 = r10.maxX
            float r0 = r9 - r0
            float r0 = r0 + r1
            goto L_0x034c
        L_0x0344:
            float r0 = r10.minX
            int r1 = (r9 > r0 ? 1 : (r9 == r0 ? 0 : -1))
            if (r1 >= 0) goto L_0x0329
            float r0 = r9 - r0
        L_0x034c:
            android.widget.ImageView[] r1 = r10.fullscreenButton
            r1 = r1[r2]
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r3 = r10.containerView
            int r3 = r3.getMeasuredWidth()
            float r3 = (float) r3
            float r0 = r0 + r3
            r3 = 1111490560(0x42400000, float:48.0)
            int r3 = org.telegram.messenger.AndroidUtilities.dp(r3)
            float r3 = (float) r3
            float r0 = r0 - r3
            r1.setTranslationX(r0)
            int r2 = r2 + 1
            r0 = 3
            r3 = 0
            goto L_0x0324
        L_0x0368:
            org.telegram.messenger.ImageReceiver r0 = r10.sideImage
            org.telegram.messenger.ImageReceiver r1 = r10.rightImage
            r22 = 1050253722(0x3e99999a, float:0.3)
            r29 = 1106247680(0x41var_, float:30.0)
            r30 = 1073741824(0x40000000, float:2.0)
            if (r0 != r1) goto L_0x054c
            boolean r0 = r10.zoomAnimation
            if (r0 != 0) goto L_0x03a0
            float r0 = r10.minX
            int r1 = (r9 > r0 ? 1 : (r9 == r0 ? 0 : -1))
            if (r1 >= 0) goto L_0x03a0
            float r0 = r0 - r9
            float r1 = (float) r15
            float r0 = r0 / r1
            r1 = 1065353216(0x3var_, float:1.0)
            float r0 = java.lang.Math.min(r1, r0)
            float r2 = r1 - r0
            float r1 = r2 * r22
            int r2 = -r15
            int r23 = org.telegram.messenger.AndroidUtilities.dp(r29)
            r18 = 2
            int r23 = r23 / 2
            int r2 = r2 - r23
            float r2 = (float) r2
            r23 = r1
            r45 = r2
            r2 = r0
            r0 = r45
            goto L_0x03a5
        L_0x03a0:
            r0 = r9
            r2 = 1065353216(0x3var_, float:1.0)
            r23 = 0
        L_0x03a5:
            org.telegram.messenger.ImageReceiver r1 = r10.sideImage
            boolean r1 = r1.hasBitmapImage()
            if (r1 == 0) goto L_0x04e8
            r47.save()
            int r1 = r15 / 2
            float r1 = (float) r1
            int r3 = r4 / 2
            float r3 = (float) r3
            r11.translate(r1, r3)
            int r1 = org.telegram.messenger.AndroidUtilities.dp(r29)
            r3 = 2
            int r1 = r1 / r3
            int r1 = r1 + r15
            float r1 = (float) r1
            float r1 = r1 + r0
            r3 = 0
            r11.translate(r1, r3)
            r1 = 1065353216(0x3var_, float:1.0)
            float r3 = r1 - r23
            r11.scale(r3, r3)
            org.telegram.messenger.ImageReceiver r1 = r10.sideImage
            int r3 = r1.getBitmapWidth()
            org.telegram.messenger.ImageReceiver r1 = r10.sideImage
            int r1 = r1.getBitmapHeight()
            boolean r5 = r10.rightImageIsVideo
            if (r5 != 0) goto L_0x041a
            org.telegram.messenger.MediaController$CropState r5 = r10.rightCropState
            if (r5 == 0) goto L_0x041a
            org.telegram.ui.Components.Crop.CropTransform r5 = r10.rightCropTransform
            boolean r5 = r5.hasViewTransform()
            if (r5 == 0) goto L_0x041a
            r26 = 1065353216(0x3var_, float:1.0)
            org.telegram.ui.Components.Crop.CropTransform r5 = r10.rightCropTransform
            r31 = r7
            org.telegram.messenger.MediaController$CropState r7 = r10.rightCropState
            r8 = r1
            r1 = r46
            r33 = r2
            r2 = r47
            r34 = r3
            r3 = r15
            r35 = r4
            r21 = r5
            r5 = r34
            r37 = r6
            r36 = r13
            r13 = -1082130432(0xffffffffbvar_, float:-1.0)
            r6 = r8
            r17 = r7
            r38 = r31
            r7 = r26
            r13 = r8
            r8 = r21
            r21 = r14
            r14 = r9
            r9 = r17
            r1.applyCrop(r2, r3, r4, r5, r6, r7, r8, r9)
            goto L_0x042a
        L_0x041a:
            r33 = r2
            r34 = r3
            r35 = r4
            r37 = r6
            r38 = r7
            r36 = r13
            r21 = r14
            r13 = r1
            r14 = r9
        L_0x042a:
            float r1 = (float) r15
            r2 = r34
            float r3 = (float) r2
            float r1 = r1 / r3
            r9 = r35
            float r4 = (float) r9
            float r5 = (float) r13
            float r4 = r4 / r5
            float r1 = java.lang.Math.min(r1, r4)
            float r3 = r3 * r1
            int r3 = (int) r3
            float r5 = r5 * r1
            int r4 = (int) r5
            java.util.ArrayList<java.lang.Object> r5 = r10.imagesArrLocals
            boolean r5 = r5.isEmpty()
            if (r5 != 0) goto L_0x0461
            int r5 = r10.currentEditMode
            r6 = 1
            if (r5 == r6) goto L_0x045a
            int r5 = r10.sendPhotoType
            if (r5 != r6) goto L_0x0450
            goto L_0x045a
        L_0x0450:
            org.telegram.messenger.MediaController$CropState r5 = r10.rightCropState
            if (r5 == 0) goto L_0x0461
            boolean r5 = r5.mirrored
            if (r5 == 0) goto L_0x0461
            r5 = 1
            goto L_0x0462
        L_0x045a:
            org.telegram.ui.Components.Crop.CropTransform r5 = r10.rightCropTransform
            boolean r5 = r5.isMirrored()
            goto L_0x0462
        L_0x0461:
            r5 = 0
        L_0x0462:
            if (r5 == 0) goto L_0x046b
            r5 = -1082130432(0xffffffffbvar_, float:-1.0)
            r6 = 1065353216(0x3var_, float:1.0)
            r11.scale(r5, r6)
        L_0x046b:
            org.telegram.messenger.ImageReceiver r5 = r10.sideImage
            r6 = r33
            r5.setAlpha(r6)
            org.telegram.messenger.ImageReceiver r5 = r10.sideImage
            int r7 = -r3
            r8 = 2
            int r7 = r7 / r8
            r35 = r9
            float r9 = (float) r7
            r16 = r14
            int r14 = -r4
            int r14 = r14 / r8
            float r8 = (float) r14
            r17 = r15
            float r15 = (float) r3
            r24 = r0
            float r0 = (float) r4
            r5.setImageCoords(r9, r8, r15, r0)
            org.telegram.messenger.ImageReceiver r0 = r10.sideImage
            r0.draw(r11)
            org.telegram.ui.Components.PaintingOverlay r0 = r10.rightPaintingOverlay
            if (r0 == 0) goto L_0x04e1
            int r0 = r0.getVisibility()
            if (r0 != 0) goto L_0x04e1
            r5 = 2
            int r3 = r3 / r5
            int r4 = r4 / r5
            r11.clipRect(r7, r14, r3, r4)
            org.telegram.ui.Components.PaintingOverlay r0 = r10.rightPaintingOverlay
            int r0 = r0.getMeasuredWidth()
            if (r0 != r2) goto L_0x04b2
            org.telegram.ui.Components.PaintingOverlay r0 = r10.rightPaintingOverlay
            int r0 = r0.getMeasuredHeight()
            if (r0 == r13) goto L_0x04ae
            goto L_0x04b2
        L_0x04ae:
            r14 = 1073741824(0x40000000, float:2.0)
            r15 = 0
            goto L_0x04c7
        L_0x04b2:
            org.telegram.ui.Components.PaintingOverlay r0 = r10.rightPaintingOverlay
            r14 = 1073741824(0x40000000, float:2.0)
            int r3 = android.view.View.MeasureSpec.makeMeasureSpec(r2, r14)
            int r4 = android.view.View.MeasureSpec.makeMeasureSpec(r13, r14)
            r0.measure(r3, r4)
            org.telegram.ui.Components.PaintingOverlay r0 = r10.rightPaintingOverlay
            r15 = 0
            r0.layout(r15, r15, r2, r13)
        L_0x04c7:
            r11.scale(r1, r1)
            int r0 = -r2
            r1 = 2
            int r0 = r0 / r1
            float r0 = (float) r0
            int r2 = -r13
            int r2 = r2 / r1
            float r1 = (float) r2
            r11.translate(r0, r1)
            org.telegram.ui.Components.PaintingOverlay r0 = r10.rightPaintingOverlay
            r1 = 1065353216(0x3var_, float:1.0)
            r0.setAlpha(r1)
            org.telegram.ui.Components.PaintingOverlay r0 = r10.rightPaintingOverlay
            r0.draw(r11)
            goto L_0x04e4
        L_0x04e1:
            r14 = 1073741824(0x40000000, float:2.0)
            r15 = 0
        L_0x04e4:
            r47.restore()
            goto L_0x04fc
        L_0x04e8:
            r24 = r0
            r35 = r4
            r37 = r6
            r38 = r7
            r16 = r9
            r36 = r13
            r21 = r14
            r17 = r15
            r14 = 1073741824(0x40000000, float:2.0)
            r15 = 0
            r6 = r2
        L_0x04fc:
            org.telegram.ui.Components.GroupedPhotosListView r0 = r10.groupedPhotosListView
            float r1 = -r6
            r0.setMoveProgress(r1)
            r47.save()
            r13 = r37
            float r0 = r13 / r12
            r2 = r24
            r11.translate(r2, r0)
            r0 = r17
            float r1 = (float) r0
            float r2 = r10.scale
            r3 = 1065353216(0x3var_, float:1.0)
            float r2 = r2 + r3
            float r1 = r1 * r2
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r29)
            float r2 = (float) r2
            float r1 = r1 + r2
            float r1 = r1 / r30
            float r2 = -r13
            float r2 = r2 / r12
            r11.translate(r1, r2)
            org.telegram.ui.PhotoViewer$PhotoProgressView[] r1 = r10.photoProgressViews
            r2 = 1
            r1 = r1[r2]
            float r4 = r3 - r23
            r1.setScale(r4)
            org.telegram.ui.PhotoViewer$PhotoProgressView[] r1 = r10.photoProgressViews
            r1 = r1[r2]
            r1.setAlpha(r6)
            org.telegram.ui.PhotoViewer$PhotoProgressView[] r1 = r10.photoProgressViews
            r1 = r1[r2]
            r1.onDraw(r11)
            boolean r1 = r10.isActionBarVisible
            if (r1 == 0) goto L_0x0548
            android.widget.ImageView[] r1 = r10.fullscreenButton
            r1 = r1[r2]
            r1.setAlpha(r6)
        L_0x0548:
            r47.restore()
            goto L_0x0568
        L_0x054c:
            r35 = r4
            r38 = r7
            r16 = r9
            r36 = r13
            r21 = r14
            r0 = r15
            r2 = 1
            r14 = 1073741824(0x40000000, float:2.0)
            r15 = 0
            r13 = r6
            boolean r1 = r10.isActionBarVisible
            if (r1 == 0) goto L_0x0568
            android.widget.ImageView[] r1 = r10.fullscreenButton
            r1 = r1[r2]
            r2 = 0
            r1.setAlpha(r2)
        L_0x0568:
            boolean r1 = r10.zoomAnimation
            if (r1 != 0) goto L_0x058e
            float r1 = r10.maxX
            int r2 = (r16 > r1 ? 1 : (r16 == r1 ? 0 : -1))
            if (r2 <= 0) goto L_0x058e
            int r2 = r10.currentEditMode
            if (r2 != 0) goto L_0x058e
            int r2 = r10.sendPhotoType
            r3 = 1
            if (r2 == r3) goto L_0x058e
            float r9 = r16 - r1
            float r1 = (float) r0
            float r9 = r9 / r1
            r1 = 1065353216(0x3var_, float:1.0)
            float r2 = java.lang.Math.min(r1, r9)
            float r3 = r2 * r22
            float r2 = r1 - r2
            float r1 = r10.maxX
            r8 = r1
            r9 = r2
            goto L_0x0593
        L_0x058e:
            r8 = r16
            r3 = 0
            r9 = 1065353216(0x3var_, float:1.0)
        L_0x0593:
            boolean r1 = r10.videoSizeSet
            if (r1 == 0) goto L_0x05a4
            com.google.android.exoplayer2.ui.AspectRatioFrameLayout r1 = r10.aspectRatioFrameLayout
            if (r1 == 0) goto L_0x05a4
            int r1 = r1.getVisibility()
            if (r1 != 0) goto L_0x05a4
            r17 = 1
            goto L_0x05a6
        L_0x05a4:
            r17 = 0
        L_0x05a6:
            org.telegram.messenger.ImageReceiver r1 = r10.centerImage
            boolean r1 = r1.hasBitmapImage()
            if (r1 != 0) goto L_0x05bf
            if (r17 == 0) goto L_0x05b5
            boolean r1 = r10.textureUploaded
            if (r1 == 0) goto L_0x05b5
            goto L_0x05bf
        L_0x05b5:
            r33 = r0
            r32 = r8
            r43 = r12
            r44 = r13
            goto L_0x0bdf
        L_0x05bf:
            r47.save()
            int r1 = r0 / 2
            int r2 = r46.getAdditionX()
            int r1 = r1 + r2
            float r1 = (float) r1
            int r4 = r35 / 2
            int r2 = r46.getAdditionY()
            int r4 = r4 + r2
            float r2 = (float) r4
            r11.translate(r1, r2)
            int r1 = r10.currentEditMode
            r7 = 3
            if (r1 == r7) goto L_0x05dd
            float r1 = r10.currentPanTranslationY
            goto L_0x05e1
        L_0x05dd:
            float r1 = r10.currentPanTranslationY
            float r1 = r1 / r30
        L_0x05e1:
            float r6 = r13 + r1
            r11.translate(r8, r6)
            float r6 = r12 - r3
            r11.scale(r6, r6)
            r1 = r21
            r11.rotate(r1)
            int r1 = r10.currentEditMode
            if (r1 != r7) goto L_0x0611
            int r1 = r10.keyboardSize
            r2 = 1101004800(0x41a00000, float:20.0)
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r2)
            if (r1 <= r2) goto L_0x0611
            r1 = 1
            int r2 = r10.getContainerViewHeight(r1, r15)
            int r1 = r10.getContainerViewHeight(r15, r15)
            if (r2 == r1) goto L_0x0611
            int r2 = r2 - r1
            r1 = 2
            int r2 = r2 / r1
            float r1 = (float) r2
            r2 = 0
            r11.translate(r2, r1)
        L_0x0611:
            boolean r1 = r10.pipAnimationInProgress
            if (r1 != 0) goto L_0x06e5
            if (r17 == 0) goto L_0x062b
            boolean r1 = r10.textureUploaded
            if (r1 != 0) goto L_0x061f
            boolean r1 = r10.videoSizeSet
            if (r1 == 0) goto L_0x062b
        L_0x061f:
            boolean r1 = r10.videoCrossfadeStarted
            if (r1 == 0) goto L_0x062b
            float r1 = r10.videoCrossfadeAlpha
            r2 = 1065353216(0x3var_, float:1.0)
            int r1 = (r1 > r2 ? 1 : (r1 == r2 ? 0 : -1))
            if (r1 == 0) goto L_0x06e5
        L_0x062b:
            android.graphics.Bitmap r1 = r10.videoFrameBitmap
            if (r1 == 0) goto L_0x068c
            boolean r2 = r10.isCurrentVideo
            if (r2 == 0) goto L_0x068c
            int r1 = r1.getWidth()
            android.graphics.Bitmap r2 = r10.videoFrameBitmap
            int r2 = r2.getHeight()
            int r3 = -r1
            r4 = 2
            int r5 = r3 / 2
            int r3 = -r2
            int r3 = r3 / r4
            r4 = 1065353216(0x3var_, float:1.0)
            int r21 = (r9 > r4 ? 1 : (r9 == r4 ? 0 : -1))
            if (r21 >= 0) goto L_0x0670
            float r4 = (float) r5
            float r7 = (float) r3
            int r1 = r1 + r5
            float r1 = (float) r1
            int r2 = r2 + r3
            float r2 = (float) r2
            float r14 = r9 * r27
            int r14 = (int) r14
            r21 = 31
            r22 = r1
            r1 = r47
            r23 = r2
            r2 = r4
            r4 = r3
            r3 = r7
            r7 = r4
            r4 = r22
            r15 = r5
            r5 = r23
            r22 = r6
            r6 = r14
            r14 = r7
            r32 = r8
            r8 = 3
            r7 = r21
            r1.saveLayerAlpha(r2, r3, r4, r5, r6, r7)
            goto L_0x0677
        L_0x0670:
            r14 = r3
            r15 = r5
            r22 = r6
            r32 = r8
            r8 = 3
        L_0x0677:
            android.graphics.Bitmap r1 = r10.videoFrameBitmap
            float r2 = (float) r15
            float r3 = (float) r14
            android.graphics.Paint r4 = r10.videoFrameBitmapPaint
            r11.drawBitmap(r1, r2, r3, r4)
            r1 = 1065353216(0x3var_, float:1.0)
            int r2 = (r9 > r1 ? 1 : (r9 == r1 ? 0 : -1))
            if (r2 >= 0) goto L_0x0689
            r47.restore()
        L_0x0689:
            r14 = r35
            goto L_0x06ec
        L_0x068c:
            r22 = r6
            r32 = r8
            r8 = 3
            org.telegram.messenger.ImageReceiver r1 = r10.centerImage
            r1.setAlpha(r9)
            org.telegram.messenger.ImageReceiver r1 = r10.centerImage
            int r1 = r1.getBitmapWidth()
            org.telegram.messenger.ImageReceiver r2 = r10.centerImage
            int r2 = r2.getBitmapHeight()
            boolean r3 = r10.isCurrentVideo
            if (r3 == 0) goto L_0x06b7
            int r3 = r10.currentEditMode
            if (r3 != 0) goto L_0x06b7
            int r3 = r10.sendPhotoType
            r4 = 1
            if (r3 != r4) goto L_0x06b7
            r3 = 0
            float r4 = r10.getCropFillScale(r3)
            r14 = r35
            goto L_0x06c3
        L_0x06b7:
            float r3 = (float) r0
            float r4 = (float) r1
            float r3 = r3 / r4
            r14 = r35
            float r4 = (float) r14
            float r5 = (float) r2
            float r4 = r4 / r5
            float r4 = java.lang.Math.min(r3, r4)
        L_0x06c3:
            float r1 = (float) r1
            float r1 = r1 * r4
            int r1 = (int) r1
            float r2 = (float) r2
            float r2 = r2 * r4
            int r2 = (int) r2
            org.telegram.messenger.ImageReceiver r3 = r10.centerImage
            int r4 = -r1
            r5 = 2
            int r4 = r4 / r5
            float r4 = (float) r4
            int r6 = -r2
            int r6 = r6 / r5
            float r5 = (float) r6
            float r1 = (float) r1
            float r2 = (float) r2
            r3.setImageCoords(r4, r5, r1, r2)
            boolean r1 = r10.isCurrentVideo
            if (r1 == 0) goto L_0x06e3
            org.telegram.messenger.ImageReceiver r1 = r10.centerImage
            r1.draw(r11)
            goto L_0x06ec
        L_0x06e3:
            r5 = 1
            goto L_0x06ed
        L_0x06e5:
            r22 = r6
            r32 = r8
            r14 = r35
            r8 = 3
        L_0x06ec:
            r5 = 0
        L_0x06ed:
            if (r17 == 0) goto L_0x0704
            boolean r1 = r10.textureUploaded
            if (r1 == 0) goto L_0x0704
            boolean r1 = r10.videoSizeSet
            if (r1 == 0) goto L_0x0704
            android.view.TextureView r1 = r10.videoTextureView
            int r1 = r1.getMeasuredWidth()
            android.view.TextureView r2 = r10.videoTextureView
            int r2 = r2.getMeasuredHeight()
            goto L_0x0710
        L_0x0704:
            org.telegram.messenger.ImageReceiver r1 = r10.centerImage
            int r1 = r1.getBitmapWidth()
            org.telegram.messenger.ImageReceiver r2 = r10.centerImage
            int r2 = r2.getBitmapHeight()
        L_0x0710:
            float r3 = (float) r0
            float r4 = (float) r1
            float r6 = r3 / r4
            float r7 = (float) r14
            float r15 = (float) r2
            float r8 = r7 / r15
            r21 = r1
            float r1 = java.lang.Math.min(r6, r8)
            r23 = r2
            float r2 = r4 * r1
            int r2 = (int) r2
            r24 = r8
            float r8 = r15 * r1
            int r8 = (int) r8
            r35 = r14
            java.util.ArrayList<java.lang.Object> r14 = r10.imagesArrLocals
            boolean r14 = r14.isEmpty()
            r33 = r0
            if (r14 != 0) goto L_0x0769
            int r14 = r10.currentEditMode
            r0 = 3
            if (r14 == r0) goto L_0x0763
            r37 = r9
            int r9 = r10.switchingToMode
            if (r9 != r0) goto L_0x0742
            r40 = r8
            goto L_0x0767
        L_0x0742:
            int r0 = r10.sendPhotoType
            r40 = r8
            r8 = 1
            if (r0 != r8) goto L_0x0752
            if (r9 == 0) goto L_0x0767
            r0 = 3
            if (r14 == r0) goto L_0x076d
            r8 = 2
            if (r14 == r8) goto L_0x076d
            goto L_0x0767
        L_0x0752:
            android.animation.AnimatorSet r0 = r10.imageMoveAnimation
            if (r0 == 0) goto L_0x075a
            r0 = -1
            if (r9 != r0) goto L_0x0767
            goto L_0x075b
        L_0x075a:
            r0 = -1
        L_0x075b:
            if (r14 == 0) goto L_0x0767
            r8 = 1
            if (r14 == r8) goto L_0x0767
            if (r9 == r0) goto L_0x076d
            goto L_0x0767
        L_0x0763:
            r40 = r8
            r37 = r9
        L_0x0767:
            r0 = 1
            goto L_0x076e
        L_0x0769:
            r40 = r8
            r37 = r9
        L_0x076d:
            r0 = 0
        L_0x076e:
            if (r0 == 0) goto L_0x0977
            org.telegram.ui.Components.Crop.CropTransform r0 = r10.cropTransform
            int r0 = r0.getOrientation()
            r9 = 90
            if (r0 == r9) goto L_0x0784
            r9 = 270(0x10e, float:3.78E-43)
            if (r0 != r9) goto L_0x077f
            goto L_0x0784
        L_0x077f:
            r9 = r21
            r14 = r23
            goto L_0x0788
        L_0x0784:
            r14 = r21
            r9 = r23
        L_0x0788:
            int r8 = r10.sendPhotoType
            r41 = r2
            r2 = 1
            if (r8 == r2) goto L_0x079d
            int r2 = r10.currentEditMode
            r8 = 3
            if (r2 == r8) goto L_0x0798
            int r2 = r10.switchingToMode
            if (r2 != r8) goto L_0x079d
        L_0x0798:
            r42 = r5
        L_0x079a:
            r2 = 1065353216(0x3var_, float:1.0)
            goto L_0x07d0
        L_0x079d:
            android.animation.AnimatorSet r2 = r10.imageMoveAnimation
            if (r2 == 0) goto L_0x07c5
            int r2 = r10.switchingToMode
            r8 = -1
            if (r2 == r8) goto L_0x07c5
            int r8 = r10.currentEditMode
            r42 = r5
            r5 = 1
            if (r8 == r5) goto L_0x079a
            if (r2 == r5) goto L_0x079a
            r5 = 2
            if (r8 == r5) goto L_0x07b5
            r5 = 3
            if (r8 != r5) goto L_0x07b9
        L_0x07b5:
            r5 = -1
            if (r2 != r5) goto L_0x07b9
            goto L_0x079a
        L_0x07b9:
            if (r2 != 0) goto L_0x07be
            float r2 = r10.animationValue
            goto L_0x07d0
        L_0x07be:
            float r2 = r10.animationValue
            r5 = 1065353216(0x3var_, float:1.0)
            float r2 = r5 - r2
            goto L_0x07d0
        L_0x07c5:
            r42 = r5
            int r2 = r10.currentEditMode
            r5 = 2
            if (r2 == r5) goto L_0x07cf
            r5 = 3
            if (r2 != r5) goto L_0x079a
        L_0x07cf:
            r2 = 0
        L_0x07d0:
            org.telegram.ui.Components.Crop.CropTransform r5 = r10.cropTransform
            float r5 = r5.getCropPw()
            org.telegram.ui.Components.Crop.CropTransform r8 = r10.cropTransform
            float r8 = r8.getCropPh()
            float r9 = (float) r9
            r19 = 1065353216(0x3var_, float:1.0)
            float r21 = r19 - r5
            float r23 = r19 - r2
            float r21 = r21 * r23
            float r5 = r5 + r21
            float r5 = r5 * r9
            int r5 = (int) r5
            float r14 = (float) r14
            float r21 = r19 - r8
            float r21 = r21 * r23
            float r8 = r8 + r21
            float r8 = r8 * r14
            int r8 = (int) r8
            r43 = r12
            float r12 = (float) r5
            float r21 = r3 / r12
            r25 = r5
            float r5 = (float) r8
            float r26 = r21 * r5
            int r26 = (r26 > r7 ? 1 : (r26 == r7 ? 0 : -1))
            if (r26 <= 0) goto L_0x0804
            float r21 = r7 / r5
        L_0x0804:
            r26 = r8
            int r8 = r10.sendPhotoType
            r44 = r13
            r13 = 1
            if (r8 == r13) goto L_0x0844
            int r8 = r10.currentEditMode
            if (r8 != r13) goto L_0x0815
            int r8 = r10.switchingToMode
            if (r8 != 0) goto L_0x0844
        L_0x0815:
            org.telegram.ui.PhotoViewer$EditState r8 = r10.editState
            org.telegram.messenger.MediaController$CropState r8 = r8.cropState
            if (r8 == 0) goto L_0x0844
            float r12 = r12 * r21
            float r5 = r5 * r21
            float r8 = r6 * r15
            int r8 = (r8 > r7 ? 1 : (r8 == r7 ? 0 : -1))
            if (r8 <= 0) goto L_0x0827
            r6 = r24
        L_0x0827:
            float r4 = r4 * r6
            float r4 = r4 / r22
            float r15 = r15 * r6
            float r15 = r15 / r22
            float r4 = r4 - r12
            float r4 = r4 * r23
            float r12 = r12 + r4
            float r15 = r15 - r5
            float r15 = r15 * r23
            float r5 = r5 + r15
            float r4 = -r12
            float r4 = r4 / r30
            float r6 = -r5
            float r6 = r6 / r30
            float r12 = r12 / r30
            float r5 = r5 / r30
            r11.clipRect(r4, r6, r12, r5)
        L_0x0844:
            int r4 = r10.sendPhotoType
            r5 = 1
            if (r4 == r5) goto L_0x086e
            org.telegram.ui.Components.Crop.CropTransform r4 = r10.cropTransform
            boolean r4 = r4.hasViewTransform()
            if (r4 == 0) goto L_0x0852
            goto L_0x086e
        L_0x0852:
            android.view.TextureView r0 = r10.videoTextureView
            if (r0 == 0) goto L_0x0972
            r2 = 1065353216(0x3var_, float:1.0)
            r0.setScaleX(r2)
            android.view.TextureView r0 = r10.videoTextureView
            r0.setScaleY(r2)
            org.telegram.ui.PhotoViewer$FirstFrameView r0 = r10.firstFrameView
            if (r0 == 0) goto L_0x0972
            r0.setScaleX(r2)
            org.telegram.ui.PhotoViewer$FirstFrameView r0 = r10.firstFrameView
            r0.setScaleY(r2)
            goto L_0x0972
        L_0x086e:
            int r4 = r10.currentEditMode
            r5 = 1
            if (r4 == r5) goto L_0x08b3
            int r4 = r10.sendPhotoType
            if (r4 != r5) goto L_0x0878
            goto L_0x08b3
        L_0x0878:
            android.view.TextureView r3 = r10.videoTextureView
            if (r3 == 0) goto L_0x089b
            org.telegram.ui.PhotoViewer$EditState r4 = r10.editState
            org.telegram.messenger.MediaController$CropState r4 = r4.cropState
            if (r4 == 0) goto L_0x0889
            boolean r4 = r4.mirrored
            if (r4 == 0) goto L_0x0889
            r6 = -1082130432(0xffffffffbvar_, float:-1.0)
            goto L_0x088b
        L_0x0889:
            r6 = 1065353216(0x3var_, float:1.0)
        L_0x088b:
            r3.setScaleX(r6)
            org.telegram.ui.PhotoViewer$FirstFrameView r3 = r10.firstFrameView
            if (r3 == 0) goto L_0x089b
            android.view.TextureView r4 = r10.videoTextureView
            float r4 = r4.getScaleX()
            r3.setScaleX(r4)
        L_0x089b:
            org.telegram.ui.PhotoViewer$EditState r3 = r10.editState
            org.telegram.messenger.MediaController$CropState r3 = r3.cropState
            if (r3 == 0) goto L_0x08a4
            float r3 = r3.cropScale
            goto L_0x08a6
        L_0x08a4:
            r3 = 1065353216(0x3var_, float:1.0)
        L_0x08a6:
            r4 = 1065353216(0x3var_, float:1.0)
            float r5 = r3 - r4
            float r5 = r5 * r23
            float r5 = r5 + r4
            float r4 = r21 / r1
            float r4 = r4 / r5
            float r3 = r3 * r4
            goto L_0x0919
        L_0x08b3:
            android.view.TextureView r4 = r10.videoTextureView
            if (r4 == 0) goto L_0x08d4
            org.telegram.ui.Components.Crop.CropTransform r5 = r10.cropTransform
            boolean r5 = r5.isMirrored()
            if (r5 == 0) goto L_0x08c2
            r6 = -1082130432(0xffffffffbvar_, float:-1.0)
            goto L_0x08c4
        L_0x08c2:
            r6 = 1065353216(0x3var_, float:1.0)
        L_0x08c4:
            r4.setScaleX(r6)
            org.telegram.ui.PhotoViewer$FirstFrameView r4 = r10.firstFrameView
            if (r4 == 0) goto L_0x08d4
            android.view.TextureView r5 = r10.videoTextureView
            float r5 = r5.getScaleX()
            r4.setScaleX(r5)
        L_0x08d4:
            org.telegram.ui.Components.Crop.CropTransform r4 = r10.cropTransform
            float r4 = r4.getTrueCropScale()
            r5 = 1065353216(0x3var_, float:1.0)
            float r4 = r4 - r5
            float r4 = r4 * r23
            float r4 = r4 + r5
            org.telegram.ui.Components.Crop.CropTransform r5 = r10.cropTransform
            float r5 = r5.getScale()
            float r5 = r5 / r4
            float r3 = r3 / r9
            float r4 = r3 * r14
            int r4 = (r4 > r7 ? 1 : (r4 == r7 ? 0 : -1))
            if (r4 <= 0) goto L_0x08f0
            float r3 = r7 / r14
        L_0x08f0:
            float r3 = r3 / r1
            float r5 = r5 * r3
            int r3 = r10.sendPhotoType
            r4 = 1
            if (r3 != r4) goto L_0x0918
            int r3 = r10.currentEditMode
            r4 = 3
            if (r3 == r4) goto L_0x090b
            int r3 = r10.switchingToMode
            if (r3 != r4) goto L_0x0902
            goto L_0x090b
        L_0x0902:
            if (r3 != 0) goto L_0x0918
            org.telegram.ui.Components.Crop.CropTransform r3 = r10.cropTransform
            float r3 = r3.getMinScale()
            goto L_0x0917
        L_0x090b:
            org.telegram.ui.Components.Crop.CropTransform r3 = r10.cropTransform
            float r3 = r3.getMinScale()
            r4 = 1065353216(0x3var_, float:1.0)
            float r3 = r3 - r4
            float r3 = r3 * r23
            float r3 = r3 + r4
        L_0x0917:
            float r5 = r5 / r3
        L_0x0918:
            r3 = r5
        L_0x0919:
            org.telegram.ui.Components.Crop.CropTransform r4 = r10.cropTransform
            float r4 = r4.getCropAreaX()
            float r4 = r4 * r2
            org.telegram.ui.Components.Crop.CropTransform r5 = r10.cropTransform
            float r5 = r5.getCropAreaY()
            float r5 = r5 * r2
            r11.translate(r4, r5)
            r11.scale(r3, r3)
            org.telegram.ui.Components.Crop.CropTransform r3 = r10.cropTransform
            float r3 = r3.getCropPx()
            float r3 = r3 * r9
            float r3 = r3 * r1
            float r3 = r3 * r2
            org.telegram.ui.Components.Crop.CropTransform r4 = r10.cropTransform
            float r4 = r4.getCropPy()
            float r4 = r4 * r14
            float r4 = r4 * r1
            float r4 = r4 * r2
            r11.translate(r3, r4)
            org.telegram.ui.Components.Crop.CropTransform r3 = r10.cropTransform
            float r3 = r3.getRotation()
            float r0 = (float) r0
            float r3 = r3 + r0
            r0 = 1127481344(0x43340000, float:180.0)
            int r4 = (r3 > r0 ? 1 : (r3 == r0 ? 0 : -1))
            if (r4 <= 0) goto L_0x095b
            r0 = 1135869952(0x43b40000, float:360.0)
            float r3 = r3 - r0
        L_0x095b:
            int r0 = r10.sendPhotoType
            r4 = 1
            if (r0 != r4) goto L_0x096d
            int r0 = r10.currentEditMode
            r4 = 3
            if (r0 == r4) goto L_0x0969
            int r0 = r10.switchingToMode
            if (r0 != r4) goto L_0x096d
        L_0x0969:
            r11.rotate(r3)
            goto L_0x0972
        L_0x096d:
            float r3 = r3 * r2
            r11.rotate(r3)
        L_0x0972:
            r0 = r25
            r2 = r26
            goto L_0x0985
        L_0x0977:
            r41 = r2
            r42 = r5
            r43 = r12
            r44 = r13
            r0 = r21
            r2 = r23
            r21 = 1065353216(0x3var_, float:1.0)
        L_0x0985:
            int r3 = r10.currentEditMode
            r4 = 3
            if (r3 != r4) goto L_0x09b3
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r3 = r10.containerView
            org.telegram.ui.ActionBar.AdjustPanLayoutHelper r3 = r3.adjustPanLayoutHelper
            boolean r3 = r3.animationInProgress()
            if (r3 == 0) goto L_0x099f
            int r3 = r10.keyboardSize
            float r3 = (float) r3
            float r3 = r3 / r30
            float r4 = r10.currentPanTranslationY
            float r4 = r4 / r30
            float r3 = r3 + r4
            goto L_0x09a0
        L_0x099f:
            r3 = 0
        L_0x09a0:
            org.telegram.ui.Components.PhotoPaintView r4 = r10.photoPaintView
            float r24 = r44 + r3
            float r0 = (float) r0
            float r25 = r0 * r21
            float r0 = (float) r2
            float r26 = r0 * r21
            r21 = r4
            r22 = r43
            r23 = r16
            r21.setTransform(r22, r23, r24, r25, r26)
        L_0x09b3:
            r0 = 1048576000(0x3e800000, float:0.25)
            if (r42 == 0) goto L_0x0a21
            java.util.ArrayList<java.lang.Object> r2 = r10.imagesArrLocals
            boolean r2 = r2.isEmpty()
            if (r2 != 0) goto L_0x09dc
            int r2 = r10.currentEditMode
            r3 = 1
            if (r2 == r3) goto L_0x09d5
            int r2 = r10.sendPhotoType
            if (r2 != r3) goto L_0x09c9
            goto L_0x09d5
        L_0x09c9:
            org.telegram.ui.PhotoViewer$EditState r2 = r10.editState
            org.telegram.messenger.MediaController$CropState r2 = r2.cropState
            if (r2 == 0) goto L_0x09dc
            boolean r2 = r2.mirrored
            if (r2 == 0) goto L_0x09dc
            r5 = 1
            goto L_0x09dd
        L_0x09d5:
            org.telegram.ui.Components.Crop.CropTransform r2 = r10.cropTransform
            boolean r5 = r2.isMirrored()
            goto L_0x09dd
        L_0x09dc:
            r5 = 0
        L_0x09dd:
            if (r5 == 0) goto L_0x09ec
            r47.save()
            r2 = -1082130432(0xffffffffbvar_, float:-1.0)
            r3 = 1065353216(0x3var_, float:1.0)
            r11.scale(r2, r3)
            r2 = 0
            r5 = 1
            goto L_0x09f0
        L_0x09ec:
            r3 = 1065353216(0x3var_, float:1.0)
            r2 = 0
            r5 = 0
        L_0x09f0:
            int r4 = (r36 > r2 ? 1 : (r36 == r2 ? 0 : -1))
            if (r4 <= 0) goto L_0x0a0d
            if (r5 != 0) goto L_0x09fa
            r47.save()
            r5 = 1
        L_0x09fa:
            float r13 = r36 * r30
            float r15 = r3 - r13
            r11.scale(r15, r3)
            float r13 = r36 * r28
            float r15 = r3 - r36
            float r13 = r13 * r15
            float r13 = r13 * r0
            r2 = 0
            r11.skew(r2, r13)
        L_0x0a0d:
            org.telegram.ui.Components.PhotoViewerWebView r2 = r10.photoViewerWebView
            if (r2 == 0) goto L_0x0a17
            boolean r2 = r2.isLoaded()
            if (r2 != 0) goto L_0x0a1c
        L_0x0a17:
            org.telegram.messenger.ImageReceiver r2 = r10.centerImage
            r2.draw(r11)
        L_0x0a1c:
            if (r5 == 0) goto L_0x0a21
            r47.restore()
        L_0x0a21:
            r2 = 0
            int r3 = (r36 > r2 ? 1 : (r36 == r2 ? 0 : -1))
            if (r3 <= 0) goto L_0x0a41
            r47.save()
            float r13 = r36 * r30
            r3 = 1065353216(0x3var_, float:1.0)
            float r15 = r3 - r13
            r11.scale(r15, r3)
            float r13 = r36 * r28
            float r15 = r3 - r36
            float r13 = r13 * r15
            float r13 = r13 * r0
            r11.skew(r2, r13)
            r0 = r41
            r5 = 1
            goto L_0x0a44
        L_0x0a41:
            r0 = r41
            r5 = 0
        L_0x0a44:
            int r2 = -r0
            r3 = 2
            int r2 = r2 / r3
            float r2 = (float) r2
            r4 = r40
            int r6 = -r4
            int r6 = r6 / r3
            float r3 = (float) r6
            r11.translate(r2, r3)
            if (r17 != 0) goto L_0x0a5a
            org.telegram.ui.Components.PaintingOverlay r6 = r10.paintingOverlay
            int r6 = r6.getVisibility()
            if (r6 != 0) goto L_0x0a5d
        L_0x0a5a:
            r11.scale(r1, r1)
        L_0x0a5d:
            if (r17 == 0) goto L_0x0ae7
            boolean r6 = r10.videoCrossfadeStarted
            if (r6 != 0) goto L_0x0a7c
            boolean r6 = r10.textureUploaded
            if (r6 == 0) goto L_0x0a7c
            boolean r6 = r10.videoSizeSet
            if (r6 == 0) goto L_0x0a7c
            r6 = 1
            r10.videoCrossfadeStarted = r6
            r6 = 0
            r10.videoCrossfadeAlpha = r6
            long r6 = java.lang.System.currentTimeMillis()
            r10.videoCrossfadeAlphaLastTime = r6
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r6 = r10.containerView
            r6.getMeasuredHeight()
        L_0x0a7c:
            android.view.TextureView r6 = r10.videoTextureView
            float r7 = r10.videoCrossfadeAlpha
            float r9 = r37 * r7
            r6.setAlpha(r9)
            android.view.TextureView r6 = r10.videoTextureView
            boolean r7 = r6 instanceof org.telegram.ui.Components.VideoEditTextureView
            if (r7 == 0) goto L_0x0aac
            org.telegram.ui.Components.VideoEditTextureView r6 = (org.telegram.ui.Components.VideoEditTextureView) r6
            int r15 = r33 - r0
            r7 = 2
            int r15 = r15 / r7
            int r8 = r46.getAdditionX()
            int r15 = r15 + r8
            float r8 = (float) r15
            float r8 = r8 + r32
            int r9 = r35 - r4
            int r9 = r9 / r7
            int r7 = r46.getAdditionY()
            int r9 = r9 + r7
            float r7 = (float) r9
            float r7 = r7 + r44
            float r9 = r10.currentPanTranslationY
            float r7 = r7 + r9
            float r0 = (float) r0
            float r4 = (float) r4
            r6.setViewRect(r8, r7, r0, r4)
        L_0x0aac:
            com.google.android.exoplayer2.ui.AspectRatioFrameLayout r0 = r10.aspectRatioFrameLayout
            r0.draw(r11)
            boolean r0 = r10.videoCrossfadeStarted
            if (r0 == 0) goto L_0x0add
            float r0 = r10.videoCrossfadeAlpha
            r4 = 1065353216(0x3var_, float:1.0)
            int r6 = (r0 > r4 ? 1 : (r0 == r4 ? 0 : -1))
            if (r6 >= 0) goto L_0x0add
            r6 = r38
            float r4 = (float) r6
            boolean r8 = r10.playerInjected
            if (r8 == 0) goto L_0x0ac7
            r8 = 1120403456(0x42CLASSNAME, float:100.0)
            goto L_0x0ac9
        L_0x0ac7:
            r8 = 1128792064(0x43480000, float:200.0)
        L_0x0ac9:
            float r4 = r4 / r8
            float r0 = r0 + r4
            r10.videoCrossfadeAlpha = r0
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r0 = r10.containerView
            r0.invalidate()
            float r0 = r10.videoCrossfadeAlpha
            r4 = 1065353216(0x3var_, float:1.0)
            int r0 = (r0 > r4 ? 1 : (r0 == r4 ? 0 : -1))
            if (r0 <= 0) goto L_0x0adf
            r10.videoCrossfadeAlpha = r4
            goto L_0x0adf
        L_0x0add:
            r6 = r38
        L_0x0adf:
            org.telegram.ui.Components.PaintingOverlay r0 = r10.paintingOverlay
            r9 = r37
            r0.setAlpha(r9)
            goto L_0x0aeb
        L_0x0ae7:
            r9 = r37
            r6 = r38
        L_0x0aeb:
            if (r5 == 0) goto L_0x0b00
            r47.restore()
            r11.translate(r2, r3)
            if (r17 != 0) goto L_0x0afd
            org.telegram.ui.Components.PaintingOverlay r0 = r10.paintingOverlay
            int r0 = r0.getVisibility()
            if (r0 != 0) goto L_0x0b00
        L_0x0afd:
            r11.scale(r1, r1)
        L_0x0b00:
            org.telegram.ui.Components.PaintingOverlay r0 = r10.paintingOverlay
            int r0 = r0.getVisibility()
            if (r0 != 0) goto L_0x0b2b
            boolean r0 = r10.isCurrentVideo
            if (r0 != 0) goto L_0x0b16
            int r0 = r10.currentEditMode
            r1 = 2
            if (r0 != r1) goto L_0x0b16
            int r0 = r10.switchingToMode
            r1 = -1
            if (r0 == r1) goto L_0x0b2b
        L_0x0b16:
            org.telegram.ui.Components.PaintingOverlay r0 = r10.paintingOverlay
            int r0 = r0.getMeasuredWidth()
            org.telegram.ui.Components.PaintingOverlay r1 = r10.paintingOverlay
            int r1 = r1.getMeasuredHeight()
            r2 = 0
            r11.clipRect(r2, r2, r0, r1)
            org.telegram.ui.Components.PaintingOverlay r0 = r10.paintingOverlay
            r0.draw(r11)
        L_0x0b2b:
            r47.restore()
            r5 = 0
        L_0x0b2f:
            android.graphics.drawable.GradientDrawable[] r0 = r10.pressedDrawable
            int r1 = r0.length
            if (r5 >= r1) goto L_0x0bdf
            boolean[] r1 = r10.drawPressedDrawable
            boolean r1 = r1[r5]
            if (r1 != 0) goto L_0x0b43
            float[] r1 = r10.pressedDrawableAlpha
            r1 = r1[r5]
            r2 = 0
            int r1 = (r1 > r2 ? 1 : (r1 == r2 ? 0 : -1))
            if (r1 == 0) goto L_0x0b92
        L_0x0b43:
            r0 = r0[r5]
            float[] r1 = r10.pressedDrawableAlpha
            r1 = r1[r5]
            float r1 = r1 * r27
            int r1 = (int) r1
            r0.setAlpha(r1)
            if (r5 != 0) goto L_0x0b68
            android.graphics.drawable.GradientDrawable[] r0 = r10.pressedDrawable
            r0 = r0[r5]
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r1 = r10.containerView
            int r1 = r1.getMeasuredWidth()
            int r1 = r1 / 5
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r2 = r10.containerView
            int r2 = r2.getMeasuredHeight()
            r3 = 0
            r0.setBounds(r3, r3, r1, r2)
            goto L_0x0b8b
        L_0x0b68:
            android.graphics.drawable.GradientDrawable[] r0 = r10.pressedDrawable
            r0 = r0[r5]
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r1 = r10.containerView
            int r1 = r1.getMeasuredWidth()
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r2 = r10.containerView
            int r2 = r2.getMeasuredWidth()
            int r2 = r2 / 5
            int r1 = r1 - r2
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r2 = r10.containerView
            int r2 = r2.getMeasuredWidth()
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r3 = r10.containerView
            int r3 = r3.getMeasuredHeight()
            r4 = 0
            r0.setBounds(r1, r4, r2, r3)
        L_0x0b8b:
            android.graphics.drawable.GradientDrawable[] r0 = r10.pressedDrawable
            r0 = r0[r5]
            r0.draw(r11)
        L_0x0b92:
            boolean[] r0 = r10.drawPressedDrawable
            boolean r0 = r0[r5]
            if (r0 == 0) goto L_0x0bb9
            float[] r0 = r10.pressedDrawableAlpha
            r1 = r0[r5]
            r2 = 1065353216(0x3var_, float:1.0)
            int r1 = (r1 > r2 ? 1 : (r1 == r2 ? 0 : -1))
            if (r1 >= 0) goto L_0x0bd9
            r1 = r0[r5]
            float r3 = (float) r6
            r4 = 1127481344(0x43340000, float:180.0)
            float r3 = r3 / r4
            float r1 = r1 + r3
            r0[r5] = r1
            r1 = r0[r5]
            int r1 = (r1 > r2 ? 1 : (r1 == r2 ? 0 : -1))
            if (r1 <= 0) goto L_0x0bb3
            r0[r5] = r2
        L_0x0bb3:
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r0 = r10.containerView
            r0.invalidate()
            goto L_0x0bd9
        L_0x0bb9:
            float[] r0 = r10.pressedDrawableAlpha
            r1 = r0[r5]
            r2 = 0
            int r1 = (r1 > r2 ? 1 : (r1 == r2 ? 0 : -1))
            if (r1 <= 0) goto L_0x0bd9
            r1 = r0[r5]
            float r3 = (float) r6
            r4 = 1127481344(0x43340000, float:180.0)
            float r3 = r3 / r4
            float r1 = r1 - r3
            r0[r5] = r1
            r1 = r0[r5]
            int r1 = (r1 > r2 ? 1 : (r1 == r2 ? 0 : -1))
            if (r1 >= 0) goto L_0x0bd3
            r0[r5] = r2
        L_0x0bd3:
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r0 = r10.containerView
            r0.invalidate()
            goto L_0x0bdb
        L_0x0bd9:
            r4 = 1127481344(0x43340000, float:180.0)
        L_0x0bdb:
            int r5 = r5 + 1
            goto L_0x0b2f
        L_0x0bdf:
            r1 = r46
            r2 = r47
            r3 = r32
            r4 = r43
            r5 = r44
            r6 = r9
            r1.drawProgress(r2, r3, r4, r5, r6)
            org.telegram.messenger.ImageReceiver r0 = r10.sideImage
            org.telegram.messenger.ImageReceiver r1 = r10.leftImage
            if (r0 != r1) goto L_0x0d5c
            boolean r0 = r0.hasBitmapImage()
            if (r0 == 0) goto L_0x0d05
            r47.save()
            int r15 = r33 / 2
            float r0 = (float) r15
            int r4 = r35 / 2
            float r1 = (float) r4
            r11.translate(r0, r1)
            r0 = r33
            float r12 = (float) r0
            float r1 = r10.scale
            r2 = 1065353216(0x3var_, float:1.0)
            float r1 = r1 + r2
            float r1 = r1 * r12
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r29)
            float r2 = (float) r2
            float r1 = r1 + r2
            float r1 = -r1
            float r1 = r1 / r30
            float r1 = r1 + r16
            r2 = 0
            r11.translate(r1, r2)
            org.telegram.messenger.ImageReceiver r1 = r10.sideImage
            int r13 = r1.getBitmapWidth()
            org.telegram.messenger.ImageReceiver r1 = r10.sideImage
            int r14 = r1.getBitmapHeight()
            boolean r1 = r10.leftImageIsVideo
            if (r1 != 0) goto L_0x0CLASSNAME
            org.telegram.messenger.MediaController$CropState r1 = r10.leftCropState
            if (r1 == 0) goto L_0x0CLASSNAME
            org.telegram.ui.Components.Crop.CropTransform r1 = r10.leftCropTransform
            boolean r1 = r1.hasViewTransform()
            if (r1 == 0) goto L_0x0CLASSNAME
            org.telegram.ui.Components.Crop.CropTransform r8 = r10.leftCropTransform
            org.telegram.messenger.MediaController$CropState r15 = r10.leftCropState
            r1 = r46
            r2 = r47
            r3 = r0
            r4 = r35
            r5 = r13
            r6 = r14
            r7 = r43
            r17 = r0
            r20 = r9
            r0 = r35
            r9 = r15
            r1.applyCrop(r2, r3, r4, r5, r6, r7, r8, r9)
            goto L_0x0c5a
        L_0x0CLASSNAME:
            r17 = r0
            r20 = r9
            r0 = r35
        L_0x0c5a:
            float r1 = (float) r13
            float r12 = r12 / r1
            float r0 = (float) r0
            float r2 = (float) r14
            float r0 = r0 / r2
            float r0 = java.lang.Math.min(r12, r0)
            float r1 = r1 * r0
            int r1 = (int) r1
            float r2 = r2 * r0
            int r2 = (int) r2
            java.util.ArrayList<java.lang.Object> r3 = r10.imagesArrLocals
            boolean r3 = r3.isEmpty()
            if (r3 != 0) goto L_0x0c8c
            int r3 = r10.currentEditMode
            r4 = 1
            if (r3 == r4) goto L_0x0CLASSNAME
            int r3 = r10.sendPhotoType
            if (r3 != r4) goto L_0x0c7b
            goto L_0x0CLASSNAME
        L_0x0c7b:
            org.telegram.messenger.MediaController$CropState r3 = r10.leftCropState
            if (r3 == 0) goto L_0x0c8c
            boolean r3 = r3.mirrored
            if (r3 == 0) goto L_0x0c8c
            r5 = 1
            goto L_0x0c8d
        L_0x0CLASSNAME:
            org.telegram.ui.Components.Crop.CropTransform r3 = r10.leftCropTransform
            boolean r5 = r3.isMirrored()
            goto L_0x0c8d
        L_0x0c8c:
            r5 = 0
        L_0x0c8d:
            if (r5 == 0) goto L_0x0CLASSNAME
            r3 = -1082130432(0xffffffffbvar_, float:-1.0)
            r4 = 1065353216(0x3var_, float:1.0)
            r11.scale(r3, r4)
            goto L_0x0CLASSNAME
        L_0x0CLASSNAME:
            r4 = 1065353216(0x3var_, float:1.0)
        L_0x0CLASSNAME:
            org.telegram.messenger.ImageReceiver r3 = r10.sideImage
            r3.setAlpha(r4)
            org.telegram.messenger.ImageReceiver r3 = r10.sideImage
            int r4 = -r1
            r5 = 2
            int r4 = r4 / r5
            float r6 = (float) r4
            int r7 = -r2
            int r7 = r7 / r5
            float r8 = (float) r7
            float r9 = (float) r1
            float r12 = (float) r2
            r3.setImageCoords(r6, r8, r9, r12)
            org.telegram.messenger.ImageReceiver r3 = r10.sideImage
            r3.draw(r11)
            org.telegram.ui.Components.PaintingOverlay r3 = r10.leftPaintingOverlay
            if (r3 == 0) goto L_0x0cff
            int r3 = r3.getVisibility()
            if (r3 != 0) goto L_0x0cff
            int r1 = r1 / r5
            int r2 = r2 / r5
            r11.clipRect(r4, r7, r1, r2)
            org.telegram.ui.Components.PaintingOverlay r1 = r10.leftPaintingOverlay
            int r1 = r1.getMeasuredWidth()
            if (r1 != r13) goto L_0x0cd0
            org.telegram.ui.Components.PaintingOverlay r1 = r10.leftPaintingOverlay
            int r1 = r1.getMeasuredHeight()
            if (r1 == r14) goto L_0x0ce5
        L_0x0cd0:
            org.telegram.ui.Components.PaintingOverlay r1 = r10.leftPaintingOverlay
            r2 = 1073741824(0x40000000, float:2.0)
            int r3 = android.view.View.MeasureSpec.makeMeasureSpec(r13, r2)
            int r2 = android.view.View.MeasureSpec.makeMeasureSpec(r14, r2)
            r1.measure(r3, r2)
            org.telegram.ui.Components.PaintingOverlay r1 = r10.leftPaintingOverlay
            r2 = 0
            r1.layout(r2, r2, r13, r14)
        L_0x0ce5:
            r11.scale(r0, r0)
            int r0 = -r13
            r1 = 2
            int r0 = r0 / r1
            float r0 = (float) r0
            int r2 = -r14
            int r2 = r2 / r1
            float r1 = (float) r2
            r11.translate(r0, r1)
            org.telegram.ui.Components.PaintingOverlay r0 = r10.leftPaintingOverlay
            r1 = 1065353216(0x3var_, float:1.0)
            r0.setAlpha(r1)
            org.telegram.ui.Components.PaintingOverlay r0 = r10.leftPaintingOverlay
            r0.draw(r11)
            goto L_0x0d01
        L_0x0cff:
            r1 = 1065353216(0x3var_, float:1.0)
        L_0x0d01:
            r47.restore()
            goto L_0x0d0b
        L_0x0d05:
            r20 = r9
            r17 = r33
            r1 = 1065353216(0x3var_, float:1.0)
        L_0x0d0b:
            org.telegram.ui.Components.GroupedPhotosListView r0 = r10.groupedPhotosListView
            float r15 = r1 - r20
            r0.setMoveProgress(r15)
            r47.save()
            float r6 = r44 / r43
            r13 = r16
            r11.translate(r13, r6)
            r0 = r17
            float r0 = (float) r0
            float r2 = r10.scale
            float r2 = r2 + r1
            float r0 = r0 * r2
            int r1 = org.telegram.messenger.AndroidUtilities.dp(r29)
            float r1 = (float) r1
            float r0 = r0 + r1
            float r0 = -r0
            float r0 = r0 / r30
            r14 = r44
            float r1 = -r14
            float r1 = r1 / r43
            r11.translate(r0, r1)
            org.telegram.ui.PhotoViewer$PhotoProgressView[] r0 = r10.photoProgressViews
            r1 = 2
            r0 = r0[r1]
            r2 = 1065353216(0x3var_, float:1.0)
            r0.setScale(r2)
            org.telegram.ui.PhotoViewer$PhotoProgressView[] r0 = r10.photoProgressViews
            r0 = r0[r1]
            r0.setAlpha(r2)
            org.telegram.ui.PhotoViewer$PhotoProgressView[] r0 = r10.photoProgressViews
            r0 = r0[r1]
            r0.onDraw(r11)
            boolean r0 = r10.isActionBarVisible
            if (r0 == 0) goto L_0x0d58
            android.widget.ImageView[] r0 = r10.fullscreenButton
            r0 = r0[r1]
            r0.setAlpha(r2)
        L_0x0d58:
            r47.restore()
            goto L_0x0d6b
        L_0x0d5c:
            r14 = r44
            r1 = 2
            boolean r0 = r10.isActionBarVisible
            if (r0 == 0) goto L_0x0d6b
            android.widget.ImageView[] r0 = r10.fullscreenButton
            r0 = r0[r1]
            r1 = 0
            r0.setAlpha(r1)
        L_0x0d6b:
            int r0 = r10.waitingForDraw
            if (r0 == 0) goto L_0x0dc5
            r1 = 1
            int r0 = r0 - r1
            r10.waitingForDraw = r0
            if (r0 != 0) goto L_0x0dc0
            android.widget.ImageView r0 = r10.textureImageView
            if (r0 == 0) goto L_0x0dbb
            android.view.TextureView r0 = r10.videoTextureView     // Catch:{ all -> 0x0d94 }
            int r0 = r0.getWidth()     // Catch:{ all -> 0x0d94 }
            android.view.TextureView r1 = r10.videoTextureView     // Catch:{ all -> 0x0d94 }
            int r1 = r1.getHeight()     // Catch:{ all -> 0x0d94 }
            android.graphics.Bitmap$Config r2 = android.graphics.Bitmap.Config.ARGB_8888     // Catch:{ all -> 0x0d94 }
            android.graphics.Bitmap r0 = org.telegram.messenger.Bitmaps.createBitmap(r0, r1, r2)     // Catch:{ all -> 0x0d94 }
            r10.currentBitmap = r0     // Catch:{ all -> 0x0d94 }
            android.view.TextureView r1 = r10.changedTextureView     // Catch:{ all -> 0x0d94 }
            r1.getBitmap(r0)     // Catch:{ all -> 0x0d94 }
            r1 = 0
            goto L_0x0da4
        L_0x0d94:
            r0 = move-exception
            android.graphics.Bitmap r1 = r10.currentBitmap
            if (r1 == 0) goto L_0x0da0
            r1.recycle()
            r1 = 0
            r10.currentBitmap = r1
            goto L_0x0da1
        L_0x0da0:
            r1 = 0
        L_0x0da1:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x0da4:
            android.graphics.Bitmap r0 = r10.currentBitmap
            if (r0 == 0) goto L_0x0db6
            android.widget.ImageView r0 = r10.textureImageView
            r1 = 0
            r0.setVisibility(r1)
            android.widget.ImageView r0 = r10.textureImageView
            android.graphics.Bitmap r1 = r10.currentBitmap
            r0.setImageBitmap(r1)
            goto L_0x0dbb
        L_0x0db6:
            android.widget.ImageView r0 = r10.textureImageView
            r0.setImageDrawable(r1)
        L_0x0dbb:
            r1 = 1
            org.telegram.ui.Components.PipVideoOverlay.dismiss(r1)
            goto L_0x0dc5
        L_0x0dc0:
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r0 = r10.containerView
            r0.invalidate()
        L_0x0dc5:
            boolean r0 = r10.padImageForHorizontalInsets
            if (r0 == 0) goto L_0x0dcc
            r47.restore()
        L_0x0dcc:
            com.google.android.exoplayer2.ui.AspectRatioFrameLayout r0 = r10.aspectRatioFrameLayout
            if (r0 == 0) goto L_0x0e12
            org.telegram.ui.Components.VideoForwardDrawable r0 = r10.videoForwardDrawable
            boolean r0 = r0.isAnimating()
            if (r0 == 0) goto L_0x0e12
            com.google.android.exoplayer2.ui.AspectRatioFrameLayout r0 = r10.aspectRatioFrameLayout
            int r0 = r0.getMeasuredHeight()
            float r0 = (float) r0
            float r1 = r10.scale
            r2 = 1065353216(0x3var_, float:1.0)
            float r1 = r1 - r2
            float r0 = r0 * r1
            int r0 = (int) r0
            r1 = 2
            int r0 = r0 / r1
            org.telegram.ui.Components.VideoForwardDrawable r1 = r10.videoForwardDrawable
            com.google.android.exoplayer2.ui.AspectRatioFrameLayout r2 = r10.aspectRatioFrameLayout
            int r2 = r2.getLeft()
            com.google.android.exoplayer2.ui.AspectRatioFrameLayout r3 = r10.aspectRatioFrameLayout
            int r3 = r3.getTop()
            int r3 = r3 - r0
            float r6 = r14 / r43
            int r4 = (int) r6
            int r3 = r3 + r4
            com.google.android.exoplayer2.ui.AspectRatioFrameLayout r5 = r10.aspectRatioFrameLayout
            int r5 = r5.getRight()
            com.google.android.exoplayer2.ui.AspectRatioFrameLayout r6 = r10.aspectRatioFrameLayout
            int r6 = r6.getBottom()
            int r6 = r6 + r0
            int r6 = r6 + r4
            r1.setBounds(r2, r3, r5, r6)
            org.telegram.ui.Components.VideoForwardDrawable r0 = r10.videoForwardDrawable
            r0.draw(r11)
        L_0x0e12:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.onDraw(android.graphics.Canvas):void");
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$onDraw$76() {
        switchToNextIndex(1, false);
    }

    /* access modifiers changed from: private */
    public /* synthetic */ void lambda$onDraw$77() {
        switchToNextIndex(-1, false);
    }

    /* JADX WARNING: Code restructure failed: missing block: B:10:0x0018, code lost:
        r0 = r8.videoPlayer;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:2:0x0006, code lost:
        r0 = r8.videoTimelineView;
     */
    /* JADX WARNING: Removed duplicated region for block: B:30:0x004b  */
    /* JADX WARNING: Removed duplicated region for block: B:32:0x004e  */
    /* JADX WARNING: Removed duplicated region for block: B:33:0x0059  */
    /* JADX WARNING: Removed duplicated region for block: B:36:0x005e  */
    /* JADX WARNING: Removed duplicated region for block: B:37:0x0067  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void drawProgress(android.graphics.Canvas r9, float r10, float r11, float r12, float r13) {
        /*
            r8 = this;
            boolean r0 = r8.isCurrentVideo
            r1 = 1
            r2 = 0
            if (r0 == 0) goto L_0x0025
            org.telegram.ui.Components.VideoTimelinePlayView r0 = r8.videoTimelineView
            if (r0 == 0) goto L_0x0010
            boolean r0 = r0.isDragging()
            if (r0 != 0) goto L_0x0023
        L_0x0010:
            int r0 = r8.sendPhotoType
            if (r0 != r1) goto L_0x0018
            boolean r0 = r8.manuallyPaused
            if (r0 == 0) goto L_0x0023
        L_0x0018:
            org.telegram.ui.Components.VideoPlayer r0 = r8.videoPlayer
            if (r0 == 0) goto L_0x0025
            boolean r0 = r0.isPlaying()
            if (r0 != 0) goto L_0x0023
            goto L_0x0025
        L_0x0023:
            r0 = 0
            goto L_0x0026
        L_0x0025:
            r0 = 1
        L_0x0026:
            org.telegram.ui.Components.RadialProgressView r3 = r8.miniProgressView
            int r3 = r3.getVisibility()
            if (r3 == 0) goto L_0x0034
            android.animation.AnimatorSet r3 = r8.miniProgressAnimator
            if (r3 == 0) goto L_0x0033
            goto L_0x0034
        L_0x0033:
            r1 = 0
        L_0x0034:
            if (r0 == 0) goto L_0x00c4
            boolean r0 = r8.zoomAnimation
            r3 = 0
            if (r0 != 0) goto L_0x0044
            float r0 = -r10
            float r4 = r8.maxX
            int r0 = (r0 > r4 ? 1 : (r0 == r4 ? 0 : -1))
            if (r0 <= 0) goto L_0x0044
            float r4 = r4 + r10
            goto L_0x0045
        L_0x0044:
            r4 = 0
        L_0x0045:
            r0 = 1065353216(0x3var_, float:1.0)
            int r5 = (r11 > r0 ? 1 : (r11 == r0 ? 0 : -1))
            if (r5 != 0) goto L_0x004c
            r3 = r12
        L_0x004c:
            if (r1 == 0) goto L_0x0059
            org.telegram.ui.Components.RadialProgressView r5 = r8.miniProgressView
            float r5 = r5.getAlpha()
            float r5 = r0 - r5
            float r5 = r5 * r13
            goto L_0x005a
        L_0x0059:
            r5 = r13
        L_0x005a:
            boolean r6 = r8.pipAnimationInProgress
            if (r6 == 0) goto L_0x0067
            org.telegram.ui.ActionBar.ActionBar r6 = r8.actionBar
            float r6 = r6.getAlpha()
            float r5 = r5 * r6
            goto L_0x0083
        L_0x0067:
            org.telegram.ui.PhotoViewer$PhotoProgressView[] r6 = r8.photoProgressViews
            r6 = r6[r2]
            int r6 = r6.backgroundState
            r7 = 4
            if (r6 != r7) goto L_0x0083
            r6 = 1090519040(0x41000000, float:8.0)
            float r6 = org.telegram.messenger.AndroidUtilities.dpf2(r6)
            org.telegram.ui.ActionBar.ActionBar r7 = r8.actionBar
            float r7 = r7.getAlpha()
            float r7 = r0 - r7
            float r6 = r6 * r7
            float r3 = r3 + r6
        L_0x0083:
            r9.save()
            r9.translate(r4, r3)
            org.telegram.ui.PhotoViewer$PhotoProgressView[] r3 = r8.photoProgressViews
            r3 = r3[r2]
            r3.setScale(r0)
            org.telegram.ui.PhotoViewer$PhotoProgressView[] r0 = r8.photoProgressViews
            r0 = r0[r2]
            r0.setAlpha(r5)
            org.telegram.ui.PhotoViewer$PhotoProgressView[] r0 = r8.photoProgressViews
            r0 = r0[r2]
            r0.onDraw(r9)
            boolean r0 = r8.isActionBarVisible
            if (r0 == 0) goto L_0x00c1
            boolean r0 = r8.allowShowFullscreenButton
            if (r0 == 0) goto L_0x00c1
            android.widget.ImageView[] r0 = r8.fullscreenButton
            r0 = r0[r2]
            java.lang.Object r0 = r0.getTag()
            if (r0 != 0) goto L_0x00c1
            android.widget.ImageView[] r0 = r8.fullscreenButton
            r3 = r0[r2]
            r0 = r0[r2]
            float r0 = r0.getAlpha()
            float r13 = java.lang.Math.min(r0, r13)
            r3.setAlpha(r13)
        L_0x00c1:
            r9.restore()
        L_0x00c4:
            if (r1 == 0) goto L_0x00e9
            boolean r13 = r8.pipAnimationInProgress
            if (r13 != 0) goto L_0x00e9
            r9.save()
            org.telegram.ui.Components.RadialProgressView r13 = r8.miniProgressView
            int r13 = r13.getLeft()
            float r13 = (float) r13
            float r13 = r13 + r10
            org.telegram.ui.Components.RadialProgressView r10 = r8.miniProgressView
            int r10 = r10.getTop()
            float r10 = (float) r10
            float r12 = r12 / r11
            float r10 = r10 + r12
            r9.translate(r13, r10)
            org.telegram.ui.Components.RadialProgressView r10 = r8.miniProgressView
            r10.draw(r9)
            r9.restore()
        L_0x00e9:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.drawProgress(android.graphics.Canvas, float, float, float, float):void");
    }

    /* JADX WARNING: Removed duplicated region for block: B:35:0x0097  */
    /* JADX WARNING: Removed duplicated region for block: B:45:0x00b6  */
    /* JADX WARNING: Removed duplicated region for block: B:55:0x00e7  */
    /* JADX WARNING: Removed duplicated region for block: B:59:0x00fb  */
    /* JADX WARNING: Removed duplicated region for block: B:75:0x016f  */
    /* JADX WARNING: Removed duplicated region for block: B:82:0x0180  */
    /* JADX WARNING: Removed duplicated region for block: B:83:0x0184  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private int[] applyCrop(android.graphics.Canvas r23, int r24, int r25, int r26, int r27, float r28, org.telegram.ui.Components.Crop.CropTransform r29, org.telegram.messenger.MediaController.CropState r30) {
        /*
            r22 = this;
            r0 = r22
            r1 = r23
            r2 = r24
            r3 = r30
            float r2 = (float) r2
            r4 = r26
            float r5 = (float) r4
            float r6 = r2 / r5
            r7 = r25
            float r7 = (float) r7
            r8 = r27
            float r9 = (float) r8
            float r10 = r7 / r9
            float r11 = java.lang.Math.min(r6, r10)
            int r12 = r29.getOrientation()
            r13 = 90
            if (r12 == r13) goto L_0x002c
            r13 = 270(0x10e, float:3.78E-43)
            if (r12 != r13) goto L_0x0027
            goto L_0x002c
        L_0x0027:
            r21 = r8
            r8 = r4
            r4 = r21
        L_0x002c:
            int r13 = r0.sendPhotoType
            r14 = 3
            r15 = 1
            r16 = 1065353216(0x3var_, float:1.0)
            if (r13 == r15) goto L_0x003f
            int r13 = r0.currentEditMode
            if (r13 == r14) goto L_0x003c
            int r13 = r0.switchingToMode
            if (r13 != r14) goto L_0x003f
        L_0x003c:
            r13 = 1065353216(0x3var_, float:1.0)
            goto L_0x006b
        L_0x003f:
            android.animation.AnimatorSet r13 = r0.imageMoveAnimation
            if (r13 == 0) goto L_0x0062
            int r13 = r0.switchingToMode
            r14 = -1
            if (r13 == r14) goto L_0x0062
            int r14 = r0.currentEditMode
            if (r14 == r15) goto L_0x003c
            if (r13 == r15) goto L_0x003c
            r15 = 2
            if (r14 == r15) goto L_0x0054
            r15 = 3
            if (r14 != r15) goto L_0x0058
        L_0x0054:
            r14 = -1
            if (r13 != r14) goto L_0x0058
            goto L_0x003c
        L_0x0058:
            if (r13 != 0) goto L_0x005d
            float r13 = r0.animationValue
            goto L_0x006b
        L_0x005d:
            float r13 = r0.animationValue
            float r13 = r16 - r13
            goto L_0x006b
        L_0x0062:
            int r13 = r0.currentEditMode
            r14 = 2
            if (r13 == r14) goto L_0x006a
            r14 = 3
            if (r13 != r14) goto L_0x003c
        L_0x006a:
            r13 = 0
        L_0x006b:
            float r14 = r29.getCropPw()
            float r15 = r29.getCropPh()
            float r8 = (float) r8
            float r17 = r16 - r14
            float r18 = r16 - r13
            float r17 = r17 * r18
            float r14 = r14 + r17
            float r14 = r14 * r8
            int r14 = (int) r14
            float r4 = (float) r4
            float r17 = r16 - r15
            float r17 = r17 * r18
            float r15 = r15 + r17
            float r15 = r15 * r4
            int r15 = (int) r15
            r25 = r10
            float r10 = (float) r14
            float r17 = r2 / r10
            r26 = r14
            float r14 = (float) r15
            float r19 = r17 * r14
            int r19 = (r19 > r7 ? 1 : (r19 == r7 ? 0 : -1))
            if (r19 <= 0) goto L_0x0099
            float r17 = r7 / r14
        L_0x0099:
            r19 = r15
            int r15 = r0.sendPhotoType
            r20 = r12
            r12 = 1
            if (r15 == r12) goto L_0x00d3
            int r15 = r0.currentEditMode
            if (r15 != r12) goto L_0x00aa
            int r12 = r0.switchingToMode
            if (r12 != 0) goto L_0x00d3
        L_0x00aa:
            if (r3 == 0) goto L_0x00d3
            float r10 = r10 * r17
            float r14 = r14 * r17
            float r12 = r6 * r9
            int r12 = (r12 > r7 ? 1 : (r12 == r7 ? 0 : -1))
            if (r12 <= 0) goto L_0x00b8
            r6 = r25
        L_0x00b8:
            float r5 = r5 * r6
            float r5 = r5 / r28
            float r9 = r9 * r6
            float r9 = r9 / r28
            float r5 = r5 - r10
            float r5 = r5 * r18
            float r10 = r10 + r5
            float r9 = r9 - r14
            float r9 = r9 * r18
            float r14 = r14 + r9
            float r5 = -r10
            r6 = 1073741824(0x40000000, float:2.0)
            float r5 = r5 / r6
            float r9 = -r14
            float r9 = r9 / r6
            float r10 = r10 / r6
            float r14 = r14 / r6
            r1.clipRect(r5, r9, r10, r14)
        L_0x00d3:
            int r5 = r0.sendPhotoType
            r6 = 1
            if (r5 == r6) goto L_0x00de
            boolean r5 = r29.hasViewTransform()
            if (r5 == 0) goto L_0x0189
        L_0x00de:
            int r5 = r0.currentEditMode
            if (r5 == r6) goto L_0x00fb
            int r5 = r0.sendPhotoType
            if (r5 != r6) goto L_0x00e7
            goto L_0x00fb
        L_0x00e7:
            if (r3 == 0) goto L_0x00ec
            float r2 = r3.cropScale
            goto L_0x00ee
        L_0x00ec:
            r2 = 1065353216(0x3var_, float:1.0)
        L_0x00ee:
            float r3 = r2 - r16
            float r3 = r3 * r18
            float r3 = r3 + r16
            float r17 = r17 / r11
            float r17 = r17 / r3
            float r2 = r2 * r17
            goto L_0x0138
        L_0x00fb:
            float r3 = r29.getTrueCropScale()
            float r3 = r3 - r16
            float r3 = r3 * r18
            float r3 = r3 + r16
            float r5 = r29.getScale()
            float r5 = r5 / r3
            float r2 = r2 / r8
            float r3 = r2 * r4
            int r3 = (r3 > r7 ? 1 : (r3 == r7 ? 0 : -1))
            if (r3 <= 0) goto L_0x0113
            float r2 = r7 / r4
        L_0x0113:
            float r2 = r2 / r11
            float r5 = r5 * r2
            int r2 = r0.sendPhotoType
            r3 = 1
            if (r2 != r3) goto L_0x0137
            int r2 = r0.currentEditMode
            r3 = 3
            if (r2 == r3) goto L_0x012c
            int r2 = r0.switchingToMode
            if (r2 != r3) goto L_0x0125
            goto L_0x012c
        L_0x0125:
            if (r2 != 0) goto L_0x0137
            float r2 = r29.getMinScale()
            goto L_0x0136
        L_0x012c:
            float r2 = r29.getMinScale()
            float r2 = r2 - r16
            float r2 = r2 * r18
            float r2 = r2 + r16
        L_0x0136:
            float r5 = r5 / r2
        L_0x0137:
            r2 = r5
        L_0x0138:
            float r3 = r29.getCropAreaX()
            float r3 = r3 * r13
            float r5 = r29.getCropAreaY()
            float r5 = r5 * r13
            r1.translate(r3, r5)
            r1.scale(r2, r2)
            float r2 = r29.getCropPx()
            float r2 = r2 * r8
            float r2 = r2 * r11
            float r2 = r2 * r13
            float r3 = r29.getCropPy()
            float r3 = r3 * r4
            float r3 = r3 * r11
            float r3 = r3 * r13
            r1.translate(r2, r3)
            float r2 = r29.getRotation()
            r3 = r20
            float r3 = (float) r3
            float r2 = r2 + r3
            r3 = 1127481344(0x43340000, float:180.0)
            int r3 = (r2 > r3 ? 1 : (r2 == r3 ? 0 : -1))
            if (r3 <= 0) goto L_0x0172
            r3 = 1135869952(0x43b40000, float:360.0)
            float r2 = r2 - r3
        L_0x0172:
            int r3 = r0.sendPhotoType
            r4 = 1
            if (r3 != r4) goto L_0x0184
            int r3 = r0.currentEditMode
            r4 = 3
            if (r3 == r4) goto L_0x0180
            int r3 = r0.switchingToMode
            if (r3 != r4) goto L_0x0184
        L_0x0180:
            r1.rotate(r2)
            goto L_0x0189
        L_0x0184:
            float r2 = r2 * r13
            r1.rotate(r2)
        L_0x0189:
            int[] r1 = r0.tempInt
            r2 = 0
            r1[r2] = r26
            r2 = 1
            r1[r2] = r19
            return r1
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.applyCrop(android.graphics.Canvas, int, int, int, int, float, org.telegram.ui.Components.Crop.CropTransform, org.telegram.messenger.MediaController$CropState):int[]");
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:15:0x0039, code lost:
        if (r1.exists() == false) goto L_0x003b;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:46:0x0152, code lost:
        if (r1.exists() == false) goto L_0x01b3;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:50:0x0191, code lost:
        if (r1.exists() == false) goto L_0x01b3;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:59:0x01b1, code lost:
        if (r1.exists() == false) goto L_0x01b3;
     */
    /* JADX WARNING: Removed duplicated region for block: B:65:0x01bf  */
    /* JADX WARNING: Removed duplicated region for block: B:95:0x02b6  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void onActionClick(boolean r11) {
        /*
            r10 = this;
            java.lang.String r0 = "UTF-8"
            org.telegram.messenger.MessageObject r1 = r10.currentMessageObject
            if (r1 != 0) goto L_0x000e
            org.telegram.tgnet.TLRPC$BotInlineResult r2 = r10.currentBotInlineResult
            if (r2 != 0) goto L_0x000e
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r2 = r10.pageBlocksAdapter
            if (r2 == 0) goto L_0x0015
        L_0x000e:
            java.lang.String[] r2 = r10.currentFileNames
            r3 = 0
            r2 = r2[r3]
            if (r2 != 0) goto L_0x0016
        L_0x0015:
            return
        L_0x0016:
            r10.isStreaming = r3
            java.lang.String r2 = "mp4"
            r4 = 1
            r5 = 0
            if (r1 == 0) goto L_0x0138
            org.telegram.tgnet.TLRPC$Message r1 = r1.messageOwner
            java.lang.String r1 = r1.attachPath
            if (r1 == 0) goto L_0x003b
            int r1 = r1.length()
            if (r1 == 0) goto L_0x003b
            java.io.File r1 = new java.io.File
            org.telegram.messenger.MessageObject r6 = r10.currentMessageObject
            org.telegram.tgnet.TLRPC$Message r6 = r6.messageOwner
            java.lang.String r6 = r6.attachPath
            r1.<init>(r6)
            boolean r6 = r1.exists()
            if (r6 != 0) goto L_0x003c
        L_0x003b:
            r1 = r5
        L_0x003c:
            if (r1 != 0) goto L_0x0135
            int r1 = r10.currentAccount
            org.telegram.messenger.FileLoader r1 = org.telegram.messenger.FileLoader.getInstance(r1)
            org.telegram.messenger.MessageObject r6 = r10.currentMessageObject
            org.telegram.tgnet.TLRPC$Message r6 = r6.messageOwner
            java.io.File r1 = r1.getPathToMessage(r6)
            boolean r6 = r1.exists()
            if (r6 != 0) goto L_0x0135
            boolean r1 = org.telegram.messenger.SharedConfig.streamMedia
            if (r1 == 0) goto L_0x01b3
            org.telegram.messenger.MessageObject r1 = r10.currentMessageObject
            long r6 = r1.getDialogId()
            boolean r1 = org.telegram.messenger.DialogObject.isEncryptedDialog(r6)
            if (r1 != 0) goto L_0x01b3
            org.telegram.messenger.MessageObject r1 = r10.currentMessageObject
            boolean r1 = r1.isVideo()
            if (r1 == 0) goto L_0x01b3
            org.telegram.messenger.MessageObject r1 = r10.currentMessageObject
            boolean r1 = r1.canStreamVideo()
            if (r1 == 0) goto L_0x01b3
            org.telegram.messenger.MessageObject r1 = r10.currentMessageObject     // Catch:{ Exception -> 0x0131 }
            int r1 = r1.currentAccount     // Catch:{ Exception -> 0x0131 }
            org.telegram.messenger.FileLoader r1 = org.telegram.messenger.FileLoader.getInstance(r1)     // Catch:{ Exception -> 0x0131 }
            org.telegram.messenger.MessageObject r6 = r10.currentMessageObject     // Catch:{ Exception -> 0x0131 }
            int r1 = r1.getFileReference(r6)     // Catch:{ Exception -> 0x0131 }
            int r6 = r10.currentAccount     // Catch:{ Exception -> 0x0131 }
            org.telegram.messenger.FileLoader r6 = org.telegram.messenger.FileLoader.getInstance(r6)     // Catch:{ Exception -> 0x0131 }
            org.telegram.messenger.MessageObject r7 = r10.currentMessageObject     // Catch:{ Exception -> 0x0131 }
            org.telegram.tgnet.TLRPC$Document r7 = r7.getDocument()     // Catch:{ Exception -> 0x0131 }
            org.telegram.messenger.MessageObject r8 = r10.currentMessageObject     // Catch:{ Exception -> 0x0131 }
            r6.loadFile(r7, r8, r4, r3)     // Catch:{ Exception -> 0x0131 }
            org.telegram.messenger.MessageObject r6 = r10.currentMessageObject     // Catch:{ Exception -> 0x0131 }
            org.telegram.tgnet.TLRPC$Document r6 = r6.getDocument()     // Catch:{ Exception -> 0x0131 }
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0131 }
            r7.<init>()     // Catch:{ Exception -> 0x0131 }
            java.lang.String r8 = "?account="
            r7.append(r8)     // Catch:{ Exception -> 0x0131 }
            org.telegram.messenger.MessageObject r8 = r10.currentMessageObject     // Catch:{ Exception -> 0x0131 }
            int r8 = r8.currentAccount     // Catch:{ Exception -> 0x0131 }
            r7.append(r8)     // Catch:{ Exception -> 0x0131 }
            java.lang.String r8 = "&id="
            r7.append(r8)     // Catch:{ Exception -> 0x0131 }
            long r8 = r6.id     // Catch:{ Exception -> 0x0131 }
            r7.append(r8)     // Catch:{ Exception -> 0x0131 }
            java.lang.String r8 = "&hash="
            r7.append(r8)     // Catch:{ Exception -> 0x0131 }
            long r8 = r6.access_hash     // Catch:{ Exception -> 0x0131 }
            r7.append(r8)     // Catch:{ Exception -> 0x0131 }
            java.lang.String r8 = "&dc="
            r7.append(r8)     // Catch:{ Exception -> 0x0131 }
            int r8 = r6.dc_id     // Catch:{ Exception -> 0x0131 }
            r7.append(r8)     // Catch:{ Exception -> 0x0131 }
            java.lang.String r8 = "&size="
            r7.append(r8)     // Catch:{ Exception -> 0x0131 }
            long r8 = r6.size     // Catch:{ Exception -> 0x0131 }
            r7.append(r8)     // Catch:{ Exception -> 0x0131 }
            java.lang.String r8 = "&mime="
            r7.append(r8)     // Catch:{ Exception -> 0x0131 }
            java.lang.String r8 = r6.mime_type     // Catch:{ Exception -> 0x0131 }
            java.lang.String r8 = java.net.URLEncoder.encode(r8, r0)     // Catch:{ Exception -> 0x0131 }
            r7.append(r8)     // Catch:{ Exception -> 0x0131 }
            java.lang.String r8 = "&rid="
            r7.append(r8)     // Catch:{ Exception -> 0x0131 }
            r7.append(r1)     // Catch:{ Exception -> 0x0131 }
            java.lang.String r1 = "&name="
            r7.append(r1)     // Catch:{ Exception -> 0x0131 }
            java.lang.String r1 = org.telegram.messenger.FileLoader.getDocumentFileName(r6)     // Catch:{ Exception -> 0x0131 }
            java.lang.String r0 = java.net.URLEncoder.encode(r1, r0)     // Catch:{ Exception -> 0x0131 }
            r7.append(r0)     // Catch:{ Exception -> 0x0131 }
            java.lang.String r0 = "&reference="
            r7.append(r0)     // Catch:{ Exception -> 0x0131 }
            byte[] r0 = r6.file_reference     // Catch:{ Exception -> 0x0131 }
            if (r0 == 0) goto L_0x0100
            goto L_0x0102
        L_0x0100:
            byte[] r0 = new byte[r3]     // Catch:{ Exception -> 0x0131 }
        L_0x0102:
            java.lang.String r0 = org.telegram.messenger.Utilities.bytesToHex(r0)     // Catch:{ Exception -> 0x0131 }
            r7.append(r0)     // Catch:{ Exception -> 0x0131 }
            java.lang.String r0 = r7.toString()     // Catch:{ Exception -> 0x0131 }
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0131 }
            r1.<init>()     // Catch:{ Exception -> 0x0131 }
            java.lang.String r6 = "tg://"
            r1.append(r6)     // Catch:{ Exception -> 0x0131 }
            org.telegram.messenger.MessageObject r6 = r10.currentMessageObject     // Catch:{ Exception -> 0x0131 }
            java.lang.String r6 = r6.getFileName()     // Catch:{ Exception -> 0x0131 }
            r1.append(r6)     // Catch:{ Exception -> 0x0131 }
            r1.append(r0)     // Catch:{ Exception -> 0x0131 }
            java.lang.String r0 = r1.toString()     // Catch:{ Exception -> 0x0131 }
            android.net.Uri r0 = android.net.Uri.parse(r0)     // Catch:{ Exception -> 0x0131 }
            r10.isStreaming = r4     // Catch:{ Exception -> 0x0132 }
            r10.checkProgress(r3, r3, r3)     // Catch:{ Exception -> 0x0132 }
            goto L_0x0132
        L_0x0131:
            r0 = r5
        L_0x0132:
            r1 = r5
            goto L_0x01b5
        L_0x0135:
            r0 = r5
            goto L_0x01b5
        L_0x0138:
            org.telegram.tgnet.TLRPC$BotInlineResult r0 = r10.currentBotInlineResult
            if (r0 == 0) goto L_0x0194
            org.telegram.tgnet.TLRPC$Document r1 = r0.document
            if (r1 == 0) goto L_0x0155
            int r0 = r10.currentAccount
            org.telegram.messenger.FileLoader r0 = org.telegram.messenger.FileLoader.getInstance(r0)
            org.telegram.tgnet.TLRPC$BotInlineResult r1 = r10.currentBotInlineResult
            org.telegram.tgnet.TLRPC$Document r1 = r1.document
            java.io.File r1 = r0.getPathToAttach(r1)
            boolean r0 = r1.exists()
            if (r0 != 0) goto L_0x0135
            goto L_0x01b3
        L_0x0155:
            org.telegram.tgnet.TLRPC$WebDocument r0 = r0.content
            boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC$TL_webDocument
            if (r0 == 0) goto L_0x01b3
            java.io.File r1 = new java.io.File
            r0 = 4
            java.io.File r0 = org.telegram.messenger.FileLoader.getDirectory(r0)
            java.lang.StringBuilder r6 = new java.lang.StringBuilder
            r6.<init>()
            org.telegram.tgnet.TLRPC$BotInlineResult r7 = r10.currentBotInlineResult
            org.telegram.tgnet.TLRPC$WebDocument r7 = r7.content
            java.lang.String r7 = r7.url
            java.lang.String r7 = org.telegram.messenger.Utilities.MD5(r7)
            r6.append(r7)
            java.lang.String r7 = "."
            r6.append(r7)
            org.telegram.tgnet.TLRPC$BotInlineResult r7 = r10.currentBotInlineResult
            org.telegram.tgnet.TLRPC$WebDocument r7 = r7.content
            java.lang.String r7 = r7.url
            java.lang.String r7 = org.telegram.messenger.ImageLoader.getHttpUrlExtension(r7, r2)
            r6.append(r7)
            java.lang.String r6 = r6.toString()
            r1.<init>(r0, r6)
            boolean r0 = r1.exists()
            if (r0 != 0) goto L_0x0135
            goto L_0x01b3
        L_0x0194:
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r0 = r10.pageBlocksAdapter
            if (r0 == 0) goto L_0x01b3
            int r1 = r10.currentIndex
            org.telegram.tgnet.TLObject r0 = r0.getMedia(r1)
            boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC$Document
            if (r0 != 0) goto L_0x01a3
            return
        L_0x01a3:
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r0 = r10.pageBlocksAdapter
            int r1 = r10.currentIndex
            java.io.File r1 = r0.getFile(r1)
            if (r1 == 0) goto L_0x0135
            boolean r0 = r1.exists()
            if (r0 != 0) goto L_0x0135
        L_0x01b3:
            r0 = r5
            r1 = r0
        L_0x01b5:
            if (r1 == 0) goto L_0x01bd
            if (r0 != 0) goto L_0x01bd
            android.net.Uri r0 = android.net.Uri.fromFile(r1)
        L_0x01bd:
            if (r0 != 0) goto L_0x02b6
            if (r11 == 0) goto L_0x02cd
            org.telegram.messenger.MessageObject r11 = r10.currentMessageObject
            if (r11 == 0) goto L_0x01f9
            int r11 = r10.currentAccount
            org.telegram.messenger.FileLoader r11 = org.telegram.messenger.FileLoader.getInstance(r11)
            java.lang.String[] r0 = r10.currentFileNames
            r0 = r0[r3]
            boolean r11 = r11.isLoadingFile(r0)
            if (r11 != 0) goto L_0x01e8
            int r11 = r10.currentAccount
            org.telegram.messenger.FileLoader r11 = org.telegram.messenger.FileLoader.getInstance(r11)
            org.telegram.messenger.MessageObject r0 = r10.currentMessageObject
            org.telegram.tgnet.TLRPC$Document r0 = r0.getDocument()
            org.telegram.messenger.MessageObject r1 = r10.currentMessageObject
            r11.loadFile(r0, r1, r4, r3)
            goto L_0x02a6
        L_0x01e8:
            int r11 = r10.currentAccount
            org.telegram.messenger.FileLoader r11 = org.telegram.messenger.FileLoader.getInstance(r11)
            org.telegram.messenger.MessageObject r0 = r10.currentMessageObject
            org.telegram.tgnet.TLRPC$Document r0 = r0.getDocument()
            r11.cancelLoadFile((org.telegram.tgnet.TLRPC$Document) r0)
            goto L_0x02a6
        L_0x01f9:
            org.telegram.tgnet.TLRPC$BotInlineResult r11 = r10.currentBotInlineResult
            if (r11 == 0) goto L_0x0265
            org.telegram.tgnet.TLRPC$Document r0 = r11.document
            if (r0 == 0) goto L_0x0231
            int r11 = r10.currentAccount
            org.telegram.messenger.FileLoader r11 = org.telegram.messenger.FileLoader.getInstance(r11)
            java.lang.String[] r0 = r10.currentFileNames
            r0 = r0[r3]
            boolean r11 = r11.isLoadingFile(r0)
            if (r11 != 0) goto L_0x0222
            int r11 = r10.currentAccount
            org.telegram.messenger.FileLoader r11 = org.telegram.messenger.FileLoader.getInstance(r11)
            org.telegram.tgnet.TLRPC$BotInlineResult r0 = r10.currentBotInlineResult
            org.telegram.tgnet.TLRPC$Document r0 = r0.document
            org.telegram.messenger.MessageObject r1 = r10.currentMessageObject
            r11.loadFile(r0, r1, r4, r3)
            goto L_0x02a6
        L_0x0222:
            int r11 = r10.currentAccount
            org.telegram.messenger.FileLoader r11 = org.telegram.messenger.FileLoader.getInstance(r11)
            org.telegram.tgnet.TLRPC$BotInlineResult r0 = r10.currentBotInlineResult
            org.telegram.tgnet.TLRPC$Document r0 = r0.document
            r11.cancelLoadFile((org.telegram.tgnet.TLRPC$Document) r0)
            goto L_0x02a6
        L_0x0231:
            org.telegram.tgnet.TLRPC$WebDocument r11 = r11.content
            boolean r11 = r11 instanceof org.telegram.tgnet.TLRPC$TL_webDocument
            if (r11 == 0) goto L_0x02a6
            org.telegram.messenger.ImageLoader r11 = org.telegram.messenger.ImageLoader.getInstance()
            org.telegram.tgnet.TLRPC$BotInlineResult r0 = r10.currentBotInlineResult
            org.telegram.tgnet.TLRPC$WebDocument r0 = r0.content
            java.lang.String r0 = r0.url
            boolean r11 = r11.isLoadingHttpFile(r0)
            if (r11 != 0) goto L_0x0257
            org.telegram.messenger.ImageLoader r11 = org.telegram.messenger.ImageLoader.getInstance()
            org.telegram.tgnet.TLRPC$BotInlineResult r0 = r10.currentBotInlineResult
            org.telegram.tgnet.TLRPC$WebDocument r0 = r0.content
            java.lang.String r0 = r0.url
            int r1 = r10.currentAccount
            r11.loadHttpFile(r0, r2, r1)
            goto L_0x02a6
        L_0x0257:
            org.telegram.messenger.ImageLoader r11 = org.telegram.messenger.ImageLoader.getInstance()
            org.telegram.tgnet.TLRPC$BotInlineResult r0 = r10.currentBotInlineResult
            org.telegram.tgnet.TLRPC$WebDocument r0 = r0.content
            java.lang.String r0 = r0.url
            r11.cancelLoadHttpFile(r0)
            goto L_0x02a6
        L_0x0265:
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r11 = r10.pageBlocksAdapter
            if (r11 == 0) goto L_0x02a6
            int r11 = r10.currentAccount
            org.telegram.messenger.FileLoader r11 = org.telegram.messenger.FileLoader.getInstance(r11)
            java.lang.String[] r0 = r10.currentFileNames
            r0 = r0[r3]
            boolean r11 = r11.isLoadingFile(r0)
            if (r11 != 0) goto L_0x0293
            int r11 = r10.currentAccount
            org.telegram.messenger.FileLoader r11 = org.telegram.messenger.FileLoader.getInstance(r11)
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r0 = r10.pageBlocksAdapter
            int r1 = r10.currentIndex
            org.telegram.tgnet.TLObject r0 = r0.getMedia(r1)
            org.telegram.tgnet.TLRPC$Document r0 = (org.telegram.tgnet.TLRPC$Document) r0
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r1 = r10.pageBlocksAdapter
            java.lang.Object r1 = r1.getParentObject()
            r11.loadFile(r0, r1, r4, r4)
            goto L_0x02a6
        L_0x0293:
            int r11 = r10.currentAccount
            org.telegram.messenger.FileLoader r11 = org.telegram.messenger.FileLoader.getInstance(r11)
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r0 = r10.pageBlocksAdapter
            int r1 = r10.currentIndex
            org.telegram.tgnet.TLObject r0 = r0.getMedia(r1)
            org.telegram.tgnet.TLRPC$Document r0 = (org.telegram.tgnet.TLRPC$Document) r0
            r11.cancelLoadFile((org.telegram.tgnet.TLRPC$Document) r0)
        L_0x02a6:
            org.telegram.messenger.ImageReceiver r11 = r10.centerImage
            android.graphics.drawable.Drawable r11 = r11.getStaticThumb()
            boolean r0 = r11 instanceof org.telegram.ui.Components.OtherDocumentPlaceholderDrawable
            if (r0 == 0) goto L_0x02cd
            org.telegram.ui.Components.OtherDocumentPlaceholderDrawable r11 = (org.telegram.ui.Components.OtherDocumentPlaceholderDrawable) r11
            r11.checkFileExist()
            goto L_0x02cd
        L_0x02b6:
            int r11 = r10.sharedMediaType
            if (r11 != r4) goto L_0x02ca
            org.telegram.messenger.MessageObject r11 = r10.currentMessageObject
            boolean r11 = r11.canPreviewDocument()
            if (r11 != 0) goto L_0x02ca
            org.telegram.messenger.MessageObject r11 = r10.currentMessageObject
            android.app.Activity r0 = r10.parentActivity
            org.telegram.messenger.AndroidUtilities.openDocument(r11, r0, r5)
            return
        L_0x02ca:
            r10.preparePlayer(r0, r4, r3)
        L_0x02cd:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.onActionClick(boolean):void");
    }

    public boolean onDown(MotionEvent motionEvent) {
        if (!this.doubleTap && this.checkImageView.getVisibility() != 0) {
            boolean[] zArr = this.drawPressedDrawable;
            if (!zArr[0] && !zArr[1]) {
                float x = motionEvent.getX();
                int min = Math.min(135, this.containerView.getMeasuredWidth() / 8);
                if (x < ((float) min)) {
                    if (this.leftImage.hasImageSet()) {
                        this.drawPressedDrawable[0] = true;
                        this.containerView.invalidate();
                    }
                } else if (x > ((float) (this.containerView.getMeasuredWidth() - min)) && this.rightImage.hasImageSet()) {
                    this.drawPressedDrawable[1] = true;
                    this.containerView.invalidate();
                }
            }
        }
        return false;
    }

    public boolean canDoubleTap(MotionEvent motionEvent) {
        MessageObject messageObject;
        if (this.checkImageView.getVisibility() == 0) {
            return true;
        }
        boolean[] zArr = this.drawPressedDrawable;
        if (zArr[0] || zArr[1]) {
            return true;
        }
        float x = motionEvent.getX();
        int min = Math.min(135, this.containerView.getMeasuredWidth() / 8);
        if ((x >= ((float) min) && x <= ((float) (this.containerView.getMeasuredWidth() - min))) || (messageObject = this.currentMessageObject) == null) {
            return true;
        }
        if (!messageObject.isVideo() || SystemClock.elapsedRealtime() - this.lastPhotoSetTime < 500 || !canDoubleTapSeekVideo(motionEvent)) {
            return false;
        }
        return true;
    }

    private void hidePressedDrawables() {
        boolean[] zArr = this.drawPressedDrawable;
        zArr[1] = false;
        zArr[0] = false;
        this.containerView.invalidate();
    }

    public void onUp(MotionEvent motionEvent) {
        hidePressedDrawables();
    }

    public boolean onSingleTapUp(MotionEvent motionEvent) {
        if (!this.canZoom && !this.doubleTapEnabled) {
            return onSingleTapConfirmed(motionEvent);
        }
        if (!(this.containerView.getTag() == null || this.photoProgressViews[0] == null || this.containerView == null)) {
            float x = motionEvent.getX();
            float y = motionEvent.getY();
            if ((x < ((float) (getContainerViewWidth() - AndroidUtilities.dp(100.0f))) / 2.0f || x > ((float) (getContainerViewWidth() + AndroidUtilities.dp(100.0f))) / 2.0f || y < ((float) (getContainerViewHeight() - AndroidUtilities.dp(100.0f))) / 2.0f || y > ((float) (getContainerViewHeight() + AndroidUtilities.dp(100.0f))) / 2.0f) ? false : onSingleTapConfirmed(motionEvent)) {
                this.discardTap = true;
                return true;
            }
        }
        return false;
    }

    public void onLongPress() {
        boolean z;
        VideoPlayer videoPlayer2 = this.videoPlayer;
        if (videoPlayer2 != null && this.videoPlayerControlVisible && this.scale <= 1.1f) {
            long currentPosition = videoPlayer2.getCurrentPosition();
            long duration = this.videoPlayer.getDuration();
            if (currentPosition != -9223372036854775807L && duration >= 15000) {
                float f = this.longPressX;
                int containerViewWidth = getContainerViewWidth() / 3;
                if (f >= ((float) (containerViewWidth * 2))) {
                    z = true;
                } else if (f < ((float) containerViewWidth)) {
                    z = false;
                } else {
                    return;
                }
                this.videoPlayerRewinder.startRewind(this.videoPlayer, z, this.currentVideoSpeed);
            }
        }
    }

    public VideoPlayerRewinder getVideoPlayerRewinder() {
        return this.videoPlayerRewinder;
    }

    public boolean onFling(MotionEvent motionEvent, MotionEvent motionEvent2, float f, float f2) {
        if (this.scale == 1.0f) {
            return false;
        }
        this.scroller.abortAnimation();
        this.scroller.fling(Math.round(this.translationX), Math.round(this.translationY), Math.round(f), Math.round(f2), (int) this.minX, (int) this.maxX, (int) this.minY, (int) this.maxY);
        this.containerView.postInvalidate();
        return false;
    }

    public boolean onSingleTapConfirmed(MotionEvent motionEvent) {
        MessageObject messageObject;
        if (this.discardTap) {
            return false;
        }
        float x = motionEvent.getX();
        float y = motionEvent.getY();
        if (this.checkImageView.getVisibility() != 0 && y > ((float) (ActionBar.getCurrentActionBarHeight() + AndroidUtilities.statusBarHeight + AndroidUtilities.dp(40.0f)))) {
            int min = Math.min(135, this.containerView.getMeasuredWidth() / 8);
            if (x < ((float) min)) {
                if (this.leftImage.hasImageSet()) {
                    switchToNextIndex(-1, true);
                    return true;
                }
            } else if (x > ((float) (this.containerView.getMeasuredWidth() - min)) && this.rightImage.hasImageSet()) {
                switchToNextIndex(1, true);
                return true;
            }
        }
        if (this.containerView.getTag() != null) {
            AspectRatioFrameLayout aspectRatioFrameLayout2 = this.aspectRatioFrameLayout;
            boolean z = aspectRatioFrameLayout2 != null && aspectRatioFrameLayout2.getVisibility() == 0;
            if (this.sharedMediaType != 1 || (messageObject = this.currentMessageObject) == null) {
                PhotoProgressView[] photoProgressViewArr = this.photoProgressViews;
                if (!(photoProgressViewArr[0] == null || this.containerView == null)) {
                    int access$23700 = photoProgressViewArr[0].backgroundState;
                    if (x >= ((float) (getContainerViewWidth() - AndroidUtilities.dp(100.0f))) / 2.0f && x <= ((float) (getContainerViewWidth() + AndroidUtilities.dp(100.0f))) / 2.0f && y >= ((float) (getContainerViewHeight() - AndroidUtilities.dp(100.0f))) / 2.0f && y <= ((float) (getContainerViewHeight() + AndroidUtilities.dp(100.0f))) / 2.0f) {
                        if (!z) {
                            if (access$23700 > 0 && access$23700 <= 3) {
                                onActionClick(true);
                                checkProgress(0, false, true);
                                return true;
                            }
                        } else if ((access$23700 == 3 || access$23700 == 4) && this.photoProgressViews[0].isVisible()) {
                            this.manuallyPaused = true;
                            toggleVideoPlayer();
                            return true;
                        }
                    }
                }
            } else if (!messageObject.canPreviewDocument()) {
                float containerViewHeight = ((float) (getContainerViewHeight() - AndroidUtilities.dp(360.0f))) / 2.0f;
                if (y >= containerViewHeight && y <= containerViewHeight + ((float) AndroidUtilities.dp(360.0f))) {
                    onActionClick(true);
                    return true;
                }
            }
            toggleActionBar(!this.isActionBarVisible, true);
        } else {
            int i = this.sendPhotoType;
            if (i != 0 && i != 4) {
                TLRPC$BotInlineResult tLRPC$BotInlineResult = this.currentBotInlineResult;
                if (tLRPC$BotInlineResult != null && (tLRPC$BotInlineResult.type.equals("video") || MessageObject.isVideoDocument(this.currentBotInlineResult.document))) {
                    int access$237002 = this.photoProgressViews[0].backgroundState;
                    if (access$237002 > 0 && access$237002 <= 3 && x >= ((float) (getContainerViewWidth() - AndroidUtilities.dp(100.0f))) / 2.0f && x <= ((float) (getContainerViewWidth() + AndroidUtilities.dp(100.0f))) / 2.0f && y >= ((float) (getContainerViewHeight() - AndroidUtilities.dp(100.0f))) / 2.0f && y <= ((float) (getContainerViewHeight() + AndroidUtilities.dp(100.0f))) / 2.0f) {
                        onActionClick(true);
                        checkProgress(0, false, true);
                        return true;
                    }
                } else if (this.sendPhotoType == 2 && this.isCurrentVideo) {
                    this.manuallyPaused = true;
                    toggleVideoPlayer();
                }
            } else if (this.isCurrentVideo) {
                VideoPlayer videoPlayer2 = this.videoPlayer;
                if (!(videoPlayer2 == null || this.muteVideo || i == 1)) {
                    videoPlayer2.setVolume(1.0f);
                }
                this.manuallyPaused = true;
                toggleVideoPlayer();
            } else {
                this.checkImageView.performClick();
            }
        }
        return true;
    }

    private boolean canDoubleTapSeekVideo(MotionEvent motionEvent) {
        if (this.videoPlayer == null) {
            return false;
        }
        boolean z = motionEvent.getX() >= ((float) ((getContainerViewWidth() / 3) * 2));
        long currentPosition = this.videoPlayer.getCurrentPosition();
        long duration = this.videoPlayer.getDuration();
        if (currentPosition == -9223372036854775807L || duration <= 15000) {
            return false;
        }
        if (!z || duration - currentPosition > 10000) {
            return true;
        }
        return false;
    }

    /* JADX WARNING: Code restructure failed: missing block: B:49:0x0104, code lost:
        if (r1 > r3) goto L_0x00fe;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:54:0x0113, code lost:
        if (r2 > r3) goto L_0x010d;
     */
    /* JADX WARNING: Removed duplicated region for block: B:26:0x0057  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public boolean onDoubleTap(android.view.MotionEvent r17) {
        /*
            r16 = this;
            r0 = r16
            org.telegram.ui.Components.VideoPlayer r1 = r0.videoPlayer
            r2 = 0
            r4 = 0
            r5 = 1
            if (r1 == 0) goto L_0x0084
            boolean r6 = r0.videoPlayerControlVisible
            if (r6 == 0) goto L_0x0084
            long r6 = r1.getCurrentPosition()
            org.telegram.ui.Components.VideoPlayer r1 = r0.videoPlayer
            long r8 = r1.getDuration()
            float r1 = r17.getX()
            int r10 = r16.getContainerViewWidth()
            int r10 = r10 / 3
            int r11 = r10 * 2
            float r11 = (float) r11
            boolean r12 = r16.canDoubleTapSeekVideo(r17)
            if (r12 == 0) goto L_0x0084
            r12 = 10000(0x2710, double:4.9407E-320)
            int r11 = (r1 > r11 ? 1 : (r1 == r11 ? 0 : -1))
            if (r11 < 0) goto L_0x0034
            long r14 = r6 + r12
            goto L_0x003d
        L_0x0034:
            float r11 = (float) r10
            int r11 = (r1 > r11 ? 1 : (r1 == r11 ? 0 : -1))
            if (r11 >= 0) goto L_0x003c
            long r14 = r6 - r12
            goto L_0x003d
        L_0x003c:
            r14 = r6
        L_0x003d:
            int r11 = (r6 > r14 ? 1 : (r6 == r14 ? 0 : -1))
            if (r11 == 0) goto L_0x0084
            int r6 = (r14 > r8 ? 1 : (r14 == r8 ? 0 : -1))
            if (r6 <= 0) goto L_0x0047
            r2 = r8
            goto L_0x0054
        L_0x0047:
            int r6 = (r14 > r2 ? 1 : (r14 == r2 ? 0 : -1))
            if (r6 >= 0) goto L_0x0053
            r6 = -9000(0xffffffffffffdcd8, double:NaN)
            int r11 = (r14 > r6 ? 1 : (r14 == r6 ? 0 : -1))
            if (r11 >= 0) goto L_0x0054
            r6 = 0
            goto L_0x0055
        L_0x0053:
            r2 = r14
        L_0x0054:
            r6 = 1
        L_0x0055:
            if (r6 == 0) goto L_0x0083
            org.telegram.ui.Components.VideoForwardDrawable r6 = r0.videoForwardDrawable
            r6.setOneShootAnimation(r5)
            org.telegram.ui.Components.VideoForwardDrawable r6 = r0.videoForwardDrawable
            float r7 = (float) r10
            int r1 = (r1 > r7 ? 1 : (r1 == r7 ? 0 : -1))
            if (r1 >= 0) goto L_0x0064
            r4 = 1
        L_0x0064:
            r6.setLeftSide(r4)
            org.telegram.ui.Components.VideoForwardDrawable r1 = r0.videoForwardDrawable
            r1.addTime(r12)
            org.telegram.ui.Components.VideoPlayer r1 = r0.videoPlayer
            r1.seekTo(r2)
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r1 = r0.containerView
            r1.invalidate()
            org.telegram.ui.Components.VideoPlayerSeekBar r1 = r0.videoPlayerSeekbar
            float r2 = (float) r2
            float r3 = (float) r8
            float r2 = r2 / r3
            r1.setProgress(r2, r5)
            android.view.View r1 = r0.videoPlayerSeekbarView
            r1.invalidate()
        L_0x0083:
            return r5
        L_0x0084:
            boolean r1 = r0.canZoom
            if (r1 == 0) goto L_0x0123
            float r1 = r0.scale
            r6 = 1065353216(0x3var_, float:1.0)
            r7 = 0
            int r8 = (r1 > r6 ? 1 : (r1 == r6 ? 0 : -1))
            if (r8 != 0) goto L_0x009f
            float r8 = r0.translationY
            int r8 = (r8 > r7 ? 1 : (r8 == r7 ? 0 : -1))
            if (r8 != 0) goto L_0x0123
            float r8 = r0.translationX
            int r8 = (r8 > r7 ? 1 : (r8 == r7 ? 0 : -1))
            if (r8 == 0) goto L_0x009f
            goto L_0x0123
        L_0x009f:
            long r8 = r0.animationStartTime
            int r10 = (r8 > r2 ? 1 : (r8 == r2 ? 0 : -1))
            if (r10 != 0) goto L_0x0123
            int r2 = r0.animationInProgress
            if (r2 == 0) goto L_0x00ab
            goto L_0x0123
        L_0x00ab:
            int r1 = (r1 > r6 ? 1 : (r1 == r6 ? 0 : -1))
            if (r1 != 0) goto L_0x011a
            float r1 = r17.getX()
            int r2 = r16.getContainerViewWidth()
            int r2 = r2 / 2
            float r2 = (float) r2
            float r1 = r1 - r2
            float r2 = r17.getX()
            int r3 = r16.getContainerViewWidth()
            int r3 = r3 / 2
            float r3 = (float) r3
            float r2 = r2 - r3
            float r3 = r0.translationX
            float r2 = r2 - r3
            float r3 = r0.scale
            r4 = 1077936128(0x40400000, float:3.0)
            float r3 = r4 / r3
            float r2 = r2 * r3
            float r1 = r1 - r2
            float r2 = r17.getY()
            int r3 = r16.getContainerViewHeight()
            int r3 = r3 / 2
            float r3 = (float) r3
            float r2 = r2 - r3
            float r3 = r17.getY()
            int r6 = r16.getContainerViewHeight()
            int r6 = r6 / 2
            float r6 = (float) r6
            float r3 = r3 - r6
            float r6 = r0.translationY
            float r3 = r3 - r6
            float r6 = r0.scale
            float r6 = r4 / r6
            float r3 = r3 * r6
            float r2 = r2 - r3
            r0.updateMinMax(r4)
            float r3 = r0.minX
            int r6 = (r1 > r3 ? 1 : (r1 == r3 ? 0 : -1))
            if (r6 >= 0) goto L_0x0100
        L_0x00fe:
            r1 = r3
            goto L_0x0107
        L_0x0100:
            float r3 = r0.maxX
            int r6 = (r1 > r3 ? 1 : (r1 == r3 ? 0 : -1))
            if (r6 <= 0) goto L_0x0107
            goto L_0x00fe
        L_0x0107:
            float r3 = r0.minY
            int r6 = (r2 > r3 ? 1 : (r2 == r3 ? 0 : -1))
            if (r6 >= 0) goto L_0x010f
        L_0x010d:
            r2 = r3
            goto L_0x0116
        L_0x010f:
            float r3 = r0.maxY
            int r6 = (r2 > r3 ? 1 : (r2 == r3 ? 0 : -1))
            if (r6 <= 0) goto L_0x0116
            goto L_0x010d
        L_0x0116:
            r0.animateTo(r4, r1, r2, r5)
            goto L_0x011d
        L_0x011a:
            r0.animateTo(r6, r7, r7, r5)
        L_0x011d:
            r0.doubleTap = r5
            r16.hidePressedDrawables()
            return r5
        L_0x0123:
            return r4
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.onDoubleTap(android.view.MotionEvent):boolean");
    }

    private class QualityChooseView extends View {
        private int circleSize;
        private int gapSize;
        private String hightQualityDescription;
        private int lineSize;
        private String lowQualityDescription;
        private Paint paint = new Paint(1);
        private int sideSide;
        private int startMovingQuality;
        private TextPaint textPaint;

        public QualityChooseView(Context context) {
            super(context);
            TextPaint textPaint2 = new TextPaint(1);
            this.textPaint = textPaint2;
            textPaint2.setTextSize((float) AndroidUtilities.dp(14.0f));
            this.textPaint.setColor(-3289651);
            this.lowQualityDescription = LocaleController.getString("AccDescrVideoCompressLow", NUM);
            this.hightQualityDescription = LocaleController.getString("AccDescrVideoCompressHigh", NUM);
        }

        public boolean onTouchEvent(MotionEvent motionEvent) {
            float x = motionEvent.getX();
            if (motionEvent.getAction() == 0) {
                this.startMovingQuality = PhotoViewer.this.selectedCompression;
                getParent().requestDisallowInterceptTouchEvent(true);
            }
            if (motionEvent.getAction() == 0 || motionEvent.getAction() == 2) {
                int i = 0;
                while (true) {
                    if (i >= PhotoViewer.this.compressionsCount) {
                        break;
                    }
                    int i2 = this.sideSide;
                    int i3 = this.lineSize;
                    int i4 = this.gapSize;
                    int i5 = this.circleSize;
                    int i6 = i2 + (((i4 * 2) + i3 + i5) * i) + (i5 / 2);
                    int i7 = (i3 / 2) + (i5 / 2) + i4;
                    if (x <= ((float) (i6 - i7)) || x >= ((float) (i6 + i7))) {
                        i++;
                    } else if (PhotoViewer.this.selectedCompression != i) {
                        int unused = PhotoViewer.this.selectedCompression = i;
                        PhotoViewer.this.didChangedCompressionLevel(false);
                        invalidate();
                    }
                }
            } else if (motionEvent.getAction() == 1 || motionEvent.getAction() == 3) {
                if (PhotoViewer.this.selectedCompression != this.startMovingQuality) {
                    PhotoViewer.this.requestVideoPreview(1);
                }
                boolean unused2 = PhotoViewer.this.moving = false;
            }
            return true;
        }

        /* access modifiers changed from: protected */
        public void onMeasure(int i, int i2) {
            super.onMeasure(i, i2);
            this.circleSize = AndroidUtilities.dp(8.0f);
            this.gapSize = AndroidUtilities.dp(2.0f);
            this.sideSide = AndroidUtilities.dp(18.0f);
        }

        /* access modifiers changed from: protected */
        public void onDraw(Canvas canvas) {
            if (PhotoViewer.this.compressionsCount != 1) {
                this.lineSize = (((getMeasuredWidth() - (this.circleSize * PhotoViewer.this.compressionsCount)) - (this.gapSize * ((PhotoViewer.this.compressionsCount * 2) - 2))) - (this.sideSide * 2)) / (PhotoViewer.this.compressionsCount - 1);
            } else {
                this.lineSize = ((getMeasuredWidth() - (this.circleSize * PhotoViewer.this.compressionsCount)) - (this.gapSize * 2)) - (this.sideSide * 2);
            }
            int measuredHeight = (getMeasuredHeight() / 2) + AndroidUtilities.dp(6.0f);
            int i = 0;
            while (i < PhotoViewer.this.compressionsCount) {
                int i2 = this.sideSide;
                int i3 = this.lineSize + (this.gapSize * 2);
                int i4 = this.circleSize;
                int i5 = i2 + ((i3 + i4) * i) + (i4 / 2);
                if (i <= PhotoViewer.this.selectedCompression) {
                    this.paint.setColor(-11292945);
                } else {
                    this.paint.setColor(NUM);
                }
                canvas.drawCircle((float) i5, (float) measuredHeight, (float) (i == PhotoViewer.this.selectedCompression ? AndroidUtilities.dp(6.0f) : this.circleSize / 2), this.paint);
                if (i != 0) {
                    int i6 = ((i5 - (this.circleSize / 2)) - this.gapSize) - this.lineSize;
                    float f = 0.0f;
                    float dpf2 = i == PhotoViewer.this.selectedCompression + 1 ? AndroidUtilities.dpf2(2.0f) : 0.0f;
                    if (i == PhotoViewer.this.selectedCompression) {
                        f = AndroidUtilities.dpf2(2.0f);
                    }
                    canvas.drawRect(dpf2 + ((float) i6), (float) (measuredHeight - AndroidUtilities.dp(1.0f)), ((float) (i6 + this.lineSize)) - f, (float) (AndroidUtilities.dp(2.0f) + measuredHeight), this.paint);
                }
                i++;
            }
            canvas.drawText(this.lowQualityDescription, (float) this.sideSide, (float) (measuredHeight - AndroidUtilities.dp(16.0f)), this.textPaint);
            canvas.drawText(this.hightQualityDescription, ((float) (getMeasuredWidth() - this.sideSide)) - this.textPaint.measureText(this.hightQualityDescription), (float) (measuredHeight - AndroidUtilities.dp(16.0f)), this.textPaint);
        }
    }

    public void updateMuteButton() {
        VideoPlayer videoPlayer2 = this.videoPlayer;
        if (videoPlayer2 != null) {
            videoPlayer2.setMute(this.muteVideo);
        }
        if (!this.videoConvertSupported) {
            this.muteItem.setEnabled(false);
            this.muteItem.setClickable(false);
            this.muteItem.animate().alpha(0.5f).setDuration(180).start();
            this.videoTimelineView.setMode(0);
            return;
        }
        this.muteItem.setEnabled(true);
        this.muteItem.setClickable(true);
        this.muteItem.animate().alpha(1.0f).setDuration(180).start();
        if (this.muteVideo) {
            this.actionBar.setSubtitle(LocaleController.getString("SoundMuted", NUM));
            this.muteItem.setImageResource(NUM);
            if (this.compressItem.getTag() != null) {
                this.compressItem.setAlpha(0.5f);
                this.compressItem.setEnabled(false);
            }
            if (this.sendPhotoType == 1) {
                this.videoTimelineView.setMaxProgressDiff(9600.0f / this.videoDuration);
                this.videoTimelineView.setMode(1);
                updateVideoInfo();
            } else {
                this.videoTimelineView.setMaxProgressDiff(1.0f);
                this.videoTimelineView.setMode(0);
            }
            this.muteItem.setContentDescription(LocaleController.getString("NoSound", NUM));
            return;
        }
        this.actionBar.setSubtitle(this.currentSubtitle);
        this.muteItem.setImageResource(NUM);
        this.muteItem.setContentDescription(LocaleController.getString("Sound", NUM));
        if (this.compressItem.getTag() != null) {
            this.compressItem.setAlpha(1.0f);
            this.compressItem.setEnabled(true);
        }
        this.videoTimelineView.setMaxProgressDiff(1.0f);
        this.videoTimelineView.setMode(0);
    }

    /* access modifiers changed from: private */
    public void didChangedCompressionLevel(boolean z) {
        SharedPreferences.Editor edit = MessagesController.getGlobalMainSettings().edit();
        edit.putInt(String.format("compress_video_%d", new Object[]{Integer.valueOf(this.compressionsCount)}), this.selectedCompression);
        edit.commit();
        updateWidthHeightBitrateForCompression();
        updateVideoInfo();
        if (z) {
            requestVideoPreview(1);
        }
    }

    /* access modifiers changed from: private */
    public void updateVideoInfo() {
        int i;
        int i2;
        ActionBar actionBar2 = this.actionBar;
        if (actionBar2 != null) {
            if (this.compressionsCount == 0) {
                actionBar2.setSubtitle((CharSequence) null);
                return;
            }
            int i3 = this.selectedCompression;
            if (i3 < 2) {
                this.compressItem.setImageResource(NUM);
            } else if (i3 == 2) {
                this.compressItem.setImageResource(NUM);
            } else if (i3 == 3) {
                this.compressItem.setImageResource(NUM);
            }
            this.itemsLayout.requestLayout();
            long ceil = (long) Math.ceil((double) ((this.videoTimelineView.getRightProgress() - this.videoTimelineView.getLeftProgress()) * this.videoDuration));
            this.estimatedDuration = ceil;
            if (this.muteVideo) {
                int i4 = this.rotationValue;
                i = (i4 == 90 || i4 == 270) ? this.resultHeight : this.resultWidth;
                i2 = (i4 == 90 || i4 == 270) ? this.resultWidth : this.resultHeight;
                long j = (long) (((float) ((this.sendPhotoType == 1 ? ceil <= 2000 ? 2600000 : ceil <= 5000 ? 2200000 : 1560000 : 921600) / 8)) * (((float) ceil) / 1000.0f));
                this.estimatedSize = j;
                this.estimatedSize = j + ((j / 32768) * 16);
            } else if (this.compressItem.getTag() == null) {
                int i5 = this.rotationValue;
                i = (i5 == 90 || i5 == 270) ? this.originalHeight : this.originalWidth;
                i2 = (i5 == 90 || i5 == 270) ? this.originalWidth : this.originalHeight;
                this.estimatedSize = (long) (((float) this.originalSize) * (((float) this.estimatedDuration) / this.videoDuration));
            } else {
                int i6 = this.rotationValue;
                i = (i6 == 90 || i6 == 270) ? this.resultHeight : this.resultWidth;
                i2 = (i6 == 90 || i6 == 270) ? this.resultWidth : this.resultHeight;
                long j2 = (long) (((float) ((this.sendPhotoType == 1 ? 0 : this.audioFramesSize) + this.videoFramesSize)) * (((float) this.estimatedDuration) / this.videoDuration));
                this.estimatedSize = j2;
                this.estimatedSize = j2 + ((j2 / 32768) * 16);
            }
            this.videoCutStart = this.videoTimelineView.getLeftProgress();
            float rightProgress = this.videoTimelineView.getRightProgress();
            this.videoCutEnd = rightProgress;
            float f = this.videoCutStart;
            if (f == 0.0f) {
                this.startTime = -1;
            } else {
                this.startTime = ((long) (f * this.videoDuration)) * 1000;
            }
            if (rightProgress == 1.0f) {
                this.endTime = -1;
            } else {
                this.endTime = ((long) (rightProgress * this.videoDuration)) * 1000;
            }
            this.currentSubtitle = String.format("%s, %s", new Object[]{String.format("%dx%d", new Object[]{Integer.valueOf(i), Integer.valueOf(i2)}), String.format("%s, ~%s", new Object[]{AndroidUtilities.formatShortDuration((int) (this.estimatedDuration / 1000)), AndroidUtilities.formatFileSize(this.estimatedSize)})});
            this.actionBar.beginDelayedTransition();
            this.actionBar.setSubtitle(this.muteVideo ? LocaleController.getString("SoundMuted", NUM) : this.currentSubtitle);
        }
    }

    /* access modifiers changed from: private */
    public void requestVideoPreview(int i) {
        if (this.videoPreviewMessageObject != null) {
            MediaController.getInstance().cancelVideoConvert(this.videoPreviewMessageObject);
        }
        boolean z = this.requestingPreview && !this.tryStartRequestPreviewOnFinish;
        this.requestingPreview = false;
        this.loadInitialVideo = false;
        this.progressView.setVisibility(4);
        if (i != 1) {
            this.tryStartRequestPreviewOnFinish = false;
            this.photoProgressViews[0].setBackgroundState(3, false, true);
            if (i == 2) {
                preparePlayer(this.currentPlayingVideoFile, false, false, this.editState.savedFilterState);
                this.videoPlayer.seekTo((long) (this.videoTimelineView.getLeftProgress() * this.videoDuration));
            }
        } else if (this.resultHeight == this.originalHeight && this.resultWidth == this.originalWidth) {
            this.tryStartRequestPreviewOnFinish = false;
            PhotoProgressView[] photoProgressViewArr = this.photoProgressViews;
            photoProgressViewArr[0].setProgress(0.0f, photoProgressViewArr[0].backgroundState == 0 || this.photoProgressViews[0].previousBackgroundState == 0);
            this.photoProgressViews[0].setBackgroundState(3, false, true);
            if (!z) {
                preparePlayer(this.currentPlayingVideoFile, false, false, this.editState.savedFilterState);
                this.videoPlayer.seekTo((long) (this.videoTimelineView.getLeftProgress() * this.videoDuration));
            } else {
                this.loadInitialVideo = true;
            }
        } else {
            releasePlayer(false);
            if (this.videoPreviewMessageObject == null) {
                TLRPC$TL_message tLRPC$TL_message = new TLRPC$TL_message();
                tLRPC$TL_message.id = 0;
                tLRPC$TL_message.message = "";
                tLRPC$TL_message.media = new TLRPC$TL_messageMediaEmpty();
                tLRPC$TL_message.action = new TLRPC$TL_messageActionEmpty();
                tLRPC$TL_message.dialog_id = this.currentDialogId;
                MessageObject messageObject = new MessageObject(UserConfig.selectedAccount, tLRPC$TL_message, false, false);
                this.videoPreviewMessageObject = messageObject;
                messageObject.messageOwner.attachPath = new File(FileLoader.getDirectory(4), "video_preview.mp4").getAbsolutePath();
                this.videoPreviewMessageObject.videoEditedInfo = new VideoEditedInfo();
                VideoEditedInfo videoEditedInfo = this.videoPreviewMessageObject.videoEditedInfo;
                videoEditedInfo.rotationValue = this.rotationValue;
                videoEditedInfo.originalWidth = this.originalWidth;
                videoEditedInfo.originalHeight = this.originalHeight;
                videoEditedInfo.framerate = this.videoFramerate;
                videoEditedInfo.originalPath = this.currentPlayingVideoFile.getPath();
            }
            VideoEditedInfo videoEditedInfo2 = this.videoPreviewMessageObject.videoEditedInfo;
            long j = this.startTime;
            videoEditedInfo2.startTime = j;
            long j2 = this.endTime;
            videoEditedInfo2.endTime = j2;
            if (j == -1) {
                j = 0;
            }
            if (j2 == -1) {
                j2 = (long) (this.videoDuration * 1000.0f);
            }
            if (j2 - j > 5000000) {
                videoEditedInfo2.endTime = j + 5000000;
            }
            videoEditedInfo2.bitrate = this.bitrate;
            videoEditedInfo2.resultWidth = this.resultWidth;
            videoEditedInfo2.resultHeight = this.resultHeight;
            videoEditedInfo2.needUpdateProgress = true;
            videoEditedInfo2.originalDuration = (long) (this.videoDuration * 1000.0f);
            if (!MediaController.getInstance().scheduleVideoConvert(this.videoPreviewMessageObject, true)) {
                this.tryStartRequestPreviewOnFinish = true;
            }
            this.requestingPreview = true;
            PhotoProgressView[] photoProgressViewArr2 = this.photoProgressViews;
            photoProgressViewArr2[0].setProgress(0.0f, photoProgressViewArr2[0].backgroundState == 0 || this.photoProgressViews[0].previousBackgroundState == 0);
            this.photoProgressViews[0].setBackgroundState(0, false, true);
        }
        this.containerView.invalidate();
    }

    /* access modifiers changed from: private */
    public void updateWidthHeightBitrateForCompression() {
        int i = this.compressionsCount;
        if (i > 0) {
            if (this.selectedCompression >= i) {
                this.selectedCompression = i - 1;
            }
            if (this.sendPhotoType == 1) {
                float max = Math.max(800.0f / ((float) this.originalWidth), 800.0f / ((float) this.originalHeight));
                this.resultWidth = Math.round((((float) this.originalWidth) * max) / 2.0f) * 2;
                this.resultHeight = Math.round((((float) this.originalHeight) * max) / 2.0f) * 2;
            } else {
                int i2 = this.selectedCompression;
                float f = i2 != 0 ? i2 != 1 ? i2 != 2 ? 1920.0f : 1280.0f : 854.0f : 480.0f;
                int i3 = this.originalWidth;
                int i4 = this.originalHeight;
                float f2 = f / (i3 > i4 ? (float) i3 : (float) i4);
                if (i2 != i - 1 || f2 < 1.0f) {
                    this.resultWidth = Math.round((((float) i3) * f2) / 2.0f) * 2;
                    this.resultHeight = Math.round((((float) this.originalHeight) * f2) / 2.0f) * 2;
                } else {
                    this.resultWidth = i3;
                    this.resultHeight = i4;
                }
            }
            if (this.bitrate != 0) {
                if (this.sendPhotoType == 1) {
                    this.bitrate = 1560000;
                } else {
                    int i5 = this.resultWidth;
                    int i6 = this.originalWidth;
                    if (i5 == i6 && this.resultHeight == this.originalHeight) {
                        this.bitrate = this.originalBitrate;
                    } else {
                        this.bitrate = MediaController.makeVideoBitrate(this.originalHeight, i6, this.originalBitrate, this.resultHeight, i5);
                    }
                }
                this.videoFramesSize = (long) ((((float) (this.bitrate / 8)) * this.videoDuration) / 1000.0f);
            }
        }
    }

    private void showQualityView(final boolean z) {
        TextureView textureView;
        if (z && this.textureUploaded && this.videoSizeSet && !this.changingTextureView && (textureView = this.videoTextureView) != null) {
            this.videoFrameBitmap = textureView.getBitmap();
        }
        if (z) {
            this.previousCompression = this.selectedCompression;
        }
        AnimatorSet animatorSet = this.qualityChooseViewAnimation;
        if (animatorSet != null) {
            animatorSet.cancel();
        }
        this.qualityChooseViewAnimation = new AnimatorSet();
        float f = 0.0f;
        if (z) {
            this.qualityChooseView.setTag(1);
            this.qualityChooseViewAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.pickerView, View.TRANSLATION_Y, new float[]{0.0f, (float) AndroidUtilities.dp(152.0f)}), ObjectAnimator.ofFloat(this.pickerViewSendButton, View.TRANSLATION_Y, new float[]{0.0f, (float) AndroidUtilities.dp(152.0f)}), ObjectAnimator.ofFloat(this.bottomLayout, View.TRANSLATION_Y, new float[]{(float) (-AndroidUtilities.dp(48.0f)), (float) AndroidUtilities.dp(104.0f)})});
        } else {
            this.qualityChooseView.setTag((Object) null);
            this.qualityChooseViewAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.qualityChooseView, View.TRANSLATION_Y, new float[]{0.0f, (float) AndroidUtilities.dp(166.0f)}), ObjectAnimator.ofFloat(this.qualityPicker, View.TRANSLATION_Y, new float[]{0.0f, (float) AndroidUtilities.dp(166.0f)}), ObjectAnimator.ofFloat(this.bottomLayout, View.TRANSLATION_Y, new float[]{(float) (-AndroidUtilities.dp(48.0f)), (float) AndroidUtilities.dp(118.0f)})});
        }
        this.qualityChooseViewAnimation.addListener(new AnimatorListenerAdapter() {
            public void onAnimationEnd(Animator animator) {
                if (animator.equals(PhotoViewer.this.qualityChooseViewAnimation)) {
                    AnimatorSet unused = PhotoViewer.this.qualityChooseViewAnimation = new AnimatorSet();
                    if (z) {
                        PhotoViewer.this.qualityChooseView.setVisibility(0);
                        PhotoViewer.this.qualityPicker.setVisibility(0);
                        PhotoViewer.this.qualityChooseViewAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(PhotoViewer.this.qualityChooseView, View.TRANSLATION_Y, new float[]{0.0f}), ObjectAnimator.ofFloat(PhotoViewer.this.qualityPicker, View.TRANSLATION_Y, new float[]{0.0f}), ObjectAnimator.ofFloat(PhotoViewer.this.bottomLayout, View.TRANSLATION_Y, new float[]{(float) (-AndroidUtilities.dp(48.0f))})});
                    } else {
                        PhotoViewer.this.qualityChooseView.setVisibility(4);
                        PhotoViewer.this.qualityPicker.setVisibility(4);
                        PhotoViewer.this.qualityChooseViewAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(PhotoViewer.this.pickerView, View.TRANSLATION_Y, new float[]{0.0f}), ObjectAnimator.ofFloat(PhotoViewer.this.pickerViewSendButton, View.TRANSLATION_Y, new float[]{0.0f}), ObjectAnimator.ofFloat(PhotoViewer.this.bottomLayout, View.TRANSLATION_Y, new float[]{(float) (-AndroidUtilities.dp(48.0f))})});
                    }
                    PhotoViewer.this.qualityChooseViewAnimation.addListener(new AnimatorListenerAdapter() {
                        public void onAnimationEnd(Animator animator) {
                            if (animator.equals(PhotoViewer.this.qualityChooseViewAnimation)) {
                                AnimatorSet unused = PhotoViewer.this.qualityChooseViewAnimation = null;
                            }
                        }
                    });
                    PhotoViewer.this.qualityChooseViewAnimation.setDuration(200);
                    PhotoViewer.this.qualityChooseViewAnimation.setInterpolator(AndroidUtilities.decelerateInterpolator);
                    PhotoViewer.this.qualityChooseViewAnimation.start();
                }
            }

            public void onAnimationCancel(Animator animator) {
                AnimatorSet unused = PhotoViewer.this.qualityChooseViewAnimation = null;
            }
        });
        this.qualityChooseViewAnimation.setDuration(200);
        this.qualityChooseViewAnimation.setInterpolator(AndroidUtilities.accelerateInterpolator);
        this.qualityChooseViewAnimation.start();
        float f2 = 0.25f;
        if (this.cameraItem.getVisibility() == 0) {
            this.cameraItem.animate().scaleX(z ? 0.25f : 1.0f).scaleY(z ? 0.25f : 1.0f).alpha(z ? 0.0f : 1.0f).setDuration(200);
        }
        if (this.muteItem.getVisibility() == 0) {
            ViewPropertyAnimator scaleX = this.muteItem.animate().scaleX(z ? 0.25f : 1.0f);
            if (!z) {
                f2 = 1.0f;
            }
            ViewPropertyAnimator scaleY = scaleX.scaleY(f2);
            if (!z) {
                f = 1.0f;
            }
            scaleY.alpha(f).setDuration(200);
        }
    }

    private void processOpenVideo(final String str, boolean z, float f, float f2) {
        if (this.currentLoadingVideoRunnable != null) {
            Utilities.globalQueue.cancelRunnable(this.currentLoadingVideoRunnable);
            this.currentLoadingVideoRunnable = null;
        }
        this.videoTimelineView.setVideoPath(str, f, f2);
        this.videoPreviewMessageObject = null;
        boolean z2 = true;
        if (!z && this.sendPhotoType != 1) {
            z2 = false;
        }
        this.muteVideo = z2;
        this.compressionsCount = -1;
        this.rotationValue = 0;
        this.videoFramerate = 25;
        this.originalSize = new File(str).length();
        DispatchQueue dispatchQueue = Utilities.globalQueue;
        AnonymousClass78 r6 = new Runnable() {
            public void run() {
                if (PhotoViewer.this.currentLoadingVideoRunnable == this) {
                    int videoBitrate = MediaController.getVideoBitrate(str);
                    int[] iArr = new int[11];
                    AnimatedFileDrawable.getVideoInfo(str, iArr);
                    if (PhotoViewer.this.currentLoadingVideoRunnable == this) {
                        AndroidUtilities.runOnUIThread(new PhotoViewer$78$$ExternalSyntheticLambda0(this, this, iArr, videoBitrate));
                    }
                }
            }

            /* access modifiers changed from: private */
            public /* synthetic */ void lambda$run$0(Runnable runnable, int[] iArr, int i) {
                if (PhotoViewer.this.parentActivity != null && runnable == PhotoViewer.this.currentLoadingVideoRunnable) {
                    Runnable unused = PhotoViewer.this.currentLoadingVideoRunnable = null;
                    boolean unused2 = PhotoViewer.this.videoConvertSupported = iArr[0] != 0 && (!(iArr[10] != 0) || iArr[9] != 0);
                    long unused3 = PhotoViewer.this.audioFramesSize = (long) iArr[5];
                    float unused4 = PhotoViewer.this.videoDuration = (float) iArr[4];
                    if (i == -1) {
                        PhotoViewer photoViewer = PhotoViewer.this;
                        int unused5 = photoViewer.originalBitrate = photoViewer.bitrate = iArr[3];
                    } else {
                        PhotoViewer photoViewer2 = PhotoViewer.this;
                        int unused6 = photoViewer2.originalBitrate = photoViewer2.bitrate = i;
                    }
                    int unused7 = PhotoViewer.this.videoFramerate = iArr[7];
                    PhotoViewer photoViewer3 = PhotoViewer.this;
                    long unused8 = photoViewer3.videoFramesSize = (long) ((((float) (photoViewer3.bitrate / 8)) * PhotoViewer.this.videoDuration) / 1000.0f);
                    if (PhotoViewer.this.videoConvertSupported) {
                        int unused9 = PhotoViewer.this.rotationValue = iArr[8];
                        PhotoViewer photoViewer4 = PhotoViewer.this;
                        int unused10 = photoViewer4.resultWidth = photoViewer4.originalWidth = iArr[1];
                        PhotoViewer photoViewer5 = PhotoViewer.this;
                        int unused11 = photoViewer5.resultHeight = photoViewer5.originalHeight = iArr[2];
                        PhotoViewer photoViewer6 = PhotoViewer.this;
                        photoViewer6.updateCompressionsCount(photoViewer6.originalWidth, PhotoViewer.this.originalHeight);
                        PhotoViewer photoViewer7 = PhotoViewer.this;
                        int unused12 = photoViewer7.selectedCompression = photoViewer7.selectCompression();
                        PhotoViewer.this.updateWidthHeightBitrateForCompression();
                        if (PhotoViewer.this.selectedCompression > PhotoViewer.this.compressionsCount - 1) {
                            PhotoViewer photoViewer8 = PhotoViewer.this;
                            int unused13 = photoViewer8.selectedCompression = photoViewer8.compressionsCount - 1;
                        }
                        PhotoViewer photoViewer9 = PhotoViewer.this;
                        photoViewer9.setCompressItemEnabled(photoViewer9.compressionsCount > 1, true);
                        if (BuildVars.LOGS_ENABLED) {
                            FileLog.d("compressionsCount = " + PhotoViewer.this.compressionsCount + " w = " + PhotoViewer.this.originalWidth + " h = " + PhotoViewer.this.originalHeight + " r = " + PhotoViewer.this.rotationValue);
                        }
                        if (Build.VERSION.SDK_INT < 18 && PhotoViewer.this.compressItem.getTag() != null) {
                            boolean unused14 = PhotoViewer.this.videoConvertSupported = false;
                            PhotoViewer.this.setCompressItemEnabled(false, true);
                        }
                        PhotoViewer.this.qualityChooseView.invalidate();
                    } else {
                        PhotoViewer.this.setCompressItemEnabled(false, true);
                        int unused15 = PhotoViewer.this.compressionsCount = 0;
                    }
                    PhotoViewer.this.updateVideoInfo();
                    PhotoViewer.this.updateMuteButton();
                }
            }
        };
        this.currentLoadingVideoRunnable = r6;
        dispatchQueue.postRunnable(r6);
    }

    /* access modifiers changed from: private */
    public int selectCompression() {
        if (this.originalSize > NUM) {
            return this.compressionsCount - 1;
        }
        SharedPreferences globalMainSettings = MessagesController.getGlobalMainSettings();
        int i = this.compressionsCount;
        while (i < 5) {
            int i2 = globalMainSettings.getInt(String.format(Locale.US, "compress_video_%d", new Object[]{Integer.valueOf(i)}), -1);
            if (i2 >= 0) {
                return Math.min(i2, 2);
            }
            i++;
        }
        return Math.min(2, Math.round(((float) DownloadController.getInstance(this.currentAccount).getMaxVideoBitrate()) / (100.0f / ((float) i))) - 1);
    }

    /* access modifiers changed from: private */
    public void updateCompressionsCount(int i, int i2) {
        int max = Math.max(i, i2);
        if (max > 1280) {
            this.compressionsCount = 4;
        } else if (max > 854) {
            this.compressionsCount = 3;
        } else if (max > 640) {
            this.compressionsCount = 2;
        } else {
            this.compressionsCount = 1;
        }
    }

    /* access modifiers changed from: private */
    public void setCompressItemEnabled(boolean z, boolean z2) {
        ImageView imageView = this.compressItem;
        if (imageView != null) {
            if (z && imageView.getTag() != null) {
                return;
            }
            if (z || this.compressItem.getTag() != null) {
                this.compressItem.setTag(z ? 1 : null);
                AnimatorSet animatorSet = this.compressItemAnimation;
                if (animatorSet != null) {
                    animatorSet.cancel();
                    this.compressItemAnimation = null;
                }
                float f = 1.0f;
                if (z2) {
                    AnimatorSet animatorSet2 = new AnimatorSet();
                    this.compressItemAnimation = animatorSet2;
                    Animator[] animatorArr = new Animator[4];
                    ImageView imageView2 = this.compressItem;
                    Property property = View.ALPHA;
                    float[] fArr = new float[1];
                    fArr[0] = z ? 1.0f : 0.5f;
                    animatorArr[0] = ObjectAnimator.ofFloat(imageView2, property, fArr);
                    ImageView imageView3 = this.paintItem;
                    Property property2 = View.ALPHA;
                    float[] fArr2 = new float[1];
                    fArr2[0] = this.videoConvertSupported ? 1.0f : 0.5f;
                    animatorArr[1] = ObjectAnimator.ofFloat(imageView3, property2, fArr2);
                    ImageView imageView4 = this.tuneItem;
                    Property property3 = View.ALPHA;
                    float[] fArr3 = new float[1];
                    fArr3[0] = this.videoConvertSupported ? 1.0f : 0.5f;
                    animatorArr[2] = ObjectAnimator.ofFloat(imageView4, property3, fArr3);
                    ImageView imageView5 = this.cropItem;
                    Property property4 = View.ALPHA;
                    float[] fArr4 = new float[1];
                    if (!this.videoConvertSupported) {
                        f = 0.5f;
                    }
                    fArr4[0] = f;
                    animatorArr[3] = ObjectAnimator.ofFloat(imageView5, property4, fArr4);
                    animatorSet2.playTogether(animatorArr);
                    this.compressItemAnimation.setDuration(180);
                    this.compressItemAnimation.setInterpolator(decelerateInterpolator);
                    this.compressItemAnimation.start();
                    return;
                }
                ImageView imageView6 = this.compressItem;
                if (!z) {
                    f = 0.5f;
                }
                imageView6.setAlpha(f);
            }
        }
    }

    /* access modifiers changed from: private */
    public void updateAccessibilityOverlayVisibility() {
        if (this.playButtonAccessibilityOverlay != null) {
            int access$23700 = this.photoProgressViews[0].backgroundState;
            if (!this.photoProgressViews[0].isVisible() || !(access$23700 == 3 || access$23700 == 4 || access$23700 == 2 || access$23700 == 1)) {
                this.playButtonAccessibilityOverlay.setVisibility(4);
                return;
            }
            if (access$23700 == 3) {
                this.playButtonAccessibilityOverlay.setContentDescription(LocaleController.getString("AccActionPlay", NUM));
            } else if (access$23700 == 2) {
                this.playButtonAccessibilityOverlay.setContentDescription(LocaleController.getString("AccActionDownload", NUM));
            } else if (access$23700 == 1) {
                this.playButtonAccessibilityOverlay.setContentDescription(LocaleController.getString("AccActionCancelDownload", NUM));
            } else {
                this.playButtonAccessibilityOverlay.setContentDescription(LocaleController.getString("AccActionPause", NUM));
            }
            this.playButtonAccessibilityOverlay.setVisibility(0);
        }
    }

    private class ListAdapter extends RecyclerListView.SelectionAdapter {
        private Context mContext;

        public int getItemViewType(int i) {
            return 0;
        }

        public boolean isEnabled(RecyclerView.ViewHolder viewHolder) {
            return false;
        }

        public ListAdapter(Context context) {
            this.mContext = context;
        }

        public int getItemCount() {
            if (PhotoViewer.this.placeProvider == null || PhotoViewer.this.placeProvider.getSelectedPhotosOrder() == null) {
                return 0;
            }
            return PhotoViewer.this.placeProvider.getSelectedPhotosOrder().size();
        }

        public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup viewGroup, int i) {
            PhotoPickerPhotoCell photoPickerPhotoCell = new PhotoPickerPhotoCell(this.mContext);
            photoPickerPhotoCell.checkFrame.setOnClickListener(new PhotoViewer$ListAdapter$$ExternalSyntheticLambda0(this));
            return new RecyclerListView.Holder(photoPickerPhotoCell);
        }

        /* access modifiers changed from: private */
        public /* synthetic */ void lambda$onCreateViewHolder$0(View view) {
            Object tag = ((View) view.getParent()).getTag();
            int indexOf = PhotoViewer.this.imagesArrLocals.indexOf(tag);
            if (indexOf >= 0) {
                int photoChecked = PhotoViewer.this.placeProvider.setPhotoChecked(indexOf, PhotoViewer.this.getCurrentVideoEditedInfo());
                boolean isPhotoChecked = PhotoViewer.this.placeProvider.isPhotoChecked(indexOf);
                if (indexOf == PhotoViewer.this.currentIndex) {
                    PhotoViewer.this.checkImageView.setChecked(-1, isPhotoChecked, true);
                }
                if (photoChecked >= 0) {
                    PhotoViewer.this.selectedPhotosAdapter.notifyItemRemoved(photoChecked);
                    if (photoChecked == 0) {
                        PhotoViewer.this.selectedPhotosAdapter.notifyItemChanged(0);
                    }
                }
                PhotoViewer.this.updateSelectedCount();
                return;
            }
            int photoUnchecked = PhotoViewer.this.placeProvider.setPhotoUnchecked(tag);
            if (photoUnchecked >= 0) {
                PhotoViewer.this.selectedPhotosAdapter.notifyItemRemoved(photoUnchecked);
                if (photoUnchecked == 0) {
                    PhotoViewer.this.selectedPhotosAdapter.notifyItemChanged(0);
                }
                PhotoViewer.this.updateSelectedCount();
            }
        }

        public void onBindViewHolder(RecyclerView.ViewHolder viewHolder, int i) {
            PhotoPickerPhotoCell photoPickerPhotoCell = (PhotoPickerPhotoCell) viewHolder.itemView;
            photoPickerPhotoCell.setItemWidth(AndroidUtilities.dp(85.0f), i != 0 ? AndroidUtilities.dp(6.0f) : 0);
            BackupImageView backupImageView = photoPickerPhotoCell.imageView;
            backupImageView.setOrientation(0, true);
            Object obj = PhotoViewer.this.placeProvider.getSelectedPhotos().get(PhotoViewer.this.placeProvider.getSelectedPhotosOrder().get(i));
            if (obj instanceof MediaController.PhotoEntry) {
                MediaController.PhotoEntry photoEntry = (MediaController.PhotoEntry) obj;
                photoPickerPhotoCell.setTag(photoEntry);
                photoPickerPhotoCell.videoInfoContainer.setVisibility(4);
                String str = photoEntry.thumbPath;
                if (str != null) {
                    backupImageView.setImage(str, (String) null, this.mContext.getResources().getDrawable(NUM));
                } else if (photoEntry.path != null) {
                    backupImageView.setOrientation(photoEntry.orientation, true);
                    if (photoEntry.isVideo) {
                        photoPickerPhotoCell.videoInfoContainer.setVisibility(0);
                        photoPickerPhotoCell.videoTextView.setText(AndroidUtilities.formatShortDuration(photoEntry.duration));
                        backupImageView.setImage("vthumb://" + photoEntry.imageId + ":" + photoEntry.path, (String) null, this.mContext.getResources().getDrawable(NUM));
                    } else {
                        backupImageView.setImage("thumb://" + photoEntry.imageId + ":" + photoEntry.path, (String) null, this.mContext.getResources().getDrawable(NUM));
                    }
                } else {
                    backupImageView.setImageResource(NUM);
                }
                photoPickerPhotoCell.setChecked(-1, true, false);
                photoPickerPhotoCell.checkBox.setVisibility(0);
            } else if (obj instanceof MediaController.SearchImage) {
                MediaController.SearchImage searchImage = (MediaController.SearchImage) obj;
                photoPickerPhotoCell.setTag(searchImage);
                photoPickerPhotoCell.setImage(searchImage);
                photoPickerPhotoCell.videoInfoContainer.setVisibility(4);
                photoPickerPhotoCell.setChecked(-1, true, false);
                photoPickerPhotoCell.checkBox.setVisibility(0);
            }
        }
    }

    private class FirstFrameView extends ImageView {
        private VideoPlayer currentVideoPlayer;
        private ValueAnimator fadeAnimator;
        private final TimeInterpolator fadeInterpolator = CubicBezierInterpolator.EASE_IN;
        private boolean gettingFrame = false;
        private int gettingFrameIndex = 0;
        private boolean gotError = false;
        private boolean hasFrame = false;

        public FirstFrameView(Context context) {
            super(context);
            setAlpha(0.0f);
        }

        public void clear() {
            this.hasFrame = false;
            this.gotError = false;
            if (this.gettingFrame) {
                this.gettingFrameIndex++;
                this.gettingFrame = false;
            }
            setImageResource(17170445);
        }

        public void checkFromPlayer(VideoPlayer videoPlayer) {
            if (this.currentVideoPlayer != videoPlayer) {
                this.gotError = false;
                clear();
            }
            if (videoPlayer != null) {
                long duration = videoPlayer.getDuration() - videoPlayer.getCurrentPosition();
                if (!this.hasFrame && !this.gotError && !this.gettingFrame && ((float) duration) < 5250.0f) {
                    Uri currentUri = videoPlayer.getCurrentUri();
                    int i = this.gettingFrameIndex + 1;
                    this.gettingFrameIndex = i;
                    Utilities.globalQueue.postRunnable(new PhotoViewer$FirstFrameView$$ExternalSyntheticLambda3(this, currentUri, i));
                    this.gettingFrame = true;
                }
            }
            this.currentVideoPlayer = videoPlayer;
        }

        /* access modifiers changed from: private */
        public /* synthetic */ void lambda$checkFromPlayer$2(Uri uri, int i) {
            try {
                File file = new File(uri.getPath());
                int i2 = UserConfig.selectedAccount;
                Point point = AndroidUtilities.displaySize;
                AnimatedFileDrawable animatedFileDrawable = new AnimatedFileDrawable(file, true, 0, (TLRPC$Document) null, (ImageLocation) null, (Object) null, 0, i2, false, point.x, point.y, (BitmapsCache.CacheOptions) null);
                Bitmap frameAtTime = animatedFileDrawable.getFrameAtTime(0);
                animatedFileDrawable.recycle();
                AndroidUtilities.runOnUIThread(new PhotoViewer$FirstFrameView$$ExternalSyntheticLambda2(this, i, frameAtTime));
            } catch (Throwable th) {
                FileLog.e(th);
                AndroidUtilities.runOnUIThread(new PhotoViewer$FirstFrameView$$ExternalSyntheticLambda1(this));
            }
        }

        /* access modifiers changed from: private */
        public /* synthetic */ void lambda$checkFromPlayer$0(int i, Bitmap bitmap) {
            if (i == this.gettingFrameIndex) {
                setImageBitmap(bitmap);
                this.hasFrame = true;
                this.gettingFrame = false;
            }
        }

        /* access modifiers changed from: private */
        public /* synthetic */ void lambda$checkFromPlayer$1() {
            this.gotError = true;
        }

        /* access modifiers changed from: private */
        public void updateAlpha() {
            if (PhotoViewer.this.videoPlayer == null || PhotoViewer.this.videoPlayer.getDuration() == -9223372036854775807L) {
                ValueAnimator valueAnimator = this.fadeAnimator;
                if (valueAnimator != null) {
                    valueAnimator.cancel();
                    this.fadeAnimator = null;
                }
                setAlpha(0.0f);
                return;
            }
            long max = Math.max(0, PhotoViewer.this.videoPlayer.getDuration() - PhotoViewer.this.videoPlayer.getCurrentPosition());
            float max2 = 1.0f - Math.max(Math.min(((float) max) / 250.0f, 1.0f), 0.0f);
            if (max2 <= 0.0f) {
                ValueAnimator valueAnimator2 = this.fadeAnimator;
                if (valueAnimator2 != null) {
                    valueAnimator2.cancel();
                    this.fadeAnimator = null;
                }
                setAlpha(0.0f);
            } else if (!PhotoViewer.this.videoPlayer.isPlaying()) {
                ValueAnimator valueAnimator3 = this.fadeAnimator;
                if (valueAnimator3 != null) {
                    valueAnimator3.cancel();
                    this.fadeAnimator = null;
                }
                setAlpha(max2);
            } else if (this.fadeAnimator == null) {
                ValueAnimator ofFloat = ValueAnimator.ofFloat(new float[]{max2, 1.0f});
                this.fadeAnimator = ofFloat;
                ofFloat.addUpdateListener(new PhotoViewer$FirstFrameView$$ExternalSyntheticLambda0(this));
                this.fadeAnimator.setDuration(max);
                this.fadeAnimator.setInterpolator(this.fadeInterpolator);
                this.fadeAnimator.start();
                setAlpha(max2);
            }
        }

        /* access modifiers changed from: private */
        public /* synthetic */ void lambda$updateAlpha$3(ValueAnimator valueAnimator) {
            setAlpha(((Float) valueAnimator.getAnimatedValue()).floatValue());
        }
    }

    /* access modifiers changed from: private */
    public int getThemedColor(String str) {
        Theme.ResourcesProvider resourcesProvider2 = this.resourcesProvider;
        Integer color = resourcesProvider2 != null ? resourcesProvider2.getColor(str) : null;
        return color != null ? color.intValue() : Theme.getColor(str);
    }
}
