package org.telegram.ui;

import android.animation.Animator;
import android.animation.AnimatorListenerAdapter;
import android.animation.AnimatorSet;
import android.animation.ArgbEvaluator;
import android.animation.ObjectAnimator;
import android.animation.TimeInterpolator;
import android.animation.ValueAnimator;
import android.app.Activity;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.res.Configuration;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.ColorFilter;
import android.graphics.Matrix;
import android.graphics.Outline;
import android.graphics.Paint;
import android.graphics.PorterDuff;
import android.graphics.PorterDuffColorFilter;
import android.graphics.Rect;
import android.graphics.RectF;
import android.graphics.SurfaceTexture;
import android.graphics.drawable.ColorDrawable;
import android.graphics.drawable.Drawable;
import android.graphics.drawable.GradientDrawable;
import android.media.MediaCodec;
import android.media.MediaCodecInfo;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.os.SystemClock;
import android.os.Vibrator;
import android.provider.Settings;
import android.text.Layout;
import android.text.Spannable;
import android.text.SpannableString;
import android.text.SpannableStringBuilder;
import android.text.StaticLayout;
import android.text.TextPaint;
import android.text.TextUtils;
import android.text.style.ClickableSpan;
import android.text.style.URLSpan;
import android.transition.ChangeBounds;
import android.transition.Fade;
import android.transition.Transition;
import android.transition.TransitionManager;
import android.transition.TransitionSet;
import android.transition.TransitionValues;
import android.util.FloatProperty;
import android.util.Property;
import android.util.Range;
import android.util.SparseArray;
import android.view.ActionMode;
import android.view.ContextThemeWrapper;
import android.view.KeyEvent;
import android.view.Menu;
import android.view.MotionEvent;
import android.view.OrientationEventListener;
import android.view.TextureView;
import android.view.VelocityTracker;
import android.view.View;
import android.view.ViewConfiguration;
import android.view.ViewGroup;
import android.view.ViewOutlineProvider;
import android.view.ViewPropertyAnimator;
import android.view.ViewTreeObserver;
import android.view.WindowInsets;
import android.view.WindowManager;
import android.view.accessibility.AccessibilityManager;
import android.view.animation.DecelerateInterpolator;
import android.view.animation.Interpolator;
import android.view.animation.LinearInterpolator;
import android.view.animation.OvershootInterpolator;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.OverScroller;
import android.widget.Scroller;
import android.widget.TextView;
import android.widget.Toast;
import androidx.collection.ArrayMap;
import androidx.collection.LongSparseArray;
import androidx.core.content.ContextCompat;
import androidx.core.content.FileProvider;
import androidx.core.graphics.ColorUtils;
import androidx.core.view.inputmethod.InputContentInfoCompat;
import androidx.core.widget.NestedScrollView;
import androidx.dynamicanimation.animation.DynamicAnimation;
import androidx.dynamicanimation.animation.SpringAnimation;
import androidx.exifinterface.media.ExifInterface;
import androidx.recyclerview.widget.DefaultItemAnimator;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.LinearSmoothScrollerEnd;
import androidx.recyclerview.widget.RecyclerView;
import com.google.android.exoplayer2.analytics.AnalyticsListener;
import com.google.android.exoplayer2.ui.AspectRatioFrameLayout;
import com.google.android.gms.vision.Frame;
import com.google.android.gms.vision.face.Face;
import com.google.android.gms.vision.face.FaceDetector;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.lang.reflect.Array;
import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.net.URLEncoder;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import org.telegram.messenger.AndroidUtilities;
import org.telegram.messenger.ApplicationLoader;
import org.telegram.messenger.Bitmaps;
import org.telegram.messenger.BringAppForegroundService;
import org.telegram.messenger.BuildVars;
import org.telegram.messenger.ChatObject;
import org.telegram.messenger.DialogObject;
import org.telegram.messenger.DispatchQueue;
import org.telegram.messenger.DownloadController;
import org.telegram.messenger.Emoji;
import org.telegram.messenger.FileLoader;
import org.telegram.messenger.FileLog;
import org.telegram.messenger.ImageLoader;
import org.telegram.messenger.ImageLocation;
import org.telegram.messenger.ImageReceiver;
import org.telegram.messenger.LocaleController;
import org.telegram.messenger.MediaController;
import org.telegram.messenger.MediaDataController;
import org.telegram.messenger.MessageObject;
import org.telegram.messenger.MessagesController;
import org.telegram.messenger.MessagesStorage;
import org.telegram.messenger.NotificationCenter;
import org.telegram.messenger.SecureDocument;
import org.telegram.messenger.SendMessagesHelper;
import org.telegram.messenger.SharedConfig;
import org.telegram.messenger.UserConfig;
import org.telegram.messenger.UserObject;
import org.telegram.messenger.Utilities;
import org.telegram.messenger.VideoEditedInfo;
import org.telegram.messenger.WebFile;
import org.telegram.messenger.video.VideoPlayerRewinder;
import org.telegram.tgnet.ConnectionsManager;
import org.telegram.tgnet.TLObject;
import org.telegram.tgnet.TLRPC;
import org.telegram.ui.ActionBar.ActionBar;
import org.telegram.ui.ActionBar.ActionBarMenu;
import org.telegram.ui.ActionBar.ActionBarMenuItem;
import org.telegram.ui.ActionBar.ActionBarMenuSubItem;
import org.telegram.ui.ActionBar.ActionBarPopupWindow;
import org.telegram.ui.ActionBar.AdjustPanLayoutHelper;
import org.telegram.ui.ActionBar.AlertDialog;
import org.telegram.ui.ActionBar.BaseFragment;
import org.telegram.ui.ActionBar.BottomSheet;
import org.telegram.ui.ActionBar.SimpleTextView;
import org.telegram.ui.ActionBar.Theme;
import org.telegram.ui.Adapters.MentionsAdapter;
import org.telegram.ui.Cells.CheckBoxCell;
import org.telegram.ui.Cells.PhotoPickerPhotoCell;
import org.telegram.ui.ChooseSpeedLayout;
import org.telegram.ui.Components.AlertsCreator;
import org.telegram.ui.Components.AnimatedFileDrawable;
import org.telegram.ui.Components.AnimationProperties;
import org.telegram.ui.Components.BackupImageView;
import org.telegram.ui.Components.Bulletin;
import org.telegram.ui.Components.BulletinFactory;
import org.telegram.ui.Components.ChatAttachAlert;
import org.telegram.ui.Components.CheckBox;
import org.telegram.ui.Components.ClippingImageView;
import org.telegram.ui.Components.CombinedDrawable;
import org.telegram.ui.Components.Crop.CropTransform;
import org.telegram.ui.Components.CubicBezierInterpolator;
import org.telegram.ui.Components.FadingTextViewLayout;
import org.telegram.ui.Components.FloatSeekBarAccessibilityDelegate;
import org.telegram.ui.Components.GestureDetector2;
import org.telegram.ui.Components.GroupedPhotosListView;
import org.telegram.ui.Components.HideViewAfterAnimation;
import org.telegram.ui.Components.LayoutHelper;
import org.telegram.ui.Components.LinkPath;
import org.telegram.ui.Components.LinkSpanDrawable;
import org.telegram.ui.Components.NumberPicker;
import org.telegram.ui.Components.OtherDocumentPlaceholderDrawable;
import org.telegram.ui.Components.PaintingOverlay;
import org.telegram.ui.Components.PhotoCropView;
import org.telegram.ui.Components.PhotoFilterView;
import org.telegram.ui.Components.PhotoPaintView;
import org.telegram.ui.Components.PhotoViewerCaptionEnterView;
import org.telegram.ui.Components.PhotoViewerWebView;
import org.telegram.ui.Components.PickerBottomLayoutViewer;
import org.telegram.ui.Components.PipVideoOverlay;
import org.telegram.ui.Components.PlayPauseDrawable;
import org.telegram.ui.Components.RLottieDrawable;
import org.telegram.ui.Components.RadialProgressView;
import org.telegram.ui.Components.RecyclerListView;
import org.telegram.ui.Components.ShareAlert;
import org.telegram.ui.Components.SizeNotifierFrameLayoutPhoto;
import org.telegram.ui.Components.StickersAlert;
import org.telegram.ui.Components.TextViewSwitcher;
import org.telegram.ui.Components.Tooltip;
import org.telegram.ui.Components.URLSpanReplacement;
import org.telegram.ui.Components.URLSpanUserMentionPhotoViewer;
import org.telegram.ui.Components.UndoView;
import org.telegram.ui.Components.VideoEditTextureView;
import org.telegram.ui.Components.VideoForwardDrawable;
import org.telegram.ui.Components.VideoPlayer;
import org.telegram.ui.Components.VideoPlayerSeekBar;
import org.telegram.ui.Components.VideoSeekPreviewImage;
import org.telegram.ui.Components.VideoTimelinePlayView;
import org.telegram.ui.Components.ViewHelper;
import org.telegram.ui.Components.spoilers.SpoilersTextView;

public class PhotoViewer implements NotificationCenter.NotificationCenterDelegate, GestureDetector2.OnGestureListener, GestureDetector2.OnDoubleTapListener {
    private static final int EDIT_MODE_CROP = 1;
    private static final int EDIT_MODE_FILTER = 2;
    private static final int EDIT_MODE_NONE = 0;
    private static final int EDIT_MODE_PAINT = 3;
    /* access modifiers changed from: private */
    public static volatile PhotoViewer Instance = null;
    private static final int PROGRESS_CANCEL = 1;
    private static final int PROGRESS_EMPTY = 0;
    private static final int PROGRESS_LOAD = 2;
    private static final int PROGRESS_NONE = -1;
    private static final int PROGRESS_PAUSE = 4;
    private static final int PROGRESS_PLAY = 3;
    /* access modifiers changed from: private */
    public static volatile PhotoViewer PipInstance = null;
    public static final int SELECT_TYPE_AVATAR = 1;
    public static final int SELECT_TYPE_QR = 10;
    public static final int SELECT_TYPE_WALLPAPER = 3;
    private static final Property<VideoPlayerControlFrameLayout, Float> VPC_PROGRESS;
    /* access modifiers changed from: private */
    public static DecelerateInterpolator decelerateInterpolator = null;
    private static final int gallery_menu_cancel_loading = 7;
    private static final int gallery_menu_delete = 6;
    private static final int gallery_menu_edit_avatar = 17;
    private static final int gallery_menu_masks = 13;
    private static final int gallery_menu_masks2 = 15;
    private static final int gallery_menu_openin = 11;
    private static final int gallery_menu_pip = 5;
    private static final int gallery_menu_save = 1;
    private static final int gallery_menu_savegif = 14;
    private static final int gallery_menu_send = 3;
    private static final int gallery_menu_set_as_main = 16;
    private static final int gallery_menu_share = 10;
    private static final int gallery_menu_share2 = 18;
    private static final int gallery_menu_showall = 2;
    private static final int gallery_menu_showinchat = 4;
    private static final int gallery_menu_speed = 19;
    /* access modifiers changed from: private */
    public static Drawable[] progressDrawables = null;
    /* access modifiers changed from: private */
    public static Paint progressPaint = null;
    private static final int thumbSize = 512;
    public final Property<View, Float> FLASH_VIEW_VALUE = new AnimationProperties.FloatProperty<View>("flashViewAlpha") {
        public void setValue(View object, float value) {
            object.setAlpha(value);
            if (PhotoViewer.this.photoCropView != null) {
                PhotoViewer.this.photoCropView.setVideoThumbFlashAlpha(value);
            }
        }

        public Float get(View object) {
            return Float.valueOf(object.getAlpha());
        }
    };
    /* access modifiers changed from: private */
    public ActionBar actionBar;
    /* access modifiers changed from: private */
    public AnimatorSet actionBarAnimator;
    private Map<View, Boolean> actionBarItemsVisibility = new HashMap(3);
    /* access modifiers changed from: private */
    public boolean actionBarWasShownBeforeByEnd = false;
    private Context activityContext;
    private ActionBarMenuSubItem allMediaItem;
    /* access modifiers changed from: private */
    public boolean allowMentions;
    private boolean allowOrder = true;
    private boolean allowShare;
    /* access modifiers changed from: private */
    public boolean allowShowFullscreenButton;
    /* access modifiers changed from: private */
    public float animateToMirror;
    /* access modifiers changed from: private */
    public float animateToRotate;
    /* access modifiers changed from: private */
    public float animateToScale;
    /* access modifiers changed from: private */
    public float animateToX;
    /* access modifiers changed from: private */
    public float animateToY;
    /* access modifiers changed from: private */
    public ClippingImageView animatingImageView;
    /* access modifiers changed from: private */
    public Runnable animationEndRunnable;
    /* access modifiers changed from: private */
    public int animationInProgress;
    /* access modifiers changed from: private */
    public long animationStartTime;
    private float animationValue;
    /* access modifiers changed from: private */
    public float[][] animationValues = ((float[][]) Array.newInstance(float.class, new int[]{2, 13}));
    /* access modifiers changed from: private */
    public boolean applying;
    /* access modifiers changed from: private */
    public AspectRatioFrameLayout aspectRatioFrameLayout;
    /* access modifiers changed from: private */
    public boolean attachedToWindow;
    /* access modifiers changed from: private */
    public long audioFramesSize;
    /* access modifiers changed from: private */
    public float avatarStartProgress;
    /* access modifiers changed from: private */
    public long avatarStartTime;
    /* access modifiers changed from: private */
    public ArrayList<TLRPC.Photo> avatarsArr = new ArrayList<>();
    /* access modifiers changed from: private */
    public long avatarsDialogId;
    /* access modifiers changed from: private */
    public BackgroundDrawable backgroundDrawable = new BackgroundDrawable(-16777216);
    private Paint bitmapPaint = new Paint(2);
    /* access modifiers changed from: private */
    public int bitrate;
    /* access modifiers changed from: private */
    public Paint blackPaint = new Paint();
    /* access modifiers changed from: private */
    public LinearLayout bottomButtonsLayout;
    /* access modifiers changed from: private */
    public FrameLayout bottomLayout;
    /* access modifiers changed from: private */
    public boolean bottomTouchEnabled = true;
    /* access modifiers changed from: private */
    public ImageView cameraItem;
    private boolean canDragDown = true;
    private boolean canEditAvatar;
    private boolean canZoom = true;
    /* access modifiers changed from: private */
    public FrameLayout captionContainer;
    /* access modifiers changed from: private */
    public PhotoViewerCaptionEnterView captionEditText;
    public CharSequence captionForAllMedia;
    private boolean captionHwLayerEnabled;
    /* access modifiers changed from: private */
    public TextView captionLimitView;
    /* access modifiers changed from: private */
    public CaptionScrollView captionScrollView;
    /* access modifiers changed from: private */
    public CaptionTextViewSwitcher captionTextViewSwitcher;
    /* access modifiers changed from: private */
    public long captureFrameAtTime = -1;
    /* access modifiers changed from: private */
    public long captureFrameReadyAtTime = -1;
    /* access modifiers changed from: private */
    public ImageReceiver centerImage = new ImageReceiver();
    private boolean centerImageIsVideo;
    /* access modifiers changed from: private */
    public AnimatorSet changeModeAnimation;
    /* access modifiers changed from: private */
    public TextureView changedTextureView;
    private boolean changingPage;
    /* access modifiers changed from: private */
    public boolean changingTextureView;
    /* access modifiers changed from: private */
    public CheckBox checkImageView;
    ChooseSpeedLayout chooseSpeedLayout;
    private int classGuid;
    /* access modifiers changed from: private */
    public ImageView compressItem;
    private AnimatorSet compressItemAnimation;
    /* access modifiers changed from: private */
    public int compressionsCount = -1;
    /* access modifiers changed from: private */
    public FrameLayoutDrawer containerView;
    private boolean cropInitied;
    private ImageView cropItem;
    /* access modifiers changed from: private */
    public CropTransform cropTransform = new CropTransform();
    /* access modifiers changed from: private */
    public int currentAccount;
    private AnimatedFileDrawable currentAnimation;
    /* access modifiers changed from: private */
    public ImageLocation currentAvatarLocation = null;
    /* access modifiers changed from: private */
    public Bitmap currentBitmap;
    private TLRPC.BotInlineResult currentBotInlineResult;
    /* access modifiers changed from: private */
    public long currentDialogId;
    /* access modifiers changed from: private */
    public int currentEditMode;
    /* access modifiers changed from: private */
    public ImageLocation currentFileLocation;
    /* access modifiers changed from: private */
    public ImageLocation currentFileLocationVideo;
    /* access modifiers changed from: private */
    public String[] currentFileNames = new String[3];
    private String currentImageFaceKey;
    private int currentImageHasFace;
    private String currentImagePath;
    /* access modifiers changed from: private */
    public int currentIndex;
    /* access modifiers changed from: private */
    public AnimatorSet currentListViewAnimation;
    /* access modifiers changed from: private */
    public Runnable currentLoadingVideoRunnable;
    /* access modifiers changed from: private */
    public MessageObject currentMessageObject;
    private TLRPC.PageBlock currentPageBlock;
    /* access modifiers changed from: private */
    public float currentPanTranslationY;
    private String currentPathObject;
    /* access modifiers changed from: private */
    public PlaceProviderObject currentPlaceObject;
    private Uri currentPlayingVideoFile;
    /* access modifiers changed from: private */
    public SecureDocument currentSecureDocument;
    private String currentSubtitle;
    /* access modifiers changed from: private */
    public ImageReceiver.BitmapHolder currentThumb;
    /* access modifiers changed from: private */
    public boolean currentVideoFinishedLoading;
    /* access modifiers changed from: private */
    public float currentVideoSpeed;
    private int dateOverride;
    /* access modifiers changed from: private */
    public FadingTextViewLayout dateTextView;
    /* access modifiers changed from: private */
    public boolean disableShowCheck;
    private boolean discardTap;
    private TextView docInfoTextView;
    private TextView docNameTextView;
    private boolean doneButtonPressed;
    /* access modifiers changed from: private */
    public boolean dontAutoPlay;
    /* access modifiers changed from: private */
    public boolean dontChangeCaptionPosition;
    /* access modifiers changed from: private */
    public boolean dontResetZoomOnFirstLayout;
    private boolean doubleTap;
    private boolean doubleTapEnabled;
    private float dragY;
    private boolean draggingDown;
    private boolean[] drawPressedDrawable = new boolean[2];
    /* access modifiers changed from: private */
    public EditState editState = new EditState();
    /* access modifiers changed from: private */
    public PickerBottomLayoutViewer editorDoneLayout;
    private boolean[] endReached = {false, true};
    private long endTime;
    private long estimatedDuration;
    private long estimatedSize;
    /* access modifiers changed from: private */
    public ImageView exitFullscreenButton;
    private boolean firstAnimationDelay;
    /* access modifiers changed from: private */
    public FirstFrameView firstFrameView;
    /* access modifiers changed from: private */
    public AnimatorSet flashAnimator;
    /* access modifiers changed from: private */
    public View flashView;
    boolean fromCamera;
    /* access modifiers changed from: private */
    public ImageView[] fullscreenButton = new ImageView[3];
    /* access modifiers changed from: private */
    public int fullscreenedByButton;
    /* access modifiers changed from: private */
    public GestureDetector2 gestureDetector;
    /* access modifiers changed from: private */
    public GroupedPhotosListView groupedPhotosListView;
    public boolean hasCaptionForAllMedia;
    /* access modifiers changed from: private */
    public Runnable hideActionBarRunnable = new Runnable() {
        public void run() {
            PhotoViewer photoViewer;
            if (PhotoViewer.this.videoPlayerControlVisible && PhotoViewer.this.isPlaying && !ApplicationLoader.mainInterfacePaused) {
                if (PhotoViewer.this.menuItem != null && PhotoViewer.this.menuItem.isSubMenuShowing()) {
                    return;
                }
                if (PhotoViewer.this.captionScrollView != null && PhotoViewer.this.captionScrollView.getScrollY() != 0) {
                    return;
                }
                if ((PhotoViewer.this.miniProgressView == null || PhotoViewer.this.miniProgressView.getVisibility() != 0) && PhotoViewer.PipInstance != (photoViewer = PhotoViewer.this)) {
                    photoViewer.toggleActionBar(false, true);
                }
            }
        }
    };
    /* access modifiers changed from: private */
    public PlaceProviderObject hideAfterAnimation;
    /* access modifiers changed from: private */
    public UndoView hintView;
    private Rect hitRect = new Rect();
    private boolean ignoreDidSetImage;
    /* access modifiers changed from: private */
    public AnimatorSet imageMoveAnimation;
    /* access modifiers changed from: private */
    public ArrayList<MessageObject> imagesArr = new ArrayList<>();
    /* access modifiers changed from: private */
    public ArrayList<Object> imagesArrLocals = new ArrayList<>();
    /* access modifiers changed from: private */
    public ArrayList<ImageLocation> imagesArrLocations = new ArrayList<>();
    /* access modifiers changed from: private */
    public ArrayList<Long> imagesArrLocationsSizes = new ArrayList<>();
    /* access modifiers changed from: private */
    public ArrayList<ImageLocation> imagesArrLocationsVideo = new ArrayList<>();
    /* access modifiers changed from: private */
    public ArrayList<TLRPC.Message> imagesArrMessages = new ArrayList<>();
    private ArrayList<MessageObject> imagesArrTemp = new ArrayList<>();
    private SparseArray<MessageObject>[] imagesByIds = {new SparseArray<>(), new SparseArray<>()};
    private SparseArray<MessageObject>[] imagesByIdsTemp = {new SparseArray<>(), new SparseArray<>()};
    /* access modifiers changed from: private */
    public boolean inBubbleMode;
    /* access modifiers changed from: private */
    public boolean inPreview;
    private VideoPlayer injectingVideoPlayer;
    private SurfaceTexture injectingVideoPlayerSurface;
    /* access modifiers changed from: private */
    public float inlineOutAnimationProgress;
    private DecelerateInterpolator interpolator = new DecelerateInterpolator(1.5f);
    private boolean invalidCoords;
    /* access modifiers changed from: private */
    public boolean isActionBarVisible = true;
    /* access modifiers changed from: private */
    public boolean isCurrentVideo;
    private boolean isDocumentsPicker;
    /* access modifiers changed from: private */
    public boolean isEmbedVideo;
    /* access modifiers changed from: private */
    public boolean isEvent;
    private boolean isFirstLoading;
    /* access modifiers changed from: private */
    public boolean isInline;
    /* access modifiers changed from: private */
    public boolean isPhotosListViewVisible;
    /* access modifiers changed from: private */
    public boolean isPlaying;
    /* access modifiers changed from: private */
    public boolean isStreaming;
    /* access modifiers changed from: private */
    public boolean isVisible;
    /* access modifiers changed from: private */
    public LinearLayout itemsLayout;
    private boolean keepScreenOnFlagSet;
    boolean keyboardAnimationEnabled;
    /* access modifiers changed from: private */
    public int keyboardSize;
    /* access modifiers changed from: private */
    public long lastBufferedPositionCheck;
    private int lastImageId = -1;
    /* access modifiers changed from: private */
    public Object lastInsets;
    private long lastPhotoSetTime;
    /* access modifiers changed from: private */
    public long lastSaveTime;
    /* access modifiers changed from: private */
    public String lastTitle;
    /* access modifiers changed from: private */
    public MediaController.CropState leftCropState;
    /* access modifiers changed from: private */
    public CropTransform leftCropTransform = new CropTransform();
    /* access modifiers changed from: private */
    public ImageReceiver leftImage = new ImageReceiver();
    private boolean leftImageIsVideo;
    /* access modifiers changed from: private */
    public PaintingOverlay leftPaintingOverlay;
    private boolean loadInitialVideo;
    private boolean loadingMoreImages;
    Runnable longPressRunnable = new PhotoViewer$$ExternalSyntheticLambda50(this);
    float longPressX;
    /* access modifiers changed from: private */
    public boolean manuallyPaused;
    /* access modifiers changed from: private */
    public StickersAlert masksAlert;
    private ActionBarMenuItem masksItem;
    private int maxSelectedPhotos = -1;
    private float maxX;
    private float maxY;
    /* access modifiers changed from: private */
    public LinearLayoutManager mentionLayoutManager;
    /* access modifiers changed from: private */
    public AnimatorSet mentionListAnimation;
    /* access modifiers changed from: private */
    public RecyclerListView mentionListView;
    /* access modifiers changed from: private */
    public MentionsAdapter mentionsAdapter;
    /* access modifiers changed from: private */
    public ActionBarMenuItem menuItem;
    private long mergeDialogId;
    private float minX;
    private float minY;
    /* access modifiers changed from: private */
    public AnimatorSet miniProgressAnimator;
    private Runnable miniProgressShowRunnable = new PhotoViewer$$ExternalSyntheticLambda43(this);
    /* access modifiers changed from: private */
    public RadialProgressView miniProgressView;
    /* access modifiers changed from: private */
    public float mirror = 0.0f;
    /* access modifiers changed from: private */
    public ImageView mirrorItem;
    private float moveStartX;
    private float moveStartY;
    /* access modifiers changed from: private */
    public boolean moving;
    /* access modifiers changed from: private */
    public ImageView muteItem;
    /* access modifiers changed from: private */
    public boolean muteVideo;
    private String nameOverride;
    /* access modifiers changed from: private */
    public FadingTextViewLayout nameTextView;
    private ValueAnimator navBarAnimator;
    /* access modifiers changed from: private */
    public View navigationBar;
    /* access modifiers changed from: private */
    public int navigationBarHeight;
    /* access modifiers changed from: private */
    public boolean needCaptionLayout;
    /* access modifiers changed from: private */
    public long needCaptureFrameReadyAtTime = -1;
    private boolean needSearchImageInArr;
    /* access modifiers changed from: private */
    public boolean needShowOnReady;
    private Runnable onUserLeaveHintListener = new PhotoViewer$$ExternalSyntheticLambda51(this);
    private boolean openAnimationInProgress;
    /* access modifiers changed from: private */
    public boolean openedFullScreenVideo;
    private boolean opennedFromMedia;
    /* access modifiers changed from: private */
    public OrientationEventListener orientationEventListener;
    /* access modifiers changed from: private */
    public int originalBitrate;
    /* access modifiers changed from: private */
    public int originalHeight;
    private long originalSize;
    /* access modifiers changed from: private */
    public int originalWidth;
    /* access modifiers changed from: private */
    public boolean padImageForHorizontalInsets;
    /* access modifiers changed from: private */
    public PageBlocksAdapter pageBlocksAdapter;
    private ImageView paintButton;
    private ImageView paintItem;
    private int paintViewTouched;
    /* access modifiers changed from: private */
    public PaintingOverlay paintingOverlay;
    /* access modifiers changed from: private */
    public Activity parentActivity;
    /* access modifiers changed from: private */
    public ChatAttachAlert parentAlert;
    /* access modifiers changed from: private */
    public ChatActivity parentChatActivity;
    /* access modifiers changed from: private */
    public PhotoCropView photoCropView;
    /* access modifiers changed from: private */
    public PhotoFilterView photoFilterView;
    /* access modifiers changed from: private */
    public PhotoPaintView photoPaintView;
    /* access modifiers changed from: private */
    public PhotoProgressView[] photoProgressViews = new PhotoProgressView[3];
    /* access modifiers changed from: private */
    public PhotoViewerWebView photoViewerWebView;
    /* access modifiers changed from: private */
    public CounterView photosCounterView;
    /* access modifiers changed from: private */
    public FrameLayout pickerView;
    /* access modifiers changed from: private */
    public ImageView pickerViewSendButton;
    private Drawable pickerViewSendDrawable;
    private float pinchCenterX;
    private float pinchCenterY;
    private float pinchStartDistance;
    private float pinchStartScale = 1.0f;
    private float pinchStartX;
    private float pinchStartY;
    /* access modifiers changed from: private */
    public boolean pipAnimationInProgress;
    private boolean pipAvailable;
    /* access modifiers changed from: private */
    public ActionBarMenuItem pipItem;
    /* access modifiers changed from: private */
    public int[] pipPosition = new int[2];
    /* access modifiers changed from: private */
    public boolean pipVideoOverlayAnimateFlag = true;
    /* access modifiers changed from: private */
    public PhotoViewerProvider placeProvider;
    private View playButtonAccessibilityOverlay;
    /* access modifiers changed from: private */
    public boolean playerAutoStarted;
    private boolean playerInjected;
    private boolean playerLooping;
    private boolean playerWasPlaying;
    /* access modifiers changed from: private */
    public boolean playerWasReady;
    private GradientDrawable[] pressedDrawable = new GradientDrawable[2];
    private float[] pressedDrawableAlpha = new float[2];
    /* access modifiers changed from: private */
    public int prevOrientation = -10;
    private int previewViewEnd;
    private int previousCompression;
    private boolean previousCropMirrored;
    private int previousCropOrientation;
    private float previousCropPh;
    private float previousCropPw;
    private float previousCropPx;
    private float previousCropPy;
    private float previousCropRotation;
    private float previousCropScale;
    private boolean previousHasTransform;
    /* access modifiers changed from: private */
    public RadialProgressView progressView;
    /* access modifiers changed from: private */
    public QualityChooseView qualityChooseView;
    /* access modifiers changed from: private */
    public AnimatorSet qualityChooseViewAnimation;
    /* access modifiers changed from: private */
    public PickerBottomLayoutViewer qualityPicker;
    private boolean requestingPreview;
    private TextView resetButton;
    /* access modifiers changed from: private */
    public Theme.ResourcesProvider resourcesProvider;
    /* access modifiers changed from: private */
    public int resultHeight;
    /* access modifiers changed from: private */
    public int resultWidth;
    /* access modifiers changed from: private */
    public MediaController.CropState rightCropState;
    /* access modifiers changed from: private */
    public CropTransform rightCropTransform = new CropTransform();
    /* access modifiers changed from: private */
    public ImageReceiver rightImage = new ImageReceiver();
    private boolean rightImageIsVideo;
    /* access modifiers changed from: private */
    public PaintingOverlay rightPaintingOverlay;
    /* access modifiers changed from: private */
    public float rotate = 0.0f;
    /* access modifiers changed from: private */
    public ImageView rotateItem;
    /* access modifiers changed from: private */
    public int rotationValue;
    /* access modifiers changed from: private */
    public SavedState savedState = null;
    private ArrayMap<String, SavedVideoPosition> savedVideoPositions = new ArrayMap<>();
    /* access modifiers changed from: private */
    public float scale = 1.0f;
    private Scroller scroller;
    /* access modifiers changed from: private */
    public ArrayList<SecureDocument> secureDocuments = new ArrayList<>();
    /* access modifiers changed from: private */
    public float seekToProgressPending;
    private float seekToProgressPending2;
    /* access modifiers changed from: private */
    public int selectedCompression;
    /* access modifiers changed from: private */
    public ListAdapter selectedPhotosAdapter;
    /* access modifiers changed from: private */
    public SelectedPhotosListView selectedPhotosListView;
    private ActionBarMenuItem sendItem;
    /* access modifiers changed from: private */
    public int sendPhotoType;
    private ActionBarPopupWindow.ActionBarPopupWindowLayout sendPopupLayout;
    private ActionBarPopupWindow sendPopupWindow;
    private Runnable setLoadingRunnable = new Runnable() {
        public void run() {
            if (PhotoViewer.this.currentMessageObject != null) {
                FileLoader.getInstance(PhotoViewer.this.currentMessageObject.currentAccount).setLoadingVideo(PhotoViewer.this.currentMessageObject.getDocument(), true, false);
            }
        }
    };
    private ImageView shareButton;
    private ActionBarMenuItem shareItem;
    private int sharedMediaType;
    /* access modifiers changed from: private */
    public String shouldSavePositionForCurrentVideo;
    private String shouldSavePositionForCurrentVideoShortTerm;
    /* access modifiers changed from: private */
    public PlaceProviderObject showAfterAnimation;
    /* access modifiers changed from: private */
    public boolean shownControlsByEnd = false;
    private ImageReceiver sideImage;
    private boolean skipFirstBufferingProgress;
    /* access modifiers changed from: private */
    public int slideshowMessageId;
    private ActionBarPopupWindow.GapView speedGap;
    private ActionBarMenuSubItem speedItem;
    private int startOffset;
    private boolean startReached = false;
    /* access modifiers changed from: private */
    public long startTime;
    private long startedPlayTime;
    private boolean streamingAlertShown;
    /* access modifiers changed from: private */
    public TextureView.SurfaceTextureListener surfaceTextureListener = new TextureView.SurfaceTextureListener() {
        public void onSurfaceTextureAvailable(SurfaceTexture surface, int width, int height) {
        }

        public void onSurfaceTextureSizeChanged(SurfaceTexture surface, int width, int height) {
        }

        public boolean onSurfaceTextureDestroyed(SurfaceTexture surface) {
            if (PhotoViewer.this.videoTextureView == null || !PhotoViewer.this.changingTextureView) {
                return true;
            }
            if (PhotoViewer.this.switchingInlineMode) {
                int unused = PhotoViewer.this.waitingForFirstTextureUpload = 2;
            }
            PhotoViewer.this.videoTextureView.setSurfaceTexture(surface);
            PhotoViewer.this.videoTextureView.setVisibility(0);
            boolean unused2 = PhotoViewer.this.changingTextureView = false;
            PhotoViewer.this.containerView.invalidate();
            return false;
        }

        public void onSurfaceTextureUpdated(SurfaceTexture surface) {
            if (PhotoViewer.this.waitingForFirstTextureUpload == 1) {
                PhotoViewer.this.changedTextureView.getViewTreeObserver().addOnPreDrawListener(new ViewTreeObserver.OnPreDrawListener() {
                    public boolean onPreDraw() {
                        PhotoViewer.this.changedTextureView.getViewTreeObserver().removeOnPreDrawListener(this);
                        if (PhotoViewer.this.textureImageView != null) {
                            if (PhotoViewer.this.isInline) {
                                AndroidUtilities.runOnUIThread(new PhotoViewer$7$1$$ExternalSyntheticLambda0(this), 300);
                            } else {
                                PhotoViewer.this.textureImageView.setVisibility(4);
                                PhotoViewer.this.textureImageView.setImageDrawable((Drawable) null);
                                if (PhotoViewer.this.currentBitmap != null) {
                                    PhotoViewer.this.currentBitmap.recycle();
                                    Bitmap unused = PhotoViewer.this.currentBitmap = null;
                                }
                            }
                        }
                        AndroidUtilities.runOnUIThread(new PhotoViewer$7$1$$ExternalSyntheticLambda1(this));
                        int unused2 = PhotoViewer.this.waitingForFirstTextureUpload = 0;
                        return true;
                    }

                    /* renamed from: lambda$onPreDraw$0$org-telegram-ui-PhotoViewer$7$1  reason: not valid java name */
                    public /* synthetic */ void m4330lambda$onPreDraw$0$orgtelegramuiPhotoViewer$7$1() {
                        PhotoViewer.this.textureImageView.setVisibility(4);
                        PhotoViewer.this.textureImageView.setImageDrawable((Drawable) null);
                        if (PhotoViewer.this.currentBitmap != null) {
                            PhotoViewer.this.currentBitmap.recycle();
                            Bitmap unused = PhotoViewer.this.currentBitmap = null;
                        }
                    }

                    /* renamed from: lambda$onPreDraw$1$org-telegram-ui-PhotoViewer$7$1  reason: not valid java name */
                    public /* synthetic */ void m4331lambda$onPreDraw$1$orgtelegramuiPhotoViewer$7$1() {
                        if (PhotoViewer.this.isInline) {
                            PhotoViewer.this.dismissInternal();
                        }
                    }
                });
                PhotoViewer.this.changedTextureView.invalidate();
            }
        }
    };
    private int switchImageAfterAnimation;
    /* access modifiers changed from: private */
    public Runnable switchToInlineRunnable = new Runnable() {
        public void run() {
            if (PipVideoOverlay.isVisible()) {
                PipVideoOverlay.dismiss();
                AndroidUtilities.runOnUIThread(this, 250);
                return;
            }
            boolean unused = PhotoViewer.this.switchingInlineMode = false;
            if (PhotoViewer.this.currentBitmap != null) {
                PhotoViewer.this.currentBitmap.recycle();
                Bitmap unused2 = PhotoViewer.this.currentBitmap = null;
            }
            boolean unused3 = PhotoViewer.this.changingTextureView = true;
            if (PhotoViewer.this.textureImageView != null) {
                try {
                    PhotoViewer photoViewer = PhotoViewer.this;
                    Bitmap unused4 = photoViewer.currentBitmap = Bitmaps.createBitmap(photoViewer.videoTextureView.getWidth(), PhotoViewer.this.videoTextureView.getHeight(), Bitmap.Config.ARGB_8888);
                    PhotoViewer.this.videoTextureView.getBitmap(PhotoViewer.this.currentBitmap);
                } catch (Throwable e) {
                    if (PhotoViewer.this.currentBitmap != null) {
                        PhotoViewer.this.currentBitmap.recycle();
                        Bitmap unused5 = PhotoViewer.this.currentBitmap = null;
                    }
                    FileLog.e(e);
                }
                if (PhotoViewer.this.currentBitmap != null) {
                    PhotoViewer.this.textureImageView.setVisibility(0);
                    PhotoViewer.this.textureImageView.setImageBitmap(PhotoViewer.this.currentBitmap);
                } else {
                    PhotoViewer.this.textureImageView.setImageDrawable((Drawable) null);
                }
            }
            boolean unused6 = PhotoViewer.this.isInline = true;
            TextureView unused7 = PhotoViewer.this.changedTextureView = new TextureView(PhotoViewer.this.parentActivity);
            if (PipVideoOverlay.show(false, PhotoViewer.this.parentActivity, PhotoViewer.this.changedTextureView, PhotoViewer.this.videoWidth, PhotoViewer.this.videoHeight, PhotoViewer.this.pipVideoOverlayAnimateFlag)) {
                PipVideoOverlay.setPhotoViewer(PhotoViewer.this);
            }
            boolean unused8 = PhotoViewer.this.pipVideoOverlayAnimateFlag = true;
            PhotoViewer.this.changedTextureView.setVisibility(4);
            PhotoViewer.this.aspectRatioFrameLayout.removeView(PhotoViewer.this.videoTextureView);
        }
    };
    /* access modifiers changed from: private */
    public boolean switchingInlineMode;
    private int switchingToIndex;
    /* access modifiers changed from: private */
    public int switchingToMode = -1;
    private int[] tempInt = new int[2];
    /* access modifiers changed from: private */
    public ImageView textureImageView;
    /* access modifiers changed from: private */
    public boolean textureUploaded;
    private ImageView timeItem;
    private Tooltip tooltip;
    private int totalImagesCount;
    private int totalImagesCountMerge;
    long totalRewinding;
    private int touchSlop;
    /* access modifiers changed from: private */
    public long transitionAnimationStartTime;
    /* access modifiers changed from: private */
    public int transitionIndex;
    /* access modifiers changed from: private */
    public float translationX;
    /* access modifiers changed from: private */
    public float translationY;
    private boolean tryStartRequestPreviewOnFinish;
    private ImageView tuneItem;
    private final Runnable updateContainerFlagsRunnable = new PhotoViewer$$ExternalSyntheticLambda45(this);
    /* access modifiers changed from: private */
    public Runnable updateProgressRunnable = new Runnable() {
        public void run() {
            float progress;
            float bufferedProgress;
            if (PhotoViewer.this.videoPlayer != null) {
                if (!PhotoViewer.this.isCurrentVideo) {
                    float progress2 = ((float) PhotoViewer.this.videoPlayer.getCurrentPosition()) / ((float) PhotoViewer.this.videoPlayer.getDuration());
                    if (PhotoViewer.this.shownControlsByEnd && !PhotoViewer.this.actionBarWasShownBeforeByEnd) {
                        progress2 = 0.0f;
                    }
                    if (PhotoViewer.this.currentVideoFinishedLoading) {
                        bufferedProgress = 1.0f;
                    } else {
                        long newTime = SystemClock.elapsedRealtime();
                        if (Math.abs(newTime - PhotoViewer.this.lastBufferedPositionCheck) >= 500) {
                            if (PhotoViewer.this.isStreaming) {
                                bufferedProgress = FileLoader.getInstance(PhotoViewer.this.currentAccount).getBufferedProgressFromPosition(PhotoViewer.this.seekToProgressPending != 0.0f ? PhotoViewer.this.seekToProgressPending : progress, PhotoViewer.this.currentFileNames[0]);
                            } else {
                                bufferedProgress = 1.0f;
                            }
                            long unused = PhotoViewer.this.lastBufferedPositionCheck = newTime;
                        } else {
                            bufferedProgress = -1.0f;
                        }
                    }
                    if (PhotoViewer.this.inPreview || PhotoViewer.this.videoTimelineView.getVisibility() != 0) {
                        if (PhotoViewer.this.seekToProgressPending == 0.0f && (PhotoViewer.this.videoPlayerRewinder.rewindCount == 0 || !PhotoViewer.this.videoPlayerRewinder.rewindByBackSeek)) {
                            PhotoViewer.this.videoPlayerSeekbar.setProgress(progress, false);
                        }
                        if (bufferedProgress != -1.0f) {
                            PhotoViewer.this.videoPlayerSeekbar.setBufferedProgress(bufferedProgress);
                            PipVideoOverlay.setBufferedProgress(bufferedProgress);
                        }
                    } else if (progress >= PhotoViewer.this.videoTimelineView.getRightProgress()) {
                        boolean unused2 = PhotoViewer.this.manuallyPaused = false;
                        PhotoViewer.this.videoPlayer.pause();
                        PhotoViewer.this.videoPlayerSeekbar.setProgress(0.0f);
                        PhotoViewer.this.videoPlayer.seekTo((long) ((int) (PhotoViewer.this.videoTimelineView.getLeftProgress() * ((float) PhotoViewer.this.videoPlayer.getDuration()))));
                        PhotoViewer.this.containerView.invalidate();
                    } else {
                        float progress3 = progress - PhotoViewer.this.videoTimelineView.getLeftProgress();
                        if (progress3 < 0.0f) {
                            progress3 = 0.0f;
                        }
                        progress = progress3 / (PhotoViewer.this.videoTimelineView.getRightProgress() - PhotoViewer.this.videoTimelineView.getLeftProgress());
                        if (progress > 1.0f) {
                            progress = 1.0f;
                        }
                        PhotoViewer.this.videoPlayerSeekbar.setProgress(progress);
                    }
                    PhotoViewer.this.videoPlayerSeekbarView.invalidate();
                    if (PhotoViewer.this.shouldSavePositionForCurrentVideo != null) {
                        float value = progress;
                        if (value >= 0.0f && SystemClock.elapsedRealtime() - PhotoViewer.this.lastSaveTime >= 1000) {
                            String access$3300 = PhotoViewer.this.shouldSavePositionForCurrentVideo;
                            long unused3 = PhotoViewer.this.lastSaveTime = SystemClock.elapsedRealtime();
                            Utilities.globalQueue.postRunnable(new PhotoViewer$5$$ExternalSyntheticLambda0(this, value));
                        }
                    }
                    PhotoViewer.this.updateVideoPlayerTime();
                } else if (!PhotoViewer.this.videoTimelineView.isDragging()) {
                    float progress4 = ((float) PhotoViewer.this.videoPlayer.getCurrentPosition()) / ((float) PhotoViewer.this.videoPlayer.getDuration());
                    if (PhotoViewer.this.shownControlsByEnd && !PhotoViewer.this.actionBarWasShownBeforeByEnd) {
                        progress4 = 0.0f;
                    }
                    if (PhotoViewer.this.inPreview || (PhotoViewer.this.currentEditMode == 0 && PhotoViewer.this.videoTimelineView.getVisibility() != 0)) {
                        if (PhotoViewer.this.sendPhotoType != 1) {
                            PhotoViewer.this.videoTimelineView.setProgress(progress4);
                        }
                    } else if (progress4 >= PhotoViewer.this.videoTimelineView.getRightProgress()) {
                        PhotoViewer.this.videoTimelineView.setProgress(PhotoViewer.this.videoTimelineView.getLeftProgress());
                        PhotoViewer.this.videoPlayer.seekTo((long) ((int) (PhotoViewer.this.videoTimelineView.getLeftProgress() * ((float) PhotoViewer.this.videoPlayer.getDuration()))));
                        boolean unused4 = PhotoViewer.this.manuallyPaused = false;
                        PhotoViewer.this.cancelVideoPlayRunnable();
                        if (PhotoViewer.this.muteVideo || PhotoViewer.this.sendPhotoType == 1 || PhotoViewer.this.currentEditMode != 0 || PhotoViewer.this.switchingToMode > 0) {
                            PhotoViewer.this.videoPlayer.play();
                        } else {
                            PhotoViewer.this.videoPlayer.pause();
                        }
                        PhotoViewer.this.containerView.invalidate();
                    } else {
                        PhotoViewer.this.videoTimelineView.setProgress(progress4);
                    }
                    PhotoViewer.this.updateVideoPlayerTime();
                }
            }
            if (PhotoViewer.this.firstFrameView != null) {
                PhotoViewer.this.firstFrameView.updateAlpha();
            }
            if (PhotoViewer.this.isPlaying) {
                AndroidUtilities.runOnUIThread(PhotoViewer.this.updateProgressRunnable, 17);
            }
        }

        /* renamed from: lambda$run$0$org-telegram-ui-PhotoViewer$5  reason: not valid java name */
        public /* synthetic */ void m4317lambda$run$0$orgtelegramuiPhotoViewer$5(float value) {
            ApplicationLoader.applicationContext.getSharedPreferences("media_saved_pos", 0).edit().putFloat(PhotoViewer.this.shouldSavePositionForCurrentVideo, value).commit();
        }
    };
    /* access modifiers changed from: private */
    public boolean useSmoothKeyboard;
    private VelocityTracker velocityTracker;
    /* access modifiers changed from: private */
    public TextView videoAvatarTooltip;
    /* access modifiers changed from: private */
    public boolean videoConvertSupported;
    private float videoCrossfadeAlpha;
    private long videoCrossfadeAlphaLastTime;
    private boolean videoCrossfadeStarted;
    private float videoCutEnd;
    private float videoCutStart;
    /* access modifiers changed from: private */
    public float videoDuration;
    /* access modifiers changed from: private */
    public VideoForwardDrawable videoForwardDrawable;
    private Bitmap videoFrameBitmap = null;
    private Paint videoFrameBitmapPaint = new Paint();
    /* access modifiers changed from: private */
    public int videoFramerate;
    /* access modifiers changed from: private */
    public long videoFramesSize;
    /* access modifiers changed from: private */
    public int videoHeight;
    /* access modifiers changed from: private */
    public Runnable videoPlayRunnable;
    /* access modifiers changed from: private */
    public VideoPlayer videoPlayer;
    private Animator videoPlayerControlAnimator;
    /* access modifiers changed from: private */
    public VideoPlayerControlFrameLayout videoPlayerControlFrameLayout;
    /* access modifiers changed from: private */
    public boolean videoPlayerControlVisible = true;
    /* access modifiers changed from: private */
    public int[] videoPlayerCurrentTime = new int[2];
    VideoPlayerRewinder videoPlayerRewinder = new VideoPlayerRewinder() {
        /* access modifiers changed from: protected */
        public void onRewindCanceled() {
            boolean unused = PhotoViewer.this.onTouchEvent(MotionEvent.obtain(0, 0, 3, 0.0f, 0.0f, 0));
            PhotoViewer.this.videoForwardDrawable.setShowing(false);
            PipVideoOverlay.onRewindCanceled();
        }

        /* access modifiers changed from: protected */
        public void updateRewindProgressUi(long timeDiff, float progress, boolean rewindByBackSeek) {
            PhotoViewer.this.videoForwardDrawable.setTime(Math.abs(timeDiff));
            if (rewindByBackSeek) {
                PhotoViewer.this.videoPlayerSeekbar.setProgress(progress);
                PhotoViewer.this.videoPlayerSeekbarView.invalidate();
            }
            PipVideoOverlay.onUpdateRewindProgressUi(timeDiff, progress, rewindByBackSeek);
        }

        /* access modifiers changed from: protected */
        public void onRewindStart(boolean rewindForward) {
            PhotoViewer.this.videoForwardDrawable.setOneShootAnimation(false);
            PhotoViewer.this.videoForwardDrawable.setLeftSide(!rewindForward);
            PhotoViewer.this.videoForwardDrawable.setShowing(true);
            PhotoViewer.this.containerView.invalidate();
            PipVideoOverlay.onRewindStart(rewindForward);
        }
    };
    /* access modifiers changed from: private */
    public VideoPlayerSeekBar videoPlayerSeekbar;
    /* access modifiers changed from: private */
    public View videoPlayerSeekbarView;
    /* access modifiers changed from: private */
    public SimpleTextView videoPlayerTime;
    /* access modifiers changed from: private */
    public int[] videoPlayerTotalTime = new int[2];
    /* access modifiers changed from: private */
    public VideoSeekPreviewImage videoPreviewFrame;
    /* access modifiers changed from: private */
    public AnimatorSet videoPreviewFrameAnimation;
    private MessageObject videoPreviewMessageObject;
    /* access modifiers changed from: private */
    public boolean videoSizeSet;
    /* access modifiers changed from: private */
    public TextureView videoTextureView;
    private ObjectAnimator videoTimelineAnimator;
    /* access modifiers changed from: private */
    public VideoTimelinePlayView videoTimelineView;
    /* access modifiers changed from: private */
    public int videoWidth;
    private AlertDialog visibleDialog;
    private int waitingForDraw;
    /* access modifiers changed from: private */
    public int waitingForFirstTextureUpload;
    /* access modifiers changed from: private */
    public boolean wasLayout;
    /* access modifiers changed from: private */
    public boolean wasRotated;
    /* access modifiers changed from: private */
    public WindowManager.LayoutParams windowLayoutParams;
    /* access modifiers changed from: private */
    public FrameLayout windowView;
    /* access modifiers changed from: private */
    public boolean zoomAnimation;
    private boolean zooming;

    public interface PageBlocksAdapter {
        TLRPC.PageBlock get(int i);

        List<TLRPC.PageBlock> getAll();

        CharSequence getCaption(int i);

        File getFile(int i);

        TLRPC.PhotoSize getFileLocation(TLObject tLObject, int[] iArr);

        String getFileName(int i);

        int getItemsCount();

        TLObject getMedia(int i);

        Object getParentObject();

        boolean isVideo(int i);

        void updateSlideshowCell(TLRPC.PageBlock pageBlock);
    }

    public interface PhotoViewerProvider {
        boolean allowCaption();

        boolean allowSendingSubmenu();

        boolean canCaptureMorePhotos();

        boolean canReplace(int i);

        boolean canScrollAway();

        boolean cancelButtonPressed();

        boolean closeKeyboard();

        void deleteImageAtIndex(int i);

        String getDeleteMessageString();

        MessageObject getEditingMessageObject();

        int getPhotoIndex(int i);

        PlaceProviderObject getPlaceForPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation, int i, boolean z);

        int getSelectedCount();

        HashMap<Object, Object> getSelectedPhotos();

        ArrayList<Object> getSelectedPhotosOrder();

        CharSequence getSubtitleFor(int i);

        ImageReceiver.BitmapHolder getThumbForPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation, int i);

        CharSequence getTitleFor(int i);

        int getTotalImageCount();

        boolean isPhotoChecked(int i);

        boolean loadMore();

        void needAddMorePhotos();

        void onApplyCaption(CharSequence charSequence);

        void onCaptionChanged(CharSequence charSequence);

        void onClose();

        void onOpen();

        void openPhotoForEdit(String str, String str2, boolean z);

        void replaceButtonPressed(int i, VideoEditedInfo videoEditedInfo);

        boolean scaleToFill();

        void sendButtonPressed(int i, VideoEditedInfo videoEditedInfo, boolean z, int i2, boolean z2);

        int setPhotoChecked(int i, VideoEditedInfo videoEditedInfo);

        int setPhotoUnchecked(Object obj);

        void updatePhotoAtIndex(int i);

        boolean validateGroupId(long j);

        void willHidePhotoViewer();

        void willSwitchFromPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation, int i);
    }

    public static class PlaceProviderObject {
        public boolean allowTakeAnimation = true;
        public ClippingImageView animatingImageView;
        public int animatingImageViewYOffset;
        public boolean canEdit;
        public int clipBottomAddition;
        public int clipTopAddition;
        public long dialogId;
        public ImageReceiver imageReceiver;
        public int index;
        public boolean isEvent;
        public View parentView;
        public int[] radius;
        public float scale = 1.0f;
        public long size;
        public int starOffset;
        public ImageReceiver.BitmapHolder thumb;
        public int viewX;
        public int viewY;
        public int viewY2;
    }

    /* renamed from: lambda$new$0$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4249lambda$new$0$orgtelegramuiPhotoViewer() {
        toggleMiniProgressInternal(true);
    }

    public void addPhoto(MessageObject message, int classGuid2) {
        if (classGuid2 == this.classGuid) {
            if (this.imagesByIds[0].indexOfKey(message.getId()) < 0) {
                if (this.opennedFromMedia) {
                    this.imagesArr.add(message);
                } else {
                    this.imagesArr.add(0, message);
                }
                this.imagesByIds[0].put(message.getId(), message);
            }
            this.endReached[0] = this.imagesArr.size() == this.totalImagesCount;
            setImages();
        }
    }

    public int getClassGuid() {
        return this.classGuid;
    }

    public void setCaption(CharSequence caption) {
        this.hasCaptionForAllMedia = true;
        this.captionForAllMedia = caption;
        setCurrentCaption((MessageObject) null, caption, false);
        updateCaptionTextForCurrentPhoto((Object) null);
    }

    private static class SavedVideoPosition {
        public final float position;
        public final long timestamp;

        public SavedVideoPosition(float position2, long timestamp2) {
            this.position = position2;
            this.timestamp = timestamp2;
        }
    }

    /* access modifiers changed from: private */
    public void onLinkClick(ClickableSpan link, TextView widget) {
        if (widget == null || !(link instanceof URLSpan)) {
            link.onClick(widget);
            return;
        }
        String url = ((URLSpan) link).getURL();
        if (url.startsWith("video")) {
            if (this.videoPlayer != null && this.currentMessageObject != null) {
                int seconds = Utilities.parseInt((CharSequence) url).intValue();
                if (this.videoPlayer.getDuration() == -9223372036854775807L) {
                    this.seekToProgressPending = ((float) seconds) / ((float) this.currentMessageObject.getDuration());
                    return;
                }
                this.videoPlayer.seekTo(((long) seconds) * 1000);
                this.videoPlayerSeekbar.setProgress(((float) (((long) seconds) * 1000)) / ((float) this.videoPlayer.getDuration()), true);
                this.videoPlayerSeekbarView.invalidate();
            }
        } else if (url.startsWith("#")) {
            if (this.parentActivity instanceof LaunchActivity) {
                DialogsActivity fragment = new DialogsActivity((Bundle) null);
                fragment.setSearchString(url);
                ((LaunchActivity) this.parentActivity).presentFragment(fragment, false, true);
                closePhoto(false, false);
            }
        } else if (this.parentChatActivity == null || (!(link instanceof URLSpanReplacement) && !AndroidUtilities.shouldShowUrlInAlert(url))) {
            link.onClick(widget);
        } else {
            AlertsCreator.showOpenUrlAlert(this.parentChatActivity, url, true, true);
        }
    }

    /* access modifiers changed from: private */
    public void onLinkLongPress(URLSpan link, TextView widget, Runnable onDismiss) {
        int timestamp = -1;
        BottomSheet.Builder builder = new BottomSheet.Builder(this.parentActivity, false, this.resourcesProvider, -14933463);
        if (link.getURL().startsWith("video?")) {
            try {
                timestamp = Integer.parseInt(link.getURL().substring(link.getURL().indexOf(63) + 1));
            } catch (Throwable th) {
            }
        }
        if (timestamp >= 0) {
            builder.setTitle(AndroidUtilities.formatDuration(timestamp, false));
        } else {
            builder.setTitle(link.getURL());
        }
        builder.setItems(new CharSequence[]{LocaleController.getString("Open", NUM), LocaleController.getString("Copy", NUM)}, new PhotoViewer$$ExternalSyntheticLambda80(this, link, widget, timestamp));
        builder.setOnPreDismissListener(new PhotoViewer$$ExternalSyntheticLambda1(onDismiss));
        BottomSheet bottomSheet = builder.create();
        bottomSheet.scrollNavBar = true;
        bottomSheet.show();
        try {
            this.containerView.performHapticFeedback(0, 2);
        } catch (Exception e) {
        }
        bottomSheet.setItemColor(0, -1, -1);
        bottomSheet.setItemColor(1, -1, -1);
        bottomSheet.setBackgroundColor(-14933463);
        bottomSheet.setTitleColor(-7697782);
        bottomSheet.setCalcMandatoryInsets(true);
        AndroidUtilities.setNavigationBarColor(bottomSheet.getWindow(), -14933463, false);
        AndroidUtilities.setLightNavigationBar(bottomSheet.getWindow(), false);
        bottomSheet.scrollNavBar = true;
    }

    /* renamed from: lambda$onLinkLongPress$1$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4253lambda$onLinkLongPress$1$orgtelegramuiPhotoViewer(URLSpan link, TextView widget, int finalTimestamp, DialogInterface dialog, int which) {
        String bulletinMessage;
        MessageObject messageObject;
        int i = finalTimestamp;
        int i2 = which;
        if (i2 == 0) {
            onLinkClick(link, widget);
            return;
        }
        boolean isMedia = true;
        if (i2 == 1) {
            String url1 = link.getURL();
            boolean tel = false;
            if (url1.startsWith("mailto:")) {
                url1 = url1.substring(7);
            } else if (url1.startsWith("tel:")) {
                url1 = url1.substring(4);
                tel = true;
            } else if (i >= 0 && (messageObject = this.currentMessageObject) != null && !messageObject.scheduled) {
                MessageObject messageObject1 = this.currentMessageObject;
                if (!this.currentMessageObject.isVideo() && !this.currentMessageObject.isRoundVideo() && !this.currentMessageObject.isVoice() && !this.currentMessageObject.isMusic()) {
                    isMedia = false;
                }
                if (!isMedia && this.currentMessageObject.replyMessageObject != null) {
                    messageObject1 = this.currentMessageObject.replyMessageObject;
                }
                long dialogId = messageObject1.getDialogId();
                int messageId = messageObject1.getId();
                if (messageObject1.messageOwner.fwd_from != null) {
                    if (messageObject1.messageOwner.fwd_from.saved_from_peer != null) {
                        dialogId = MessageObject.getPeerId(messageObject1.messageOwner.fwd_from.saved_from_peer);
                        messageId = messageObject1.messageOwner.fwd_from.saved_from_msg_id;
                    } else if (messageObject1.messageOwner.fwd_from.from_id != null) {
                        dialogId = MessageObject.getPeerId(messageObject1.messageOwner.fwd_from.from_id);
                        messageId = messageObject1.messageOwner.fwd_from.channel_post;
                    }
                }
                if (DialogObject.isChatDialog(dialogId)) {
                    TLRPC.Chat currentChat = MessagesController.getInstance(this.currentAccount).getChat(Long.valueOf(-dialogId));
                    if (!(currentChat == null || currentChat.username == null)) {
                        url1 = "https://t.me/" + currentChat.username + "/" + messageId + "?t=" + i;
                    }
                } else {
                    TLRPC.User user = MessagesController.getInstance(this.currentAccount).getUser(Long.valueOf(dialogId));
                    if (!(user == null || user.username == null)) {
                        url1 = "https://t.me/" + user.username + "/" + messageId + "?t=" + i;
                    }
                }
            }
            AndroidUtilities.addToClipboard(url1);
            if (tel) {
                bulletinMessage = LocaleController.getString("PhoneCopied", NUM);
            } else if (url1.startsWith("#")) {
                bulletinMessage = LocaleController.getString("HashtagCopied", NUM);
            } else if (url1.startsWith("@")) {
                bulletinMessage = LocaleController.getString("UsernameCopied", NUM);
            } else {
                bulletinMessage = LocaleController.getString("LinkCopied", NUM);
            }
            if (Build.VERSION.SDK_INT < 31) {
                BulletinFactory.of(this.containerView, this.resourcesProvider).createSimpleBulletin(NUM, bulletinMessage).show();
            }
        }
    }

    /* access modifiers changed from: private */
    public void cancelFlashAnimations() {
        View view = this.flashView;
        if (view != null) {
            view.animate().setListener((Animator.AnimatorListener) null).cancel();
            this.flashView.setAlpha(0.0f);
        }
        AnimatorSet animatorSet = this.flashAnimator;
        if (animatorSet != null) {
            animatorSet.cancel();
            this.flashAnimator = null;
        }
        PhotoCropView photoCropView2 = this.photoCropView;
        if (photoCropView2 != null) {
            photoCropView2.cancelThumbAnimation();
        }
    }

    /* access modifiers changed from: private */
    public void cancelVideoPlayRunnable() {
        Runnable runnable = this.videoPlayRunnable;
        if (runnable != null) {
            AndroidUtilities.cancelRunOnUIThread(runnable);
            this.videoPlayRunnable = null;
        }
    }

    /* renamed from: lambda$new$3$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4250lambda$new$3$orgtelegramuiPhotoViewer() {
        if (this.isVisible && this.animationInProgress == 0) {
            updateContainerFlags(this.isActionBarVisible);
        }
    }

    private static class EditState {
        public long averageDuration;
        public MediaController.CropState cropState;
        public ArrayList<VideoEditedInfo.MediaEntity> croppedMediaEntities;
        public String croppedPaintPath;
        public ArrayList<VideoEditedInfo.MediaEntity> mediaEntities;
        public String paintPath;
        public MediaController.SavedFilterState savedFilterState;

        private EditState() {
        }

        public void reset() {
            this.paintPath = null;
            this.cropState = null;
            this.savedFilterState = null;
            this.mediaEntities = null;
            this.croppedPaintPath = null;
            this.croppedMediaEntities = null;
            this.averageDuration = 0;
        }
    }

    private class SavedState {
        private int index;
        private ArrayList<MessageObject> messages;
        private PhotoViewerProvider provider;

        public SavedState(int index2, ArrayList<MessageObject> messages2, PhotoViewerProvider provider2) {
            this.messages = messages2;
            this.index = index2;
            this.provider = provider2;
        }

        public void restore() {
            PhotoViewerProvider unused = PhotoViewer.this.placeProvider = this.provider;
            if (Build.VERSION.SDK_INT >= 21) {
                PhotoViewer.this.windowLayoutParams.flags = -NUM;
            } else {
                PhotoViewer.this.windowLayoutParams.flags = 131072;
            }
            PhotoViewer.this.windowLayoutParams.softInputMode = (PhotoViewer.this.useSmoothKeyboard ? 32 : 16) | 256;
            PhotoViewer.this.windowView.setFocusable(false);
            PhotoViewer.this.containerView.setFocusable(false);
            PhotoViewer.this.backgroundDrawable.setAlpha(255);
            PhotoViewer.this.containerView.setAlpha(1.0f);
            PhotoViewer photoViewer = PhotoViewer.this;
            ArrayList<MessageObject> arrayList = this.messages;
            int i = this.index;
            photoViewer.onPhotoShow((MessageObject) null, (TLRPC.FileLocation) null, (ImageLocation) null, (ImageLocation) null, arrayList, (ArrayList<SecureDocument>) null, (List<Object>) null, i, this.provider.getPlaceForPhoto(arrayList.get(i), (TLRPC.FileLocation) null, this.index, true));
        }
    }

    private class BackgroundDrawable extends ColorDrawable {
        private boolean allowDrawContent;
        /* access modifiers changed from: private */
        public Runnable drawRunnable;
        private final Paint paint;
        private final RectF rect = new RectF();
        private final RectF visibleRect = new RectF();

        public BackgroundDrawable(int color) {
            super(color);
            Paint paint2 = new Paint(1);
            this.paint = paint2;
            paint2.setColor(color);
        }

        public void setAlpha(int alpha) {
            if (PhotoViewer.this.parentActivity instanceof LaunchActivity) {
                this.allowDrawContent = !PhotoViewer.this.isVisible || alpha != 255;
                ((LaunchActivity) PhotoViewer.this.parentActivity).drawerLayoutContainer.setAllowDrawContent(this.allowDrawContent);
                if (PhotoViewer.this.parentAlert != null) {
                    if (!this.allowDrawContent) {
                        AndroidUtilities.runOnUIThread(new PhotoViewer$BackgroundDrawable$$ExternalSyntheticLambda0(this), 50);
                    } else {
                        PhotoViewer.this.parentAlert.setAllowDrawContent(true);
                    }
                }
            }
            super.setAlpha(alpha);
            this.paint.setAlpha(alpha);
        }

        /* renamed from: lambda$setAlpha$0$org-telegram-ui-PhotoViewer$BackgroundDrawable  reason: not valid java name */
        public /* synthetic */ void m4334lambda$setAlpha$0$orgtelegramuiPhotoViewer$BackgroundDrawable() {
            if (PhotoViewer.this.parentAlert != null) {
                PhotoViewer.this.parentAlert.setAllowDrawContent(this.allowDrawContent);
            }
        }

        public void draw(Canvas canvas) {
            Runnable runnable;
            if (PhotoViewer.this.animationInProgress == 0 || AndroidUtilities.isTablet() || PhotoViewer.this.currentPlaceObject == null || PhotoViewer.this.currentPlaceObject.animatingImageView == null) {
                super.draw(canvas);
            } else {
                PhotoViewer.this.animatingImageView.getClippedVisibleRect(this.visibleRect);
                if (!this.visibleRect.isEmpty()) {
                    this.visibleRect.inset((float) AndroidUtilities.dp(1.0f), (float) AndroidUtilities.dp(1.0f));
                    Rect boundsRect = getBounds();
                    float width = (float) boundsRect.right;
                    float height = (float) boundsRect.bottom;
                    for (int i = 0; i < 4; i++) {
                        switch (i) {
                            case 0:
                                this.rect.set(0.0f, this.visibleRect.top, this.visibleRect.left, this.visibleRect.bottom);
                                break;
                            case 1:
                                this.rect.set(0.0f, 0.0f, width, this.visibleRect.top);
                                break;
                            case 2:
                                this.rect.set(this.visibleRect.right, this.visibleRect.top, width, this.visibleRect.bottom);
                                break;
                            case 3:
                                this.rect.set(0.0f, this.visibleRect.bottom, width, height);
                                break;
                        }
                        canvas.drawRect(this.rect, this.paint);
                    }
                }
            }
            if (getAlpha() != 0 && (runnable = this.drawRunnable) != null) {
                AndroidUtilities.runOnUIThread(runnable);
                this.drawRunnable = null;
            }
        }
    }

    private static class SelectedPhotosListView extends RecyclerListView {
        private Drawable arrowDrawable;
        private Paint paint = new Paint(1);
        private RectF rect = new RectF();

        public SelectedPhotosListView(Context context) {
            super(context);
            setWillNotDraw(false);
            setClipToPadding(false);
            setTranslationY((float) (-AndroidUtilities.dp(10.0f)));
            DefaultItemAnimator r1 = new DefaultItemAnimator() {
                /* access modifiers changed from: protected */
                public void onMoveAnimationUpdate(RecyclerView.ViewHolder holder) {
                    SelectedPhotosListView.this.invalidate();
                }
            };
            DefaultItemAnimator defaultItemAnimator = r1;
            setItemAnimator(r1);
            defaultItemAnimator.setDelayAnimations(false);
            defaultItemAnimator.setSupportsChangeAnimations(false);
            setPadding(AndroidUtilities.dp(12.0f), AndroidUtilities.dp(12.0f), AndroidUtilities.dp(12.0f), AndroidUtilities.dp(6.0f));
            this.paint.setColor(NUM);
            this.arrowDrawable = context.getResources().getDrawable(NUM).mutate();
        }

        public void onDraw(Canvas c) {
            super.onDraw(c);
            int count = getChildCount();
            if (count > 0) {
                int x = getMeasuredWidth() - AndroidUtilities.dp(87.0f);
                Drawable drawable = this.arrowDrawable;
                drawable.setBounds(x, 0, drawable.getIntrinsicWidth() + x, AndroidUtilities.dp(6.0f));
                this.arrowDrawable.draw(c);
                int minX = Integer.MAX_VALUE;
                int maxX = Integer.MIN_VALUE;
                for (int a = 0; a < count; a++) {
                    View v = getChildAt(a);
                    minX = (int) Math.min((double) minX, Math.floor((double) v.getX()));
                    maxX = (int) Math.max((double) maxX, Math.ceil((double) (v.getX() + ((float) v.getMeasuredWidth()))));
                }
                if (minX != Integer.MAX_VALUE && maxX != Integer.MIN_VALUE) {
                    this.rect.set((float) (minX - AndroidUtilities.dp(6.0f)), (float) AndroidUtilities.dp(6.0f), (float) (AndroidUtilities.dp(6.0f) + maxX), (float) AndroidUtilities.dp(103.0f));
                    c.drawRoundRect(this.rect, (float) AndroidUtilities.dp(8.0f), (float) AndroidUtilities.dp(8.0f), this.paint);
                }
            }
        }
    }

    private static class CounterView extends View {
        private int currentCount = 0;
        private int height;
        private Paint paint;
        private RectF rect;
        private float rotation;
        private StaticLayout staticLayout;
        private TextPaint textPaint;
        private int width;

        public CounterView(Context context) {
            super(context);
            TextPaint textPaint2 = new TextPaint(1);
            this.textPaint = textPaint2;
            textPaint2.setTextSize((float) AndroidUtilities.dp(15.0f));
            this.textPaint.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
            this.textPaint.setColor(-1);
            Paint paint2 = new Paint(1);
            this.paint = paint2;
            paint2.setColor(-1);
            this.paint.setStrokeWidth((float) AndroidUtilities.dp(2.0f));
            this.paint.setStyle(Paint.Style.STROKE);
            this.paint.setStrokeJoin(Paint.Join.ROUND);
            this.rect = new RectF();
            setCount(0);
        }

        public void setScaleX(float scaleX) {
            super.setScaleX(scaleX);
            invalidate();
        }

        public void setRotationX(float rotationX) {
            this.rotation = rotationX;
            invalidate();
        }

        public float getRotationX() {
            return this.rotation;
        }

        public void setCount(int value) {
            StaticLayout staticLayout2 = new StaticLayout("" + Math.max(1, value), this.textPaint, AndroidUtilities.dp(100.0f), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
            this.staticLayout = staticLayout2;
            this.width = (int) Math.ceil((double) staticLayout2.getLineWidth(0));
            this.height = this.staticLayout.getLineBottom(0);
            AnimatorSet animatorSet = new AnimatorSet();
            if (value == 0) {
                animatorSet.playTogether(new Animator[]{ObjectAnimator.ofFloat(this, View.SCALE_X, new float[]{0.0f}), ObjectAnimator.ofFloat(this, View.SCALE_Y, new float[]{0.0f}), ObjectAnimator.ofInt(this.paint, AnimationProperties.PAINT_ALPHA, new int[]{0}), ObjectAnimator.ofInt(this.textPaint, AnimationProperties.PAINT_ALPHA, new int[]{0})});
                animatorSet.setInterpolator(new DecelerateInterpolator());
            } else {
                int i = this.currentCount;
                if (i == 0) {
                    animatorSet.playTogether(new Animator[]{ObjectAnimator.ofFloat(this, View.SCALE_X, new float[]{0.0f, 1.0f}), ObjectAnimator.ofFloat(this, View.SCALE_Y, new float[]{0.0f, 1.0f}), ObjectAnimator.ofInt(this.paint, AnimationProperties.PAINT_ALPHA, new int[]{0, 255}), ObjectAnimator.ofInt(this.textPaint, AnimationProperties.PAINT_ALPHA, new int[]{0, 255})});
                    animatorSet.setInterpolator(new DecelerateInterpolator());
                } else if (value < i) {
                    animatorSet.playTogether(new Animator[]{ObjectAnimator.ofFloat(this, View.SCALE_X, new float[]{1.1f, 1.0f}), ObjectAnimator.ofFloat(this, View.SCALE_Y, new float[]{1.1f, 1.0f})});
                    animatorSet.setInterpolator(new OvershootInterpolator());
                } else {
                    animatorSet.playTogether(new Animator[]{ObjectAnimator.ofFloat(this, View.SCALE_X, new float[]{0.9f, 1.0f}), ObjectAnimator.ofFloat(this, View.SCALE_Y, new float[]{0.9f, 1.0f})});
                    animatorSet.setInterpolator(new OvershootInterpolator());
                }
            }
            animatorSet.setDuration(180);
            animatorSet.start();
            requestLayout();
            this.currentCount = value;
        }

        /* access modifiers changed from: protected */
        public void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
            super.onMeasure(View.MeasureSpec.makeMeasureSpec(Math.max(this.width + AndroidUtilities.dp(20.0f), AndroidUtilities.dp(30.0f)), NUM), View.MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(40.0f), NUM));
        }

        /* access modifiers changed from: protected */
        public void onDraw(Canvas canvas) {
            int cy = getMeasuredHeight() / 2;
            this.paint.setAlpha(255);
            this.rect.set((float) AndroidUtilities.dp(1.0f), (float) (cy - AndroidUtilities.dp(14.0f)), (float) (getMeasuredWidth() - AndroidUtilities.dp(1.0f)), (float) (AndroidUtilities.dp(14.0f) + cy));
            canvas.drawRoundRect(this.rect, (float) AndroidUtilities.dp(15.0f), (float) AndroidUtilities.dp(15.0f), this.paint);
            if (this.staticLayout != null) {
                this.textPaint.setAlpha((int) ((1.0f - this.rotation) * 255.0f));
                canvas.save();
                canvas.translate((float) ((getMeasuredWidth() - this.width) / 2), ((float) ((getMeasuredHeight() - this.height) / 2)) + AndroidUtilities.dpf2(0.2f) + (this.rotation * ((float) AndroidUtilities.dp(5.0f))));
                this.staticLayout.draw(canvas);
                canvas.restore();
                this.paint.setAlpha((int) (this.rotation * 255.0f));
                int cx = (int) this.rect.centerX();
                int cy2 = (int) (((float) ((int) this.rect.centerY())) - (((float) AndroidUtilities.dp(5.0f)) * (1.0f - this.rotation)));
                Canvas canvas2 = canvas;
                canvas2.drawLine((float) (AndroidUtilities.dp(5.0f) + cx), (float) (cy2 - AndroidUtilities.dp(5.0f)), (float) (cx - AndroidUtilities.dp(5.0f)), (float) (AndroidUtilities.dp(5.0f) + cy2), this.paint);
                canvas2.drawLine((float) (cx - AndroidUtilities.dp(5.0f)), (float) (cy2 - AndroidUtilities.dp(5.0f)), (float) (AndroidUtilities.dp(5.0f) + cx), (float) (AndroidUtilities.dp(5.0f) + cy2), this.paint);
            }
        }
    }

    private class PhotoProgressView {
        private float[] alphas = new float[3];
        /* access modifiers changed from: private */
        public float[] animAlphas = new float[3];
        private float animatedAlphaValue = 1.0f;
        private float animatedProgressValue = 0.0f;
        private float animationProgressStart = 0.0f;
        /* access modifiers changed from: private */
        public int backgroundState = -1;
        private float currentProgress = 0.0f;
        private long currentProgressTime = 0;
        private long lastUpdateTime = 0;
        private View parent;
        private final CombinedDrawable playDrawable;
        private final PlayPauseDrawable playPauseDrawable;
        /* access modifiers changed from: private */
        public int previousBackgroundState = -2;
        private RectF progressRect = new RectF();
        private float radOffset = 0.0f;
        private float scale = 1.0f;
        /* access modifiers changed from: private */
        public int size = AndroidUtilities.dp(64.0f);
        private boolean visible;

        public PhotoProgressView(View parentView) {
            if (PhotoViewer.decelerateInterpolator == null) {
                DecelerateInterpolator unused = PhotoViewer.decelerateInterpolator = new DecelerateInterpolator(1.5f);
                Paint unused2 = PhotoViewer.progressPaint = new Paint(1);
                PhotoViewer.progressPaint.setStyle(Paint.Style.STROKE);
                PhotoViewer.progressPaint.setStrokeCap(Paint.Cap.ROUND);
                PhotoViewer.progressPaint.setStrokeWidth((float) AndroidUtilities.dp(3.0f));
                PhotoViewer.progressPaint.setColor(-1);
            }
            this.parent = parentView;
            resetAlphas();
            PlayPauseDrawable playPauseDrawable2 = new PlayPauseDrawable(28);
            this.playPauseDrawable = playPauseDrawable2;
            playPauseDrawable2.setDuration(200);
            this.playDrawable = new CombinedDrawable(ContextCompat.getDrawable(PhotoViewer.this.parentActivity, NUM).mutate(), playPauseDrawable2);
        }

        private void updateAnimation(boolean withProgressAnimation) {
            long newTime = System.currentTimeMillis();
            long dt = newTime - this.lastUpdateTime;
            if (dt > 18) {
                dt = 18;
            }
            this.lastUpdateTime = newTime;
            boolean postInvalidate = false;
            if (withProgressAnimation) {
                if (!(this.animatedProgressValue == 1.0f && this.currentProgress == 1.0f)) {
                    this.radOffset += ((float) (360 * dt)) / 3000.0f;
                    float progressDiff = this.currentProgress - this.animationProgressStart;
                    if (Math.abs(progressDiff) > 0.0f) {
                        long j = this.currentProgressTime + dt;
                        this.currentProgressTime = j;
                        if (j >= 300) {
                            float f = this.currentProgress;
                            this.animatedProgressValue = f;
                            this.animationProgressStart = f;
                            this.currentProgressTime = 0;
                        } else {
                            this.animatedProgressValue = this.animationProgressStart + (PhotoViewer.decelerateInterpolator.getInterpolation(((float) this.currentProgressTime) / 300.0f) * progressDiff);
                        }
                    }
                    postInvalidate = true;
                }
                float progressDiff2 = this.animatedAlphaValue;
                if (progressDiff2 > 0.0f && this.previousBackgroundState != -2) {
                    float f2 = progressDiff2 - (((float) dt) / 200.0f);
                    this.animatedAlphaValue = f2;
                    if (f2 <= 0.0f) {
                        this.animatedAlphaValue = 0.0f;
                        this.previousBackgroundState = -2;
                    }
                    postInvalidate = true;
                }
            }
            int i = 0;
            while (true) {
                float[] fArr = this.alphas;
                if (i >= fArr.length) {
                    break;
                }
                float f3 = fArr[i];
                float[] fArr2 = this.animAlphas;
                if (f3 > fArr2[i]) {
                    fArr2[i] = Math.min(1.0f, fArr2[i] + (((float) dt) / 200.0f));
                    postInvalidate = true;
                } else if (fArr[i] < fArr2[i]) {
                    fArr2[i] = Math.max(0.0f, fArr2[i] - (((float) dt) / 200.0f));
                    postInvalidate = true;
                }
                i++;
            }
            if (postInvalidate) {
                this.parent.postInvalidateOnAnimation();
            }
        }

        public void setProgress(float value, boolean animated) {
            if (!animated) {
                this.animatedProgressValue = value;
                this.animationProgressStart = value;
            } else {
                this.animationProgressStart = this.animatedProgressValue;
            }
            this.currentProgress = value;
            this.currentProgressTime = 0;
            this.parent.invalidate();
        }

        public void setBackgroundState(int state, boolean animated, boolean animateIcon) {
            int i;
            int i2 = this.backgroundState;
            if (i2 != state) {
                PlayPauseDrawable playPauseDrawable2 = this.playPauseDrawable;
                if (playPauseDrawable2 != null) {
                    boolean animatePlayPause = animateIcon && (i2 == 3 || i2 == 4);
                    if (state == 3) {
                        playPauseDrawable2.setPause(false, animatePlayPause);
                    } else if (state == 4) {
                        playPauseDrawable2.setPause(true, animatePlayPause);
                    }
                    this.playPauseDrawable.setParent(this.parent);
                    this.playPauseDrawable.invalidateSelf();
                }
                this.lastUpdateTime = System.currentTimeMillis();
                if (!animated || (i = this.backgroundState) == state) {
                    this.previousBackgroundState = -2;
                } else {
                    this.previousBackgroundState = i;
                    this.animatedAlphaValue = 1.0f;
                }
                this.backgroundState = state;
                onBackgroundStateUpdated(state);
                this.parent.invalidate();
            }
        }

        /* access modifiers changed from: protected */
        public void onBackgroundStateUpdated(int state) {
        }

        public void setAlpha(float value) {
            setIndexedAlpha(0, value, false);
        }

        public void setScale(float value) {
            this.scale = value;
        }

        public void setIndexedAlpha(int index, float alpha, boolean animated) {
            float[] fArr = this.alphas;
            if (fArr[index] != alpha) {
                fArr[index] = alpha;
                if (!animated) {
                    this.animAlphas[index] = alpha;
                }
                checkVisibility();
                this.parent.invalidate();
            }
        }

        public void resetAlphas() {
            int i = 0;
            while (true) {
                float[] fArr = this.alphas;
                if (i < fArr.length) {
                    this.animAlphas[i] = 1.0f;
                    fArr[i] = 1.0f;
                    i++;
                } else {
                    checkVisibility();
                    return;
                }
            }
        }

        private float calculateAlpha() {
            float f;
            float alpha = 1.0f;
            int i = 0;
            while (true) {
                float[] fArr = this.animAlphas;
                if (i >= fArr.length) {
                    return alpha;
                }
                if (i == 2) {
                    f = AndroidUtilities.accelerateInterpolator.getInterpolation(this.animAlphas[i]);
                } else {
                    f = fArr[i];
                }
                alpha *= f;
                i++;
            }
        }

        private void checkVisibility() {
            boolean newVisible = true;
            int i = 0;
            while (true) {
                float[] fArr = this.alphas;
                if (i >= fArr.length) {
                    break;
                } else if (fArr[i] != 1.0f) {
                    newVisible = false;
                    break;
                } else {
                    i++;
                }
            }
            if (newVisible != this.visible) {
                this.visible = newVisible;
                onVisibilityChanged(newVisible);
            }
        }

        /* access modifiers changed from: protected */
        public void onVisibilityChanged(boolean visible2) {
        }

        public boolean isVisible() {
            return this.visible;
        }

        public int getX() {
            return (PhotoViewer.this.containerView.getWidth() - ((int) (((float) this.size) * this.scale))) / 2;
        }

        public int getY() {
            int y = (int) (((float) (((AndroidUtilities.displaySize.y + (PhotoViewer.this.isStatusBarVisible() ? AndroidUtilities.statusBarHeight : 0)) - ((int) (((float) this.size) * this.scale))) / 2)) + PhotoViewer.this.currentPanTranslationY);
            if (PhotoViewer.this.sendPhotoType == 1) {
                return y - AndroidUtilities.dp(38.0f);
            }
            return y;
        }

        public void onDraw(Canvas canvas) {
            int i;
            Drawable drawable;
            Drawable drawable2;
            int sizeScaled = (int) (((float) this.size) * this.scale);
            int x = getX();
            int y = getY();
            float alpha = calculateAlpha();
            int i2 = this.previousBackgroundState;
            if (i2 >= 0 && i2 < PhotoViewer.progressDrawables.length + 2) {
                if (this.previousBackgroundState < PhotoViewer.progressDrawables.length) {
                    drawable2 = PhotoViewer.progressDrawables[this.previousBackgroundState];
                } else {
                    drawable2 = this.playDrawable;
                }
                if (drawable2 != null) {
                    drawable2.setAlpha((int) (this.animatedAlphaValue * 255.0f * alpha));
                    drawable2.setBounds(x, y, x + sizeScaled, y + sizeScaled);
                    drawable2.draw(canvas);
                }
            }
            int i3 = this.backgroundState;
            if (i3 >= 0 && i3 < PhotoViewer.progressDrawables.length + 2) {
                if (this.backgroundState < PhotoViewer.progressDrawables.length) {
                    drawable = PhotoViewer.progressDrawables[this.backgroundState];
                } else {
                    drawable = this.playDrawable;
                }
                if (drawable != null) {
                    if (this.previousBackgroundState != -2) {
                        drawable.setAlpha((int) ((1.0f - this.animatedAlphaValue) * 255.0f * alpha));
                    } else {
                        drawable.setAlpha((int) (alpha * 255.0f));
                    }
                    drawable.setBounds(x, y, x + sizeScaled, y + sizeScaled);
                    drawable.draw(canvas);
                }
            }
            int i4 = this.backgroundState;
            if (i4 == 0 || i4 == 1 || (i = this.previousBackgroundState) == 0 || i == 1) {
                int diff = AndroidUtilities.dp(4.0f);
                if (this.previousBackgroundState != -2) {
                    PhotoViewer.progressPaint.setAlpha((int) (this.animatedAlphaValue * 255.0f * alpha));
                } else {
                    PhotoViewer.progressPaint.setAlpha((int) (255.0f * alpha));
                }
                this.progressRect.set((float) (x + diff), (float) (y + diff), (float) ((x + sizeScaled) - diff), (float) ((y + sizeScaled) - diff));
                canvas.drawArc(this.progressRect, -90.0f + this.radOffset, Math.max(4.0f, this.animatedProgressValue * 360.0f), false, PhotoViewer.progressPaint);
                updateAnimation(true);
                return;
            }
            updateAnimation(false);
        }
    }

    public static class EmptyPhotoViewerProvider implements PhotoViewerProvider {
        public PlaceProviderObject getPlaceForPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation, int index, boolean needPreview) {
            return null;
        }

        public ImageReceiver.BitmapHolder getThumbForPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation, int index) {
            return null;
        }

        public void willSwitchFromPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation, int index) {
        }

        public void willHidePhotoViewer() {
        }

        public int setPhotoUnchecked(Object photoEntry) {
            return -1;
        }

        public boolean isPhotoChecked(int index) {
            return false;
        }

        public int setPhotoChecked(int index, VideoEditedInfo videoEditedInfo) {
            return -1;
        }

        public boolean cancelButtonPressed() {
            return true;
        }

        public void sendButtonPressed(int index, VideoEditedInfo videoEditedInfo, boolean notify, int scheduleDate, boolean forceDocument) {
        }

        public void replaceButtonPressed(int index, VideoEditedInfo videoEditedInfo) {
        }

        public boolean canReplace(int index) {
            return false;
        }

        public int getSelectedCount() {
            return 0;
        }

        public void updatePhotoAtIndex(int index) {
        }

        public boolean allowSendingSubmenu() {
            return true;
        }

        public boolean allowCaption() {
            return true;
        }

        public boolean scaleToFill() {
            return false;
        }

        public ArrayList<Object> getSelectedPhotosOrder() {
            return null;
        }

        public HashMap<Object, Object> getSelectedPhotos() {
            return null;
        }

        public boolean canScrollAway() {
            return true;
        }

        public void needAddMorePhotos() {
        }

        public int getPhotoIndex(int index) {
            return -1;
        }

        public void deleteImageAtIndex(int index) {
        }

        public String getDeleteMessageString() {
            return null;
        }

        public boolean canCaptureMorePhotos() {
            return true;
        }

        public void openPhotoForEdit(String file, String thumb, boolean isVideo) {
        }

        public int getTotalImageCount() {
            return -1;
        }

        public boolean loadMore() {
            return false;
        }

        public CharSequence getTitleFor(int i) {
            return null;
        }

        public CharSequence getSubtitleFor(int i) {
            return null;
        }

        public MessageObject getEditingMessageObject() {
            return null;
        }

        public void onCaptionChanged(CharSequence caption) {
        }

        public boolean closeKeyboard() {
            return false;
        }

        public boolean validateGroupId(long groupId) {
            return true;
        }

        public void onApplyCaption(CharSequence caption) {
        }

        public void onOpen() {
        }

        public void onClose() {
        }
    }

    private class FrameLayoutDrawer extends SizeNotifierFrameLayoutPhoto {
        AdjustPanLayoutHelper adjustPanLayoutHelper = new AdjustPanLayoutHelper(this, false) {
            /* access modifiers changed from: protected */
            public void onPanTranslationUpdate(float y, float progress, boolean keyboardVisible) {
                float unused = PhotoViewer.this.currentPanTranslationY = y;
                if (PhotoViewer.this.currentEditMode != 3) {
                    PhotoViewer.this.actionBar.setTranslationY(y);
                }
                if (PhotoViewer.this.miniProgressView != null) {
                    PhotoViewer.this.miniProgressView.setTranslationY(y);
                }
                if (PhotoViewer.this.progressView != null) {
                    PhotoViewer.this.progressView.setTranslationY(y);
                }
                if (PhotoViewer.this.checkImageView != null) {
                    PhotoViewer.this.checkImageView.setTranslationY(y);
                }
                if (PhotoViewer.this.photosCounterView != null) {
                    PhotoViewer.this.photosCounterView.setTranslationY(y);
                }
                if (PhotoViewer.this.selectedPhotosListView != null) {
                    PhotoViewer.this.selectedPhotosListView.setTranslationY(y);
                }
                if (PhotoViewer.this.aspectRatioFrameLayout != null) {
                    PhotoViewer.this.aspectRatioFrameLayout.setTranslationY(y);
                }
                if (PhotoViewer.this.textureImageView != null) {
                    PhotoViewer.this.textureImageView.setTranslationY(y);
                }
                if (PhotoViewer.this.photoCropView != null) {
                    PhotoViewer.this.photoCropView.setTranslationY(y);
                }
                if (PhotoViewer.this.photoFilterView != null) {
                    PhotoViewer.this.photoFilterView.setTranslationY(y);
                }
                if (PhotoViewer.this.pickerView != null) {
                    PhotoViewer.this.pickerView.setTranslationY(y);
                }
                if (PhotoViewer.this.pickerViewSendButton != null) {
                    PhotoViewer.this.pickerViewSendButton.setTranslationY(y);
                }
                float p = 0.0f;
                if (PhotoViewer.this.currentEditMode == 3) {
                    if (PhotoViewer.this.captionEditText != null) {
                        PhotoViewer.this.captionEditText.setTranslationY(y);
                    }
                    if (PhotoViewer.this.photoPaintView != null) {
                        PhotoViewer.this.photoPaintView.setTranslationY(0.0f);
                        PhotoViewer.this.photoPaintView.getColorPicker().setTranslationY(y);
                        PhotoViewer.this.photoPaintView.getToolsView().setTranslationY(y);
                        PhotoViewer.this.photoPaintView.getColorPickerBackground().setTranslationY(y);
                        PhotoViewer.this.photoPaintView.getCurtainView().setTranslationY(y);
                    }
                } else {
                    if (PhotoViewer.this.photoPaintView != null) {
                        PhotoViewer.this.photoPaintView.setTranslationY(y);
                    }
                    if (PhotoViewer.this.captionEditText != null) {
                        if (progress >= 0.5f) {
                            p = (progress - 0.5f) / 0.5f;
                        }
                        PhotoViewer.this.captionEditText.setAlpha(p);
                        PhotoViewer.this.captionEditText.setTranslationY((y - this.keyboardSize) + (((float) AndroidUtilities.dp(this.keyboardSize / 2.0f)) * (1.0f - progress)));
                    }
                }
                if (PhotoViewer.this.muteItem != null) {
                    PhotoViewer.this.muteItem.setTranslationY(y);
                }
                if (PhotoViewer.this.cameraItem != null) {
                    PhotoViewer.this.cameraItem.setTranslationY(y);
                }
                if (PhotoViewer.this.captionLimitView != null) {
                    PhotoViewer.this.captionLimitView.setTranslationY(y);
                }
                FrameLayoutDrawer.this.invalidate();
            }

            /* access modifiers changed from: protected */
            public void onTransitionStart(boolean keyboardVisible, int contentHeight) {
                String str;
                int i;
                PhotoViewer.this.navigationBar.setVisibility(4);
                PhotoViewer.this.animateNavBarColorTo(-16777216);
                if (PhotoViewer.this.captionEditText.getTag() == null || !keyboardVisible) {
                    PhotoViewer.this.checkImageView.animate().alpha(1.0f).setDuration(220).start();
                    PhotoViewer.this.photosCounterView.animate().alpha(1.0f).setDuration(220).start();
                    if (PhotoViewer.this.lastTitle != null && !PhotoViewer.this.isCurrentVideo) {
                        PhotoViewer.this.actionBar.setTitleAnimated(PhotoViewer.this.lastTitle, false, 220);
                        String unused = PhotoViewer.this.lastTitle = null;
                        return;
                    }
                    return;
                }
                if (PhotoViewer.this.isCurrentVideo) {
                    if (PhotoViewer.this.muteVideo) {
                        i = NUM;
                        str = "GifCaption";
                    } else {
                        i = NUM;
                        str = "VideoCaption";
                    }
                    PhotoViewer.this.actionBar.setTitleAnimated(LocaleController.getString(str, i), true, 220);
                } else {
                    PhotoViewer.this.actionBar.setTitleAnimated(LocaleController.getString("PhotoCaption", NUM), true, 220);
                }
                PhotoViewer.this.captionEditText.setAlpha(0.0f);
                PhotoViewer.this.checkImageView.animate().alpha(0.0f).setDuration(220).start();
                PhotoViewer.this.photosCounterView.animate().alpha(0.0f).setDuration(220).start();
                PhotoViewer.this.selectedPhotosListView.animate().alpha(0.0f).translationY((float) (-AndroidUtilities.dp(10.0f))).setDuration(220).start();
            }

            /* access modifiers changed from: protected */
            public void onTransitionEnd() {
                super.onTransitionEnd();
                PhotoViewer.this.navigationBar.setVisibility(PhotoViewer.this.currentEditMode != 2 ? 0 : 4);
                if (PhotoViewer.this.captionEditText.getTag() == null) {
                    PhotoViewer.this.captionEditText.setVisibility(8);
                }
                PhotoViewer.this.captionEditText.setTranslationY(0.0f);
            }

            /* access modifiers changed from: protected */
            public boolean heightAnimationEnabled() {
                return !PhotoViewer.this.captionEditText.isPopupShowing() && PhotoViewer.this.keyboardAnimationEnabled;
            }
        };
        private boolean captionAbove;
        private boolean ignoreLayout;
        private Paint paint = new Paint();

        public FrameLayoutDrawer(Context context) {
            super(context, false);
            setWillNotDraw(false);
            this.paint.setColor(NUM);
        }

        /* access modifiers changed from: protected */
        public void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
            int heightSize;
            int groupedPhotosHeight;
            int i;
            int height;
            int width;
            int widthSize = View.MeasureSpec.getSize(widthMeasureSpec);
            int heightSize2 = View.MeasureSpec.getSize(heightMeasureSpec);
            if (getLayoutParams().height > 0) {
                heightSize = getLayoutParams().height;
            } else {
                heightSize = heightSize2;
            }
            setMeasuredDimension(widthSize, heightSize);
            boolean z = true;
            if (!PhotoViewer.this.isCurrentVideo) {
                this.ignoreLayout = true;
                if (PhotoViewer.this.needCaptionLayout) {
                    int maxLines = AndroidUtilities.displaySize.x > AndroidUtilities.displaySize.y ? 5 : 10;
                    PhotoViewer.this.captionTextViewSwitcher.getCurrentView().setMaxLines(maxLines);
                    PhotoViewer.this.captionTextViewSwitcher.getNextView().setMaxLines(maxLines);
                } else {
                    PhotoViewer.this.captionTextViewSwitcher.getCurrentView().setMaxLines(Integer.MAX_VALUE);
                    PhotoViewer.this.captionTextViewSwitcher.getNextView().setMaxLines(Integer.MAX_VALUE);
                }
                this.ignoreLayout = false;
            }
            measureChildWithMargins(PhotoViewer.this.captionEditText, widthMeasureSpec, 0, heightMeasureSpec, 0);
            int inputFieldHeight = PhotoViewer.this.captionEditText.getMeasuredHeight();
            int i2 = 8;
            int bottomLayoutHeight = PhotoViewer.this.bottomLayout.getVisibility() != 8 ? AndroidUtilities.dp(48.0f) : 0;
            if (PhotoViewer.this.groupedPhotosListView == null || PhotoViewer.this.groupedPhotosListView.getVisibility() == 8) {
                groupedPhotosHeight = 0;
            } else {
                ((ViewGroup.MarginLayoutParams) PhotoViewer.this.groupedPhotosListView.getLayoutParams()).bottomMargin = bottomLayoutHeight;
                measureChildWithMargins(PhotoViewer.this.groupedPhotosListView, widthMeasureSpec, 0, heightMeasureSpec, 0);
                int groupedPhotosHeight2 = PhotoViewer.this.groupedPhotosListView.getMeasuredHeight();
                this.ignoreLayout = true;
                if (AndroidUtilities.isTablet() || heightSize >= widthSize) {
                    if (PhotoViewer.this.groupedPhotosListView.getVisibility() != 0) {
                        PhotoViewer.this.groupedPhotosListView.setVisibility(0);
                    }
                } else if (PhotoViewer.this.groupedPhotosListView.getVisibility() != 4) {
                    PhotoViewer.this.groupedPhotosListView.setVisibility(4);
                }
                this.ignoreLayout = false;
                groupedPhotosHeight = groupedPhotosHeight2;
            }
            if (PhotoViewer.this.videoPlayerControlFrameLayout != null) {
                int unused = PhotoViewer.this.videoPlayerControlFrameLayout.parentWidth = widthSize;
                int unused2 = PhotoViewer.this.videoPlayerControlFrameLayout.parentHeight = heightSize;
            }
            int widthSize2 = widthSize - (getPaddingRight() + getPaddingLeft());
            int heightSize3 = heightSize - getPaddingBottom();
            int childCount = getChildCount();
            int i3 = 0;
            while (i3 < childCount) {
                View child = getChildAt(i3);
                if (child.getVisibility() == i2 || child == PhotoViewer.this.captionEditText) {
                    i = i3;
                } else if (child == PhotoViewer.this.groupedPhotosListView) {
                    i = i3;
                } else if (child == PhotoViewer.this.aspectRatioFrameLayout) {
                    child.measure(widthMeasureSpec, View.MeasureSpec.makeMeasureSpec(AndroidUtilities.displaySize.y + (PhotoViewer.this.isStatusBarVisible() ? AndroidUtilities.statusBarHeight : 0), NUM));
                    i = i3;
                } else {
                    int i4 = widthMeasureSpec;
                    if (child == PhotoViewer.this.paintingOverlay) {
                        if (PhotoViewer.this.aspectRatioFrameLayout == null || PhotoViewer.this.aspectRatioFrameLayout.getVisibility() != 0) {
                            width = PhotoViewer.this.centerImage.getBitmapWidth();
                            height = PhotoViewer.this.centerImage.getBitmapHeight();
                        } else {
                            width = PhotoViewer.this.videoTextureView.getMeasuredWidth();
                            height = PhotoViewer.this.videoTextureView.getMeasuredHeight();
                        }
                        if (width == 0 || height == 0) {
                            width = widthSize2;
                            height = heightSize3;
                        }
                        PhotoViewer.this.paintingOverlay.measure(View.MeasureSpec.makeMeasureSpec(width, NUM), View.MeasureSpec.makeMeasureSpec(height, NUM));
                        i = i3;
                    } else if (PhotoViewer.this.captionEditText.isPopupView(child)) {
                        if (PhotoViewer.this.inBubbleMode) {
                            child.measure(View.MeasureSpec.makeMeasureSpec(widthSize2, NUM), View.MeasureSpec.makeMeasureSpec(heightSize3 - inputFieldHeight, NUM));
                            i = i3;
                        } else if (!AndroidUtilities.isInMultiwindow) {
                            child.measure(View.MeasureSpec.makeMeasureSpec(widthSize2, NUM), View.MeasureSpec.makeMeasureSpec(child.getLayoutParams().height, NUM));
                            i = i3;
                        } else if (AndroidUtilities.isTablet()) {
                            child.measure(View.MeasureSpec.makeMeasureSpec(widthSize2, NUM), View.MeasureSpec.makeMeasureSpec(Math.min(AndroidUtilities.dp(320.0f), (heightSize3 - inputFieldHeight) - AndroidUtilities.statusBarHeight), NUM));
                            i = i3;
                        } else {
                            child.measure(View.MeasureSpec.makeMeasureSpec(widthSize2, NUM), View.MeasureSpec.makeMeasureSpec((heightSize3 - inputFieldHeight) - AndroidUtilities.statusBarHeight, NUM));
                            i = i3;
                        }
                    } else if (child == PhotoViewer.this.captionScrollView) {
                        int bottomMargin = bottomLayoutHeight;
                        if (PhotoViewer.this.dontChangeCaptionPosition) {
                            if (this.captionAbove) {
                                bottomMargin += groupedPhotosHeight;
                            }
                        } else if (!PhotoViewer.this.groupedPhotosListView.hasPhotos() || (!AndroidUtilities.isTablet() && heightSize3 <= widthSize2)) {
                            this.captionAbove = false;
                        } else {
                            bottomMargin += groupedPhotosHeight;
                            this.captionAbove = z;
                        }
                        int i5 = PhotoViewer.this.isStatusBarVisible() ? AndroidUtilities.statusBarHeight : 0;
                        ((ViewGroup.MarginLayoutParams) PhotoViewer.this.captionScrollView.getLayoutParams()).bottomMargin = bottomMargin;
                        child.measure(View.MeasureSpec.makeMeasureSpec(widthSize2, NUM), View.MeasureSpec.makeMeasureSpec((heightSize3 - (i5 + ActionBar.getCurrentActionBarHeight())) - bottomMargin, NUM));
                        i = i3;
                    } else {
                        View view = child;
                        i = i3;
                        measureChildWithMargins(child, widthMeasureSpec, 0, heightMeasureSpec, 0);
                    }
                }
                i3 = i + 1;
                z = true;
                i2 = 8;
            }
        }

        /* access modifiers changed from: protected */
        public void onLayout(boolean changed, int _l, int t, int _r, int _b) {
            int paddingBottom;
            int keyboardHeight;
            int count;
            int b;
            int r;
            int l;
            int childLeft;
            int childTop;
            int top;
            FrameLayoutDrawer frameLayoutDrawer = this;
            int count2 = getChildCount();
            int keyboardHeight2 = measureKeyboardHeight();
            int unused = PhotoViewer.this.keyboardSize = keyboardHeight2;
            int paddingBottom2 = (keyboardHeight2 > AndroidUtilities.dp(20.0f) || AndroidUtilities.isInMultiwindow) ? 0 : PhotoViewer.this.captionEditText.getEmojiPadding();
            int i = 0;
            while (i < count2) {
                View child = frameLayoutDrawer.getChildAt(i);
                if (child.getVisibility() == 8) {
                    count = count2;
                    keyboardHeight = keyboardHeight2;
                    paddingBottom = paddingBottom2;
                } else {
                    if (child == PhotoViewer.this.aspectRatioFrameLayout) {
                        l = _l;
                        r = _r;
                        b = _b;
                    } else {
                        l = _l + getPaddingLeft();
                        r = _r - getPaddingRight();
                        b = _b - getPaddingBottom();
                    }
                    FrameLayout.LayoutParams lp = (FrameLayout.LayoutParams) child.getLayoutParams();
                    int width = child.getMeasuredWidth();
                    int height = child.getMeasuredHeight();
                    int gravity = lp.gravity;
                    if (gravity == -1) {
                        gravity = 51;
                    }
                    int verticalGravity = gravity & 112;
                    switch (gravity & 7) {
                        case 1:
                            count = count2;
                            childLeft = ((((r - l) - width) / 2) + lp.leftMargin) - lp.rightMargin;
                            break;
                        case 5:
                            count = count2;
                            childLeft = ((r - l) - width) - lp.rightMargin;
                            break;
                        default:
                            count = count2;
                            childLeft = lp.leftMargin;
                            break;
                    }
                    switch (verticalGravity) {
                        case 16:
                            keyboardHeight = keyboardHeight2;
                            childTop = (((((b - paddingBottom2) - t) - height) / 2) + lp.topMargin) - lp.bottomMargin;
                            break;
                        case 80:
                            keyboardHeight = keyboardHeight2;
                            childTop = (((b - paddingBottom2) - t) - height) - lp.bottomMargin;
                            break;
                        default:
                            keyboardHeight = keyboardHeight2;
                            childTop = lp.topMargin;
                            break;
                    }
                    if (child == PhotoViewer.this.mentionListView) {
                        childTop -= PhotoViewer.this.captionEditText.getMeasuredHeight();
                        paddingBottom = paddingBottom2;
                    } else if (PhotoViewer.this.captionEditText.isPopupView(child)) {
                        if (AndroidUtilities.isInMultiwindow) {
                            childTop = (PhotoViewer.this.captionEditText.getTop() - child.getMeasuredHeight()) + AndroidUtilities.dp(1.0f);
                            paddingBottom = paddingBottom2;
                        } else {
                            childTop = PhotoViewer.this.captionEditText.getBottom();
                            paddingBottom = paddingBottom2;
                        }
                    } else if (child == PhotoViewer.this.selectedPhotosListView) {
                        childTop = PhotoViewer.this.actionBar.getMeasuredHeight() + AndroidUtilities.dp(5.0f);
                        paddingBottom = paddingBottom2;
                    } else {
                        if (child == PhotoViewer.this.cameraItem) {
                            paddingBottom = paddingBottom2;
                        } else if (child == PhotoViewer.this.muteItem) {
                            paddingBottom = paddingBottom2;
                        } else if (child == PhotoViewer.this.videoTimelineView) {
                            childTop -= PhotoViewer.this.pickerView.getHeight();
                            paddingBottom = paddingBottom2;
                            if (PhotoViewer.this.sendPhotoType == 1) {
                                childTop -= AndroidUtilities.dp(52.0f);
                            }
                        } else {
                            paddingBottom = paddingBottom2;
                            if (child == PhotoViewer.this.videoAvatarTooltip) {
                                childTop -= PhotoViewer.this.pickerView.getHeight() + AndroidUtilities.dp(31.0f);
                            }
                        }
                        if (PhotoViewer.this.videoTimelineView == null || PhotoViewer.this.videoTimelineView.getVisibility() != 0) {
                            top = PhotoViewer.this.pickerView.getTop();
                        } else {
                            top = PhotoViewer.this.videoTimelineView.getTop();
                        }
                        int i2 = childTop;
                        childTop = (top - AndroidUtilities.dp((PhotoViewer.this.sendPhotoType == 4 || PhotoViewer.this.sendPhotoType == 5) ? 40.0f : 15.0f)) - child.getMeasuredHeight();
                    }
                    child.layout(childLeft + l, childTop, childLeft + width + l, childTop + height);
                }
                i++;
                frameLayoutDrawer = this;
                count2 = count;
                keyboardHeight2 = keyboardHeight;
                paddingBottom2 = paddingBottom;
            }
            notifyHeightChanged();
        }

        /* access modifiers changed from: protected */
        public void onDraw(Canvas canvas) {
            PhotoViewer.this.onDraw(canvas);
            if (PhotoViewer.this.isStatusBarVisible() && AndroidUtilities.statusBarHeight != 0 && PhotoViewer.this.actionBar != null) {
                this.paint.setAlpha((int) (PhotoViewer.this.actionBar.getAlpha() * 255.0f * 0.2f));
                canvas.drawRect(0.0f, PhotoViewer.this.currentPanTranslationY, (float) getMeasuredWidth(), PhotoViewer.this.currentPanTranslationY + ((float) AndroidUtilities.statusBarHeight), this.paint);
                this.paint.setAlpha((int) (PhotoViewer.this.actionBar.getAlpha() * 255.0f * 0.498f));
                if (getPaddingRight() > 0) {
                    canvas.drawRect((float) (getMeasuredWidth() - getPaddingRight()), 0.0f, (float) getMeasuredWidth(), (float) getMeasuredHeight(), this.paint);
                }
                if (getPaddingLeft() > 0) {
                    canvas.drawRect(0.0f, 0.0f, (float) getPaddingLeft(), (float) getMeasuredHeight(), this.paint);
                }
                if (getPaddingBottom() > 0) {
                    float offset = AndroidUtilities.dpf2(24.0f) * (1.0f - PhotoViewer.this.actionBar.getAlpha());
                    canvas.drawRect(0.0f, ((float) (getMeasuredHeight() - getPaddingBottom())) + offset, (float) getMeasuredWidth(), ((float) getMeasuredHeight()) + offset, this.paint);
                }
            }
        }

        /* access modifiers changed from: protected */
        public void dispatchDraw(Canvas canvas) {
            canvas.save();
            canvas.clipRect(0, 0, getWidth(), getHeight());
            super.dispatchDraw(canvas);
            canvas.restore();
        }

        /* access modifiers changed from: protected */
        public boolean drawChild(Canvas canvas, View child, long drawingTime) {
            if (child == PhotoViewer.this.leftPaintingOverlay || child == PhotoViewer.this.rightPaintingOverlay) {
                return false;
            }
            if (child != PhotoViewer.this.navigationBar) {
                canvas.save();
                canvas.clipRect(0, 0, getWidth(), getHeight());
            }
            boolean result = drawChildInternal(canvas, child, drawingTime);
            if (child != PhotoViewer.this.navigationBar) {
                canvas.restore();
            }
            return result;
        }

        /* access modifiers changed from: protected */
        public boolean drawChildInternal(Canvas canvas, View child, long drawingTime) {
            if (child == PhotoViewer.this.mentionListView || child == PhotoViewer.this.captionEditText) {
                if (PhotoViewer.this.currentEditMode != 0 && PhotoViewer.this.currentPanTranslationY == 0.0f) {
                    return false;
                }
                if (AndroidUtilities.isInMultiwindow || AndroidUtilities.usingHardwareInput) {
                    if (!PhotoViewer.this.captionEditText.isPopupShowing() && PhotoViewer.this.captionEditText.getEmojiPadding() == 0 && PhotoViewer.this.captionEditText.getTag() == null) {
                        return false;
                    }
                } else if (!PhotoViewer.this.captionEditText.isPopupShowing() && PhotoViewer.this.captionEditText.getEmojiPadding() == 0 && getKeyboardHeight() == 0 && PhotoViewer.this.currentPanTranslationY == 0.0f) {
                    return false;
                }
                if (child == PhotoViewer.this.mentionListView) {
                    canvas.save();
                    canvas.clipRect(child.getX(), child.getY(), child.getX() + ((float) child.getWidth()), child.getY() + ((float) child.getHeight()));
                    boolean r = super.drawChild(canvas, child, drawingTime);
                    canvas.restore();
                    return r;
                }
            } else if (child == PhotoViewer.this.cameraItem || child == PhotoViewer.this.muteItem || child == PhotoViewer.this.pickerView || child == PhotoViewer.this.videoTimelineView || child == PhotoViewer.this.pickerViewSendButton || child == PhotoViewer.this.captionLimitView || child == PhotoViewer.this.captionTextViewSwitcher || (PhotoViewer.this.muteItem.getVisibility() == 0 && child == PhotoViewer.this.bottomLayout)) {
                if (PhotoViewer.this.captionEditText.isPopupAnimating()) {
                    child.setTranslationY((float) PhotoViewer.this.captionEditText.getEmojiPadding());
                    boolean unused = PhotoViewer.this.bottomTouchEnabled = false;
                } else {
                    int paddingBottom = (getKeyboardHeight() > AndroidUtilities.dp(20.0f) || AndroidUtilities.isInMultiwindow) ? 0 : PhotoViewer.this.captionEditText.getEmojiPadding();
                    if (PhotoViewer.this.captionEditText.isPopupShowing() || (((AndroidUtilities.isInMultiwindow || AndroidUtilities.usingHardwareInput) && PhotoViewer.this.captionEditText.getTag() != null) || getKeyboardHeight() > AndroidUtilities.dp(80.0f) || paddingBottom != 0)) {
                        boolean unused2 = PhotoViewer.this.bottomTouchEnabled = false;
                        return false;
                    }
                    boolean unused3 = PhotoViewer.this.bottomTouchEnabled = true;
                }
            } else if (child == PhotoViewer.this.checkImageView || child == PhotoViewer.this.photosCounterView) {
                if (PhotoViewer.this.captionEditText.getTag() != null) {
                    boolean unused4 = PhotoViewer.this.bottomTouchEnabled = false;
                    if (child.getAlpha() < 0.0f) {
                        return false;
                    }
                } else {
                    boolean unused5 = PhotoViewer.this.bottomTouchEnabled = true;
                }
            } else if (child == PhotoViewer.this.miniProgressView) {
                return false;
            }
            if (child == PhotoViewer.this.videoTimelineView && PhotoViewer.this.videoTimelineView.getTranslationY() > 0.0f && PhotoViewer.this.pickerView.getTranslationY() == 0.0f) {
                canvas.save();
                canvas.clipRect(PhotoViewer.this.videoTimelineView.getX(), PhotoViewer.this.videoTimelineView.getY(), PhotoViewer.this.videoTimelineView.getX() + ((float) PhotoViewer.this.videoTimelineView.getMeasuredWidth()), (float) PhotoViewer.this.videoTimelineView.getBottom());
                boolean b = super.drawChild(canvas, child, drawingTime);
                canvas.restore();
                return b;
            }
            try {
                if (child == PhotoViewer.this.aspectRatioFrameLayout || child == PhotoViewer.this.paintingOverlay || !super.drawChild(canvas, child, drawingTime)) {
                    return false;
                }
                return true;
            } catch (Throwable th) {
                return true;
            }
        }

        public void requestLayout() {
            if (!this.ignoreLayout) {
                super.requestLayout();
            }
        }

        /* access modifiers changed from: protected */
        public void onAttachedToWindow() {
            super.onAttachedToWindow();
            this.adjustPanLayoutHelper.setResizableView(PhotoViewer.this.windowView);
            this.adjustPanLayoutHelper.onAttach();
            Bulletin.addDelegate((FrameLayout) this, (Bulletin.Delegate) new Bulletin.Delegate() {
                public /* synthetic */ void onHide(Bulletin bulletin) {
                    Bulletin.Delegate.CC.$default$onHide(this, bulletin);
                }

                public /* synthetic */ void onOffsetChange(float f) {
                    Bulletin.Delegate.CC.$default$onOffsetChange(this, f);
                }

                public /* synthetic */ void onShow(Bulletin bulletin) {
                    Bulletin.Delegate.CC.$default$onShow(this, bulletin);
                }

                public int getBottomOffset(int tag) {
                    int offset = 0;
                    if (PhotoViewer.this.bottomLayout != null && PhotoViewer.this.bottomLayout.getVisibility() == 0) {
                        offset = 0 + PhotoViewer.this.bottomLayout.getHeight();
                    }
                    if (PhotoViewer.this.groupedPhotosListView == null || !PhotoViewer.this.groupedPhotosListView.hasPhotos()) {
                        return offset;
                    }
                    if (AndroidUtilities.isTablet() || PhotoViewer.this.containerView.getMeasuredHeight() > PhotoViewer.this.containerView.getMeasuredWidth()) {
                        return offset + PhotoViewer.this.groupedPhotosListView.getHeight();
                    }
                    return offset;
                }
            });
        }

        /* access modifiers changed from: protected */
        public void onDetachedFromWindow() {
            super.onDetachedFromWindow();
            this.adjustPanLayoutHelper.onDetach();
            Bulletin.removeDelegate((FrameLayout) this);
        }

        public void notifyHeightChanged() {
            super.notifyHeightChanged();
            if (PhotoViewer.this.isCurrentVideo) {
                PhotoViewer.this.photoProgressViews[0].setIndexedAlpha(2, getKeyboardHeight() <= AndroidUtilities.dp(20.0f) ? 1.0f : 0.0f, true);
            }
        }
    }

    static {
        if (Build.VERSION.SDK_INT >= 24) {
            VPC_PROGRESS = new FloatProperty<VideoPlayerControlFrameLayout>("progress") {
                public void setValue(VideoPlayerControlFrameLayout object, float value) {
                    object.setProgress(value);
                }

                public Float get(VideoPlayerControlFrameLayout object) {
                    return Float.valueOf(object.getProgress());
                }
            };
        } else {
            VPC_PROGRESS = new Property<VideoPlayerControlFrameLayout, Float>(Float.class, "progress") {
                public void set(VideoPlayerControlFrameLayout object, Float value) {
                    object.setProgress(value.floatValue());
                }

                public Float get(VideoPlayerControlFrameLayout object) {
                    return Float.valueOf(object.getProgress());
                }
            };
        }
    }

    private class VideoPlayerControlFrameLayout extends FrameLayout {
        private boolean ignoreLayout;
        /* access modifiers changed from: private */
        public int parentHeight;
        /* access modifiers changed from: private */
        public int parentWidth;
        private float progress = 1.0f;
        private boolean seekBarTransitionEnabled;
        private boolean translationYAnimationEnabled = true;

        public VideoPlayerControlFrameLayout(Context context) {
            super(context);
            setWillNotDraw(false);
        }

        public boolean onTouchEvent(MotionEvent event) {
            if (this.progress < 1.0f) {
                return false;
            }
            if (!PhotoViewer.this.videoPlayerSeekbar.onTouch(event.getAction(), event.getX() - ((float) AndroidUtilities.dp(2.0f)), event.getY())) {
                return true;
            }
            getParent().requestDisallowInterceptTouchEvent(true);
            PhotoViewer.this.videoPlayerSeekbarView.invalidate();
            return true;
        }

        public void requestLayout() {
            if (!this.ignoreLayout) {
                super.requestLayout();
            }
        }

        /* access modifiers changed from: protected */
        public void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
            int extraWidth;
            long duration;
            this.ignoreLayout = true;
            FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) PhotoViewer.this.videoPlayerTime.getLayoutParams();
            if (this.parentWidth > this.parentHeight) {
                if (PhotoViewer.this.exitFullscreenButton.getVisibility() != 0) {
                    PhotoViewer.this.exitFullscreenButton.setVisibility(0);
                }
                extraWidth = AndroidUtilities.dp(48.0f);
                layoutParams.rightMargin = AndroidUtilities.dp(47.0f);
            } else {
                if (PhotoViewer.this.exitFullscreenButton.getVisibility() != 4) {
                    PhotoViewer.this.exitFullscreenButton.setVisibility(4);
                }
                extraWidth = 0;
                layoutParams.rightMargin = AndroidUtilities.dp(12.0f);
            }
            this.ignoreLayout = false;
            super.onMeasure(widthMeasureSpec, heightMeasureSpec);
            if (PhotoViewer.this.videoPlayer != null) {
                duration = PhotoViewer.this.videoPlayer.getDuration();
                if (duration == -9223372036854775807L) {
                    duration = 0;
                }
            } else {
                duration = 0;
            }
            long duration2 = duration / 1000;
            PhotoViewer.this.videoPlayerSeekbar.setSize(((getMeasuredWidth() - AndroidUtilities.dp(16.0f)) - ((int) Math.ceil((double) PhotoViewer.this.videoPlayerTime.getPaint().measureText(String.format(Locale.ROOT, "%02d:%02d / %02d:%02d", new Object[]{Long.valueOf(duration2 / 60), Long.valueOf(duration2 % 60), Long.valueOf(duration2 / 60), Long.valueOf(duration2 % 60)}))))) - extraWidth, getMeasuredHeight());
        }

        /* access modifiers changed from: protected */
        public void onLayout(boolean changed, int left, int top, int right, int bottom) {
            super.onLayout(changed, left, top, right, bottom);
            float progress2 = 0.0f;
            if (PhotoViewer.this.videoPlayer != null) {
                progress2 = ((float) PhotoViewer.this.videoPlayer.getCurrentPosition()) / ((float) PhotoViewer.this.videoPlayer.getDuration());
            }
            if (PhotoViewer.this.playerWasReady) {
                PhotoViewer.this.videoPlayerSeekbar.setProgress(progress2);
            }
            PhotoViewer.this.videoTimelineView.setProgress(progress2);
        }

        public float getProgress() {
            return this.progress;
        }

        public void setProgress(float progress2) {
            if (this.progress != progress2) {
                this.progress = progress2;
                onProgressChanged(progress2);
            }
        }

        private void onProgressChanged(float progress2) {
            PhotoViewer.this.videoPlayerTime.setAlpha(progress2);
            PhotoViewer.this.exitFullscreenButton.setAlpha(progress2);
            if (this.seekBarTransitionEnabled) {
                PhotoViewer.this.videoPlayerTime.setPivotX((float) PhotoViewer.this.videoPlayerTime.getWidth());
                PhotoViewer.this.videoPlayerTime.setPivotY((float) PhotoViewer.this.videoPlayerTime.getHeight());
                PhotoViewer.this.videoPlayerTime.setScaleX(1.0f - ((1.0f - progress2) * 0.1f));
                PhotoViewer.this.videoPlayerTime.setScaleY(1.0f - ((1.0f - progress2) * 0.1f));
                PhotoViewer.this.videoPlayerSeekbar.setTransitionProgress(1.0f - progress2);
                return;
            }
            if (this.translationYAnimationEnabled) {
                setTranslationY(AndroidUtilities.dpf2(24.0f) * (1.0f - progress2));
            }
            PhotoViewer.this.videoPlayerSeekbarView.setAlpha(progress2);
        }

        public boolean isSeekBarTransitionEnabled() {
            return this.seekBarTransitionEnabled;
        }

        public void setSeekBarTransitionEnabled(boolean seekBarTransitionEnabled2) {
            if (this.seekBarTransitionEnabled != seekBarTransitionEnabled2) {
                this.seekBarTransitionEnabled = seekBarTransitionEnabled2;
                if (seekBarTransitionEnabled2) {
                    setTranslationY(0.0f);
                    PhotoViewer.this.videoPlayerSeekbarView.setAlpha(1.0f);
                } else {
                    PhotoViewer.this.videoPlayerTime.setScaleX(1.0f);
                    PhotoViewer.this.videoPlayerTime.setScaleY(1.0f);
                    PhotoViewer.this.videoPlayerSeekbar.setTransitionProgress(0.0f);
                }
                onProgressChanged(this.progress);
            }
        }

        public void setTranslationYAnimationEnabled(boolean translationYAnimationEnabled2) {
            if (this.translationYAnimationEnabled != translationYAnimationEnabled2) {
                this.translationYAnimationEnabled = translationYAnimationEnabled2;
                if (!translationYAnimationEnabled2) {
                    setTranslationY(0.0f);
                }
                onProgressChanged(this.progress);
            }
        }
    }

    private class CaptionTextViewSwitcher extends TextViewSwitcher {
        private float alpha = 1.0f;
        private boolean inScrollView = false;

        public CaptionTextViewSwitcher(Context context) {
            super(context);
        }

        public void setVisibility(int visibility) {
            setVisibility(visibility, true);
        }

        public void setVisibility(int visibility, boolean withScrollView) {
            super.setVisibility(visibility);
            if (this.inScrollView && withScrollView) {
                PhotoViewer.this.captionScrollView.setVisibility(visibility);
            }
        }

        public void setAlpha(float alpha2) {
            this.alpha = alpha2;
            if (this.inScrollView) {
                PhotoViewer.this.captionScrollView.setAlpha(alpha2);
            } else {
                super.setAlpha(alpha2);
            }
        }

        public float getAlpha() {
            if (this.inScrollView) {
                return this.alpha;
            }
            return super.getAlpha();
        }

        public void setTranslationY(float translationY) {
            super.setTranslationY(translationY);
            if (this.inScrollView) {
                PhotoViewer.this.captionScrollView.invalidate();
            }
        }

        /* access modifiers changed from: protected */
        public void onAttachedToWindow() {
            super.onAttachedToWindow();
            if (PhotoViewer.this.captionContainer != null && getParent() == PhotoViewer.this.captionContainer) {
                this.inScrollView = true;
                PhotoViewer.this.captionScrollView.setVisibility(getVisibility());
                PhotoViewer.this.captionScrollView.setAlpha(this.alpha);
                super.setAlpha(1.0f);
            }
        }

        /* access modifiers changed from: protected */
        public void onDetachedFromWindow() {
            super.onDetachedFromWindow();
            if (this.inScrollView) {
                this.inScrollView = false;
                PhotoViewer.this.captionScrollView.setVisibility(8);
                super.setAlpha(this.alpha);
            }
        }
    }

    private class CaptionScrollView extends NestedScrollView {
        private Method abortAnimatedScrollMethod;
        /* access modifiers changed from: private */
        public float backgroundAlpha = 1.0f;
        /* access modifiers changed from: private */
        public boolean dontChangeTopMargin;
        private boolean isLandscape;
        private boolean nestedScrollStarted;
        private float overScrollY;
        private final Paint paint;
        private int pendingTopMargin = -1;
        private int prevHeight;
        private OverScroller scroller;
        private final SpringAnimation springAnimation;
        private int textHash;
        private float velocitySign;
        private float velocityY;

        public CaptionScrollView(Context context) {
            super(context);
            Paint paint2 = new Paint(1);
            this.paint = paint2;
            setClipChildren(false);
            setOverScrollMode(2);
            paint2.setColor(-16777216);
            setFadingEdgeLength(AndroidUtilities.dp(12.0f));
            setVerticalFadingEdgeEnabled(true);
            setWillNotDraw(false);
            SpringAnimation springAnimation2 = new SpringAnimation(PhotoViewer.this.captionTextViewSwitcher, DynamicAnimation.TRANSLATION_Y, 0.0f);
            this.springAnimation = springAnimation2;
            springAnimation2.getSpring().setStiffness(100.0f);
            springAnimation2.setMinimumVisibleChange(1.0f);
            springAnimation2.addUpdateListener(new PhotoViewer$CaptionScrollView$$ExternalSyntheticLambda0(this));
            springAnimation2.getSpring().setDampingRatio(1.0f);
            try {
                Method declaredMethod = NestedScrollView.class.getDeclaredMethod("abortAnimatedScroll", new Class[0]);
                this.abortAnimatedScrollMethod = declaredMethod;
                declaredMethod.setAccessible(true);
            } catch (Exception e) {
                this.abortAnimatedScrollMethod = null;
                FileLog.e((Throwable) e);
            }
            try {
                Field scrollerField = NestedScrollView.class.getDeclaredField("mScroller");
                scrollerField.setAccessible(true);
                this.scroller = (OverScroller) scrollerField.get(this);
            } catch (Exception e2) {
                this.scroller = null;
                FileLog.e((Throwable) e2);
            }
        }

        /* renamed from: lambda$new$0$org-telegram-ui-PhotoViewer$CaptionScrollView  reason: not valid java name */
        public /* synthetic */ void m4335lambda$new$0$orgtelegramuiPhotoViewer$CaptionScrollView(DynamicAnimation animation, float value, float velocity) {
            this.overScrollY = value;
            this.velocityY = velocity;
        }

        public boolean onTouchEvent(MotionEvent ev) {
            if (ev.getAction() != 0 || ev.getY() >= ((float) (PhotoViewer.this.captionContainer.getTop() - getScrollY())) + PhotoViewer.this.captionTextViewSwitcher.getTranslationY()) {
                return super.onTouchEvent(ev);
            }
            return false;
        }

        /* access modifiers changed from: protected */
        public void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
            updateTopMargin(View.MeasureSpec.getSize(widthMeasureSpec), View.MeasureSpec.getSize(heightMeasureSpec));
            super.onMeasure(widthMeasureSpec, heightMeasureSpec);
        }

        public void applyPendingTopMargin() {
            this.dontChangeTopMargin = false;
            if (this.pendingTopMargin >= 0) {
                ((ViewGroup.MarginLayoutParams) PhotoViewer.this.captionContainer.getLayoutParams()).topMargin = this.pendingTopMargin;
                this.pendingTopMargin = -1;
                requestLayout();
            }
        }

        public int getPendingMarginTopDiff() {
            int i = this.pendingTopMargin;
            if (i >= 0) {
                return i - ((ViewGroup.MarginLayoutParams) PhotoViewer.this.captionContainer.getLayoutParams()).topMargin;
            }
            return 0;
        }

        public void updateTopMargin() {
            updateTopMargin(getWidth(), getHeight());
        }

        private void updateTopMargin(int width, int height) {
            int marginTop = calculateNewContainerMarginTop(width, height);
            if (marginTop < 0) {
                return;
            }
            if (this.dontChangeTopMargin) {
                this.pendingTopMargin = marginTop;
                return;
            }
            ((ViewGroup.MarginLayoutParams) PhotoViewer.this.captionContainer.getLayoutParams()).topMargin = marginTop;
            this.pendingTopMargin = -1;
        }

        public int calculateNewContainerMarginTop(int width, int height) {
            if (width == 0 || height == 0) {
                return -1;
            }
            TextView textView = PhotoViewer.this.captionTextViewSwitcher.getCurrentView();
            CharSequence text = textView.getText();
            int textHash2 = text.hashCode();
            boolean isLandscape2 = AndroidUtilities.displaySize.x > AndroidUtilities.displaySize.y;
            if (this.textHash == textHash2 && this.isLandscape == isLandscape2 && this.prevHeight == height) {
                return -1;
            }
            this.textHash = textHash2;
            this.isLandscape = isLandscape2;
            this.prevHeight = height;
            textView.measure(View.MeasureSpec.makeMeasureSpec(width, NUM), View.MeasureSpec.makeMeasureSpec(height, Integer.MIN_VALUE));
            Layout layout = textView.getLayout();
            int lineCount = layout.getLineCount();
            int i = 2;
            if ((isLandscape2 && lineCount <= 2) || (!isLandscape2 && lineCount <= 5)) {
                return height - textView.getMeasuredHeight();
            }
            if (!isLandscape2) {
                i = 5;
            }
            int i2 = Math.min(i, lineCount);
            loop0:
            while (i2 > 1) {
                for (int j = layout.getLineStart(i2 - 1); j < layout.getLineEnd(i2 - 1); j++) {
                    if (Character.isLetterOrDigit(text.charAt(j))) {
                        break loop0;
                    }
                }
                i2--;
            }
            return (height - (textView.getPaint().getFontMetricsInt((Paint.FontMetricsInt) null) * i2)) - AndroidUtilities.dp(8.0f);
        }

        public void reset() {
            scrollTo(0, 0);
        }

        public void stopScrolling() {
            Method method = this.abortAnimatedScrollMethod;
            if (method != null) {
                try {
                    method.invoke(this, new Object[0]);
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                }
            }
        }

        public void fling(int velocityY2) {
            super.fling(velocityY2);
            this.velocitySign = Math.signum((float) velocityY2);
            this.velocityY = 0.0f;
        }

        public boolean dispatchNestedPreScroll(int dx, int dy, int[] consumed, int[] offsetInWindow, int type) {
            consumed[1] = 0;
            if (this.nestedScrollStarted) {
                float f = this.overScrollY;
                if ((f > 0.0f && dy > 0) || (f < 0.0f && dy < 0)) {
                    float delta = f - ((float) dy);
                    if (f > 0.0f) {
                        if (delta < 0.0f) {
                            this.overScrollY = 0.0f;
                            consumed[1] = (int) (((float) consumed[1]) + ((float) dy) + delta);
                        } else {
                            this.overScrollY = delta;
                            consumed[1] = consumed[1] + dy;
                        }
                    } else if (delta > 0.0f) {
                        this.overScrollY = 0.0f;
                        consumed[1] = (int) (((float) consumed[1]) + ((float) dy) + delta);
                    } else {
                        this.overScrollY = delta;
                        consumed[1] = consumed[1] + dy;
                    }
                    PhotoViewer.this.captionTextViewSwitcher.setTranslationY(this.overScrollY);
                    return true;
                }
            }
            return false;
        }

        public void dispatchNestedScroll(int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, int[] offsetInWindow, int type, int[] consumed) {
            int consumedY;
            float clampedVelocity;
            if (dyUnconsumed != 0) {
                int dy = Math.round(((float) dyUnconsumed) * (1.0f - Math.abs((-this.overScrollY) / ((float) (PhotoViewer.this.captionContainer.getTop() - ((PhotoViewer.this.isStatusBarVisible() ? AndroidUtilities.statusBarHeight : 0) + ActionBar.getCurrentActionBarHeight()))))));
                if (dy == 0) {
                    return;
                }
                if (this.nestedScrollStarted) {
                    this.overScrollY -= (float) dy;
                    PhotoViewer.this.captionTextViewSwitcher.setTranslationY(this.overScrollY);
                } else if (!this.springAnimation.isRunning()) {
                    OverScroller overScroller = this.scroller;
                    float velocity = overScroller != null ? overScroller.getCurrVelocity() : Float.NaN;
                    if (!Float.isNaN(velocity)) {
                        float clampedVelocity2 = Math.min(AndroidUtilities.displaySize.x > AndroidUtilities.displaySize.y ? 3000.0f : 5000.0f, velocity);
                        consumedY = (int) ((((float) dy) * clampedVelocity2) / velocity);
                        clampedVelocity = clampedVelocity2 * (-this.velocitySign);
                    } else {
                        consumedY = dy;
                        clampedVelocity = 0.0f;
                    }
                    if (consumedY != 0) {
                        this.overScrollY -= (float) consumedY;
                        PhotoViewer.this.captionTextViewSwitcher.setTranslationY(this.overScrollY);
                    }
                    startSpringAnimationIfNotRunning(clampedVelocity);
                }
            }
        }

        private void startSpringAnimationIfNotRunning(float velocityY2) {
            if (!this.springAnimation.isRunning()) {
                this.springAnimation.setStartVelocity(velocityY2);
                this.springAnimation.start();
            }
        }

        public boolean startNestedScroll(int axes, int type) {
            if (type == 0) {
                this.springAnimation.cancel();
                this.nestedScrollStarted = true;
                this.overScrollY = PhotoViewer.this.captionTextViewSwitcher.getTranslationY();
            }
            return true;
        }

        public void computeScroll() {
            OverScroller overScroller;
            super.computeScroll();
            if (!this.nestedScrollStarted && this.overScrollY != 0.0f && (overScroller = this.scroller) != null && overScroller.isFinished()) {
                startSpringAnimationIfNotRunning(0.0f);
            }
        }

        public void stopNestedScroll(int type) {
            OverScroller overScroller;
            if (this.nestedScrollStarted && type == 0) {
                this.nestedScrollStarted = false;
                if (this.overScrollY != 0.0f && (overScroller = this.scroller) != null && overScroller.isFinished()) {
                    startSpringAnimationIfNotRunning(this.velocityY);
                }
            }
        }

        /* access modifiers changed from: protected */
        public float getTopFadingEdgeStrength() {
            return 1.0f;
        }

        /* access modifiers changed from: protected */
        public float getBottomFadingEdgeStrength() {
            return 1.0f;
        }

        public void draw(Canvas canvas) {
            int width = getWidth();
            int height = getHeight();
            int scrollY = getScrollY();
            int saveCount = canvas.save();
            canvas.clipRect(0, scrollY, width, height + scrollY);
            this.paint.setAlpha((int) (this.backgroundAlpha * 127.0f));
            canvas.drawRect(0.0f, ((float) PhotoViewer.this.captionContainer.getTop()) + PhotoViewer.this.captionTextViewSwitcher.getTranslationY(), (float) width, (float) (height + scrollY), this.paint);
            super.draw(canvas);
            canvas.restoreToCount(saveCount);
        }

        public void invalidate() {
            super.invalidate();
            if (PhotoViewer.this.isActionBarVisible) {
                int scrollY = getScrollY();
                float translationY = PhotoViewer.this.captionTextViewSwitcher.getTranslationY();
                float f = 0.0f;
                boolean buttonVisible = scrollY == 0 && translationY == 0.0f;
                boolean enalrgeIconVisible = scrollY == 0 && translationY == 0.0f;
                if (!buttonVisible) {
                    int progressBottom = PhotoViewer.this.photoProgressViews[0].getY() + PhotoViewer.this.photoProgressViews[0].size;
                    int captionTop = (((PhotoViewer.this.captionContainer.getTop() + ((int) translationY)) - scrollY) + ((PhotoViewer.this.isStatusBarVisible() ? AndroidUtilities.statusBarHeight : 0) + ActionBar.getCurrentActionBarHeight())) - AndroidUtilities.dp(12.0f);
                    enalrgeIconVisible = captionTop > AndroidUtilities.dp(32.0f) + ((int) PhotoViewer.this.fullscreenButton[0].getY());
                    buttonVisible = captionTop > progressBottom;
                }
                if (PhotoViewer.this.allowShowFullscreenButton) {
                    if (PhotoViewer.this.fullscreenButton[0].getTag() != null && ((Integer) PhotoViewer.this.fullscreenButton[0].getTag()).intValue() == 3 && enalrgeIconVisible) {
                        PhotoViewer.this.fullscreenButton[0].setTag(2);
                        PhotoViewer.this.fullscreenButton[0].animate().alpha(1.0f).setDuration(150).setListener(new AnimatorListenerAdapter() {
                            public void onAnimationEnd(Animator animation) {
                                PhotoViewer.this.fullscreenButton[0].setTag((Object) null);
                            }
                        }).start();
                    } else if (PhotoViewer.this.fullscreenButton[0].getTag() == null && !enalrgeIconVisible) {
                        PhotoViewer.this.fullscreenButton[0].setTag(3);
                        PhotoViewer.this.fullscreenButton[0].animate().alpha(0.0f).setListener((Animator.AnimatorListener) null).setDuration(150).start();
                    }
                }
                PhotoProgressView photoProgressView = PhotoViewer.this.photoProgressViews[0];
                if (buttonVisible) {
                    f = 1.0f;
                }
                photoProgressView.setIndexedAlpha(2, f, true);
            }
        }
    }

    public static PhotoViewer getPipInstance() {
        return PipInstance;
    }

    public static PhotoViewer getInstance() {
        PhotoViewer localInstance = Instance;
        if (localInstance == null) {
            synchronized (PhotoViewer.class) {
                localInstance = Instance;
                if (localInstance == null) {
                    PhotoViewer photoViewer = new PhotoViewer();
                    localInstance = photoViewer;
                    Instance = photoViewer;
                }
            }
        }
        return localInstance;
    }

    public boolean isOpenedFullScreenVideo() {
        return this.openedFullScreenVideo;
    }

    public static boolean hasInstance() {
        return Instance != null;
    }

    public PhotoViewer() {
        this.blackPaint.setColor(-16777216);
        this.videoFrameBitmapPaint.setColor(-1);
    }

    public void didReceivedNotification(int id, int account, Object... args) {
        boolean scheduled;
        int loadFromMaxId;
        int i;
        ImageLocation location;
        int i2;
        long did;
        int guid;
        float bufferedProgress;
        float progress;
        MessageObject messageObject;
        TLRPC.BotInlineResult botInlineResult;
        PageBlocksAdapter pageBlocksAdapter2;
        int i3 = id;
        float f = 1.0f;
        int i4 = 3;
        int i5 = 2;
        int i6 = 1;
        int i7 = 0;
        if (i3 == NotificationCenter.fileLoadFailed) {
            String location2 = args[0];
            int a = 0;
            while (true) {
                if (a >= 3) {
                    break;
                }
                String[] strArr = this.currentFileNames;
                if (strArr[a] == null || !strArr[a].equals(location2)) {
                    a++;
                } else {
                    this.photoProgressViews[a].setProgress(1.0f, a == 0 || (a == 1 && this.sideImage == this.rightImage) || (a == 2 && this.sideImage == this.leftImage));
                    checkProgress(a, false, true);
                }
            }
            int i8 = i3;
        } else if (i3 == NotificationCenter.fileLoaded) {
            String location3 = args[0];
            int a2 = 0;
            while (true) {
                if (a2 >= 3) {
                    break;
                }
                String[] strArr2 = this.currentFileNames;
                if (strArr2[a2] == null || !strArr2[a2].equals(location3)) {
                    a2++;
                } else {
                    boolean animated = a2 == 0 || (a2 == 1 && this.sideImage == this.rightImage) || (a2 == 2 && this.sideImage == this.leftImage);
                    this.photoProgressViews[a2].setProgress(1.0f, animated);
                    checkProgress(a2, false, animated);
                    if (this.videoPlayer == null && a2 == 0 && (((messageObject = this.currentMessageObject) != null && messageObject.isVideo()) || (((botInlineResult = this.currentBotInlineResult) != null && (botInlineResult.type.equals("video") || MessageObject.isVideoDocument(this.currentBotInlineResult.document))) || ((pageBlocksAdapter2 = this.pageBlocksAdapter) != null && pageBlocksAdapter2.isVideo(this.currentIndex))))) {
                        onActionClick(false);
                    }
                    if (a2 == 0 && this.videoPlayer != null) {
                        this.currentVideoFinishedLoading = true;
                    }
                }
            }
            int i9 = i3;
        } else {
            long j = 0;
            if (i3 == NotificationCenter.fileLoadProgressChanged) {
                String location4 = args[0];
                int a3 = 0;
                while (a3 < i4) {
                    String[] strArr3 = this.currentFileNames;
                    if (strArr3[a3] != null && strArr3[a3].equals(location4)) {
                        Long loadedSize = args[i6];
                        Long totalSize = args[i5];
                        float loadProgress = Math.min(f, ((float) loadedSize.longValue()) / ((float) totalSize.longValue()));
                        this.photoProgressViews[a3].setProgress(loadProgress, a3 == 0 || (a3 == i6 && this.sideImage == this.rightImage) || (a3 == i5 && this.sideImage == this.leftImage));
                        if (a3 != 0 || this.videoPlayer == null || this.videoPlayerSeekbar == null) {
                            Long l = totalSize;
                        } else {
                            if (this.currentVideoFinishedLoading) {
                                bufferedProgress = 1.0f;
                                Long l2 = loadedSize;
                                Long l3 = totalSize;
                            } else {
                                long newTime = SystemClock.elapsedRealtime();
                                if (Math.abs(newTime - this.lastBufferedPositionCheck) >= 500) {
                                    if (this.seekToProgressPending == 0.0f) {
                                        long duration = this.videoPlayer.getDuration();
                                        Long l4 = loadedSize;
                                        Long l5 = totalSize;
                                        long position = this.videoPlayer.getCurrentPosition();
                                        if (duration < j || duration == -9223372036854775807L || position < j) {
                                            progress = 0.0f;
                                        } else {
                                            progress = ((float) position) / ((float) duration);
                                        }
                                    } else {
                                        Long l6 = totalSize;
                                        progress = this.seekToProgressPending;
                                    }
                                    float bufferedProgress2 = this.isStreaming ? FileLoader.getInstance(this.currentAccount).getBufferedProgressFromPosition(progress, this.currentFileNames[0]) : 1.0f;
                                    this.lastBufferedPositionCheck = newTime;
                                    bufferedProgress = bufferedProgress2;
                                } else {
                                    Long l7 = totalSize;
                                    bufferedProgress = -1.0f;
                                }
                            }
                            if (bufferedProgress != -1.0f) {
                                this.videoPlayerSeekbar.setBufferedProgress(bufferedProgress);
                                PipVideoOverlay.setBufferedProgress(bufferedProgress);
                                this.videoPlayerSeekbarView.invalidate();
                            }
                            checkBufferedProgress(loadProgress);
                        }
                    }
                    a3++;
                    f = 1.0f;
                    i4 = 3;
                    i5 = 2;
                    i6 = 1;
                    j = 0;
                }
                int i10 = i3;
                return;
            }
            int i11 = -1;
            if (i3 == NotificationCenter.dialogPhotosLoaded) {
                int guid2 = args[3].intValue();
                long did2 = args[0].longValue();
                if (this.avatarsDialogId == did2 && this.classGuid == guid2) {
                    boolean fromCache = args[2].booleanValue();
                    int setToImage = -1;
                    ArrayList<TLRPC.Photo> photos = args[4];
                    if (!photos.isEmpty()) {
                        ArrayList<TLRPC.Message> messages = args[5];
                        this.imagesArrLocations.clear();
                        this.imagesArrLocationsSizes.clear();
                        this.imagesArrLocationsVideo.clear();
                        this.imagesArrMessages.clear();
                        this.avatarsArr.clear();
                        int a4 = 0;
                        while (a4 < photos.size()) {
                            TLRPC.Photo photo = photos.get(a4);
                            if (photo == null || (photo instanceof TLRPC.TL_photoEmpty)) {
                                guid = guid2;
                                did = did2;
                            } else if (photo.sizes == null) {
                                guid = guid2;
                                did = did2;
                            } else {
                                TLRPC.PhotoSize sizeFull = FileLoader.getClosestPhotoSizeWithSize(photo.sizes, 640);
                                TLRPC.VideoSize videoSize = photo.video_sizes.isEmpty() ? null : photo.video_sizes.get(i7);
                                if (sizeFull != null) {
                                    if (setToImage == i11 && this.currentFileLocation != null) {
                                        int b = 0;
                                        while (true) {
                                            if (b >= photo.sizes.size()) {
                                                guid = guid2;
                                                did = did2;
                                                break;
                                            }
                                            TLRPC.PhotoSize size = photo.sizes.get(b);
                                            if (size.location != null) {
                                                guid = guid2;
                                                if (size.location.local_id == this.currentFileLocation.location.local_id) {
                                                    did = did2;
                                                    TLRPC.PhotoSize photoSize = size;
                                                    if (size.location.volume_id == this.currentFileLocation.location.volume_id) {
                                                        setToImage = this.imagesArrLocations.size();
                                                        break;
                                                    }
                                                } else {
                                                    did = did2;
                                                    TLRPC.PhotoSize photoSize2 = size;
                                                }
                                            } else {
                                                guid = guid2;
                                                did = did2;
                                                TLRPC.PhotoSize photoSize3 = size;
                                            }
                                            b++;
                                            int i12 = id;
                                            guid2 = guid;
                                            did2 = did;
                                        }
                                    } else {
                                        guid = guid2;
                                        did = did2;
                                    }
                                    if (photo.dc_id != 0) {
                                        sizeFull.location.dc_id = photo.dc_id;
                                        sizeFull.location.file_reference = photo.file_reference;
                                    }
                                    ImageLocation location5 = ImageLocation.getForPhoto(sizeFull, photo);
                                    ImageLocation videoLocation = videoSize != null ? ImageLocation.getForPhoto(videoSize, photo) : location5;
                                    if (location5 != null) {
                                        this.imagesArrLocations.add(location5);
                                        this.imagesArrLocationsSizes.add(Long.valueOf(videoLocation.currentSize));
                                        this.imagesArrLocationsVideo.add(videoLocation);
                                        if (messages != null) {
                                            this.imagesArrMessages.add(messages.get(a4));
                                        } else {
                                            this.imagesArrMessages.add((Object) null);
                                        }
                                        this.avatarsArr.add(photo);
                                    }
                                } else {
                                    guid = guid2;
                                    did = did2;
                                }
                            }
                            a4++;
                            int i13 = id;
                            guid2 = guid;
                            did2 = did;
                            i11 = -1;
                            i7 = 0;
                        }
                        long j2 = did2;
                        if (!this.avatarsArr.isEmpty()) {
                            this.menuItem.showSubItem(6);
                        } else {
                            this.menuItem.hideSubItem(6);
                        }
                        this.needSearchImageInArr = false;
                        this.currentIndex = -1;
                        if (setToImage != -1) {
                            setImageIndex(setToImage);
                        } else {
                            TLRPC.User user = null;
                            TLRPC.Chat chat = null;
                            if (this.avatarsDialogId > 0) {
                                user = MessagesController.getInstance(this.currentAccount).getUser(Long.valueOf(this.avatarsDialogId));
                            } else {
                                chat = MessagesController.getInstance(this.currentAccount).getChat(Long.valueOf(-this.avatarsDialogId));
                            }
                            if (!(user == null && chat == null)) {
                                if (user != null) {
                                    i2 = 0;
                                    location = ImageLocation.getForUserOrChat(user, 0);
                                } else {
                                    i2 = 0;
                                    location = ImageLocation.getForUserOrChat(chat, 0);
                                }
                                if (location != null) {
                                    if (!this.imagesArrLocations.isEmpty() && this.imagesArrLocations.get(i2).photoId == location.photoId) {
                                        this.imagesArrLocations.remove(i2);
                                        this.avatarsArr.remove(i2);
                                        this.imagesArrLocationsSizes.remove(i2);
                                        this.imagesArrLocationsVideo.remove(i2);
                                        this.imagesArrMessages.remove(i2);
                                    }
                                    this.imagesArrLocations.add(i2, location);
                                    this.avatarsArr.add(i2, new TLRPC.TL_photoEmpty());
                                    this.imagesArrLocationsSizes.add(i2, Long.valueOf(this.currentFileLocationVideo.currentSize));
                                    this.imagesArrLocationsVideo.add(i2, this.currentFileLocationVideo);
                                    this.imagesArrMessages.add(i2, (Object) null);
                                    setImageIndex(i2);
                                }
                            }
                        }
                        if (fromCache) {
                            MessagesController.getInstance(this.currentAccount).loadDialogPhotos(this.avatarsDialogId, 80, 0, false, this.classGuid);
                        }
                    } else {
                        return;
                    }
                } else {
                    long j3 = did2;
                }
                int guid3 = id;
                return;
            }
            int i14 = id;
            if (i14 == NotificationCenter.mediaCountDidLoad) {
                long uid = args[0].longValue();
                if (uid == this.currentDialogId || uid == this.mergeDialogId) {
                    MessageObject messageObject2 = this.currentMessageObject;
                    if (messageObject2 == null || MediaDataController.getMediaType(messageObject2.messageOwner) == this.sharedMediaType) {
                        if (uid == this.currentDialogId) {
                            this.totalImagesCount = args[1].intValue();
                        } else {
                            this.totalImagesCountMerge = args[1].intValue();
                        }
                        if (this.needSearchImageInArr && this.isFirstLoading) {
                            this.isFirstLoading = false;
                            this.loadingMoreImages = true;
                            MediaDataController.getInstance(this.currentAccount).loadMedia(this.currentDialogId, 20, 0, 0, this.sharedMediaType, 1, this.classGuid, 0);
                        } else if (this.imagesArr.isEmpty()) {
                        } else {
                            if (this.opennedFromMedia) {
                                this.actionBar.setTitle(LocaleController.formatString("Of", NUM, Integer.valueOf(this.startOffset + this.currentIndex + 1), Integer.valueOf(this.totalImagesCount + this.totalImagesCountMerge)));
                            } else {
                                this.actionBar.setTitle(LocaleController.formatString("Of", NUM, Integer.valueOf(((this.totalImagesCount + this.totalImagesCountMerge) - this.imagesArr.size()) + this.currentIndex + 1), Integer.valueOf(this.totalImagesCount + this.totalImagesCountMerge)));
                            }
                        }
                    }
                }
            } else if (i14 == NotificationCenter.mediaDidLoad) {
                long uid2 = args[0].longValue();
                int guid4 = args[3].intValue();
                long j4 = this.currentDialogId;
                if (uid2 != j4 && uid2 != this.mergeDialogId) {
                    return;
                }
                if (guid4 == this.classGuid) {
                    this.loadingMoreImages = false;
                    int loadIndex = uid2 == j4 ? 0 : 1;
                    ArrayList<MessageObject> arr = args[2];
                    this.endReached[loadIndex] = args[5].booleanValue();
                    boolean fromStart = args[6].booleanValue();
                    if (this.needSearchImageInArr) {
                        if (!arr.isEmpty() || (loadIndex == 0 && this.mergeDialogId != 0)) {
                            int i15 = this.currentIndex;
                            if (i15 < 0) {
                                this.needSearchImageInArr = false;
                                return;
                            } else if (i15 < this.imagesArr.size()) {
                                int foundIndex = -1;
                                MessageObject currentMessage = this.imagesArr.get(this.currentIndex);
                                int added = 0;
                                for (int a5 = 0; a5 < arr.size(); a5++) {
                                    MessageObject message = arr.get(a5);
                                    if (this.imagesByIdsTemp[loadIndex].indexOfKey(message.getId()) < 0) {
                                        this.imagesByIdsTemp[loadIndex].put(message.getId(), message);
                                        if (this.opennedFromMedia) {
                                            this.imagesArrTemp.add(message);
                                            if (message.getId() == currentMessage.getId()) {
                                                foundIndex = added;
                                            }
                                            added++;
                                        } else {
                                            added++;
                                            this.imagesArrTemp.add(0, message);
                                            if (message.getId() == currentMessage.getId()) {
                                                foundIndex = arr.size() - added;
                                            }
                                        }
                                    }
                                }
                                if (added == 0 && (loadIndex != 0 || this.mergeDialogId == 0)) {
                                    this.totalImagesCount = this.imagesArr.size();
                                    this.totalImagesCountMerge = 0;
                                }
                                if (foundIndex != -1) {
                                    this.imagesArr.clear();
                                    this.imagesArr.addAll(this.imagesArrTemp);
                                    for (int a6 = 0; a6 < 2; a6++) {
                                        this.imagesByIds[a6] = this.imagesByIdsTemp[a6].clone();
                                        this.imagesByIdsTemp[a6].clear();
                                    }
                                    this.imagesArrTemp.clear();
                                    this.needSearchImageInArr = false;
                                    this.currentIndex = -1;
                                    if (foundIndex >= this.imagesArr.size()) {
                                        foundIndex = this.imagesArr.size() - 1;
                                    }
                                    setImageIndex(foundIndex);
                                    long j5 = uid2;
                                    return;
                                }
                                if (this.opennedFromMedia) {
                                    if (this.imagesArrTemp.isEmpty()) {
                                        i = 0;
                                    } else {
                                        ArrayList<MessageObject> arrayList = this.imagesArrTemp;
                                        i = arrayList.get(arrayList.size() - 1).getId();
                                    }
                                    loadFromMaxId = i;
                                    if (loadIndex != 0 || !this.endReached[loadIndex] || this.mergeDialogId == 0) {
                                    } else {
                                        loadIndex = 1;
                                        if (!this.imagesArrTemp.isEmpty()) {
                                            ArrayList<MessageObject> arrayList2 = this.imagesArrTemp;
                                            long j6 = uid2;
                                            if (arrayList2.get(arrayList2.size() - 1).getDialogId() != this.mergeDialogId) {
                                                loadFromMaxId = 0;
                                            }
                                        }
                                    }
                                } else {
                                    loadFromMaxId = this.imagesArrTemp.isEmpty() ? 0 : this.imagesArrTemp.get(0).getId();
                                    if (loadIndex == 0 && this.endReached[loadIndex] && this.mergeDialogId != 0) {
                                        if (this.imagesArrTemp.isEmpty() || this.imagesArrTemp.get(0).getDialogId() == this.mergeDialogId) {
                                            loadIndex = 1;
                                        } else {
                                            loadFromMaxId = 0;
                                            loadIndex = 1;
                                        }
                                    }
                                }
                                if (!this.endReached[loadIndex]) {
                                    this.loadingMoreImages = true;
                                    MediaDataController.getInstance(this.currentAccount).loadMedia(loadIndex == 0 ? this.currentDialogId : this.mergeDialogId, 40, loadFromMaxId, 0, this.sharedMediaType, 1, this.classGuid, 0);
                                    return;
                                }
                                return;
                            }
                        }
                        long j7 = uid2;
                        this.needSearchImageInArr = false;
                        return;
                    }
                    int added2 = 0;
                    for (int i16 = 0; i16 < arr.size(); i16++) {
                        MessageObject message2 = arr.get(fromStart ? (arr.size() - 1) - i16 : i16);
                        if (this.imagesByIds[loadIndex].indexOfKey(message2.getId()) < 0) {
                            added2++;
                            if (!this.opennedFromMedia) {
                                this.imagesArr.add(0, message2);
                            } else if (fromStart) {
                                this.imagesArr.add(0, message2);
                                int i17 = this.startOffset - 1;
                                this.startOffset = i17;
                                this.currentIndex++;
                                if (i17 < 0) {
                                    this.startOffset = 0;
                                }
                            } else {
                                this.imagesArr.add(message2);
                            }
                            this.imagesByIds[loadIndex].put(message2.getId(), message2);
                        }
                    }
                    if (this.opennedFromMedia != 0) {
                        if (added2 == 0 && !fromStart) {
                            this.totalImagesCount = this.startOffset + this.imagesArr.size();
                            this.totalImagesCountMerge = 0;
                        }
                    } else if (added2 != 0) {
                        int index = this.currentIndex;
                        this.currentIndex = -1;
                        setImageIndex(index + added2);
                    } else {
                        this.totalImagesCount = this.imagesArr.size();
                        this.totalImagesCountMerge = 0;
                    }
                }
            } else if (i14 == NotificationCenter.emojiLoaded) {
                CaptionTextViewSwitcher captionTextViewSwitcher2 = this.captionTextViewSwitcher;
                if (captionTextViewSwitcher2 != null) {
                    captionTextViewSwitcher2.invalidateViews();
                }
            } else if (i14 == NotificationCenter.filePreparingFailed) {
                MessageObject messageObject3 = args[0];
                if (this.loadInitialVideo) {
                    this.loadInitialVideo = false;
                    this.progressView.setVisibility(4);
                    preparePlayer(this.currentPlayingVideoFile, false, false, this.editState.savedFilterState);
                } else if (this.tryStartRequestPreviewOnFinish) {
                    releasePlayer(false);
                    this.tryStartRequestPreviewOnFinish = !MediaController.getInstance().scheduleVideoConvert(this.videoPreviewMessageObject, true);
                } else if (messageObject3 == this.videoPreviewMessageObject) {
                    this.requestingPreview = false;
                    this.progressView.setVisibility(4);
                }
            } else if (i14 == NotificationCenter.fileNewChunkAvailable) {
                if (args[0] == this.videoPreviewMessageObject) {
                    String finalPath = args[1];
                    long finalSize = args[3].longValue();
                    this.photoProgressViews[0].setProgress(args[4].floatValue(), true);
                    if (finalSize != 0) {
                        this.requestingPreview = false;
                        this.photoProgressViews[0].setProgress(1.0f, true);
                        this.photoProgressViews[0].setBackgroundState(3, true, true);
                        preparePlayer(Uri.fromFile(new File(finalPath)), false, true, this.editState.savedFilterState);
                    }
                }
            } else if (i14 == NotificationCenter.messagesDeleted && !(scheduled = args[2].booleanValue())) {
                long channelId = args[1].longValue();
                ArrayList<Integer> markAsDeletedMessages = args[0];
                boolean reset = false;
                boolean resetCurrent = false;
                int x = 0;
                while (x < 2) {
                    ArrayList<MessageObject> arr2 = x == 0 ? this.imagesArr : this.imagesArrTemp;
                    SparseArray<MessageObject>[] ids = x == 0 ? this.imagesByIds : this.imagesByIdsTemp;
                    if (!arr2.isEmpty()) {
                        int b2 = 0;
                        while (b2 < 2) {
                            if (ids[b2].size() > 0) {
                                MessageObject messageObject4 = ids[b2].valueAt(0);
                                MessageObject messageObject5 = messageObject4;
                                if (messageObject4.messageOwner.peer_id.channel_id == channelId) {
                                    int a7 = 0;
                                    int N = markAsDeletedMessages.size();
                                    while (a7 < N) {
                                        int mid = markAsDeletedMessages.get(a7).intValue();
                                        boolean scheduled2 = scheduled;
                                        MessageObject message3 = ids[b2].get(markAsDeletedMessages.get(a7).intValue());
                                        if (message3 != null) {
                                            ids[b2].remove(mid);
                                            arr2.remove(message3);
                                            if (b2 == 0) {
                                                this.totalImagesCount--;
                                            } else {
                                                this.totalImagesCountMerge--;
                                            }
                                            if (message3 == this.currentMessageObject) {
                                                resetCurrent = true;
                                            }
                                            reset = true;
                                        }
                                        a7++;
                                        scheduled = scheduled2;
                                    }
                                }
                            }
                            b2++;
                            scheduled = scheduled;
                        }
                    }
                    x++;
                    scheduled = scheduled;
                }
                if (!reset) {
                    return;
                }
                if (resetCurrent && this == PipInstance) {
                    destroyPhotoViewer();
                } else if (!this.imagesArr.isEmpty()) {
                    int index2 = this.currentIndex;
                    this.currentIndex = -1;
                    if (index2 >= this.imagesArr.size()) {
                        index2 = this.imagesArr.size() - 1;
                    }
                    setImageIndex(index2);
                } else {
                    closePhoto(false, true);
                }
            }
        }
    }

    /* access modifiers changed from: private */
    public void showDownloadAlert() {
        AlertDialog.Builder builder = new AlertDialog.Builder(this.parentActivity, this.resourcesProvider);
        builder.setTitle(LocaleController.getString("AppName", NUM));
        builder.setPositiveButton(LocaleController.getString("OK", NUM), (DialogInterface.OnClickListener) null);
        MessageObject messageObject = this.currentMessageObject;
        boolean alreadyDownloading = false;
        if (messageObject != null && messageObject.isVideo() && FileLoader.getInstance(this.currentMessageObject.currentAccount).isLoadingFile(this.currentFileNames[0])) {
            alreadyDownloading = true;
        }
        if (alreadyDownloading) {
            builder.setMessage(LocaleController.getString("PleaseStreamDownload", NUM));
        } else {
            builder.setMessage(LocaleController.getString("PleaseDownload", NUM));
        }
        showAlertDialog(builder);
    }

    /* access modifiers changed from: private */
    public void onSharePressed() {
        boolean z;
        if (this.parentActivity != null && this.allowShare) {
            File f = null;
            boolean isVideo = false;
            try {
                MessageObject messageObject = this.currentMessageObject;
                if (messageObject != null) {
                    isVideo = messageObject.isVideo();
                    if (!TextUtils.isEmpty(this.currentMessageObject.messageOwner.attachPath)) {
                        f = new File(this.currentMessageObject.messageOwner.attachPath);
                        if (!f.exists()) {
                            f = null;
                        }
                    }
                    if (f == null) {
                        f = FileLoader.getInstance(this.currentAccount).getPathToMessage(this.currentMessageObject.messageOwner);
                    }
                } else if (this.currentFileLocationVideo != null) {
                    FileLoader instance = FileLoader.getInstance(this.currentAccount);
                    TLRPC.FileLocation fileLocation = getFileLocation(this.currentFileLocationVideo);
                    String fileLocationExt = getFileLocationExt(this.currentFileLocationVideo);
                    if (this.avatarsDialogId == 0) {
                        if (!this.isEvent) {
                            z = false;
                            f = instance.getPathToAttach(fileLocation, fileLocationExt, z);
                        }
                    }
                    z = true;
                    f = instance.getPathToAttach(fileLocation, fileLocationExt, z);
                } else {
                    PageBlocksAdapter pageBlocksAdapter2 = this.pageBlocksAdapter;
                    if (pageBlocksAdapter2 != null) {
                        f = pageBlocksAdapter2.getFile(this.currentIndex);
                    }
                }
                if (f == null || !f.exists()) {
                    showDownloadAlert();
                    return;
                }
                Intent intent = new Intent("android.intent.action.SEND");
                if (isVideo) {
                    intent.setType("video/mp4");
                } else {
                    MessageObject messageObject2 = this.currentMessageObject;
                    if (messageObject2 != null) {
                        intent.setType(messageObject2.getMimeType());
                    } else {
                        intent.setType("image/jpeg");
                    }
                }
                if (Build.VERSION.SDK_INT >= 24) {
                    try {
                        intent.putExtra("android.intent.extra.STREAM", FileProvider.getUriForFile(this.parentActivity, "org.telegram.messenger.beta.provider", f));
                        intent.setFlags(1);
                    } catch (Exception e) {
                        intent.putExtra("android.intent.extra.STREAM", Uri.fromFile(f));
                    }
                } else {
                    intent.putExtra("android.intent.extra.STREAM", Uri.fromFile(f));
                }
                this.parentActivity.startActivityForResult(Intent.createChooser(intent, LocaleController.getString("ShareFile", NUM)), 500);
            } catch (Exception e2) {
                FileLog.e((Throwable) e2);
            }
        }
    }

    /* access modifiers changed from: private */
    public void setScaleToFill() {
        float bitmapWidth = (float) this.centerImage.getBitmapWidth();
        float bitmapHeight = (float) this.centerImage.getBitmapHeight();
        if (bitmapWidth != 0.0f && bitmapHeight != 0.0f) {
            float containerWidth = (float) getContainerViewWidth();
            float containerHeight = (float) getContainerViewHeight();
            float scaleFit = Math.min(containerHeight / bitmapHeight, containerWidth / bitmapWidth);
            float max = Math.max(containerWidth / ((float) ((int) (bitmapWidth * scaleFit))), containerHeight / ((float) ((int) (bitmapHeight * scaleFit))));
            this.scale = max;
            updateMinMax(max);
        }
    }

    public void setParentAlert(ChatAttachAlert alert) {
        this.parentAlert = alert;
    }

    public void setParentActivity(Activity activity) {
        setParentActivity(activity, (Theme.ResourcesProvider) null);
    }

    public void setParentActivity(Activity activity, Theme.ResourcesProvider resourcesProvider2) {
        String str;
        Activity activity2 = activity;
        final Theme.ResourcesProvider resourcesProvider3 = resourcesProvider2;
        Theme.createChatResources(activity2, false);
        this.resourcesProvider = resourcesProvider3;
        int i = UserConfig.selectedAccount;
        this.currentAccount = i;
        this.centerImage.setCurrentAccount(i);
        this.leftImage.setCurrentAccount(this.currentAccount);
        this.rightImage.setCurrentAccount(this.currentAccount);
        PhotoViewerCaptionEnterView photoViewerCaptionEnterView = this.captionEditText;
        if (photoViewerCaptionEnterView != null) {
            photoViewerCaptionEnterView.currentAccount = UserConfig.selectedAccount;
        }
        if (this.parentActivity == activity2) {
            Theme.ResourcesProvider resourcesProvider4 = resourcesProvider3;
        } else if (activity2 == null) {
            Theme.ResourcesProvider resourcesProvider5 = resourcesProvider3;
        } else {
            this.inBubbleMode = activity2 instanceof BubbleActivity;
            this.parentActivity = activity2;
            this.activityContext = new ContextThemeWrapper(this.parentActivity, NUM);
            this.touchSlop = ViewConfiguration.get(this.parentActivity).getScaledTouchSlop();
            if (progressDrawables == null) {
                progressDrawables = new Drawable[]{ContextCompat.getDrawable(this.parentActivity, NUM), ContextCompat.getDrawable(this.parentActivity, NUM), ContextCompat.getDrawable(this.parentActivity, NUM)};
            }
            this.scroller = new Scroller(activity2);
            AnonymousClass10 r0 = new FrameLayout(activity2) {
                private Runnable attachRunnable;

                public boolean onInterceptTouchEvent(MotionEvent ev) {
                    return PhotoViewer.this.isVisible && super.onInterceptTouchEvent(ev);
                }

                public boolean onTouchEvent(MotionEvent event) {
                    return PhotoViewer.this.isVisible && PhotoViewer.this.onTouchEvent(event);
                }

                public boolean dispatchKeyEvent(KeyEvent event) {
                    int keyCode = event.getKeyCode();
                    if (!PhotoViewer.this.muteVideo && PhotoViewer.this.sendPhotoType != 1 && PhotoViewer.this.isCurrentVideo && PhotoViewer.this.videoPlayer != null && event.getRepeatCount() == 0 && event.getAction() == 0 && (event.getKeyCode() == 24 || event.getKeyCode() == 25)) {
                        PhotoViewer.this.videoPlayer.setVolume(1.0f);
                    }
                    return super.dispatchKeyEvent(event);
                }

                public boolean dispatchTouchEvent(MotionEvent ev) {
                    if (PhotoViewer.this.videoPlayerControlVisible && PhotoViewer.this.isPlaying) {
                        switch (ev.getActionMasked()) {
                            case 0:
                            case 5:
                                AndroidUtilities.cancelRunOnUIThread(PhotoViewer.this.hideActionBarRunnable);
                                break;
                            case 1:
                            case 3:
                            case 6:
                                PhotoViewer.this.scheduleActionBarHide();
                                break;
                        }
                    }
                    return super.dispatchTouchEvent(ev);
                }

                /* access modifiers changed from: protected */
                public boolean drawChild(Canvas canvas, View child, long drawingTime) {
                    try {
                        return super.drawChild(canvas, child, drawingTime);
                    } catch (Throwable th) {
                        return false;
                    }
                }

                /* access modifiers changed from: protected */
                public void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
                    int newSize;
                    int widthSize = View.MeasureSpec.getSize(widthMeasureSpec);
                    int heightSize = View.MeasureSpec.getSize(heightMeasureSpec);
                    if (Build.VERSION.SDK_INT >= 21 && PhotoViewer.this.lastInsets != null) {
                        WindowInsets insets = (WindowInsets) PhotoViewer.this.lastInsets;
                        if (!PhotoViewer.this.inBubbleMode) {
                            if (AndroidUtilities.incorrectDisplaySizeFix) {
                                if (heightSize > AndroidUtilities.displaySize.y) {
                                    heightSize = AndroidUtilities.displaySize.y;
                                }
                                heightSize += AndroidUtilities.statusBarHeight;
                            } else if (insets.getStableInsetBottom() >= 0 && AndroidUtilities.statusBarHeight >= 0 && (newSize = (heightSize - AndroidUtilities.statusBarHeight) - insets.getStableInsetBottom()) > 0 && newSize < 4096) {
                                AndroidUtilities.displaySize.y = newSize;
                            }
                        }
                        int bottomInsets = insets.getSystemWindowInsetBottom();
                        if (PhotoViewer.this.captionEditText.isPopupShowing()) {
                            bottomInsets -= PhotoViewer.this.containerView.getKeyboardHeight();
                        }
                        heightSize -= bottomInsets;
                    } else if (heightSize > AndroidUtilities.displaySize.y) {
                        heightSize = AndroidUtilities.displaySize.y;
                    }
                    int widthSize2 = widthSize - (getPaddingLeft() + getPaddingRight());
                    int heightSize2 = heightSize - getPaddingBottom();
                    setMeasuredDimension(widthSize2, heightSize2);
                    ViewGroup.LayoutParams layoutParams = PhotoViewer.this.animatingImageView.getLayoutParams();
                    PhotoViewer.this.animatingImageView.measure(View.MeasureSpec.makeMeasureSpec(layoutParams.width, Integer.MIN_VALUE), View.MeasureSpec.makeMeasureSpec(layoutParams.height, Integer.MIN_VALUE));
                    PhotoViewer.this.containerView.measure(View.MeasureSpec.makeMeasureSpec(widthSize2, NUM), View.MeasureSpec.makeMeasureSpec(heightSize2, NUM));
                    PhotoViewer.this.navigationBar.measure(View.MeasureSpec.makeMeasureSpec(widthSize2, NUM), View.MeasureSpec.makeMeasureSpec(PhotoViewer.this.navigationBarHeight, NUM));
                }

                /* access modifiers changed from: protected */
                public void onLayout(boolean changed, int left, int top, int right, int bottom) {
                    PhotoViewer.this.animatingImageView.layout(getPaddingLeft(), 0, getPaddingLeft() + PhotoViewer.this.animatingImageView.getMeasuredWidth(), PhotoViewer.this.animatingImageView.getMeasuredHeight());
                    PhotoViewer.this.containerView.layout(getPaddingLeft(), 0, getPaddingLeft() + PhotoViewer.this.containerView.getMeasuredWidth(), PhotoViewer.this.containerView.getMeasuredHeight());
                    PhotoViewer.this.navigationBar.layout(getPaddingLeft(), PhotoViewer.this.containerView.getMeasuredHeight(), PhotoViewer.this.navigationBar.getMeasuredWidth(), PhotoViewer.this.containerView.getMeasuredHeight() + PhotoViewer.this.navigationBar.getMeasuredHeight());
                    boolean unused = PhotoViewer.this.wasLayout = true;
                    if (changed) {
                        if (!PhotoViewer.this.dontResetZoomOnFirstLayout) {
                            float unused2 = PhotoViewer.this.scale = 1.0f;
                            float unused3 = PhotoViewer.this.translationX = 0.0f;
                            float unused4 = PhotoViewer.this.translationY = 0.0f;
                            PhotoViewer photoViewer = PhotoViewer.this;
                            photoViewer.updateMinMax(photoViewer.scale);
                        }
                        if (PhotoViewer.this.checkImageView != null) {
                            PhotoViewer.this.checkImageView.post(new PhotoViewer$10$$ExternalSyntheticLambda0(this));
                        }
                    }
                    if (PhotoViewer.this.dontResetZoomOnFirstLayout) {
                        PhotoViewer.this.setScaleToFill();
                        boolean unused5 = PhotoViewer.this.dontResetZoomOnFirstLayout = false;
                    }
                }

                /* renamed from: lambda$onLayout$0$org-telegram-ui-PhotoViewer$10  reason: not valid java name */
                public /* synthetic */ void m4301lambda$onLayout$0$orgtelegramuiPhotoViewer$10() {
                    FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) PhotoViewer.this.checkImageView.getLayoutParams();
                    int rotation = ((WindowManager) ApplicationLoader.applicationContext.getSystemService("window")).getDefaultDisplay().getRotation();
                    int i = 0;
                    int newMargin = ((ActionBar.getCurrentActionBarHeight() - AndroidUtilities.dp(34.0f)) / 2) + (PhotoViewer.this.isStatusBarVisible() ? AndroidUtilities.statusBarHeight : 0);
                    if (newMargin != layoutParams.topMargin) {
                        layoutParams.topMargin = newMargin;
                        PhotoViewer.this.checkImageView.setLayoutParams(layoutParams);
                    }
                    FrameLayout.LayoutParams layoutParams2 = (FrameLayout.LayoutParams) PhotoViewer.this.photosCounterView.getLayoutParams();
                    int currentActionBarHeight = (ActionBar.getCurrentActionBarHeight() - AndroidUtilities.dp(40.0f)) / 2;
                    if (PhotoViewer.this.isStatusBarVisible()) {
                        i = AndroidUtilities.statusBarHeight;
                    }
                    int newMargin2 = currentActionBarHeight + i;
                    if (layoutParams2.topMargin != newMargin2) {
                        layoutParams2.topMargin = newMargin2;
                        PhotoViewer.this.photosCounterView.setLayoutParams(layoutParams2);
                    }
                }

                /* access modifiers changed from: protected */
                public void onAttachedToWindow() {
                    super.onAttachedToWindow();
                    PhotoViewer.this.centerImage.onAttachedToWindow();
                    PhotoViewer.this.leftImage.onAttachedToWindow();
                    PhotoViewer.this.rightImage.onAttachedToWindow();
                    boolean unused = PhotoViewer.this.attachedToWindow = true;
                }

                /* access modifiers changed from: protected */
                public void onDetachedFromWindow() {
                    super.onDetachedFromWindow();
                    PhotoViewer.this.centerImage.onDetachedFromWindow();
                    PhotoViewer.this.leftImage.onDetachedFromWindow();
                    PhotoViewer.this.rightImage.onDetachedFromWindow();
                    boolean unused = PhotoViewer.this.attachedToWindow = false;
                    boolean unused2 = PhotoViewer.this.wasLayout = false;
                }

                public boolean dispatchKeyEventPreIme(KeyEvent event) {
                    if (event == null || event.getKeyCode() != 4 || event.getAction() != 1) {
                        return super.dispatchKeyEventPreIme(event);
                    }
                    if (PhotoViewer.this.captionEditText.isPopupShowing() || PhotoViewer.this.captionEditText.isKeyboardVisible()) {
                        PhotoViewer.this.closeCaptionEnter(true);
                        return false;
                    }
                    PhotoViewer.getInstance().closePhoto(true, false);
                    return true;
                }

                /* access modifiers changed from: protected */
                public void onDraw(Canvas canvas) {
                    if (Build.VERSION.SDK_INT >= 21 && PhotoViewer.this.isVisible && PhotoViewer.this.lastInsets != null) {
                        PhotoViewer.this.blackPaint.setAlpha(PhotoViewer.this.backgroundDrawable.getAlpha());
                        canvas.drawRect(0.0f, (float) getMeasuredHeight(), (float) getMeasuredWidth(), (float) (getMeasuredHeight() + ((WindowInsets) PhotoViewer.this.lastInsets).getSystemWindowInsetBottom()), PhotoViewer.this.blackPaint);
                    }
                }

                /* access modifiers changed from: protected */
                public void dispatchDraw(Canvas canvas) {
                    super.dispatchDraw(canvas);
                    if (PhotoViewer.this.parentChatActivity != null) {
                        View undoView = PhotoViewer.this.parentChatActivity.getUndoView();
                        if (undoView.getVisibility() == 0) {
                            canvas.save();
                            View parent = (View) undoView.getParent();
                            canvas.clipRect(parent.getX(), parent.getY(), parent.getX() + ((float) parent.getWidth()), parent.getY() + ((float) parent.getHeight()));
                            canvas.translate(undoView.getX(), undoView.getY());
                            undoView.draw(canvas);
                            canvas.restore();
                            invalidate();
                        }
                    }
                }
            };
            this.windowView = r0;
            r0.setBackgroundDrawable(this.backgroundDrawable);
            this.windowView.setFocusable(false);
            ClippingImageView clippingImageView = new ClippingImageView(activity2);
            this.animatingImageView = clippingImageView;
            clippingImageView.setAnimationValues(this.animationValues);
            this.windowView.addView(this.animatingImageView, LayoutHelper.createFrame(40, 40.0f));
            FrameLayoutDrawer frameLayoutDrawer = new FrameLayoutDrawer(activity2);
            this.containerView = frameLayoutDrawer;
            frameLayoutDrawer.setFocusable(false);
            this.containerView.setClipChildren(true);
            this.containerView.setClipToPadding(true);
            this.windowView.setClipChildren(false);
            this.windowView.setClipToPadding(false);
            this.windowView.addView(this.containerView, LayoutHelper.createFrame(-1, -1, 51));
            if (Build.VERSION.SDK_INT >= 21) {
                this.containerView.setFitsSystemWindows(true);
                this.containerView.setOnApplyWindowInsetsListener(new PhotoViewer$$ExternalSyntheticLambda3(this));
                this.containerView.setSystemUiVisibility(1792);
            }
            WindowManager.LayoutParams layoutParams = new WindowManager.LayoutParams();
            this.windowLayoutParams = layoutParams;
            layoutParams.height = -1;
            this.windowLayoutParams.format = -3;
            this.windowLayoutParams.width = -1;
            this.windowLayoutParams.gravity = 51;
            this.windowLayoutParams.type = 99;
            if (Build.VERSION.SDK_INT >= 28) {
                this.windowLayoutParams.layoutInDisplayCutoutMode = 1;
            }
            if (Build.VERSION.SDK_INT >= 21) {
                this.windowLayoutParams.flags = -NUM;
            } else {
                this.windowLayoutParams.flags = 131072;
            }
            PaintingOverlay paintingOverlay2 = new PaintingOverlay(this.parentActivity);
            this.paintingOverlay = paintingOverlay2;
            this.containerView.addView(paintingOverlay2, LayoutHelper.createFrame(-2, -2.0f));
            PaintingOverlay paintingOverlay3 = new PaintingOverlay(this.parentActivity);
            this.leftPaintingOverlay = paintingOverlay3;
            this.containerView.addView(paintingOverlay3, LayoutHelper.createFrame(-2, -2.0f));
            PaintingOverlay paintingOverlay4 = new PaintingOverlay(this.parentActivity);
            this.rightPaintingOverlay = paintingOverlay4;
            this.containerView.addView(paintingOverlay4, LayoutHelper.createFrame(-2, -2.0f));
            AnonymousClass11 r02 = new ActionBar(activity2) {
                public void setAlpha(float alpha) {
                    super.setAlpha(alpha);
                    PhotoViewer.this.containerView.invalidate();
                }
            };
            this.actionBar = r02;
            r02.setOverlayTitleAnimation(true);
            this.actionBar.setTitleColor(-1);
            this.actionBar.setSubtitleColor(-1);
            this.actionBar.setBackgroundColor(NUM);
            this.actionBar.setOccupyStatusBar(isStatusBarVisible());
            this.actionBar.setItemsBackgroundColor(NUM, false);
            this.actionBar.setBackButtonImage(NUM);
            this.actionBar.setTitle(LocaleController.formatString("Of", NUM, 1, 1));
            this.containerView.addView(this.actionBar, LayoutHelper.createFrame(-1, -2.0f));
            this.actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
                /* JADX WARNING: Code restructure failed: missing block: B:201:0x063e, code lost:
                    if (r14.id == org.telegram.messenger.UserConfig.getInstance(org.telegram.ui.PhotoViewer.access$3200(r7.this$0)).getClientUserId()) goto L_0x0643;
                 */
                /* Code decompiled incorrectly, please refer to instructions dump. */
                public void onItemClick(int r33) {
                    /*
                        r32 = this;
                        r7 = r32
                        r8 = r33
                        r0 = -1
                        r1 = 1
                        java.lang.Integer r2 = java.lang.Integer.valueOf(r1)
                        r3 = 0
                        if (r8 != r0) goto L_0x003a
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        boolean r0 = r0.needCaptionLayout
                        if (r0 == 0) goto L_0x0033
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        org.telegram.ui.Components.PhotoViewerCaptionEnterView r0 = r0.captionEditText
                        boolean r0 = r0.isPopupShowing()
                        if (r0 != 0) goto L_0x002d
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        org.telegram.ui.Components.PhotoViewerCaptionEnterView r0 = r0.captionEditText
                        boolean r0 = r0.isKeyboardVisible()
                        if (r0 == 0) goto L_0x0033
                    L_0x002d:
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        r0.closeCaptionEnter(r3)
                        return
                    L_0x0033:
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        r0.closePhoto(r1, r3)
                        goto L_0x0cff
                    L_0x003a:
                        r4 = 0
                        r6 = 4
                        r9 = 0
                        if (r8 != r1) goto L_0x016f
                        int r0 = android.os.Build.VERSION.SDK_INT
                        r2 = 23
                        if (r0 < r2) goto L_0x006c
                        int r0 = android.os.Build.VERSION.SDK_INT
                        r2 = 28
                        if (r0 <= r2) goto L_0x0050
                        boolean r0 = org.telegram.messenger.BuildVars.NO_SCOPED_STORAGE
                        if (r0 == 0) goto L_0x006c
                    L_0x0050:
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        android.app.Activity r0 = r0.parentActivity
                        java.lang.String r2 = "android.permission.WRITE_EXTERNAL_STORAGE"
                        int r0 = r0.checkSelfPermission(r2)
                        if (r0 == 0) goto L_0x006c
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        android.app.Activity r0 = r0.parentActivity
                        java.lang.String[] r1 = new java.lang.String[r1]
                        r1[r3] = r2
                        r0.requestPermissions(r1, r6)
                        return
                    L_0x006c:
                        r0 = 0
                        org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r2 = r2.currentMessageObject
                        if (r2 == 0) goto L_0x00dd
                        org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r2 = r2.currentMessageObject
                        org.telegram.tgnet.TLRPC$Message r2 = r2.messageOwner
                        org.telegram.tgnet.TLRPC$MessageMedia r2 = r2.media
                        boolean r2 = r2 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaWebPage
                        if (r2 == 0) goto L_0x00ba
                        org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r2 = r2.currentMessageObject
                        org.telegram.tgnet.TLRPC$Message r2 = r2.messageOwner
                        org.telegram.tgnet.TLRPC$MessageMedia r2 = r2.media
                        org.telegram.tgnet.TLRPC$WebPage r2 = r2.webpage
                        if (r2 == 0) goto L_0x00ba
                        org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r2 = r2.currentMessageObject
                        org.telegram.tgnet.TLRPC$Message r2 = r2.messageOwner
                        org.telegram.tgnet.TLRPC$MessageMedia r2 = r2.media
                        org.telegram.tgnet.TLRPC$WebPage r2 = r2.webpage
                        org.telegram.tgnet.TLRPC$Document r2 = r2.document
                        if (r2 != 0) goto L_0x00ba
                        org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                        int r3 = r2.currentIndex
                        org.telegram.tgnet.TLObject r2 = r2.getFileLocation(r3, r9)
                        org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                        int r3 = r3.currentAccount
                        org.telegram.messenger.FileLoader r3 = org.telegram.messenger.FileLoader.getInstance(r3)
                        java.io.File r0 = r3.getPathToAttach(r2, r1)
                        goto L_0x00d0
                    L_0x00ba:
                        org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                        int r1 = r1.currentAccount
                        org.telegram.messenger.FileLoader r1 = org.telegram.messenger.FileLoader.getInstance(r1)
                        org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r2 = r2.currentMessageObject
                        org.telegram.tgnet.TLRPC$Message r2 = r2.messageOwner
                        java.io.File r0 = r1.getPathToMessage(r2)
                    L_0x00d0:
                        org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r1 = r1.currentMessageObject
                        boolean r1 = r1.isVideo()
                        r9 = r1
                        goto L_0x014a
                    L_0x00dd:
                        org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.ImageLocation r2 = r2.currentFileLocationVideo
                        if (r2 == 0) goto L_0x011e
                        org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                        int r2 = r2.currentAccount
                        org.telegram.messenger.FileLoader r2 = org.telegram.messenger.FileLoader.getInstance(r2)
                        org.telegram.ui.PhotoViewer r6 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.ImageLocation r6 = r6.currentFileLocationVideo
                        org.telegram.tgnet.TLRPC$FileLocation r6 = org.telegram.ui.PhotoViewer.getFileLocation(r6)
                        org.telegram.ui.PhotoViewer r9 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.ImageLocation r9 = r9.currentFileLocationVideo
                        java.lang.String r9 = org.telegram.ui.PhotoViewer.getFileLocationExt(r9)
                        org.telegram.ui.PhotoViewer r10 = org.telegram.ui.PhotoViewer.this
                        long r10 = r10.avatarsDialogId
                        int r12 = (r10 > r4 ? 1 : (r10 == r4 ? 0 : -1))
                        if (r12 != 0) goto L_0x0117
                        org.telegram.ui.PhotoViewer r4 = org.telegram.ui.PhotoViewer.this
                        boolean r4 = r4.isEvent
                        if (r4 == 0) goto L_0x0116
                        goto L_0x0117
                    L_0x0116:
                        r1 = 0
                    L_0x0117:
                        java.io.File r0 = r2.getPathToAttach(r6, r9, r1)
                        r1 = 0
                        r9 = r1
                        goto L_0x014a
                    L_0x011e:
                        org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                        org.telegram.ui.PhotoViewer$PageBlocksAdapter r1 = r1.pageBlocksAdapter
                        if (r1 == 0) goto L_0x0148
                        org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                        org.telegram.ui.PhotoViewer$PageBlocksAdapter r1 = r1.pageBlocksAdapter
                        org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                        int r2 = r2.currentIndex
                        java.io.File r0 = r1.getFile(r2)
                        org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                        org.telegram.ui.PhotoViewer$PageBlocksAdapter r1 = r1.pageBlocksAdapter
                        org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                        int r2 = r2.currentIndex
                        boolean r1 = r1.isVideo(r2)
                        r9 = r1
                        goto L_0x014a
                    L_0x0148:
                        r1 = 0
                        r9 = r1
                    L_0x014a:
                        if (r0 == 0) goto L_0x0168
                        boolean r1 = r0.exists()
                        if (r1 == 0) goto L_0x0168
                        java.lang.String r1 = r0.toString()
                        org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                        android.app.Activity r2 = r2.parentActivity
                        r4 = 0
                        r5 = 0
                        org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda7 r6 = new org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda7
                        r6.<init>(r7, r9)
                        r3 = r9
                        org.telegram.messenger.MediaController.saveFile(r1, r2, r3, r4, r5, r6)
                        goto L_0x016d
                    L_0x0168:
                        org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                        r1.showDownloadAlert()
                    L_0x016d:
                        goto L_0x0cff
                    L_0x016f:
                        r10 = 2
                        if (r8 != r10) goto L_0x01c7
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        long r10 = r0.currentDialogId
                        int r0 = (r10 > r4 ? 1 : (r10 == r4 ? 0 : -1))
                        if (r0 == 0) goto L_0x0cff
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        boolean unused = r0.disableShowCheck = r1
                        android.os.Bundle r0 = new android.os.Bundle
                        r0.<init>()
                        org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                        long r4 = r2.currentDialogId
                        java.lang.String r2 = "dialog_id"
                        r0.putLong(r2, r4)
                        org.telegram.ui.Components.MediaActivity r2 = new org.telegram.ui.Components.MediaActivity
                        r2.<init>(r0, r9)
                        org.telegram.ui.PhotoViewer r4 = org.telegram.ui.PhotoViewer.this
                        org.telegram.ui.ChatActivity r4 = r4.parentChatActivity
                        if (r4 == 0) goto L_0x01ab
                        org.telegram.ui.PhotoViewer r4 = org.telegram.ui.PhotoViewer.this
                        org.telegram.ui.ChatActivity r4 = r4.parentChatActivity
                        org.telegram.tgnet.TLRPC$ChatFull r4 = r4.getCurrentChatInfo()
                        r2.setChatInfo(r4)
                    L_0x01ab:
                        org.telegram.ui.PhotoViewer r4 = org.telegram.ui.PhotoViewer.this
                        r4.closePhoto(r3, r3)
                        org.telegram.ui.PhotoViewer r4 = org.telegram.ui.PhotoViewer.this
                        android.app.Activity r4 = r4.parentActivity
                        boolean r4 = r4 instanceof org.telegram.ui.LaunchActivity
                        if (r4 == 0) goto L_0x01c5
                        org.telegram.ui.PhotoViewer r4 = org.telegram.ui.PhotoViewer.this
                        android.app.Activity r4 = r4.parentActivity
                        org.telegram.ui.LaunchActivity r4 = (org.telegram.ui.LaunchActivity) r4
                        r4.presentFragment(r2, r3, r1)
                    L_0x01c5:
                        goto L_0x0cff
                    L_0x01c7:
                        if (r8 != r6) goto L_0x028a
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r0 = r0.currentMessageObject
                        if (r0 != 0) goto L_0x01d2
                        return
                    L_0x01d2:
                        android.os.Bundle r0 = new android.os.Bundle
                        r0.<init>()
                        org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                        long r4 = r2.currentDialogId
                        org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r2 = r2.currentMessageObject
                        if (r2 == 0) goto L_0x01ef
                        org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r2 = r2.currentMessageObject
                        long r4 = r2.getDialogId()
                    L_0x01ef:
                        boolean r2 = org.telegram.messenger.DialogObject.isEncryptedDialog(r4)
                        if (r2 == 0) goto L_0x01ff
                        int r2 = org.telegram.messenger.DialogObject.getEncryptedChatId(r4)
                        java.lang.String r6 = "enc_id"
                        r0.putInt(r6, r2)
                        goto L_0x0234
                    L_0x01ff:
                        boolean r2 = org.telegram.messenger.DialogObject.isUserDialog(r4)
                        if (r2 == 0) goto L_0x020b
                        java.lang.String r2 = "user_id"
                        r0.putLong(r2, r4)
                        goto L_0x0234
                    L_0x020b:
                        org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                        int r2 = r2.currentAccount
                        org.telegram.messenger.MessagesController r2 = org.telegram.messenger.MessagesController.getInstance(r2)
                        long r10 = -r4
                        java.lang.Long r6 = java.lang.Long.valueOf(r10)
                        org.telegram.tgnet.TLRPC$Chat r2 = r2.getChat(r6)
                        if (r2 == 0) goto L_0x022e
                        org.telegram.tgnet.TLRPC$InputChannel r6 = r2.migrated_to
                        if (r6 == 0) goto L_0x022e
                        java.lang.String r6 = "migrated_to"
                        r0.putLong(r6, r4)
                        org.telegram.tgnet.TLRPC$InputChannel r6 = r2.migrated_to
                        long r10 = r6.channel_id
                        long r4 = -r10
                    L_0x022e:
                        long r10 = -r4
                        java.lang.String r6 = "chat_id"
                        r0.putLong(r6, r10)
                    L_0x0234:
                        org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r2 = r2.currentMessageObject
                        int r2 = r2.getId()
                        java.lang.String r6 = "message_id"
                        r0.putInt(r6, r2)
                        org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                        int r2 = r2.currentAccount
                        org.telegram.messenger.NotificationCenter r2 = org.telegram.messenger.NotificationCenter.getInstance(r2)
                        int r6 = org.telegram.messenger.NotificationCenter.closeChats
                        java.lang.Object[] r10 = new java.lang.Object[r3]
                        r2.postNotificationName(r6, r10)
                        org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                        android.app.Activity r2 = r2.parentActivity
                        boolean r2 = r2 instanceof org.telegram.ui.LaunchActivity
                        if (r2 == 0) goto L_0x027e
                        org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                        android.app.Activity r2 = r2.parentActivity
                        org.telegram.ui.LaunchActivity r2 = (org.telegram.ui.LaunchActivity) r2
                        int r6 = r2.getMainFragmentsCount()
                        if (r6 > r1) goto L_0x0275
                        boolean r6 = org.telegram.messenger.AndroidUtilities.isTablet()
                        if (r6 == 0) goto L_0x0273
                        goto L_0x0275
                    L_0x0273:
                        r6 = 0
                        goto L_0x0276
                    L_0x0275:
                        r6 = 1
                    L_0x0276:
                        org.telegram.ui.ChatActivity r10 = new org.telegram.ui.ChatActivity
                        r10.<init>(r0)
                        r2.presentFragment(r10, r6, r1)
                    L_0x027e:
                        org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                        r1.closePhoto(r3, r3)
                        org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject unused = r1.currentMessageObject = r9
                        goto L_0x0cff
                    L_0x028a:
                        r4 = 2131624819(0x7f0e0373, float:1.8876828E38)
                        java.lang.String r5 = "Cancel"
                        r6 = 3
                        if (r8 != r6) goto L_0x045d
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r0 = r0.currentMessageObject
                        if (r0 == 0) goto L_0x045c
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        android.app.Activity r0 = r0.parentActivity
                        boolean r0 = r0 instanceof org.telegram.ui.LaunchActivity
                        if (r0 != 0) goto L_0x02a6
                        goto L_0x045c
                    L_0x02a6:
                        r0 = 0
                        org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r2 = r2.currentMessageObject
                        boolean r2 = r2.scheduled
                        if (r2 != 0) goto L_0x02d8
                        org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r2 = r2.currentMessageObject
                        long r10 = r2.getDialogId()
                        boolean r2 = org.telegram.messenger.DialogObject.isChatDialog(r10)
                        if (r2 == 0) goto L_0x02d8
                        org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                        int r2 = r2.currentAccount
                        org.telegram.messenger.MessagesController r2 = org.telegram.messenger.MessagesController.getInstance(r2)
                        long r12 = -r10
                        java.lang.Long r12 = java.lang.Long.valueOf(r12)
                        org.telegram.tgnet.TLRPC$Chat r2 = r2.getChat(r12)
                        boolean r0 = org.telegram.messenger.ChatObject.isChannelAndNotMegaGroup(r2)
                    L_0x02d8:
                        org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                        android.app.Activity r2 = r2.parentActivity
                        org.telegram.ui.LaunchActivity r2 = (org.telegram.ui.LaunchActivity) r2
                        org.telegram.ui.PhotoViewer r10 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r10 = r10.currentMessageObject
                        int r10 = r10.currentAccount
                        r2.switchToAccount(r10, r1)
                        if (r0 == 0) goto L_0x041a
                        java.util.ArrayList r2 = new java.util.ArrayList
                        r2.<init>(r1)
                        org.telegram.ui.PhotoViewer r6 = org.telegram.ui.PhotoViewer.this
                        org.telegram.ui.ChatActivity r6 = r6.parentChatActivity
                        if (r6 == 0) goto L_0x030e
                        org.telegram.ui.PhotoViewer r6 = org.telegram.ui.PhotoViewer.this
                        org.telegram.ui.ChatActivity r6 = r6.parentChatActivity
                        org.telegram.ui.PhotoViewer r9 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r9 = r9.currentMessageObject
                        long r9 = r9.getGroupId()
                        org.telegram.messenger.MessageObject$GroupedMessages r9 = r6.getGroup(r9)
                    L_0x030e:
                        r6 = r9
                        if (r6 == 0) goto L_0x0317
                        java.util.ArrayList<org.telegram.messenger.MessageObject> r9 = r6.messages
                        r2.addAll(r9)
                        goto L_0x0320
                    L_0x0317:
                        org.telegram.ui.PhotoViewer r9 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r9 = r9.currentMessageObject
                        r2.add(r9)
                    L_0x0320:
                        int r9 = r2.size()
                        if (r9 > r1) goto L_0x032d
                        org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                        r1.showShareAlert(r2)
                        goto L_0x0419
                    L_0x032d:
                        r9 = 1
                        r10 = 0
                    L_0x032f:
                        int r11 = r2.size()
                        if (r10 >= r11) goto L_0x0352
                        java.lang.Object r11 = r2.get(r10)
                        org.telegram.messenger.MessageObject r11 = (org.telegram.messenger.MessageObject) r11
                        boolean r11 = r11.isPhoto()
                        if (r11 == 0) goto L_0x0351
                        java.lang.Object r11 = r2.get(r10)
                        org.telegram.messenger.MessageObject r11 = (org.telegram.messenger.MessageObject) r11
                        boolean r11 = r11.isVideo()
                        if (r11 == 0) goto L_0x034e
                        goto L_0x0351
                    L_0x034e:
                        int r10 = r10 + 1
                        goto L_0x032f
                    L_0x0351:
                        r9 = 0
                    L_0x0352:
                        org.telegram.ui.ActionBar.AlertDialog$Builder r10 = new org.telegram.ui.ActionBar.AlertDialog$Builder
                        org.telegram.ui.PhotoViewer r11 = org.telegram.ui.PhotoViewer.this
                        android.app.Activity r11 = r11.parentActivity
                        org.telegram.ui.ActionBar.Theme$ResourcesProvider r12 = r15
                        r10.<init>(r11, r12)
                        r11 = 2131625942(0x7f0e07d6, float:1.8879106E38)
                        java.lang.String r12 = "ForwardGroupMedia"
                        java.lang.String r11 = org.telegram.messenger.LocaleController.getString(r12, r11)
                        org.telegram.ui.ActionBar.AlertDialog$Builder r10 = r10.setTitle(r11)
                        r11 = 2131625943(0x7f0e07d7, float:1.8879108E38)
                        java.lang.String r12 = "ForwardGroupMediaMessage"
                        java.lang.String r11 = org.telegram.messenger.LocaleController.getString(r12, r11)
                        org.telegram.ui.ActionBar.AlertDialog$Builder r10 = r10.setMessage(r11)
                        java.lang.String r11 = "voipgroup_listeningText"
                        org.telegram.ui.ActionBar.AlertDialog$Builder r10 = r10.setDialogButtonColorKey(r11)
                        if (r9 == 0) goto L_0x0387
                        r11 = 2131628654(0x7f0e126e, float:1.8884607E38)
                        java.lang.String r12 = "ThisPhoto"
                        goto L_0x038c
                    L_0x0387:
                        r11 = 2131628653(0x7f0e126d, float:1.8884605E38)
                        java.lang.String r12 = "ThisMedia"
                    L_0x038c:
                        java.lang.String r11 = org.telegram.messenger.LocaleController.getString(r12, r11)
                        org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda0 r12 = new org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda0
                        r12.<init>(r7)
                        org.telegram.ui.ActionBar.AlertDialog$Builder r10 = r10.setNegativeButton(r11, r12)
                        int r11 = r2.size()
                        java.lang.Object[] r3 = new java.lang.Object[r3]
                        if (r9 == 0) goto L_0x03a8
                        java.lang.String r12 = "AllNPhotos"
                        java.lang.String r3 = org.telegram.messenger.LocaleController.formatPluralString(r12, r11, r3)
                        goto L_0x03ae
                    L_0x03a8:
                        java.lang.String r12 = "AllNMedia"
                        java.lang.String r3 = org.telegram.messenger.LocaleController.formatPluralString(r12, r11, r3)
                    L_0x03ae:
                        org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda1 r11 = new org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda1
                        r11.<init>(r7, r2)
                        org.telegram.ui.ActionBar.AlertDialog$Builder r3 = r10.setPositiveButton(r3, r11)
                        java.lang.String r4 = org.telegram.messenger.LocaleController.getString(r5, r4)
                        org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda3 r5 = org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda3.INSTANCE
                        org.telegram.ui.ActionBar.AlertDialog$Builder r3 = r3.setNeutralButton(r4, r5)
                        org.telegram.ui.ActionBar.AlertDialog r3 = r3.create()
                        org.telegram.ui.PhotoViewer r4 = org.telegram.ui.PhotoViewer.this
                        java.lang.String r5 = "voipgroup_dialogBackground"
                        int r4 = r4.getThemedColor(r5)
                        r3.setBackgroundColor(r4)
                        r3.show()
                        r4 = -3
                        android.view.View r4 = r3.getButton(r4)
                        boolean r5 = r4 instanceof android.widget.TextView
                        if (r5 == 0) goto L_0x040e
                        r5 = r4
                        android.widget.TextView r5 = (android.widget.TextView) r5
                        org.telegram.ui.PhotoViewer r10 = org.telegram.ui.PhotoViewer.this
                        java.lang.String r11 = "dialogTextRed"
                        int r10 = r10.getThemedColor(r11)
                        r5.setTextColor(r10)
                        org.telegram.ui.PhotoViewer r5 = org.telegram.ui.PhotoViewer.this
                        int r5 = r5.getThemedColor(r11)
                        android.graphics.drawable.Drawable r5 = org.telegram.ui.ActionBar.Theme.getRoundRectSelectorDrawable(r5)
                        r4.setBackground(r5)
                        android.view.ViewGroup r5 = r3.getButtonsLayout()
                        boolean r5 = r5 instanceof android.widget.LinearLayout
                        if (r5 == 0) goto L_0x040e
                        android.view.ViewGroup r5 = r3.getButtonsLayout()
                        android.widget.LinearLayout r5 = (android.widget.LinearLayout) r5
                        int r5 = r5.getOrientation()
                        if (r5 != r1) goto L_0x040e
                        r4.bringToFront()
                    L_0x040e:
                        org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                        java.lang.String r5 = "voipgroup_actionBarItems"
                        int r1 = r1.getThemedColor(r5)
                        r3.setTextColor(r1)
                    L_0x0419:
                        goto L_0x045a
                    L_0x041a:
                        android.os.Bundle r2 = new android.os.Bundle
                        r2.<init>()
                        java.lang.String r4 = "onlySelect"
                        r2.putBoolean(r4, r1)
                        java.lang.String r4 = "dialogsType"
                        r2.putInt(r4, r6)
                        org.telegram.ui.DialogsActivity r4 = new org.telegram.ui.DialogsActivity
                        r4.<init>(r2)
                        java.util.ArrayList r5 = new java.util.ArrayList
                        r5.<init>()
                        org.telegram.ui.PhotoViewer r6 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r6 = r6.currentMessageObject
                        r5.add(r6)
                        org.telegram.ui.PhotoViewer r6 = org.telegram.ui.PhotoViewer.this
                        org.telegram.ui.ChatActivity r6 = r6.parentChatActivity
                        org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda9 r9 = new org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda9
                        r9.<init>(r7, r5, r6)
                        r4.setDelegate(r9)
                        org.telegram.ui.PhotoViewer r9 = org.telegram.ui.PhotoViewer.this
                        android.app.Activity r9 = r9.parentActivity
                        org.telegram.ui.LaunchActivity r9 = (org.telegram.ui.LaunchActivity) r9
                        r9.presentFragment(r4, r3, r1)
                        org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                        r1.closePhoto(r3, r3)
                    L_0x045a:
                        goto L_0x0cff
                    L_0x045c:
                        return
                    L_0x045d:
                        r6 = 6
                        if (r8 != r6) goto L_0x0790
                        org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                        android.app.Activity r2 = r2.parentActivity
                        if (r2 == 0) goto L_0x078f
                        org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                        org.telegram.ui.PhotoViewer$PhotoViewerProvider r2 = r2.placeProvider
                        if (r2 != 0) goto L_0x0472
                        goto L_0x078f
                    L_0x0472:
                        r2 = 0
                        org.telegram.ui.PhotoViewer r6 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r6 = r6.currentMessageObject
                        if (r6 == 0) goto L_0x04ac
                        org.telegram.ui.PhotoViewer r6 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r6 = r6.currentMessageObject
                        boolean r6 = r6.scheduled
                        if (r6 != 0) goto L_0x04ac
                        org.telegram.ui.PhotoViewer r6 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r6 = r6.currentMessageObject
                        long r10 = r6.getDialogId()
                        boolean r6 = org.telegram.messenger.DialogObject.isChatDialog(r10)
                        if (r6 == 0) goto L_0x04ac
                        org.telegram.ui.PhotoViewer r6 = org.telegram.ui.PhotoViewer.this
                        int r6 = r6.currentAccount
                        org.telegram.messenger.MessagesController r6 = org.telegram.messenger.MessagesController.getInstance(r6)
                        long r12 = -r10
                        java.lang.Long r12 = java.lang.Long.valueOf(r12)
                        org.telegram.tgnet.TLRPC$Chat r6 = r6.getChat(r12)
                        boolean r2 = org.telegram.messenger.ChatObject.isChannel(r6)
                    L_0x04ac:
                        org.telegram.ui.ActionBar.AlertDialog$Builder r6 = new org.telegram.ui.ActionBar.AlertDialog$Builder
                        org.telegram.ui.PhotoViewer r10 = org.telegram.ui.PhotoViewer.this
                        android.app.Activity r10 = r10.parentActivity
                        r6.<init>((android.content.Context) r10)
                        org.telegram.ui.PhotoViewer r10 = org.telegram.ui.PhotoViewer.this
                        org.telegram.ui.PhotoViewer$PhotoViewerProvider r10 = r10.placeProvider
                        java.lang.String r10 = r10.getDeleteMessageString()
                        r11 = 2131624447(0x7f0e01ff, float:1.8876074E38)
                        java.lang.String r12 = "AreYouSureDeletePhotoTitle"
                        if (r10 == 0) goto L_0x04d4
                        java.lang.String r11 = org.telegram.messenger.LocaleController.getString(r12, r11)
                        r6.setTitle(r11)
                        r6.setMessage(r10)
                        goto L_0x0599
                    L_0x04d4:
                        org.telegram.ui.PhotoViewer r13 = org.telegram.ui.PhotoViewer.this
                        boolean r13 = r13.isEmbedVideo
                        if (r13 != 0) goto L_0x056e
                        org.telegram.ui.PhotoViewer r13 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.ImageLocation r13 = r13.currentFileLocationVideo
                        if (r13 == 0) goto L_0x04f2
                        org.telegram.ui.PhotoViewer r13 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.ImageLocation r13 = r13.currentFileLocationVideo
                        org.telegram.ui.PhotoViewer r14 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.ImageLocation r14 = r14.currentFileLocation
                        if (r13 != r14) goto L_0x056e
                    L_0x04f2:
                        org.telegram.ui.PhotoViewer r13 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r13 = r13.currentMessageObject
                        if (r13 == 0) goto L_0x0507
                        org.telegram.ui.PhotoViewer r13 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r13 = r13.currentMessageObject
                        boolean r13 = r13.isVideo()
                        if (r13 == 0) goto L_0x0507
                        goto L_0x056e
                    L_0x0507:
                        org.telegram.ui.PhotoViewer r13 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r13 = r13.currentMessageObject
                        if (r13 == 0) goto L_0x0547
                        org.telegram.ui.PhotoViewer r13 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r13 = r13.currentMessageObject
                        boolean r13 = r13.isGif()
                        if (r13 == 0) goto L_0x0547
                        r11 = 2131624444(0x7f0e01fc, float:1.8876068E38)
                        java.lang.String r12 = "AreYouSureDeleteGIFTitle"
                        java.lang.String r11 = org.telegram.messenger.LocaleController.getString(r12, r11)
                        r6.setTitle(r11)
                        if (r2 == 0) goto L_0x0538
                        r11 = 2131624443(0x7f0e01fb, float:1.8876066E38)
                        java.lang.Object[] r12 = new java.lang.Object[r3]
                        java.lang.String r13 = "AreYouSureDeleteGIFEveryone"
                        java.lang.String r11 = org.telegram.messenger.LocaleController.formatString(r13, r11, r12)
                        r6.setMessage(r11)
                        goto L_0x0599
                    L_0x0538:
                        r11 = 2131624442(0x7f0e01fa, float:1.8876064E38)
                        java.lang.Object[] r12 = new java.lang.Object[r3]
                        java.lang.String r13 = "AreYouSureDeleteGIF"
                        java.lang.String r11 = org.telegram.messenger.LocaleController.formatString(r13, r11, r12)
                        r6.setMessage(r11)
                        goto L_0x0599
                    L_0x0547:
                        java.lang.String r11 = org.telegram.messenger.LocaleController.getString(r12, r11)
                        r6.setTitle(r11)
                        if (r2 == 0) goto L_0x055f
                        r11 = 2131624446(0x7f0e01fe, float:1.8876072E38)
                        java.lang.Object[] r12 = new java.lang.Object[r3]
                        java.lang.String r13 = "AreYouSureDeletePhotoEveryone"
                        java.lang.String r11 = org.telegram.messenger.LocaleController.formatString(r13, r11, r12)
                        r6.setMessage(r11)
                        goto L_0x0599
                    L_0x055f:
                        r11 = 2131624445(0x7f0e01fd, float:1.887607E38)
                        java.lang.Object[] r12 = new java.lang.Object[r3]
                        java.lang.String r13 = "AreYouSureDeletePhoto"
                        java.lang.String r11 = org.telegram.messenger.LocaleController.formatString(r13, r11, r12)
                        r6.setMessage(r11)
                        goto L_0x0599
                    L_0x056e:
                        r11 = 2131624458(0x7f0e020a, float:1.8876096E38)
                        java.lang.String r12 = "AreYouSureDeleteVideoTitle"
                        java.lang.String r11 = org.telegram.messenger.LocaleController.getString(r12, r11)
                        r6.setTitle(r11)
                        if (r2 == 0) goto L_0x058b
                        r11 = 2131624457(0x7f0e0209, float:1.8876094E38)
                        java.lang.Object[] r12 = new java.lang.Object[r3]
                        java.lang.String r13 = "AreYouSureDeleteVideoEveryone"
                        java.lang.String r11 = org.telegram.messenger.LocaleController.formatString(r13, r11, r12)
                        r6.setMessage(r11)
                        goto L_0x0599
                    L_0x058b:
                        r11 = 2131624456(0x7f0e0208, float:1.8876092E38)
                        java.lang.Object[] r12 = new java.lang.Object[r3]
                        java.lang.String r13 = "AreYouSureDeleteVideo"
                        java.lang.String r11 = org.telegram.messenger.LocaleController.formatString(r13, r11, r12)
                        r6.setMessage(r11)
                    L_0x0599:
                        boolean[] r11 = new boolean[r1]
                        org.telegram.ui.PhotoViewer r12 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r12 = r12.currentMessageObject
                        if (r12 == 0) goto L_0x074c
                        org.telegram.ui.PhotoViewer r12 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r12 = r12.currentMessageObject
                        boolean r12 = r12.scheduled
                        if (r12 != 0) goto L_0x074c
                        org.telegram.ui.PhotoViewer r12 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r12 = r12.currentMessageObject
                        long r12 = r12.getDialogId()
                        boolean r14 = org.telegram.messenger.DialogObject.isEncryptedDialog(r12)
                        if (r14 != 0) goto L_0x0745
                        boolean r14 = org.telegram.messenger.DialogObject.isUserDialog(r12)
                        if (r14 == 0) goto L_0x05d9
                        org.telegram.ui.PhotoViewer r14 = org.telegram.ui.PhotoViewer.this
                        int r14 = r14.currentAccount
                        org.telegram.messenger.MessagesController r14 = org.telegram.messenger.MessagesController.getInstance(r14)
                        java.lang.Long r15 = java.lang.Long.valueOf(r12)
                        org.telegram.tgnet.TLRPC$User r14 = r14.getUser(r15)
                        r15 = 0
                        r16 = r10
                        goto L_0x05ef
                    L_0x05d9:
                        r14 = 0
                        org.telegram.ui.PhotoViewer r15 = org.telegram.ui.PhotoViewer.this
                        int r15 = r15.currentAccount
                        org.telegram.messenger.MessagesController r15 = org.telegram.messenger.MessagesController.getInstance(r15)
                        r16 = r10
                        long r9 = -r12
                        java.lang.Long r9 = java.lang.Long.valueOf(r9)
                        org.telegram.tgnet.TLRPC$Chat r15 = r15.getChat(r9)
                    L_0x05ef:
                        if (r14 != 0) goto L_0x05fe
                        boolean r9 = org.telegram.messenger.ChatObject.isChannel(r15)
                        if (r9 != 0) goto L_0x05f8
                        goto L_0x05fe
                    L_0x05f8:
                        r21 = r2
                        r17 = r5
                        goto L_0x0752
                    L_0x05fe:
                        r9 = 0
                        org.telegram.ui.PhotoViewer r10 = org.telegram.ui.PhotoViewer.this
                        int r10 = r10.currentAccount
                        org.telegram.tgnet.ConnectionsManager r10 = org.telegram.tgnet.ConnectionsManager.getInstance(r10)
                        int r10 = r10.getCurrentTime()
                        if (r14 == 0) goto L_0x061c
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        int r0 = r0.currentAccount
                        org.telegram.messenger.MessagesController r0 = org.telegram.messenger.MessagesController.getInstance(r0)
                        int r0 = r0.revokeTimePmLimit
                        goto L_0x0628
                    L_0x061c:
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        int r0 = r0.currentAccount
                        org.telegram.messenger.MessagesController r0 = org.telegram.messenger.MessagesController.getInstance(r0)
                        int r0 = r0.revokeTimeLimit
                    L_0x0628:
                        if (r14 == 0) goto L_0x0641
                        r17 = r5
                        long r4 = r14.id
                        org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                        int r3 = r3.currentAccount
                        org.telegram.messenger.UserConfig r3 = org.telegram.messenger.UserConfig.getInstance(r3)
                        long r19 = r3.getClientUserId()
                        int r3 = (r4 > r19 ? 1 : (r4 == r19 ? 0 : -1))
                        if (r3 != 0) goto L_0x0645
                        goto L_0x0643
                    L_0x0641:
                        r17 = r5
                    L_0x0643:
                        if (r15 == 0) goto L_0x073e
                    L_0x0645:
                        if (r14 == 0) goto L_0x0657
                        org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                        int r3 = r3.currentAccount
                        org.telegram.messenger.MessagesController r3 = org.telegram.messenger.MessagesController.getInstance(r3)
                        boolean r3 = r3.canRevokePmInbox
                        if (r3 == 0) goto L_0x0657
                        r3 = 1
                        goto L_0x0658
                    L_0x0657:
                        r3 = 0
                    L_0x0658:
                        org.telegram.ui.PhotoViewer r4 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r4 = r4.currentMessageObject
                        org.telegram.tgnet.TLRPC$Message r4 = r4.messageOwner
                        org.telegram.tgnet.TLRPC$MessageAction r4 = r4.action
                        if (r4 == 0) goto L_0x0677
                        org.telegram.ui.PhotoViewer r4 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r4 = r4.currentMessageObject
                        org.telegram.tgnet.TLRPC$Message r4 = r4.messageOwner
                        org.telegram.tgnet.TLRPC$MessageAction r4 = r4.action
                        boolean r4 = r4 instanceof org.telegram.tgnet.TLRPC.TL_messageActionEmpty
                        if (r4 == 0) goto L_0x0673
                        goto L_0x0677
                    L_0x0673:
                        r21 = r2
                        goto L_0x0752
                    L_0x0677:
                        org.telegram.ui.PhotoViewer r4 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r4 = r4.currentMessageObject
                        boolean r4 = r4.isOut()
                        if (r4 != 0) goto L_0x068b
                        if (r3 != 0) goto L_0x068b
                        boolean r4 = org.telegram.messenger.ChatObject.hasAdminRights(r15)
                        if (r4 == 0) goto L_0x0673
                    L_0x068b:
                        org.telegram.ui.PhotoViewer r4 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r4 = r4.currentMessageObject
                        org.telegram.tgnet.TLRPC$Message r4 = r4.messageOwner
                        int r4 = r4.date
                        int r4 = r10 - r4
                        if (r4 > r0) goto L_0x0735
                        android.widget.FrameLayout r4 = new android.widget.FrameLayout
                        org.telegram.ui.PhotoViewer r5 = org.telegram.ui.PhotoViewer.this
                        android.app.Activity r5 = r5.parentActivity
                        r4.<init>(r5)
                        org.telegram.ui.Cells.CheckBoxCell r5 = new org.telegram.ui.Cells.CheckBoxCell
                        org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                        android.app.Activity r1 = r1.parentActivity
                        r20 = r0
                        org.telegram.ui.ActionBar.Theme$ResourcesProvider r0 = r15
                        r21 = r2
                        r2 = 1
                        r5.<init>(r1, r2, r0)
                        r0 = r5
                        r1 = 0
                        android.graphics.drawable.Drawable r2 = org.telegram.ui.ActionBar.Theme.getSelectorDrawable(r1)
                        r0.setBackgroundDrawable(r2)
                        java.lang.String r2 = ""
                        if (r15 == 0) goto L_0x06d4
                        r5 = 2131625406(0x7f0e05be, float:1.887802E38)
                        r22 = r3
                        java.lang.String r3 = "DeleteForAll"
                        java.lang.String r3 = org.telegram.messenger.LocaleController.getString(r3, r5)
                        r0.setText(r3, r2, r1, r1)
                        r19 = r9
                        goto L_0x06ed
                    L_0x06d4:
                        r22 = r3
                        r3 = 2131625407(0x7f0e05bf, float:1.8878021E38)
                        r5 = 1
                        java.lang.Object[] r5 = new java.lang.Object[r5]
                        java.lang.String r18 = org.telegram.messenger.UserObject.getFirstName(r14)
                        r5[r1] = r18
                        r19 = r9
                        java.lang.String r9 = "DeleteForUser"
                        java.lang.String r3 = org.telegram.messenger.LocaleController.formatString(r9, r3, r5)
                        r0.setText(r3, r2, r1, r1)
                    L_0x06ed:
                        boolean r1 = org.telegram.messenger.LocaleController.isRTL
                        r2 = 1098907648(0x41800000, float:16.0)
                        r3 = 1090519040(0x41000000, float:8.0)
                        if (r1 == 0) goto L_0x06fa
                        int r1 = org.telegram.messenger.AndroidUtilities.dp(r2)
                        goto L_0x06fe
                    L_0x06fa:
                        int r1 = org.telegram.messenger.AndroidUtilities.dp(r3)
                    L_0x06fe:
                        boolean r5 = org.telegram.messenger.LocaleController.isRTL
                        if (r5 == 0) goto L_0x0707
                        int r2 = org.telegram.messenger.AndroidUtilities.dp(r3)
                        goto L_0x070b
                    L_0x0707:
                        int r2 = org.telegram.messenger.AndroidUtilities.dp(r2)
                    L_0x070b:
                        r3 = 0
                        r0.setPadding(r1, r3, r2, r3)
                        r23 = -1
                        r24 = 1111490560(0x42400000, float:48.0)
                        r25 = 51
                        r26 = 0
                        r27 = 0
                        r28 = 0
                        r29 = 0
                        android.widget.FrameLayout$LayoutParams r1 = org.telegram.ui.Components.LayoutHelper.createFrame(r23, r24, r25, r26, r27, r28, r29)
                        r4.addView(r0, r1)
                        org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda4 r1 = new org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda4
                        r1.<init>(r11)
                        r0.setOnClickListener(r1)
                        r6.setView(r4)
                        r1 = 9
                        r6.setCustomViewOffset(r1)
                        goto L_0x0752
                    L_0x0735:
                        r20 = r0
                        r21 = r2
                        r22 = r3
                        r19 = r9
                        goto L_0x0752
                    L_0x073e:
                        r20 = r0
                        r21 = r2
                        r19 = r9
                        goto L_0x0752
                    L_0x0745:
                        r21 = r2
                        r17 = r5
                        r16 = r10
                        goto L_0x0752
                    L_0x074c:
                        r21 = r2
                        r17 = r5
                        r16 = r10
                    L_0x0752:
                        r0 = 2131625368(0x7f0e0598, float:1.8877942E38)
                        java.lang.String r1 = "Delete"
                        java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r1, r0)
                        org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda2 r1 = new org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda2
                        r1.<init>(r7, r11)
                        r6.setPositiveButton(r0, r1)
                        r1 = r17
                        r0 = 2131624819(0x7f0e0373, float:1.8876828E38)
                        java.lang.String r0 = org.telegram.messenger.LocaleController.getString(r1, r0)
                        r1 = 0
                        r6.setNegativeButton(r0, r1)
                        org.telegram.ui.ActionBar.AlertDialog r0 = r6.create()
                        org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                        r1.showAlertDialog(r6)
                        r1 = -1
                        android.view.View r1 = r0.getButton(r1)
                        android.widget.TextView r1 = (android.widget.TextView) r1
                        if (r1 == 0) goto L_0x078d
                        org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                        java.lang.String r3 = "dialogTextRed2"
                        int r2 = r2.getThemedColor(r3)
                        r1.setTextColor(r2)
                    L_0x078d:
                        goto L_0x0cff
                    L_0x078f:
                        return
                    L_0x0790:
                        r0 = 10
                        if (r8 == r0) goto L_0x0cfa
                        r0 = 18
                        if (r8 != r0) goto L_0x079a
                        goto L_0x0cfa
                    L_0x079a:
                        r0 = 11
                        if (r8 != r0) goto L_0x0824
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this     // Catch:{ Exception -> 0x081e }
                        boolean r0 = r0.isEmbedVideo     // Catch:{ Exception -> 0x081e }
                        if (r0 == 0) goto L_0x07c4
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this     // Catch:{ Exception -> 0x081e }
                        android.app.Activity r0 = r0.parentActivity     // Catch:{ Exception -> 0x081e }
                        org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this     // Catch:{ Exception -> 0x081e }
                        org.telegram.messenger.MessageObject r1 = r1.currentMessageObject     // Catch:{ Exception -> 0x081e }
                        org.telegram.tgnet.TLRPC$Message r1 = r1.messageOwner     // Catch:{ Exception -> 0x081e }
                        org.telegram.tgnet.TLRPC$MessageMedia r1 = r1.media     // Catch:{ Exception -> 0x081e }
                        org.telegram.tgnet.TLRPC$WebPage r1 = r1.webpage     // Catch:{ Exception -> 0x081e }
                        java.lang.String r1 = r1.url     // Catch:{ Exception -> 0x081e }
                        org.telegram.messenger.browser.Browser.openUrl((android.content.Context) r0, (java.lang.String) r1)     // Catch:{ Exception -> 0x081e }
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this     // Catch:{ Exception -> 0x081e }
                        r1 = 0
                        r0.closePhoto(r1, r1)     // Catch:{ Exception -> 0x081e }
                        goto L_0x0822
                    L_0x07c4:
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this     // Catch:{ Exception -> 0x081e }
                        org.telegram.messenger.MessageObject r0 = r0.currentMessageObject     // Catch:{ Exception -> 0x081e }
                        if (r0 == 0) goto L_0x07ed
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this     // Catch:{ Exception -> 0x081e }
                        org.telegram.messenger.MessageObject r0 = r0.currentMessageObject     // Catch:{ Exception -> 0x081e }
                        org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this     // Catch:{ Exception -> 0x081e }
                        android.app.Activity r1 = r1.parentActivity     // Catch:{ Exception -> 0x081e }
                        org.telegram.ui.ActionBar.Theme$ResourcesProvider r2 = r15     // Catch:{ Exception -> 0x081e }
                        boolean r0 = org.telegram.messenger.AndroidUtilities.openForView((org.telegram.messenger.MessageObject) r0, (android.app.Activity) r1, (org.telegram.ui.ActionBar.Theme.ResourcesProvider) r2)     // Catch:{ Exception -> 0x081e }
                        if (r0 == 0) goto L_0x07e7
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this     // Catch:{ Exception -> 0x081e }
                        r1 = 0
                        r0.closePhoto(r1, r1)     // Catch:{ Exception -> 0x081e }
                        goto L_0x0822
                    L_0x07e7:
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this     // Catch:{ Exception -> 0x081e }
                        r0.showDownloadAlert()     // Catch:{ Exception -> 0x081e }
                        goto L_0x0822
                    L_0x07ed:
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this     // Catch:{ Exception -> 0x081e }
                        org.telegram.ui.PhotoViewer$PageBlocksAdapter r0 = r0.pageBlocksAdapter     // Catch:{ Exception -> 0x081e }
                        if (r0 == 0) goto L_0x0822
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this     // Catch:{ Exception -> 0x081e }
                        org.telegram.ui.PhotoViewer$PageBlocksAdapter r0 = r0.pageBlocksAdapter     // Catch:{ Exception -> 0x081e }
                        org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this     // Catch:{ Exception -> 0x081e }
                        int r1 = r1.currentIndex     // Catch:{ Exception -> 0x081e }
                        org.telegram.tgnet.TLObject r0 = r0.getMedia(r1)     // Catch:{ Exception -> 0x081e }
                        org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this     // Catch:{ Exception -> 0x081e }
                        android.app.Activity r1 = r1.parentActivity     // Catch:{ Exception -> 0x081e }
                        boolean r0 = org.telegram.messenger.AndroidUtilities.openForView(r0, r1)     // Catch:{ Exception -> 0x081e }
                        if (r0 == 0) goto L_0x0818
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this     // Catch:{ Exception -> 0x081e }
                        r1 = 0
                        r0.closePhoto(r1, r1)     // Catch:{ Exception -> 0x081e }
                        goto L_0x0822
                    L_0x0818:
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this     // Catch:{ Exception -> 0x081e }
                        r0.showDownloadAlert()     // Catch:{ Exception -> 0x081e }
                        goto L_0x0822
                    L_0x081e:
                        r0 = move-exception
                        org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
                    L_0x0822:
                        goto L_0x0cff
                    L_0x0824:
                        r0 = 13
                        if (r8 == r0) goto L_0x0c8c
                        r0 = 15
                        if (r8 != r0) goto L_0x082e
                        goto L_0x0c8c
                    L_0x082e:
                        r0 = 5
                        if (r8 != r0) goto L_0x08ab
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        org.telegram.ui.ActionBar.ActionBarMenuItem r0 = r0.pipItem
                        float r0 = r0.getAlpha()
                        r1 = 1065353216(0x3var_, float:1.0)
                        int r0 = (r0 > r1 ? 1 : (r0 == r1 ? 0 : -1))
                        if (r0 == 0) goto L_0x0842
                        return
                    L_0x0842:
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        boolean r0 = r0.isEmbedVideo
                        if (r0 == 0) goto L_0x08a3
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        org.telegram.ui.Components.PhotoViewerWebView r0 = r0.photoViewerWebView
                        boolean r0 = r0.openInPip()
                        if (r0 == 0) goto L_0x0cff
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.PipInstance
                        if (r0 == 0) goto L_0x0863
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.PipInstance
                        r0.destroyPhotoViewer()
                    L_0x0863:
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        r1 = 1
                        boolean unused = r0.isInline = r1
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.Instance
                        org.telegram.ui.PhotoViewer unused = org.telegram.ui.PhotoViewer.PipInstance = r0
                        r0 = 0
                        org.telegram.ui.PhotoViewer unused = org.telegram.ui.PhotoViewer.Instance = r0
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        r1 = 0
                        boolean unused = r0.isVisible = r1
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        org.telegram.ui.PhotoViewer$PlaceProviderObject r0 = r0.currentPlaceObject
                        if (r0 == 0) goto L_0x089c
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        org.telegram.ui.PhotoViewer$PlaceProviderObject r0 = r0.currentPlaceObject
                        org.telegram.messenger.ImageReceiver r0 = r0.imageReceiver
                        boolean r0 = r0.getVisible()
                        if (r0 != 0) goto L_0x089c
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        org.telegram.ui.PhotoViewer$PlaceProviderObject r0 = r0.currentPlaceObject
                        org.telegram.messenger.ImageReceiver r0 = r0.imageReceiver
                        r1 = 1
                        r0.setVisible(r1, r1)
                    L_0x089c:
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        r0.dismissInternal()
                        goto L_0x0cff
                    L_0x08a3:
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        r1 = 0
                        r0.switchToPip(r1)
                        goto L_0x0cff
                    L_0x08ab:
                        r0 = 0
                        r1 = 7
                        if (r8 != r1) goto L_0x08e9
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r0 = r0.currentMessageObject
                        if (r0 != 0) goto L_0x08b8
                        return
                    L_0x08b8:
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        int r0 = r0.currentAccount
                        org.telegram.messenger.FileLoader r0 = org.telegram.messenger.FileLoader.getInstance(r0)
                        org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r1 = r1.currentMessageObject
                        org.telegram.tgnet.TLRPC$Document r1 = r1.getDocument()
                        r0.cancelLoadFile((org.telegram.tgnet.TLRPC.Document) r1)
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        r1 = 0
                        r0.releasePlayer(r1)
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        android.widget.FrameLayout r0 = r0.bottomLayout
                        r0.setTag(r2)
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        android.widget.FrameLayout r0 = r0.bottomLayout
                        r0.setVisibility(r1)
                        goto L_0x0cff
                    L_0x08e9:
                        r1 = 14
                        if (r8 != r1) goto L_0x09b4
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r0 = r0.currentMessageObject
                        r1 = 1000(0x3e8, double:4.94E-321)
                        if (r0 == 0) goto L_0x0947
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r0 = r0.currentMessageObject
                        org.telegram.tgnet.TLRPC$Document r0 = r0.getDocument()
                        org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                        org.telegram.ui.ChatActivity r3 = r3.parentChatActivity
                        if (r3 == 0) goto L_0x091f
                        org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                        org.telegram.ui.ChatActivity r3 = r3.parentChatActivity
                        org.telegram.ui.Components.ChatActivityEnterView r3 = r3.chatActivityEnterView
                        if (r3 == 0) goto L_0x091f
                        org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                        org.telegram.ui.ChatActivity r1 = r1.parentChatActivity
                        org.telegram.ui.Components.ChatActivityEnterView r1 = r1.chatActivityEnterView
                        r1.addRecentGif(r0)
                        goto L_0x0933
                    L_0x091f:
                        org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                        int r3 = r3.currentAccount
                        org.telegram.messenger.MediaDataController r3 = org.telegram.messenger.MediaDataController.getInstance(r3)
                        long r4 = java.lang.System.currentTimeMillis()
                        long r4 = r4 / r1
                        int r1 = (int) r4
                        r2 = 1
                        r3.addRecentGif(r0, r1, r2)
                    L_0x0933:
                        org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                        int r1 = r1.currentAccount
                        org.telegram.messenger.MessagesController r1 = org.telegram.messenger.MessagesController.getInstance(r1)
                        org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r2 = r2.currentMessageObject
                        r1.saveGif(r2, r0)
                        goto L_0x0992
                    L_0x0947:
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        org.telegram.ui.PhotoViewer$PageBlocksAdapter r0 = r0.pageBlocksAdapter
                        if (r0 == 0) goto L_0x09b3
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        org.telegram.ui.PhotoViewer$PageBlocksAdapter r0 = r0.pageBlocksAdapter
                        org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                        int r3 = r3.currentIndex
                        org.telegram.tgnet.TLObject r0 = r0.getMedia(r3)
                        boolean r3 = r0 instanceof org.telegram.tgnet.TLRPC.Document
                        if (r3 == 0) goto L_0x0991
                        r3 = r0
                        org.telegram.tgnet.TLRPC$Document r3 = (org.telegram.tgnet.TLRPC.Document) r3
                        org.telegram.ui.PhotoViewer r4 = org.telegram.ui.PhotoViewer.this
                        int r4 = r4.currentAccount
                        org.telegram.messenger.MediaDataController r4 = org.telegram.messenger.MediaDataController.getInstance(r4)
                        long r5 = java.lang.System.currentTimeMillis()
                        long r5 = r5 / r1
                        int r1 = (int) r5
                        r2 = 1
                        r4.addRecentGif(r3, r1, r2)
                        org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                        int r1 = r1.currentAccount
                        org.telegram.messenger.MessagesController r1 = org.telegram.messenger.MessagesController.getInstance(r1)
                        org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                        org.telegram.ui.PhotoViewer$PageBlocksAdapter r2 = r2.pageBlocksAdapter
                        java.lang.Object r2 = r2.getParentObject()
                        r1.saveGif(r2, r3)
                    L_0x0991:
                    L_0x0992:
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        org.telegram.ui.PhotoViewer$FrameLayoutDrawer r0 = r0.containerView
                        if (r0 == 0) goto L_0x0cff
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        org.telegram.ui.PhotoViewer$FrameLayoutDrawer r0 = r0.containerView
                        org.telegram.ui.ActionBar.Theme$ResourcesProvider r1 = r15
                        org.telegram.ui.Components.BulletinFactory r0 = org.telegram.ui.Components.BulletinFactory.of(r0, r1)
                        org.telegram.ui.Components.BulletinFactory$FileType r1 = org.telegram.ui.Components.BulletinFactory.FileType.GIF
                        org.telegram.ui.ActionBar.Theme$ResourcesProvider r2 = r15
                        org.telegram.ui.Components.Bulletin r0 = r0.createDownloadBulletin(r1, r2)
                        r0.show()
                        goto L_0x0cff
                    L_0x09b3:
                        return
                    L_0x09b4:
                        r1 = 16
                        if (r8 != r1) goto L_0x0c1a
                        org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                        java.util.ArrayList r1 = r1.avatarsArr
                        org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                        int r3 = r3.currentIndex
                        java.lang.Object r1 = r1.get(r3)
                        org.telegram.tgnet.TLRPC$Photo r1 = (org.telegram.tgnet.TLRPC.Photo) r1
                        if (r1 == 0) goto L_0x0CLASSNAME
                        java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r3 = r1.sizes
                        boolean r3 = r3.isEmpty()
                        if (r3 == 0) goto L_0x09d6
                        goto L_0x0CLASSNAME
                    L_0x09d6:
                        java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r3 = r1.sizes
                        r4 = 800(0x320, float:1.121E-42)
                        org.telegram.tgnet.TLRPC$PhotoSize r3 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r3, r4)
                        java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r4 = r1.sizes
                        r5 = 90
                        org.telegram.tgnet.TLRPC$PhotoSize r4 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r4, r5)
                        org.telegram.ui.PhotoViewer r5 = org.telegram.ui.PhotoViewer.this
                        int r5 = r5.currentAccount
                        org.telegram.messenger.UserConfig r5 = org.telegram.messenger.UserConfig.getInstance(r5)
                        org.telegram.ui.PhotoViewer r6 = org.telegram.ui.PhotoViewer.this
                        long r9 = r6.avatarsDialogId
                        long r11 = r5.clientUserId
                        int r6 = (r9 > r11 ? 1 : (r9 == r11 ? 0 : -1))
                        if (r6 != 0) goto L_0x0a75
                        org.telegram.tgnet.TLRPC$TL_photos_updateProfilePhoto r6 = new org.telegram.tgnet.TLRPC$TL_photos_updateProfilePhoto
                        r6.<init>()
                        org.telegram.tgnet.TLRPC$TL_inputPhoto r9 = new org.telegram.tgnet.TLRPC$TL_inputPhoto
                        r9.<init>()
                        r6.id = r9
                        org.telegram.tgnet.TLRPC$InputPhoto r9 = r6.id
                        long r10 = r1.id
                        r9.id = r10
                        org.telegram.tgnet.TLRPC$InputPhoto r9 = r6.id
                        long r10 = r1.access_hash
                        r9.access_hash = r10
                        org.telegram.tgnet.TLRPC$InputPhoto r9 = r6.id
                        byte[] r10 = r1.file_reference
                        r9.file_reference = r10
                        org.telegram.ui.PhotoViewer r9 = org.telegram.ui.PhotoViewer.this
                        int r9 = r9.currentAccount
                        org.telegram.tgnet.ConnectionsManager r9 = org.telegram.tgnet.ConnectionsManager.getInstance(r9)
                        org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda8 r10 = new org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda8
                        r10.<init>(r7, r5, r1)
                        r9.sendRequest(r6, r10)
                        org.telegram.ui.PhotoViewer r9 = org.telegram.ui.PhotoViewer.this
                        int r9 = r9.currentAccount
                        org.telegram.messenger.MessagesController r9 = org.telegram.messenger.MessagesController.getInstance(r9)
                        long r10 = r5.clientUserId
                        java.lang.Long r10 = java.lang.Long.valueOf(r10)
                        org.telegram.tgnet.TLRPC$User r9 = r9.getUser(r10)
                        if (r9 == 0) goto L_0x0a73
                        org.telegram.tgnet.TLRPC$UserProfilePhoto r10 = r9.photo
                        long r11 = r1.id
                        r10.photo_id = r11
                        org.telegram.tgnet.TLRPC$UserProfilePhoto r10 = r9.photo
                        int r11 = r1.dc_id
                        r10.dc_id = r11
                        org.telegram.tgnet.TLRPC$UserProfilePhoto r10 = r9.photo
                        org.telegram.tgnet.TLRPC$FileLocation r11 = r4.location
                        r10.photo_small = r11
                        org.telegram.tgnet.TLRPC$UserProfilePhoto r10 = r9.photo
                        org.telegram.tgnet.TLRPC$FileLocation r11 = r3.location
                        r10.photo_big = r11
                        r5.setCurrentUser(r9)
                        r10 = 1
                        r5.saveConfig(r10)
                        org.telegram.ui.PhotoViewer r10 = org.telegram.ui.PhotoViewer.this
                        int r10 = r10.currentAccount
                        org.telegram.messenger.NotificationCenter r10 = org.telegram.messenger.NotificationCenter.getInstance(r10)
                        int r11 = org.telegram.messenger.NotificationCenter.mainUserInfoChanged
                        r12 = 0
                        java.lang.Object[] r13 = new java.lang.Object[r12]
                        r10.postNotificationName(r11, r13)
                    L_0x0a73:
                        goto L_0x0b02
                    L_0x0a75:
                        org.telegram.ui.PhotoViewer r6 = org.telegram.ui.PhotoViewer.this
                        int r6 = r6.currentAccount
                        org.telegram.messenger.MessagesController r6 = org.telegram.messenger.MessagesController.getInstance(r6)
                        org.telegram.ui.PhotoViewer r9 = org.telegram.ui.PhotoViewer.this
                        long r9 = r9.avatarsDialogId
                        long r9 = -r9
                        java.lang.Long r9 = java.lang.Long.valueOf(r9)
                        org.telegram.tgnet.TLRPC$Chat r6 = r6.getChat(r9)
                        if (r6 != 0) goto L_0x0a91
                        return
                    L_0x0a91:
                        org.telegram.tgnet.TLRPC$TL_inputChatPhoto r9 = new org.telegram.tgnet.TLRPC$TL_inputChatPhoto
                        r9.<init>()
                        org.telegram.tgnet.TLRPC$TL_inputPhoto r10 = new org.telegram.tgnet.TLRPC$TL_inputPhoto
                        r10.<init>()
                        r9.id = r10
                        org.telegram.tgnet.TLRPC$InputPhoto r10 = r9.id
                        long r11 = r1.id
                        r10.id = r11
                        org.telegram.tgnet.TLRPC$InputPhoto r10 = r9.id
                        long r11 = r1.access_hash
                        r10.access_hash = r11
                        org.telegram.tgnet.TLRPC$InputPhoto r10 = r9.id
                        byte[] r11 = r1.file_reference
                        r10.file_reference = r11
                        org.telegram.ui.PhotoViewer r10 = org.telegram.ui.PhotoViewer.this
                        int r10 = r10.currentAccount
                        org.telegram.messenger.MessagesController r20 = org.telegram.messenger.MessagesController.getInstance(r10)
                        org.telegram.ui.PhotoViewer r10 = org.telegram.ui.PhotoViewer.this
                        long r10 = r10.avatarsDialogId
                        long r10 = -r10
                        r24 = 0
                        r25 = 0
                        r26 = 0
                        r28 = 0
                        r29 = 0
                        r30 = 0
                        r31 = 0
                        r21 = r10
                        r23 = r9
                        r20.changeChatAvatar(r21, r23, r24, r25, r26, r28, r29, r30, r31)
                        org.telegram.tgnet.TLRPC$ChatPhoto r10 = r6.photo
                        int r11 = r1.dc_id
                        r10.dc_id = r11
                        org.telegram.tgnet.TLRPC$ChatPhoto r10 = r6.photo
                        org.telegram.tgnet.TLRPC$FileLocation r11 = r4.location
                        r10.photo_small = r11
                        org.telegram.tgnet.TLRPC$ChatPhoto r10 = r6.photo
                        org.telegram.tgnet.TLRPC$FileLocation r11 = r3.location
                        r10.photo_big = r11
                        org.telegram.ui.PhotoViewer r10 = org.telegram.ui.PhotoViewer.this
                        int r10 = r10.currentAccount
                        org.telegram.messenger.NotificationCenter r10 = org.telegram.messenger.NotificationCenter.getInstance(r10)
                        int r11 = org.telegram.messenger.NotificationCenter.updateInterfaces
                        r12 = 1
                        java.lang.Object[] r12 = new java.lang.Object[r12]
                        int r13 = org.telegram.messenger.MessagesController.UPDATE_MASK_AVATAR
                        java.lang.Integer r13 = java.lang.Integer.valueOf(r13)
                        r14 = 0
                        r12[r14] = r13
                        r10.postNotificationName(r11, r12)
                    L_0x0b02:
                        org.telegram.ui.PhotoViewer r6 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.ImageLocation r9 = org.telegram.messenger.ImageLocation.getForPhoto((org.telegram.tgnet.TLRPC.PhotoSize) r3, (org.telegram.tgnet.TLRPC.Photo) r1)
                        org.telegram.messenger.ImageLocation unused = r6.currentAvatarLocation = r9
                        org.telegram.ui.PhotoViewer r6 = org.telegram.ui.PhotoViewer.this
                        java.util.ArrayList r6 = r6.avatarsArr
                        org.telegram.ui.PhotoViewer r9 = org.telegram.ui.PhotoViewer.this
                        int r9 = r9.currentIndex
                        r6.remove(r9)
                        org.telegram.ui.PhotoViewer r6 = org.telegram.ui.PhotoViewer.this
                        java.util.ArrayList r6 = r6.avatarsArr
                        r9 = 0
                        r6.add(r9, r1)
                        org.telegram.ui.PhotoViewer r6 = org.telegram.ui.PhotoViewer.this
                        java.util.ArrayList r6 = r6.imagesArrLocations
                        org.telegram.ui.PhotoViewer r9 = org.telegram.ui.PhotoViewer.this
                        int r9 = r9.currentIndex
                        java.lang.Object r6 = r6.get(r9)
                        org.telegram.messenger.ImageLocation r6 = (org.telegram.messenger.ImageLocation) r6
                        org.telegram.ui.PhotoViewer r9 = org.telegram.ui.PhotoViewer.this
                        java.util.ArrayList r9 = r9.imagesArrLocations
                        org.telegram.ui.PhotoViewer r10 = org.telegram.ui.PhotoViewer.this
                        int r10 = r10.currentIndex
                        r9.remove(r10)
                        org.telegram.ui.PhotoViewer r9 = org.telegram.ui.PhotoViewer.this
                        java.util.ArrayList r9 = r9.imagesArrLocations
                        r10 = 0
                        r9.add(r10, r6)
                        org.telegram.ui.PhotoViewer r9 = org.telegram.ui.PhotoViewer.this
                        java.util.ArrayList r9 = r9.imagesArrLocationsVideo
                        org.telegram.ui.PhotoViewer r10 = org.telegram.ui.PhotoViewer.this
                        int r10 = r10.currentIndex
                        java.lang.Object r9 = r9.get(r10)
                        r6 = r9
                        org.telegram.messenger.ImageLocation r6 = (org.telegram.messenger.ImageLocation) r6
                        org.telegram.ui.PhotoViewer r9 = org.telegram.ui.PhotoViewer.this
                        java.util.ArrayList r9 = r9.imagesArrLocationsVideo
                        org.telegram.ui.PhotoViewer r10 = org.telegram.ui.PhotoViewer.this
                        int r10 = r10.currentIndex
                        r9.remove(r10)
                        org.telegram.ui.PhotoViewer r9 = org.telegram.ui.PhotoViewer.this
                        java.util.ArrayList r9 = r9.imagesArrLocationsVideo
                        r10 = 0
                        r9.add(r10, r6)
                        org.telegram.ui.PhotoViewer r9 = org.telegram.ui.PhotoViewer.this
                        java.util.ArrayList r9 = r9.imagesArrLocationsSizes
                        org.telegram.ui.PhotoViewer r10 = org.telegram.ui.PhotoViewer.this
                        int r10 = r10.currentIndex
                        java.lang.Object r9 = r9.get(r10)
                        java.lang.Long r9 = (java.lang.Long) r9
                        org.telegram.ui.PhotoViewer r10 = org.telegram.ui.PhotoViewer.this
                        java.util.ArrayList r10 = r10.imagesArrLocationsSizes
                        org.telegram.ui.PhotoViewer r11 = org.telegram.ui.PhotoViewer.this
                        int r11 = r11.currentIndex
                        r10.remove(r11)
                        org.telegram.ui.PhotoViewer r10 = org.telegram.ui.PhotoViewer.this
                        java.util.ArrayList r10 = r10.imagesArrLocationsSizes
                        r11 = 0
                        r10.add(r11, r9)
                        org.telegram.ui.PhotoViewer r10 = org.telegram.ui.PhotoViewer.this
                        java.util.ArrayList r10 = r10.imagesArrMessages
                        org.telegram.ui.PhotoViewer r11 = org.telegram.ui.PhotoViewer.this
                        int r11 = r11.currentIndex
                        java.lang.Object r10 = r10.get(r11)
                        org.telegram.tgnet.TLRPC$Message r10 = (org.telegram.tgnet.TLRPC.Message) r10
                        org.telegram.ui.PhotoViewer r11 = org.telegram.ui.PhotoViewer.this
                        java.util.ArrayList r11 = r11.imagesArrMessages
                        org.telegram.ui.PhotoViewer r12 = org.telegram.ui.PhotoViewer.this
                        int r12 = r12.currentIndex
                        r11.remove(r12)
                        org.telegram.ui.PhotoViewer r11 = org.telegram.ui.PhotoViewer.this
                        java.util.ArrayList r11 = r11.imagesArrMessages
                        r12 = 0
                        r11.add(r12, r10)
                        org.telegram.ui.PhotoViewer r11 = org.telegram.ui.PhotoViewer.this
                        r13 = -1
                        int unused = r11.currentIndex = r13
                        org.telegram.ui.PhotoViewer r11 = org.telegram.ui.PhotoViewer.this
                        r11.setImageIndex(r12)
                        org.telegram.ui.PhotoViewer r11 = org.telegram.ui.PhotoViewer.this
                        org.telegram.ui.Components.GroupedPhotosListView r11 = r11.groupedPhotosListView
                        r11.clear()
                        org.telegram.ui.PhotoViewer r11 = org.telegram.ui.PhotoViewer.this
                        org.telegram.ui.Components.GroupedPhotosListView r11 = r11.groupedPhotosListView
                        r11.fillList()
                        org.telegram.ui.PhotoViewer r11 = org.telegram.ui.PhotoViewer.this
                        org.telegram.ui.Components.UndoView r11 = r11.hintView
                        org.telegram.ui.PhotoViewer r12 = org.telegram.ui.PhotoViewer.this
                        long r12 = r12.avatarsDialogId
                        r14 = 22
                        org.telegram.ui.PhotoViewer r15 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.ImageLocation r15 = r15.currentFileLocationVideo
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.ImageLocation r0 = r0.currentFileLocation
                        if (r15 != r0) goto L_0x0c0b
                        r2 = 0
                    L_0x0c0b:
                        r11.showWithAction((long) r12, (int) r14, (java.lang.Object) r2)
                        org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda5 r0 = new org.telegram.ui.PhotoViewer$12$$ExternalSyntheticLambda5
                        r0.<init>(r7)
                        r11 = 300(0x12c, double:1.48E-321)
                        org.telegram.messenger.AndroidUtilities.runOnUIThread(r0, r11)
                        goto L_0x0c8a
                    L_0x0CLASSNAME:
                        return
                    L_0x0c1a:
                        r12 = 0
                        r0 = 17
                        if (r8 != r0) goto L_0x0c8a
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        int r0 = r0.currentAccount
                        org.telegram.messenger.FileLoader r0 = org.telegram.messenger.FileLoader.getInstance(r0)
                        org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.ImageLocation r1 = r1.currentFileLocationVideo
                        org.telegram.tgnet.TLRPC$FileLocation r1 = org.telegram.ui.PhotoViewer.getFileLocation(r1)
                        org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.ImageLocation r2 = r2.currentFileLocationVideo
                        java.lang.String r2 = org.telegram.ui.PhotoViewer.getFileLocationExt(r2)
                        r3 = 1
                        java.io.File r0 = r0.getPathToAttach(r1, r2, r3)
                        org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.ImageLocation r1 = r1.currentFileLocationVideo
                        int r1 = r1.imageType
                        if (r1 != r10) goto L_0x0c4e
                        r3 = 1
                        goto L_0x0c4f
                    L_0x0c4e:
                        r3 = 0
                    L_0x0c4f:
                        r1 = r3
                        if (r1 == 0) goto L_0x0c7a
                        org.telegram.ui.PhotoViewer r2 = org.telegram.ui.PhotoViewer.this
                        int r2 = r2.currentAccount
                        org.telegram.messenger.FileLoader r2 = org.telegram.messenger.FileLoader.getInstance(r2)
                        org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.ImageLocation r3 = r3.currentFileLocation
                        org.telegram.tgnet.TLRPC$FileLocation r3 = org.telegram.ui.PhotoViewer.getFileLocation(r3)
                        org.telegram.ui.PhotoViewer r4 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.ImageLocation r4 = r4.currentFileLocation
                        java.lang.String r4 = org.telegram.ui.PhotoViewer.getFileLocationExt(r4)
                        r5 = 1
                        java.io.File r2 = r2.getPathToAttach(r3, r4, r5)
                        java.lang.String r2 = r2.getAbsolutePath()
                        goto L_0x0c7b
                    L_0x0c7a:
                        r2 = 0
                    L_0x0c7b:
                        org.telegram.ui.PhotoViewer r3 = org.telegram.ui.PhotoViewer.this
                        org.telegram.ui.PhotoViewer$PhotoViewerProvider r3 = r3.placeProvider
                        java.lang.String r4 = r0.getAbsolutePath()
                        r3.openPhotoForEdit(r4, r2, r1)
                        goto L_0x0cff
                    L_0x0c8a:
                        goto L_0x0cff
                    L_0x0c8c:
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        android.app.Activity r0 = r0.parentActivity
                        if (r0 == 0) goto L_0x0cf9
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r0 = r0.currentMessageObject
                        if (r0 != 0) goto L_0x0c9d
                        goto L_0x0cf9
                    L_0x0c9d:
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r0 = r0.currentMessageObject
                        org.telegram.tgnet.TLRPC$Message r0 = r0.messageOwner
                        org.telegram.tgnet.TLRPC$MessageMedia r0 = r0.media
                        boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaPhoto
                        if (r0 == 0) goto L_0x0cb8
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r0 = r0.currentMessageObject
                        org.telegram.tgnet.TLRPC$Message r0 = r0.messageOwner
                        org.telegram.tgnet.TLRPC$MessageMedia r0 = r0.media
                        org.telegram.tgnet.TLRPC$Photo r0 = r0.photo
                        goto L_0x0cd2
                    L_0x0cb8:
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r0 = r0.currentMessageObject
                        org.telegram.tgnet.TLRPC$Message r0 = r0.messageOwner
                        org.telegram.tgnet.TLRPC$MessageMedia r0 = r0.media
                        boolean r0 = r0 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaDocument
                        if (r0 == 0) goto L_0x0cf8
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r0 = r0.currentMessageObject
                        org.telegram.tgnet.TLRPC$Message r0 = r0.messageOwner
                        org.telegram.tgnet.TLRPC$MessageMedia r0 = r0.media
                        org.telegram.tgnet.TLRPC$Document r0 = r0.document
                    L_0x0cd2:
                        org.telegram.ui.PhotoViewer r9 = org.telegram.ui.PhotoViewer.this
                        org.telegram.ui.PhotoViewer$12$1 r10 = new org.telegram.ui.PhotoViewer$12$1
                        org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                        android.app.Activity r3 = r1.parentActivity
                        org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                        org.telegram.messenger.MessageObject r4 = r1.currentMessageObject
                        org.telegram.ui.ActionBar.Theme$ResourcesProvider r6 = r15
                        r1 = r10
                        r2 = r32
                        r5 = r0
                        r1.<init>(r3, r4, r5, r6)
                        org.telegram.ui.Components.StickersAlert unused = r9.masksAlert = r10
                        org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                        org.telegram.ui.Components.StickersAlert r1 = r1.masksAlert
                        r1.show()
                        goto L_0x0cff
                    L_0x0cf8:
                        return
                    L_0x0cf9:
                        return
                    L_0x0cfa:
                        org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                        r0.onSharePressed()
                    L_0x0cff:
                        return
                    */
                    throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.AnonymousClass12.onItemClick(int):void");
                }

                /* renamed from: lambda$onItemClick$0$org-telegram-ui-PhotoViewer$12  reason: not valid java name */
                public /* synthetic */ void m4302lambda$onItemClick$0$orgtelegramuiPhotoViewer$12(boolean isVideo) {
                    BulletinFactory.createSaveToGalleryBulletin(PhotoViewer.this.containerView, isVideo, -NUM, -1).show();
                }

                /* renamed from: lambda$onItemClick$1$org-telegram-ui-PhotoViewer$12  reason: not valid java name */
                public /* synthetic */ void m4303lambda$onItemClick$1$orgtelegramuiPhotoViewer$12(DialogInterface di, int a) {
                    ArrayList<MessageObject> singleMessage = new ArrayList<>(1);
                    singleMessage.add(PhotoViewer.this.currentMessageObject);
                    PhotoViewer.this.showShareAlert(singleMessage);
                }

                /* renamed from: lambda$onItemClick$2$org-telegram-ui-PhotoViewer$12  reason: not valid java name */
                public /* synthetic */ void m4304lambda$onItemClick$2$orgtelegramuiPhotoViewer$12(ArrayList msgs, DialogInterface di, int a) {
                    PhotoViewer.this.showShareAlert(msgs);
                }

                /* renamed from: lambda$onItemClick$4$org-telegram-ui-PhotoViewer$12  reason: not valid java name */
                public /* synthetic */ void m4305lambda$onItemClick$4$orgtelegramuiPhotoViewer$12(ArrayList fmessages, ChatActivity parentChatActivityFinal, DialogsActivity fragment1, ArrayList dids, CharSequence message, boolean param) {
                    ArrayList arrayList = dids;
                    if (dids.size() > 1 || ((Long) arrayList.get(0)).longValue() == UserConfig.getInstance(PhotoViewer.this.currentAccount).getClientUserId()) {
                        ArrayList arrayList2 = fmessages;
                    } else if (message != null) {
                        ArrayList arrayList3 = fmessages;
                    } else {
                        long did = ((Long) arrayList.get(0)).longValue();
                        Bundle args1 = new Bundle();
                        args1.putBoolean("scrollToTopOnResume", true);
                        if (DialogObject.isEncryptedDialog(did)) {
                            args1.putInt("enc_id", DialogObject.getEncryptedChatId(did));
                        } else if (DialogObject.isUserDialog(did)) {
                            args1.putLong("user_id", did);
                        } else {
                            args1.putLong("chat_id", -did);
                        }
                        NotificationCenter.getInstance(PhotoViewer.this.currentAccount).postNotificationName(NotificationCenter.closeChats, new Object[0]);
                        ChatActivity chatActivity = new ChatActivity(args1);
                        if (((LaunchActivity) PhotoViewer.this.parentActivity).presentFragment(chatActivity, true, false)) {
                            chatActivity.showFieldPanelForForward(true, fmessages);
                            return;
                        }
                        ArrayList arrayList4 = fmessages;
                        fragment1.finishFragment();
                        return;
                    }
                    int a = 0;
                    while (a < dids.size()) {
                        long did2 = ((Long) arrayList.get(a)).longValue();
                        if (message != null) {
                            SendMessagesHelper.getInstance(PhotoViewer.this.currentAccount).sendMessage(message.toString(), did2, (MessageObject) null, (MessageObject) null, (TLRPC.WebPage) null, true, (ArrayList<TLRPC.MessageEntity>) null, (TLRPC.ReplyMarkup) null, (HashMap<String, String>) null, true, 0, (MessageObject.SendAnimationData) null);
                        }
                        SendMessagesHelper.getInstance(PhotoViewer.this.currentAccount).sendMessage((ArrayList<MessageObject>) fmessages, did2, false, false, true, 0);
                        a++;
                        ArrayList arrayList5 = fmessages;
                    }
                    fragment1.finishFragment();
                    if (parentChatActivityFinal == null) {
                        return;
                    }
                    if (dids.size() == 1) {
                        parentChatActivityFinal.getUndoView().showWithAction(((Long) arrayList.get(0)).longValue(), 53, (Object) Integer.valueOf(fmessages.size()));
                    } else {
                        parentChatActivityFinal.getUndoView().showWithAction(0, 53, (Object) Integer.valueOf(fmessages.size()), (Object) Integer.valueOf(dids.size()), (Runnable) null, (Runnable) null);
                    }
                }

                static /* synthetic */ void lambda$onItemClick$5(boolean[] deleteForAll, View v) {
                    deleteForAll[0] = !deleteForAll[0];
                    ((CheckBoxCell) v).setChecked(deleteForAll[0], true);
                }

                /* renamed from: lambda$onItemClick$6$org-telegram-ui-PhotoViewer$12  reason: not valid java name */
                public /* synthetic */ void m4306lambda$onItemClick$6$orgtelegramuiPhotoViewer$12(boolean[] deleteForAll, DialogInterface dialogInterface, int i) {
                    TLRPC.EncryptedChat encryptedChat;
                    ArrayList<Long> random_ids;
                    if (!PhotoViewer.this.imagesArr.isEmpty()) {
                        if (PhotoViewer.this.currentIndex >= 0 && PhotoViewer.this.currentIndex < PhotoViewer.this.imagesArr.size()) {
                            MessageObject obj = (MessageObject) PhotoViewer.this.imagesArr.get(PhotoViewer.this.currentIndex);
                            if (obj.isSent()) {
                                PhotoViewer.this.closePhoto(false, false);
                                ArrayList<Integer> arr = new ArrayList<>();
                                if (PhotoViewer.this.slideshowMessageId != 0) {
                                    arr.add(Integer.valueOf(PhotoViewer.this.slideshowMessageId));
                                } else {
                                    arr.add(Integer.valueOf(obj.getId()));
                                }
                                if (!DialogObject.isEncryptedDialog(obj.getDialogId()) || obj.messageOwner.random_id == 0) {
                                    random_ids = null;
                                    encryptedChat = null;
                                } else {
                                    ArrayList<Long> random_ids2 = new ArrayList<>();
                                    random_ids2.add(Long.valueOf(obj.messageOwner.random_id));
                                    random_ids = random_ids2;
                                    encryptedChat = MessagesController.getInstance(PhotoViewer.this.currentAccount).getEncryptedChat(Integer.valueOf(DialogObject.getEncryptedChatId(obj.getDialogId())));
                                }
                                MessagesController.getInstance(PhotoViewer.this.currentAccount).deleteMessages(arr, random_ids, encryptedChat, obj.getDialogId(), deleteForAll[0], obj.scheduled);
                            }
                        }
                    } else if (!PhotoViewer.this.avatarsArr.isEmpty()) {
                        if (PhotoViewer.this.currentIndex >= 0 && PhotoViewer.this.currentIndex < PhotoViewer.this.avatarsArr.size()) {
                            TLRPC.Message message = (TLRPC.Message) PhotoViewer.this.imagesArrMessages.get(PhotoViewer.this.currentIndex);
                            if (message != null) {
                                ArrayList<Integer> arr2 = new ArrayList<>();
                                arr2.add(Integer.valueOf(message.id));
                                MessagesController.getInstance(PhotoViewer.this.currentAccount).deleteMessages(arr2, (ArrayList<Long>) null, (TLRPC.EncryptedChat) null, MessageObject.getDialogId(message), true, false);
                                NotificationCenter.getInstance(PhotoViewer.this.currentAccount).postNotificationName(NotificationCenter.reloadDialogPhotos, new Object[0]);
                            }
                            if (PhotoViewer.this.isCurrentAvatarSet()) {
                                if (PhotoViewer.this.avatarsDialogId > 0) {
                                    MessagesController.getInstance(PhotoViewer.this.currentAccount).deleteUserPhoto((TLRPC.InputPhoto) null);
                                } else {
                                    MessagesController.getInstance(PhotoViewer.this.currentAccount).changeChatAvatar(-PhotoViewer.this.avatarsDialogId, (TLRPC.TL_inputChatPhoto) null, (TLRPC.InputFile) null, (TLRPC.InputFile) null, 0.0d, (String) null, (TLRPC.FileLocation) null, (TLRPC.FileLocation) null, (Runnable) null);
                                }
                                PhotoViewer.this.closePhoto(false, false);
                                return;
                            }
                            TLRPC.Photo photo = (TLRPC.Photo) PhotoViewer.this.avatarsArr.get(PhotoViewer.this.currentIndex);
                            if (photo != null) {
                                TLRPC.TL_inputPhoto inputPhoto = new TLRPC.TL_inputPhoto();
                                inputPhoto.id = photo.id;
                                inputPhoto.access_hash = photo.access_hash;
                                inputPhoto.file_reference = photo.file_reference;
                                if (inputPhoto.file_reference == null) {
                                    inputPhoto.file_reference = new byte[0];
                                }
                                if (PhotoViewer.this.avatarsDialogId > 0) {
                                    MessagesController.getInstance(PhotoViewer.this.currentAccount).deleteUserPhoto(inputPhoto);
                                }
                                MessagesStorage.getInstance(PhotoViewer.this.currentAccount).clearUserPhoto(PhotoViewer.this.avatarsDialogId, photo.id);
                                PhotoViewer.this.imagesArrLocations.remove(PhotoViewer.this.currentIndex);
                                PhotoViewer.this.imagesArrLocationsSizes.remove(PhotoViewer.this.currentIndex);
                                PhotoViewer.this.imagesArrLocationsVideo.remove(PhotoViewer.this.currentIndex);
                                PhotoViewer.this.imagesArrMessages.remove(PhotoViewer.this.currentIndex);
                                PhotoViewer.this.avatarsArr.remove(PhotoViewer.this.currentIndex);
                                if (PhotoViewer.this.imagesArrLocations.isEmpty()) {
                                    PhotoViewer.this.closePhoto(false, false);
                                } else {
                                    int index = PhotoViewer.this.currentIndex;
                                    if (index >= PhotoViewer.this.avatarsArr.size()) {
                                        index = PhotoViewer.this.avatarsArr.size() - 1;
                                    }
                                    int unused = PhotoViewer.this.currentIndex = -1;
                                    PhotoViewer.this.setImageIndex(index);
                                }
                                if (message == null) {
                                    NotificationCenter.getInstance(PhotoViewer.this.currentAccount).postNotificationName(NotificationCenter.reloadDialogPhotos, new Object[0]);
                                }
                            }
                        }
                    } else if (!PhotoViewer.this.secureDocuments.isEmpty() && PhotoViewer.this.placeProvider != null) {
                        PhotoViewer.this.secureDocuments.remove(PhotoViewer.this.currentIndex);
                        PhotoViewer.this.placeProvider.deleteImageAtIndex(PhotoViewer.this.currentIndex);
                        if (PhotoViewer.this.secureDocuments.isEmpty()) {
                            PhotoViewer.this.closePhoto(false, false);
                            return;
                        }
                        int index2 = PhotoViewer.this.currentIndex;
                        if (index2 >= PhotoViewer.this.secureDocuments.size()) {
                            index2 = PhotoViewer.this.secureDocuments.size() - 1;
                        }
                        int unused2 = PhotoViewer.this.currentIndex = -1;
                        PhotoViewer.this.setImageIndex(index2);
                    }
                }

                /* renamed from: lambda$onItemClick$8$org-telegram-ui-PhotoViewer$12  reason: not valid java name */
                public /* synthetic */ void m4308lambda$onItemClick$8$orgtelegramuiPhotoViewer$12(UserConfig userConfig, TLRPC.Photo photo, TLObject response, TLRPC.TL_error error) {
                    AndroidUtilities.runOnUIThread(new PhotoViewer$12$$ExternalSyntheticLambda6(this, response, userConfig, photo));
                }

                /* renamed from: lambda$onItemClick$7$org-telegram-ui-PhotoViewer$12  reason: not valid java name */
                public /* synthetic */ void m4307lambda$onItemClick$7$orgtelegramuiPhotoViewer$12(TLObject response, UserConfig userConfig, TLRPC.Photo photo) {
                    if (response instanceof TLRPC.TL_photos_photo) {
                        TLRPC.TL_photos_photo photos_photo = (TLRPC.TL_photos_photo) response;
                        MessagesController.getInstance(PhotoViewer.this.currentAccount).putUsers(photos_photo.users, false);
                        TLRPC.User user = MessagesController.getInstance(PhotoViewer.this.currentAccount).getUser(Long.valueOf(userConfig.clientUserId));
                        if (photos_photo.photo instanceof TLRPC.TL_photo) {
                            int idx = PhotoViewer.this.avatarsArr.indexOf(photo);
                            if (idx >= 0) {
                                PhotoViewer.this.avatarsArr.set(idx, photos_photo.photo);
                            }
                            if (user != null) {
                                user.photo.photo_id = photos_photo.photo.id;
                                userConfig.setCurrentUser(user);
                                userConfig.saveConfig(true);
                            }
                        }
                    }
                }

                /* renamed from: lambda$onItemClick$9$org-telegram-ui-PhotoViewer$12  reason: not valid java name */
                public /* synthetic */ void m4309lambda$onItemClick$9$orgtelegramuiPhotoViewer$12() {
                    if (PhotoViewer.this.menuItem != null) {
                        PhotoViewer.this.menuItem.hideSubItem(16);
                    }
                }

                public boolean canOpenMenu() {
                    boolean z = true;
                    if (PhotoViewer.this.currentMessageObject != null || PhotoViewer.this.currentSecureDocument != null) {
                        return true;
                    }
                    if (PhotoViewer.this.currentFileLocationVideo != null) {
                        FileLoader instance = FileLoader.getInstance(PhotoViewer.this.currentAccount);
                        TLRPC.FileLocation fileLocation = PhotoViewer.getFileLocation(PhotoViewer.this.currentFileLocationVideo);
                        String fileLocationExt = PhotoViewer.getFileLocationExt(PhotoViewer.this.currentFileLocationVideo);
                        if (PhotoViewer.this.avatarsDialogId == 0 && !PhotoViewer.this.isEvent) {
                            z = false;
                        }
                        return instance.getPathToAttach(fileLocation, fileLocationExt, z).exists();
                    } else if (PhotoViewer.this.pageBlocksAdapter != null) {
                        return true;
                    } else {
                        return false;
                    }
                }
            });
            ActionBarMenu menu = this.actionBar.createMenu();
            ActionBarMenuItem addItem = menu.addItem(13, NUM);
            this.masksItem = addItem;
            addItem.setContentDescription(LocaleController.getString("Masks", NUM));
            ActionBarMenuItem addItem2 = menu.addItem(5, NUM);
            this.pipItem = addItem2;
            addItem2.setContentDescription(LocaleController.getString("AccDescrPipMode", NUM));
            ActionBarMenuItem addItem3 = menu.addItem(3, NUM);
            this.sendItem = addItem3;
            addItem3.setContentDescription(LocaleController.getString("Forward", NUM));
            ActionBarMenuItem addItem4 = menu.addItem(18, NUM);
            this.shareItem = addItem4;
            addItem4.setContentDescription(LocaleController.getString("ShareFile", NUM));
            ActionBarMenuItem addItem5 = menu.addItem(0, NUM);
            this.menuItem = addItem5;
            addItem5.getPopupLayout().swipeBackGravityRight = true;
            this.chooseSpeedLayout = new ChooseSpeedLayout(this.activityContext, this.menuItem.getPopupLayout().getSwipeBack(), new ChooseSpeedLayout.Callback() {
                public void onSpeedSelected(float speed) {
                    PhotoViewer.this.menuItem.toggleSubMenu();
                    if (speed != PhotoViewer.this.currentVideoSpeed) {
                        float unused = PhotoViewer.this.currentVideoSpeed = speed;
                        if (PhotoViewer.this.currentMessageObject != null) {
                            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("playback_speed", 0);
                            if (Math.abs(PhotoViewer.this.currentVideoSpeed - 1.0f) < 0.001f) {
                                SharedPreferences.Editor edit = preferences.edit();
                                edit.remove("speed" + PhotoViewer.this.currentMessageObject.getDialogId() + "_" + PhotoViewer.this.currentMessageObject.getId()).commit();
                            } else {
                                SharedPreferences.Editor edit2 = preferences.edit();
                                edit2.putFloat("speed" + PhotoViewer.this.currentMessageObject.getDialogId() + "_" + PhotoViewer.this.currentMessageObject.getId(), PhotoViewer.this.currentVideoSpeed).commit();
                            }
                        }
                        if (PhotoViewer.this.videoPlayer != null) {
                            PhotoViewer.this.videoPlayer.setPlaybackSpeed(PhotoViewer.this.currentVideoSpeed);
                        }
                        if (PhotoViewer.this.photoViewerWebView != null) {
                            PhotoViewer.this.photoViewerWebView.setPlaybackSpeed(PhotoViewer.this.currentVideoSpeed);
                        }
                        PhotoViewer.this.setMenuItemIcon();
                    }
                }
            });
            this.speedItem = this.menuItem.addSwipeBackItem(NUM, (Drawable) null, LocaleController.getString("Speed", NUM), this.chooseSpeedLayout.speedSwipeBackLayout);
            this.menuItem.getPopupLayout().setSwipeBackForegroundColor(-14540254);
            this.speedItem.setSubtext(LocaleController.getString("SpeedNormal", NUM));
            this.speedItem.setColors(-328966, -328966);
            ActionBarPopupWindow.GapView addColoredGap = this.menuItem.addColoredGap();
            this.speedGap = addColoredGap;
            addColoredGap.setColor(-15198184);
            this.menuItem.getPopupLayout().setFitItems(true);
            this.menuItem.addSubItem(11, NUM, (CharSequence) LocaleController.getString("OpenInExternalApp", NUM)).setColors(-328966, -328966);
            this.menuItem.setContentDescription(LocaleController.getString("AccDescrMoreOptions", NUM));
            ActionBarMenuSubItem addSubItem = this.menuItem.addSubItem(2, NUM, (CharSequence) LocaleController.getString("ShowAllMedia", NUM));
            this.allMediaItem = addSubItem;
            addSubItem.setColors(-328966, -328966);
            this.menuItem.addSubItem(14, NUM, (CharSequence) LocaleController.getString("SaveToGIFs", NUM)).setColors(-328966, -328966);
            this.menuItem.addSubItem(4, NUM, (CharSequence) LocaleController.getString("ShowInChat", NUM)).setColors(-328966, -328966);
            this.menuItem.addSubItem(15, NUM, (CharSequence) LocaleController.getString("ShowStickers", NUM)).setColors(-328966, -328966);
            this.menuItem.addSubItem(10, NUM, (CharSequence) LocaleController.getString("ShareFile", NUM)).setColors(-328966, -328966);
            this.menuItem.addSubItem(1, NUM, (CharSequence) LocaleController.getString("SaveToGallery", NUM)).setColors(-328966, -328966);
            this.menuItem.addSubItem(16, NUM, (CharSequence) LocaleController.getString("SetAsMain", NUM)).setColors(-328966, -328966);
            this.menuItem.addSubItem(6, NUM, (CharSequence) LocaleController.getString("Delete", NUM)).setColors(-328966, -328966);
            this.menuItem.addSubItem(7, NUM, (CharSequence) LocaleController.getString("StopDownload", NUM)).setColors(-328966, -328966);
            this.menuItem.redrawPopup(-NUM);
            setMenuItemIcon();
            this.menuItem.setPopupItemsSelectorColor(NUM);
            this.menuItem.setSubMenuDelegate(new ActionBarMenuItem.ActionBarSubMenuItemDelegate() {
                public void onShowSubMenu() {
                    if (PhotoViewer.this.videoPlayerControlVisible && PhotoViewer.this.isPlaying) {
                        AndroidUtilities.cancelRunOnUIThread(PhotoViewer.this.hideActionBarRunnable);
                    }
                }

                public void onHideSubMenu() {
                    if (PhotoViewer.this.videoPlayerControlVisible && PhotoViewer.this.isPlaying) {
                        PhotoViewer.this.scheduleActionBarHide();
                    }
                }
            });
            AnonymousClass15 r03 = new FrameLayout(this.activityContext) {
                /* access modifiers changed from: protected */
                public void measureChildWithMargins(View child, int parentWidthMeasureSpec, int widthUsed, int parentHeightMeasureSpec, int heightUsed) {
                    if (child == PhotoViewer.this.nameTextView || child == PhotoViewer.this.dateTextView) {
                        widthUsed = PhotoViewer.this.bottomButtonsLayout.getMeasuredWidth();
                    }
                    super.measureChildWithMargins(child, parentWidthMeasureSpec, widthUsed, parentHeightMeasureSpec, heightUsed);
                }
            };
            this.bottomLayout = r03;
            r03.setBackgroundColor(NUM);
            this.containerView.addView(this.bottomLayout, LayoutHelper.createFrame(-1, 48, 83));
            View view = new View(this.activityContext);
            this.navigationBar = view;
            view.setBackgroundColor(NUM);
            this.windowView.addView(this.navigationBar, LayoutHelper.createFrame(-1.0f, ((float) this.navigationBarHeight) / AndroidUtilities.density, 87));
            this.pressedDrawable[0] = new GradientDrawable(GradientDrawable.Orientation.LEFT_RIGHT, new int[]{NUM, 0});
            this.pressedDrawable[0].setShape(0);
            this.pressedDrawable[1] = new GradientDrawable(GradientDrawable.Orientation.RIGHT_LEFT, new int[]{NUM, 0});
            this.pressedDrawable[1].setShape(0);
            GroupedPhotosListView groupedPhotosListView2 = new GroupedPhotosListView(this.activityContext, AndroidUtilities.dp(10.0f));
            this.groupedPhotosListView = groupedPhotosListView2;
            this.containerView.addView(groupedPhotosListView2, LayoutHelper.createFrame(-1, 68, 83));
            this.groupedPhotosListView.setDelegate(new GroupedPhotosListView.GroupedPhotosListViewDelegate() {
                public int getCurrentIndex() {
                    return PhotoViewer.this.currentIndex;
                }

                public int getCurrentAccount() {
                    return PhotoViewer.this.currentAccount;
                }

                public long getAvatarsDialogId() {
                    return PhotoViewer.this.avatarsDialogId;
                }

                public int getSlideshowMessageId() {
                    return PhotoViewer.this.slideshowMessageId;
                }

                public ArrayList<ImageLocation> getImagesArrLocations() {
                    return PhotoViewer.this.imagesArrLocations;
                }

                public ArrayList<MessageObject> getImagesArr() {
                    return PhotoViewer.this.imagesArr;
                }

                public List<TLRPC.PageBlock> getPageBlockArr() {
                    if (PhotoViewer.this.pageBlocksAdapter != null) {
                        return PhotoViewer.this.pageBlocksAdapter.getAll();
                    }
                    return null;
                }

                public Object getParentObject() {
                    if (PhotoViewer.this.pageBlocksAdapter != null) {
                        return PhotoViewer.this.pageBlocksAdapter.getParentObject();
                    }
                    return null;
                }

                public void setCurrentIndex(int index) {
                    int unused = PhotoViewer.this.currentIndex = -1;
                    if (PhotoViewer.this.currentThumb != null) {
                        PhotoViewer.this.currentThumb.release();
                        ImageReceiver.BitmapHolder unused2 = PhotoViewer.this.currentThumb = null;
                    }
                    boolean unused3 = PhotoViewer.this.dontAutoPlay = true;
                    PhotoViewer.this.setImageIndex(index);
                    boolean unused4 = PhotoViewer.this.dontAutoPlay = false;
                }

                public void onShowAnimationStart() {
                    PhotoViewer.this.containerView.requestLayout();
                }

                public void onStopScrolling() {
                    PhotoViewer photoViewer = PhotoViewer.this;
                    if (photoViewer.shouldMessageObjectAutoPlayed(photoViewer.currentMessageObject)) {
                        boolean unused = PhotoViewer.this.playerAutoStarted = true;
                        PhotoViewer.this.onActionClick(true);
                        PhotoViewer.this.checkProgress(0, false, true);
                    }
                }

                public boolean validGroupId(long groupId) {
                    if (PhotoViewer.this.placeProvider != null) {
                        return PhotoViewer.this.placeProvider.validateGroupId(groupId);
                    }
                    return true;
                }
            });
            for (int a = 0; a < 3; a++) {
                this.fullscreenButton[a] = new ImageView(this.parentActivity);
                this.fullscreenButton[a].setImageResource(NUM);
                this.fullscreenButton[a].setContentDescription(LocaleController.getString("AccSwitchToFullscreen", NUM));
                this.fullscreenButton[a].setScaleType(ImageView.ScaleType.CENTER);
                this.fullscreenButton[a].setBackground(Theme.createSelectorDrawable(NUM));
                this.fullscreenButton[a].setVisibility(4);
                this.fullscreenButton[a].setAlpha(1.0f);
                this.containerView.addView(this.fullscreenButton[a], LayoutHelper.createFrame(48, 48.0f));
                this.fullscreenButton[a].setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda25(this));
            }
            CaptionTextViewSwitcher captionTextViewSwitcher2 = new CaptionTextViewSwitcher(this.containerView.getContext());
            this.captionTextViewSwitcher = captionTextViewSwitcher2;
            captionTextViewSwitcher2.setFactory(new PhotoViewer$$ExternalSyntheticLambda40(this));
            this.captionTextViewSwitcher.setVisibility(4);
            setCaptionHwLayerEnabled(true);
            for (int a2 = 0; a2 < 3; a2++) {
                this.photoProgressViews[a2] = new PhotoProgressView(this.containerView) {
                    /* access modifiers changed from: protected */
                    public void onBackgroundStateUpdated(int state) {
                        if (this == PhotoViewer.this.photoProgressViews[0]) {
                            PhotoViewer.this.updateAccessibilityOverlayVisibility();
                        }
                    }

                    /* access modifiers changed from: protected */
                    public void onVisibilityChanged(boolean visible) {
                        if (this == PhotoViewer.this.photoProgressViews[0]) {
                            PhotoViewer.this.updateAccessibilityOverlayVisibility();
                        }
                    }
                };
                this.photoProgressViews[a2].setBackgroundState(0, false, true);
            }
            AnonymousClass18 r04 = new RadialProgressView(this.activityContext, resourcesProvider3) {
                public void setAlpha(float alpha) {
                    super.setAlpha(alpha);
                    if (PhotoViewer.this.containerView != null) {
                        PhotoViewer.this.containerView.invalidate();
                    }
                }

                public void invalidate() {
                    super.invalidate();
                    if (PhotoViewer.this.containerView != null) {
                        PhotoViewer.this.containerView.invalidate();
                    }
                }
            };
            this.miniProgressView = r04;
            r04.setUseSelfAlpha(true);
            this.miniProgressView.setProgressColor(-1);
            this.miniProgressView.setSize(AndroidUtilities.dp(54.0f));
            this.miniProgressView.setBackgroundResource(NUM);
            this.miniProgressView.setVisibility(4);
            this.miniProgressView.setAlpha(0.0f);
            this.containerView.addView(this.miniProgressView, LayoutHelper.createFrame(64, 64, 17));
            LinearLayout linearLayout = new LinearLayout(this.containerView.getContext());
            this.bottomButtonsLayout = linearLayout;
            linearLayout.setOrientation(0);
            this.bottomLayout.addView(this.bottomButtonsLayout, LayoutHelper.createFrame(-2, -1, 53));
            ImageView imageView = new ImageView(this.containerView.getContext());
            this.paintButton = imageView;
            imageView.setImageResource(NUM);
            this.paintButton.setScaleType(ImageView.ScaleType.CENTER);
            this.paintButton.setBackgroundDrawable(Theme.createSelectorDrawable(NUM));
            this.bottomButtonsLayout.addView(this.paintButton, LayoutHelper.createFrame(50, -1.0f));
            this.paintButton.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda26(this));
            this.paintButton.setContentDescription(LocaleController.getString("AccDescrPhotoEditor", NUM));
            ImageView imageView2 = new ImageView(this.containerView.getContext());
            this.shareButton = imageView2;
            imageView2.setImageResource(NUM);
            this.shareButton.setScaleType(ImageView.ScaleType.CENTER);
            this.shareButton.setBackgroundDrawable(Theme.createSelectorDrawable(NUM));
            this.bottomButtonsLayout.addView(this.shareButton, LayoutHelper.createFrame(50, -1.0f));
            this.shareButton.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda27(this));
            this.shareButton.setContentDescription(LocaleController.getString("ShareFile", NUM));
            AnonymousClass19 r05 = new FadingTextViewLayout(this.containerView.getContext()) {
                /* access modifiers changed from: protected */
                public void onTextViewCreated(TextView textView) {
                    super.onTextViewCreated(textView);
                    textView.setTextSize(1, 14.0f);
                    textView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
                    textView.setEllipsize(TextUtils.TruncateAt.END);
                    textView.setTextColor(-1);
                    textView.setGravity(3);
                }
            };
            this.nameTextView = r05;
            this.bottomLayout.addView(r05, LayoutHelper.createFrame(-1, -2.0f, 51, 16.0f, 5.0f, 8.0f, 0.0f));
            AnonymousClass20 r06 = new FadingTextViewLayout(this.containerView.getContext(), true) {
                private LocaleController.LocaleInfo lastLocaleInfo = null;
                private int staticCharsCount = 0;

                /* access modifiers changed from: protected */
                public void onTextViewCreated(TextView textView) {
                    super.onTextViewCreated(textView);
                    textView.setTextSize(1, 13.0f);
                    textView.setEllipsize(TextUtils.TruncateAt.END);
                    textView.setTextColor(-1);
                    textView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
                    textView.setGravity(3);
                }

                /* access modifiers changed from: protected */
                public int getStaticCharsCount() {
                    LocaleController.LocaleInfo localeInfo = LocaleController.getInstance().getCurrentLocaleInfo();
                    if (this.lastLocaleInfo != localeInfo) {
                        this.lastLocaleInfo = localeInfo;
                        this.staticCharsCount = LocaleController.formatString("formatDateAtTime", NUM, LocaleController.getInstance().formatterYear.format(new Date()), LocaleController.getInstance().formatterDay.format(new Date())).length();
                    }
                    return this.staticCharsCount;
                }

                public void setText(CharSequence text, boolean animated) {
                    int staticCharsCount2;
                    if (animated) {
                        boolean dontAnimateUnchangedStaticChars = true;
                        if (LocaleController.isRTL && (staticCharsCount2 = getStaticCharsCount()) > 0 && !(text.length() == staticCharsCount2 && getText() != null && getText().length() == staticCharsCount2)) {
                            dontAnimateUnchangedStaticChars = false;
                        }
                        setText(text, true, dontAnimateUnchangedStaticChars);
                        return;
                    }
                    setText(text, false, false);
                }
            };
            this.dateTextView = r06;
            this.bottomLayout.addView(r06, LayoutHelper.createFrame(-1, -2.0f, 51, 16.0f, 25.0f, 8.0f, 0.0f));
            createVideoControlsInterface();
            RadialProgressView radialProgressView = new RadialProgressView(this.parentActivity, resourcesProvider3);
            this.progressView = radialProgressView;
            radialProgressView.setProgressColor(-1);
            this.progressView.setBackgroundResource(NUM);
            this.progressView.setVisibility(4);
            this.containerView.addView(this.progressView, LayoutHelper.createFrame(54, 54, 17));
            PickerBottomLayoutViewer pickerBottomLayoutViewer = new PickerBottomLayoutViewer(this.parentActivity);
            this.qualityPicker = pickerBottomLayoutViewer;
            pickerBottomLayoutViewer.setBackgroundColor(NUM);
            this.qualityPicker.updateSelectedCount(0, false);
            this.qualityPicker.setTranslationY((float) AndroidUtilities.dp(120.0f));
            this.qualityPicker.doneButton.setText(LocaleController.getString("Done", NUM).toUpperCase());
            this.qualityPicker.doneButton.setTextColor(getThemedColor("dialogFloatingButton"));
            this.containerView.addView(this.qualityPicker, LayoutHelper.createFrame(-1, 48, 83));
            this.qualityPicker.cancelButton.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda28(this));
            this.qualityPicker.doneButton.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda9(this));
            VideoForwardDrawable videoForwardDrawable2 = new VideoForwardDrawable(false);
            this.videoForwardDrawable = videoForwardDrawable2;
            videoForwardDrawable2.setDelegate(new VideoForwardDrawable.VideoForwardDrawableDelegate() {
                public void onAnimationEnd() {
                }

                public void invalidate() {
                    PhotoViewer.this.containerView.invalidate();
                }
            });
            QualityChooseView qualityChooseView2 = new QualityChooseView(this.parentActivity);
            this.qualityChooseView = qualityChooseView2;
            qualityChooseView2.setTranslationY((float) AndroidUtilities.dp(120.0f));
            this.qualityChooseView.setVisibility(4);
            this.qualityChooseView.setBackgroundColor(NUM);
            this.containerView.addView(this.qualityChooseView, LayoutHelper.createFrame(-1, 70.0f, 83, 0.0f, 0.0f, 0.0f, 48.0f));
            AnonymousClass22 r07 = new FrameLayout(this.activityContext) {
                public boolean dispatchTouchEvent(MotionEvent ev) {
                    return PhotoViewer.this.bottomTouchEnabled && super.dispatchTouchEvent(ev);
                }

                public boolean onInterceptTouchEvent(MotionEvent ev) {
                    return PhotoViewer.this.bottomTouchEnabled && super.onInterceptTouchEvent(ev);
                }

                public boolean onTouchEvent(MotionEvent event) {
                    return PhotoViewer.this.bottomTouchEnabled && super.onTouchEvent(event);
                }

                public void setTranslationY(float translationY) {
                    super.setTranslationY(translationY);
                    if (!(PhotoViewer.this.videoTimelineView == null || PhotoViewer.this.videoTimelineView.getVisibility() == 8)) {
                        PhotoViewer.this.videoTimelineView.setTranslationY(translationY);
                        PhotoViewer.this.videoAvatarTooltip.setTranslationY(translationY);
                    }
                    if (PhotoViewer.this.videoAvatarTooltip != null && PhotoViewer.this.videoAvatarTooltip.getVisibility() != 8) {
                        PhotoViewer.this.videoAvatarTooltip.setTranslationY(translationY);
                    }
                }

                public void setAlpha(float alpha) {
                    super.setAlpha(alpha);
                    if (PhotoViewer.this.videoTimelineView != null && PhotoViewer.this.videoTimelineView.getVisibility() != 8) {
                        PhotoViewer.this.videoTimelineView.setAlpha(alpha);
                    }
                }

                public void setVisibility(int visibility) {
                    super.setVisibility(visibility);
                    if (PhotoViewer.this.videoTimelineView != null && PhotoViewer.this.videoTimelineView.getVisibility() != 8) {
                        PhotoViewer.this.videoTimelineView.setVisibility(visibility == 0 ? 0 : 4);
                    }
                }

                /* access modifiers changed from: protected */
                public void onLayout(boolean changed, int left, int top, int right, int bottom) {
                    super.onLayout(changed, left, top, right, bottom);
                    if (PhotoViewer.this.itemsLayout.getVisibility() != 8) {
                        int x = (((right - left) - AndroidUtilities.dp(70.0f)) - PhotoViewer.this.itemsLayout.getMeasuredWidth()) / 2;
                        PhotoViewer.this.itemsLayout.layout(x, PhotoViewer.this.itemsLayout.getTop(), PhotoViewer.this.itemsLayout.getMeasuredWidth() + x, PhotoViewer.this.itemsLayout.getTop() + PhotoViewer.this.itemsLayout.getMeasuredHeight());
                    }
                }
            };
            this.pickerView = r07;
            r07.setBackgroundColor(NUM);
            this.containerView.addView(this.pickerView, LayoutHelper.createFrame(-1, -2, 83));
            TextView textView = new TextView(this.containerView.getContext());
            this.docNameTextView = textView;
            textView.setTextSize(1, 15.0f);
            this.docNameTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
            this.docNameTextView.setSingleLine(true);
            this.docNameTextView.setMaxLines(1);
            this.docNameTextView.setEllipsize(TextUtils.TruncateAt.END);
            this.docNameTextView.setTextColor(-1);
            this.docNameTextView.setGravity(3);
            this.pickerView.addView(this.docNameTextView, LayoutHelper.createFrame(-1, -2.0f, 51, 20.0f, 23.0f, 84.0f, 0.0f));
            TextView textView2 = new TextView(this.containerView.getContext());
            this.docInfoTextView = textView2;
            textView2.setTextSize(1, 14.0f);
            this.docInfoTextView.setSingleLine(true);
            this.docInfoTextView.setMaxLines(1);
            this.docInfoTextView.setEllipsize(TextUtils.TruncateAt.END);
            this.docInfoTextView.setTextColor(-1);
            this.docInfoTextView.setGravity(3);
            this.pickerView.addView(this.docInfoTextView, LayoutHelper.createFrame(-1, -2.0f, 51, 20.0f, 46.0f, 84.0f, 0.0f));
            AnonymousClass23 r08 = new VideoTimelinePlayView(this.parentActivity) {
                public void setTranslationY(float translationY) {
                    if (getTranslationY() != translationY) {
                        super.setTranslationY(translationY);
                        PhotoViewer.this.containerView.invalidate();
                    }
                }
            };
            this.videoTimelineView = r08;
            r08.setDelegate(new VideoTimelinePlayView.VideoTimelineViewDelegate() {
                private int seekTo;
                private Runnable seekToRunnable;
                private boolean wasPlaying;

                public void onLeftProgressChanged(float progress) {
                    if (PhotoViewer.this.videoPlayer != null) {
                        if (PhotoViewer.this.videoPlayer.isPlaying()) {
                            boolean unused = PhotoViewer.this.manuallyPaused = false;
                            PhotoViewer.this.videoPlayer.pause();
                            PhotoViewer.this.containerView.invalidate();
                        }
                        updateAvatarStartTime(1);
                        seekTo(progress);
                        PhotoViewer.this.videoPlayerSeekbar.setProgress(0.0f);
                        PhotoViewer.this.videoTimelineView.setProgress(progress);
                        PhotoViewer.this.updateVideoInfo();
                    }
                }

                public void onRightProgressChanged(float progress) {
                    if (PhotoViewer.this.videoPlayer != null) {
                        if (PhotoViewer.this.videoPlayer.isPlaying()) {
                            boolean unused = PhotoViewer.this.manuallyPaused = false;
                            PhotoViewer.this.videoPlayer.pause();
                            PhotoViewer.this.containerView.invalidate();
                        }
                        updateAvatarStartTime(2);
                        seekTo(progress);
                        PhotoViewer.this.videoPlayerSeekbar.setProgress(1.0f);
                        PhotoViewer.this.videoTimelineView.setProgress(progress);
                        PhotoViewer.this.updateVideoInfo();
                    }
                }

                public void onPlayProgressChanged(float progress) {
                    if (PhotoViewer.this.videoPlayer != null) {
                        if (PhotoViewer.this.sendPhotoType == 1) {
                            updateAvatarStartTime(0);
                        }
                        seekTo(progress);
                    }
                }

                private void seekTo(float progress) {
                    this.seekTo = (int) (PhotoViewer.this.videoDuration * progress);
                    if (SharedConfig.getDevicePerformanceClass() == 2) {
                        if (PhotoViewer.this.videoPlayer != null) {
                            PhotoViewer.this.videoPlayer.seekTo((long) this.seekTo);
                        }
                        if (PhotoViewer.this.sendPhotoType == 1) {
                            long unused = PhotoViewer.this.needCaptureFrameReadyAtTime = (long) this.seekTo;
                            if (PhotoViewer.this.captureFrameReadyAtTime != PhotoViewer.this.needCaptureFrameReadyAtTime) {
                                long unused2 = PhotoViewer.this.captureFrameReadyAtTime = -1;
                            }
                        }
                        this.seekToRunnable = null;
                    } else if (this.seekToRunnable == null) {
                        PhotoViewer$24$$ExternalSyntheticLambda0 photoViewer$24$$ExternalSyntheticLambda0 = new PhotoViewer$24$$ExternalSyntheticLambda0(this);
                        this.seekToRunnable = photoViewer$24$$ExternalSyntheticLambda0;
                        AndroidUtilities.runOnUIThread(photoViewer$24$$ExternalSyntheticLambda0, 100);
                    }
                }

                /* renamed from: lambda$seekTo$0$org-telegram-ui-PhotoViewer$24  reason: not valid java name */
                public /* synthetic */ void m4310lambda$seekTo$0$orgtelegramuiPhotoViewer$24() {
                    if (PhotoViewer.this.videoPlayer != null) {
                        PhotoViewer.this.videoPlayer.seekTo((long) this.seekTo);
                    }
                    if (PhotoViewer.this.sendPhotoType == 1) {
                        long unused = PhotoViewer.this.needCaptureFrameReadyAtTime = (long) this.seekTo;
                        if (PhotoViewer.this.captureFrameReadyAtTime != PhotoViewer.this.needCaptureFrameReadyAtTime) {
                            long unused2 = PhotoViewer.this.captureFrameReadyAtTime = -1;
                        }
                    }
                    this.seekToRunnable = null;
                }

                private void updateAvatarStartTime(int fix) {
                    if (PhotoViewer.this.sendPhotoType == 1) {
                        if (fix == 0) {
                            PhotoViewer photoViewer = PhotoViewer.this;
                            float unused = photoViewer.avatarStartProgress = photoViewer.videoTimelineView.getProgress();
                            PhotoViewer photoViewer2 = PhotoViewer.this;
                            long unused2 = photoViewer2.avatarStartTime = (long) (photoViewer2.videoDuration * 1000.0f * PhotoViewer.this.avatarStartProgress);
                        } else if (PhotoViewer.this.photoCropView == null) {
                        } else {
                            if (PhotoViewer.this.videoTimelineView.getLeftProgress() > PhotoViewer.this.avatarStartProgress || PhotoViewer.this.videoTimelineView.getRightProgress() < PhotoViewer.this.avatarStartProgress) {
                                PhotoViewer.this.photoCropView.setVideoThumbVisible(false);
                                if (fix == 1) {
                                    PhotoViewer photoViewer3 = PhotoViewer.this;
                                    long unused3 = photoViewer3.avatarStartTime = (long) (photoViewer3.videoDuration * 1000.0f * PhotoViewer.this.videoTimelineView.getLeftProgress());
                                } else {
                                    PhotoViewer photoViewer4 = PhotoViewer.this;
                                    long unused4 = photoViewer4.avatarStartTime = (long) (photoViewer4.videoDuration * 1000.0f * PhotoViewer.this.videoTimelineView.getRightProgress());
                                }
                                long unused5 = PhotoViewer.this.captureFrameAtTime = -1;
                            }
                        }
                    }
                }

                public void didStartDragging(int type) {
                    if (type == VideoTimelinePlayView.TYPE_PROGRESS) {
                        PhotoViewer.this.cancelVideoPlayRunnable();
                        boolean z = true;
                        if (PhotoViewer.this.sendPhotoType == 1) {
                            PhotoViewer.this.cancelFlashAnimations();
                            long unused = PhotoViewer.this.captureFrameAtTime = -1;
                        }
                        if (PhotoViewer.this.videoPlayer == null || !PhotoViewer.this.videoPlayer.isPlaying()) {
                            z = false;
                        }
                        this.wasPlaying = z;
                        if (z) {
                            boolean unused2 = PhotoViewer.this.manuallyPaused = false;
                            PhotoViewer.this.videoPlayer.pause();
                            PhotoViewer.this.containerView.invalidate();
                        }
                    }
                }

                public void didStopDragging(int type) {
                    Runnable runnable = this.seekToRunnable;
                    if (runnable != null) {
                        AndroidUtilities.cancelRunOnUIThread(runnable);
                        this.seekToRunnable.run();
                    }
                    PhotoViewer.this.cancelVideoPlayRunnable();
                    if (PhotoViewer.this.sendPhotoType == 1 && PhotoViewer.this.flashView != null && type == VideoTimelinePlayView.TYPE_PROGRESS) {
                        PhotoViewer.this.cancelFlashAnimations();
                        PhotoViewer photoViewer = PhotoViewer.this;
                        long unused = photoViewer.captureFrameAtTime = photoViewer.avatarStartTime;
                        if (PhotoViewer.this.captureFrameReadyAtTime == ((long) this.seekTo)) {
                            PhotoViewer.this.captureCurrentFrame();
                        }
                    } else if (PhotoViewer.this.sendPhotoType == 1 || this.wasPlaying) {
                        boolean unused2 = PhotoViewer.this.manuallyPaused = false;
                        if (PhotoViewer.this.videoPlayer != null) {
                            PhotoViewer.this.videoPlayer.play();
                        }
                    }
                }
            });
            showVideoTimeline(false, false);
            this.videoTimelineView.setBackgroundColor(NUM);
            this.containerView.addView(this.videoTimelineView, LayoutHelper.createFrame(-1, 58.0f, 83, 0.0f, 8.0f, 0.0f, 0.0f));
            TextView textView3 = new TextView(this.parentActivity);
            this.videoAvatarTooltip = textView3;
            textView3.setSingleLine(true);
            this.videoAvatarTooltip.setVisibility(8);
            this.videoAvatarTooltip.setText(LocaleController.getString("ChooseCover", NUM));
            this.videoAvatarTooltip.setGravity(1);
            this.videoAvatarTooltip.setTextSize(1, 14.0f);
            this.videoAvatarTooltip.setTextColor(-7566196);
            this.containerView.addView(this.videoAvatarTooltip, LayoutHelper.createFrame(-1, -2.0f, 83, 0.0f, 8.0f, 0.0f, 0.0f));
            AnonymousClass25 r09 = new ImageView(this.parentActivity) {
                public boolean dispatchTouchEvent(MotionEvent ev) {
                    return PhotoViewer.this.bottomTouchEnabled && super.dispatchTouchEvent(ev);
                }

                public boolean onTouchEvent(MotionEvent event) {
                    return PhotoViewer.this.bottomTouchEnabled && super.onTouchEvent(event);
                }

                public void setVisibility(int visibility) {
                    super.setVisibility(visibility);
                    if (PhotoViewer.this.captionEditText.getCaptionLimitOffset() < 0) {
                        PhotoViewer.this.captionLimitView.setVisibility(visibility);
                    } else {
                        PhotoViewer.this.captionLimitView.setVisibility(8);
                    }
                }

                public void setTranslationY(float translationY) {
                    super.setTranslationY(translationY);
                    PhotoViewer.this.captionLimitView.setTranslationY(translationY);
                }

                public void setAlpha(float alpha) {
                    super.setAlpha(alpha);
                    PhotoViewer.this.captionLimitView.setAlpha(alpha);
                }
            };
            this.pickerViewSendButton = r09;
            r09.setScaleType(ImageView.ScaleType.CENTER);
            int dp = AndroidUtilities.dp(56.0f);
            int themedColor = getThemedColor("dialogFloatingButton");
            if (Build.VERSION.SDK_INT >= 21) {
                str = "dialogFloatingButtonPressed";
            } else {
                str = "dialogFloatingButton";
            }
            Drawable createSimpleSelectorCircleDrawable = Theme.createSimpleSelectorCircleDrawable(dp, themedColor, getThemedColor(str));
            this.pickerViewSendDrawable = createSimpleSelectorCircleDrawable;
            this.pickerViewSendButton.setBackgroundDrawable(createSimpleSelectorCircleDrawable);
            this.pickerViewSendButton.setColorFilter(new PorterDuffColorFilter(-1, PorterDuff.Mode.MULTIPLY));
            this.pickerViewSendButton.setImageResource(NUM);
            this.pickerViewSendButton.setColorFilter(new PorterDuffColorFilter(getThemedColor("dialogFloatingIcon"), PorterDuff.Mode.MULTIPLY));
            this.containerView.addView(this.pickerViewSendButton, LayoutHelper.createFrame(56, 56.0f, 85, 0.0f, 0.0f, 14.0f, 14.0f));
            this.pickerViewSendButton.setContentDescription(LocaleController.getString("Send", NUM));
            this.pickerViewSendButton.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda10(this));
            this.pickerViewSendButton.setOnLongClickListener(new PhotoViewer$$ExternalSyntheticLambda36(this, resourcesProvider3));
            TextView textView4 = new TextView(this.parentActivity);
            this.captionLimitView = textView4;
            textView4.setTextSize(1, 15.0f);
            this.captionLimitView.setTextColor(-1280137);
            this.captionLimitView.setGravity(17);
            this.captionLimitView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
            this.containerView.addView(this.captionLimitView, LayoutHelper.createFrame(56, 20.0f, 85, 3.0f, 0.0f, 14.0f, 78.0f));
            AnonymousClass26 r010 = new LinearLayout(this.parentActivity) {
                boolean ignoreLayout;

                /* access modifiers changed from: protected */
                public void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
                    int compressIconWidth;
                    int visibleItemsCount = 0;
                    int count = getChildCount();
                    for (int a = 0; a < count; a++) {
                        if (getChildAt(a).getVisibility() == 0) {
                            visibleItemsCount++;
                        }
                    }
                    int width = View.MeasureSpec.getSize(widthMeasureSpec);
                    int height = View.MeasureSpec.getSize(heightMeasureSpec);
                    if (visibleItemsCount != 0) {
                        int itemWidth = Math.min(AndroidUtilities.dp(70.0f), width / visibleItemsCount);
                        if (PhotoViewer.this.compressItem.getVisibility() == 0) {
                            this.ignoreLayout = true;
                            if (PhotoViewer.this.selectedCompression < 2) {
                                compressIconWidth = 48;
                            } else {
                                compressIconWidth = 64;
                            }
                            int padding = Math.max(0, (itemWidth - AndroidUtilities.dp((float) compressIconWidth)) / 2);
                            PhotoViewer.this.compressItem.setPadding(padding, 0, padding, 0);
                            this.ignoreLayout = false;
                        }
                        for (int a2 = 0; a2 < count; a2++) {
                            View v = getChildAt(a2);
                            if (v.getVisibility() != 8) {
                                v.measure(View.MeasureSpec.makeMeasureSpec(itemWidth, NUM), View.MeasureSpec.makeMeasureSpec(height, NUM));
                            }
                        }
                        setMeasuredDimension(itemWidth * visibleItemsCount, height);
                        return;
                    }
                    setMeasuredDimension(width, height);
                }
            };
            this.itemsLayout = r010;
            r010.setOrientation(0);
            this.pickerView.addView(this.itemsLayout, LayoutHelper.createFrame(-2, 48.0f, 81, 0.0f, 0.0f, 70.0f, 0.0f));
            ImageView imageView3 = new ImageView(this.parentActivity);
            this.cropItem = imageView3;
            imageView3.setScaleType(ImageView.ScaleType.CENTER);
            this.cropItem.setImageResource(NUM);
            this.cropItem.setBackgroundDrawable(Theme.createSelectorDrawable(NUM));
            this.itemsLayout.addView(this.cropItem, LayoutHelper.createLinear(48, 48));
            this.cropItem.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda12(this));
            this.cropItem.setContentDescription(LocaleController.getString("CropImage", NUM));
            ImageView imageView4 = new ImageView(this.parentActivity);
            this.rotateItem = imageView4;
            imageView4.setScaleType(ImageView.ScaleType.CENTER);
            this.rotateItem.setImageResource(NUM);
            this.rotateItem.setBackgroundDrawable(Theme.createSelectorDrawable(NUM));
            this.itemsLayout.addView(this.rotateItem, LayoutHelper.createLinear(48, 48));
            this.rotateItem.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda13(this));
            this.rotateItem.setContentDescription(LocaleController.getString("AccDescrRotate", NUM));
            ImageView imageView5 = new ImageView(this.parentActivity);
            this.mirrorItem = imageView5;
            imageView5.setScaleType(ImageView.ScaleType.CENTER);
            this.mirrorItem.setImageResource(NUM);
            this.mirrorItem.setBackgroundDrawable(Theme.createSelectorDrawable(NUM));
            this.itemsLayout.addView(this.mirrorItem, LayoutHelper.createLinear(48, 48));
            this.mirrorItem.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda14(this));
            this.mirrorItem.setContentDescription(LocaleController.getString("AccDescrMirror", NUM));
            ImageView imageView6 = new ImageView(this.parentActivity);
            this.paintItem = imageView6;
            imageView6.setScaleType(ImageView.ScaleType.CENTER);
            this.paintItem.setImageResource(NUM);
            this.paintItem.setBackgroundDrawable(Theme.createSelectorDrawable(NUM));
            this.itemsLayout.addView(this.paintItem, LayoutHelper.createLinear(48, 48));
            this.paintItem.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda15(this));
            this.paintItem.setContentDescription(LocaleController.getString("AccDescrPhotoEditor", NUM));
            ImageView imageView7 = new ImageView(this.parentActivity);
            this.muteItem = imageView7;
            imageView7.setScaleType(ImageView.ScaleType.CENTER);
            this.muteItem.setBackgroundDrawable(Theme.createSelectorDrawable(NUM));
            this.containerView.addView(this.muteItem, LayoutHelper.createFrame(48, 48.0f, 83, 16.0f, 0.0f, 0.0f, 0.0f));
            this.muteItem.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda16(this));
            ImageView imageView8 = new ImageView(this.parentActivity);
            this.cameraItem = imageView8;
            imageView8.setScaleType(ImageView.ScaleType.CENTER);
            this.cameraItem.setImageResource(NUM);
            this.cameraItem.setBackgroundDrawable(Theme.createSelectorDrawable(NUM));
            this.cameraItem.setContentDescription(LocaleController.getString("AccDescrTakeMorePics", NUM));
            this.containerView.addView(this.cameraItem, LayoutHelper.createFrame(48, 48.0f, 85, 0.0f, 0.0f, 16.0f, 0.0f));
            this.cameraItem.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda17(this));
            ImageView imageView9 = new ImageView(this.parentActivity);
            this.tuneItem = imageView9;
            imageView9.setScaleType(ImageView.ScaleType.CENTER);
            this.tuneItem.setImageResource(NUM);
            this.tuneItem.setBackgroundDrawable(Theme.createSelectorDrawable(NUM));
            this.itemsLayout.addView(this.tuneItem, LayoutHelper.createLinear(48, 48));
            this.tuneItem.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda18(this));
            this.tuneItem.setContentDescription(LocaleController.getString("AccDescrPhotoAdjust", NUM));
            ImageView imageView10 = new ImageView(this.parentActivity);
            this.compressItem = imageView10;
            imageView10.setTag(1);
            this.compressItem.setScaleType(ImageView.ScaleType.CENTER);
            this.compressItem.setBackgroundDrawable(Theme.createSelectorDrawable(NUM));
            int selectCompression = selectCompression();
            this.selectedCompression = selectCompression;
            if (selectCompression <= 1) {
                this.compressItem.setImageResource(NUM);
            } else if (selectCompression == 2) {
                this.compressItem.setImageResource(NUM);
            } else {
                this.selectedCompression = this.compressionsCount - 1;
                this.compressItem.setImageResource(NUM);
            }
            this.compressItem.setContentDescription(LocaleController.getString("AccDescrVideoQuality", NUM));
            this.itemsLayout.addView(this.compressItem, LayoutHelper.createLinear(48, 48));
            this.compressItem.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda32(this, activity2));
            ImageView imageView11 = new ImageView(this.parentActivity);
            this.timeItem = imageView11;
            imageView11.setScaleType(ImageView.ScaleType.CENTER);
            this.timeItem.setImageResource(NUM);
            this.timeItem.setBackgroundDrawable(Theme.createSelectorDrawable(NUM));
            this.timeItem.setContentDescription(LocaleController.getString("SetTimer", NUM));
            this.itemsLayout.addView(this.timeItem, LayoutHelper.createLinear(48, 48));
            this.timeItem.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda34(this, resourcesProvider3));
            PickerBottomLayoutViewer pickerBottomLayoutViewer2 = new PickerBottomLayoutViewer(this.activityContext);
            this.editorDoneLayout = pickerBottomLayoutViewer2;
            pickerBottomLayoutViewer2.setBackgroundColor(-NUM);
            this.editorDoneLayout.updateSelectedCount(0, false);
            this.editorDoneLayout.setVisibility(8);
            this.containerView.addView(this.editorDoneLayout, LayoutHelper.createFrame(-1, 48, 83));
            this.editorDoneLayout.cancelButton.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda19(this));
            this.editorDoneLayout.doneButton.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda20(this));
            TextView textView5 = new TextView(this.activityContext);
            this.resetButton = textView5;
            textView5.setClickable(false);
            this.resetButton.setVisibility(8);
            this.resetButton.setTextSize(1, 14.0f);
            this.resetButton.setTextColor(-1);
            this.resetButton.setGravity(17);
            this.resetButton.setBackgroundDrawable(Theme.createSelectorDrawable(-12763843, 0));
            this.resetButton.setPadding(AndroidUtilities.dp(20.0f), 0, AndroidUtilities.dp(20.0f), 0);
            this.resetButton.setText(LocaleController.getString("Reset", NUM).toUpperCase());
            this.resetButton.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
            this.editorDoneLayout.addView(this.resetButton, LayoutHelper.createFrame(-2, -1, 49));
            this.resetButton.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda21(this));
            GestureDetector2 gestureDetector2 = new GestureDetector2(this.containerView.getContext(), (GestureDetector2.OnGestureListener) this);
            this.gestureDetector = gestureDetector2;
            gestureDetector2.setIsLongpressEnabled(false);
            setDoubleTapEnabled(true);
            PhotoViewer$$ExternalSyntheticLambda69 photoViewer$$ExternalSyntheticLambda69 = new PhotoViewer$$ExternalSyntheticLambda69(this);
            this.centerImage.setParentView(this.containerView);
            this.centerImage.setCrossfadeAlpha((byte) 2);
            this.centerImage.setInvalidateAll(true);
            this.centerImage.setDelegate(photoViewer$$ExternalSyntheticLambda69);
            this.leftImage.setParentView(this.containerView);
            this.leftImage.setCrossfadeAlpha((byte) 2);
            this.leftImage.setInvalidateAll(true);
            this.leftImage.setDelegate(photoViewer$$ExternalSyntheticLambda69);
            this.rightImage.setParentView(this.containerView);
            this.rightImage.setCrossfadeAlpha((byte) 2);
            this.rightImage.setInvalidateAll(true);
            this.rightImage.setDelegate(photoViewer$$ExternalSyntheticLambda69);
            int rotation = ((WindowManager) ApplicationLoader.applicationContext.getSystemService("window")).getDefaultDisplay().getRotation();
            AnonymousClass28 r011 = new CheckBox(this.containerView.getContext(), NUM) {
                public boolean onTouchEvent(MotionEvent event) {
                    return PhotoViewer.this.bottomTouchEnabled && super.onTouchEvent(event);
                }
            };
            this.checkImageView = r011;
            r011.setDrawBackground(true);
            this.checkImageView.setHasBorder(true);
            this.checkImageView.setSize(34);
            this.checkImageView.setCheckOffset(AndroidUtilities.dp(1.0f));
            this.checkImageView.setColor(getThemedColor("dialogFloatingButton"), -1);
            this.checkImageView.setVisibility(8);
            this.containerView.addView(this.checkImageView, LayoutHelper.createFrame(34, 34.0f, 53, 0.0f, (rotation == 3 || rotation == 1) ? 61.0f : 71.0f, 11.0f, 0.0f));
            if (isStatusBarVisible()) {
                ((FrameLayout.LayoutParams) this.checkImageView.getLayoutParams()).topMargin += AndroidUtilities.statusBarHeight;
            }
            this.checkImageView.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda23(this));
            CounterView counterView = new CounterView(this.parentActivity);
            this.photosCounterView = counterView;
            this.containerView.addView(counterView, LayoutHelper.createFrame(40, 40.0f, 53, 0.0f, (rotation == 3 || rotation == 1) ? 58.0f : 68.0f, 64.0f, 0.0f));
            if (isStatusBarVisible()) {
                ((FrameLayout.LayoutParams) this.photosCounterView.getLayoutParams()).topMargin += AndroidUtilities.statusBarHeight;
            }
            this.photosCounterView.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda24(this));
            SelectedPhotosListView selectedPhotosListView2 = new SelectedPhotosListView(this.parentActivity);
            this.selectedPhotosListView = selectedPhotosListView2;
            selectedPhotosListView2.setVisibility(8);
            this.selectedPhotosListView.setAlpha(0.0f);
            this.selectedPhotosListView.setLayoutManager(new LinearLayoutManager(this.parentActivity, 0, true) {
                public void smoothScrollToPosition(RecyclerView recyclerView, RecyclerView.State state, int position) {
                    LinearSmoothScrollerEnd linearSmoothScroller = new LinearSmoothScrollerEnd(recyclerView.getContext()) {
                        /* access modifiers changed from: protected */
                        public int calculateTimeForDeceleration(int dx) {
                            return Math.max(180, super.calculateTimeForDeceleration(dx));
                        }
                    };
                    linearSmoothScroller.setTargetPosition(position);
                    startSmoothScroll(linearSmoothScroller);
                }
            });
            SelectedPhotosListView selectedPhotosListView3 = this.selectedPhotosListView;
            ListAdapter listAdapter = new ListAdapter(this.parentActivity);
            this.selectedPhotosAdapter = listAdapter;
            selectedPhotosListView3.setAdapter(listAdapter);
            this.containerView.addView(this.selectedPhotosListView, LayoutHelper.createFrame(-1, 103, 51));
            this.selectedPhotosListView.setOnItemClickListener((RecyclerListView.OnItemClickListener) new PhotoViewer$$ExternalSyntheticLambda73(this));
            AnonymousClass30 r12 = r0;
            int i2 = rotation;
            PhotoViewer$$ExternalSyntheticLambda69 photoViewer$$ExternalSyntheticLambda692 = photoViewer$$ExternalSyntheticLambda69;
            AnonymousClass30 r012 = new PhotoViewerCaptionEnterView(this.activityContext, this.containerView, this.windowView, resourcesProvider2) {
                public boolean dispatchTouchEvent(MotionEvent ev) {
                    try {
                        return !PhotoViewer.this.bottomTouchEnabled && super.dispatchTouchEvent(ev);
                    } catch (Exception e) {
                        FileLog.e((Throwable) e);
                        return false;
                    }
                }

                public boolean onInterceptTouchEvent(MotionEvent ev) {
                    try {
                        return !PhotoViewer.this.bottomTouchEnabled && super.onInterceptTouchEvent(ev);
                    } catch (Exception e) {
                        FileLog.e((Throwable) e);
                        return false;
                    }
                }

                public boolean onTouchEvent(MotionEvent event) {
                    if (PhotoViewer.this.bottomTouchEnabled && event.getAction() == 0) {
                        PhotoViewer.this.keyboardAnimationEnabled = true;
                    }
                    if (PhotoViewer.this.bottomTouchEnabled || !super.onTouchEvent(event)) {
                        return false;
                    }
                    return true;
                }

                /* access modifiers changed from: protected */
                public void extendActionMode(ActionMode actionMode, Menu menu) {
                    if (PhotoViewer.this.parentChatActivity != null) {
                        PhotoViewer.this.parentChatActivity.extendActionMode(menu);
                    }
                }
            };
            this.captionEditText = r12;
            r12.setDelegate(new PhotoViewerCaptionEnterView.PhotoViewerCaptionEnterViewDelegate() {
                public void onCaptionEnter() {
                    PhotoViewer.this.closeCaptionEnter(true);
                }

                public void onTextChanged(CharSequence text) {
                    if (!(PhotoViewer.this.mentionsAdapter == null || PhotoViewer.this.captionEditText == null || PhotoViewer.this.parentChatActivity == null || text == null)) {
                        PhotoViewer.this.mentionsAdapter.searchUsernameOrHashtag(text.toString(), PhotoViewer.this.captionEditText.getCursorPosition(), PhotoViewer.this.parentChatActivity.messages, false, false);
                    }
                    int color = PhotoViewer.this.getThemedColor("dialogFloatingIcon");
                    if (PhotoViewer.this.captionEditText.getCaptionLimitOffset() < 0) {
                        PhotoViewer.this.captionLimitView.setText(Integer.toString(PhotoViewer.this.captionEditText.getCaptionLimitOffset()));
                        PhotoViewer.this.captionLimitView.setVisibility(PhotoViewer.this.pickerViewSendButton.getVisibility());
                        PhotoViewer.this.pickerViewSendButton.setColorFilter(new PorterDuffColorFilter(ColorUtils.setAlphaComponent(color, (int) (((float) Color.alpha(color)) * 0.58f)), PorterDuff.Mode.MULTIPLY));
                    } else {
                        PhotoViewer.this.pickerViewSendButton.setColorFilter(new PorterDuffColorFilter(color, PorterDuff.Mode.MULTIPLY));
                        PhotoViewer.this.captionLimitView.setVisibility(8);
                    }
                    if (PhotoViewer.this.placeProvider != null) {
                        PhotoViewer.this.placeProvider.onCaptionChanged(text);
                    }
                }

                public void onWindowSizeChanged(int size) {
                    if (size - (ActionBar.getCurrentActionBarHeight() * 2) < AndroidUtilities.dp((float) ((Math.min(3, PhotoViewer.this.mentionsAdapter.getItemCount()) * 36) + (PhotoViewer.this.mentionsAdapter.getItemCount() > 3 ? 18 : 0)))) {
                        boolean unused = PhotoViewer.this.allowMentions = false;
                        if (PhotoViewer.this.mentionListView != null && PhotoViewer.this.mentionListView.getVisibility() == 0) {
                            PhotoViewer.this.mentionListView.setVisibility(4);
                            return;
                        }
                        return;
                    }
                    boolean unused2 = PhotoViewer.this.allowMentions = true;
                    if (PhotoViewer.this.mentionListView != null && PhotoViewer.this.mentionListView.getVisibility() == 4) {
                        PhotoViewer.this.mentionListView.setVisibility(0);
                    }
                }

                public void onEmojiViewOpen() {
                    PhotoViewer.this.navigationBar.setVisibility(4);
                    PhotoViewer photoViewer = PhotoViewer.this;
                    photoViewer.animateNavBarColorTo(photoViewer.getThemedColor("chat_emojiPanelBackground"), false);
                }

                public void onEmojiViewCloseStart() {
                    String str;
                    int i;
                    PhotoViewer.this.navigationBar.setVisibility(PhotoViewer.this.currentEditMode != 2 ? 0 : 4);
                    PhotoViewer.this.animateNavBarColorTo(-16777216);
                    setOffset(PhotoViewer.this.captionEditText.getEmojiPadding());
                    if (PhotoViewer.this.captionEditText.getTag() != null) {
                        if (PhotoViewer.this.isCurrentVideo) {
                            ActionBar access$6900 = PhotoViewer.this.actionBar;
                            if (PhotoViewer.this.muteVideo) {
                                i = NUM;
                                str = "GifCaption";
                            } else {
                                i = NUM;
                                str = "VideoCaption";
                            }
                            access$6900.setTitleAnimated(LocaleController.getString(str, i), true, 220);
                        } else {
                            PhotoViewer.this.actionBar.setTitleAnimated(LocaleController.getString("PhotoCaption", NUM), true, 220);
                        }
                        PhotoViewer.this.checkImageView.animate().alpha(0.0f).setDuration(220).start();
                        PhotoViewer.this.photosCounterView.animate().alpha(0.0f).setDuration(220).start();
                        PhotoViewer.this.selectedPhotosListView.animate().alpha(0.0f).translationY((float) (-AndroidUtilities.dp(10.0f))).setDuration(220).start();
                        return;
                    }
                    PhotoViewer.this.checkImageView.animate().alpha(1.0f).setDuration(220).start();
                    PhotoViewer.this.photosCounterView.animate().alpha(1.0f).setDuration(220).start();
                    if (PhotoViewer.this.lastTitle != null) {
                        PhotoViewer.this.actionBar.setTitleAnimated(PhotoViewer.this.lastTitle, false, 220);
                        String unused = PhotoViewer.this.lastTitle = null;
                    }
                }

                public void onEmojiViewCloseEnd() {
                    setOffset(0);
                    PhotoViewer.this.captionEditText.setVisibility(8);
                }

                private void setOffset(int offset) {
                    for (int i = 0; i < PhotoViewer.this.containerView.getChildCount(); i++) {
                        View child = PhotoViewer.this.containerView.getChildAt(i);
                        if (child == PhotoViewer.this.cameraItem || child == PhotoViewer.this.muteItem || child == PhotoViewer.this.pickerView || child == PhotoViewer.this.videoTimelineView || child == PhotoViewer.this.pickerViewSendButton || child == PhotoViewer.this.captionTextViewSwitcher || (PhotoViewer.this.muteItem.getVisibility() == 0 && child == PhotoViewer.this.bottomLayout)) {
                            child.setTranslationY((float) offset);
                        }
                    }
                }
            });
            if (Build.VERSION.SDK_INT >= 19) {
                this.captionEditText.setImportantForAccessibility(4);
            }
            this.captionEditText.setVisibility(8);
            this.containerView.addView(this.captionEditText, LayoutHelper.createFrame(-1, -2, 83));
            AnonymousClass32 r013 = new RecyclerListView(this.activityContext, resourcesProvider3) {
                public boolean dispatchTouchEvent(MotionEvent ev) {
                    return !PhotoViewer.this.bottomTouchEnabled && super.dispatchTouchEvent(ev);
                }

                public boolean onInterceptTouchEvent(MotionEvent ev) {
                    return !PhotoViewer.this.bottomTouchEnabled && super.onInterceptTouchEvent(ev);
                }

                public boolean onTouchEvent(MotionEvent event) {
                    return !PhotoViewer.this.bottomTouchEnabled && super.onTouchEvent(event);
                }
            };
            this.mentionListView = r013;
            r013.setTag(5);
            AnonymousClass33 r014 = new LinearLayoutManager(this.activityContext) {
                public boolean supportsPredictiveItemAnimations() {
                    return false;
                }
            };
            this.mentionLayoutManager = r014;
            r014.setOrientation(1);
            this.mentionListView.setLayoutManager(this.mentionLayoutManager);
            this.mentionListView.setBackgroundColor(NUM);
            this.mentionListView.setVisibility(8);
            this.mentionListView.setClipToPadding(true);
            this.mentionListView.setOverScrollMode(2);
            this.containerView.addView(this.mentionListView, LayoutHelper.createFrame(-1, 110, 83));
            RecyclerListView recyclerListView = this.mentionListView;
            ActionBarMenu actionBarMenu = menu;
            Theme.ResourcesProvider resourcesProvider6 = resourcesProvider3;
            MentionsAdapter mentionsAdapter2 = new MentionsAdapter(this.activityContext, true, 0, 0, new MentionsAdapter.MentionsAdapterDelegate() {
                public void onItemCountUpdate(int oldCount, int newCount) {
                }

                public void needChangePanelVisibility(boolean show) {
                    if (show) {
                        FrameLayout.LayoutParams layoutParams3 = (FrameLayout.LayoutParams) PhotoViewer.this.mentionListView.getLayoutParams();
                        int height = (Math.min(3, PhotoViewer.this.mentionsAdapter.getItemCount()) * 36) + (PhotoViewer.this.mentionsAdapter.getItemCount() > 3 ? 18 : 0);
                        layoutParams3.height = AndroidUtilities.dp((float) height);
                        layoutParams3.topMargin = -AndroidUtilities.dp((float) height);
                        PhotoViewer.this.mentionListView.setLayoutParams(layoutParams3);
                        if (PhotoViewer.this.mentionListAnimation != null) {
                            PhotoViewer.this.mentionListAnimation.cancel();
                            AnimatorSet unused = PhotoViewer.this.mentionListAnimation = null;
                        }
                        if (PhotoViewer.this.mentionListView.getVisibility() == 0) {
                            PhotoViewer.this.mentionListView.setAlpha(1.0f);
                            return;
                        }
                        PhotoViewer.this.mentionLayoutManager.scrollToPositionWithOffset(0, 10000);
                        if (PhotoViewer.this.allowMentions) {
                            PhotoViewer.this.mentionListView.setVisibility(0);
                            AnimatorSet unused2 = PhotoViewer.this.mentionListAnimation = new AnimatorSet();
                            PhotoViewer.this.mentionListAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(PhotoViewer.this.mentionListView, View.ALPHA, new float[]{0.0f, 1.0f})});
                            PhotoViewer.this.mentionListAnimation.addListener(new AnimatorListenerAdapter() {
                                public void onAnimationEnd(Animator animation) {
                                    if (PhotoViewer.this.mentionListAnimation != null && PhotoViewer.this.mentionListAnimation.equals(animation)) {
                                        AnimatorSet unused = PhotoViewer.this.mentionListAnimation = null;
                                    }
                                }
                            });
                            PhotoViewer.this.mentionListAnimation.setDuration(200);
                            PhotoViewer.this.mentionListAnimation.start();
                            return;
                        }
                        PhotoViewer.this.mentionListView.setAlpha(1.0f);
                        PhotoViewer.this.mentionListView.setVisibility(4);
                        return;
                    }
                    if (PhotoViewer.this.mentionListAnimation != null) {
                        PhotoViewer.this.mentionListAnimation.cancel();
                        AnimatorSet unused3 = PhotoViewer.this.mentionListAnimation = null;
                    }
                    if (PhotoViewer.this.mentionListView.getVisibility() != 8) {
                        if (PhotoViewer.this.allowMentions) {
                            AnimatorSet unused4 = PhotoViewer.this.mentionListAnimation = new AnimatorSet();
                            PhotoViewer.this.mentionListAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(PhotoViewer.this.mentionListView, View.ALPHA, new float[]{0.0f})});
                            PhotoViewer.this.mentionListAnimation.addListener(new AnimatorListenerAdapter() {
                                public void onAnimationEnd(Animator animation) {
                                    if (PhotoViewer.this.mentionListAnimation != null && PhotoViewer.this.mentionListAnimation.equals(animation)) {
                                        PhotoViewer.this.mentionListView.setVisibility(8);
                                        AnimatorSet unused = PhotoViewer.this.mentionListAnimation = null;
                                    }
                                }
                            });
                            PhotoViewer.this.mentionListAnimation.setDuration(200);
                            PhotoViewer.this.mentionListAnimation.start();
                            return;
                        }
                        PhotoViewer.this.mentionListView.setVisibility(8);
                    }
                }

                public void onContextSearch(boolean searching) {
                }

                public void onContextClick(TLRPC.BotInlineResult result) {
                }
            }, resourcesProvider2);
            this.mentionsAdapter = mentionsAdapter2;
            recyclerListView.setAdapter(mentionsAdapter2);
            this.mentionListView.setOnItemClickListener((RecyclerListView.OnItemClickListener) new PhotoViewer$$ExternalSyntheticLambda74(this));
            this.mentionListView.setOnItemLongClickListener((RecyclerListView.OnItemLongClickListener) new PhotoViewer$$ExternalSyntheticLambda75(this, resourcesProvider6));
            UndoView undoView = new UndoView(this.activityContext, (BaseFragment) null, false, resourcesProvider6);
            this.hintView = undoView;
            undoView.setAdditionalTranslationY((float) AndroidUtilities.dp(112.0f));
            this.hintView.setColors(-NUM, -1);
            this.containerView.addView(this.hintView, LayoutHelper.createFrame(-1, -2.0f, 83, 8.0f, 0.0f, 8.0f, 8.0f));
            if (AndroidUtilities.isAccessibilityScreenReaderEnabled()) {
                View view2 = new View(this.activityContext);
                this.playButtonAccessibilityOverlay = view2;
                view2.setContentDescription(LocaleController.getString("AccActionPlay", NUM));
                this.playButtonAccessibilityOverlay.setFocusable(true);
                this.containerView.addView(this.playButtonAccessibilityOverlay, LayoutHelper.createFrame(64, 64, 17));
                return;
            }
            return;
        }
        updateColors();
    }

    /* renamed from: lambda$setParentActivity$4$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ WindowInsets m4283lambda$setParentActivity$4$orgtelegramuiPhotoViewer(View v, WindowInsets insets) {
        int newTopInset = insets.getSystemWindowInsetTop();
        if ((this.parentActivity instanceof LaunchActivity) && ((newTopInset != 0 || AndroidUtilities.isInMultiwindow) && !this.inBubbleMode && AndroidUtilities.statusBarHeight != newTopInset)) {
            AndroidUtilities.statusBarHeight = newTopInset;
            ((LaunchActivity) this.parentActivity).drawerLayoutContainer.requestLayout();
        }
        WindowInsets oldInsets = (WindowInsets) this.lastInsets;
        this.lastInsets = insets;
        if (oldInsets == null || !oldInsets.toString().equals(insets.toString())) {
            int i = this.animationInProgress;
            if (i == 1 || i == 3) {
                ClippingImageView clippingImageView = this.animatingImageView;
                clippingImageView.setTranslationX(clippingImageView.getTranslationX() - ((float) getLeftInset()));
                this.animationValues[0][2] = this.animatingImageView.getTranslationX();
            }
            FrameLayout frameLayout = this.windowView;
            if (frameLayout != null) {
                frameLayout.requestLayout();
            }
        }
        if (this.navigationBar != null) {
            this.navigationBarHeight = insets.getSystemWindowInsetBottom();
            ViewGroup.MarginLayoutParams navigationBarLayoutParams = (ViewGroup.MarginLayoutParams) this.navigationBar.getLayoutParams();
            navigationBarLayoutParams.height = this.navigationBarHeight;
            navigationBarLayoutParams.bottomMargin = (-this.navigationBarHeight) / 2;
            this.navigationBar.setLayoutParams(navigationBarLayoutParams);
        }
        this.containerView.setPadding(insets.getSystemWindowInsetLeft(), 0, insets.getSystemWindowInsetRight(), 0);
        if (this.actionBar != null) {
            AndroidUtilities.cancelRunOnUIThread(this.updateContainerFlagsRunnable);
            if (this.isVisible && this.animationInProgress == 0) {
                AndroidUtilities.runOnUIThread(this.updateContainerFlagsRunnable, 200);
            }
        }
        if (Build.VERSION.SDK_INT >= 30) {
            return WindowInsets.CONSUMED;
        }
        return insets.consumeSystemWindowInsets();
    }

    /* renamed from: lambda$setParentActivity$5$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4286lambda$setParentActivity$5$orgtelegramuiPhotoViewer(View v) {
        Activity activity = this.parentActivity;
        if (activity != null) {
            this.wasRotated = false;
            this.fullscreenedByButton = 1;
            if (this.prevOrientation == -10) {
                this.prevOrientation = activity.getRequestedOrientation();
            }
            if (((WindowManager) this.parentActivity.getSystemService("window")).getDefaultDisplay().getRotation() == 3) {
                this.parentActivity.setRequestedOrientation(8);
            } else {
                this.parentActivity.setRequestedOrientation(0);
            }
            toggleActionBar(false, false);
        }
    }

    /* renamed from: lambda$setParentActivity$7$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4288lambda$setParentActivity$7$orgtelegramuiPhotoViewer(View v) {
        openCurrentPhotoInPaintModeForSelect();
    }

    /* renamed from: lambda$setParentActivity$8$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4289lambda$setParentActivity$8$orgtelegramuiPhotoViewer(View v) {
        onSharePressed();
    }

    /* renamed from: lambda$setParentActivity$9$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4290lambda$setParentActivity$9$orgtelegramuiPhotoViewer(View view) {
        this.selectedCompression = this.previousCompression;
        didChangedCompressionLevel(false);
        showQualityView(false);
        requestVideoPreview(2);
    }

    /* renamed from: lambda$setParentActivity$10$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4257lambda$setParentActivity$10$orgtelegramuiPhotoViewer(View view) {
        showQualityView(false);
        requestVideoPreview(2);
    }

    /* renamed from: lambda$setParentActivity$11$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4258lambda$setParentActivity$11$orgtelegramuiPhotoViewer(View v) {
        if (this.captionEditText.getCaptionLimitOffset() < 0) {
            AndroidUtilities.shakeView(this.captionLimitView, 2.0f, 0);
            Vibrator vibrator = (Vibrator) this.captionLimitView.getContext().getSystemService("vibrator");
            if (vibrator != null) {
                vibrator.vibrate(200);
                return;
            }
            return;
        }
        ChatActivity chatActivity = this.parentChatActivity;
        if (chatActivity == null || !chatActivity.isInScheduleMode() || this.parentChatActivity.isEditingMessageMedia()) {
            sendPressed(true, 0);
        } else {
            showScheduleDatePickerDialog();
        }
    }

    /* renamed from: lambda$setParentActivity$15$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ boolean m4262lambda$setParentActivity$15$orgtelegramuiPhotoViewer(Theme.ResourcesProvider resourcesProvider2, View view) {
        PhotoViewerProvider photoViewerProvider;
        View view2 = view;
        PhotoViewerProvider photoViewerProvider2 = this.placeProvider;
        if (photoViewerProvider2 != null && !photoViewerProvider2.allowSendingSubmenu()) {
            return false;
        }
        ChatActivity chatActivity = this.parentChatActivity;
        if (chatActivity == null) {
            Theme.ResourcesProvider resourcesProvider3 = resourcesProvider2;
            return false;
        } else if (chatActivity.isInScheduleMode()) {
            Theme.ResourcesProvider resourcesProvider4 = resourcesProvider2;
            return false;
        } else if (this.captionEditText.getCaptionLimitOffset() < 0) {
            return false;
        } else {
            TLRPC.Chat currentChat = this.parentChatActivity.getCurrentChat();
            TLRPC.User user = this.parentChatActivity.getCurrentUser();
            ActionBarPopupWindow.ActionBarPopupWindowLayout actionBarPopupWindowLayout = new ActionBarPopupWindow.ActionBarPopupWindowLayout(this.parentActivity);
            this.sendPopupLayout = actionBarPopupWindowLayout;
            actionBarPopupWindowLayout.setAnimationEnabled(false);
            this.sendPopupLayout.setOnTouchListener(new PhotoViewer$$ExternalSyntheticLambda37(this));
            this.sendPopupLayout.setDispatchKeyEventListener(new PhotoViewer$$ExternalSyntheticLambda70(this));
            this.sendPopupLayout.setShownFromBottom(false);
            this.sendPopupLayout.setBackgroundColor(-NUM);
            PhotoViewerProvider photoViewerProvider3 = this.placeProvider;
            boolean canReplace = photoViewerProvider3 != null && photoViewerProvider3.canReplace(this.currentIndex);
            int[] order = {4, 3, 2, 0, 1};
            int i = 0;
            for (int i2 = 5; i < i2; i2 = 5) {
                int a = order[i];
                if (a != 2 && a != 3 && canReplace) {
                    Theme.ResourcesProvider resourcesProvider5 = resourcesProvider2;
                } else if (a != 0 || this.parentChatActivity.canScheduleMessage()) {
                    if (a == 0 && (photoViewerProvider = this.placeProvider) != null && photoViewerProvider.getSelectedPhotos() != null) {
                        boolean hasTtl = false;
                        Iterator<Map.Entry<Object, Object>> it = this.placeProvider.getSelectedPhotos().entrySet().iterator();
                        while (true) {
                            if (!it.hasNext()) {
                                break;
                            }
                            Object object = it.next().getValue();
                            if (!(object instanceof MediaController.PhotoEntry)) {
                                if ((object instanceof MediaController.SearchImage) && ((MediaController.SearchImage) object).ttl != 0) {
                                    hasTtl = true;
                                    break;
                                }
                            } else if (((MediaController.PhotoEntry) object).ttl != 0) {
                                hasTtl = true;
                                break;
                            }
                        }
                        if (hasTtl) {
                            Theme.ResourcesProvider resourcesProvider6 = resourcesProvider2;
                        }
                    } else if (a == 1 && UserObject.isUserSelf(user)) {
                        Theme.ResourcesProvider resourcesProvider7 = resourcesProvider2;
                    } else if ((a == 2 || a == 3) && !canReplace) {
                        Theme.ResourcesProvider resourcesProvider8 = resourcesProvider2;
                    } else if (a == 4) {
                        if (this.isCurrentVideo) {
                            Theme.ResourcesProvider resourcesProvider9 = resourcesProvider2;
                        } else if (this.timeItem.getColorFilter() != null) {
                            Theme.ResourcesProvider resourcesProvider10 = resourcesProvider2;
                        }
                    }
                    ActionBarMenuSubItem cell = new ActionBarMenuSubItem((Context) this.parentActivity, a == 0, a == 3, resourcesProvider2);
                    if (a == 0) {
                        if (UserObject.isUserSelf(user)) {
                            cell.setTextAndIcon(LocaleController.getString("SetReminder", NUM), NUM);
                        } else {
                            cell.setTextAndIcon(LocaleController.getString("ScheduleMessage", NUM), NUM);
                        }
                    } else if (a == 1) {
                        cell.setTextAndIcon(LocaleController.getString("SendWithoutSound", NUM), NUM);
                    } else if (a == 2) {
                        cell.setTextAndIcon(LocaleController.getString("ReplacePhoto", NUM), NUM);
                    } else if (a == 3) {
                        cell.setTextAndIcon(LocaleController.getString("SendAsNewPhoto", NUM), NUM);
                    } else if (a == 4) {
                        cell.setTextAndIcon(LocaleController.getString("SendWithoutCompression", NUM), NUM);
                    }
                    cell.setMinimumWidth(AndroidUtilities.dp(196.0f));
                    cell.setColors(-1, -1);
                    this.sendPopupLayout.addView(cell, LayoutHelper.createLinear(-1, 48));
                    cell.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda31(this, a));
                } else {
                    Theme.ResourcesProvider resourcesProvider11 = resourcesProvider2;
                }
                i++;
            }
            Theme.ResourcesProvider resourcesProvider12 = resourcesProvider2;
            if (this.sendPopupLayout.getChildCount() == 0) {
                return false;
            }
            this.sendPopupLayout.setupRadialSelectors(NUM);
            ActionBarPopupWindow actionBarPopupWindow = new ActionBarPopupWindow(this.sendPopupLayout, -2, -2);
            this.sendPopupWindow = actionBarPopupWindow;
            actionBarPopupWindow.setAnimationEnabled(false);
            this.sendPopupWindow.setAnimationStyle(NUM);
            this.sendPopupWindow.setOutsideTouchable(true);
            this.sendPopupWindow.setClippingEnabled(true);
            this.sendPopupWindow.setInputMethodMode(2);
            this.sendPopupWindow.setSoftInputMode(0);
            this.sendPopupWindow.getContentView().setFocusableInTouchMode(true);
            this.sendPopupLayout.measure(View.MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(1000.0f), Integer.MIN_VALUE), View.MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(1000.0f), Integer.MIN_VALUE));
            this.sendPopupWindow.setFocusable(true);
            int[] location = new int[2];
            view2.getLocationInWindow(location);
            this.sendPopupWindow.showAtLocation(view2, 51, ((location[0] + view.getMeasuredWidth()) - this.sendPopupLayout.getMeasuredWidth()) + AndroidUtilities.dp(14.0f), (location[1] - this.sendPopupLayout.getMeasuredHeight()) - AndroidUtilities.dp(18.0f));
            view2.performHapticFeedback(3, 2);
            return false;
        }
    }

    /* renamed from: lambda$setParentActivity$12$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ boolean m4259lambda$setParentActivity$12$orgtelegramuiPhotoViewer(View v, MotionEvent event) {
        ActionBarPopupWindow actionBarPopupWindow;
        if (event.getActionMasked() != 0 || (actionBarPopupWindow = this.sendPopupWindow) == null || !actionBarPopupWindow.isShowing()) {
            return false;
        }
        v.getHitRect(this.hitRect);
        if (this.hitRect.contains((int) event.getX(), (int) event.getY())) {
            return false;
        }
        this.sendPopupWindow.dismiss();
        return false;
    }

    /* renamed from: lambda$setParentActivity$13$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4260lambda$setParentActivity$13$orgtelegramuiPhotoViewer(KeyEvent keyEvent) {
        ActionBarPopupWindow actionBarPopupWindow;
        if (keyEvent.getKeyCode() == 4 && keyEvent.getRepeatCount() == 0 && (actionBarPopupWindow = this.sendPopupWindow) != null && actionBarPopupWindow.isShowing()) {
            this.sendPopupWindow.dismiss();
        }
    }

    /* renamed from: lambda$setParentActivity$14$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4261lambda$setParentActivity$14$orgtelegramuiPhotoViewer(int a, View v) {
        ActionBarPopupWindow actionBarPopupWindow = this.sendPopupWindow;
        if (actionBarPopupWindow != null && actionBarPopupWindow.isShowing()) {
            this.sendPopupWindow.dismiss();
        }
        if (a == 0) {
            showScheduleDatePickerDialog();
        } else if (a == 1) {
            sendPressed(false, 0);
        } else if (a == 2) {
            replacePressed();
        } else if (a == 3) {
            sendPressed(true, 0);
        } else if (a == 4) {
            sendPressed(true, 0, false, true);
        }
    }

    /* renamed from: lambda$setParentActivity$16$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4263lambda$setParentActivity$16$orgtelegramuiPhotoViewer(View v) {
        if (this.captionEditText.getTag() == null) {
            if (this.isCurrentVideo) {
                if (this.videoConvertSupported) {
                    TextureView textureView = this.videoTextureView;
                    if (textureView instanceof VideoEditTextureView) {
                        VideoEditTextureView textureView2 = (VideoEditTextureView) textureView;
                        if (textureView2.getVideoWidth() <= 0 || textureView2.getVideoHeight() <= 0) {
                            return;
                        }
                    } else {
                        return;
                    }
                } else {
                    return;
                }
            }
            switchToEditMode(1);
        }
    }

    /* renamed from: lambda$setParentActivity$17$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4264lambda$setParentActivity$17$orgtelegramuiPhotoViewer(View v) {
        cropRotate(-90.0f);
    }

    /* renamed from: lambda$setParentActivity$18$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4265lambda$setParentActivity$18$orgtelegramuiPhotoViewer(View v) {
        cropMirror();
    }

    /* renamed from: lambda$setParentActivity$19$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4266lambda$setParentActivity$19$orgtelegramuiPhotoViewer(View v) {
        if (this.captionEditText.getTag() == null) {
            if (this.isCurrentVideo) {
                if (this.videoConvertSupported) {
                    TextureView textureView = this.videoTextureView;
                    if (textureView instanceof VideoEditTextureView) {
                        VideoEditTextureView textureView2 = (VideoEditTextureView) textureView;
                        if (textureView2.getVideoWidth() <= 0 || textureView2.getVideoHeight() <= 0) {
                            return;
                        }
                    } else {
                        return;
                    }
                } else {
                    return;
                }
            }
            switchToEditMode(3);
        }
    }

    /* renamed from: lambda$setParentActivity$20$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4267lambda$setParentActivity$20$orgtelegramuiPhotoViewer(View v) {
        if (this.captionEditText.getTag() == null) {
            this.muteVideo = !this.muteVideo;
            updateMuteButton();
            updateVideoInfo();
            if (!this.muteVideo || this.checkImageView.isChecked()) {
                Object object = this.imagesArrLocals.get(this.currentIndex);
                if (object instanceof MediaController.MediaEditState) {
                    ((MediaController.MediaEditState) object).editedInfo = getCurrentVideoEditedInfo();
                    return;
                }
                return;
            }
            this.checkImageView.callOnClick();
        }
    }

    /* renamed from: lambda$setParentActivity$21$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4268lambda$setParentActivity$21$orgtelegramuiPhotoViewer(View v) {
        if (this.placeProvider != null && this.captionEditText.getTag() == null) {
            this.placeProvider.needAddMorePhotos();
            closePhoto(true, false);
        }
    }

    /* renamed from: lambda$setParentActivity$22$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4269lambda$setParentActivity$22$orgtelegramuiPhotoViewer(View v) {
        if (this.captionEditText.getTag() == null) {
            if (this.isCurrentVideo) {
                if (this.videoConvertSupported) {
                    TextureView textureView = this.videoTextureView;
                    if (textureView instanceof VideoEditTextureView) {
                        VideoEditTextureView textureView2 = (VideoEditTextureView) textureView;
                        if (textureView2.getVideoWidth() <= 0 || textureView2.getVideoHeight() <= 0) {
                            return;
                        }
                    } else {
                        return;
                    }
                } else {
                    return;
                }
            }
            switchToEditMode(2);
        }
    }

    /* renamed from: lambda$setParentActivity$23$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4270lambda$setParentActivity$23$orgtelegramuiPhotoViewer(Activity activity, View v) {
        if (this.captionEditText.getTag() == null && !this.muteVideo) {
            if (this.compressItem.getTag() != null) {
                showQualityView(true);
                requestVideoPreview(1);
            } else if (this.videoConvertSupported) {
                if (this.tooltip == null) {
                    this.tooltip = new Tooltip(activity, this.containerView, -NUM, -1);
                }
                this.tooltip.setText(LocaleController.getString("VideoQualityIsTooLow", NUM));
                this.tooltip.show(this.compressItem);
            }
        }
    }

    /* renamed from: lambda$setParentActivity$29$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4272lambda$setParentActivity$29$orgtelegramuiPhotoViewer(Theme.ResourcesProvider resourcesProvider2, View v) {
        String str;
        int i;
        int currentTTL;
        Theme.ResourcesProvider resourcesProvider3 = resourcesProvider2;
        if (this.parentActivity != null && this.captionEditText.getTag() == null) {
            BottomSheet.Builder builder = new BottomSheet.Builder(this.parentActivity, false, resourcesProvider3, -16777216);
            builder.setUseHardwareLayer(false);
            LinearLayout linearLayout = new LinearLayout(this.parentActivity);
            linearLayout.setOrientation(1);
            builder.setCustomView(linearLayout);
            TextView titleView = new TextView(this.parentActivity);
            titleView.setLines(1);
            titleView.setSingleLine(true);
            titleView.setText(LocaleController.getString("MessageLifetime", NUM));
            titleView.setTextColor(-1);
            titleView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
            titleView.setTextSize(1, 20.0f);
            titleView.setEllipsize(TextUtils.TruncateAt.MIDDLE);
            titleView.setPadding(AndroidUtilities.dp(21.0f), AndroidUtilities.dp(8.0f), AndroidUtilities.dp(21.0f), AndroidUtilities.dp(4.0f));
            titleView.setGravity(16);
            linearLayout.addView(titleView, LayoutHelper.createFrame(-1, -2.0f));
            titleView.setOnTouchListener(PhotoViewer$$ExternalSyntheticLambda38.INSTANCE);
            TextView titleView2 = new TextView(this.parentActivity);
            if (this.isCurrentVideo) {
                i = NUM;
                str = "MessageLifetimeVideo";
            } else {
                i = NUM;
                str = "MessageLifetimePhoto";
            }
            titleView2.setText(LocaleController.getString(str, i));
            titleView2.setTextColor(-8355712);
            titleView2.setTextSize(1, 14.0f);
            titleView2.setEllipsize(TextUtils.TruncateAt.MIDDLE);
            titleView2.setPadding(AndroidUtilities.dp(21.0f), 0, AndroidUtilities.dp(21.0f), AndroidUtilities.dp(8.0f));
            titleView2.setGravity(16);
            linearLayout.addView(titleView2, LayoutHelper.createFrame(-1, -2.0f));
            titleView2.setOnTouchListener(PhotoViewer$$ExternalSyntheticLambda39.INSTANCE);
            BottomSheet bottomSheet = builder.create();
            NumberPicker numberPicker = new NumberPicker((Context) this.parentActivity, resourcesProvider3);
            numberPicker.setMinValue(0);
            numberPicker.setMaxValue(28);
            Object object = this.imagesArrLocals.get(this.currentIndex);
            if (object instanceof MediaController.PhotoEntry) {
                currentTTL = ((MediaController.PhotoEntry) object).ttl;
            } else if ((object instanceof MediaController.SearchImage) != 0) {
                currentTTL = ((MediaController.SearchImage) object).ttl;
            } else {
                currentTTL = 0;
            }
            if (currentTTL == 0) {
                numberPicker.setValue(MessagesController.getGlobalMainSettings().getInt("self_destruct", 7));
            } else if (currentTTL < 0 || currentTTL >= 21) {
                numberPicker.setValue(((currentTTL / 5) + 21) - 5);
            } else {
                numberPicker.setValue(currentTTL);
            }
            numberPicker.setTextColor(-1);
            numberPicker.setSelectorColor(-11711155);
            numberPicker.setFormatter(PhotoViewer$$ExternalSyntheticLambda72.INSTANCE);
            linearLayout.addView(numberPicker, LayoutHelper.createLinear(-1, -2));
            FrameLayout buttonsLayout = new FrameLayout(this.parentActivity) {
                /* access modifiers changed from: protected */
                public void onLayout(boolean changed, int left, int top, int right, int bottom) {
                    int count = getChildCount();
                    int width = right - left;
                    for (int a = 0; a < count; a++) {
                        View child = getChildAt(a);
                        if (((Integer) child.getTag()).intValue() == -1) {
                            child.layout((width - getPaddingRight()) - child.getMeasuredWidth(), getPaddingTop(), width - getPaddingRight(), getPaddingTop() + child.getMeasuredHeight());
                        } else if (((Integer) child.getTag()).intValue() == -2) {
                            int x = getPaddingLeft();
                            child.layout(x, getPaddingTop(), child.getMeasuredWidth() + x, getPaddingTop() + child.getMeasuredHeight());
                        } else {
                            child.layout(getPaddingLeft(), getPaddingTop(), getPaddingLeft() + child.getMeasuredWidth(), getPaddingTop() + child.getMeasuredHeight());
                        }
                    }
                }
            };
            buttonsLayout.setPadding(AndroidUtilities.dp(8.0f), AndroidUtilities.dp(8.0f), AndroidUtilities.dp(8.0f), AndroidUtilities.dp(8.0f));
            linearLayout.addView(buttonsLayout, LayoutHelper.createLinear(-1, 52));
            TextView textView = new TextView(this.parentActivity);
            textView.setMinWidth(AndroidUtilities.dp(64.0f));
            textView.setTag(-1);
            textView.setTextSize(1, 14.0f);
            textView.setTextColor(getThemedColor("dialogFloatingButton"));
            textView.setGravity(17);
            textView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
            textView.setText(LocaleController.getString("Done", NUM).toUpperCase());
            textView.setBackgroundDrawable(Theme.getRoundRectSelectorDrawable(-11944718));
            textView.setPadding(AndroidUtilities.dp(10.0f), 0, AndroidUtilities.dp(10.0f), 0);
            buttonsLayout.addView(textView, LayoutHelper.createFrame(-2, 36, 53));
            textView.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda35(this, numberPicker, bottomSheet));
            TextView textView2 = new TextView(this.parentActivity);
            textView2.setMinWidth(AndroidUtilities.dp(64.0f));
            textView2.setTag(-2);
            textView2.setTextSize(1, 14.0f);
            textView2.setTextColor(-1);
            textView2.setGravity(17);
            textView2.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
            textView2.setText(LocaleController.getString("Cancel", NUM).toUpperCase());
            textView2.setBackgroundDrawable(Theme.getRoundRectSelectorDrawable(-1));
            textView2.setPadding(AndroidUtilities.dp(10.0f), 0, AndroidUtilities.dp(10.0f), 0);
            buttonsLayout.addView(textView2, LayoutHelper.createFrame(-2, 36, 53));
            textView2.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda4(bottomSheet));
            bottomSheet.setBackgroundColor(-16777216);
            bottomSheet.show();
            AndroidUtilities.setNavigationBarColor(bottomSheet.getWindow(), -16777216, false);
            AndroidUtilities.setLightNavigationBar(bottomSheet.getWindow(), false);
        }
    }

    static /* synthetic */ boolean lambda$setParentActivity$24(View v13, MotionEvent event) {
        return true;
    }

    static /* synthetic */ boolean lambda$setParentActivity$25(View v12, MotionEvent event) {
        return true;
    }

    static /* synthetic */ String lambda$setParentActivity$26(int value) {
        if (value == 0) {
            return LocaleController.getString("ShortMessageLifetimeForever", NUM);
        }
        if (value < 1 || value >= 21) {
            return LocaleController.formatTTLString((value - 16) * 5);
        }
        return LocaleController.formatTTLString(value);
    }

    /* renamed from: lambda$setParentActivity$27$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4271lambda$setParentActivity$27$orgtelegramuiPhotoViewer(NumberPicker numberPicker, BottomSheet bottomSheet, View v1) {
        int seconds;
        int value = numberPicker.getValue();
        SharedPreferences.Editor editor = MessagesController.getGlobalMainSettings().edit();
        editor.putInt("self_destruct", value);
        editor.commit();
        bottomSheet.dismiss();
        if (value < 0 || value >= 21) {
            seconds = (value - 16) * 5;
        } else {
            seconds = value;
        }
        Object object1 = this.imagesArrLocals.get(this.currentIndex);
        if (object1 instanceof MediaController.PhotoEntry) {
            ((MediaController.PhotoEntry) object1).ttl = seconds;
        } else if (object1 instanceof MediaController.SearchImage) {
            ((MediaController.SearchImage) object1).ttl = seconds;
        }
        this.timeItem.setColorFilter(seconds != 0 ? new PorterDuffColorFilter(getThemedColor("dialogFloatingButton"), PorterDuff.Mode.MULTIPLY) : null);
        if (!this.checkImageView.isChecked()) {
            this.checkImageView.callOnClick();
        }
    }

    /* renamed from: lambda$setParentActivity$31$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4274lambda$setParentActivity$31$orgtelegramuiPhotoViewer(View view) {
        if (this.imageMoveAnimation == null) {
            Runnable onEnd = new PhotoViewer$$ExternalSyntheticLambda48(this);
            if (!this.previousHasTransform) {
                float backRotate = ((float) this.previousCropOrientation) - this.photoCropView.cropView.getStateOrientation();
                if (Math.abs(backRotate) > 180.0f) {
                    backRotate = backRotate < 0.0f ? 360.0f + backRotate : -(360.0f - backRotate);
                }
                cropRotate(backRotate, this.photoCropView.cropView.getStateMirror(), onEnd);
                return;
            }
            onEnd.run();
        }
    }

    /* renamed from: lambda$setParentActivity$30$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4273lambda$setParentActivity$30$orgtelegramuiPhotoViewer() {
        this.cropTransform.setViewTransform(this.previousHasTransform, this.previousCropPx, this.previousCropPy, this.previousCropRotation, this.previousCropOrientation, this.previousCropScale, 1.0f, 1.0f, this.previousCropPw, this.previousCropPh, 0.0f, 0.0f, this.previousCropMirrored);
        switchToEditMode(0);
    }

    /* renamed from: lambda$setParentActivity$32$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4275lambda$setParentActivity$32$orgtelegramuiPhotoViewer(View view) {
        if (this.currentEditMode != 1 || this.photoCropView.isReady()) {
            applyCurrentEditMode();
            switchToEditMode(0);
        }
    }

    /* renamed from: lambda$setParentActivity$34$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4277lambda$setParentActivity$34$orgtelegramuiPhotoViewer(View v) {
        float backRotate = -this.photoCropView.cropView.getStateOrientation();
        if (Math.abs(backRotate) > 180.0f) {
            backRotate = backRotate < 0.0f ? 360.0f + backRotate : -(360.0f - backRotate);
        }
        cropRotate(backRotate, this.photoCropView.cropView.getStateMirror(), new PhotoViewer$$ExternalSyntheticLambda49(this));
    }

    /* renamed from: lambda$setParentActivity$33$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4276lambda$setParentActivity$33$orgtelegramuiPhotoViewer() {
        this.photoCropView.reset(true);
    }

    /* renamed from: lambda$setParentActivity$35$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4278lambda$setParentActivity$35$orgtelegramuiPhotoViewer(ImageReceiver imageReceiver, boolean set, boolean thumb, boolean memCache) {
        PhotoViewerProvider photoViewerProvider;
        Bitmap bitmap;
        if (imageReceiver == this.centerImage && set && !thumb) {
            if (!this.isCurrentVideo && !((this.currentEditMode != 1 && this.sendPhotoType != 1) || this.photoCropView == null || (bitmap = imageReceiver.getBitmap()) == null)) {
                this.photoCropView.setBitmap(bitmap, imageReceiver.getOrientation(), this.sendPhotoType != 1, true, this.paintingOverlay, this.cropTransform, (VideoEditTextureView) null, (MediaController.CropState) null);
            }
            if (this.paintingOverlay.getVisibility() == 0) {
                this.containerView.requestLayout();
            }
            detectFaces();
        }
        if (imageReceiver == this.centerImage && set && (photoViewerProvider = this.placeProvider) != null && photoViewerProvider.scaleToFill() && !this.ignoreDidSetImage && this.sendPhotoType != 1) {
            if (!this.wasLayout) {
                this.dontResetZoomOnFirstLayout = true;
            } else {
                setScaleToFill();
            }
        }
    }

    /* renamed from: lambda$setParentActivity$36$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4279lambda$setParentActivity$36$orgtelegramuiPhotoViewer(View v) {
        if (this.captionEditText.getTag() == null) {
            setPhotoChecked();
        }
    }

    /* renamed from: lambda$setParentActivity$37$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4280lambda$setParentActivity$37$orgtelegramuiPhotoViewer(View v) {
        PhotoViewerProvider photoViewerProvider;
        if (this.captionEditText.getTag() == null && (photoViewerProvider = this.placeProvider) != null && photoViewerProvider.getSelectedPhotosOrder() != null && !this.placeProvider.getSelectedPhotosOrder().isEmpty()) {
            togglePhotosListView(!this.isPhotosListViewVisible, true);
        }
    }

    /* renamed from: lambda$setParentActivity$38$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4281lambda$setParentActivity$38$orgtelegramuiPhotoViewer(View view, int position) {
        int i;
        if (!this.imagesArrLocals.isEmpty() && (i = this.currentIndex) >= 0 && i < this.imagesArrLocals.size()) {
            Object entry = this.imagesArrLocals.get(this.currentIndex);
            if (entry instanceof MediaController.MediaEditState) {
                ((MediaController.MediaEditState) entry).editedInfo = getCurrentVideoEditedInfo();
            }
        }
        this.ignoreDidSetImage = true;
        int idx = this.imagesArrLocals.indexOf(view.getTag());
        if (idx >= 0) {
            this.currentIndex = -1;
            setImageIndex(idx);
        }
        this.ignoreDidSetImage = false;
    }

    /* renamed from: lambda$setParentActivity$39$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4282lambda$setParentActivity$39$orgtelegramuiPhotoViewer(View view, int position) {
        Object object = this.mentionsAdapter.getItem(position);
        int start = this.mentionsAdapter.getResultStartPosition();
        int len = this.mentionsAdapter.getResultLength();
        if (object instanceof TLRPC.User) {
            TLRPC.User user = (TLRPC.User) object;
            if (user.username != null) {
                PhotoViewerCaptionEnterView photoViewerCaptionEnterView = this.captionEditText;
                photoViewerCaptionEnterView.replaceWithText(start, len, "@" + user.username + " ", false);
                return;
            }
            String name = UserObject.getFirstName(user);
            Spannable spannable = new SpannableString(name + " ");
            spannable.setSpan(new URLSpanUserMentionPhotoViewer("" + user.id, true), 0, spannable.length(), 33);
            this.captionEditText.replaceWithText(start, len, spannable, false);
        } else if (object instanceof String) {
            PhotoViewerCaptionEnterView photoViewerCaptionEnterView2 = this.captionEditText;
            photoViewerCaptionEnterView2.replaceWithText(start, len, object + " ", false);
        } else if (object instanceof MediaDataController.KeywordResult) {
            String code = ((MediaDataController.KeywordResult) object).emoji;
            this.captionEditText.addEmojiToRecent(code);
            this.captionEditText.replaceWithText(start, len, code, true);
        }
    }

    /* renamed from: lambda$setParentActivity$41$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ boolean m4285lambda$setParentActivity$41$orgtelegramuiPhotoViewer(Theme.ResourcesProvider resourcesProvider2, View view, int position) {
        if (!(this.mentionsAdapter.getItem(position) instanceof String)) {
            return false;
        }
        AlertDialog.Builder builder = new AlertDialog.Builder(this.parentActivity, resourcesProvider2);
        builder.setTitle(LocaleController.getString("AppName", NUM));
        builder.setMessage(LocaleController.getString("ClearSearch", NUM));
        builder.setPositiveButton(LocaleController.getString("ClearButton", NUM).toUpperCase(), new PhotoViewer$$ExternalSyntheticLambda77(this));
        builder.setNegativeButton(LocaleController.getString("Cancel", NUM), (DialogInterface.OnClickListener) null);
        showAlertDialog(builder);
        return true;
    }

    /* renamed from: lambda$setParentActivity$40$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4284lambda$setParentActivity$40$orgtelegramuiPhotoViewer(DialogInterface dialogInterface, int i) {
        this.mentionsAdapter.clearRecentHashtags();
    }

    /* access modifiers changed from: private */
    public void animateNavBarColorTo(int color) {
        animateNavBarColorTo(color, true);
    }

    /* access modifiers changed from: private */
    public void animateNavBarColorTo(int color, boolean animated) {
        ValueAnimator valueAnimator = this.navBarAnimator;
        if (valueAnimator != null) {
            valueAnimator.cancel();
        }
        int fromColor = this.blackPaint.getColor();
        final int toColor = color;
        AndroidUtilities.setLightNavigationBar((View) this.windowView, ((double) AndroidUtilities.computePerceivedBrightness(toColor)) >= 0.721d);
        if (animated) {
            ValueAnimator ofFloat = ValueAnimator.ofFloat(new float[]{0.0f, 1.0f});
            this.navBarAnimator = ofFloat;
            ofFloat.addUpdateListener(new PhotoViewer$$ExternalSyntheticLambda44(this, fromColor, toColor));
            this.navBarAnimator.addListener(new AnimatorListenerAdapter() {
                public void onAnimationEnd(Animator animation) {
                    PhotoViewer.this.blackPaint.setColor(toColor);
                    PhotoViewer.this.windowView.invalidate();
                }
            });
            this.navBarAnimator.setInterpolator(CubicBezierInterpolator.DEFAULT);
            this.navBarAnimator.setDuration(200);
            this.navBarAnimator.start();
            return;
        }
        this.navBarAnimator = null;
        this.blackPaint.setColor(toColor);
        this.windowView.invalidate();
    }

    /* renamed from: lambda$animateNavBarColorTo$42$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4231lambda$animateNavBarColorTo$42$orgtelegramuiPhotoViewer(int fromColor, int toColor, ValueAnimator a) {
        this.blackPaint.setColor(ColorUtils.blendARGB(fromColor, toColor, ((Float) a.getAnimatedValue()).floatValue()));
        this.windowView.invalidate();
    }

    private void showScheduleDatePickerDialog() {
        if (this.parentChatActivity != null) {
            AlertsCreator.createScheduleDatePickerDialog((Context) this.parentActivity, this.parentChatActivity.getDialogId(), (AlertsCreator.ScheduleDatePickerDelegate) new PhotoViewer$$ExternalSyntheticLambda71(this), new AlertsCreator.ScheduleDatePickerColors(-1, -14342875, -1, NUM, -1, -NUM, NUM));
        }
    }

    /* access modifiers changed from: private */
    public void sendPressed(boolean notify, int scheduleDate) {
        sendPressed(notify, scheduleDate, false, false);
    }

    private void replacePressed() {
        sendPressed(false, 0, true, false);
    }

    private void sendPressed(boolean notify, int scheduleDate, boolean replace, boolean forceDocument) {
        int i;
        ChatActivity chatActivity;
        if (this.captionEditText.getTag() == null && this.placeProvider != null && !this.doneButtonPressed) {
            if (this.sendPhotoType == 1) {
                applyCurrentEditMode();
            }
            if (!replace && (chatActivity = this.parentChatActivity) != null) {
                TLRPC.Chat chat = chatActivity.getCurrentChat();
                if (this.parentChatActivity.getCurrentUser() != null || ((ChatObject.isChannel(chat) && chat.megagroup) || !ChatObject.isChannel(chat))) {
                    SharedPreferences.Editor edit = MessagesController.getNotificationsSettings(this.currentAccount).edit();
                    edit.putBoolean("silent_" + this.parentChatActivity.getDialogId(), !notify).commit();
                }
            }
            VideoEditedInfo videoEditedInfo = getCurrentVideoEditedInfo();
            if (!this.imagesArrLocals.isEmpty() && (i = this.currentIndex) >= 0 && i < this.imagesArrLocals.size()) {
                Object entry = this.imagesArrLocals.get(this.currentIndex);
                if (entry instanceof MediaController.MediaEditState) {
                    ((MediaController.MediaEditState) entry).editedInfo = videoEditedInfo;
                }
            }
            this.doneButtonPressed = true;
            if (!replace) {
                this.placeProvider.sendButtonPressed(this.currentIndex, videoEditedInfo, notify, scheduleDate, forceDocument);
            } else {
                this.placeProvider.replaceButtonPressed(this.currentIndex, videoEditedInfo);
            }
            closePhoto(false, false);
        }
    }

    /* access modifiers changed from: private */
    public void showShareAlert(ArrayList<MessageObject> messages) {
        boolean openKeyboardOnShareAlertClose;
        final FrameLayoutDrawer frameLayoutDrawer = this.containerView;
        requestAdjustToNothing();
        boolean openKeyboardOnShareAlertClose2 = false;
        ChatActivity chatActivity = this.parentChatActivity;
        if (chatActivity == null || chatActivity.getChatActivityEnterView() == null || this.parentChatActivity.getFragmentView() == null) {
            openKeyboardOnShareAlertClose = false;
        } else {
            if (this.parentChatActivity.getChatActivityEnterView().isKeyboardVisible()) {
                this.parentChatActivity.getChatActivityEnterView().showEmojiView();
                openKeyboardOnShareAlertClose2 = true;
            }
            AndroidUtilities.setAdjustResizeToNothing(this.parentChatActivity.getParentActivity(), this.classGuid);
            this.parentChatActivity.getFragmentView().requestLayout();
            openKeyboardOnShareAlertClose = openKeyboardOnShareAlertClose2;
        }
        final boolean finalOpenKeyboardOnShareAlertClose = openKeyboardOnShareAlertClose;
        FrameLayoutDrawer frameLayoutDrawer2 = frameLayoutDrawer;
        ShareAlert alert = new ShareAlert(this, this.parentActivity, this.parentChatActivity, messages, (String) null, (String) null, false, (String) null, (String) null, false, true, (Theme.ResourcesProvider) null) {
            final /* synthetic */ PhotoViewer this$0;

            {
                this.this$0 = this$0;
            }

            /* access modifiers changed from: protected */
            public void onSend(LongSparseArray<TLRPC.Dialog> dids, int count) {
                AndroidUtilities.runOnUIThread(new PhotoViewer$36$$ExternalSyntheticLambda1(this, frameLayoutDrawer, dids, count), 250);
            }

            /* renamed from: lambda$onSend$0$org-telegram-ui-PhotoViewer$36  reason: not valid java name */
            public /* synthetic */ void m4312lambda$onSend$0$orgtelegramuiPhotoViewer$36(FrameLayout photoContainerView, LongSparseArray dids, int count) {
                BulletinFactory.createForwardedBulletin(this.this$0.parentActivity, photoContainerView, dids.size(), dids.size() == 1 ? ((TLRPC.Dialog) dids.valueAt(0)).id : 0, count, -NUM, -1).show();
            }

            public void dismissInternal() {
                super.dismissInternal();
                if (finalOpenKeyboardOnShareAlertClose) {
                    AndroidUtilities.runOnUIThread(new PhotoViewer$36$$ExternalSyntheticLambda0(this), 50);
                }
                this.this$0.requestAdjust();
            }

            /* renamed from: lambda$dismissInternal$1$org-telegram-ui-PhotoViewer$36  reason: not valid java name */
            public /* synthetic */ void m4311lambda$dismissInternal$1$orgtelegramuiPhotoViewer$36() {
                if (this.this$0.parentChatActivity != null && this.this$0.parentChatActivity.getChatActivityEnterView() != null) {
                    this.this$0.parentChatActivity.getChatActivityEnterView().openKeyboard();
                }
            }
        };
        alert.setFocusable(false);
        alert.getWindow().setSoftInputMode(48);
        AndroidUtilities.runOnUIThread(new PhotoViewer$$ExternalSyntheticLambda59(this, alert), 250);
        alert.show();
    }

    /* renamed from: lambda$showShareAlert$43$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4293lambda$showShareAlert$43$orgtelegramuiPhotoViewer(ShareAlert alert) {
        if (alert != null && alert.getWindow() != null) {
            alert.setFocusable(true);
            ChatActivity chatActivity = this.parentChatActivity;
            if (chatActivity != null && chatActivity.getChatActivityEnterView() != null) {
                this.parentChatActivity.getChatActivityEnterView().hidePopup(false);
            }
        }
    }

    /* access modifiers changed from: private */
    public void setMenuItemIcon() {
        if (this.speedItem.getVisibility() != 0) {
            this.menuItem.setIcon(NUM);
            return;
        }
        if (Math.abs(this.currentVideoSpeed - 0.25f) < 0.001f) {
            this.menuItem.setIcon(NUM);
            this.speedItem.setSubtext(LocaleController.getString("SpeedVerySlow", NUM));
        } else if (Math.abs(this.currentVideoSpeed - 0.5f) < 0.001f) {
            this.menuItem.setIcon(NUM);
            this.speedItem.setSubtext(LocaleController.getString("SpeedSlow", NUM));
        } else if (Math.abs(this.currentVideoSpeed - 1.0f) < 0.001f) {
            this.menuItem.setIcon(NUM);
            this.speedItem.setSubtext(LocaleController.getString("SpeedNormal", NUM));
        } else if (Math.abs(this.currentVideoSpeed - 1.5f) < 0.001f) {
            this.menuItem.setIcon(NUM);
            this.speedItem.setSubtext(LocaleController.getString("SpeedFast", NUM));
        } else {
            this.menuItem.setIcon(NUM);
            this.speedItem.setSubtext(LocaleController.getString("SpeedVeryFast", NUM));
        }
        this.chooseSpeedLayout.update(this.currentVideoSpeed);
    }

    public float getCurrentVideoSpeed() {
        return this.currentVideoSpeed;
    }

    private boolean checkInlinePermissions() {
        if (this.parentActivity == null) {
            return false;
        }
        if (Build.VERSION.SDK_INT < 23 || Settings.canDrawOverlays(this.parentActivity)) {
            return true;
        }
        AlertsCreator.createDrawOverlayPermissionDialog(this.parentActivity, (DialogInterface.OnClickListener) null).show();
        return false;
    }

    /* access modifiers changed from: private */
    public void captureCurrentFrame() {
        TextureView textureView;
        if (this.captureFrameAtTime != -1 && (textureView = this.videoTextureView) != null) {
            this.captureFrameAtTime = -1;
            final Bitmap bitmap = textureView.getBitmap();
            this.flashView.animate().alpha(1.0f).setInterpolator(CubicBezierInterpolator.EASE_BOTH).setDuration(85).setListener(new AnimatorListenerAdapter() {
                public void onAnimationEnd(Animator animation) {
                    PhotoViewer.this.photoCropView.setVideoThumb(bitmap, 0);
                    AnimatorSet unused = PhotoViewer.this.flashAnimator = new AnimatorSet();
                    PhotoViewer.this.flashAnimator.playTogether(new Animator[]{ObjectAnimator.ofFloat(PhotoViewer.this.flashView, PhotoViewer.this.FLASH_VIEW_VALUE, new float[]{0.0f})});
                    PhotoViewer.this.flashAnimator.setDuration(85);
                    PhotoViewer.this.flashAnimator.setInterpolator(CubicBezierInterpolator.EASE_OUT);
                    PhotoViewer.this.flashAnimator.addListener(new AnimatorListenerAdapter() {
                        public void onAnimationEnd(Animator animation) {
                            if (PhotoViewer.this.flashAnimator != null) {
                                AndroidUtilities.runOnUIThread(PhotoViewer.this.videoPlayRunnable = new PhotoViewer$37$1$$ExternalSyntheticLambda0(this), 860);
                            }
                        }

                        /* renamed from: lambda$onAnimationEnd$0$org-telegram-ui-PhotoViewer$37$1  reason: not valid java name */
                        public /* synthetic */ void m4313lambda$onAnimationEnd$0$orgtelegramuiPhotoViewer$37$1() {
                            boolean unused = PhotoViewer.this.manuallyPaused = false;
                            if (PhotoViewer.this.videoPlayer != null) {
                                PhotoViewer.this.videoPlayer.play();
                            }
                            Runnable unused2 = PhotoViewer.this.videoPlayRunnable = null;
                        }

                        public void onAnimationCancel(Animator animation) {
                            AnimatorSet unused = PhotoViewer.this.flashAnimator = null;
                        }
                    });
                    PhotoViewer.this.flashAnimator.start();
                }
            }).start();
        }
    }

    /* access modifiers changed from: private */
    /* renamed from: createCaptionTextView */
    public TextView m4287lambda$setParentActivity$6$orgtelegramuiPhotoViewer() {
        TextView textView = new SpoilersTextView(this.activityContext) {
            private LinkSpanDrawable.LinkCollector links = new LinkSpanDrawable.LinkCollector(this);
            private LinkSpanDrawable<ClickableSpan> pressedLink;

            public boolean onTouchEvent(MotionEvent event) {
                boolean linkResult = false;
                if (event.getAction() == 0 || (this.pressedLink != null && event.getAction() == 1)) {
                    int x = (int) (event.getX() - ((float) getPaddingLeft()));
                    int y = (int) (event.getY() - ((float) getPaddingTop()));
                    int line = getLayout().getLineForVertical(y);
                    int off = getLayout().getOffsetForHorizontal(line, (float) x);
                    float left = getLayout().getLineLeft(line);
                    ClickableSpan touchLink = null;
                    if (left > ((float) x) || getLayout().getLineWidth(line) + left < ((float) x) || y < 0 || y > getLayout().getHeight()) {
                    } else {
                        Spannable buffer = new SpannableString(getText());
                        ClickableSpan[] link = (ClickableSpan[]) buffer.getSpans(off, off, ClickableSpan.class);
                        if (link.length != 0) {
                            touchLink = link[0];
                            if (event.getAction() == 0) {
                                this.links.clear();
                                LinkSpanDrawable<ClickableSpan> linkSpanDrawable = new LinkSpanDrawable<>(link[0], (Theme.ResourcesProvider) null, event.getX(), event.getY());
                                this.pressedLink = linkSpanDrawable;
                                linkSpanDrawable.setColor(NUM);
                                this.links.addLink(this.pressedLink);
                                int start = buffer.getSpanStart(this.pressedLink.getSpan());
                                int end = buffer.getSpanEnd(this.pressedLink.getSpan());
                                LinkPath path = this.pressedLink.obtainNewPath();
                                path.setCurrentLayout(getLayout(), start, (float) getPaddingTop());
                                getLayout().getSelectionPath(start, end, path);
                                int i = x;
                                postDelayed(new PhotoViewer$38$$ExternalSyntheticLambda1(this, this.pressedLink), (long) ViewConfiguration.getLongPressTimeout());
                                linkResult = true;
                            }
                        }
                    }
                    if (event.getAction() == 1) {
                        this.links.clear();
                        LinkSpanDrawable<ClickableSpan> linkSpanDrawable2 = this.pressedLink;
                        if (linkSpanDrawable2 != null && linkSpanDrawable2.getSpan() == touchLink) {
                            PhotoViewer.this.onLinkClick(this.pressedLink.getSpan(), this);
                        }
                        this.pressedLink = null;
                        linkResult = true;
                    }
                } else if (event.getAction() == 3) {
                    this.links.clear();
                    this.pressedLink = null;
                    linkResult = true;
                }
                return PhotoViewer.this.bottomTouchEnabled && (linkResult || super.onTouchEvent(event));
            }

            /* renamed from: lambda$onTouchEvent$1$org-telegram-ui-PhotoViewer$38  reason: not valid java name */
            public /* synthetic */ void m4315lambda$onTouchEvent$1$orgtelegramuiPhotoViewer$38(LinkSpanDrawable savedPressedLink) {
                LinkSpanDrawable<ClickableSpan> linkSpanDrawable = this.pressedLink;
                if (savedPressedLink == linkSpanDrawable && linkSpanDrawable != null && (linkSpanDrawable.getSpan() instanceof URLSpan)) {
                    PhotoViewer.this.onLinkLongPress((URLSpan) this.pressedLink.getSpan(), this, new PhotoViewer$38$$ExternalSyntheticLambda0(this));
                    this.pressedLink = null;
                }
            }

            /* renamed from: lambda$onTouchEvent$0$org-telegram-ui-PhotoViewer$38  reason: not valid java name */
            public /* synthetic */ void m4314lambda$onTouchEvent$0$orgtelegramuiPhotoViewer$38() {
                this.links.clear();
            }

            public void setPressed(boolean pressed) {
                boolean needsRefresh = pressed != isPressed();
                super.setPressed(pressed);
                if (needsRefresh) {
                    invalidate();
                }
            }

            /* access modifiers changed from: protected */
            public void onDraw(Canvas canvas) {
                canvas.save();
                canvas.translate((float) getPaddingLeft(), 0.0f);
                if (this.links.draw(canvas)) {
                    invalidate();
                }
                canvas.restore();
                super.onDraw(canvas);
            }
        };
        ViewHelper.setPadding(textView, 16.0f, 8.0f, 16.0f, 8.0f);
        textView.setLinkTextColor(-8796932);
        textView.setTextColor(-1);
        textView.setHighlightColor(NUM);
        textView.setGravity(LayoutHelper.getAbsoluteGravityStart() | 16);
        textView.setTextSize(1, 16.0f);
        textView.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda5(this));
        return textView;
    }

    /* renamed from: lambda$createCaptionTextView$44$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4239lambda$createCaptionTextView$44$orgtelegramuiPhotoViewer(View v) {
        if (this.needCaptionLayout) {
            openCaptionEnter();
        }
    }

    /* access modifiers changed from: private */
    public int getLeftInset() {
        if (this.lastInsets == null || Build.VERSION.SDK_INT < 21) {
            return 0;
        }
        return ((WindowInsets) this.lastInsets).getSystemWindowInsetLeft();
    }

    /* access modifiers changed from: private */
    public int getRightInset() {
        if (this.lastInsets == null || Build.VERSION.SDK_INT < 21) {
            return 0;
        }
        return ((WindowInsets) this.lastInsets).getSystemWindowInsetRight();
    }

    /* access modifiers changed from: private */
    public void dismissInternal() {
        try {
            if (this.windowView.getParent() != null) {
                Activity activity = this.parentActivity;
                if (activity instanceof LaunchActivity) {
                    ((LaunchActivity) activity).drawerLayoutContainer.setAllowDrawContent(true);
                }
                ((WindowManager) this.parentActivity.getSystemService("window")).removeView(this.windowView);
                onHideView();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* access modifiers changed from: private */
    public void switchToPip(boolean fromGesture) {
        CubicBezierInterpolator interpolator2;
        if (this.videoPlayer != null && this.textureUploaded && checkInlinePermissions() && !this.changingTextureView && !this.switchingInlineMode && !this.isInline) {
            if (PipInstance != null) {
                PipInstance.destroyPhotoViewer();
            }
            this.openedFullScreenVideo = false;
            PipInstance = Instance;
            Instance = null;
            this.switchingInlineMode = true;
            this.isVisible = false;
            AndroidUtilities.cancelRunOnUIThread(this.hideActionBarRunnable);
            PlaceProviderObject placeProviderObject = this.currentPlaceObject;
            if (placeProviderObject != null && !placeProviderObject.imageReceiver.getVisible()) {
                this.currentPlaceObject.imageReceiver.setVisible(true, true);
                AnimatedFileDrawable animation = this.currentPlaceObject.imageReceiver.getAnimation();
                if (animation != null) {
                    Bitmap bitmap = animation.getAnimatedBitmap();
                    if (bitmap != null) {
                        try {
                            Bitmap src = this.videoTextureView.getBitmap(bitmap.getWidth(), bitmap.getHeight());
                            new Canvas(bitmap).drawBitmap(src, 0.0f, 0.0f, (Paint) null);
                            src.recycle();
                        } catch (Throwable e) {
                            FileLog.e(e);
                        }
                    }
                    animation.seekTo(this.videoPlayer.getCurrentPosition(), true);
                    if (fromGesture) {
                        this.currentPlaceObject.imageReceiver.setAlpha(0.0f);
                        final ImageReceiver imageReceiver = this.currentPlaceObject.imageReceiver;
                        ValueAnimator valueAnimator = ValueAnimator.ofFloat(new float[]{0.0f, 1.0f});
                        valueAnimator.addUpdateListener(new PhotoViewer$$ExternalSyntheticLambda0(imageReceiver));
                        valueAnimator.addListener(new AnimatorListenerAdapter() {
                            public void onAnimationEnd(Animator animation) {
                                imageReceiver.setAlpha(1.0f);
                            }
                        });
                        valueAnimator.setDuration(250);
                        valueAnimator.start();
                    }
                    this.currentPlaceObject.imageReceiver.setAllowStartAnimation(true);
                    this.currentPlaceObject.imageReceiver.startAnimation();
                }
            }
            if (Build.VERSION.SDK_INT >= 21) {
                this.pipAnimationInProgress = true;
                org.telegram.ui.Components.Rect rect = PipVideoOverlay.getPipRect(true, this.aspectRatioFrameLayout.getAspectRatio());
                final float scale2 = rect.width / ((float) this.videoTextureView.getWidth());
                final ValueAnimator valueAnimator2 = ValueAnimator.ofFloat(new float[]{0.0f, 1.0f});
                float fromX = this.videoTextureView.getTranslationX();
                float fromY = this.videoTextureView.getTranslationY() + this.translationY;
                float fromY2 = this.textureImageView.getTranslationY() + this.translationY;
                float toX = rect.x;
                float toX2 = (rect.x - this.aspectRatioFrameLayout.getX()) + ((float) getLeftInset());
                float toY = rect.y;
                float toY2 = rect.y - this.aspectRatioFrameLayout.getY();
                this.textureImageView.setTranslationY(fromY2);
                this.videoTextureView.setTranslationY(fromY);
                FirstFrameView firstFrameView2 = this.firstFrameView;
                if (firstFrameView2 != null) {
                    firstFrameView2.setTranslationY(fromY);
                }
                this.translationY = 0.0f;
                this.containerView.invalidate();
                if (!fromGesture) {
                    interpolator2 = null;
                } else if (fromY < toY2) {
                    interpolator2 = new CubicBezierInterpolator(0.5d, 0.0d, 0.9d, 0.9d);
                } else {
                    interpolator2 = new CubicBezierInterpolator(0.0d, 0.5d, 0.9d, 0.9d);
                }
                AnonymousClass40 r3 = new ViewOutlineProvider() {
                    public void getOutline(View view, Outline outline) {
                        outline.setRoundRect(0, 0, view.getMeasuredWidth(), view.getMeasuredHeight(), ((Float) valueAnimator2.getAnimatedValue()).floatValue() * ((float) AndroidUtilities.dp(10.0f)) * (1.0f / scale2));
                    }
                };
                this.videoTextureView.setOutlineProvider(r3);
                this.videoTextureView.setClipToOutline(true);
                this.textureImageView.setOutlineProvider(r3);
                this.textureImageView.setClipToOutline(true);
                FirstFrameView firstFrameView3 = this.firstFrameView;
                if (firstFrameView3 != null) {
                    firstFrameView3.setOutlineProvider(r3);
                    this.firstFrameView.setClipToOutline(true);
                }
                PhotoViewer$$ExternalSyntheticLambda55 photoViewer$$ExternalSyntheticLambda55 = r1;
                AnonymousClass40 r15 = r3;
                float f = toX;
                float f2 = fromY2;
                ValueAnimator valueAnimator3 = valueAnimator2;
                float scale3 = scale2;
                PhotoViewer$$ExternalSyntheticLambda55 photoViewer$$ExternalSyntheticLambda552 = new PhotoViewer$$ExternalSyntheticLambda55(this, interpolator2, fromX, toX, fromY2, toY, toX2, fromY, toY2);
                valueAnimator3.addUpdateListener(photoViewer$$ExternalSyntheticLambda55);
                AnimatorSet animatorSet = new AnimatorSet();
                animatorSet.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.textureImageView, View.SCALE_X, new float[]{scale3}), ObjectAnimator.ofFloat(this.textureImageView, View.SCALE_Y, new float[]{scale3}), ObjectAnimator.ofFloat(this.videoTextureView, View.SCALE_X, new float[]{scale3}), ObjectAnimator.ofFloat(this.videoTextureView, View.SCALE_Y, new float[]{scale3}), ObjectAnimator.ofInt(this.backgroundDrawable, AnimationProperties.COLOR_DRAWABLE_ALPHA, new int[]{0}), valueAnimator3});
                if (fromGesture) {
                    animatorSet.setInterpolator(CubicBezierInterpolator.EASE_OUT);
                    animatorSet.setDuration(300);
                } else {
                    animatorSet.setInterpolator(new DecelerateInterpolator());
                    animatorSet.setDuration(250);
                }
                animatorSet.addListener(new AnimatorListenerAdapter() {
                    public void onAnimationEnd(Animator animation) {
                        boolean unused = PhotoViewer.this.pipAnimationInProgress = false;
                        PhotoViewer.this.switchToInlineRunnable.run();
                        AndroidUtilities.runOnUIThread(new PhotoViewer$41$$ExternalSyntheticLambda0(this), 100);
                    }

                    /* renamed from: lambda$onAnimationEnd$0$org-telegram-ui-PhotoViewer$41  reason: not valid java name */
                    public /* synthetic */ void m4316lambda$onAnimationEnd$0$orgtelegramuiPhotoViewer$41() {
                        PhotoViewer.this.videoTextureView.setOutlineProvider((ViewOutlineProvider) null);
                        PhotoViewer.this.textureImageView.setOutlineProvider((ViewOutlineProvider) null);
                        if (PhotoViewer.this.firstFrameView != null) {
                            PhotoViewer.this.firstFrameView.setOutlineProvider((ViewOutlineProvider) null);
                        }
                    }
                });
                animatorSet.start();
                if (!fromGesture) {
                    toggleActionBar(false, true, new ActionBarToggleParams().enableStatusBarAnimation(false).enableTranslationAnimation(false).animationDuration(250).animationInterpolator(new DecelerateInterpolator()));
                }
            } else {
                this.switchToInlineRunnable.run();
                dismissInternal();
            }
            ChatActivity chatActivity = this.parentChatActivity;
            if (chatActivity != null) {
                chatActivity.getFragmentView().invalidate();
            }
        }
    }

    /* renamed from: lambda$switchToPip$46$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4298lambda$switchToPip$46$orgtelegramuiPhotoViewer(CubicBezierInterpolator interpolator2, float fromX, float toX, float fromY2, float toY, float toX2, float fromY, float toY2, ValueAnimator animation) {
        float xValue = ((Float) animation.getAnimatedValue()).floatValue();
        float yValue = interpolator2 == null ? xValue : interpolator2.getInterpolation(xValue);
        ImageView imageView = this.textureImageView;
        if (imageView != null) {
            imageView.setTranslationX(((1.0f - xValue) * fromX) + (toX * xValue));
            this.textureImageView.setTranslationY(((1.0f - yValue) * fromY2) + (toY * yValue));
            this.textureImageView.invalidateOutline();
        }
        TextureView textureView = this.videoTextureView;
        if (textureView != null) {
            textureView.setTranslationX(((1.0f - xValue) * fromX) + (toX2 * xValue));
            this.videoTextureView.setTranslationY(((1.0f - yValue) * fromY) + (toY2 * yValue));
            this.videoTextureView.invalidateOutline();
        }
        FirstFrameView firstFrameView2 = this.firstFrameView;
        if (firstFrameView2 != null) {
            firstFrameView2.setTranslationX(this.videoTextureView.getTranslationX());
            this.firstFrameView.setTranslationY(this.videoTextureView.getTranslationY());
            this.firstFrameView.setScaleX(this.videoTextureView.getScaleX());
            this.firstFrameView.setScaleY(this.videoTextureView.getScaleY());
            this.firstFrameView.invalidateOutline();
        }
    }

    /* access modifiers changed from: private */
    public boolean cropMirror() {
        if (this.imageMoveAnimation != null || this.photoCropView == null) {
            return false;
        }
        this.mirror = 0.0f;
        this.animateToMirror = 1.0f;
        this.animationStartTime = System.currentTimeMillis();
        AnimatorSet animatorSet = new AnimatorSet();
        this.imageMoveAnimation = animatorSet;
        animatorSet.playTogether(new Animator[]{ObjectAnimator.ofFloat(this, AnimationProperties.PHOTO_VIEWER_ANIMATION_VALUE, new float[]{0.0f, 1.0f})});
        this.imageMoveAnimation.setDuration(250);
        this.imageMoveAnimation.setInterpolator(CubicBezierInterpolator.DEFAULT);
        this.imageMoveAnimation.addListener(new AnimatorListenerAdapter() {
            public void onAnimationEnd(Animator animation) {
                AnimatorSet unused = PhotoViewer.this.imageMoveAnimation = null;
                if (PhotoViewer.this.photoCropView != null) {
                    if (PhotoViewer.this.photoCropView.mirror()) {
                        PhotoViewer.this.mirrorItem.setColorFilter(new PorterDuffColorFilter(PhotoViewer.this.getThemedColor("dialogFloatingButton"), PorterDuff.Mode.MULTIPLY));
                    } else {
                        PhotoViewer.this.mirrorItem.setColorFilter((ColorFilter) null);
                    }
                    PhotoViewer photoViewer = PhotoViewer.this;
                    float unused2 = photoViewer.mirror = photoViewer.animateToMirror = 0.0f;
                    PhotoViewer.this.containerView.invalidate();
                }
            }
        });
        this.imageMoveAnimation.start();
        return !this.photoCropView.cropView.isMirrored();
    }

    /* access modifiers changed from: private */
    public boolean cropRotate(float diff) {
        return cropRotate(diff, false, (Runnable) null);
    }

    private boolean cropRotate(final float diff, boolean restoreMirror, final Runnable onEnd) {
        PhotoCropView photoCropView2;
        if (this.imageMoveAnimation != null || (photoCropView2 = this.photoCropView) == null) {
            return false;
        }
        photoCropView2.cropView.maximize(true);
        this.rotate = 0.0f;
        this.animateToRotate = 0.0f + diff;
        if (restoreMirror) {
            this.mirror = 0.0f;
            this.animateToMirror = 1.0f;
        }
        this.animationStartTime = System.currentTimeMillis();
        this.imageMoveAnimation = new AnimatorSet();
        ImageReceiver imageReceiver = this.centerImage;
        if (imageReceiver != null) {
            int bitmapWidth = imageReceiver.getBitmapWidth();
            int bitmapHeight = this.centerImage.getBitmapHeight();
            if (Math.abs((((int) this.photoCropView.cropView.getStateOrientation()) / 90) % 2) == 1) {
                int temp = bitmapWidth;
                bitmapWidth = bitmapHeight;
                bitmapHeight = temp;
            }
            if (this.editState.cropState != null) {
                bitmapWidth = (int) (((float) bitmapWidth) * this.editState.cropState.cropPw);
                bitmapHeight = (int) (((float) bitmapHeight) * this.editState.cropState.cropPh);
            }
            float oldScale = Math.min(((float) getContainerViewWidth(1)) / ((float) bitmapWidth), ((float) getContainerViewHeight(1)) / ((float) bitmapHeight));
            float newScale = oldScale;
            if (Math.abs((diff / 90.0f) % 2.0f) == 1.0f) {
                newScale = Math.min(((float) getContainerViewWidth(1)) / ((float) bitmapHeight), ((float) getContainerViewHeight(1)) / ((float) bitmapWidth));
            }
            this.animateToScale = newScale / oldScale;
        }
        ValueAnimator areaRotateAnimator = ValueAnimator.ofFloat(new float[]{0.0f, 1.0f});
        areaRotateAnimator.addUpdateListener(new PhotoViewer$$ExternalSyntheticLambda33(this, diff, this.photoCropView.wheelView.getRotation()));
        this.imageMoveAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(this, AnimationProperties.PHOTO_VIEWER_ANIMATION_VALUE, new float[]{0.0f, 1.0f}), areaRotateAnimator});
        this.imageMoveAnimation.setDuration(250);
        this.imageMoveAnimation.setInterpolator(CubicBezierInterpolator.DEFAULT);
        this.imageMoveAnimation.addListener(new AnimatorListenerAdapter() {
            public void onAnimationEnd(Animator animation) {
                AnimatorSet unused = PhotoViewer.this.imageMoveAnimation = null;
                PhotoViewer photoViewer = PhotoViewer.this;
                float unused2 = photoViewer.rotate = photoViewer.animateToRotate = 0.0f;
                PhotoViewer photoViewer2 = PhotoViewer.this;
                float unused3 = photoViewer2.mirror = photoViewer2.animateToMirror = 0.0f;
                PhotoViewer photoViewer3 = PhotoViewer.this;
                float unused4 = photoViewer3.scale = photoViewer3.animateToScale = 1.0f;
                PhotoViewer.this.containerView.invalidate();
                PhotoViewer.this.photoCropView.cropView.areaView.setRotationScaleTranslation(0.0f, 1.0f, 0.0f, 0.0f);
                PhotoViewer.this.photoCropView.wheelView.setRotated(false);
                if (Math.abs(diff) > 0.0f) {
                    if (PhotoViewer.this.photoCropView.rotate(diff)) {
                        PhotoViewer.this.rotateItem.setColorFilter(new PorterDuffColorFilter(PhotoViewer.this.getThemedColor("dialogFloatingButton"), PorterDuff.Mode.MULTIPLY));
                    } else {
                        PhotoViewer.this.rotateItem.setColorFilter((ColorFilter) null);
                    }
                }
                if (PhotoViewer.this.editState.cropState != null) {
                    MediaController.CropState cropState = PhotoViewer.this.editState.cropState;
                    PhotoViewer.this.editState.cropState.cropPy = 0.0f;
                    cropState.cropPx = 0.0f;
                    MediaController.CropState cropState2 = PhotoViewer.this.editState.cropState;
                    PhotoViewer.this.editState.cropState.cropPh = 1.0f;
                    cropState2.cropPw = 1.0f;
                }
                Runnable runnable = onEnd;
                if (runnable != null) {
                    runnable.run();
                }
            }
        });
        this.imageMoveAnimation.start();
        if (Math.abs(this.photoCropView.cropView.getStateOrientation() + diff) > 0.01f) {
            return true;
        }
        return false;
    }

    /* renamed from: lambda$cropRotate$47$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4245lambda$cropRotate$47$orgtelegramuiPhotoViewer(float diff, float wasRotation, ValueAnimator a) {
        float f = this.scale;
        this.photoCropView.cropView.areaView.setRotationScaleTranslation(((Float) a.getAnimatedValue()).floatValue() * diff, f + ((this.animateToScale - f) * this.animationValue), 0.0f, 0.0f);
        this.photoCropView.wheelView.setRotation(AndroidUtilities.lerp(wasRotation, 0.0f, ((Float) a.getAnimatedValue()).floatValue()), false);
    }

    public VideoPlayer getVideoPlayer() {
        return this.videoPlayer;
    }

    public void exitFromPip() {
        TextureView textureView;
        if (this.isInline) {
            if (Instance != null) {
                Instance.closePhoto(false, true);
            }
            PhotoViewerWebView photoViewerWebView2 = this.photoViewerWebView;
            if (photoViewerWebView2 != null) {
                photoViewerWebView2.exitFromPip();
            }
            Instance = PipInstance;
            PipInstance = null;
            if (this.photoViewerWebView == null) {
                this.switchingInlineMode = true;
                Bitmap bitmap = this.currentBitmap;
                if (bitmap != null) {
                    bitmap.recycle();
                    this.currentBitmap = null;
                }
                this.changingTextureView = true;
            }
            this.isInline = false;
            if (this.photoViewerWebView == null && (textureView = this.videoTextureView) != null) {
                if (textureView.getParent() != null) {
                    ((ViewGroup) this.videoTextureView.getParent()).removeView(this.videoTextureView);
                }
                this.videoTextureView.setVisibility(4);
                this.aspectRatioFrameLayout.addView(this.videoTextureView);
            }
            if (ApplicationLoader.mainInterfacePaused) {
                try {
                    this.parentActivity.startService(new Intent(ApplicationLoader.applicationContext, BringAppForegroundService.class));
                } catch (Throwable e) {
                    FileLog.e(e);
                }
            }
            if (this.photoViewerWebView == null) {
                if (Build.VERSION.SDK_INT < 21 || this.videoTextureView == null) {
                    PipVideoOverlay.dismiss(true);
                } else {
                    this.pipAnimationInProgress = true;
                    org.telegram.ui.Components.Rect rect = PipVideoOverlay.getPipRect(false, this.aspectRatioFrameLayout.getAspectRatio());
                    final float scale2 = rect.width / ((float) this.textureImageView.getLayoutParams().width);
                    this.textureImageView.setScaleX(scale2);
                    this.textureImageView.setScaleY(scale2);
                    this.textureImageView.setTranslationX(rect.x);
                    this.textureImageView.setTranslationY(rect.y);
                    this.videoTextureView.setScaleX(scale2);
                    this.videoTextureView.setScaleY(scale2);
                    this.videoTextureView.setTranslationX(rect.x - this.aspectRatioFrameLayout.getX());
                    this.videoTextureView.setTranslationY(rect.y - this.aspectRatioFrameLayout.getY());
                    FirstFrameView firstFrameView2 = this.firstFrameView;
                    if (firstFrameView2 != null) {
                        firstFrameView2.setScaleX(scale2);
                        this.firstFrameView.setScaleY(scale2);
                        this.firstFrameView.setTranslationX(this.videoTextureView.getTranslationX());
                        this.firstFrameView.setTranslationY(this.videoTextureView.getTranslationY());
                    }
                    this.inlineOutAnimationProgress = 0.0f;
                    ViewOutlineProvider outlineProvider = new ViewOutlineProvider() {
                        public void getOutline(View view, Outline outline) {
                            outline.setRoundRect(0, 0, view.getMeasuredWidth(), view.getMeasuredHeight(), (1.0f - PhotoViewer.this.inlineOutAnimationProgress) * ((float) AndroidUtilities.dp(10.0f)) * (1.0f / scale2));
                        }
                    };
                    this.videoTextureView.setOutlineProvider(outlineProvider);
                    this.videoTextureView.setClipToOutline(true);
                    this.textureImageView.setOutlineProvider(outlineProvider);
                    this.textureImageView.setClipToOutline(true);
                    FirstFrameView firstFrameView3 = this.firstFrameView;
                    if (firstFrameView3 != null) {
                        firstFrameView3.setOutlineProvider(outlineProvider);
                        this.firstFrameView.setClipToOutline(true);
                    }
                }
            }
            try {
                this.isVisible = true;
                ((WindowManager) this.parentActivity.getSystemService("window")).addView(this.windowView, this.windowLayoutParams);
                onShowView();
                PlaceProviderObject placeProviderObject = this.currentPlaceObject;
                if (placeProviderObject != null) {
                    placeProviderObject.imageReceiver.setVisible(false, false);
                }
            } catch (Exception e2) {
                FileLog.e((Throwable) e2);
            }
            if (Build.VERSION.SDK_INT >= 21) {
                this.waitingForDraw = 4;
            }
        }
    }

    private void onShowView() {
        Activity activity = this.parentActivity;
        if (activity instanceof LaunchActivity) {
            ((LaunchActivity) activity).addOnUserLeaveHintListener(this.onUserLeaveHintListener);
        }
    }

    private void onHideView() {
        Activity activity = this.parentActivity;
        if (activity instanceof LaunchActivity) {
            ((LaunchActivity) activity).removeOnUserLeaveHintListener(this.onUserLeaveHintListener);
        }
    }

    /* access modifiers changed from: private */
    public void onUserLeaveHint() {
        if (this.pipItem.getAlpha() == 1.0f && AndroidUtilities.checkInlinePermissions(this.parentActivity) && !PipVideoOverlay.isVisible()) {
            if (this.isEmbedVideo) {
                PhotoViewerWebView photoViewerWebView2 = this.photoViewerWebView;
                if (photoViewerWebView2 != null && !photoViewerWebView2.isInAppOnly() && this.photoViewerWebView.openInPip()) {
                    this.pipVideoOverlayAnimateFlag = false;
                    if (PipInstance != null) {
                        PipInstance.destroyPhotoViewer();
                    }
                    this.isInline = true;
                    PipInstance = Instance;
                    Instance = null;
                    this.isVisible = false;
                    PlaceProviderObject placeProviderObject = this.currentPlaceObject;
                    if (placeProviderObject != null && !placeProviderObject.imageReceiver.getVisible()) {
                        this.currentPlaceObject.imageReceiver.setVisible(true, true);
                    }
                    dismissInternal();
                    return;
                }
                return;
            }
            this.pipVideoOverlayAnimateFlag = false;
            switchToPip(false);
        }
    }

    /* access modifiers changed from: private */
    public void updateVideoSeekPreviewPosition() {
        int x = (this.videoPlayerSeekbar.getThumbX() + AndroidUtilities.dp(2.0f)) - (this.videoPreviewFrame.getMeasuredWidth() / 2);
        int min = AndroidUtilities.dp(10.0f);
        int max = (this.videoPlayerControlFrameLayout.getMeasuredWidth() - AndroidUtilities.dp(10.0f)) - (this.videoPreviewFrame.getMeasuredWidth() / 2);
        if (x < min) {
            x = min;
        } else if (x >= max) {
            x = max;
        }
        this.videoPreviewFrame.setTranslationX((float) x);
    }

    /* access modifiers changed from: private */
    public void showVideoSeekPreviewPosition(boolean show) {
        if (show && this.videoPreviewFrame.getTag() != null) {
            return;
        }
        if (!show && this.videoPreviewFrame.getTag() == null) {
            return;
        }
        if (!show || this.videoPreviewFrame.isReady()) {
            AnimatorSet animatorSet = this.videoPreviewFrameAnimation;
            if (animatorSet != null) {
                animatorSet.cancel();
            }
            this.videoPreviewFrame.setTag(show ? 1 : null);
            AnimatorSet animatorSet2 = new AnimatorSet();
            this.videoPreviewFrameAnimation = animatorSet2;
            Animator[] animatorArr = new Animator[1];
            VideoSeekPreviewImage videoSeekPreviewImage = this.videoPreviewFrame;
            Property property = View.ALPHA;
            float[] fArr = new float[1];
            fArr[0] = show ? 1.0f : 0.0f;
            animatorArr[0] = ObjectAnimator.ofFloat(videoSeekPreviewImage, property, fArr);
            animatorSet2.playTogether(animatorArr);
            this.videoPreviewFrameAnimation.addListener(new AnimatorListenerAdapter() {
                public void onAnimationEnd(Animator animation) {
                    AnimatorSet unused = PhotoViewer.this.videoPreviewFrameAnimation = null;
                }
            });
            this.videoPreviewFrameAnimation.setDuration(180);
            this.videoPreviewFrameAnimation.start();
            return;
        }
        this.needShowOnReady = true;
    }

    private void createVideoControlsInterface() {
        VideoPlayerControlFrameLayout videoPlayerControlFrameLayout2 = new VideoPlayerControlFrameLayout(this.containerView.getContext());
        this.videoPlayerControlFrameLayout = videoPlayerControlFrameLayout2;
        this.containerView.addView(videoPlayerControlFrameLayout2, LayoutHelper.createFrame(-1, 48, 83));
        final VideoPlayerSeekBar.SeekBarDelegate seekBarDelegate = new VideoPlayerSeekBar.SeekBarDelegate() {
            public void onSeekBarDrag(float progress) {
                if (PhotoViewer.this.videoPlayer != null) {
                    if (!PhotoViewer.this.inPreview && PhotoViewer.this.videoTimelineView.getVisibility() == 0) {
                        progress = PhotoViewer.this.videoTimelineView.getLeftProgress() + ((PhotoViewer.this.videoTimelineView.getRightProgress() - PhotoViewer.this.videoTimelineView.getLeftProgress()) * progress);
                    }
                    long duration = PhotoViewer.this.videoPlayer.getDuration();
                    if (duration == -9223372036854775807L) {
                        float unused = PhotoViewer.this.seekToProgressPending = progress;
                    } else {
                        PhotoViewer.this.videoPlayer.seekTo((long) ((int) (((float) duration) * progress)));
                    }
                    PhotoViewer.this.showVideoSeekPreviewPosition(false);
                    boolean unused2 = PhotoViewer.this.needShowOnReady = false;
                }
            }

            public void onSeekBarContinuousDrag(float progress) {
                if (!(PhotoViewer.this.videoPlayer == null || PhotoViewer.this.videoPreviewFrame == null)) {
                    PhotoViewer.this.videoPreviewFrame.setProgress(progress, PhotoViewer.this.videoPlayerSeekbar.getWidth());
                }
                PhotoViewer.this.showVideoSeekPreviewPosition(true);
                PhotoViewer.this.updateVideoSeekPreviewPosition();
            }
        };
        FloatSeekBarAccessibilityDelegate accessibilityDelegate = new FloatSeekBarAccessibilityDelegate() {
            public float getProgress() {
                return PhotoViewer.this.videoPlayerSeekbar.getProgress();
            }

            public void setProgress(float progress) {
                seekBarDelegate.onSeekBarDrag(progress);
                PhotoViewer.this.videoPlayerSeekbar.setProgress(progress);
                PhotoViewer.this.videoPlayerSeekbarView.invalidate();
            }

            public String getContentDescription(View host) {
                return LocaleController.formatString("AccDescrPlayerDuration", NUM, LocaleController.formatPluralString("Minutes", PhotoViewer.this.videoPlayerCurrentTime[0], new Object[0]) + ' ' + LocaleController.formatPluralString("Seconds", PhotoViewer.this.videoPlayerCurrentTime[1], new Object[0]), LocaleController.formatPluralString("Minutes", PhotoViewer.this.videoPlayerTotalTime[0], new Object[0]) + ' ' + LocaleController.formatPluralString("Seconds", PhotoViewer.this.videoPlayerTotalTime[1], new Object[0]));
            }
        };
        AnonymousClass48 r4 = new View(this.containerView.getContext()) {
            /* access modifiers changed from: protected */
            public void onDraw(Canvas canvas) {
                PhotoViewer.this.videoPlayerSeekbar.draw(canvas, this);
            }
        };
        this.videoPlayerSeekbarView = r4;
        r4.setAccessibilityDelegate(accessibilityDelegate);
        this.videoPlayerSeekbarView.setImportantForAccessibility(1);
        this.videoPlayerControlFrameLayout.addView(this.videoPlayerSeekbarView, LayoutHelper.createFrame(-1, -1.0f));
        VideoPlayerSeekBar videoPlayerSeekBar = new VideoPlayerSeekBar(this.videoPlayerSeekbarView);
        this.videoPlayerSeekbar = videoPlayerSeekBar;
        videoPlayerSeekBar.setHorizontalPadding(AndroidUtilities.dp(2.0f));
        this.videoPlayerSeekbar.setColors(NUM, NUM, -1, -1, -1, NUM);
        this.videoPlayerSeekbar.setDelegate(seekBarDelegate);
        AnonymousClass49 r42 = new VideoSeekPreviewImage(this.containerView.getContext(), new PhotoViewer$$ExternalSyntheticLambda78(this)) {
            /* access modifiers changed from: protected */
            public void onLayout(boolean changed, int left, int top, int right, int bottom) {
                super.onLayout(changed, left, top, right, bottom);
                PhotoViewer.this.updateVideoSeekPreviewPosition();
            }

            public void setVisibility(int visibility) {
                super.setVisibility(visibility);
                if (visibility == 0) {
                    PhotoViewer.this.updateVideoSeekPreviewPosition();
                }
            }
        };
        this.videoPreviewFrame = r42;
        r42.setAlpha(0.0f);
        this.containerView.addView(this.videoPreviewFrame, LayoutHelper.createFrame(-2, -2.0f, 83, 0.0f, 0.0f, 0.0f, 58.0f));
        SimpleTextView simpleTextView = new SimpleTextView(this.containerView.getContext());
        this.videoPlayerTime = simpleTextView;
        simpleTextView.setTextColor(-1);
        this.videoPlayerTime.setGravity(53);
        this.videoPlayerTime.setTextSize(14);
        this.videoPlayerTime.setImportantForAccessibility(2);
        this.videoPlayerControlFrameLayout.addView(this.videoPlayerTime, LayoutHelper.createFrame(-2, -2.0f, 53, 0.0f, 15.0f, 12.0f, 0.0f));
        ImageView imageView = new ImageView(this.containerView.getContext());
        this.exitFullscreenButton = imageView;
        imageView.setImageResource(NUM);
        this.exitFullscreenButton.setContentDescription(LocaleController.getString("AccExitFullscreen", NUM));
        this.exitFullscreenButton.setScaleType(ImageView.ScaleType.CENTER);
        this.exitFullscreenButton.setBackground(Theme.createSelectorDrawable(NUM));
        this.exitFullscreenButton.setVisibility(4);
        this.videoPlayerControlFrameLayout.addView(this.exitFullscreenButton, LayoutHelper.createFrame(48, 48, 53));
        this.exitFullscreenButton.setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda8(this));
    }

    /* renamed from: lambda$createVideoControlsInterface$48$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4243xfCLASSNAMEaa91() {
        if (this.needShowOnReady) {
            showVideoSeekPreviewPosition(true);
        }
    }

    /* renamed from: lambda$createVideoControlsInterface$49$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4244x25928var_(View v) {
        Activity activity = this.parentActivity;
        if (activity != null) {
            this.wasRotated = false;
            this.fullscreenedByButton = 2;
            if (this.prevOrientation == -10) {
                this.prevOrientation = activity.getRequestedOrientation();
            }
            this.parentActivity.setRequestedOrientation(1);
        }
    }

    private void openCaptionEnter() {
        int i;
        if (this.imageMoveAnimation == null && this.changeModeAnimation == null && this.currentEditMode == 0 && (i = this.sendPhotoType) != 1 && i != 3 && i != 10) {
            if (!this.windowView.isFocusable()) {
                makeFocusable();
            }
            this.keyboardAnimationEnabled = true;
            this.selectedPhotosListView.setEnabled(false);
            this.photosCounterView.setRotationX(0.0f);
            this.isPhotosListViewVisible = false;
            this.captionEditText.setTag(1);
            this.captionEditText.openKeyboard();
            this.captionEditText.setImportantForAccessibility(0);
            this.lastTitle = this.actionBar.getTitle();
            this.captionEditText.setVisibility(0);
        }
    }

    private int[] fixVideoWidthHeight(int w, int h) {
        int[] result = {w, h};
        if (Build.VERSION.SDK_INT >= 21) {
            MediaCodec encoder = null;
            try {
                encoder = MediaCodec.createEncoderByType("video/avc");
                MediaCodecInfo.VideoCapabilities videoCapabilities = encoder.getCodecInfo().getCapabilitiesForType("video/avc").getVideoCapabilities();
                Range<Integer> widths = videoCapabilities.getSupportedWidths();
                Range<Integer> heights = videoCapabilities.getSupportedHeights();
                result[0] = Math.max(widths.getLower().intValue(), Math.round(((float) w) / 16.0f) * 16);
                result[1] = Math.max(heights.getLower().intValue(), Math.round(((float) h) / 16.0f) * 16);
                if (encoder != null) {
                    try {
                        encoder.release();
                    } catch (Exception e) {
                    }
                }
            } catch (Exception e2) {
                if (encoder != null) {
                    encoder.release();
                }
            } catch (Throwable th) {
                if (encoder != null) {
                    try {
                        encoder.release();
                    } catch (Exception e3) {
                    }
                }
                throw th;
            }
        }
        return result;
    }

    /* access modifiers changed from: private */
    public VideoEditedInfo getCurrentVideoEditedInfo() {
        int i = -1;
        boolean z = false;
        ArrayList<VideoEditedInfo.MediaEntity> arrayList = null;
        if (!this.isCurrentVideo && hasAnimatedMediaEntities() && this.centerImage.getBitmapWidth() > 0) {
            float maxSize = this.sendPhotoType == 1 ? 800.0f : 854.0f;
            VideoEditedInfo videoEditedInfo = new VideoEditedInfo();
            videoEditedInfo.startTime = 0;
            videoEditedInfo.start = (float) 0;
            videoEditedInfo.endTime = Math.min(3000, this.editState.averageDuration);
            while (videoEditedInfo.endTime > 0 && videoEditedInfo.endTime < 1000) {
                videoEditedInfo.endTime *= 2;
            }
            videoEditedInfo.end = (float) videoEditedInfo.endTime;
            videoEditedInfo.rotationValue = 0;
            videoEditedInfo.originalPath = this.currentImagePath;
            videoEditedInfo.estimatedSize = (long) ((int) ((((float) videoEditedInfo.endTime) / 1000.0f) * 115200.0f));
            videoEditedInfo.estimatedDuration = videoEditedInfo.endTime;
            videoEditedInfo.framerate = 30;
            videoEditedInfo.originalDuration = videoEditedInfo.endTime;
            videoEditedInfo.filterState = this.editState.savedFilterState;
            if (this.editState.croppedPaintPath != null) {
                videoEditedInfo.paintPath = this.editState.croppedPaintPath;
                if (this.editState.croppedMediaEntities != null && !this.editState.croppedMediaEntities.isEmpty()) {
                    arrayList = this.editState.croppedMediaEntities;
                }
                videoEditedInfo.mediaEntities = arrayList;
            } else {
                videoEditedInfo.paintPath = this.editState.paintPath;
                videoEditedInfo.mediaEntities = this.editState.mediaEntities;
            }
            videoEditedInfo.isPhoto = true;
            int width = this.centerImage.getBitmapWidth();
            int height = this.centerImage.getBitmapHeight();
            if (this.editState.cropState != null) {
                if (this.editState.cropState.transformRotation == 90 || this.editState.cropState.transformRotation == 270) {
                    int temp = width;
                    width = height;
                    height = temp;
                }
                width = (int) (((float) width) * this.editState.cropState.cropPw);
                height = (int) (((float) height) * this.editState.cropState.cropPh);
            }
            if (this.sendPhotoType == 1) {
                width = height;
            }
            float scale2 = Math.max(((float) width) / maxSize, ((float) height) / maxSize);
            if (scale2 < 1.0f) {
                scale2 = 1.0f;
            }
            int width2 = (int) (((float) width) / scale2);
            int height2 = (int) (((float) height) / scale2);
            if (width2 % 16 != 0) {
                width2 = Math.max(1, Math.round(((float) width2) / 16.0f)) * 16;
            }
            if (height2 % 16 != 0) {
                height2 = Math.max(1, Math.round(((float) height2) / 16.0f)) * 16;
            }
            videoEditedInfo.resultWidth = width2;
            videoEditedInfo.originalWidth = width2;
            videoEditedInfo.resultHeight = height2;
            videoEditedInfo.originalHeight = height2;
            videoEditedInfo.bitrate = -1;
            videoEditedInfo.muted = true;
            videoEditedInfo.avatarStartTime = 0;
            return videoEditedInfo;
        } else if (!this.isCurrentVideo || this.currentPlayingVideoFile == null || this.compressionsCount == 0) {
            return null;
        } else {
            VideoEditedInfo videoEditedInfo2 = new VideoEditedInfo();
            videoEditedInfo2.startTime = this.startTime;
            videoEditedInfo2.endTime = this.endTime;
            videoEditedInfo2.start = this.videoCutStart;
            videoEditedInfo2.end = this.videoCutEnd;
            videoEditedInfo2.rotationValue = this.rotationValue;
            videoEditedInfo2.originalWidth = this.originalWidth;
            videoEditedInfo2.originalHeight = this.originalHeight;
            videoEditedInfo2.bitrate = this.bitrate;
            videoEditedInfo2.originalPath = this.currentPathObject;
            long j = this.estimatedSize;
            if (j == 0) {
                j = 1;
            }
            videoEditedInfo2.estimatedSize = j;
            videoEditedInfo2.estimatedDuration = this.estimatedDuration;
            videoEditedInfo2.framerate = this.videoFramerate;
            videoEditedInfo2.originalDuration = (long) (this.videoDuration * 1000.0f);
            videoEditedInfo2.filterState = this.editState.savedFilterState;
            if (this.editState.croppedPaintPath != null) {
                videoEditedInfo2.paintPath = this.editState.croppedPaintPath;
                if (this.editState.croppedMediaEntities != null && !this.editState.croppedMediaEntities.isEmpty()) {
                    arrayList = this.editState.croppedMediaEntities;
                }
                videoEditedInfo2.mediaEntities = arrayList;
            } else {
                videoEditedInfo2.paintPath = this.editState.paintPath;
                if (this.editState.mediaEntities != null && !this.editState.mediaEntities.isEmpty()) {
                    arrayList = this.editState.mediaEntities;
                }
                videoEditedInfo2.mediaEntities = arrayList;
            }
            if (this.sendPhotoType == 1 || this.muteVideo || !(this.compressItem.getTag() == null || (videoEditedInfo2.resultWidth == this.originalWidth && videoEditedInfo2.resultHeight == this.originalHeight))) {
                if (this.muteVideo || this.sendPhotoType == 1) {
                    this.selectedCompression = 1;
                    updateWidthHeightBitrateForCompression();
                }
                videoEditedInfo2.resultWidth = this.resultWidth;
                videoEditedInfo2.resultHeight = this.resultHeight;
                if (!this.muteVideo && this.sendPhotoType != 1) {
                    i = this.bitrate;
                }
                videoEditedInfo2.bitrate = i;
            } else {
                videoEditedInfo2.resultWidth = this.originalWidth;
                videoEditedInfo2.resultHeight = this.originalHeight;
                if (!this.muteVideo) {
                    i = this.originalBitrate;
                }
                videoEditedInfo2.bitrate = i;
            }
            videoEditedInfo2.cropState = this.editState.cropState;
            if (videoEditedInfo2.cropState != null) {
                videoEditedInfo2.rotationValue += videoEditedInfo2.cropState.transformRotation;
                while (videoEditedInfo2.rotationValue >= 360) {
                    videoEditedInfo2.rotationValue -= 360;
                }
                if (videoEditedInfo2.rotationValue == 90 || videoEditedInfo2.rotationValue == 270) {
                    videoEditedInfo2.cropState.transformWidth = (int) (((float) videoEditedInfo2.resultWidth) * videoEditedInfo2.cropState.cropPh);
                    videoEditedInfo2.cropState.transformHeight = (int) (((float) videoEditedInfo2.resultHeight) * videoEditedInfo2.cropState.cropPw);
                } else {
                    videoEditedInfo2.cropState.transformWidth = (int) (((float) videoEditedInfo2.resultWidth) * videoEditedInfo2.cropState.cropPw);
                    videoEditedInfo2.cropState.transformHeight = (int) (((float) videoEditedInfo2.resultHeight) * videoEditedInfo2.cropState.cropPh);
                }
                if (this.sendPhotoType == 1) {
                    if (videoEditedInfo2.cropState.transformWidth > 800) {
                        videoEditedInfo2.cropState.transformWidth = 800;
                    }
                    if (videoEditedInfo2.cropState.transformHeight > 800) {
                        videoEditedInfo2.cropState.transformHeight = 800;
                    }
                    MediaController.CropState cropState = videoEditedInfo2.cropState;
                    MediaController.CropState cropState2 = videoEditedInfo2.cropState;
                    int min = Math.min(videoEditedInfo2.cropState.transformWidth, videoEditedInfo2.cropState.transformHeight);
                    cropState2.transformHeight = min;
                    cropState.transformWidth = min;
                }
                if (BuildVars.LOGS_ENABLED) {
                    FileLog.d("original transformed w = " + videoEditedInfo2.cropState.transformWidth + " h = " + videoEditedInfo2.cropState.transformHeight + " r = " + videoEditedInfo2.rotationValue);
                }
                int[] fixedSize = fixVideoWidthHeight(videoEditedInfo2.cropState.transformWidth, videoEditedInfo2.cropState.transformHeight);
                videoEditedInfo2.cropState.transformWidth = fixedSize[0];
                videoEditedInfo2.cropState.transformHeight = fixedSize[1];
                if (BuildVars.LOGS_ENABLED) {
                    FileLog.d("fixed transformed w = " + videoEditedInfo2.cropState.transformWidth + " h = " + videoEditedInfo2.cropState.transformHeight);
                }
            }
            if (this.sendPhotoType == 1) {
                videoEditedInfo2.avatarStartTime = this.avatarStartTime;
                videoEditedInfo2.originalBitrate = this.originalBitrate;
            }
            if (this.muteVideo || this.sendPhotoType == 1) {
                z = true;
            }
            videoEditedInfo2.muted = z;
            return videoEditedInfo2;
        }
    }

    private boolean supportsSendingNewEntities() {
        ChatActivity chatActivity = this.parentChatActivity;
        return chatActivity != null && (chatActivity.currentEncryptedChat == null || AndroidUtilities.getPeerLayerVersion(this.parentChatActivity.currentEncryptedChat.layer) >= 101);
    }

    /* access modifiers changed from: private */
    public void closeCaptionEnter(boolean apply) {
        int i = this.currentIndex;
        if (i >= 0 && i < this.imagesArrLocals.size() && this.captionEditText.getTag() != null) {
            Object object = this.imagesArrLocals.get(this.currentIndex);
            if (apply) {
                CharSequence caption = this.captionEditText.getFieldCharSequence();
                CharSequence[] result = {caption};
                if (this.hasCaptionForAllMedia && !TextUtils.equals(this.captionForAllMedia, caption) && this.placeProvider.getPhotoIndex(this.currentIndex) != 0 && this.placeProvider.getSelectedCount() > 0) {
                    this.hasCaptionForAllMedia = false;
                }
                ArrayList<TLRPC.MessageEntity> entities = MediaDataController.getInstance(this.currentAccount).getEntities(result, supportsSendingNewEntities());
                this.captionForAllMedia = caption;
                if (object instanceof MediaController.PhotoEntry) {
                    MediaController.PhotoEntry photoEntry = (MediaController.PhotoEntry) object;
                    photoEntry.caption = result[0];
                    photoEntry.entities = entities;
                } else if (object instanceof MediaController.SearchImage) {
                    MediaController.SearchImage photoEntry2 = (MediaController.SearchImage) object;
                    photoEntry2.caption = result[0];
                    photoEntry2.entities = entities;
                }
                if (this.captionEditText.getFieldCharSequence().length() != 0 && !this.placeProvider.isPhotoChecked(this.currentIndex)) {
                    setPhotoChecked();
                }
                PhotoViewerProvider photoViewerProvider = this.placeProvider;
                if (photoViewerProvider != null) {
                    photoViewerProvider.onApplyCaption(caption);
                }
                setCurrentCaption((MessageObject) null, result[0], false);
            }
            this.captionEditText.setTag((Object) null);
            if (this.isCurrentVideo) {
                this.actionBar.setTitleAnimated(this.lastTitle, false, 220);
                this.actionBar.setSubtitle(this.muteVideo ? LocaleController.getString("SoundMuted", NUM) : this.currentSubtitle);
            }
            updateCaptionTextForCurrentPhoto(object);
            if (this.captionEditText.isPopupShowing()) {
                this.captionEditText.hidePopup();
            }
            this.captionEditText.closeKeyboard();
            if (Build.VERSION.SDK_INT >= 19) {
                this.captionEditText.setImportantForAccessibility(4);
            }
        }
    }

    /* access modifiers changed from: private */
    public void updateVideoPlayerTime() {
        Arrays.fill(this.videoPlayerCurrentTime, 0);
        Arrays.fill(this.videoPlayerTotalTime, 0);
        VideoPlayer videoPlayer2 = this.videoPlayer;
        if (videoPlayer2 != null) {
            long current = Math.max(0, videoPlayer2.getCurrentPosition());
            if (this.shownControlsByEnd && !this.actionBarWasShownBeforeByEnd) {
                current = 0;
            }
            long total = Math.max(0, this.videoPlayer.getDuration());
            if (!this.inPreview && this.videoTimelineView.getVisibility() == 0) {
                total = (long) (((float) total) * (this.videoTimelineView.getRightProgress() - this.videoTimelineView.getLeftProgress()));
                current = (long) (((float) current) - (this.videoTimelineView.getLeftProgress() * ((float) total)));
                if (current > total) {
                    current = total;
                }
            }
            long current2 = current / 1000;
            long total2 = total / 1000;
            int[] iArr = this.videoPlayerCurrentTime;
            iArr[0] = (int) (current2 / 60);
            iArr[1] = (int) (current2 % 60);
            int[] iArr2 = this.videoPlayerTotalTime;
            iArr2[0] = (int) (total2 / 60);
            iArr2[1] = (int) (total2 % 60);
        }
        this.videoPlayerTime.setText(String.format(Locale.ROOT, "%02d:%02d / %02d:%02d", new Object[]{Integer.valueOf(this.videoPlayerCurrentTime[0]), Integer.valueOf(this.videoPlayerCurrentTime[1]), Integer.valueOf(this.videoPlayerTotalTime[0]), Integer.valueOf(this.videoPlayerTotalTime[1])}));
    }

    private void checkBufferedProgress(float progress) {
        MessageObject messageObject;
        TLRPC.Document document;
        if (this.isStreaming && this.parentActivity != null && !this.streamingAlertShown && this.videoPlayer != null && (messageObject = this.currentMessageObject) != null && (document = messageObject.getDocument()) != null && this.currentMessageObject.getDuration() >= 20 && progress < 0.9f) {
            if ((((float) document.size) * progress >= 5242880.0f || (progress >= 0.5f && document.size >= 2097152)) && Math.abs(SystemClock.elapsedRealtime() - this.startedPlayTime) >= 2000) {
                if (this.videoPlayer.getDuration() == -9223372036854775807L) {
                    Toast.makeText(this.parentActivity, LocaleController.getString("VideoDoesNotSupportStreaming", NUM), 1).show();
                }
                this.streamingAlertShown = true;
            }
        }
    }

    public void updateColors() {
        String str;
        int color = getThemedColor("dialogFloatingButton");
        ImageView imageView = this.pickerViewSendButton;
        if (imageView != null) {
            Drawable drawable = imageView.getBackground();
            Theme.setSelectorDrawableColor(drawable, color, false);
            if (Build.VERSION.SDK_INT >= 21) {
                str = "dialogFloatingButtonPressed";
            } else {
                str = "dialogFloatingButton";
            }
            Theme.setSelectorDrawableColor(drawable, getThemedColor(str), true);
            this.pickerViewSendButton.setColorFilter(new PorterDuffColorFilter(getThemedColor("dialogFloatingIcon"), PorterDuff.Mode.MULTIPLY));
        }
        CheckBox checkBox = this.checkImageView;
        if (checkBox != null) {
            checkBox.setColor(getThemedColor("dialogFloatingButton"), -1);
        }
        PorterDuffColorFilter filter = new PorterDuffColorFilter(color, PorterDuff.Mode.MULTIPLY);
        ImageView imageView2 = this.timeItem;
        if (!(imageView2 == null || imageView2.getColorFilter() == null)) {
            this.timeItem.setColorFilter(filter);
        }
        ImageView imageView3 = this.paintItem;
        if (!(imageView3 == null || imageView3.getColorFilter() == null)) {
            this.paintItem.setColorFilter(filter);
        }
        ImageView imageView4 = this.cropItem;
        if (!(imageView4 == null || imageView4.getColorFilter() == null)) {
            this.cropItem.setColorFilter(filter);
        }
        ImageView imageView5 = this.tuneItem;
        if (!(imageView5 == null || imageView5.getColorFilter() == null)) {
            this.tuneItem.setColorFilter(filter);
        }
        ImageView imageView6 = this.rotateItem;
        if (!(imageView6 == null || imageView6.getColorFilter() == null)) {
            this.rotateItem.setColorFilter(filter);
        }
        ImageView imageView7 = this.mirrorItem;
        if (!(imageView7 == null || imageView7.getColorFilter() == null)) {
            this.mirrorItem.setColorFilter(filter);
        }
        PickerBottomLayoutViewer pickerBottomLayoutViewer = this.editorDoneLayout;
        if (pickerBottomLayoutViewer != null) {
            pickerBottomLayoutViewer.doneButton.setTextColor(color);
        }
        PickerBottomLayoutViewer pickerBottomLayoutViewer2 = this.qualityPicker;
        if (pickerBottomLayoutViewer2 != null) {
            pickerBottomLayoutViewer2.doneButton.setTextColor(color);
        }
        PhotoPaintView photoPaintView2 = this.photoPaintView;
        if (photoPaintView2 != null) {
            photoPaintView2.updateColors();
        }
        PhotoFilterView photoFilterView2 = this.photoFilterView;
        if (photoFilterView2 != null) {
            photoFilterView2.updateColors();
        }
        PhotoViewerCaptionEnterView photoViewerCaptionEnterView = this.captionEditText;
        if (photoViewerCaptionEnterView != null) {
            photoViewerCaptionEnterView.updateColors();
        }
        VideoTimelinePlayView videoTimelinePlayView = this.videoTimelineView;
        if (videoTimelinePlayView != null) {
            videoTimelinePlayView.invalidate();
        }
        SelectedPhotosListView selectedPhotosListView2 = this.selectedPhotosListView;
        if (selectedPhotosListView2 != null) {
            int count = selectedPhotosListView2.getChildCount();
            for (int a = 0; a < count; a++) {
                View view = this.selectedPhotosListView.getChildAt(a);
                if (view instanceof PhotoPickerPhotoCell) {
                    ((PhotoPickerPhotoCell) view).updateColors();
                }
            }
        }
        StickersAlert stickersAlert = this.masksAlert;
        if (stickersAlert != null) {
            stickersAlert.updateColors(true);
        }
    }

    public void injectVideoPlayer(VideoPlayer player) {
        this.injectingVideoPlayer = player;
    }

    public void injectVideoPlayerSurface(SurfaceTexture surface) {
        this.injectingVideoPlayerSurface = surface;
    }

    public boolean isInjectingVideoPlayer() {
        return this.injectingVideoPlayer != null;
    }

    /* access modifiers changed from: private */
    public void scheduleActionBarHide() {
        scheduleActionBarHide(3000);
    }

    private void scheduleActionBarHide(int delay) {
        if (!isAccessibilityEnabled()) {
            AndroidUtilities.cancelRunOnUIThread(this.hideActionBarRunnable);
            AndroidUtilities.runOnUIThread(this.hideActionBarRunnable, (long) delay);
        }
    }

    private boolean isAccessibilityEnabled() {
        try {
            AccessibilityManager am = (AccessibilityManager) this.activityContext.getSystemService("accessibility");
            if (!am.isEnabled() || !am.isTouchExplorationEnabled()) {
                return false;
            }
            return true;
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            return false;
        }
    }

    /* access modifiers changed from: private */
    public void updatePlayerState(boolean playWhenReady, int playbackState) {
        MessageObject messageObject;
        if (this.videoPlayer != null) {
            float f = 0.0f;
            if (this.isStreaming) {
                if (playbackState != 2 || !this.skipFirstBufferingProgress) {
                    boolean buffering = this.seekToProgressPending != 0.0f || playbackState == 2;
                    if (buffering) {
                        AndroidUtilities.cancelRunOnUIThread(this.hideActionBarRunnable);
                    } else {
                        scheduleActionBarHide();
                    }
                    toggleMiniProgress(buffering, true);
                } else if (playWhenReady) {
                    this.skipFirstBufferingProgress = false;
                }
            }
            AspectRatioFrameLayout aspectRatioFrameLayout2 = this.aspectRatioFrameLayout;
            int i = 4;
            if (aspectRatioFrameLayout2 != null) {
                aspectRatioFrameLayout2.setKeepScreenOn((!playWhenReady || playbackState == 4 || playbackState == 1) ? false : true);
            }
            if (!playWhenReady || playbackState == 4 || playbackState == 1) {
                try {
                    this.parentActivity.getWindow().clearFlags(128);
                    this.keepScreenOnFlagSet = false;
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                }
            } else {
                try {
                    this.parentActivity.getWindow().addFlags(128);
                    this.keepScreenOnFlagSet = true;
                } catch (Exception e2) {
                    FileLog.e((Throwable) e2);
                }
            }
            if (playbackState == 3 || playbackState == 1) {
                if (this.currentMessageObject != null) {
                    this.videoPreviewFrame.open(this.videoPlayer.getCurrentUri());
                }
                if (this.seekToProgressPending != 0.0f) {
                    this.videoPlayer.seekTo((long) ((int) (((float) this.videoPlayer.getDuration()) * this.seekToProgressPending)));
                    this.seekToProgressPending = 0.0f;
                    MessageObject messageObject2 = this.currentMessageObject;
                    if (messageObject2 != null && !FileLoader.getInstance(messageObject2.currentAccount).isLoadingVideoAny(this.currentMessageObject.getDocument())) {
                        this.skipFirstBufferingProgress = true;
                    }
                }
            }
            if (playbackState == 3) {
                if (this.aspectRatioFrameLayout.getVisibility() != 0) {
                    this.aspectRatioFrameLayout.setVisibility(0);
                }
                if (!this.pipItem.isEnabled() && this.pipItem.getVisibility() == 0) {
                    this.pipAvailable = true;
                    this.pipItem.setEnabled(true);
                    this.pipItem.animate().alpha(1.0f).setDuration(175).withEndAction((Runnable) null).start();
                }
                this.playerWasReady = true;
                MessageObject messageObject3 = this.currentMessageObject;
                if (messageObject3 != null && messageObject3.isVideo()) {
                    AndroidUtilities.cancelRunOnUIThread(this.setLoadingRunnable);
                    FileLoader.getInstance(this.currentMessageObject.currentAccount).removeLoadingVideo(this.currentMessageObject.getDocument(), true, false);
                }
            } else if (playbackState == 2 && playWhenReady && (messageObject = this.currentMessageObject) != null && messageObject.isVideo()) {
                if (this.playerWasReady) {
                    this.setLoadingRunnable.run();
                } else {
                    AndroidUtilities.runOnUIThread(this.setLoadingRunnable, 1000);
                }
            }
            long j = 0;
            if (!this.videoPlayer.isPlaying() || playbackState == 4) {
                if (this.isPlaying || playbackState == 4) {
                    if (this.currentEditMode != 3) {
                        this.photoProgressViews[0].setIndexedAlpha(1, 1.0f, playbackState == 4);
                        PhotoProgressView[] photoProgressViewArr = this.photoProgressViews;
                        photoProgressViewArr[0].setBackgroundState(3, false, photoProgressViewArr[0].animAlphas[1] > 0.0f);
                    }
                    this.isPlaying = false;
                    AndroidUtilities.cancelRunOnUIThread(this.updateProgressRunnable);
                    if (playbackState == 4) {
                        if (!this.isCurrentVideo) {
                            this.videoPlayerSeekbar.setProgress(0.0f);
                            this.videoPlayerSeekbarView.invalidate();
                            if (this.inPreview || this.videoTimelineView.getVisibility() != 0) {
                                this.videoPlayer.seekTo(0);
                            } else {
                                this.videoPlayer.seekTo((long) ((int) (this.videoTimelineView.getLeftProgress() * ((float) this.videoPlayer.getDuration()))));
                            }
                            this.manuallyPaused = false;
                            this.videoPlayer.pause();
                            if (!this.isActionBarVisible) {
                                toggleActionBar(true, true);
                            }
                        } else if (!this.videoTimelineView.isDragging()) {
                            VideoTimelinePlayView videoTimelinePlayView = this.videoTimelineView;
                            videoTimelinePlayView.setProgress(videoTimelinePlayView.getLeftProgress());
                            if (this.inPreview || (this.currentEditMode == 0 && this.videoTimelineView.getVisibility() != 0)) {
                                this.videoPlayer.seekTo(0);
                            } else {
                                this.videoPlayer.seekTo((long) ((int) (this.videoTimelineView.getLeftProgress() * ((float) this.videoPlayer.getDuration()))));
                            }
                            this.manuallyPaused = false;
                            cancelVideoPlayRunnable();
                            if (this.sendPhotoType == 1 || this.currentEditMode != 0 || this.switchingToMode > 0) {
                                this.videoPlayer.play();
                            } else {
                                this.videoPlayer.pause();
                            }
                            this.containerView.invalidate();
                        }
                        PipVideoOverlay.onVideoCompleted();
                    }
                }
            } else if (!this.isPlaying) {
                this.isPlaying = true;
                PhotoProgressView photoProgressView = this.photoProgressViews[0];
                if (this.isCurrentVideo) {
                    i = -1;
                }
                photoProgressView.setBackgroundState(i, false, true);
                PhotoProgressView photoProgressView2 = this.photoProgressViews[0];
                if (this.isCurrentVideo || ((isAccessibilityEnabled() && !this.playerWasPlaying) || ((!this.playerAutoStarted || this.playerWasPlaying) && this.isActionBarVisible))) {
                    f = 1.0f;
                }
                photoProgressView2.setIndexedAlpha(1, f, false);
                this.playerWasPlaying = true;
                AndroidUtilities.runOnUIThread(this.updateProgressRunnable);
            }
            PipVideoOverlay.updatePlayButton();
            VideoPlayerSeekBar videoPlayerSeekBar = this.videoPlayerSeekbar;
            MessageObject messageObject4 = this.currentMessageObject;
            VideoPlayer videoPlayer2 = this.videoPlayer;
            if (videoPlayer2 != null) {
                j = videoPlayer2.getDuration();
            }
            videoPlayerSeekBar.updateTimestamps(messageObject4, j);
            updateVideoPlayerTime();
        }
    }

    private void preparePlayer(Uri uri, boolean playWhenReady, boolean preview) {
        preparePlayer(uri, playWhenReady, preview, (MediaController.SavedFilterState) null);
    }

    private void preparePlayer(Uri uri, boolean playWhenReady, boolean preview, MediaController.SavedFilterState savedFilterState) {
        Uri uri2 = uri;
        boolean z = preview;
        if (!z) {
            this.currentPlayingVideoFile = uri2;
        }
        if (this.parentActivity != null) {
            this.streamingAlertShown = false;
            this.startedPlayTime = SystemClock.elapsedRealtime();
            this.currentVideoFinishedLoading = false;
            this.lastBufferedPositionCheck = 0;
            this.firstAnimationDelay = true;
            this.inPreview = z;
            releasePlayer(false);
            if (this.imagesArrLocals.isEmpty()) {
                createVideoTextureView((MediaController.SavedFilterState) null);
            }
            if (Build.VERSION.SDK_INT >= 21 && this.textureImageView == null) {
                ImageView imageView = new ImageView(this.parentActivity);
                this.textureImageView = imageView;
                imageView.setBackgroundColor(-65536);
                this.textureImageView.setPivotX(0.0f);
                this.textureImageView.setPivotY(0.0f);
                this.textureImageView.setVisibility(4);
                this.containerView.addView(this.textureImageView);
            }
            checkFullscreenButton();
            if (this.orientationEventListener == null) {
                AnonymousClass50 r7 = new OrientationEventListener(ApplicationLoader.applicationContext) {
                    public void onOrientationChanged(int orientation) {
                        if (PhotoViewer.this.orientationEventListener != null && PhotoViewer.this.aspectRatioFrameLayout != null && PhotoViewer.this.aspectRatioFrameLayout.getVisibility() == 0 && PhotoViewer.this.parentActivity != null && PhotoViewer.this.fullscreenedByButton != 0) {
                            if (PhotoViewer.this.fullscreenedByButton == 1) {
                                if (orientation >= 240 && orientation <= 300) {
                                    boolean unused = PhotoViewer.this.wasRotated = true;
                                } else if (PhotoViewer.this.wasRotated && orientation > 0) {
                                    if (orientation >= 330 || orientation <= 30) {
                                        PhotoViewer.this.parentActivity.setRequestedOrientation(PhotoViewer.this.prevOrientation);
                                        int unused2 = PhotoViewer.this.fullscreenedByButton = 0;
                                        boolean unused3 = PhotoViewer.this.wasRotated = false;
                                    }
                                }
                            } else if (orientation > 0 && (orientation >= 330 || orientation <= 30)) {
                                boolean unused4 = PhotoViewer.this.wasRotated = true;
                            } else if (PhotoViewer.this.wasRotated && orientation >= 240 && orientation <= 300) {
                                PhotoViewer.this.parentActivity.setRequestedOrientation(PhotoViewer.this.prevOrientation);
                                int unused5 = PhotoViewer.this.fullscreenedByButton = 0;
                                boolean unused6 = PhotoViewer.this.wasRotated = false;
                            }
                        }
                    }
                };
                this.orientationEventListener = r7;
                if (r7.canDetectOrientation()) {
                    this.orientationEventListener.enable();
                } else {
                    this.orientationEventListener.disable();
                    this.orientationEventListener = null;
                }
            }
            this.textureUploaded = false;
            this.videoSizeSet = false;
            this.videoCrossfadeStarted = false;
            boolean newPlayerCreated = false;
            this.playerWasReady = false;
            this.playerWasPlaying = false;
            this.captureFrameReadyAtTime = -1;
            this.captureFrameAtTime = -1;
            this.needCaptureFrameReadyAtTime = -1;
            if (this.videoPlayer == null) {
                VideoPlayer videoPlayer2 = this.injectingVideoPlayer;
                if (videoPlayer2 != null) {
                    this.videoPlayer = videoPlayer2;
                    this.injectingVideoPlayer = null;
                    this.playerInjected = true;
                    updatePlayerState(videoPlayer2.getPlayWhenReady(), this.videoPlayer.getPlaybackState());
                } else {
                    this.videoPlayer = new VideoPlayer() {
                        public void play() {
                            super.play();
                            PhotoViewer.this.playOrStopAnimatedStickers(true);
                        }

                        public void pause() {
                            super.pause();
                            if (PhotoViewer.this.currentEditMode == 0) {
                                PhotoViewer.this.playOrStopAnimatedStickers(false);
                            }
                        }

                        public void seekTo(long positionMs) {
                            super.seekTo(positionMs);
                            if (PhotoViewer.this.isCurrentVideo) {
                                PhotoViewer.this.seekAnimatedStickersTo(positionMs);
                            }
                        }
                    };
                    newPlayerCreated = true;
                }
                TextureView textureView = this.videoTextureView;
                if (textureView != null) {
                    this.videoPlayer.setTextureView(textureView);
                }
                FirstFrameView firstFrameView2 = this.firstFrameView;
                if (firstFrameView2 != null) {
                    firstFrameView2.clear();
                }
                this.videoPlayer.setDelegate(new VideoPlayer.VideoPlayerDelegate() {
                    public /* synthetic */ void onSeekFinished(AnalyticsListener.EventTime eventTime) {
                        VideoPlayer.VideoPlayerDelegate.CC.$default$onSeekFinished(this, eventTime);
                    }

                    public /* synthetic */ void onSeekStarted(AnalyticsListener.EventTime eventTime) {
                        VideoPlayer.VideoPlayerDelegate.CC.$default$onSeekStarted(this, eventTime);
                    }

                    public void onStateChanged(boolean playWhenReady, int playbackState) {
                        PhotoViewer.this.updatePlayerState(playWhenReady, playbackState);
                    }

                    public void onError(VideoPlayer player, Exception e) {
                        if (PhotoViewer.this.videoPlayer == player) {
                            FileLog.e((Throwable) e);
                            if (PhotoViewer.this.menuItem.isSubItemVisible(11)) {
                                AlertDialog.Builder builder = new AlertDialog.Builder(PhotoViewer.this.parentActivity, PhotoViewer.this.resourcesProvider);
                                builder.setTitle(LocaleController.getString("AppName", NUM));
                                builder.setMessage(LocaleController.getString("CantPlayVideo", NUM));
                                builder.setPositiveButton(LocaleController.getString("Open", NUM), new PhotoViewer$52$$ExternalSyntheticLambda1(this));
                                builder.setNegativeButton(LocaleController.getString("Cancel", NUM), (DialogInterface.OnClickListener) null);
                                PhotoViewer.this.showAlertDialog(builder);
                            }
                        }
                    }

                    /* renamed from: lambda$onError$0$org-telegram-ui-PhotoViewer$52  reason: not valid java name */
                    public /* synthetic */ void m4318lambda$onError$0$orgtelegramuiPhotoViewer$52(DialogInterface dialog, int which) {
                        try {
                            AndroidUtilities.openForView(PhotoViewer.this.currentMessageObject, PhotoViewer.this.parentActivity, PhotoViewer.this.resourcesProvider);
                            PhotoViewer.this.closePhoto(false, false);
                        } catch (Exception e1) {
                            FileLog.e((Throwable) e1);
                        }
                    }

                    public void onVideoSizeChanged(int width, int height, int unappliedRotationDegrees, float pixelWidthHeightRatio) {
                        if (PhotoViewer.this.aspectRatioFrameLayout != null) {
                            if (unappliedRotationDegrees == 90 || unappliedRotationDegrees == 270) {
                                int temp = width;
                                width = height;
                                height = temp;
                            }
                            int unused = PhotoViewer.this.videoWidth = (int) (((float) width) * pixelWidthHeightRatio);
                            int unused2 = PhotoViewer.this.videoHeight = (int) (((float) height) * pixelWidthHeightRatio);
                            PhotoViewer.this.aspectRatioFrameLayout.setAspectRatio(height == 0 ? 1.0f : (((float) width) * pixelWidthHeightRatio) / ((float) height), unappliedRotationDegrees);
                            if (PhotoViewer.this.videoTextureView instanceof VideoEditTextureView) {
                                ((VideoEditTextureView) PhotoViewer.this.videoTextureView).setVideoSize((int) (((float) width) * pixelWidthHeightRatio), height);
                                if (PhotoViewer.this.sendPhotoType == 1) {
                                    PhotoViewer.this.setCropBitmap();
                                }
                            }
                            boolean unused3 = PhotoViewer.this.videoSizeSet = true;
                        }
                    }

                    public void onRenderedFirstFrame() {
                        if (!PhotoViewer.this.textureUploaded) {
                            boolean unused = PhotoViewer.this.textureUploaded = true;
                            PhotoViewer.this.containerView.invalidate();
                        }
                        if (PhotoViewer.this.firstFrameView == null) {
                            return;
                        }
                        if (PhotoViewer.this.videoPlayer == null || !PhotoViewer.this.videoPlayer.isLooping()) {
                            AndroidUtilities.runOnUIThread(new PhotoViewer$52$$ExternalSyntheticLambda2(this), 64);
                        }
                    }

                    /* renamed from: lambda$onRenderedFirstFrame$1$org-telegram-ui-PhotoViewer$52  reason: not valid java name */
                    public /* synthetic */ void m4319lambda$onRenderedFirstFrame$1$orgtelegramuiPhotoViewer$52() {
                        PhotoViewer.this.firstFrameView.updateAlpha();
                    }

                    public void onRenderedFirstFrame(AnalyticsListener.EventTime eventTime) {
                        if (eventTime.eventPlaybackPositionMs == PhotoViewer.this.needCaptureFrameReadyAtTime) {
                            long unused = PhotoViewer.this.captureFrameReadyAtTime = eventTime.eventPlaybackPositionMs;
                            long unused2 = PhotoViewer.this.needCaptureFrameReadyAtTime = -1;
                            PhotoViewer.this.captureCurrentFrame();
                        }
                        if (PhotoViewer.this.firstFrameView == null) {
                            return;
                        }
                        if (PhotoViewer.this.videoPlayer == null || !PhotoViewer.this.videoPlayer.isLooping()) {
                            AndroidUtilities.runOnUIThread(new PhotoViewer$52$$ExternalSyntheticLambda3(this), 64);
                        }
                    }

                    /* renamed from: lambda$onRenderedFirstFrame$2$org-telegram-ui-PhotoViewer$52  reason: not valid java name */
                    public /* synthetic */ void m4320lambda$onRenderedFirstFrame$2$orgtelegramuiPhotoViewer$52() {
                        PhotoViewer.this.firstFrameView.updateAlpha();
                    }

                    public boolean onSurfaceDestroyed(SurfaceTexture surfaceTexture) {
                        if (PhotoViewer.this.changingTextureView) {
                            boolean unused = PhotoViewer.this.changingTextureView = false;
                            if (PhotoViewer.this.isInline) {
                                int unused2 = PhotoViewer.this.waitingForFirstTextureUpload = 1;
                                PhotoViewer.this.changedTextureView.setSurfaceTexture(surfaceTexture);
                                PhotoViewer.this.changedTextureView.setSurfaceTextureListener(PhotoViewer.this.surfaceTextureListener);
                                PhotoViewer.this.changedTextureView.setVisibility(0);
                                return true;
                            }
                        }
                        return false;
                    }

                    public void onSurfaceTextureUpdated(SurfaceTexture surfaceTexture) {
                        if (PhotoViewer.this.waitingForFirstTextureUpload == 2) {
                            if (PhotoViewer.this.textureImageView != null) {
                                PhotoViewer.this.textureImageView.setVisibility(4);
                                PhotoViewer.this.textureImageView.setImageDrawable((Drawable) null);
                                if (PhotoViewer.this.currentBitmap != null) {
                                    PhotoViewer.this.currentBitmap.recycle();
                                    Bitmap unused = PhotoViewer.this.currentBitmap = null;
                                }
                            }
                            boolean unused2 = PhotoViewer.this.switchingInlineMode = false;
                            if (Build.VERSION.SDK_INT >= 21) {
                                PhotoViewer.this.aspectRatioFrameLayout.getLocationInWindow(PhotoViewer.this.pipPosition);
                                int[] access$22900 = PhotoViewer.this.pipPosition;
                                access$22900[1] = (int) (((float) access$22900[1]) - PhotoViewer.this.containerView.getTranslationY());
                                if (PhotoViewer.this.textureImageView != null) {
                                    PhotoViewer.this.textureImageView.setTranslationX(PhotoViewer.this.textureImageView.getTranslationX() + ((float) PhotoViewer.this.getLeftInset()));
                                }
                                if (PhotoViewer.this.videoTextureView != null) {
                                    PhotoViewer.this.videoTextureView.setTranslationX((PhotoViewer.this.videoTextureView.getTranslationX() + ((float) PhotoViewer.this.getLeftInset())) - PhotoViewer.this.aspectRatioFrameLayout.getX());
                                }
                                if (PhotoViewer.this.firstFrameView != null) {
                                    PhotoViewer.this.firstFrameView.setTranslationX(PhotoViewer.this.videoTextureView.getTranslationX());
                                }
                                AnimatorSet animatorSet = new AnimatorSet();
                                ArrayList<Animator> animators = new ArrayList<>();
                                animators.add(ObjectAnimator.ofFloat(PhotoViewer.this.textureImageView, View.SCALE_X, new float[]{1.0f}));
                                animators.add(ObjectAnimator.ofFloat(PhotoViewer.this.textureImageView, View.SCALE_Y, new float[]{1.0f}));
                                animators.add(ObjectAnimator.ofFloat(PhotoViewer.this.textureImageView, View.TRANSLATION_X, new float[]{(float) PhotoViewer.this.pipPosition[0]}));
                                animators.add(ObjectAnimator.ofFloat(PhotoViewer.this.textureImageView, View.TRANSLATION_Y, new float[]{(float) PhotoViewer.this.pipPosition[1]}));
                                animators.add(ObjectAnimator.ofFloat(PhotoViewer.this.videoTextureView, View.SCALE_X, new float[]{1.0f}));
                                animators.add(ObjectAnimator.ofFloat(PhotoViewer.this.videoTextureView, View.SCALE_Y, new float[]{1.0f}));
                                animators.add(ObjectAnimator.ofFloat(PhotoViewer.this.videoTextureView, View.TRANSLATION_X, new float[]{((float) PhotoViewer.this.pipPosition[0]) - PhotoViewer.this.aspectRatioFrameLayout.getX()}));
                                animators.add(ObjectAnimator.ofFloat(PhotoViewer.this.videoTextureView, View.TRANSLATION_Y, new float[]{((float) PhotoViewer.this.pipPosition[1]) - PhotoViewer.this.aspectRatioFrameLayout.getY()}));
                                animators.add(ObjectAnimator.ofInt(PhotoViewer.this.backgroundDrawable, AnimationProperties.COLOR_DRAWABLE_ALPHA, new int[]{255}));
                                if (PhotoViewer.this.firstFrameView != null) {
                                    animators.add(ObjectAnimator.ofFloat(PhotoViewer.this.firstFrameView, View.SCALE_X, new float[]{1.0f}));
                                    animators.add(ObjectAnimator.ofFloat(PhotoViewer.this.firstFrameView, View.SCALE_Y, new float[]{1.0f}));
                                    animators.add(ObjectAnimator.ofFloat(PhotoViewer.this.firstFrameView, View.TRANSLATION_X, new float[]{((float) PhotoViewer.this.pipPosition[0]) - PhotoViewer.this.aspectRatioFrameLayout.getX()}));
                                    animators.add(ObjectAnimator.ofFloat(PhotoViewer.this.firstFrameView, View.TRANSLATION_Y, new float[]{((float) PhotoViewer.this.pipPosition[1]) - PhotoViewer.this.aspectRatioFrameLayout.getY()}));
                                }
                                float width = PipVideoOverlay.getPipRect(false, PhotoViewer.this.aspectRatioFrameLayout.getAspectRatio()).width / ((float) PhotoViewer.this.videoTextureView.getWidth());
                                ValueAnimator valueAnimator = ValueAnimator.ofFloat(new float[]{0.0f, 1.0f});
                                valueAnimator.addUpdateListener(new PhotoViewer$52$$ExternalSyntheticLambda0(this));
                                animators.add(valueAnimator);
                                animatorSet.playTogether(animators);
                                DecelerateInterpolator interpolator = new DecelerateInterpolator();
                                animatorSet.setInterpolator(interpolator);
                                animatorSet.setDuration(250);
                                animatorSet.addListener(new AnimatorListenerAdapter() {
                                    public void onAnimationEnd(Animator animation) {
                                        boolean unused = PhotoViewer.this.pipAnimationInProgress = false;
                                        if (PhotoViewer.this.videoTextureView != null) {
                                            PhotoViewer.this.videoTextureView.setOutlineProvider((ViewOutlineProvider) null);
                                        }
                                        if (PhotoViewer.this.textureImageView != null) {
                                            PhotoViewer.this.textureImageView.setOutlineProvider((ViewOutlineProvider) null);
                                        }
                                        if (PhotoViewer.this.firstFrameView != null) {
                                            PhotoViewer.this.firstFrameView.setOutlineProvider((ViewOutlineProvider) null);
                                        }
                                    }
                                });
                                animatorSet.start();
                                PhotoViewer.this.toggleActionBar(true, true, new ActionBarToggleParams().enableStatusBarAnimation(false).enableTranslationAnimation(false).animationDuration(250).animationInterpolator(interpolator));
                            } else {
                                PhotoViewer.this.toggleActionBar(true, false);
                            }
                            int unused3 = PhotoViewer.this.waitingForFirstTextureUpload = 0;
                        }
                        if (PhotoViewer.this.firstFrameView != null) {
                            PhotoViewer.this.firstFrameView.checkFromPlayer(PhotoViewer.this.videoPlayer);
                        }
                    }

                    /* renamed from: lambda$onSurfaceTextureUpdated$3$org-telegram-ui-PhotoViewer$52  reason: not valid java name */
                    public /* synthetic */ void m4321lambda$onSurfaceTextureUpdated$3$orgtelegramuiPhotoViewer$52(ValueAnimator animation) {
                        float unused = PhotoViewer.this.inlineOutAnimationProgress = ((Float) animation.getAnimatedValue()).floatValue();
                        if (PhotoViewer.this.videoTextureView != null) {
                            PhotoViewer.this.videoTextureView.invalidateOutline();
                        }
                        if (PhotoViewer.this.textureImageView != null) {
                            PhotoViewer.this.textureImageView.invalidateOutline();
                        }
                        if (PhotoViewer.this.firstFrameView != null) {
                            PhotoViewer.this.firstFrameView.invalidateOutline();
                        }
                    }
                });
            }
            if (!this.imagesArrLocals.isEmpty()) {
                createVideoTextureView(savedFilterState);
            } else {
                MediaController.SavedFilterState savedFilterState2 = savedFilterState;
            }
            TextureView textureView2 = this.videoTextureView;
            this.videoCrossfadeAlpha = 0.0f;
            textureView2.setAlpha(0.0f);
            PaintingOverlay paintingOverlay2 = this.paintingOverlay;
            if (paintingOverlay2 != null) {
                paintingOverlay2.setAlpha(this.videoCrossfadeAlpha);
            }
            this.shouldSavePositionForCurrentVideo = null;
            this.shouldSavePositionForCurrentVideoShortTerm = null;
            this.lastSaveTime = 0;
            if (newPlayerCreated) {
                this.seekToProgressPending = this.seekToProgressPending2;
                this.videoPlayerSeekbar.setProgress(0.0f);
                this.videoTimelineView.setProgress(0.0f);
                this.videoPlayerSeekbar.setBufferedProgress(0.0f);
                MessageObject messageObject = this.currentMessageObject;
                if (messageObject != null) {
                    int duration = messageObject.getDuration();
                    String name = this.currentMessageObject.getFileName();
                    if (TextUtils.isEmpty(name)) {
                    } else if (duration >= 600) {
                        if (this.currentMessageObject.forceSeekTo < 0.0f) {
                            float pos = ApplicationLoader.applicationContext.getSharedPreferences("media_saved_pos", 0).getFloat(name, -1.0f);
                            if (pos > 0.0f && pos < 0.999f) {
                                this.currentMessageObject.forceSeekTo = pos;
                                this.videoPlayerSeekbar.setProgress(pos);
                            }
                        }
                        this.shouldSavePositionForCurrentVideo = name;
                        boolean z2 = newPlayerCreated;
                    } else if (duration >= 10) {
                        SavedVideoPosition videoPosition = null;
                        int i = this.savedVideoPositions.size() - 1;
                        while (i >= 0) {
                            SavedVideoPosition item = this.savedVideoPositions.valueAt(i);
                            boolean newPlayerCreated2 = newPlayerCreated;
                            if (item.timestamp < SystemClock.elapsedRealtime() - 5000) {
                                this.savedVideoPositions.removeAt(i);
                            } else if (videoPosition == null && this.savedVideoPositions.keyAt(i).equals(name)) {
                                videoPosition = item;
                            }
                            i--;
                            newPlayerCreated = newPlayerCreated2;
                        }
                        if (this.currentMessageObject.forceSeekTo < 0.0f && videoPosition != null) {
                            float pos2 = videoPosition.position;
                            if (pos2 > 0.0f && pos2 < 0.999f) {
                                this.currentMessageObject.forceSeekTo = pos2;
                                this.videoPlayerSeekbar.setProgress(pos2);
                            }
                        }
                        this.shouldSavePositionForCurrentVideoShortTerm = name;
                    }
                }
                this.videoPlayer.preparePlayer(uri2, "other");
                this.videoPlayer.setPlayWhenReady(playWhenReady);
            } else {
                boolean z3 = playWhenReady;
                boolean z4 = newPlayerCreated;
            }
            MessageObject messageObject2 = this.currentMessageObject;
            boolean z5 = messageObject2 != null && messageObject2.getDuration() <= 30;
            this.playerLooping = z5;
            this.videoPlayerControlFrameLayout.setSeekBarTransitionEnabled(z5);
            this.videoPlayer.setLooping(this.playerLooping);
            MessageObject messageObject3 = this.currentMessageObject;
            if (messageObject3 != null && messageObject3.forceSeekTo >= 0.0f) {
                this.seekToProgressPending = this.currentMessageObject.forceSeekTo;
                this.currentMessageObject.forceSeekTo = -1.0f;
            }
            TLRPC.BotInlineResult botInlineResult = this.currentBotInlineResult;
            if (botInlineResult == null || (!botInlineResult.type.equals("video") && !MessageObject.isVideoDocument(this.currentBotInlineResult.document))) {
                this.bottomLayout.setPadding(0, 0, 0, 0);
            } else {
                this.bottomLayout.setVisibility(0);
                this.bottomLayout.setPadding(0, 0, AndroidUtilities.dp(84.0f), 0);
                this.pickerView.setVisibility(8);
            }
            if (this.pageBlocksAdapter != null) {
                this.bottomLayout.setVisibility(0);
            }
            setVideoPlayerControlVisible(!this.isCurrentVideo, true);
            if (!this.isCurrentVideo) {
                scheduleActionBarHide(this.playerAutoStarted ? 3000 : 1000);
            }
            if (this.currentMessageObject != null) {
                this.videoPlayer.setPlaybackSpeed(this.currentVideoSpeed);
            }
            this.inPreview = z;
        }
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Code restructure failed: missing block: B:21:0x0050, code lost:
        r9 = r0.videoTextureView;
     */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void checkFullscreenButton() {
        /*
            r17 = this;
            r0 = r17
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r0.imagesArr
            boolean r1 = r1.isEmpty()
            r2 = 3
            r3 = 4
            if (r1 == 0) goto L_0x001a
            r1 = 0
        L_0x000d:
            if (r1 >= r2) goto L_0x0019
            android.widget.ImageView[] r4 = r0.fullscreenButton
            r4 = r4[r1]
            r4.setVisibility(r3)
            int r1 = r1 + 1
            goto L_0x000d
        L_0x0019:
            return
        L_0x001a:
            r1 = 0
        L_0x001b:
            if (r1 >= r2) goto L_0x0138
            int r4 = r0.currentIndex
            r5 = 2
            r6 = 1
            if (r1 != r6) goto L_0x0026
            int r4 = r4 + 1
            goto L_0x002a
        L_0x0026:
            if (r1 != r5) goto L_0x002a
            int r4 = r4 + -1
        L_0x002a:
            if (r4 < 0) goto L_0x012c
            java.util.ArrayList<org.telegram.messenger.MessageObject> r7 = r0.imagesArr
            int r7 = r7.size()
            if (r4 < r7) goto L_0x0036
            goto L_0x012c
        L_0x0036:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r7 = r0.imagesArr
            java.lang.Object r7 = r7.get(r4)
            org.telegram.messenger.MessageObject r7 = (org.telegram.messenger.MessageObject) r7
            boolean r8 = r7.isVideo()
            if (r8 != 0) goto L_0x004d
            android.widget.ImageView[] r5 = r0.fullscreenButton
            r5 = r5[r1]
            r5.setVisibility(r3)
            goto L_0x0134
        L_0x004d:
            r8 = 0
            if (r1 != 0) goto L_0x0059
            android.view.TextureView r9 = r0.videoTextureView
            if (r9 == 0) goto L_0x0059
            int r9 = r9.getMeasuredWidth()
            goto L_0x005a
        L_0x0059:
            r9 = 0
        L_0x005a:
            if (r1 != 0) goto L_0x0065
            android.view.TextureView r10 = r0.videoTextureView
            if (r10 == 0) goto L_0x0065
            int r10 = r10.getMeasuredHeight()
            goto L_0x0066
        L_0x0065:
            r10 = 0
        L_0x0066:
            org.telegram.tgnet.TLRPC$Document r11 = r7.getDocument()
            r12 = 0
            java.util.ArrayList<org.telegram.tgnet.TLRPC$DocumentAttribute> r13 = r11.attributes
            int r13 = r13.size()
        L_0x0071:
            if (r12 >= r13) goto L_0x0087
            java.util.ArrayList<org.telegram.tgnet.TLRPC$DocumentAttribute> r14 = r11.attributes
            java.lang.Object r14 = r14.get(r12)
            org.telegram.tgnet.TLRPC$DocumentAttribute r14 = (org.telegram.tgnet.TLRPC.DocumentAttribute) r14
            boolean r15 = r14 instanceof org.telegram.tgnet.TLRPC.TL_documentAttributeVideo
            if (r15 == 0) goto L_0x0084
            int r9 = r14.w
            int r10 = r14.h
            goto L_0x0087
        L_0x0084:
            int r12 = r12 + 1
            goto L_0x0071
        L_0x0087:
            android.graphics.Point r12 = org.telegram.messenger.AndroidUtilities.displaySize
            int r12 = r12.y
            android.graphics.Point r13 = org.telegram.messenger.AndroidUtilities.displaySize
            int r13 = r13.x
            r14 = 1111490560(0x42400000, float:48.0)
            if (r12 <= r13) goto L_0x00d3
            android.view.TextureView r12 = r0.videoTextureView
            boolean r12 = r12 instanceof org.telegram.ui.Components.VideoEditTextureView
            if (r12 != 0) goto L_0x00d3
            if (r9 <= r10) goto L_0x00d3
            android.widget.ImageView[] r12 = r0.fullscreenButton
            r12 = r12[r1]
            int r12 = r12.getVisibility()
            if (r12 == 0) goto L_0x00ac
            android.widget.ImageView[] r12 = r0.fullscreenButton
            r12 = r12[r1]
            r12.setVisibility(r8)
        L_0x00ac:
            float r8 = (float) r9
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r12 = r0.containerView
            int r12 = r12.getMeasuredWidth()
            float r12 = (float) r12
            float r8 = r8 / r12
            float r12 = (float) r10
            float r12 = r12 / r8
            int r12 = (int) r12
            android.widget.ImageView[] r13 = r0.fullscreenButton
            r13 = r13[r1]
            android.view.ViewGroup$LayoutParams r13 = r13.getLayoutParams()
            android.widget.FrameLayout$LayoutParams r13 = (android.widget.FrameLayout.LayoutParams) r13
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r15 = r0.containerView
            int r15 = r15.getMeasuredHeight()
            int r15 = r15 + r12
            int r15 = r15 / r5
            int r16 = org.telegram.messenger.AndroidUtilities.dp(r14)
            int r15 = r15 - r16
            r13.topMargin = r15
            goto L_0x00e4
        L_0x00d3:
            android.widget.ImageView[] r8 = r0.fullscreenButton
            r8 = r8[r1]
            int r8 = r8.getVisibility()
            if (r8 == r3) goto L_0x00e4
            android.widget.ImageView[] r8 = r0.fullscreenButton
            r8 = r8[r1]
            r8.setVisibility(r3)
        L_0x00e4:
            android.animation.AnimatorSet r8 = r0.imageMoveAnimation
            if (r8 == 0) goto L_0x00f3
            float r8 = r0.translationX
            float r12 = r0.animateToX
            float r12 = r12 - r8
            float r13 = r0.animationValue
            float r12 = r12 * r13
            float r8 = r8 + r12
            goto L_0x00f5
        L_0x00f3:
            float r8 = r0.translationX
        L_0x00f5:
            if (r1 != r6) goto L_0x00f9
            r5 = 0
            goto L_0x0118
        L_0x00f9:
            if (r1 != r5) goto L_0x010e
            android.graphics.Point r5 = org.telegram.messenger.AndroidUtilities.displaySize
            int r5 = r5.x
            int r5 = -r5
            r6 = 1097859072(0x41700000, float:15.0)
            int r6 = org.telegram.messenger.AndroidUtilities.dp(r6)
            int r5 = r5 - r6
            float r5 = (float) r5
            float r6 = r0.maxX
            float r6 = r8 - r6
            float r5 = r5 + r6
            goto L_0x0118
        L_0x010e:
            float r5 = r0.minX
            int r6 = (r8 > r5 ? 1 : (r8 == r5 ? 0 : -1))
            if (r6 >= 0) goto L_0x0117
            float r5 = r8 - r5
            goto L_0x0118
        L_0x0117:
            r5 = 0
        L_0x0118:
            android.widget.ImageView[] r6 = r0.fullscreenButton
            r6 = r6[r1]
            android.graphics.Point r12 = org.telegram.messenger.AndroidUtilities.displaySize
            int r12 = r12.x
            float r12 = (float) r12
            float r12 = r12 + r5
            int r13 = org.telegram.messenger.AndroidUtilities.dp(r14)
            float r13 = (float) r13
            float r12 = r12 - r13
            r6.setTranslationX(r12)
            goto L_0x0134
        L_0x012c:
            android.widget.ImageView[] r5 = r0.fullscreenButton
            r5 = r5[r1]
            r5.setVisibility(r3)
        L_0x0134:
            int r1 = r1 + 1
            goto L_0x001b
        L_0x0138:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.checkFullscreenButton():void");
    }

    private void createVideoTextureView(MediaController.SavedFilterState savedFilterState) {
        if (this.videoTextureView == null) {
            AnonymousClass53 r0 = new AspectRatioFrameLayout(this.parentActivity) {
                /* access modifiers changed from: protected */
                public void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
                    super.onMeasure(widthMeasureSpec, heightMeasureSpec);
                    if (PhotoViewer.this.textureImageView != null) {
                        ViewGroup.LayoutParams layoutParams = PhotoViewer.this.textureImageView.getLayoutParams();
                        layoutParams.width = getMeasuredWidth();
                        layoutParams.height = getMeasuredHeight();
                    }
                    if (PhotoViewer.this.videoTextureView instanceof VideoEditTextureView) {
                        PhotoViewer.this.videoTextureView.setPivotX((float) (PhotoViewer.this.videoTextureView.getMeasuredWidth() / 2));
                        PhotoViewer.this.firstFrameView.setPivotX((float) (PhotoViewer.this.videoTextureView.getMeasuredWidth() / 2));
                    } else {
                        PhotoViewer.this.videoTextureView.setPivotX(0.0f);
                        PhotoViewer.this.firstFrameView.setPivotX(0.0f);
                    }
                    PhotoViewer.this.checkFullscreenButton();
                }
            };
            this.aspectRatioFrameLayout = r0;
            r0.setWillNotDraw(false);
            this.aspectRatioFrameLayout.setVisibility(4);
            this.containerView.addView(this.aspectRatioFrameLayout, 0, LayoutHelper.createFrame(-1, -1, 17));
            if (this.imagesArrLocals.isEmpty()) {
                this.videoTextureView = new TextureView(this.parentActivity);
            } else {
                VideoEditTextureView videoEditTextureView = new VideoEditTextureView(this.parentActivity, this.videoPlayer);
                if (savedFilterState != null) {
                    videoEditTextureView.setDelegate(new PhotoViewer$$ExternalSyntheticLambda76(savedFilterState));
                }
                this.videoTextureView = videoEditTextureView;
            }
            SurfaceTexture surfaceTexture = this.injectingVideoPlayerSurface;
            if (surfaceTexture != null) {
                this.videoTextureView.setSurfaceTexture(surfaceTexture);
                this.textureUploaded = true;
                this.videoSizeSet = true;
                this.injectingVideoPlayerSurface = null;
            }
            this.videoTextureView.setPivotX(0.0f);
            this.videoTextureView.setPivotY(0.0f);
            this.videoTextureView.setOpaque(false);
            this.aspectRatioFrameLayout.addView(this.videoTextureView, LayoutHelper.createFrame(-1, -1, 17));
            FirstFrameView firstFrameView2 = new FirstFrameView(this.parentActivity);
            this.firstFrameView = firstFrameView2;
            firstFrameView2.setPivotX(0.0f);
            this.firstFrameView.setPivotY(0.0f);
            this.firstFrameView.setScaleType(ImageView.ScaleType.FIT_XY);
            this.aspectRatioFrameLayout.addView(this.firstFrameView, LayoutHelper.createFrame(-1, -1, 17));
            if (this.sendPhotoType == 1) {
                View view = new View(this.parentActivity);
                this.flashView = view;
                view.setBackgroundColor(-1);
                this.flashView.setAlpha(0.0f);
                this.aspectRatioFrameLayout.addView(this.flashView, LayoutHelper.createFrame(-1, -1, 17));
            }
        }
    }

    /* access modifiers changed from: private */
    public void releasePlayer(boolean onClose) {
        if (this.videoPlayer != null) {
            cancelVideoPlayRunnable();
            AndroidUtilities.cancelRunOnUIThread(this.setLoadingRunnable);
            AndroidUtilities.cancelRunOnUIThread(this.hideActionBarRunnable);
            if (this.shouldSavePositionForCurrentVideoShortTerm != null) {
                this.savedVideoPositions.put(this.shouldSavePositionForCurrentVideoShortTerm, new SavedVideoPosition(((float) this.videoPlayer.getCurrentPosition()) / ((float) this.videoPlayer.getDuration()), SystemClock.elapsedRealtime()));
            }
            this.videoPlayer.releasePlayer(true);
            this.videoPlayer = null;
        } else {
            this.playerWasPlaying = false;
        }
        OrientationEventListener orientationEventListener2 = this.orientationEventListener;
        if (orientationEventListener2 != null) {
            orientationEventListener2.disable();
            this.orientationEventListener = null;
        }
        this.videoPreviewFrame.close();
        toggleMiniProgress(false, false);
        this.pipAvailable = false;
        this.playerInjected = false;
        if (this.pipItem.isEnabled()) {
            this.pipItem.setEnabled(false);
            this.pipItem.animate().alpha(0.5f).setDuration(175).withEndAction((Runnable) null).start();
        }
        if (this.keepScreenOnFlagSet) {
            try {
                this.parentActivity.getWindow().clearFlags(128);
                this.keepScreenOnFlagSet = false;
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
        }
        AspectRatioFrameLayout aspectRatioFrameLayout2 = this.aspectRatioFrameLayout;
        if (aspectRatioFrameLayout2 != null) {
            try {
                this.containerView.removeView(aspectRatioFrameLayout2);
            } catch (Throwable th) {
            }
            this.aspectRatioFrameLayout = null;
        }
        cancelFlashAnimations();
        this.flashView = null;
        TextureView textureView = this.videoTextureView;
        if (textureView != null) {
            if (textureView instanceof VideoEditTextureView) {
                ((VideoEditTextureView) textureView).release();
            }
            this.videoTextureView = null;
        }
        if (this.isPlaying) {
            this.isPlaying = false;
            AndroidUtilities.cancelRunOnUIThread(this.updateProgressRunnable);
        }
        if (!onClose && !this.inPreview && !this.requestingPreview) {
            setVideoPlayerControlVisible(false, true);
        }
        this.photoProgressViews[0].resetAlphas();
    }

    private void setVideoPlayerControlVisible(final boolean visible, boolean animated) {
        if (this.videoPlayerControlVisible != visible) {
            Animator animator = this.videoPlayerControlAnimator;
            if (animator != null) {
                animator.cancel();
            }
            this.videoPlayerControlVisible = visible;
            float f = 1.0f;
            int i = 0;
            if (animated) {
                if (visible) {
                    this.videoPlayerControlFrameLayout.setVisibility(0);
                } else {
                    this.dateTextView.setVisibility(0);
                    this.nameTextView.setVisibility(0);
                    if (this.allowShare) {
                        this.bottomButtonsLayout.setVisibility(0);
                    }
                }
                final boolean shareWasAllowed = this.allowShare;
                float[] fArr = new float[2];
                fArr[0] = this.videoPlayerControlFrameLayout.getAlpha();
                if (!visible) {
                    f = 0.0f;
                }
                fArr[1] = f;
                ValueAnimator anim = ValueAnimator.ofFloat(fArr);
                anim.setDuration(200);
                anim.addUpdateListener(new PhotoViewer$$ExternalSyntheticLambda66(this, shareWasAllowed));
                anim.addListener(new AnimatorListenerAdapter() {
                    public void onAnimationEnd(Animator animation) {
                        if (!visible) {
                            PhotoViewer.this.videoPlayerControlFrameLayout.setVisibility(8);
                            return;
                        }
                        PhotoViewer.this.dateTextView.setVisibility(8);
                        PhotoViewer.this.nameTextView.setVisibility(8);
                        if (shareWasAllowed) {
                            PhotoViewer.this.bottomButtonsLayout.setVisibility(8);
                        }
                    }
                });
                this.videoPlayerControlAnimator = anim;
                anim.start();
            } else {
                this.videoPlayerControlFrameLayout.setVisibility(visible ? 0 : 8);
                this.videoPlayerControlFrameLayout.setAlpha(visible ? 1.0f : 0.0f);
                this.dateTextView.setVisibility(visible ? 8 : 0);
                this.dateTextView.setAlpha(visible ? 0.0f : 1.0f);
                this.nameTextView.setVisibility(visible ? 8 : 0);
                this.nameTextView.setAlpha(visible ? 0.0f : 1.0f);
                if (this.allowShare) {
                    LinearLayout linearLayout = this.bottomButtonsLayout;
                    if (visible) {
                        i = 8;
                    }
                    linearLayout.setVisibility(i);
                    LinearLayout linearLayout2 = this.bottomButtonsLayout;
                    if (visible) {
                        f = 0.0f;
                    }
                    linearLayout2.setAlpha(f);
                }
            }
            if (this.allowShare && this.pageBlocksAdapter == null) {
                if (visible) {
                    this.menuItem.showSubItem(10);
                } else {
                    this.menuItem.hideSubItem(10);
                }
            }
        }
    }

    /* renamed from: lambda$setVideoPlayerControlVisible$51$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4291xb6e568de(boolean shareWasAllowed, ValueAnimator a) {
        float alpha = ((Float) a.getAnimatedValue()).floatValue();
        this.videoPlayerControlFrameLayout.setAlpha(alpha);
        this.dateTextView.setAlpha(1.0f - alpha);
        this.nameTextView.setAlpha(1.0f - alpha);
        if (shareWasAllowed) {
            this.bottomButtonsLayout.setAlpha(1.0f - alpha);
        }
    }

    private void updateCaptionTextForCurrentPhoto(Object object) {
        CharSequence caption = null;
        if (this.hasCaptionForAllMedia) {
            caption = this.captionForAllMedia;
        } else if (object instanceof MediaController.PhotoEntry) {
            caption = ((MediaController.PhotoEntry) object).caption;
        } else if (!(object instanceof TLRPC.BotInlineResult) && (object instanceof MediaController.SearchImage)) {
            caption = ((MediaController.SearchImage) object).caption;
        }
        if (TextUtils.isEmpty(caption)) {
            this.captionEditText.setFieldText("");
        } else {
            this.captionEditText.setFieldText(caption);
        }
        this.captionEditText.setAllowTextEntitiesIntersection(supportsSendingNewEntities());
    }

    public void showAlertDialog(AlertDialog.Builder builder) {
        if (this.parentActivity != null) {
            try {
                AlertDialog alertDialog = this.visibleDialog;
                if (alertDialog != null) {
                    alertDialog.dismiss();
                    this.visibleDialog = null;
                }
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
            try {
                AlertDialog show = builder.show();
                this.visibleDialog = show;
                show.setCanceledOnTouchOutside(true);
                this.visibleDialog.setOnDismissListener(new PhotoViewer$$ExternalSyntheticLambda2(this));
            } catch (Exception e2) {
                FileLog.e((Throwable) e2);
            }
        }
    }

    /* renamed from: lambda$showAlertDialog$52$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4292lambda$showAlertDialog$52$orgtelegramuiPhotoViewer(DialogInterface dialog) {
        this.visibleDialog = null;
    }

    private void mergeImages(String finalPath, String thumbPath, Bitmap thumb, Bitmap bitmap, float size, boolean reverse) {
        boolean recycle = false;
        if (thumb == null) {
            try {
                thumb = BitmapFactory.decodeFile(thumbPath);
                recycle = true;
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            } catch (Throwable e2) {
                FileLog.e(e2);
                return;
            }
        }
        int w = thumb.getWidth();
        int h = thumb.getHeight();
        if (((float) w) > size || ((float) h) > size) {
            float scale2 = ((float) Math.max(w, h)) / size;
            w = (int) (((float) w) / scale2);
            h = (int) (((float) h) / scale2);
        }
        Bitmap dst = Bitmap.createBitmap(w, h, Bitmap.Config.ARGB_8888);
        Canvas canvas = new Canvas(dst);
        Rect dstRect = new Rect(0, 0, w, h);
        if (reverse) {
            canvas.drawBitmap(bitmap, (Rect) null, dstRect, this.bitmapPaint);
            canvas.drawBitmap(thumb, (Rect) null, dstRect, this.bitmapPaint);
        } else {
            canvas.drawBitmap(thumb, (Rect) null, dstRect, this.bitmapPaint);
            canvas.drawBitmap(bitmap, (Rect) null, dstRect, this.bitmapPaint);
        }
        FileOutputStream stream = new FileOutputStream(new File(finalPath));
        dst.compress(Bitmap.CompressFormat.JPEG, size == 512.0f ? 83 : 87, stream);
        stream.close();
        if (recycle) {
            thumb.recycle();
        }
        dst.recycle();
    }

    /* access modifiers changed from: private */
    public void seekAnimatedStickersTo(long ms) {
        RLottieDrawable drawable;
        if (this.editState.mediaEntities != null) {
            int N = this.editState.mediaEntities.size();
            for (int a = 0; a < N; a++) {
                VideoEditedInfo.MediaEntity entity = this.editState.mediaEntities.get(a);
                if (entity.type == 0 && (entity.subType & 1) != 0 && (entity.view instanceof BackupImageView) && (drawable = ((BackupImageView) entity.view).getImageReceiver().getLottieAnimation()) != null) {
                    long j = this.startTime;
                    long j2 = 0;
                    if (j > 0) {
                        j2 = j / 1000;
                    }
                    drawable.setProgressMs(ms - j2);
                }
            }
        }
    }

    /* access modifiers changed from: private */
    public void playOrStopAnimatedStickers(boolean play) {
        RLottieDrawable drawable;
        if (this.editState.mediaEntities != null) {
            int N = this.editState.mediaEntities.size();
            for (int a = 0; a < N; a++) {
                VideoEditedInfo.MediaEntity entity = this.editState.mediaEntities.get(a);
                if (entity.type == 0 && (entity.subType & 1) != 0 && (entity.view instanceof BackupImageView) && (drawable = ((BackupImageView) entity.view).getImageReceiver().getLottieAnimation()) != null) {
                    if (play) {
                        drawable.start();
                    } else {
                        drawable.stop();
                    }
                }
            }
        }
    }

    private int getAnimatedMediaEntitiesCount(boolean single) {
        int count = 0;
        if (this.editState.mediaEntities != null) {
            int N = this.editState.mediaEntities.size();
            for (int a = 0; a < N; a++) {
                VideoEditedInfo.MediaEntity entity = this.editState.mediaEntities.get(a);
                if (entity.type == 0 && !((entity.subType & 1) == 0 && (entity.subType & 4) == 0)) {
                    count++;
                    if (single) {
                        break;
                    }
                }
            }
        }
        return count;
    }

    private boolean hasAnimatedMediaEntities() {
        return getAnimatedMediaEntitiesCount(true) != 0;
    }

    private Bitmap createCroppedBitmap(Bitmap bitmap, MediaController.CropState cropState, int[] extraTransform, boolean mirror2) {
        MediaController.CropState cropState2 = cropState;
        try {
            int i = cropState2.transformRotation;
            int i2 = 0;
            if (extraTransform != null) {
                i2 = extraTransform[0];
            }
            int tr = (i + i2) % 360;
            int w = bitmap.getWidth();
            int h = bitmap.getHeight();
            int fw = w;
            int rotatedW = w;
            int fh = h;
            int rotatedH = h;
            if (tr == 90 || tr == 270) {
                int temp = fw;
                rotatedW = fh;
                fw = fh;
                rotatedH = temp;
                fh = temp;
            }
            int fw2 = (int) (((float) fw) * cropState2.cropPw);
            int fh2 = (int) (((float) fh) * cropState2.cropPh);
            Bitmap canvasBitmap = Bitmap.createBitmap(fw2, fh2, Bitmap.Config.ARGB_8888);
            Matrix matrix = new Matrix();
            matrix.postTranslate((float) ((-w) / 2), (float) ((-h) / 2));
            if (mirror2 && cropState2.mirrored) {
                if (tr != 90) {
                    if (tr != 270) {
                        matrix.postScale(-1.0f, 1.0f);
                    }
                }
                matrix.postScale(1.0f, -1.0f);
            }
            matrix.postRotate(cropState2.cropRotate + ((float) tr));
            matrix.postTranslate(cropState2.cropPx * ((float) rotatedW), cropState2.cropPy * ((float) rotatedH));
            matrix.postScale(cropState2.cropScale, cropState2.cropScale);
            matrix.postTranslate((float) (fw2 / 2), (float) (fh2 / 2));
            try {
                new Canvas(canvasBitmap).drawBitmap(bitmap, matrix, new Paint(2));
                return canvasBitmap;
            } catch (Throwable th) {
                e = th;
                FileLog.e(e);
                return null;
            }
        } catch (Throwable th2) {
            e = th2;
            Bitmap bitmap2 = bitmap;
            FileLog.e(e);
            return null;
        }
    }

    /* JADX WARNING: Removed duplicated region for block: B:228:0x082e  */
    /* JADX WARNING: Removed duplicated region for block: B:229:0x0837  */
    /* JADX WARNING: Removed duplicated region for block: B:232:0x0840  */
    /* JADX WARNING: Removed duplicated region for block: B:236:0x085e  */
    /* JADX WARNING: Removed duplicated region for block: B:251:0x08a7  */
    /* JADX WARNING: Removed duplicated region for block: B:254:0x08af  */
    /* JADX WARNING: Removed duplicated region for block: B:255:0x090a  */
    /* JADX WARNING: Removed duplicated region for block: B:258:0x0917  */
    /* JADX WARNING: Removed duplicated region for block: B:265:0x0926  */
    /* JADX WARNING: Removed duplicated region for block: B:270:0x0930  */
    /* JADX WARNING: Removed duplicated region for block: B:271:0x0942  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void applyCurrentEditMode() {
        /*
            r49 = this;
            r7 = r49
            int r0 = r7.currentIndex
            if (r0 < 0) goto L_0x094d
            java.util.ArrayList<java.lang.Object> r1 = r7.imagesArrLocals
            int r1 = r1.size()
            if (r0 < r1) goto L_0x0010
            goto L_0x094d
        L_0x0010:
            java.util.ArrayList<java.lang.Object> r0 = r7.imagesArrLocals
            int r1 = r7.currentIndex
            java.lang.Object r8 = r0.get(r1)
            boolean r0 = r8 instanceof org.telegram.messenger.MediaController.MediaEditState
            if (r0 != 0) goto L_0x001d
            return
        L_0x001d:
            r0 = 0
            r9 = 1
            android.graphics.Bitmap[] r10 = new android.graphics.Bitmap[r9]
            r1 = 0
            r2 = 0
            r3 = 0
            r4 = 0
            r5 = 0
            java.util.ArrayList<java.lang.Object> r6 = r7.imagesArrLocals
            int r11 = r7.currentIndex
            java.lang.Object r6 = r6.get(r11)
            r11 = r6
            org.telegram.messenger.MediaController$MediaEditState r11 = (org.telegram.messenger.MediaController.MediaEditState) r11
            int r6 = r7.currentEditMode
            r13 = 3
            r14 = 1140850688(0x44000000, float:512.0)
            r15 = 2
            if (r6 == r9) goto L_0x0098
            if (r6 != 0) goto L_0x0041
            int r12 = r7.sendPhotoType
            if (r12 != r9) goto L_0x0041
            goto L_0x0098
        L_0x0041:
            if (r6 != r15) goto L_0x005a
            org.telegram.ui.Components.PhotoFilterView r6 = r7.photoFilterView
            android.graphics.Bitmap r0 = r6.getBitmap()
            org.telegram.ui.Components.PhotoFilterView r6 = r7.photoFilterView
            org.telegram.messenger.MediaController$SavedFilterState r2 = r6.getSavedFilterState()
            r9 = r0
            r13 = r2
            r14 = r3
            r6 = r4
            r28 = r5
            r19 = r10
            r10 = r1
            goto L_0x0124
        L_0x005a:
            if (r6 != r13) goto L_0x008d
            int r6 = android.os.Build.VERSION.SDK_INT
            r12 = 18
            if (r6 < r12) goto L_0x0070
            int r6 = r7.sendPhotoType
            if (r6 == 0) goto L_0x006a
            if (r6 == r9) goto L_0x006a
            if (r6 != r15) goto L_0x0070
        L_0x006a:
            java.util.ArrayList r6 = new java.util.ArrayList
            r6.<init>()
            r3 = r6
        L_0x0070:
            org.telegram.ui.Components.PhotoPaintView r6 = r7.photoPaintView
            boolean r5 = r6.hasChanges()
            org.telegram.ui.Components.PhotoPaintView r6 = r7.photoPaintView
            android.graphics.Bitmap r0 = r6.getBitmap(r3, r10)
            org.telegram.ui.Components.PhotoPaintView r6 = r7.photoPaintView
            java.util.ArrayList r1 = r6.getMasks()
            r9 = r0
            r13 = r2
            r14 = r3
            r6 = r4
            r28 = r5
            r19 = r10
            r10 = r1
            goto L_0x0124
        L_0x008d:
            r9 = r0
            r13 = r2
            r14 = r3
            r6 = r4
            r28 = r5
            r19 = r10
            r10 = r1
            goto L_0x0124
        L_0x0098:
            org.telegram.ui.Components.PhotoCropView r6 = r7.photoCropView
            r6.makeCrop(r11)
            org.telegram.messenger.MediaController$CropState r6 = r11.cropState
            if (r6 != 0) goto L_0x00a6
            int r6 = r7.currentEditMode
            if (r6 == r9) goto L_0x00a6
            return
        L_0x00a6:
            boolean r6 = r7.isCurrentVideo
            if (r6 == 0) goto L_0x0108
            java.lang.String r6 = r11.filterPath
            boolean r6 = android.text.TextUtils.isEmpty(r6)
            if (r6 != 0) goto L_0x00c4
            java.lang.String r6 = r11.filterPath
            r12 = 0
            android.graphics.Bitmap r0 = org.telegram.messenger.ImageLoader.loadBitmap(r6, r12, r14, r14, r9)
            r9 = r0
            r13 = r2
            r14 = r3
            r6 = r4
            r28 = r5
            r19 = r10
            r10 = r1
            goto L_0x0124
        L_0x00c4:
            int r6 = r7.sendPhotoType
            if (r6 != r9) goto L_0x00e2
            int[] r4 = new int[r9]
            java.lang.String r6 = r11.getPath()
            long r13 = r7.avatarStartTime
            r18 = 1000(0x3e8, double:4.94E-321)
            long r13 = r13 / r18
            android.graphics.Bitmap r0 = org.telegram.messenger.SendMessagesHelper.createVideoThumbnailAtTime(r6, r13, r4, r9)
            r9 = r0
            r13 = r2
            r14 = r3
            r6 = r4
            r28 = r5
            r19 = r10
            r10 = r1
            goto L_0x0124
        L_0x00e2:
            java.lang.String r6 = r11.getPath()
            org.telegram.ui.Components.VideoTimelinePlayView r13 = r7.videoTimelineView
            float r13 = r13.getLeftProgress()
            org.telegram.ui.Components.VideoPlayer r14 = r7.videoPlayer
            r19 = r10
            long r9 = r14.getDuration()
            float r9 = (float) r9
            float r13 = r13 * r9
            r9 = 1148846080(0x447a0000, float:1000.0)
            float r13 = r13 * r9
            long r9 = (long) r13
            android.graphics.Bitmap r0 = org.telegram.messenger.SendMessagesHelper.createVideoThumbnailAtTime(r6, r9)
            r9 = r0
            r10 = r1
            r13 = r2
            r14 = r3
            r6 = r4
            r28 = r5
            goto L_0x0124
        L_0x0108:
            r19 = r10
            org.telegram.messenger.ImageReceiver r6 = r7.centerImage
            android.graphics.Bitmap r0 = r6.getBitmap()
            r6 = 1
            int[] r9 = new int[r6]
            org.telegram.messenger.ImageReceiver r6 = r7.centerImage
            int r6 = r6.getOrientation()
            r10 = 0
            r9[r10] = r6
            r4 = r9
            r9 = r0
            r10 = r1
            r13 = r2
            r14 = r3
            r6 = r4
            r28 = r5
        L_0x0124:
            if (r9 != 0) goto L_0x0127
            return
        L_0x0127:
            java.lang.String r0 = r11.thumbPath
            if (r0 == 0) goto L_0x0138
            java.io.File r0 = new java.io.File
            java.lang.String r1 = r11.thumbPath
            r0.<init>(r1)
            r0.delete()
            r0 = 0
            r11.thumbPath = r0
        L_0x0138:
            java.lang.String r0 = r11.imagePath
            if (r0 == 0) goto L_0x0149
            java.io.File r0 = new java.io.File
            java.lang.String r1 = r11.imagePath
            r0.<init>(r1)
            r0.delete()
            r0 = 0
            r11.imagePath = r0
        L_0x0149:
            int r0 = r7.currentEditMode
            java.lang.String r5 = "_temp.jpg"
            r1 = 1
            if (r0 == r1) goto L_0x06e1
            if (r0 != 0) goto L_0x0164
            int r2 = r7.sendPhotoType
            if (r2 != r1) goto L_0x0164
            r31 = r8
            r20 = r10
            r32 = r13
            r22 = r14
            r30 = 4
            r8 = r5
            r13 = r6
            goto L_0x06ed
        L_0x0164:
            if (r0 != r15) goto L_0x033c
            java.lang.String r0 = r11.filterPath
            if (r0 == 0) goto L_0x0174
            java.io.File r0 = new java.io.File
            java.lang.String r1 = r11.filterPath
            r0.<init>(r1)
            r0.delete()
        L_0x0174:
            android.graphics.Bitmap$CompressFormat r21 = android.graphics.Bitmap.CompressFormat.JPEG
            int r0 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r0 = (float) r0
            int r1 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r1 = (float) r1
            r24 = 87
            r25 = 0
            r26 = 101(0x65, float:1.42E-43)
            r27 = 101(0x65, float:1.42E-43)
            r20 = r9
            r22 = r0
            r23 = r1
            org.telegram.tgnet.TLRPC$PhotoSize r3 = org.telegram.messenger.ImageLoader.scaleAndSaveImage((android.graphics.Bitmap) r20, (android.graphics.Bitmap.CompressFormat) r21, (float) r22, (float) r23, (int) r24, (boolean) r25, (int) r26, (int) r27)
            int r0 = r7.currentAccount
            org.telegram.messenger.FileLoader r0 = org.telegram.messenger.FileLoader.getInstance(r0)
            r1 = 1
            java.io.File r0 = r0.getPathToAttach(r3, r1)
            java.lang.String r0 = r0.toString()
            r11.filterPath = r0
            org.telegram.messenger.MediaController$CropState r0 = r11.cropState
            if (r0 == 0) goto L_0x01b1
            org.telegram.messenger.MediaController$CropState r0 = r11.cropState
            r2 = 0
            android.graphics.Bitmap r0 = r7.createCroppedBitmap(r9, r0, r2, r1)
            r20 = r0
            goto L_0x01b3
        L_0x01b1:
            r20 = r9
        L_0x01b3:
            java.lang.String r0 = r11.paintPath
            if (r0 != 0) goto L_0x0218
            boolean r0 = r7.isCurrentVideo
            if (r0 != 0) goto L_0x01ea
            android.graphics.Bitmap$CompressFormat r21 = android.graphics.Bitmap.CompressFormat.JPEG
            int r0 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r0 = (float) r0
            int r1 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r1 = (float) r1
            r24 = 87
            r25 = 0
            r26 = 101(0x65, float:1.42E-43)
            r27 = 101(0x65, float:1.42E-43)
            r22 = r0
            r23 = r1
            org.telegram.tgnet.TLRPC$PhotoSize r3 = org.telegram.messenger.ImageLoader.scaleAndSaveImage((android.graphics.Bitmap) r20, (android.graphics.Bitmap.CompressFormat) r21, (float) r22, (float) r23, (int) r24, (boolean) r25, (int) r26, (int) r27)
            int r0 = r7.currentAccount
            org.telegram.messenger.FileLoader r0 = org.telegram.messenger.FileLoader.getInstance(r0)
            r1 = 1
            java.io.File r0 = r0.getPathToAttach(r3, r1)
            java.lang.String r0 = r0.toString()
            r7.currentImagePath = r0
            r11.imagePath = r0
        L_0x01ea:
            android.graphics.Bitmap$CompressFormat r30 = android.graphics.Bitmap.CompressFormat.JPEG
            r31 = 1140850688(0x44000000, float:512.0)
            r32 = 1140850688(0x44000000, float:512.0)
            r33 = 83
            r34 = 0
            r35 = 101(0x65, float:1.42E-43)
            r36 = 101(0x65, float:1.42E-43)
            r29 = r20
            org.telegram.tgnet.TLRPC$PhotoSize r0 = org.telegram.messenger.ImageLoader.scaleAndSaveImage((android.graphics.Bitmap) r29, (android.graphics.Bitmap.CompressFormat) r30, (float) r31, (float) r32, (int) r33, (boolean) r34, (int) r35, (int) r36)
            int r1 = r7.currentAccount
            org.telegram.messenger.FileLoader r1 = org.telegram.messenger.FileLoader.getInstance(r1)
            r2 = 1
            java.io.File r1 = r1.getPathToAttach(r0, r2)
            java.lang.String r1 = r1.toString()
            r11.thumbPath = r1
            r31 = r8
            r32 = r13
            r30 = 4
            r13 = r6
            goto L_0x032f
        L_0x0218:
            java.lang.String r2 = r11.fullPaintPath
            java.lang.String r0 = r11.paintPath
            java.lang.String r1 = r11.fullPaintPath
            boolean r0 = r0.equals(r1)
            if (r0 == 0) goto L_0x022b
            org.telegram.ui.Components.PaintingOverlay r0 = r7.paintingOverlay
            android.graphics.Bitmap r0 = r0.getThumb()
            goto L_0x022c
        L_0x022b:
            r0 = 0
        L_0x022c:
            r1 = r0
            org.telegram.messenger.MediaController$CropState r0 = r11.cropState
            if (r0 == 0) goto L_0x0251
            if (r1 != 0) goto L_0x0245
            java.lang.String r0 = r11.fullPaintPath
            android.graphics.Bitmap r0 = android.graphics.BitmapFactory.decodeFile(r0)
            org.telegram.messenger.MediaController$CropState r12 = r11.cropState
            r4 = 0
            r15 = 0
            android.graphics.Bitmap r12 = r7.createCroppedBitmap(r0, r12, r15, r4)
            r0.recycle()
            goto L_0x024d
        L_0x0245:
            r4 = 0
            r15 = 0
            org.telegram.messenger.MediaController$CropState r0 = r11.cropState
            android.graphics.Bitmap r12 = r7.createCroppedBitmap(r1, r0, r15, r4)
        L_0x024d:
            r0 = 1
            r15 = r12
            r12 = r0
            goto L_0x0255
        L_0x0251:
            r12 = r1
            r0 = 0
            r15 = r12
            r12 = r0
        L_0x0255:
            boolean r0 = r7.isCurrentVideo
            if (r0 != 0) goto L_0x02ea
            boolean r0 = r49.hasAnimatedMediaEntities()
            if (r0 == 0) goto L_0x029f
            android.graphics.Bitmap$CompressFormat r31 = android.graphics.Bitmap.CompressFormat.JPEG
            int r0 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r0 = (float) r0
            int r4 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r4 = (float) r4
            r34 = 87
            r35 = 0
            r36 = 101(0x65, float:1.42E-43)
            r37 = 101(0x65, float:1.42E-43)
            r30 = r20
            r32 = r0
            r33 = r4
            org.telegram.tgnet.TLRPC$PhotoSize r3 = org.telegram.messenger.ImageLoader.scaleAndSaveImage((android.graphics.Bitmap) r30, (android.graphics.Bitmap.CompressFormat) r31, (float) r32, (float) r33, (int) r34, (boolean) r35, (int) r36, (int) r37)
            int r0 = r7.currentAccount
            org.telegram.messenger.FileLoader r0 = org.telegram.messenger.FileLoader.getInstance(r0)
            r4 = 1
            java.io.File r0 = r0.getPathToAttach(r3, r4)
            java.lang.String r0 = r0.toString()
            r7.currentImagePath = r0
            r11.imagePath = r0
            r16 = r1
            r17 = r2
            r25 = r3
            r31 = r8
            r32 = r13
            r30 = 4
            r8 = r5
            r13 = r6
            goto L_0x02f8
        L_0x029f:
            java.io.File r0 = new java.io.File
            r16 = r1
            r4 = 4
            java.io.File r1 = org.telegram.messenger.FileLoader.getDirectory(r4)
            java.lang.StringBuilder r4 = new java.lang.StringBuilder
            r4.<init>()
            r17 = r2
            int r2 = org.telegram.messenger.SharedConfig.getLastLocalId()
            r4.append(r2)
            r4.append(r5)
            java.lang.String r2 = r4.toString()
            r0.<init>(r1, r2)
            r23 = r0
            java.lang.String r1 = r23.getAbsolutePath()
            r11.imagePath = r1
            int r0 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r4 = (float) r0
            r24 = 1
            r0 = r49
            r2 = r17
            r25 = r3
            r3 = r15
            r22 = r4
            r30 = 4
            r4 = r20
            r31 = r8
            r8 = r5
            r5 = r22
            r32 = r13
            r13 = r6
            r6 = r24
            r0.mergeImages(r1, r2, r3, r4, r5, r6)
            goto L_0x02f8
        L_0x02ea:
            r16 = r1
            r17 = r2
            r25 = r3
            r31 = r8
            r32 = r13
            r30 = 4
            r8 = r5
            r13 = r6
        L_0x02f8:
            java.io.File r0 = new java.io.File
            java.io.File r1 = org.telegram.messenger.FileLoader.getDirectory(r30)
            java.lang.StringBuilder r2 = new java.lang.StringBuilder
            r2.<init>()
            int r3 = org.telegram.messenger.SharedConfig.getLastLocalId()
            r2.append(r3)
            r2.append(r8)
            java.lang.String r2 = r2.toString()
            r0.<init>(r1, r2)
            r8 = r0
            java.lang.String r1 = r8.getAbsolutePath()
            r11.thumbPath = r1
            r5 = 1140850688(0x44000000, float:512.0)
            r6 = 1
            r0 = r49
            r2 = r17
            r3 = r15
            r4 = r20
            r0.mergeImages(r1, r2, r3, r4, r5, r6)
            if (r12 == 0) goto L_0x032d
            r15.recycle()
        L_0x032d:
            r0 = r25
        L_0x032f:
            org.telegram.messenger.MediaController$CropState r1 = r11.cropState
            if (r1 == 0) goto L_0x0336
            r20.recycle()
        L_0x0336:
            r20 = r10
            r22 = r14
            goto L_0x0828
        L_0x033c:
            r31 = r8
            r32 = r13
            r30 = 4
            r8 = r5
            r13 = r6
            r1 = 3
            if (r0 != r1) goto L_0x06db
            java.lang.String r0 = r11.paintPath
            if (r0 == 0) goto L_0x0369
            java.io.File r0 = new java.io.File
            java.lang.String r1 = r11.paintPath
            r0.<init>(r1)
            r0.delete()
            java.lang.String r0 = r11.paintPath
            java.lang.String r1 = r11.fullPaintPath
            boolean r0 = r0.equals(r1)
            if (r0 != 0) goto L_0x0369
            java.io.File r0 = new java.io.File
            java.lang.String r1 = r11.fullPaintPath
            r0.<init>(r1)
            r0.delete()
        L_0x0369:
            android.graphics.Bitmap$CompressFormat r21 = android.graphics.Bitmap.CompressFormat.PNG
            int r0 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r0 = (float) r0
            int r1 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r1 = (float) r1
            r24 = 87
            r25 = 0
            r26 = 101(0x65, float:1.42E-43)
            r27 = 101(0x65, float:1.42E-43)
            r20 = r9
            r22 = r0
            r23 = r1
            org.telegram.tgnet.TLRPC$PhotoSize r0 = org.telegram.messenger.ImageLoader.scaleAndSaveImage((android.graphics.Bitmap) r20, (android.graphics.Bitmap.CompressFormat) r21, (float) r22, (float) r23, (int) r24, (boolean) r25, (int) r26, (int) r27)
            r11.stickers = r10
            org.telegram.ui.PhotoViewer$EditState r1 = r7.editState
            int r2 = r7.currentAccount
            org.telegram.messenger.FileLoader r2 = org.telegram.messenger.FileLoader.getInstance(r2)
            r3 = 1
            java.io.File r2 = r2.getPathToAttach(r0, r3)
            java.lang.String r2 = r2.toString()
            r1.paintPath = r2
            r11.paintPath = r2
            org.telegram.ui.Components.PaintingOverlay r1 = r7.paintingOverlay
            org.telegram.ui.PhotoViewer$EditState r2 = r7.editState
            if (r14 == 0) goto L_0x03ad
            boolean r3 = r14.isEmpty()
            if (r3 == 0) goto L_0x03ab
            goto L_0x03ad
        L_0x03ab:
            r3 = r14
            goto L_0x03ae
        L_0x03ad:
            r3 = 0
        L_0x03ae:
            r2.mediaEntities = r3
            r11.mediaEntities = r3
            boolean r2 = r7.isCurrentVideo
            r4 = 1
            r1.setEntities(r3, r2, r4)
            org.telegram.ui.PhotoViewer$EditState r1 = r7.editState
            org.telegram.ui.Components.PhotoPaintView r2 = r7.photoPaintView
            long r2 = r2.getLcm()
            r1.averageDuration = r2
            r11.averageDuration = r2
            java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity> r1 = r11.mediaEntities
            if (r1 == 0) goto L_0x03fe
            r1 = 0
            r2 = r19[r1]
            if (r2 == 0) goto L_0x03fe
            r20 = r19[r1]
            android.graphics.Bitmap$CompressFormat r21 = android.graphics.Bitmap.CompressFormat.PNG
            int r1 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r1 = (float) r1
            int r2 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r2 = (float) r2
            r24 = 87
            r25 = 0
            r26 = 101(0x65, float:1.42E-43)
            r27 = 101(0x65, float:1.42E-43)
            r22 = r1
            r23 = r2
            org.telegram.tgnet.TLRPC$PhotoSize r0 = org.telegram.messenger.ImageLoader.scaleAndSaveImage((android.graphics.Bitmap) r20, (android.graphics.Bitmap.CompressFormat) r21, (float) r22, (float) r23, (int) r24, (boolean) r25, (int) r26, (int) r27)
            int r1 = r7.currentAccount
            org.telegram.messenger.FileLoader r1 = org.telegram.messenger.FileLoader.getInstance(r1)
            r2 = 1
            java.io.File r1 = r1.getPathToAttach(r0, r2)
            java.lang.String r1 = r1.toString()
            r11.fullPaintPath = r1
            r15 = r0
            goto L_0x0403
        L_0x03fe:
            java.lang.String r1 = r11.paintPath
            r11.fullPaintPath = r1
            r15 = r0
        L_0x0403:
            org.telegram.ui.Components.PaintingOverlay r0 = r7.paintingOverlay
            r0.setBitmap(r9)
            org.telegram.messenger.MediaController$CropState r0 = r11.cropState
            if (r0 == 0) goto L_0x0503
            org.telegram.messenger.MediaController$CropState r0 = r11.cropState
            boolean r0 = r0.initied
            if (r0 == 0) goto L_0x0503
            org.telegram.ui.PhotoViewer$EditState r0 = r7.editState
            java.lang.String r0 = r0.paintPath
            java.lang.String r0 = org.telegram.ui.Components.Crop.CropView.getCopy(r0)
            org.telegram.ui.PhotoViewer$EditState r1 = r7.editState
            java.lang.String r1 = r1.croppedPaintPath
            if (r1 == 0) goto L_0x0431
            java.io.File r1 = new java.io.File
            org.telegram.ui.PhotoViewer$EditState r2 = r7.editState
            java.lang.String r2 = r2.croppedPaintPath
            r1.<init>(r2)
            r1.delete()
            org.telegram.ui.PhotoViewer$EditState r1 = r7.editState
            r2 = 0
            r1.croppedPaintPath = r2
        L_0x0431:
            org.telegram.ui.PhotoViewer$EditState r1 = r7.editState
            r1.croppedPaintPath = r0
            org.telegram.ui.PhotoViewer$EditState r1 = r7.editState
            java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity> r1 = r1.mediaEntities
            if (r1 == 0) goto L_0x047a
            org.telegram.ui.PhotoViewer$EditState r1 = r7.editState
            java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity> r1 = r1.mediaEntities
            boolean r1 = r1.isEmpty()
            if (r1 != 0) goto L_0x047a
            org.telegram.ui.PhotoViewer$EditState r1 = r7.editState
            java.util.ArrayList r2 = new java.util.ArrayList
            org.telegram.ui.PhotoViewer$EditState r3 = r7.editState
            java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity> r3 = r3.mediaEntities
            int r3 = r3.size()
            r2.<init>(r3)
            r1.croppedMediaEntities = r2
            r1 = 0
            org.telegram.ui.PhotoViewer$EditState r2 = r7.editState
            java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity> r2 = r2.mediaEntities
            int r2 = r2.size()
        L_0x045f:
            if (r1 >= r2) goto L_0x0479
            org.telegram.ui.PhotoViewer$EditState r3 = r7.editState
            java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity> r3 = r3.croppedMediaEntities
            org.telegram.ui.PhotoViewer$EditState r4 = r7.editState
            java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity> r4 = r4.mediaEntities
            java.lang.Object r4 = r4.get(r1)
            org.telegram.messenger.VideoEditedInfo$MediaEntity r4 = (org.telegram.messenger.VideoEditedInfo.MediaEntity) r4
            org.telegram.messenger.VideoEditedInfo$MediaEntity r4 = r4.copy()
            r3.add(r4)
            int r1 = r1 + 1
            goto L_0x045f
        L_0x0479:
            goto L_0x047f
        L_0x047a:
            org.telegram.ui.PhotoViewer$EditState r1 = r7.editState
            r2 = 0
            r1.croppedMediaEntities = r2
        L_0x047f:
            org.telegram.messenger.MediaController$CropState r1 = r11.cropState
            int r1 = r1.width
            org.telegram.messenger.MediaController$CropState r2 = r11.cropState
            int r2 = r2.height
            android.graphics.Bitmap$Config r3 = android.graphics.Bitmap.Config.ARGB_8888
            android.graphics.Bitmap r1 = android.graphics.Bitmap.createBitmap(r1, r2, r3)
            android.graphics.Canvas r2 = new android.graphics.Canvas
            r2.<init>(r1)
            r36 = r2
            boolean r2 = r7.isCurrentVideo
            if (r2 == 0) goto L_0x04a5
            android.view.TextureView r2 = r7.videoTextureView
            org.telegram.ui.Components.VideoEditTextureView r2 = (org.telegram.ui.Components.VideoEditTextureView) r2
            int r3 = r2.getVideoWidth()
            int r2 = r2.getVideoHeight()
            goto L_0x04b1
        L_0x04a5:
            org.telegram.messenger.ImageReceiver r2 = r7.centerImage
            int r3 = r2.getBitmapWidth()
            org.telegram.messenger.ImageReceiver r2 = r7.centerImage
            int r2 = r2.getBitmapHeight()
        L_0x04b1:
            android.app.Activity r4 = r7.parentActivity
            r35 = 0
            android.graphics.Bitmap$CompressFormat r38 = android.graphics.Bitmap.CompressFormat.PNG
            org.telegram.messenger.MediaController$CropState r5 = r11.cropState
            android.graphics.Matrix r5 = r5.matrix
            org.telegram.messenger.MediaController$CropState r6 = r11.cropState
            float r6 = r6.stateScale
            org.telegram.messenger.MediaController$CropState r12 = r11.cropState
            float r12 = r12.cropRotate
            r20 = r10
            org.telegram.messenger.MediaController$CropState r10 = r11.cropState
            int r10 = r10.transformRotation
            float r10 = (float) r10
            r22 = r14
            org.telegram.messenger.MediaController$CropState r14 = r11.cropState
            float r14 = r14.scale
            r46 = 0
            r23 = r15
            org.telegram.ui.PhotoViewer$EditState r15 = r7.editState
            java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity> r15 = r15.croppedMediaEntities
            r48 = 0
            r33 = r4
            r34 = r0
            r37 = r1
            r39 = r5
            r40 = r3
            r41 = r2
            r42 = r6
            r43 = r12
            r44 = r10
            r45 = r14
            r47 = r15
            org.telegram.ui.Components.Crop.CropView.editBitmap(r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48)
            r1.recycle()
            org.telegram.ui.PhotoViewer$EditState r4 = r7.editState
            java.lang.String r4 = r4.croppedPaintPath
            r11.croppedPaintPath = r4
            org.telegram.ui.PhotoViewer$EditState r4 = r7.editState
            java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity> r4 = r4.croppedMediaEntities
            r11.croppedMediaEntities = r4
            goto L_0x0509
        L_0x0503:
            r20 = r10
            r22 = r14
            r23 = r15
        L_0x0509:
            r0 = 0
            r1 = 0
            r2 = r19[r1]
            if (r2 == 0) goto L_0x0512
            r2 = r19[r1]
            goto L_0x0513
        L_0x0512:
            r2 = r9
        L_0x0513:
            r10 = r2
            r1 = r10
            org.telegram.messenger.MediaController$CropState r2 = r11.cropState
            if (r2 == 0) goto L_0x052b
            org.telegram.messenger.MediaController$CropState r2 = r11.cropState
            boolean r2 = r2.initied
            if (r2 == 0) goto L_0x052b
            org.telegram.messenger.MediaController$CropState r2 = r11.cropState
            r3 = 0
            r4 = 0
            android.graphics.Bitmap r1 = r7.createCroppedBitmap(r10, r2, r3, r4)
            r0 = 1
            r12 = r0
            r14 = r1
            goto L_0x052d
        L_0x052b:
            r12 = r0
            r14 = r1
        L_0x052d:
            boolean r0 = r7.isCurrentVideo
            if (r0 == 0) goto L_0x0577
            java.lang.String r0 = r11.filterPath
            if (r0 != 0) goto L_0x0554
            java.lang.String r0 = r11.getPath()
            org.telegram.ui.Components.VideoTimelinePlayView r1 = r7.videoTimelineView
            float r1 = r1.getLeftProgress()
            org.telegram.ui.Components.VideoPlayer r2 = r7.videoPlayer
            long r2 = r2.getDuration()
            float r2 = (float) r2
            float r1 = r1 * r2
            r2 = 1148846080(0x447a0000, float:1000.0)
            float r1 = r1 * r2
            long r1 = (long) r1
            android.graphics.Bitmap r0 = org.telegram.messenger.SendMessagesHelper.createVideoThumbnailAtTime(r0, r1)
            r2 = 0
            r3 = 1
            goto L_0x055e
        L_0x0554:
            java.lang.String r0 = r11.filterPath
            r1 = 1140850688(0x44000000, float:512.0)
            r2 = 0
            r3 = 1
            android.graphics.Bitmap r0 = org.telegram.messenger.ImageLoader.loadBitmap(r0, r2, r1, r1, r3)
        L_0x055e:
            org.telegram.messenger.MediaController$CropState r1 = r11.cropState
            if (r1 == 0) goto L_0x0569
            org.telegram.messenger.MediaController$CropState r1 = r11.cropState
            android.graphics.Bitmap r1 = r7.createCroppedBitmap(r0, r1, r2, r3)
            goto L_0x056a
        L_0x0569:
            r1 = r0
        L_0x056a:
            org.telegram.messenger.MediaController$CropState r2 = r11.cropState
            if (r2 == 0) goto L_0x0571
            r0.recycle()
        L_0x0571:
            r0 = 1
            r15 = r1
            r16 = r13
            r13 = r0
            goto L_0x05d2
        L_0x0577:
            r0 = 1
            int[] r1 = new int[r0]
            org.telegram.messenger.ImageReceiver r0 = r7.centerImage
            int r0 = r0.getOrientation()
            r2 = 0
            r1[r2] = r0
            r6 = r1
            org.telegram.messenger.MediaController$CropState r0 = r11.cropState
            if (r0 == 0) goto L_0x059b
            org.telegram.messenger.ImageReceiver r0 = r7.centerImage
            android.graphics.Bitmap r0 = r0.getBitmap()
            org.telegram.messenger.MediaController$CropState r1 = r11.cropState
            r2 = 1
            android.graphics.Bitmap r1 = r7.createCroppedBitmap(r0, r1, r6, r2)
            r0 = 1
            r13 = r0
            r15 = r1
            r16 = r6
            goto L_0x05d2
        L_0x059b:
            org.telegram.messenger.ImageReceiver r0 = r7.centerImage
            android.graphics.Bitmap r1 = r0.getBitmap()
            r0 = 0
            r2 = r6[r0]
            if (r2 == 0) goto L_0x05cd
            android.graphics.Matrix r2 = new android.graphics.Matrix
            r2.<init>()
            r3 = r6[r0]
            float r0 = (float) r3
            r2.postRotate(r0)
            r34 = 0
            r35 = 0
            int r36 = r1.getWidth()
            int r37 = r1.getHeight()
            r39 = 1
            r33 = r1
            r38 = r2
            android.graphics.Bitmap r1 = org.telegram.messenger.Bitmaps.createBitmap(r33, r34, r35, r36, r37, r38, r39)
            r0 = 1
            r13 = r0
            r15 = r1
            r16 = r6
            goto L_0x05d2
        L_0x05cd:
            r0 = 0
            r13 = r0
            r15 = r1
            r16 = r6
        L_0x05d2:
            boolean r0 = r7.isCurrentVideo
            if (r0 != 0) goto L_0x0642
            boolean r0 = r49.hasAnimatedMediaEntities()
            if (r0 == 0) goto L_0x0610
            android.graphics.Bitmap$CompressFormat r34 = android.graphics.Bitmap.CompressFormat.JPEG
            int r0 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r0 = (float) r0
            int r1 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r1 = (float) r1
            r37 = 87
            r38 = 0
            r39 = 101(0x65, float:1.42E-43)
            r40 = 101(0x65, float:1.42E-43)
            r33 = r15
            r35 = r0
            r36 = r1
            org.telegram.tgnet.TLRPC$PhotoSize r0 = org.telegram.messenger.ImageLoader.scaleAndSaveImage((android.graphics.Bitmap) r33, (android.graphics.Bitmap.CompressFormat) r34, (float) r35, (float) r36, (int) r37, (boolean) r38, (int) r39, (int) r40)
            int r1 = r7.currentAccount
            org.telegram.messenger.FileLoader r1 = org.telegram.messenger.FileLoader.getInstance(r1)
            r2 = 1
            java.io.File r1 = r1.getPathToAttach(r0, r2)
            java.lang.String r1 = r1.toString()
            r7.currentImagePath = r1
            r11.imagePath = r1
            r23 = r0
            goto L_0x0642
        L_0x0610:
            java.io.File r0 = new java.io.File
            java.io.File r1 = org.telegram.messenger.FileLoader.getDirectory(r30)
            java.lang.StringBuilder r2 = new java.lang.StringBuilder
            r2.<init>()
            int r3 = org.telegram.messenger.SharedConfig.getLastLocalId()
            r2.append(r3)
            r2.append(r8)
            java.lang.String r2 = r2.toString()
            r0.<init>(r1, r2)
            r17 = r0
            java.lang.String r1 = r17.getAbsolutePath()
            r11.imagePath = r1
            r2 = 0
            int r0 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r5 = (float) r0
            r6 = 0
            r0 = r49
            r3 = r15
            r4 = r14
            r0.mergeImages(r1, r2, r3, r4, r5, r6)
        L_0x0642:
            java.io.File r0 = new java.io.File
            java.io.File r1 = org.telegram.messenger.FileLoader.getDirectory(r30)
            java.lang.StringBuilder r2 = new java.lang.StringBuilder
            r2.<init>()
            int r3 = org.telegram.messenger.SharedConfig.getLastLocalId()
            r2.append(r3)
            r2.append(r8)
            java.lang.String r2 = r2.toString()
            r0.<init>(r1, r2)
            r8 = r0
            java.lang.String r1 = r8.getAbsolutePath()
            r11.thumbPath = r1
            r2 = 0
            r5 = 1140850688(0x44000000, float:512.0)
            r6 = 0
            r0 = r49
            r3 = r15
            r4 = r14
            r0.mergeImages(r1, r2, r3, r4, r5, r6)
            if (r12 == 0) goto L_0x0677
            if (r14 == 0) goto L_0x0677
            r14.recycle()
        L_0x0677:
            if (r13 == 0) goto L_0x067e
            if (r15 == 0) goto L_0x067e
            r15.recycle()
        L_0x067e:
            int r0 = r7.sendPhotoType
            r1 = 1
            if (r0 != r1) goto L_0x06d4
            org.telegram.ui.Components.VideoPlayer r0 = r7.videoPlayer
            if (r0 == 0) goto L_0x06d4
            boolean r0 = r7.isCurrentVideo
            if (r0 == 0) goto L_0x06d4
            r0 = 0
            int r2 = r7.getAnimatedMediaEntitiesCount(r0)
            if (r2 != r1) goto L_0x06d4
            org.telegram.ui.Components.VideoTimelinePlayView r0 = r7.videoTimelineView
            float r0 = r0.getLeftProgress()
            r1 = 0
            int r0 = (r0 > r1 ? 1 : (r0 == r1 ? 0 : -1))
            if (r0 > 0) goto L_0x06d4
            org.telegram.ui.Components.VideoTimelinePlayView r0 = r7.videoTimelineView
            float r0 = r0.getRightProgress()
            r1 = 1065353216(0x3var_, float:1.0)
            int r0 = (r0 > r1 ? 1 : (r0 == r1 ? 0 : -1))
            if (r0 < 0) goto L_0x06d4
            long r2 = r11.averageDuration
            org.telegram.ui.Components.VideoPlayer r0 = r7.videoPlayer
            long r4 = r0.getDuration()
        L_0x06b1:
            r24 = 3000(0xbb8, double:1.482E-320)
            int r0 = (r2 > r24 ? 1 : (r2 == r24 ? 0 : -1))
            if (r0 >= 0) goto L_0x06c3
            int r0 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1))
            if (r0 >= 0) goto L_0x06c3
            r0 = r12
            r6 = r13
            long r12 = r11.averageDuration
            long r2 = r2 + r12
            r12 = r0
            r13 = r6
            goto L_0x06b1
        L_0x06c3:
            r0 = r12
            r6 = r13
            org.telegram.ui.Components.VideoTimelinePlayView r12 = r7.videoTimelineView
            float r13 = (float) r2
            r17 = r0
            float r0 = (float) r4
            float r13 = r13 / r0
            float r0 = java.lang.Math.min(r1, r13)
            r12.setRightProgress(r0)
            goto L_0x06d7
        L_0x06d4:
            r17 = r12
            r6 = r13
        L_0x06d7:
            r6 = r16
            goto L_0x0829
        L_0x06db:
            r20 = r10
            r22 = r14
            goto L_0x0828
        L_0x06e1:
            r31 = r8
            r20 = r10
            r32 = r13
            r22 = r14
            r30 = 4
            r8 = r5
            r13 = r6
        L_0x06ed:
            org.telegram.ui.PhotoViewer$EditState r0 = r7.editState
            org.telegram.messenger.MediaController$CropState r1 = r11.cropState
            r0.cropState = r1
            org.telegram.ui.PhotoViewer$EditState r0 = r7.editState
            java.lang.String r1 = r11.croppedPaintPath
            r0.croppedPaintPath = r1
            org.telegram.ui.PhotoViewer$EditState r0 = r7.editState
            java.util.ArrayList<org.telegram.messenger.VideoEditedInfo$MediaEntity> r1 = r11.croppedMediaEntities
            r0.croppedMediaEntities = r1
            org.telegram.messenger.MediaController$CropState r0 = r11.cropState
            if (r0 == 0) goto L_0x0828
            org.telegram.messenger.MediaController$CropState r0 = r11.cropState
            r1 = 1
            android.graphics.Bitmap r10 = r7.createCroppedBitmap(r9, r0, r13, r1)
            java.lang.String r0 = r11.paintPath
            if (r0 == 0) goto L_0x07c2
            java.lang.String r0 = r11.fullPaintPath
            android.graphics.Bitmap r12 = android.graphics.BitmapFactory.decodeFile(r0)
            org.telegram.messenger.MediaController$CropState r0 = r11.cropState
            r1 = 0
            r2 = 0
            android.graphics.Bitmap r14 = r7.createCroppedBitmap(r12, r0, r1, r2)
            boolean r0 = r7.isCurrentVideo
            if (r0 != 0) goto L_0x0789
            boolean r0 = r49.hasAnimatedMediaEntities()
            if (r0 == 0) goto L_0x0758
            android.graphics.Bitmap$CompressFormat r34 = android.graphics.Bitmap.CompressFormat.JPEG
            int r0 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r0 = (float) r0
            int r1 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r1 = (float) r1
            r37 = 87
            r38 = 0
            r39 = 101(0x65, float:1.42E-43)
            r40 = 101(0x65, float:1.42E-43)
            r33 = r10
            r35 = r0
            r36 = r1
            org.telegram.tgnet.TLRPC$PhotoSize r0 = org.telegram.messenger.ImageLoader.scaleAndSaveImage((android.graphics.Bitmap) r33, (android.graphics.Bitmap.CompressFormat) r34, (float) r35, (float) r36, (int) r37, (boolean) r38, (int) r39, (int) r40)
            int r1 = r7.currentAccount
            org.telegram.messenger.FileLoader r1 = org.telegram.messenger.FileLoader.getInstance(r1)
            r2 = 1
            java.io.File r1 = r1.getPathToAttach(r0, r2)
            java.lang.String r1 = r1.toString()
            r7.currentImagePath = r1
            r11.imagePath = r1
            goto L_0x0789
        L_0x0758:
            java.io.File r0 = new java.io.File
            java.io.File r1 = org.telegram.messenger.FileLoader.getDirectory(r30)
            java.lang.StringBuilder r2 = new java.lang.StringBuilder
            r2.<init>()
            int r3 = org.telegram.messenger.SharedConfig.getLastLocalId()
            r2.append(r3)
            r2.append(r8)
            java.lang.String r2 = r2.toString()
            r0.<init>(r1, r2)
            r15 = r0
            java.lang.String r1 = r15.getAbsolutePath()
            r11.imagePath = r1
            r2 = 0
            int r0 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r5 = (float) r0
            r6 = 1
            r0 = r49
            r3 = r14
            r4 = r10
            r0.mergeImages(r1, r2, r3, r4, r5, r6)
        L_0x0789:
            java.io.File r0 = new java.io.File
            java.io.File r1 = org.telegram.messenger.FileLoader.getDirectory(r30)
            java.lang.StringBuilder r2 = new java.lang.StringBuilder
            r2.<init>()
            int r3 = org.telegram.messenger.SharedConfig.getLastLocalId()
            r2.append(r3)
            r2.append(r8)
            java.lang.String r2 = r2.toString()
            r0.<init>(r1, r2)
            r8 = r0
            java.lang.String r1 = r8.getAbsolutePath()
            r11.thumbPath = r1
            r2 = 0
            r5 = 1140850688(0x44000000, float:512.0)
            r6 = 1
            r0 = r49
            r3 = r14
            r4 = r10
            r0.mergeImages(r1, r2, r3, r4, r5, r6)
            if (r14 == 0) goto L_0x07bc
            r14.recycle()
        L_0x07bc:
            if (r12 == 0) goto L_0x07c1
            r12.recycle()
        L_0x07c1:
            goto L_0x081a
        L_0x07c2:
            boolean r0 = r7.isCurrentVideo
            if (r0 != 0) goto L_0x07f7
            android.graphics.Bitmap$CompressFormat r34 = android.graphics.Bitmap.CompressFormat.JPEG
            int r0 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r0 = (float) r0
            int r1 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r1 = (float) r1
            r37 = 87
            r38 = 0
            r39 = 101(0x65, float:1.42E-43)
            r40 = 101(0x65, float:1.42E-43)
            r33 = r10
            r35 = r0
            r36 = r1
            org.telegram.tgnet.TLRPC$PhotoSize r0 = org.telegram.messenger.ImageLoader.scaleAndSaveImage((android.graphics.Bitmap) r33, (android.graphics.Bitmap.CompressFormat) r34, (float) r35, (float) r36, (int) r37, (boolean) r38, (int) r39, (int) r40)
            int r1 = r7.currentAccount
            org.telegram.messenger.FileLoader r1 = org.telegram.messenger.FileLoader.getInstance(r1)
            r2 = 1
            java.io.File r1 = r1.getPathToAttach(r0, r2)
            java.lang.String r1 = r1.toString()
            r7.currentImagePath = r1
            r11.imagePath = r1
        L_0x07f7:
            r34 = 1140850688(0x44000000, float:512.0)
            r35 = 1140850688(0x44000000, float:512.0)
            r36 = 70
            r37 = 0
            r38 = 101(0x65, float:1.42E-43)
            r39 = 101(0x65, float:1.42E-43)
            r33 = r10
            org.telegram.tgnet.TLRPC$PhotoSize r0 = org.telegram.messenger.ImageLoader.scaleAndSaveImage((android.graphics.Bitmap) r33, (float) r34, (float) r35, (int) r36, (boolean) r37, (int) r38, (int) r39)
            int r1 = r7.currentAccount
            org.telegram.messenger.FileLoader r1 = org.telegram.messenger.FileLoader.getInstance(r1)
            r2 = 1
            java.io.File r1 = r1.getPathToAttach(r0, r2)
            java.lang.String r1 = r1.toString()
            r11.thumbPath = r1
        L_0x081a:
            int r0 = r7.currentEditMode
            if (r0 != 0) goto L_0x0826
            boolean r0 = r7.isCurrentVideo
            if (r0 == 0) goto L_0x0826
            r9.recycle()
            r9 = r10
        L_0x0826:
            r6 = r13
            goto L_0x0829
        L_0x0828:
            r6 = r13
        L_0x0829:
            org.telegram.messenger.SharedConfig.saveConfig()
            if (r32 == 0) goto L_0x0837
            org.telegram.ui.PhotoViewer$EditState r0 = r7.editState
            r2 = r32
            r0.savedFilterState = r2
            r11.savedFilterState = r2
            goto L_0x0839
        L_0x0837:
            r2 = r32
        L_0x0839:
            int r0 = r7.currentEditMode
            java.lang.String r1 = "dialogFloatingButton"
            r3 = 1
            if (r0 != r3) goto L_0x085e
            r11.isCropped = r3
            boolean r0 = r11.isCropped
            if (r0 == 0) goto L_0x0857
            android.widget.ImageView r0 = r7.cropItem
            android.graphics.PorterDuffColorFilter r3 = new android.graphics.PorterDuffColorFilter
            int r1 = r7.getThemedColor(r1)
            android.graphics.PorterDuff$Mode r4 = android.graphics.PorterDuff.Mode.MULTIPLY
            r3.<init>(r1, r4)
            r0.setColorFilter(r3)
            goto L_0x088d
        L_0x0857:
            android.widget.ImageView r0 = r7.cropItem
            r1 = 0
            r0.setColorFilter(r1)
            goto L_0x088d
        L_0x085e:
            r3 = 2
            if (r0 != r3) goto L_0x0875
            r0 = 1
            r11.isFiltered = r0
            android.widget.ImageView r0 = r7.tuneItem
            android.graphics.PorterDuffColorFilter r3 = new android.graphics.PorterDuffColorFilter
            int r1 = r7.getThemedColor(r1)
            android.graphics.PorterDuff$Mode r4 = android.graphics.PorterDuff.Mode.MULTIPLY
            r3.<init>(r1, r4)
            r0.setColorFilter(r3)
            goto L_0x088d
        L_0x0875:
            r3 = 3
            if (r0 != r3) goto L_0x088d
            if (r28 == 0) goto L_0x088d
            r0 = 1
            r11.isPainted = r0
            android.widget.ImageView r0 = r7.paintItem
            android.graphics.PorterDuffColorFilter r3 = new android.graphics.PorterDuffColorFilter
            int r1 = r7.getThemedColor(r1)
            android.graphics.PorterDuff$Mode r4 = android.graphics.PorterDuff.Mode.MULTIPLY
            r3.<init>(r1, r4)
            r0.setColorFilter(r3)
        L_0x088d:
            int r0 = r7.sendPhotoType
            if (r0 == 0) goto L_0x0894
            r1 = 4
            if (r0 != r1) goto L_0x08aa
        L_0x0894:
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r0 = r7.placeProvider
            if (r0 == 0) goto L_0x08aa
            int r1 = r7.currentIndex
            r0.updatePhotoAtIndex(r1)
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r0 = r7.placeProvider
            int r1 = r7.currentIndex
            boolean r0 = r0.isPhotoChecked(r1)
            if (r0 != 0) goto L_0x08aa
            r49.setPhotoChecked()
        L_0x08aa:
            int r0 = r7.currentEditMode
            r1 = 1
            if (r0 != r1) goto L_0x090a
            org.telegram.ui.Components.PhotoCropView r0 = r7.photoCropView
            float r0 = r0.getRectSizeX()
            int r1 = r49.getContainerViewWidth()
            float r1 = (float) r1
            float r0 = r0 / r1
            org.telegram.ui.Components.PhotoCropView r1 = r7.photoCropView
            float r1 = r1.getRectSizeY()
            int r3 = r49.getContainerViewHeight()
            float r3 = (float) r3
            float r1 = r1 / r3
            float r3 = java.lang.Math.max(r0, r1)
            r7.scale = r3
            org.telegram.ui.Components.PhotoCropView r3 = r7.photoCropView
            float r3 = r3.getRectX()
            org.telegram.ui.Components.PhotoCropView r4 = r7.photoCropView
            float r4 = r4.getRectSizeX()
            r5 = 1073741824(0x40000000, float:2.0)
            float r4 = r4 / r5
            float r3 = r3 + r4
            int r4 = r49.getContainerViewWidth()
            r8 = 2
            int r4 = r4 / r8
            float r4 = (float) r4
            float r3 = r3 - r4
            r7.translationX = r3
            org.telegram.ui.Components.PhotoCropView r3 = r7.photoCropView
            float r3 = r3.getRectY()
            org.telegram.ui.Components.PhotoCropView r4 = r7.photoCropView
            float r4 = r4.getRectSizeY()
            float r4 = r4 / r5
            float r3 = r3 + r4
            int r4 = r49.getContainerViewHeight()
            r5 = 2
            int r4 = r4 / r5
            float r4 = (float) r4
            float r3 = r3 - r4
            r7.translationY = r3
            r3 = 1
            r7.zoomAnimation = r3
            r7.applying = r3
            org.telegram.ui.Components.PhotoCropView r4 = r7.photoCropView
            r4.onDisappear()
            goto L_0x090b
        L_0x090a:
            r3 = 1
        L_0x090b:
            org.telegram.messenger.ImageReceiver r0 = r7.centerImage
            r1 = 0
            r0.setParentView(r1)
            r7.ignoreDidSetImage = r3
            boolean r0 = r7.isCurrentVideo
            if (r0 == 0) goto L_0x0926
            int r0 = r7.currentEditMode
            if (r0 == r3) goto L_0x0924
            if (r0 != 0) goto L_0x0922
            int r0 = r7.sendPhotoType
            if (r0 != r3) goto L_0x0922
            goto L_0x0924
        L_0x0922:
            r0 = 0
            goto L_0x0925
        L_0x0924:
            r0 = 1
        L_0x0925:
            goto L_0x092e
        L_0x0926:
            int r0 = r7.currentEditMode
            r1 = 2
            if (r0 != r1) goto L_0x092d
            r0 = 1
            goto L_0x092e
        L_0x092d:
            r0 = 0
        L_0x092e:
            if (r0 == 0) goto L_0x0942
            org.telegram.messenger.ImageReceiver r1 = r7.centerImage
            r1.setImageBitmap((android.graphics.Bitmap) r9)
            org.telegram.messenger.ImageReceiver r1 = r7.centerImage
            r3 = 0
            r4 = 1
            r1.setOrientation(r3, r4)
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r1 = r7.containerView
            r1.requestLayout()
            goto L_0x0943
        L_0x0942:
            r3 = 0
        L_0x0943:
            r7.ignoreDidSetImage = r3
            org.telegram.messenger.ImageReceiver r1 = r7.centerImage
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r3 = r7.containerView
            r1.setParentView(r3)
            return
        L_0x094d:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.applyCurrentEditMode():void");
    }

    private void setPhotoChecked() {
        ChatActivity chatActivity;
        TLRPC.Chat chat;
        PhotoViewerProvider photoViewerProvider = this.placeProvider;
        if (photoViewerProvider == null) {
            return;
        }
        if (photoViewerProvider.getSelectedPhotos() == null || this.maxSelectedPhotos <= 0 || this.placeProvider.getSelectedPhotos().size() < this.maxSelectedPhotos || this.placeProvider.isPhotoChecked(this.currentIndex)) {
            int num = this.placeProvider.setPhotoChecked(this.currentIndex, getCurrentVideoEditedInfo());
            boolean checked = this.placeProvider.isPhotoChecked(this.currentIndex);
            this.checkImageView.setChecked(checked, true);
            if (num >= 0) {
                if (checked) {
                    this.selectedPhotosAdapter.notifyItemInserted(num);
                    this.selectedPhotosListView.smoothScrollToPosition(num);
                } else {
                    this.selectedPhotosAdapter.notifyItemRemoved(num);
                    if (num == 0) {
                        this.selectedPhotosAdapter.notifyItemChanged(0);
                    }
                }
            }
            updateSelectedCount();
        } else if (this.allowOrder && (chatActivity = this.parentChatActivity) != null && (chat = chatActivity.getCurrentChat()) != null && !ChatObject.hasAdminRights(chat) && chat.slowmode_enabled) {
            AlertsCreator.createSimpleAlert(this.parentActivity, LocaleController.getString("Slowmode", NUM), LocaleController.getString("SlowmodeSelectSendError", NUM)).show();
        }
    }

    /* access modifiers changed from: private */
    public void updateResetButtonVisibility(boolean show) {
        if (this.resetButton.isClickable() != show) {
            this.resetButton.setClickable(show);
            this.resetButton.setVisibility(0);
            this.resetButton.clearAnimation();
            this.resetButton.animate().alpha(show ? 1.0f : 0.0f).setInterpolator(CubicBezierInterpolator.DEFAULT).setDuration(150).withEndAction(new PhotoViewer$$ExternalSyntheticLambda63(this, show));
        }
    }

    /* renamed from: lambda$updateResetButtonVisibility$53$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4300xCLASSNAMEavar_f(boolean show) {
        if (!show) {
            this.resetButton.setVisibility(8);
        }
    }

    private void createCropView() {
        if (this.photoCropView == null) {
            PhotoCropView photoCropView2 = new PhotoCropView(this.activityContext, this.resourcesProvider);
            this.photoCropView = photoCropView2;
            photoCropView2.setVisibility(8);
            this.photoCropView.onDisappear();
            this.containerView.addView(this.photoCropView, this.containerView.indexOfChild(this.videoTimelineView) - 1, LayoutHelper.createFrame(-1, -1.0f, 51, 0.0f, 0.0f, 0.0f, 48.0f));
            this.photoCropView.setDelegate(new PhotoCropView.PhotoCropViewDelegate() {
                public void onChange(boolean reset) {
                    PhotoViewer.this.updateResetButtonVisibility(!reset);
                }

                public void onUpdate() {
                    PhotoViewer.this.containerView.invalidate();
                }

                public void onTapUp() {
                    if (PhotoViewer.this.sendPhotoType == 1) {
                        boolean unused = PhotoViewer.this.manuallyPaused = true;
                        PhotoViewer.this.toggleVideoPlayer();
                    }
                }

                public void onVideoThumbClick() {
                    if (PhotoViewer.this.videoPlayer != null) {
                        PhotoViewer.this.videoPlayer.seekTo((long) (((float) PhotoViewer.this.videoPlayer.getDuration()) * PhotoViewer.this.avatarStartProgress));
                        PhotoViewer.this.videoPlayer.pause();
                        PhotoViewer.this.videoTimelineView.setProgress(PhotoViewer.this.avatarStartProgress);
                        PhotoViewer.this.cancelVideoPlayRunnable();
                        AndroidUtilities.runOnUIThread(PhotoViewer.this.videoPlayRunnable = new PhotoViewer$55$$ExternalSyntheticLambda0(this), 860);
                    }
                }

                /* renamed from: lambda$onVideoThumbClick$0$org-telegram-ui-PhotoViewer$55  reason: not valid java name */
                public /* synthetic */ void m4322lambda$onVideoThumbClick$0$orgtelegramuiPhotoViewer$55() {
                    boolean unused = PhotoViewer.this.manuallyPaused = false;
                    if (PhotoViewer.this.videoPlayer != null) {
                        PhotoViewer.this.videoPlayer.play();
                    }
                    Runnable unused2 = PhotoViewer.this.videoPlayRunnable = null;
                }

                public boolean rotate() {
                    return PhotoViewer.this.cropRotate(-90.0f);
                }

                public boolean mirror() {
                    return PhotoViewer.this.cropMirror();
                }

                public int getVideoThumbX() {
                    return (int) (((float) AndroidUtilities.dp(16.0f)) + (((float) (PhotoViewer.this.videoTimelineView.getMeasuredWidth() - AndroidUtilities.dp(32.0f))) * PhotoViewer.this.avatarStartProgress));
                }
            });
        }
    }

    private void startVideoPlayer() {
        VideoPlayer videoPlayer2;
        if (this.isCurrentVideo && (videoPlayer2 = this.videoPlayer) != null && !videoPlayer2.isPlaying()) {
            if (!this.muteVideo || this.sendPhotoType == 1) {
                this.videoPlayer.setVolume(0.0f);
            }
            this.manuallyPaused = false;
            toggleVideoPlayer();
        }
    }

    private void detectFaces() {
        if (this.centerImage.getAnimation() == null && !this.imagesArrLocals.isEmpty() && this.sendPhotoType != 1) {
            String key = this.centerImage.getImageKey();
            String str = this.currentImageFaceKey;
            if (str == null || !str.equals(key)) {
                this.currentImageHasFace = 0;
                detectFaces(key, this.centerImage.getBitmapSafe(), this.centerImage.getOrientation());
            }
        }
    }

    private void detectFaces(String key, ImageReceiver.BitmapHolder bitmap, int orientation) {
        if (key != null && bitmap != null && bitmap.bitmap != null) {
            Utilities.globalQueue.postRunnable(new PhotoViewer$$ExternalSyntheticLambda57(this, bitmap, orientation, key));
        }
    }

    /* renamed from: lambda$detectFaces$56$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4248lambda$detectFaces$56$orgtelegramuiPhotoViewer(ImageReceiver.BitmapHolder bitmap, int orientation, String key) {
        FaceDetector faceDetector = null;
        try {
            boolean hasFaces = false;
            faceDetector = new FaceDetector.Builder(ApplicationLoader.applicationContext).setMode(0).setLandmarkType(0).setTrackingEnabled(false).build();
            if (faceDetector.isOperational()) {
                SparseArray<Face> faces = faceDetector.detect(new Frame.Builder().setBitmap(bitmap.bitmap).setRotation(orientation).build());
                if (!(faces == null || faces.size() == 0)) {
                    hasFaces = true;
                }
                AndroidUtilities.runOnUIThread(new PhotoViewer$$ExternalSyntheticLambda56(this, key, hasFaces));
            } else {
                if (BuildVars.LOGS_ENABLED) {
                    FileLog.e("face detection is not operational");
                }
                AndroidUtilities.runOnUIThread(new PhotoViewer$$ExternalSyntheticLambda58(this, bitmap, key));
            }
            if (faceDetector == null) {
                return;
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            if (faceDetector == null) {
                return;
            }
        } catch (Throwable th) {
            if (faceDetector != null) {
                faceDetector.release();
            }
            throw th;
        }
        faceDetector.release();
    }

    /* renamed from: lambda$detectFaces$54$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4246lambda$detectFaces$54$orgtelegramuiPhotoViewer(String key, boolean hasFaces) {
        if (key.equals(this.centerImage.getImageKey())) {
            this.currentImageHasFace = hasFaces;
            this.currentImageFaceKey = key;
        }
    }

    /* renamed from: lambda$detectFaces$55$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4247lambda$detectFaces$55$orgtelegramuiPhotoViewer(ImageReceiver.BitmapHolder bitmap, String key) {
        bitmap.release();
        if (key.equals(this.centerImage.getImageKey())) {
            this.currentImageHasFace = 2;
            this.currentImageFaceKey = key;
        }
    }

    private void switchToEditMode(int mode) {
        int navigationBarColorTo;
        int i;
        Bitmap bitmap;
        int hasFaces;
        int i2;
        int i3;
        float oldScale;
        float newScale;
        final int i4 = mode;
        if (this.currentEditMode == i4) {
            return;
        }
        if ((!this.isCurrentVideo || this.photoProgressViews[0].backgroundState == 3 || this.isCurrentVideo || (this.centerImage.getBitmap() != null && this.photoProgressViews[0].backgroundState == -1)) && this.changeModeAnimation == null && this.imageMoveAnimation == null && this.captionEditText.getTag() == null) {
            this.windowView.setClipChildren(i4 == 2);
            int navigationBarColorFrom = NUM;
            if (this.navigationBar.getBackground() instanceof ColorDrawable) {
                navigationBarColorFrom = ((ColorDrawable) this.navigationBar.getBackground()).getColor();
            }
            if (i4 == 1) {
                navigationBarColorTo = -NUM;
            } else if (i4 == 3) {
                navigationBarColorTo = -16777216;
            } else {
                navigationBarColorTo = NUM;
            }
            this.navigationBar.setVisibility(i4 != 2 ? 0 : 4);
            this.switchingToMode = i4;
            if (i4 == 0) {
                if (this.centerImage.getBitmap() != null) {
                    int bitmapWidth = this.centerImage.getBitmapWidth();
                    int bitmapHeight = this.centerImage.getBitmapHeight();
                    int i5 = this.currentEditMode;
                    if (i5 == 3) {
                        if (this.sendPhotoType == 1) {
                            if (this.cropTransform.getOrientation() == 90 || this.cropTransform.getOrientation() == 270) {
                                int temp = bitmapWidth;
                                bitmapWidth = bitmapHeight;
                                bitmapHeight = temp;
                            }
                        } else if (this.editState.cropState != null) {
                            if (this.editState.cropState.transformRotation == 90 || this.editState.cropState.transformRotation == 270) {
                                int temp2 = bitmapWidth;
                                bitmapWidth = bitmapHeight;
                                bitmapHeight = temp2;
                            }
                            bitmapWidth = (int) (((float) bitmapWidth) * this.editState.cropState.cropPw);
                            bitmapHeight = (int) (((float) bitmapHeight) * this.editState.cropState.cropPh);
                        }
                        newScale = Math.min(((float) getContainerViewWidth(0)) / ((float) bitmapWidth), ((float) getContainerViewHeight(0)) / ((float) bitmapHeight));
                        oldScale = Math.min(((float) getContainerViewWidth(3)) / ((float) bitmapWidth), ((float) getContainerViewHeight(3)) / ((float) bitmapHeight));
                    } else {
                        if (i5 != 1 && this.editState.cropState != null && (this.editState.cropState.transformRotation == 90 || this.editState.cropState.transformRotation == 270)) {
                            float scaleToFitX = ((float) getContainerViewWidth()) / ((float) bitmapHeight);
                            if (((float) bitmapWidth) * scaleToFitX > ((float) getContainerViewHeight())) {
                                scaleToFitX = ((float) getContainerViewHeight()) / ((float) bitmapWidth);
                            }
                            this.scale = 1.0f / (scaleToFitX / Math.min(((float) getContainerViewWidth()) / ((float) bitmapWidth), ((float) getContainerViewHeight()) / ((float) bitmapHeight)));
                        } else if (this.sendPhotoType == 1 && (this.cropTransform.getOrientation() == 90 || this.cropTransform.getOrientation() == 270)) {
                            float scaleToFitX2 = ((float) getContainerViewWidth()) / ((float) bitmapHeight);
                            if (((float) bitmapWidth) * scaleToFitX2 > ((float) getContainerViewHeight())) {
                                scaleToFitX2 = ((float) getContainerViewHeight()) / ((float) bitmapWidth);
                            }
                            this.scale = 1.0f / ((((this.cropTransform.getScale() / this.cropTransform.getTrueCropScale()) * scaleToFitX2) / Math.min(((float) getContainerViewWidth()) / ((float) bitmapWidth), ((float) getContainerViewHeight()) / ((float) bitmapHeight))) / this.cropTransform.getMinScale());
                        }
                        if (this.editState.cropState != null) {
                            if (this.editState.cropState.transformRotation == 90 || this.editState.cropState.transformRotation == 270) {
                                int temp3 = bitmapWidth;
                                bitmapWidth = bitmapHeight;
                                bitmapHeight = temp3;
                            }
                            bitmapWidth = (int) (((float) bitmapWidth) * this.editState.cropState.cropPw);
                            bitmapHeight = (int) (((float) bitmapHeight) * this.editState.cropState.cropPh);
                        } else if (this.sendPhotoType == 1 && (this.cropTransform.getOrientation() == 90 || this.cropTransform.getOrientation() == 270)) {
                            int temp4 = bitmapWidth;
                            bitmapWidth = bitmapHeight;
                            bitmapHeight = temp4;
                        }
                        oldScale = Math.min(((float) getContainerViewWidth()) / ((float) bitmapWidth), ((float) getContainerViewHeight()) / ((float) bitmapHeight));
                        if (this.sendPhotoType == 1) {
                            newScale = getCropFillScale(this.cropTransform.getOrientation() == 90 || this.cropTransform.getOrientation() == 270);
                        } else {
                            newScale = Math.min(((float) getContainerViewWidth(0)) / ((float) bitmapWidth), ((float) getContainerViewHeight(0)) / ((float) bitmapHeight));
                        }
                    }
                    this.animateToScale = newScale / oldScale;
                    this.animateToX = 0.0f;
                    this.translationX = (float) ((getLeftInset() / 2) - (getRightInset() / 2));
                    if (this.sendPhotoType == 1) {
                        int i6 = this.currentEditMode;
                        if (i6 == 2) {
                            this.animateToY = (float) AndroidUtilities.dp(36.0f);
                        } else if (i6 == 3) {
                            this.animateToY = (float) (-AndroidUtilities.dp(12.0f));
                        }
                    } else {
                        int i7 = this.currentEditMode;
                        if (i7 == 1) {
                            this.animateToY = (float) AndroidUtilities.dp(56.0f);
                        } else if (i7 == 2) {
                            this.animateToY = (float) AndroidUtilities.dp(93.0f);
                        } else if (i7 == 3) {
                            this.animateToY = (float) AndroidUtilities.dp(44.0f);
                        }
                        if (isStatusBarVisible()) {
                            this.animateToY -= (float) (AndroidUtilities.statusBarHeight / 2);
                        }
                    }
                    this.animationStartTime = System.currentTimeMillis();
                    this.zoomAnimation = true;
                }
                this.padImageForHorizontalInsets = false;
                this.imageMoveAnimation = new AnimatorSet();
                ArrayList<Animator> animators = new ArrayList<>(4);
                int i8 = this.currentEditMode;
                if (i8 == 1) {
                    animators.add(ObjectAnimator.ofFloat(this.editorDoneLayout, View.TRANSLATION_Y, new float[]{(float) AndroidUtilities.dp(48.0f)}));
                    animators.add(ObjectAnimator.ofFloat(this, AnimationProperties.PHOTO_VIEWER_ANIMATION_VALUE, new float[]{0.0f, 1.0f}));
                    animators.add(ObjectAnimator.ofFloat(this.photoCropView, View.ALPHA, new float[]{0.0f}));
                    ValueAnimator scaleAnimator = ValueAnimator.ofFloat(new float[]{0.0f, 1.0f});
                    scaleAnimator.addUpdateListener(new PhotoViewer$$ExternalSyntheticLambda11(this));
                    animators.add(scaleAnimator);
                    i3 = 2;
                } else if (i8 == 2) {
                    this.photoFilterView.shutdown();
                    animators.add(ObjectAnimator.ofFloat(this.photoFilterView.getToolsView(), View.TRANSLATION_Y, new float[]{(float) AndroidUtilities.dp(186.0f)}));
                    animators.add(ObjectAnimator.ofFloat(this.photoFilterView.getCurveControl(), View.ALPHA, new float[]{0.0f}));
                    animators.add(ObjectAnimator.ofFloat(this.photoFilterView.getBlurControl(), View.ALPHA, new float[]{0.0f}));
                    animators.add(ObjectAnimator.ofFloat(this, AnimationProperties.PHOTO_VIEWER_ANIMATION_VALUE, new float[]{0.0f, 1.0f}));
                    i3 = 2;
                } else if (i8 == 3) {
                    this.paintingOverlay.showAll();
                    this.containerView.invalidate();
                    this.photoPaintView.shutdown();
                    animators.add(ObjectAnimator.ofFloat(this.photoPaintView.getToolsView(), View.TRANSLATION_Y, new float[]{(float) AndroidUtilities.dp(126.0f)}));
                    animators.add(ObjectAnimator.ofFloat(this.photoPaintView.getColorPickerBackground(), View.TRANSLATION_Y, new float[]{(float) AndroidUtilities.dp(126.0f)}));
                    animators.add(ObjectAnimator.ofFloat(this.photoPaintView.getColorPicker(), View.TRANSLATION_Y, new float[]{(float) AndroidUtilities.dp(126.0f)}));
                    i3 = 2;
                    animators.add(ObjectAnimator.ofFloat(this, AnimationProperties.PHOTO_VIEWER_ANIMATION_VALUE, new float[]{0.0f, 1.0f}));
                } else {
                    i3 = 2;
                }
                View view = this.navigationBar;
                ArgbEvaluator argbEvaluator = new ArgbEvaluator();
                Object[] objArr = new Object[i3];
                objArr[0] = Integer.valueOf(navigationBarColorFrom);
                objArr[1] = Integer.valueOf(navigationBarColorTo);
                animators.add(ObjectAnimator.ofObject(view, "backgroundColor", argbEvaluator, objArr));
                this.imageMoveAnimation.playTogether(animators);
                this.imageMoveAnimation.setDuration(200);
                this.imageMoveAnimation.addListener(new AnimatorListenerAdapter() {
                    public void onAnimationEnd(Animator animation) {
                        if (PhotoViewer.this.currentEditMode == 1) {
                            PhotoViewer.this.photoCropView.onDisappear();
                            PhotoViewer.this.photoCropView.onHide();
                            PhotoViewer.this.editorDoneLayout.setVisibility(8);
                            PhotoViewer.this.photoCropView.setVisibility(8);
                            PhotoViewer.this.photoCropView.cropView.areaView.setRotationScaleTranslation(0.0f, 1.0f, 0.0f, 0.0f);
                        } else if (PhotoViewer.this.currentEditMode == 2) {
                            try {
                                PhotoViewer.this.containerView.removeView(PhotoViewer.this.photoFilterView);
                            } catch (Exception e) {
                                FileLog.e((Throwable) e);
                            }
                            PhotoFilterView unused = PhotoViewer.this.photoFilterView = null;
                        } else if (PhotoViewer.this.currentEditMode == 3) {
                            try {
                                PhotoViewer.this.containerView.removeView(PhotoViewer.this.photoPaintView);
                            } catch (Exception e2) {
                                FileLog.e((Throwable) e2);
                            }
                            PhotoPaintView unused2 = PhotoViewer.this.photoPaintView = null;
                        }
                        AnimatorSet unused3 = PhotoViewer.this.imageMoveAnimation = null;
                        int unused4 = PhotoViewer.this.currentEditMode = i4;
                        int unused5 = PhotoViewer.this.switchingToMode = -1;
                        boolean unused6 = PhotoViewer.this.applying = false;
                        if (PhotoViewer.this.sendPhotoType == 1) {
                            PhotoViewer.this.photoCropView.setVisibility(0);
                        }
                        float unused7 = PhotoViewer.this.animateToScale = 1.0f;
                        float unused8 = PhotoViewer.this.animateToX = 0.0f;
                        float unused9 = PhotoViewer.this.animateToY = 0.0f;
                        float unused10 = PhotoViewer.this.scale = 1.0f;
                        PhotoViewer photoViewer = PhotoViewer.this;
                        photoViewer.updateMinMax(photoViewer.scale);
                        PhotoViewer.this.containerView.invalidate();
                        if (PhotoViewer.this.savedState != null) {
                            PhotoViewer.this.savedState.restore();
                            SavedState unused11 = PhotoViewer.this.savedState = null;
                            ActionBarToggleParams toggleParams = new ActionBarToggleParams().enableStatusBarAnimation(false);
                            PhotoViewer.this.toggleActionBar(false, false, toggleParams);
                            PhotoViewer.this.toggleActionBar(true, true, toggleParams);
                            return;
                        }
                        AnimatorSet animatorSet = new AnimatorSet();
                        ArrayList<Animator> arrayList = new ArrayList<>();
                        arrayList.add(ObjectAnimator.ofFloat(PhotoViewer.this.pickerView, View.TRANSLATION_Y, new float[]{0.0f}));
                        arrayList.add(ObjectAnimator.ofFloat(PhotoViewer.this.pickerViewSendButton, View.TRANSLATION_Y, new float[]{0.0f}));
                        if (PhotoViewer.this.sendPhotoType != 1) {
                            arrayList.add(ObjectAnimator.ofFloat(PhotoViewer.this.actionBar, View.TRANSLATION_Y, new float[]{0.0f}));
                        }
                        if (PhotoViewer.this.needCaptionLayout) {
                            arrayList.add(ObjectAnimator.ofFloat(PhotoViewer.this.captionTextViewSwitcher, View.TRANSLATION_Y, new float[]{0.0f}));
                        }
                        if (PhotoViewer.this.sendPhotoType == 0 || PhotoViewer.this.sendPhotoType == 4) {
                            arrayList.add(ObjectAnimator.ofFloat(PhotoViewer.this.checkImageView, View.ALPHA, new float[]{1.0f}));
                            arrayList.add(ObjectAnimator.ofFloat(PhotoViewer.this.photosCounterView, View.ALPHA, new float[]{1.0f}));
                        } else if (PhotoViewer.this.sendPhotoType == 1) {
                            arrayList.add(ObjectAnimator.ofFloat(PhotoViewer.this.photoCropView, View.ALPHA, new float[]{1.0f}));
                        }
                        if (PhotoViewer.this.cameraItem.getTag() != null) {
                            PhotoViewer.this.cameraItem.setVisibility(0);
                            arrayList.add(ObjectAnimator.ofFloat(PhotoViewer.this.cameraItem, View.ALPHA, new float[]{1.0f}));
                        }
                        if (PhotoViewer.this.muteItem.getTag() != null) {
                            PhotoViewer.this.muteItem.setVisibility(0);
                            arrayList.add(ObjectAnimator.ofFloat(PhotoViewer.this.muteItem, View.ALPHA, new float[]{1.0f}));
                        }
                        if (PhotoViewer.this.navigationBar != null) {
                            PhotoViewer.this.navigationBar.setVisibility(0);
                            arrayList.add(ObjectAnimator.ofFloat(PhotoViewer.this.navigationBar, View.ALPHA, new float[]{1.0f}));
                        }
                        animatorSet.playTogether(arrayList);
                        animatorSet.setDuration(200);
                        animatorSet.addListener(new AnimatorListenerAdapter() {
                            public void onAnimationStart(Animator animation) {
                                PhotoViewer.this.pickerView.setVisibility(0);
                                PhotoViewer.this.pickerViewSendButton.setVisibility(0);
                                PhotoViewer.this.actionBar.setVisibility(0);
                                if (PhotoViewer.this.needCaptionLayout) {
                                    PhotoViewer.this.captionTextViewSwitcher.setVisibility(PhotoViewer.this.captionTextViewSwitcher.getTag() != null ? 0 : 4);
                                }
                                if (PhotoViewer.this.sendPhotoType == 0 || PhotoViewer.this.sendPhotoType == 4 || ((PhotoViewer.this.sendPhotoType == 2 || PhotoViewer.this.sendPhotoType == 5) && PhotoViewer.this.imagesArrLocals.size() > 1)) {
                                    PhotoViewer.this.checkImageView.setVisibility(0);
                                    PhotoViewer.this.photosCounterView.setVisibility(0);
                                }
                            }
                        });
                        animatorSet.start();
                    }
                });
                this.imageMoveAnimation.start();
            } else if (i4 == 1) {
                startVideoPlayer();
                createCropView();
                this.previousHasTransform = this.cropTransform.hasViewTransform();
                this.previousCropPx = this.cropTransform.getCropPx();
                this.previousCropPy = this.cropTransform.getCropPy();
                this.previousCropScale = this.cropTransform.getScale();
                this.previousCropRotation = this.cropTransform.getRotation();
                this.previousCropOrientation = this.cropTransform.getOrientation();
                this.previousCropPw = this.cropTransform.getCropPw();
                this.previousCropPh = this.cropTransform.getCropPh();
                this.previousCropMirrored = this.cropTransform.isMirrored();
                this.photoCropView.onAppear();
                this.editorDoneLayout.doneButton.setText(LocaleController.getString("Crop", NUM));
                this.editorDoneLayout.doneButton.setTextColor(getThemedColor("dialogFloatingButton"));
                this.changeModeAnimation = new AnimatorSet();
                ArrayList<Animator> arrayList = new ArrayList<>();
                FrameLayout frameLayout = this.pickerView;
                Property property = View.TRANSLATION_Y;
                float[] fArr = new float[2];
                fArr[0] = 0.0f;
                fArr[1] = (float) AndroidUtilities.dp(this.isCurrentVideo ? 154.0f : 96.0f);
                arrayList.add(ObjectAnimator.ofFloat(frameLayout, property, fArr));
                ImageView imageView = this.pickerViewSendButton;
                Property property2 = View.TRANSLATION_Y;
                float[] fArr2 = new float[2];
                fArr2[0] = 0.0f;
                fArr2[1] = (float) AndroidUtilities.dp(this.isCurrentVideo ? 154.0f : 96.0f);
                arrayList.add(ObjectAnimator.ofFloat(imageView, property2, fArr2));
                arrayList.add(ObjectAnimator.ofFloat(this.actionBar, View.TRANSLATION_Y, new float[]{0.0f, (float) (-this.actionBar.getHeight())}));
                arrayList.add(ObjectAnimator.ofObject(this.navigationBar, "backgroundColor", new ArgbEvaluator(), new Object[]{Integer.valueOf(navigationBarColorFrom), Integer.valueOf(navigationBarColorTo)}));
                if (this.needCaptionLayout) {
                    CaptionTextViewSwitcher captionTextViewSwitcher2 = this.captionTextViewSwitcher;
                    Property property3 = View.TRANSLATION_Y;
                    float[] fArr3 = new float[2];
                    fArr3[0] = 0.0f;
                    fArr3[1] = (float) AndroidUtilities.dp(this.isCurrentVideo ? 154.0f : 96.0f);
                    arrayList.add(ObjectAnimator.ofFloat(captionTextViewSwitcher2, property3, fArr3));
                }
                int i9 = this.sendPhotoType;
                if (i9 == 0 || i9 == 4) {
                    arrayList.add(ObjectAnimator.ofFloat(this.checkImageView, View.ALPHA, new float[]{1.0f, 0.0f}));
                    arrayList.add(ObjectAnimator.ofFloat(this.photosCounterView, View.ALPHA, new float[]{1.0f, 0.0f}));
                }
                if (this.selectedPhotosListView.getVisibility() == 0) {
                    arrayList.add(ObjectAnimator.ofFloat(this.selectedPhotosListView, View.ALPHA, new float[]{1.0f, 0.0f}));
                }
                if (this.cameraItem.getTag() != null) {
                    arrayList.add(ObjectAnimator.ofFloat(this.cameraItem, View.ALPHA, new float[]{1.0f, 0.0f}));
                }
                if (this.muteItem.getTag() != null) {
                    arrayList.add(ObjectAnimator.ofFloat(this.muteItem, View.ALPHA, new float[]{1.0f, 0.0f}));
                }
                View view2 = this.navigationBar;
                if (view2 != null) {
                    arrayList.add(ObjectAnimator.ofFloat(view2, View.ALPHA, new float[]{1.0f}));
                }
                this.changeModeAnimation.playTogether(arrayList);
                this.changeModeAnimation.setDuration(200);
                this.changeModeAnimation.addListener(new AnimatorListenerAdapter() {
                    public void onAnimationEnd(Animator animation) {
                        VideoEditTextureView videoEditTextureView = null;
                        AnimatorSet unused = PhotoViewer.this.changeModeAnimation = null;
                        PhotoViewer.this.pickerView.setVisibility(8);
                        PhotoViewer.this.pickerViewSendButton.setVisibility(8);
                        PhotoViewer.this.cameraItem.setVisibility(8);
                        PhotoViewer.this.muteItem.setVisibility(8);
                        PhotoViewer.this.selectedPhotosListView.setVisibility(8);
                        PhotoViewer.this.selectedPhotosListView.setAlpha(0.0f);
                        PhotoViewer.this.selectedPhotosListView.setTranslationY((float) (-AndroidUtilities.dp(10.0f)));
                        PhotoViewer.this.photosCounterView.setRotationX(0.0f);
                        PhotoViewer.this.selectedPhotosListView.setEnabled(false);
                        boolean unused2 = PhotoViewer.this.isPhotosListViewVisible = false;
                        if (PhotoViewer.this.needCaptionLayout) {
                            PhotoViewer.this.captionTextViewSwitcher.setVisibility(4);
                        }
                        if (PhotoViewer.this.sendPhotoType == 0 || PhotoViewer.this.sendPhotoType == 4 || ((PhotoViewer.this.sendPhotoType == 2 || PhotoViewer.this.sendPhotoType == 5) && PhotoViewer.this.imagesArrLocals.size() > 1)) {
                            PhotoViewer.this.checkImageView.setVisibility(8);
                            PhotoViewer.this.photosCounterView.setVisibility(8);
                        }
                        Bitmap bitmap = PhotoViewer.this.centerImage.getBitmap();
                        if (bitmap != null || PhotoViewer.this.isCurrentVideo) {
                            PhotoCropView access$1300 = PhotoViewer.this.photoCropView;
                            int orientation = PhotoViewer.this.centerImage.getOrientation();
                            boolean z = PhotoViewer.this.sendPhotoType != 1;
                            PaintingOverlay access$9200 = PhotoViewer.this.paintingOverlay;
                            CropTransform access$24600 = PhotoViewer.this.cropTransform;
                            if (PhotoViewer.this.isCurrentVideo) {
                                videoEditTextureView = (VideoEditTextureView) PhotoViewer.this.videoTextureView;
                            }
                            access$1300.setBitmap(bitmap, orientation, z, false, access$9200, access$24600, videoEditTextureView, PhotoViewer.this.editState.cropState);
                            PhotoViewer.this.photoCropView.onDisappear();
                            int bitmapWidth = PhotoViewer.this.centerImage.getBitmapWidth();
                            int bitmapHeight = PhotoViewer.this.centerImage.getBitmapHeight();
                            if (PhotoViewer.this.editState.cropState != null) {
                                if (PhotoViewer.this.editState.cropState.transformRotation == 90 || PhotoViewer.this.editState.cropState.transformRotation == 270) {
                                    int temp = bitmapWidth;
                                    bitmapWidth = bitmapHeight;
                                    bitmapHeight = temp;
                                }
                                bitmapWidth = (int) (((float) bitmapWidth) * PhotoViewer.this.editState.cropState.cropPw);
                                bitmapHeight = (int) (((float) bitmapHeight) * PhotoViewer.this.editState.cropState.cropPh);
                            }
                            float scaleX = ((float) PhotoViewer.this.getContainerViewWidth()) / ((float) bitmapWidth);
                            float scaleY = ((float) PhotoViewer.this.getContainerViewHeight()) / ((float) bitmapHeight);
                            float newScaleX = ((float) PhotoViewer.this.getContainerViewWidth(1)) / ((float) bitmapWidth);
                            float newScaleY = ((float) PhotoViewer.this.getContainerViewHeight(1)) / ((float) bitmapHeight);
                            float scale = Math.min(scaleX, scaleY);
                            float newScale = Math.min(newScaleX, newScaleY);
                            if (PhotoViewer.this.sendPhotoType == 1) {
                                float minSide = (float) Math.min(PhotoViewer.this.getContainerViewWidth(1), PhotoViewer.this.getContainerViewHeight(1));
                                newScale = Math.max(minSide / ((float) bitmapWidth), minSide / ((float) bitmapHeight));
                            }
                            float unused3 = PhotoViewer.this.animateToScale = newScale / scale;
                            PhotoViewer photoViewer = PhotoViewer.this;
                            float unused4 = photoViewer.animateToX = (float) ((photoViewer.getLeftInset() / 2) - (PhotoViewer.this.getRightInset() / 2));
                            float unused5 = PhotoViewer.this.animateToY = (float) ((-AndroidUtilities.dp(56.0f)) + (PhotoViewer.this.isStatusBarVisible() ? AndroidUtilities.statusBarHeight / 2 : 0));
                            long unused6 = PhotoViewer.this.animationStartTime = System.currentTimeMillis();
                            boolean unused7 = PhotoViewer.this.zoomAnimation = true;
                        }
                        AnimatorSet unused8 = PhotoViewer.this.imageMoveAnimation = new AnimatorSet();
                        PhotoViewer.this.imageMoveAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(PhotoViewer.this.editorDoneLayout, View.TRANSLATION_Y, new float[]{(float) AndroidUtilities.dp(48.0f), 0.0f}), ObjectAnimator.ofFloat(PhotoViewer.this, AnimationProperties.PHOTO_VIEWER_ANIMATION_VALUE, new float[]{0.0f, 1.0f}), ObjectAnimator.ofFloat(PhotoViewer.this.photoCropView, View.ALPHA, new float[]{0.0f, 1.0f})});
                        PhotoViewer.this.imageMoveAnimation.setDuration(200);
                        PhotoViewer.this.imageMoveAnimation.addListener(new AnimatorListenerAdapter() {
                            public void onAnimationStart(Animator animation) {
                                PhotoViewer.this.editorDoneLayout.setVisibility(0);
                                PhotoViewer.this.photoCropView.setVisibility(0);
                            }

                            public void onAnimationEnd(Animator animation) {
                                PhotoViewer.this.photoCropView.onAppeared();
                                PhotoViewer.this.photoCropView.onShow();
                                AnimatorSet unused = PhotoViewer.this.imageMoveAnimation = null;
                                int unused2 = PhotoViewer.this.currentEditMode = i4;
                                int unused3 = PhotoViewer.this.switchingToMode = -1;
                                float unused4 = PhotoViewer.this.animateToScale = 1.0f;
                                float unused5 = PhotoViewer.this.animateToX = 0.0f;
                                float unused6 = PhotoViewer.this.animateToY = 0.0f;
                                float unused7 = PhotoViewer.this.scale = 1.0f;
                                PhotoViewer.this.updateMinMax(PhotoViewer.this.scale);
                                boolean unused8 = PhotoViewer.this.padImageForHorizontalInsets = true;
                                PhotoViewer.this.containerView.invalidate();
                            }
                        });
                        PhotoViewer.this.imageMoveAnimation.start();
                    }
                });
                this.changeModeAnimation.start();
            } else if (i4 == 2) {
                startVideoPlayer();
                if (this.photoFilterView == null) {
                    MediaController.SavedFilterState state = null;
                    String originalPath = null;
                    int orientation = 0;
                    if (!this.imagesArrLocals.isEmpty()) {
                        Object object = this.imagesArrLocals.get(this.currentIndex);
                        if (object instanceof MediaController.PhotoEntry) {
                            orientation = ((MediaController.PhotoEntry) object).orientation;
                        }
                        MediaController.MediaEditState editState2 = (MediaController.MediaEditState) object;
                        state = editState2.savedFilterState;
                        originalPath = editState2.getPath();
                    }
                    if (this.videoTextureView != null) {
                        bitmap = null;
                    } else if (state == null) {
                        bitmap = this.centerImage.getBitmap();
                        orientation = this.centerImage.getOrientation();
                    } else {
                        bitmap = BitmapFactory.decodeFile(originalPath);
                    }
                    if (this.sendPhotoType == 1) {
                        hasFaces = 1;
                    } else if (this.isCurrentVideo != 0 || (i2 = this.currentImageHasFace) == 2) {
                        hasFaces = 2;
                    } else {
                        hasFaces = i2 == 1 ? 1 : 0;
                    }
                    Activity activity = this.parentActivity;
                    TextureView textureView = this.videoTextureView;
                    PhotoFilterView photoFilterView2 = new PhotoFilterView(activity, textureView != null ? (VideoEditTextureView) textureView : null, bitmap, orientation, state, this.isCurrentVideo ? null : this.paintingOverlay, hasFaces, textureView == null && ((this.editState.cropState != null && this.editState.cropState.mirrored) || this.cropTransform.isMirrored()), this.resourcesProvider);
                    this.photoFilterView = photoFilterView2;
                    this.containerView.addView(photoFilterView2, LayoutHelper.createFrame(-1, -1.0f));
                    this.photoFilterView.getDoneTextView().setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda29(this));
                    this.photoFilterView.getCancelTextView().setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda30(this));
                    this.photoFilterView.getToolsView().setTranslationY((float) AndroidUtilities.dp(186.0f));
                }
                this.changeModeAnimation = new AnimatorSet();
                ArrayList<Animator> arrayList2 = new ArrayList<>();
                FrameLayout frameLayout2 = this.pickerView;
                Property property4 = View.TRANSLATION_Y;
                float[] fArr4 = new float[2];
                fArr4[0] = 0.0f;
                fArr4[1] = (float) AndroidUtilities.dp(this.isCurrentVideo ? 154.0f : 96.0f);
                arrayList2.add(ObjectAnimator.ofFloat(frameLayout2, property4, fArr4));
                ImageView imageView2 = this.pickerViewSendButton;
                Property property5 = View.TRANSLATION_Y;
                float[] fArr5 = new float[2];
                fArr5[0] = 0.0f;
                fArr5[1] = (float) AndroidUtilities.dp(this.isCurrentVideo ? 154.0f : 96.0f);
                arrayList2.add(ObjectAnimator.ofFloat(imageView2, property5, fArr5));
                arrayList2.add(ObjectAnimator.ofFloat(this.actionBar, View.TRANSLATION_Y, new float[]{0.0f, (float) (-this.actionBar.getHeight())}));
                int i10 = this.sendPhotoType;
                if (i10 == 0 || i10 == 4) {
                    arrayList2.add(ObjectAnimator.ofFloat(this.checkImageView, View.ALPHA, new float[]{1.0f, 0.0f}));
                    arrayList2.add(ObjectAnimator.ofFloat(this.photosCounterView, View.ALPHA, new float[]{1.0f, 0.0f}));
                } else if (i10 == 1) {
                    arrayList2.add(ObjectAnimator.ofFloat(this.photoCropView, View.ALPHA, new float[]{1.0f, 0.0f}));
                }
                if (this.selectedPhotosListView.getVisibility() == 0) {
                    arrayList2.add(ObjectAnimator.ofFloat(this.selectedPhotosListView, View.ALPHA, new float[]{1.0f, 0.0f}));
                }
                if (this.cameraItem.getTag() != null) {
                    arrayList2.add(ObjectAnimator.ofFloat(this.cameraItem, View.ALPHA, new float[]{1.0f, 0.0f}));
                }
                if (this.muteItem.getTag() != null) {
                    i = 2;
                    arrayList2.add(ObjectAnimator.ofFloat(this.muteItem, View.ALPHA, new float[]{1.0f, 0.0f}));
                } else {
                    i = 2;
                }
                View view3 = this.navigationBar;
                ArgbEvaluator argbEvaluator2 = new ArgbEvaluator();
                Object[] objArr2 = new Object[i];
                objArr2[0] = Integer.valueOf(navigationBarColorFrom);
                objArr2[1] = Integer.valueOf(navigationBarColorTo);
                arrayList2.add(ObjectAnimator.ofObject(view3, "backgroundColor", argbEvaluator2, objArr2));
                this.changeModeAnimation.playTogether(arrayList2);
                this.changeModeAnimation.setDuration(200);
                this.changeModeAnimation.addListener(new AnimatorListenerAdapter() {
                    public void onAnimationEnd(Animator animation) {
                        float oldScale;
                        AnimatorSet unused = PhotoViewer.this.changeModeAnimation = null;
                        PhotoViewer.this.pickerView.setVisibility(8);
                        PhotoViewer.this.pickerViewSendButton.setVisibility(8);
                        PhotoViewer.this.actionBar.setVisibility(8);
                        PhotoViewer.this.cameraItem.setVisibility(8);
                        PhotoViewer.this.muteItem.setVisibility(8);
                        if (PhotoViewer.this.photoCropView != null) {
                            PhotoViewer.this.photoCropView.setVisibility(4);
                        }
                        PhotoViewer.this.selectedPhotosListView.setVisibility(8);
                        PhotoViewer.this.selectedPhotosListView.setAlpha(0.0f);
                        PhotoViewer.this.selectedPhotosListView.setTranslationY((float) (-AndroidUtilities.dp(10.0f)));
                        PhotoViewer.this.photosCounterView.setRotationX(0.0f);
                        PhotoViewer.this.selectedPhotosListView.setEnabled(false);
                        boolean unused2 = PhotoViewer.this.isPhotosListViewVisible = false;
                        if (PhotoViewer.this.needCaptionLayout) {
                            PhotoViewer.this.captionTextViewSwitcher.setVisibility(4);
                        }
                        if (PhotoViewer.this.sendPhotoType == 0 || PhotoViewer.this.sendPhotoType == 4 || ((PhotoViewer.this.sendPhotoType == 2 || PhotoViewer.this.sendPhotoType == 5) && PhotoViewer.this.imagesArrLocals.size() > 1)) {
                            PhotoViewer.this.checkImageView.setVisibility(8);
                            PhotoViewer.this.photosCounterView.setVisibility(8);
                        }
                        if (PhotoViewer.this.centerImage.getBitmap() != null) {
                            int bitmapWidth = PhotoViewer.this.centerImage.getBitmapWidth();
                            int bitmapHeight = PhotoViewer.this.centerImage.getBitmapHeight();
                            float newScale = Math.min(((float) PhotoViewer.this.getContainerViewWidth(2)) / ((float) bitmapWidth), ((float) PhotoViewer.this.getContainerViewHeight(2)) / ((float) bitmapHeight));
                            if (PhotoViewer.this.sendPhotoType == 1) {
                                float unused3 = PhotoViewer.this.animateToY = (float) (-AndroidUtilities.dp(36.0f));
                                oldScale = PhotoViewer.this.getCropFillScale(false);
                            } else {
                                float unused4 = PhotoViewer.this.animateToY = (float) ((-AndroidUtilities.dp(93.0f)) + (PhotoViewer.this.isStatusBarVisible() ? AndroidUtilities.statusBarHeight / 2 : 0));
                                if (PhotoViewer.this.editState.cropState == null || !(PhotoViewer.this.editState.cropState.transformRotation == 90 || PhotoViewer.this.editState.cropState.transformRotation == 270)) {
                                    oldScale = Math.min(((float) PhotoViewer.this.getContainerViewWidth()) / ((float) bitmapWidth), ((float) PhotoViewer.this.getContainerViewHeight()) / ((float) bitmapHeight));
                                } else {
                                    oldScale = Math.min(((float) PhotoViewer.this.getContainerViewWidth()) / ((float) bitmapHeight), ((float) PhotoViewer.this.getContainerViewHeight()) / ((float) bitmapWidth));
                                }
                            }
                            float unused5 = PhotoViewer.this.animateToScale = newScale / oldScale;
                            PhotoViewer photoViewer = PhotoViewer.this;
                            float unused6 = photoViewer.animateToX = (float) ((photoViewer.getLeftInset() / 2) - (PhotoViewer.this.getRightInset() / 2));
                            long unused7 = PhotoViewer.this.animationStartTime = System.currentTimeMillis();
                            boolean unused8 = PhotoViewer.this.zoomAnimation = true;
                        }
                        AnimatorSet unused9 = PhotoViewer.this.imageMoveAnimation = new AnimatorSet();
                        PhotoViewer.this.imageMoveAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(PhotoViewer.this, AnimationProperties.PHOTO_VIEWER_ANIMATION_VALUE, new float[]{0.0f, 1.0f}), ObjectAnimator.ofFloat(PhotoViewer.this.photoFilterView.getToolsView(), View.TRANSLATION_Y, new float[]{(float) AndroidUtilities.dp(186.0f), 0.0f})});
                        PhotoViewer.this.imageMoveAnimation.setDuration(200);
                        PhotoViewer.this.imageMoveAnimation.addListener(new AnimatorListenerAdapter() {
                            public void onAnimationStart(Animator animation) {
                            }

                            public void onAnimationEnd(Animator animation) {
                                PhotoViewer.this.photoFilterView.init();
                                AnimatorSet unused = PhotoViewer.this.imageMoveAnimation = null;
                                int unused2 = PhotoViewer.this.currentEditMode = i4;
                                int unused3 = PhotoViewer.this.switchingToMode = -1;
                                float unused4 = PhotoViewer.this.animateToScale = 1.0f;
                                float unused5 = PhotoViewer.this.animateToX = 0.0f;
                                float unused6 = PhotoViewer.this.animateToY = 0.0f;
                                float unused7 = PhotoViewer.this.scale = 1.0f;
                                PhotoViewer.this.updateMinMax(PhotoViewer.this.scale);
                                boolean unused8 = PhotoViewer.this.padImageForHorizontalInsets = true;
                                PhotoViewer.this.containerView.invalidate();
                            }
                        });
                        PhotoViewer.this.imageMoveAnimation.start();
                    }
                });
                this.changeModeAnimation.start();
            } else if (i4 == 3) {
                startVideoPlayer();
                createPaintView();
                this.changeModeAnimation = new AnimatorSet();
                ArrayList<Animator> arrayList3 = new ArrayList<>();
                FrameLayout frameLayout3 = this.pickerView;
                Property property6 = View.TRANSLATION_Y;
                float[] fArr6 = new float[1];
                fArr6[0] = (float) AndroidUtilities.dp(this.isCurrentVideo ? 154.0f : 96.0f);
                arrayList3.add(ObjectAnimator.ofFloat(frameLayout3, property6, fArr6));
                ImageView imageView3 = this.pickerViewSendButton;
                Property property7 = View.TRANSLATION_Y;
                float[] fArr7 = new float[1];
                fArr7[0] = (float) AndroidUtilities.dp(this.isCurrentVideo ? 154.0f : 96.0f);
                arrayList3.add(ObjectAnimator.ofFloat(imageView3, property7, fArr7));
                arrayList3.add(ObjectAnimator.ofFloat(this.actionBar, View.TRANSLATION_Y, new float[]{(float) (-this.actionBar.getHeight())}));
                arrayList3.add(ObjectAnimator.ofObject(this.navigationBar, "backgroundColor", new ArgbEvaluator(), new Object[]{Integer.valueOf(navigationBarColorFrom), Integer.valueOf(navigationBarColorTo)}));
                if (this.needCaptionLayout) {
                    CaptionTextViewSwitcher captionTextViewSwitcher3 = this.captionTextViewSwitcher;
                    Property property8 = View.TRANSLATION_Y;
                    float[] fArr8 = new float[1];
                    fArr8[0] = (float) AndroidUtilities.dp(this.isCurrentVideo ? 154.0f : 96.0f);
                    arrayList3.add(ObjectAnimator.ofFloat(captionTextViewSwitcher3, property8, fArr8));
                }
                int i11 = this.sendPhotoType;
                if (i11 == 0 || i11 == 4) {
                    arrayList3.add(ObjectAnimator.ofFloat(this.checkImageView, View.ALPHA, new float[]{1.0f, 0.0f}));
                    arrayList3.add(ObjectAnimator.ofFloat(this.photosCounterView, View.ALPHA, new float[]{1.0f, 0.0f}));
                } else if (i11 == 1) {
                    arrayList3.add(ObjectAnimator.ofFloat(this.photoCropView, View.ALPHA, new float[]{1.0f, 0.0f}));
                }
                if (this.selectedPhotosListView.getVisibility() == 0) {
                    arrayList3.add(ObjectAnimator.ofFloat(this.selectedPhotosListView, View.ALPHA, new float[]{1.0f, 0.0f}));
                }
                if (this.cameraItem.getTag() != null) {
                    arrayList3.add(ObjectAnimator.ofFloat(this.cameraItem, View.ALPHA, new float[]{1.0f, 0.0f}));
                }
                if (this.muteItem.getTag() != null) {
                    arrayList3.add(ObjectAnimator.ofFloat(this.muteItem, View.ALPHA, new float[]{1.0f, 0.0f}));
                }
                this.changeModeAnimation.playTogether(arrayList3);
                this.changeModeAnimation.setDuration(200);
                this.changeModeAnimation.addListener(new AnimatorListenerAdapter() {
                    public void onAnimationEnd(Animator animation) {
                        PhotoViewer.this.switchToPaintMode();
                    }
                });
                this.changeModeAnimation.start();
            }
        }
    }

    /* renamed from: lambda$switchToEditMode$57$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4294lambda$switchToEditMode$57$orgtelegramuiPhotoViewer(ValueAnimator a) {
        this.photoCropView.cropView.areaView.setRotationScaleTranslation(0.0f, AndroidUtilities.lerp(this.scale, this.animateToScale, this.animationValue), AndroidUtilities.lerp(this.translationX, this.animateToX, this.animationValue), AndroidUtilities.lerp(this.translationY, this.animateToY, this.animationValue));
    }

    /* renamed from: lambda$switchToEditMode$58$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4295lambda$switchToEditMode$58$orgtelegramuiPhotoViewer(View v) {
        applyCurrentEditMode();
        switchToEditMode(0);
    }

    /* renamed from: lambda$switchToEditMode$60$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4297lambda$switchToEditMode$60$orgtelegramuiPhotoViewer(View v) {
        if (!this.photoFilterView.hasChanges()) {
            switchToEditMode(0);
        } else if (this.parentActivity != null) {
            AlertDialog.Builder builder = new AlertDialog.Builder(this.parentActivity, this.resourcesProvider);
            builder.setMessage(LocaleController.getString("DiscardChanges", NUM));
            builder.setTitle(LocaleController.getString("AppName", NUM));
            builder.setPositiveButton(LocaleController.getString("OK", NUM), new PhotoViewer$$ExternalSyntheticLambda79(this));
            builder.setNegativeButton(LocaleController.getString("Cancel", NUM), (DialogInterface.OnClickListener) null);
            showAlertDialog(builder);
        }
    }

    /* renamed from: lambda$switchToEditMode$59$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4296lambda$switchToEditMode$59$orgtelegramuiPhotoViewer(DialogInterface dialogInterface, int i) {
        switchToEditMode(0);
    }

    private void createPaintView() {
        int h;
        int w;
        MediaController.CropState state;
        if (this.photoPaintView == null) {
            TextureView textureView = this.videoTextureView;
            if (textureView != null) {
                VideoEditTextureView textureView2 = (VideoEditTextureView) textureView;
                w = textureView2.getVideoWidth();
                h = textureView2.getVideoHeight();
                while (true) {
                    if (w <= 1280 && h <= 1280) {
                        break;
                    }
                    w /= 2;
                    h /= 2;
                }
            } else {
                w = this.centerImage.getBitmapWidth();
                h = this.centerImage.getBitmapHeight();
            }
            Bitmap bitmap = this.paintingOverlay.getBitmap();
            if (bitmap == null) {
                bitmap = Bitmap.createBitmap(w, h, Bitmap.Config.ARGB_8888);
            }
            if (this.sendPhotoType == 1) {
                MediaController.CropState state2 = new MediaController.CropState();
                state2.transformRotation = this.cropTransform.getOrientation();
                state = state2;
            } else {
                state = this.editState.cropState;
            }
            AnonymousClass60 r3 = new PhotoPaintView(this.parentActivity, bitmap, this.isCurrentVideo ? null : this.centerImage.getBitmap(), this.centerImage.getOrientation(), this.editState.mediaEntities, state, new PhotoViewer$$ExternalSyntheticLambda42(this), this.resourcesProvider) {
                /* access modifiers changed from: protected */
                public void onOpenCloseStickersAlert(boolean open) {
                    if (PhotoViewer.this.videoPlayer != null) {
                        boolean unused = PhotoViewer.this.manuallyPaused = false;
                        PhotoViewer.this.cancelVideoPlayRunnable();
                        if (open) {
                            PhotoViewer.this.videoPlayer.pause();
                        } else {
                            PhotoViewer.this.videoPlayer.play();
                        }
                    }
                }

                /* access modifiers changed from: protected */
                public void didSetAnimatedSticker(RLottieDrawable drawable) {
                    if (PhotoViewer.this.videoPlayer != null) {
                        long currentPosition = PhotoViewer.this.videoPlayer.getCurrentPosition();
                        long j = 0;
                        if (PhotoViewer.this.startTime > 0) {
                            j = PhotoViewer.this.startTime / 1000;
                        }
                        drawable.setProgressMs(currentPosition - j);
                    }
                }

                /* access modifiers changed from: protected */
                public void onTextAdd() {
                    if (!PhotoViewer.this.windowView.isFocusable()) {
                        PhotoViewer.this.makeFocusable();
                    }
                }
            };
            this.photoPaintView = r3;
            this.containerView.addView(r3, LayoutHelper.createFrame(-1, -1.0f));
            this.photoPaintView.getDoneTextView().setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda6(this));
            this.photoPaintView.getCancelTextView().setOnClickListener(new PhotoViewer$$ExternalSyntheticLambda7(this));
            this.photoPaintView.getColorPicker().setTranslationY((float) AndroidUtilities.dp(126.0f));
            this.photoPaintView.getToolsView().setTranslationY((float) AndroidUtilities.dp(126.0f));
            this.photoPaintView.getColorPickerBackground().setTranslationY((float) AndroidUtilities.dp(126.0f));
        }
    }

    /* renamed from: lambda$createPaintView$61$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4240lambda$createPaintView$61$orgtelegramuiPhotoViewer() {
        this.paintingOverlay.hideBitmap();
    }

    /* renamed from: lambda$createPaintView$62$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4241lambda$createPaintView$62$orgtelegramuiPhotoViewer(View v) {
        this.savedState = null;
        applyCurrentEditMode();
        switchToEditMode(0);
    }

    /* renamed from: lambda$createPaintView$63$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4242lambda$createPaintView$63$orgtelegramuiPhotoViewer(View v) {
        closePaintMode();
    }

    private void closePaintMode() {
        this.photoPaintView.maybeShowDismissalAlert(this, this.parentActivity, new PhotoViewer$$ExternalSyntheticLambda41(this));
    }

    /* renamed from: lambda$closePaintMode$64$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4236lambda$closePaintMode$64$orgtelegramuiPhotoViewer() {
        switchToEditMode(0);
    }

    /* access modifiers changed from: private */
    public void switchToPaintMode() {
        this.changeModeAnimation = null;
        this.pickerView.setVisibility(8);
        this.pickerViewSendButton.setVisibility(8);
        this.cameraItem.setVisibility(8);
        this.muteItem.setVisibility(8);
        PhotoCropView photoCropView2 = this.photoCropView;
        if (photoCropView2 != null) {
            photoCropView2.setVisibility(4);
        }
        this.selectedPhotosListView.setVisibility(8);
        this.selectedPhotosListView.setAlpha(0.0f);
        this.selectedPhotosListView.setTranslationY((float) (-AndroidUtilities.dp(10.0f)));
        this.photosCounterView.setRotationX(0.0f);
        this.selectedPhotosListView.setEnabled(false);
        this.isPhotosListViewVisible = false;
        if (this.needCaptionLayout) {
            this.captionTextViewSwitcher.setVisibility(4);
        }
        int i = this.sendPhotoType;
        if (i == 0 || i == 4 || ((i == 2 || i == 5) && this.imagesArrLocals.size() > 1)) {
            this.checkImageView.setVisibility(8);
            this.photosCounterView.setVisibility(8);
        }
        Bitmap bitmap = this.centerImage.getBitmap();
        float f = this.scale;
        if (bitmap != null) {
            int bitmapWidth = this.centerImage.getBitmapWidth();
            int bitmapHeight = this.centerImage.getBitmapHeight();
            if (this.sendPhotoType == 1) {
                this.animateToY = (float) AndroidUtilities.dp(12.0f);
                if (this.cropTransform.getOrientation() == 90 || this.cropTransform.getOrientation() == 270) {
                    int temp = bitmapWidth;
                    bitmapWidth = bitmapHeight;
                    bitmapHeight = temp;
                }
            } else {
                this.animateToY = (float) ((-AndroidUtilities.dp(44.0f)) + (isStatusBarVisible() ? AndroidUtilities.statusBarHeight / 2 : 0));
                if (this.editState.cropState != null) {
                    if (this.editState.cropState.transformRotation == 90 || this.editState.cropState.transformRotation == 270) {
                        int temp2 = bitmapWidth;
                        bitmapWidth = bitmapHeight;
                        bitmapHeight = temp2;
                    }
                    bitmapWidth = (int) (((float) bitmapWidth) * this.editState.cropState.cropPw);
                    bitmapHeight = (int) (((float) bitmapHeight) * this.editState.cropState.cropPh);
                }
            }
            this.animateToScale = Math.min(((float) getContainerViewWidth(3)) / ((float) bitmapWidth), ((float) getContainerViewHeight(3)) / ((float) bitmapHeight)) / Math.min(((float) getContainerViewWidth()) / ((float) bitmapWidth), ((float) getContainerViewHeight()) / ((float) bitmapHeight));
            this.animateToX = (float) ((getLeftInset() / 2) - (getRightInset() / 2));
            this.animationStartTime = System.currentTimeMillis();
            this.zoomAnimation = true;
        }
        this.windowView.setClipChildren(true);
        this.navigationBar.setVisibility(4);
        AnimatorSet animatorSet = new AnimatorSet();
        this.imageMoveAnimation = animatorSet;
        animatorSet.playTogether(new Animator[]{ObjectAnimator.ofFloat(this, AnimationProperties.PHOTO_VIEWER_ANIMATION_VALUE, new float[]{0.0f, 1.0f}), ObjectAnimator.ofFloat(this.photoPaintView.getColorPicker(), View.TRANSLATION_Y, new float[]{(float) AndroidUtilities.dp(126.0f), 0.0f}), ObjectAnimator.ofFloat(this.photoPaintView.getToolsView(), View.TRANSLATION_Y, new float[]{(float) AndroidUtilities.dp(126.0f), 0.0f}), ObjectAnimator.ofFloat(this.photoPaintView.getColorPickerBackground(), View.TRANSLATION_Y, new float[]{(float) AndroidUtilities.dp(126.0f), 0.0f})});
        this.imageMoveAnimation.setDuration(200);
        this.imageMoveAnimation.addListener(new AnimatorListenerAdapter() {
            public void onAnimationStart(Animator animation) {
            }

            public void onAnimationEnd(Animator animation) {
                PhotoViewer.this.photoPaintView.init();
                PhotoViewer.this.paintingOverlay.hideEntities();
                AnimatorSet unused = PhotoViewer.this.imageMoveAnimation = null;
                int unused2 = PhotoViewer.this.currentEditMode = 3;
                int unused3 = PhotoViewer.this.switchingToMode = -1;
                PhotoViewer photoViewer = PhotoViewer.this;
                float unused4 = photoViewer.animateToScale = photoViewer.scale = 1.0f;
                float unused5 = PhotoViewer.this.animateToX = 0.0f;
                float unused6 = PhotoViewer.this.animateToY = 0.0f;
                PhotoViewer photoViewer2 = PhotoViewer.this;
                photoViewer2.updateMinMax(photoViewer2.scale);
                boolean unused7 = PhotoViewer.this.padImageForHorizontalInsets = true;
                PhotoViewer.this.containerView.invalidate();
            }
        });
        this.imageMoveAnimation.start();
    }

    private void toggleCheckImageView(boolean show) {
        AnimatorSet animatorSet = new AnimatorSet();
        ArrayList<Animator> arrayList = new ArrayList<>();
        float offsetY = AndroidUtilities.dpf2(24.0f);
        FrameLayout frameLayout = this.pickerView;
        Property property = View.ALPHA;
        float[] fArr = new float[1];
        float f = 1.0f;
        float f2 = 0.0f;
        fArr[0] = show ? 1.0f : 0.0f;
        arrayList.add(ObjectAnimator.ofFloat(frameLayout, property, fArr));
        FrameLayout frameLayout2 = this.pickerView;
        Property property2 = View.TRANSLATION_Y;
        float[] fArr2 = new float[1];
        fArr2[0] = show ? 0.0f : offsetY;
        arrayList.add(ObjectAnimator.ofFloat(frameLayout2, property2, fArr2));
        ImageView imageView = this.pickerViewSendButton;
        Property property3 = View.ALPHA;
        float[] fArr3 = new float[1];
        fArr3[0] = show ? 1.0f : 0.0f;
        arrayList.add(ObjectAnimator.ofFloat(imageView, property3, fArr3));
        ImageView imageView2 = this.pickerViewSendButton;
        Property property4 = View.TRANSLATION_Y;
        float[] fArr4 = new float[1];
        fArr4[0] = show ? 0.0f : offsetY;
        arrayList.add(ObjectAnimator.ofFloat(imageView2, property4, fArr4));
        int i = this.sendPhotoType;
        if (i == 0 || i == 4) {
            CheckBox checkBox = this.checkImageView;
            Property property5 = View.ALPHA;
            float[] fArr5 = new float[1];
            fArr5[0] = show ? 1.0f : 0.0f;
            arrayList.add(ObjectAnimator.ofFloat(checkBox, property5, fArr5));
            CheckBox checkBox2 = this.checkImageView;
            Property property6 = View.TRANSLATION_Y;
            float[] fArr6 = new float[1];
            fArr6[0] = show ? 0.0f : -offsetY;
            arrayList.add(ObjectAnimator.ofFloat(checkBox2, property6, fArr6));
            CounterView counterView = this.photosCounterView;
            Property property7 = View.ALPHA;
            float[] fArr7 = new float[1];
            if (!show) {
                f = 0.0f;
            }
            fArr7[0] = f;
            arrayList.add(ObjectAnimator.ofFloat(counterView, property7, fArr7));
            CounterView counterView2 = this.photosCounterView;
            Property property8 = View.TRANSLATION_Y;
            float[] fArr8 = new float[1];
            if (!show) {
                f2 = -offsetY;
            }
            fArr8[0] = f2;
            arrayList.add(ObjectAnimator.ofFloat(counterView2, property8, fArr8));
        }
        animatorSet.playTogether(arrayList);
        animatorSet.setDuration(200);
        animatorSet.start();
    }

    private void toggleMiniProgressInternal(final boolean show) {
        if (show) {
            this.miniProgressView.setVisibility(0);
        }
        AnimatorSet animatorSet = new AnimatorSet();
        this.miniProgressAnimator = animatorSet;
        Animator[] animatorArr = new Animator[1];
        RadialProgressView radialProgressView = this.miniProgressView;
        Property property = View.ALPHA;
        float[] fArr = new float[1];
        fArr[0] = show ? 1.0f : 0.0f;
        animatorArr[0] = ObjectAnimator.ofFloat(radialProgressView, property, fArr);
        animatorSet.playTogether(animatorArr);
        this.miniProgressAnimator.setDuration(200);
        this.miniProgressAnimator.addListener(new AnimatorListenerAdapter() {
            public void onAnimationEnd(Animator animation) {
                if (animation.equals(PhotoViewer.this.miniProgressAnimator)) {
                    if (!show) {
                        PhotoViewer.this.miniProgressView.setVisibility(4);
                    }
                    AnimatorSet unused = PhotoViewer.this.miniProgressAnimator = null;
                }
            }

            public void onAnimationCancel(Animator animation) {
                if (animation.equals(PhotoViewer.this.miniProgressAnimator)) {
                    AnimatorSet unused = PhotoViewer.this.miniProgressAnimator = null;
                }
            }
        });
        this.miniProgressAnimator.start();
    }

    private void toggleMiniProgress(boolean show, boolean animated) {
        AndroidUtilities.cancelRunOnUIThread(this.miniProgressShowRunnable);
        int i = 0;
        if (animated) {
            toggleMiniProgressInternal(show);
            if (show) {
                AnimatorSet animatorSet = this.miniProgressAnimator;
                if (animatorSet != null) {
                    animatorSet.cancel();
                    this.miniProgressAnimator = null;
                }
                if (this.firstAnimationDelay) {
                    this.firstAnimationDelay = false;
                    toggleMiniProgressInternal(true);
                    return;
                }
                AndroidUtilities.runOnUIThread(this.miniProgressShowRunnable, 500);
                return;
            }
            AnimatorSet animatorSet2 = this.miniProgressAnimator;
            if (animatorSet2 != null) {
                animatorSet2.cancel();
                toggleMiniProgressInternal(false);
                return;
            }
            return;
        }
        AnimatorSet animatorSet3 = this.miniProgressAnimator;
        if (animatorSet3 != null) {
            animatorSet3.cancel();
            this.miniProgressAnimator = null;
        }
        this.miniProgressView.setAlpha(show ? 1.0f : 0.0f);
        RadialProgressView radialProgressView = this.miniProgressView;
        if (!show) {
            i = 4;
        }
        radialProgressView.setVisibility(i);
    }

    private void updateContainerFlags(boolean actionBarVisible) {
        FrameLayoutDrawer frameLayoutDrawer;
        if (Build.VERSION.SDK_INT >= 21 && this.sendPhotoType != 1 && (frameLayoutDrawer = this.containerView) != null) {
            int flags = 1792;
            if (!actionBarVisible) {
                flags = 1792 | 4;
                if (frameLayoutDrawer.getPaddingLeft() > 0 || this.containerView.getPaddingRight() > 0) {
                    flags |= 4098;
                }
            }
            this.containerView.setSystemUiVisibility(flags);
        }
    }

    private static class ActionBarToggleParams {
        public static final ActionBarToggleParams DEFAULT = new ActionBarToggleParams();
        public int animationDuration = 200;
        public Interpolator animationInterpolator;
        public boolean enableStatusBarAnimation = true;
        public boolean enableTranslationAnimation = true;

        public ActionBarToggleParams enableStatusBarAnimation(boolean val) {
            this.enableStatusBarAnimation = val;
            return this;
        }

        public ActionBarToggleParams enableTranslationAnimation(boolean val) {
            this.enableTranslationAnimation = val;
            return this;
        }

        public ActionBarToggleParams animationDuration(int val) {
            this.animationDuration = val;
            return this;
        }

        public ActionBarToggleParams animationInterpolator(Interpolator val) {
            this.animationInterpolator = val;
            return this;
        }
    }

    /* access modifiers changed from: private */
    public void toggleActionBar(boolean show, boolean animated) {
        toggleActionBar(show, animated, ActionBarToggleParams.DEFAULT);
    }

    /* access modifiers changed from: private */
    public void toggleActionBar(boolean show, boolean animated, ActionBarToggleParams params) {
        CaptionScrollView captionScrollView2;
        CaptionScrollView captionScrollView3;
        if (this.currentEditMode == 0) {
            int i = this.switchingToMode;
            if (i == 0 || i == -1) {
                final boolean finalShow = show;
                AnimatorSet animatorSet = this.actionBarAnimator;
                if (animatorSet != null) {
                    animatorSet.cancel();
                }
                if (show) {
                    this.actionBar.setVisibility(0);
                    if (this.bottomLayout.getTag() != null) {
                        this.bottomLayout.setVisibility(0);
                    }
                    if (this.captionTextViewSwitcher.getTag() != null) {
                        this.captionTextViewSwitcher.setVisibility(0);
                        VideoSeekPreviewImage videoSeekPreviewImage = this.videoPreviewFrame;
                        if (videoSeekPreviewImage != null) {
                            videoSeekPreviewImage.requestLayout();
                        }
                    }
                }
                this.isActionBarVisible = show;
                if (params.enableStatusBarAnimation) {
                    updateContainerFlags(show);
                }
                if (!this.videoPlayerControlVisible || !this.isPlaying || !show) {
                    AndroidUtilities.cancelRunOnUIThread(this.hideActionBarRunnable);
                } else {
                    scheduleActionBarHide();
                }
                if (!show) {
                    Bulletin.hide((FrameLayout) this.containerView);
                }
                float offsetY = AndroidUtilities.dpf2(24.0f);
                this.videoPlayerControlFrameLayout.setSeekBarTransitionEnabled(params.enableTranslationAnimation && this.playerLooping);
                this.videoPlayerControlFrameLayout.setTranslationYAnimationEnabled(params.enableTranslationAnimation);
                float f = 1.0f;
                if (animated) {
                    ArrayList<Animator> arrayList = new ArrayList<>();
                    ActionBar actionBar2 = this.actionBar;
                    Property property = View.ALPHA;
                    float[] fArr = new float[1];
                    fArr[0] = show ? 1.0f : 0.0f;
                    arrayList.add(ObjectAnimator.ofFloat(actionBar2, property, fArr));
                    if (params.enableTranslationAnimation) {
                        ActionBar actionBar3 = this.actionBar;
                        Property property2 = View.TRANSLATION_Y;
                        float[] fArr2 = new float[1];
                        fArr2[0] = show ? 0.0f : -offsetY;
                        arrayList.add(ObjectAnimator.ofFloat(actionBar3, property2, fArr2));
                    } else {
                        this.actionBar.setTranslationY(0.0f);
                    }
                    if (this.allowShowFullscreenButton) {
                        ImageView imageView = this.fullscreenButton[0];
                        Property property3 = View.ALPHA;
                        float[] fArr3 = new float[1];
                        fArr3[0] = show ? 1.0f : 0.0f;
                        arrayList.add(ObjectAnimator.ofFloat(imageView, property3, fArr3));
                    }
                    for (int a = 1; a < 3; a++) {
                        this.fullscreenButton[a].setTranslationY(show ? 0.0f : offsetY);
                    }
                    if (params.enableTranslationAnimation) {
                        ImageView imageView2 = this.fullscreenButton[0];
                        Property property4 = View.TRANSLATION_Y;
                        float[] fArr4 = new float[1];
                        fArr4[0] = show ? 0.0f : offsetY;
                        arrayList.add(ObjectAnimator.ofFloat(imageView2, property4, fArr4));
                    } else {
                        this.fullscreenButton[0].setTranslationY(0.0f);
                    }
                    FrameLayout frameLayout = this.bottomLayout;
                    if (frameLayout != null) {
                        Property property5 = View.ALPHA;
                        float[] fArr5 = new float[1];
                        fArr5[0] = show ? 1.0f : 0.0f;
                        arrayList.add(ObjectAnimator.ofFloat(frameLayout, property5, fArr5));
                        if (params.enableTranslationAnimation) {
                            FrameLayout frameLayout2 = this.bottomLayout;
                            Property property6 = View.TRANSLATION_Y;
                            float[] fArr6 = new float[1];
                            fArr6[0] = show ? 0.0f : offsetY;
                            arrayList.add(ObjectAnimator.ofFloat(frameLayout2, property6, fArr6));
                        } else {
                            this.bottomLayout.setTranslationY(0.0f);
                        }
                    }
                    View view = this.navigationBar;
                    if (view != null) {
                        Property property7 = View.ALPHA;
                        float[] fArr7 = new float[1];
                        fArr7[0] = show ? 1.0f : 0.0f;
                        arrayList.add(ObjectAnimator.ofFloat(view, property7, fArr7));
                    }
                    if (this.videoPlayerControlVisible) {
                        VideoPlayerControlFrameLayout videoPlayerControlFrameLayout2 = this.videoPlayerControlFrameLayout;
                        Property<VideoPlayerControlFrameLayout, Float> property8 = VPC_PROGRESS;
                        float[] fArr8 = new float[1];
                        fArr8[0] = show ? 1.0f : 0.0f;
                        arrayList.add(ObjectAnimator.ofFloat(videoPlayerControlFrameLayout2, property8, fArr8));
                    } else {
                        this.videoPlayerControlFrameLayout.setProgress(show ? 1.0f : 0.0f);
                    }
                    GroupedPhotosListView groupedPhotosListView2 = this.groupedPhotosListView;
                    Property property9 = View.ALPHA;
                    float[] fArr9 = new float[1];
                    fArr9[0] = show ? 1.0f : 0.0f;
                    arrayList.add(ObjectAnimator.ofFloat(groupedPhotosListView2, property9, fArr9));
                    if (params.enableTranslationAnimation) {
                        GroupedPhotosListView groupedPhotosListView3 = this.groupedPhotosListView;
                        Property property10 = View.TRANSLATION_Y;
                        float[] fArr10 = new float[1];
                        fArr10[0] = show ? 0.0f : offsetY;
                        arrayList.add(ObjectAnimator.ofFloat(groupedPhotosListView3, property10, fArr10));
                    } else {
                        this.groupedPhotosListView.setTranslationY(0.0f);
                    }
                    if (!this.needCaptionLayout && (captionScrollView3 = this.captionScrollView) != null) {
                        Property property11 = View.ALPHA;
                        float[] fArr11 = new float[1];
                        fArr11[0] = show ? 1.0f : 0.0f;
                        arrayList.add(ObjectAnimator.ofFloat(captionScrollView3, property11, fArr11));
                        if (params.enableTranslationAnimation) {
                            CaptionScrollView captionScrollView4 = this.captionScrollView;
                            Property property12 = View.TRANSLATION_Y;
                            float[] fArr12 = new float[1];
                            fArr12[0] = show ? 0.0f : offsetY;
                            arrayList.add(ObjectAnimator.ofFloat(captionScrollView4, property12, fArr12));
                        } else {
                            this.captionScrollView.setTranslationY(0.0f);
                        }
                    }
                    if (this.videoPlayerControlVisible && this.isPlaying) {
                        float[] fArr13 = new float[2];
                        fArr13[0] = this.photoProgressViews[0].animAlphas[1];
                        fArr13[1] = show ? 1.0f : 0.0f;
                        ValueAnimator anim = ValueAnimator.ofFloat(fArr13);
                        anim.addUpdateListener(new PhotoViewer$$ExternalSyntheticLambda22(this));
                        arrayList.add(anim);
                    }
                    if (this.muteItem.getTag() != null) {
                        ImageView imageView3 = this.muteItem;
                        Property property13 = View.ALPHA;
                        float[] fArr14 = new float[1];
                        if (!show) {
                            f = 0.0f;
                        }
                        fArr14[0] = f;
                        arrayList.add(ObjectAnimator.ofFloat(imageView3, property13, fArr14));
                    }
                    AnimatorSet animatorSet2 = new AnimatorSet();
                    this.actionBarAnimator = animatorSet2;
                    animatorSet2.playTogether(arrayList);
                    this.actionBarAnimator.setDuration((long) params.animationDuration);
                    this.actionBarAnimator.setInterpolator(params.animationInterpolator);
                    this.actionBarAnimator.addListener(new AnimatorListenerAdapter() {
                        public void onAnimationEnd(Animator animation) {
                            if (animation.equals(PhotoViewer.this.actionBarAnimator)) {
                                if (!finalShow) {
                                    PhotoViewer.this.actionBar.setVisibility(4);
                                    if (PhotoViewer.this.bottomLayout.getTag() != null) {
                                        PhotoViewer.this.bottomLayout.setVisibility(4);
                                    }
                                    if (PhotoViewer.this.captionTextViewSwitcher.getTag() != null) {
                                        PhotoViewer.this.captionTextViewSwitcher.setVisibility(4);
                                    }
                                }
                                AnimatorSet unused = PhotoViewer.this.actionBarAnimator = null;
                            }
                        }

                        public void onAnimationCancel(Animator animation) {
                            if (animation.equals(PhotoViewer.this.actionBarAnimator)) {
                                AnimatorSet unused = PhotoViewer.this.actionBarAnimator = null;
                            }
                        }
                    });
                    this.actionBarAnimator.start();
                    return;
                }
                this.actionBar.setAlpha(show ? 1.0f : 0.0f);
                if (this.fullscreenButton[0].getTranslationX() != 0.0f && this.allowShowFullscreenButton) {
                    this.fullscreenButton[0].setAlpha(show ? 1.0f : 0.0f);
                }
                for (int a2 = 0; a2 < 3; a2++) {
                    this.fullscreenButton[a2].setTranslationY(show ? 0.0f : offsetY);
                }
                this.actionBar.setTranslationY(show ? 0.0f : -offsetY);
                this.bottomLayout.setAlpha(show ? 1.0f : 0.0f);
                this.bottomLayout.setTranslationY(show ? 0.0f : offsetY);
                this.navigationBar.setAlpha(show ? 1.0f : 0.0f);
                this.groupedPhotosListView.setAlpha(show ? 1.0f : 0.0f);
                this.groupedPhotosListView.setTranslationY(show ? 0.0f : offsetY);
                if (!this.needCaptionLayout && (captionScrollView2 = this.captionScrollView) != null) {
                    captionScrollView2.setAlpha(show ? 1.0f : 0.0f);
                    this.captionScrollView.setTranslationY(show ? 0.0f : offsetY);
                }
                this.videoPlayerControlFrameLayout.setProgress(show ? 1.0f : 0.0f);
                if (this.muteItem.getTag() != null) {
                    this.muteItem.setAlpha(show ? 1.0f : 0.0f);
                }
                if (this.videoPlayerControlVisible && this.isPlaying) {
                    PhotoProgressView photoProgressView = this.photoProgressViews[0];
                    if (!show) {
                        f = 0.0f;
                    }
                    photoProgressView.setIndexedAlpha(1, f, false);
                }
            }
        }
    }

    /* renamed from: lambda$toggleActionBar$65$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4299lambda$toggleActionBar$65$orgtelegramuiPhotoViewer(ValueAnimator a) {
        this.photoProgressViews[0].setIndexedAlpha(1, ((Float) a.getAnimatedValue()).floatValue(), false);
    }

    private void togglePhotosListView(boolean show, boolean animated) {
        if (show != this.isPhotosListViewVisible) {
            if (show) {
                this.selectedPhotosListView.setVisibility(0);
            }
            this.isPhotosListViewVisible = show;
            this.selectedPhotosListView.setEnabled(show);
            float f = 1.0f;
            if (animated) {
                ArrayList<Animator> arrayList = new ArrayList<>();
                SelectedPhotosListView selectedPhotosListView2 = this.selectedPhotosListView;
                Property property = View.ALPHA;
                float[] fArr = new float[1];
                fArr[0] = show ? 1.0f : 0.0f;
                arrayList.add(ObjectAnimator.ofFloat(selectedPhotosListView2, property, fArr));
                SelectedPhotosListView selectedPhotosListView3 = this.selectedPhotosListView;
                Property property2 = View.TRANSLATION_Y;
                float[] fArr2 = new float[1];
                fArr2[0] = show ? 0.0f : (float) (-AndroidUtilities.dp(10.0f));
                arrayList.add(ObjectAnimator.ofFloat(selectedPhotosListView3, property2, fArr2));
                CounterView counterView = this.photosCounterView;
                Property property3 = View.ROTATION_X;
                float[] fArr3 = new float[1];
                if (!show) {
                    f = 0.0f;
                }
                fArr3[0] = f;
                arrayList.add(ObjectAnimator.ofFloat(counterView, property3, fArr3));
                AnimatorSet animatorSet = new AnimatorSet();
                this.currentListViewAnimation = animatorSet;
                animatorSet.playTogether(arrayList);
                if (!show) {
                    this.currentListViewAnimation.addListener(new AnimatorListenerAdapter() {
                        public void onAnimationEnd(Animator animation) {
                            if (PhotoViewer.this.currentListViewAnimation != null && PhotoViewer.this.currentListViewAnimation.equals(animation)) {
                                PhotoViewer.this.selectedPhotosListView.setVisibility(8);
                                AnimatorSet unused = PhotoViewer.this.currentListViewAnimation = null;
                            }
                        }
                    });
                }
                this.currentListViewAnimation.setDuration(200);
                this.currentListViewAnimation.start();
                return;
            }
            this.selectedPhotosListView.setAlpha(show ? 1.0f : 0.0f);
            this.selectedPhotosListView.setTranslationY(show ? 0.0f : (float) (-AndroidUtilities.dp(10.0f)));
            CounterView counterView2 = this.photosCounterView;
            if (!show) {
                f = 0.0f;
            }
            counterView2.setRotationX(f);
            if (!show) {
                this.selectedPhotosListView.setVisibility(8);
            }
        }
    }

    /* access modifiers changed from: private */
    public void toggleVideoPlayer() {
        if (this.videoPlayer != null) {
            cancelVideoPlayRunnable();
            AndroidUtilities.cancelRunOnUIThread(this.hideActionBarRunnable);
            if (this.isPlaying) {
                this.videoPlayer.pause();
            } else {
                if (!this.isCurrentVideo) {
                    if (Math.abs(this.videoPlayerSeekbar.getProgress() - this.videoTimelineView.getRightProgress()) < 0.01f || this.videoPlayer.getCurrentPosition() == this.videoPlayer.getDuration()) {
                        this.videoPlayer.seekTo(0);
                    }
                    scheduleActionBarHide();
                } else if (Math.abs(this.videoTimelineView.getProgress() - this.videoTimelineView.getRightProgress()) < 0.01f || this.videoPlayer.getCurrentPosition() == this.videoPlayer.getDuration()) {
                    this.videoPlayer.seekTo((long) ((int) (this.videoTimelineView.getLeftProgress() * ((float) this.videoPlayer.getDuration()))));
                }
                this.videoPlayer.play();
            }
            this.containerView.invalidate();
        }
    }

    private String getFileName(int index) {
        if (index < 0) {
            return null;
        }
        if (!this.secureDocuments.isEmpty()) {
            if (index >= this.secureDocuments.size()) {
                return null;
            }
            SecureDocument location = this.secureDocuments.get(index);
            return location.secureFile.dc_id + "_" + location.secureFile.id + ".jpg";
        } else if (this.imagesArrLocations.isEmpty() && this.imagesArr.isEmpty()) {
            if (this.imagesArrLocals.isEmpty()) {
                PageBlocksAdapter pageBlocksAdapter2 = this.pageBlocksAdapter;
                if (pageBlocksAdapter2 != null) {
                    return pageBlocksAdapter2.getFileName(index);
                }
            } else if (index >= this.imagesArrLocals.size()) {
                return null;
            } else {
                Object object = this.imagesArrLocals.get(index);
                if (object instanceof MediaController.SearchImage) {
                    return ((MediaController.SearchImage) object).getAttachName();
                }
                if (object instanceof TLRPC.BotInlineResult) {
                    TLRPC.BotInlineResult botInlineResult = (TLRPC.BotInlineResult) object;
                    if (botInlineResult.document != null) {
                        return FileLoader.getAttachFileName(botInlineResult.document);
                    }
                    if (botInlineResult.photo != null) {
                        return FileLoader.getAttachFileName(FileLoader.getClosestPhotoSizeWithSize(botInlineResult.photo.sizes, AndroidUtilities.getPhotoSize()));
                    }
                    if (botInlineResult.content instanceof TLRPC.TL_webDocument) {
                        return Utilities.MD5(botInlineResult.content.url) + "." + ImageLoader.getHttpUrlExtension(botInlineResult.content.url, FileLoader.getMimeTypePart(botInlineResult.content.mime_type));
                    }
                }
            }
            return null;
        } else if (!this.imagesArrLocations.isEmpty()) {
            if (index >= this.imagesArrLocations.size()) {
                return null;
            }
            ImageLocation location2 = this.imagesArrLocations.get(index);
            ImageLocation videoLocation = this.imagesArrLocationsVideo.get(index);
            if (location2 == null) {
                return null;
            }
            if (videoLocation != location2) {
                return videoLocation.location.volume_id + "_" + videoLocation.location.local_id + ".mp4";
            }
            return location2.location.volume_id + "_" + location2.location.local_id + ".jpg";
        } else if (index >= this.imagesArr.size()) {
            return null;
        } else {
            return FileLoader.getMessageFileName(this.imagesArr.get(index).messageOwner);
        }
    }

    private ImageLocation getImageLocation(int index, long[] size) {
        if (index < 0) {
            return null;
        }
        if (!this.secureDocuments.isEmpty()) {
            if (index >= this.secureDocuments.size()) {
                return null;
            }
            if (size != null) {
                size[0] = this.secureDocuments.get(index).secureFile.size;
            }
            return ImageLocation.getForSecureDocument(this.secureDocuments.get(index));
        } else if (!this.imagesArrLocations.isEmpty()) {
            if (index >= this.imagesArrLocations.size()) {
                return null;
            }
            if (size != null) {
                size[0] = this.imagesArrLocationsSizes.get(index).longValue();
            }
            return this.imagesArrLocationsVideo.get(index);
        } else if (this.imagesArr.isEmpty() || index >= this.imagesArr.size()) {
            return null;
        } else {
            MessageObject message = this.imagesArr.get(index);
            if (message.messageOwner instanceof TLRPC.TL_messageService) {
                if (message.messageOwner.action instanceof TLRPC.TL_messageActionUserUpdatedPhoto) {
                    return null;
                }
                TLRPC.PhotoSize sizeFull = FileLoader.getClosestPhotoSizeWithSize(message.photoThumbs, AndroidUtilities.getPhotoSize());
                if (sizeFull != null) {
                    if (size != null) {
                        size[0] = (long) sizeFull.size;
                        if (size[0] == 0) {
                            size[0] = -1;
                        }
                    }
                    return ImageLocation.getForObject(sizeFull, message.photoThumbsObject);
                } else if (size != null) {
                    size[0] = -1;
                }
            } else if ((!(message.messageOwner.media instanceof TLRPC.TL_messageMediaPhoto) || message.messageOwner.media.photo == null) && (!(message.messageOwner.media instanceof TLRPC.TL_messageMediaWebPage) || message.messageOwner.media.webpage == null)) {
                if (message.messageOwner.media instanceof TLRPC.TL_messageMediaInvoice) {
                    return ImageLocation.getForWebFile(WebFile.createWithWebDocument(((TLRPC.TL_messageMediaInvoice) message.messageOwner.media).photo));
                }
                if (message.getDocument() != null) {
                    TLRPC.Document document = message.getDocument();
                    if (this.sharedMediaType == 5) {
                        return ImageLocation.getForDocument(document);
                    }
                    if (MessageObject.isDocumentHasThumb(message.getDocument())) {
                        TLRPC.PhotoSize thumb = FileLoader.getClosestPhotoSizeWithSize(document.thumbs, 90);
                        if (size != null) {
                            size[0] = (long) thumb.size;
                            if (size[0] == 0) {
                                size[0] = -1;
                            }
                        }
                        return ImageLocation.getForDocument(thumb, document);
                    }
                }
            } else if (message.isGif()) {
                return ImageLocation.getForDocument(message.getDocument());
            } else {
                TLRPC.PhotoSize sizeFull2 = FileLoader.getClosestPhotoSizeWithSize(message.photoThumbs, AndroidUtilities.getPhotoSize(), false, (TLRPC.PhotoSize) null, true);
                if (sizeFull2 != null) {
                    if (size != null) {
                        size[0] = (long) sizeFull2.size;
                        if (size[0] == 0) {
                            size[0] = -1;
                        }
                    }
                    return ImageLocation.getForObject(sizeFull2, message.photoThumbsObject);
                } else if (size != null) {
                    size[0] = -1;
                }
            }
            return null;
        }
    }

    /* access modifiers changed from: private */
    public TLObject getFileLocation(int index, long[] size) {
        if (index < 0) {
            return null;
        }
        if (!this.secureDocuments.isEmpty()) {
            if (index >= this.secureDocuments.size()) {
                return null;
            }
            if (size != null) {
                size[0] = this.secureDocuments.get(index).secureFile.size;
            }
            return this.secureDocuments.get(index);
        } else if (!this.imagesArrLocations.isEmpty()) {
            if (index >= this.imagesArrLocations.size()) {
                return null;
            }
            if (size != null) {
                size[0] = this.imagesArrLocationsSizes.get(index).longValue();
            }
            return this.imagesArrLocationsVideo.get(index).location;
        } else if (this.imagesArr.isEmpty() || index >= this.imagesArr.size()) {
            return null;
        } else {
            MessageObject message = this.imagesArr.get(index);
            if (message.messageOwner instanceof TLRPC.TL_messageService) {
                if (message.messageOwner.action instanceof TLRPC.TL_messageActionUserUpdatedPhoto) {
                    return message.messageOwner.action.newUserPhoto.photo_big;
                }
                TLRPC.PhotoSize sizeFull = FileLoader.getClosestPhotoSizeWithSize(message.photoThumbs, AndroidUtilities.getPhotoSize());
                if (sizeFull != null) {
                    if (size != null) {
                        size[0] = (long) sizeFull.size;
                        if (size[0] == 0) {
                            size[0] = -1;
                        }
                    }
                    return sizeFull;
                } else if (size != null) {
                    size[0] = -1;
                }
            } else if (((message.messageOwner.media instanceof TLRPC.TL_messageMediaPhoto) && message.messageOwner.media.photo != null) || ((message.messageOwner.media instanceof TLRPC.TL_messageMediaWebPage) && message.messageOwner.media.webpage != null)) {
                TLRPC.PhotoSize sizeFull2 = FileLoader.getClosestPhotoSizeWithSize(message.photoThumbs, AndroidUtilities.getPhotoSize(), false, (TLRPC.PhotoSize) null, true);
                if (sizeFull2 != null) {
                    if (size != null) {
                        size[0] = (long) sizeFull2.size;
                        if (size[0] == 0) {
                            size[0] = -1;
                        }
                    }
                    return sizeFull2;
                } else if (size != null) {
                    size[0] = -1;
                }
            } else if (message.messageOwner.media instanceof TLRPC.TL_messageMediaInvoice) {
                return ((TLRPC.TL_messageMediaInvoice) message.messageOwner.media).photo;
            } else {
                if (message.getDocument() != null && MessageObject.isDocumentHasThumb(message.getDocument())) {
                    TLRPC.PhotoSize thumb = FileLoader.getClosestPhotoSizeWithSize(message.getDocument().thumbs, 90);
                    if (size != null) {
                        size[0] = (long) thumb.size;
                        if (size[0] == 0) {
                            size[0] = -1;
                        }
                    }
                    return thumb;
                }
            }
            return null;
        }
    }

    /* access modifiers changed from: private */
    public void updateSelectedCount() {
        PhotoViewerProvider photoViewerProvider = this.placeProvider;
        if (photoViewerProvider != null) {
            int count = photoViewerProvider.getSelectedCount();
            this.photosCounterView.setCount(count);
            if (count == 0) {
                togglePhotosListView(false, true);
            }
        }
    }

    /* access modifiers changed from: private */
    public boolean isCurrentAvatarSet() {
        int i;
        if (this.currentAvatarLocation == null || (i = this.currentIndex) < 0 || i >= this.avatarsArr.size()) {
            return false;
        }
        TLRPC.Photo photo = this.avatarsArr.get(this.currentIndex);
        ImageLocation currentLocation = this.imagesArrLocations.get(this.currentIndex);
        if (photo instanceof TLRPC.TL_photoEmpty) {
            photo = null;
        }
        if (photo != null) {
            int N = photo.sizes.size();
            for (int a = 0; a < N; a++) {
                TLRPC.PhotoSize size = photo.sizes.get(a);
                if (size.location != null && size.location.local_id == this.currentAvatarLocation.location.local_id && size.location.volume_id == this.currentAvatarLocation.location.volume_id) {
                    return true;
                }
            }
        } else if (currentLocation.location.local_id == this.currentAvatarLocation.location.local_id && currentLocation.location.volume_id == this.currentAvatarLocation.location.volume_id) {
            return true;
        } else {
            return false;
        }
        return false;
    }

    private void setItemVisible(View itemView, boolean visible, boolean animate) {
        setItemVisible(itemView, visible, animate, 1.0f);
    }

    private void setItemVisible(View itemView, boolean visible, boolean animate, float maxAlpha) {
        Boolean visibleNow = this.actionBarItemsVisibility.get(itemView);
        if (visibleNow == null || visibleNow.booleanValue() != visible) {
            this.actionBarItemsVisibility.put(itemView, Boolean.valueOf(visible));
            itemView.animate().cancel();
            float alpha = (visible ? 1.0f : 0.0f) * maxAlpha;
            int i = 0;
            if (!animate || visibleNow == null) {
                if (!visible) {
                    i = 8;
                }
                itemView.setVisibility(i);
                itemView.setAlpha(alpha);
                return;
            }
            if (visible) {
                itemView.setVisibility(0);
            }
            itemView.animate().alpha(alpha).setDuration(100).setInterpolator(new LinearInterpolator()).withEndAction(new PhotoViewer$$ExternalSyntheticLambda65(visible, itemView)).start();
        }
    }

    static /* synthetic */ void lambda$setItemVisible$66(boolean visible, View itemView) {
        if (!visible) {
            itemView.setVisibility(8);
        }
    }

    /* JADX WARNING: type inference failed for: r11v1, types: [android.animation.AnimatorSet, java.lang.String] */
    /* JADX WARNING: type inference failed for: r11v28 */
    /* JADX WARNING: type inference failed for: r11v29 */
    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:173:0x04e7 A[RETURN] */
    /* JADX WARNING: Removed duplicated region for block: B:174:0x04e8  */
    /* JADX WARNING: Removed duplicated region for block: B:334:0x0815  */
    /* JADX WARNING: Removed duplicated region for block: B:339:0x0858  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void onPhotoShow(org.telegram.messenger.MessageObject r26, org.telegram.tgnet.TLRPC.FileLocation r27, org.telegram.messenger.ImageLocation r28, org.telegram.messenger.ImageLocation r29, java.util.ArrayList<org.telegram.messenger.MessageObject> r30, java.util.ArrayList<org.telegram.messenger.SecureDocument> r31, java.util.List<java.lang.Object> r32, int r33, org.telegram.ui.PhotoViewer.PlaceProviderObject r34) {
        /*
            r25 = this;
            r0 = r25
            r1 = r26
            r2 = r30
            r3 = r31
            r4 = r32
            r5 = r33
            r6 = r34
            int r7 = org.telegram.tgnet.ConnectionsManager.generateClassGuid()
            r0.classGuid = r7
            r7 = 0
            r0.currentMessageObject = r7
            r0.currentFileLocation = r7
            r0.currentFileLocationVideo = r7
            r0.currentSecureDocument = r7
            r0.currentPathObject = r7
            r0.currentPageBlock = r7
            r8 = 0
            r0.fromCamera = r8
            r0.currentBotInlineResult = r7
            r9 = 0
            r0.avatarStartProgress = r9
            r10 = 0
            r0.avatarStartTime = r10
            r12 = -1
            r0.currentIndex = r12
            java.lang.String[] r13 = r0.currentFileNames
            r13[r8] = r7
            r14 = 1
            java.lang.Integer r15 = java.lang.Integer.valueOf(r14)
            r13[r14] = r7
            r12 = 2
            r13[r12] = r7
            r0.avatarsDialogId = r10
            r0.canEditAvatar = r8
            r0.totalImagesCount = r8
            r0.totalImagesCountMerge = r8
            r0.currentEditMode = r8
            r0.isFirstLoading = r14
            r0.needSearchImageInArr = r8
            r0.loadingMoreImages = r8
            boolean[] r13 = r0.endReached
            r13[r8] = r8
            long r7 = r0.mergeDialogId
            int r17 = (r7 > r10 ? 1 : (r7 == r10 ? 0 : -1))
            if (r17 != 0) goto L_0x005a
            r7 = 1
            goto L_0x005b
        L_0x005a:
            r7 = 0
        L_0x005b:
            r13[r14] = r7
            r7 = 0
            r0.opennedFromMedia = r7
            r0.needCaptionLayout = r7
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r8 = r0.containerView
            r8.setTag(r15)
            r0.playerAutoStarted = r7
            r0.isCurrentVideo = r7
            r0.shownControlsByEnd = r7
            java.util.ArrayList<org.telegram.messenger.MessageObject> r7 = r0.imagesArr
            r7.clear()
            java.util.ArrayList<org.telegram.messenger.ImageLocation> r7 = r0.imagesArrLocations
            r7.clear()
            java.util.ArrayList<java.lang.Long> r7 = r0.imagesArrLocationsSizes
            r7.clear()
            java.util.ArrayList<org.telegram.messenger.ImageLocation> r7 = r0.imagesArrLocationsVideo
            r7.clear()
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r7 = r0.imagesArrMessages
            r7.clear()
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Photo> r7 = r0.avatarsArr
            r7.clear()
            java.util.ArrayList<org.telegram.messenger.SecureDocument> r7 = r0.secureDocuments
            r7.clear()
            java.util.ArrayList<java.lang.Object> r7 = r0.imagesArrLocals
            r7.clear()
            r7 = 0
        L_0x0096:
            if (r7 >= r12) goto L_0x00a9
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r8 = r0.imagesByIds
            r8 = r8[r7]
            r8.clear()
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r8 = r0.imagesByIdsTemp
            r8 = r8[r7]
            r8.clear()
            int r7 = r7 + 1
            goto L_0x0096
        L_0x00a9:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r7 = r0.imagesArrTemp
            r7.clear()
            r7 = 0
            r0.currentAvatarLocation = r7
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r7 = r0.containerView
            r8 = 0
            r7.setPadding(r8, r8, r8, r8)
            org.telegram.messenger.ImageReceiver$BitmapHolder r7 = r0.currentThumb
            if (r7 == 0) goto L_0x00be
            r7.release()
        L_0x00be:
            org.telegram.ui.Components.VideoTimelinePlayView r7 = r0.videoTimelineView
            if (r7 == 0) goto L_0x00d0
            int r8 = r0.sendPhotoType
            if (r8 != r14) goto L_0x00cb
            r8 = 0
            r7.setBackground(r8)
            goto L_0x00d0
        L_0x00cb:
            r8 = 2130706432(0x7var_, float:1.7014118E38)
            r7.setBackgroundColor(r8)
        L_0x00d0:
            if (r6 == 0) goto L_0x00d5
            org.telegram.messenger.ImageReceiver$BitmapHolder r7 = r6.thumb
            goto L_0x00d6
        L_0x00d5:
            r7 = 0
        L_0x00d6:
            r0.currentThumb = r7
            if (r6 == 0) goto L_0x00e0
            boolean r7 = r6.isEvent
            if (r7 == 0) goto L_0x00e0
            r7 = 1
            goto L_0x00e1
        L_0x00e0:
            r7 = 0
        L_0x00e1:
            r0.isEvent = r7
            r7 = 0
            r0.sharedMediaType = r7
            org.telegram.ui.ActionBar.ActionBarMenuSubItem r8 = r0.allMediaItem
            r13 = 2131628332(0x7f0e112c, float:1.8883954E38)
            java.lang.String r10 = "ShowAllMedia"
            java.lang.String r10 = org.telegram.messenger.LocaleController.getString(r10, r13)
            r8.setText(r10)
            org.telegram.ui.ActionBar.ActionBarMenuItem r8 = r0.sendItem
            r0.setItemVisible(r8, r7, r7)
            org.telegram.ui.ActionBar.ActionBarMenuItem r8 = r0.pipItem
            r0.setItemVisible(r8, r7, r14)
            android.widget.ImageView r8 = r0.cameraItem
            r10 = 8
            r8.setVisibility(r10)
            android.widget.ImageView r8 = r0.cameraItem
            r11 = 0
            r8.setTag(r11)
            android.widget.FrameLayout r8 = r0.bottomLayout
            r8.setVisibility(r7)
            android.widget.FrameLayout r7 = r0.bottomLayout
            r7.setTag(r15)
            android.widget.FrameLayout r7 = r0.bottomLayout
            r7.setTranslationY(r9)
            org.telegram.ui.PhotoViewer$CaptionTextViewSwitcher r7 = r0.captionTextViewSwitcher
            r7.setTranslationY(r9)
            android.widget.LinearLayout r7 = r0.bottomButtonsLayout
            r7.setVisibility(r10)
            android.widget.ImageView r7 = r0.paintButton
            r7.setVisibility(r10)
            org.telegram.ui.PhotoViewer$QualityChooseView r7 = r0.qualityChooseView
            r8 = 4
            if (r7 == 0) goto L_0x013d
            r7.setVisibility(r8)
            org.telegram.ui.Components.PickerBottomLayoutViewer r7 = r0.qualityPicker
            r7.setVisibility(r8)
            org.telegram.ui.PhotoViewer$QualityChooseView r7 = r0.qualityChooseView
            r11 = 0
            r7.setTag(r11)
            goto L_0x013e
        L_0x013d:
            r11 = 0
        L_0x013e:
            android.animation.AnimatorSet r7 = r0.qualityChooseViewAnimation
            if (r7 == 0) goto L_0x0147
            r7.cancel()
            r0.qualityChooseViewAnimation = r11
        L_0x0147:
            r0.setDoubleTapEnabled(r14)
            r7 = 0
            r0.allowShare = r7
            r0.slideshowMessageId = r7
            r0.nameOverride = r11
            r0.dateOverride = r7
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.menuItem
            r7.hideSubItem(r12)
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.menuItem
            r7.hideSubItem(r8)
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.menuItem
            r11 = 10
            r7.hideSubItem(r11)
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.menuItem
            r13 = 11
            r7.hideSubItem(r13)
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.menuItem
            r13 = 14
            r7.hideSubItem(r13)
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.menuItem
            r13 = 15
            r7.hideSubItem(r13)
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.menuItem
            r13 = 17
            r7.hideSubItem(r13)
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.menuItem
            r13 = 16
            r7.hideSubItem(r13)
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.menuItem
            r13 = 6
            r7.hideSubItem(r13)
            org.telegram.ui.ActionBar.ActionBarMenuSubItem r7 = r0.speedItem
            r7.setVisibility(r10)
            org.telegram.ui.ActionBar.ActionBarPopupWindow$GapView r7 = r0.speedGap
            r7.setVisibility(r10)
            org.telegram.ui.ActionBar.ActionBar r7 = r0.actionBar
            r7.setTranslationY(r9)
            org.telegram.ui.Components.CheckBox r7 = r0.checkImageView
            r13 = 1065353216(0x3var_, float:1.0)
            r7.setAlpha(r13)
            org.telegram.ui.Components.CheckBox r7 = r0.checkImageView
            r7.setTranslationY(r9)
            org.telegram.ui.Components.CheckBox r7 = r0.checkImageView
            r7.setVisibility(r10)
            org.telegram.ui.ActionBar.ActionBar r7 = r0.actionBar
            r11 = 0
            r7.setTitleRightMargin(r11)
            org.telegram.ui.PhotoViewer$CounterView r7 = r0.photosCounterView
            r7.setAlpha(r13)
            org.telegram.ui.PhotoViewer$CounterView r7 = r0.photosCounterView
            r7.setTranslationY(r9)
            org.telegram.ui.PhotoViewer$CounterView r7 = r0.photosCounterView
            r7.setVisibility(r10)
            android.widget.FrameLayout r7 = r0.pickerView
            r7.setVisibility(r10)
            android.widget.ImageView r7 = r0.pickerViewSendButton
            r7.setVisibility(r10)
            android.widget.ImageView r7 = r0.pickerViewSendButton
            r7.setTranslationY(r9)
            android.widget.FrameLayout r7 = r0.pickerView
            r7.setAlpha(r13)
            android.widget.ImageView r7 = r0.pickerViewSendButton
            r7.setAlpha(r13)
            android.widget.FrameLayout r7 = r0.pickerView
            r7.setTranslationY(r9)
            android.widget.ImageView r7 = r0.paintItem
            r7.setVisibility(r10)
            android.widget.ImageView r7 = r0.paintItem
            r11 = 0
            r7.setTag(r11)
            android.widget.ImageView r7 = r0.cropItem
            r7.setVisibility(r10)
            android.widget.ImageView r7 = r0.tuneItem
            r7.setVisibility(r10)
            android.widget.ImageView r7 = r0.tuneItem
            r7.setTag(r11)
            android.widget.ImageView r7 = r0.timeItem
            r7.setVisibility(r10)
            android.widget.ImageView r7 = r0.rotateItem
            r7.setVisibility(r10)
            android.widget.ImageView r7 = r0.mirrorItem
            r7.setVisibility(r10)
            android.widget.FrameLayout r7 = r0.pickerView
            android.view.ViewGroup$LayoutParams r7 = r7.getLayoutParams()
            r11 = -2
            r7.height = r11
            android.widget.TextView r7 = r0.docInfoTextView
            r7.setVisibility(r10)
            android.widget.TextView r7 = r0.docNameTextView
            r7.setVisibility(r10)
            r7 = 0
            r0.showVideoTimeline(r7, r7)
            android.widget.TextView r7 = r0.videoAvatarTooltip
            r7.setVisibility(r10)
            android.widget.ImageView r7 = r0.compressItem
            r7.setVisibility(r10)
            org.telegram.ui.Components.PhotoViewerCaptionEnterView r7 = r0.captionEditText
            r7.setVisibility(r10)
            org.telegram.ui.Components.RecyclerListView r7 = r0.mentionListView
            r7.setVisibility(r10)
            android.widget.ImageView r7 = r0.muteItem
            r11 = 0
            org.telegram.messenger.AndroidUtilities.updateViewVisibilityAnimated(r7, r11, r13, r11)
            org.telegram.ui.ActionBar.ActionBar r7 = r0.actionBar
            r9 = 0
            r7.setSubtitle(r9)
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.masksItem
            r0.setItemVisible(r7, r11, r14)
            org.telegram.ui.ActionBar.ActionBarMenuItem r7 = r0.shareItem
            r7.setVisibility(r10)
            r0.muteVideo = r11
            android.widget.ImageView r7 = r0.muteItem
            r9 = 2131166205(0x7var_fd, float:1.7946649E38)
            r7.setImageResource(r9)
            org.telegram.ui.Components.PickerBottomLayoutViewer r7 = r0.editorDoneLayout
            r7.setVisibility(r10)
            org.telegram.ui.PhotoViewer$CaptionTextViewSwitcher r7 = r0.captionTextViewSwitcher
            r9 = 0
            r7.setTag(r9)
            org.telegram.ui.PhotoViewer$CaptionTextViewSwitcher r7 = r0.captionTextViewSwitcher
            r7.setVisibility(r8)
            org.telegram.ui.Components.PhotoCropView r7 = r0.photoCropView
            if (r7 == 0) goto L_0x026b
            r7.setVisibility(r10)
        L_0x026b:
            org.telegram.ui.Components.PhotoFilterView r7 = r0.photoFilterView
            if (r7 == 0) goto L_0x0272
            r7.setVisibility(r10)
        L_0x0272:
            r7 = 0
        L_0x0273:
            r9 = 3
            if (r7 >= r9) goto L_0x0289
            org.telegram.ui.PhotoViewer$PhotoProgressView[] r9 = r0.photoProgressViews
            r11 = r9[r7]
            if (r11 == 0) goto L_0x0284
            r9 = r9[r7]
            r11 = -1
            r12 = 0
            r9.setBackgroundState(r11, r12, r14)
            goto L_0x0285
        L_0x0284:
            r11 = -1
        L_0x0285:
            int r7 = r7 + 1
            r12 = 2
            goto L_0x0273
        L_0x0289:
            org.telegram.ui.Components.GroupedPhotosListView r7 = r0.groupedPhotosListView
            if (r7 == 0) goto L_0x029a
            r7.reset()
            org.telegram.ui.Components.GroupedPhotosListView r7 = r0.groupedPhotosListView
            boolean r9 = org.telegram.messenger.ApplicationLoader.isNetworkOnline()
            r9 = r9 ^ r14
            r7.setAnimateBackground(r9)
        L_0x029a:
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r7 = r0.placeProvider
            if (r7 == 0) goto L_0x02ac
            int r7 = r7.getTotalImageCount()
            if (r7 <= 0) goto L_0x02ac
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r7 = r0.placeProvider
            int r7 = r7.getTotalImageCount()
            r0.totalImagesCount = r7
        L_0x02ac:
            if (r1 == 0) goto L_0x02df
            android.content.Context r7 = org.telegram.messenger.ApplicationLoader.applicationContext
            java.lang.String r9 = "playback_speed"
            r11 = 0
            android.content.SharedPreferences r7 = r7.getSharedPreferences(r9, r11)
            java.lang.StringBuilder r9 = new java.lang.StringBuilder
            r9.<init>()
            java.lang.String r11 = "speed"
            r9.append(r11)
            long r11 = r26.getDialogId()
            r9.append(r11)
            java.lang.String r11 = "_"
            r9.append(r11)
            int r11 = r26.getId()
            r9.append(r11)
            java.lang.String r9 = r9.toString()
            float r9 = r7.getFloat(r9, r13)
            r0.currentVideoSpeed = r9
            goto L_0x02e1
        L_0x02df:
            r0.currentVideoSpeed = r13
        L_0x02e1:
            r25.setMenuItemIcon()
            if (r1 == 0) goto L_0x0302
            int r7 = r0.currentAccount
            org.telegram.messenger.MessagesController r7 = org.telegram.messenger.MessagesController.getInstance(r7)
            long r11 = r26.getChatId()
            boolean r7 = r7.isChatNoForwards((long) r11)
            if (r7 != 0) goto L_0x0300
            org.telegram.tgnet.TLRPC$Message r7 = r1.messageOwner
            if (r7 == 0) goto L_0x0302
            org.telegram.tgnet.TLRPC$Message r7 = r1.messageOwner
            boolean r7 = r7.noforwards
            if (r7 == 0) goto L_0x0302
        L_0x0300:
            r7 = 1
            goto L_0x0303
        L_0x0302:
            r7 = 0
        L_0x0303:
            java.lang.String r11 = "ShowAllGIFs"
            java.lang.String r13 = "ShowAllFiles"
            if (r1 == 0) goto L_0x0484
            if (r2 != 0) goto L_0x0484
            org.telegram.tgnet.TLRPC$Message r15 = r1.messageOwner
            if (r15 == 0) goto L_0x03aa
            org.telegram.tgnet.TLRPC$Message r15 = r1.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r15 = r15.media
            boolean r15 = r15 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaWebPage
            if (r15 == 0) goto L_0x03aa
            org.telegram.tgnet.TLRPC$Message r15 = r1.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r15 = r15.media
            org.telegram.tgnet.TLRPC$WebPage r15 = r15.webpage
            if (r15 == 0) goto L_0x03aa
            org.telegram.tgnet.TLRPC$Message r15 = r1.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r15 = r15.media
            org.telegram.tgnet.TLRPC$WebPage r15 = r15.webpage
            java.lang.String r10 = r15.site_name
            if (r10 == 0) goto L_0x03aa
            java.lang.String r10 = r10.toLowerCase()
            java.lang.String r9 = "instagram"
            boolean r9 = r10.equals(r9)
            if (r9 != 0) goto L_0x0347
            java.lang.String r9 = "twitter"
            boolean r9 = r10.equals(r9)
            if (r9 != 0) goto L_0x0347
            java.lang.String r9 = r15.type
            java.lang.String r8 = "telegram_album"
            boolean r8 = r8.equals(r9)
            if (r8 == 0) goto L_0x03aa
        L_0x0347:
            java.lang.String r8 = r15.author
            boolean r8 = android.text.TextUtils.isEmpty(r8)
            if (r8 != 0) goto L_0x0353
            java.lang.String r8 = r15.author
            r0.nameOverride = r8
        L_0x0353:
            org.telegram.tgnet.TLRPC$Page r8 = r15.cached_page
            boolean r8 = r8 instanceof org.telegram.tgnet.TLRPC.TL_page
            if (r8 == 0) goto L_0x037d
            r8 = 0
        L_0x035a:
            org.telegram.tgnet.TLRPC$Page r9 = r15.cached_page
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PageBlock> r9 = r9.blocks
            int r9 = r9.size()
            if (r8 >= r9) goto L_0x037d
            org.telegram.tgnet.TLRPC$Page r9 = r15.cached_page
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PageBlock> r9 = r9.blocks
            java.lang.Object r9 = r9.get(r8)
            org.telegram.tgnet.TLRPC$PageBlock r9 = (org.telegram.tgnet.TLRPC.PageBlock) r9
            boolean r12 = r9 instanceof org.telegram.tgnet.TLRPC.TL_pageBlockAuthorDate
            if (r12 == 0) goto L_0x037a
            r12 = r9
            org.telegram.tgnet.TLRPC$TL_pageBlockAuthorDate r12 = (org.telegram.tgnet.TLRPC.TL_pageBlockAuthorDate) r12
            int r12 = r12.published_date
            r0.dateOverride = r12
            goto L_0x037d
        L_0x037a:
            int r8 = r8 + 1
            goto L_0x035a
        L_0x037d:
            r8 = 0
            java.util.ArrayList r9 = r1.getWebPagePhotos(r8, r8)
            boolean r8 = r9.isEmpty()
            if (r8 != 0) goto L_0x03aa
            int r8 = r26.getId()
            r0.slideshowMessageId = r8
            r8 = 0
            r0.needSearchImageInArr = r8
            java.util.ArrayList<org.telegram.messenger.MessageObject> r8 = r0.imagesArr
            r8.addAll(r9)
            java.util.ArrayList<org.telegram.messenger.MessageObject> r8 = r0.imagesArr
            int r8 = r8.size()
            r0.totalImagesCount = r8
            java.util.ArrayList<org.telegram.messenger.MessageObject> r8 = r0.imagesArr
            int r8 = r8.indexOf(r1)
            if (r8 >= 0) goto L_0x03a7
            r8 = 0
        L_0x03a7:
            r0.setImageIndex(r8)
        L_0x03aa:
            boolean r8 = r26.canPreviewDocument()
            if (r8 == 0) goto L_0x03bf
            r0.sharedMediaType = r14
            org.telegram.ui.ActionBar.ActionBarMenuSubItem r8 = r0.allMediaItem
            r9 = 2131628330(0x7f0e112a, float:1.888395E38)
            java.lang.String r9 = org.telegram.messenger.LocaleController.getString(r13, r9)
            r8.setText(r9)
            goto L_0x03d4
        L_0x03bf:
            boolean r8 = r26.isGif()
            if (r8 == 0) goto L_0x03d4
            r8 = 5
            r0.sharedMediaType = r8
            org.telegram.ui.ActionBar.ActionBarMenuSubItem r8 = r0.allMediaItem
            r9 = 2131628331(0x7f0e112b, float:1.8883952E38)
            java.lang.String r9 = org.telegram.messenger.LocaleController.getString(r11, r9)
            r8.setText(r9)
        L_0x03d4:
            boolean r8 = r0.isEmbedVideo
            if (r8 == 0) goto L_0x03e5
            android.widget.FrameLayout r8 = r0.bottomLayout
            r9 = 0
            r8.setTag(r9)
            android.widget.FrameLayout r8 = r0.bottomLayout
            r9 = 8
            r8.setVisibility(r9)
        L_0x03e5:
            int r8 = r0.slideshowMessageId
            if (r8 != 0) goto L_0x0481
            java.util.ArrayList<org.telegram.messenger.MessageObject> r8 = r0.imagesArr
            r8.add(r1)
            long r8 = r1.eventId
            r10 = 0
            int r12 = (r8 > r10 ? 1 : (r8 == r10 ? 0 : -1))
            if (r12 == 0) goto L_0x03fc
            r8 = 0
            r0.needSearchImageInArr = r8
            r9 = 0
            goto L_0x047b
        L_0x03fc:
            r8 = 0
            org.telegram.ui.Components.AnimatedFileDrawable r9 = r0.currentAnimation
            if (r9 == 0) goto L_0x0414
            r0.needSearchImageInArr = r8
            boolean r9 = r26.canForwardMessage()
            if (r9 == 0) goto L_0x0412
            if (r7 != 0) goto L_0x0412
            org.telegram.ui.ActionBar.ActionBarMenuItem r9 = r0.sendItem
            r0.setItemVisible(r9, r14, r8)
            r9 = 0
            goto L_0x047b
        L_0x0412:
            r9 = 0
            goto L_0x047b
        L_0x0414:
            boolean r8 = r1.scheduled
            if (r8 != 0) goto L_0x0467
            org.telegram.tgnet.TLRPC$Message r8 = r1.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r8 = r8.media
            boolean r8 = r8 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaInvoice
            if (r8 != 0) goto L_0x0467
            org.telegram.tgnet.TLRPC$Message r8 = r1.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r8 = r8.media
            boolean r8 = r8 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaWebPage
            if (r8 != 0) goto L_0x0467
            org.telegram.tgnet.TLRPC$Message r8 = r1.messageOwner
            org.telegram.tgnet.TLRPC$MessageAction r8 = r8.action
            if (r8 == 0) goto L_0x0436
            org.telegram.tgnet.TLRPC$Message r8 = r1.messageOwner
            org.telegram.tgnet.TLRPC$MessageAction r8 = r8.action
            boolean r8 = r8 instanceof org.telegram.tgnet.TLRPC.TL_messageActionEmpty
            if (r8 == 0) goto L_0x0467
        L_0x0436:
            r0.needSearchImageInArr = r14
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r8 = r0.imagesByIds
            r9 = 0
            r8 = r8[r9]
            int r9 = r26.getId()
            r8.put(r9, r1)
            org.telegram.ui.ChatActivity r8 = r0.parentChatActivity
            if (r8 == 0) goto L_0x044e
            boolean r8 = r8.isThreadChat()
            if (r8 != 0) goto L_0x045a
        L_0x044e:
            org.telegram.ui.ActionBar.ActionBarMenuItem r8 = r0.menuItem
            r9 = 4
            r8.showSubItem(r9)
            org.telegram.ui.ActionBar.ActionBarMenuItem r8 = r0.menuItem
            r9 = 2
            r8.showSubItem(r9)
        L_0x045a:
            org.telegram.ui.ActionBar.ActionBarMenuItem r8 = r0.sendItem
            if (r7 != 0) goto L_0x0460
            r9 = 1
            goto L_0x0461
        L_0x0460:
            r9 = 0
        L_0x0461:
            r10 = 0
            r0.setItemVisible(r8, r9, r10)
            r9 = 0
            goto L_0x047b
        L_0x0467:
            boolean r8 = r0.isEmbedVideo
            if (r8 == 0) goto L_0x047a
            long r8 = r1.eventId
            r10 = 0
            int r12 = (r8 > r10 ? 1 : (r8 == r10 ? 0 : -1))
            if (r12 != 0) goto L_0x047a
            org.telegram.ui.ActionBar.ActionBarMenuItem r8 = r0.sendItem
            r9 = 0
            r0.setItemVisible(r8, r14, r9)
            goto L_0x047b
        L_0x047a:
            r9 = 0
        L_0x047b:
            r0.setImageIndex(r9)
            r9 = 0
            goto L_0x07f7
        L_0x0481:
            r9 = 0
            goto L_0x07f7
        L_0x0484:
            if (r3 == 0) goto L_0x0491
            java.util.ArrayList<org.telegram.messenger.SecureDocument> r8 = r0.secureDocuments
            r8.addAll(r3)
            r0.setImageIndex(r5)
            r9 = 0
            goto L_0x07f7
        L_0x0491:
            if (r27 == 0) goto L_0x054d
            if (r6 == 0) goto L_0x0498
            long r8 = r6.dialogId
            goto L_0x049a
        L_0x0498:
            r8 = 0
        L_0x049a:
            r0.avatarsDialogId = r8
            if (r6 == 0) goto L_0x04a4
            boolean r8 = r6.canEdit
            if (r8 == 0) goto L_0x04a4
            r8 = 1
            goto L_0x04a5
        L_0x04a4:
            r8 = 0
        L_0x04a5:
            r0.canEditAvatar = r8
            if (r28 != 0) goto L_0x04e3
            long r8 = r0.avatarsDialogId
            r10 = 0
            int r12 = (r8 > r10 ? 1 : (r8 == r10 ? 0 : -1))
            if (r12 == 0) goto L_0x04e3
            int r12 = (r8 > r10 ? 1 : (r8 == r10 ? 0 : -1))
            if (r12 <= 0) goto L_0x04cb
            int r8 = r0.currentAccount
            org.telegram.messenger.MessagesController r8 = org.telegram.messenger.MessagesController.getInstance(r8)
            long r9 = r0.avatarsDialogId
            java.lang.Long r9 = java.lang.Long.valueOf(r9)
            org.telegram.tgnet.TLRPC$User r8 = r8.getUser(r9)
            r9 = 0
            org.telegram.messenger.ImageLocation r8 = org.telegram.messenger.ImageLocation.getForUserOrChat(r8, r9)
            goto L_0x04e5
        L_0x04cb:
            r9 = 0
            int r8 = r0.currentAccount
            org.telegram.messenger.MessagesController r8 = org.telegram.messenger.MessagesController.getInstance(r8)
            long r10 = r0.avatarsDialogId
            long r10 = -r10
            java.lang.Long r10 = java.lang.Long.valueOf(r10)
            org.telegram.tgnet.TLRPC$Chat r8 = r8.getChat(r10)
            org.telegram.messenger.ImageLocation r10 = org.telegram.messenger.ImageLocation.getForUserOrChat(r8, r9)
            r8 = r10
            goto L_0x04e5
        L_0x04e3:
            r8 = r28
        L_0x04e5:
            if (r8 != 0) goto L_0x04e8
            return
        L_0x04e8:
            java.util.ArrayList<org.telegram.messenger.ImageLocation> r9 = r0.imagesArrLocations
            r9.add(r8)
            java.util.ArrayList<org.telegram.messenger.ImageLocation> r9 = r0.imagesArrLocationsVideo
            if (r29 == 0) goto L_0x04f4
            r10 = r29
            goto L_0x04f5
        L_0x04f4:
            r10 = r8
        L_0x04f5:
            r9.add(r10)
            r0.currentAvatarLocation = r8
            java.util.ArrayList<java.lang.Long> r9 = r0.imagesArrLocationsSizes
            if (r6 == 0) goto L_0x0501
            long r10 = r6.size
            goto L_0x0503
        L_0x0501:
            r10 = 0
        L_0x0503:
            java.lang.Long r10 = java.lang.Long.valueOf(r10)
            r9.add(r10)
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r9 = r0.imagesArrMessages
            r10 = 0
            r9.add(r10)
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Photo> r9 = r0.avatarsArr
            org.telegram.tgnet.TLRPC$TL_photoEmpty r10 = new org.telegram.tgnet.TLRPC$TL_photoEmpty
            r10.<init>()
            r9.add(r10)
            android.widget.LinearLayout r9 = r0.bottomButtonsLayout
            boolean r10 = r0.videoPlayerControlVisible
            if (r10 != 0) goto L_0x0522
            r10 = 0
            goto L_0x0524
        L_0x0522:
            r10 = 8
        L_0x0524:
            r9.setVisibility(r10)
            r0.allowShare = r14
            org.telegram.ui.ActionBar.ActionBarMenuItem r9 = r0.menuItem
            r10 = 2
            r9.hideSubItem(r10)
            android.widget.LinearLayout r9 = r0.bottomButtonsLayout
            int r9 = r9.getVisibility()
            if (r9 != 0) goto L_0x053f
            org.telegram.ui.ActionBar.ActionBarMenuItem r9 = r0.menuItem
            r10 = 10
            r9.hideSubItem(r10)
            goto L_0x0546
        L_0x053f:
            r10 = 10
            org.telegram.ui.ActionBar.ActionBarMenuItem r9 = r0.menuItem
            r9.showSubItem(r10)
        L_0x0546:
            r9 = 0
            r0.setImageIndex(r9)
            r9 = 0
            goto L_0x07f9
        L_0x054d:
            if (r2 == 0) goto L_0x05ef
            java.util.ArrayList<org.telegram.messenger.MessageObject> r8 = r0.imagesArr
            r8.addAll(r2)
            r8 = 0
        L_0x0555:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r9 = r0.imagesArr
            int r9 = r9.size()
            if (r8 >= r9) goto L_0x0584
            java.util.ArrayList<org.telegram.messenger.MessageObject> r9 = r0.imagesArr
            java.lang.Object r9 = r9.get(r8)
            org.telegram.messenger.MessageObject r9 = (org.telegram.messenger.MessageObject) r9
            android.util.SparseArray<org.telegram.messenger.MessageObject>[] r10 = r0.imagesByIds
            long r15 = r9.getDialogId()
            long r1 = r0.currentDialogId
            int r12 = (r15 > r1 ? 1 : (r15 == r1 ? 0 : -1))
            if (r12 != 0) goto L_0x0573
            r1 = 0
            goto L_0x0574
        L_0x0573:
            r1 = 1
        L_0x0574:
            r1 = r10[r1]
            int r2 = r9.getId()
            r1.put(r2, r9)
            int r8 = r8 + 1
            r1 = r26
            r2 = r30
            goto L_0x0555
        L_0x0584:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r0.imagesArr
            java.lang.Object r1 = r1.get(r5)
            org.telegram.messenger.MessageObject r1 = (org.telegram.messenger.MessageObject) r1
            boolean r2 = r1.scheduled
            if (r2 != 0) goto L_0x05e1
            org.telegram.ui.ChatActivity r2 = r0.parentChatActivity
            if (r2 == 0) goto L_0x059a
            boolean r2 = r2.isThreadChat()
            if (r2 != 0) goto L_0x05e1
        L_0x059a:
            r0.opennedFromMedia = r14
            if (r6 == 0) goto L_0x05a2
            int r2 = r6.starOffset
            r0.startOffset = r2
        L_0x05a2:
            org.telegram.ui.ActionBar.ActionBarMenuItem r2 = r0.menuItem
            r8 = 4
            r2.showSubItem(r8)
            boolean r2 = r1.canForwardMessage()
            if (r2 == 0) goto L_0x05b6
            if (r7 != 0) goto L_0x05b6
            org.telegram.ui.ActionBar.ActionBarMenuItem r2 = r0.sendItem
            r8 = 0
            r0.setItemVisible(r2, r14, r8)
        L_0x05b6:
            boolean r2 = r1.canPreviewDocument()
            if (r2 == 0) goto L_0x05cb
            r0.sharedMediaType = r14
            org.telegram.ui.ActionBar.ActionBarMenuSubItem r2 = r0.allMediaItem
            r8 = 2131628330(0x7f0e112a, float:1.888395E38)
            java.lang.String r8 = org.telegram.messenger.LocaleController.getString(r13, r8)
            r2.setText(r8)
            goto L_0x05e9
        L_0x05cb:
            boolean r2 = r1.isGif()
            if (r2 == 0) goto L_0x05e9
            r2 = 5
            r0.sharedMediaType = r2
            org.telegram.ui.ActionBar.ActionBarMenuSubItem r2 = r0.allMediaItem
            r8 = 2131628331(0x7f0e112b, float:1.8883952E38)
            java.lang.String r8 = org.telegram.messenger.LocaleController.getString(r11, r8)
            r2.setText(r8)
            goto L_0x05e9
        L_0x05e1:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r2 = r0.imagesArr
            int r2 = r2.size()
            r0.totalImagesCount = r2
        L_0x05e9:
            r0.setImageIndex(r5)
            r9 = 0
            goto L_0x07f7
        L_0x05ef:
            if (r4 == 0) goto L_0x07f3
            int r1 = r0.sendPhotoType
            if (r1 == 0) goto L_0x0604
            r2 = 4
            if (r1 == r2) goto L_0x0604
            r2 = 2
            if (r1 == r2) goto L_0x05fe
            r2 = 5
            if (r1 != r2) goto L_0x061a
        L_0x05fe:
            int r1 = r32.size()
            if (r1 <= r14) goto L_0x061a
        L_0x0604:
            org.telegram.ui.Components.CheckBox r1 = r0.checkImageView
            r2 = 0
            r1.setVisibility(r2)
            org.telegram.ui.PhotoViewer$CounterView r1 = r0.photosCounterView
            r1.setVisibility(r2)
            org.telegram.ui.ActionBar.ActionBar r1 = r0.actionBar
            r2 = 1120403456(0x42CLASSNAME, float:100.0)
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r2)
            r1.setTitleRightMargin(r2)
        L_0x061a:
            int r1 = r0.sendPhotoType
            r2 = 2
            if (r1 == r2) goto L_0x0622
            r2 = 5
            if (r1 != r2) goto L_0x0635
        L_0x0622:
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r1 = r0.placeProvider
            boolean r1 = r1.canCaptureMorePhotos()
            if (r1 == 0) goto L_0x0635
            android.widget.ImageView r1 = r0.cameraItem
            r2 = 0
            r1.setVisibility(r2)
            android.widget.ImageView r1 = r0.cameraItem
            r1.setTag(r15)
        L_0x0635:
            org.telegram.ui.ActionBar.ActionBarMenuItem r1 = r0.menuItem
            r2 = 8
            r1.setVisibility(r2)
            java.util.ArrayList<java.lang.Object> r1 = r0.imagesArrLocals
            r1.addAll(r4)
            java.util.ArrayList<java.lang.Object> r1 = r0.imagesArrLocals
            java.lang.Object r1 = r1.get(r5)
            boolean r2 = r1 instanceof org.telegram.messenger.MediaController.PhotoEntry
            if (r2 == 0) goto L_0x06ef
            int r2 = r0.sendPhotoType
            r8 = 10
            if (r2 != r8) goto L_0x0664
            android.widget.ImageView r2 = r0.cropItem
            r8 = 8
            r2.setVisibility(r8)
            android.widget.ImageView r2 = r0.rotateItem
            r2.setVisibility(r8)
            android.widget.ImageView r2 = r0.mirrorItem
            r2.setVisibility(r8)
            goto L_0x06eb
        L_0x0664:
            r8 = 8
            boolean r2 = r0.isDocumentsPicker
            if (r2 == 0) goto L_0x0693
            android.widget.ImageView r2 = r0.cropItem
            r2.setVisibility(r8)
            android.widget.ImageView r2 = r0.rotateItem
            r2.setVisibility(r8)
            android.widget.ImageView r2 = r0.mirrorItem
            r2.setVisibility(r8)
            android.widget.TextView r2 = r0.docInfoTextView
            r8 = 0
            r2.setVisibility(r8)
            android.widget.TextView r2 = r0.docNameTextView
            r2.setVisibility(r8)
            android.widget.FrameLayout r2 = r0.pickerView
            android.view.ViewGroup$LayoutParams r2 = r2.getLayoutParams()
            r8 = 1118306304(0x42a80000, float:84.0)
            int r8 = org.telegram.messenger.AndroidUtilities.dp(r8)
            r2.height = r8
            goto L_0x06eb
        L_0x0693:
            r2 = r1
            org.telegram.messenger.MediaController$PhotoEntry r2 = (org.telegram.messenger.MediaController.PhotoEntry) r2
            boolean r2 = r2.isVideo
            if (r2 == 0) goto L_0x06c4
            android.widget.ImageView r2 = r0.cropItem
            r8 = 8
            r2.setVisibility(r8)
            android.widget.ImageView r2 = r0.rotateItem
            r2.setVisibility(r8)
            android.widget.ImageView r2 = r0.mirrorItem
            r2.setVisibility(r8)
            android.widget.FrameLayout r2 = r0.bottomLayout
            r8 = 0
            r2.setVisibility(r8)
            android.widget.FrameLayout r2 = r0.bottomLayout
            r2.setTag(r15)
            android.widget.FrameLayout r2 = r0.bottomLayout
            r8 = 1111490560(0x42400000, float:48.0)
            int r8 = org.telegram.messenger.AndroidUtilities.dp(r8)
            int r8 = -r8
            float r8 = (float) r8
            r2.setTranslationY(r8)
            goto L_0x06eb
        L_0x06c4:
            android.widget.ImageView r2 = r0.cropItem
            int r8 = r0.sendPhotoType
            if (r8 == r14) goto L_0x06cc
            r8 = 0
            goto L_0x06ce
        L_0x06cc:
            r8 = 8
        L_0x06ce:
            r2.setVisibility(r8)
            android.widget.ImageView r2 = r0.rotateItem
            int r8 = r0.sendPhotoType
            if (r8 == r14) goto L_0x06da
            r8 = 8
            goto L_0x06db
        L_0x06da:
            r8 = 0
        L_0x06db:
            r2.setVisibility(r8)
            android.widget.ImageView r2 = r0.mirrorItem
            int r8 = r0.sendPhotoType
            if (r8 == r14) goto L_0x06e7
            r8 = 8
            goto L_0x06e8
        L_0x06e7:
            r8 = 0
        L_0x06e8:
            r2.setVisibility(r8)
        L_0x06eb:
            boolean r2 = r0.isDocumentsPicker
            r2 = r2 ^ r14
            goto L_0x0731
        L_0x06ef:
            boolean r2 = r1 instanceof org.telegram.tgnet.TLRPC.BotInlineResult
            if (r2 == 0) goto L_0x0706
            android.widget.ImageView r2 = r0.cropItem
            r8 = 8
            r2.setVisibility(r8)
            android.widget.ImageView r2 = r0.rotateItem
            r2.setVisibility(r8)
            android.widget.ImageView r2 = r0.mirrorItem
            r2.setVisibility(r8)
            r2 = 0
            goto L_0x0731
        L_0x0706:
            android.widget.ImageView r2 = r0.cropItem
            boolean r8 = r1 instanceof org.telegram.messenger.MediaController.SearchImage
            if (r8 == 0) goto L_0x0715
            r8 = r1
            org.telegram.messenger.MediaController$SearchImage r8 = (org.telegram.messenger.MediaController.SearchImage) r8
            int r8 = r8.type
            if (r8 != 0) goto L_0x0715
            r8 = 0
            goto L_0x0717
        L_0x0715:
            r8 = 8
        L_0x0717:
            r2.setVisibility(r8)
            android.widget.ImageView r2 = r0.rotateItem
            r8 = 8
            r2.setVisibility(r8)
            android.widget.ImageView r2 = r0.mirrorItem
            r2.setVisibility(r8)
            android.widget.ImageView r2 = r0.cropItem
            int r2 = r2.getVisibility()
            if (r2 != 0) goto L_0x0730
            r2 = 1
            goto L_0x0731
        L_0x0730:
            r2 = 0
        L_0x0731:
            org.telegram.ui.ChatActivity r8 = r0.parentChatActivity
            if (r8 == 0) goto L_0x0775
            org.telegram.ui.Adapters.MentionsAdapter r9 = r0.mentionsAdapter
            org.telegram.tgnet.TLRPC$ChatFull r8 = r8.chatInfo
            r9.setChatInfo(r8)
            org.telegram.ui.Adapters.MentionsAdapter r8 = r0.mentionsAdapter
            org.telegram.ui.ChatActivity r9 = r0.parentChatActivity
            org.telegram.tgnet.TLRPC$Chat r9 = r9.currentChat
            if (r9 == 0) goto L_0x0746
            r9 = 1
            goto L_0x0747
        L_0x0746:
            r9 = 0
        L_0x0747:
            r8.setNeedUsernames(r9)
            org.telegram.ui.Adapters.MentionsAdapter r8 = r0.mentionsAdapter
            r9 = 0
            r8.setNeedBotContext(r9)
            if (r2 == 0) goto L_0x075e
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r8 = r0.placeProvider
            if (r8 == 0) goto L_0x075c
            boolean r8 = r8.allowCaption()
            if (r8 == 0) goto L_0x075e
        L_0x075c:
            r8 = 1
            goto L_0x075f
        L_0x075e:
            r8 = 0
        L_0x075f:
            r0.needCaptionLayout = r8
            org.telegram.ui.Components.PhotoViewerCaptionEnterView r9 = r0.captionEditText
            if (r8 == 0) goto L_0x0767
            r8 = 0
            goto L_0x0769
        L_0x0767:
            r8 = 8
        L_0x0769:
            r9.setVisibility(r8)
            boolean r8 = r0.needCaptionLayout
            if (r8 == 0) goto L_0x0775
            org.telegram.ui.Components.PhotoViewerCaptionEnterView r8 = r0.captionEditText
            r8.onCreate()
        L_0x0775:
            android.widget.FrameLayout r8 = r0.pickerView
            r9 = 0
            r8.setVisibility(r9)
            android.widget.ImageView r8 = r0.pickerViewSendButton
            r8.setVisibility(r9)
            android.widget.ImageView r8 = r0.pickerViewSendButton
            r10 = 0
            r8.setTranslationY(r10)
            android.widget.ImageView r8 = r0.pickerViewSendButton
            r10 = 1065353216(0x3var_, float:1.0)
            r8.setAlpha(r10)
            android.view.View r8 = r0.navigationBar
            if (r8 == 0) goto L_0x0799
            r8.setVisibility(r9)
            android.view.View r8 = r0.navigationBar
            r8.setAlpha(r10)
        L_0x0799:
            android.widget.FrameLayout r8 = r0.bottomLayout
            r9 = 8
            r8.setVisibility(r9)
            android.widget.FrameLayout r8 = r0.bottomLayout
            r9 = 0
            r8.setTag(r9)
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r8 = r0.containerView
            r8.setTag(r9)
            r0.setImageIndex(r5)
            int r8 = r0.sendPhotoType
            if (r8 != r14) goto L_0x07be
            android.widget.ImageView r8 = r0.paintItem
            r10 = 0
            r8.setVisibility(r10)
            android.widget.ImageView r8 = r0.tuneItem
            r8.setVisibility(r10)
            goto L_0x07ef
        L_0x07be:
            r10 = 4
            if (r8 == r10) goto L_0x07e3
            r10 = 5
            if (r8 == r10) goto L_0x07e3
            android.widget.ImageView r8 = r0.paintItem
            java.lang.Object r10 = r8.getTag()
            if (r10 == 0) goto L_0x07ce
            r10 = 0
            goto L_0x07d0
        L_0x07ce:
            r10 = 8
        L_0x07d0:
            r8.setVisibility(r10)
            android.widget.ImageView r8 = r0.tuneItem
            java.lang.Object r10 = r8.getTag()
            if (r10 == 0) goto L_0x07dd
            r10 = 0
            goto L_0x07df
        L_0x07dd:
            r10 = 8
        L_0x07df:
            r8.setVisibility(r10)
            goto L_0x07ef
        L_0x07e3:
            android.widget.ImageView r8 = r0.paintItem
            r10 = 8
            r8.setVisibility(r10)
            android.widget.ImageView r8 = r0.tuneItem
            r8.setVisibility(r10)
        L_0x07ef:
            r25.updateSelectedCount()
            goto L_0x07f7
        L_0x07f3:
            r9 = 0
            r0.setImageIndex(r5)
        L_0x07f7:
            r8 = r28
        L_0x07f9:
            org.telegram.ui.Components.AnimatedFileDrawable r1 = r0.currentAnimation
            if (r1 != 0) goto L_0x0877
            boolean r1 = r0.isEvent
            if (r1 != 0) goto L_0x0877
            long r1 = r0.currentDialogId
            r10 = 0
            int r12 = (r1 > r10 ? 1 : (r1 == r10 ? 0 : -1))
            if (r12 == 0) goto L_0x0858
            int r1 = r0.totalImagesCount
            if (r1 != 0) goto L_0x0858
            org.telegram.messenger.MessageObject r1 = r0.currentMessageObject
            if (r1 == 0) goto L_0x0858
            boolean r1 = r1.scheduled
            if (r1 != 0) goto L_0x0858
            org.telegram.messenger.MessageObject r1 = r0.currentMessageObject
            org.telegram.tgnet.TLRPC$Message r1 = r1.messageOwner
            int r1 = org.telegram.messenger.MediaDataController.getMediaType(r1)
            int r2 = r0.sharedMediaType
            if (r1 != r2) goto L_0x0877
            int r1 = r0.currentAccount
            org.telegram.messenger.MediaDataController r19 = org.telegram.messenger.MediaDataController.getInstance(r1)
            long r1 = r0.currentDialogId
            int r10 = r0.sharedMediaType
            int r11 = r0.classGuid
            r24 = 1
            r20 = r1
            r22 = r10
            r23 = r11
            r19.getMediaCount(r20, r22, r23, r24)
            long r1 = r0.mergeDialogId
            r10 = 0
            int r12 = (r1 > r10 ? 1 : (r1 == r10 ? 0 : -1))
            if (r12 == 0) goto L_0x0877
            int r1 = r0.currentAccount
            org.telegram.messenger.MediaDataController r17 = org.telegram.messenger.MediaDataController.getInstance(r1)
            long r1 = r0.mergeDialogId
            int r10 = r0.sharedMediaType
            int r11 = r0.classGuid
            r22 = 1
            r18 = r1
            r20 = r10
            r21 = r11
            r17.getMediaCount(r18, r20, r21, r22)
            goto L_0x0877
        L_0x0858:
            long r1 = r0.avatarsDialogId
            r10 = 0
            int r12 = (r1 > r10 ? 1 : (r1 == r10 ? 0 : -1))
            if (r12 == 0) goto L_0x0877
            int r1 = r0.currentAccount
            org.telegram.messenger.MessagesController r17 = org.telegram.messenger.MessagesController.getInstance(r1)
            long r1 = r0.avatarsDialogId
            r20 = 80
            r21 = 0
            r22 = 1
            int r10 = r0.classGuid
            r18 = r1
            r23 = r10
            r17.loadDialogPhotos(r18, r20, r21, r22, r23)
        L_0x0877:
            org.telegram.messenger.MessageObject r1 = r0.currentMessageObject
            if (r1 == 0) goto L_0x0881
            boolean r1 = r1.isVideo()
            if (r1 != 0) goto L_0x08a3
        L_0x0881:
            org.telegram.tgnet.TLRPC$BotInlineResult r1 = r0.currentBotInlineResult
            if (r1 == 0) goto L_0x0899
            java.lang.String r1 = r1.type
            java.lang.String r2 = "video"
            boolean r1 = r1.equals(r2)
            if (r1 != 0) goto L_0x08a3
            org.telegram.tgnet.TLRPC$BotInlineResult r1 = r0.currentBotInlineResult
            org.telegram.tgnet.TLRPC$Document r1 = r1.document
            boolean r1 = org.telegram.messenger.MessageObject.isVideoDocument(r1)
            if (r1 != 0) goto L_0x08a3
        L_0x0899:
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r1 = r0.pageBlocksAdapter
            if (r1 == 0) goto L_0x08ab
            boolean r1 = r1.isVideo(r5)
            if (r1 == 0) goto L_0x08ab
        L_0x08a3:
            r0.playerAutoStarted = r14
            r1 = 0
            r0.onActionClick(r1)
            goto L_0x091d
        L_0x08ab:
            java.util.ArrayList<java.lang.Object> r1 = r0.imagesArrLocals
            boolean r1 = r1.isEmpty()
            if (r1 != 0) goto L_0x091d
            java.util.ArrayList<java.lang.Object> r1 = r0.imagesArrLocals
            java.lang.Object r1 = r1.get(r5)
            r2 = 0
            org.telegram.ui.ChatActivity r10 = r0.parentChatActivity
            if (r10 == 0) goto L_0x08c2
            org.telegram.tgnet.TLRPC$User r9 = r10.getCurrentUser()
        L_0x08c2:
            boolean r10 = r0.isDocumentsPicker
            if (r10 != 0) goto L_0x08ee
            org.telegram.ui.ChatActivity r10 = r0.parentChatActivity
            if (r10 == 0) goto L_0x08ee
            boolean r10 = r10.isSecretChat()
            if (r10 != 0) goto L_0x08ee
            org.telegram.ui.ChatActivity r10 = r0.parentChatActivity
            boolean r10 = r10.isInScheduleMode()
            if (r10 != 0) goto L_0x08ee
            if (r9 == 0) goto L_0x08ee
            boolean r10 = r9.bot
            if (r10 != 0) goto L_0x08ee
            boolean r10 = org.telegram.messenger.UserObject.isUserSelf(r9)
            if (r10 != 0) goto L_0x08ee
            org.telegram.ui.ChatActivity r10 = r0.parentChatActivity
            boolean r10 = r10.isEditingMessageMedia()
            if (r10 != 0) goto L_0x08ee
            r10 = 1
            goto L_0x08ef
        L_0x08ee:
            r10 = 0
        L_0x08ef:
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r11 = r0.placeProvider
            if (r11 == 0) goto L_0x08fa
            org.telegram.messenger.MessageObject r11 = r11.getEditingMessageObject()
            if (r11 == 0) goto L_0x08fa
            r10 = 0
        L_0x08fa:
            boolean r11 = r1 instanceof org.telegram.tgnet.TLRPC.BotInlineResult
            if (r11 == 0) goto L_0x0900
            r10 = 0
            goto L_0x0915
        L_0x0900:
            boolean r11 = r1 instanceof org.telegram.messenger.MediaController.PhotoEntry
            if (r11 == 0) goto L_0x0905
            goto L_0x0915
        L_0x0905:
            if (r10 == 0) goto L_0x0915
            boolean r11 = r1 instanceof org.telegram.messenger.MediaController.SearchImage
            if (r11 == 0) goto L_0x0915
            r11 = r1
            org.telegram.messenger.MediaController$SearchImage r11 = (org.telegram.messenger.MediaController.SearchImage) r11
            int r11 = r11.type
            if (r11 != 0) goto L_0x0913
            goto L_0x0914
        L_0x0913:
            r14 = 0
        L_0x0914:
            r10 = r14
        L_0x0915:
            if (r10 == 0) goto L_0x091d
            android.widget.ImageView r11 = r0.timeItem
            r12 = 0
            r11.setVisibility(r12)
        L_0x091d:
            r25.checkFullscreenButton()
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.onPhotoShow(org.telegram.messenger.MessageObject, org.telegram.tgnet.TLRPC$FileLocation, org.telegram.messenger.ImageLocation, org.telegram.messenger.ImageLocation, java.util.ArrayList, java.util.ArrayList, java.util.List, int, org.telegram.ui.PhotoViewer$PlaceProviderObject):void");
    }

    private boolean canSendMediaToParentChatActivity() {
        ChatActivity chatActivity = this.parentChatActivity;
        return chatActivity != null && (chatActivity.currentUser != null || (this.parentChatActivity.currentChat != null && !ChatObject.isNotInChat(this.parentChatActivity.currentChat) && ChatObject.canSendMedia(this.parentChatActivity.currentChat)));
    }

    private void setDoubleTapEnabled(boolean value) {
        this.doubleTapEnabled = value;
        this.gestureDetector.setOnDoubleTapListener(value ? this : null);
    }

    /* access modifiers changed from: private */
    public void setImages() {
        if (this.animationInProgress == 0) {
            setIndexToImage(this.centerImage, this.currentIndex, (CropTransform) null);
            setIndexToPaintingOverlay(this.currentIndex, this.paintingOverlay);
            setIndexToImage(this.rightImage, this.currentIndex + 1, this.rightCropTransform);
            setIndexToPaintingOverlay(this.currentIndex + 1, this.rightPaintingOverlay);
            setIndexToImage(this.leftImage, this.currentIndex - 1, this.leftCropTransform);
            setIndexToPaintingOverlay(this.currentIndex - 1, this.leftPaintingOverlay);
        }
    }

    /* JADX WARNING: Removed duplicated region for block: B:420:0x09b4  */
    /* JADX WARNING: Removed duplicated region for block: B:428:0x0a6c  */
    /* JADX WARNING: Removed duplicated region for block: B:69:0x0198  */
    /* JADX WARNING: Removed duplicated region for block: B:70:0x019a  */
    /* JADX WARNING: Removed duplicated region for block: B:72:0x019d  */
    /* JADX WARNING: Removed duplicated region for block: B:73:0x01a4  */
    /* JADX WARNING: Removed duplicated region for block: B:76:0x01a9  */
    /* JADX WARNING: Removed duplicated region for block: B:81:0x01c0  */
    /* JADX WARNING: Removed duplicated region for block: B:90:0x01df  */
    /* JADX WARNING: Removed duplicated region for block: B:91:0x01e7  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void setIsAboutToSwitchToIndex(int r35, boolean r36, boolean r37) {
        /*
            r34 = this;
            r0 = r34
            r1 = r35
            r2 = r37
            if (r36 != 0) goto L_0x000d
            int r3 = r0.switchingToIndex
            if (r3 != r1) goto L_0x000d
            return
        L_0x000d:
            r3 = r37
            r0.switchingToIndex = r1
            r4 = 0
            r5 = 0
            java.lang.String r6 = r34.getFileName(r35)
            r7 = 0
            r8 = 0
            if (r2 == 0) goto L_0x0048
            int r9 = android.os.Build.VERSION.SDK_INT
            r10 = 19
            if (r9 < r10) goto L_0x0048
            android.transition.TransitionSet r9 = new android.transition.TransitionSet
            r9.<init>()
            android.transition.Fade r10 = new android.transition.Fade
            r10.<init>()
            r9.addTransition(r10)
            android.transition.ChangeBounds r10 = new android.transition.ChangeBounds
            r10.<init>()
            r9.addTransition(r10)
            r9.setOrdering(r8)
            r10 = 220(0xdc, double:1.087E-321)
            r9.setDuration(r10)
            org.telegram.ui.Components.CubicBezierInterpolator r10 = org.telegram.ui.Components.CubicBezierInterpolator.DEFAULT
            r9.setInterpolator(r10)
            android.widget.LinearLayout r10 = r0.itemsLayout
            android.transition.TransitionManager.beginDelayedTransition(r10, r9)
        L_0x0048:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r9 = r0.imagesArr
            boolean r9 = r9.isEmpty()
            java.lang.String r11 = "AttachVideo"
            java.lang.String r14 = "AttachPhoto"
            r16 = 0
            java.lang.String r10 = "Of"
            java.lang.String r12 = ""
            r15 = 1
            if (r9 != 0) goto L_0x073e
            int r9 = r0.switchingToIndex
            if (r9 < 0) goto L_0x0739
            java.util.ArrayList<org.telegram.messenger.MessageObject> r13 = r0.imagesArr
            int r13 = r13.size()
            if (r9 < r13) goto L_0x006d
            r23 = r3
            r24 = r5
            goto L_0x073d
        L_0x006d:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r9 = r0.imagesArr
            int r13 = r0.switchingToIndex
            java.lang.Object r9 = r9.get(r13)
            r7 = r9
            org.telegram.messenger.MessageObject r7 = (org.telegram.messenger.MessageObject) r7
            boolean r4 = r7.isVideo()
            boolean r9 = r7.isInvoice()
            int r13 = r0.currentAccount
            org.telegram.messenger.MessagesController r13 = org.telegram.messenger.MessagesController.getInstance(r13)
            r22 = r9
            long r8 = r7.getChatId()
            boolean r8 = r13.isChatNoForwards((long) r8)
            if (r8 != 0) goto L_0x009f
            org.telegram.tgnet.TLRPC$Message r8 = r7.messageOwner
            if (r8 == 0) goto L_0x009d
            org.telegram.tgnet.TLRPC$Message r8 = r7.messageOwner
            boolean r8 = r8.noforwards
            if (r8 == 0) goto L_0x009d
            goto L_0x009f
        L_0x009d:
            r8 = 0
            goto L_0x00a0
        L_0x009f:
            r8 = 1
        L_0x00a0:
            if (r22 == 0) goto L_0x00e4
            org.telegram.ui.ActionBar.ActionBarMenuItem r9 = r0.masksItem
            r13 = 0
            r0.setItemVisible(r9, r13, r15)
            org.telegram.ui.ActionBar.ActionBarMenuItem r9 = r0.menuItem
            r13 = 6
            r9.hideSubItem(r13)
            org.telegram.ui.ActionBar.ActionBarMenuItem r9 = r0.menuItem
            r13 = 11
            r9.hideSubItem(r13)
            org.telegram.tgnet.TLRPC$Message r9 = r7.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r9 = r9.media
            java.lang.String r5 = r9.description
            r9 = 0
            r0.allowShare = r9
            android.widget.FrameLayout r9 = r0.bottomLayout
            r13 = 1111490560(0x42400000, float:48.0)
            int r15 = org.telegram.messenger.AndroidUtilities.dp(r13)
            float r15 = (float) r15
            r9.setTranslationY(r15)
            org.telegram.ui.PhotoViewer$CaptionTextViewSwitcher r9 = r0.captionTextViewSwitcher
            int r13 = org.telegram.messenger.AndroidUtilities.dp(r13)
            float r13 = (float) r13
            r9.setTranslationY(r13)
            org.telegram.ui.Components.FadingTextViewLayout r9 = r0.nameTextView
            r9.setText(r12)
            org.telegram.ui.Components.FadingTextViewLayout r9 = r0.dateTextView
            r9.setText(r12)
            r23 = r3
            r19 = r14
            goto L_0x03a8
        L_0x00e4:
            if (r8 != 0) goto L_0x00e8
            r9 = 1
            goto L_0x00e9
        L_0x00e8:
            r9 = 0
        L_0x00e9:
            r0.allowShare = r9
            boolean r9 = r7.isNewGif()
            if (r9 == 0) goto L_0x00fc
            boolean r9 = r0.allowShare
            if (r9 == 0) goto L_0x00fc
            org.telegram.ui.ActionBar.ActionBarMenuItem r9 = r0.menuItem
            r13 = 14
            r9.showSubItem(r13)
        L_0x00fc:
            org.telegram.ui.ChatActivity r9 = r0.parentChatActivity
            if (r9 == 0) goto L_0x0108
            boolean r9 = r9.isInScheduleMode()
            if (r9 == 0) goto L_0x0108
            r9 = 1
            goto L_0x0109
        L_0x0108:
            r9 = 0
        L_0x0109:
            r13 = 0
            boolean r9 = r7.canDeleteMessage(r9, r13)
            if (r9 == 0) goto L_0x011b
            int r9 = r0.slideshowMessageId
            if (r9 != 0) goto L_0x011b
            org.telegram.ui.ActionBar.ActionBarMenuItem r9 = r0.menuItem
            r13 = 6
            r9.showSubItem(r13)
            goto L_0x0121
        L_0x011b:
            r13 = 6
            org.telegram.ui.ActionBar.ActionBarMenuItem r9 = r0.menuItem
            r9.hideSubItem(r13)
        L_0x0121:
            org.telegram.ui.ActionBar.ActionBarMenuItem r9 = r0.menuItem
            r9.checkHideMenuItem()
            boolean r9 = r0.isEmbedVideo
            if (r9 == 0) goto L_0x013e
            org.telegram.ui.ActionBar.ActionBarMenuItem r9 = r0.menuItem
            r13 = 11
            r9.showSubItem(r13)
            org.telegram.ui.ActionBar.ActionBarMenuItem r9 = r0.pipItem
            r13 = 0
            r15 = 1
            r0.setItemVisible(r9, r15, r13)
            r23 = r3
            r24 = r5
            goto L_0x0245
        L_0x013e:
            if (r4 == 0) goto L_0x01f4
            if (r8 == 0) goto L_0x0189
            int r9 = r0.slideshowMessageId
            if (r9 != 0) goto L_0x015b
            org.telegram.tgnet.TLRPC$Message r9 = r7.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r9 = r9.media
            org.telegram.tgnet.TLRPC$WebPage r9 = r9.webpage
            if (r9 == 0) goto L_0x0181
            org.telegram.tgnet.TLRPC$Message r9 = r7.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r9 = r9.media
            org.telegram.tgnet.TLRPC$WebPage r9 = r9.webpage
            java.lang.String r9 = r9.url
            if (r9 == 0) goto L_0x0181
            r13 = 11
            goto L_0x018b
        L_0x015b:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r9 = r0.imagesArr
            r13 = 0
            java.lang.Object r9 = r9.get(r13)
            org.telegram.messenger.MessageObject r9 = (org.telegram.messenger.MessageObject) r9
            org.telegram.tgnet.TLRPC$Message r9 = r9.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r9 = r9.media
            org.telegram.tgnet.TLRPC$WebPage r9 = r9.webpage
            if (r9 == 0) goto L_0x0181
            java.util.ArrayList<org.telegram.messenger.MessageObject> r9 = r0.imagesArr
            java.lang.Object r9 = r9.get(r13)
            org.telegram.messenger.MessageObject r9 = (org.telegram.messenger.MessageObject) r9
            org.telegram.tgnet.TLRPC$Message r9 = r9.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r9 = r9.media
            org.telegram.tgnet.TLRPC$WebPage r9 = r9.webpage
            java.lang.String r9 = r9.url
            if (r9 == 0) goto L_0x0181
            r13 = 11
            goto L_0x018b
        L_0x0181:
            org.telegram.ui.ActionBar.ActionBarMenuItem r9 = r0.menuItem
            r13 = 11
            r9.hideSubItem(r13)
            goto L_0x0190
        L_0x0189:
            r13 = 11
        L_0x018b:
            org.telegram.ui.ActionBar.ActionBarMenuItem r9 = r0.menuItem
            r9.showSubItem(r13)
        L_0x0190:
            org.telegram.ui.ActionBar.ActionBarMenuItem r9 = r0.masksItem
            int r9 = r9.getVisibility()
            if (r9 != 0) goto L_0x019a
            r9 = 1
            goto L_0x019b
        L_0x019a:
            r9 = 0
        L_0x019b:
            if (r9 == 0) goto L_0x01a4
            org.telegram.ui.ActionBar.ActionBarMenuItem r13 = r0.masksItem
            r15 = 0
            r0.setItemVisible(r13, r15, r15)
            goto L_0x01a5
        L_0x01a4:
            r15 = 0
        L_0x01a5:
            boolean r13 = r0.pipAvailable
            if (r13 != 0) goto L_0x01c0
            org.telegram.ui.ActionBar.ActionBarMenuItem r13 = r0.pipItem
            r13.setEnabled(r15)
            org.telegram.ui.ActionBar.ActionBarMenuItem r13 = r0.pipItem
            if (r9 != 0) goto L_0x01b4
            r15 = 1
            goto L_0x01b5
        L_0x01b4:
            r15 = 0
        L_0x01b5:
            r23 = r3
            r3 = 1056964608(0x3var_, float:0.5)
            r24 = r5
            r5 = 1
            r0.setItemVisible(r13, r5, r15, r3)
            goto L_0x01cf
        L_0x01c0:
            r23 = r3
            r24 = r5
            r5 = 1
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.pipItem
            if (r9 != 0) goto L_0x01cb
            r13 = 1
            goto L_0x01cc
        L_0x01cb:
            r13 = 0
        L_0x01cc:
            r0.setItemVisible(r3, r5, r13)
        L_0x01cf:
            boolean r3 = r7.hasAttachedStickers()
            if (r3 == 0) goto L_0x01e7
            long r25 = r7.getDialogId()
            boolean r3 = org.telegram.messenger.DialogObject.isEncryptedDialog(r25)
            if (r3 != 0) goto L_0x01e7
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.menuItem
            r5 = 15
            r3.showSubItem(r5)
            goto L_0x01ee
        L_0x01e7:
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.menuItem
            r5 = 15
            r3.hideSubItem(r5)
        L_0x01ee:
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.menuItem
            r3.checkHideMenuItem()
            goto L_0x0245
        L_0x01f4:
            r23 = r3
            r24 = r5
            org.telegram.ui.ActionBar.ActionBarMenuSubItem r3 = r0.speedItem
            r5 = 8
            r3.setVisibility(r5)
            org.telegram.ui.ActionBar.ActionBarPopupWindow$GapView r3 = r0.speedGap
            r3.setVisibility(r5)
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.menuItem
            r5 = 11
            r3.hideSubItem(r5)
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.menuItem
            r3.checkHideMenuItem()
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.pipItem
            int r3 = r3.getVisibility()
            if (r3 != 0) goto L_0x021a
            r3 = 1
            goto L_0x021b
        L_0x021a:
            r3 = 0
        L_0x021b:
            boolean r5 = r7.hasAttachedStickers()
            if (r5 == 0) goto L_0x022d
            long r25 = r7.getDialogId()
            boolean r5 = org.telegram.messenger.DialogObject.isEncryptedDialog(r25)
            if (r5 != 0) goto L_0x022d
            r5 = 1
            goto L_0x022e
        L_0x022d:
            r5 = 0
        L_0x022e:
            if (r3 == 0) goto L_0x023b
            org.telegram.ui.ActionBar.ActionBarMenuItem r9 = r0.pipItem
            if (r5 != 0) goto L_0x0236
            r13 = 1
            goto L_0x0237
        L_0x0236:
            r13 = 0
        L_0x0237:
            r15 = 0
            r0.setItemVisible(r9, r15, r13)
        L_0x023b:
            org.telegram.ui.ActionBar.ActionBarMenuItem r9 = r0.masksItem
            if (r3 != 0) goto L_0x0241
            r13 = 1
            goto L_0x0242
        L_0x0241:
            r13 = 0
        L_0x0242:
            r0.setItemVisible(r9, r5, r13)
        L_0x0245:
            boolean r3 = r0.shouldMessageObjectAutoPlayed(r7)
            if (r3 != 0) goto L_0x0378
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r5 = r0.placeProvider
            int r9 = r0.switchingToIndex
            java.lang.CharSequence r5 = r5.getTitleFor(r9)
            boolean r5 = android.text.TextUtils.isEmpty(r5)
            if (r5 == 0) goto L_0x0378
            boolean r5 = r0.playerWasPlaying
            r9 = 1
            r5 = r5 ^ r9
            java.lang.String r9 = r0.nameOverride
            if (r9 == 0) goto L_0x026a
            org.telegram.ui.Components.FadingTextViewLayout r12 = r0.nameTextView
            r12.setText(r9)
            r19 = r14
            goto L_0x0304
        L_0x026a:
            org.telegram.tgnet.TLRPC$Message r9 = r7.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r9 = r9.fwd_from
            if (r9 == 0) goto L_0x0287
            org.telegram.tgnet.TLRPC$Message r9 = r7.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r9 = r9.fwd_from
            java.lang.String r9 = r9.from_name
            if (r9 == 0) goto L_0x0287
            org.telegram.ui.Components.FadingTextViewLayout r9 = r0.nameTextView
            org.telegram.tgnet.TLRPC$Message r12 = r7.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r12 = r12.fwd_from
            java.lang.String r12 = r12.from_name
            r9.setText(r12, r5)
            r19 = r14
            goto L_0x0304
        L_0x0287:
            boolean r9 = r7.isFromUser()
            if (r9 == 0) goto L_0x02b6
            int r9 = r0.currentAccount
            org.telegram.messenger.MessagesController r9 = org.telegram.messenger.MessagesController.getInstance(r9)
            org.telegram.tgnet.TLRPC$Message r13 = r7.messageOwner
            org.telegram.tgnet.TLRPC$Peer r13 = r13.from_id
            r15 = r14
            long r13 = r13.user_id
            java.lang.Long r13 = java.lang.Long.valueOf(r13)
            org.telegram.tgnet.TLRPC$User r9 = r9.getUser(r13)
            if (r9 == 0) goto L_0x02ae
            org.telegram.ui.Components.FadingTextViewLayout r12 = r0.nameTextView
            java.lang.String r13 = org.telegram.messenger.UserObject.getUserName(r9)
            r12.setText(r13, r5)
            goto L_0x02b3
        L_0x02ae:
            org.telegram.ui.Components.FadingTextViewLayout r13 = r0.nameTextView
            r13.setText(r12, r5)
        L_0x02b3:
            r19 = r15
            goto L_0x0304
        L_0x02b6:
            r15 = r14
            int r9 = r0.currentAccount
            org.telegram.messenger.MessagesController r9 = org.telegram.messenger.MessagesController.getInstance(r9)
            long r13 = r7.getSenderId()
            long r13 = -r13
            java.lang.Long r13 = java.lang.Long.valueOf(r13)
            org.telegram.tgnet.TLRPC$Chat r9 = r9.getChat(r13)
            boolean r13 = org.telegram.messenger.ChatObject.isChannel(r9)
            if (r13 == 0) goto L_0x02f3
            boolean r13 = r9.megagroup
            if (r13 == 0) goto L_0x02f3
            boolean r13 = r7.isForwardedChannelPost()
            if (r13 == 0) goto L_0x02f3
            int r13 = r0.currentAccount
            org.telegram.messenger.MessagesController r13 = org.telegram.messenger.MessagesController.getInstance(r13)
            org.telegram.tgnet.TLRPC$Message r14 = r7.messageOwner
            org.telegram.tgnet.TLRPC$MessageFwdHeader r14 = r14.fwd_from
            org.telegram.tgnet.TLRPC$Peer r14 = r14.from_id
            r19 = r15
            long r14 = r14.channel_id
            java.lang.Long r14 = java.lang.Long.valueOf(r14)
            org.telegram.tgnet.TLRPC$Chat r9 = r13.getChat(r14)
            goto L_0x02f5
        L_0x02f3:
            r19 = r15
        L_0x02f5:
            if (r9 == 0) goto L_0x02ff
            org.telegram.ui.Components.FadingTextViewLayout r12 = r0.nameTextView
            java.lang.String r13 = r9.title
            r12.setText(r13, r5)
            goto L_0x0304
        L_0x02ff:
            org.telegram.ui.Components.FadingTextViewLayout r13 = r0.nameTextView
            r13.setText(r12, r5)
        L_0x0304:
            int r9 = r0.dateOverride
            if (r9 == 0) goto L_0x030e
            long r12 = (long) r9
            r14 = 1000(0x3e8, double:4.94E-321)
            long r12 = r12 * r14
            goto L_0x0317
        L_0x030e:
            org.telegram.tgnet.TLRPC$Message r9 = r7.messageOwner
            int r9 = r9.date
            long r12 = (long) r9
            r14 = 1000(0x3e8, double:4.94E-321)
            long r12 = r12 * r14
        L_0x0317:
            r14 = 2
            java.lang.Object[] r15 = new java.lang.Object[r14]
            org.telegram.messenger.LocaleController r14 = org.telegram.messenger.LocaleController.getInstance()
            org.telegram.messenger.time.FastDateFormat r14 = r14.formatterYear
            java.util.Date r9 = new java.util.Date
            r9.<init>(r12)
            java.lang.String r9 = r14.format((java.util.Date) r9)
            r14 = 0
            r15[r14] = r9
            org.telegram.messenger.LocaleController r9 = org.telegram.messenger.LocaleController.getInstance()
            org.telegram.messenger.time.FastDateFormat r9 = r9.formatterDay
            java.util.Date r14 = new java.util.Date
            r14.<init>(r12)
            java.lang.String r9 = r9.format((java.util.Date) r14)
            r14 = 1
            r15[r14] = r9
            java.lang.String r9 = "formatDateAtTime"
            r14 = 2131629349(0x7f0e1525, float:1.8886016E38)
            java.lang.String r9 = org.telegram.messenger.LocaleController.formatString(r9, r14, r15)
            if (r6 == 0) goto L_0x036e
            if (r4 == 0) goto L_0x036e
            org.telegram.ui.Components.FadingTextViewLayout r14 = r0.dateTextView
            r20 = r3
            r15 = 2
            java.lang.Object[] r3 = new java.lang.Object[r15]
            r15 = 0
            r3[r15] = r9
            org.telegram.tgnet.TLRPC$Document r15 = r7.getDocument()
            r25 = r12
            long r12 = r15.size
            java.lang.String r12 = org.telegram.messenger.AndroidUtilities.formatFileSize(r12)
            r13 = 1
            r3[r13] = r12
            java.lang.String r12 = "%s (%s)"
            java.lang.String r3 = java.lang.String.format(r12, r3)
            r14.setText(r3, r2)
            goto L_0x0395
        L_0x036e:
            r20 = r3
            r25 = r12
            org.telegram.ui.Components.FadingTextViewLayout r3 = r0.dateTextView
            r3.setText(r9, r5)
            goto L_0x0395
        L_0x0378:
            r20 = r3
            r19 = r14
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r3 = r0.placeProvider
            int r5 = r0.switchingToIndex
            java.lang.CharSequence r3 = r3.getTitleFor(r5)
            boolean r3 = android.text.TextUtils.isEmpty(r3)
            if (r3 != 0) goto L_0x0395
            org.telegram.ui.Components.FadingTextViewLayout r3 = r0.nameTextView
            r3.setText(r12)
            org.telegram.ui.Components.FadingTextViewLayout r3 = r0.dateTextView
            r3.setText(r12)
            goto L_0x0396
        L_0x0395:
        L_0x0396:
            org.telegram.tgnet.TLRPC$Message r3 = r7.messageOwner
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_restrictionReason> r3 = r3.restriction_reason
            java.lang.String r3 = org.telegram.messenger.MessagesController.getRestrictionReason(r3)
            boolean r5 = android.text.TextUtils.isEmpty(r3)
            if (r5 != 0) goto L_0x03a6
            r5 = r3
            goto L_0x03a8
        L_0x03a6:
            java.lang.CharSequence r5 = r7.caption
        L_0x03a8:
            org.telegram.ui.Components.AnimatedFileDrawable r3 = r0.currentAnimation
            if (r3 == 0) goto L_0x0419
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.menuItem
            r9 = 1
            r3.hideSubItem(r9)
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.menuItem
            r9 = 10
            r3.hideSubItem(r9)
            org.telegram.ui.ChatActivity r3 = r0.parentChatActivity
            if (r3 == 0) goto L_0x03c5
            boolean r3 = r3.isInScheduleMode()
            if (r3 == 0) goto L_0x03c5
            r3 = 1
            goto L_0x03c6
        L_0x03c5:
            r3 = 0
        L_0x03c6:
            r9 = 0
            boolean r3 = r7.canDeleteMessage(r3, r9)
            if (r3 != 0) goto L_0x03d3
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.menuItem
            r9 = 6
            r3.hideSubItem(r9)
        L_0x03d3:
            if (r8 != 0) goto L_0x03d7
            r15 = 1
            goto L_0x03d8
        L_0x03d7:
            r15 = 0
        L_0x03d8:
            r0.allowShare = r15
            android.widget.LinearLayout r3 = r0.bottomButtonsLayout
            r9 = 0
            r3.setVisibility(r9)
            android.widget.ImageView r3 = r0.paintButton
            r9 = 8
            r3.setVisibility(r9)
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.shareItem
            boolean r9 = r0.allowShare
            if (r9 == 0) goto L_0x03ef
            r9 = 0
            goto L_0x03f1
        L_0x03ef:
            r9 = 8
        L_0x03f1:
            r3.setVisibility(r9)
            android.widget.ImageView r3 = r0.shareButton
            boolean r9 = r0.allowShare
            if (r9 == 0) goto L_0x0404
            org.telegram.ui.ActionBar.ActionBarMenuItem r9 = r0.shareItem
            int r9 = r9.getVisibility()
            if (r9 == 0) goto L_0x0404
            r9 = 0
            goto L_0x0406
        L_0x0404:
            r9 = 8
        L_0x0406:
            r3.setVisibility(r9)
            org.telegram.ui.ActionBar.ActionBar r3 = r0.actionBar
            r9 = 2131624483(0x7f0e0223, float:1.8876147E38)
            java.lang.String r10 = "AttachGif"
            java.lang.String r9 = org.telegram.messenger.LocaleController.getString(r10, r9)
            r3.setTitle(r9)
            goto L_0x072e
        L_0x0419:
            int r3 = r0.totalImagesCount
            int r9 = r0.totalImagesCountMerge
            int r3 = r3 + r9
            if (r3 == 0) goto L_0x060f
            boolean r3 = r0.needSearchImageInArr
            if (r3 != 0) goto L_0x060f
            boolean r3 = r0.opennedFromMedia
            if (r3 == 0) goto L_0x055d
            int r3 = r0.startOffset
            java.util.ArrayList<org.telegram.messenger.MessageObject> r9 = r0.imagesArr
            int r9 = r9.size()
            int r3 = r3 + r9
            int r9 = r0.totalImagesCount
            int r11 = r0.totalImagesCountMerge
            int r9 = r9 + r11
            if (r3 >= r9) goto L_0x04c2
            boolean r3 = r0.loadingMoreImages
            if (r3 != 0) goto L_0x04c2
            int r3 = r0.switchingToIndex
            java.util.ArrayList<org.telegram.messenger.MessageObject> r9 = r0.imagesArr
            int r9 = r9.size()
            r11 = 5
            int r9 = r9 - r11
            if (r3 <= r9) goto L_0x04c2
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r0.imagesArr
            boolean r3 = r3.isEmpty()
            if (r3 == 0) goto L_0x0452
            r3 = 0
            goto L_0x0464
        L_0x0452:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r0.imagesArr
            int r9 = r3.size()
            r11 = 1
            int r9 = r9 - r11
            java.lang.Object r3 = r3.get(r9)
            org.telegram.messenger.MessageObject r3 = (org.telegram.messenger.MessageObject) r3
            int r3 = r3.getId()
        L_0x0464:
            r9 = 0
            boolean[] r11 = r0.endReached
            boolean r11 = r11[r9]
            if (r11 == 0) goto L_0x0493
            long r11 = r0.mergeDialogId
            int r13 = (r11 > r16 ? 1 : (r11 == r16 ? 0 : -1))
            if (r13 == 0) goto L_0x0493
            r9 = 1
            java.util.ArrayList<org.telegram.messenger.MessageObject> r11 = r0.imagesArr
            boolean r11 = r11.isEmpty()
            if (r11 != 0) goto L_0x0493
            java.util.ArrayList<org.telegram.messenger.MessageObject> r11 = r0.imagesArr
            int r12 = r11.size()
            r13 = 1
            int r12 = r12 - r13
            java.lang.Object r11 = r11.get(r12)
            org.telegram.messenger.MessageObject r11 = (org.telegram.messenger.MessageObject) r11
            long r11 = r11.getDialogId()
            long r13 = r0.mergeDialogId
            int r15 = (r11 > r13 ? 1 : (r11 == r13 ? 0 : -1))
            if (r15 == 0) goto L_0x0493
            r3 = 0
        L_0x0493:
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r11 = r0.placeProvider
            boolean r11 = r11.loadMore()
            if (r11 != 0) goto L_0x04c2
            int r11 = r0.currentAccount
            org.telegram.messenger.MediaDataController r24 = org.telegram.messenger.MediaDataController.getInstance(r11)
            if (r9 != 0) goto L_0x04a6
            long r11 = r0.currentDialogId
            goto L_0x04a8
        L_0x04a6:
            long r11 = r0.mergeDialogId
        L_0x04a8:
            r25 = r11
            r27 = 40
            r29 = 0
            int r11 = r0.sharedMediaType
            r31 = 1
            int r12 = r0.classGuid
            r33 = 0
            r28 = r3
            r30 = r11
            r32 = r12
            r24.loadMedia(r25, r27, r28, r29, r30, r31, r32, r33)
            r11 = 1
            r0.loadingMoreImages = r11
        L_0x04c2:
            int r3 = r0.startOffset
            if (r3 <= 0) goto L_0x0510
            int r3 = r0.switchingToIndex
            r9 = 5
            if (r3 >= r9) goto L_0x0510
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r0.imagesArr
            boolean r3 = r3.isEmpty()
            if (r3 != 0) goto L_0x0510
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r0.imagesArr
            r9 = 0
            java.lang.Object r3 = r3.get(r9)
            org.telegram.messenger.MessageObject r3 = (org.telegram.messenger.MessageObject) r3
            int r3 = r3.getId()
            r9 = 0
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r11 = r0.placeProvider
            boolean r11 = r11.loadMore()
            if (r11 != 0) goto L_0x0510
            int r11 = r0.currentAccount
            org.telegram.messenger.MediaDataController r24 = org.telegram.messenger.MediaDataController.getInstance(r11)
            if (r9 != 0) goto L_0x04f4
            long r11 = r0.currentDialogId
            goto L_0x04f6
        L_0x04f4:
            long r11 = r0.mergeDialogId
        L_0x04f6:
            r25 = r11
            r27 = 40
            r28 = 0
            int r11 = r0.sharedMediaType
            r31 = 1
            int r12 = r0.classGuid
            r33 = 0
            r29 = r3
            r30 = r11
            r32 = r12
            r24.loadMedia(r25, r27, r28, r29, r30, r31, r32, r33)
            r11 = 1
            r0.loadingMoreImages = r11
        L_0x0510:
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r3 = r0.placeProvider
            int r9 = r0.switchingToIndex
            java.lang.CharSequence r3 = r3.getTitleFor(r9)
            if (r3 == 0) goto L_0x0533
            org.telegram.ui.ActionBar.ActionBar r9 = r0.actionBar
            r9.setTitle(r3)
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r9 = r0.placeProvider
            int r10 = r0.switchingToIndex
            java.lang.CharSequence r9 = r9.getSubtitleFor(r10)
            org.telegram.ui.ActionBar.ActionBar r10 = r0.actionBar
            r10.setSubtitle(r9)
            org.telegram.ui.ActionBar.ActionBar r10 = r0.actionBar
            r11 = 1
            r10.setTitleScrollNonFitText(r11)
            goto L_0x055b
        L_0x0533:
            r11 = 1
            org.telegram.ui.ActionBar.ActionBar r9 = r0.actionBar
            r12 = 2
            java.lang.Object[] r12 = new java.lang.Object[r12]
            int r13 = r0.startOffset
            int r14 = r0.switchingToIndex
            int r13 = r13 + r14
            int r13 = r13 + r11
            java.lang.Integer r13 = java.lang.Integer.valueOf(r13)
            r14 = 0
            r12[r14] = r13
            int r13 = r0.totalImagesCount
            int r14 = r0.totalImagesCountMerge
            int r13 = r13 + r14
            java.lang.Integer r13 = java.lang.Integer.valueOf(r13)
            r12[r11] = r13
            r11 = 2131627077(0x7f0e0CLASSNAME, float:1.8881408E38)
            java.lang.String r10 = org.telegram.messenger.LocaleController.formatString(r10, r11, r12)
            r9.setTitle(r10)
        L_0x055b:
            goto L_0x0693
        L_0x055d:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r0.imagesArr
            int r3 = r3.size()
            int r9 = r0.totalImagesCount
            int r11 = r0.totalImagesCountMerge
            int r9 = r9 + r11
            if (r3 >= r9) goto L_0x05db
            boolean r3 = r0.loadingMoreImages
            if (r3 != 0) goto L_0x05db
            int r3 = r0.switchingToIndex
            r9 = 5
            if (r3 >= r9) goto L_0x05db
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r0.imagesArr
            boolean r3 = r3.isEmpty()
            if (r3 == 0) goto L_0x057d
            r3 = 0
            goto L_0x058a
        L_0x057d:
            java.util.ArrayList<org.telegram.messenger.MessageObject> r3 = r0.imagesArr
            r9 = 0
            java.lang.Object r3 = r3.get(r9)
            org.telegram.messenger.MessageObject r3 = (org.telegram.messenger.MessageObject) r3
            int r3 = r3.getId()
        L_0x058a:
            r9 = 0
            boolean[] r11 = r0.endReached
            boolean r11 = r11[r9]
            if (r11 == 0) goto L_0x05b4
            long r11 = r0.mergeDialogId
            int r13 = (r11 > r16 ? 1 : (r11 == r16 ? 0 : -1))
            if (r13 == 0) goto L_0x05b4
            r9 = 1
            java.util.ArrayList<org.telegram.messenger.MessageObject> r11 = r0.imagesArr
            boolean r11 = r11.isEmpty()
            if (r11 != 0) goto L_0x05b4
            java.util.ArrayList<org.telegram.messenger.MessageObject> r11 = r0.imagesArr
            r12 = 0
            java.lang.Object r11 = r11.get(r12)
            org.telegram.messenger.MessageObject r11 = (org.telegram.messenger.MessageObject) r11
            long r11 = r11.getDialogId()
            long r13 = r0.mergeDialogId
            int r15 = (r11 > r13 ? 1 : (r11 == r13 ? 0 : -1))
            if (r15 == 0) goto L_0x05b4
            r3 = 0
        L_0x05b4:
            int r11 = r0.currentAccount
            org.telegram.messenger.MediaDataController r24 = org.telegram.messenger.MediaDataController.getInstance(r11)
            if (r9 != 0) goto L_0x05bf
            long r11 = r0.currentDialogId
            goto L_0x05c1
        L_0x05bf:
            long r11 = r0.mergeDialogId
        L_0x05c1:
            r25 = r11
            r27 = 80
            r29 = 0
            int r11 = r0.sharedMediaType
            r31 = 1
            int r12 = r0.classGuid
            r33 = 0
            r28 = r3
            r30 = r11
            r32 = r12
            r24.loadMedia(r25, r27, r28, r29, r30, r31, r32, r33)
            r11 = 1
            r0.loadingMoreImages = r11
        L_0x05db:
            org.telegram.ui.ActionBar.ActionBar r3 = r0.actionBar
            r9 = 2
            java.lang.Object[] r9 = new java.lang.Object[r9]
            int r11 = r0.totalImagesCount
            int r12 = r0.totalImagesCountMerge
            int r11 = r11 + r12
            java.util.ArrayList<org.telegram.messenger.MessageObject> r12 = r0.imagesArr
            int r12 = r12.size()
            int r11 = r11 - r12
            int r12 = r0.switchingToIndex
            int r11 = r11 + r12
            r12 = 1
            int r11 = r11 + r12
            java.lang.Integer r11 = java.lang.Integer.valueOf(r11)
            r13 = 0
            r9[r13] = r11
            int r11 = r0.totalImagesCount
            int r13 = r0.totalImagesCountMerge
            int r11 = r11 + r13
            java.lang.Integer r11 = java.lang.Integer.valueOf(r11)
            r9[r12] = r11
            r11 = 2131627077(0x7f0e0CLASSNAME, float:1.8881408E38)
            java.lang.String r9 = org.telegram.messenger.LocaleController.formatString(r10, r11, r9)
            r3.setTitle(r9)
            goto L_0x0693
        L_0x060f:
            int r3 = r0.slideshowMessageId
            if (r3 != 0) goto L_0x065e
            org.telegram.tgnet.TLRPC$Message r3 = r7.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r3 = r3.media
            boolean r3 = r3 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaWebPage
            if (r3 == 0) goto L_0x065e
            boolean r3 = r0.isEmbedVideo
            if (r3 == 0) goto L_0x0627
            org.telegram.ui.ActionBar.ActionBar r3 = r0.actionBar
            java.lang.String r9 = "YouTube"
            r3.setTitle(r9)
            goto L_0x0693
        L_0x0627:
            boolean r3 = r7.canPreviewDocument()
            if (r3 == 0) goto L_0x063c
            org.telegram.ui.ActionBar.ActionBar r3 = r0.actionBar
            r9 = 2131624481(0x7f0e0221, float:1.8876143E38)
            java.lang.String r10 = "AttachDocument"
            java.lang.String r9 = org.telegram.messenger.LocaleController.getString(r10, r9)
            r3.setTitle(r9)
            goto L_0x0693
        L_0x063c:
            boolean r3 = r7.isVideo()
            if (r3 == 0) goto L_0x064f
            org.telegram.ui.ActionBar.ActionBar r3 = r0.actionBar
            r9 = 2131624508(0x7f0e023c, float:1.8876198E38)
            java.lang.String r9 = org.telegram.messenger.LocaleController.getString(r11, r9)
            r3.setTitle(r9)
            goto L_0x0693
        L_0x064f:
            org.telegram.ui.ActionBar.ActionBar r3 = r0.actionBar
            r13 = r19
            r9 = 2131624502(0x7f0e0236, float:1.8876186E38)
            java.lang.String r9 = org.telegram.messenger.LocaleController.getString(r13, r9)
            r3.setTitle(r9)
            goto L_0x0693
        L_0x065e:
            if (r22 == 0) goto L_0x066c
            org.telegram.ui.ActionBar.ActionBar r3 = r0.actionBar
            org.telegram.tgnet.TLRPC$Message r9 = r7.messageOwner
            org.telegram.tgnet.TLRPC$MessageMedia r9 = r9.media
            java.lang.String r9 = r9.title
            r3.setTitle(r9)
            goto L_0x0693
        L_0x066c:
            boolean r3 = r7.isVideo()
            if (r3 == 0) goto L_0x067f
            org.telegram.ui.ActionBar.ActionBar r3 = r0.actionBar
            r9 = 2131624508(0x7f0e023c, float:1.8876198E38)
            java.lang.String r9 = org.telegram.messenger.LocaleController.getString(r11, r9)
            r3.setTitle(r9)
            goto L_0x0693
        L_0x067f:
            org.telegram.tgnet.TLRPC$Document r3 = r7.getDocument()
            if (r3 == 0) goto L_0x0693
            org.telegram.ui.ActionBar.ActionBar r3 = r0.actionBar
            r9 = 2131624481(0x7f0e0221, float:1.8876143E38)
            java.lang.String r10 = "AttachDocument"
            java.lang.String r9 = org.telegram.messenger.LocaleController.getString(r10, r9)
            r3.setTitle(r9)
        L_0x0693:
            long r9 = r0.currentDialogId
            boolean r3 = org.telegram.messenger.DialogObject.isEncryptedDialog(r9)
            if (r3 == 0) goto L_0x069f
            boolean r3 = r0.isEmbedVideo
            if (r3 == 0) goto L_0x06a1
        L_0x069f:
            if (r8 == 0) goto L_0x06a7
        L_0x06a1:
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.sendItem
            r9 = 0
            r0.setItemVisible(r3, r9, r9)
        L_0x06a7:
            boolean r3 = r0.isEmbedVideo
            if (r3 != 0) goto L_0x0717
            org.telegram.tgnet.TLRPC$Message r3 = r7.messageOwner
            int r3 = r3.ttl
            if (r3 == 0) goto L_0x06b9
            org.telegram.tgnet.TLRPC$Message r3 = r7.messageOwner
            int r3 = r3.ttl
            r9 = 3600(0xe10, float:5.045E-42)
            if (r3 < r9) goto L_0x0717
        L_0x06b9:
            if (r8 == 0) goto L_0x06bc
            goto L_0x0717
        L_0x06bc:
            r3 = 1
            r0.allowShare = r3
            org.telegram.ui.ActionBar.ActionBarMenuItem r9 = r0.menuItem
            r9.showSubItem(r3)
            org.telegram.tgnet.TLRPC$Document r3 = r7.getDocument()
            if (r3 == 0) goto L_0x06df
            boolean r3 = r7.canPreviewDocument()
            if (r3 != 0) goto L_0x06df
            java.lang.String r3 = r7.getMimeType()
            java.lang.String r9 = "video/"
            boolean r3 = r3.startsWith(r9)
            if (r3 == 0) goto L_0x06dd
            goto L_0x06df
        L_0x06dd:
            r15 = 0
            goto L_0x06e0
        L_0x06df:
            r15 = 1
        L_0x06e0:
            r3 = r15
            android.widget.ImageView r9 = r0.paintButton
            if (r3 == 0) goto L_0x06ed
            boolean r10 = r34.canSendMediaToParentChatActivity()
            if (r10 == 0) goto L_0x06ed
            r10 = 0
            goto L_0x06ef
        L_0x06ed:
            r10 = 8
        L_0x06ef:
            r9.setVisibility(r10)
            android.widget.LinearLayout r9 = r0.bottomButtonsLayout
            boolean r10 = r0.videoPlayerControlVisible
            if (r10 != 0) goto L_0x06fa
            r10 = 0
            goto L_0x06fc
        L_0x06fa:
            r10 = 8
        L_0x06fc:
            r9.setVisibility(r10)
            android.widget.LinearLayout r9 = r0.bottomButtonsLayout
            int r9 = r9.getVisibility()
            if (r9 != 0) goto L_0x070f
            org.telegram.ui.ActionBar.ActionBarMenuItem r9 = r0.menuItem
            r10 = 10
            r9.hideSubItem(r10)
            goto L_0x072e
        L_0x070f:
            r10 = 10
            org.telegram.ui.ActionBar.ActionBarMenuItem r9 = r0.menuItem
            r9.showSubItem(r10)
            goto L_0x072e
        L_0x0717:
            r3 = 0
            r0.allowShare = r3
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.menuItem
            r9 = 1
            r3.hideSubItem(r9)
            android.widget.LinearLayout r3 = r0.bottomButtonsLayout
            r9 = 8
            r3.setVisibility(r9)
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.menuItem
            r9 = 10
            r3.hideSubItem(r9)
        L_0x072e:
            org.telegram.ui.Components.GroupedPhotosListView r3 = r0.groupedPhotosListView
            r3.fillList()
            r22 = r6
            r3 = r23
            goto L_0x0e5c
        L_0x0739:
            r23 = r3
            r24 = r5
        L_0x073d:
            return
        L_0x073e:
            r23 = r3
            r24 = r5
            r13 = r14
            java.util.ArrayList<org.telegram.messenger.SecureDocument> r3 = r0.secureDocuments
            boolean r3 = r3.isEmpty()
            if (r3 != 0) goto L_0x0791
            r3 = 0
            r0.allowShare = r3
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.menuItem
            r5 = 6
            r3.showSubItem(r5)
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.menuItem
            r5 = 1
            r3.hideSubItem(r5)
            org.telegram.ui.Components.FadingTextViewLayout r3 = r0.nameTextView
            r3.setText(r12)
            org.telegram.ui.Components.FadingTextViewLayout r3 = r0.dateTextView
            r3.setText(r12)
            org.telegram.ui.ActionBar.ActionBar r3 = r0.actionBar
            r8 = 2
            java.lang.Object[] r8 = new java.lang.Object[r8]
            int r9 = r0.switchingToIndex
            int r9 = r9 + r5
            java.lang.Integer r9 = java.lang.Integer.valueOf(r9)
            r11 = 0
            r8[r11] = r9
            java.util.ArrayList<org.telegram.messenger.SecureDocument> r9 = r0.secureDocuments
            int r9 = r9.size()
            java.lang.Integer r9 = java.lang.Integer.valueOf(r9)
            r8[r5] = r9
            r5 = 2131627077(0x7f0e0CLASSNAME, float:1.8881408E38)
            java.lang.String r5 = org.telegram.messenger.LocaleController.formatString(r10, r5, r8)
            r3.setTitle(r5)
            r21 = r4
            r22 = r6
            r26 = r7
            goto L_0x0e54
        L_0x0791:
            java.util.ArrayList<org.telegram.messenger.ImageLocation> r3 = r0.imagesArrLocations
            boolean r3 = r3.isEmpty()
            if (r3 != 0) goto L_0x08d9
            if (r1 < 0) goto L_0x08d8
            java.util.ArrayList<org.telegram.messenger.ImageLocation> r3 = r0.imagesArrLocations
            int r3 = r3.size()
            if (r1 < r3) goto L_0x07a5
            goto L_0x08d8
        L_0x07a5:
            org.telegram.ui.Components.FadingTextViewLayout r3 = r0.nameTextView
            r3.setText(r12)
            org.telegram.ui.Components.FadingTextViewLayout r3 = r0.dateTextView
            r3.setText(r12)
            boolean r3 = r0.canEditAvatar
            r5 = 17
            r8 = 16
            if (r3 == 0) goto L_0x081a
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Photo> r3 = r0.avatarsArr
            boolean r3 = r3.isEmpty()
            if (r3 != 0) goto L_0x081a
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.menuItem
            r3.showSubItem(r5)
            boolean r3 = r34.isCurrentAvatarSet()
            if (r3 == 0) goto L_0x07d0
            org.telegram.ui.ActionBar.ActionBarMenuItem r5 = r0.menuItem
            r5.hideSubItem(r8)
            goto L_0x07d5
        L_0x07d0:
            org.telegram.ui.ActionBar.ActionBarMenuItem r5 = r0.menuItem
            r5.showSubItem(r8)
        L_0x07d5:
            long r8 = r0.avatarsDialogId
            int r5 = (r8 > r16 ? 1 : (r8 == r16 ? 0 : -1))
            if (r5 <= 0) goto L_0x07dd
            r5 = 1
            goto L_0x080a
        L_0x07dd:
            int r5 = r0.currentAccount
            org.telegram.messenger.MessagesController r5 = org.telegram.messenger.MessagesController.getInstance(r5)
            long r8 = r0.avatarsDialogId
            long r8 = -r8
            java.lang.Long r8 = java.lang.Long.valueOf(r8)
            org.telegram.tgnet.TLRPC$Chat r5 = r5.getChat(r8)
            boolean r8 = r34.isCurrentAvatarSet()
            if (r8 != 0) goto L_0x0808
            int r8 = r0.currentAccount
            java.util.ArrayList<org.telegram.tgnet.TLRPC$Message> r9 = r0.imagesArrMessages
            java.lang.Object r9 = r9.get(r1)
            org.telegram.tgnet.TLRPC$Message r9 = (org.telegram.tgnet.TLRPC.Message) r9
            r11 = 0
            boolean r8 = org.telegram.messenger.MessageObject.canDeleteMessage(r8, r11, r9, r5)
            if (r8 == 0) goto L_0x0806
            goto L_0x0808
        L_0x0806:
            r8 = 0
            goto L_0x0809
        L_0x0808:
            r8 = 1
        L_0x0809:
            r5 = r8
        L_0x080a:
            if (r5 == 0) goto L_0x0813
            org.telegram.ui.ActionBar.ActionBarMenuItem r8 = r0.menuItem
            r9 = 6
            r8.showSubItem(r9)
            goto L_0x0819
        L_0x0813:
            r9 = 6
            org.telegram.ui.ActionBar.ActionBarMenuItem r8 = r0.menuItem
            r8.hideSubItem(r9)
        L_0x0819:
            goto L_0x082a
        L_0x081a:
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.menuItem
            r3.hideSubItem(r5)
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.menuItem
            r3.hideSubItem(r8)
            org.telegram.ui.ActionBar.ActionBarMenuItem r3 = r0.menuItem
            r5 = 6
            r3.hideSubItem(r5)
        L_0x082a:
            boolean r3 = r0.isEvent
            if (r3 == 0) goto L_0x083b
            org.telegram.ui.ActionBar.ActionBar r3 = r0.actionBar
            r5 = 2131624502(0x7f0e0236, float:1.8876186E38)
            java.lang.String r5 = org.telegram.messenger.LocaleController.getString(r13, r5)
            r3.setTitle(r5)
            goto L_0x0861
        L_0x083b:
            org.telegram.ui.ActionBar.ActionBar r3 = r0.actionBar
            r5 = 2
            java.lang.Object[] r5 = new java.lang.Object[r5]
            int r8 = r0.switchingToIndex
            r9 = 1
            int r8 = r8 + r9
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)
            r11 = 0
            r5[r11] = r8
            java.util.ArrayList<org.telegram.messenger.ImageLocation> r8 = r0.imagesArrLocations
            int r8 = r8.size()
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)
            r5[r9] = r8
            r8 = 2131627077(0x7f0e0CLASSNAME, float:1.8881408E38)
            java.lang.String r5 = org.telegram.messenger.LocaleController.formatString(r10, r8, r5)
            r3.setTitle(r5)
        L_0x0861:
            long r8 = r0.avatarsDialogId
            int r3 = (r8 > r16 ? 1 : (r8 == r16 ? 0 : -1))
            if (r3 == 0) goto L_0x0878
            int r3 = r0.currentAccount
            org.telegram.messenger.MessagesController r3 = org.telegram.messenger.MessagesController.getInstance(r3)
            long r8 = r0.avatarsDialogId
            long r8 = -r8
            boolean r3 = r3.isChatNoForwards((long) r8)
            if (r3 == 0) goto L_0x0878
            r3 = 1
            goto L_0x0879
        L_0x0878:
            r3 = 0
        L_0x0879:
            if (r3 == 0) goto L_0x0882
            org.telegram.ui.ActionBar.ActionBarMenuItem r5 = r0.menuItem
            r8 = 1
            r5.hideSubItem(r8)
            goto L_0x0888
        L_0x0882:
            r8 = 1
            org.telegram.ui.ActionBar.ActionBarMenuItem r5 = r0.menuItem
            r5.showSubItem(r8)
        L_0x0888:
            if (r3 != 0) goto L_0x088c
            r15 = 1
            goto L_0x088d
        L_0x088c:
            r15 = 0
        L_0x088d:
            r0.allowShare = r15
            android.widget.ImageView r5 = r0.shareButton
            if (r15 == 0) goto L_0x089d
            org.telegram.ui.ActionBar.ActionBarMenuItem r8 = r0.shareItem
            int r8 = r8.getVisibility()
            if (r8 == 0) goto L_0x089d
            r8 = 0
            goto L_0x089f
        L_0x089d:
            r8 = 8
        L_0x089f:
            r5.setVisibility(r8)
            android.widget.LinearLayout r5 = r0.bottomButtonsLayout
            boolean r8 = r0.videoPlayerControlVisible
            if (r8 != 0) goto L_0x08aa
            r8 = 0
            goto L_0x08ac
        L_0x08aa:
            r8 = 8
        L_0x08ac:
            r5.setVisibility(r8)
            android.widget.LinearLayout r5 = r0.bottomButtonsLayout
            int r5 = r5.getVisibility()
            if (r5 != 0) goto L_0x08bf
            org.telegram.ui.ActionBar.ActionBarMenuItem r5 = r0.menuItem
            r8 = 10
            r5.hideSubItem(r8)
            goto L_0x08c6
        L_0x08bf:
            r8 = 10
            org.telegram.ui.ActionBar.ActionBarMenuItem r5 = r0.menuItem
            r5.showSubItem(r8)
        L_0x08c6:
            org.telegram.ui.ActionBar.ActionBarMenuItem r5 = r0.menuItem
            r5.checkHideMenuItem()
            org.telegram.ui.Components.GroupedPhotosListView r5 = r0.groupedPhotosListView
            r5.fillList()
            r21 = r4
            r22 = r6
            r26 = r7
            goto L_0x0e54
        L_0x08d8:
            return
        L_0x08d9:
            java.util.ArrayList<java.lang.Object> r3 = r0.imagesArrLocals
            boolean r3 = r3.isEmpty()
            if (r3 != 0) goto L_0x0d1e
            if (r1 < 0) goto L_0x0d17
            java.util.ArrayList<java.lang.Object> r3 = r0.imagesArrLocals
            int r3 = r3.size()
            if (r1 < r3) goto L_0x08f3
            r21 = r4
            r22 = r6
            r26 = r7
            goto L_0x0d1d
        L_0x08f3:
            java.util.ArrayList<java.lang.Object> r3 = r0.imagesArrLocals
            java.lang.Object r3 = r3.get(r1)
            r5 = 0
            r8 = 0
            r9 = 0
            r12 = 0
            r14 = 0
            boolean r15 = r3 instanceof org.telegram.tgnet.TLRPC.BotInlineResult
            if (r15 == 0) goto L_0x092d
            r15 = r3
            org.telegram.tgnet.TLRPC$BotInlineResult r15 = (org.telegram.tgnet.TLRPC.BotInlineResult) r15
            r0.currentBotInlineResult = r15
            org.telegram.tgnet.TLRPC$Document r1 = r15.document
            if (r1 == 0) goto L_0x0912
            org.telegram.tgnet.TLRPC$Document r1 = r15.document
            boolean r4 = org.telegram.messenger.MessageObject.isVideoDocument(r1)
            goto L_0x0925
        L_0x0912:
            org.telegram.tgnet.TLRPC$WebDocument r1 = r15.content
            boolean r1 = r1 instanceof org.telegram.tgnet.TLRPC.TL_webDocument
            if (r1 == 0) goto L_0x0923
            java.lang.String r1 = r15.type
            r21 = r4
            java.lang.String r4 = "video"
            boolean r4 = r1.equals(r4)
            goto L_0x0925
        L_0x0923:
            r21 = r4
        L_0x0925:
            r22 = r6
            r26 = r7
            r15 = r23
            goto L_0x0be3
        L_0x092d:
            r21 = r4
            r1 = 0
            boolean r4 = r3 instanceof org.telegram.messenger.MediaController.PhotoEntry
            if (r4 == 0) goto L_0x0941
            r4 = r3
            org.telegram.messenger.MediaController$PhotoEntry r4 = (org.telegram.messenger.MediaController.PhotoEntry) r4
            java.lang.String r15 = r4.path
            r0.currentPathObject = r15
            boolean r15 = r4.isVideo
            org.telegram.messenger.MediaController$CropState r14 = r4.cropState
            r4 = r15
            goto L_0x0964
        L_0x0941:
            boolean r4 = r3 instanceof org.telegram.messenger.MediaController.SearchImage
            if (r4 == 0) goto L_0x0960
            r4 = r3
            org.telegram.messenger.MediaController$SearchImage r4 = (org.telegram.messenger.MediaController.SearchImage) r4
            java.lang.String r15 = r4.getPathToAttach()
            r0.currentPathObject = r15
            org.telegram.messenger.MediaController$CropState r14 = r4.cropState
            int r15 = r4.type
            r19 = r1
            r1 = 1
            if (r15 != r1) goto L_0x095b
            r1 = 1
            r4 = r21
            goto L_0x0964
        L_0x095b:
            r1 = r19
            r4 = r21
            goto L_0x0964
        L_0x0960:
            r19 = r1
            r4 = r21
        L_0x0964:
            if (r4 == 0) goto L_0x0abf
            boolean r15 = r0.isCurrentVideo
            if (r15 != 0) goto L_0x096c
            r15 = 0
            goto L_0x096e
        L_0x096c:
            r15 = r23
        L_0x096e:
            r20 = r4
            r4 = 1
            r0.isCurrentVideo = r4
            r4 = 0
            r18 = 0
            r21 = 1065353216(0x3var_, float:1.0)
            r22 = r4
            boolean r4 = r3 instanceof org.telegram.messenger.MediaController.PhotoEntry
            if (r4 == 0) goto L_0x099f
            r4 = r3
            org.telegram.messenger.MediaController$PhotoEntry r4 = (org.telegram.messenger.MediaController.PhotoEntry) r4
            r25 = r5
            org.telegram.messenger.VideoEditedInfo r5 = r4.editedInfo
            if (r5 == 0) goto L_0x09a1
            org.telegram.messenger.VideoEditedInfo r5 = r4.editedInfo
            boolean r5 = r5.muted
            r22 = r5
            org.telegram.messenger.VideoEditedInfo r5 = r4.editedInfo
            float r5 = r5.start
            r18 = r5
            org.telegram.messenger.VideoEditedInfo r5 = r4.editedInfo
            float r5 = r5.end
            r4 = r22
            r22 = r6
            r6 = r5
            r5 = r18
            goto L_0x09a9
        L_0x099f:
            r25 = r5
        L_0x09a1:
            r5 = r18
            r4 = r22
            r22 = r6
            r6 = r21
        L_0x09a9:
            r26 = r7
            java.lang.String r7 = r0.currentPathObject
            r0.processOpenVideo(r7, r4, r5, r6)
            boolean r7 = r0.isDocumentsPicker
            if (r7 != 0) goto L_0x0a6c
            int r7 = android.os.Build.VERSION.SDK_INT
            r18 = r4
            r4 = 18
            if (r7 >= r4) goto L_0x09c0
            r21 = r5
            goto L_0x0a70
        L_0x09c0:
            r4 = 1
            r0.showVideoTimeline(r4, r2)
            int r7 = r0.sendPhotoType
            if (r7 == r4) goto L_0x0a08
            android.widget.TextView r7 = r0.videoAvatarTooltip
            r4 = 8
            r7.setVisibility(r4)
            android.widget.ImageView r7 = r0.cropItem
            r4 = 0
            r7.setVisibility(r4)
            android.widget.ImageView r4 = r0.cropItem
            r21 = r5
            r7 = 1
            java.lang.Integer r5 = java.lang.Integer.valueOf(r7)
            r4.setTag(r5)
            android.widget.ImageView r4 = r0.rotateItem
            r5 = 8
            r4.setVisibility(r5)
            android.widget.ImageView r4 = r0.rotateItem
            r7 = 0
            r4.setTag(r7)
            android.widget.ImageView r4 = r0.mirrorItem
            r4.setVisibility(r5)
            android.widget.ImageView r4 = r0.mirrorItem
            r4.setTag(r7)
            android.widget.ImageView r4 = r0.muteItem
            r5 = 1065353216(0x3var_, float:1.0)
            r7 = 1
            org.telegram.messenger.AndroidUtilities.updateViewVisibilityAnimated(r4, r7, r5, r2)
            android.widget.ImageView r4 = r0.compressItem
            r5 = 0
            r4.setVisibility(r5)
            r7 = 0
            goto L_0x0a4a
        L_0x0a08:
            r21 = r5
            r5 = 0
            android.widget.TextView r4 = r0.videoAvatarTooltip
            r4.setVisibility(r5)
            android.widget.ImageView r4 = r0.cropItem
            r7 = 8
            r4.setVisibility(r7)
            android.widget.ImageView r4 = r0.cropItem
            r7 = 0
            r4.setTag(r7)
            android.widget.ImageView r4 = r0.rotateItem
            r4.setVisibility(r5)
            android.widget.ImageView r4 = r0.rotateItem
            r7 = 1
            java.lang.Integer r5 = java.lang.Integer.valueOf(r7)
            r4.setTag(r5)
            android.widget.ImageView r4 = r0.mirrorItem
            r5 = 0
            r4.setVisibility(r5)
            android.widget.ImageView r4 = r0.mirrorItem
            java.lang.Integer r5 = java.lang.Integer.valueOf(r7)
            r4.setTag(r5)
            android.widget.ImageView r4 = r0.muteItem
            r5 = 1065353216(0x3var_, float:1.0)
            r7 = 0
            org.telegram.messenger.AndroidUtilities.updateViewVisibilityAnimated(r4, r7, r5, r2)
            android.widget.ImageView r4 = r0.compressItem
            r5 = 8
            r4.setVisibility(r5)
        L_0x0a4a:
            android.widget.ImageView r4 = r0.tuneItem
            r4.setVisibility(r7)
            android.widget.ImageView r4 = r0.tuneItem
            r5 = 1
            java.lang.Integer r7 = java.lang.Integer.valueOf(r5)
            r4.setTag(r7)
            android.widget.ImageView r4 = r0.paintItem
            r7 = 0
            r4.setVisibility(r7)
            android.widget.ImageView r4 = r0.paintItem
            java.lang.Integer r7 = java.lang.Integer.valueOf(r5)
            r4.setTag(r7)
            r5 = 0
            r7 = 8
            goto L_0x0abd
        L_0x0a6c:
            r18 = r4
            r21 = r5
        L_0x0a70:
            r4 = 0
            r0.showVideoTimeline(r4, r2)
            android.widget.TextView r4 = r0.videoAvatarTooltip
            r5 = 8
            r4.setVisibility(r5)
            android.widget.ImageView r4 = r0.cropItem
            r4.setVisibility(r5)
            android.widget.ImageView r4 = r0.cropItem
            r7 = 0
            r4.setTag(r7)
            android.widget.ImageView r4 = r0.tuneItem
            r4.setVisibility(r5)
            android.widget.ImageView r4 = r0.tuneItem
            r4.setTag(r7)
            android.widget.ImageView r4 = r0.paintItem
            r4.setVisibility(r5)
            android.widget.ImageView r4 = r0.paintItem
            r4.setTag(r7)
            android.widget.ImageView r4 = r0.rotateItem
            r4.setVisibility(r5)
            android.widget.ImageView r4 = r0.rotateItem
            r4.setTag(r7)
            android.widget.ImageView r4 = r0.mirrorItem
            r4.setVisibility(r5)
            android.widget.ImageView r4 = r0.mirrorItem
            r4.setTag(r7)
            android.widget.ImageView r4 = r0.muteItem
            r5 = 0
            r7 = 1065353216(0x3var_, float:1.0)
            org.telegram.messenger.AndroidUtilities.updateViewVisibilityAnimated(r4, r5, r7, r2)
            android.widget.ImageView r4 = r0.compressItem
            r7 = 8
            r4.setVisibility(r7)
        L_0x0abd:
            goto L_0x0b92
        L_0x0abf:
            r20 = r4
            r25 = r5
            r22 = r6
            r26 = r7
            r5 = 0
            r7 = 8
            r0.showVideoTimeline(r5, r2)
            android.widget.TextView r4 = r0.videoAvatarTooltip
            r4.setVisibility(r7)
            android.widget.ImageView r4 = r0.muteItem
            r6 = 1065353216(0x3var_, float:1.0)
            org.telegram.messenger.AndroidUtilities.updateViewVisibilityAnimated(r4, r5, r6, r2)
            boolean r4 = r0.isCurrentVideo
            if (r4 == 0) goto L_0x0ae0
            r4 = 0
            r23 = r4
        L_0x0ae0:
            r0.isCurrentVideo = r5
            android.widget.ImageView r4 = r0.compressItem
            r5 = 8
            r4.setVisibility(r5)
            if (r1 != 0) goto L_0x0b5c
            int r4 = r0.sendPhotoType
            r5 = 10
            if (r4 == r5) goto L_0x0b5c
            boolean r5 = r0.isDocumentsPicker
            if (r5 == 0) goto L_0x0af6
            goto L_0x0b5c
        L_0x0af6:
            r5 = 4
            if (r4 == r5) goto L_0x0b1c
            r5 = 5
            if (r4 != r5) goto L_0x0afd
            goto L_0x0b1c
        L_0x0afd:
            android.widget.ImageView r4 = r0.paintItem
            r5 = 0
            r4.setVisibility(r5)
            android.widget.ImageView r4 = r0.paintItem
            r6 = 1
            java.lang.Integer r7 = java.lang.Integer.valueOf(r6)
            r4.setTag(r7)
            android.widget.ImageView r4 = r0.tuneItem
            r4.setVisibility(r5)
            android.widget.ImageView r4 = r0.tuneItem
            java.lang.Integer r5 = java.lang.Integer.valueOf(r6)
            r4.setTag(r5)
            goto L_0x0b33
        L_0x0b1c:
            android.widget.ImageView r4 = r0.paintItem
            r5 = 8
            r4.setVisibility(r5)
            android.widget.ImageView r4 = r0.paintItem
            r6 = 0
            r4.setTag(r6)
            android.widget.ImageView r4 = r0.tuneItem
            r4.setVisibility(r5)
            android.widget.ImageView r4 = r0.tuneItem
            r4.setTag(r6)
        L_0x0b33:
            android.widget.ImageView r4 = r0.cropItem
            int r5 = r0.sendPhotoType
            r6 = 1
            if (r5 == r6) goto L_0x0b3c
            r5 = 0
            goto L_0x0b3e
        L_0x0b3c:
            r5 = 8
        L_0x0b3e:
            r4.setVisibility(r5)
            android.widget.ImageView r4 = r0.rotateItem
            int r5 = r0.sendPhotoType
            if (r5 == r6) goto L_0x0b4a
            r5 = 8
            goto L_0x0b4b
        L_0x0b4a:
            r5 = 0
        L_0x0b4b:
            r4.setVisibility(r5)
            android.widget.ImageView r4 = r0.mirrorItem
            int r5 = r0.sendPhotoType
            if (r5 == r6) goto L_0x0b57
            r5 = 8
            goto L_0x0b58
        L_0x0b57:
            r5 = 0
        L_0x0b58:
            r4.setVisibility(r5)
            goto L_0x0b83
        L_0x0b5c:
            android.widget.ImageView r4 = r0.paintItem
            r5 = 8
            r4.setVisibility(r5)
            android.widget.ImageView r4 = r0.paintItem
            r6 = 0
            r4.setTag(r6)
            android.widget.ImageView r4 = r0.cropItem
            r4.setVisibility(r5)
            android.widget.ImageView r4 = r0.rotateItem
            r4.setVisibility(r5)
            android.widget.ImageView r4 = r0.mirrorItem
            r4.setVisibility(r5)
            android.widget.ImageView r4 = r0.tuneItem
            r4.setVisibility(r5)
            android.widget.ImageView r4 = r0.tuneItem
            r5 = 0
            r4.setTag(r5)
        L_0x0b83:
            if (r2 == 0) goto L_0x0b8a
            org.telegram.ui.ActionBar.ActionBar r4 = r0.actionBar
            r4.beginDelayedTransition()
        L_0x0b8a:
            org.telegram.ui.ActionBar.ActionBar r4 = r0.actionBar
            r5 = 0
            r4.setSubtitle(r5)
            r15 = r23
        L_0x0b92:
            boolean r4 = r3 instanceof org.telegram.messenger.MediaController.PhotoEntry
            if (r4 == 0) goto L_0x0bc8
            r4 = r3
            org.telegram.messenger.MediaController$PhotoEntry r4 = (org.telegram.messenger.MediaController.PhotoEntry) r4
            int r5 = r4.bucketId
            if (r5 != 0) goto L_0x0bae
            long r5 = r4.dateTaken
            int r7 = (r5 > r16 ? 1 : (r5 == r16 ? 0 : -1))
            if (r7 != 0) goto L_0x0bae
            java.util.ArrayList<java.lang.Object> r5 = r0.imagesArrLocals
            int r5 = r5.size()
            r6 = 1
            if (r5 != r6) goto L_0x0bae
            r5 = 1
            goto L_0x0baf
        L_0x0bae:
            r5 = 0
        L_0x0baf:
            r0.fromCamera = r5
            boolean r5 = r0.hasCaptionForAllMedia
            if (r5 == 0) goto L_0x0bb8
            java.lang.CharSequence r5 = r0.captionForAllMedia
            goto L_0x0bba
        L_0x0bb8:
            java.lang.CharSequence r5 = r4.caption
        L_0x0bba:
            int r6 = r4.ttl
            boolean r8 = r4.isFiltered
            boolean r9 = r4.isPainted
            boolean r12 = r4.isCropped
            r24 = r5
            r5 = r6
            r4 = r20
            goto L_0x0be3
        L_0x0bc8:
            boolean r4 = r3 instanceof org.telegram.messenger.MediaController.SearchImage
            if (r4 == 0) goto L_0x0bdf
            r4 = r3
            org.telegram.messenger.MediaController$SearchImage r4 = (org.telegram.messenger.MediaController.SearchImage) r4
            java.lang.CharSequence r5 = r4.caption
            int r6 = r4.ttl
            boolean r8 = r4.isFiltered
            boolean r9 = r4.isPainted
            boolean r12 = r4.isCropped
            r24 = r5
            r5 = r6
            r4 = r20
            goto L_0x0be3
        L_0x0bdf:
            r4 = r20
            r5 = r25
        L_0x0be3:
            android.widget.FrameLayout r1 = r0.bottomLayout
            int r1 = r1.getVisibility()
            r6 = 8
            if (r1 == r6) goto L_0x0bf2
            android.widget.FrameLayout r1 = r0.bottomLayout
            r1.setVisibility(r6)
        L_0x0bf2:
            android.widget.FrameLayout r1 = r0.bottomLayout
            r6 = 0
            r1.setTag(r6)
            boolean r1 = r0.fromCamera
            if (r1 == 0) goto L_0x0CLASSNAME
            if (r4 == 0) goto L_0x0c0b
            org.telegram.ui.ActionBar.ActionBar r1 = r0.actionBar
            r6 = 2131624508(0x7f0e023c, float:1.8876198E38)
            java.lang.String r6 = org.telegram.messenger.LocaleController.getString(r11, r6)
            r1.setTitle(r6)
            goto L_0x0c3e
        L_0x0c0b:
            org.telegram.ui.ActionBar.ActionBar r1 = r0.actionBar
            r6 = 2131624502(0x7f0e0236, float:1.8876186E38)
            java.lang.String r6 = org.telegram.messenger.LocaleController.getString(r13, r6)
            r1.setTitle(r6)
            goto L_0x0c3e
        L_0x0CLASSNAME:
            org.telegram.ui.ActionBar.ActionBar r1 = r0.actionBar
            r6 = 2
            java.lang.Object[] r7 = new java.lang.Object[r6]
            int r6 = r0.switchingToIndex
            r11 = 1
            int r6 = r6 + r11
            java.lang.Integer r6 = java.lang.Integer.valueOf(r6)
            r13 = 0
            r7[r13] = r6
            java.util.ArrayList<java.lang.Object> r6 = r0.imagesArrLocals
            int r6 = r6.size()
            java.lang.Integer r6 = java.lang.Integer.valueOf(r6)
            r7[r11] = r6
            r6 = 2131627077(0x7f0e0CLASSNAME, float:1.8881408E38)
            java.lang.String r6 = org.telegram.messenger.LocaleController.formatString(r10, r6, r7)
            r1.setTitle(r6)
        L_0x0c3e:
            org.telegram.ui.ChatActivity r1 = r0.parentChatActivity
            if (r1 == 0) goto L_0x0CLASSNAME
            org.telegram.tgnet.TLRPC$Chat r1 = r1.getCurrentChat()
            if (r1 == 0) goto L_0x0CLASSNAME
            org.telegram.ui.ActionBar.ActionBar r6 = r0.actionBar
            java.lang.String r7 = r1.title
            r6.setTitle(r7)
            goto L_0x0CLASSNAME
        L_0x0CLASSNAME:
            org.telegram.ui.ChatActivity r6 = r0.parentChatActivity
            org.telegram.tgnet.TLRPC$User r6 = r6.getCurrentUser()
            if (r6 == 0) goto L_0x0CLASSNAME
            boolean r7 = r6.self
            if (r7 == 0) goto L_0x0c6b
            org.telegram.ui.ActionBar.ActionBar r7 = r0.actionBar
            r10 = 2131628077(0x7f0e102d, float:1.8883436E38)
            java.lang.String r11 = "SavedMessages"
            java.lang.String r10 = org.telegram.messenger.LocaleController.getString(r11, r10)
            r7.setTitle(r10)
            goto L_0x0CLASSNAME
        L_0x0c6b:
            org.telegram.ui.ActionBar.ActionBar r7 = r0.actionBar
            java.lang.String r10 = r6.first_name
            java.lang.String r11 = r6.last_name
            java.lang.String r10 = org.telegram.messenger.ContactsController.formatName(r10, r11)
            r7.setTitle(r10)
        L_0x0CLASSNAME:
            int r1 = r0.sendPhotoType
            if (r1 == 0) goto L_0x0c8e
            r6 = 4
            if (r1 == r6) goto L_0x0c8e
            r6 = 2
            if (r1 == r6) goto L_0x0CLASSNAME
            r6 = 5
            if (r1 != r6) goto L_0x0c9c
        L_0x0CLASSNAME:
            java.util.ArrayList<java.lang.Object> r1 = r0.imagesArrLocals
            int r1 = r1.size()
            r6 = 1
            if (r1 <= r6) goto L_0x0c9c
        L_0x0c8e:
            org.telegram.ui.Components.CheckBox r1 = r0.checkImageView
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r6 = r0.placeProvider
            int r7 = r0.switchingToIndex
            boolean r6 = r6.isPhotoChecked(r7)
            r7 = 0
            r1.setChecked(r6, r7)
        L_0x0c9c:
            r0.updateCaptionTextForCurrentPhoto(r3)
            android.graphics.PorterDuffColorFilter r1 = new android.graphics.PorterDuffColorFilter
            java.lang.String r6 = "dialogFloatingButton"
            int r6 = r0.getThemedColor(r6)
            android.graphics.PorterDuff$Mode r7 = android.graphics.PorterDuff.Mode.MULTIPLY
            r1.<init>(r6, r7)
            r13 = r1
            android.widget.ImageView r1 = r0.timeItem
            if (r5 == 0) goto L_0x0cb3
            r6 = r13
            goto L_0x0cb4
        L_0x0cb3:
            r6 = 0
        L_0x0cb4:
            r1.setColorFilter(r6)
            android.widget.ImageView r1 = r0.paintItem
            if (r9 == 0) goto L_0x0cbd
            r6 = r13
            goto L_0x0cbe
        L_0x0cbd:
            r6 = 0
        L_0x0cbe:
            r1.setColorFilter(r6)
            android.widget.ImageView r1 = r0.cropItem
            if (r12 == 0) goto L_0x0cc7
            r6 = r13
            goto L_0x0cc8
        L_0x0cc7:
            r6 = 0
        L_0x0cc8:
            r1.setColorFilter(r6)
            android.widget.ImageView r1 = r0.tuneItem
            if (r8 == 0) goto L_0x0cd1
            r6 = r13
            goto L_0x0cd2
        L_0x0cd1:
            r6 = 0
        L_0x0cd2:
            r1.setColorFilter(r6)
            boolean r1 = r0.fromCamera
            if (r1 == 0) goto L_0x0cf4
            android.widget.ImageView r1 = r0.mirrorItem
            if (r14 == 0) goto L_0x0cef
            boolean r6 = r0.isCurrentVideo
            if (r6 == 0) goto L_0x0ce5
            boolean r6 = r14.mirrored
            if (r6 == 0) goto L_0x0ced
        L_0x0ce5:
            boolean r6 = r0.isCurrentVideo
            if (r6 != 0) goto L_0x0cef
            boolean r6 = r14.mirrored
            if (r6 == 0) goto L_0x0cef
        L_0x0ced:
            r6 = r13
            goto L_0x0cf0
        L_0x0cef:
            r6 = 0
        L_0x0cf0:
            r1.setColorFilter(r6)
            goto L_0x0d02
        L_0x0cf4:
            android.widget.ImageView r1 = r0.mirrorItem
            if (r14 == 0) goto L_0x0cfe
            boolean r6 = r14.mirrored
            if (r6 == 0) goto L_0x0cfe
            r6 = r13
            goto L_0x0cff
        L_0x0cfe:
            r6 = 0
        L_0x0cff:
            r1.setColorFilter(r6)
        L_0x0d02:
            android.widget.ImageView r1 = r0.rotateItem
            if (r14 == 0) goto L_0x0d0c
            int r6 = r14.transformRotation
            if (r6 == 0) goto L_0x0d0c
            r6 = r13
            goto L_0x0d0d
        L_0x0d0c:
            r6 = 0
        L_0x0d0d:
            r1.setColorFilter(r6)
            r3 = r15
            r5 = r24
            r7 = r26
            goto L_0x0e5c
        L_0x0d17:
            r21 = r4
            r22 = r6
            r26 = r7
        L_0x0d1d:
            return
        L_0x0d1e:
            r21 = r4
            r22 = r6
            r26 = r7
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r1 = r0.pageBlocksAdapter
            if (r1 == 0) goto L_0x0e54
            int r1 = r1.getItemsCount()
            int r3 = r0.switchingToIndex
            if (r3 < 0) goto L_0x0e53
            if (r3 < r1) goto L_0x0d34
            goto L_0x0e53
        L_0x0d34:
            int r3 = r0.currentAccount
            org.telegram.messenger.MessagesController r3 = org.telegram.messenger.MessagesController.getInstance(r3)
            long r4 = r0.currentDialogId
            long r4 = -r4
            boolean r3 = r3.isChatNoForwards((long) r4)
            r4 = 1
            r3 = r3 ^ r4
            r0.allowShare = r3
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r3 = r0.pageBlocksAdapter
            int r4 = r0.switchingToIndex
            org.telegram.tgnet.TLRPC$PageBlock r3 = r3.get(r4)
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r4 = r0.pageBlocksAdapter
            int r5 = r0.switchingToIndex
            java.lang.CharSequence r5 = r4.getCaption(r5)
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r4 = r0.pageBlocksAdapter
            int r6 = r0.switchingToIndex
            boolean r4 = r4.isVideo(r6)
            if (r4 == 0) goto L_0x0d91
            boolean r6 = r0.allowShare
            if (r6 == 0) goto L_0x0d6b
            org.telegram.ui.ActionBar.ActionBarMenuItem r6 = r0.menuItem
            r7 = 11
            r6.showSubItem(r7)
            goto L_0x0d72
        L_0x0d6b:
            r7 = 11
            org.telegram.ui.ActionBar.ActionBarMenuItem r6 = r0.menuItem
            r6.hideSubItem(r7)
        L_0x0d72:
            org.telegram.ui.ActionBar.ActionBarMenuItem r6 = r0.menuItem
            r6.checkHideMenuItem()
            boolean r6 = r0.pipAvailable
            if (r6 != 0) goto L_0x0d8a
            org.telegram.ui.ActionBar.ActionBarMenuItem r6 = r0.pipItem
            r7 = 0
            r6.setEnabled(r7)
            org.telegram.ui.ActionBar.ActionBarMenuItem r6 = r0.pipItem
            r7 = 1056964608(0x3var_, float:0.5)
            r8 = 1
            r0.setItemVisible(r6, r8, r8, r7)
            goto L_0x0d9f
        L_0x0d8a:
            r8 = 1
            org.telegram.ui.ActionBar.ActionBarMenuItem r6 = r0.pipItem
            r0.setItemVisible(r6, r8, r8)
            goto L_0x0d9f
        L_0x0d91:
            r8 = 1
            org.telegram.ui.ActionBar.ActionBarMenuItem r6 = r0.menuItem
            r7 = 11
            r6.hideSubItem(r7)
            org.telegram.ui.ActionBar.ActionBarMenuItem r6 = r0.pipItem
            r7 = 0
            r0.setItemVisible(r6, r7, r8)
        L_0x0d9f:
            android.widget.FrameLayout r6 = r0.bottomLayout
            int r6 = r6.getVisibility()
            r7 = 8
            if (r6 == r7) goto L_0x0dae
            android.widget.FrameLayout r6 = r0.bottomLayout
            r6.setVisibility(r7)
        L_0x0dae:
            android.widget.FrameLayout r6 = r0.bottomLayout
            r8 = 0
            r6.setTag(r8)
            org.telegram.ui.ActionBar.ActionBarMenuItem r6 = r0.shareItem
            boolean r8 = r0.allowShare
            if (r8 == 0) goto L_0x0dbc
            r15 = 0
            goto L_0x0dbe
        L_0x0dbc:
            r15 = 8
        L_0x0dbe:
            r6.setVisibility(r15)
            org.telegram.ui.Components.AnimatedFileDrawable r6 = r0.currentAnimation
            if (r6 == 0) goto L_0x0df2
            org.telegram.ui.ActionBar.ActionBarMenuItem r6 = r0.menuItem
            r7 = 1
            r6.hideSubItem(r7)
            boolean r6 = r0.allowShare
            if (r6 == 0) goto L_0x0dd7
            org.telegram.ui.ActionBar.ActionBarMenuItem r6 = r0.menuItem
            r7 = 14
            r6.showSubItem(r7)
            goto L_0x0dde
        L_0x0dd7:
            r7 = 14
            org.telegram.ui.ActionBar.ActionBarMenuItem r6 = r0.menuItem
            r6.hideSubItem(r7)
        L_0x0dde:
            org.telegram.ui.ActionBar.ActionBarMenuItem r6 = r0.menuItem
            r6.checkHideMenuItem()
            org.telegram.ui.ActionBar.ActionBar r6 = r0.actionBar
            r7 = 2131624483(0x7f0e0223, float:1.8876147E38)
            java.lang.String r8 = "AttachGif"
            java.lang.String r7 = org.telegram.messenger.LocaleController.getString(r8, r7)
            r6.setTitle(r7)
            goto L_0x0e44
        L_0x0df2:
            r6 = 1
            if (r1 != r6) goto L_0x0e13
            if (r4 == 0) goto L_0x0e05
            org.telegram.ui.ActionBar.ActionBar r6 = r0.actionBar
            r7 = 2131624508(0x7f0e023c, float:1.8876198E38)
            java.lang.String r7 = org.telegram.messenger.LocaleController.getString(r11, r7)
            r6.setTitle(r7)
            r9 = 1
            goto L_0x0e33
        L_0x0e05:
            org.telegram.ui.ActionBar.ActionBar r6 = r0.actionBar
            r7 = 2131624502(0x7f0e0236, float:1.8876186E38)
            java.lang.String r7 = org.telegram.messenger.LocaleController.getString(r13, r7)
            r6.setTitle(r7)
            r9 = 1
            goto L_0x0e33
        L_0x0e13:
            org.telegram.ui.ActionBar.ActionBar r6 = r0.actionBar
            r7 = 2
            java.lang.Object[] r7 = new java.lang.Object[r7]
            int r8 = r0.switchingToIndex
            r9 = 1
            int r8 = r8 + r9
            java.lang.Integer r8 = java.lang.Integer.valueOf(r8)
            r11 = 0
            r7[r11] = r8
            java.lang.Integer r8 = java.lang.Integer.valueOf(r1)
            r7[r9] = r8
            r8 = 2131627077(0x7f0e0CLASSNAME, float:1.8881408E38)
            java.lang.String r7 = org.telegram.messenger.LocaleController.formatString(r10, r8, r7)
            r6.setTitle(r7)
        L_0x0e33:
            org.telegram.ui.ActionBar.ActionBarMenuItem r6 = r0.menuItem
            r6.showSubItem(r9)
            org.telegram.ui.ActionBar.ActionBarMenuItem r6 = r0.menuItem
            r7 = 14
            r6.hideSubItem(r7)
            org.telegram.ui.ActionBar.ActionBarMenuItem r6 = r0.menuItem
            r6.checkHideMenuItem()
        L_0x0e44:
            org.telegram.ui.Components.GroupedPhotosListView r6 = r0.groupedPhotosListView
            r6.fillList()
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r6 = r0.pageBlocksAdapter
            r6.updateSlideshowCell(r3)
            r3 = r23
            r7 = r26
            goto L_0x0e5c
        L_0x0e53:
            return
        L_0x0e54:
            r4 = r21
            r3 = r23
            r5 = r24
            r7 = r26
        L_0x0e5c:
            r0.setCurrentCaption(r7, r5, r3)
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.setIsAboutToSwitchToIndex(int, boolean, boolean):void");
    }

    private void showVideoTimeline(boolean show, boolean animated) {
        int i = null;
        int i2 = 0;
        if (!animated) {
            this.videoTimelineView.animate().setListener((Animator.AnimatorListener) null).cancel();
            VideoTimelinePlayView videoTimelinePlayView = this.videoTimelineView;
            if (!show) {
                i2 = 8;
            }
            videoTimelinePlayView.setVisibility(i2);
            this.videoTimelineView.setTranslationY(0.0f);
            this.videoTimelineView.setAlpha(this.pickerView.getAlpha());
        } else if (show && this.videoTimelineView.getTag() == null) {
            if (this.videoTimelineView.getVisibility() != 0) {
                this.videoTimelineView.setVisibility(0);
                this.videoTimelineView.setAlpha(this.pickerView.getAlpha());
                this.videoTimelineView.setTranslationY((float) AndroidUtilities.dp(58.0f));
            }
            ObjectAnimator objectAnimator = this.videoTimelineAnimator;
            if (objectAnimator != null) {
                objectAnimator.removeAllListeners();
                this.videoTimelineAnimator.cancel();
            }
            ObjectAnimator ofFloat = ObjectAnimator.ofFloat(this.videoTimelineView, View.TRANSLATION_Y, new float[]{this.videoTimelineView.getTranslationY(), 0.0f});
            this.videoTimelineAnimator = ofFloat;
            ofFloat.setDuration(220);
            this.videoTimelineAnimator.setInterpolator(CubicBezierInterpolator.DEFAULT);
            this.videoTimelineAnimator.start();
        } else if (!show && this.videoTimelineView.getTag() != null) {
            ObjectAnimator objectAnimator2 = this.videoTimelineAnimator;
            if (objectAnimator2 != null) {
                objectAnimator2.removeAllListeners();
                this.videoTimelineAnimator.cancel();
            }
            ObjectAnimator ofFloat2 = ObjectAnimator.ofFloat(this.videoTimelineView, View.TRANSLATION_Y, new float[]{this.videoTimelineView.getTranslationY(), (float) AndroidUtilities.dp(58.0f)});
            this.videoTimelineAnimator = ofFloat2;
            ofFloat2.addListener(new HideViewAfterAnimation(this.videoTimelineView));
            this.videoTimelineAnimator.setDuration(220);
            this.videoTimelineAnimator.setInterpolator(CubicBezierInterpolator.DEFAULT);
            this.videoTimelineAnimator.start();
        }
        VideoTimelinePlayView videoTimelinePlayView2 = this.videoTimelineView;
        if (show) {
            i = 1;
        }
        videoTimelinePlayView2.setTag(i);
    }

    public static TLRPC.FileLocation getFileLocation(ImageLocation location) {
        if (location == null) {
            return null;
        }
        return location.location;
    }

    public static String getFileLocationExt(ImageLocation location) {
        if (location == null || location.imageType != 2) {
            return null;
        }
        return "mp4";
    }

    /* access modifiers changed from: private */
    public void setImageIndex(int index) {
        setImageIndex(index, true, false);
    }

    private void setImageIndex(int index, boolean init, boolean animateCaption) {
        boolean sameImage;
        boolean z;
        boolean sameImage2;
        boolean sameImage3;
        boolean sameImage4;
        boolean isVideo;
        boolean isVideo2;
        boolean sameImage5;
        MessageObject messageObject;
        ImageReceiver.BitmapHolder bitmapHolder;
        int i = index;
        if (this.currentIndex != i && this.placeProvider != null) {
            if (!init && (bitmapHolder = this.currentThumb) != null) {
                bitmapHolder.release();
                this.currentThumb = null;
            }
            this.currentFileNames[0] = getFileName(index);
            this.currentFileNames[1] = getFileName(i + 1);
            this.currentFileNames[2] = getFileName(i - 1);
            this.placeProvider.willSwitchFromPhoto(this.currentMessageObject, getFileLocation(this.currentFileLocation), this.currentIndex);
            this.lastPhotoSetTime = SystemClock.elapsedRealtime();
            int prevIndex = this.currentIndex;
            this.currentIndex = i;
            setIsAboutToSwitchToIndex(index, init, animateCaption);
            boolean isVideo3 = false;
            Uri videoPath = null;
            CropTransform prevCropTransform = this.cropTransform.clone();
            EditState editState2 = this.editState;
            MediaController.CropState prevCropState = (editState2 == null || editState2.cropState == null) ? null : this.editState.cropState.clone();
            boolean prevIsVideo = this.centerImageIsVideo;
            this.editState.reset();
            if (!this.imagesArr.isEmpty()) {
                int i2 = this.currentIndex;
                if (i2 < 0 || i2 >= this.imagesArr.size()) {
                    closePhoto(false, false);
                    return;
                }
                MessageObject newMessageObject = this.imagesArr.get(this.currentIndex);
                sameImage = init && (messageObject = this.currentMessageObject) != null && messageObject.getId() == newMessageObject.getId();
                this.currentMessageObject = newMessageObject;
                isVideo3 = newMessageObject.isVideo();
                if (this.sharedMediaType == 1) {
                    boolean canPreviewDocument = newMessageObject.canPreviewDocument();
                    this.canZoom = canPreviewDocument;
                    if (canPreviewDocument) {
                        if (this.allowShare) {
                            this.menuItem.showSubItem(1);
                        } else {
                            this.menuItem.hideSubItem(1);
                        }
                        setDoubleTapEnabled(true);
                    } else {
                        this.menuItem.hideSubItem(1);
                        setDoubleTapEnabled(false);
                    }
                }
                if (isVideo3 || this.isEmbedVideo) {
                    this.speedItem.setVisibility(0);
                    this.speedGap.setVisibility(0);
                    this.menuItem.showSubItem(19);
                } else {
                    this.speedItem.setVisibility(8);
                    this.speedGap.setVisibility(8);
                    this.menuItem.checkHideMenuItem();
                }
            } else {
                if (!this.secureDocuments.isEmpty()) {
                    if (i < 0 || i >= this.secureDocuments.size()) {
                        closePhoto(false, false);
                        return;
                    } else {
                        this.currentSecureDocument = this.secureDocuments.get(i);
                        sameImage2 = false;
                    }
                } else if (!this.imagesArrLocations.isEmpty()) {
                    if (i >= 0) {
                        if (i < this.imagesArrLocations.size()) {
                            ImageLocation old = this.currentFileLocation;
                            ImageLocation newLocation = this.imagesArrLocations.get(i);
                            if (!init || old == null || newLocation == null || old.location.local_id != newLocation.location.local_id) {
                                sameImage5 = false;
                            } else {
                                sameImage5 = false;
                                if (old.location.volume_id == newLocation.location.volume_id) {
                                    sameImage = true;
                                    this.currentFileLocation = this.imagesArrLocations.get(i);
                                    this.currentFileLocationVideo = this.imagesArrLocationsVideo.get(i);
                                }
                            }
                            sameImage = sameImage5;
                            this.currentFileLocation = this.imagesArrLocations.get(i);
                            this.currentFileLocationVideo = this.imagesArrLocationsVideo.get(i);
                        }
                    }
                    closePhoto(false, false);
                    return;
                } else {
                    sameImage2 = false;
                    if (this.imagesArrLocals.isEmpty()) {
                        PageBlocksAdapter pageBlocksAdapter2 = this.pageBlocksAdapter;
                        if (pageBlocksAdapter2 != null) {
                            int i3 = this.currentIndex;
                            if (i3 < 0 || i3 >= pageBlocksAdapter2.getItemsCount()) {
                                closePhoto(false, false);
                                return;
                            }
                            TLRPC.PageBlock pageBlock = this.pageBlocksAdapter.get(this.currentIndex);
                            TLRPC.PageBlock pageBlock2 = this.currentPageBlock;
                            sameImage = pageBlock2 != null && pageBlock2 == pageBlock;
                            this.currentPageBlock = pageBlock;
                            isVideo3 = this.pageBlocksAdapter.isVideo(this.currentIndex);
                        }
                    } else if (i < 0 || i >= this.imagesArrLocals.size()) {
                        closePhoto(false, false);
                        return;
                    } else {
                        Object object = this.imagesArrLocals.get(i);
                        if (object instanceof TLRPC.BotInlineResult) {
                            TLRPC.BotInlineResult botInlineResult = (TLRPC.BotInlineResult) object;
                            this.currentBotInlineResult = botInlineResult;
                            if (botInlineResult.document != null) {
                                this.currentPathObject = FileLoader.getInstance(this.currentAccount).getPathToAttach(botInlineResult.document).getAbsolutePath();
                                isVideo3 = MessageObject.isVideoDocument(botInlineResult.document);
                            } else if (botInlineResult.photo != null) {
                                this.currentPathObject = FileLoader.getInstance(this.currentAccount).getPathToAttach(FileLoader.getClosestPhotoSizeWithSize(botInlineResult.photo.sizes, AndroidUtilities.getPhotoSize())).getAbsolutePath();
                            } else if (botInlineResult.content instanceof TLRPC.TL_webDocument) {
                                this.currentPathObject = botInlineResult.content.url;
                                isVideo3 = botInlineResult.type.equals("video");
                            }
                            sameImage3 = false;
                        } else {
                            if (object instanceof MediaController.PhotoEntry) {
                                MediaController.PhotoEntry entry = (MediaController.PhotoEntry) object;
                                String str = entry.path;
                                this.currentPathObject = str;
                                if (str == null) {
                                    closePhoto(false, false);
                                    return;
                                }
                                boolean isVideo4 = entry.isVideo;
                                this.editState.savedFilterState = entry.savedFilterState;
                                this.editState.paintPath = entry.paintPath;
                                this.editState.croppedPaintPath = entry.croppedPaintPath;
                                this.editState.croppedMediaEntities = entry.croppedMediaEntities;
                                this.editState.averageDuration = entry.averageDuration;
                                this.editState.mediaEntities = entry.mediaEntities;
                                this.editState.cropState = entry.cropState;
                                File file = new File(entry.path);
                                videoPath = Uri.fromFile(file);
                                if (this.isDocumentsPicker) {
                                    StringBuilder builder = new StringBuilder();
                                    if (!(entry.width == 0 || entry.height == 0)) {
                                        if (builder.length() > 0) {
                                            builder.append(", ");
                                        }
                                        builder.append(String.format(Locale.US, "%dx%d", new Object[]{Integer.valueOf(entry.width), Integer.valueOf(entry.height)}));
                                    }
                                    if (entry.isVideo) {
                                        if (builder.length() > 0) {
                                            builder.append(", ");
                                        }
                                        builder.append(AndroidUtilities.formatShortDuration(entry.duration));
                                    }
                                    isVideo2 = isVideo4;
                                    if (entry.size != 0) {
                                        if (builder.length() > 0) {
                                            builder.append(", ");
                                        }
                                        builder.append(AndroidUtilities.formatFileSize(entry.size));
                                    }
                                    this.docNameTextView.setText(file.getName());
                                    this.docInfoTextView.setText(builder);
                                } else {
                                    isVideo2 = isVideo4;
                                }
                                sameImage3 = this.savedState != null;
                                isVideo3 = isVideo2;
                            } else {
                                if (object instanceof MediaController.SearchImage) {
                                    MediaController.SearchImage searchImage = (MediaController.SearchImage) object;
                                    this.currentPathObject = searchImage.getPathToAttach();
                                    this.editState.savedFilterState = searchImage.savedFilterState;
                                    this.editState.paintPath = searchImage.paintPath;
                                    this.editState.croppedPaintPath = searchImage.croppedPaintPath;
                                    this.editState.croppedMediaEntities = searchImage.croppedMediaEntities;
                                    this.editState.averageDuration = searchImage.averageDuration;
                                    this.editState.mediaEntities = searchImage.mediaEntities;
                                    this.editState.cropState = searchImage.cropState;
                                }
                                sameImage3 = false;
                            }
                            if (object instanceof MediaController.MediaEditState) {
                                MediaController.MediaEditState state = (MediaController.MediaEditState) object;
                                if (hasAnimatedMediaEntities()) {
                                    this.currentImagePath = state.imagePath;
                                } else if (state.filterPath != null) {
                                    this.currentImagePath = state.filterPath;
                                } else {
                                    this.currentImagePath = this.currentPathObject;
                                }
                            }
                        }
                        if (this.editState.cropState != null) {
                            this.previousHasTransform = true;
                            this.previousCropPx = this.editState.cropState.cropPx;
                            this.previousCropPy = this.editState.cropState.cropPy;
                            this.previousCropScale = this.editState.cropState.cropScale;
                            this.previousCropRotation = this.editState.cropState.cropRotate;
                            this.previousCropOrientation = this.editState.cropState.transformRotation;
                            this.previousCropPw = this.editState.cropState.cropPw;
                            this.previousCropPh = this.editState.cropState.cropPh;
                            boolean z2 = this.editState.cropState.mirrored;
                            this.previousCropMirrored = z2;
                            Object obj = object;
                            isVideo = isVideo3;
                            sameImage4 = sameImage3;
                            this.cropTransform.setViewTransform(this.previousHasTransform, this.previousCropPx, this.previousCropPy, this.previousCropRotation, this.previousCropOrientation, this.previousCropScale, 1.0f, 1.0f, this.previousCropPw, this.previousCropPh, 0.0f, 0.0f, z2);
                        } else {
                            isVideo = isVideo3;
                            sameImage4 = sameImage3;
                            this.previousHasTransform = false;
                            this.cropTransform.setViewTransform(false, this.previousCropPx, this.previousCropPy, this.previousCropRotation, this.previousCropOrientation, this.previousCropScale, 1.0f, 1.0f, this.previousCropPw, this.previousCropPh, 0.0f, 0.0f, this.previousCropMirrored);
                        }
                        isVideo3 = isVideo;
                        sameImage = sameImage4;
                    }
                }
                sameImage = sameImage2;
            }
            setMenuItemIcon();
            PlaceProviderObject placeProviderObject = this.currentPlaceObject;
            if (placeProviderObject != null) {
                if (this.animationInProgress == 0) {
                    placeProviderObject.imageReceiver.setVisible(true, true);
                } else {
                    this.showAfterAnimation = placeProviderObject;
                }
            }
            PlaceProviderObject placeForPhoto = this.placeProvider.getPlaceForPhoto(this.currentMessageObject, getFileLocation(this.currentFileLocation), this.currentIndex, false);
            this.currentPlaceObject = placeForPhoto;
            if (placeForPhoto != null) {
                if (this.animationInProgress == 0) {
                    placeForPhoto.imageReceiver.setVisible(false, true);
                } else {
                    this.hideAfterAnimation = placeForPhoto;
                }
            }
            if (!sameImage) {
                this.draggingDown = false;
                this.translationX = 0.0f;
                this.translationY = 0.0f;
                this.scale = 1.0f;
                this.animateToX = 0.0f;
                this.animateToY = 0.0f;
                this.animateToScale = 1.0f;
                this.animateToRotate = 0.0f;
                this.animationStartTime = 0;
                this.zoomAnimation = false;
                this.imageMoveAnimation = null;
                this.changeModeAnimation = null;
                AspectRatioFrameLayout aspectRatioFrameLayout2 = this.aspectRatioFrameLayout;
                if (aspectRatioFrameLayout2 != null) {
                    aspectRatioFrameLayout2.setVisibility(4);
                }
                this.pinchStartDistance = 0.0f;
                this.pinchStartScale = 1.0f;
                this.pinchCenterX = 0.0f;
                this.pinchCenterY = 0.0f;
                this.pinchStartX = 0.0f;
                this.pinchStartY = 0.0f;
                this.moveStartX = 0.0f;
                this.moveStartY = 0.0f;
                this.zooming = false;
                this.moving = false;
                this.paintViewTouched = 0;
                this.doubleTap = false;
                this.invalidCoords = false;
                this.canDragDown = true;
                this.changingPage = false;
                this.switchImageAfterAnimation = 0;
                if (this.sharedMediaType != 1) {
                    this.canZoom = !this.isEmbedVideo && (!this.imagesArrLocals.isEmpty() || !(this.currentFileNames[0] == null || this.photoProgressViews[0].backgroundState == 0));
                }
                updateMinMax(this.scale);
                z = false;
                releasePlayer(false);
            } else {
                z = false;
            }
            if (isVideo3 && videoPath != null) {
                this.isStreaming = z;
                preparePlayer(videoPath, this.sendPhotoType == 1, z, this.editState.savedFilterState);
            }
            if (this.imagesArrLocals.isEmpty()) {
                this.editState.reset();
            }
            this.centerImageIsVideo = isVideo3;
            if (prevIndex == -1) {
                setImages();
                for (int a = 0; a < 3; a++) {
                    checkProgress(a, false, false);
                }
            } else {
                checkProgress(0, true, false);
                int i4 = this.currentIndex;
                if (prevIndex > i4) {
                    ImageReceiver temp = this.rightImage;
                    this.rightImage = this.centerImage;
                    this.centerImage = this.leftImage;
                    this.leftImage = temp;
                    this.rightImageIsVideo = prevIsVideo;
                    this.rightCropTransform = prevCropTransform;
                    this.rightCropState = prevCropState;
                    PhotoProgressView[] photoProgressViewArr = this.photoProgressViews;
                    PhotoProgressView tempProgress = photoProgressViewArr[0];
                    photoProgressViewArr[0] = photoProgressViewArr[2];
                    photoProgressViewArr[2] = tempProgress;
                    ImageView[] imageViewArr = this.fullscreenButton;
                    ImageView tmp = imageViewArr[0];
                    imageViewArr[0] = imageViewArr[2];
                    imageViewArr[2] = tmp;
                    imageViewArr[0].setTranslationY(tmp.getTranslationY());
                    this.leftCropState = null;
                    setIndexToPaintingOverlay(this.currentIndex - 1, this.leftPaintingOverlay);
                    setIndexToPaintingOverlay(this.currentIndex, this.paintingOverlay);
                    setIndexToPaintingOverlay(this.currentIndex + 1, this.rightPaintingOverlay);
                    setIndexToImage(this.leftImage, this.currentIndex - 1, this.leftCropTransform);
                    updateAccessibilityOverlayVisibility();
                    checkProgress(1, true, false);
                    checkProgress(2, true, false);
                } else if (prevIndex < i4) {
                    ImageReceiver temp2 = this.leftImage;
                    this.leftImage = this.centerImage;
                    this.centerImage = this.rightImage;
                    this.rightImage = temp2;
                    this.leftImageIsVideo = prevIsVideo;
                    this.leftCropTransform = prevCropTransform;
                    this.leftCropState = prevCropState;
                    PhotoProgressView[] photoProgressViewArr2 = this.photoProgressViews;
                    PhotoProgressView tempProgress2 = photoProgressViewArr2[0];
                    photoProgressViewArr2[0] = photoProgressViewArr2[1];
                    photoProgressViewArr2[1] = tempProgress2;
                    ImageView[] imageViewArr2 = this.fullscreenButton;
                    ImageView tmp2 = imageViewArr2[0];
                    imageViewArr2[0] = imageViewArr2[1];
                    imageViewArr2[1] = tmp2;
                    imageViewArr2[0].setTranslationY(tmp2.getTranslationY());
                    this.rightCropState = null;
                    setIndexToPaintingOverlay(this.currentIndex - 1, this.leftPaintingOverlay);
                    setIndexToPaintingOverlay(this.currentIndex, this.paintingOverlay);
                    setIndexToPaintingOverlay(this.currentIndex + 1, this.rightPaintingOverlay);
                    setIndexToImage(this.rightImage, this.currentIndex + 1, this.rightCropTransform);
                    updateAccessibilityOverlayVisibility();
                    checkProgress(1, true, false);
                    checkProgress(2, true, false);
                }
                Bitmap bitmap = this.videoFrameBitmap;
                if (bitmap != null) {
                    bitmap.recycle();
                    this.videoFrameBitmap = null;
                }
            }
            detectFaces();
        }
    }

    private void setCurrentCaption(MessageObject messageObject, CharSequence caption, boolean animated) {
        CharSequence str;
        int newCount;
        MessageObject messageObject2 = messageObject;
        CharSequence charSequence = caption;
        boolean z = animated;
        boolean z2 = true;
        int i = 0;
        if (!this.needCaptionLayout) {
            if (this.captionScrollView == null) {
                this.captionScrollView = new CaptionScrollView(this.containerView.getContext());
                FrameLayout frameLayout = new FrameLayout(this.containerView.getContext());
                this.captionContainer = frameLayout;
                frameLayout.setClipChildren(false);
                this.captionScrollView.addView((View) this.captionContainer, new ViewGroup.LayoutParams(-1, -2));
                this.containerView.addView(this.captionScrollView, LayoutHelper.createFrame(-1, -1, 80));
            }
            if (this.captionTextViewSwitcher.getParent() != this.captionContainer) {
                this.pickerView.removeView(this.captionTextViewSwitcher);
                this.captionTextViewSwitcher.setMeasureAllChildren(true);
                this.captionContainer.addView(this.captionTextViewSwitcher, -1, -2);
                this.videoPreviewFrame.bringToFront();
            }
        } else if (this.captionTextViewSwitcher.getParent() != this.pickerView) {
            FrameLayout frameLayout2 = this.captionContainer;
            if (frameLayout2 != null) {
                frameLayout2.removeView(this.captionTextViewSwitcher);
            }
            this.captionTextViewSwitcher.setMeasureAllChildren(false);
            this.pickerView.addView(this.captionTextViewSwitcher, LayoutHelper.createFrame(-1, -2.0f, 83, 0.0f, 0.0f, 76.0f, 48.0f));
        }
        final boolean isCaptionEmpty = TextUtils.isEmpty(caption);
        final boolean isCurrentCaptionEmpty = TextUtils.isEmpty(this.captionTextViewSwitcher.getCurrentView().getText());
        CaptionTextViewSwitcher captionTextViewSwitcher2 = this.captionTextViewSwitcher;
        TextView captionTextView = z ? captionTextViewSwitcher2.getNextView() : captionTextViewSwitcher2.getCurrentView();
        if (!this.isCurrentVideo) {
            int maxLines = captionTextView.getMaxLines();
            if (maxLines == 1) {
                this.captionTextViewSwitcher.getCurrentView().setSingleLine(false);
                this.captionTextViewSwitcher.getNextView().setSingleLine(false);
            }
            if (this.needCaptionLayout) {
                newCount = AndroidUtilities.displaySize.x > AndroidUtilities.displaySize.y ? 5 : 10;
            } else {
                newCount = Integer.MAX_VALUE;
            }
            if (maxLines != newCount) {
                this.captionTextViewSwitcher.getCurrentView().setMaxLines(newCount);
                this.captionTextViewSwitcher.getNextView().setMaxLines(newCount);
                this.captionTextViewSwitcher.getCurrentView().setEllipsize((TextUtils.TruncateAt) null);
                this.captionTextViewSwitcher.getNextView().setEllipsize((TextUtils.TruncateAt) null);
            }
        } else if (captionTextView.getMaxLines() != 1) {
            this.captionTextViewSwitcher.getCurrentView().setMaxLines(1);
            this.captionTextViewSwitcher.getNextView().setMaxLines(1);
            this.captionTextViewSwitcher.getCurrentView().setSingleLine(true);
            this.captionTextViewSwitcher.getNextView().setSingleLine(true);
            this.captionTextViewSwitcher.getCurrentView().setEllipsize(TextUtils.TruncateAt.END);
            this.captionTextViewSwitcher.getNextView().setEllipsize(TextUtils.TruncateAt.END);
        }
        captionTextView.setScrollX(0);
        boolean z3 = this.needCaptionLayout;
        this.dontChangeCaptionPosition = !z3 && z && isCaptionEmpty;
        boolean withTransition = false;
        if (!z3) {
            boolean unused = this.captionScrollView.dontChangeTopMargin = false;
        }
        if (!z || Build.VERSION.SDK_INT < 19) {
            this.captionTextViewSwitcher.getCurrentView().setText((CharSequence) null);
            CaptionScrollView captionScrollView2 = this.captionScrollView;
            if (captionScrollView2 != null) {
                captionScrollView2.scrollTo(0, 0);
            }
        } else {
            withTransition = true;
            if (Build.VERSION.SDK_INT >= 23) {
                TransitionManager.endTransitions(this.needCaptionLayout ? this.pickerView : this.captionScrollView);
            }
            if (this.needCaptionLayout) {
                TransitionSet transitionSet = new TransitionSet();
                transitionSet.setOrdering(0);
                transitionSet.addTransition(new ChangeBounds());
                transitionSet.addTransition(new Fade(2));
                transitionSet.addTransition(new Fade(1));
                transitionSet.setDuration(200);
                TransitionManager.beginDelayedTransition(this.pickerView, transitionSet);
            } else {
                TransitionSet transition = new TransitionSet().addTransition(new Fade(2) {
                    public Animator onDisappear(ViewGroup sceneRoot, View view, TransitionValues startValues, TransitionValues endValues) {
                        Animator animator = super.onDisappear(sceneRoot, view, startValues, endValues);
                        if (!isCurrentCaptionEmpty && isCaptionEmpty && view == PhotoViewer.this.captionTextViewSwitcher) {
                            animator.addListener(new AnimatorListenerAdapter() {
                                public void onAnimationEnd(Animator animation) {
                                    PhotoViewer.this.captionScrollView.setVisibility(4);
                                    float unused = PhotoViewer.this.captionScrollView.backgroundAlpha = 1.0f;
                                }
                            });
                            ((ObjectAnimator) animator).addUpdateListener(new PhotoViewer$66$$ExternalSyntheticLambda0(this));
                        }
                        return animator;
                    }

                    /* renamed from: lambda$onDisappear$0$org-telegram-ui-PhotoViewer$66  reason: not valid java name */
                    public /* synthetic */ void m4324lambda$onDisappear$0$orgtelegramuiPhotoViewer$66(ValueAnimator animation) {
                        float unused = PhotoViewer.this.captionScrollView.backgroundAlpha = ((Float) animation.getAnimatedValue()).floatValue();
                        PhotoViewer.this.captionScrollView.invalidate();
                    }
                }).addTransition(new Fade(1) {
                    public Animator onAppear(ViewGroup sceneRoot, View view, TransitionValues startValues, TransitionValues endValues) {
                        Animator animator = super.onAppear(sceneRoot, view, startValues, endValues);
                        if (isCurrentCaptionEmpty && !isCaptionEmpty && view == PhotoViewer.this.captionTextViewSwitcher) {
                            animator.addListener(new AnimatorListenerAdapter() {
                                public void onAnimationEnd(Animator animation) {
                                    float unused = PhotoViewer.this.captionScrollView.backgroundAlpha = 1.0f;
                                }
                            });
                            ((ObjectAnimator) animator).addUpdateListener(new PhotoViewer$65$$ExternalSyntheticLambda0(this));
                        }
                        return animator;
                    }

                    /* renamed from: lambda$onAppear$0$org-telegram-ui-PhotoViewer$65  reason: not valid java name */
                    public /* synthetic */ void m4323lambda$onAppear$0$orgtelegramuiPhotoViewer$65(ValueAnimator animation) {
                        float unused = PhotoViewer.this.captionScrollView.backgroundAlpha = ((Float) animation.getAnimatedValue()).floatValue();
                        PhotoViewer.this.captionScrollView.invalidate();
                    }
                }).setDuration(200);
                if (!isCurrentCaptionEmpty) {
                    boolean unused2 = this.captionScrollView.dontChangeTopMargin = true;
                    transition.addTransition(new Transition() {
                        public void captureStartValues(TransitionValues transitionValues) {
                            if (transitionValues.view == PhotoViewer.this.captionScrollView) {
                                transitionValues.values.put("scrollY", Integer.valueOf(PhotoViewer.this.captionScrollView.getScrollY()));
                            }
                        }

                        public void captureEndValues(TransitionValues transitionValues) {
                            if (transitionValues.view == PhotoViewer.this.captionTextViewSwitcher) {
                                transitionValues.values.put("translationY", Integer.valueOf(PhotoViewer.this.captionScrollView.getPendingMarginTopDiff()));
                            }
                        }

                        public Animator createAnimator(ViewGroup sceneRoot, TransitionValues startValues, TransitionValues endValues) {
                            int endValue;
                            if (startValues.view == PhotoViewer.this.captionScrollView) {
                                ValueAnimator animator = ValueAnimator.ofInt(new int[]{((Integer) startValues.values.get("scrollY")).intValue(), 0});
                                animator.addListener(new AnimatorListenerAdapter() {
                                    public void onAnimationEnd(Animator animation) {
                                        PhotoViewer.this.captionTextViewSwitcher.getNextView().setText((CharSequence) null);
                                        PhotoViewer.this.captionScrollView.applyPendingTopMargin();
                                    }

                                    public void onAnimationStart(Animator animation) {
                                        PhotoViewer.this.captionScrollView.stopScrolling();
                                    }
                                });
                                animator.addUpdateListener(new PhotoViewer$67$$ExternalSyntheticLambda0(this));
                                return animator;
                            } else if (endValues.view != PhotoViewer.this.captionTextViewSwitcher || (endValue = ((Integer) endValues.values.get("translationY")).intValue()) == 0) {
                                return null;
                            } else {
                                ObjectAnimator animator2 = ObjectAnimator.ofFloat(PhotoViewer.this.captionTextViewSwitcher, View.TRANSLATION_Y, new float[]{0.0f, (float) endValue});
                                animator2.addListener(new AnimatorListenerAdapter() {
                                    public void onAnimationEnd(Animator animation) {
                                        PhotoViewer.this.captionTextViewSwitcher.setTranslationY(0.0f);
                                    }
                                });
                                return animator2;
                            }
                        }

                        /* renamed from: lambda$createAnimator$0$org-telegram-ui-PhotoViewer$67  reason: not valid java name */
                        public /* synthetic */ void m4325lambda$createAnimator$0$orgtelegramuiPhotoViewer$67(ValueAnimator a) {
                            PhotoViewer.this.captionScrollView.scrollTo(0, ((Integer) a.getAnimatedValue()).intValue());
                        }
                    });
                }
                if (isCurrentCaptionEmpty && !isCaptionEmpty) {
                    transition.addTarget(this.captionTextViewSwitcher);
                }
                TransitionManager.beginDelayedTransition(this.captionScrollView, transition);
            }
        }
        if (!isCaptionEmpty) {
            Theme.createChatResources((Context) null, true);
            if (messageObject2 == null || messageObject2.messageOwner.entities.isEmpty()) {
                str = Emoji.replaceEmoji(new SpannableStringBuilder(charSequence), captionTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(20.0f), false);
            } else {
                SpannableString spannableString = new SpannableString(charSequence);
                messageObject2.addEntitiesToText(spannableString, true, false);
                if (messageObject.isVideo()) {
                    MessageObject.addUrlsByPattern(messageObject.isOutOwner(), spannableString, false, 3, messageObject.getDuration(), false);
                }
                str = Emoji.replaceEmoji(spannableString, captionTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(20.0f), false);
            }
            this.captionTextViewSwitcher.setTag(str);
            try {
                this.captionTextViewSwitcher.setText(str, z);
                CaptionScrollView captionScrollView3 = this.captionScrollView;
                if (captionScrollView3 != null) {
                    captionScrollView3.updateTopMargin();
                }
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
            captionTextView.setScrollY(0);
            captionTextView.setTextColor(-1);
            if (!this.isActionBarVisible || !(this.bottomLayout.getVisibility() == 0 || this.pickerView.getVisibility() == 0 || this.pageBlocksAdapter != null)) {
                z2 = false;
            }
            boolean visible = z2;
            CaptionTextViewSwitcher captionTextViewSwitcher3 = this.captionTextViewSwitcher;
            if (!visible) {
                i = 4;
            }
            captionTextViewSwitcher3.setVisibility(i);
        } else if (this.needCaptionLayout) {
            this.captionTextViewSwitcher.setText(LocaleController.getString("AddCaption", NUM), z);
            this.captionTextViewSwitcher.getCurrentView().setTextColor(-NUM);
            this.captionTextViewSwitcher.setTag("empty");
            this.captionTextViewSwitcher.setVisibility(0);
        } else {
            this.captionTextViewSwitcher.setText((CharSequence) null, z);
            this.captionTextViewSwitcher.getCurrentView().setTextColor(-1);
            CaptionTextViewSwitcher captionTextViewSwitcher4 = this.captionTextViewSwitcher;
            if (withTransition && !isCurrentCaptionEmpty) {
                z2 = false;
            }
            captionTextViewSwitcher4.setVisibility(4, z2);
            this.captionTextViewSwitcher.setTag((Object) null);
        }
    }

    /* access modifiers changed from: private */
    public void setCaptionHwLayerEnabled(boolean enabled) {
        if (this.captionHwLayerEnabled != enabled) {
            this.captionHwLayerEnabled = enabled;
            this.captionTextViewSwitcher.setLayerType(2, (Paint) null);
            this.captionTextViewSwitcher.getCurrentView().setLayerType(2, (Paint) null);
            this.captionTextViewSwitcher.getNextView().setLayerType(2, (Paint) null);
        }
    }

    /* access modifiers changed from: private */
    public void checkProgress(int a, boolean scroll, boolean animated) {
        int index;
        boolean fileExist;
        MessageObject messageObject;
        boolean canAutoPlay;
        boolean canStream;
        boolean isVideo;
        FileLoader.FileResolver f2Resolver;
        File f1;
        File f2;
        boolean z;
        FileLoader.FileResolver f2Resolver2;
        AnimatedFileDrawable animatedFileDrawable;
        int i = a;
        boolean z2 = animated;
        int index2 = this.currentIndex;
        if (i == 1) {
            index = index2 + 1;
        } else if (i == 2) {
            index = index2 - 1;
        } else {
            index = index2;
        }
        if (this.currentFileNames[i] != null) {
            File var_ = null;
            boolean isVideo2 = false;
            if (i == 0 && this.currentIndex == 0 && (animatedFileDrawable = this.currentAnimation) != null) {
                fileExist = animatedFileDrawable.hasBitmap();
            } else {
                fileExist = false;
            }
            if (this.currentMessageObject != null) {
                if (index < 0 || index >= this.imagesArr.size()) {
                    this.photoProgressViews[i].setBackgroundState(-1, z2, true);
                    return;
                }
                MessageObject messageObject2 = this.imagesArr.get(index);
                boolean canAutoPlay2 = shouldMessageObjectAutoPlayed(messageObject2);
                if (this.sharedMediaType != 1 || messageObject2.canPreviewDocument()) {
                    if (!TextUtils.isEmpty(messageObject2.messageOwner.attachPath)) {
                        var_ = new File(messageObject2.messageOwner.attachPath);
                    }
                    if (!(messageObject2.messageOwner.media instanceof TLRPC.TL_messageMediaWebPage) || messageObject2.messageOwner.media.webpage == null || messageObject2.messageOwner.media.webpage.document != null) {
                        f2Resolver2 = new PhotoViewer$$ExternalSyntheticLambda68(this, messageObject2.messageOwner);
                    } else {
                        f2Resolver2 = new PhotoViewer$$ExternalSyntheticLambda67(this, getFileLocation(index, (long[]) null));
                    }
                    if (messageObject2.isVideo()) {
                        f1 = var_;
                        f2 = null;
                        f2Resolver = f2Resolver2;
                        isVideo = true;
                        canStream = SharedConfig.streamMedia && messageObject2.canStreamVideo() && !DialogObject.isEncryptedDialog(messageObject2.getDialogId());
                        canAutoPlay = canAutoPlay2;
                        messageObject = messageObject2;
                    } else {
                        f1 = var_;
                        f2 = null;
                        f2Resolver = f2Resolver2;
                        isVideo = false;
                        canStream = false;
                        canAutoPlay = canAutoPlay2;
                        messageObject = messageObject2;
                    }
                } else {
                    this.photoProgressViews[i].setBackgroundState(-1, z2, true);
                    return;
                }
            } else if (this.currentBotInlineResult != null) {
                if (index >= 0) {
                    if (index < this.imagesArrLocals.size()) {
                        TLRPC.BotInlineResult botInlineResult = (TLRPC.BotInlineResult) this.imagesArrLocals.get(index);
                        if (botInlineResult.type.equals("video") || MessageObject.isVideoDocument(botInlineResult.document)) {
                            if (botInlineResult.document != null) {
                                var_ = FileLoader.getInstance(this.currentAccount).getPathToAttach(botInlineResult.document);
                            } else if (botInlineResult.content instanceof TLRPC.TL_webDocument) {
                                var_ = new File(FileLoader.getDirectory(4), Utilities.MD5(botInlineResult.content.url) + "." + ImageLoader.getHttpUrlExtension(botInlineResult.content.url, "mp4"));
                            }
                            isVideo2 = true;
                        } else if (botInlineResult.document != null) {
                            var_ = new File(FileLoader.getDirectory(3), this.currentFileNames[i]);
                        } else if (botInlineResult.photo != null) {
                            var_ = new File(FileLoader.getDirectory(0), this.currentFileNames[i]);
                        }
                        f1 = var_;
                        f2 = new File(FileLoader.getDirectory(4), this.currentFileNames[i]);
                        f2Resolver = null;
                        isVideo = isVideo2;
                        canStream = false;
                        canAutoPlay = false;
                        messageObject = null;
                    }
                }
                this.photoProgressViews[i].setBackgroundState(-1, z2, true);
                return;
            } else {
                f1 = null;
                if (this.currentFileLocation != null) {
                    if (index >= 0) {
                        if (index < this.imagesArrLocationsVideo.size()) {
                            ImageLocation location = this.imagesArrLocationsVideo.get(index);
                            f1 = FileLoader.getInstance(this.currentAccount).getPathToAttach(location.location, getFileLocationExt(location), this.avatarsDialogId != 0 || this.isEvent);
                            f2Resolver = null;
                            isVideo = false;
                            canStream = false;
                            canAutoPlay = false;
                            messageObject = null;
                            f2 = null;
                        }
                    }
                    this.photoProgressViews[i].setBackgroundState(-1, z2, true);
                    return;
                } else if (this.currentSecureDocument != null) {
                    if (index < 0) {
                        z = true;
                    } else if (index >= this.secureDocuments.size()) {
                        z = true;
                    } else {
                        f1 = FileLoader.getInstance(this.currentAccount).getPathToAttach(this.secureDocuments.get(index), true);
                        f2Resolver = null;
                        isVideo = false;
                        canStream = false;
                        canAutoPlay = false;
                        messageObject = null;
                        f2 = null;
                    }
                    this.photoProgressViews[i].setBackgroundState(-1, z2, z);
                    return;
                } else if (this.currentPathObject != null) {
                    f1 = new File(FileLoader.getDirectory(3), this.currentFileNames[i]);
                    f2 = new File(FileLoader.getDirectory(4), this.currentFileNames[i]);
                    f2Resolver = null;
                    isVideo = false;
                    canStream = false;
                    canAutoPlay = false;
                    messageObject = null;
                } else {
                    PageBlocksAdapter pageBlocksAdapter2 = this.pageBlocksAdapter;
                    if (pageBlocksAdapter2 != null) {
                        f1 = pageBlocksAdapter2.getFile(index);
                        f2Resolver = null;
                        isVideo = this.pageBlocksAdapter.isVideo(index);
                        canStream = false;
                        canAutoPlay = shouldIndexAutoPlayed(index);
                        messageObject = null;
                        f2 = null;
                    } else {
                        f2Resolver = null;
                        isVideo = false;
                        canStream = false;
                        canAutoPlay = false;
                        messageObject = null;
                        f2 = null;
                    }
                }
            }
            File f1Final = f1;
            File f2Final = f2;
            FileLoader.FileResolver finalF2Resolver = f2Resolver;
            MessageObject messageObjectFinal = messageObject;
            boolean canStreamFinal = canStream;
            boolean canAutoPlayFinal = (i != 0 || !this.dontAutoPlay) && canAutoPlay;
            PhotoViewer$$ExternalSyntheticLambda64 photoViewer$$ExternalSyntheticLambda64 = r0;
            DispatchQueue dispatchQueue = Utilities.globalQueue;
            PhotoViewer$$ExternalSyntheticLambda64 photoViewer$$ExternalSyntheticLambda642 = new PhotoViewer$$ExternalSyntheticLambda64(this, fileExist, f1Final, f2Final, finalF2Resolver, a, messageObjectFinal, canStreamFinal, isVideo, canAutoPlayFinal, animated);
            dispatchQueue.postRunnable(photoViewer$$ExternalSyntheticLambda64);
            boolean z3 = animated;
            return;
        }
        boolean isLocalVideo = false;
        if (!this.imagesArrLocals.isEmpty() && index >= 0 && index < this.imagesArrLocals.size()) {
            Object object = this.imagesArrLocals.get(index);
            if (object instanceof MediaController.PhotoEntry) {
                isLocalVideo = ((MediaController.PhotoEntry) object).isVideo;
            }
        }
        if (isLocalVideo) {
            this.photoProgressViews[a].setBackgroundState(3, animated, true);
        } else {
            this.photoProgressViews[a].setBackgroundState(-1, animated, true);
        }
    }

    /* renamed from: lambda$checkProgress$67$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ File m4232lambda$checkProgress$67$orgtelegramuiPhotoViewer(TLObject fileLocation) {
        return FileLoader.getInstance(this.currentAccount).getPathToAttach(fileLocation, true);
    }

    /* renamed from: lambda$checkProgress$68$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ File m4233lambda$checkProgress$68$orgtelegramuiPhotoViewer(TLRPC.Message finalMessage) {
        return FileLoader.getInstance(this.currentAccount).getPathToMessage(finalMessage);
    }

    /* renamed from: lambda$checkProgress$70$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4235lambda$checkProgress$70$orgtelegramuiPhotoViewer(boolean finalFileExist, File f1Final, File f2Final, FileLoader.FileResolver finalF2Resolver, int a, MessageObject messageObjectFinal, boolean canStreamFinal, boolean isVideoFinal, boolean canAutoPlayFinal, boolean animated) {
        File f3Local;
        File f2Local;
        boolean exists;
        ChatActivity chatActivity;
        TLRPC.Document document;
        MessageObject messageObject = messageObjectFinal;
        boolean exists2 = finalFileExist;
        if (!exists2 && f1Final != null) {
            exists2 = f1Final.exists();
        }
        File f2Local2 = f2Final;
        if (f2Local2 == null && finalF2Resolver != null) {
            f2Local = finalF2Resolver.getFile();
            f3Local = null;
        } else if (finalF2Resolver != null) {
            f2Local = f2Local2;
            f3Local = finalF2Resolver.getFile();
        } else {
            f2Local = f2Local2;
            f3Local = null;
        }
        if (!exists2 && f2Local != null) {
            exists2 = f2Local.exists();
        }
        if (exists2 || f3Local == null) {
            exists = exists2;
        } else {
            exists = f3Local.exists();
        }
        if (!exists && a != 0 && messageObject != null && canStreamFinal && DownloadController.getInstance(this.currentAccount).canDownloadMedia(messageObject.messageOwner) != 0 && (((chatActivity = this.parentChatActivity) == null || chatActivity.getCurrentEncryptedChat() == null) && !messageObjectFinal.shouldEncryptPhotoOrVideo() && (document = messageObjectFinal.getDocument()) != null)) {
            FileLoader.getInstance(this.currentAccount).loadFile(document, messageObject, 0, 10);
        }
        AndroidUtilities.runOnUIThread(new PhotoViewer$$ExternalSyntheticLambda53(this, a, f1Final, f2Local, exists, canStreamFinal, isVideoFinal, canAutoPlayFinal, animated));
    }

    /* renamed from: lambda$checkProgress$69$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4234lambda$checkProgress$69$orgtelegramuiPhotoViewer(int a, File f1Final, File finalF2Local, boolean existsFinal, boolean canStreamFinal, boolean isVideoFinal, boolean canAutoPlayFinal, boolean animated) {
        boolean z = false;
        if (!this.shownControlsByEnd || this.actionBarWasShownBeforeByEnd || !this.isPlaying) {
            if (!(f1Final == null && finalF2Local == null) && (existsFinal || canStreamFinal)) {
                if (a != 0 || !this.isPlaying) {
                    if (!isVideoFinal || (canAutoPlayFinal && (a != 0 || !this.playerWasPlaying))) {
                        this.photoProgressViews[a].setBackgroundState(-1, animated, true);
                    } else {
                        this.photoProgressViews[a].setBackgroundState(3, animated, true);
                    }
                }
                if (a == 0) {
                    if (existsFinal) {
                        this.menuItem.hideSubItem(7);
                    } else if (!FileLoader.getInstance(this.currentAccount).isLoadingFile(this.currentFileNames[a])) {
                        this.menuItem.hideSubItem(7);
                    } else {
                        this.menuItem.showSubItem(7);
                    }
                }
            } else {
                if (!isVideoFinal) {
                    this.photoProgressViews[a].setBackgroundState(0, animated, true);
                } else if (!FileLoader.getInstance(this.currentAccount).isLoadingFile(this.currentFileNames[a])) {
                    this.photoProgressViews[a].setBackgroundState(2, false, true);
                } else {
                    this.photoProgressViews[a].setBackgroundState(1, false, true);
                }
                Float progress = ImageLoader.getInstance().getFileProgress(this.currentFileNames[a]);
                if (progress == null) {
                    progress = Float.valueOf(0.0f);
                }
                this.photoProgressViews[a].setProgress(progress.floatValue(), false);
            }
            if (a == 0) {
                if (!this.isEmbedVideo && (!this.imagesArrLocals.isEmpty() || !(this.currentFileNames[0] == null || this.photoProgressViews[0].backgroundState == 0))) {
                    z = true;
                }
                this.canZoom = z;
                return;
            }
            return;
        }
        this.photoProgressViews[a].setBackgroundState(3, false, false);
    }

    public int getSelectiongLength() {
        PhotoViewerCaptionEnterView photoViewerCaptionEnterView = this.captionEditText;
        if (photoViewerCaptionEnterView != null) {
            return photoViewerCaptionEnterView.getSelectionLength();
        }
        return 0;
    }

    private void setIndexToPaintingOverlay(int index, PaintingOverlay paintingOverlay2) {
        if (paintingOverlay2 != null) {
            paintingOverlay2.reset();
            paintingOverlay2.setVisibility(8);
            if (!this.imagesArrLocals.isEmpty() && index >= 0 && index < this.imagesArrLocals.size()) {
                Object object = this.imagesArrLocals.get(index);
                boolean isVideo = false;
                String paintPath = null;
                ArrayList<VideoEditedInfo.MediaEntity> mediaEntities = null;
                if (object instanceof MediaController.PhotoEntry) {
                    MediaController.PhotoEntry photoEntry = (MediaController.PhotoEntry) object;
                    isVideo = photoEntry.isVideo;
                    paintPath = photoEntry.paintPath;
                    mediaEntities = photoEntry.mediaEntities;
                } else if (object instanceof MediaController.SearchImage) {
                    MediaController.SearchImage photoEntry2 = (MediaController.SearchImage) object;
                    paintPath = photoEntry2.paintPath;
                    mediaEntities = photoEntry2.mediaEntities;
                }
                paintingOverlay2.setVisibility(0);
                paintingOverlay2.setData(paintPath, mediaEntities, isVideo, false);
            }
        }
    }

    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v0, resolved type: org.telegram.tgnet.TLObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v1, resolved type: org.telegram.tgnet.TLObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v6, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v2, resolved type: org.telegram.tgnet.TLObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v3, resolved type: org.telegram.tgnet.TLObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v4, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r21v5, resolved type: org.telegram.messenger.MessageObject} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v11, resolved type: org.telegram.tgnet.TLRPC$Photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v8, resolved type: org.telegram.tgnet.TLRPC$Photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v23, resolved type: org.telegram.tgnet.TLRPC$Photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v43, resolved type: android.graphics.drawable.BitmapDrawable} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v44, resolved type: android.graphics.drawable.BitmapDrawable} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r4v46, resolved type: android.graphics.drawable.BitmapDrawable} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r11v32, resolved type: org.telegram.tgnet.TLRPC$Document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r40v3, resolved type: org.telegram.tgnet.TLRPC$Document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v13, resolved type: org.telegram.tgnet.TLRPC$Photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v32, resolved type: org.telegram.tgnet.TLRPC$Document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v14, resolved type: org.telegram.tgnet.TLRPC$Photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v15, resolved type: org.telegram.tgnet.TLRPC$Photo} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v16, resolved type: org.telegram.tgnet.TLRPC$Document} */
    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r17v17, resolved type: org.telegram.tgnet.TLRPC$Photo} */
    /* JADX WARNING: Multi-variable type inference failed */
    /* JADX WARNING: Removed duplicated region for block: B:321:0x07c9  */
    /* JADX WARNING: Removed duplicated region for block: B:328:0x07e9  */
    /* JADX WARNING: Removed duplicated region for block: B:345:0x0845  */
    /* JADX WARNING: Removed duplicated region for block: B:361:0x0897  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void setIndexToImage(org.telegram.messenger.ImageReceiver r52, int r53, org.telegram.ui.Components.Crop.CropTransform r54) {
        /*
            r51 = this;
            r0 = r51
            r14 = r52
            r15 = r53
            r13 = r54
            r12 = 0
            r14.setOrientation(r12, r12)
            java.util.ArrayList<org.telegram.messenger.SecureDocument> r1 = r0.secureDocuments
            boolean r1 = r1.isEmpty()
            r2 = 0
            if (r1 != 0) goto L_0x0083
            if (r15 < 0) goto L_0x0921
            java.util.ArrayList<org.telegram.messenger.SecureDocument> r1 = r0.secureDocuments
            int r1 = r1.size()
            if (r15 >= r1) goto L_0x0921
            java.util.ArrayList<org.telegram.messenger.SecureDocument> r1 = r0.secureDocuments
            java.lang.Object r12 = r1.get(r15)
            int r1 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r1 = (float) r1
            float r3 = org.telegram.messenger.AndroidUtilities.density
            float r1 = r1 / r3
            int r11 = (int) r1
            r1 = 0
            org.telegram.messenger.ImageReceiver$BitmapHolder r3 = r0.currentThumb
            if (r3 == 0) goto L_0x0039
            org.telegram.messenger.ImageReceiver r3 = r0.centerImage
            if (r14 != r3) goto L_0x0039
            org.telegram.messenger.ImageReceiver$BitmapHolder r1 = r0.currentThumb
        L_0x0039:
            if (r1 != 0) goto L_0x0043
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r3 = r0.placeProvider
            org.telegram.messenger.ImageReceiver$BitmapHolder r1 = r3.getThumbForPhoto(r2, r2, r15)
            r10 = r1
            goto L_0x0044
        L_0x0043:
            r10 = r1
        L_0x0044:
            java.util.ArrayList<org.telegram.messenger.SecureDocument> r1 = r0.secureDocuments
            java.lang.Object r1 = r1.get(r15)
            r9 = r1
            org.telegram.messenger.SecureDocument r9 = (org.telegram.messenger.SecureDocument) r9
            org.telegram.tgnet.TLRPC$TL_secureFile r1 = r9.secureFile
            long r7 = r1.size
            org.telegram.messenger.ImageLocation r3 = org.telegram.messenger.ImageLocation.getForSecureDocument(r9)
            r4 = 0
            r5 = 0
            if (r10 == 0) goto L_0x0062
            android.graphics.drawable.BitmapDrawable r1 = new android.graphics.drawable.BitmapDrawable
            android.graphics.Bitmap r2 = r10.bitmap
            r1.<init>(r2)
            r6 = r1
            goto L_0x0063
        L_0x0062:
            r6 = r2
        L_0x0063:
            r16 = 0
            r17 = 0
            r18 = 0
            java.lang.String r19 = "d"
            r1 = r52
            r2 = r3
            r3 = r19
            r19 = r7
            r21 = r9
            r9 = r16
            r16 = r10
            r10 = r17
            r17 = r11
            r11 = r18
            r1.setImage(r2, r3, r4, r5, r6, r7, r9, r10, r11)
            goto L_0x0921
        L_0x0083:
            java.util.ArrayList<java.lang.Object> r1 = r0.imagesArrLocals
            boolean r1 = r1.isEmpty()
            java.lang.String r3 = "%d_%d"
            if (r1 != 0) goto L_0x04d5
            if (r15 < 0) goto L_0x04c9
            java.util.ArrayList<java.lang.Object> r1 = r0.imagesArrLocals
            int r1 = r1.size()
            if (r15 >= r1) goto L_0x04c9
            java.util.ArrayList<java.lang.Object> r1 = r0.imagesArrLocals
            java.lang.Object r9 = r1.get(r15)
            int r1 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            float r1 = (float) r1
            float r5 = org.telegram.messenger.AndroidUtilities.density
            float r1 = r1 / r5
            int r10 = (int) r1
            r1 = 0
            org.telegram.messenger.ImageReceiver$BitmapHolder r5 = r0.currentThumb
            if (r5 == 0) goto L_0x00b1
            org.telegram.messenger.ImageReceiver r5 = r0.centerImage
            if (r14 != r5) goto L_0x00b1
            org.telegram.messenger.ImageReceiver$BitmapHolder r1 = r0.currentThumb
        L_0x00b1:
            if (r1 != 0) goto L_0x00b9
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r5 = r0.placeProvider
            org.telegram.messenger.ImageReceiver$BitmapHolder r1 = r5.getThumbForPhoto(r2, r2, r15)
        L_0x00b9:
            r5 = 0
            r6 = 0
            r7 = 0
            r8 = 0
            r16 = 0
            r17 = 0
            r18 = 0
            r19 = 0
            r21 = 0
            r22 = 0
            r23 = 0
            boolean r11 = r9 instanceof org.telegram.messenger.MediaController.PhotoEntry
            if (r11 == 0) goto L_0x0173
            r11 = r9
            org.telegram.messenger.MediaController$PhotoEntry r11 = (org.telegram.messenger.MediaController.PhotoEntry) r11
            org.telegram.messenger.MediaController$CropState r4 = r11.cropState
            boolean r12 = r11.isVideo
            boolean r2 = r11.isVideo
            if (r2 == 0) goto L_0x0129
            java.lang.String r2 = r11.thumbPath
            if (r2 == 0) goto L_0x0105
            boolean r2 = r0.fromCamera
            if (r2 == 0) goto L_0x00fe
            java.lang.String r2 = r11.thumbPath
            android.graphics.Bitmap r2 = android.graphics.BitmapFactory.decodeFile(r2)
            if (r2 == 0) goto L_0x00f9
            r29 = r1
            org.telegram.messenger.ImageReceiver$BitmapHolder r1 = new org.telegram.messenger.ImageReceiver$BitmapHolder
            r1.<init>(r2)
            r18 = r1
            r1 = 0
            r11.thumbPath = r1
            r1 = r18
            goto L_0x00fb
        L_0x00f9:
            r29 = r1
        L_0x00fb:
            r18 = r4
            goto L_0x015c
        L_0x00fe:
            r29 = r1
            java.lang.String r5 = r11.thumbPath
            r18 = r4
            goto L_0x015c
        L_0x0105:
            r29 = r1
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            java.lang.String r2 = "vthumb://"
            r1.append(r2)
            int r2 = r11.imageId
            r1.append(r2)
            java.lang.String r2 = ":"
            r1.append(r2)
            java.lang.String r2 = r11.path
            r1.append(r2)
            java.lang.String r5 = r1.toString()
            r18 = r4
            r1 = r29
            goto L_0x015c
        L_0x0129:
            r29 = r1
            java.lang.String r1 = r11.filterPath
            if (r1 == 0) goto L_0x0134
            java.lang.String r1 = r11.filterPath
            r5 = r1
            r2 = 0
            goto L_0x013d
        L_0x0134:
            int r1 = r11.orientation
            r2 = 0
            r14.setOrientation(r1, r2)
            java.lang.String r1 = r11.path
            r5 = r1
        L_0x013d:
            java.util.Locale r1 = java.util.Locale.US
            r18 = r4
            r2 = 2
            java.lang.Object[] r4 = new java.lang.Object[r2]
            java.lang.Integer r2 = java.lang.Integer.valueOf(r10)
            r22 = 0
            r4[r22] = r2
            java.lang.Integer r2 = java.lang.Integer.valueOf(r10)
            r22 = 1
            r4[r22] = r2
            java.lang.String r1 = java.lang.String.format(r1, r3, r4)
            r21 = r1
            r1 = r29
        L_0x015c:
            r30 = r5
            r11 = r6
            r31 = r7
            r32 = r8
            r5 = r12
            r8 = r16
            r7 = r17
            r6 = r18
            r33 = r19
            r35 = r21
            r36 = r23
            r12 = r1
            goto L_0x02e3
        L_0x0173:
            r29 = r1
            boolean r1 = r9 instanceof org.telegram.tgnet.TLRPC.BotInlineResult
            if (r1 == 0) goto L_0x0272
            r23 = 1
            r1 = r9
            org.telegram.tgnet.TLRPC$BotInlineResult r1 = (org.telegram.tgnet.TLRPC.BotInlineResult) r1
            java.lang.String r2 = r1.type
            java.lang.String r4 = "video"
            boolean r2 = r2.equals(r4)
            if (r2 != 0) goto L_0x024b
            org.telegram.tgnet.TLRPC$Document r2 = r1.document
            boolean r2 = org.telegram.messenger.MessageObject.isVideoDocument(r2)
            if (r2 == 0) goto L_0x0194
            r30 = r5
            goto L_0x024d
        L_0x0194:
            java.lang.String r2 = r1.type
            java.lang.String r4 = "gif"
            boolean r2 = r2.equals(r4)
            if (r2 == 0) goto L_0x01bf
            org.telegram.tgnet.TLRPC$Document r2 = r1.document
            if (r2 == 0) goto L_0x01bf
            org.telegram.tgnet.TLRPC$Document r2 = r1.document
            org.telegram.tgnet.TLRPC$Document r4 = r1.document
            long r11 = r4.size
            org.telegram.tgnet.TLRPC$Document r4 = r1.document
            org.telegram.tgnet.TLRPC$VideoSize r4 = org.telegram.messenger.MessageObject.getDocumentVideoThumb(r4)
            if (r4 == 0) goto L_0x01b4
            org.telegram.messenger.ImageLocation r8 = org.telegram.messenger.ImageLocation.getForDocument((org.telegram.tgnet.TLRPC.VideoSize) r4, (org.telegram.tgnet.TLRPC.Document) r2)
        L_0x01b4:
            java.lang.String r4 = "d"
            r6 = r2
            r21 = r4
            r30 = r5
            r19 = r11
            goto L_0x02ce
        L_0x01bf:
            org.telegram.tgnet.TLRPC$Photo r2 = r1.photo
            if (r2 == 0) goto L_0x01fa
            org.telegram.tgnet.TLRPC$Photo r2 = r1.photo
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r2 = r2.sizes
            int r4 = org.telegram.messenger.AndroidUtilities.getPhotoSize()
            org.telegram.tgnet.TLRPC$PhotoSize r2 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r2, r4)
            r4 = r2
            org.telegram.tgnet.TLRPC$Photo r11 = r1.photo
            int r12 = r2.size
            r16 = r4
            r30 = r5
            long r4 = (long) r12
            java.util.Locale r12 = java.util.Locale.US
            r31 = r2
            r19 = r4
            r2 = 2
            java.lang.Object[] r4 = new java.lang.Object[r2]
            java.lang.Integer r2 = java.lang.Integer.valueOf(r10)
            r5 = 0
            r4[r5] = r2
            java.lang.Integer r2 = java.lang.Integer.valueOf(r10)
            r5 = 1
            r4[r5] = r2
            java.lang.String r2 = java.lang.String.format(r12, r3, r4)
            r21 = r2
            r17 = r11
            goto L_0x02ce
        L_0x01fa:
            r30 = r5
            org.telegram.tgnet.TLRPC$WebDocument r2 = r1.content
            boolean r2 = r2 instanceof org.telegram.tgnet.TLRPC.TL_webDocument
            if (r2 == 0) goto L_0x02ce
            java.lang.String r2 = r1.type
            boolean r2 = r2.equals(r4)
            if (r2 == 0) goto L_0x0229
            java.lang.String r2 = "d"
            org.telegram.tgnet.TLRPC$WebDocument r4 = r1.thumb
            boolean r4 = r4 instanceof org.telegram.tgnet.TLRPC.TL_webDocument
            if (r4 == 0) goto L_0x0240
            org.telegram.tgnet.TLRPC$WebDocument r4 = r1.thumb
            java.lang.String r4 = r4.mime_type
            java.lang.String r5 = "video/mp4"
            boolean r4 = r5.equals(r4)
            if (r4 == 0) goto L_0x0240
            org.telegram.tgnet.TLRPC$WebDocument r4 = r1.thumb
            org.telegram.messenger.WebFile r4 = org.telegram.messenger.WebFile.createWithWebDocument(r4)
            org.telegram.messenger.ImageLocation r8 = org.telegram.messenger.ImageLocation.getForWebFile(r4)
            goto L_0x0240
        L_0x0229:
            java.util.Locale r2 = java.util.Locale.US
            r4 = 2
            java.lang.Object[] r5 = new java.lang.Object[r4]
            java.lang.Integer r4 = java.lang.Integer.valueOf(r10)
            r11 = 0
            r5[r11] = r4
            java.lang.Integer r4 = java.lang.Integer.valueOf(r10)
            r11 = 1
            r5[r11] = r4
            java.lang.String r2 = java.lang.String.format(r2, r3, r5)
        L_0x0240:
            org.telegram.tgnet.TLRPC$WebDocument r4 = r1.content
            org.telegram.messenger.WebFile r4 = org.telegram.messenger.WebFile.createWithWebDocument(r4)
            r21 = r2
            r7 = r4
            goto L_0x02ce
        L_0x024b:
            r30 = r5
        L_0x024d:
            org.telegram.tgnet.TLRPC$Document r2 = r1.document
            if (r2 == 0) goto L_0x0263
            org.telegram.tgnet.TLRPC$Document r2 = r1.document
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r2 = r2.thumbs
            r4 = 90
            org.telegram.tgnet.TLRPC$PhotoSize r2 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r2, r4)
            org.telegram.tgnet.TLRPC$Document r4 = r1.document
            r16 = r2
            r17 = r4
            goto L_0x02ce
        L_0x0263:
            org.telegram.tgnet.TLRPC$WebDocument r2 = r1.thumb
            boolean r2 = r2 instanceof org.telegram.tgnet.TLRPC.TL_webDocument
            if (r2 == 0) goto L_0x02ce
            org.telegram.tgnet.TLRPC$WebDocument r2 = r1.thumb
            org.telegram.messenger.WebFile r2 = org.telegram.messenger.WebFile.createWithWebDocument(r2)
            r7 = r2
            goto L_0x02ce
        L_0x0272:
            r30 = r5
            boolean r1 = r9 instanceof org.telegram.messenger.MediaController.SearchImage
            if (r1 == 0) goto L_0x02ce
            r23 = 1
            r1 = r9
            org.telegram.messenger.MediaController$SearchImage r1 = (org.telegram.messenger.MediaController.SearchImage) r1
            org.telegram.tgnet.TLRPC$PhotoSize r2 = r1.photoSize
            if (r2 == 0) goto L_0x0293
            org.telegram.tgnet.TLRPC$PhotoSize r2 = r1.photoSize
            org.telegram.tgnet.TLRPC$Photo r4 = r1.photo
            org.telegram.tgnet.TLRPC$PhotoSize r5 = r1.photoSize
            int r5 = r5.size
            long r11 = (long) r5
            r16 = r2
            r17 = r4
            r19 = r11
            r5 = r30
            goto L_0x02b3
        L_0x0293:
            java.lang.String r2 = r1.filterPath
            if (r2 == 0) goto L_0x029b
            java.lang.String r2 = r1.filterPath
            r5 = r2
            goto L_0x02b3
        L_0x029b:
            org.telegram.tgnet.TLRPC$Document r2 = r1.document
            if (r2 == 0) goto L_0x02ab
            org.telegram.tgnet.TLRPC$Document r2 = r1.document
            org.telegram.tgnet.TLRPC$Document r4 = r1.document
            long r4 = r4.size
            r6 = r2
            r19 = r4
            r5 = r30
            goto L_0x02b3
        L_0x02ab:
            java.lang.String r2 = r1.imageUrl
            int r4 = r1.size
            long r4 = (long) r4
            r19 = r4
            r5 = r2
        L_0x02b3:
            org.telegram.messenger.MediaController$CropState r2 = r1.cropState
            java.lang.String r21 = "d"
            r30 = r5
            r11 = r6
            r31 = r7
            r32 = r8
            r8 = r16
            r7 = r17
            r33 = r19
            r35 = r21
            r5 = r22
            r36 = r23
            r12 = r29
            r6 = r2
            goto L_0x02e3
        L_0x02ce:
            r11 = r6
            r31 = r7
            r32 = r8
            r8 = r16
            r7 = r17
            r6 = r18
            r33 = r19
            r35 = r21
            r5 = r22
            r36 = r23
            r12 = r29
        L_0x02e3:
            if (r11 == 0) goto L_0x03bf
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r1 = r11.thumbs
            r2 = 90
            org.telegram.tgnet.TLRPC$PhotoSize r4 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r1, r2)
            if (r32 == 0) goto L_0x035c
            org.telegram.messenger.ImageLocation r2 = org.telegram.messenger.ImageLocation.getForDocument(r11)
            r16 = 0
            if (r12 != 0) goto L_0x02fe
            org.telegram.messenger.ImageLocation r1 = org.telegram.messenger.ImageLocation.getForDocument((org.telegram.tgnet.TLRPC.PhotoSize) r4, (org.telegram.tgnet.TLRPC.Document) r11)
            r17 = r1
            goto L_0x0300
        L_0x02fe:
            r17 = 0
        L_0x0300:
            java.util.Locale r1 = java.util.Locale.US
            r18 = r4
            r4 = 2
            java.lang.Object[] r4 = new java.lang.Object[r4]
            java.lang.Integer r19 = java.lang.Integer.valueOf(r10)
            r20 = 0
            r4[r20] = r19
            java.lang.Integer r19 = java.lang.Integer.valueOf(r10)
            r21 = 1
            r4[r21] = r19
            java.lang.String r19 = java.lang.String.format(r1, r3, r4)
            if (r12 == 0) goto L_0x0327
            android.graphics.drawable.BitmapDrawable r1 = new android.graphics.drawable.BitmapDrawable
            android.graphics.Bitmap r3 = r12.bitmap
            r1.<init>(r3)
            r28 = r1
            goto L_0x0329
        L_0x0327:
            r28 = 0
        L_0x0329:
            r21 = 0
            java.lang.String r3 = "d"
            r1 = r52
            r37 = r18
            r4 = r32
            r38 = r5
            r5 = r16
            r39 = r6
            r6 = r17
            r40 = r7
            r7 = r19
            r41 = r8
            r8 = r28
            r42 = r9
            r43 = r10
            r9 = r33
            r44 = r11
            r11 = r21
            r46 = r12
            r12 = r42
            r15 = r13
            r13 = r36
            r1.setImage(r2, r3, r4, r5, r6, r7, r8, r9, r11, r12, r13)
            r13 = r44
            r12 = r46
            goto L_0x03b7
        L_0x035c:
            r37 = r4
            r38 = r5
            r39 = r6
            r40 = r7
            r41 = r8
            r42 = r9
            r43 = r10
            r44 = r11
            r46 = r12
            r15 = r13
            org.telegram.messenger.ImageLocation r2 = org.telegram.messenger.ImageLocation.getForDocument(r44)
            if (r12 != 0) goto L_0x037f
            r11 = r37
            r13 = r44
            org.telegram.messenger.ImageLocation r1 = org.telegram.messenger.ImageLocation.getForDocument((org.telegram.tgnet.TLRPC.PhotoSize) r11, (org.telegram.tgnet.TLRPC.Document) r13)
            r4 = r1
            goto L_0x0384
        L_0x037f:
            r11 = r37
            r13 = r44
            r4 = 0
        L_0x0384:
            java.util.Locale r1 = java.util.Locale.US
            r5 = 2
            java.lang.Object[] r5 = new java.lang.Object[r5]
            java.lang.Integer r6 = java.lang.Integer.valueOf(r43)
            r10 = 0
            r5[r10] = r6
            java.lang.Integer r6 = java.lang.Integer.valueOf(r43)
            r7 = 1
            r5[r7] = r6
            java.lang.String r5 = java.lang.String.format(r1, r3, r5)
            if (r12 == 0) goto L_0x03a6
            android.graphics.drawable.BitmapDrawable r1 = new android.graphics.drawable.BitmapDrawable
            android.graphics.Bitmap r3 = r12.bitmap
            r1.<init>(r3)
            r6 = r1
            goto L_0x03a7
        L_0x03a6:
            r6 = 0
        L_0x03a7:
            r9 = 0
            java.lang.String r3 = "d"
            r1 = r52
            r7 = r33
            r10 = r42
            r16 = r11
            r11 = r36
            r1.setImage(r2, r3, r4, r5, r6, r7, r9, r10, r11)
        L_0x03b7:
            r8 = r38
            r11 = r40
            r10 = r41
            goto L_0x0471
        L_0x03bf:
            r38 = r5
            r39 = r6
            r40 = r7
            r41 = r8
            r42 = r9
            r43 = r10
            r15 = r13
            r13 = r11
            r10 = r41
            if (r10 == 0) goto L_0x03f5
            r11 = r40
            org.telegram.messenger.ImageLocation r2 = org.telegram.messenger.ImageLocation.getForObject(r10, r11)
            if (r12 == 0) goto L_0x03e2
            android.graphics.drawable.BitmapDrawable r1 = new android.graphics.drawable.BitmapDrawable
            android.graphics.Bitmap r3 = r12.bitmap
            r1.<init>(r3)
            r4 = r1
            goto L_0x03e3
        L_0x03e2:
            r4 = 0
        L_0x03e3:
            r7 = 0
            r1 = r52
            r3 = r35
            r5 = r33
            r8 = r42
            r9 = r36
            r1.setImage((org.telegram.messenger.ImageLocation) r2, (java.lang.String) r3, (android.graphics.drawable.Drawable) r4, (long) r5, (java.lang.String) r7, (java.lang.Object) r8, (int) r9)
            r8 = r38
            goto L_0x0471
        L_0x03f5:
            r11 = r40
            r1 = 2131166003(0x7var_, float:1.794624E38)
            if (r31 == 0) goto L_0x0448
            if (r32 == 0) goto L_0x0417
            org.telegram.messenger.ImageLocation r2 = org.telegram.messenger.ImageLocation.getForWebFile(r31)
            r5 = 0
            r1 = 0
            r6 = r1
            android.graphics.drawable.Drawable r6 = (android.graphics.drawable.Drawable) r6
            r1 = r52
            r3 = r35
            r4 = r32
            r7 = r42
            r8 = r36
            r1.setImage((org.telegram.messenger.ImageLocation) r2, (java.lang.String) r3, (org.telegram.messenger.ImageLocation) r4, (java.lang.String) r5, (android.graphics.drawable.Drawable) r6, (java.lang.Object) r7, (int) r8)
            r8 = r38
            goto L_0x0471
        L_0x0417:
            org.telegram.messenger.ImageLocation r2 = org.telegram.messenger.ImageLocation.getForWebFile(r31)
            if (r12 == 0) goto L_0x0428
            android.graphics.drawable.BitmapDrawable r1 = new android.graphics.drawable.BitmapDrawable
            android.graphics.Bitmap r3 = r12.bitmap
            r1.<init>(r3)
            r4 = r1
            r8 = r38
            goto L_0x043b
        L_0x0428:
            r8 = r38
            if (r8 == 0) goto L_0x043a
            android.app.Activity r3 = r0.parentActivity
            if (r3 == 0) goto L_0x043a
            android.content.res.Resources r3 = r3.getResources()
            android.graphics.drawable.Drawable r1 = r3.getDrawable(r1)
            r4 = r1
            goto L_0x043b
        L_0x043a:
            r4 = 0
        L_0x043b:
            r5 = 0
            r1 = r52
            r3 = r35
            r6 = r42
            r7 = r36
            r1.setImage(r2, r3, r4, r5, r6, r7)
            goto L_0x0471
        L_0x0448:
            r8 = r38
            if (r12 == 0) goto L_0x0455
            android.graphics.drawable.BitmapDrawable r1 = new android.graphics.drawable.BitmapDrawable
            android.graphics.Bitmap r2 = r12.bitmap
            r1.<init>(r2)
        L_0x0453:
            r4 = r1
            goto L_0x0465
        L_0x0455:
            if (r8 == 0) goto L_0x0464
            android.app.Activity r2 = r0.parentActivity
            if (r2 == 0) goto L_0x0464
            android.content.res.Resources r2 = r2.getResources()
            android.graphics.drawable.Drawable r1 = r2.getDrawable(r1)
            goto L_0x0453
        L_0x0464:
            r4 = 0
        L_0x0465:
            r5 = 0
            r1 = r52
            r2 = r30
            r3 = r35
            r6 = r33
            r1.setImage(r2, r3, r4, r5, r6)
        L_0x0471:
            if (r15 == 0) goto L_0x04b0
            r2 = r39
            if (r2 == 0) goto L_0x04a9
            r17 = 1
            float r1 = r2.cropPx
            float r3 = r2.cropPy
            float r4 = r2.cropRotate
            int r5 = r2.transformRotation
            float r6 = r2.cropScale
            r23 = 1065353216(0x3var_, float:1.0)
            r24 = 1065353216(0x3var_, float:1.0)
            float r7 = r2.cropPw
            float r9 = r2.cropPh
            r27 = 0
            r28 = 0
            r41 = r10
            boolean r10 = r2.mirrored
            r16 = r54
            r18 = r1
            r19 = r3
            r20 = r4
            r21 = r5
            r22 = r6
            r25 = r7
            r26 = r9
            r29 = r10
            r16.setViewTransform(r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29)
            goto L_0x04b4
        L_0x04a9:
            r41 = r10
            r10 = 0
            r15.setViewTransform(r10)
            goto L_0x04b4
        L_0x04b0:
            r41 = r10
            r2 = r39
        L_0x04b4:
            org.telegram.messenger.ImageReceiver r1 = r0.leftImage
            if (r14 != r1) goto L_0x04bd
            r0.leftCropState = r2
            r0.leftImageIsVideo = r8
            goto L_0x04c5
        L_0x04bd:
            org.telegram.messenger.ImageReceiver r1 = r0.rightImage
            if (r14 != r1) goto L_0x04c5
            r0.rightCropState = r2
            r0.rightImageIsVideo = r8
        L_0x04c5:
            r15 = r53
            goto L_0x0921
        L_0x04c9:
            r15 = r13
            r1 = 0
            r2 = r1
            android.graphics.Bitmap r2 = (android.graphics.Bitmap) r2
            r14.setImageBitmap((android.graphics.Bitmap) r2)
            r15 = r53
            goto L_0x0921
        L_0x04d5:
            r15 = r13
            r10 = 0
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r1 = r0.pageBlocksAdapter
            r2 = 2131166053(0x7var_, float:1.794634E38)
            if (r1 == 0) goto L_0x05e0
            r3 = 1
            int[] r12 = new int[r3]
            r15 = r53
            org.telegram.tgnet.TLObject r13 = r1.getMedia(r15)
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r1 = r0.pageBlocksAdapter
            org.telegram.tgnet.TLRPC$PhotoSize r11 = r1.getFileLocation(r13, r12)
            if (r11 == 0) goto L_0x05c2
            boolean r1 = r13 instanceof org.telegram.tgnet.TLRPC.Photo
            if (r1 == 0) goto L_0x0555
            r9 = r13
            org.telegram.tgnet.TLRPC$Photo r9 = (org.telegram.tgnet.TLRPC.Photo) r9
            r1 = 0
            org.telegram.messenger.ImageReceiver$BitmapHolder r2 = r0.currentThumb
            if (r2 == 0) goto L_0x0503
            org.telegram.messenger.ImageReceiver r2 = r0.centerImage
            if (r14 != r2) goto L_0x0503
            org.telegram.messenger.ImageReceiver$BitmapHolder r1 = r0.currentThumb
            r7 = r1
            goto L_0x0504
        L_0x0503:
            r7 = r1
        L_0x0504:
            r1 = r12[r10]
            if (r1 != 0) goto L_0x050b
            r1 = -1
            r12[r10] = r1
        L_0x050b:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r1 = r9.sizes
            r2 = 80
            org.telegram.tgnet.TLRPC$PhotoSize r8 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r1, r2)
            org.telegram.messenger.ImageLocation r2 = org.telegram.messenger.ImageLocation.getForPhoto((org.telegram.tgnet.TLRPC.PhotoSize) r11, (org.telegram.tgnet.TLRPC.Photo) r9)
            org.telegram.messenger.ImageLocation r4 = org.telegram.messenger.ImageLocation.getForPhoto((org.telegram.tgnet.TLRPC.PhotoSize) r8, (org.telegram.tgnet.TLRPC.Photo) r9)
            if (r7 == 0) goto L_0x0526
            android.graphics.drawable.BitmapDrawable r1 = new android.graphics.drawable.BitmapDrawable
            android.graphics.Bitmap r5 = r7.bitmap
            r1.<init>(r5)
            r6 = r1
            goto L_0x0527
        L_0x0526:
            r6 = 0
        L_0x0527:
            r1 = r12[r10]
            r16 = r4
            long r3 = (long) r1
            r10 = 0
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r1 = r0.pageBlocksAdapter
            java.lang.Object r17 = r1.getParentObject()
            r18 = 1
            java.lang.String r19 = "b"
            r1 = r52
            r20 = r3
            r3 = 0
            r4 = r16
            r5 = r19
            r19 = r7
            r16 = r8
            r7 = r20
            r20 = r9
            r9 = r10
            r10 = r17
            r17 = r12
            r12 = r11
            r11 = r18
            r1.setImage(r2, r3, r4, r5, r6, r7, r9, r10, r11)
            goto L_0x05de
        L_0x0555:
            r17 = r12
            r12 = r11
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r1 = r0.pageBlocksAdapter
            boolean r1 = r1.isVideo(r15)
            if (r1 == 0) goto L_0x05b3
            org.telegram.tgnet.TLRPC$FileLocation r1 = r12.location
            boolean r1 = r1 instanceof org.telegram.tgnet.TLRPC.TL_fileLocationUnavailable
            if (r1 != 0) goto L_0x05a5
            r1 = 0
            org.telegram.messenger.ImageReceiver$BitmapHolder r2 = r0.currentThumb
            if (r2 == 0) goto L_0x0573
            org.telegram.messenger.ImageReceiver r2 = r0.centerImage
            if (r14 != r2) goto L_0x0573
            org.telegram.messenger.ImageReceiver$BitmapHolder r1 = r0.currentThumb
            r11 = r1
            goto L_0x0574
        L_0x0573:
            r11 = r1
        L_0x0574:
            r2 = 0
            r3 = 0
            if (r11 != 0) goto L_0x0581
            r1 = r13
            org.telegram.tgnet.TLRPC$Document r1 = (org.telegram.tgnet.TLRPC.Document) r1
            org.telegram.messenger.ImageLocation r1 = org.telegram.messenger.ImageLocation.getForDocument((org.telegram.tgnet.TLRPC.PhotoSize) r12, (org.telegram.tgnet.TLRPC.Document) r1)
            r4 = r1
            goto L_0x0582
        L_0x0581:
            r4 = 0
        L_0x0582:
            if (r11 == 0) goto L_0x058d
            android.graphics.drawable.BitmapDrawable r1 = new android.graphics.drawable.BitmapDrawable
            android.graphics.Bitmap r5 = r11.bitmap
            r1.<init>(r5)
            r6 = r1
            goto L_0x058e
        L_0x058d:
            r6 = 0
        L_0x058e:
            r7 = 0
            r9 = 0
            org.telegram.ui.PhotoViewer$PageBlocksAdapter r1 = r0.pageBlocksAdapter
            java.lang.Object r10 = r1.getParentObject()
            r16 = 1
            java.lang.String r5 = "b"
            r1 = r52
            r18 = r11
            r11 = r16
            r1.setImage(r2, r3, r4, r5, r6, r7, r9, r10, r11)
            goto L_0x05de
        L_0x05a5:
            android.app.Activity r1 = r0.parentActivity
            android.content.res.Resources r1 = r1.getResources()
            android.graphics.drawable.Drawable r1 = r1.getDrawable(r2)
            r14.setImageBitmap((android.graphics.drawable.Drawable) r1)
            goto L_0x05de
        L_0x05b3:
            org.telegram.ui.Components.AnimatedFileDrawable r1 = r0.currentAnimation
            if (r1 == 0) goto L_0x05de
            r14.setImageBitmap((android.graphics.drawable.Drawable) r1)
            org.telegram.ui.Components.AnimatedFileDrawable r1 = r0.currentAnimation
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r2 = r0.containerView
            r1.addSecondParentView(r2)
            goto L_0x05de
        L_0x05c2:
            r17 = r12
            r12 = r11
            r1 = r17[r10]
            if (r1 != 0) goto L_0x05d1
            r1 = 0
            r2 = r1
            android.graphics.Bitmap r2 = (android.graphics.Bitmap) r2
            r14.setImageBitmap((android.graphics.Bitmap) r2)
            goto L_0x05de
        L_0x05d1:
            android.app.Activity r1 = r0.parentActivity
            android.content.res.Resources r1 = r1.getResources()
            android.graphics.drawable.Drawable r1 = r1.getDrawable(r2)
            r14.setImageBitmap((android.graphics.drawable.Drawable) r1)
        L_0x05de:
            goto L_0x0921
        L_0x05e0:
            r15 = r53
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r0.imagesArr
            boolean r1 = r1.isEmpty()
            if (r1 != 0) goto L_0x0602
            if (r15 < 0) goto L_0x0602
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r0.imagesArr
            int r1 = r1.size()
            if (r15 >= r1) goto L_0x0602
            java.util.ArrayList<org.telegram.messenger.MessageObject> r1 = r0.imagesArr
            java.lang.Object r1 = r1.get(r15)
            org.telegram.messenger.MessageObject r1 = (org.telegram.messenger.MessageObject) r1
            r4 = 1
            r14.setShouldGenerateQualityThumb(r4)
            r13 = r1
            goto L_0x0604
        L_0x0602:
            r1 = 0
            r13 = r1
        L_0x0604:
            r1 = 100
            if (r13 == 0) goto L_0x0735
            org.telegram.tgnet.TLRPC$Message r4 = r13.messageOwner
            java.util.ArrayList<org.telegram.tgnet.TLRPC$TL_restrictionReason> r4 = r4.restriction_reason
            java.lang.String r12 = org.telegram.messenger.MessagesController.getRestrictionReason(r4)
            boolean r4 = android.text.TextUtils.isEmpty(r12)
            if (r4 != 0) goto L_0x0624
            android.app.Activity r1 = r0.parentActivity
            android.content.res.Resources r1 = r1.getResources()
            android.graphics.drawable.Drawable r1 = r1.getDrawable(r2)
            r14.setImageBitmap((android.graphics.drawable.Drawable) r1)
            return
        L_0x0624:
            boolean r4 = r13.isVideo()
            if (r4 == 0) goto L_0x06a2
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r3 = r13.photoThumbs
            if (r3 == 0) goto L_0x0694
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r3 = r13.photoThumbs
            boolean r3 = r3.isEmpty()
            if (r3 != 0) goto L_0x0694
            r2 = 0
            org.telegram.messenger.ImageReceiver$BitmapHolder r3 = r0.currentThumb
            if (r3 == 0) goto L_0x0643
            org.telegram.messenger.ImageReceiver r3 = r0.centerImage
            if (r14 != r3) goto L_0x0643
            org.telegram.messenger.ImageReceiver$BitmapHolder r2 = r0.currentThumb
            r11 = r2
            goto L_0x0644
        L_0x0643:
            r11 = r2
        L_0x0644:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r2 = r13.photoThumbs
            r3 = 320(0x140, float:4.48E-43)
            org.telegram.tgnet.TLRPC$PhotoSize r9 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r2, r3)
            int r2 = r9.w
            if (r2 >= r1) goto L_0x0656
            int r2 = r9.h
            if (r2 >= r1) goto L_0x0656
            r1 = 1
            goto L_0x0657
        L_0x0656:
            r1 = 0
        L_0x0657:
            r14.setNeedsQualityThumb(r1)
            r2 = 0
            r3 = 0
            if (r11 != 0) goto L_0x0666
            org.telegram.tgnet.TLObject r1 = r13.photoThumbsObject
            org.telegram.messenger.ImageLocation r1 = org.telegram.messenger.ImageLocation.getForObject(r9, r1)
            r4 = r1
            goto L_0x0667
        L_0x0666:
            r4 = 0
        L_0x0667:
            if (r11 == 0) goto L_0x0672
            android.graphics.drawable.BitmapDrawable r1 = new android.graphics.drawable.BitmapDrawable
            android.graphics.Bitmap r5 = r11.bitmap
            r1.<init>(r5)
            r6 = r1
            goto L_0x0673
        L_0x0672:
            r6 = 0
        L_0x0673:
            r7 = 0
            r16 = 0
            r17 = 1
            java.lang.String r5 = "b"
            r1 = r52
            r18 = r9
            r9 = r16
            r10 = r13
            r16 = r11
            r11 = r17
            r1.setImage(r2, r3, r4, r5, r6, r7, r9, r10, r11)
            org.telegram.messenger.ImageReceiver$BitmapHolder r1 = r0.currentThumb
            if (r1 == 0) goto L_0x0693
            int r1 = r1.orientation
            r4 = 0
            r14.setOrientation(r1, r4)
        L_0x0693:
            goto L_0x06a1
        L_0x0694:
            android.app.Activity r1 = r0.parentActivity
            android.content.res.Resources r1 = r1.getResources()
            android.graphics.drawable.Drawable r1 = r1.getDrawable(r2)
            r14.setImageBitmap((android.graphics.drawable.Drawable) r1)
        L_0x06a1:
            return
        L_0x06a2:
            r4 = 0
            org.telegram.ui.Components.AnimatedFileDrawable r5 = r0.currentAnimation
            if (r5 == 0) goto L_0x06b2
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r1 = r0.containerView
            r5.addSecondParentView(r1)
            org.telegram.ui.Components.AnimatedFileDrawable r1 = r0.currentAnimation
            r14.setImageBitmap((android.graphics.drawable.Drawable) r1)
            return
        L_0x06b2:
            int r5 = r0.sharedMediaType
            r6 = 1
            if (r5 != r6) goto L_0x0736
            boolean r2 = r13.canPreviewDocument()
            if (r2 == 0) goto L_0x0728
            org.telegram.tgnet.TLRPC$Document r11 = r13.getDocument()
            r14.setNeedsQualityThumb(r6)
            r2 = 0
            org.telegram.messenger.ImageReceiver$BitmapHolder r5 = r0.currentThumb
            if (r5 == 0) goto L_0x06d1
            org.telegram.messenger.ImageReceiver r5 = r0.centerImage
            if (r14 != r5) goto L_0x06d1
            org.telegram.messenger.ImageReceiver$BitmapHolder r2 = r0.currentThumb
            r10 = r2
            goto L_0x06d2
        L_0x06d1:
            r10 = r2
        L_0x06d2:
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r2 = r13.photoThumbs
            org.telegram.tgnet.TLRPC$PhotoSize r9 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r2, r1)
            r1 = 1157627904(0x45000000, float:2048.0)
            float r2 = org.telegram.messenger.AndroidUtilities.density
            float r1 = r1 / r2
            int r7 = (int) r1
            org.telegram.messenger.ImageLocation r2 = org.telegram.messenger.ImageLocation.getForDocument(r11)
            java.util.Locale r1 = java.util.Locale.US
            r5 = 2
            java.lang.Object[] r5 = new java.lang.Object[r5]
            java.lang.Integer r6 = java.lang.Integer.valueOf(r7)
            r5[r4] = r6
            java.lang.Integer r4 = java.lang.Integer.valueOf(r7)
            r6 = 1
            r5[r6] = r4
            java.lang.String r3 = java.lang.String.format(r1, r3, r5)
            if (r10 != 0) goto L_0x0700
            org.telegram.messenger.ImageLocation r1 = org.telegram.messenger.ImageLocation.getForDocument((org.telegram.tgnet.TLRPC.PhotoSize) r9, (org.telegram.tgnet.TLRPC.Document) r11)
            r4 = r1
            goto L_0x0701
        L_0x0700:
            r4 = 0
        L_0x0701:
            if (r10 == 0) goto L_0x070c
            android.graphics.drawable.BitmapDrawable r1 = new android.graphics.drawable.BitmapDrawable
            android.graphics.Bitmap r5 = r10.bitmap
            r1.<init>(r5)
            r6 = r1
            goto L_0x070d
        L_0x070c:
            r6 = 0
        L_0x070d:
            r16 = r7
            long r7 = r11.size
            r17 = 0
            r18 = 0
            java.lang.String r5 = "b"
            r1 = r52
            r19 = r9
            r9 = r17
            r17 = r10
            r10 = r13
            r20 = r11
            r11 = r18
            r1.setImage(r2, r3, r4, r5, r6, r7, r9, r10, r11)
            goto L_0x0734
        L_0x0728:
            org.telegram.ui.Components.OtherDocumentPlaceholderDrawable r1 = new org.telegram.ui.Components.OtherDocumentPlaceholderDrawable
            android.app.Activity r2 = r0.parentActivity
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r3 = r0.containerView
            r1.<init>(r2, r3, r13)
            r14.setImageBitmap((android.graphics.drawable.Drawable) r1)
        L_0x0734:
            return
        L_0x0735:
            r4 = 0
        L_0x0736:
            r11 = 1
            long[] r12 = new long[r11]
            org.telegram.messenger.ImageLocation r9 = r0.getImageLocation(r15, r12)
            org.telegram.tgnet.TLObject r10 = r0.getFileLocation(r15, r12)
            r14.setNeedsQualityThumb(r11)
            r5 = 0
            if (r9 == 0) goto L_0x08fc
            r2 = 0
            org.telegram.messenger.ImageReceiver$BitmapHolder r3 = r0.currentThumb
            if (r3 == 0) goto L_0x0753
            org.telegram.messenger.ImageReceiver r3 = r0.centerImage
            if (r14 != r3) goto L_0x0753
            org.telegram.messenger.ImageReceiver$BitmapHolder r2 = r0.currentThumb
        L_0x0753:
            r7 = r12[r4]
            int r3 = (r7 > r5 ? 1 : (r7 == r5 ? 0 : -1))
            if (r3 != 0) goto L_0x075d
            r7 = -1
            r12[r4] = r7
        L_0x075d:
            if (r13 == 0) goto L_0x0768
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r3 = r13.photoThumbs
            org.telegram.tgnet.TLRPC$PhotoSize r1 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r3, r1)
            org.telegram.tgnet.TLObject r3 = r13.photoThumbsObject
            goto L_0x076a
        L_0x0768:
            r1 = 0
            r3 = 0
        L_0x076a:
            if (r1 == 0) goto L_0x076f
            if (r1 != r10) goto L_0x076f
            r1 = 0
        L_0x076f:
            if (r1 != 0) goto L_0x07a5
            org.telegram.tgnet.TLRPC$Photo r7 = r9.photo
            if (r7 == 0) goto L_0x07a5
            org.telegram.tgnet.TLRPC$Photo r7 = r9.photo
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r7 = r7.sizes
            if (r7 == 0) goto L_0x07a5
            r7 = 0
        L_0x077c:
            org.telegram.tgnet.TLRPC$Photo r8 = r9.photo
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r8 = r8.sizes
            int r8 = r8.size()
            if (r7 >= r8) goto L_0x07a5
            org.telegram.tgnet.TLRPC$Photo r8 = r9.photo
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r8 = r8.sizes
            java.lang.Object r8 = r8.get(r7)
            boolean r8 = r8 instanceof org.telegram.tgnet.TLRPC.TL_photoStrippedSize
            if (r8 == 0) goto L_0x07a2
            org.telegram.tgnet.TLRPC$Photo r8 = r9.photo
            java.util.ArrayList<org.telegram.tgnet.TLRPC$PhotoSize> r8 = r8.sizes
            java.lang.Object r8 = r8.get(r7)
            r1 = r8
            org.telegram.tgnet.TLRPC$PhotoSize r1 = (org.telegram.tgnet.TLRPC.PhotoSize) r1
            org.telegram.tgnet.TLRPC$Photo r3 = r9.photo
            r8 = r1
            r7 = r3
            goto L_0x07a7
        L_0x07a2:
            int r7 = r7 + 1
            goto L_0x077c
        L_0x07a5:
            r8 = r1
            r7 = r3
        L_0x07a7:
            if (r13 == 0) goto L_0x07b3
            boolean r1 = r13.isWebpage()
            if (r1 != 0) goto L_0x07b0
            goto L_0x07b3
        L_0x07b0:
            r16 = r12
            goto L_0x07c2
        L_0x07b3:
            r16 = r12
            long r11 = r0.avatarsDialogId
            int r1 = (r11 > r5 ? 1 : (r11 == r5 ? 0 : -1))
            if (r1 != 0) goto L_0x07c2
            boolean r1 = r0.isEvent
            if (r1 == 0) goto L_0x07c0
            goto L_0x07c2
        L_0x07c0:
            r12 = 0
            goto L_0x07c3
        L_0x07c2:
            r12 = 1
        L_0x07c3:
            r17 = r12
            r1 = 0
            r3 = 5
            if (r13 == 0) goto L_0x07e9
            r11 = r13
            int r12 = r0.sharedMediaType
            if (r12 != r3) goto L_0x07e3
            org.telegram.tgnet.TLRPC$Document r12 = r13.getDocument()
            org.telegram.tgnet.TLRPC$VideoSize r4 = org.telegram.messenger.MessageObject.getDocumentVideoThumb(r12)
            if (r4 == 0) goto L_0x07dc
            org.telegram.messenger.ImageLocation r1 = org.telegram.messenger.ImageLocation.getForDocument((org.telegram.tgnet.TLRPC.VideoSize) r4, (org.telegram.tgnet.TLRPC.Document) r12)
        L_0x07dc:
            r20 = r1
            r12 = r2
            r21 = r11
            goto L_0x0841
        L_0x07e3:
            r20 = r1
            r12 = r2
            r21 = r11
            goto L_0x0841
        L_0x07e9:
            long r11 = r0.avatarsDialogId
            int r4 = (r11 > r5 ? 1 : (r11 == r5 ? 0 : -1))
            if (r4 == 0) goto L_0x083b
            int r4 = (r11 > r5 ? 1 : (r11 == r5 ? 0 : -1))
            if (r4 <= 0) goto L_0x0804
            int r4 = r0.currentAccount
            org.telegram.messenger.MessagesController r4 = org.telegram.messenger.MessagesController.getInstance(r4)
            long r11 = r0.avatarsDialogId
            java.lang.Long r11 = java.lang.Long.valueOf(r11)
            org.telegram.tgnet.TLRPC$User r4 = r4.getUser(r11)
            goto L_0x0815
        L_0x0804:
            int r4 = r0.currentAccount
            org.telegram.messenger.MessagesController r4 = org.telegram.messenger.MessagesController.getInstance(r4)
            long r11 = r0.avatarsDialogId
            long r11 = -r11
            java.lang.Long r11 = java.lang.Long.valueOf(r11)
            org.telegram.tgnet.TLRPC$Chat r4 = r4.getChat(r11)
        L_0x0815:
            if (r7 == 0) goto L_0x081a
            r4 = r7
            r11 = r4
            goto L_0x081b
        L_0x081a:
            r11 = r4
        L_0x081b:
            if (r2 != 0) goto L_0x0835
            boolean r4 = r8 instanceof org.telegram.tgnet.TLRPC.TL_photoStrippedSize
            if (r4 == 0) goto L_0x0835
            org.telegram.messenger.ImageReceiver$BitmapHolder r4 = new org.telegram.messenger.ImageReceiver$BitmapHolder
            byte[] r12 = r8.bytes
            java.lang.String r5 = "b"
            android.graphics.Bitmap r5 = org.telegram.messenger.ImageLoader.getStrippedPhotoBitmap(r12, r5)
            r4.<init>(r5)
            r2 = r4
            r20 = r1
            r12 = r2
            r21 = r11
            goto L_0x0841
        L_0x0835:
            r20 = r1
            r12 = r2
            r21 = r11
            goto L_0x0841
        L_0x083b:
            r11 = 0
            r20 = r1
            r12 = r2
            r21 = r11
        L_0x0841:
            java.lang.String r1 = "g"
            if (r20 == 0) goto L_0x0897
            int r2 = r0.sharedMediaType
            if (r2 != r3) goto L_0x084b
            r3 = r1
            goto L_0x084c
        L_0x084b:
            r3 = 0
        L_0x084c:
            r5 = 0
            if (r12 != 0) goto L_0x0855
            org.telegram.messenger.ImageLocation r1 = org.telegram.messenger.ImageLocation.getForObject(r8, r7)
            r6 = r1
            goto L_0x0856
        L_0x0855:
            r6 = 0
        L_0x0856:
            if (r12 == 0) goto L_0x0862
            android.graphics.drawable.BitmapDrawable r1 = new android.graphics.drawable.BitmapDrawable
            android.graphics.Bitmap r2 = r12.bitmap
            r1.<init>(r2)
            r28 = r1
            goto L_0x0864
        L_0x0862:
            r28 = 0
        L_0x0864:
            r1 = 0
            r18 = r16[r1]
            r11 = 0
            if (r17 == 0) goto L_0x086d
            r45 = 1
            goto L_0x086f
        L_0x086d:
            r45 = 0
        L_0x086f:
            java.lang.String r22 = "b"
            r1 = r52
            r2 = r9
            r4 = r20
            r47 = r7
            r7 = r22
            r48 = r8
            r8 = r28
            r49 = r9
            r22 = r10
            r9 = r18
            r50 = r12
            r12 = r21
            r23 = r13
            r13 = r45
            r1.setImage(r2, r3, r4, r5, r6, r7, r8, r9, r11, r12, r13)
            r2 = 1
            r14.setAllowStartAnimation(r2)
            r12 = r49
            goto L_0x08fb
        L_0x0897:
            r47 = r7
            r48 = r8
            r49 = r9
            r22 = r10
            r50 = r12
            r23 = r13
            r2 = 1
            long r3 = r0.avatarsDialogId
            r5 = 0
            int r7 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1))
            if (r7 == 0) goto L_0x08b7
            r12 = r49
            int r3 = r12.imageType
            r4 = 2
            if (r3 != r4) goto L_0x08b4
            goto L_0x08b5
        L_0x08b4:
            r1 = 0
        L_0x08b5:
            r13 = r1
            goto L_0x08bb
        L_0x08b7:
            r12 = r49
            r1 = 0
            r13 = r1
        L_0x08bb:
            r11 = r50
            if (r11 != 0) goto L_0x08c9
            r10 = r47
            r9 = r48
            org.telegram.messenger.ImageLocation r1 = org.telegram.messenger.ImageLocation.getForObject(r9, r10)
            r4 = r1
            goto L_0x08ce
        L_0x08c9:
            r10 = r47
            r9 = r48
            r4 = 0
        L_0x08ce:
            if (r11 == 0) goto L_0x08d9
            android.graphics.drawable.BitmapDrawable r1 = new android.graphics.drawable.BitmapDrawable
            android.graphics.Bitmap r3 = r11.bitmap
            r1.<init>(r3)
            r6 = r1
            goto L_0x08da
        L_0x08d9:
            r6 = 0
        L_0x08da:
            r1 = 0
            r7 = r16[r1]
            r18 = 0
            if (r17 == 0) goto L_0x08e4
            r45 = 1
            goto L_0x08e6
        L_0x08e4:
            r45 = 0
        L_0x08e6:
            java.lang.String r5 = "b"
            r1 = r52
            r2 = r12
            r3 = r13
            r19 = r9
            r9 = r18
            r18 = r10
            r10 = r21
            r24 = r11
            r11 = r45
            r1.setImage(r2, r3, r4, r5, r6, r7, r9, r10, r11)
        L_0x08fb:
            goto L_0x0921
        L_0x08fc:
            r22 = r10
            r16 = r12
            r23 = r13
            r12 = r9
            r1 = 0
            r3 = r16[r1]
            r5 = 0
            int r1 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1))
            if (r1 != 0) goto L_0x0914
            r1 = 0
            r2 = r1
            android.graphics.Bitmap r2 = (android.graphics.Bitmap) r2
            r14.setImageBitmap((android.graphics.Bitmap) r2)
            goto L_0x0921
        L_0x0914:
            android.app.Activity r1 = r0.parentActivity
            android.content.res.Resources r1 = r1.getResources()
            android.graphics.drawable.Drawable r1 = r1.getDrawable(r2)
            r14.setImageBitmap((android.graphics.drawable.Drawable) r1)
        L_0x0921:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.setIndexToImage(org.telegram.messenger.ImageReceiver, int, org.telegram.ui.Components.Crop.CropTransform):void");
    }

    public static boolean isShowingImage(MessageObject object) {
        boolean result = false;
        boolean result2 = true;
        if (Instance != null && !Instance.pipAnimationInProgress && Instance.isVisible && !Instance.disableShowCheck && object != null) {
            MessageObject currentMessageObject2 = Instance.currentMessageObject;
            if (currentMessageObject2 == null && Instance.placeProvider != null) {
                currentMessageObject2 = Instance.placeProvider.getEditingMessageObject();
            }
            result = currentMessageObject2 != null && currentMessageObject2.getId() == object.getId() && currentMessageObject2.getDialogId() == object.getDialogId();
        }
        if (result || PipInstance == null) {
            return result;
        }
        if (!PipInstance.isVisible || PipInstance.disableShowCheck || object == null || PipInstance.currentMessageObject == null || PipInstance.currentMessageObject.getId() != object.getId() || PipInstance.currentMessageObject.getDialogId() != object.getDialogId()) {
            result2 = false;
        }
        return result2;
    }

    public static boolean isPlayingMessageInPip(MessageObject object) {
        return (PipInstance == null || object == null || PipInstance.currentMessageObject == null || PipInstance.currentMessageObject.getId() != object.getId() || PipInstance.currentMessageObject.getDialogId() != object.getDialogId()) ? false : true;
    }

    public static boolean isPlayingMessage(MessageObject object) {
        return Instance != null && !Instance.pipAnimationInProgress && Instance.isVisible && object != null && Instance.currentMessageObject != null && Instance.currentMessageObject.getId() == object.getId() && Instance.currentMessageObject.getDialogId() == object.getDialogId();
    }

    public static boolean isShowingImage(TLRPC.FileLocation object) {
        if (Instance == null) {
            return false;
        }
        return Instance.isVisible && !Instance.disableShowCheck && object != null && ((Instance.currentFileLocation != null && object.local_id == Instance.currentFileLocation.location.local_id && object.volume_id == Instance.currentFileLocation.location.volume_id && object.dc_id == Instance.currentFileLocation.dc_id) || (Instance.currentFileLocationVideo != null && object.local_id == Instance.currentFileLocationVideo.location.local_id && object.volume_id == Instance.currentFileLocationVideo.location.volume_id && object.dc_id == Instance.currentFileLocationVideo.dc_id));
    }

    public static boolean isShowingImage(TLRPC.BotInlineResult object) {
        if (Instance == null) {
            return false;
        }
        return Instance.isVisible && !Instance.disableShowCheck && object != null && Instance.currentBotInlineResult != null && object.id == Instance.currentBotInlineResult.id;
    }

    public static boolean isShowingImage(String object) {
        if (Instance == null) {
            return false;
        }
        return Instance.isVisible && !Instance.disableShowCheck && object != null && object.equals(Instance.currentPathObject);
    }

    public void setParentChatActivity(ChatActivity chatActivity) {
        this.parentChatActivity = chatActivity;
    }

    public void setMaxSelectedPhotos(int value, boolean order) {
        this.maxSelectedPhotos = value;
        this.allowOrder = order;
    }

    public void checkCurrentImageVisibility() {
        PlaceProviderObject placeProviderObject = this.currentPlaceObject;
        if (placeProviderObject != null) {
            placeProviderObject.imageReceiver.setVisible(true, true);
        }
        PhotoViewerProvider photoViewerProvider = this.placeProvider;
        PlaceProviderObject placeForPhoto = photoViewerProvider == null ? null : photoViewerProvider.getPlaceForPhoto(this.currentMessageObject, getFileLocation(this.currentFileLocation), this.currentIndex, false);
        this.currentPlaceObject = placeForPhoto;
        if (placeForPhoto != null) {
            placeForPhoto.imageReceiver.setVisible(false, true);
        }
    }

    public boolean openPhoto(MessageObject messageObject, ChatActivity chatActivity, long dialogId, long mergeDialogId2, PhotoViewerProvider provider) {
        return openPhoto(messageObject, (TLRPC.FileLocation) null, (ImageLocation) null, (ImageLocation) null, (ArrayList<MessageObject>) null, (ArrayList<SecureDocument>) null, (ArrayList<Object>) null, 0, provider, chatActivity, dialogId, mergeDialogId2, true, (PageBlocksAdapter) null, (Integer) null);
    }

    public boolean openPhoto(MessageObject messageObject, int embedSeekTime, ChatActivity chatActivity, long dialogId, long mergeDialogId2, PhotoViewerProvider provider) {
        return openPhoto(messageObject, (TLRPC.FileLocation) null, (ImageLocation) null, (ImageLocation) null, (ArrayList<MessageObject>) null, (ArrayList<SecureDocument>) null, (ArrayList<Object>) null, 0, provider, chatActivity, dialogId, mergeDialogId2, true, (PageBlocksAdapter) null, Integer.valueOf(embedSeekTime));
    }

    public boolean openPhoto(MessageObject messageObject, long dialogId, long mergeDialogId2, PhotoViewerProvider provider, boolean fullScreenVideo) {
        return openPhoto(messageObject, (TLRPC.FileLocation) null, (ImageLocation) null, (ImageLocation) null, (ArrayList<MessageObject>) null, (ArrayList<SecureDocument>) null, (ArrayList<Object>) null, 0, provider, (ChatActivity) null, dialogId, mergeDialogId2, fullScreenVideo, (PageBlocksAdapter) null, (Integer) null);
    }

    public boolean openPhoto(TLRPC.FileLocation fileLocation, PhotoViewerProvider provider) {
        return openPhoto((MessageObject) null, fileLocation, (ImageLocation) null, (ImageLocation) null, (ArrayList<MessageObject>) null, (ArrayList<SecureDocument>) null, (ArrayList<Object>) null, 0, provider, (ChatActivity) null, 0, 0, true, (PageBlocksAdapter) null, (Integer) null);
    }

    public boolean openPhotoWithVideo(TLRPC.FileLocation fileLocation, ImageLocation videoLocation, PhotoViewerProvider provider) {
        return openPhoto((MessageObject) null, fileLocation, (ImageLocation) null, videoLocation, (ArrayList<MessageObject>) null, (ArrayList<SecureDocument>) null, (ArrayList<Object>) null, 0, provider, (ChatActivity) null, 0, 0, true, (PageBlocksAdapter) null, (Integer) null);
    }

    public boolean openPhoto(TLRPC.FileLocation fileLocation, ImageLocation imageLocation, PhotoViewerProvider provider) {
        return openPhoto((MessageObject) null, fileLocation, imageLocation, (ImageLocation) null, (ArrayList<MessageObject>) null, (ArrayList<SecureDocument>) null, (ArrayList<Object>) null, 0, provider, (ChatActivity) null, 0, 0, true, (PageBlocksAdapter) null, (Integer) null);
    }

    public boolean openPhoto(ArrayList<MessageObject> messages, int index, long dialogId, long mergeDialogId2, PhotoViewerProvider provider) {
        PhotoViewerProvider photoViewerProvider = provider;
        return openPhoto(messages.get(index), (TLRPC.FileLocation) null, (ImageLocation) null, (ImageLocation) null, messages, (ArrayList<SecureDocument>) null, (ArrayList<Object>) null, index, photoViewerProvider, (ChatActivity) null, dialogId, mergeDialogId2, true, (PageBlocksAdapter) null, (Integer) null);
    }

    public boolean openPhoto(ArrayList<SecureDocument> documents, int index, PhotoViewerProvider provider) {
        return openPhoto((MessageObject) null, (TLRPC.FileLocation) null, (ImageLocation) null, (ImageLocation) null, (ArrayList<MessageObject>) null, documents, (ArrayList<Object>) null, index, provider, (ChatActivity) null, 0, 0, true, (PageBlocksAdapter) null, (Integer) null);
    }

    public boolean openPhoto(int index, PageBlocksAdapter pageBlocksAdapter2, PhotoViewerProvider provider) {
        return openPhoto((MessageObject) null, (TLRPC.FileLocation) null, (ImageLocation) null, (ImageLocation) null, (ArrayList<MessageObject>) null, (ArrayList<SecureDocument>) null, (ArrayList<Object>) null, index, provider, (ChatActivity) null, 0, 0, true, pageBlocksAdapter2, (Integer) null);
    }

    public boolean openPhotoForSelect(ArrayList<Object> photos, int index, int type, boolean documentsPicker, PhotoViewerProvider provider, ChatActivity chatActivity) {
        int i = type;
        this.isDocumentsPicker = documentsPicker;
        ImageView imageView = this.pickerViewSendButton;
        if (imageView != null) {
            FrameLayout.LayoutParams layoutParams2 = (FrameLayout.LayoutParams) imageView.getLayoutParams();
            if (i == 4 || i == 5) {
                this.pickerViewSendButton.setImageResource(NUM);
                layoutParams2.bottomMargin = AndroidUtilities.dp(19.0f);
            } else if (i == 1 || i == 3 || i == 10) {
                this.pickerViewSendButton.setImageResource(NUM);
                this.pickerViewSendButton.setPadding(0, AndroidUtilities.dp(1.0f), 0, 0);
                layoutParams2.bottomMargin = AndroidUtilities.dp(19.0f);
            } else {
                this.pickerViewSendButton.setImageResource(NUM);
                layoutParams2.bottomMargin = AndroidUtilities.dp(14.0f);
            }
            this.pickerViewSendButton.setLayoutParams(layoutParams2);
        }
        if (this.sendPhotoType == 1 || i != 1 || !this.isVisible) {
            PhotoViewerProvider photoViewerProvider = provider;
            this.sendPhotoType = i;
            return openPhoto((MessageObject) null, (TLRPC.FileLocation) null, (ImageLocation) null, (ImageLocation) null, (ArrayList<MessageObject>) null, (ArrayList<SecureDocument>) null, photos, index, provider, chatActivity, 0, 0, true, (PageBlocksAdapter) null, (Integer) null);
        }
        this.sendPhotoType = i;
        this.doneButtonPressed = false;
        this.actionBar.setTitle(LocaleController.formatString("Of", NUM, 1, 1));
        this.placeProvider = provider;
        this.mergeDialogId = 0;
        this.currentDialogId = 0;
        this.selectedPhotosAdapter.notifyDataSetChanged();
        this.pageBlocksAdapter = null;
        if (this.velocityTracker == null) {
            this.velocityTracker = VelocityTracker.obtain();
        }
        this.isVisible = true;
        togglePhotosListView(false, false);
        this.openedFullScreenVideo = false;
        createCropView();
        toggleActionBar(false, false);
        this.seekToProgressPending2 = 0.0f;
        this.skipFirstBufferingProgress = false;
        this.playerInjected = false;
        makeFocusable();
        this.backgroundDrawable.setAlpha(255);
        this.containerView.setAlpha(1.0f);
        onPhotoShow((MessageObject) null, (TLRPC.FileLocation) null, (ImageLocation) null, (ImageLocation) null, (ArrayList<MessageObject>) null, (ArrayList<SecureDocument>) null, photos, index, (PlaceProviderObject) null);
        initCropView();
        setCropBitmap();
        return true;
    }

    private void openCurrentPhotoInPaintModeForSelect() {
        if (canSendMediaToParentChatActivity()) {
            File file = null;
            boolean isVideo = false;
            boolean capReplace = false;
            MessageObject messageObject = null;
            MessageObject messageObject2 = this.currentMessageObject;
            if (messageObject2 != null) {
                messageObject = this.currentMessageObject;
                capReplace = messageObject2.canEditMedia() && !this.currentMessageObject.isDocument();
                isVideo = this.currentMessageObject.isVideo();
                if (!TextUtils.isEmpty(this.currentMessageObject.messageOwner.attachPath)) {
                    file = new File(this.currentMessageObject.messageOwner.attachPath);
                    if (!file.exists()) {
                        file = null;
                    }
                }
                if (file == null) {
                    file = FileLoader.getInstance(this.currentAccount).getPathToMessage(this.currentMessageObject.messageOwner);
                }
            }
            if (file == null || !file.exists()) {
                showDownloadAlert();
                return;
            }
            this.savedState = new SavedState(this.currentIndex, new ArrayList(this.imagesArr), this.placeProvider);
            ActionBarToggleParams toggleParams = new ActionBarToggleParams().enableStatusBarAnimation(false);
            toggleActionBar(false, true, toggleParams);
            AndroidUtilities.runOnUIThread(new PhotoViewer$$ExternalSyntheticLambda54(this, file, isVideo, messageObject, capReplace), (long) toggleParams.animationDuration);
        }
    }

    /* renamed from: lambda$openCurrentPhotoInPaintModeForSelect$71$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4255xec3efe9f(File finalFile, boolean finalIsVideo, MessageObject finalMessageObject, boolean finalCanReplace) {
        int orientation;
        int orientation2 = 0;
        try {
            switch (new ExifInterface(finalFile.getAbsolutePath()).getAttributeInt("Orientation", 1)) {
                case 3:
                    orientation2 = 180;
                    break;
                case 6:
                    orientation2 = 90;
                    break;
                case 8:
                    orientation2 = 270;
                    break;
            }
            orientation = orientation2;
        } catch (Exception e) {
            FileLog.e((Throwable) e);
            orientation = 0;
        }
        int i = this.lastImageId;
        this.lastImageId = i - 1;
        final MediaController.PhotoEntry photoEntry = new MediaController.PhotoEntry(0, i, 0, finalFile.getAbsolutePath(), orientation, finalIsVideo, 0, 0, 0);
        this.sendPhotoType = 2;
        this.doneButtonPressed = false;
        PhotoViewerProvider chatPhotoProvider = this.placeProvider;
        final PhotoViewerProvider photoViewerProvider = chatPhotoProvider;
        final MessageObject messageObject = finalMessageObject;
        final boolean z = finalCanReplace;
        this.placeProvider = new EmptyPhotoViewerProvider() {
            private final ImageReceiver.BitmapHolder thumbHolder;

            {
                this.thumbHolder = PhotoViewer.this.centerImage.getBitmapSafe();
            }

            public PlaceProviderObject getPlaceForPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation, int index, boolean needPreview) {
                PhotoViewerProvider photoViewerProvider = photoViewerProvider;
                if (photoViewerProvider != null) {
                    return photoViewerProvider.getPlaceForPhoto(messageObject, (TLRPC.FileLocation) null, 0, needPreview);
                }
                return null;
            }

            public ImageReceiver.BitmapHolder getThumbForPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation, int index) {
                return this.thumbHolder;
            }

            public void sendButtonPressed(int index, VideoEditedInfo videoEditedInfo, boolean notify, int scheduleDate, boolean forceDocument) {
                sendMedia(videoEditedInfo, notify, scheduleDate, false, forceDocument);
            }

            public void replaceButtonPressed(int index, VideoEditedInfo videoEditedInfo) {
                if (photoEntry.isCropped || photoEntry.isPainted || photoEntry.isFiltered || videoEditedInfo != null || !TextUtils.isEmpty(photoEntry.caption)) {
                    sendMedia(videoEditedInfo, false, 0, true, false);
                }
            }

            public boolean canReplace(int index) {
                return photoViewerProvider != null && z;
            }

            public MessageObject getEditingMessageObject() {
                return messageObject;
            }

            public boolean canCaptureMorePhotos() {
                return false;
            }

            private void sendMedia(VideoEditedInfo videoEditedInfo, boolean notify, int scheduleDate, boolean replace, boolean forceDocument) {
                if (PhotoViewer.this.parentChatActivity != null) {
                    MessageObject editingMessageObject = replace ? messageObject : null;
                    if (editingMessageObject != null && !TextUtils.isEmpty(photoEntry.caption)) {
                        editingMessageObject.editingMessage = photoEntry.caption;
                        editingMessageObject.editingMessageEntities = photoEntry.entities;
                    }
                    if (photoEntry.isVideo) {
                        if (videoEditedInfo != null) {
                            SendMessagesHelper.prepareSendingVideo(PhotoViewer.this.parentChatActivity.getAccountInstance(), photoEntry.path, videoEditedInfo, PhotoViewer.this.parentChatActivity.getDialogId(), PhotoViewer.this.parentChatActivity.getReplyMessage(), PhotoViewer.this.parentChatActivity.getThreadMessage(), photoEntry.caption, photoEntry.entities, photoEntry.ttl, editingMessageObject, notify, scheduleDate, forceDocument);
                        } else {
                            SendMessagesHelper.prepareSendingVideo(PhotoViewer.this.parentChatActivity.getAccountInstance(), photoEntry.path, (VideoEditedInfo) null, PhotoViewer.this.parentChatActivity.getDialogId(), PhotoViewer.this.parentChatActivity.getReplyMessage(), PhotoViewer.this.parentChatActivity.getThreadMessage(), photoEntry.caption, photoEntry.entities, photoEntry.ttl, editingMessageObject, notify, scheduleDate, forceDocument);
                        }
                    } else if (photoEntry.imagePath != null) {
                        SendMessagesHelper.prepareSendingPhoto(PhotoViewer.this.parentChatActivity.getAccountInstance(), photoEntry.imagePath, photoEntry.thumbPath, (Uri) null, PhotoViewer.this.parentChatActivity.getDialogId(), PhotoViewer.this.parentChatActivity.getReplyMessage(), PhotoViewer.this.parentChatActivity.getThreadMessage(), photoEntry.caption, photoEntry.entities, photoEntry.stickers, (InputContentInfoCompat) null, photoEntry.ttl, editingMessageObject, videoEditedInfo, notify, scheduleDate, forceDocument);
                    } else if (photoEntry.path != null) {
                        SendMessagesHelper.prepareSendingPhoto(PhotoViewer.this.parentChatActivity.getAccountInstance(), photoEntry.path, photoEntry.thumbPath, (Uri) null, PhotoViewer.this.parentChatActivity.getDialogId(), PhotoViewer.this.parentChatActivity.getReplyMessage(), PhotoViewer.this.parentChatActivity.getThreadMessage(), photoEntry.caption, photoEntry.entities, photoEntry.stickers, (InputContentInfoCompat) null, photoEntry.ttl, editingMessageObject, videoEditedInfo, notify, scheduleDate, forceDocument);
                    }
                }
            }
        };
        this.selectedPhotosAdapter.notifyDataSetChanged();
        if (this.velocityTracker == null) {
            this.velocityTracker = VelocityTracker.obtain();
        }
        togglePhotosListView(false, false);
        toggleActionBar(true, false);
        ChatActivity chatActivity = this.parentChatActivity;
        if (chatActivity == null || chatActivity.getChatActivityEnterView() == null || !this.parentChatActivity.isKeyboardVisible()) {
            makeFocusable();
        } else {
            this.parentChatActivity.getChatActivityEnterView().closeKeyboard();
        }
        this.backgroundDrawable.setAlpha(255);
        this.containerView.setAlpha(1.0f);
        PhotoViewerProvider photoViewerProvider2 = chatPhotoProvider;
        onPhotoShow((MessageObject) null, (TLRPC.FileLocation) null, (ImageLocation) null, (ImageLocation) null, (ArrayList<MessageObject>) null, (ArrayList<SecureDocument>) null, Collections.singletonList(photoEntry), 0, (PlaceProviderObject) null);
        float f = 154.0f;
        this.pickerView.setTranslationY((float) AndroidUtilities.dp(this.isCurrentVideo ? 154.0f : 96.0f));
        this.pickerViewSendButton.setTranslationY((float) AndroidUtilities.dp(this.isCurrentVideo ? 154.0f : 96.0f));
        ActionBar actionBar2 = this.actionBar;
        actionBar2.setTranslationY((float) (-actionBar2.getHeight()));
        CaptionTextViewSwitcher captionTextViewSwitcher2 = this.captionTextViewSwitcher;
        if (!this.isCurrentVideo) {
            f = 96.0f;
        }
        captionTextViewSwitcher2.setTranslationY((float) AndroidUtilities.dp(f));
        createPaintView();
        switchToPaintMode();
    }

    private boolean checkAnimation() {
        if (this.animationInProgress != 0 && Math.abs(this.transitionAnimationStartTime - System.currentTimeMillis()) >= 500) {
            Runnable runnable = this.animationEndRunnable;
            if (runnable != null) {
                runnable.run();
                this.animationEndRunnable = null;
            }
            this.animationInProgress = 0;
        }
        if (this.animationInProgress != 0) {
            return true;
        }
        return false;
    }

    /* access modifiers changed from: private */
    public void setCropBitmap() {
        VideoEditTextureView textureView;
        if (!this.cropInitied && this.sendPhotoType == 1) {
            if (!this.isCurrentVideo || ((textureView = (VideoEditTextureView) this.videoTextureView) != null && textureView.getVideoWidth() > 0 && textureView.getVideoHeight() > 0)) {
                this.cropInitied = true;
                Bitmap bitmap = this.centerImage.getBitmap();
                int orientation = this.centerImage.getOrientation();
                if (bitmap == null) {
                    bitmap = this.animatingImageView.getBitmap();
                    orientation = this.animatingImageView.getOrientation();
                }
                if (bitmap != null || this.videoTextureView != null) {
                    this.photoCropView.setBitmap(bitmap, orientation, false, false, this.paintingOverlay, this.cropTransform, this.isCurrentVideo ? (VideoEditTextureView) this.videoTextureView : null, this.editState.cropState);
                }
            }
        }
    }

    private void initCropView() {
        PhotoCropView photoCropView2 = this.photoCropView;
        if (photoCropView2 != null) {
            photoCropView2.setBitmap((Bitmap) null, 0, false, false, (PaintingOverlay) null, (CropTransform) null, (VideoEditTextureView) null, (MediaController.CropState) null);
            if (this.sendPhotoType == 1) {
                this.photoCropView.onAppear();
                this.photoCropView.setVisibility(0);
                this.photoCropView.setAlpha(1.0f);
                this.photoCropView.onAppeared();
                this.padImageForHorizontalInsets = true;
            }
        }
    }

    /* JADX WARNING: Code restructure failed: missing block: B:33:0x007f, code lost:
        if (r35.getCurrentEncryptedChat() == null) goto L_0x0081;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:40:0x0096, code lost:
        if (org.telegram.messenger.MessagesController.getInstance(r12.currentAccount).isChatNoForwards(-r12.avatarsDialogId) == false) goto L_0x0098;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:92:0x0237, code lost:
        if (org.telegram.messenger.FileLoader.getInstance(r13.currentAccount).isLoadingVideo(r26.getDocument(), false) == false) goto L_0x023b;
     */
    /* JADX WARNING: Removed duplicated region for block: B:136:0x039e  */
    /* JADX WARNING: Removed duplicated region for block: B:151:0x0411  */
    /* JADX WARNING: Removed duplicated region for block: B:162:? A[RETURN, SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:53:0x00cb A[Catch:{ Exception -> 0x042f }] */
    /* JADX WARNING: Removed duplicated region for block: B:54:0x00ce A[Catch:{ Exception -> 0x042f }] */
    /* JADX WARNING: Removed duplicated region for block: B:58:0x00f5  */
    /* JADX WARNING: Removed duplicated region for block: B:59:0x00f7  */
    /* JADX WARNING: Removed duplicated region for block: B:62:0x019d  */
    /* JADX WARNING: Removed duplicated region for block: B:65:0x01af  */
    /* JADX WARNING: Removed duplicated region for block: B:66:0x01b4  */
    /* JADX WARNING: Removed duplicated region for block: B:72:0x01d6  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public boolean openPhoto(org.telegram.messenger.MessageObject r26, org.telegram.tgnet.TLRPC.FileLocation r27, org.telegram.messenger.ImageLocation r28, org.telegram.messenger.ImageLocation r29, java.util.ArrayList<org.telegram.messenger.MessageObject> r30, java.util.ArrayList<org.telegram.messenger.SecureDocument> r31, java.util.ArrayList<java.lang.Object> r32, int r33, org.telegram.ui.PhotoViewer.PhotoViewerProvider r34, org.telegram.ui.ChatActivity r35, long r36, long r38, boolean r40, org.telegram.ui.PhotoViewer.PageBlocksAdapter r41, java.lang.Integer r42) {
        /*
            r25 = this;
            r12 = r25
            r13 = r26
            r14 = r27
            r15 = r34
            r11 = r35
            r10 = r41
            r9 = r42
            android.app.Activity r0 = r12.parentActivity
            r8 = 0
            if (r0 == 0) goto L_0x043a
            boolean r0 = r12.isVisible
            if (r0 != 0) goto L_0x043a
            if (r15 != 0) goto L_0x0024
            boolean r0 = r25.checkAnimation()
            if (r0 != 0) goto L_0x0020
            goto L_0x0024
        L_0x0020:
            r2 = r9
            r11 = 0
            goto L_0x043c
        L_0x0024:
            if (r13 != 0) goto L_0x0033
            if (r14 != 0) goto L_0x0033
            if (r30 != 0) goto L_0x0033
            if (r32 != 0) goto L_0x0033
            if (r31 != 0) goto L_0x0033
            if (r28 != 0) goto L_0x0033
            if (r10 != 0) goto L_0x0033
            goto L_0x0020
        L_0x0033:
            r7 = 1
            r6 = r33
            org.telegram.ui.PhotoViewer$PlaceProviderObject r5 = r15.getPlaceForPhoto(r13, r14, r6, r7)
            r1 = 0
            r12.lastInsets = r1
            android.app.Activity r0 = r12.parentActivity
            java.lang.String r2 = "window"
            java.lang.Object r0 = r0.getSystemService(r2)
            r4 = r0
            android.view.WindowManager r4 = (android.view.WindowManager) r4
            boolean r0 = r12.attachedToWindow
            if (r0 == 0) goto L_0x0056
            android.widget.FrameLayout r0 = r12.windowView     // Catch:{ Exception -> 0x0055 }
            r4.removeView(r0)     // Catch:{ Exception -> 0x0055 }
            r25.onHideView()     // Catch:{ Exception -> 0x0055 }
            goto L_0x0056
        L_0x0055:
            r0 = move-exception
        L_0x0056:
            android.view.WindowManager$LayoutParams r0 = r12.windowLayoutParams     // Catch:{ Exception -> 0x042f }
            r2 = 99
            r0.type = r2     // Catch:{ Exception -> 0x042f }
            int r0 = android.os.Build.VERSION.SDK_INT     // Catch:{ Exception -> 0x042f }
            r2 = 21
            if (r0 < r2) goto L_0x0073
            android.view.WindowManager$LayoutParams r0 = r12.windowLayoutParams     // Catch:{ Exception -> 0x006a }
            r2 = -2147286784(0xfffffffvar_, float:-2.75865E-40)
            r0.flags = r2     // Catch:{ Exception -> 0x006a }
            goto L_0x0079
        L_0x006a:
            r0 = move-exception
            r17 = r4
            r23 = r5
            r2 = r9
            r11 = 0
            goto L_0x0436
        L_0x0073:
            android.view.WindowManager$LayoutParams r0 = r12.windowLayoutParams     // Catch:{ Exception -> 0x042f }
            r2 = 131072(0x20000, float:1.83671E-40)
            r0.flags = r2     // Catch:{ Exception -> 0x042f }
        L_0x0079:
            if (r11 == 0) goto L_0x0081
            org.telegram.tgnet.TLRPC$EncryptedChat r0 = r35.getCurrentEncryptedChat()     // Catch:{ Exception -> 0x006a }
            if (r0 != 0) goto L_0x00b4
        L_0x0081:
            long r2 = r12.avatarsDialogId     // Catch:{ Exception -> 0x042f }
            r16 = 0
            int r0 = (r2 > r16 ? 1 : (r2 == r16 ? 0 : -1))
            if (r0 == 0) goto L_0x0098
            int r0 = r12.currentAccount     // Catch:{ Exception -> 0x006a }
            org.telegram.messenger.MessagesController r0 = org.telegram.messenger.MessagesController.getInstance(r0)     // Catch:{ Exception -> 0x006a }
            long r2 = r12.avatarsDialogId     // Catch:{ Exception -> 0x006a }
            long r2 = -r2
            boolean r0 = r0.isChatNoForwards((long) r2)     // Catch:{ Exception -> 0x006a }
            if (r0 != 0) goto L_0x00b4
        L_0x0098:
            if (r13 == 0) goto L_0x00bd
            int r0 = r12.currentAccount     // Catch:{ Exception -> 0x006a }
            org.telegram.messenger.MessagesController r0 = org.telegram.messenger.MessagesController.getInstance(r0)     // Catch:{ Exception -> 0x006a }
            long r2 = r26.getChatId()     // Catch:{ Exception -> 0x006a }
            boolean r0 = r0.isChatNoForwards((long) r2)     // Catch:{ Exception -> 0x006a }
            if (r0 != 0) goto L_0x00b4
            org.telegram.tgnet.TLRPC$Message r0 = r13.messageOwner     // Catch:{ Exception -> 0x006a }
            if (r0 == 0) goto L_0x00bd
            org.telegram.tgnet.TLRPC$Message r0 = r13.messageOwner     // Catch:{ Exception -> 0x006a }
            boolean r0 = r0.noforwards     // Catch:{ Exception -> 0x006a }
            if (r0 == 0) goto L_0x00bd
        L_0x00b4:
            android.view.WindowManager$LayoutParams r0 = r12.windowLayoutParams     // Catch:{ Exception -> 0x006a }
            int r2 = r0.flags     // Catch:{ Exception -> 0x006a }
            r2 = r2 | 8192(0x2000, float:1.14794E-41)
            r0.flags = r2     // Catch:{ Exception -> 0x006a }
            goto L_0x00c5
        L_0x00bd:
            android.view.WindowManager$LayoutParams r0 = r12.windowLayoutParams     // Catch:{ Exception -> 0x042f }
            int r2 = r0.flags     // Catch:{ Exception -> 0x042f }
            r2 = r2 & -8193(0xffffffffffffdfff, float:NaN)
            r0.flags = r2     // Catch:{ Exception -> 0x042f }
        L_0x00c5:
            android.view.WindowManager$LayoutParams r0 = r12.windowLayoutParams     // Catch:{ Exception -> 0x042f }
            boolean r2 = r12.useSmoothKeyboard     // Catch:{ Exception -> 0x042f }
            if (r2 == 0) goto L_0x00ce
            r2 = 32
            goto L_0x00d0
        L_0x00ce:
            r2 = 16
        L_0x00d0:
            r2 = r2 | 256(0x100, float:3.59E-43)
            r0.softInputMode = r2     // Catch:{ Exception -> 0x042f }
            android.widget.FrameLayout r0 = r12.windowView     // Catch:{ Exception -> 0x042f }
            r0.setFocusable(r8)     // Catch:{ Exception -> 0x042f }
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r0 = r12.containerView     // Catch:{ Exception -> 0x042f }
            r0.setFocusable(r8)     // Catch:{ Exception -> 0x042f }
            android.widget.FrameLayout r0 = r12.windowView     // Catch:{ Exception -> 0x042f }
            android.view.WindowManager$LayoutParams r2 = r12.windowLayoutParams     // Catch:{ Exception -> 0x042f }
            r4.addView(r0, r2)     // Catch:{ Exception -> 0x042f }
            r25.onShowView()     // Catch:{ Exception -> 0x042f }
            r12.hasCaptionForAllMedia = r8
            r12.doneButtonPressed = r8
            r12.allowShowFullscreenButton = r7
            r12.parentChatActivity = r11
            r12.lastTitle = r1
            if (r9 == 0) goto L_0x00f7
            r0 = 1
            goto L_0x00f8
        L_0x00f7:
            r0 = 0
        L_0x00f8:
            r12.isEmbedVideo = r0
            org.telegram.ui.ActionBar.ActionBar r0 = r12.actionBar
            r2 = 2131627077(0x7f0e0CLASSNAME, float:1.8881408E38)
            r3 = 2
            java.lang.Object[] r3 = new java.lang.Object[r3]
            java.lang.Integer r16 = java.lang.Integer.valueOf(r7)
            r3[r8] = r16
            java.lang.Integer r16 = java.lang.Integer.valueOf(r7)
            r3[r7] = r16
            java.lang.String r1 = "Of"
            java.lang.String r1 = org.telegram.messenger.LocaleController.formatString(r1, r2, r3)
            r0.setTitle(r1)
            org.telegram.ui.ActionBar.ActionBar r0 = r12.actionBar
            r0.setTitleScrollNonFitText(r8)
            int r0 = r12.currentAccount
            org.telegram.messenger.NotificationCenter r0 = org.telegram.messenger.NotificationCenter.getInstance(r0)
            int r1 = org.telegram.messenger.NotificationCenter.fileLoadFailed
            r0.addObserver(r12, r1)
            int r0 = r12.currentAccount
            org.telegram.messenger.NotificationCenter r0 = org.telegram.messenger.NotificationCenter.getInstance(r0)
            int r1 = org.telegram.messenger.NotificationCenter.fileLoaded
            r0.addObserver(r12, r1)
            int r0 = r12.currentAccount
            org.telegram.messenger.NotificationCenter r0 = org.telegram.messenger.NotificationCenter.getInstance(r0)
            int r1 = org.telegram.messenger.NotificationCenter.fileLoadProgressChanged
            r0.addObserver(r12, r1)
            int r0 = r12.currentAccount
            org.telegram.messenger.NotificationCenter r0 = org.telegram.messenger.NotificationCenter.getInstance(r0)
            int r1 = org.telegram.messenger.NotificationCenter.mediaCountDidLoad
            r0.addObserver(r12, r1)
            int r0 = r12.currentAccount
            org.telegram.messenger.NotificationCenter r0 = org.telegram.messenger.NotificationCenter.getInstance(r0)
            int r1 = org.telegram.messenger.NotificationCenter.mediaDidLoad
            r0.addObserver(r12, r1)
            int r0 = r12.currentAccount
            org.telegram.messenger.NotificationCenter r0 = org.telegram.messenger.NotificationCenter.getInstance(r0)
            int r1 = org.telegram.messenger.NotificationCenter.dialogPhotosLoaded
            r0.addObserver(r12, r1)
            int r0 = r12.currentAccount
            org.telegram.messenger.NotificationCenter r0 = org.telegram.messenger.NotificationCenter.getInstance(r0)
            int r1 = org.telegram.messenger.NotificationCenter.messagesDeleted
            r0.addObserver(r12, r1)
            org.telegram.messenger.NotificationCenter r0 = org.telegram.messenger.NotificationCenter.getGlobalInstance()
            int r1 = org.telegram.messenger.NotificationCenter.emojiLoaded
            r0.addObserver(r12, r1)
            int r0 = r12.currentAccount
            org.telegram.messenger.NotificationCenter r0 = org.telegram.messenger.NotificationCenter.getInstance(r0)
            int r1 = org.telegram.messenger.NotificationCenter.filePreparingFailed
            r0.addObserver(r12, r1)
            int r0 = r12.currentAccount
            org.telegram.messenger.NotificationCenter r0 = org.telegram.messenger.NotificationCenter.getInstance(r0)
            int r1 = org.telegram.messenger.NotificationCenter.fileNewChunkAvailable
            r0.addObserver(r12, r1)
            r12.placeProvider = r15
            r2 = r38
            r12.mergeDialogId = r2
            r8 = r36
            r12.currentDialogId = r8
            org.telegram.ui.PhotoViewer$ListAdapter r0 = r12.selectedPhotosAdapter
            r0.notifyDataSetChanged()
            r12.pageBlocksAdapter = r10
            android.view.VelocityTracker r0 = r12.velocityTracker
            if (r0 != 0) goto L_0x01a3
            android.view.VelocityTracker r0 = android.view.VelocityTracker.obtain()
            r12.velocityTracker = r0
        L_0x01a3:
            r12.isVisible = r7
            r1 = 0
            r12.togglePhotosListView(r1, r1)
            r0 = r40 ^ 1
            r12.openedFullScreenVideo = r0
            if (r0 == 0) goto L_0x01b4
            r1 = 0
            r12.toggleActionBar(r1, r1)
            goto L_0x01c3
        L_0x01b4:
            r1 = 0
            int r0 = r12.sendPhotoType
            if (r0 != r7) goto L_0x01c0
            r25.createCropView()
            r12.toggleActionBar(r1, r1)
            goto L_0x01c3
        L_0x01c0:
            r12.toggleActionBar(r7, r1)
        L_0x01c3:
            android.widget.FrameLayout r0 = r12.windowView
            r0.setClipChildren(r1)
            android.view.View r0 = r12.navigationBar
            r0.setVisibility(r1)
            r0 = 0
            r12.seekToProgressPending2 = r0
            r12.skipFirstBufferingProgress = r1
            r12.playerInjected = r1
            if (r5 == 0) goto L_0x039e
            r12.disableShowCheck = r7
            r12.animationInProgress = r7
            if (r13 == 0) goto L_0x0259
            boolean r1 = r5.allowTakeAnimation
            if (r1 == 0) goto L_0x01e7
            org.telegram.messenger.ImageReceiver r1 = r5.imageReceiver
            org.telegram.ui.Components.AnimatedFileDrawable r1 = r1.getAnimation()
            goto L_0x01e8
        L_0x01e7:
            r1 = 0
        L_0x01e8:
            r12.currentAnimation = r1
            if (r1 == 0) goto L_0x0256
            boolean r1 = r26.isVideo()
            if (r1 == 0) goto L_0x0246
            org.telegram.messenger.ImageReceiver r1 = r5.imageReceiver
            r7 = 0
            r1.setAllowStartAnimation(r7)
            org.telegram.messenger.ImageReceiver r1 = r5.imageReceiver
            r1.stopAnimation()
            org.telegram.messenger.MediaController r1 = org.telegram.messenger.MediaController.getInstance()
            boolean r1 = r1.isPlayingMessage(r13)
            if (r1 == 0) goto L_0x020b
            float r1 = r13.audioProgress
            r12.seekToProgressPending2 = r1
        L_0x020b:
            org.telegram.ui.Components.VideoPlayer r1 = r12.injectingVideoPlayer
            if (r1 != 0) goto L_0x023d
            int r1 = r13.currentAccount
            org.telegram.messenger.FileLoader r1 = org.telegram.messenger.FileLoader.getInstance(r1)
            org.telegram.tgnet.TLRPC$Document r7 = r26.getDocument()
            r2 = 1
            boolean r1 = r1.isLoadingVideo(r7, r2)
            if (r1 != 0) goto L_0x023d
            org.telegram.ui.Components.AnimatedFileDrawable r1 = r12.currentAnimation
            boolean r1 = r1.hasBitmap()
            if (r1 != 0) goto L_0x023a
            int r1 = r13.currentAccount
            org.telegram.messenger.FileLoader r1 = org.telegram.messenger.FileLoader.getInstance(r1)
            org.telegram.tgnet.TLRPC$Document r2 = r26.getDocument()
            r7 = 0
            boolean r1 = r1.isLoadingVideo(r2, r7)
            if (r1 != 0) goto L_0x023e
            goto L_0x023b
        L_0x023a:
            r7 = 0
        L_0x023b:
            r1 = 1
            goto L_0x023f
        L_0x023d:
            r7 = 0
        L_0x023e:
            r1 = 0
        L_0x023f:
            r12.skipFirstBufferingProgress = r1
            r1 = 0
            r12.currentAnimation = r1
            r3 = 1
            goto L_0x0265
        L_0x0246:
            r1 = 0
            r7 = 0
            java.util.ArrayList r2 = r13.getWebPagePhotos(r1, r1)
            int r2 = r2.size()
            r3 = 1
            if (r2 <= r3) goto L_0x0265
            r12.currentAnimation = r1
            goto L_0x0265
        L_0x0256:
            r3 = 1
            r7 = 0
            goto L_0x0265
        L_0x0259:
            r3 = 1
            r7 = 0
            if (r10 == 0) goto L_0x0265
            org.telegram.messenger.ImageReceiver r1 = r5.imageReceiver
            org.telegram.ui.Components.AnimatedFileDrawable r1 = r1.getAnimation()
            r12.currentAnimation = r1
        L_0x0265:
            r2 = 1065353216(0x3var_, float:1.0)
            r1 = r25
            r2 = r26
            r16 = 1
            r3 = r27
            r17 = r4
            r4 = r28
            r18 = r5
            r5 = r29
            r6 = r30
            r13 = 1
            r16 = 0
            r7 = r31
            r9 = 0
            r8 = r32
            r9 = r33
            r10 = r18
            r1.onPhotoShow(r2, r3, r4, r5, r6, r7, r8, r9, r10)
            int r1 = r12.sendPhotoType
            if (r1 != r13) goto L_0x029d
            org.telegram.ui.Components.PhotoCropView r1 = r12.photoCropView
            r10 = 0
            r1.setVisibility(r10)
            org.telegram.ui.Components.PhotoCropView r1 = r12.photoCropView
            r1.setAlpha(r0)
            org.telegram.ui.Components.PhotoCropView r1 = r12.photoCropView
            r1.setFreeform(r10)
            goto L_0x029e
        L_0x029d:
            r10 = 0
        L_0x029e:
            r9 = r18
            org.telegram.messenger.ImageReceiver r1 = r9.imageReceiver
            android.graphics.RectF r8 = r1.getDrawRegion()
            float r7 = r8.left
            float r6 = r8.top
            org.telegram.messenger.ImageReceiver r1 = r9.imageReceiver
            int r1 = r1.getOrientation()
            org.telegram.messenger.ImageReceiver r2 = r9.imageReceiver
            int r16 = r2.getAnimatedOrientation()
            if (r16 == 0) goto L_0x02bc
            r1 = r16
            r5 = r1
            goto L_0x02bd
        L_0x02bc:
            r5 = r1
        L_0x02bd:
            org.telegram.ui.Components.ClippingImageView[] r4 = r12.getAnimatingImageViews(r9)
            r1 = 0
        L_0x02c2:
            int r2 = r4.length
            if (r1 >= r2) goto L_0x02e7
            r2 = r4[r1]
            float[][] r3 = r12.animationValues
            r2.setAnimationValues(r3)
            r2 = r4[r1]
            r2.setVisibility(r10)
            r2 = r4[r1]
            int[] r3 = r9.radius
            r2.setRadius(r3)
            r2 = r4[r1]
            r2.setOrientation(r5)
            r2 = r4[r1]
            org.telegram.messenger.ImageReceiver$BitmapHolder r3 = r9.thumb
            r2.setImageBitmap(r3)
            int r1 = r1 + 1
            goto L_0x02c2
        L_0x02e7:
            r25.initCropView()
            int r1 = r12.sendPhotoType
            if (r1 != r13) goto L_0x02f6
            org.telegram.ui.Components.PhotoCropView r1 = r12.photoCropView
            r2 = 1065353216(0x3var_, float:1.0)
            r1.setAspectRatio(r2)
            goto L_0x02f8
        L_0x02f6:
            r2 = 1065353216(0x3var_, float:1.0)
        L_0x02f8:
            org.telegram.ui.Components.ClippingImageView r1 = r12.animatingImageView
            android.view.ViewGroup$LayoutParams r10 = r1.getLayoutParams()
            float r1 = r8.width()
            int r1 = (int) r1
            r10.width = r1
            float r1 = r8.height()
            int r1 = (int) r1
            r10.height = r1
            int r1 = r10.width
            r3 = 100
            if (r1 > 0) goto L_0x0314
            r10.width = r3
        L_0x0314:
            int r1 = r10.height
            if (r1 > 0) goto L_0x031a
            r10.height = r3
        L_0x031a:
            r1 = 0
        L_0x031b:
            int r3 = r4.length
            if (r1 >= r3) goto L_0x036e
            int r3 = r4.length
            if (r3 <= r13) goto L_0x0327
            r3 = r4[r1]
            r3.setAlpha(r0)
            goto L_0x032c
        L_0x0327:
            r3 = r4[r1]
            r3.setAlpha(r2)
        L_0x032c:
            r3 = r4[r1]
            r3.setPivotX(r0)
            r3 = r4[r1]
            r3.setPivotY(r0)
            r3 = r4[r1]
            float r0 = r9.scale
            r3.setScaleX(r0)
            r0 = r4[r1]
            float r3 = r9.scale
            r0.setScaleY(r3)
            r0 = r4[r1]
            int r3 = r9.viewX
            float r3 = (float) r3
            float r13 = r8.left
            float r2 = r9.scale
            float r13 = r13 * r2
            float r3 = r3 + r13
            r0.setTranslationX(r3)
            r0 = r4[r1]
            int r2 = r9.viewY
            float r2 = (float) r2
            float r3 = r8.top
            float r13 = r9.scale
            float r3 = r3 * r13
            float r2 = r2 + r3
            r0.setTranslationY(r2)
            r0 = r4[r1]
            r0.setLayoutParams(r10)
            int r1 = r1 + 1
            r0 = 0
            r2 = 1065353216(0x3var_, float:1.0)
            r13 = 1
            goto L_0x031b
        L_0x036e:
            android.widget.FrameLayout r0 = r12.windowView
            android.view.ViewTreeObserver r0 = r0.getViewTreeObserver()
            org.telegram.ui.PhotoViewer$69 r13 = new org.telegram.ui.PhotoViewer$69
            r1 = r13
            r2 = r25
            r3 = r4
            r18 = r4
            r4 = r10
            r19 = r5
            r5 = r7
            r20 = r6
            r6 = r9
            r21 = r7
            r7 = r20
            r22 = r8
            r8 = r41
            r23 = r9
            r9 = r32
            r24 = r10
            r10 = r42
            r11 = r34
            r1.<init>(r3, r4, r5, r6, r7, r8, r9, r10, r11)
            r0.addOnPreDrawListener(r13)
            r2 = r42
            goto L_0x0401
        L_0x039e:
            r17 = r4
            r23 = r5
            r10 = 0
            if (r32 == 0) goto L_0x03b7
            int r0 = r12.sendPhotoType
            r1 = 3
            if (r0 == r1) goto L_0x03b7
            org.telegram.ui.PhotoViewer$PhotoViewerProvider r0 = r12.placeProvider
            if (r0 == 0) goto L_0x03b4
            boolean r0 = r0.closeKeyboard()
            if (r0 != 0) goto L_0x03b7
        L_0x03b4:
            r25.makeFocusable()
        L_0x03b7:
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r0 = r12.containerView
            r1 = 1065353216(0x3var_, float:1.0)
            r0.setAlpha(r1)
            r1 = r25
            r2 = r26
            r3 = r27
            r4 = r28
            r5 = r29
            r6 = r30
            r7 = r31
            r8 = r32
            r9 = r33
            r11 = 0
            r10 = r23
            r1.onPhotoShow(r2, r3, r4, r5, r6, r7, r8, r9, r10)
            r25.initCropView()
            r25.setCropBitmap()
            org.telegram.ui.ChatActivity r0 = r12.parentChatActivity
            if (r0 == 0) goto L_0x03f1
            org.telegram.ui.Components.UndoView r0 = r0.getUndoView()
            r1 = 1
            r0.hide(r11, r1)
            org.telegram.ui.ChatActivity r0 = r12.parentChatActivity
            android.view.View r0 = r0.getFragmentView()
            r0.invalidate()
        L_0x03f1:
            android.widget.FrameLayout r0 = r12.windowView
            android.view.ViewTreeObserver r0 = r0.getViewTreeObserver()
            org.telegram.ui.PhotoViewer$70 r1 = new org.telegram.ui.PhotoViewer$70
            r2 = r42
            r1.<init>(r2, r15)
            r0.addOnPreDrawListener(r1)
        L_0x0401:
            android.app.Activity r0 = r12.parentActivity
            java.lang.String r1 = "accessibility"
            java.lang.Object r0 = r0.getSystemService(r1)
            android.view.accessibility.AccessibilityManager r0 = (android.view.accessibility.AccessibilityManager) r0
            boolean r1 = r0.isTouchExplorationEnabled()
            if (r1 == 0) goto L_0x042d
            android.view.accessibility.AccessibilityEvent r1 = android.view.accessibility.AccessibilityEvent.obtain()
            r3 = 16384(0x4000, float:2.2959E-41)
            r1.setEventType(r3)
            java.util.List r3 = r1.getText()
            r4 = 2131624039(0x7f0e0067, float:1.8875246E38)
            java.lang.String r5 = "AccDescrPhotoViewer"
            java.lang.String r4 = org.telegram.messenger.LocaleController.getString(r5, r4)
            r3.add(r4)
            r0.sendAccessibilityEvent(r1)
        L_0x042d:
            r1 = 1
            return r1
        L_0x042f:
            r0 = move-exception
            r17 = r4
            r23 = r5
            r2 = r9
            r11 = 0
        L_0x0436:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
            return r11
        L_0x043a:
            r2 = r9
            r11 = 0
        L_0x043c:
            return r11
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.openPhoto(org.telegram.messenger.MessageObject, org.telegram.tgnet.TLRPC$FileLocation, org.telegram.messenger.ImageLocation, org.telegram.messenger.ImageLocation, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, int, org.telegram.ui.PhotoViewer$PhotoViewerProvider, org.telegram.ui.ChatActivity, long, long, boolean, org.telegram.ui.PhotoViewer$PageBlocksAdapter, java.lang.Integer):boolean");
    }

    /* access modifiers changed from: private */
    public void initEmbedVideo(int embedSeekTime) {
        if (this.isEmbedVideo) {
            AnonymousClass71 r0 = new PhotoViewerWebView(this.parentActivity, this.pipItem) {
                Rect rect = new Rect();

                /* access modifiers changed from: protected */
                public void drawBlackBackground(Canvas canvas, int w, int h) {
                    Bitmap bitmap = PhotoViewer.this.centerImage.getBitmap();
                    if (bitmap != null) {
                        float minScale = Math.min(((float) w) / ((float) bitmap.getWidth()), ((float) h) / ((float) bitmap.getHeight()));
                        int width = (int) (((float) bitmap.getWidth()) * minScale);
                        int height = (int) (((float) bitmap.getHeight()) * minScale);
                        int top = (h - height) / 2;
                        int left = (w - width) / 2;
                        this.rect.set(left, top, left + width, top + height);
                        canvas.drawBitmap(bitmap, (Rect) null, this.rect, (Paint) null);
                    }
                }

                /* access modifiers changed from: protected */
                public void processTouch(MotionEvent event) {
                    PhotoViewer.this.gestureDetector.onTouchEvent(event);
                }
            };
            this.photoViewerWebView = r0;
            r0.init(embedSeekTime, this.currentMessageObject.messageOwner.media.webpage);
            this.photoViewerWebView.setPlaybackSpeed(this.currentVideoSpeed);
            this.containerView.addView(this.photoViewerWebView, 0, LayoutHelper.createFrame(-1, -1.0f));
        }
    }

    /* access modifiers changed from: private */
    public void makeFocusable() {
        if (Build.VERSION.SDK_INT >= 21) {
            this.windowLayoutParams.flags = -NUM;
        } else {
            this.windowLayoutParams.flags = 0;
        }
        this.windowLayoutParams.softInputMode = (this.useSmoothKeyboard ? 32 : 16) | 256;
        try {
            ((WindowManager) this.parentActivity.getSystemService("window")).updateViewLayout(this.windowView, this.windowLayoutParams);
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
        this.windowView.setFocusable(true);
        this.containerView.setFocusable(true);
    }

    private void requestAdjustToNothing() {
        this.windowLayoutParams.softInputMode = 48;
        try {
            ((WindowManager) this.parentActivity.getSystemService("window")).updateViewLayout(this.windowView, this.windowLayoutParams);
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    /* access modifiers changed from: private */
    public void requestAdjust() {
        this.windowLayoutParams.softInputMode = (this.useSmoothKeyboard ? 32 : 16) | 256;
        try {
            ((WindowManager) this.parentActivity.getSystemService("window")).updateViewLayout(this.windowView, this.windowLayoutParams);
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    public void injectVideoPlayerToMediaController() {
        if (this.videoPlayer.isPlaying()) {
            if (this.playerLooping) {
                this.videoPlayer.setLooping(false);
            }
            MediaController.getInstance().injectVideoPlayer(this.videoPlayer, this.currentMessageObject);
            this.videoPlayer = null;
        }
    }

    public void closePhoto(boolean animated, boolean fromEditMode) {
        float statusBarHeight;
        float yPos;
        AnimatedFileDrawable animation;
        Bitmap bitmap;
        int i;
        int i2;
        if (fromEditMode || (i2 = this.currentEditMode) == 0) {
            QualityChooseView qualityChooseView2 = this.qualityChooseView;
            if (qualityChooseView2 == null || qualityChooseView2.getTag() == null) {
                this.openedFullScreenVideo = false;
                try {
                    AlertDialog alertDialog = this.visibleDialog;
                    if (alertDialog != null) {
                        alertDialog.dismiss();
                        this.visibleDialog = null;
                    }
                } catch (Exception e) {
                    FileLog.e((Throwable) e);
                }
                if (Build.VERSION.SDK_INT >= 21 && this.containerView != null) {
                    AndroidUtilities.cancelRunOnUIThread(this.updateContainerFlagsRunnable);
                    updateContainerFlags(true);
                }
                int i3 = this.currentEditMode;
                if (i3 != 0) {
                    if (i3 == 2) {
                        this.photoFilterView.shutdown();
                        this.containerView.removeView(this.photoFilterView);
                        this.photoFilterView = null;
                    } else if (i3 == 1) {
                        this.editorDoneLayout.setVisibility(8);
                        this.photoCropView.setVisibility(8);
                    } else if (i3 == 3) {
                        this.photoPaintView.shutdown();
                        this.containerView.removeView(this.photoPaintView);
                        this.photoPaintView = null;
                        this.savedState = null;
                    }
                    this.currentEditMode = 0;
                }
                View view = this.navigationBar;
                if (view != null) {
                    view.setVisibility(0);
                }
                FrameLayout frameLayout = this.windowView;
                if (frameLayout != null) {
                    frameLayout.setClipChildren(false);
                }
                if (this.parentActivity == null) {
                    return;
                }
                if ((!this.isInline && !this.isVisible) || checkAnimation() || this.placeProvider == null) {
                    return;
                }
                if (!this.captionEditText.hideActionMode() || fromEditMode) {
                    Activity activity = this.parentActivity;
                    if (!(activity == null || this.fullscreenedByButton == 0)) {
                        activity.setRequestedOrientation(this.prevOrientation);
                        this.fullscreenedByButton = 0;
                        this.wasRotated = false;
                    }
                    if (!this.doneButtonPressed && !this.imagesArrLocals.isEmpty() && (i = this.currentIndex) >= 0 && i < this.imagesArrLocals.size()) {
                        Object entry = this.imagesArrLocals.get(this.currentIndex);
                        if (entry instanceof MediaController.MediaEditState) {
                            ((MediaController.MediaEditState) entry).editedInfo = getCurrentVideoEditedInfo();
                        }
                    }
                    PlaceProviderObject object = this.placeProvider.getPlaceForPhoto(this.currentMessageObject, getFileLocation(this.currentFileLocation), this.currentIndex, true);
                    if (!(this.videoPlayer == null || object == null || (animation = object.imageReceiver.getAnimation()) == null)) {
                        if (this.textureUploaded && (bitmap = animation.getAnimatedBitmap()) != null) {
                            try {
                                Bitmap src = this.videoTextureView.getBitmap(bitmap.getWidth(), bitmap.getHeight());
                                new Canvas(bitmap).drawBitmap(src, 0.0f, 0.0f, (Paint) null);
                                src.recycle();
                            } catch (Throwable e2) {
                                FileLog.e(e2);
                            }
                        }
                        if (this.currentMessageObject != null) {
                            long startTime2 = animation.getStartTime();
                            long currentPosition = this.videoPlayer.getCurrentPosition();
                            long j = 0;
                            if (startTime2 > 0) {
                                j = startTime2;
                            }
                            animation.seekTo(currentPosition + j, !FileLoader.getInstance(this.currentMessageObject.currentAccount).isLoadingVideo(this.currentMessageObject.getDocument(), true));
                        }
                        object.imageReceiver.setAllowStartAnimation(true);
                        object.imageReceiver.startAnimation();
                    }
                    if (!this.doneButtonPressed) {
                        releasePlayer(true);
                    }
                    PhotoViewerWebView photoViewerWebView2 = this.photoViewerWebView;
                    if (photoViewerWebView2 != null) {
                        photoViewerWebView2.release();
                        this.containerView.removeView(this.photoViewerWebView);
                        this.photoViewerWebView = null;
                    }
                    this.captionEditText.onDestroy();
                    ChatActivity chatActivity = this.parentChatActivity;
                    if (!(chatActivity == null || chatActivity.getFragmentView() == null)) {
                        this.parentChatActivity.getFragmentView().invalidate();
                    }
                    this.parentChatActivity = null;
                    removeObservers();
                    this.isActionBarVisible = false;
                    VelocityTracker velocityTracker2 = this.velocityTracker;
                    if (velocityTracker2 != null) {
                        velocityTracker2.recycle();
                        this.velocityTracker = null;
                    }
                    if (this.isInline) {
                        this.isInline = false;
                        this.animationInProgress = 0;
                        onPhotoClosed(object);
                        this.containerView.setScaleX(1.0f);
                        this.containerView.setScaleY(1.0f);
                        return;
                    }
                    if (animated) {
                        ClippingImageView[] animatingImageViews = getAnimatingImageViews(object);
                        for (int i4 = 0; i4 < animatingImageViews.length; i4++) {
                            animatingImageViews[i4].setAnimationValues(this.animationValues);
                            animatingImageViews[i4].setVisibility(0);
                        }
                        this.animationInProgress = 3;
                        this.containerView.invalidate();
                        AnimatorSet animatorSet = new AnimatorSet();
                        ViewGroup.LayoutParams layoutParams = this.animatingImageView.getLayoutParams();
                        RectF drawRegion = null;
                        if (object != null) {
                            drawRegion = object.imageReceiver.getDrawRegion();
                            layoutParams.width = (int) drawRegion.width();
                            layoutParams.height = (int) drawRegion.height();
                            int orientation = object.imageReceiver.getOrientation();
                            int animatedOrientation = object.imageReceiver.getAnimatedOrientation();
                            if (animatedOrientation != 0) {
                                orientation = animatedOrientation;
                            }
                            for (int i5 = 0; i5 < animatingImageViews.length; i5++) {
                                animatingImageViews[i5].setOrientation(orientation);
                                animatingImageViews[i5].setImageBitmap(object.thumb);
                            }
                        } else {
                            layoutParams.width = (int) this.centerImage.getImageWidth();
                            layoutParams.height = (int) this.centerImage.getImageHeight();
                            for (int i6 = 0; i6 < animatingImageViews.length; i6++) {
                                animatingImageViews[i6].setOrientation(this.centerImage.getOrientation());
                                animatingImageViews[i6].setImageBitmap(this.centerImage.getBitmapSafe());
                            }
                        }
                        if (layoutParams.width <= 0) {
                            layoutParams.width = 100;
                        }
                        if (layoutParams.height <= 0) {
                            layoutParams.height = 100;
                        }
                        if (this.sendPhotoType == 1) {
                            float minSide = Math.min((float) this.photoCropView.getMeasuredWidth(), (((float) this.photoCropView.getMeasuredHeight()) - ((float) AndroidUtilities.dp(64.0f))) - ((float) (isStatusBarVisible() ? AndroidUtilities.statusBarHeight : 0))) - ((float) (AndroidUtilities.dp(16.0f) * 2));
                            statusBarHeight = Math.max(minSide / ((float) layoutParams.width), minSide / ((float) layoutParams.height));
                        } else {
                            statusBarHeight = Math.min(((float) this.windowView.getMeasuredWidth()) / ((float) layoutParams.width), ((float) (AndroidUtilities.displaySize.y + (isStatusBarVisible() ? AndroidUtilities.statusBarHeight : 0))) / ((float) layoutParams.height));
                        }
                        float width = ((float) layoutParams.width) * this.scale * statusBarHeight;
                        float height = ((float) layoutParams.height) * this.scale * statusBarHeight;
                        float xPos = (((float) this.windowView.getMeasuredWidth()) - width) / 2.0f;
                        if (this.sendPhotoType == 1) {
                            yPos = ((((float) this.photoCropView.getMeasuredHeight()) - ((float) (isStatusBarVisible() ? AndroidUtilities.statusBarHeight : 0))) - height) / 2.0f;
                        } else {
                            yPos = (((float) (AndroidUtilities.displaySize.y + (isStatusBarVisible() ? AndroidUtilities.statusBarHeight : 0))) - height) / 2.0f;
                        }
                        for (int i7 = 0; i7 < animatingImageViews.length; i7++) {
                            animatingImageViews[i7].setLayoutParams(layoutParams);
                            animatingImageViews[i7].setTranslationX(this.translationX + xPos);
                            animatingImageViews[i7].setTranslationY(yPos + this.translationY);
                            animatingImageViews[i7].setScaleX(this.scale * statusBarHeight);
                            animatingImageViews[i7].setScaleY(this.scale * statusBarHeight);
                        }
                        if (object != null) {
                            object.imageReceiver.setVisible(false, true);
                            int clipHorizontal = (int) Math.abs(drawRegion.left - object.imageReceiver.getImageX());
                            int clipVertical = (int) Math.abs(drawRegion.top - object.imageReceiver.getImageY());
                            if (this.pageBlocksAdapter != null && object.imageReceiver.isAspectFit()) {
                                clipHorizontal = 0;
                            }
                            int[] coords2 = new int[2];
                            object.parentView.getLocationInWindow(coords2);
                            float f = xPos;
                            ViewGroup.LayoutParams layoutParams2 = layoutParams;
                            int clipTop = (int) ((((float) (coords2[1] - (Build.VERSION.SDK_INT >= 21 ? 0 : AndroidUtilities.statusBarHeight))) - (((float) object.viewY) + drawRegion.top)) + ((float) object.clipTopAddition));
                            if (clipTop < 0) {
                                clipTop = 0;
                            }
                            float f2 = statusBarHeight;
                            int[] iArr = coords2;
                            int clipBottom = (int) ((((((float) object.viewY) + drawRegion.top) + (drawRegion.bottom - drawRegion.top)) - ((float) ((coords2[1] + object.parentView.getHeight()) - (Build.VERSION.SDK_INT >= 21 ? 0 : AndroidUtilities.statusBarHeight)))) + ((float) object.clipBottomAddition));
                            if (clipBottom < 0) {
                                clipBottom = 0;
                            }
                            int clipTop2 = Math.max(clipTop, clipVertical);
                            int clipBottom2 = Math.max(clipBottom, clipVertical);
                            this.animationValues[0][0] = this.animatingImageView.getScaleX();
                            this.animationValues[0][1] = this.animatingImageView.getScaleY();
                            this.animationValues[0][2] = this.animatingImageView.getTranslationX();
                            this.animationValues[0][3] = this.animatingImageView.getTranslationY();
                            float[][] fArr = this.animationValues;
                            fArr[0][4] = 0.0f;
                            fArr[0][5] = 0.0f;
                            fArr[0][6] = 0.0f;
                            fArr[0][7] = 0.0f;
                            fArr[0][8] = 0.0f;
                            fArr[0][9] = 0.0f;
                            fArr[0][10] = 0.0f;
                            fArr[0][11] = 0.0f;
                            fArr[0][12] = 0.0f;
                            fArr[1][0] = object.scale;
                            this.animationValues[1][1] = object.scale;
                            float f3 = width;
                            this.animationValues[1][2] = ((float) object.viewX) + (drawRegion.left * object.scale);
                            this.animationValues[1][3] = ((float) object.viewY) + (drawRegion.top * object.scale);
                            this.animationValues[1][4] = ((float) clipHorizontal) * object.scale;
                            this.animationValues[1][5] = ((float) clipTop2) * object.scale;
                            this.animationValues[1][6] = ((float) clipBottom2) * object.scale;
                            for (int a = 0; a < 4; a++) {
                                this.animationValues[1][a + 7] = object.radius != null ? (float) object.radius[a] : 0.0f;
                            }
                            this.animationValues[1][11] = ((float) clipVertical) * object.scale;
                            this.animationValues[1][12] = ((float) clipHorizontal) * object.scale;
                            ArrayList<Animator> animators = new ArrayList<>((this.sendPhotoType == 1 ? 3 : 2) + animatingImageViews.length + (animatingImageViews.length > 1 ? 1 : 0));
                            int i8 = 0;
                            while (i8 < animatingImageViews.length) {
                                animators.add(ObjectAnimator.ofFloat(animatingImageViews[i8], AnimationProperties.CLIPPING_IMAGE_VIEW_PROGRESS, new float[]{0.0f, 1.0f}));
                                i8++;
                                clipTop2 = clipTop2;
                                clipHorizontal = clipHorizontal;
                            }
                            int i9 = clipHorizontal;
                            if (animatingImageViews.length > 1) {
                                animators.add(ObjectAnimator.ofFloat(this.animatingImageView, View.ALPHA, new float[]{0.0f}));
                                animatingImageViews[1].setAdditionalTranslationX((float) (-getLeftInset()));
                            }
                            animators.add(ObjectAnimator.ofInt(this.backgroundDrawable, AnimationProperties.COLOR_DRAWABLE_ALPHA, new int[]{0}));
                            animators.add(ObjectAnimator.ofFloat(this.containerView, View.ALPHA, new float[]{0.0f}));
                            animators.add(ObjectAnimator.ofFloat(this.navigationBar, View.ALPHA, new float[]{0.0f}));
                            if (this.sendPhotoType == 1) {
                                animators.add(ObjectAnimator.ofFloat(this.photoCropView, View.ALPHA, new float[]{0.0f}));
                            }
                            animatorSet.playTogether(animators);
                        } else {
                            ViewGroup.LayoutParams layoutParams3 = layoutParams;
                            float f4 = statusBarHeight;
                            float f5 = width;
                            int h = AndroidUtilities.displaySize.y + (isStatusBarVisible() ? AndroidUtilities.statusBarHeight : 0);
                            Animator[] animatorArr = new Animator[5];
                            animatorArr[0] = ObjectAnimator.ofInt(this.backgroundDrawable, AnimationProperties.COLOR_DRAWABLE_ALPHA, new int[]{0});
                            animatorArr[1] = ObjectAnimator.ofFloat(this.animatingImageView, View.ALPHA, new float[]{0.0f});
                            ClippingImageView clippingImageView = this.animatingImageView;
                            Property property = View.TRANSLATION_Y;
                            float[] fArr2 = new float[1];
                            fArr2[0] = this.translationY >= 0.0f ? (float) h : (float) (-h);
                            animatorArr[2] = ObjectAnimator.ofFloat(clippingImageView, property, fArr2);
                            animatorArr[3] = ObjectAnimator.ofFloat(this.containerView, View.ALPHA, new float[]{0.0f});
                            animatorArr[4] = ObjectAnimator.ofFloat(this.navigationBar, View.ALPHA, new float[]{0.0f});
                            animatorSet.playTogether(animatorArr);
                        }
                        this.animationEndRunnable = new PhotoViewer$$ExternalSyntheticLambda60(this, object);
                        animatorSet.setDuration(200);
                        animatorSet.addListener(new AnimatorListenerAdapter() {
                            public void onAnimationEnd(Animator animation) {
                                AndroidUtilities.runOnUIThread(new PhotoViewer$72$$ExternalSyntheticLambda0(this));
                            }

                            /* renamed from: lambda$onAnimationEnd$0$org-telegram-ui-PhotoViewer$72  reason: not valid java name */
                            public /* synthetic */ void m4332lambda$onAnimationEnd$0$orgtelegramuiPhotoViewer$72() {
                                if (PhotoViewer.this.animationEndRunnable != null) {
                                    PhotoViewer.this.animationEndRunnable.run();
                                    Runnable unused = PhotoViewer.this.animationEndRunnable = null;
                                }
                            }
                        });
                        this.transitionAnimationStartTime = System.currentTimeMillis();
                        if (Build.VERSION.SDK_INT >= 18) {
                            this.containerView.setLayerType(2, (Paint) null);
                        }
                        animatorSet.start();
                    } else {
                        AnimatorSet animatorSet2 = new AnimatorSet();
                        animatorSet2.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.containerView, View.SCALE_X, new float[]{0.9f}), ObjectAnimator.ofFloat(this.containerView, View.SCALE_Y, new float[]{0.9f}), ObjectAnimator.ofInt(this.backgroundDrawable, AnimationProperties.COLOR_DRAWABLE_ALPHA, new int[]{0}), ObjectAnimator.ofFloat(this.containerView, View.ALPHA, new float[]{0.0f}), ObjectAnimator.ofFloat(this.navigationBar, View.ALPHA, new float[]{0.0f})});
                        this.animationInProgress = 2;
                        this.animationEndRunnable = new PhotoViewer$$ExternalSyntheticLambda61(this, object);
                        animatorSet2.setDuration(200);
                        animatorSet2.addListener(new AnimatorListenerAdapter() {
                            /* JADX WARNING: type inference failed for: r1v9, types: [org.telegram.ui.ActionBar.BaseFragment] */
                            /* JADX WARNING: Multi-variable type inference failed */
                            /* JADX WARNING: Unknown variable types count: 1 */
                            /* Code decompiled incorrectly, please refer to instructions dump. */
                            public void onAnimationEnd(android.animation.Animator r4) {
                                /*
                                    r3 = this;
                                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                                    java.lang.Runnable r0 = r0.animationEndRunnable
                                    if (r0 == 0) goto L_0x0044
                                    org.telegram.ui.PhotoViewer r0 = org.telegram.ui.PhotoViewer.this
                                    org.telegram.ui.ChatActivity r0 = r0.parentChatActivity
                                    if (r0 != 0) goto L_0x0029
                                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                                    org.telegram.ui.Components.ChatAttachAlert r1 = r1.parentAlert
                                    if (r1 == 0) goto L_0x0029
                                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                                    org.telegram.ui.Components.ChatAttachAlert r1 = r1.parentAlert
                                    org.telegram.ui.ActionBar.BaseFragment r1 = r1.getBaseFragment()
                                    boolean r2 = r1 instanceof org.telegram.ui.ChatActivity
                                    if (r2 == 0) goto L_0x0029
                                    r0 = r1
                                    org.telegram.ui.ChatActivity r0 = (org.telegram.ui.ChatActivity) r0
                                L_0x0029:
                                    if (r0 == 0) goto L_0x0035
                                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                                    java.lang.Runnable r1 = r1.animationEndRunnable
                                    r0.m3048x4c8be4fe(r1)
                                    goto L_0x0044
                                L_0x0035:
                                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                                    java.lang.Runnable r1 = r1.animationEndRunnable
                                    r1.run()
                                    org.telegram.ui.PhotoViewer r1 = org.telegram.ui.PhotoViewer.this
                                    r2 = 0
                                    java.lang.Runnable unused = r1.animationEndRunnable = r2
                                L_0x0044:
                                    return
                                */
                                throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.AnonymousClass73.onAnimationEnd(android.animation.Animator):void");
                            }
                        });
                        this.transitionAnimationStartTime = System.currentTimeMillis();
                        if (Build.VERSION.SDK_INT >= 18) {
                            this.containerView.setLayerType(2, (Paint) null);
                        }
                        animatorSet2.start();
                    }
                    AnimatedFileDrawable animatedFileDrawable = this.currentAnimation;
                    if (animatedFileDrawable != null) {
                        animatedFileDrawable.removeSecondParentView(this.containerView);
                        this.currentAnimation = null;
                        this.centerImage.setImageBitmap((Drawable) null);
                    }
                    PhotoViewerProvider photoViewerProvider = this.placeProvider;
                    if (photoViewerProvider != null && !photoViewerProvider.canScrollAway()) {
                        this.placeProvider.cancelButtonPressed();
                        return;
                    }
                    return;
                }
                return;
            }
            this.qualityPicker.cancelButton.callOnClick();
        } else if (i2 != 3 || this.photoPaintView == null) {
            if (i2 == 1) {
                this.cropTransform.setViewTransform(this.previousHasTransform, this.previousCropPx, this.previousCropPy, this.previousCropRotation, this.previousCropOrientation, this.previousCropScale, 1.0f, 1.0f, this.previousCropPw, this.previousCropPh, 0.0f, 0.0f, this.previousCropMirrored);
            }
            switchToEditMode(0);
        } else {
            closePaintMode();
        }
    }

    /* renamed from: lambda$closePhoto$72$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4237lambda$closePhoto$72$orgtelegramuiPhotoViewer(PlaceProviderObject object) {
        this.animationEndRunnable = null;
        if (Build.VERSION.SDK_INT >= 18) {
            this.containerView.setLayerType(0, (Paint) null);
        }
        this.animationInProgress = 0;
        onPhotoClosed(object);
    }

    /* renamed from: lambda$closePhoto$73$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4238lambda$closePhoto$73$orgtelegramuiPhotoViewer(PlaceProviderObject object) {
        this.animationEndRunnable = null;
        if (this.containerView != null) {
            if (Build.VERSION.SDK_INT >= 18) {
                this.containerView.setLayerType(0, (Paint) null);
            }
            this.animationInProgress = 0;
            onPhotoClosed(object);
            this.containerView.setScaleX(1.0f);
            this.containerView.setScaleY(1.0f);
        }
    }

    private ClippingImageView[] getAnimatingImageViews(PlaceProviderObject object) {
        boolean hasSecondAnimatingImageView = (AndroidUtilities.isTablet() || object == null || object.animatingImageView == null) ? false : true;
        ClippingImageView[] animatingImageViews = new ClippingImageView[((hasSecondAnimatingImageView ? 1 : 0) + 1)];
        animatingImageViews[0] = this.animatingImageView;
        if (hasSecondAnimatingImageView) {
            animatingImageViews[1] = object.animatingImageView;
            object.animatingImageView.setAdditionalTranslationY((float) object.animatingImageViewYOffset);
        }
        return animatingImageViews;
    }

    private void removeObservers() {
        NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.fileLoadFailed);
        NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.fileLoaded);
        NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.fileLoadProgressChanged);
        NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.mediaCountDidLoad);
        NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.mediaDidLoad);
        NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.dialogPhotosLoaded);
        NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.messagesDeleted);
        NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.emojiLoaded);
        NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.filePreparingFailed);
        NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.fileNewChunkAvailable);
        ConnectionsManager.getInstance(this.currentAccount).cancelRequestsForGuid(this.classGuid);
    }

    public void destroyPhotoViewer() {
        if (this.parentActivity != null && this.windowView != null) {
            if (PipVideoOverlay.isVisible()) {
                PipVideoOverlay.dismiss();
            }
            removeObservers();
            releasePlayer(false);
            try {
                if (this.windowView.getParent() != null) {
                    ((WindowManager) this.parentActivity.getSystemService("window")).removeViewImmediate(this.windowView);
                    onHideView();
                }
                this.windowView = null;
            } catch (Exception e) {
                FileLog.e((Throwable) e);
            }
            ImageReceiver.BitmapHolder bitmapHolder = this.currentThumb;
            if (bitmapHolder != null) {
                bitmapHolder.release();
                this.currentThumb = null;
            }
            this.animatingImageView.setImageBitmap((ImageReceiver.BitmapHolder) null);
            PhotoViewerCaptionEnterView photoViewerCaptionEnterView = this.captionEditText;
            if (photoViewerCaptionEnterView != null) {
                photoViewerCaptionEnterView.onDestroy();
            }
            if (this == PipInstance) {
                PipInstance = null;
            } else {
                Instance = null;
            }
            onHideView();
        }
    }

    private void onPhotoClosed(PlaceProviderObject object) {
        if (this.doneButtonPressed) {
            releasePlayer(true);
        }
        this.isVisible = false;
        this.cropInitied = false;
        this.disableShowCheck = true;
        this.currentMessageObject = null;
        this.currentBotInlineResult = null;
        this.currentFileLocation = null;
        this.currentFileLocationVideo = null;
        this.currentSecureDocument = null;
        this.currentPageBlock = null;
        this.currentPathObject = null;
        if (this.videoPlayerControlFrameLayout != null) {
            setVideoPlayerControlVisible(false, false);
        }
        CaptionScrollView captionScrollView2 = this.captionScrollView;
        if (captionScrollView2 != null) {
            captionScrollView2.reset();
        }
        this.sendPhotoType = 0;
        this.isDocumentsPicker = false;
        ImageReceiver.BitmapHolder bitmapHolder = this.currentThumb;
        if (bitmapHolder != null) {
            bitmapHolder.release();
            this.currentThumb = null;
        }
        this.parentAlert = null;
        AnimatedFileDrawable animatedFileDrawable = this.currentAnimation;
        if (animatedFileDrawable != null) {
            animatedFileDrawable.removeSecondParentView(this.containerView);
            this.currentAnimation = null;
        }
        for (int a = 0; a < 3; a++) {
            PhotoProgressView[] photoProgressViewArr = this.photoProgressViews;
            if (photoProgressViewArr[a] != null) {
                photoProgressViewArr[a].setBackgroundState(-1, false, true);
            }
        }
        requestVideoPreview(0);
        VideoTimelinePlayView videoTimelinePlayView = this.videoTimelineView;
        if (videoTimelinePlayView != null) {
            videoTimelinePlayView.setBackgroundColor(NUM);
            this.videoTimelineView.destroy();
        }
        this.hintView.hide(false, 0);
        Bitmap bitmap = null;
        this.centerImage.setImageBitmap(bitmap);
        this.leftImage.setImageBitmap(bitmap);
        this.rightImage.setImageBitmap(bitmap);
        this.containerView.post(new PhotoViewer$$ExternalSyntheticLambda62(this, object));
        PhotoViewerProvider photoViewerProvider = this.placeProvider;
        if (photoViewerProvider != null) {
            photoViewerProvider.willHidePhotoViewer();
        }
        this.groupedPhotosListView.clear();
        PhotoViewerProvider photoViewerProvider2 = this.placeProvider;
        if (photoViewerProvider2 != null) {
            photoViewerProvider2.onClose();
        }
        this.placeProvider = null;
        this.selectedPhotosAdapter.notifyDataSetChanged();
        this.pageBlocksAdapter = null;
        this.disableShowCheck = false;
        this.shownControlsByEnd = false;
        this.videoCutStart = 0.0f;
        this.videoCutEnd = 1.0f;
        if (object != null) {
            object.imageReceiver.setVisible(true, true);
        }
        ChatActivity chatActivity = this.parentChatActivity;
        if (chatActivity != null) {
            chatActivity.getFragmentView().invalidate();
        }
        Bitmap bitmap2 = this.videoFrameBitmap;
        if (bitmap2 != null) {
            bitmap2.recycle();
            this.videoFrameBitmap = null;
        }
    }

    /* renamed from: lambda$onPhotoClosed$74$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4254lambda$onPhotoClosed$74$orgtelegramuiPhotoViewer(PlaceProviderObject object) {
        this.animatingImageView.setImageBitmap((ImageReceiver.BitmapHolder) null);
        if (!(object == null || AndroidUtilities.isTablet() || object.animatingImageView == null)) {
            object.animatingImageView.setImageBitmap((ImageReceiver.BitmapHolder) null);
        }
        try {
            if (this.windowView.getParent() != null) {
                ((WindowManager) this.parentActivity.getSystemService("window")).removeView(this.windowView);
                onHideView();
            }
        } catch (Exception e) {
            FileLog.e((Throwable) e);
        }
    }

    private void redraw(int count) {
        FrameLayoutDrawer frameLayoutDrawer;
        if (count < 6 && (frameLayoutDrawer = this.containerView) != null) {
            frameLayoutDrawer.invalidate();
            AndroidUtilities.runOnUIThread(new PhotoViewer$$ExternalSyntheticLambda52(this, count), 100);
        }
    }

    /* renamed from: lambda$redraw$75$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4256lambda$redraw$75$orgtelegramuiPhotoViewer(int count) {
        redraw(count + 1);
    }

    public void onResume() {
        redraw(0);
        VideoPlayer videoPlayer2 = this.videoPlayer;
        if (videoPlayer2 != null) {
            videoPlayer2.seekTo(videoPlayer2.getCurrentPosition() + 1);
            if (this.playerLooping) {
                this.videoPlayer.setLooping(true);
            }
        }
        PhotoPaintView photoPaintView2 = this.photoPaintView;
        if (photoPaintView2 != null) {
            photoPaintView2.onResume();
        }
    }

    public void onConfigurationChanged(Configuration newConfig) {
    }

    public void onPause() {
        if (this.currentAnimation != null) {
            closePhoto(false, false);
            return;
        }
        if (this.lastTitle != null) {
            closeCaptionEnter(true);
        }
        VideoPlayer videoPlayer2 = this.videoPlayer;
        if (videoPlayer2 != null && this.playerLooping) {
            videoPlayer2.setLooping(false);
        }
    }

    public boolean isVisible() {
        return this.isVisible && this.placeProvider != null;
    }

    /* access modifiers changed from: private */
    public void updateMinMax(float scale2) {
        AspectRatioFrameLayout aspectRatioFrameLayout2 = this.aspectRatioFrameLayout;
        if (aspectRatioFrameLayout2 != null && aspectRatioFrameLayout2.getVisibility() == 0 && this.textureUploaded) {
            scale2 *= Math.min(((float) getContainerViewWidth()) / ((float) this.videoTextureView.getMeasuredWidth()), ((float) getContainerViewHeight()) / ((float) this.videoTextureView.getMeasuredHeight()));
        }
        float w = this.centerImage.getImageWidth();
        float h = this.centerImage.getImageHeight();
        if (this.editState.cropState != null) {
            w *= this.editState.cropState.cropPw;
            h *= this.editState.cropState.cropPh;
        }
        int maxW = ((int) ((w * scale2) - ((float) getContainerViewWidth()))) / 2;
        int maxH = ((int) ((h * scale2) - ((float) getContainerViewHeight()))) / 2;
        if (maxW > 0) {
            this.minX = (float) (-maxW);
            this.maxX = (float) maxW;
        } else {
            this.maxX = 0.0f;
            this.minX = 0.0f;
        }
        if (maxH > 0) {
            this.minY = (float) (-maxH);
            this.maxY = (float) maxH;
            return;
        }
        this.maxY = 0.0f;
        this.minY = 0.0f;
    }

    private int getAdditionX() {
        int i = this.currentEditMode;
        if (i == 1 || (i == 0 && this.sendPhotoType == 1)) {
            return AndroidUtilities.dp(16.0f);
        }
        if (i == 0 || i == 3) {
            return 0;
        }
        return AndroidUtilities.dp(14.0f);
    }

    private int getAdditionY() {
        int i = this.currentEditMode;
        int i2 = 0;
        if (i == 1 || (i == 0 && this.sendPhotoType == 1)) {
            int dp = AndroidUtilities.dp(16.0f);
            if (isStatusBarVisible()) {
                i2 = AndroidUtilities.statusBarHeight;
            }
            return dp + i2;
        } else if (i == 3) {
            int dp2 = AndroidUtilities.dp(8.0f);
            if (isStatusBarVisible()) {
                i2 = AndroidUtilities.statusBarHeight;
            }
            return dp2 + i2;
        } else if (i == 0) {
            return 0;
        } else {
            int dp3 = AndroidUtilities.dp(14.0f);
            if (isStatusBarVisible()) {
                i2 = AndroidUtilities.statusBarHeight;
            }
            return dp3 + i2;
        }
    }

    /* access modifiers changed from: private */
    public int getContainerViewWidth() {
        return getContainerViewWidth(this.currentEditMode);
    }

    /* access modifiers changed from: private */
    public int getContainerViewWidth(int mode) {
        int width = this.containerView.getWidth();
        if (mode == 1 || (mode == 0 && this.sendPhotoType == 1)) {
            return width - AndroidUtilities.dp(32.0f);
        }
        if (mode == 0 || mode == 3) {
            return width;
        }
        return width - AndroidUtilities.dp(28.0f);
    }

    /* access modifiers changed from: private */
    public int getContainerViewHeight() {
        return getContainerViewHeight(this.currentEditMode);
    }

    /* access modifiers changed from: private */
    public int getContainerViewHeight(int mode) {
        return getContainerViewHeight(false, mode);
    }

    private int getContainerViewHeight(boolean trueHeight, int mode) {
        int height;
        if (trueHeight || this.inBubbleMode) {
            height = this.containerView.getMeasuredHeight();
        } else {
            height = AndroidUtilities.displaySize.y;
            if (mode == 0 && this.sendPhotoType != 1 && isStatusBarVisible()) {
                height += AndroidUtilities.statusBarHeight;
            }
        }
        if ((mode == 0 && this.sendPhotoType == 1) || mode == 1) {
            return height - AndroidUtilities.dp(144.0f);
        }
        if (mode == 2) {
            return height - AndroidUtilities.dp(214.0f);
        }
        if (mode == 3) {
            return height - (AndroidUtilities.dp(48.0f) + ActionBar.getCurrentActionBarHeight());
        }
        return height;
    }

    /* access modifiers changed from: private */
    public boolean onTouchEvent(MotionEvent ev) {
        MotionEvent motionEvent = ev;
        if (this.currentEditMode == 3 && this.animationStartTime != 0 && (ev.getActionMasked() == 0 || ev.getActionMasked() == 5)) {
            if (ev.getPointerCount() < 2) {
                return true;
            }
            cancelMoveZoomAnimation();
        }
        if (this.animationInProgress != 0 || this.animationStartTime != 0) {
            return false;
        }
        if (this.videoPlayerRewinder.rewindCount <= 0) {
            int i = this.currentEditMode;
            if (i == 2) {
                this.photoFilterView.onTouch(motionEvent);
                return true;
            } else if (i == 1 || (i != 3 && this.sendPhotoType == 1)) {
                return true;
            } else {
                if (this.captionEditText.isPopupShowing() || this.captionEditText.isKeyboardVisible()) {
                    if (ev.getAction() == 1) {
                        closeCaptionEnter(true);
                    }
                    return true;
                } else if (this.currentEditMode != 0 || this.sendPhotoType == 1 || ev.getPointerCount() != 1 || !this.gestureDetector.onTouchEvent(motionEvent) || !this.doubleTap) {
                    Tooltip tooltip2 = this.tooltip;
                    if (tooltip2 != null) {
                        tooltip2.hide();
                    }
                    if (ev.getActionMasked() == 0 || ev.getActionMasked() == 5) {
                        this.discardTap = false;
                        if (!this.scroller.isFinished()) {
                            this.scroller.abortAnimation();
                        }
                        if (!this.draggingDown && !this.changingPage) {
                            if (this.canZoom && ev.getPointerCount() == 2) {
                                if (this.paintViewTouched == 1) {
                                    MotionEvent event = MotionEvent.obtain(0, 0, 3, 0.0f, 0.0f, 0);
                                    this.photoPaintView.onTouch(event);
                                    event.recycle();
                                    this.paintViewTouched = 2;
                                }
                                this.pinchStartDistance = (float) Math.hypot((double) (motionEvent.getX(1) - motionEvent.getX(0)), (double) (motionEvent.getY(1) - motionEvent.getY(0)));
                                this.pinchStartScale = this.scale;
                                this.pinchCenterX = (motionEvent.getX(0) + motionEvent.getX(1)) / 2.0f;
                                float y = (motionEvent.getY(0) + motionEvent.getY(1)) / 2.0f;
                                this.pinchCenterY = y;
                                this.pinchStartX = this.translationX;
                                this.pinchStartY = this.translationY;
                                this.zooming = true;
                                this.moving = false;
                                if (this.currentEditMode == 3) {
                                    this.moveStartX = this.pinchCenterX;
                                    this.moveStartY = y;
                                    this.draggingDown = false;
                                    this.canDragDown = false;
                                }
                                hidePressedDrawables();
                                VelocityTracker velocityTracker2 = this.velocityTracker;
                                if (velocityTracker2 != null) {
                                    velocityTracker2.clear();
                                }
                            } else if (ev.getPointerCount() == 1) {
                                if (this.currentEditMode != 3) {
                                    this.moveStartX = ev.getX();
                                    float y2 = ev.getY();
                                    this.moveStartY = y2;
                                    this.dragY = y2;
                                    this.draggingDown = false;
                                    this.canDragDown = true;
                                    VelocityTracker velocityTracker3 = this.velocityTracker;
                                    if (velocityTracker3 != null) {
                                        velocityTracker3.clear();
                                    }
                                } else if (this.paintViewTouched == 0) {
                                    this.photoPaintView.getHitRect(this.hitRect);
                                    if (this.hitRect.contains((int) ev.getX(), (int) ev.getY())) {
                                        MotionEvent event2 = MotionEvent.obtain(ev);
                                        event2.offsetLocation(-this.photoPaintView.getX(), -this.photoPaintView.getY());
                                        this.photoPaintView.onTouch(event2);
                                        event2.recycle();
                                        this.paintViewTouched = 1;
                                    }
                                }
                            }
                        }
                        if (ev.getActionMasked() == 0) {
                            this.longPressX = ev.getX();
                            AndroidUtilities.runOnUIThread(this.longPressRunnable, 300);
                        } else {
                            AndroidUtilities.cancelRunOnUIThread(this.longPressRunnable);
                        }
                    } else if (ev.getActionMasked() == 2) {
                        if (this.canZoom && ev.getPointerCount() == 2 && !this.draggingDown && this.zooming && !this.changingPage) {
                            this.discardTap = true;
                            if (this.currentEditMode == 3) {
                                float newPinchCenterX = (motionEvent.getX(0) + motionEvent.getX(1)) / 2.0f;
                                float newPinchCenterY = (motionEvent.getY(0) + motionEvent.getY(1)) / 2.0f;
                                float moveDx = this.moveStartX - newPinchCenterX;
                                float moveDy = this.moveStartY - newPinchCenterY;
                                this.moveStartX = newPinchCenterX;
                                this.moveStartY = newPinchCenterY;
                                float f = this.translationX;
                                if (f < this.minX || f > this.maxX) {
                                    moveDx /= 3.0f;
                                }
                                float f2 = this.translationY;
                                if (f2 < this.minY || f2 > this.maxY) {
                                    moveDy /= 3.0f;
                                }
                                this.pinchStartX = ((this.pinchCenterX - ((float) (getContainerViewWidth() / 2))) - (((this.pinchCenterX - ((float) (getContainerViewWidth() / 2))) - this.translationX) / (this.scale / this.pinchStartScale))) - moveDx;
                                this.pinchStartY = ((this.pinchCenterY - ((float) (getContainerViewHeight() / 2))) - (((this.pinchCenterY - ((float) (getContainerViewHeight() / 2))) - this.translationY) / (this.scale / this.pinchStartScale))) - moveDy;
                                this.pinchCenterX = newPinchCenterX;
                                this.pinchCenterY = newPinchCenterY;
                            }
                            this.scale = (((float) Math.hypot((double) (motionEvent.getX(1) - motionEvent.getX(0)), (double) (motionEvent.getY(1) - motionEvent.getY(0)))) / this.pinchStartDistance) * this.pinchStartScale;
                            this.translationX = (this.pinchCenterX - ((float) (getContainerViewWidth() / 2))) - (((this.pinchCenterX - ((float) (getContainerViewWidth() / 2))) - this.pinchStartX) * (this.scale / this.pinchStartScale));
                            float containerViewHeight = this.pinchCenterY - ((float) (getContainerViewHeight() / 2));
                            float containerViewHeight2 = (this.pinchCenterY - ((float) (getContainerViewHeight() / 2))) - this.pinchStartY;
                            float f3 = this.scale;
                            this.translationY = containerViewHeight - (containerViewHeight2 * (f3 / this.pinchStartScale));
                            updateMinMax(f3);
                            this.containerView.invalidate();
                        } else if (ev.getPointerCount() == 1) {
                            if (this.paintViewTouched == 1) {
                                MotionEvent event3 = MotionEvent.obtain(ev);
                                event3.offsetLocation(-this.photoPaintView.getX(), -this.photoPaintView.getY());
                                this.photoPaintView.onTouch(event3);
                                event3.recycle();
                                return true;
                            }
                            VelocityTracker velocityTracker4 = this.velocityTracker;
                            if (velocityTracker4 != null) {
                                velocityTracker4.addMovement(motionEvent);
                            }
                            float dx = Math.abs(ev.getX() - this.moveStartX);
                            float dy = Math.abs(ev.getY() - this.dragY);
                            int i2 = this.touchSlop;
                            if (dx > ((float) i2) || dy > ((float) i2)) {
                                this.discardTap = true;
                                hidePressedDrawables();
                                AndroidUtilities.cancelRunOnUIThread(this.longPressRunnable);
                                QualityChooseView qualityChooseView2 = this.qualityChooseView;
                                if (qualityChooseView2 != null && qualityChooseView2.getVisibility() == 0) {
                                    return true;
                                }
                            }
                            if (this.placeProvider.canScrollAway() && this.currentEditMode == 0 && this.sendPhotoType != 1 && this.canDragDown && !this.draggingDown && this.scale == 1.0f && dy >= ((float) AndroidUtilities.dp(30.0f)) && dy / 2.0f > dx) {
                                this.draggingDown = true;
                                hidePressedDrawables();
                                this.moving = false;
                                this.dragY = ev.getY();
                                if (this.isActionBarVisible && this.containerView.getTag() != null) {
                                    toggleActionBar(false, true);
                                } else if (this.pickerView.getVisibility() == 0) {
                                    toggleActionBar(false, true);
                                    togglePhotosListView(false, true);
                                    toggleCheckImageView(false);
                                }
                                return true;
                            } else if (this.draggingDown) {
                                this.translationY = ev.getY() - this.dragY;
                                this.containerView.invalidate();
                            } else if (this.invalidCoords || this.animationStartTime != 0) {
                                this.invalidCoords = false;
                                this.moveStartX = ev.getX();
                                this.moveStartY = ev.getY();
                            } else {
                                float moveDx2 = this.moveStartX - ev.getX();
                                float moveDy2 = this.moveStartY - ev.getY();
                                if (this.moving || this.currentEditMode != 0 || ((this.scale == 1.0f && Math.abs(moveDy2) + ((float) AndroidUtilities.dp(12.0f)) < Math.abs(moveDx2)) || this.scale != 1.0f)) {
                                    if (!this.moving) {
                                        moveDx2 = 0.0f;
                                        moveDy2 = 0.0f;
                                        this.moving = true;
                                        this.canDragDown = false;
                                        hidePressedDrawables();
                                    }
                                    this.moveStartX = ev.getX();
                                    this.moveStartY = ev.getY();
                                    updateMinMax(this.scale);
                                    if ((this.translationX < this.minX && (this.currentEditMode != 0 || !this.rightImage.hasImageSet())) || (this.translationX > this.maxX && (this.currentEditMode != 0 || !this.leftImage.hasImageSet()))) {
                                        moveDx2 /= 3.0f;
                                    }
                                    float f4 = this.maxY;
                                    if (f4 == 0.0f) {
                                        float f5 = this.minY;
                                        if (f5 == 0.0f && this.currentEditMode == 0 && this.sendPhotoType != 1) {
                                            float f6 = this.translationY;
                                            if (f6 - moveDy2 < f5) {
                                                this.translationY = f5;
                                                moveDy2 = 0.0f;
                                            } else if (f6 - moveDy2 > f4) {
                                                this.translationY = f4;
                                                moveDy2 = 0.0f;
                                            }
                                            this.translationX -= moveDx2;
                                            if (!(this.scale == 1.0f && this.currentEditMode == 0)) {
                                                this.translationY -= moveDy2;
                                            }
                                            this.containerView.invalidate();
                                        }
                                    }
                                    float f7 = this.translationY;
                                    if (f7 < this.minY || f7 > f4) {
                                        moveDy2 /= 3.0f;
                                    }
                                    this.translationX -= moveDx2;
                                    this.translationY -= moveDy2;
                                    this.containerView.invalidate();
                                }
                            }
                        }
                    } else if (ev.getActionMasked() == 3 || ev.getActionMasked() == 1 || ev.getActionMasked() == 6) {
                        AndroidUtilities.cancelRunOnUIThread(this.longPressRunnable);
                        if (this.paintViewTouched == 1) {
                            if (this.photoPaintView != null) {
                                MotionEvent event4 = MotionEvent.obtain(ev);
                                event4.offsetLocation(-this.photoPaintView.getX(), -this.photoPaintView.getY());
                                this.photoPaintView.onTouch(event4);
                                event4.recycle();
                            }
                            this.paintViewTouched = 0;
                            return true;
                        }
                        this.paintViewTouched = 0;
                        if (this.zooming) {
                            this.invalidCoords = true;
                            float f8 = this.scale;
                            if (f8 < 1.0f) {
                                updateMinMax(1.0f);
                                animateTo(1.0f, 0.0f, 0.0f, true);
                            } else if (f8 > 3.0f) {
                                float atx = (this.pinchCenterX - ((float) (getContainerViewWidth() / 2))) - (((this.pinchCenterX - ((float) (getContainerViewWidth() / 2))) - this.pinchStartX) * (3.0f / this.pinchStartScale));
                                float aty = (this.pinchCenterY - ((float) (getContainerViewHeight() / 2))) - (((this.pinchCenterY - ((float) (getContainerViewHeight() / 2))) - this.pinchStartY) * (3.0f / this.pinchStartScale));
                                updateMinMax(3.0f);
                                if (atx < this.minX) {
                                    atx = this.minX;
                                } else if (atx > this.maxX) {
                                    atx = this.maxX;
                                }
                                if (aty < this.minY) {
                                    aty = this.minY;
                                } else if (aty > this.maxY) {
                                    aty = this.maxY;
                                }
                                animateTo(3.0f, atx, aty, true);
                            } else {
                                checkMinMax(true);
                                if (this.currentEditMode == 3) {
                                    float moveToX = this.translationX;
                                    float moveToY = this.translationY;
                                    updateMinMax(this.scale);
                                    float f9 = this.translationX;
                                    if (f9 < this.minX) {
                                        moveToX = this.minX;
                                    } else if (f9 > this.maxX) {
                                        moveToX = this.maxX;
                                    }
                                    float var_ = this.translationY;
                                    if (var_ < this.minY) {
                                        moveToY = this.minY;
                                    } else if (var_ > this.maxY) {
                                        moveToY = this.maxY;
                                    }
                                    animateTo(this.scale, moveToX, moveToY, false);
                                }
                            }
                            this.zooming = false;
                            this.moving = false;
                        } else if (this.draggingDown) {
                            if (Math.abs(this.dragY - ev.getY()) <= ((float) getContainerViewHeight()) / 6.0f) {
                                if (this.pickerView.getVisibility() == 0) {
                                    toggleActionBar(true, true);
                                    toggleCheckImageView(true);
                                }
                                animateTo(1.0f, 0.0f, 0.0f, false);
                            } else if (!enableSwipeToPiP() || this.dragY - ev.getY() <= 0.0f) {
                                closePhoto(true, false);
                            } else {
                                switchToPip(true);
                            }
                            this.draggingDown = false;
                        } else if (this.moving) {
                            float moveToX2 = this.translationX;
                            float moveToY2 = this.translationY;
                            updateMinMax(this.scale);
                            this.moving = false;
                            this.canDragDown = true;
                            float velocity = 0.0f;
                            VelocityTracker velocityTracker5 = this.velocityTracker;
                            if (velocityTracker5 != null && this.scale == 1.0f) {
                                velocityTracker5.computeCurrentVelocity(1000);
                                velocity = this.velocityTracker.getXVelocity();
                            }
                            if (this.currentEditMode == 0 && this.sendPhotoType != 1) {
                                if ((this.translationX < this.minX - ((float) (getContainerViewWidth() / 3)) || velocity < ((float) (-AndroidUtilities.dp(650.0f)))) && this.rightImage.hasImageSet()) {
                                    goToNext();
                                    return true;
                                } else if ((this.translationX > this.maxX + ((float) (getContainerViewWidth() / 3)) || velocity > ((float) AndroidUtilities.dp(650.0f))) && this.leftImage.hasImageSet()) {
                                    goToPrev();
                                    return true;
                                }
                            }
                            float var_ = this.translationX;
                            if (var_ < this.minX) {
                                moveToX2 = this.minX;
                            } else if (var_ > this.maxX) {
                                moveToX2 = this.maxX;
                            }
                            float var_ = this.translationY;
                            if (var_ < this.minY) {
                                moveToY2 = this.minY;
                            } else if (var_ > this.maxY) {
                                moveToY2 = this.maxY;
                            }
                            animateTo(this.scale, moveToX2, moveToY2, false);
                        }
                    }
                    return false;
                } else {
                    this.doubleTap = false;
                    this.moving = false;
                    this.zooming = false;
                    checkMinMax(false);
                    return true;
                }
            }
        } else if (ev.getAction() != 1 && ev.getAction() != 3) {
            return true;
        } else {
            this.videoPlayerRewinder.cancelRewind();
            return false;
        }
    }

    private void checkMinMax(boolean zoom) {
        float moveToX = this.translationX;
        float moveToY = this.translationY;
        updateMinMax(this.scale);
        float f = this.translationX;
        if (f < this.minX) {
            moveToX = this.minX;
        } else if (f > this.maxX) {
            moveToX = this.maxX;
        }
        float f2 = this.translationY;
        if (f2 < this.minY) {
            moveToY = this.minY;
        } else if (f2 > this.maxY) {
            moveToY = this.maxY;
        }
        animateTo(this.scale, moveToX, moveToY, zoom);
    }

    private void goToNext() {
        float extra = 0.0f;
        if (this.scale != 1.0f) {
            extra = ((((float) getContainerViewWidth()) - this.centerImage.getImageWidth()) / 2.0f) * this.scale;
        }
        this.switchImageAfterAnimation = 1;
        animateTo(this.scale, ((this.minX - ((float) getContainerViewWidth())) - extra) - ((float) (AndroidUtilities.dp(30.0f) / 2)), this.translationY, false);
    }

    private void goToPrev() {
        float extra = 0.0f;
        if (this.scale != 1.0f) {
            extra = ((((float) getContainerViewWidth()) - this.centerImage.getImageWidth()) / 2.0f) * this.scale;
        }
        this.switchImageAfterAnimation = 2;
        animateTo(this.scale, this.maxX + ((float) getContainerViewWidth()) + extra + ((float) (AndroidUtilities.dp(30.0f) / 2)), this.translationY, false);
    }

    private void cancelMoveZoomAnimation() {
        AnimatorSet animatorSet = this.imageMoveAnimation;
        if (animatorSet != null) {
            float f = this.scale;
            float f2 = this.animationValue;
            float ts = f + ((this.animateToScale - f) * f2);
            float f3 = this.translationX;
            float tx = f3 + ((this.animateToX - f3) * f2);
            float f4 = this.translationY;
            float ty = f4 + ((this.animateToY - f4) * f2);
            float f5 = this.rotate;
            animatorSet.cancel();
            this.scale = ts;
            this.translationX = tx;
            this.translationY = ty;
            this.animationStartTime = 0;
            this.rotate = f5 + ((this.animateToRotate - f5) * f2);
            updateMinMax(ts);
            this.zoomAnimation = false;
            this.containerView.invalidate();
        }
    }

    private void animateTo(float newScale, float newTx, float newTy, boolean isZoom) {
        animateTo(newScale, newTx, newTy, isZoom, 250);
    }

    private void animateTo(float newScale, float newTx, float newTy, boolean isZoom, int duration) {
        if (this.scale != newScale || this.translationX != newTx || this.translationY != newTy) {
            this.zoomAnimation = isZoom;
            this.animateToScale = newScale;
            this.animateToX = newTx;
            this.animateToY = newTy;
            this.animationStartTime = System.currentTimeMillis();
            AnimatorSet animatorSet = new AnimatorSet();
            this.imageMoveAnimation = animatorSet;
            animatorSet.playTogether(new Animator[]{ObjectAnimator.ofFloat(this, AnimationProperties.PHOTO_VIEWER_ANIMATION_VALUE, new float[]{0.0f, 1.0f})});
            this.imageMoveAnimation.setInterpolator(this.interpolator);
            this.imageMoveAnimation.setDuration((long) duration);
            this.imageMoveAnimation.addListener(new AnimatorListenerAdapter() {
                public void onAnimationEnd(Animator animation) {
                    AnimatorSet unused = PhotoViewer.this.imageMoveAnimation = null;
                    PhotoViewer.this.containerView.invalidate();
                }
            });
            this.imageMoveAnimation.start();
        }
    }

    public void setAnimationValue(float value) {
        this.animationValue = value;
        this.containerView.invalidate();
    }

    public float getAnimationValue() {
        return this.animationValue;
    }

    private void switchToNextIndex(int add, boolean init) {
        if (this.currentMessageObject != null) {
            releasePlayer(false);
            FileLoader.getInstance(this.currentAccount).cancelLoadFile(this.currentMessageObject.getDocument());
        } else if (this.currentPageBlock != null) {
            TLObject media = this.pageBlocksAdapter.getMedia(this.currentIndex);
            if (media instanceof TLRPC.Document) {
                releasePlayer(false);
                FileLoader.getInstance(this.currentAccount).cancelLoadFile((TLRPC.Document) media);
            }
        }
        GroupedPhotosListView groupedPhotosListView2 = this.groupedPhotosListView;
        if (groupedPhotosListView2 != null) {
            groupedPhotosListView2.setAnimateBackground(true);
        }
        this.playerAutoStarted = false;
        setImageIndex(this.currentIndex + add, init, true);
        if (shouldMessageObjectAutoPlayed(this.currentMessageObject) || shouldIndexAutoPlayed(this.currentIndex)) {
            this.playerAutoStarted = true;
            onActionClick(true);
            checkProgress(0, false, true);
        }
        checkFullscreenButton();
    }

    /* access modifiers changed from: private */
    public boolean shouldMessageObjectAutoPlayed(MessageObject messageObject) {
        return messageObject != null && messageObject.isVideo() && (messageObject.mediaExists || messageObject.attachPathExists || (messageObject.canStreamVideo() && SharedConfig.streamMedia)) && SharedConfig.autoplayVideo;
    }

    private boolean shouldIndexAutoPlayed(int index) {
        File mediaFile;
        PageBlocksAdapter pageBlocksAdapter2 = this.pageBlocksAdapter;
        if (pageBlocksAdapter2 == null || !pageBlocksAdapter2.isVideo(index) || !SharedConfig.autoplayVideo || (mediaFile = this.pageBlocksAdapter.getFile(index)) == null || !mediaFile.exists()) {
            return false;
        }
        return true;
    }

    /* access modifiers changed from: private */
    public float getCropFillScale(boolean rotated) {
        ImageReceiver imageReceiver = this.centerImage;
        int width = rotated ? imageReceiver.getBitmapHeight() : imageReceiver.getBitmapWidth();
        ImageReceiver imageReceiver2 = this.centerImage;
        int height = rotated ? imageReceiver2.getBitmapWidth() : imageReceiver2.getBitmapHeight();
        float minSide = Math.min((float) this.photoCropView.getMeasuredWidth(), (((float) this.photoCropView.getMeasuredHeight()) - ((float) AndroidUtilities.dp(64.0f))) - ((float) (isStatusBarVisible() ? AndroidUtilities.statusBarHeight : 0))) - ((float) (AndroidUtilities.dp(16.0f) * 2));
        return Math.max(minSide / ((float) width), minSide / ((float) height));
    }

    /* access modifiers changed from: private */
    public boolean isStatusBarVisible() {
        return Build.VERSION.SDK_INT >= 21 && !this.inBubbleMode;
    }

    /* access modifiers changed from: private */
    /* JADX WARNING: Removed duplicated region for block: B:171:0x03d1  */
    /* JADX WARNING: Removed duplicated region for block: B:209:0x0527  */
    /* JADX WARNING: Removed duplicated region for block: B:212:0x057b  */
    /* JADX WARNING: Removed duplicated region for block: B:233:0x05e1  */
    /* JADX WARNING: Removed duplicated region for block: B:234:0x05e3  */
    /* JADX WARNING: Removed duplicated region for block: B:243:0x061c  */
    /* JADX WARNING: Removed duplicated region for block: B:244:0x061f  */
    /* JADX WARNING: Removed duplicated region for block: B:254:0x065b  */
    /* JADX WARNING: Removed duplicated region for block: B:288:0x074b  */
    /* JADX WARNING: Removed duplicated region for block: B:295:0x0762  */
    /* JADX WARNING: Removed duplicated region for block: B:296:0x0771  */
    /* JADX WARNING: Removed duplicated region for block: B:299:0x079d  */
    /* JADX WARNING: Removed duplicated region for block: B:326:0x07d9  */
    /* JADX WARNING: Removed duplicated region for block: B:328:0x07e0  */
    /* JADX WARNING: Removed duplicated region for block: B:386:0x090f  */
    /* JADX WARNING: Removed duplicated region for block: B:391:0x092b  */
    /* JADX WARNING: Removed duplicated region for block: B:445:0x0a55  */
    /* JADX WARNING: Removed duplicated region for block: B:448:0x0a66  */
    /* JADX WARNING: Removed duplicated region for block: B:455:0x0a93  */
    /* JADX WARNING: Removed duplicated region for block: B:486:0x0b07  */
    /* JADX WARNING: Removed duplicated region for block: B:493:0x0b3d  */
    /* JADX WARNING: Removed duplicated region for block: B:517:0x0bca  */
    /* JADX WARNING: Removed duplicated region for block: B:519:0x0bd2  */
    /* JADX WARNING: Removed duplicated region for block: B:524:0x0bef  */
    /* JADX WARNING: Removed duplicated region for block: B:537:0x0CLASSNAME  */
    /* JADX WARNING: Removed duplicated region for block: B:567:0x0d0a  */
    /* JADX WARNING: Removed duplicated region for block: B:610:0x0e97  */
    /* JADX WARNING: Removed duplicated region for block: B:615:0x0eb2  */
    /* JADX WARNING: Removed duplicated region for block: B:636:0x0f0c  */
    /* JADX WARNING: Removed duplicated region for block: B:641:0x0f1b  */
    /* JADX WARNING: Removed duplicated region for block: B:647:0x0cf0 A[EDGE_INSN: B:647:0x0cf0->B:564:0x0cf0 ?: BREAK  , SYNTHETIC] */
    /* JADX WARNING: Removed duplicated region for block: B:656:? A[RETURN, SYNTHETIC] */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    public void onDraw(android.graphics.Canvas r55) {
        /*
            r54 = this;
            r10 = r54
            r11 = r55
            int r0 = r10.animationInProgress
            r12 = 0
            r13 = 1
            java.lang.Integer r1 = java.lang.Integer.valueOf(r13)
            r14 = 2
            r15 = 1065353216(0x3var_, float:1.0)
            if (r0 != r13) goto L_0x0086
            r0 = 1065353216(0x3var_, float:1.0)
            boolean r1 = r10.padImageForHorizontalInsets
            if (r1 == 0) goto L_0x0029
            r55.save()
            int r1 = r54.getLeftInset()
            int r1 = r1 / r14
            int r2 = r54.getRightInset()
            int r2 = r2 / r14
            int r1 = r1 - r2
            float r1 = (float) r1
            r11.translate(r1, r12)
        L_0x0029:
            org.telegram.ui.Components.ClippingImageView r1 = r10.animatingImageView
            if (r1 == 0) goto L_0x006b
            r55.save()
            org.telegram.ui.Components.ClippingImageView r1 = r10.animatingImageView
            float r1 = r1.getCenterX()
            int r2 = r55.getWidth()
            int r2 = r2 / r14
            float r2 = (float) r2
            float r1 = r1 - r2
            org.telegram.ui.Components.ClippingImageView r2 = r10.animatingImageView
            float r2 = r2.getCenterY()
            int r3 = r55.getHeight()
            int r3 = r3 / r14
            float r3 = (float) r3
            float r2 = r2 - r3
            r11.translate(r1, r2)
            org.telegram.ui.Components.ClippingImageView r1 = r10.animatingImageView
            float r1 = r1.getAnimationProgress()
            int r2 = r10.animationInProgress
            if (r2 != r13) goto L_0x0059
            r15 = r1
            goto L_0x005a
        L_0x0059:
            float r15 = r15 - r1
        L_0x005a:
            r0 = r15
            r2 = r15
            int r3 = r55.getWidth()
            int r3 = r3 / r14
            float r3 = (float) r3
            int r4 = r55.getHeight()
            int r4 = r4 / r14
            float r4 = (float) r4
            r11.scale(r2, r2, r3, r4)
        L_0x006b:
            r3 = 0
            r4 = 1065353216(0x3var_, float:1.0)
            r5 = 0
            r1 = r54
            r2 = r55
            r6 = r0
            r1.drawProgress(r2, r3, r4, r5, r6)
            org.telegram.ui.Components.ClippingImageView r1 = r10.animatingImageView
            if (r1 == 0) goto L_0x007e
            r55.restore()
        L_0x007e:
            boolean r1 = r10.padImageForHorizontalInsets
            if (r1 == 0) goto L_0x0085
            r55.restore()
        L_0x0085:
            return
        L_0x0086:
            r9 = 3
            if (r0 == r9) goto L_0x0var_
            boolean r2 = r10.isVisible
            if (r2 != 0) goto L_0x0095
            if (r0 == r14) goto L_0x0095
            boolean r0 = r10.pipAnimationInProgress
            if (r0 != 0) goto L_0x0095
            goto L_0x0var_
        L_0x0095:
            boolean r0 = r10.padImageForHorizontalInsets
            if (r0 == 0) goto L_0x00ab
            r55.save()
            int r0 = r54.getLeftInset()
            int r0 = r0 / r14
            int r2 = r54.getRightInset()
            int r2 = r2 / r14
            int r0 = r0 - r2
            float r0 = (float) r0
            r11.translate(r0, r12)
        L_0x00ab:
            r0 = -1082130432(0xffffffffbvar_, float:-1.0)
            long r7 = java.lang.System.currentTimeMillis()
            long r2 = r10.videoCrossfadeAlphaLastTime
            long r2 = r7 - r2
            r4 = 20
            int r6 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1))
            if (r6 <= 0) goto L_0x00bf
            r2 = 17
            r5 = r2
            goto L_0x00c0
        L_0x00bf:
            r5 = r2
        L_0x00c0:
            r10.videoCrossfadeAlphaLastTime = r7
            android.animation.AnimatorSet r2 = r10.imageMoveAnimation
            if (r2 == 0) goto L_0x012e
            android.widget.Scroller r2 = r10.scroller
            boolean r2 = r2.isFinished()
            if (r2 != 0) goto L_0x00d3
            android.widget.Scroller r2 = r10.scroller
            r2.abortAnimation()
        L_0x00d3:
            float r2 = r10.scale
            float r3 = r10.animateToScale
            float r16 = r3 - r2
            float r9 = r10.animationValue
            float r16 = r16 * r9
            float r16 = r2 + r16
            float r14 = r10.rotate
            float r13 = r10.animateToRotate
            float r13 = r13 - r14
            float r13 = r13 * r9
            float r14 = r14 + r13
            float r13 = r10.translationX
            float r4 = r10.animateToX
            float r4 = r4 - r13
            float r4 = r4 * r9
            float r4 = r4 + r13
            float r12 = r10.translationY
            float r15 = r10.animateToY
            float r15 = r15 - r12
            float r15 = r15 * r9
            float r12 = r12 + r15
            float r15 = r10.mirror
            r22 = r0
            float r0 = r10.animateToMirror
            float r0 = r0 - r15
            float r0 = r0 * r9
            float r15 = r15 + r0
            r9 = 1065353216(0x3var_, float:1.0)
            int r0 = (r3 > r9 ? 1 : (r3 == r9 ? 0 : -1))
            if (r0 != 0) goto L_0x0112
            int r0 = (r2 > r9 ? 1 : (r2 == r9 ? 0 : -1))
            if (r0 != 0) goto L_0x0112
            r0 = 0
            int r2 = (r13 > r0 ? 1 : (r13 == r0 ? 0 : -1))
            if (r2 != 0) goto L_0x0112
            r0 = r12
            goto L_0x0114
        L_0x0112:
            r0 = r22
        L_0x0114:
            r2 = r15
            r3 = r16
            r9 = r14
            r13 = r12
            r22 = r4
            r10.updateMinMax(r3)
            r23 = r0
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r0 = r10.containerView
            r0.invalidate()
            r12 = r2
            r15 = r13
            r9 = r22
            r22 = r23
            r13 = r3
            goto L_0x0210
        L_0x012e:
            r22 = r0
            long r2 = r10.animationStartTime
            r12 = 0
            int r0 = (r2 > r12 ? 1 : (r2 == r12 ? 0 : -1))
            if (r0 == 0) goto L_0x014c
            float r0 = r10.animateToX
            r10.translationX = r0
            float r0 = r10.animateToY
            r10.translationY = r0
            float r0 = r10.animateToScale
            r10.scale = r0
            r10.animationStartTime = r12
            r10.updateMinMax(r0)
            r2 = 0
            r10.zoomAnimation = r2
        L_0x014c:
            android.widget.Scroller r0 = r10.scroller
            boolean r0 = r0.isFinished()
            if (r0 != 0) goto L_0x01a7
            android.widget.Scroller r0 = r10.scroller
            boolean r0 = r0.computeScrollOffset()
            if (r0 == 0) goto L_0x01a7
            android.widget.Scroller r0 = r10.scroller
            int r0 = r0.getStartX()
            float r0 = (float) r0
            float r2 = r10.maxX
            int r0 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
            if (r0 >= 0) goto L_0x017f
            android.widget.Scroller r0 = r10.scroller
            int r0 = r0.getStartX()
            float r0 = (float) r0
            float r2 = r10.minX
            int r0 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
            if (r0 <= 0) goto L_0x017f
            android.widget.Scroller r0 = r10.scroller
            int r0 = r0.getCurrX()
            float r0 = (float) r0
            r10.translationX = r0
        L_0x017f:
            android.widget.Scroller r0 = r10.scroller
            int r0 = r0.getStartY()
            float r0 = (float) r0
            float r2 = r10.maxY
            int r0 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
            if (r0 >= 0) goto L_0x01a2
            android.widget.Scroller r0 = r10.scroller
            int r0 = r0.getStartY()
            float r0 = (float) r0
            float r2 = r10.minY
            int r0 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1))
            if (r0 <= 0) goto L_0x01a2
            android.widget.Scroller r0 = r10.scroller
            int r0 = r0.getCurrY()
            float r0 = (float) r0
            r10.translationY = r0
        L_0x01a2:
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r0 = r10.containerView
            r0.invalidate()
        L_0x01a7:
            int r0 = r10.switchImageAfterAnimation
            if (r0 == 0) goto L_0x01f3
            r2 = 0
            r10.openedFullScreenVideo = r2
            java.util.ArrayList<java.lang.Object> r0 = r10.imagesArrLocals
            boolean r0 = r0.isEmpty()
            if (r0 != 0) goto L_0x01d7
            int r0 = r10.currentIndex
            if (r0 < 0) goto L_0x01d7
            java.util.ArrayList<java.lang.Object> r2 = r10.imagesArrLocals
            int r2 = r2.size()
            if (r0 >= r2) goto L_0x01d7
            java.util.ArrayList<java.lang.Object> r0 = r10.imagesArrLocals
            int r2 = r10.currentIndex
            java.lang.Object r0 = r0.get(r2)
            boolean r2 = r0 instanceof org.telegram.messenger.MediaController.MediaEditState
            if (r2 == 0) goto L_0x01d7
            r2 = r0
            org.telegram.messenger.MediaController$MediaEditState r2 = (org.telegram.messenger.MediaController.MediaEditState) r2
            org.telegram.messenger.VideoEditedInfo r3 = r54.getCurrentVideoEditedInfo()
            r2.editedInfo = r3
        L_0x01d7:
            int r0 = r10.switchImageAfterAnimation
            r2 = 1
            if (r0 != r2) goto L_0x01e5
            org.telegram.ui.PhotoViewer$$ExternalSyntheticLambda46 r0 = new org.telegram.ui.PhotoViewer$$ExternalSyntheticLambda46
            r0.<init>(r10)
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0)
            goto L_0x01f0
        L_0x01e5:
            r2 = 2
            if (r0 != r2) goto L_0x01f0
            org.telegram.ui.PhotoViewer$$ExternalSyntheticLambda47 r0 = new org.telegram.ui.PhotoViewer$$ExternalSyntheticLambda47
            r0.<init>(r10)
            org.telegram.messenger.AndroidUtilities.runOnUIThread(r0)
        L_0x01f0:
            r2 = 0
            r10.switchImageAfterAnimation = r2
        L_0x01f3:
            float r3 = r10.scale
            float r2 = r10.mirror
            float r9 = r10.rotate
            float r13 = r10.translationY
            float r0 = r10.translationX
            boolean r4 = r10.moving
            if (r4 != 0) goto L_0x020b
            float r4 = r10.translationY
            r12 = r2
            r22 = r4
            r14 = r9
            r15 = r13
            r9 = r0
            r13 = r3
            goto L_0x0210
        L_0x020b:
            r12 = r2
            r14 = r9
            r15 = r13
            r9 = r0
            r13 = r3
        L_0x0210:
            org.telegram.ui.Components.PhotoViewerWebView r0 = r10.photoViewerWebView
            if (r0 == 0) goto L_0x0217
            r0.setTranslationY(r15)
        L_0x0217:
            boolean r0 = r10.isActionBarVisible
            if (r0 == 0) goto L_0x028f
            r0 = 1065354055(0x3var_, float:1.0001)
            r2 = 120(0x78, double:5.93E-322)
            int r0 = (r13 > r0 ? 1 : (r13 == r0 ? 0 : -1))
            if (r0 > 0) goto L_0x0260
            boolean r0 = r10.allowShowFullscreenButton
            if (r0 != 0) goto L_0x025e
            android.widget.ImageView[] r0 = r10.fullscreenButton
            r4 = 0
            r0 = r0[r4]
            java.lang.Object r0 = r0.getTag()
            if (r0 != 0) goto L_0x025e
            android.widget.ImageView[] r0 = r10.fullscreenButton
            r0 = r0[r4]
            android.view.ViewPropertyAnimator r0 = r0.animate()
            r4 = 1065353216(0x3var_, float:1.0)
            android.view.ViewPropertyAnimator r0 = r0.alpha(r4)
            android.view.ViewPropertyAnimator r0 = r0.setDuration(r2)
            org.telegram.ui.PhotoViewer$75 r2 = new org.telegram.ui.PhotoViewer$75
            r2.<init>()
            android.view.ViewPropertyAnimator r0 = r0.setListener(r2)
            r0.start()
            android.widget.ImageView[] r0 = r10.fullscreenButton
            r2 = 0
            r0 = r0[r2]
            r0.setTag(r1)
            r1 = 1
            r10.allowShowFullscreenButton = r1
            r4 = 0
            goto L_0x0290
        L_0x025e:
            r4 = 0
            goto L_0x0290
        L_0x0260:
            boolean r0 = r10.allowShowFullscreenButton
            if (r0 == 0) goto L_0x028d
            android.widget.ImageView[] r0 = r10.fullscreenButton
            r4 = 0
            r0 = r0[r4]
            android.view.ViewPropertyAnimator r0 = r0.animate()
            r4 = 0
            android.view.ViewPropertyAnimator r0 = r0.alpha(r4)
            android.view.ViewPropertyAnimator r0 = r0.setDuration(r2)
            org.telegram.ui.PhotoViewer$76 r2 = new org.telegram.ui.PhotoViewer$76
            r2.<init>()
            android.view.ViewPropertyAnimator r0 = r0.setListener(r2)
            r0.start()
            android.widget.ImageView[] r0 = r10.fullscreenButton
            r4 = 0
            r0 = r0[r4]
            r0.setTag(r1)
            r10.allowShowFullscreenButton = r4
            goto L_0x0290
        L_0x028d:
            r4 = 0
            goto L_0x0290
        L_0x028f:
            r4 = 0
        L_0x0290:
            int r3 = r54.getContainerViewWidth()
            int r2 = r54.getContainerViewHeight()
            int r0 = r10.animationInProgress
            r1 = 4
            r16 = 1132396544(0x437var_, float:255.0)
            r19 = 1082130432(0x40800000, float:4.0)
            r23 = r7
            r7 = -1082130432(0xffffffffbvar_, float:-1.0)
            r8 = 2
            if (r0 == r8) goto L_0x02f0
            if (r0 == r1) goto L_0x02f0
            boolean r8 = r10.pipAnimationInProgress
            if (r8 != 0) goto L_0x02f0
            boolean r8 = r10.isInline
            if (r8 != 0) goto L_0x02f0
            int r0 = r10.currentEditMode
            if (r0 != 0) goto L_0x02e8
            int r0 = r10.sendPhotoType
            r1 = 1
            if (r0 == r1) goto L_0x02e8
            float r0 = r10.scale
            r1 = 1065353216(0x3var_, float:1.0)
            int r0 = (r0 > r1 ? 1 : (r0 == r1 ? 0 : -1))
            if (r0 != 0) goto L_0x02e8
            int r0 = (r22 > r7 ? 1 : (r22 == r7 ? 0 : -1))
            if (r0 == 0) goto L_0x02e8
            boolean r0 = r10.zoomAnimation
            if (r0 != 0) goto L_0x02e8
            float r0 = (float) r3
            float r0 = r0 / r19
            org.telegram.ui.PhotoViewer$BackgroundDrawable r1 = r10.backgroundDrawable
            r8 = 1123942400(0x42fe0000, float:127.0)
            float r4 = java.lang.Math.abs(r22)
            float r4 = java.lang.Math.min(r4, r0)
            float r4 = r4 / r0
            r21 = 1065353216(0x3var_, float:1.0)
            float r4 = r21 - r4
            float r4 = r4 * r16
            float r4 = java.lang.Math.max(r8, r4)
            int r4 = (int) r4
            r1.setAlpha(r4)
            goto L_0x02f7
        L_0x02e8:
            org.telegram.ui.PhotoViewer$BackgroundDrawable r0 = r10.backgroundDrawable
            r1 = 255(0xff, float:3.57E-43)
            r0.setAlpha(r1)
            goto L_0x02f7
        L_0x02f0:
            if (r0 != r1) goto L_0x02f7
            r0 = -16777216(0xfffffffffvar_, float:-1.7014118E38)
            r11.drawColor(r0)
        L_0x02f7:
            r8 = 0
            r10.sideImage = r8
            int r0 = r10.currentEditMode
            if (r0 != 0) goto L_0x0346
            int r0 = r10.sendPhotoType
            r1 = 1
            if (r0 == r1) goto L_0x0346
            float r0 = r10.scale
            r1 = 1065353216(0x3var_, float:1.0)
            int r0 = (r0 > r1 ? 1 : (r0 == r1 ? 0 : -1))
            if (r0 < 0) goto L_0x033d
            boolean r0 = r10.zoomAnimation
            if (r0 != 0) goto L_0x033d
            boolean r0 = r10.zooming
            if (r0 != 0) goto L_0x033d
            float r0 = r10.maxX
            r1 = 1084227584(0x40a00000, float:5.0)
            int r4 = org.telegram.messenger.AndroidUtilities.dp(r1)
            float r4 = (float) r4
            float r0 = r0 + r4
            int r0 = (r9 > r0 ? 1 : (r9 == r0 ? 0 : -1))
            if (r0 <= 0) goto L_0x0326
            org.telegram.messenger.ImageReceiver r0 = r10.leftImage
            r10.sideImage = r0
            goto L_0x033d
        L_0x0326:
            float r0 = r10.minX
            int r1 = org.telegram.messenger.AndroidUtilities.dp(r1)
            float r1 = (float) r1
            float r0 = r0 - r1
            int r0 = (r9 > r0 ? 1 : (r9 == r0 ? 0 : -1))
            if (r0 >= 0) goto L_0x0337
            org.telegram.messenger.ImageReceiver r0 = r10.rightImage
            r10.sideImage = r0
            goto L_0x033d
        L_0x0337:
            org.telegram.ui.Components.GroupedPhotosListView r0 = r10.groupedPhotosListView
            r1 = 0
            r0.setMoveProgress(r1)
        L_0x033d:
            org.telegram.messenger.ImageReceiver r0 = r10.sideImage
            if (r0 == 0) goto L_0x0343
            r0 = 1
            goto L_0x0344
        L_0x0343:
            r0 = 0
        L_0x0344:
            r10.changingPage = r0
        L_0x0346:
            r0 = 0
        L_0x0347:
            r4 = 3
            if (r0 >= r4) goto L_0x038f
            r1 = 1
            if (r0 != r1) goto L_0x034f
            r1 = 0
            goto L_0x0372
        L_0x034f:
            r1 = 2
            if (r0 != r1) goto L_0x0368
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r1 = r10.containerView
            int r1 = r1.getMeasuredWidth()
            int r1 = -r1
            r17 = 1097859072(0x41700000, float:15.0)
            int r17 = org.telegram.messenger.AndroidUtilities.dp(r17)
            int r1 = r1 - r17
            float r1 = (float) r1
            float r4 = r10.maxX
            float r4 = r9 - r4
            float r1 = r1 + r4
            goto L_0x0372
        L_0x0368:
            float r1 = r10.minX
            int r4 = (r9 > r1 ? 1 : (r9 == r1 ? 0 : -1))
            if (r4 >= 0) goto L_0x0371
            float r1 = r9 - r1
            goto L_0x0372
        L_0x0371:
            r1 = 0
        L_0x0372:
            android.widget.ImageView[] r4 = r10.fullscreenButton
            r4 = r4[r0]
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r7 = r10.containerView
            int r7 = r7.getMeasuredWidth()
            float r7 = (float) r7
            float r7 = r7 + r1
            r27 = 1111490560(0x42400000, float:48.0)
            int r8 = org.telegram.messenger.AndroidUtilities.dp(r27)
            float r8 = (float) r8
            float r7 = r7 - r8
            r4.setTranslationX(r7)
            int r0 = r0 + 1
            r7 = -1082130432(0xffffffffbvar_, float:-1.0)
            r8 = 0
            goto L_0x0347
        L_0x038f:
            org.telegram.messenger.ImageReceiver r0 = r10.sideImage
            org.telegram.messenger.ImageReceiver r1 = r10.rightImage
            r27 = 1050253722(0x3e99999a, float:0.3)
            r29 = 1106247680(0x41var_, float:30.0)
            r30 = 1073741824(0x40000000, float:2.0)
            if (r0 != r1) goto L_0x0586
            r0 = r9
            r1 = 0
            r4 = 1065353216(0x3var_, float:1.0)
            boolean r7 = r10.zoomAnimation
            if (r7 != 0) goto L_0x03c6
            float r7 = r10.minX
            int r31 = (r0 > r7 ? 1 : (r0 == r7 ? 0 : -1))
            if (r31 >= 0) goto L_0x03c6
            float r7 = r7 - r0
            float r8 = (float) r3
            float r7 = r7 / r8
            r8 = 1065353216(0x3var_, float:1.0)
            float r4 = java.lang.Math.min(r8, r7)
            float r7 = r8 - r4
            float r1 = r7 * r27
            int r7 = -r3
            int r8 = org.telegram.messenger.AndroidUtilities.dp(r29)
            r18 = 2
            int r8 = r8 / 2
            int r7 = r7 - r8
            float r0 = (float) r7
            r32 = r1
            r8 = r4
            goto L_0x03c9
        L_0x03c6:
            r32 = r1
            r8 = r4
        L_0x03c9:
            org.telegram.messenger.ImageReceiver r1 = r10.sideImage
            boolean r1 = r1.hasBitmapImage()
            if (r1 == 0) goto L_0x0527
            r55.save()
            int r1 = r3 / 2
            float r1 = (float) r1
            int r4 = r2 / 2
            float r4 = (float) r4
            r11.translate(r1, r4)
            int r1 = org.telegram.messenger.AndroidUtilities.dp(r29)
            r4 = 2
            int r1 = r1 / r4
            int r1 = r1 + r3
            float r1 = (float) r1
            float r1 = r1 + r0
            r4 = 0
            r11.translate(r1, r4)
            r1 = 1065353216(0x3var_, float:1.0)
            float r4 = r1 - r32
            float r7 = r1 - r32
            r11.scale(r4, r7)
            org.telegram.messenger.ImageReceiver r1 = r10.sideImage
            int r7 = r1.getBitmapWidth()
            org.telegram.messenger.ImageReceiver r1 = r10.sideImage
            int r4 = r1.getBitmapHeight()
            boolean r1 = r10.rightImageIsVideo
            if (r1 != 0) goto L_0x0442
            org.telegram.messenger.MediaController$CropState r1 = r10.rightCropState
            if (r1 == 0) goto L_0x0442
            org.telegram.ui.Components.Crop.CropTransform r1 = r10.rightCropTransform
            boolean r1 = r1.hasViewTransform()
            if (r1 == 0) goto L_0x0442
            r33 = 1065353216(0x3var_, float:1.0)
            org.telegram.ui.Components.Crop.CropTransform r1 = r10.rightCropTransform
            r34 = r9
            org.telegram.messenger.MediaController$CropState r9 = r10.rightCropState
            r35 = r1
            r1 = r54
            r36 = r2
            r2 = r55
            r37 = r3
            r17 = r4
            r38 = r12
            r12 = 0
            r25 = 3
            r4 = r36
            r39 = r5
            r5 = r7
            r6 = r17
            r12 = r7
            r43 = r14
            r41 = r23
            r14 = -1082130432(0xffffffffbvar_, float:-1.0)
            r7 = r33
            r44 = r8
            r8 = r35
            r31 = r34
            r1.applyCrop(r2, r3, r4, r5, r6, r7, r8, r9)
            goto L_0x0457
        L_0x0442:
            r36 = r2
            r37 = r3
            r17 = r4
            r39 = r5
            r44 = r8
            r31 = r9
            r38 = r12
            r43 = r14
            r41 = r23
            r14 = -1082130432(0xffffffffbvar_, float:-1.0)
            r12 = r7
        L_0x0457:
            r9 = r37
            float r1 = (float) r9
            float r2 = (float) r12
            float r1 = r1 / r2
            r8 = r36
            float r2 = (float) r8
            r3 = r17
            float r4 = (float) r3
            float r2 = r2 / r4
            float r4 = java.lang.Math.min(r1, r2)
            float r5 = (float) r12
            float r5 = r5 * r4
            int r5 = (int) r5
            float r6 = (float) r3
            float r6 = r6 * r4
            int r6 = (int) r6
            r7 = 0
            java.util.ArrayList<java.lang.Object> r14 = r10.imagesArrLocals
            boolean r14 = r14.isEmpty()
            if (r14 != 0) goto L_0x0498
            int r14 = r10.currentEditMode
            r23 = r1
            r1 = 1
            if (r14 == r1) goto L_0x0491
            int r14 = r10.sendPhotoType
            if (r14 != r1) goto L_0x0484
            goto L_0x0491
        L_0x0484:
            org.telegram.messenger.MediaController$CropState r1 = r10.rightCropState
            if (r1 == 0) goto L_0x048e
            boolean r1 = r1.mirrored
            if (r1 == 0) goto L_0x048e
            r1 = 1
            goto L_0x048f
        L_0x048e:
            r1 = 0
        L_0x048f:
            r7 = r1
            goto L_0x049a
        L_0x0491:
            org.telegram.ui.Components.Crop.CropTransform r1 = r10.rightCropTransform
            boolean r7 = r1.isMirrored()
            goto L_0x049a
        L_0x0498:
            r23 = r1
        L_0x049a:
            if (r7 == 0) goto L_0x04a3
            r1 = -1082130432(0xffffffffbvar_, float:-1.0)
            r14 = 1065353216(0x3var_, float:1.0)
            r11.scale(r1, r14)
        L_0x04a3:
            org.telegram.messenger.ImageReceiver r1 = r10.sideImage
            r14 = r44
            r1.setAlpha(r14)
            org.telegram.messenger.ImageReceiver r1 = r10.sideImage
            r24 = r2
            int r2 = -r5
            r18 = 2
            int r2 = r2 / 2
            float r2 = (float) r2
            r25 = r7
            int r7 = -r6
            int r7 = r7 / 2
            float r7 = (float) r7
            r36 = r8
            float r8 = (float) r5
            r37 = r9
            float r9 = (float) r6
            r1.setImageCoords(r2, r7, r8, r9)
            org.telegram.messenger.ImageReceiver r1 = r10.sideImage
            r1.draw(r11)
            org.telegram.ui.Components.PaintingOverlay r1 = r10.rightPaintingOverlay
            if (r1 == 0) goto L_0x0521
            int r1 = r1.getVisibility()
            if (r1 != 0) goto L_0x0521
            int r1 = -r5
            r2 = 2
            int r1 = r1 / r2
            int r7 = -r6
            int r7 = r7 / r2
            int r2 = r5 / 2
            int r8 = r6 / 2
            r11.clipRect(r1, r7, r2, r8)
            org.telegram.ui.Components.PaintingOverlay r1 = r10.rightPaintingOverlay
            int r1 = r1.getMeasuredWidth()
            if (r1 != r12) goto L_0x04f2
            org.telegram.ui.Components.PaintingOverlay r1 = r10.rightPaintingOverlay
            int r1 = r1.getMeasuredHeight()
            if (r1 == r3) goto L_0x04ef
            goto L_0x04f2
        L_0x04ef:
            r9 = 1073741824(0x40000000, float:2.0)
            goto L_0x0507
        L_0x04f2:
            org.telegram.ui.Components.PaintingOverlay r1 = r10.rightPaintingOverlay
            r9 = 1073741824(0x40000000, float:2.0)
            int r2 = android.view.View.MeasureSpec.makeMeasureSpec(r12, r9)
            int r7 = android.view.View.MeasureSpec.makeMeasureSpec(r3, r9)
            r1.measure(r2, r7)
            org.telegram.ui.Components.PaintingOverlay r1 = r10.rightPaintingOverlay
            r2 = 0
            r1.layout(r2, r2, r12, r3)
        L_0x0507:
            r11.scale(r4, r4)
            int r1 = -r12
            r2 = 2
            int r1 = r1 / r2
            float r1 = (float) r1
            int r7 = -r3
            int r7 = r7 / r2
            float r2 = (float) r7
            r11.translate(r1, r2)
            org.telegram.ui.Components.PaintingOverlay r1 = r10.rightPaintingOverlay
            r2 = 1065353216(0x3var_, float:1.0)
            r1.setAlpha(r2)
            org.telegram.ui.Components.PaintingOverlay r1 = r10.rightPaintingOverlay
            r1.draw(r11)
            goto L_0x0523
        L_0x0521:
            r9 = 1073741824(0x40000000, float:2.0)
        L_0x0523:
            r55.restore()
            goto L_0x0538
        L_0x0527:
            r36 = r2
            r37 = r3
            r39 = r5
            r31 = r9
            r38 = r12
            r43 = r14
            r41 = r23
            r9 = 1073741824(0x40000000, float:2.0)
            r14 = r8
        L_0x0538:
            org.telegram.ui.Components.GroupedPhotosListView r1 = r10.groupedPhotosListView
            float r2 = -r14
            r1.setMoveProgress(r2)
            r55.save()
            float r1 = r15 / r13
            r11.translate(r0, r1)
            r12 = r37
            float r1 = (float) r12
            float r2 = r10.scale
            r3 = 1065353216(0x3var_, float:1.0)
            float r2 = r2 + r3
            float r1 = r1 * r2
            int r2 = org.telegram.messenger.AndroidUtilities.dp(r29)
            float r2 = (float) r2
            float r1 = r1 + r2
            float r1 = r1 / r30
            float r2 = -r15
            float r2 = r2 / r13
            r11.translate(r1, r2)
            org.telegram.ui.PhotoViewer$PhotoProgressView[] r1 = r10.photoProgressViews
            r2 = 1
            r1 = r1[r2]
            r3 = 1065353216(0x3var_, float:1.0)
            float r4 = r3 - r32
            r1.setScale(r4)
            org.telegram.ui.PhotoViewer$PhotoProgressView[] r1 = r10.photoProgressViews
            r1 = r1[r2]
            r1.setAlpha(r14)
            org.telegram.ui.PhotoViewer$PhotoProgressView[] r1 = r10.photoProgressViews
            r1 = r1[r2]
            r1.onDraw(r11)
            boolean r1 = r10.isActionBarVisible
            if (r1 == 0) goto L_0x0582
            android.widget.ImageView[] r1 = r10.fullscreenButton
            r1 = r1[r2]
            r1.setAlpha(r14)
        L_0x0582:
            r55.restore()
            goto L_0x05a2
        L_0x0586:
            r36 = r2
            r39 = r5
            r31 = r9
            r38 = r12
            r43 = r14
            r41 = r23
            r9 = 1073741824(0x40000000, float:2.0)
            r12 = r3
            boolean r0 = r10.isActionBarVisible
            if (r0 == 0) goto L_0x05a2
            android.widget.ImageView[] r0 = r10.fullscreenButton
            r1 = 1
            r0 = r0[r1]
            r1 = 0
            r0.setAlpha(r1)
        L_0x05a2:
            r0 = r31
            r1 = 0
            r2 = 1065353216(0x3var_, float:1.0)
            boolean r3 = r10.zoomAnimation
            if (r3 != 0) goto L_0x05cf
            float r3 = r10.maxX
            int r4 = (r0 > r3 ? 1 : (r0 == r3 ? 0 : -1))
            if (r4 <= 0) goto L_0x05cf
            int r4 = r10.currentEditMode
            if (r4 != 0) goto L_0x05cf
            int r4 = r10.sendPhotoType
            r5 = 1
            if (r4 == r5) goto L_0x05cf
            float r3 = r0 - r3
            float r4 = (float) r12
            float r3 = r3 / r4
            r4 = 1065353216(0x3var_, float:1.0)
            float r2 = java.lang.Math.min(r4, r3)
            float r1 = r2 * r27
            float r2 = r4 - r2
            float r0 = r10.maxX
            r14 = r0
            r32 = r1
            r8 = r2
            goto L_0x05d3
        L_0x05cf:
            r14 = r0
            r32 = r1
            r8 = r2
        L_0x05d3:
            boolean r0 = r10.videoSizeSet
            if (r0 == 0) goto L_0x05e3
            com.google.android.exoplayer2.ui.AspectRatioFrameLayout r0 = r10.aspectRatioFrameLayout
            if (r0 == 0) goto L_0x05e3
            int r0 = r0.getVisibility()
            if (r0 != 0) goto L_0x05e3
            r4 = 1
            goto L_0x05e4
        L_0x05e3:
            r4 = 0
        L_0x05e4:
            r33 = r4
            org.telegram.messenger.ImageReceiver r0 = r10.centerImage
            boolean r0 = r0.hasBitmapImage()
            if (r0 != 0) goto L_0x0601
            if (r33 == 0) goto L_0x05f5
            boolean r0 = r10.textureUploaded
            if (r0 == 0) goto L_0x05f5
            goto L_0x0601
        L_0x05f5:
            r34 = r14
            r35 = r15
            r9 = r36
            r3 = r39
            r37 = r43
            goto L_0x0cf6
        L_0x0601:
            r55.save()
            int r3 = r12 / 2
            int r0 = r54.getAdditionX()
            int r3 = r3 + r0
            float r0 = (float) r3
            int r2 = r36 / 2
            int r1 = r54.getAdditionY()
            int r2 = r2 + r1
            float r1 = (float) r2
            r11.translate(r0, r1)
            int r0 = r10.currentEditMode
            r7 = 3
            if (r0 == r7) goto L_0x061f
            float r0 = r10.currentPanTranslationY
            goto L_0x0623
        L_0x061f:
            float r0 = r10.currentPanTranslationY
            float r0 = r0 / r30
        L_0x0623:
            float r0 = r0 + r15
            r11.translate(r14, r0)
            float r0 = r13 - r32
            float r1 = r13 - r32
            r11.scale(r0, r1)
            r6 = r43
            r11.rotate(r6)
            int r0 = r10.currentEditMode
            if (r0 != r7) goto L_0x0656
            int r0 = r10.keyboardSize
            r1 = 1101004800(0x41a00000, float:20.0)
            int r1 = org.telegram.messenger.AndroidUtilities.dp(r1)
            if (r0 <= r1) goto L_0x0656
            r1 = 0
            r2 = 1
            int r0 = r10.getContainerViewHeight(r2, r1)
            int r2 = r10.getContainerViewHeight(r1, r1)
            if (r0 == r2) goto L_0x0656
            int r1 = r0 - r2
            r3 = 2
            int r1 = r1 / r3
            float r1 = (float) r1
            r3 = 0
            r11.translate(r3, r1)
        L_0x0656:
            r0 = 0
            boolean r1 = r10.pipAnimationInProgress
            if (r1 != 0) goto L_0x074b
            if (r33 == 0) goto L_0x067f
            boolean r1 = r10.textureUploaded
            if (r1 != 0) goto L_0x0665
            boolean r1 = r10.videoSizeSet
            if (r1 == 0) goto L_0x067f
        L_0x0665:
            boolean r1 = r10.videoCrossfadeStarted
            if (r1 == 0) goto L_0x067f
            float r1 = r10.videoCrossfadeAlpha
            r2 = 1065353216(0x3var_, float:1.0)
            int r1 = (r1 > r2 ? 1 : (r1 == r2 ? 0 : -1))
            if (r1 == 0) goto L_0x0672
            goto L_0x067f
        L_0x0672:
            r23 = r0
            r37 = r6
            r34 = r14
            r35 = r15
            r9 = r36
            r0 = 3
            goto L_0x0756
        L_0x067f:
            android.graphics.Bitmap r1 = r10.videoFrameBitmap
            if (r1 == 0) goto L_0x06ee
            boolean r2 = r10.isCurrentVideo
            if (r2 == 0) goto L_0x06ee
            int r5 = r1.getWidth()
            android.graphics.Bitmap r1 = r10.videoFrameBitmap
            int r4 = r1.getHeight()
            int r1 = -r5
            r2 = 2
            int r3 = r1 / 2
            int r1 = -r4
            int r1 = r1 / r2
            r2 = 1065353216(0x3var_, float:1.0)
            int r23 = (r8 > r2 ? 1 : (r8 == r2 ? 0 : -1))
            if (r23 >= 0) goto L_0x06ca
            float r2 = (float) r3
            float r7 = (float) r1
            int r9 = r3 + r5
            float r9 = (float) r9
            r23 = r0
            int r0 = r1 + r4
            float r0 = (float) r0
            r24 = r1
            float r1 = r8 * r16
            int r1 = (int) r1
            r25 = 31
            r34 = r14
            r14 = r24
            r24 = r1
            r1 = r55
            r35 = r15
            r15 = r3
            r3 = r7
            r26 = r4
            r4 = r9
            r9 = r5
            r5 = r0
            r37 = r6
            r6 = r24
            r0 = 3
            r7 = r25
            r1.saveLayerAlpha(r2, r3, r4, r5, r6, r7)
            goto L_0x06d8
        L_0x06ca:
            r23 = r0
            r26 = r4
            r9 = r5
            r37 = r6
            r34 = r14
            r35 = r15
            r0 = 3
            r14 = r1
            r15 = r3
        L_0x06d8:
            android.graphics.Bitmap r1 = r10.videoFrameBitmap
            float r2 = (float) r15
            float r3 = (float) r14
            android.graphics.Paint r4 = r10.videoFrameBitmapPaint
            r11.drawBitmap(r1, r2, r3, r4)
            r1 = 1065353216(0x3var_, float:1.0)
            int r2 = (r8 > r1 ? 1 : (r8 == r1 ? 0 : -1))
            if (r2 >= 0) goto L_0x06ea
            r55.restore()
        L_0x06ea:
            r9 = r36
            goto L_0x0756
        L_0x06ee:
            r23 = r0
            r37 = r6
            r34 = r14
            r35 = r15
            r0 = 3
            org.telegram.messenger.ImageReceiver r1 = r10.centerImage
            r1.setAlpha(r8)
            org.telegram.messenger.ImageReceiver r1 = r10.centerImage
            int r1 = r1.getBitmapWidth()
            org.telegram.messenger.ImageReceiver r2 = r10.centerImage
            int r2 = r2.getBitmapHeight()
            boolean r3 = r10.isCurrentVideo
            if (r3 == 0) goto L_0x071d
            int r3 = r10.currentEditMode
            if (r3 != 0) goto L_0x071d
            int r3 = r10.sendPhotoType
            r4 = 1
            if (r3 != r4) goto L_0x071d
            r3 = 0
            float r4 = r10.getCropFillScale(r3)
            r9 = r36
            goto L_0x0729
        L_0x071d:
            float r3 = (float) r12
            float r4 = (float) r1
            float r3 = r3 / r4
            r9 = r36
            float r4 = (float) r9
            float r5 = (float) r2
            float r4 = r4 / r5
            float r4 = java.lang.Math.min(r3, r4)
        L_0x0729:
            float r3 = (float) r1
            float r3 = r3 * r4
            int r1 = (int) r3
            float r3 = (float) r2
            float r3 = r3 * r4
            int r2 = (int) r3
            org.telegram.messenger.ImageReceiver r3 = r10.centerImage
            int r5 = -r1
            r6 = 2
            int r5 = r5 / r6
            float r5 = (float) r5
            int r7 = -r2
            int r7 = r7 / r6
            float r6 = (float) r7
            float r7 = (float) r1
            float r14 = (float) r2
            r3.setImageCoords(r5, r6, r7, r14)
            boolean r3 = r10.isCurrentVideo
            if (r3 == 0) goto L_0x0749
            org.telegram.messenger.ImageReceiver r3 = r10.centerImage
            r3.draw(r11)
            goto L_0x0756
        L_0x0749:
            r3 = 1
            goto L_0x0758
        L_0x074b:
            r23 = r0
            r37 = r6
            r34 = r14
            r35 = r15
            r9 = r36
            r0 = 3
        L_0x0756:
            r3 = r23
        L_0x0758:
            if (r33 == 0) goto L_0x0771
            boolean r1 = r10.textureUploaded
            if (r1 == 0) goto L_0x0771
            boolean r1 = r10.videoSizeSet
            if (r1 == 0) goto L_0x0771
            android.view.TextureView r1 = r10.videoTextureView
            int r1 = r1.getMeasuredWidth()
            r2 = r1
            android.view.TextureView r4 = r10.videoTextureView
            int r4 = r4.getMeasuredHeight()
            r5 = r4
            goto L_0x077f
        L_0x0771:
            org.telegram.messenger.ImageReceiver r1 = r10.centerImage
            int r1 = r1.getBitmapWidth()
            r2 = r1
            org.telegram.messenger.ImageReceiver r4 = r10.centerImage
            int r4 = r4.getBitmapHeight()
            r5 = r4
        L_0x077f:
            float r6 = (float) r12
            float r7 = (float) r1
            float r6 = r6 / r7
            float r7 = (float) r9
            float r14 = (float) r4
            float r7 = r7 / r14
            float r6 = java.lang.Math.min(r6, r7)
            float r7 = (float) r1
            float r7 = r7 * r6
            int r7 = (int) r7
            float r14 = (float) r4
            float r14 = r14 * r6
            int r14 = (int) r14
            r15 = 1065353216(0x3var_, float:1.0)
            java.util.ArrayList<java.lang.Object> r0 = r10.imagesArrLocals
            boolean r0 = r0.isEmpty()
            r23 = r15
            if (r0 != 0) goto L_0x07d9
            int r0 = r10.currentEditMode
            r15 = 3
            if (r0 == r15) goto L_0x07d3
            r43 = r8
            int r8 = r10.switchingToMode
            if (r8 != r15) goto L_0x07ab
            r44 = r14
            goto L_0x07d7
        L_0x07ab:
            int r15 = r10.sendPhotoType
            r44 = r14
            r14 = 1
            if (r15 != r14) goto L_0x07bf
            if (r8 == 0) goto L_0x07bd
            r8 = 3
            if (r0 == r8) goto L_0x07bb
            r8 = 2
            if (r0 == r8) goto L_0x07bb
            goto L_0x07bd
        L_0x07bb:
            r0 = 0
            goto L_0x07be
        L_0x07bd:
            r0 = 1
        L_0x07be:
            goto L_0x07de
        L_0x07bf:
            android.animation.AnimatorSet r14 = r10.imageMoveAnimation
            if (r14 == 0) goto L_0x07c6
            r14 = -1
            if (r8 != r14) goto L_0x07d1
        L_0x07c6:
            if (r0 == 0) goto L_0x07d1
            r14 = 1
            if (r0 == r14) goto L_0x07d1
            r0 = -1
            if (r8 == r0) goto L_0x07cf
            goto L_0x07d1
        L_0x07cf:
            r0 = 0
            goto L_0x07d2
        L_0x07d1:
            r0 = 1
        L_0x07d2:
            goto L_0x07de
        L_0x07d3:
            r43 = r8
            r44 = r14
        L_0x07d7:
            r0 = 1
            goto L_0x07de
        L_0x07d9:
            r43 = r8
            r44 = r14
            r0 = 0
        L_0x07de:
            if (r0 == 0) goto L_0x0a55
            r14 = r1
            r15 = r4
            org.telegram.ui.Components.Crop.CropTransform r8 = r10.cropTransform
            int r8 = r8.getOrientation()
            r45 = r0
            r0 = 90
            if (r8 == r0) goto L_0x07f2
            r0 = 270(0x10e, float:3.78E-43)
            if (r8 != r0) goto L_0x07f8
        L_0x07f2:
            r0 = r2
            r2 = r5
            r5 = r0
            r0 = r14
            r14 = r15
            r15 = r0
        L_0x07f8:
            int r0 = r10.sendPhotoType
            r46 = r7
            r7 = 1
            if (r0 == r7) goto L_0x080d
            int r0 = r10.currentEditMode
            r7 = 3
            if (r0 == r7) goto L_0x0808
            int r0 = r10.switchingToMode
            if (r0 != r7) goto L_0x080d
        L_0x0808:
            r0 = 1065353216(0x3var_, float:1.0)
            r47 = r3
            goto L_0x0847
        L_0x080d:
            android.animation.AnimatorSet r0 = r10.imageMoveAnimation
            if (r0 == 0) goto L_0x0838
            int r0 = r10.switchingToMode
            r7 = -1
            if (r0 == r7) goto L_0x0838
            int r7 = r10.currentEditMode
            r47 = r3
            r3 = 1
            if (r7 == r3) goto L_0x0835
            if (r0 == r3) goto L_0x0835
            r3 = 2
            if (r7 == r3) goto L_0x0825
            r3 = 3
            if (r7 != r3) goto L_0x0829
        L_0x0825:
            r3 = -1
            if (r0 != r3) goto L_0x0829
            goto L_0x0835
        L_0x0829:
            if (r0 != 0) goto L_0x082e
            float r0 = r10.animationValue
            goto L_0x0847
        L_0x082e:
            float r0 = r10.animationValue
            r3 = 1065353216(0x3var_, float:1.0)
            float r0 = r3 - r0
            goto L_0x0847
        L_0x0835:
            r0 = 1065353216(0x3var_, float:1.0)
            goto L_0x0847
        L_0x0838:
            r47 = r3
            int r0 = r10.currentEditMode
            r3 = 2
            if (r0 == r3) goto L_0x0846
            r3 = 3
            if (r0 != r3) goto L_0x0843
            goto L_0x0846
        L_0x0843:
            r0 = 1065353216(0x3var_, float:1.0)
            goto L_0x0847
        L_0x0846:
            r0 = 0
        L_0x0847:
            org.telegram.ui.Components.Crop.CropTransform r3 = r10.cropTransform
            float r3 = r3.getCropPw()
            org.telegram.ui.Components.Crop.CropTransform r7 = r10.cropTransform
            float r7 = r7.getCropPh()
            r24 = r8
            float r8 = (float) r2
            r21 = 1065353216(0x3var_, float:1.0)
            float r25 = r21 - r3
            float r26 = r21 - r0
            float r25 = r25 * r26
            float r25 = r3 + r25
            float r8 = r8 * r25
            int r2 = (int) r8
            float r8 = (float) r5
            float r25 = r21 - r7
            float r26 = r21 - r0
            float r25 = r25 * r26
            float r25 = r7 + r25
            float r8 = r8 * r25
            int r5 = (int) r8
            float r8 = (float) r12
            r25 = r3
            float r3 = (float) r2
            float r8 = r8 / r3
            float r3 = (float) r5
            float r3 = r3 * r8
            r26 = r7
            float r7 = (float) r9
            int r3 = (r3 > r7 ? 1 : (r3 == r7 ? 0 : -1))
            if (r3 <= 0) goto L_0x0882
            float r3 = (float) r9
            float r7 = (float) r5
            float r3 = r3 / r7
            goto L_0x0883
        L_0x0882:
            r3 = r8
        L_0x0883:
            int r7 = r10.sendPhotoType
            r8 = 1
            if (r7 == r8) goto L_0x08f9
            int r7 = r10.currentEditMode
            if (r7 != r8) goto L_0x089a
            int r7 = r10.switchingToMode
            if (r7 != 0) goto L_0x0891
            goto L_0x089a
        L_0x0891:
            r48 = r1
            r27 = r2
            r51 = r4
            r28 = r5
            goto L_0x0901
        L_0x089a:
            org.telegram.ui.PhotoViewer$EditState r7 = r10.editState
            org.telegram.messenger.MediaController$CropState r7 = r7.cropState
            if (r7 == 0) goto L_0x08f9
            float r7 = (float) r2
            float r7 = r7 * r3
            float r8 = (float) r5
            float r8 = r8 * r3
            r27 = r2
            float r2 = (float) r12
            r28 = r5
            float r5 = (float) r1
            float r2 = r2 / r5
            float r5 = (float) r4
            float r5 = r5 * r2
            r23 = r2
            float r2 = (float) r9
            int r2 = (r5 > r2 ? 1 : (r5 == r2 ? 0 : -1))
            if (r2 <= 0) goto L_0x08bb
            float r2 = (float) r9
            float r5 = (float) r4
            float r2 = r2 / r5
            goto L_0x08bd
        L_0x08bb:
            r2 = r23
        L_0x08bd:
            float r5 = (float) r1
            float r5 = r5 * r2
            float r23 = r13 - r32
            float r5 = r5 / r23
            r48 = r1
            float r1 = (float) r4
            float r1 = r1 * r2
            float r23 = r13 - r32
            float r1 = r1 / r23
            float r23 = r5 - r7
            r21 = 1065353216(0x3var_, float:1.0)
            float r49 = r21 - r0
            float r23 = r23 * r49
            r49 = r2
            float r2 = r7 + r23
            float r23 = r1 - r8
            float r50 = r21 - r0
            float r23 = r23 * r50
            r50 = r1
            float r1 = r8 + r23
            r51 = r4
            float r4 = -r2
            float r4 = r4 / r30
            r23 = r5
            float r5 = -r1
            float r5 = r5 / r30
            r52 = r7
            float r7 = r2 / r30
            r53 = r2
            float r2 = r1 / r30
            r11.clipRect(r4, r5, r7, r2)
            goto L_0x0901
        L_0x08f9:
            r48 = r1
            r27 = r2
            r51 = r4
            r28 = r5
        L_0x0901:
            int r1 = r10.sendPhotoType
            r2 = 1
            if (r1 == r2) goto L_0x092b
            org.telegram.ui.Components.Crop.CropTransform r1 = r10.cropTransform
            boolean r1 = r1.hasViewTransform()
            if (r1 == 0) goto L_0x090f
            goto L_0x092b
        L_0x090f:
            android.view.TextureView r1 = r10.videoTextureView
            if (r1 == 0) goto L_0x0a4f
            r2 = 1065353216(0x3var_, float:1.0)
            r1.setScaleX(r2)
            android.view.TextureView r1 = r10.videoTextureView
            r1.setScaleY(r2)
            org.telegram.ui.PhotoViewer$FirstFrameView r1 = r10.firstFrameView
            if (r1 == 0) goto L_0x0a4f
            r1.setScaleX(r2)
            org.telegram.ui.PhotoViewer$FirstFrameView r1 = r10.firstFrameView
            r1.setScaleY(r2)
            goto L_0x0a4f
        L_0x092b:
            int r1 = r10.currentEditMode
            r2 = 1
            if (r1 == r2) goto L_0x097b
            int r1 = r10.sendPhotoType
            if (r1 != r2) goto L_0x0935
            goto L_0x097b
        L_0x0935:
            android.view.TextureView r1 = r10.videoTextureView
            if (r1 == 0) goto L_0x095c
            org.telegram.ui.PhotoViewer$EditState r2 = r10.editState
            org.telegram.messenger.MediaController$CropState r2 = r2.cropState
            if (r2 == 0) goto L_0x094a
            org.telegram.ui.PhotoViewer$EditState r2 = r10.editState
            org.telegram.messenger.MediaController$CropState r2 = r2.cropState
            boolean r2 = r2.mirrored
            if (r2 == 0) goto L_0x094a
            r2 = -1082130432(0xffffffffbvar_, float:-1.0)
            goto L_0x094c
        L_0x094a:
            r2 = 1065353216(0x3var_, float:1.0)
        L_0x094c:
            r1.setScaleX(r2)
            org.telegram.ui.PhotoViewer$FirstFrameView r1 = r10.firstFrameView
            if (r1 == 0) goto L_0x095c
            android.view.TextureView r2 = r10.videoTextureView
            float r2 = r2.getScaleX()
            r1.setScaleX(r2)
        L_0x095c:
            org.telegram.ui.PhotoViewer$EditState r1 = r10.editState
            org.telegram.messenger.MediaController$CropState r1 = r1.cropState
            if (r1 == 0) goto L_0x0969
            org.telegram.ui.PhotoViewer$EditState r1 = r10.editState
            org.telegram.messenger.MediaController$CropState r1 = r1.cropState
            float r1 = r1.cropScale
            goto L_0x096b
        L_0x0969:
            r1 = 1065353216(0x3var_, float:1.0)
        L_0x096b:
            r2 = 1065353216(0x3var_, float:1.0)
            float r4 = r1 - r2
            float r5 = r2 - r0
            float r4 = r4 * r5
            float r4 = r4 + r2
            float r2 = r3 / r6
            float r2 = r2 / r4
            float r1 = r1 * r2
            goto L_0x09f1
        L_0x097b:
            android.view.TextureView r1 = r10.videoTextureView
            if (r1 == 0) goto L_0x099c
            org.telegram.ui.Components.Crop.CropTransform r2 = r10.cropTransform
            boolean r2 = r2.isMirrored()
            if (r2 == 0) goto L_0x098a
            r2 = -1082130432(0xffffffffbvar_, float:-1.0)
            goto L_0x098c
        L_0x098a:
            r2 = 1065353216(0x3var_, float:1.0)
        L_0x098c:
            r1.setScaleX(r2)
            org.telegram.ui.PhotoViewer$FirstFrameView r1 = r10.firstFrameView
            if (r1 == 0) goto L_0x099c
            android.view.TextureView r2 = r10.videoTextureView
            float r2 = r2.getScaleX()
            r1.setScaleX(r2)
        L_0x099c:
            org.telegram.ui.Components.Crop.CropTransform r1 = r10.cropTransform
            float r1 = r1.getTrueCropScale()
            r2 = 1065353216(0x3var_, float:1.0)
            float r1 = r1 - r2
            float r4 = r2 - r0
            float r1 = r1 * r4
            float r1 = r1 + r2
            org.telegram.ui.Components.Crop.CropTransform r2 = r10.cropTransform
            float r2 = r2.getScale()
            float r2 = r2 / r1
            float r4 = (float) r12
            float r5 = (float) r14
            float r4 = r4 / r5
            float r5 = (float) r15
            float r5 = r5 * r4
            float r7 = (float) r9
            int r5 = (r5 > r7 ? 1 : (r5 == r7 ? 0 : -1))
            if (r5 <= 0) goto L_0x09c0
            float r5 = (float) r9
            float r7 = (float) r15
            float r4 = r5 / r7
        L_0x09c0:
            float r5 = r4 / r6
            float r2 = r2 * r5
            int r5 = r10.sendPhotoType
            r7 = 1
            if (r5 != r7) goto L_0x09ef
            int r5 = r10.currentEditMode
            r7 = 3
            if (r5 == r7) goto L_0x09de
            int r5 = r10.switchingToMode
            if (r5 != r7) goto L_0x09d3
            goto L_0x09de
        L_0x09d3:
            if (r5 != 0) goto L_0x09ef
            org.telegram.ui.Components.Crop.CropTransform r5 = r10.cropTransform
            float r5 = r5.getMinScale()
            float r2 = r2 / r5
            r1 = r2
            goto L_0x09f0
        L_0x09de:
            org.telegram.ui.Components.Crop.CropTransform r5 = r10.cropTransform
            float r5 = r5.getMinScale()
            r7 = 1065353216(0x3var_, float:1.0)
            float r5 = r5 - r7
            float r8 = r7 - r0
            float r5 = r5 * r8
            float r5 = r5 + r7
            float r2 = r2 / r5
            r1 = r2
            goto L_0x09f0
        L_0x09ef:
            r1 = r2
        L_0x09f0:
        L_0x09f1:
            org.telegram.ui.Components.Crop.CropTransform r2 = r10.cropTransform
            float r2 = r2.getCropAreaX()
            float r2 = r2 * r0
            org.telegram.ui.Components.Crop.CropTransform r4 = r10.cropTransform
            float r4 = r4.getCropAreaY()
            float r4 = r4 * r0
            r11.translate(r2, r4)
            r11.scale(r1, r1)
            org.telegram.ui.Components.Crop.CropTransform r2 = r10.cropTransform
            float r2 = r2.getCropPx()
            float r4 = (float) r14
            float r2 = r2 * r4
            float r2 = r2 * r6
            float r2 = r2 * r0
            org.telegram.ui.Components.Crop.CropTransform r4 = r10.cropTransform
            float r4 = r4.getCropPy()
            float r5 = (float) r15
            float r4 = r4 * r5
            float r4 = r4 * r6
            float r4 = r4 * r0
            r11.translate(r2, r4)
            org.telegram.ui.Components.Crop.CropTransform r2 = r10.cropTransform
            float r2 = r2.getRotation()
            r4 = r24
            float r5 = (float) r4
            float r2 = r2 + r5
            r5 = 1127481344(0x43340000, float:180.0)
            int r7 = (r2 > r5 ? 1 : (r2 == r5 ? 0 : -1))
            if (r7 <= 0) goto L_0x0a37
            r5 = 1135869952(0x43b40000, float:360.0)
            float r2 = r2 - r5
        L_0x0a37:
            int r5 = r10.sendPhotoType
            r7 = 1
            if (r5 != r7) goto L_0x0a49
            int r5 = r10.currentEditMode
            r7 = 3
            if (r5 == r7) goto L_0x0a45
            int r5 = r10.switchingToMode
            if (r5 != r7) goto L_0x0a49
        L_0x0a45:
            r11.rotate(r2)
            goto L_0x0a4e
        L_0x0a49:
            float r5 = r2 * r0
            r11.rotate(r5)
        L_0x0a4e:
        L_0x0a4f:
            r15 = r3
            r2 = r27
            r5 = r28
            goto L_0x0a61
        L_0x0a55:
            r45 = r0
            r48 = r1
            r47 = r3
            r51 = r4
            r46 = r7
            r15 = r23
        L_0x0a61:
            int r0 = r10.currentEditMode
            r1 = 3
            if (r0 != r1) goto L_0x0a8f
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r0 = r10.containerView
            org.telegram.ui.ActionBar.AdjustPanLayoutHelper r0 = r0.adjustPanLayoutHelper
            boolean r0 = r0.animationInProgress()
            if (r0 == 0) goto L_0x0a7b
            int r0 = r10.keyboardSize
            float r0 = (float) r0
            float r0 = r0 / r30
            float r1 = r10.currentPanTranslationY
            float r1 = r1 / r30
            float r0 = r0 + r1
            goto L_0x0a7c
        L_0x0a7b:
            r0 = 0
        L_0x0a7c:
            org.telegram.ui.Components.PhotoPaintView r1 = r10.photoPaintView
            float r26 = r35 + r0
            float r3 = (float) r2
            float r27 = r3 * r15
            float r3 = (float) r5
            float r28 = r3 * r15
            r23 = r1
            r24 = r13
            r25 = r31
            r23.setTransform(r24, r25, r26, r27, r28)
        L_0x0a8f:
            r0 = 1048576000(0x3e800000, float:0.25)
            if (r47 == 0) goto L_0x0b01
            r1 = 0
            java.util.ArrayList<java.lang.Object> r3 = r10.imagesArrLocals
            boolean r3 = r3.isEmpty()
            if (r3 != 0) goto L_0x0abf
            int r3 = r10.currentEditMode
            r4 = 1
            if (r3 == r4) goto L_0x0ab9
            int r3 = r10.sendPhotoType
            if (r3 != r4) goto L_0x0aa6
            goto L_0x0ab9
        L_0x0aa6:
            org.telegram.ui.PhotoViewer$EditState r3 = r10.editState
            org.telegram.messenger.MediaController$CropState r3 = r3.cropState
            if (r3 == 0) goto L_0x0ab6
            org.telegram.ui.PhotoViewer$EditState r3 = r10.editState
            org.telegram.messenger.MediaController$CropState r3 = r3.cropState
            boolean r3 = r3.mirrored
            if (r3 == 0) goto L_0x0ab6
            r4 = 1
            goto L_0x0ab7
        L_0x0ab6:
            r4 = 0
        L_0x0ab7:
            r1 = r4
            goto L_0x0abf
        L_0x0ab9:
            org.telegram.ui.Components.Crop.CropTransform r3 = r10.cropTransform
            boolean r1 = r3.isMirrored()
        L_0x0abf:
            r3 = 0
            if (r1 == 0) goto L_0x0acd
            r55.save()
            r4 = -1082130432(0xffffffffbvar_, float:-1.0)
            r7 = 1065353216(0x3var_, float:1.0)
            r11.scale(r4, r7)
            r3 = 1
        L_0x0acd:
            r4 = 0
            int r7 = (r38 > r4 ? 1 : (r38 == r4 ? 0 : -1))
            if (r7 <= 0) goto L_0x0aed
            if (r3 != 0) goto L_0x0ad8
            r55.save()
            r3 = 1
        L_0x0ad8:
            float r4 = r38 * r30
            r7 = 1065353216(0x3var_, float:1.0)
            float r4 = r7 - r4
            r11.scale(r4, r7)
            float r4 = r38 * r19
            float r8 = r7 - r38
            float r4 = r4 * r8
            float r4 = r4 * r0
            r7 = 0
            r11.skew(r7, r4)
        L_0x0aed:
            org.telegram.ui.Components.PhotoViewerWebView r4 = r10.photoViewerWebView
            if (r4 == 0) goto L_0x0af7
            boolean r4 = r4.isLoaded()
            if (r4 != 0) goto L_0x0afc
        L_0x0af7:
            org.telegram.messenger.ImageReceiver r4 = r10.centerImage
            r4.draw(r11)
        L_0x0afc:
            if (r3 == 0) goto L_0x0b01
            r55.restore()
        L_0x0b01:
            r1 = 0
            r3 = 0
            int r4 = (r38 > r3 ? 1 : (r38 == r3 ? 0 : -1))
            if (r4 <= 0) goto L_0x0b20
            r55.save()
            float r3 = r38 * r30
            r4 = 1065353216(0x3var_, float:1.0)
            float r3 = r4 - r3
            r11.scale(r3, r4)
            float r3 = r38 * r19
            float r7 = r4 - r38
            float r3 = r3 * r7
            float r3 = r3 * r0
            r0 = 0
            r11.skew(r0, r3)
            r1 = 1
        L_0x0b20:
            r0 = r46
            int r3 = -r0
            r4 = 2
            int r3 = r3 / r4
            float r3 = (float) r3
            r7 = r44
            int r8 = -r7
            int r8 = r8 / r4
            float r4 = (float) r8
            r11.translate(r3, r4)
            if (r33 != 0) goto L_0x0b38
            org.telegram.ui.Components.PaintingOverlay r3 = r10.paintingOverlay
            int r3 = r3.getVisibility()
            if (r3 != 0) goto L_0x0b3b
        L_0x0b38:
            r11.scale(r6, r6)
        L_0x0b3b:
            if (r33 == 0) goto L_0x0bca
            boolean r3 = r10.videoCrossfadeStarted
            if (r3 != 0) goto L_0x0b5a
            boolean r3 = r10.textureUploaded
            if (r3 == 0) goto L_0x0b5a
            boolean r3 = r10.videoSizeSet
            if (r3 == 0) goto L_0x0b5a
            r3 = 1
            r10.videoCrossfadeStarted = r3
            r3 = 0
            r10.videoCrossfadeAlpha = r3
            long r3 = java.lang.System.currentTimeMillis()
            r10.videoCrossfadeAlphaLastTime = r3
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r3 = r10.containerView
            r3.getMeasuredHeight()
        L_0x0b5a:
            android.view.TextureView r3 = r10.videoTextureView
            float r4 = r10.videoCrossfadeAlpha
            float r8 = r43 * r4
            r3.setAlpha(r8)
            android.view.TextureView r3 = r10.videoTextureView
            boolean r4 = r3 instanceof org.telegram.ui.Components.VideoEditTextureView
            if (r4 == 0) goto L_0x0b8d
            org.telegram.ui.Components.VideoEditTextureView r3 = (org.telegram.ui.Components.VideoEditTextureView) r3
            int r4 = r12 - r0
            r8 = 2
            int r4 = r4 / r8
            int r14 = r54.getAdditionX()
            int r4 = r4 + r14
            float r4 = (float) r4
            float r4 = r4 + r34
            int r14 = r9 - r7
            int r14 = r14 / r8
            int r8 = r54.getAdditionY()
            int r14 = r14 + r8
            float r8 = (float) r14
            float r8 = r8 + r35
            float r14 = r10.currentPanTranslationY
            float r8 = r8 + r14
            float r14 = (float) r0
            r19 = r2
            float r2 = (float) r7
            r3.setViewRect(r4, r8, r14, r2)
            goto L_0x0b8f
        L_0x0b8d:
            r19 = r2
        L_0x0b8f:
            com.google.android.exoplayer2.ui.AspectRatioFrameLayout r2 = r10.aspectRatioFrameLayout
            r2.draw(r11)
            boolean r2 = r10.videoCrossfadeStarted
            if (r2 == 0) goto L_0x0bc0
            float r2 = r10.videoCrossfadeAlpha
            r3 = 1065353216(0x3var_, float:1.0)
            int r4 = (r2 > r3 ? 1 : (r2 == r3 ? 0 : -1))
            if (r4 >= 0) goto L_0x0bc0
            r3 = r39
            float r8 = (float) r3
            boolean r14 = r10.playerInjected
            if (r14 == 0) goto L_0x0baa
            r14 = 1120403456(0x42CLASSNAME, float:100.0)
            goto L_0x0bac
        L_0x0baa:
            r14 = 1128792064(0x43480000, float:200.0)
        L_0x0bac:
            float r8 = r8 / r14
            float r2 = r2 + r8
            r10.videoCrossfadeAlpha = r2
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r2 = r10.containerView
            r2.invalidate()
            float r2 = r10.videoCrossfadeAlpha
            r8 = 1065353216(0x3var_, float:1.0)
            int r2 = (r2 > r8 ? 1 : (r2 == r8 ? 0 : -1))
            if (r2 <= 0) goto L_0x0bc2
            r10.videoCrossfadeAlpha = r8
            goto L_0x0bc2
        L_0x0bc0:
            r3 = r39
        L_0x0bc2:
            org.telegram.ui.Components.PaintingOverlay r2 = r10.paintingOverlay
            r8 = r43
            r2.setAlpha(r8)
            goto L_0x0bd0
        L_0x0bca:
            r19 = r2
            r3 = r39
            r8 = r43
        L_0x0bd0:
            if (r1 == 0) goto L_0x0bef
            r55.restore()
            int r2 = -r0
            r14 = 2
            int r2 = r2 / r14
            float r2 = (float) r2
            r46 = r0
            int r0 = -r7
            int r0 = r0 / r14
            float r0 = (float) r0
            r11.translate(r2, r0)
            if (r33 != 0) goto L_0x0beb
            org.telegram.ui.Components.PaintingOverlay r0 = r10.paintingOverlay
            int r0 = r0.getVisibility()
            if (r0 != 0) goto L_0x0bf1
        L_0x0beb:
            r11.scale(r6, r6)
            goto L_0x0bf1
        L_0x0bef:
            r46 = r0
        L_0x0bf1:
            org.telegram.ui.Components.PaintingOverlay r0 = r10.paintingOverlay
            int r0 = r0.getVisibility()
            if (r0 != 0) goto L_0x0c1c
            boolean r0 = r10.isCurrentVideo
            if (r0 != 0) goto L_0x0CLASSNAME
            int r0 = r10.currentEditMode
            r2 = 2
            if (r0 != r2) goto L_0x0CLASSNAME
            int r0 = r10.switchingToMode
            r2 = -1
            if (r0 == r2) goto L_0x0c1c
        L_0x0CLASSNAME:
            org.telegram.ui.Components.PaintingOverlay r0 = r10.paintingOverlay
            int r0 = r0.getMeasuredWidth()
            org.telegram.ui.Components.PaintingOverlay r2 = r10.paintingOverlay
            int r2 = r2.getMeasuredHeight()
            r14 = 0
            r11.clipRect(r14, r14, r0, r2)
            org.telegram.ui.Components.PaintingOverlay r0 = r10.paintingOverlay
            r0.draw(r11)
        L_0x0c1c:
            r55.restore()
            r0 = 0
        L_0x0CLASSNAME:
            android.graphics.drawable.GradientDrawable[] r2 = r10.pressedDrawable
            int r14 = r2.length
            if (r0 >= r14) goto L_0x0cf0
            boolean[] r14 = r10.drawPressedDrawable
            boolean r14 = r14[r0]
            if (r14 != 0) goto L_0x0c3d
            float[] r14 = r10.pressedDrawableAlpha
            r14 = r14[r0]
            r20 = 0
            int r14 = (r14 > r20 ? 1 : (r14 == r20 ? 0 : -1))
            if (r14 == 0) goto L_0x0CLASSNAME
            goto L_0x0c3d
        L_0x0CLASSNAME:
            r23 = r1
            r24 = r5
            r25 = r6
            goto L_0x0CLASSNAME
        L_0x0c3d:
            r2 = r2[r0]
            float[] r14 = r10.pressedDrawableAlpha
            r14 = r14[r0]
            float r14 = r14 * r16
            int r14 = (int) r14
            r2.setAlpha(r14)
            if (r0 != 0) goto L_0x0CLASSNAME
            android.graphics.drawable.GradientDrawable[] r2 = r10.pressedDrawable
            r2 = r2[r0]
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r14 = r10.containerView
            int r14 = r14.getMeasuredWidth()
            int r14 = r14 / 5
            r23 = r1
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r1 = r10.containerView
            int r1 = r1.getMeasuredHeight()
            r24 = r5
            r5 = 0
            r2.setBounds(r5, r5, r14, r1)
            r25 = r6
            goto L_0x0CLASSNAME
        L_0x0CLASSNAME:
            r23 = r1
            r24 = r5
            android.graphics.drawable.GradientDrawable[] r1 = r10.pressedDrawable
            r1 = r1[r0]
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r2 = r10.containerView
            int r2 = r2.getMeasuredWidth()
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r5 = r10.containerView
            int r5 = r5.getMeasuredWidth()
            int r5 = r5 / 5
            int r2 = r2 - r5
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r5 = r10.containerView
            int r5 = r5.getMeasuredWidth()
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r14 = r10.containerView
            int r14 = r14.getMeasuredHeight()
            r25 = r6
            r6 = 0
            r1.setBounds(r2, r6, r5, r14)
        L_0x0CLASSNAME:
            android.graphics.drawable.GradientDrawable[] r1 = r10.pressedDrawable
            r1 = r1[r0]
            r1.draw(r11)
        L_0x0CLASSNAME:
            boolean[] r1 = r10.drawPressedDrawable
            boolean r1 = r1[r0]
            if (r1 == 0) goto L_0x0cc4
            float[] r1 = r10.pressedDrawableAlpha
            r2 = r1[r0]
            r5 = 1065353216(0x3var_, float:1.0)
            int r2 = (r2 > r5 ? 1 : (r2 == r5 ? 0 : -1))
            if (r2 >= 0) goto L_0x0cc1
            r2 = r1[r0]
            float r6 = (float) r3
            r14 = 1127481344(0x43340000, float:180.0)
            float r6 = r6 / r14
            float r2 = r2 + r6
            r1[r0] = r2
            r2 = r1[r0]
            int r2 = (r2 > r5 ? 1 : (r2 == r5 ? 0 : -1))
            if (r2 <= 0) goto L_0x0cb9
            r1[r0] = r5
        L_0x0cb9:
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r1 = r10.containerView
            r1.invalidate()
            r14 = 1127481344(0x43340000, float:180.0)
            goto L_0x0ce6
        L_0x0cc1:
            r14 = 1127481344(0x43340000, float:180.0)
            goto L_0x0ce6
        L_0x0cc4:
            float[] r1 = r10.pressedDrawableAlpha
            r2 = r1[r0]
            r5 = 0
            int r2 = (r2 > r5 ? 1 : (r2 == r5 ? 0 : -1))
            if (r2 <= 0) goto L_0x0ce4
            r2 = r1[r0]
            float r6 = (float) r3
            r14 = 1127481344(0x43340000, float:180.0)
            float r6 = r6 / r14
            float r2 = r2 - r6
            r1[r0] = r2
            r2 = r1[r0]
            int r2 = (r2 > r5 ? 1 : (r2 == r5 ? 0 : -1))
            if (r2 >= 0) goto L_0x0cde
            r1[r0] = r5
        L_0x0cde:
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r1 = r10.containerView
            r1.invalidate()
            goto L_0x0ce6
        L_0x0ce4:
            r14 = 1127481344(0x43340000, float:180.0)
        L_0x0ce6:
            int r0 = r0 + 1
            r1 = r23
            r5 = r24
            r6 = r25
            goto L_0x0CLASSNAME
        L_0x0cf0:
            r23 = r1
            r24 = r5
            r25 = r6
        L_0x0cf6:
            r1 = r54
            r2 = r55
            r14 = r3
            r3 = r34
            r4 = r13
            r5 = r35
            r6 = r8
            r1.drawProgress(r2, r3, r4, r5, r6)
            org.telegram.messenger.ImageReceiver r0 = r10.sideImage
            org.telegram.messenger.ImageReceiver r1 = r10.leftImage
            if (r0 != r1) goto L_0x0e97
            boolean r0 = r0.hasBitmapImage()
            if (r0 == 0) goto L_0x0e41
            r55.save()
            int r3 = r12 / 2
            float r0 = (float) r3
            int r2 = r9 / 2
            float r1 = (float) r2
            r11.translate(r0, r1)
            float r0 = (float) r12
            float r1 = r10.scale
            r2 = 1065353216(0x3var_, float:1.0)
            float r1 = r1 + r2
            float r0 = r0 * r1
            int r1 = org.telegram.messenger.AndroidUtilities.dp(r29)
            float r1 = (float) r1
            float r0 = r0 + r1
            float r0 = -r0
            float r0 = r0 / r30
            r7 = r31
            float r0 = r0 + r7
            r1 = 0
            r11.translate(r0, r1)
            org.telegram.messenger.ImageReceiver r0 = r10.sideImage
            int r0 = r0.getBitmapWidth()
            org.telegram.messenger.ImageReceiver r1 = r10.sideImage
            int r6 = r1.getBitmapHeight()
            boolean r1 = r10.leftImageIsVideo
            if (r1 != 0) goto L_0x0d78
            org.telegram.messenger.MediaController$CropState r1 = r10.leftCropState
            if (r1 == 0) goto L_0x0d78
            org.telegram.ui.Components.Crop.CropTransform r1 = r10.leftCropTransform
            boolean r1 = r1.hasViewTransform()
            if (r1 == 0) goto L_0x0d78
            org.telegram.ui.Components.Crop.CropTransform r5 = r10.leftCropTransform
            org.telegram.messenger.MediaController$CropState r4 = r10.leftCropState
            r1 = r54
            r2 = r55
            r3 = r12
            r16 = r4
            r4 = r9
            r19 = r5
            r5 = r0
            r20 = r6
            r23 = r12
            r12 = r7
            r7 = r13
            r24 = r8
            r8 = r19
            r31 = r12
            r39 = r14
            r14 = r23
            r12 = 1073741824(0x40000000, float:2.0)
            r15 = r9
            r9 = r16
            r1.applyCrop(r2, r3, r4, r5, r6, r7, r8, r9)
            goto L_0x0d84
        L_0x0d78:
            r20 = r6
            r31 = r7
            r24 = r8
            r39 = r14
            r15 = r9
            r14 = r12
            r12 = 1073741824(0x40000000, float:2.0)
        L_0x0d84:
            float r1 = (float) r14
            float r2 = (float) r0
            float r1 = r1 / r2
            float r2 = (float) r15
            r3 = r20
            float r4 = (float) r3
            float r2 = r2 / r4
            float r4 = java.lang.Math.min(r1, r2)
            float r5 = (float) r0
            float r5 = r5 * r4
            int r5 = (int) r5
            float r6 = (float) r3
            float r6 = r6 * r4
            int r6 = (int) r6
            r7 = 0
            java.util.ArrayList<java.lang.Object> r8 = r10.imagesArrLocals
            boolean r8 = r8.isEmpty()
            if (r8 != 0) goto L_0x0dbe
            int r8 = r10.currentEditMode
            r9 = 1
            if (r8 == r9) goto L_0x0db8
            int r8 = r10.sendPhotoType
            if (r8 != r9) goto L_0x0dab
            goto L_0x0db8
        L_0x0dab:
            org.telegram.messenger.MediaController$CropState r8 = r10.leftCropState
            if (r8 == 0) goto L_0x0db5
            boolean r8 = r8.mirrored
            if (r8 == 0) goto L_0x0db5
            r8 = 1
            goto L_0x0db6
        L_0x0db5:
            r8 = 0
        L_0x0db6:
            r7 = r8
            goto L_0x0dbe
        L_0x0db8:
            org.telegram.ui.Components.Crop.CropTransform r8 = r10.leftCropTransform
            boolean r7 = r8.isMirrored()
        L_0x0dbe:
            if (r7 == 0) goto L_0x0dc8
            r8 = -1082130432(0xffffffffbvar_, float:-1.0)
            r9 = 1065353216(0x3var_, float:1.0)
            r11.scale(r8, r9)
            goto L_0x0dca
        L_0x0dc8:
            r9 = 1065353216(0x3var_, float:1.0)
        L_0x0dca:
            org.telegram.messenger.ImageReceiver r8 = r10.sideImage
            r8.setAlpha(r9)
            org.telegram.messenger.ImageReceiver r8 = r10.sideImage
            int r9 = -r5
            r16 = 2
            int r9 = r9 / 2
            float r9 = (float) r9
            int r12 = -r6
            int r12 = r12 / 2
            float r12 = (float) r12
            r16 = r1
            float r1 = (float) r5
            r17 = r2
            float r2 = (float) r6
            r8.setImageCoords(r9, r12, r1, r2)
            org.telegram.messenger.ImageReceiver r1 = r10.sideImage
            r1.draw(r11)
            org.telegram.ui.Components.PaintingOverlay r1 = r10.leftPaintingOverlay
            if (r1 == 0) goto L_0x0e3d
            int r1 = r1.getVisibility()
            if (r1 != 0) goto L_0x0e3d
            int r1 = -r5
            r2 = 2
            int r1 = r1 / r2
            int r8 = -r6
            int r8 = r8 / r2
            int r2 = r5 / 2
            int r9 = r6 / 2
            r11.clipRect(r1, r8, r2, r9)
            org.telegram.ui.Components.PaintingOverlay r1 = r10.leftPaintingOverlay
            int r1 = r1.getMeasuredWidth()
            if (r1 != r0) goto L_0x0e0f
            org.telegram.ui.Components.PaintingOverlay r1 = r10.leftPaintingOverlay
            int r1 = r1.getMeasuredHeight()
            if (r1 == r3) goto L_0x0e24
        L_0x0e0f:
            org.telegram.ui.Components.PaintingOverlay r1 = r10.leftPaintingOverlay
            r2 = 1073741824(0x40000000, float:2.0)
            int r8 = android.view.View.MeasureSpec.makeMeasureSpec(r0, r2)
            int r2 = android.view.View.MeasureSpec.makeMeasureSpec(r3, r2)
            r1.measure(r8, r2)
            org.telegram.ui.Components.PaintingOverlay r1 = r10.leftPaintingOverlay
            r2 = 0
            r1.layout(r2, r2, r0, r3)
        L_0x0e24:
            r11.scale(r4, r4)
            int r1 = -r0
            r2 = 2
            int r1 = r1 / r2
            float r1 = (float) r1
            int r8 = -r3
            int r8 = r8 / r2
            float r2 = (float) r8
            r11.translate(r1, r2)
            org.telegram.ui.Components.PaintingOverlay r1 = r10.leftPaintingOverlay
            r2 = 1065353216(0x3var_, float:1.0)
            r1.setAlpha(r2)
            org.telegram.ui.Components.PaintingOverlay r1 = r10.leftPaintingOverlay
            r1.draw(r11)
        L_0x0e3d:
            r55.restore()
            goto L_0x0e47
        L_0x0e41:
            r24 = r8
            r39 = r14
            r15 = r9
            r14 = r12
        L_0x0e47:
            org.telegram.ui.Components.GroupedPhotosListView r0 = r10.groupedPhotosListView
            r1 = 1065353216(0x3var_, float:1.0)
            float r2 = r1 - r24
            r0.setMoveProgress(r2)
            r55.save()
            float r0 = r35 / r13
            r2 = r31
            r11.translate(r2, r0)
            float r0 = (float) r14
            float r3 = r10.scale
            float r3 = r3 + r1
            float r0 = r0 * r3
            int r1 = org.telegram.messenger.AndroidUtilities.dp(r29)
            float r1 = (float) r1
            float r0 = r0 + r1
            float r0 = -r0
            float r0 = r0 / r30
            r1 = r35
            float r3 = -r1
            float r3 = r3 / r13
            r11.translate(r0, r3)
            org.telegram.ui.PhotoViewer$PhotoProgressView[] r0 = r10.photoProgressViews
            r3 = 2
            r0 = r0[r3]
            r4 = 1065353216(0x3var_, float:1.0)
            r0.setScale(r4)
            org.telegram.ui.PhotoViewer$PhotoProgressView[] r0 = r10.photoProgressViews
            r0 = r0[r3]
            r0.setAlpha(r4)
            org.telegram.ui.PhotoViewer$PhotoProgressView[] r0 = r10.photoProgressViews
            r0 = r0[r3]
            r0.onDraw(r11)
            boolean r0 = r10.isActionBarVisible
            if (r0 == 0) goto L_0x0e93
            android.widget.ImageView[] r0 = r10.fullscreenButton
            r0 = r0[r3]
            r0.setAlpha(r4)
        L_0x0e93:
            r55.restore()
            goto L_0x0eae
        L_0x0e97:
            r24 = r8
            r39 = r14
            r2 = r31
            r1 = r35
            r15 = r9
            r14 = r12
            boolean r0 = r10.isActionBarVisible
            if (r0 == 0) goto L_0x0eae
            android.widget.ImageView[] r0 = r10.fullscreenButton
            r3 = 2
            r0 = r0[r3]
            r3 = 0
            r0.setAlpha(r3)
        L_0x0eae:
            int r0 = r10.waitingForDraw
            if (r0 == 0) goto L_0x0var_
            r3 = 1
            int r0 = r0 - r3
            r10.waitingForDraw = r0
            if (r0 != 0) goto L_0x0var_
            android.widget.ImageView r0 = r10.textureImageView
            if (r0 == 0) goto L_0x0efe
            android.view.TextureView r0 = r10.videoTextureView     // Catch:{ all -> 0x0ed7 }
            int r0 = r0.getWidth()     // Catch:{ all -> 0x0ed7 }
            android.view.TextureView r3 = r10.videoTextureView     // Catch:{ all -> 0x0ed7 }
            int r3 = r3.getHeight()     // Catch:{ all -> 0x0ed7 }
            android.graphics.Bitmap$Config r4 = android.graphics.Bitmap.Config.ARGB_8888     // Catch:{ all -> 0x0ed7 }
            android.graphics.Bitmap r0 = org.telegram.messenger.Bitmaps.createBitmap(r0, r3, r4)     // Catch:{ all -> 0x0ed7 }
            r10.currentBitmap = r0     // Catch:{ all -> 0x0ed7 }
            android.view.TextureView r3 = r10.changedTextureView     // Catch:{ all -> 0x0ed7 }
            r3.getBitmap(r0)     // Catch:{ all -> 0x0ed7 }
            r3 = 0
            goto L_0x0ee7
        L_0x0ed7:
            r0 = move-exception
            android.graphics.Bitmap r3 = r10.currentBitmap
            if (r3 == 0) goto L_0x0ee3
            r3.recycle()
            r3 = 0
            r10.currentBitmap = r3
            goto L_0x0ee4
        L_0x0ee3:
            r3 = 0
        L_0x0ee4:
            org.telegram.messenger.FileLog.e((java.lang.Throwable) r0)
        L_0x0ee7:
            android.graphics.Bitmap r0 = r10.currentBitmap
            if (r0 == 0) goto L_0x0ef9
            android.widget.ImageView r0 = r10.textureImageView
            r3 = 0
            r0.setVisibility(r3)
            android.widget.ImageView r0 = r10.textureImageView
            android.graphics.Bitmap r3 = r10.currentBitmap
            r0.setImageBitmap(r3)
            goto L_0x0efe
        L_0x0ef9:
            android.widget.ImageView r0 = r10.textureImageView
            r0.setImageDrawable(r3)
        L_0x0efe:
            r3 = 1
            org.telegram.ui.Components.PipVideoOverlay.dismiss(r3)
            goto L_0x0var_
        L_0x0var_:
            org.telegram.ui.PhotoViewer$FrameLayoutDrawer r0 = r10.containerView
            r0.invalidate()
        L_0x0var_:
            boolean r0 = r10.padImageForHorizontalInsets
            if (r0 == 0) goto L_0x0f0f
            r55.restore()
        L_0x0f0f:
            com.google.android.exoplayer2.ui.AspectRatioFrameLayout r0 = r10.aspectRatioFrameLayout
            if (r0 == 0) goto L_0x0var_
            org.telegram.ui.Components.VideoForwardDrawable r0 = r10.videoForwardDrawable
            boolean r0 = r0.isAnimating()
            if (r0 == 0) goto L_0x0var_
            com.google.android.exoplayer2.ui.AspectRatioFrameLayout r0 = r10.aspectRatioFrameLayout
            int r0 = r0.getMeasuredHeight()
            float r0 = (float) r0
            float r3 = r10.scale
            r4 = 1065353216(0x3var_, float:1.0)
            float r3 = r3 - r4
            float r0 = r0 * r3
            int r0 = (int) r0
            r3 = 2
            int r0 = r0 / r3
            org.telegram.ui.Components.VideoForwardDrawable r3 = r10.videoForwardDrawable
            com.google.android.exoplayer2.ui.AspectRatioFrameLayout r4 = r10.aspectRatioFrameLayout
            int r4 = r4.getLeft()
            com.google.android.exoplayer2.ui.AspectRatioFrameLayout r5 = r10.aspectRatioFrameLayout
            int r5 = r5.getTop()
            int r5 = r5 - r0
            float r6 = r1 / r13
            int r6 = (int) r6
            int r5 = r5 + r6
            com.google.android.exoplayer2.ui.AspectRatioFrameLayout r6 = r10.aspectRatioFrameLayout
            int r6 = r6.getRight()
            com.google.android.exoplayer2.ui.AspectRatioFrameLayout r7 = r10.aspectRatioFrameLayout
            int r7 = r7.getBottom()
            int r7 = r7 + r0
            float r8 = r1 / r13
            int r8 = (int) r8
            int r7 = r7 + r8
            r3.setBounds(r4, r5, r6, r7)
            org.telegram.ui.Components.VideoForwardDrawable r3 = r10.videoForwardDrawable
            r3.draw(r11)
        L_0x0var_:
            return
        L_0x0var_:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.onDraw(android.graphics.Canvas):void");
    }

    /* renamed from: lambda$onDraw$76$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4251lambda$onDraw$76$orgtelegramuiPhotoViewer() {
        switchToNextIndex(1, false);
    }

    /* renamed from: lambda$onDraw$77$org-telegram-ui-PhotoViewer  reason: not valid java name */
    public /* synthetic */ void m4252lambda$onDraw$77$orgtelegramuiPhotoViewer() {
        switchToNextIndex(-1, false);
    }

    /* JADX WARNING: Code restructure failed: missing block: B:10:0x0018, code lost:
        r0 = r9.videoPlayer;
     */
    /* JADX WARNING: Removed duplicated region for block: B:31:0x004e  */
    /* JADX WARNING: Removed duplicated region for block: B:34:0x0052  */
    /* JADX WARNING: Removed duplicated region for block: B:37:0x0060  */
    /* JADX WARNING: Removed duplicated region for block: B:38:0x0069  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private void drawProgress(android.graphics.Canvas r10, float r11, float r12, float r13, float r14) {
        /*
            r9 = this;
            boolean r0 = r9.isCurrentVideo
            r1 = 1
            r2 = 0
            if (r0 == 0) goto L_0x0027
            org.telegram.ui.Components.VideoTimelinePlayView r0 = r9.videoTimelineView
            if (r0 == 0) goto L_0x0010
            boolean r0 = r0.isDragging()
            if (r0 != 0) goto L_0x0023
        L_0x0010:
            int r0 = r9.sendPhotoType
            if (r0 != r1) goto L_0x0018
            boolean r0 = r9.manuallyPaused
            if (r0 == 0) goto L_0x0023
        L_0x0018:
            org.telegram.ui.Components.VideoPlayer r0 = r9.videoPlayer
            if (r0 == 0) goto L_0x0025
            boolean r0 = r0.isPlaying()
            if (r0 != 0) goto L_0x0023
            goto L_0x0025
        L_0x0023:
            r0 = 0
            goto L_0x0026
        L_0x0025:
            r0 = 1
        L_0x0026:
            goto L_0x0028
        L_0x0027:
            r0 = 1
        L_0x0028:
            org.telegram.ui.Components.RadialProgressView r3 = r9.miniProgressView
            int r3 = r3.getVisibility()
            if (r3 == 0) goto L_0x0036
            android.animation.AnimatorSet r3 = r9.miniProgressAnimator
            if (r3 == 0) goto L_0x0035
            goto L_0x0036
        L_0x0035:
            r1 = 0
        L_0x0036:
            if (r0 == 0) goto L_0x00c6
            boolean r3 = r9.zoomAnimation
            r4 = 0
            if (r3 != 0) goto L_0x0046
            float r3 = -r11
            float r5 = r9.maxX
            int r3 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1))
            if (r3 <= 0) goto L_0x0046
            float r5 = r5 + r11
            goto L_0x0047
        L_0x0046:
            r5 = 0
        L_0x0047:
            r3 = r5
            r5 = 1065353216(0x3var_, float:1.0)
            int r6 = (r12 > r5 ? 1 : (r12 == r5 ? 0 : -1))
            if (r6 != 0) goto L_0x004f
            r4 = r13
        L_0x004f:
            r6 = r14
            if (r1 == 0) goto L_0x005c
            org.telegram.ui.Components.RadialProgressView r7 = r9.miniProgressView
            float r7 = r7.getAlpha()
            float r7 = r5 - r7
            float r6 = r6 * r7
        L_0x005c:
            boolean r7 = r9.pipAnimationInProgress
            if (r7 == 0) goto L_0x0069
            org.telegram.ui.ActionBar.ActionBar r7 = r9.actionBar
            float r7 = r7.getAlpha()
            float r6 = r6 * r7
            goto L_0x0085
        L_0x0069:
            org.telegram.ui.PhotoViewer$PhotoProgressView[] r7 = r9.photoProgressViews
            r7 = r7[r2]
            int r7 = r7.backgroundState
            r8 = 4
            if (r7 != r8) goto L_0x0085
            r7 = 1090519040(0x41000000, float:8.0)
            float r7 = org.telegram.messenger.AndroidUtilities.dpf2(r7)
            org.telegram.ui.ActionBar.ActionBar r8 = r9.actionBar
            float r8 = r8.getAlpha()
            float r8 = r5 - r8
            float r7 = r7 * r8
            float r4 = r4 + r7
        L_0x0085:
            r10.save()
            r10.translate(r3, r4)
            org.telegram.ui.PhotoViewer$PhotoProgressView[] r7 = r9.photoProgressViews
            r7 = r7[r2]
            r7.setScale(r5)
            org.telegram.ui.PhotoViewer$PhotoProgressView[] r5 = r9.photoProgressViews
            r5 = r5[r2]
            r5.setAlpha(r6)
            org.telegram.ui.PhotoViewer$PhotoProgressView[] r5 = r9.photoProgressViews
            r5 = r5[r2]
            r5.onDraw(r10)
            boolean r5 = r9.isActionBarVisible
            if (r5 == 0) goto L_0x00c3
            boolean r5 = r9.allowShowFullscreenButton
            if (r5 == 0) goto L_0x00c3
            android.widget.ImageView[] r5 = r9.fullscreenButton
            r5 = r5[r2]
            java.lang.Object r5 = r5.getTag()
            if (r5 != 0) goto L_0x00c3
            android.widget.ImageView[] r5 = r9.fullscreenButton
            r7 = r5[r2]
            r2 = r5[r2]
            float r2 = r2.getAlpha()
            float r2 = java.lang.Math.min(r2, r14)
            r7.setAlpha(r2)
        L_0x00c3:
            r10.restore()
        L_0x00c6:
            if (r1 == 0) goto L_0x00ec
            boolean r2 = r9.pipAnimationInProgress
            if (r2 != 0) goto L_0x00ec
            r10.save()
            org.telegram.ui.Components.RadialProgressView r2 = r9.miniProgressView
            int r2 = r2.getLeft()
            float r2 = (float) r2
            float r2 = r2 + r11
            org.telegram.ui.Components.RadialProgressView r3 = r9.miniProgressView
            int r3 = r3.getTop()
            float r3 = (float) r3
            float r4 = r13 / r12
            float r3 = r3 + r4
            r10.translate(r2, r3)
            org.telegram.ui.Components.RadialProgressView r2 = r9.miniProgressView
            r2.draw(r10)
            r10.restore()
        L_0x00ec:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.drawProgress(android.graphics.Canvas, float, float, float, float):void");
    }

    /* JADX WARNING: Removed duplicated region for block: B:58:0x0136  */
    /* JADX WARNING: Removed duplicated region for block: B:59:0x013a  */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private int[] applyCrop(android.graphics.Canvas r30, int r31, int r32, int r33, int r34, float r35, org.telegram.ui.Components.Crop.CropTransform r36, org.telegram.messenger.MediaController.CropState r37) {
        /*
            r29 = this;
            r0 = r29
            r1 = r30
            r2 = r31
            r3 = r32
            r4 = r37
            r5 = r33
            r6 = r34
            float r7 = (float) r2
            float r8 = (float) r5
            float r7 = r7 / r8
            float r8 = (float) r3
            float r9 = (float) r6
            float r8 = r8 / r9
            float r7 = java.lang.Math.min(r7, r8)
            r8 = r5
            r9 = r6
            int r10 = r36.getOrientation()
            r11 = 90
            if (r10 == r11) goto L_0x002c
            r11 = 270(0x10e, float:3.78E-43)
            if (r10 != r11) goto L_0x0027
            goto L_0x002c
        L_0x0027:
            r12 = r33
            r13 = r34
            goto L_0x0034
        L_0x002c:
            r11 = r33
            r12 = r34
            r13 = r11
            r11 = r8
            r8 = r9
            r9 = r11
        L_0x0034:
            int r11 = r0.sendPhotoType
            r14 = 3
            r15 = 1
            r16 = 1065353216(0x3var_, float:1.0)
            if (r11 == r15) goto L_0x0047
            int r11 = r0.currentEditMode
            if (r11 == r14) goto L_0x0044
            int r11 = r0.switchingToMode
            if (r11 != r14) goto L_0x0047
        L_0x0044:
            r11 = 1065353216(0x3var_, float:1.0)
            goto L_0x007a
        L_0x0047:
            android.animation.AnimatorSet r11 = r0.imageMoveAnimation
            if (r11 == 0) goto L_0x006d
            int r11 = r0.switchingToMode
            r14 = -1
            if (r11 == r14) goto L_0x006d
            int r14 = r0.currentEditMode
            if (r14 == r15) goto L_0x006a
            if (r11 == r15) goto L_0x006a
            r15 = 2
            if (r14 == r15) goto L_0x005c
            r15 = 3
            if (r14 != r15) goto L_0x0060
        L_0x005c:
            r14 = -1
            if (r11 != r14) goto L_0x0060
            goto L_0x006a
        L_0x0060:
            if (r11 != 0) goto L_0x0065
            float r11 = r0.animationValue
            goto L_0x007a
        L_0x0065:
            float r11 = r0.animationValue
            float r11 = r16 - r11
            goto L_0x007a
        L_0x006a:
            r11 = 1065353216(0x3var_, float:1.0)
            goto L_0x007a
        L_0x006d:
            int r11 = r0.currentEditMode
            r14 = 2
            if (r11 == r14) goto L_0x0079
            r14 = 3
            if (r11 != r14) goto L_0x0076
            goto L_0x0079
        L_0x0076:
            r11 = 1065353216(0x3var_, float:1.0)
            goto L_0x007a
        L_0x0079:
            r11 = 0
        L_0x007a:
            float r14 = r36.getCropPw()
            float r15 = r36.getCropPh()
            r17 = r10
            float r10 = (float) r12
            float r18 = r16 - r14
            float r19 = r16 - r11
            float r18 = r18 * r19
            float r18 = r14 + r18
            float r10 = r10 * r18
            int r10 = (int) r10
            float r12 = (float) r13
            float r18 = r16 - r15
            float r19 = r16 - r11
            float r18 = r18 * r19
            float r18 = r15 + r18
            float r12 = r12 * r18
            int r12 = (int) r12
            float r13 = (float) r2
            r34 = r14
            float r14 = (float) r10
            float r13 = r13 / r14
            float r14 = (float) r12
            float r14 = r14 * r13
            r18 = r13
            float r13 = (float) r3
            int r13 = (r14 > r13 ? 1 : (r14 == r13 ? 0 : -1))
            if (r13 <= 0) goto L_0x00af
            float r13 = (float) r3
            float r14 = (float) r12
            float r13 = r13 / r14
            goto L_0x00b1
        L_0x00af:
            r13 = r18
        L_0x00b1:
            int r14 = r0.sendPhotoType
            r18 = r15
            r15 = 1
            if (r14 == r15) goto L_0x0122
            int r14 = r0.currentEditMode
            if (r14 != r15) goto L_0x00ca
            int r14 = r0.switchingToMode
            if (r14 != 0) goto L_0x00c1
            goto L_0x00ca
        L_0x00c1:
            r21 = r5
            r23 = r6
            r20 = r10
            r19 = r12
            goto L_0x012a
        L_0x00ca:
            if (r4 == 0) goto L_0x0122
            float r14 = (float) r10
            float r14 = r14 * r13
            float r15 = (float) r12
            float r15 = r15 * r13
            r19 = r12
            float r12 = (float) r2
            r20 = r10
            float r10 = (float) r5
            float r12 = r12 / r10
            float r10 = (float) r6
            float r10 = r10 * r12
            r21 = r12
            float r12 = (float) r3
            int r10 = (r10 > r12 ? 1 : (r10 == r12 ? 0 : -1))
            if (r10 <= 0) goto L_0x00e8
            float r10 = (float) r3
            float r12 = (float) r6
            float r12 = r10 / r12
            goto L_0x00ea
        L_0x00e8:
            r12 = r21
        L_0x00ea:
            float r10 = (float) r5
            float r10 = r10 * r12
            float r10 = r10 / r35
            r21 = r5
            float r5 = (float) r6
            float r5 = r5 * r12
            float r5 = r5 / r35
            float r22 = r10 - r14
            float r23 = r16 - r11
            float r22 = r22 * r23
            r23 = r6
            float r6 = r14 + r22
            float r22 = r5 - r15
            float r24 = r16 - r11
            float r22 = r22 * r24
            r24 = r5
            float r5 = r15 + r22
            r22 = r10
            float r10 = -r6
            r25 = 1073741824(0x40000000, float:2.0)
            float r10 = r10 / r25
            r26 = r12
            float r12 = -r5
            float r12 = r12 / r25
            r27 = r14
            float r14 = r6 / r25
            r28 = r6
            float r6 = r5 / r25
            r1.clipRect(r10, r12, r14, r6)
            goto L_0x012a
        L_0x0122:
            r21 = r5
            r23 = r6
            r20 = r10
            r19 = r12
        L_0x012a:
            int r5 = r0.sendPhotoType
            r6 = 1
            if (r5 == r6) goto L_0x013a
            boolean r5 = r36.hasViewTransform()
            if (r5 == 0) goto L_0x0136
            goto L_0x013a
        L_0x0136:
            r10 = r17
            goto L_0x01f9
        L_0x013a:
            int r5 = r0.currentEditMode
            r6 = 1
            if (r5 == r6) goto L_0x0159
            int r5 = r0.sendPhotoType
            if (r5 != r6) goto L_0x0144
            goto L_0x0159
        L_0x0144:
            if (r4 == 0) goto L_0x0149
            float r5 = r4.cropScale
            goto L_0x014b
        L_0x0149:
            r5 = 1065353216(0x3var_, float:1.0)
        L_0x014b:
            float r6 = r5 - r16
            float r10 = r16 - r11
            float r6 = r6 * r10
            float r6 = r6 + r16
            float r10 = r13 / r7
            float r10 = r10 / r6
            float r5 = r5 * r10
            goto L_0x01a6
        L_0x0159:
            float r5 = r36.getTrueCropScale()
            float r5 = r5 - r16
            float r6 = r16 - r11
            float r5 = r5 * r6
            float r5 = r5 + r16
            float r6 = r36.getScale()
            float r6 = r6 / r5
            float r10 = (float) r2
            float r12 = (float) r8
            float r10 = r10 / r12
            float r12 = (float) r9
            float r12 = r12 * r10
            float r14 = (float) r3
            int r12 = (r12 > r14 ? 1 : (r12 == r14 ? 0 : -1))
            if (r12 <= 0) goto L_0x0179
            float r12 = (float) r3
            float r14 = (float) r9
            float r10 = r12 / r14
        L_0x0179:
            float r12 = r10 / r7
            float r6 = r6 * r12
            int r12 = r0.sendPhotoType
            r14 = 1
            if (r12 != r14) goto L_0x01a4
            int r12 = r0.currentEditMode
            r14 = 3
            if (r12 == r14) goto L_0x0195
            int r12 = r0.switchingToMode
            if (r12 != r14) goto L_0x018c
            goto L_0x0195
        L_0x018c:
            if (r12 != 0) goto L_0x01a4
            float r12 = r36.getMinScale()
            float r6 = r6 / r12
            r5 = r6
            goto L_0x01a5
        L_0x0195:
            float r12 = r36.getMinScale()
            float r12 = r12 - r16
            float r14 = r16 - r11
            float r12 = r12 * r14
            float r12 = r12 + r16
            float r6 = r6 / r12
            r5 = r6
            goto L_0x01a5
        L_0x01a4:
            r5 = r6
        L_0x01a5:
        L_0x01a6:
            float r6 = r36.getCropAreaX()
            float r6 = r6 * r11
            float r10 = r36.getCropAreaY()
            float r10 = r10 * r11
            r1.translate(r6, r10)
            r1.scale(r5, r5)
            float r6 = r36.getCropPx()
            float r10 = (float) r8
            float r6 = r6 * r10
            float r6 = r6 * r7
            float r6 = r6 * r11
            float r10 = r36.getCropPy()
            float r12 = (float) r9
            float r10 = r10 * r12
            float r10 = r10 * r7
            float r10 = r10 * r11
            r1.translate(r6, r10)
            float r6 = r36.getRotation()
            r10 = r17
            float r12 = (float) r10
            float r6 = r6 + r12
            r12 = 1127481344(0x43340000, float:180.0)
            int r12 = (r6 > r12 ? 1 : (r6 == r12 ? 0 : -1))
            if (r12 <= 0) goto L_0x01e2
            r12 = 1135869952(0x43b40000, float:360.0)
            float r6 = r6 - r12
        L_0x01e2:
            int r12 = r0.sendPhotoType
            r14 = 1
            if (r12 != r14) goto L_0x01f4
            int r12 = r0.currentEditMode
            r14 = 3
            if (r12 == r14) goto L_0x01f0
            int r12 = r0.switchingToMode
            if (r12 != r14) goto L_0x01f4
        L_0x01f0:
            r1.rotate(r6)
            goto L_0x01f9
        L_0x01f4:
            float r12 = r6 * r11
            r1.rotate(r12)
        L_0x01f9:
            int[] r5 = r0.tempInt
            r6 = 0
            r5[r6] = r20
            r6 = 1
            r5[r6] = r19
            return r5
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.PhotoViewer.applyCrop(android.graphics.Canvas, int, int, int, int, float, org.telegram.ui.Components.Crop.CropTransform, org.telegram.messenger.MediaController$CropState):int[]");
    }

    /* access modifiers changed from: private */
    public void onActionClick(boolean download) {
        MessageObject messageObject = this.currentMessageObject;
        if ((messageObject != null || this.currentBotInlineResult != null || this.pageBlocksAdapter != null) && this.currentFileNames[0] != null) {
            Uri uri = null;
            File file = null;
            this.isStreaming = false;
            if (messageObject != null) {
                if (!(messageObject.messageOwner.attachPath == null || this.currentMessageObject.messageOwner.attachPath.length() == 0)) {
                    file = new File(this.currentMessageObject.messageOwner.attachPath);
                    if (!file.exists()) {
                        file = null;
                    }
                }
                if (file == null) {
                    file = FileLoader.getInstance(this.currentAccount).getPathToMessage(this.currentMessageObject.messageOwner);
                    if (!file.exists()) {
                        file = null;
                        if (SharedConfig.streamMedia && !DialogObject.isEncryptedDialog(this.currentMessageObject.getDialogId()) && this.currentMessageObject.isVideo() && this.currentMessageObject.canStreamVideo()) {
                            try {
                                int reference = FileLoader.getInstance(this.currentMessageObject.currentAccount).getFileReference(this.currentMessageObject);
                                FileLoader.getInstance(this.currentAccount).loadFile(this.currentMessageObject.getDocument(), this.currentMessageObject, 1, 0);
                                TLRPC.Document document = this.currentMessageObject.getDocument();
                                StringBuilder sb = new StringBuilder();
                                sb.append("?account=");
                                sb.append(this.currentMessageObject.currentAccount);
                                sb.append("&id=");
                                sb.append(document.id);
                                sb.append("&hash=");
                                sb.append(document.access_hash);
                                sb.append("&dc=");
                                sb.append(document.dc_id);
                                sb.append("&size=");
                                sb.append(document.size);
                                sb.append("&mime=");
                                sb.append(URLEncoder.encode(document.mime_type, "UTF-8"));
                                sb.append("&rid=");
                                sb.append(reference);
                                sb.append("&name=");
                                sb.append(URLEncoder.encode(FileLoader.getDocumentFileName(document), "UTF-8"));
                                sb.append("&reference=");
                                sb.append(Utilities.bytesToHex(document.file_reference != null ? document.file_reference : new byte[0]));
                                String params = sb.toString();
                                uri = Uri.parse("tg://" + this.currentMessageObject.getFileName() + params);
                                this.isStreaming = true;
                                checkProgress(0, false, false);
                            } catch (Exception e) {
                            }
                        }
                    }
                }
            } else {
                TLRPC.BotInlineResult botInlineResult = this.currentBotInlineResult;
                if (botInlineResult == null) {
                    PageBlocksAdapter pageBlocksAdapter2 = this.pageBlocksAdapter;
                    if (pageBlocksAdapter2 != null) {
                        if (pageBlocksAdapter2.getMedia(this.currentIndex) instanceof TLRPC.Document) {
                            file = this.pageBlocksAdapter.getFile(this.currentIndex);
                            if (file != null && !file.exists()) {
                                file = null;
                            }
                        } else {
                            return;
                        }
                    }
                } else if (botInlineResult.document != null) {
                    file = FileLoader.getInstance(this.currentAccount).getPathToAttach(this.currentBotInlineResult.document);
                    if (!file.exists()) {
                        file = null;
                    }
                } else if (this.currentBotInlineResult.content instanceof TLRPC.TL_webDocument) {
                    File directory = FileLoader.getDirectory(4);
                    file = new File(directory, Utilities.MD5(this.currentBotInlineResult.content.url) + "." + ImageLoader.getHttpUrlExtension(this.currentBotInlineResult.content.url, "mp4"));
                    if (!file.exists()) {
                        file = null;
                    }
                }
            }
            if (file != null && uri == null) {
                uri = Uri.fromFile(file);
            }
            if (uri == null) {
                if (download) {
                    if (this.currentMessageObject == null) {
                        TLRPC.BotInlineResult botInlineResult2 = this.currentBotInlineResult;
                        if (botInlineResult2 != null) {
                            if (botInlineResult2.document != null) {
                                if (!FileLoader.getInstance(this.currentAccount).isLoadingFile(this.currentFileNames[0])) {
                                    FileLoader.getInstance(this.currentAccount).loadFile(this.currentBotInlineResult.document, this.currentMessageObject, 1, 0);
                                } else {
                                    FileLoader.getInstance(this.currentAccount).cancelLoadFile(this.currentBotInlineResult.document);
                                }
                            } else if (this.currentBotInlineResult.content instanceof TLRPC.TL_webDocument) {
                                if (!ImageLoader.getInstance().isLoadingHttpFile(this.currentBotInlineResult.content.url)) {
                                    ImageLoader.getInstance().loadHttpFile(this.currentBotInlineResult.content.url, "mp4", this.currentAccount);
                                } else {
                                    ImageLoader.getInstance().cancelLoadHttpFile(this.currentBotInlineResult.content.url);
                                }
                            }
                        } else if (this.pageBlocksAdapter != null) {
                            if (!FileLoader.getInstance(this.currentAccount).isLoadingFile(this.currentFileNames[0])) {
                                FileLoader.getInstance(this.currentAccount).loadFile((TLRPC.Document) this.pageBlocksAdapter.getMedia(this.currentIndex), this.pageBlocksAdapter.getParentObject(), 1, 1);
                            } else {
                                FileLoader.getInstance(this.currentAccount).cancelLoadFile((TLRPC.Document) this.pageBlocksAdapter.getMedia(this.currentIndex));
                            }
                        }
                    } else if (!FileLoader.getInstance(this.currentAccount).isLoadingFile(this.currentFileNames[0])) {
                        FileLoader.getInstance(this.currentAccount).loadFile(this.currentMessageObject.getDocument(), this.currentMessageObject, 1, 0);
                    } else {
                        FileLoader.getInstance(this.currentAccount).cancelLoadFile(this.currentMessageObject.getDocument());
                    }
                    Drawable drawable = this.centerImage.getStaticThumb();
                    if (drawable instanceof OtherDocumentPlaceholderDrawable) {
                        ((OtherDocumentPlaceholderDrawable) drawable).checkFileExist();
                    }
                }
            } else if (this.sharedMediaType != 1 || this.currentMessageObject.canPreviewDocument()) {
                preparePlayer(uri, true, false);
            } else {
                AndroidUtilities.openDocument(this.currentMessageObject, this.parentActivity, (BaseFragment) null);
            }
        }
    }

    public boolean onDown(MotionEvent e) {
        if (!this.doubleTap && this.checkImageView.getVisibility() != 0) {
            boolean[] zArr = this.drawPressedDrawable;
            if (!zArr[0] && !zArr[1]) {
                float x = e.getX();
                int side = Math.min(135, this.containerView.getMeasuredWidth() / 8);
                if (x < ((float) side)) {
                    if (this.leftImage.hasImageSet()) {
                        this.drawPressedDrawable[0] = true;
                        this.containerView.invalidate();
                    }
                } else if (x > ((float) (this.containerView.getMeasuredWidth() - side)) && this.rightImage.hasImageSet()) {
                    this.drawPressedDrawable[1] = true;
                    this.containerView.invalidate();
                }
            }
        }
        return false;
    }

    public boolean canDoubleTap(MotionEvent e) {
        MessageObject messageObject;
        if (this.checkImageView.getVisibility() != 0) {
            boolean[] zArr = this.drawPressedDrawable;
            if (!zArr[0] && !zArr[1]) {
                float x = e.getX();
                int side = Math.min(135, this.containerView.getMeasuredWidth() / 8);
                if ((x >= ((float) side) && x <= ((float) (this.containerView.getMeasuredWidth() - side))) || (messageObject = this.currentMessageObject) == null) {
                    return true;
                }
                if (!messageObject.isVideo() || SystemClock.elapsedRealtime() - this.lastPhotoSetTime < 500 || !canDoubleTapSeekVideo(e)) {
                    return false;
                }
                return true;
            }
        }
        return true;
    }

    private void hidePressedDrawables() {
        boolean[] zArr = this.drawPressedDrawable;
        zArr[1] = false;
        zArr[0] = false;
        this.containerView.invalidate();
    }

    public void onUp(MotionEvent e) {
        hidePressedDrawables();
    }

    public void onShowPress(MotionEvent e) {
    }

    public boolean onSingleTapUp(MotionEvent e) {
        if (!this.canZoom && !this.doubleTapEnabled) {
            return onSingleTapConfirmed(e);
        }
        if (!(this.containerView.getTag() == null || this.photoProgressViews[0] == null || this.containerView == null)) {
            float x = e.getX();
            float y = e.getY();
            boolean rez = false;
            if (x >= ((float) (getContainerViewWidth() - AndroidUtilities.dp(100.0f))) / 2.0f && x <= ((float) (getContainerViewWidth() + AndroidUtilities.dp(100.0f))) / 2.0f && y >= ((float) (getContainerViewHeight() - AndroidUtilities.dp(100.0f))) / 2.0f && y <= ((float) (getContainerViewHeight() + AndroidUtilities.dp(100.0f))) / 2.0f) {
                rez = onSingleTapConfirmed(e);
            }
            if (rez) {
                this.discardTap = true;
                return true;
            }
        }
        return false;
    }

    public boolean onScroll(MotionEvent e1, MotionEvent e2, float distanceX, float distanceY) {
        return false;
    }

    public void onLongPress(MotionEvent ev) {
    }

    public void onLongPress() {
        boolean forward;
        VideoPlayer videoPlayer2 = this.videoPlayer;
        if (videoPlayer2 != null && this.videoPlayerControlVisible && this.scale <= 1.1f) {
            long current = videoPlayer2.getCurrentPosition();
            long total = this.videoPlayer.getDuration();
            if (current != -9223372036854775807L && total >= 15000) {
                float x = this.longPressX;
                int width = getContainerViewWidth();
                if (x >= ((float) ((width / 3) * 2))) {
                    forward = true;
                } else if (x < ((float) (width / 3))) {
                    forward = false;
                } else {
                    return;
                }
                this.videoPlayerRewinder.startRewind(this.videoPlayer, forward, this.currentVideoSpeed);
            }
        }
    }

    public VideoPlayerRewinder getVideoPlayerRewinder() {
        return this.videoPlayerRewinder;
    }

    public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX, float velocityY) {
        if (this.scale == 1.0f) {
            return false;
        }
        this.scroller.abortAnimation();
        this.scroller.fling(Math.round(this.translationX), Math.round(this.translationY), Math.round(velocityX), Math.round(velocityY), (int) this.minX, (int) this.maxX, (int) this.minY, (int) this.maxY);
        this.containerView.postInvalidate();
        return false;
    }

    public boolean onSingleTapConfirmed(MotionEvent e) {
        MessageObject messageObject;
        if (this.discardTap) {
            return false;
        }
        float x = e.getX();
        float y = e.getY();
        if (this.checkImageView.getVisibility() != 0 && y > ((float) (ActionBar.getCurrentActionBarHeight() + AndroidUtilities.statusBarHeight + AndroidUtilities.dp(40.0f)))) {
            int side = Math.min(135, this.containerView.getMeasuredWidth() / 8);
            if (x < ((float) side)) {
                if (this.leftImage.hasImageSet()) {
                    switchToNextIndex(-1, true);
                    return true;
                }
            } else if (x > ((float) (this.containerView.getMeasuredWidth() - side)) && this.rightImage.hasImageSet()) {
                switchToNextIndex(1, true);
                return true;
            }
        }
        if (this.containerView.getTag() != null) {
            AspectRatioFrameLayout aspectRatioFrameLayout2 = this.aspectRatioFrameLayout;
            boolean drawTextureView = aspectRatioFrameLayout2 != null && aspectRatioFrameLayout2.getVisibility() == 0;
            if (this.sharedMediaType != 1 || (messageObject = this.currentMessageObject) == null) {
                PhotoProgressView[] photoProgressViewArr = this.photoProgressViews;
                if (!(photoProgressViewArr[0] == null || this.containerView == null)) {
                    int state = photoProgressViewArr[0].backgroundState;
                    if (x >= ((float) (getContainerViewWidth() - AndroidUtilities.dp(100.0f))) / 2.0f && x <= ((float) (getContainerViewWidth() + AndroidUtilities.dp(100.0f))) / 2.0f && y >= ((float) (getContainerViewHeight() - AndroidUtilities.dp(100.0f))) / 2.0f && y <= ((float) (getContainerViewHeight() + AndroidUtilities.dp(100.0f))) / 2.0f) {
                        if (!drawTextureView) {
                            if (state > 0 && state <= 3) {
                                onActionClick(true);
                                checkProgress(0, false, true);
                                return true;
                            }
                        } else if ((state == 3 || state == 4) && this.photoProgressViews[0].isVisible()) {
                            this.manuallyPaused = true;
                            toggleVideoPlayer();
                            return true;
                        }
                    }
                }
            } else if (!messageObject.canPreviewDocument()) {
                float vy = ((float) (getContainerViewHeight() - AndroidUtilities.dp(360.0f))) / 2.0f;
                if (y >= vy && y <= ((float) AndroidUtilities.dp(360.0f)) + vy) {
                    onActionClick(true);
                    return true;
                }
            }
            toggleActionBar(!this.isActionBarVisible, true);
        } else {
            int i = this.sendPhotoType;
            if (i != 0 && i != 4) {
                TLRPC.BotInlineResult botInlineResult = this.currentBotInlineResult;
                if (botInlineResult != null && (botInlineResult.type.equals("video") || MessageObject.isVideoDocument(this.currentBotInlineResult.document))) {
                    int state2 = this.photoProgressViews[0].backgroundState;
                    if (state2 > 0 && state2 <= 3 && x >= ((float) (getContainerViewWidth() - AndroidUtilities.dp(100.0f))) / 2.0f && x <= ((float) (getContainerViewWidth() + AndroidUtilities.dp(100.0f))) / 2.0f && y >= ((float) (getContainerViewHeight() - AndroidUtilities.dp(100.0f))) / 2.0f && y <= ((float) (getContainerViewHeight() + AndroidUtilities.dp(100.0f))) / 2.0f) {
                        onActionClick(true);
                        checkProgress(0, false, true);
                        return true;
                    }
                } else if (this.sendPhotoType == 2 && this.isCurrentVideo) {
                    this.manuallyPaused = true;
                    toggleVideoPlayer();
                }
            } else if (this.isCurrentVideo) {
                VideoPlayer videoPlayer2 = this.videoPlayer;
                if (!(videoPlayer2 == null || this.muteVideo || i == 1)) {
                    videoPlayer2.setVolume(1.0f);
                }
                this.manuallyPaused = true;
                toggleVideoPlayer();
            } else {
                this.checkImageView.performClick();
            }
        }
        return true;
    }

    private boolean canDoubleTapSeekVideo(MotionEvent e) {
        if (this.videoPlayer == null) {
            return false;
        }
        boolean forward = e.getX() >= ((float) ((getContainerViewWidth() / 3) * 2));
        long current = this.videoPlayer.getCurrentPosition();
        long total = this.videoPlayer.getDuration();
        if (current == -9223372036854775807L || total <= 15000) {
            return false;
        }
        if (!forward || total - current > 10000) {
            return true;
        }
        return false;
    }

    public boolean onDoubleTap(MotionEvent e) {
        boolean z;
        VideoPlayer videoPlayer2 = this.videoPlayer;
        if (videoPlayer2 != null && this.videoPlayerControlVisible) {
            long current = videoPlayer2.getCurrentPosition();
            long total = this.videoPlayer.getDuration();
            float x = e.getX();
            int width = getContainerViewWidth();
            if (x >= ((float) ((width / 3) * 2))) {
            }
            if (canDoubleTapSeekVideo(e)) {
                long old = current;
                if (x >= ((float) ((width / 3) * 2))) {
                    current += 10000;
                } else if (x < ((float) (width / 3))) {
                    current -= 10000;
                }
                if (old != current) {
                    boolean apply = true;
                    if (current > total) {
                        current = total;
                    } else if (current < 0) {
                        if (current < -9000) {
                            apply = false;
                        }
                        current = 0;
                    }
                    if (!apply) {
                        return true;
                    }
                    this.videoForwardDrawable.setOneShootAnimation(true);
                    this.videoForwardDrawable.setLeftSide(x < ((float) (width / 3)));
                    this.videoForwardDrawable.addTime(10000);
                    this.videoPlayer.seekTo(current);
                    this.containerView.invalidate();
                    this.videoPlayerSeekbar.setProgress(((float) current) / ((float) total), true);
                    this.videoPlayerSeekbarView.invalidate();
                    return true;
                }
            }
        }
        if (!this.canZoom) {
            return false;
        }
        float f = this.scale;
        if ((f == 1.0f && (this.translationY != 0.0f || this.translationX != 0.0f)) || this.animationStartTime != 0 || this.animationInProgress != 0) {
            return false;
        }
        if (f == 1.0f) {
            float atx = (e.getX() - ((float) (getContainerViewWidth() / 2))) - (((e.getX() - ((float) (getContainerViewWidth() / 2))) - this.translationX) * (3.0f / this.scale));
            float aty = (e.getY() - ((float) (getContainerViewHeight() / 2))) - (((e.getY() - ((float) (getContainerViewHeight() / 2))) - this.translationY) * (3.0f / this.scale));
            updateMinMax(3.0f);
            if (atx < this.minX) {
                atx = this.minX;
            } else if (atx > this.maxX) {
                atx = this.maxX;
            }
            if (aty < this.minY) {
                aty = this.minY;
            } else if (aty > this.maxY) {
                aty = this.maxY;
            }
            z = true;
            animateTo(3.0f, atx, aty, true);
        } else {
            z = true;
            animateTo(1.0f, 0.0f, 0.0f, true);
        }
        this.doubleTap = z;
        hidePressedDrawables();
        return z;
    }

    private boolean enableSwipeToPiP() {
        return false;
    }

    public boolean onDoubleTapEvent(MotionEvent e) {
        return false;
    }

    private class QualityChooseView extends View {
        private int circleSize;
        private int gapSize;
        private String hightQualityDescription;
        private int lineSize;
        private String lowQualityDescription;
        private Paint paint = new Paint(1);
        private int sideSide;
        private int startMovingQuality;
        private TextPaint textPaint;

        public QualityChooseView(Context context) {
            super(context);
            TextPaint textPaint2 = new TextPaint(1);
            this.textPaint = textPaint2;
            textPaint2.setTextSize((float) AndroidUtilities.dp(14.0f));
            this.textPaint.setColor(-3289651);
            this.lowQualityDescription = LocaleController.getString("AccDescrVideoCompressLow", NUM);
            this.hightQualityDescription = LocaleController.getString("AccDescrVideoCompressHigh", NUM);
        }

        public boolean onTouchEvent(MotionEvent event) {
            float x = event.getX();
            if (event.getAction() == 0) {
                this.startMovingQuality = PhotoViewer.this.selectedCompression;
                getParent().requestDisallowInterceptTouchEvent(true);
            }
            if (event.getAction() == 0 || event.getAction() == 2) {
                int a = 0;
                while (true) {
                    if (a >= PhotoViewer.this.compressionsCount) {
                        break;
                    }
                    int i = this.sideSide;
                    int i2 = this.lineSize;
                    int i3 = this.gapSize;
                    int i4 = this.circleSize;
                    int cx = i + (((i3 * 2) + i2 + i4) * a) + (i4 / 2);
                    int diff = (i2 / 2) + (i4 / 2) + i3;
                    if (x <= ((float) (cx - diff)) || x >= ((float) (cx + diff))) {
                        a++;
                    } else if (PhotoViewer.this.selectedCompression != a) {
                        int unused = PhotoViewer.this.selectedCompression = a;
                        PhotoViewer.this.didChangedCompressionLevel(false);
                        invalidate();
                    }
                }
            } else if (event.getAction() == 1 || event.getAction() == 3) {
                if (PhotoViewer.this.selectedCompression != this.startMovingQuality) {
                    PhotoViewer.this.requestVideoPreview(1);
                }
                boolean unused2 = PhotoViewer.this.moving = false;
            }
            return true;
        }

        /* access modifiers changed from: protected */
        public void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
            super.onMeasure(widthMeasureSpec, heightMeasureSpec);
            this.circleSize = AndroidUtilities.dp(8.0f);
            this.gapSize = AndroidUtilities.dp(2.0f);
            this.sideSide = AndroidUtilities.dp(18.0f);
        }

        /* access modifiers changed from: protected */
        public void onDraw(Canvas canvas) {
            Canvas canvas2 = canvas;
            if (PhotoViewer.this.compressionsCount != 1) {
                this.lineSize = (((getMeasuredWidth() - (this.circleSize * PhotoViewer.this.compressionsCount)) - (this.gapSize * ((PhotoViewer.this.compressionsCount * 2) - 2))) - (this.sideSide * 2)) / (PhotoViewer.this.compressionsCount - 1);
            } else {
                this.lineSize = ((getMeasuredWidth() - (this.circleSize * PhotoViewer.this.compressionsCount)) - (this.gapSize * 2)) - (this.sideSide * 2);
            }
            int cy = (getMeasuredHeight() / 2) + AndroidUtilities.dp(6.0f);
            int a = 0;
            while (a < PhotoViewer.this.compressionsCount) {
                int i = this.sideSide;
                int i2 = this.lineSize + (this.gapSize * 2);
                int i3 = this.circleSize;
                int cx = i + ((i2 + i3) * a) + (i3 / 2);
                if (a <= PhotoViewer.this.selectedCompression) {
                    this.paint.setColor(-11292945);
                } else {
                    this.paint.setColor(NUM);
                }
                canvas2.drawCircle((float) cx, (float) cy, (float) (a == PhotoViewer.this.selectedCompression ? AndroidUtilities.dp(6.0f) : this.circleSize / 2), this.paint);
                if (a != 0) {
                    int x = ((cx - (this.circleSize / 2)) - this.gapSize) - this.lineSize;
                    float endPadding = 0.0f;
                    float startPadding = a == PhotoViewer.this.selectedCompression + 1 ? AndroidUtilities.dpf2(2.0f) : 0.0f;
                    if (a == PhotoViewer.this.selectedCompression) {
                        endPadding = AndroidUtilities.dpf2(2.0f);
                    }
                    canvas.drawRect(((float) x) + startPadding, (float) (cy - AndroidUtilities.dp(1.0f)), ((float) (this.lineSize + x)) - endPadding, (float) (AndroidUtilities.dp(2.0f) + cy), this.paint);
                }
                a++;
            }
            canvas2.drawText(this.lowQualityDescription, (float) this.sideSide, (float) (cy - AndroidUtilities.dp(16.0f)), this.textPaint);
            canvas2.drawText(this.hightQualityDescription, ((float) (getMeasuredWidth() - this.sideSide)) - this.textPaint.measureText(this.hightQualityDescription), (float) (cy - AndroidUtilities.dp(16.0f)), this.textPaint);
        }
    }

    public void updateMuteButton() {
        VideoPlayer videoPlayer2 = this.videoPlayer;
        if (videoPlayer2 != null) {
            videoPlayer2.setMute(this.muteVideo);
        }
        if (!this.videoConvertSupported) {
            this.muteItem.setEnabled(false);
            this.muteItem.setClickable(false);
            this.muteItem.animate().alpha(0.5f).setDuration(180).start();
            this.videoTimelineView.setMode(0);
            return;
        }
        this.muteItem.setEnabled(true);
        this.muteItem.setClickable(true);
        this.muteItem.animate().alpha(1.0f).setDuration(180).start();
        if (this.muteVideo) {
            this.actionBar.setSubtitle(LocaleController.getString("SoundMuted", NUM));
            this.muteItem.setImageResource(NUM);
            if (this.compressItem.getTag() != null) {
                this.compressItem.setAlpha(0.5f);
                this.compressItem.setEnabled(false);
            }
            if (this.sendPhotoType == 1) {
                this.videoTimelineView.setMaxProgressDiff(9600.0f / this.videoDuration);
                this.videoTimelineView.setMode(1);
                updateVideoInfo();
            } else {
                this.videoTimelineView.setMaxProgressDiff(1.0f);
                this.videoTimelineView.setMode(0);
            }
            this.muteItem.setContentDescription(LocaleController.getString("NoSound", NUM));
            return;
        }
        this.actionBar.setSubtitle(this.currentSubtitle);
        this.muteItem.setImageResource(NUM);
        this.muteItem.setContentDescription(LocaleController.getString("Sound", NUM));
        if (this.compressItem.getTag() != null) {
            this.compressItem.setAlpha(1.0f);
            this.compressItem.setEnabled(true);
        }
        this.videoTimelineView.setMaxProgressDiff(1.0f);
        this.videoTimelineView.setMode(0);
    }

    /* access modifiers changed from: private */
    public void didChangedCompressionLevel(boolean request) {
        SharedPreferences.Editor editor = MessagesController.getGlobalMainSettings().edit();
        editor.putInt(String.format("compress_video_%d", new Object[]{Integer.valueOf(this.compressionsCount)}), this.selectedCompression);
        editor.commit();
        updateWidthHeightBitrateForCompression();
        updateVideoInfo();
        if (request) {
            requestVideoPreview(1);
        }
    }

    /* access modifiers changed from: private */
    public void updateVideoInfo() {
        int width;
        int height;
        int bitrate2;
        ActionBar actionBar2 = this.actionBar;
        if (actionBar2 != null) {
            if (this.compressionsCount == 0) {
                actionBar2.setSubtitle((CharSequence) null);
                return;
            }
            int i = this.selectedCompression;
            if (i < 2) {
                this.compressItem.setImageResource(NUM);
            } else if (i == 2) {
                this.compressItem.setImageResource(NUM);
            } else if (i == 3) {
                this.compressItem.setImageResource(NUM);
            }
            this.itemsLayout.requestLayout();
            long ceil = (long) Math.ceil((double) ((this.videoTimelineView.getRightProgress() - this.videoTimelineView.getLeftProgress()) * this.videoDuration));
            this.estimatedDuration = ceil;
            if (this.muteVideo) {
                int i2 = this.rotationValue;
                width = (i2 == 90 || i2 == 270) ? this.resultHeight : this.resultWidth;
                height = (i2 == 90 || i2 == 270) ? this.resultWidth : this.resultHeight;
                if (this.sendPhotoType != 1) {
                    bitrate2 = 921600;
                } else if (ceil <= 2000) {
                    bitrate2 = 2600000;
                } else if (ceil <= 5000) {
                    bitrate2 = 2200000;
                } else {
                    bitrate2 = 1560000;
                }
                long j = (long) (((float) (bitrate2 / 8)) * (((float) ceil) / 1000.0f));
                this.estimatedSize = j;
                this.estimatedSize = j + ((j / 32768) * 16);
            } else if (this.compressItem.getTag() == null) {
                int i3 = this.rotationValue;
                width = (i3 == 90 || i3 == 270) ? this.originalHeight : this.originalWidth;
                height = (i3 == 90 || i3 == 270) ? this.originalWidth : this.originalHeight;
                this.estimatedSize = (long) (((float) this.originalSize) * (((float) this.estimatedDuration) / this.videoDuration));
            } else {
                int height2 = this.rotationValue;
                width = (height2 == 90 || height2 == 270) ? this.resultHeight : this.resultWidth;
                height = (height2 == 90 || height2 == 270) ? this.resultWidth : this.resultHeight;
                long j2 = (long) (((float) ((this.sendPhotoType == 1 ? 0 : this.audioFramesSize) + this.videoFramesSize)) * (((float) this.estimatedDuration) / this.videoDuration));
                this.estimatedSize = j2;
                this.estimatedSize = j2 + ((j2 / 32768) * 16);
            }
            this.videoCutStart = this.videoTimelineView.getLeftProgress();
            float rightProgress = this.videoTimelineView.getRightProgress();
            this.videoCutEnd = rightProgress;
            float f = this.videoCutStart;
            if (f == 0.0f) {
                this.startTime = -1;
            } else {
                this.startTime = ((long) (f * this.videoDuration)) * 1000;
            }
            if (rightProgress == 1.0f) {
                this.endTime = -1;
            } else {
                this.endTime = ((long) (rightProgress * this.videoDuration)) * 1000;
            }
            this.currentSubtitle = String.format("%s, %s", new Object[]{String.format("%dx%d", new Object[]{Integer.valueOf(width), Integer.valueOf(height)}), String.format("%s, ~%s", new Object[]{AndroidUtilities.formatShortDuration((int) (this.estimatedDuration / 1000)), AndroidUtilities.formatFileSize(this.estimatedSize)})});
            this.actionBar.beginDelayedTransition();
            this.actionBar.setSubtitle(this.muteVideo ? LocaleController.getString("SoundMuted", NUM) : this.currentSubtitle);
        }
    }

    /* access modifiers changed from: private */
    public void requestVideoPreview(int request) {
        if (this.videoPreviewMessageObject != null) {
            MediaController.getInstance().cancelVideoConvert(this.videoPreviewMessageObject);
        }
        boolean wasRequestingPreview = this.requestingPreview && !this.tryStartRequestPreviewOnFinish;
        this.requestingPreview = false;
        this.loadInitialVideo = false;
        this.progressView.setVisibility(4);
        if (request != 1) {
            this.tryStartRequestPreviewOnFinish = false;
            this.photoProgressViews[0].setBackgroundState(3, false, true);
            if (request == 2) {
                preparePlayer(this.currentPlayingVideoFile, false, false, this.editState.savedFilterState);
                this.videoPlayer.seekTo((long) (this.videoTimelineView.getLeftProgress() * this.videoDuration));
            }
        } else if (this.resultHeight == this.originalHeight && this.resultWidth == this.originalWidth) {
            this.tryStartRequestPreviewOnFinish = false;
            PhotoProgressView[] photoProgressViewArr = this.photoProgressViews;
            photoProgressViewArr[0].setProgress(0.0f, photoProgressViewArr[0].backgroundState == 0 || this.photoProgressViews[0].previousBackgroundState == 0);
            this.photoProgressViews[0].setBackgroundState(3, false, true);
            if (!wasRequestingPreview) {
                preparePlayer(this.currentPlayingVideoFile, false, false, this.editState.savedFilterState);
                this.videoPlayer.seekTo((long) (this.videoTimelineView.getLeftProgress() * this.videoDuration));
            } else {
                this.loadInitialVideo = true;
            }
        } else {
            releasePlayer(false);
            if (this.videoPreviewMessageObject == null) {
                TLRPC.TL_message message = new TLRPC.TL_message();
                message.id = 0;
                message.message = "";
                message.media = new TLRPC.TL_messageMediaEmpty();
                message.action = new TLRPC.TL_messageActionEmpty();
                message.dialog_id = this.currentDialogId;
                MessageObject messageObject = new MessageObject(UserConfig.selectedAccount, message, false, false);
                this.videoPreviewMessageObject = messageObject;
                messageObject.messageOwner.attachPath = new File(FileLoader.getDirectory(4), "video_preview.mp4").getAbsolutePath();
                this.videoPreviewMessageObject.videoEditedInfo = new VideoEditedInfo();
                this.videoPreviewMessageObject.videoEditedInfo.rotationValue = this.rotationValue;
                this.videoPreviewMessageObject.videoEditedInfo.originalWidth = this.originalWidth;
                this.videoPreviewMessageObject.videoEditedInfo.originalHeight = this.originalHeight;
                this.videoPreviewMessageObject.videoEditedInfo.framerate = this.videoFramerate;
                this.videoPreviewMessageObject.videoEditedInfo.originalPath = this.currentPlayingVideoFile.getPath();
            }
            VideoEditedInfo videoEditedInfo = this.videoPreviewMessageObject.videoEditedInfo;
            long j = this.startTime;
            videoEditedInfo.startTime = j;
            long start = j;
            VideoEditedInfo videoEditedInfo2 = this.videoPreviewMessageObject.videoEditedInfo;
            long j2 = this.endTime;
            videoEditedInfo2.endTime = j2;
            long end = j2;
            if (start == -1) {
                start = 0;
            }
            if (end == -1) {
                end = (long) (this.videoDuration * 1000.0f);
            }
            if (end - start > 5000000) {
                this.videoPreviewMessageObject.videoEditedInfo.endTime = 5000000 + start;
            }
            this.videoPreviewMessageObject.videoEditedInfo.bitrate = this.bitrate;
            this.videoPreviewMessageObject.videoEditedInfo.resultWidth = this.resultWidth;
            this.videoPreviewMessageObject.videoEditedInfo.resultHeight = this.resultHeight;
            this.videoPreviewMessageObject.videoEditedInfo.needUpdateProgress = true;
            this.videoPreviewMessageObject.videoEditedInfo.originalDuration = (long) (this.videoDuration * 1000.0f);
            if (!MediaController.getInstance().scheduleVideoConvert(this.videoPreviewMessageObject, true)) {
                this.tryStartRequestPreviewOnFinish = true;
            }
            this.requestingPreview = true;
            PhotoProgressView[] photoProgressViewArr2 = this.photoProgressViews;
            photoProgressViewArr2[0].setProgress(0.0f, photoProgressViewArr2[0].backgroundState == 0 || this.photoProgressViews[0].previousBackgroundState == 0);
            this.photoProgressViews[0].setBackgroundState(0, false, true);
        }
        this.containerView.invalidate();
    }

    /* access modifiers changed from: private */
    public void updateWidthHeightBitrateForCompression() {
        float maxSize;
        int i = this.compressionsCount;
        if (i > 0) {
            if (this.selectedCompression >= i) {
                this.selectedCompression = i - 1;
            }
            if (this.sendPhotoType == 1) {
                float scale2 = Math.max(800.0f / ((float) this.originalWidth), 800.0f / ((float) this.originalHeight));
                this.resultWidth = Math.round((((float) this.originalWidth) * scale2) / 2.0f) * 2;
                this.resultHeight = Math.round((((float) this.originalHeight) * scale2) / 2.0f) * 2;
            } else {
                int i2 = this.selectedCompression;
                switch (i2) {
                    case 0:
                        maxSize = 480.0f;
                        break;
                    case 1:
                        maxSize = 854.0f;
                        break;
                    case 2:
                        maxSize = 1280.0f;
                        break;
                    default:
                        maxSize = 1920.0f;
                        break;
                }
                int i3 = this.originalWidth;
                int i4 = this.originalHeight;
                float scale3 = maxSize / (i3 > i4 ? (float) i3 : (float) i4);
                if (i2 != i - 1 || scale3 < 1.0f) {
                    this.resultWidth = Math.round((((float) i3) * scale3) / 2.0f) * 2;
                    this.resultHeight = Math.round((((float) this.originalHeight) * scale3) / 2.0f) * 2;
                } else {
                    this.resultWidth = i3;
                    this.resultHeight = i4;
                }
            }
            if (this.bitrate != 0) {
                if (this.sendPhotoType == 1) {
                    this.bitrate = 1560000;
                } else {
                    int i5 = this.resultWidth;
                    int i6 = this.originalWidth;
                    if (i5 == i6 && this.resultHeight == this.originalHeight) {
                        this.bitrate = this.originalBitrate;
                    } else {
                        this.bitrate = MediaController.makeVideoBitrate(this.originalHeight, i6, this.originalBitrate, this.resultHeight, i5);
                    }
                }
                this.videoFramesSize = (long) ((((float) (this.bitrate / 8)) * this.videoDuration) / 1000.0f);
            }
        }
    }

    private void showQualityView(final boolean show) {
        TextureView textureView;
        if (show && this.textureUploaded && this.videoSizeSet && !this.changingTextureView && (textureView = this.videoTextureView) != null) {
            this.videoFrameBitmap = textureView.getBitmap();
        }
        if (show) {
            this.previousCompression = this.selectedCompression;
        }
        AnimatorSet animatorSet = this.qualityChooseViewAnimation;
        if (animatorSet != null) {
            animatorSet.cancel();
        }
        this.qualityChooseViewAnimation = new AnimatorSet();
        float f = 0.0f;
        if (show) {
            this.qualityChooseView.setTag(1);
            this.qualityChooseViewAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.pickerView, View.TRANSLATION_Y, new float[]{0.0f, (float) AndroidUtilities.dp(152.0f)}), ObjectAnimator.ofFloat(this.pickerViewSendButton, View.TRANSLATION_Y, new float[]{0.0f, (float) AndroidUtilities.dp(152.0f)}), ObjectAnimator.ofFloat(this.bottomLayout, View.TRANSLATION_Y, new float[]{(float) (-AndroidUtilities.dp(48.0f)), (float) AndroidUtilities.dp(104.0f)})});
        } else {
            this.qualityChooseView.setTag((Object) null);
            this.qualityChooseViewAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.qualityChooseView, View.TRANSLATION_Y, new float[]{0.0f, (float) AndroidUtilities.dp(166.0f)}), ObjectAnimator.ofFloat(this.qualityPicker, View.TRANSLATION_Y, new float[]{0.0f, (float) AndroidUtilities.dp(166.0f)}), ObjectAnimator.ofFloat(this.bottomLayout, View.TRANSLATION_Y, new float[]{(float) (-AndroidUtilities.dp(48.0f)), (float) AndroidUtilities.dp(118.0f)})});
        }
        this.qualityChooseViewAnimation.addListener(new AnimatorListenerAdapter() {
            public void onAnimationEnd(Animator animation) {
                if (animation.equals(PhotoViewer.this.qualityChooseViewAnimation)) {
                    AnimatorSet unused = PhotoViewer.this.qualityChooseViewAnimation = new AnimatorSet();
                    if (show) {
                        PhotoViewer.this.qualityChooseView.setVisibility(0);
                        PhotoViewer.this.qualityPicker.setVisibility(0);
                        PhotoViewer.this.qualityChooseViewAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(PhotoViewer.this.qualityChooseView, View.TRANSLATION_Y, new float[]{0.0f}), ObjectAnimator.ofFloat(PhotoViewer.this.qualityPicker, View.TRANSLATION_Y, new float[]{0.0f}), ObjectAnimator.ofFloat(PhotoViewer.this.bottomLayout, View.TRANSLATION_Y, new float[]{(float) (-AndroidUtilities.dp(48.0f))})});
                    } else {
                        PhotoViewer.this.qualityChooseView.setVisibility(4);
                        PhotoViewer.this.qualityPicker.setVisibility(4);
                        PhotoViewer.this.qualityChooseViewAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(PhotoViewer.this.pickerView, View.TRANSLATION_Y, new float[]{0.0f}), ObjectAnimator.ofFloat(PhotoViewer.this.pickerViewSendButton, View.TRANSLATION_Y, new float[]{0.0f}), ObjectAnimator.ofFloat(PhotoViewer.this.bottomLayout, View.TRANSLATION_Y, new float[]{(float) (-AndroidUtilities.dp(48.0f))})});
                    }
                    PhotoViewer.this.qualityChooseViewAnimation.addListener(new AnimatorListenerAdapter() {
                        public void onAnimationEnd(Animator animation) {
                            if (animation.equals(PhotoViewer.this.qualityChooseViewAnimation)) {
                                AnimatorSet unused = PhotoViewer.this.qualityChooseViewAnimation = null;
                            }
                        }
                    });
                    PhotoViewer.this.qualityChooseViewAnimation.setDuration(200);
                    PhotoViewer.this.qualityChooseViewAnimation.setInterpolator(AndroidUtilities.decelerateInterpolator);
                    PhotoViewer.this.qualityChooseViewAnimation.start();
                }
            }

            public void onAnimationCancel(Animator animation) {
                AnimatorSet unused = PhotoViewer.this.qualityChooseViewAnimation = null;
            }
        });
        this.qualityChooseViewAnimation.setDuration(200);
        this.qualityChooseViewAnimation.setInterpolator(AndroidUtilities.accelerateInterpolator);
        this.qualityChooseViewAnimation.start();
        float f2 = 0.25f;
        if (this.cameraItem.getVisibility() == 0) {
            this.cameraItem.animate().scaleX(show ? 0.25f : 1.0f).scaleY(show ? 0.25f : 1.0f).alpha(show ? 0.0f : 1.0f).setDuration(200);
        }
        if (this.muteItem.getVisibility() == 0) {
            ViewPropertyAnimator scaleX = this.muteItem.animate().scaleX(show ? 0.25f : 1.0f);
            if (!show) {
                f2 = 1.0f;
            }
            ViewPropertyAnimator scaleY = scaleX.scaleY(f2);
            if (!show) {
                f = 1.0f;
            }
            scaleY.alpha(f).setDuration(200);
        }
    }

    private ByteArrayInputStream cleanBuffer(byte[] data) {
        byte[] output = new byte[data.length];
        int inPos = 0;
        int outPos = 0;
        while (inPos < data.length) {
            if (data[inPos] == 0 && data[inPos + 1] == 0 && data[inPos + 2] == 3) {
                output[outPos] = 0;
                output[outPos + 1] = 0;
                inPos += 3;
                outPos += 2;
            } else {
                output[outPos] = data[inPos];
                inPos++;
                outPos++;
            }
        }
        return new ByteArrayInputStream(output, 0, outPos);
    }

    private void processOpenVideo(final String videoPath, boolean muted, float start, float end) {
        if (this.currentLoadingVideoRunnable != null) {
            Utilities.globalQueue.cancelRunnable(this.currentLoadingVideoRunnable);
            this.currentLoadingVideoRunnable = null;
        }
        this.videoTimelineView.setVideoPath(videoPath, start, end);
        this.videoPreviewMessageObject = null;
        boolean z = true;
        if (!muted && this.sendPhotoType != 1) {
            z = false;
        }
        this.muteVideo = z;
        this.compressionsCount = -1;
        this.rotationValue = 0;
        this.videoFramerate = 25;
        this.originalSize = new File(videoPath).length();
        DispatchQueue dispatchQueue = Utilities.globalQueue;
        AnonymousClass78 r2 = new Runnable() {
            public void run() {
                if (PhotoViewer.this.currentLoadingVideoRunnable == this) {
                    int videoBitrate = MediaController.getVideoBitrate(videoPath);
                    int[] params = new int[11];
                    AnimatedFileDrawable.getVideoInfo(videoPath, params);
                    if (PhotoViewer.this.currentLoadingVideoRunnable == this) {
                        AndroidUtilities.runOnUIThread(new PhotoViewer$78$$ExternalSyntheticLambda0(this, this, params, videoBitrate));
                    }
                }
            }

            /* renamed from: lambda$run$0$org-telegram-ui-PhotoViewer$78  reason: not valid java name */
            public /* synthetic */ void m4333lambda$run$0$orgtelegramuiPhotoViewer$78(Runnable thisFinal, int[] params, int videoBitrate) {
                if (PhotoViewer.this.parentActivity != null && thisFinal == PhotoViewer.this.currentLoadingVideoRunnable) {
                    Runnable unused = PhotoViewer.this.currentLoadingVideoRunnable = null;
                    boolean unused2 = PhotoViewer.this.videoConvertSupported = params[0] != 0 && (!(params[10] != 0) || params[9] != 0);
                    long unused3 = PhotoViewer.this.audioFramesSize = (long) params[5];
                    float unused4 = PhotoViewer.this.videoDuration = (float) params[4];
                    if (videoBitrate == -1) {
                        PhotoViewer photoViewer = PhotoViewer.this;
                        int unused5 = photoViewer.originalBitrate = photoViewer.bitrate = params[3];
                    } else {
                        PhotoViewer photoViewer2 = PhotoViewer.this;
                        int unused6 = photoViewer2.originalBitrate = photoViewer2.bitrate = videoBitrate;
                    }
                    int unused7 = PhotoViewer.this.videoFramerate = params[7];
                    PhotoViewer photoViewer3 = PhotoViewer.this;
                    long unused8 = photoViewer3.videoFramesSize = (long) ((((float) (photoViewer3.bitrate / 8)) * PhotoViewer.this.videoDuration) / 1000.0f);
                    if (PhotoViewer.this.videoConvertSupported) {
                        int unused9 = PhotoViewer.this.rotationValue = params[8];
                        PhotoViewer photoViewer4 = PhotoViewer.this;
                        int unused10 = photoViewer4.resultWidth = photoViewer4.originalWidth = params[1];
                        PhotoViewer photoViewer5 = PhotoViewer.this;
                        int unused11 = photoViewer5.resultHeight = photoViewer5.originalHeight = params[2];
                        PhotoViewer photoViewer6 = PhotoViewer.this;
                        photoViewer6.updateCompressionsCount(photoViewer6.originalWidth, PhotoViewer.this.originalHeight);
                        PhotoViewer photoViewer7 = PhotoViewer.this;
                        int unused12 = photoViewer7.selectedCompression = photoViewer7.selectCompression();
                        PhotoViewer.this.updateWidthHeightBitrateForCompression();
                        if (PhotoViewer.this.selectedCompression > PhotoViewer.this.compressionsCount - 1) {
                            PhotoViewer photoViewer8 = PhotoViewer.this;
                            int unused13 = photoViewer8.selectedCompression = photoViewer8.compressionsCount - 1;
                        }
                        PhotoViewer photoViewer9 = PhotoViewer.this;
                        photoViewer9.setCompressItemEnabled(photoViewer9.compressionsCount > 1, true);
                        if (BuildVars.LOGS_ENABLED) {
                            FileLog.d("compressionsCount = " + PhotoViewer.this.compressionsCount + " w = " + PhotoViewer.this.originalWidth + " h = " + PhotoViewer.this.originalHeight + " r = " + PhotoViewer.this.rotationValue);
                        }
                        if (Build.VERSION.SDK_INT < 18 && PhotoViewer.this.compressItem.getTag() != null) {
                            boolean unused14 = PhotoViewer.this.videoConvertSupported = false;
                            PhotoViewer.this.setCompressItemEnabled(false, true);
                        }
                        PhotoViewer.this.qualityChooseView.invalidate();
                    } else {
                        PhotoViewer.this.setCompressItemEnabled(false, true);
                        int unused15 = PhotoViewer.this.compressionsCount = 0;
                    }
                    PhotoViewer.this.updateVideoInfo();
                    PhotoViewer.this.updateMuteButton();
                }
            }
        };
        this.currentLoadingVideoRunnable = r2;
        dispatchQueue.postRunnable(r2);
    }

    /* access modifiers changed from: private */
    public int selectCompression() {
        SharedPreferences preferences = MessagesController.getGlobalMainSettings();
        int compressionsCount2 = this.compressionsCount;
        while (compressionsCount2 < 5) {
            int selectedCompression2 = preferences.getInt(String.format(Locale.US, "compress_video_%d", new Object[]{Integer.valueOf(compressionsCount2)}), -1);
            if (selectedCompression2 >= 0) {
                return Math.min(selectedCompression2, 2);
            }
            compressionsCount2++;
        }
        return Math.min(2, Math.round(((float) DownloadController.getInstance(this.currentAccount).getMaxVideoBitrate()) / (100.0f / ((float) compressionsCount2))) - 1);
    }

    /* access modifiers changed from: private */
    public void updateCompressionsCount(int h, int w) {
        int maxSize = Math.max(h, w);
        if (maxSize > 1280) {
            this.compressionsCount = 4;
        } else if (maxSize > 854) {
            this.compressionsCount = 3;
        } else if (maxSize > 640) {
            this.compressionsCount = 2;
        } else {
            this.compressionsCount = 1;
        }
    }

    /* access modifiers changed from: private */
    public void setCompressItemEnabled(boolean enabled, boolean animated) {
        ImageView imageView = this.compressItem;
        if (imageView != null) {
            if (enabled && imageView.getTag() != null) {
                return;
            }
            if (enabled || this.compressItem.getTag() != null) {
                this.compressItem.setTag(enabled ? 1 : null);
                AnimatorSet animatorSet = this.compressItemAnimation;
                if (animatorSet != null) {
                    animatorSet.cancel();
                    this.compressItemAnimation = null;
                }
                float f = 1.0f;
                if (animated) {
                    AnimatorSet animatorSet2 = new AnimatorSet();
                    this.compressItemAnimation = animatorSet2;
                    Animator[] animatorArr = new Animator[4];
                    ImageView imageView2 = this.compressItem;
                    Property property = View.ALPHA;
                    float[] fArr = new float[1];
                    fArr[0] = enabled ? 1.0f : 0.5f;
                    animatorArr[0] = ObjectAnimator.ofFloat(imageView2, property, fArr);
                    ImageView imageView3 = this.paintItem;
                    Property property2 = View.ALPHA;
                    float[] fArr2 = new float[1];
                    fArr2[0] = this.videoConvertSupported ? 1.0f : 0.5f;
                    animatorArr[1] = ObjectAnimator.ofFloat(imageView3, property2, fArr2);
                    ImageView imageView4 = this.tuneItem;
                    Property property3 = View.ALPHA;
                    float[] fArr3 = new float[1];
                    fArr3[0] = this.videoConvertSupported ? 1.0f : 0.5f;
                    animatorArr[2] = ObjectAnimator.ofFloat(imageView4, property3, fArr3);
                    ImageView imageView5 = this.cropItem;
                    Property property4 = View.ALPHA;
                    float[] fArr4 = new float[1];
                    if (!this.videoConvertSupported) {
                        f = 0.5f;
                    }
                    fArr4[0] = f;
                    animatorArr[3] = ObjectAnimator.ofFloat(imageView5, property4, fArr4);
                    animatorSet2.playTogether(animatorArr);
                    this.compressItemAnimation.setDuration(180);
                    this.compressItemAnimation.setInterpolator(decelerateInterpolator);
                    this.compressItemAnimation.start();
                    return;
                }
                ImageView imageView6 = this.compressItem;
                if (!enabled) {
                    f = 0.5f;
                }
                imageView6.setAlpha(f);
            }
        }
    }

    /* access modifiers changed from: private */
    public void updateAccessibilityOverlayVisibility() {
        if (this.playButtonAccessibilityOverlay != null) {
            int state = this.photoProgressViews[0].backgroundState;
            if (!this.photoProgressViews[0].isVisible() || !(state == 3 || state == 4 || state == 2 || state == 1)) {
                this.playButtonAccessibilityOverlay.setVisibility(4);
                return;
            }
            if (state == 3) {
                this.playButtonAccessibilityOverlay.setContentDescription(LocaleController.getString("AccActionPlay", NUM));
            } else if (state == 2) {
                this.playButtonAccessibilityOverlay.setContentDescription(LocaleController.getString("AccActionDownload", NUM));
            } else if (state == 1) {
                this.playButtonAccessibilityOverlay.setContentDescription(LocaleController.getString("AccActionCancelDownload", NUM));
            } else {
                this.playButtonAccessibilityOverlay.setContentDescription(LocaleController.getString("AccActionPause", NUM));
            }
            this.playButtonAccessibilityOverlay.setVisibility(0);
        }
    }

    private class ListAdapter extends RecyclerListView.SelectionAdapter {
        private Context mContext;

        public ListAdapter(Context context) {
            this.mContext = context;
        }

        public boolean isEnabled(RecyclerView.ViewHolder holder) {
            return false;
        }

        public int getItemCount() {
            if (PhotoViewer.this.placeProvider == null || PhotoViewer.this.placeProvider.getSelectedPhotosOrder() == null) {
                return 0;
            }
            return PhotoViewer.this.placeProvider.getSelectedPhotosOrder().size();
        }

        public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
            PhotoPickerPhotoCell cell = new PhotoPickerPhotoCell(this.mContext);
            cell.checkFrame.setOnClickListener(new PhotoViewer$ListAdapter$$ExternalSyntheticLambda0(this));
            return new RecyclerListView.Holder(cell);
        }

        /* renamed from: lambda$onCreateViewHolder$0$org-telegram-ui-PhotoViewer$ListAdapter  reason: not valid java name */
        public /* synthetic */ void m4340x660e23ec(View v) {
            Object photoEntry = ((View) v.getParent()).getTag();
            int idx = PhotoViewer.this.imagesArrLocals.indexOf(photoEntry);
            if (idx >= 0) {
                int num = PhotoViewer.this.placeProvider.setPhotoChecked(idx, PhotoViewer.this.getCurrentVideoEditedInfo());
                boolean checked = PhotoViewer.this.placeProvider.isPhotoChecked(idx);
                if (idx == PhotoViewer.this.currentIndex) {
                    PhotoViewer.this.checkImageView.setChecked(-1, checked, true);
                }
                if (num >= 0) {
                    PhotoViewer.this.selectedPhotosAdapter.notifyItemRemoved(num);
                    if (num == 0) {
                        PhotoViewer.this.selectedPhotosAdapter.notifyItemChanged(0);
                    }
                }
                PhotoViewer.this.updateSelectedCount();
                return;
            }
            int num2 = PhotoViewer.this.placeProvider.setPhotoUnchecked(photoEntry);
            if (num2 >= 0) {
                PhotoViewer.this.selectedPhotosAdapter.notifyItemRemoved(num2);
                if (num2 == 0) {
                    PhotoViewer.this.selectedPhotosAdapter.notifyItemChanged(0);
                }
                PhotoViewer.this.updateSelectedCount();
            }
        }

        public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
            PhotoPickerPhotoCell cell = (PhotoPickerPhotoCell) holder.itemView;
            cell.setItemWidth(AndroidUtilities.dp(85.0f), position != 0 ? AndroidUtilities.dp(6.0f) : 0);
            BackupImageView imageView = cell.imageView;
            imageView.setOrientation(0, true);
            Object object = PhotoViewer.this.placeProvider.getSelectedPhotos().get(PhotoViewer.this.placeProvider.getSelectedPhotosOrder().get(position));
            if (object instanceof MediaController.PhotoEntry) {
                MediaController.PhotoEntry photoEntry = (MediaController.PhotoEntry) object;
                cell.setTag(photoEntry);
                cell.videoInfoContainer.setVisibility(4);
                if (photoEntry.thumbPath != null) {
                    imageView.setImage(photoEntry.thumbPath, (String) null, this.mContext.getResources().getDrawable(NUM));
                } else if (photoEntry.path != null) {
                    imageView.setOrientation(photoEntry.orientation, true);
                    if (photoEntry.isVideo) {
                        cell.videoInfoContainer.setVisibility(0);
                        cell.videoTextView.setText(AndroidUtilities.formatShortDuration(photoEntry.duration));
                        imageView.setImage("vthumb://" + photoEntry.imageId + ":" + photoEntry.path, (String) null, this.mContext.getResources().getDrawable(NUM));
                    } else {
                        imageView.setImage("thumb://" + photoEntry.imageId + ":" + photoEntry.path, (String) null, this.mContext.getResources().getDrawable(NUM));
                    }
                } else {
                    imageView.setImageResource(NUM);
                }
                cell.setChecked(-1, true, false);
                cell.checkBox.setVisibility(0);
            } else if (object instanceof MediaController.SearchImage) {
                MediaController.SearchImage photoEntry2 = (MediaController.SearchImage) object;
                cell.setTag(photoEntry2);
                cell.setImage(photoEntry2);
                cell.videoInfoContainer.setVisibility(4);
                cell.setChecked(-1, true, false);
                cell.checkBox.setVisibility(0);
            }
        }

        public int getItemViewType(int i) {
            return 0;
        }
    }

    private class FirstFrameView extends ImageView {
        public static final float fadeDuration = 250.0f;
        private VideoPlayer currentVideoPlayer;
        private ValueAnimator fadeAnimator;
        private final TimeInterpolator fadeInterpolator = CubicBezierInterpolator.EASE_IN;
        private boolean gettingFrame = false;
        private int gettingFrameIndex = 0;
        private boolean gotError = false;
        private boolean hasFrame = false;

        public FirstFrameView(Context context) {
            super(context);
            setAlpha(0.0f);
        }

        public void clear() {
            this.hasFrame = false;
            this.gotError = false;
            if (this.gettingFrame) {
                this.gettingFrameIndex++;
                this.gettingFrame = false;
            }
            setImageResource(17170445);
        }

        public void checkFromPlayer(VideoPlayer videoPlayer) {
            if (this.currentVideoPlayer != videoPlayer) {
                this.gotError = false;
                clear();
            }
            if (videoPlayer != null) {
                long timeToEnd = videoPlayer.getDuration() - videoPlayer.getCurrentPosition();
                if (!this.hasFrame && !this.gotError && !this.gettingFrame && ((float) timeToEnd) < 5250.0f) {
                    Uri uri = videoPlayer.getCurrentUri();
                    int index = this.gettingFrameIndex + 1;
                    this.gettingFrameIndex = index;
                    Utilities.globalQueue.postRunnable(new PhotoViewer$FirstFrameView$$ExternalSyntheticLambda3(this, uri, index));
                    this.gettingFrame = true;
                }
            }
            this.currentVideoPlayer = videoPlayer;
        }

        /* renamed from: lambda$checkFromPlayer$2$org-telegram-ui-PhotoViewer$FirstFrameView  reason: not valid java name */
        public /* synthetic */ void m4338x99d24718(Uri uri, int index) {
            try {
                AnimatedFileDrawable animatedFileDrawable = new AnimatedFileDrawable(new File(uri.getPath()), true, 0, (TLRPC.Document) null, (ImageLocation) null, (Object) null, 0, UserConfig.selectedAccount, false, AndroidUtilities.displaySize.x, AndroidUtilities.displaySize.y);
                Bitmap bitmap = animatedFileDrawable.getFrameAtTime(0);
                animatedFileDrawable.recycle();
                try {
                    AndroidUtilities.runOnUIThread(new PhotoViewer$FirstFrameView$$ExternalSyntheticLambda2(this, index, bitmap));
                } catch (Throwable th) {
                    e = th;
                }
            } catch (Throwable th2) {
                e = th2;
                int i = index;
                FileLog.e(e);
                AndroidUtilities.runOnUIThread(new PhotoViewer$FirstFrameView$$ExternalSyntheticLambda1(this));
            }
        }

        /* renamed from: lambda$checkFromPlayer$0$org-telegram-ui-PhotoViewer$FirstFrameView  reason: not valid java name */
        public /* synthetic */ void m4336x13var_a(int index, Bitmap bitmap) {
            if (index == this.gettingFrameIndex) {
                setImageBitmap(bitmap);
                this.hasFrame = true;
                this.gettingFrame = false;
            }
        }

        /* renamed from: lambda$checkFromPlayer$1$org-telegram-ui-PhotoViewer$FirstFrameView  reason: not valid java name */
        public /* synthetic */ void m4337xd6e5ddb9() {
            this.gotError = true;
        }

        public boolean containsFrame() {
            return this.hasFrame;
        }

        /* access modifiers changed from: private */
        public void updateAlpha() {
            if (PhotoViewer.this.videoPlayer == null || PhotoViewer.this.videoPlayer.getDuration() == -9223372036854775807L) {
                ValueAnimator valueAnimator = this.fadeAnimator;
                if (valueAnimator != null) {
                    valueAnimator.cancel();
                    this.fadeAnimator = null;
                }
                setAlpha(0.0f);
                return;
            }
            long toDuration = Math.max(0, PhotoViewer.this.videoPlayer.getDuration() - PhotoViewer.this.videoPlayer.getCurrentPosition());
            float alpha = 1.0f - Math.max(Math.min(((float) toDuration) / 250.0f, 1.0f), 0.0f);
            if (alpha <= 0.0f) {
                ValueAnimator valueAnimator2 = this.fadeAnimator;
                if (valueAnimator2 != null) {
                    valueAnimator2.cancel();
                    this.fadeAnimator = null;
                }
                setAlpha(0.0f);
            } else if (!PhotoViewer.this.videoPlayer.isPlaying()) {
                ValueAnimator valueAnimator3 = this.fadeAnimator;
                if (valueAnimator3 != null) {
                    valueAnimator3.cancel();
                    this.fadeAnimator = null;
                }
                setAlpha(alpha);
            } else if (this.fadeAnimator == null) {
                ValueAnimator ofFloat = ValueAnimator.ofFloat(new float[]{alpha, 1.0f});
                this.fadeAnimator = ofFloat;
                ofFloat.addUpdateListener(new PhotoViewer$FirstFrameView$$ExternalSyntheticLambda0(this));
                this.fadeAnimator.setDuration(toDuration);
                this.fadeAnimator.setInterpolator(this.fadeInterpolator);
                this.fadeAnimator.start();
                setAlpha(alpha);
            }
        }

        /* renamed from: lambda$updateAlpha$3$org-telegram-ui-PhotoViewer$FirstFrameView  reason: not valid java name */
        public /* synthetic */ void m4339lambda$updateAlpha$3$orgtelegramuiPhotoViewer$FirstFrameView(ValueAnimator a) {
            setAlpha(((Float) a.getAnimatedValue()).floatValue());
        }
    }

    /* access modifiers changed from: private */
    public int getThemedColor(String key) {
        Theme.ResourcesProvider resourcesProvider2 = this.resourcesProvider;
        Integer color = resourcesProvider2 != null ? resourcesProvider2.getColor(key) : null;
        return color != null ? color.intValue() : Theme.getColor(key);
    }
}
