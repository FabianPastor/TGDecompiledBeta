package org.telegram.ui;

import android.animation.Animator;
import android.animation.AnimatorListenerAdapter;
import android.animation.AnimatorSet;
import android.animation.ObjectAnimator;
import android.annotation.TargetApi;
import android.app.DatePickerDialog;
import android.app.Dialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.content.res.Configuration;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Outline;
import android.graphics.Paint;
import android.graphics.Path;
import android.graphics.Path.Direction;
import android.graphics.Point;
import android.graphics.PorterDuff.Mode;
import android.graphics.PorterDuffXfermode;
import android.graphics.Rect;
import android.graphics.RectF;
import android.graphics.drawable.Drawable;
import android.media.ThumbnailUtils;
import android.net.Uri;
import android.os.Build.VERSION;
import android.os.Bundle;
import android.text.Layout;
import android.text.Spannable;
import android.text.SpannableString;
import android.text.SpannableStringBuilder;
import android.text.TextPaint;
import android.text.TextUtils;
import android.text.style.CharacterStyle;
import android.text.style.ClickableSpan;
import android.text.style.ForegroundColorSpan;
import android.text.style.URLSpan;
import android.util.LongSparseArray;
import android.util.Property;
import android.util.SparseArray;
import android.util.SparseBooleanArray;
import android.view.KeyEvent;
import android.view.MotionEvent;
import android.view.TextureView;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewOutlineProvider;
import android.view.ViewTreeObserver.OnPreDrawListener;
import android.widget.DatePicker;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;
import androidx.recyclerview.widget.GridLayoutManagerFixed;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView.Adapter;
import androidx.recyclerview.widget.RecyclerView.LayoutParams;
import androidx.recyclerview.widget.RecyclerView.ViewHolder;
import com.google.android.exoplayer2.ui.AspectRatioFrameLayout;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.net.URLDecoder;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.HashMap;
import java.util.Iterator;
import java.util.concurrent.CountDownLatch;
import java.util.regex.Matcher;
import org.telegram.PhoneFormat.PhoneFormat;
import org.telegram.messenger.AccountInstance;
import org.telegram.messenger.AndroidUtilities;
import org.telegram.messenger.ApplicationLoader;
import org.telegram.messenger.BuildVars;
import org.telegram.messenger.ChatObject;
import org.telegram.messenger.ContactsController;
import org.telegram.messenger.Emoji;
import org.telegram.messenger.FileLoader;
import org.telegram.messenger.FileLog;
import org.telegram.messenger.ImageLocation;
import org.telegram.messenger.ImageReceiver;
import org.telegram.messenger.ImageReceiver.BitmapHolder;
import org.telegram.messenger.LocaleController;
import org.telegram.messenger.MediaController;
import org.telegram.messenger.MediaController.PhotoEntry;
import org.telegram.messenger.MediaDataController;
import org.telegram.messenger.MediaDataController.KeywordResult;
import org.telegram.messenger.MessageObject;
import org.telegram.messenger.MessageObject.GroupedMessagePosition;
import org.telegram.messenger.MessageObject.GroupedMessages;
import org.telegram.messenger.MessagesController;
import org.telegram.messenger.MessagesStorage;
import org.telegram.messenger.NotificationCenter;
import org.telegram.messenger.NotificationCenter.NotificationCenterDelegate;
import org.telegram.messenger.SendMessagesHelper;
import org.telegram.messenger.SendMessagesHelper.SendingMediaInfo;
import org.telegram.messenger.SharedConfig;
import org.telegram.messenger.UserObject;
import org.telegram.messenger.Utilities;
import org.telegram.messenger.VideoEditedInfo;
import org.telegram.messenger.browser.Browser;
import org.telegram.tgnet.TLObject;
import org.telegram.tgnet.TLRPC;
import org.telegram.tgnet.TLRPC.BotInfo;
import org.telegram.tgnet.TLRPC.BotInlineResult;
import org.telegram.tgnet.TLRPC.Chat;
import org.telegram.tgnet.TLRPC.ChatFull;
import org.telegram.tgnet.TLRPC.ChatParticipant;
import org.telegram.tgnet.TLRPC.Document;
import org.telegram.tgnet.TLRPC.DraftMessage;
import org.telegram.tgnet.TLRPC.EncryptedChat;
import org.telegram.tgnet.TLRPC.FileLocation;
import org.telegram.tgnet.TLRPC.InputStickerSet;
import org.telegram.tgnet.TLRPC.KeyboardButton;
import org.telegram.tgnet.TLRPC.Message;
import org.telegram.tgnet.TLRPC.MessageEntity;
import org.telegram.tgnet.TLRPC.MessageMedia;
import org.telegram.tgnet.TLRPC.Peer;
import org.telegram.tgnet.TLRPC.PhotoSize;
import org.telegram.tgnet.TLRPC.TL_botCommand;
import org.telegram.tgnet.TLRPC.TL_channelForbidden;
import org.telegram.tgnet.TLRPC.TL_channelFull;
import org.telegram.tgnet.TLRPC.TL_chatBannedRights;
import org.telegram.tgnet.TLRPC.TL_chatFull;
import org.telegram.tgnet.TLRPC.TL_contacts_acceptContact;
import org.telegram.tgnet.TLRPC.TL_document;
import org.telegram.tgnet.TLRPC.TL_encryptedChat;
import org.telegram.tgnet.TLRPC.TL_encryptedChatDiscarded;
import org.telegram.tgnet.TLRPC.TL_encryptedChatRequested;
import org.telegram.tgnet.TLRPC.TL_encryptedChatWaiting;
import org.telegram.tgnet.TLRPC.TL_error;
import org.telegram.tgnet.TLRPC.TL_exportedMessageLink;
import org.telegram.tgnet.TLRPC.TL_fileLocationUnavailable;
import org.telegram.tgnet.TLRPC.TL_game;
import org.telegram.tgnet.TLRPC.TL_inlineBotSwitchPM;
import org.telegram.tgnet.TLRPC.TL_inputMediaPoll;
import org.telegram.tgnet.TLRPC.TL_inputMessageEntityMentionName;
import org.telegram.tgnet.TLRPC.TL_inputStickerSetID;
import org.telegram.tgnet.TLRPC.TL_inputStickerSetShortName;
import org.telegram.tgnet.TLRPC.TL_keyboardButtonBuy;
import org.telegram.tgnet.TLRPC.TL_keyboardButtonCallback;
import org.telegram.tgnet.TLRPC.TL_keyboardButtonGame;
import org.telegram.tgnet.TLRPC.TL_keyboardButtonSwitchInline;
import org.telegram.tgnet.TLRPC.TL_keyboardButtonUrl;
import org.telegram.tgnet.TLRPC.TL_keyboardButtonUrlAuth;
import org.telegram.tgnet.TLRPC.TL_messageEntityBold;
import org.telegram.tgnet.TLRPC.TL_messageEntityCode;
import org.telegram.tgnet.TLRPC.TL_messageEntityItalic;
import org.telegram.tgnet.TLRPC.TL_messageEntityMentionName;
import org.telegram.tgnet.TLRPC.TL_messageEntityPre;
import org.telegram.tgnet.TLRPC.TL_messageEntityStrike;
import org.telegram.tgnet.TLRPC.TL_messageEntityTextUrl;
import org.telegram.tgnet.TLRPC.TL_messageEntityUnderline;
import org.telegram.tgnet.TLRPC.TL_messageMediaGame;
import org.telegram.tgnet.TLRPC.TL_messageMediaPhoto;
import org.telegram.tgnet.TLRPC.TL_messageMediaPoll;
import org.telegram.tgnet.TLRPC.TL_messageMediaWebPage;
import org.telegram.tgnet.TLRPC.TL_messages_acceptUrlAuth;
import org.telegram.tgnet.TLRPC.TL_messages_editMessage;
import org.telegram.tgnet.TLRPC.TL_messages_getMessageEditData;
import org.telegram.tgnet.TLRPC.TL_messages_getWebPagePreview;
import org.telegram.tgnet.TLRPC.TL_messages_requestUrlAuth;
import org.telegram.tgnet.TLRPC.TL_peerNotifySettings;
import org.telegram.tgnet.TLRPC.TL_photoSizeEmpty;
import org.telegram.tgnet.TLRPC.TL_poll;
import org.telegram.tgnet.TLRPC.TL_pollAnswer;
import org.telegram.tgnet.TLRPC.TL_replyKeyboardForceReply;
import org.telegram.tgnet.TLRPC.TL_urlAuthResultAccepted;
import org.telegram.tgnet.TLRPC.TL_urlAuthResultDefault;
import org.telegram.tgnet.TLRPC.TL_urlAuthResultRequest;
import org.telegram.tgnet.TLRPC.TL_webPage;
import org.telegram.tgnet.TLRPC.TL_webPagePending;
import org.telegram.tgnet.TLRPC.Updates;
import org.telegram.tgnet.TLRPC.User;
import org.telegram.tgnet.TLRPC.UserFull;
import org.telegram.tgnet.TLRPC.WebPage;
import org.telegram.ui.ActionBar.ActionBar;
import org.telegram.ui.ActionBar.ActionBarLayout;
import org.telegram.ui.ActionBar.ActionBarMenuItem;
import org.telegram.ui.ActionBar.ActionBarMenuSubItem;
import org.telegram.ui.ActionBar.ActionBarPopupWindow;
import org.telegram.ui.ActionBar.AlertDialog;
import org.telegram.ui.ActionBar.BackDrawable;
import org.telegram.ui.ActionBar.BaseFragment;
import org.telegram.ui.ActionBar.BottomSheet.Builder;
import org.telegram.ui.ActionBar.SimpleTextView;
import org.telegram.ui.ActionBar.Theme;
import org.telegram.ui.ActionBar.ThemeDescription;
import org.telegram.ui.ActionBar.ThemeDescription.ThemeDescriptionDelegate;
import org.telegram.ui.Adapters.MentionsAdapter;
import org.telegram.ui.Adapters.StickersAdapter;
import org.telegram.ui.Cells.BotHelpCell;
import org.telegram.ui.Cells.BotSwitchCell;
import org.telegram.ui.Cells.ChatActionCell;
import org.telegram.ui.Cells.ChatActionCell.ChatActionCellDelegate;
import org.telegram.ui.Cells.ChatLoadingCell;
import org.telegram.ui.Cells.ChatMessageCell;
import org.telegram.ui.Cells.ChatMessageCell.ChatMessageCellDelegate;
import org.telegram.ui.Cells.ChatUnreadCell;
import org.telegram.ui.Cells.CheckBoxCell;
import org.telegram.ui.Cells.ContextLinkCell;
import org.telegram.ui.Cells.MentionCell;
import org.telegram.ui.Cells.StickerCell;
import org.telegram.ui.Components.AlertsCreator;
import org.telegram.ui.Components.AnimatedFileDrawable;
import org.telegram.ui.Components.BackupImageView;
import org.telegram.ui.Components.ChatActivityEnterView;
import org.telegram.ui.Components.ChatAttachAlert;
import org.telegram.ui.Components.ChatAttachAlert.ChatAttachViewDelegate;
import org.telegram.ui.Components.ChatAvatarContainer;
import org.telegram.ui.Components.ChatBigEmptyView;
import org.telegram.ui.Components.CorrectlyMeasuringTextView;
import org.telegram.ui.Components.EditTextCaption;
import org.telegram.ui.Components.EmbedBottomSheet;
import org.telegram.ui.Components.EmojiView;
import org.telegram.ui.Components.ExtendedGridLayoutManager;
import org.telegram.ui.Components.FragmentContextView;
import org.telegram.ui.Components.HintView;
import org.telegram.ui.Components.InstantCameraView;
import org.telegram.ui.Components.LayoutHelper;
import org.telegram.ui.Components.NumberTextView;
import org.telegram.ui.Components.PipRoundVideoView;
import org.telegram.ui.Components.RLottieDrawable;
import org.telegram.ui.Components.RadialProgressView;
import org.telegram.ui.Components.RecyclerListView;
import org.telegram.ui.Components.RecyclerListView.Holder;
import org.telegram.ui.Components.RecyclerListView.OnItemClickListener;
import org.telegram.ui.Components.RecyclerListView.OnItemClickListenerExtended;
import org.telegram.ui.Components.RecyclerListView.OnItemLongClickListenerExtended;
import org.telegram.ui.Components.ShareAlert;
import org.telegram.ui.Components.SizeNotifierFrameLayout;
import org.telegram.ui.Components.TextStyleSpan;
import org.telegram.ui.Components.TextStyleSpan.TextStyleRun;
import org.telegram.ui.Components.URLSpanBotCommand;
import org.telegram.ui.Components.URLSpanMono;
import org.telegram.ui.Components.URLSpanNoUnderline;
import org.telegram.ui.Components.URLSpanReplacement;
import org.telegram.ui.Components.URLSpanUserMention;
import org.telegram.ui.Components.UndoView;
import org.telegram.ui.Components.voip.VoIPHelper;
import org.telegram.ui.ContentPreviewViewer.ContentPreviewViewerDelegate;
import org.telegram.ui.DialogsActivity.DialogsActivityDelegate;
import org.telegram.ui.LocationActivity.LocationActivityDelegate;
import org.telegram.ui.PhotoViewer.EmptyPhotoViewerProvider;
import org.telegram.ui.PhotoViewer.PhotoViewerProvider;
import org.telegram.ui.PhotoViewer.PlaceProviderObject;

public class ChatActivity extends BaseFragment implements NotificationCenterDelegate, DialogsActivityDelegate, LocationActivityDelegate {
    private static final int add_shortcut = 24;
    private static final int attach_audio = 3;
    private static final int attach_contact = 5;
    private static final int attach_document = 4;
    private static final int attach_gallery = 1;
    private static final int attach_location = 6;
    private static final int attach_photo = 0;
    private static final int attach_poll = 9;
    private static final int attach_video = 2;
    private static final int bot_help = 30;
    private static final int bot_settings = 31;
    private static final int call = 32;
    private static final int chat_enc_timer = 13;
    private static final int chat_menu_attach = 14;
    private static final int clear_history = 15;
    private static final int copy = 10;
    private static final int delete = 12;
    private static final int delete_chat = 16;
    private static final int edit = 23;
    private static final int forward = 11;
    private static final int id_chat_compose_panel = 1000;
    private static final int mute = 18;
    private static final int report = 21;
    private static final int search = 40;
    private static final int share_contact = 17;
    private static final int star = 22;
    private static final int text_bold = 50;
    private static final int text_italic = 51;
    private static final int text_link = 53;
    private static final int text_mono = 52;
    private static final int text_regular = 54;
    private static final int text_strike = 55;
    private static final int text_underline = 56;
    private ArrayList<View> actionModeViews = new ArrayList();
    private ActionBarMenuSubItem addContactItem;
    private TextView addToContactsButton;
    private TextView alertNameTextView;
    private TextView alertTextView;
    private FrameLayout alertView;
    private AnimatorSet alertViewAnimator;
    private boolean allowContextBotPanel;
    private boolean allowContextBotPanelSecond = true;
    private boolean allowStickersPanel;
    private HashMap<MessageObject, Boolean> alredyPlayedStickers = new HashMap();
    private ArrayList<MessageObject> animatingMessageObjects = new ArrayList();
    private Paint aspectPaint;
    private Path aspectPath;
    private AspectRatioFrameLayout aspectRatioFrameLayout;
    private ActionBarMenuItem attachItem;
    private ChatAvatarContainer avatarContainer;
    private ChatBigEmptyView bigEmptyView;
    private MessageObject botButtons;
    private PhotoViewerProvider botContextProvider = new EmptyPhotoViewerProvider() {
        /* JADX WARNING: Removed duplicated region for block: B:18:0x007c A:{LOOP_END, LOOP:0: B:5:0x0026->B:18:0x007c} */
        /* JADX WARNING: Removed duplicated region for block: B:20:0x0047 A:{SYNTHETIC} */
        public org.telegram.ui.PhotoViewer.PlaceProviderObject getPlaceForPhoto(org.telegram.messenger.MessageObject r5, org.telegram.tgnet.TLRPC.FileLocation r6, int r7, boolean r8) {
            /*
            r4 = this;
            r5 = 0;
            if (r7 < 0) goto L_0x007f;
        L_0x0003:
            r6 = org.telegram.ui.ChatActivity.this;
            r6 = r6.botContextResults;
            r6 = r6.size();
            if (r7 < r6) goto L_0x0010;
        L_0x000f:
            goto L_0x007f;
        L_0x0010:
            r6 = org.telegram.ui.ChatActivity.this;
            r6 = r6.mentionListView;
            r6 = r6.getChildCount();
            r8 = org.telegram.ui.ChatActivity.this;
            r8 = r8.botContextResults;
            r7 = r8.get(r7);
            r8 = 0;
            r0 = 0;
        L_0x0026:
            if (r0 >= r6) goto L_0x007f;
        L_0x0028:
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.mentionListView;
            r1 = r1.getChildAt(r0);
            r2 = r1 instanceof org.telegram.ui.Cells.ContextLinkCell;
            if (r2 == 0) goto L_0x0044;
        L_0x0036:
            r2 = r1;
            r2 = (org.telegram.ui.Cells.ContextLinkCell) r2;
            r3 = r2.getResult();
            if (r3 != r7) goto L_0x0044;
        L_0x003f:
            r2 = r2.getPhotoImage();
            goto L_0x0045;
        L_0x0044:
            r2 = r5;
        L_0x0045:
            if (r2 == 0) goto L_0x007c;
        L_0x0047:
            r5 = 2;
            r5 = new int[r5];
            r1.getLocationInWindow(r5);
            r6 = new org.telegram.ui.PhotoViewer$PlaceProviderObject;
            r6.<init>();
            r7 = r5[r8];
            r6.viewX = r7;
            r7 = 1;
            r5 = r5[r7];
            r7 = android.os.Build.VERSION.SDK_INT;
            r0 = 21;
            if (r7 < r0) goto L_0x0060;
        L_0x005f:
            goto L_0x0062;
        L_0x0060:
            r8 = org.telegram.messenger.AndroidUtilities.statusBarHeight;
        L_0x0062:
            r5 = r5 - r8;
            r6.viewY = r5;
            r5 = org.telegram.ui.ChatActivity.this;
            r5 = r5.mentionListView;
            r6.parentView = r5;
            r6.imageReceiver = r2;
            r5 = r2.getBitmapSafe();
            r6.thumb = r5;
            r5 = r2.getRoundRadius();
            r6.radius = r5;
            return r6;
        L_0x007c:
            r0 = r0 + 1;
            goto L_0x0026;
        L_0x007f:
            return r5;
            */
            throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity$AnonymousClass2.getPlaceForPhoto(org.telegram.messenger.MessageObject, org.telegram.tgnet.TLRPC$FileLocation, int, boolean):org.telegram.ui.PhotoViewer$PlaceProviderObject");
        }

        public void sendButtonPressed(int i, VideoEditedInfo videoEditedInfo) {
            if (i >= 0 && i < ChatActivity.this.botContextResults.size()) {
                ChatActivity chatActivity = ChatActivity.this;
                chatActivity.sendBotInlineResult((BotInlineResult) chatActivity.botContextResults.get(i));
            }
        }
    };
    private ArrayList<Object> botContextResults;
    private SparseArray<BotInfo> botInfo = new SparseArray();
    private MessageObject botReplyButtons;
    private String botUser;
    private int botsCount;
    private FrameLayout bottomMessagesActionContainer;
    private FrameLayout bottomOverlay;
    private AnimatorSet bottomOverlayAnimation;
    private FrameLayout bottomOverlayChat;
    private TextView bottomOverlayChatText;
    private UnreadCounterTextView bottomOverlayChatText2;
    private RadialProgressView bottomOverlayProgress;
    private TextView bottomOverlayText;
    private boolean[] cacheEndReached = new boolean[2];
    private int canEditMessagesCount;
    private int canForwardMessagesCount;
    private int cantDeleteMessagesCount;
    private int cantForwardMessagesCount;
    protected ChatActivityEnterView chatActivityEnterView;
    private ChatActivityAdapter chatAdapter;
    private ChatAttachAlert chatAttachAlert;
    private long chatEnterTime;
    protected ChatFull chatInfo;
    private GridLayoutManagerFixed chatLayoutManager;
    private long chatLeaveTime;
    private RecyclerListView chatListView;
    private int chatListViewClipTop;
    private ArrayList<ChatMessageCell> chatMessageCellsCache = new ArrayList();
    private boolean checkTextureViewPosition;
    private boolean clearingHistory;
    private Dialog closeChatDialog;
    private ImageView closePinned;
    private ImageView closeReportSpam;
    private SizeNotifierFrameLayout contentView;
    private int createUnreadMessageAfterId;
    private boolean createUnreadMessageAfterIdLoading;
    protected Chat currentChat;
    protected EncryptedChat currentEncryptedChat;
    private boolean currentFloatingDateOnScreen;
    private boolean currentFloatingTopIsNotMessage;
    private String currentPicturePath;
    protected User currentUser;
    private long dialog_id;
    private ChatMessageCell drawLaterRoundProgressCell;
    private AnimatorSet editButtonAnimation;
    private int editTextEnd;
    private ActionBarMenuItem editTextItem;
    private int editTextStart;
    private MessageObject editingMessageObject;
    private int editingMessageObjectReqId;
    private View emojiButtonRed;
    private TextView emptyView;
    private FrameLayout emptyViewContainer;
    private boolean[] endReached = new boolean[2];
    private boolean first = true;
    private boolean firstLoading = true;
    boolean firstOpen = true;
    private boolean firstUnreadSent = false;
    private int first_unread_id;
    private boolean fixPaddingsInLayout;
    private AnimatorSet floatingDateAnimation;
    private ChatActionCell floatingDateView;
    private boolean forceScrollToTop;
    private TextView forwardButton;
    private AnimatorSet forwardButtonAnimation;
    private boolean[] forwardEndReached = new boolean[]{true, true};
    private HintView forwardHintView;
    private MessageObject forwardingMessage;
    private GroupedMessages forwardingMessageGroup;
    private ArrayList<MessageObject> forwardingMessages;
    private ArrayList<CharSequence> foundUrls;
    private WebPage foundWebPage;
    private FragmentContextView fragmentContextView;
    private TextView gifHintTextView;
    private boolean globalIgnoreLayout;
    private LongSparseArray<GroupedMessages> groupedMessagesMap = new LongSparseArray();
    private boolean hasAllMentionsLocal;
    private boolean hasBotsCommands;
    private boolean hasUnfavedSelected;
    private ActionBarMenuItem headerItem;
    private Runnable hideAlertViewRunnable;
    private int hideDateDelay = 500;
    private int highlightMessageId = Integer.MAX_VALUE;
    private boolean ignoreAttachOnPause;
    private long inlineReturn;
    private InstantCameraView instantCameraView;
    private boolean isBroadcast;
    private int lastLoadIndex;
    private int last_message_id = 0;
    private int linkSearchRequestId;
    private boolean loading;
    private boolean loadingForward;
    private boolean loadingFromOldPosition;
    private int loadingPinnedMessage;
    private int loadsCount;
    private boolean locationAlertShown;
    private int[] maxDate = new int[]{Integer.MIN_VALUE, Integer.MIN_VALUE};
    private int[] maxMessageId = new int[]{Integer.MAX_VALUE, Integer.MAX_VALUE};
    private TextView mediaBanTooltip;
    private FrameLayout mentionContainer;
    private ExtendedGridLayoutManager mentionGridLayoutManager;
    private LinearLayoutManager mentionLayoutManager;
    private AnimatorSet mentionListAnimation;
    private RecyclerListView mentionListView;
    private boolean mentionListViewIgnoreLayout;
    private boolean mentionListViewIsScrolling;
    private int mentionListViewLastViewPosition;
    private int mentionListViewLastViewTop;
    private int mentionListViewScrollOffsetY;
    private FrameLayout mentiondownButton;
    private ObjectAnimator mentiondownButtonAnimation;
    private TextView mentiondownButtonCounter;
    private ImageView mentiondownButtonImage;
    private MentionsAdapter mentionsAdapter;
    private OnItemClickListener mentionsOnItemClickListener;
    private long mergeDialogId;
    protected ArrayList<MessageObject> messages = new ArrayList();
    private HashMap<String, ArrayList<MessageObject>> messagesByDays = new HashMap();
    private SparseArray<MessageObject>[] messagesDict = new SparseArray[]{new SparseArray(), new SparseArray()};
    private int[] minDate = new int[2];
    private int[] minMessageId = new int[]{Integer.MIN_VALUE, Integer.MIN_VALUE};
    private ActionBarMenuSubItem muteItem;
    private MessageObject needAnimateToMessage;
    private boolean needSelectFromMessageId;
    private int newMentionsCount;
    private int newUnreadMessageCount;
    private HintView noSoundHintView;
    OnItemClickListenerExtended onItemClickListener = new OnItemClickListenerExtended() {
        public void onItemClick(View view, int i, float f, float f2) {
            ChatActivity.this.wasManualScroll = true;
            if (ChatActivity.this.actionBar.isActionModeShowed()) {
                boolean z = false;
                if (view instanceof ChatMessageCell) {
                    z = ((ChatMessageCell) view).isInsideBackground(f, f2) ^ true;
                }
                ChatActivity.this.processRowSelect(view, z, f, f2);
                return;
            }
            ChatActivity.this.createMenu(view, true, false, f, f2);
        }
    };
    OnItemLongClickListenerExtended onItemLongClickListener = new OnItemLongClickListenerExtended() {
        public void onLongClickRelease() {
        }

        public void onMove(float f, float f2) {
        }

        public boolean onItemClick(View view, int i, float f, float f2) {
            ChatActivity.this.wasManualScroll = true;
            if (ChatActivity.this.actionBar.isActionModeShowed()) {
                boolean z = false;
                if (view instanceof ChatMessageCell) {
                    z = ((ChatMessageCell) view).isInsideBackground(f, f2) ^ true;
                }
                ChatActivity.this.processRowSelect(view, z, f, f2);
            } else {
                ChatActivity.this.createMenu(view, false, true, f, f2);
            }
            return true;
        }
    };
    private boolean openAnimationEnded;
    private boolean openKeyboardOnAttachMenuClose;
    private boolean openSearchKeyboard;
    private View overlayView;
    private FrameLayout pagedownButton;
    private AnimatorSet pagedownButtonAnimation;
    private TextView pagedownButtonCounter;
    private ImageView pagedownButtonImage;
    private boolean pagedownButtonShowedByScroll;
    private boolean paused = true;
    private boolean pausedOnLastMessage;
    private String pendingLinkSearchString;
    private Runnable pendingWebPageTimeoutRunnable;
    private PhotoViewerProvider photoViewerProvider = new EmptyPhotoViewerProvider() {
        public PlaceProviderObject getPlaceForPhoto(MessageObject messageObject, FileLocation fileLocation, int i, boolean z) {
            FileLocation fileLocation2 = fileLocation;
            int childCount = ChatActivity.this.chatListView.getChildCount();
            int i2 = 0;
            int i3 = 0;
            while (true) {
                ImageReceiver imageReceiver = null;
                if (i3 >= childCount) {
                    return null;
                }
                View childAt = ChatActivity.this.chatListView.getChildAt(i3);
                MessageObject messageObject2;
                if (childAt instanceof ChatMessageCell) {
                    if (messageObject != null) {
                        ChatMessageCell chatMessageCell = (ChatMessageCell) childAt;
                        messageObject2 = chatMessageCell.getMessageObject();
                        if (messageObject2 != null && messageObject2.getId() == messageObject.getId()) {
                            imageReceiver = chatMessageCell.getPhotoImage();
                        }
                    }
                } else if (childAt instanceof ChatActionCell) {
                    ChatActionCell chatActionCell = (ChatActionCell) childAt;
                    messageObject2 = chatActionCell.getMessageObject();
                    if (messageObject2 != null) {
                        if (messageObject != null) {
                            if (messageObject2.getId() == messageObject.getId()) {
                                imageReceiver = chatActionCell.getPhotoImage();
                            }
                        } else if (fileLocation2 != null && messageObject2.photoThumbs != null) {
                            for (int i4 = 0; i4 < messageObject2.photoThumbs.size(); i4++) {
                                FileLocation fileLocation3 = ((PhotoSize) messageObject2.photoThumbs.get(i4)).location;
                                if (fileLocation3.volume_id == fileLocation2.volume_id && fileLocation3.local_id == fileLocation2.local_id) {
                                    imageReceiver = chatActionCell.getPhotoImage();
                                    break;
                                }
                            }
                        }
                    }
                }
                if (imageReceiver != null) {
                    int[] iArr = new int[2];
                    childAt.getLocationInWindow(iArr);
                    PlaceProviderObject placeProviderObject = new PlaceProviderObject();
                    placeProviderObject.viewX = iArr[0];
                    int i5 = iArr[1];
                    if (VERSION.SDK_INT < 21) {
                        i2 = AndroidUtilities.statusBarHeight;
                    }
                    placeProviderObject.viewY = i5 - i2;
                    placeProviderObject.parentView = ChatActivity.this.chatListView;
                    placeProviderObject.imageReceiver = imageReceiver;
                    if (z) {
                        placeProviderObject.thumb = imageReceiver.getBitmapSafe();
                    }
                    placeProviderObject.radius = imageReceiver.getRoundRadius();
                    if (childAt instanceof ChatActionCell) {
                        Chat chat = ChatActivity.this.currentChat;
                        if (chat != null) {
                            placeProviderObject.dialogId = -chat.id;
                        }
                    }
                    if ((ChatActivity.this.pinnedMessageView != null && ChatActivity.this.pinnedMessageView.getTag() == null) || (ChatActivity.this.topChatPanelView != null && ChatActivity.this.topChatPanelView.getTag() == null)) {
                        placeProviderObject.clipTopAddition = AndroidUtilities.dp(48.0f);
                    }
                    placeProviderObject.clipTopAddition += ChatActivity.this.chatListViewClipTop;
                    return placeProviderObject;
                }
                i3++;
            }
        }
    };
    private int pinnedImageCacheType;
    private PhotoSize pinnedImageLocation;
    private TLObject pinnedImageLocationObject;
    private int pinnedImageSize;
    private PhotoSize pinnedImageThumbLocation;
    private View pinnedLineView;
    private BackupImageView pinnedMessageImageView;
    private SimpleTextView pinnedMessageNameTextView;
    private MessageObject pinnedMessageObject;
    private SimpleTextView pinnedMessageTextView;
    private FrameLayout pinnedMessageView;
    private AnimatorSet pinnedMessageViewAnimator;
    private LongSparseArray<ArrayList<MessageObject>> polls = new LongSparseArray();
    ArrayList<MessageObject> pollsToCheck = new ArrayList(10);
    private int prevSetUnreadCount = Integer.MIN_VALUE;
    private RadialProgressView progressBar;
    private FrameLayout progressView;
    private View progressView2;
    private TextView replyButton;
    private AnimatorSet replyButtonAnimation;
    private ImageView replyCloseImageView;
    private ImageView replyIconImageView;
    private int replyImageCacheType;
    private PhotoSize replyImageLocation;
    private TLObject replyImageLocationObject;
    private int replyImageSize;
    private PhotoSize replyImageThumbLocation;
    private BackupImageView replyImageView;
    private View replyLineView;
    private SimpleTextView replyNameTextView;
    private SimpleTextView replyObjectTextView;
    private MessageObject replyingMessageObject;
    private TextView reportSpamButton;
    private AnimatorSet reportSpamViewAnimator;
    private int returnToLoadIndex;
    private int returnToMessageId;
    private AnimatorSet runningAnimation;
    private AnimatorSet scrimAnimatorSet;
    private Paint scrimPaint;
    private ActionBarPopupWindow scrimPopupWindow;
    private View scrimView;
    private MessageObject scrollToMessage;
    private int scrollToMessagePosition = -10000;
    private int scrollToOffsetOnRecreate = 0;
    private int scrollToPositionOnRecreate = -1;
    private boolean scrollToTopOnResume;
    private boolean scrollToTopUnReadOnResume;
    private boolean scrollToVideo;
    private boolean scrollingChatListView;
    private boolean scrollingFloatingDate;
    private ImageView searchCalendarButton;
    private FrameLayout searchContainer;
    private SimpleTextView searchCountText;
    private ImageView searchDownButton;
    private ActionBarMenuItem searchItem;
    private ImageView searchUpButton;
    private ImageView searchUserButton;
    private boolean searchingForUser;
    private User searchingUserMessages;
    private SparseArray<MessageObject>[] selectedMessagesCanCopyIds = new SparseArray[]{new SparseArray(), new SparseArray()};
    private SparseArray<MessageObject>[] selectedMessagesCanStarIds = new SparseArray[]{new SparseArray(), new SparseArray()};
    private NumberTextView selectedMessagesCountTextView;
    private SparseArray<MessageObject>[] selectedMessagesIds = new SparseArray[]{new SparseArray(), new SparseArray()};
    private MessageObject selectedObject;
    private GroupedMessages selectedObjectGroup;
    private MessageObject selectedObjectToEditCaption;
    private boolean showScrollToMessageError;
    private HintView slowModeHint;
    private int startLoadFromMessageId;
    private int startLoadFromMessageOffset = Integer.MAX_VALUE;
    private String startVideoEdit;
    private StickersAdapter stickersAdapter;
    private RecyclerListView stickersListView;
    private OnItemClickListener stickersOnItemClickListener;
    private FrameLayout stickersPanel;
    private ImageView stickersPanelArrow;
    private View timeItem2;
    private FrameLayout topChatPanelView;
    private int topViewWasVisible;
    private UndoView undoView;
    private MessageObject unreadMessageObject;
    private Runnable unselectRunnable;
    private boolean userBlocked;
    protected UserFull userInfo;
    private FrameLayout videoPlayerContainer;
    private TextureView videoTextureView;
    private AnimatorSet voiceHintAnimation;
    private Runnable voiceHintHideRunnable;
    private TextView voiceHintTextView;
    private Runnable waitingForCharaterEnterRunnable;
    private ArrayList<Integer> waitingForLoad = new ArrayList();
    private boolean waitingForReplyMessageLoad;
    private boolean wasManualScroll;
    private boolean wasPaused;

    private class UnreadCounterTextView extends TextView {
        private int circleWidth;
        private int currentCounter;
        private String currentCounterString;
        private Paint paint = new Paint(1);
        private RectF rect = new RectF();
        private TextPaint textPaint = new TextPaint(1);
        private int textWidth;

        public UnreadCounterTextView(Context context) {
            super(context);
            this.textPaint.setTextSize((float) AndroidUtilities.dp(13.0f));
            this.textPaint.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        }

        public void setTextColor(int i) {
            super.setTextColor(i);
            this.textPaint.setColor(Theme.getColor("chat_messagePanelBackground"));
            this.paint.setColor(Theme.getColor("chat_goDownButtonCounterBackground"));
        }

        /* JADX WARNING: Removed duplicated region for block: B:22:? A:{SYNTHETIC, RETURN} */
        /* JADX WARNING: Removed duplicated region for block: B:14:0x0039  */
        public void updateCounter() {
            /*
            r4 = this;
            r0 = org.telegram.ui.ChatActivity.this;
            r0 = r0.currentChat;
            r0 = org.telegram.messenger.ChatObject.isChannel(r0);
            r1 = 0;
            if (r0 == 0) goto L_0x0034;
        L_0x000b:
            r0 = org.telegram.ui.ChatActivity.this;
            r2 = r0.currentChat;
            r2 = r2.megagroup;
            if (r2 != 0) goto L_0x0034;
        L_0x0013:
            r2 = r0.chatInfo;
            if (r2 == 0) goto L_0x0034;
        L_0x0017:
            r2 = r2.linked_chat_id;
            if (r2 == 0) goto L_0x0034;
        L_0x001b:
            r0 = r0.getMessagesController();
            r0 = r0.dialogs_dict;
            r2 = org.telegram.ui.ChatActivity.this;
            r2 = r2.chatInfo;
            r2 = r2.linked_chat_id;
            r2 = -r2;
            r2 = (long) r2;
            r0 = r0.get(r2);
            r0 = (org.telegram.tgnet.TLRPC.Dialog) r0;
            if (r0 == 0) goto L_0x0034;
        L_0x0031:
            r0 = r0.unread_count;
            goto L_0x0035;
        L_0x0034:
            r0 = 0;
        L_0x0035:
            r2 = r4.currentCounter;
            if (r2 == r0) goto L_0x0093;
        L_0x0039:
            r4.currentCounter = r0;
            r0 = r4.currentCounter;
            if (r0 != 0) goto L_0x0048;
        L_0x003f:
            r0 = 0;
            r4.currentCounterString = r0;
            r4.circleWidth = r1;
            r4.setPadding(r1, r1, r1, r1);
            goto L_0x0090;
        L_0x0048:
            r2 = 1;
            r2 = new java.lang.Object[r2];
            r0 = java.lang.Integer.valueOf(r0);
            r2[r1] = r0;
            r0 = "%d";
            r0 = java.lang.String.format(r0, r2);
            r4.currentCounterString = r0;
            r0 = r4.textPaint;
            r2 = r4.currentCounterString;
            r0 = r0.measureText(r2);
            r2 = (double) r0;
            r2 = java.lang.Math.ceil(r2);
            r0 = (int) r2;
            r4.textWidth = r0;
            r0 = NUM; // 0x41a00000 float:20.0 double:5.439686476E-315;
            r0 = org.telegram.messenger.AndroidUtilities.dp(r0);
            r2 = NUM; // 0x41400000 float:12.0 double:5.408602553E-315;
            r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
            r3 = r4.textWidth;
            r2 = r2 + r3;
            r0 = java.lang.Math.max(r0, r2);
            r2 = r4.circleWidth;
            if (r2 == r0) goto L_0x0090;
        L_0x0080:
            r4.circleWidth = r0;
            r0 = r4.circleWidth;
            r0 = r0 / 2;
            r2 = NUM; // 0x40e00000 float:7.0 double:5.37751863E-315;
            r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
            r0 = r0 + r2;
            r4.setPadding(r1, r1, r0, r1);
        L_0x0090:
            r4.invalidate();
        L_0x0093:
            return;
            */
            throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity$UnreadCounterTextView.updateCounter():void");
        }

        /* Access modifiers changed, original: protected */
        public void onDraw(Canvas canvas) {
            super.onDraw(canvas);
            if (this.currentCounterString != null) {
                Layout layout = getLayout();
                if (layout != null && getLineCount() > 0) {
                    int measuredWidth = ((getMeasuredWidth() + (((int) Math.ceil((double) layout.getLineWidth(0))) - this.circleWidth)) / 2) + AndroidUtilities.dp(8.0f);
                    this.rect.set((float) measuredWidth, (float) ((getMeasuredHeight() / 2) - AndroidUtilities.dp(10.0f)), (float) (measuredWidth + this.circleWidth), (float) ((getMeasuredHeight() / 2) + AndroidUtilities.dp(10.0f)));
                    canvas.drawRoundRect(this.rect, (float) AndroidUtilities.dp(10.0f), (float) AndroidUtilities.dp(10.0f), this.paint);
                    canvas.drawText(this.currentCounterString, this.rect.centerX() - (((float) this.textWidth) / 2.0f), this.rect.top + ((float) AndroidUtilities.dp(14.5f)), this.textPaint);
                }
            }
        }
    }

    public class ChatActivityAdapter extends Adapter {
        private int botInfoRow = -1;
        private boolean isBot;
        private int loadingDownRow;
        private int loadingUpRow;
        private Context mContext;
        private int messagesEndRow;
        private int messagesStartRow;
        private int rowCount;

        public long getItemId(int i) {
            return -1;
        }

        public ChatActivityAdapter(Context context) {
            this.mContext = context;
            User user = ChatActivity.this.currentUser;
            boolean z = user != null && user.bot;
            this.isBot = z;
        }

        public void updateRows() {
            this.rowCount = 0;
            int i;
            if (ChatActivity.this.messages.isEmpty()) {
                this.loadingUpRow = -1;
                this.loadingDownRow = -1;
                this.messagesStartRow = -1;
                this.messagesEndRow = -1;
                User user = ChatActivity.this.currentUser;
                if (user == null || !user.bot || MessagesController.isSupportUser(user)) {
                    this.botInfoRow = -1;
                    return;
                }
                i = this.rowCount;
                this.rowCount = i + 1;
                this.botInfoRow = i;
                return;
            }
            int i2;
            if (ChatActivity.this.forwardEndReached[0] && (ChatActivity.this.mergeDialogId == 0 || ChatActivity.this.forwardEndReached[1])) {
                this.loadingDownRow = -1;
            } else {
                i2 = this.rowCount;
                this.rowCount = i2 + 1;
                this.loadingDownRow = i2;
            }
            i2 = this.rowCount;
            this.messagesStartRow = i2;
            this.rowCount = i2 + ChatActivity.this.messages.size();
            i2 = this.rowCount;
            this.messagesEndRow = i2;
            User user2 = ChatActivity.this.currentUser;
            if (user2 == null || !user2.bot) {
                this.botInfoRow = -1;
            } else {
                this.rowCount = i2 + 1;
                this.botInfoRow = i2;
            }
            if (ChatActivity.this.endReached[0] && (ChatActivity.this.mergeDialogId == 0 || ChatActivity.this.endReached[1])) {
                this.loadingUpRow = -1;
                return;
            }
            i = this.rowCount;
            this.rowCount = i + 1;
            this.loadingUpRow = i;
        }

        public int getItemCount() {
            return ChatActivity.this.clearingHistory ? 0 : this.rowCount;
        }

        public ViewHolder onCreateViewHolder(ViewGroup viewGroup, int i) {
            View chatMessageCell;
            if (i == 0) {
                if (ChatActivity.this.chatMessageCellsCache.isEmpty()) {
                    chatMessageCell = new ChatMessageCell(this.mContext);
                } else {
                    chatMessageCell = (View) ChatActivity.this.chatMessageCellsCache.get(0);
                    ChatActivity.this.chatMessageCellsCache.remove(0);
                }
                ChatMessageCell chatMessageCell2 = (ChatMessageCell) chatMessageCell;
                chatMessageCell2.setDelegate(new ChatMessageCellDelegate() {
                    public void didPressShare(ChatMessageCell chatMessageCell) {
                        if (ChatActivity.this.getParentActivity() != null) {
                            ChatActivityEnterView chatActivityEnterView = ChatActivity.this.chatActivityEnterView;
                            if (chatActivityEnterView != null) {
                                chatActivityEnterView.closeKeyboard();
                            }
                            MessageObject messageObject = chatMessageCell.getMessageObject();
                            if (!UserObject.isUserSelf(ChatActivity.this.currentUser) || messageObject.messageOwner.fwd_from.saved_from_peer == null) {
                                ArrayList arrayList = null;
                                if (messageObject.getGroupId() != 0) {
                                    GroupedMessages groupedMessages = (GroupedMessages) ChatActivity.this.groupedMessagesMap.get(messageObject.getGroupId());
                                    if (groupedMessages != null) {
                                        arrayList = groupedMessages.messages;
                                    }
                                }
                                if (arrayList == null) {
                                    arrayList = new ArrayList();
                                    arrayList.add(messageObject);
                                }
                                ArrayList arrayList2 = arrayList;
                                ChatActivityAdapter chatActivityAdapter = ChatActivityAdapter.this;
                                ChatActivity.this.showDialog(new ShareAlert(chatActivityAdapter.mContext, arrayList2, null, ChatObject.isChannel(ChatActivity.this.currentChat), null, false) {
                                    public void dismissInternal() {
                                        super.dismissInternal();
                                        AndroidUtilities.requestAdjustResize(ChatActivity.this.getParentActivity(), ChatActivity.this.classGuid);
                                        if (ChatActivity.this.chatActivityEnterView.getVisibility() == 0) {
                                            ChatActivity.this.fragmentView.requestLayout();
                                        }
                                    }
                                });
                                AndroidUtilities.setAdjustResizeToNothing(ChatActivity.this.getParentActivity(), ChatActivity.this.classGuid);
                                ChatActivity.this.fragmentView.requestLayout();
                            } else {
                                Bundle bundle = new Bundle();
                                Peer peer = messageObject.messageOwner.fwd_from.saved_from_peer;
                                int i = peer.channel_id;
                                String str = "chat_id";
                                if (i != 0) {
                                    bundle.putInt(str, i);
                                } else {
                                    i = peer.chat_id;
                                    if (i != 0) {
                                        bundle.putInt(str, i);
                                    } else {
                                        int i2 = peer.user_id;
                                        if (i2 != 0) {
                                            bundle.putInt("user_id", i2);
                                        }
                                    }
                                }
                                bundle.putInt("message_id", messageObject.messageOwner.fwd_from.saved_from_msg_id);
                                if (ChatActivity.this.getMessagesController().checkCanOpenChat(bundle, ChatActivity.this)) {
                                    ChatActivity.this.presentFragment(new ChatActivity(bundle));
                                }
                            }
                        }
                    }

                    public boolean needPlayMessage(MessageObject messageObject) {
                        if (messageObject.isVoice() || messageObject.isRoundVideo()) {
                            boolean playMessage = MediaController.getInstance().playMessage(messageObject);
                            MediaController.getInstance().setVoiceMessagesPlaylist(playMessage ? ChatActivity.this.createVoiceMessagesPlaylist(messageObject, false) : null, false);
                            return playMessage;
                        } else if (messageObject.isMusic()) {
                            return MediaController.getInstance().setPlaylist(ChatActivity.this.messages, messageObject);
                        } else {
                            return false;
                        }
                    }

                    public void videoTimerReached() {
                        ChatActivity.this.showNoSoundHint();
                    }

                    public void didPressChannelAvatar(ChatMessageCell chatMessageCell, Chat chat, int i, float f, float f2) {
                        if (ChatActivity.this.actionBar.isActionModeShowed()) {
                            ChatActivity.this.processRowSelect(chatMessageCell, true, f, f2);
                            return;
                        }
                        if (!(chat == null || chat == ChatActivity.this.currentChat)) {
                            Bundle bundle = new Bundle();
                            bundle.putInt("chat_id", chat.id);
                            if (i != 0) {
                                bundle.putInt("message_id", i);
                            }
                            if (ChatActivity.this.getMessagesController().checkCanOpenChat(bundle, ChatActivity.this, chatMessageCell.getMessageObject())) {
                                ChatActivity.this.presentFragment(new ChatActivity(bundle));
                            }
                        }
                    }

                    public void didPressHiddenForward(ChatMessageCell chatMessageCell) {
                        ChatActivity.this.showForwardHint(chatMessageCell);
                    }

                    public void didPressOther(ChatMessageCell chatMessageCell, float f, float f2) {
                        if (chatMessageCell.getMessageObject().type == 16) {
                            ChatActivity chatActivity = ChatActivity.this;
                            User user = chatActivity.currentUser;
                            if (user != null) {
                                VoIPHelper.startCall(user, chatActivity.getParentActivity(), ChatActivity.this.getMessagesController().getUserFull(ChatActivity.this.currentUser.id));
                                return;
                            }
                            return;
                        }
                        ChatActivity.this.createMenu(chatMessageCell, true, false, f, f2, false);
                    }

                    public void didPressUserAvatar(ChatMessageCell chatMessageCell, User user, float f, float f2) {
                        boolean z = true;
                        if (ChatActivity.this.actionBar.isActionModeShowed()) {
                            ChatActivity.this.processRowSelect(chatMessageCell, true, f, f2);
                            return;
                        }
                        if (!(user == null || user.id == ChatActivity.this.getUserConfig().getClientUserId())) {
                            Bundle bundle = new Bundle();
                            bundle.putInt("user_id", user.id);
                            ProfileActivity profileActivity = new ProfileActivity(bundle);
                            User user2 = ChatActivity.this.currentUser;
                            if (user2 == null || user2.id != user.id) {
                                z = false;
                            }
                            profileActivity.setPlayProfileAnimation(z);
                            ChatActivity.this.presentFragment(profileActivity);
                        }
                    }

                    public void didPressBotButton(ChatMessageCell chatMessageCell, KeyboardButton keyboardButton) {
                        if (ChatActivity.this.getParentActivity() == null) {
                            return;
                        }
                        if (ChatActivity.this.bottomOverlayChat.getVisibility() != 0 || (keyboardButton instanceof TL_keyboardButtonSwitchInline) || (keyboardButton instanceof TL_keyboardButtonCallback) || (keyboardButton instanceof TL_keyboardButtonGame) || (keyboardButton instanceof TL_keyboardButtonUrl) || (keyboardButton instanceof TL_keyboardButtonBuy) || (keyboardButton instanceof TL_keyboardButtonUrlAuth)) {
                            ChatActivity.this.chatActivityEnterView.didPressedBotButton(keyboardButton, chatMessageCell.getMessageObject(), chatMessageCell.getMessageObject());
                        }
                    }

                    public void didPressVoteButton(ChatMessageCell chatMessageCell, TL_pollAnswer tL_pollAnswer) {
                        ChatActivity.this.getSendMessagesHelper().sendVote(chatMessageCell.getMessageObject(), tL_pollAnswer, null);
                    }

                    public void didPressCancelSendButton(ChatMessageCell chatMessageCell) {
                        MessageObject messageObject = chatMessageCell.getMessageObject();
                        if (messageObject.messageOwner.send_state != 0) {
                            ChatActivity.this.getSendMessagesHelper().cancelSendingMessage(messageObject);
                        }
                    }

                    public void didLongPress(ChatMessageCell chatMessageCell, float f, float f2) {
                        ChatActivity.this.createMenu(chatMessageCell, false, false, f, f2);
                    }

                    public boolean canPerformActions() {
                        return (ChatActivity.this.actionBar == null || ChatActivity.this.actionBar.isActionModeShowed()) ? false : true;
                    }

                    public void didPressUrl(ChatMessageCell chatMessageCell, CharacterStyle characterStyle, boolean z) {
                        if (!(characterStyle == null || ChatActivity.this.getParentActivity() == null)) {
                            MessageObject messageObject = chatMessageCell.getMessageObject();
                            boolean z2 = false;
                            if (characterStyle instanceof URLSpanMono) {
                                ((URLSpanMono) characterStyle).copyToClipboard();
                                Toast.makeText(ChatActivity.this.getParentActivity(), LocaleController.getString("TextCopied", NUM), 0).show();
                            } else if (characterStyle instanceof URLSpanUserMention) {
                                User user = ChatActivity.this.getMessagesController().getUser(Utilities.parseInt(((URLSpanUserMention) characterStyle).getURL()));
                                if (user != null) {
                                    MessagesController.openChatOrProfileWith(user, null, ChatActivity.this, 0, false);
                                }
                            } else {
                                boolean z3 = true;
                                String url;
                                String toLowerCase;
                                if (characterStyle instanceof URLSpanNoUnderline) {
                                    url = ((URLSpanNoUnderline) characterStyle).getURL();
                                    if (url.startsWith("@")) {
                                        User user2;
                                        toLowerCase = url.substring(1).toLowerCase();
                                        Chat chat = ChatActivity.this.currentChat;
                                        if (chat == null || TextUtils.isEmpty(chat.username) || !toLowerCase.equals(ChatActivity.this.currentChat.username.toLowerCase())) {
                                            user2 = ChatActivity.this.currentUser;
                                            if (user2 == null || TextUtils.isEmpty(user2.username) || !toLowerCase.equals(ChatActivity.this.currentUser.username.toLowerCase())) {
                                                ChatActivity.this.getMessagesController().openByUserName(toLowerCase, ChatActivity.this, 0);
                                            }
                                        }
                                        Bundle bundle = new Bundle();
                                        ChatActivity chatActivity = ChatActivity.this;
                                        Chat chat2 = chatActivity.currentChat;
                                        if (chat2 != null) {
                                            bundle.putInt("chat_id", chat2.id);
                                        } else {
                                            user2 = chatActivity.currentUser;
                                            if (user2 != null) {
                                                bundle.putInt("user_id", user2.id);
                                                chatActivity = ChatActivity.this;
                                                if (chatActivity.currentEncryptedChat != null) {
                                                    bundle.putLong("dialog_id", chatActivity.dialog_id);
                                                }
                                            }
                                        }
                                        ProfileActivity profileActivity = new ProfileActivity(bundle);
                                        profileActivity.setPlayProfileAnimation(true);
                                        profileActivity.setChatInfo(ChatActivity.this.chatInfo);
                                        profileActivity.setUserInfo(ChatActivity.this.userInfo);
                                        ChatActivity.this.presentFragment(profileActivity);
                                    } else if (url.startsWith("#") || url.startsWith("$")) {
                                        if (ChatObject.isChannel(ChatActivity.this.currentChat)) {
                                            ChatActivity.this.openSearchWithText(url);
                                        } else {
                                            DialogsActivity dialogsActivity = new DialogsActivity(null);
                                            dialogsActivity.setSearchString(url);
                                            ChatActivity.this.presentFragment(dialogsActivity);
                                        }
                                    } else if (url.startsWith("/")) {
                                        if (URLSpanBotCommand.enabled) {
                                            ChatActivity chatActivity2 = ChatActivity.this;
                                            ChatActivityEnterView chatActivityEnterView = chatActivity2.chatActivityEnterView;
                                            Chat chat3 = chatActivity2.currentChat;
                                            if (chat3 == null || !chat3.megagroup) {
                                                z3 = false;
                                            }
                                            chatActivityEnterView.setCommand(messageObject, url, z, z3);
                                            if (!z && ChatActivity.this.chatActivityEnterView.getFieldText() == null) {
                                                ChatActivity.this.hideFieldPanel(false);
                                            }
                                        }
                                    } else if (url.startsWith("video")) {
                                        WebPage webPage;
                                        int intValue = Utilities.parseInt(url).intValue();
                                        if (messageObject.isYouTubeVideo()) {
                                            webPage = messageObject.messageOwner.media.webpage;
                                        } else {
                                            MessageObject messageObject2 = messageObject.replyMessageObject;
                                            webPage = (messageObject2 == null || !messageObject2.isYouTubeVideo()) ? null : messageObject.replyMessageObject.messageOwner.media.webpage;
                                        }
                                        if (webPage != null) {
                                            Context access$24000 = ChatActivityAdapter.this.mContext;
                                            String str = webPage.title;
                                            String str2 = webPage.description;
                                            StringBuilder stringBuilder = new StringBuilder();
                                            stringBuilder.append(webPage.url);
                                            stringBuilder.append("&ot=");
                                            stringBuilder.append(intValue);
                                            EmbedBottomSheet.show(access$24000, str, str2, stringBuilder.toString(), webPage.embed_url, webPage.embed_width, webPage.embed_height);
                                        } else {
                                            if (!(messageObject.isVideo() || messageObject.replyMessageObject == null)) {
                                                int i;
                                                SparseArray[] access$2900 = ChatActivity.this.messagesDict;
                                                if (messageObject.replyMessageObject.getDialogId() != ChatActivity.this.dialog_id) {
                                                    i = 1;
                                                }
                                                messageObject = (MessageObject) access$2900[i].get(messageObject.replyMessageObject.getId());
                                                chatMessageCell = null;
                                            }
                                            messageObject.forceSeekTo = ((float) intValue) / ((float) messageObject.getDuration());
                                            openPhotoViewerForMessage(chatMessageCell, messageObject);
                                        }
                                    }
                                } else {
                                    toLowerCase = ((URLSpan) characterStyle).getURL();
                                    if (z) {
                                        Builder builder = new Builder(ChatActivity.this.getParentActivity());
                                        builder.setTitle(toLowerCase);
                                        builder.setItems(new CharSequence[]{LocaleController.getString("Open", NUM), LocaleController.getString("Copy", NUM)}, new -$$Lambda$ChatActivity$ChatActivityAdapter$1$mvBU2f0l49KzASBTxcsB_CaLwnI(this, toLowerCase));
                                        ChatActivity.this.showDialog(builder.create());
                                    } else if ((characterStyle instanceof URLSpanReplacement) && (toLowerCase == null || !toLowerCase.startsWith("mailto:"))) {
                                        ChatActivity.this.showOpenUrlAlert(toLowerCase, true);
                                    } else if (characterStyle instanceof URLSpan) {
                                        MessageMedia messageMedia = messageObject.messageOwner.media;
                                        if (messageMedia instanceof TL_messageMediaWebPage) {
                                            WebPage webPage2 = messageMedia.webpage;
                                            if (!(webPage2 == null || webPage2.cached_page == null)) {
                                                url = toLowerCase.toLowerCase();
                                                String toLowerCase2 = messageObject.messageOwner.media.webpage.url.toLowerCase();
                                                if ((url.contains("telegram.org/blog") || url.contains("telegra.ph") || url.contains("t.me/iv")) && (url.contains(toLowerCase2) || toLowerCase2.contains(url))) {
                                                    ArticleViewer.getInstance().setParentActivity(ChatActivity.this.getParentActivity(), ChatActivity.this);
                                                    ArticleViewer.getInstance().open(messageObject);
                                                    return;
                                                }
                                            }
                                        }
                                        Context parentActivity = ChatActivity.this.getParentActivity();
                                        if (ChatActivity.this.inlineReturn == 0) {
                                            z2 = true;
                                        }
                                        Browser.openUrl(parentActivity, toLowerCase, z2);
                                    } else if (characterStyle instanceof ClickableSpan) {
                                        ((ClickableSpan) characterStyle).onClick(ChatActivity.this.fragmentView);
                                    }
                                }
                            }
                        }
                    }

                    public /* synthetic */ void lambda$didPressUrl$0$ChatActivity$ChatActivityAdapter$1(String str, DialogInterface dialogInterface, int i) {
                        boolean z = true;
                        if (i == 0) {
                            Context parentActivity = ChatActivity.this.getParentActivity();
                            if (ChatActivity.this.inlineReturn != 0) {
                                z = false;
                            }
                            Browser.openUrl(parentActivity, str, z, false);
                        } else if (i == 1) {
                            CharSequence str2;
                            if (str2.startsWith("mailto:")) {
                                str2 = str2.substring(7);
                            } else if (str2.startsWith("tel:")) {
                                str2 = str2.substring(4);
                            }
                            AndroidUtilities.addToClipboard(str2);
                        }
                    }

                    public void needOpenWebView(String str, String str2, String str3, String str4, int i, int i2) {
                        try {
                            EmbedBottomSheet.show(ChatActivityAdapter.this.mContext, str2, str3, str4, str, i, i2);
                        } catch (Throwable th) {
                            FileLog.e(th);
                        }
                    }

                    public void didPressReplyMessage(ChatMessageCell chatMessageCell, int i) {
                        MessageObject messageObject = chatMessageCell.getMessageObject();
                        ChatActivity.this.scrollToMessageId(i, messageObject.getId(), true, messageObject.getDialogId() == ChatActivity.this.mergeDialogId ? 1 : 0, false);
                    }

                    /* JADX WARNING: Missing block: B:8:0x0030, code skipped:
            return;
     */
                    public void didPressViaBot(org.telegram.ui.Cells.ChatMessageCell r3, java.lang.String r4) {
                        /*
                        r2 = this;
                        r3 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r3 = org.telegram.ui.ChatActivity.this;
                        r3 = r3.bottomOverlayChat;
                        if (r3 == 0) goto L_0x0018;
                    L_0x000a:
                        r3 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r3 = org.telegram.ui.ChatActivity.this;
                        r3 = r3.bottomOverlayChat;
                        r3 = r3.getVisibility();
                        if (r3 == 0) goto L_0x0030;
                    L_0x0018:
                        r3 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r3 = org.telegram.ui.ChatActivity.this;
                        r3 = r3.bottomOverlay;
                        if (r3 == 0) goto L_0x0031;
                    L_0x0022:
                        r3 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r3 = org.telegram.ui.ChatActivity.this;
                        r3 = r3.bottomOverlay;
                        r3 = r3.getVisibility();
                        if (r3 != 0) goto L_0x0031;
                    L_0x0030:
                        return;
                    L_0x0031:
                        r3 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r3 = org.telegram.ui.ChatActivity.this;
                        r3 = r3.chatActivityEnterView;
                        if (r3 == 0) goto L_0x0069;
                    L_0x0039:
                        if (r4 == 0) goto L_0x0069;
                    L_0x003b:
                        r3 = r4.length();
                        if (r3 <= 0) goto L_0x0069;
                    L_0x0041:
                        r3 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r3 = org.telegram.ui.ChatActivity.this;
                        r3 = r3.chatActivityEnterView;
                        r0 = new java.lang.StringBuilder;
                        r0.<init>();
                        r1 = "@";
                        r0.append(r1);
                        r0.append(r4);
                        r4 = " ";
                        r0.append(r4);
                        r4 = r0.toString();
                        r3.setFieldText(r4);
                        r3 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r3 = org.telegram.ui.ChatActivity.this;
                        r3 = r3.chatActivityEnterView;
                        r3.openKeyboard();
                    L_0x0069:
                        return;
                        */
                        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity$ChatActivityAdapter$AnonymousClass1.didPressViaBot(org.telegram.ui.Cells.ChatMessageCell, java.lang.String):void");
                    }

                    public void didStartVideoStream(MessageObject messageObject) {
                        if (messageObject.isVideo()) {
                            ChatActivity.this.sendSecretMessageRead(messageObject);
                        }
                    }

                    /* Access modifiers changed, original: 0000 */
                    public void openPhotoViewerForMessage(ChatMessageCell chatMessageCell, MessageObject messageObject) {
                        if (chatMessageCell == null) {
                            int childCount = ChatActivity.this.chatListView.getChildCount();
                            for (int i = 0; i < childCount; i++) {
                                View childAt = ChatActivity.this.chatListView.getChildAt(i);
                                if (childAt instanceof ChatMessageCell) {
                                    ChatMessageCell chatMessageCell2 = (ChatMessageCell) childAt;
                                    if (chatMessageCell2.getMessageObject().equals(messageObject)) {
                                        chatMessageCell = chatMessageCell2;
                                        break;
                                    }
                                }
                            }
                        }
                        if (messageObject.isVideo()) {
                            ChatActivity.this.sendSecretMessageRead(messageObject);
                        }
                        PhotoViewer.getInstance().setParentActivity(ChatActivity.this.getParentActivity());
                        MessageObject playingMessageObject = MediaController.getInstance().getPlayingMessageObject();
                        if (!(chatMessageCell == null || playingMessageObject == null || !playingMessageObject.isVideo())) {
                            ChatActivity.this.getFileLoader().setLoadingVideoForPlayer(playingMessageObject.getDocument(), false);
                            if (playingMessageObject.equals(messageObject)) {
                                AnimatedFileDrawable animation = chatMessageCell.getPhotoImage().getAnimation();
                                if (!(animation == null || ChatActivity.this.videoTextureView == null || ChatActivity.this.videoPlayerContainer.getTag() == null)) {
                                    Bitmap animatedBitmap = animation.getAnimatedBitmap();
                                    if (animatedBitmap != null) {
                                        try {
                                            Bitmap bitmap = ChatActivity.this.videoTextureView.getBitmap(animatedBitmap.getWidth(), animatedBitmap.getHeight());
                                            new Canvas(animatedBitmap).drawBitmap(bitmap, 0.0f, 0.0f, null);
                                            bitmap.recycle();
                                        } catch (Throwable th) {
                                            FileLog.e(th);
                                        }
                                    }
                                }
                            }
                            MediaController.getInstance().cleanupPlayer(true, true, false, playingMessageObject.equals(messageObject));
                        }
                        PhotoViewer instance = PhotoViewer.getInstance();
                        long j = 0;
                        long access$2300 = messageObject.type != 0 ? ChatActivity.this.dialog_id : 0;
                        if (messageObject.type != 0) {
                            j = ChatActivity.this.mergeDialogId;
                        }
                        if (instance.openPhoto(messageObject, access$2300, j, ChatActivity.this.photoViewerProvider)) {
                            PhotoViewer.getInstance().setParentChatActivity(ChatActivity.this);
                        }
                        if (ChatActivity.this.noSoundHintView != null) {
                            ChatActivity.this.noSoundHintView.hide();
                        }
                        if (ChatActivity.this.forwardHintView != null) {
                            ChatActivity.this.forwardHintView.hide();
                        }
                        if (ChatActivity.this.slowModeHint != null) {
                            ChatActivity.this.slowModeHint.hide();
                        }
                        MediaController.getInstance().resetGoingToShowMessageObject();
                    }

                    /* JADX WARNING: Missing block: B:73:0x0181, code skipped:
            if (r9.exists() != false) goto L_0x0185;
     */
                    public void didPressImage(org.telegram.ui.Cells.ChatMessageCell r9, float r10, float r11) {
                        /*
                        r8 = this;
                        r7 = r9.getMessageObject();
                        r0 = r7.isSendError();
                        if (r0 == 0) goto L_0x0017;
                    L_0x000a:
                        r0 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r1 = org.telegram.ui.ChatActivity.this;
                        r3 = 0;
                        r4 = 0;
                        r2 = r9;
                        r5 = r10;
                        r6 = r11;
                        r1.createMenu(r2, r3, r4, r5, r6);
                        return;
                    L_0x0017:
                        r10 = r7.isSending();
                        if (r10 == 0) goto L_0x001e;
                    L_0x001d:
                        return;
                    L_0x001e:
                        r10 = r7.isAnimatedEmoji();
                        if (r10 == 0) goto L_0x002d;
                    L_0x0024:
                        r10 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r10 = org.telegram.ui.ChatActivity.this;
                        r10.restartSticker(r9);
                        goto L_0x02bd;
                    L_0x002d:
                        r10 = r7.needDrawBluredPreview();
                        if (r10 == 0) goto L_0x0060;
                    L_0x0033:
                        r10 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r10 = org.telegram.ui.ChatActivity.this;
                        r10 = r10.sendSecretMessageRead(r7);
                        if (r10 == 0) goto L_0x0040;
                    L_0x003d:
                        r9.invalidate();
                    L_0x0040:
                        r9 = org.telegram.ui.SecretMediaViewer.getInstance();
                        r10 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r10 = org.telegram.ui.ChatActivity.this;
                        r10 = r10.getParentActivity();
                        r9.setParentActivity(r10);
                        r9 = org.telegram.ui.SecretMediaViewer.getInstance();
                        r10 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r10 = org.telegram.ui.ChatActivity.this;
                        r10 = r10.photoViewerProvider;
                        r9.openMedia(r7, r10);
                        goto L_0x02bd;
                    L_0x0060:
                        r10 = r7.type;
                        r11 = 13;
                        r0 = 0;
                        if (r10 == r11) goto L_0x0280;
                    L_0x0067:
                        r11 = 15;
                        if (r10 != r11) goto L_0x006d;
                    L_0x006b:
                        goto L_0x0280;
                    L_0x006d:
                        r10 = r7.isVideo();
                        if (r10 != 0) goto L_0x027c;
                    L_0x0073:
                        r10 = r7.type;
                        r11 = 1;
                        if (r10 == r11) goto L_0x027c;
                    L_0x0078:
                        if (r10 != 0) goto L_0x0080;
                    L_0x007a:
                        r10 = r7.isWebpageDocument();
                        if (r10 == 0) goto L_0x027c;
                    L_0x0080:
                        r10 = r7.isGif();
                        if (r10 == 0) goto L_0x0088;
                    L_0x0086:
                        goto L_0x027c;
                    L_0x0088:
                        r9 = r7.type;
                        r10 = 3;
                        if (r9 != r10) goto L_0x0102;
                    L_0x008d:
                        r9 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r9 = org.telegram.ui.ChatActivity.this;
                        r9.sendSecretMessageRead(r7);
                        r9 = r7.messageOwner;	 Catch:{ Exception -> 0x00f5 }
                        r9 = r9.attachPath;	 Catch:{ Exception -> 0x00f5 }
                        if (r9 == 0) goto L_0x00ad;
                    L_0x009a:
                        r9 = r7.messageOwner;	 Catch:{ Exception -> 0x00f5 }
                        r9 = r9.attachPath;	 Catch:{ Exception -> 0x00f5 }
                        r9 = r9.length();	 Catch:{ Exception -> 0x00f5 }
                        if (r9 == 0) goto L_0x00ad;
                    L_0x00a4:
                        r0 = new java.io.File;	 Catch:{ Exception -> 0x00f5 }
                        r9 = r7.messageOwner;	 Catch:{ Exception -> 0x00f5 }
                        r9 = r9.attachPath;	 Catch:{ Exception -> 0x00f5 }
                        r0.<init>(r9);	 Catch:{ Exception -> 0x00f5 }
                    L_0x00ad:
                        if (r0 == 0) goto L_0x00b5;
                    L_0x00af:
                        r9 = r0.exists();	 Catch:{ Exception -> 0x00f5 }
                        if (r9 != 0) goto L_0x00bb;
                    L_0x00b5:
                        r9 = r7.messageOwner;	 Catch:{ Exception -> 0x00f5 }
                        r0 = org.telegram.messenger.FileLoader.getPathToMessage(r9);	 Catch:{ Exception -> 0x00f5 }
                    L_0x00bb:
                        r9 = new android.content.Intent;	 Catch:{ Exception -> 0x00f5 }
                        r10 = "android.intent.action.VIEW";
                        r9.<init>(r10);	 Catch:{ Exception -> 0x00f5 }
                        r10 = android.os.Build.VERSION.SDK_INT;	 Catch:{ Exception -> 0x00f5 }
                        r1 = 24;
                        r2 = "video/mp4";
                        if (r10 < r1) goto L_0x00df;
                    L_0x00ca:
                        r9.setFlags(r11);	 Catch:{ Exception -> 0x00f5 }
                        r10 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;	 Catch:{ Exception -> 0x00f5 }
                        r10 = org.telegram.ui.ChatActivity.this;	 Catch:{ Exception -> 0x00f5 }
                        r10 = r10.getParentActivity();	 Catch:{ Exception -> 0x00f5 }
                        r11 = "org.telegram.messenger.beta.provider";
                        r10 = androidx.core.content.FileProvider.getUriForFile(r10, r11, r0);	 Catch:{ Exception -> 0x00f5 }
                        r9.setDataAndType(r10, r2);	 Catch:{ Exception -> 0x00f5 }
                        goto L_0x00e6;
                    L_0x00df:
                        r10 = android.net.Uri.fromFile(r0);	 Catch:{ Exception -> 0x00f5 }
                        r9.setDataAndType(r10, r2);	 Catch:{ Exception -> 0x00f5 }
                    L_0x00e6:
                        r10 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;	 Catch:{ Exception -> 0x00f5 }
                        r10 = org.telegram.ui.ChatActivity.this;	 Catch:{ Exception -> 0x00f5 }
                        r10 = r10.getParentActivity();	 Catch:{ Exception -> 0x00f5 }
                        r11 = 500; // 0x1f4 float:7.0E-43 double:2.47E-321;
                        r10.startActivityForResult(r9, r11);	 Catch:{ Exception -> 0x00f5 }
                        goto L_0x02bd;
                    L_0x00f5:
                        r9 = move-exception;
                        org.telegram.messenger.FileLog.e(r9);
                        r9 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r9 = org.telegram.ui.ChatActivity.this;
                        r9.alertUserOpenError(r7);
                        goto L_0x02bd;
                    L_0x0102:
                        r1 = 4;
                        r2 = 0;
                        if (r9 != r1) goto L_0x0152;
                    L_0x0106:
                        r9 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r9 = org.telegram.ui.ChatActivity.this;
                        r9 = org.telegram.messenger.AndroidUtilities.isGoogleMapsInstalled(r9);
                        if (r9 != 0) goto L_0x0111;
                    L_0x0110:
                        return;
                    L_0x0111:
                        r9 = r7.isLiveLocation();
                        if (r9 == 0) goto L_0x0130;
                    L_0x0117:
                        r9 = new org.telegram.ui.LocationActivity;
                        r10 = 2;
                        r9.<init>(r10);
                        r9.setMessageObject(r7);
                        r10 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r10 = org.telegram.ui.ChatActivity.this;
                        r9.setDelegate(r10);
                        r10 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r10 = org.telegram.ui.ChatActivity.this;
                        r10.presentFragment(r9);
                        goto L_0x02bd;
                    L_0x0130:
                        r9 = new org.telegram.ui.LocationActivity;
                        r11 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r11 = org.telegram.ui.ChatActivity.this;
                        r11 = r11.currentEncryptedChat;
                        if (r11 != 0) goto L_0x013b;
                    L_0x013a:
                        goto L_0x013c;
                    L_0x013b:
                        r10 = 0;
                    L_0x013c:
                        r9.<init>(r10);
                        r9.setMessageObject(r7);
                        r10 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r10 = org.telegram.ui.ChatActivity.this;
                        r9.setDelegate(r10);
                        r10 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r10 = org.telegram.ui.ChatActivity.this;
                        r10.presentFragment(r9);
                        goto L_0x02bd;
                    L_0x0152:
                        r10 = 9;
                        if (r9 == r10) goto L_0x0158;
                    L_0x0156:
                        if (r9 != 0) goto L_0x02bd;
                    L_0x0158:
                        r9 = r7.getDocumentName();
                        r9 = r9.toLowerCase();
                        r10 = "attheme";
                        r9 = r9.endsWith(r10);
                        if (r9 == 0) goto L_0x021d;
                    L_0x0168:
                        r9 = r7.messageOwner;
                        r9 = r9.attachPath;
                        if (r9 == 0) goto L_0x0184;
                    L_0x016e:
                        r9 = r9.length();
                        if (r9 == 0) goto L_0x0184;
                    L_0x0174:
                        r9 = new java.io.File;
                        r10 = r7.messageOwner;
                        r10 = r10.attachPath;
                        r9.<init>(r10);
                        r10 = r9.exists();
                        if (r10 == 0) goto L_0x0184;
                    L_0x0183:
                        goto L_0x0185;
                    L_0x0184:
                        r9 = r0;
                    L_0x0185:
                        if (r9 != 0) goto L_0x0194;
                    L_0x0187:
                        r10 = r7.messageOwner;
                        r10 = org.telegram.messenger.FileLoader.getPathToMessage(r10);
                        r0 = r10.exists();
                        if (r0 == 0) goto L_0x0194;
                    L_0x0193:
                        r9 = r10;
                    L_0x0194:
                        r10 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r10 = org.telegram.ui.ChatActivity.this;
                        r10 = r10.chatLayoutManager;
                        r0 = -1;
                        if (r10 == 0) goto L_0x01ff;
                    L_0x019f:
                        r10 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r10 = org.telegram.ui.ChatActivity.this;
                        r10 = r10.chatLayoutManager;
                        r10 = r10.findFirstVisibleItemPosition();
                        if (r10 == 0) goto L_0x01f8;
                    L_0x01ad:
                        r1 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r1 = org.telegram.ui.ChatActivity.this;
                        r1.scrollToPositionOnRecreate = r10;
                        r10 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r10 = org.telegram.ui.ChatActivity.this;
                        r10 = r10.chatListView;
                        r1 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r1 = org.telegram.ui.ChatActivity.this;
                        r1 = r1.scrollToPositionOnRecreate;
                        r10 = r10.findViewHolderForAdapterPosition(r1);
                        r10 = (org.telegram.ui.Components.RecyclerListView.Holder) r10;
                        if (r10 == 0) goto L_0x01f0;
                    L_0x01cc:
                        r1 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r1 = org.telegram.ui.ChatActivity.this;
                        r3 = r1.chatListView;
                        r3 = r3.getMeasuredHeight();
                        r10 = r10.itemView;
                        r10 = r10.getBottom();
                        r3 = r3 - r10;
                        r10 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r10 = org.telegram.ui.ChatActivity.this;
                        r10 = r10.chatListView;
                        r10 = r10.getPaddingBottom();
                        r3 = r3 - r10;
                        r1.scrollToOffsetOnRecreate = r3;
                        goto L_0x01ff;
                    L_0x01f0:
                        r10 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r10 = org.telegram.ui.ChatActivity.this;
                        r10.scrollToPositionOnRecreate = r0;
                        goto L_0x01ff;
                    L_0x01f8:
                        r10 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r10 = org.telegram.ui.ChatActivity.this;
                        r10.scrollToPositionOnRecreate = r0;
                    L_0x01ff:
                        r10 = r7.getDocumentName();
                        r10 = org.telegram.ui.ActionBar.Theme.applyThemeFile(r9, r10, r11);
                        if (r10 == 0) goto L_0x0216;
                    L_0x0209:
                        r11 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r11 = org.telegram.ui.ChatActivity.this;
                        r0 = new org.telegram.ui.ThemePreviewActivity;
                        r0.<init>(r9, r10);
                        r11.presentFragment(r0);
                        return;
                    L_0x0216:
                        r9 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r9 = org.telegram.ui.ChatActivity.this;
                        r9.scrollToPositionOnRecreate = r0;
                    L_0x021d:
                        r9 = r7.canPreviewDocument();
                        if (r9 == 0) goto L_0x0261;
                    L_0x0223:
                        r9 = org.telegram.ui.PhotoViewer.getInstance();
                        r10 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r10 = org.telegram.ui.ChatActivity.this;
                        r10 = r10.getParentActivity();
                        r9.setParentActivity(r10);
                        r0 = org.telegram.ui.PhotoViewer.getInstance();
                        r9 = r7.type;
                        r1 = 0;
                        if (r9 == 0) goto L_0x0245;
                    L_0x023c:
                        r9 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r9 = org.telegram.ui.ChatActivity.this;
                        r9 = r9.dialog_id;
                        goto L_0x0246;
                    L_0x0245:
                        r9 = r1;
                    L_0x0246:
                        r3 = r7.type;
                        if (r3 == 0) goto L_0x0252;
                    L_0x024a:
                        r1 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r1 = org.telegram.ui.ChatActivity.this;
                        r1 = r1.mergeDialogId;
                    L_0x0252:
                        r4 = r1;
                        r1 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r1 = org.telegram.ui.ChatActivity.this;
                        r6 = r1.photoViewerProvider;
                        r1 = r7;
                        r2 = r9;
                        r0.openPhoto(r1, r2, r4, r6);
                        goto L_0x0262;
                    L_0x0261:
                        r11 = 0;
                    L_0x0262:
                        if (r11 != 0) goto L_0x02bd;
                    L_0x0264:
                        r9 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;	 Catch:{ Exception -> 0x0270 }
                        r9 = org.telegram.ui.ChatActivity.this;	 Catch:{ Exception -> 0x0270 }
                        r9 = r9.getParentActivity();	 Catch:{ Exception -> 0x0270 }
                        org.telegram.messenger.AndroidUtilities.openForView(r7, r9);	 Catch:{ Exception -> 0x0270 }
                        goto L_0x02bd;
                    L_0x0270:
                        r9 = move-exception;
                        org.telegram.messenger.FileLog.e(r9);
                        r9 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r9 = org.telegram.ui.ChatActivity.this;
                        r9.alertUserOpenError(r7);
                        goto L_0x02bd;
                    L_0x027c:
                        r8.openPhotoViewerForMessage(r9, r7);
                        goto L_0x02bd;
                    L_0x0280:
                        r9 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r9 = org.telegram.ui.ChatActivity.this;
                        r10 = new org.telegram.ui.Components.StickersAlert;
                        r2 = r9.getParentActivity();
                        r11 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r3 = org.telegram.ui.ChatActivity.this;
                        r4 = r7.getInputStickerSet();
                        r5 = 0;
                        r11 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r11 = org.telegram.ui.ChatActivity.this;
                        r11 = r11.bottomOverlayChat;
                        r11 = r11.getVisibility();
                        if (r11 == 0) goto L_0x02b5;
                    L_0x02a1:
                        r11 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r11 = org.telegram.ui.ChatActivity.this;
                        r11 = r11.currentChat;
                        if (r11 == 0) goto L_0x02af;
                    L_0x02a9:
                        r11 = org.telegram.messenger.ChatObject.canSendStickers(r11);
                        if (r11 == 0) goto L_0x02b5;
                    L_0x02af:
                        r11 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r11 = org.telegram.ui.ChatActivity.this;
                        r0 = r11.chatActivityEnterView;
                    L_0x02b5:
                        r6 = r0;
                        r1 = r10;
                        r1.<init>(r2, r3, r4, r5, r6);
                        r9.showDialog(r10);
                    L_0x02bd:
                        return;
                        */
                        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity$ChatActivityAdapter$AnonymousClass1.didPressImage(org.telegram.ui.Cells.ChatMessageCell, float, float):void");
                    }

                    public void didPressInstantButton(ChatMessageCell chatMessageCell, int i) {
                        MessageObject messageObject = chatMessageCell.getMessageObject();
                        MessageMedia messageMedia;
                        if (i == 0) {
                            messageMedia = messageObject.messageOwner.media;
                            if (messageMedia != null) {
                                WebPage webPage = messageMedia.webpage;
                                if (webPage != null && webPage.cached_page != null) {
                                    ArticleViewer.getInstance().setParentActivity(ChatActivity.this.getParentActivity(), ChatActivity.this);
                                    ArticleViewer.getInstance().open(messageObject);
                                }
                            }
                        } else if (i == 5) {
                            ChatActivity chatActivity = ChatActivity.this;
                            MessageMedia messageMedia2 = messageObject.messageOwner.media;
                            chatActivity.openVCard(messageMedia2.vcard, messageMedia2.first_name, messageMedia2.last_name);
                        } else {
                            messageMedia = messageObject.messageOwner.media;
                            if (messageMedia != null && messageMedia.webpage != null) {
                                Browser.openUrl(ChatActivity.this.getParentActivity(), messageObject.messageOwner.media.webpage.url);
                            }
                        }
                    }

                    public String getAdminRank(int i) {
                        if (ChatObject.isChannel(ChatActivity.this.currentChat)) {
                            ChatActivity chatActivity = ChatActivity.this;
                            if (chatActivity.currentChat.megagroup) {
                                return chatActivity.getMessagesController().getAdminRank(ChatActivity.this.currentChat.id, i);
                            }
                        }
                        return null;
                    }

                    public boolean shouldRepeatSticker(MessageObject messageObject) {
                        return ChatActivity.this.alredyPlayedStickers.containsKey(messageObject) ^ 1;
                    }

                    public void setShouldNotRepeatSticker(MessageObject messageObject) {
                        ChatActivity.this.alredyPlayedStickers.put(messageObject, Boolean.valueOf(true));
                    }
                });
                if (ChatActivity.this.currentEncryptedChat == null) {
                    chatMessageCell2.setAllowAssistant(true);
                }
            } else if (i == 1) {
                chatMessageCell = new ChatActionCell(this.mContext);
                chatMessageCell.setDelegate(new ChatActionCellDelegate() {
                    public void didClickImage(ChatActionCell chatActionCell) {
                        MessageObject messageObject = chatActionCell.getMessageObject();
                        PhotoViewer.getInstance().setParentActivity(ChatActivity.this.getParentActivity());
                        PhotoSize closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(messageObject.photoThumbs, 640);
                        if (closestPhotoSizeWithSize != null) {
                            PhotoViewer.getInstance().openPhoto(closestPhotoSizeWithSize.location, ImageLocation.getForPhoto(closestPhotoSizeWithSize, messageObject.messageOwner.action.photo), ChatActivity.this.photoViewerProvider);
                            return;
                        }
                        PhotoViewer.getInstance().openPhoto(messageObject, 0, 0, ChatActivity.this.photoViewerProvider);
                    }

                    public void didLongPress(ChatActionCell chatActionCell, float f, float f2) {
                        ChatActivity.this.createMenu(chatActionCell, false, false, f, f2);
                    }

                    public void needOpenUserProfile(int i) {
                        Bundle bundle;
                        if (i < 0) {
                            bundle = new Bundle();
                            bundle.putInt("chat_id", -i);
                            if (ChatActivity.this.getMessagesController().checkCanOpenChat(bundle, ChatActivity.this)) {
                                ChatActivity.this.presentFragment(new ChatActivity(bundle));
                            }
                        } else if (i != ChatActivity.this.getUserConfig().getClientUserId()) {
                            bundle = new Bundle();
                            bundle.putInt("user_id", i);
                            ChatActivity chatActivity = ChatActivity.this;
                            if (chatActivity.currentEncryptedChat != null && i == chatActivity.currentUser.id) {
                                bundle.putLong("dialog_id", chatActivity.dialog_id);
                            }
                            ProfileActivity profileActivity = new ProfileActivity(bundle);
                            User user = ChatActivity.this.currentUser;
                            boolean z = user != null && user.id == i;
                            profileActivity.setPlayProfileAnimation(z);
                            ChatActivity.this.presentFragment(profileActivity);
                        }
                    }

                    public void didPressReplyMessage(ChatActionCell chatActionCell, int i) {
                        MessageObject messageObject = chatActionCell.getMessageObject();
                        ChatActivity.this.scrollToMessageId(i, messageObject.getId(), true, messageObject.getDialogId() == ChatActivity.this.mergeDialogId ? 1 : 0, false);
                    }

                    public void didPressBotButton(MessageObject messageObject, KeyboardButton keyboardButton) {
                        if (ChatActivity.this.getParentActivity() == null) {
                            return;
                        }
                        if (ChatActivity.this.bottomOverlayChat.getVisibility() != 0 || (keyboardButton instanceof TL_keyboardButtonSwitchInline) || (keyboardButton instanceof TL_keyboardButtonCallback) || (keyboardButton instanceof TL_keyboardButtonGame) || (keyboardButton instanceof TL_keyboardButtonUrl) || (keyboardButton instanceof TL_keyboardButtonBuy) || (keyboardButton instanceof TL_keyboardButtonUrlAuth)) {
                            ChatActivity.this.chatActivityEnterView.didPressedBotButton(keyboardButton, messageObject, messageObject);
                        }
                    }
                });
            } else if (i == 2) {
                chatMessageCell = new ChatUnreadCell(this.mContext);
            } else if (i == 3) {
                chatMessageCell = new BotHelpCell(this.mContext);
                chatMessageCell.setDelegate(new -$$Lambda$ChatActivity$ChatActivityAdapter$XvP34CBh8veH5SfzBXUoiQ29tr8(this));
            } else {
                chatMessageCell = i == 4 ? new ChatLoadingCell(this.mContext) : null;
            }
            chatMessageCell.setLayoutParams(new LayoutParams(-1, -2));
            return new Holder(chatMessageCell);
        }

        public /* synthetic */ void lambda$onCreateViewHolder$0$ChatActivity$ChatActivityAdapter(String str) {
            if (str.startsWith("@")) {
                ChatActivity.this.getMessagesController().openByUserName(str.substring(1), ChatActivity.this, 0);
            } else if (str.startsWith("#") || str.startsWith("$")) {
                DialogsActivity dialogsActivity = new DialogsActivity(null);
                dialogsActivity.setSearchString(str);
                ChatActivity.this.presentFragment(dialogsActivity);
            } else if (str.startsWith("/")) {
                ChatActivity.this.chatActivityEnterView.setCommand(null, str, false, false);
                if (ChatActivity.this.chatActivityEnterView.getFieldText() == null) {
                    ChatActivity.this.hideFieldPanel(false);
                }
            }
        }

        /* JADX WARNING: Removed duplicated region for block: B:55:0x010f  */
        /* JADX WARNING: Removed duplicated region for block: B:88:0x0199  */
        /* JADX WARNING: Removed duplicated region for block: B:68:0x013d  */
        /* JADX WARNING: Removed duplicated region for block: B:95:0x01b2  */
        /* JADX WARNING: Removed duplicated region for block: B:107:0x01e2  */
        /* JADX WARNING: Removed duplicated region for block: B:127:? A:{SYNTHETIC, RETURN} */
        /* JADX WARNING: Removed duplicated region for block: B:110:0x01f4  */
        /* JADX WARNING: Missing block: B:58:0x011d, code skipped:
            if (r14.messageOwner.from_id == r0.messageOwner.from_id) goto L_0x011f;
     */
        /* JADX WARNING: Missing block: B:60:0x0121, code skipped:
            r14 = false;
     */
        /* JADX WARNING: Missing block: B:64:0x0133, code skipped:
            if (r14.getFromId() == r0.getFromId()) goto L_0x011f;
     */
        /* JADX WARNING: Missing block: B:80:0x017e, code skipped:
            if (r13.messageOwner.from_id == r0.messageOwner.from_id) goto L_0x0180;
     */
        /* JADX WARNING: Missing block: B:82:0x0182, code skipped:
            r13 = false;
     */
        /* JADX WARNING: Missing block: B:86:0x0194, code skipped:
            if (r13.getFromId() == r0.getFromId()) goto L_0x0180;
     */
        public void onBindViewHolder(androidx.recyclerview.widget.RecyclerView.ViewHolder r13, int r14) {
            /*
            r12 = this;
            r0 = r12.botInfoRow;
            if (r14 != r0) goto L_0x002f;
        L_0x0004:
            r13 = r13.itemView;
            r13 = (org.telegram.ui.Cells.BotHelpCell) r13;
            r14 = org.telegram.ui.ChatActivity.this;
            r14 = r14.botInfo;
            r14 = r14.size();
            if (r14 == 0) goto L_0x0029;
        L_0x0014:
            r14 = org.telegram.ui.ChatActivity.this;
            r14 = r14.botInfo;
            r0 = org.telegram.ui.ChatActivity.this;
            r0 = r0.currentUser;
            r0 = r0.id;
            r14 = r14.get(r0);
            r14 = (org.telegram.tgnet.TLRPC.BotInfo) r14;
            r14 = r14.description;
            goto L_0x002a;
        L_0x0029:
            r14 = 0;
        L_0x002a:
            r13.setText(r14);
            goto L_0x0249;
        L_0x002f:
            r0 = r12.loadingDownRow;
            r1 = 0;
            r2 = 1;
            if (r14 == r0) goto L_0x0239;
        L_0x0035:
            r0 = r12.loadingUpRow;
            if (r14 != r0) goto L_0x003b;
        L_0x0039:
            goto L_0x0239;
        L_0x003b:
            r0 = r12.messagesStartRow;
            if (r14 < r0) goto L_0x0249;
        L_0x003f:
            r3 = r12.messagesEndRow;
            if (r14 >= r3) goto L_0x0249;
        L_0x0043:
            r3 = org.telegram.ui.ChatActivity.this;
            r3 = r3.messages;
            r0 = r14 - r0;
            r0 = r3.get(r0);
            r0 = (org.telegram.messenger.MessageObject) r0;
            r3 = r13.itemView;
            r4 = r3 instanceof org.telegram.ui.Cells.ChatMessageCell;
            if (r4 == 0) goto L_0x020a;
        L_0x0055:
            r3 = (org.telegram.ui.Cells.ChatMessageCell) r3;
            r4 = org.telegram.ui.ChatActivity.this;
            r5 = r4.currentChat;
            if (r5 != 0) goto L_0x0068;
        L_0x005d:
            r4 = r4.currentUser;
            r4 = org.telegram.messenger.UserObject.isUserSelf(r4);
            if (r4 == 0) goto L_0x0066;
        L_0x0065:
            goto L_0x0068;
        L_0x0066:
            r4 = 0;
            goto L_0x0069;
        L_0x0068:
            r4 = 1;
        L_0x0069:
            r3.isChat = r4;
            r4 = org.telegram.ui.ChatActivity.this;
            r4 = r4.currentChat;
            r4 = org.telegram.messenger.ChatObject.isChannel(r4);
            if (r4 == 0) goto L_0x007f;
        L_0x0075:
            r4 = org.telegram.ui.ChatActivity.this;
            r4 = r4.currentChat;
            r4 = r4.megagroup;
            if (r4 == 0) goto L_0x007f;
        L_0x007d:
            r4 = 1;
            goto L_0x0080;
        L_0x007f:
            r4 = 0;
        L_0x0080:
            r3.isMegagroup = r4;
            r4 = org.telegram.ui.ChatActivity.this;
            r4 = r4.getValidGroupedMessage(r0);
            if (r4 == 0) goto L_0x00c6;
        L_0x008a:
            r5 = r4.positions;
            r5 = r5.get(r0);
            r5 = (org.telegram.messenger.MessageObject.GroupedMessagePosition) r5;
            r6 = -100;
            if (r5 == 0) goto L_0x00c2;
        L_0x0096:
            r7 = r5.flags;
            r7 = r7 & 4;
            if (r7 == 0) goto L_0x00a6;
        L_0x009c:
            r7 = r4.posArray;
            r7 = r7.indexOf(r5);
            r7 = r7 + r14;
            r7 = r7 + r2;
            r8 = 0;
            goto L_0x00a9;
        L_0x00a6:
            r7 = -100;
            r8 = 1;
        L_0x00a9:
            r9 = r5.flags;
            r9 = r9 & 8;
            if (r9 == 0) goto L_0x00c0;
        L_0x00af:
            r6 = r4.posArray;
            r6 = r6.size();
            r14 = r14 - r6;
            r6 = r4.posArray;
            r5 = r6.indexOf(r5);
            r6 = r14 + r5;
            r14 = 0;
            goto L_0x00cc;
        L_0x00c0:
            r14 = 1;
            goto L_0x00cc;
        L_0x00c2:
            r14 = 0;
            r7 = -100;
            goto L_0x00cb;
        L_0x00c6:
            r6 = r14 + -1;
            r7 = r14 + 1;
            r14 = 0;
        L_0x00cb:
            r8 = 0;
        L_0x00cc:
            r5 = r12.getItemViewType(r6);
            r9 = r12.getItemViewType(r7);
            r10 = r0.messageOwner;
            r10 = r10.reply_markup;
            r10 = r10 instanceof org.telegram.tgnet.TLRPC.TL_replyInlineMarkup;
            r11 = 300; // 0x12c float:4.2E-43 double:1.48E-321;
            if (r10 != 0) goto L_0x0137;
        L_0x00de:
            r10 = r13.getItemViewType();
            if (r5 != r10) goto L_0x0137;
        L_0x00e4:
            r14 = org.telegram.ui.ChatActivity.this;
            r14 = r14.messages;
            r5 = r12.messagesStartRow;
            r6 = r6 - r5;
            r14 = r14.get(r6);
            r14 = (org.telegram.messenger.MessageObject) r14;
            r5 = r14.isOutOwner();
            r6 = r0.isOutOwner();
            if (r5 != r6) goto L_0x010c;
        L_0x00fb:
            r5 = r14.messageOwner;
            r5 = r5.date;
            r6 = r0.messageOwner;
            r6 = r6.date;
            r5 = r5 - r6;
            r5 = java.lang.Math.abs(r5);
            if (r5 > r11) goto L_0x010c;
        L_0x010a:
            r5 = 1;
            goto L_0x010d;
        L_0x010c:
            r5 = 0;
        L_0x010d:
            if (r5 == 0) goto L_0x0136;
        L_0x010f:
            r6 = org.telegram.ui.ChatActivity.this;
            r10 = r6.currentChat;
            if (r10 == 0) goto L_0x0123;
        L_0x0115:
            r14 = r14.messageOwner;
            r14 = r14.from_id;
            r5 = r0.messageOwner;
            r5 = r5.from_id;
            if (r14 != r5) goto L_0x0121;
        L_0x011f:
            r14 = 1;
            goto L_0x0137;
        L_0x0121:
            r14 = 0;
            goto L_0x0137;
        L_0x0123:
            r6 = r6.currentUser;
            r6 = org.telegram.messenger.UserObject.isUserSelf(r6);
            if (r6 == 0) goto L_0x0136;
        L_0x012b:
            r14 = r14.getFromId();
            r5 = r0.getFromId();
            if (r14 != r5) goto L_0x0121;
        L_0x0135:
            goto L_0x011f;
        L_0x0136:
            r14 = r5;
        L_0x0137:
            r13 = r13.getItemViewType();
            if (r9 != r13) goto L_0x0199;
        L_0x013d:
            r13 = org.telegram.ui.ChatActivity.this;
            r13 = r13.messages;
            r5 = r12.messagesStartRow;
            r7 = r7 - r5;
            r13 = r13.get(r7);
            r13 = (org.telegram.messenger.MessageObject) r13;
            r5 = r13.messageOwner;
            r5 = r5.reply_markup;
            r5 = r5 instanceof org.telegram.tgnet.TLRPC.TL_replyInlineMarkup;
            if (r5 != 0) goto L_0x016d;
        L_0x0152:
            r5 = r13.isOutOwner();
            r6 = r0.isOutOwner();
            if (r5 != r6) goto L_0x016d;
        L_0x015c:
            r5 = r13.messageOwner;
            r5 = r5.date;
            r6 = r0.messageOwner;
            r6 = r6.date;
            r5 = r5 - r6;
            r5 = java.lang.Math.abs(r5);
            if (r5 > r11) goto L_0x016d;
        L_0x016b:
            r5 = 1;
            goto L_0x016e;
        L_0x016d:
            r5 = 0;
        L_0x016e:
            if (r5 == 0) goto L_0x0197;
        L_0x0170:
            r6 = org.telegram.ui.ChatActivity.this;
            r7 = r6.currentChat;
            if (r7 == 0) goto L_0x0184;
        L_0x0176:
            r13 = r13.messageOwner;
            r13 = r13.from_id;
            r5 = r0.messageOwner;
            r5 = r5.from_id;
            if (r13 != r5) goto L_0x0182;
        L_0x0180:
            r13 = 1;
            goto L_0x019a;
        L_0x0182:
            r13 = 0;
            goto L_0x019a;
        L_0x0184:
            r6 = r6.currentUser;
            r6 = org.telegram.messenger.UserObject.isUserSelf(r6);
            if (r6 == 0) goto L_0x0197;
        L_0x018c:
            r13 = r13.getFromId();
            r5 = r0.getFromId();
            if (r13 != r5) goto L_0x0182;
        L_0x0196:
            goto L_0x0180;
        L_0x0197:
            r13 = r5;
            goto L_0x019a;
        L_0x0199:
            r13 = r8;
        L_0x019a:
            r5 = org.telegram.ui.ChatActivity.this;
            r5 = r5.currentChat;
            r5 = org.telegram.messenger.ChatObject.isChannel(r5);
            if (r5 == 0) goto L_0x01bc;
        L_0x01a4:
            r5 = org.telegram.ui.ChatActivity.this;
            r5 = r5.currentChat;
            r5 = r5.megagroup;
            if (r5 == 0) goto L_0x01bc;
        L_0x01ac:
            r5 = r0.messageOwner;
            r6 = r5.from_id;
            if (r6 > 0) goto L_0x01bc;
        L_0x01b2:
            r5 = r5.fwd_from;
            if (r5 == 0) goto L_0x01bc;
        L_0x01b6:
            r5 = r5.channel_post;
            if (r5 == 0) goto L_0x01bc;
        L_0x01ba:
            r13 = 0;
            r14 = 0;
        L_0x01bc:
            r3.setMessageObject(r0, r4, r14, r13);
            r13 = org.telegram.ui.ChatActivity.this;
            r13 = r13.highlightMessageId;
            r14 = NUM; // 0x7fffffff float:NaN double:1.060997895E-314;
            if (r13 == r14) goto L_0x01d7;
        L_0x01ca:
            r13 = r0.getId();
            r4 = org.telegram.ui.ChatActivity.this;
            r4 = r4.highlightMessageId;
            if (r13 != r4) goto L_0x01d7;
        L_0x01d6:
            r1 = 1;
        L_0x01d7:
            r3.setHighlighted(r1);
            r13 = org.telegram.ui.ChatActivity.this;
            r13 = r13.highlightMessageId;
            if (r13 == r14) goto L_0x01e7;
        L_0x01e2:
            r13 = org.telegram.ui.ChatActivity.this;
            r13.startMessageUnselect();
        L_0x01e7:
            r13 = org.telegram.ui.ChatActivity.this;
            r13 = r13.animatingMessageObjects;
            r13 = r13.indexOf(r0);
            r14 = -1;
            if (r13 == r14) goto L_0x0249;
        L_0x01f4:
            r14 = org.telegram.ui.ChatActivity.this;
            r14 = r14.animatingMessageObjects;
            r14.remove(r13);
            r13 = r3.getViewTreeObserver();
            r14 = new org.telegram.ui.ChatActivity$ChatActivityAdapter$3;
            r14.<init>(r3);
            r13.addOnPreDrawListener(r14);
            goto L_0x0249;
        L_0x020a:
            r13 = r3 instanceof org.telegram.ui.Cells.ChatActionCell;
            if (r13 == 0) goto L_0x0219;
        L_0x020e:
            r3 = (org.telegram.ui.Cells.ChatActionCell) r3;
            r3.setMessageObject(r0);
            r13 = NUM; // 0x3var_ float:1.0 double:5.263544247E-315;
            r3.setAlpha(r13);
            goto L_0x0249;
        L_0x0219:
            r13 = r3 instanceof org.telegram.ui.Cells.ChatUnreadCell;
            if (r13 == 0) goto L_0x0249;
        L_0x021d:
            r3 = (org.telegram.ui.Cells.ChatUnreadCell) r3;
            r13 = NUM; // 0x7f0d0a6b float:1.8747524E38 double:1.053131095E-314;
            r14 = "UnreadMessages";
            r13 = org.telegram.messenger.LocaleController.getString(r14, r13);
            r3.setText(r13);
            r13 = org.telegram.ui.ChatActivity.this;
            r13 = r13.createUnreadMessageAfterId;
            if (r13 == 0) goto L_0x0249;
        L_0x0233:
            r13 = org.telegram.ui.ChatActivity.this;
            r13.createUnreadMessageAfterId = r1;
            goto L_0x0249;
        L_0x0239:
            r13 = r13.itemView;
            r13 = (org.telegram.ui.Cells.ChatLoadingCell) r13;
            r14 = org.telegram.ui.ChatActivity.this;
            r14 = r14.loadsCount;
            if (r14 <= r2) goto L_0x0246;
        L_0x0245:
            r1 = 1;
        L_0x0246:
            r13.setProgressVisible(r1);
        L_0x0249:
            return;
            */
            throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity$ChatActivityAdapter.onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder, int):void");
        }

        public int getItemViewType(int i) {
            int i2 = this.messagesStartRow;
            if (i < i2 || i >= this.messagesEndRow) {
                return i == this.botInfoRow ? 3 : 4;
            } else {
                return ((MessageObject) ChatActivity.this.messages.get(i - i2)).contentType;
            }
        }

        /* JADX WARNING: Removed duplicated region for block: B:50:0x010d  */
        public void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView.ViewHolder r12) {
            /*
            r11 = this;
            r0 = r12.itemView;
            r1 = r0 instanceof org.telegram.ui.Cells.ChatMessageCell;
            r2 = 1;
            r3 = 0;
            if (r1 == 0) goto L_0x0112;
        L_0x0008:
            r0 = (org.telegram.ui.Cells.ChatMessageCell) r0;
            r1 = r0.getMessageObject();
            r4 = org.telegram.ui.ChatActivity.this;
            r4 = r4.actionBar;
            r4 = r4.isActionModeShowed();
            r5 = 0;
            if (r4 == 0) goto L_0x0061;
        L_0x001b:
            r0.setCheckBoxVisible(r2, r3);
            r4 = org.telegram.ui.ChatActivity.this;
            r4 = r4.chatActivityEnterView;
            if (r4 == 0) goto L_0x0029;
        L_0x0024:
            r4 = r4.getEditingMessageObject();
            goto L_0x002a;
        L_0x0029:
            r4 = r5;
        L_0x002a:
            r6 = r1.getDialogId();
            r8 = org.telegram.ui.ChatActivity.this;
            r8 = r8.dialog_id;
            r10 = (r6 > r8 ? 1 : (r6 == r8 ? 0 : -1));
            if (r10 != 0) goto L_0x003a;
        L_0x0038:
            r6 = 0;
            goto L_0x003b;
        L_0x003a:
            r6 = 1;
        L_0x003b:
            if (r4 == r1) goto L_0x0058;
        L_0x003d:
            r4 = org.telegram.ui.ChatActivity.this;
            r4 = r4.selectedMessagesIds;
            r4 = r4[r6];
            r7 = r1.getId();
            r4 = r4.indexOfKey(r7);
            if (r4 < 0) goto L_0x0050;
        L_0x004f:
            goto L_0x0058;
        L_0x0050:
            r0.setDrawSelectionBackground(r3);
            r0.setChecked(r3, r3, r3);
            r4 = 0;
            goto L_0x005e;
        L_0x0058:
            r4 = org.telegram.ui.ChatActivity.this;
            r4.setCellSelectionBackground(r1, r0, r6, r3);
            r4 = 1;
        L_0x005e:
            r6 = r4;
            r4 = 1;
            goto L_0x006c;
        L_0x0061:
            r0.setDrawSelectionBackground(r3);
            r0.setChecked(r3, r3, r3);
            r0.setCheckBoxVisible(r3, r3);
            r4 = 0;
            r6 = 0;
        L_0x006c:
            r7 = r4 ^ 1;
            if (r4 == 0) goto L_0x0074;
        L_0x0070:
            if (r6 == 0) goto L_0x0074;
        L_0x0072:
            r4 = 1;
            goto L_0x0075;
        L_0x0074:
            r4 = 0;
        L_0x0075:
            r0.setCheckPressed(r7, r4);
            r4 = org.telegram.ui.ChatActivity.this;
            r4 = r4.searchContainer;
            if (r4 == 0) goto L_0x00c7;
        L_0x0080:
            r4 = org.telegram.ui.ChatActivity.this;
            r4 = r4.searchContainer;
            r4 = r4.getVisibility();
            if (r4 != 0) goto L_0x00c7;
        L_0x008c:
            r4 = org.telegram.ui.ChatActivity.this;
            r4 = r4.getMediaDataController();
            r6 = r1.getId();
            r7 = r1.getDialogId();
            r1 = org.telegram.ui.ChatActivity.this;
            r9 = r1.mergeDialogId;
            r1 = (r7 > r9 ? 1 : (r7 == r9 ? 0 : -1));
            if (r1 != 0) goto L_0x00a6;
        L_0x00a4:
            r1 = 1;
            goto L_0x00a7;
        L_0x00a6:
            r1 = 0;
        L_0x00a7:
            r1 = r4.isMessageFound(r6, r1);
            if (r1 == 0) goto L_0x00c7;
        L_0x00ad:
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.getMediaDataController();
            r1 = r1.getLastSearchQuery();
            if (r1 == 0) goto L_0x00c7;
        L_0x00b9:
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.getMediaDataController();
            r1 = r1.getLastSearchQuery();
            r0.setHighlightedText(r1);
            goto L_0x00ca;
        L_0x00c7:
            r0.setHighlightedText(r5);
        L_0x00ca:
            r1 = r0.getViewTreeObserver();
            r4 = new org.telegram.ui.ChatActivity$ChatActivityAdapter$4;
            r4.<init>(r0);
            r1.addOnPreDrawListener(r4);
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.inPreviewMode;
            if (r1 == 0) goto L_0x00e4;
        L_0x00de:
            r1 = r0.isHighlighted();
            if (r1 != 0) goto L_0x0112;
        L_0x00e4:
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.highlightMessageId;
            r4 = NUM; // 0x7fffffff float:NaN double:1.060997895E-314;
            if (r1 == r4) goto L_0x0101;
        L_0x00ef:
            r1 = r0.getMessageObject();
            r1 = r1.getId();
            r5 = org.telegram.ui.ChatActivity.this;
            r5 = r5.highlightMessageId;
            if (r1 != r5) goto L_0x0101;
        L_0x00ff:
            r1 = 1;
            goto L_0x0102;
        L_0x0101:
            r1 = 0;
        L_0x0102:
            r0.setHighlighted(r1);
            r0 = org.telegram.ui.ChatActivity.this;
            r0 = r0.highlightMessageId;
            if (r0 == r4) goto L_0x0112;
        L_0x010d:
            r0 = org.telegram.ui.ChatActivity.this;
            r0.startMessageUnselect();
        L_0x0112:
            r0 = r12.getAdapterPosition();
            r1 = r11.messagesStartRow;
            if (r0 < r1) goto L_0x01c2;
        L_0x011a:
            r4 = r11.messagesEndRow;
            if (r0 >= r4) goto L_0x01c2;
        L_0x011e:
            r4 = org.telegram.ui.ChatActivity.this;
            r4 = r4.messages;
            r0 = r0 - r1;
            r0 = r4.get(r0);
            r0 = (org.telegram.messenger.MessageObject) r0;
            r12 = r12.itemView;
            if (r0 == 0) goto L_0x01c2;
        L_0x012d:
            r1 = r0.messageOwner;
            if (r1 == 0) goto L_0x01c2;
        L_0x0131:
            r4 = r1.media_unread;
            if (r4 == 0) goto L_0x01c2;
        L_0x0135:
            r1 = r1.mentioned;
            if (r1 == 0) goto L_0x01c2;
        L_0x0139:
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.inPreviewMode;
            if (r1 != 0) goto L_0x01ad;
        L_0x0141:
            r1 = r0.isVoice();
            if (r1 != 0) goto L_0x01ad;
        L_0x0147:
            r1 = r0.isRoundVideo();
            if (r1 != 0) goto L_0x01ad;
        L_0x014d:
            r1 = org.telegram.ui.ChatActivity.this;
            r1.newMentionsCount = r1.newMentionsCount - 1;
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.newMentionsCount;
            if (r1 > 0) goto L_0x016a;
        L_0x015a:
            r1 = org.telegram.ui.ChatActivity.this;
            r1.newMentionsCount = r3;
            r1 = org.telegram.ui.ChatActivity.this;
            r1.hasAllMentionsLocal = r2;
            r1 = org.telegram.ui.ChatActivity.this;
            r1.showMentionDownButton(r3, r2);
            goto L_0x0187;
        L_0x016a:
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.mentiondownButtonCounter;
            r4 = new java.lang.Object[r2];
            r5 = org.telegram.ui.ChatActivity.this;
            r5 = r5.newMentionsCount;
            r5 = java.lang.Integer.valueOf(r5);
            r4[r3] = r5;
            r5 = "%d";
            r4 = java.lang.String.format(r5, r4);
            r1.setText(r4);
        L_0x0187:
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.getMessagesController();
            r4 = r0.getId();
            r5 = org.telegram.ui.ChatActivity.this;
            r5 = r5.currentChat;
            r5 = org.telegram.messenger.ChatObject.isChannel(r5);
            if (r5 == 0) goto L_0x01a1;
        L_0x019b:
            r3 = org.telegram.ui.ChatActivity.this;
            r3 = r3.currentChat;
            r3 = r3.id;
        L_0x01a1:
            r5 = org.telegram.ui.ChatActivity.this;
            r5 = r5.dialog_id;
            r1.markMentionMessageAsRead(r4, r3, r5);
            r0.setContentIsRead();
        L_0x01ad:
            r0 = r12 instanceof org.telegram.ui.Cells.ChatMessageCell;
            if (r0 == 0) goto L_0x01c2;
        L_0x01b1:
            r12 = (org.telegram.ui.Cells.ChatMessageCell) r12;
            r0 = org.telegram.ui.ChatActivity.this;
            r0 = r0.inPreviewMode;
            if (r0 == 0) goto L_0x01bf;
        L_0x01bb:
            r12.setHighlighted(r2);
            goto L_0x01c2;
        L_0x01bf:
            r12.setHighlightedAnimated();
        L_0x01c2:
            return;
            */
            throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity$ChatActivityAdapter.onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder):void");
        }

        /* JADX WARNING: Removed duplicated region for block: B:13:0x0032  */
        public void updateRowAtPosition(int r4) {
            /*
            r3 = this;
            r0 = org.telegram.ui.ChatActivity.this;
            r0 = r0.chatLayoutManager;
            if (r0 != 0) goto L_0x0009;
        L_0x0008:
            return;
        L_0x0009:
            r0 = org.telegram.ui.ChatActivity.this;
            r0 = r0.wasManualScroll;
            r1 = -1;
            if (r0 != 0) goto L_0x002c;
        L_0x0012:
            r0 = org.telegram.ui.ChatActivity.this;
            r0 = r0.unreadMessageObject;
            if (r0 == 0) goto L_0x002c;
        L_0x001a:
            r0 = org.telegram.ui.ChatActivity.this;
            r2 = r0.messages;
            r0 = r0.unreadMessageObject;
            r0 = r2.indexOf(r0);
            if (r0 < 0) goto L_0x002c;
        L_0x0028:
            r2 = r3.messagesStartRow;
            r0 = r0 + r2;
            goto L_0x002d;
        L_0x002c:
            r0 = -1;
        L_0x002d:
            r3.notifyItemChanged(r4);
            if (r0 == r1) goto L_0x0062;
        L_0x0032:
            r4 = org.telegram.ui.ChatActivity.this;
            r4 = r4.chatListView;
            r4 = r4.getMeasuredHeight();
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.chatListView;
            r1 = r1.getPaddingBottom();
            r4 = r4 - r1;
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.chatListView;
            r1 = r1.getPaddingTop();
            r4 = r4 - r1;
            r1 = NUM; // 0x41e80000 float:29.0 double:5.46299942E-315;
            r1 = org.telegram.messenger.AndroidUtilities.dp(r1);
            r4 = r4 - r1;
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.chatLayoutManager;
            r1.scrollToPositionWithOffset(r0, r4);
        L_0x0062:
            return;
            */
            throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity$ChatActivityAdapter.updateRowAtPosition(int):void");
        }

        public void updateRowWithMessageObject(MessageObject messageObject, boolean z) {
            if (z) {
                int childCount = ChatActivity.this.chatListView.getChildCount();
                for (int i = 0; i < childCount; i++) {
                    View childAt = ChatActivity.this.chatListView.getChildAt(i);
                    if (childAt instanceof ChatMessageCell) {
                        ChatMessageCell chatMessageCell = (ChatMessageCell) childAt;
                        if (chatMessageCell.getMessageObject() == messageObject) {
                            chatMessageCell.setMessageObject(messageObject, chatMessageCell.getCurrentMessagesGroup(), chatMessageCell.isPinnedBottom(), chatMessageCell.isPinnedTop());
                            return;
                        }
                    }
                }
            }
            int indexOf = ChatActivity.this.messages.indexOf(messageObject);
            if (indexOf != -1) {
                updateRowAtPosition(indexOf + this.messagesStartRow);
            }
        }

        public void notifyDataSetChanged() {
            updateRows();
            try {
                super.notifyDataSetChanged();
            } catch (Exception e) {
                FileLog.e(e);
            }
        }

        public void notifyItemChanged(int i) {
            updateRows();
            try {
                super.notifyItemChanged(i);
            } catch (Exception e) {
                FileLog.e(e);
            }
        }

        public void notifyItemRangeChanged(int i, int i2) {
            updateRows();
            try {
                super.notifyItemRangeChanged(i, i2);
            } catch (Exception e) {
                FileLog.e(e);
            }
        }

        public void notifyItemInserted(int i) {
            updateRows();
            try {
                super.notifyItemInserted(i);
            } catch (Exception e) {
                FileLog.e(e);
            }
        }

        public void notifyItemMoved(int i, int i2) {
            updateRows();
            try {
                super.notifyItemMoved(i, i2);
            } catch (Exception e) {
                FileLog.e(e);
            }
        }

        public void notifyItemRangeInserted(int i, int i2) {
            updateRows();
            try {
                super.notifyItemRangeInserted(i, i2);
            } catch (Exception e) {
                FileLog.e(e);
            }
        }

        public void notifyItemRemoved(int i) {
            updateRows();
            try {
                super.notifyItemRemoved(i);
            } catch (Exception e) {
                FileLog.e(e);
            }
        }

        public void notifyItemRangeRemoved(int i, int i2) {
            updateRows();
            try {
                super.notifyItemRangeRemoved(i, i2);
            } catch (Exception e) {
                FileLog.e(e);
            }
        }
    }

    static /* synthetic */ void lambda$null$31(DialogInterface dialogInterface, int i) {
    }

    private void setItemAnimationsEnabled(boolean z) {
    }

    public ChatActivity(Bundle bundle) {
        super(bundle);
    }

    public boolean onFragmentCreate() {
        int i;
        int i2 = this.arguments.getInt("chat_id", 0);
        int i3 = this.arguments.getInt("user_id", 0);
        int i4 = this.arguments.getInt("enc_id", 0);
        this.inlineReturn = this.arguments.getLong("inline_return", 0);
        String string = this.arguments.getString("inline_query");
        this.startLoadFromMessageId = this.arguments.getInt("message_id", 0);
        int i5 = this.arguments.getInt("migrated_to", 0);
        this.scrollToTopOnResume = this.arguments.getBoolean("scrollToTopOnResume", false);
        CountDownLatch countDownLatch;
        if (i2 != 0) {
            this.currentChat = getMessagesController().getChat(Integer.valueOf(i2));
            if (this.currentChat == null) {
                countDownLatch = new CountDownLatch(1);
                MessagesStorage messagesStorage = getMessagesStorage();
                messagesStorage.getStorageQueue().postRunnable(new -$$Lambda$ChatActivity$diV3z76REAMmAeIIp51DTLTaiSg(this, messagesStorage, i2, countDownLatch));
                try {
                    countDownLatch.await();
                } catch (Exception e) {
                    FileLog.e(e);
                }
                if (this.currentChat == null) {
                    return false;
                }
                getMessagesController().putChat(this.currentChat, true);
            }
            if (i2 > 0) {
                this.dialog_id = (long) (-i2);
            } else {
                this.isBroadcast = true;
                this.dialog_id = AndroidUtilities.makeBroadcastId(i2);
            }
            if (ChatObject.isChannel(this.currentChat)) {
                getMessagesController().startShortPoll(this.currentChat, false);
            }
        } else if (i3 != 0) {
            this.currentUser = getMessagesController().getUser(Integer.valueOf(i3));
            if (this.currentUser == null) {
                MessagesStorage messagesStorage2 = getMessagesStorage();
                CountDownLatch countDownLatch2 = new CountDownLatch(1);
                messagesStorage2.getStorageQueue().postRunnable(new -$$Lambda$ChatActivity$rqBjWQeWrMiTLhewd-W0HAwxKps(this, messagesStorage2, i3, countDownLatch2));
                try {
                    countDownLatch2.await();
                } catch (Exception e2) {
                    FileLog.e(e2);
                }
                if (this.currentUser == null) {
                    return false;
                }
                getMessagesController().putUser(this.currentUser, true);
            }
            this.dialog_id = (long) i3;
            this.botUser = this.arguments.getString("botUser");
            if (string != null) {
                getMessagesController().sendBotStart(this.currentUser, string);
            }
        } else if (i4 == 0) {
            return false;
        } else {
            this.currentEncryptedChat = getMessagesController().getEncryptedChat(Integer.valueOf(i4));
            MessagesStorage messagesStorage3 = getMessagesStorage();
            if (this.currentEncryptedChat == null) {
                countDownLatch = new CountDownLatch(1);
                messagesStorage3.getStorageQueue().postRunnable(new -$$Lambda$ChatActivity$8qYn5CerE3-o6oJqpu7NjPs2smE(this, messagesStorage3, i4, countDownLatch));
                try {
                    countDownLatch.await();
                } catch (Exception e22) {
                    FileLog.e(e22);
                }
                if (this.currentEncryptedChat == null) {
                    return false;
                }
                getMessagesController().putEncryptedChat(this.currentEncryptedChat, true);
            }
            this.currentUser = getMessagesController().getUser(Integer.valueOf(this.currentEncryptedChat.user_id));
            if (this.currentUser == null) {
                countDownLatch = new CountDownLatch(1);
                messagesStorage3.getStorageQueue().postRunnable(new -$$Lambda$ChatActivity$zbo6FUWEskAD8BCSLY3b_JqK_JY(this, messagesStorage3, countDownLatch));
                try {
                    countDownLatch.await();
                } catch (Exception e222) {
                    FileLog.e(e222);
                }
                if (this.currentUser == null) {
                    return false;
                }
                getMessagesController().putUser(this.currentUser, true);
            }
            this.dialog_id = ((long) i4) << 32;
            int[] iArr = this.maxMessageId;
            iArr[1] = Integer.MIN_VALUE;
            iArr[0] = Integer.MIN_VALUE;
            iArr = this.minMessageId;
            iArr[1] = Integer.MAX_VALUE;
            iArr[0] = Integer.MAX_VALUE;
        }
        if (this.currentUser != null) {
            MediaController.getInstance().startMediaObserver();
        }
        getNotificationCenter().addObserver(this, NotificationCenter.messagesDidLoad);
        NotificationCenter.getGlobalInstance().addObserver(this, NotificationCenter.emojiDidLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.didUpdateConnectionState);
        getNotificationCenter().addObserver(this, NotificationCenter.updateInterfaces);
        getNotificationCenter().addObserver(this, NotificationCenter.didReceiveNewMessages);
        getNotificationCenter().addObserver(this, NotificationCenter.closeChats);
        getNotificationCenter().addObserver(this, NotificationCenter.messagesRead);
        getNotificationCenter().addObserver(this, NotificationCenter.messagesDeleted);
        getNotificationCenter().addObserver(this, NotificationCenter.historyCleared);
        getNotificationCenter().addObserver(this, NotificationCenter.messageReceivedByServer);
        getNotificationCenter().addObserver(this, NotificationCenter.messageReceivedByAck);
        getNotificationCenter().addObserver(this, NotificationCenter.messageSendError);
        getNotificationCenter().addObserver(this, NotificationCenter.chatInfoDidLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.contactsDidLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.encryptedChatUpdated);
        getNotificationCenter().addObserver(this, NotificationCenter.messagesReadEncrypted);
        getNotificationCenter().addObserver(this, NotificationCenter.removeAllMessagesFromDialog);
        getNotificationCenter().addObserver(this, NotificationCenter.messagePlayingProgressDidChanged);
        getNotificationCenter().addObserver(this, NotificationCenter.messagePlayingDidReset);
        getNotificationCenter().addObserver(this, NotificationCenter.messagePlayingGoingToStop);
        getNotificationCenter().addObserver(this, NotificationCenter.messagePlayingPlayStateChanged);
        getNotificationCenter().addObserver(this, NotificationCenter.screenshotTook);
        getNotificationCenter().addObserver(this, NotificationCenter.blockedUsersDidLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.fileNewChunkAvailable);
        getNotificationCenter().addObserver(this, NotificationCenter.didCreatedNewDeleteTask);
        getNotificationCenter().addObserver(this, NotificationCenter.messagePlayingDidStart);
        getNotificationCenter().addObserver(this, NotificationCenter.updateMessageMedia);
        getNotificationCenter().addObserver(this, NotificationCenter.replaceMessagesObjects);
        getNotificationCenter().addObserver(this, NotificationCenter.notificationsSettingsUpdated);
        getNotificationCenter().addObserver(this, NotificationCenter.replyMessagesDidLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.didReceivedWebpages);
        getNotificationCenter().addObserver(this, NotificationCenter.didReceivedWebpagesInUpdates);
        getNotificationCenter().addObserver(this, NotificationCenter.messagesReadContent);
        getNotificationCenter().addObserver(this, NotificationCenter.botInfoDidLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.botKeyboardDidLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.chatSearchResultsAvailable);
        getNotificationCenter().addObserver(this, NotificationCenter.chatSearchResultsLoading);
        getNotificationCenter().addObserver(this, NotificationCenter.didUpdatedMessagesViews);
        getNotificationCenter().addObserver(this, NotificationCenter.chatInfoCantLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.pinnedMessageDidLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.peerSettingsDidLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.newDraftReceived);
        getNotificationCenter().addObserver(this, NotificationCenter.userInfoDidLoad);
        NotificationCenter.getGlobalInstance().addObserver(this, NotificationCenter.didSetNewWallpapper);
        getNotificationCenter().addObserver(this, NotificationCenter.channelRightsUpdated);
        getNotificationCenter().addObserver(this, NotificationCenter.updateMentionsCount);
        getNotificationCenter().addObserver(this, NotificationCenter.audioRecordTooShort);
        getNotificationCenter().addObserver(this, NotificationCenter.didUpdatePollResults);
        getNotificationCenter().addObserver(this, NotificationCenter.chatOnlineCountDidLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.videoLoadingStateChanged);
        super.onFragmentCreate();
        if (this.currentEncryptedChat == null && !this.isBroadcast) {
            getMediaDataController().loadBotKeyboard(this.dialog_id);
        }
        this.loading = true;
        getMessagesController().loadPeerSettings(this.currentUser, this.currentChat);
        getMessagesController().setLastCreatedDialogId(this.dialog_id, true);
        if (this.startLoadFromMessageId == 0) {
            SharedPreferences notificationsSettings = MessagesController.getNotificationsSettings(this.currentAccount);
            StringBuilder stringBuilder = new StringBuilder();
            stringBuilder.append("diditem");
            stringBuilder.append(this.dialog_id);
            i2 = notificationsSettings.getInt(stringBuilder.toString(), 0);
            if (i2 != 0) {
                this.wasManualScroll = true;
                this.loadingFromOldPosition = true;
                StringBuilder stringBuilder2 = new StringBuilder();
                stringBuilder2.append("diditemo");
                stringBuilder2.append(this.dialog_id);
                this.startLoadFromMessageOffset = notificationsSettings.getInt(stringBuilder2.toString(), 0);
                this.startLoadFromMessageId = i2;
            }
        } else {
            this.showScrollToMessageError = true;
            this.needSelectFromMessageId = true;
        }
        MessagesController messagesController;
        long j;
        int i6;
        boolean isChannel;
        if (this.startLoadFromMessageId != 0) {
            this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
            if (i5 != 0) {
                this.mergeDialogId = (long) i5;
                messagesController = getMessagesController();
                j = this.mergeDialogId;
                i6 = this.loadingFromOldPosition ? 50 : AndroidUtilities.isTablet() ? 30 : 20;
                int i7 = this.startLoadFromMessageId;
                i = this.classGuid;
                isChannel = ChatObject.isChannel(this.currentChat);
                i2 = this.lastLoadIndex;
                this.lastLoadIndex = i2 + 1;
                messagesController.loadMessages(j, i6, i7, 0, true, 0, i, 3, 0, isChannel, i2);
            } else {
                MessagesController messagesController2 = getMessagesController();
                long j2 = this.dialog_id;
                int i8 = this.loadingFromOldPosition ? 50 : AndroidUtilities.isTablet() ? 30 : 20;
                i = this.startLoadFromMessageId;
                i2 = this.classGuid;
                boolean isChannel2 = ChatObject.isChannel(this.currentChat);
                i4 = this.lastLoadIndex;
                this.lastLoadIndex = i4 + 1;
                messagesController2.loadMessages(j2, i8, i, 0, true, 0, i2, 3, 0, isChannel2, i4);
            }
        } else {
            this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
            messagesController = getMessagesController();
            j = this.dialog_id;
            i6 = AndroidUtilities.isTablet() ? 30 : 20;
            i = this.classGuid;
            isChannel = ChatObject.isChannel(this.currentChat);
            i2 = this.lastLoadIndex;
            this.lastLoadIndex = i2 + 1;
            messagesController.loadMessages(j, i6, 0, 0, true, 0, i, 2, 0, isChannel, i2);
        }
        if (this.currentChat != null) {
            this.chatInfo = getMessagesController().getChatFull(this.currentChat.id);
            if (this.currentChat.megagroup && !getMessagesController().isChannelAdminsLoaded(this.currentChat.id)) {
                getMessagesController().loadChannelAdmins(this.currentChat.id, true);
            }
            ChatFull loadChatInfo = getMessagesStorage().loadChatInfo(this.currentChat.id, this.isBroadcast ? new CountDownLatch(1) : null, true, false);
            if (this.chatInfo == null) {
                this.chatInfo = loadChatInfo;
            }
            if (this.chatInfo != null && ChatObject.isChannel(this.currentChat)) {
                loadChatInfo = this.chatInfo;
                i4 = loadChatInfo.migrated_from_chat_id;
                if (i4 != 0) {
                    this.mergeDialogId = (long) (-i4);
                    this.maxMessageId[1] = loadChatInfo.migrated_from_max_id;
                }
            }
        } else if (this.currentUser != null) {
            getMessagesController().loadUserInfo(this.currentUser, true, this.classGuid);
        }
        if (i3 != 0 && this.currentUser.bot) {
            getMediaDataController().loadBotInfo(i3, true, this.classGuid);
        } else if (this.chatInfo instanceof TL_chatFull) {
            for (i = 0; i < this.chatInfo.participants.participants.size(); i++) {
                User user = getMessagesController().getUser(Integer.valueOf(((ChatParticipant) this.chatInfo.participants.participants.get(i)).user_id));
                if (user != null && user.bot) {
                    getMediaDataController().loadBotInfo(user.id, true, this.classGuid);
                }
            }
        }
        if (this.currentUser != null) {
            this.userBlocked = getMessagesController().blockedUsers.indexOfKey(this.currentUser.id) >= 0;
        }
        if (AndroidUtilities.isTablet()) {
            getNotificationCenter().postNotificationName(NotificationCenter.openedChatChanged, Long.valueOf(this.dialog_id), Boolean.valueOf(false));
        }
        EncryptedChat encryptedChat = this.currentEncryptedChat;
        if (!(encryptedChat == null || AndroidUtilities.getMyLayerVersion(encryptedChat.layer) == 101)) {
            getSecretChatHelper().sendNotifyLayerMessage(this.currentEncryptedChat, null);
        }
        return true;
    }

    public /* synthetic */ void lambda$onFragmentCreate$0$ChatActivity(MessagesStorage messagesStorage, int i, CountDownLatch countDownLatch) {
        this.currentChat = messagesStorage.getChat(i);
        countDownLatch.countDown();
    }

    public /* synthetic */ void lambda$onFragmentCreate$1$ChatActivity(MessagesStorage messagesStorage, int i, CountDownLatch countDownLatch) {
        this.currentUser = messagesStorage.getUser(i);
        countDownLatch.countDown();
    }

    public /* synthetic */ void lambda$onFragmentCreate$2$ChatActivity(MessagesStorage messagesStorage, int i, CountDownLatch countDownLatch) {
        this.currentEncryptedChat = messagesStorage.getEncryptedChat(i);
        countDownLatch.countDown();
    }

    public /* synthetic */ void lambda$onFragmentCreate$3$ChatActivity(MessagesStorage messagesStorage, CountDownLatch countDownLatch) {
        this.currentUser = messagesStorage.getUser(this.currentEncryptedChat.user_id);
        countDownLatch.countDown();
    }

    public void onFragmentDestroy() {
        super.onFragmentDestroy();
        ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
        if (chatActivityEnterView != null) {
            chatActivityEnterView.onDestroy();
        }
        MentionsAdapter mentionsAdapter = this.mentionsAdapter;
        if (mentionsAdapter != null) {
            mentionsAdapter.onDestroy();
        }
        ChatAttachAlert chatAttachAlert = this.chatAttachAlert;
        if (chatAttachAlert != null) {
            chatAttachAlert.dismissInternal();
        }
        UndoView undoView = this.undoView;
        if (undoView != null) {
            undoView.hide(true, 0);
        }
        getMessagesController().setLastCreatedDialogId(this.dialog_id, false);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagesDidLoad);
        NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.emojiDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.didUpdateConnectionState);
        getNotificationCenter().removeObserver(this, NotificationCenter.updateInterfaces);
        getNotificationCenter().removeObserver(this, NotificationCenter.didReceiveNewMessages);
        getNotificationCenter().removeObserver(this, NotificationCenter.closeChats);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagesRead);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagesDeleted);
        getNotificationCenter().removeObserver(this, NotificationCenter.historyCleared);
        getNotificationCenter().removeObserver(this, NotificationCenter.messageReceivedByServer);
        getNotificationCenter().removeObserver(this, NotificationCenter.messageReceivedByAck);
        getNotificationCenter().removeObserver(this, NotificationCenter.messageSendError);
        getNotificationCenter().removeObserver(this, NotificationCenter.chatInfoDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.encryptedChatUpdated);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagesReadEncrypted);
        getNotificationCenter().removeObserver(this, NotificationCenter.removeAllMessagesFromDialog);
        getNotificationCenter().removeObserver(this, NotificationCenter.contactsDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagePlayingProgressDidChanged);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagePlayingDidReset);
        getNotificationCenter().removeObserver(this, NotificationCenter.screenshotTook);
        getNotificationCenter().removeObserver(this, NotificationCenter.blockedUsersDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.fileNewChunkAvailable);
        getNotificationCenter().removeObserver(this, NotificationCenter.didCreatedNewDeleteTask);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagePlayingDidStart);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagePlayingGoingToStop);
        getNotificationCenter().removeObserver(this, NotificationCenter.updateMessageMedia);
        getNotificationCenter().removeObserver(this, NotificationCenter.replaceMessagesObjects);
        getNotificationCenter().removeObserver(this, NotificationCenter.notificationsSettingsUpdated);
        getNotificationCenter().removeObserver(this, NotificationCenter.replyMessagesDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.didReceivedWebpages);
        getNotificationCenter().removeObserver(this, NotificationCenter.didReceivedWebpagesInUpdates);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagesReadContent);
        getNotificationCenter().removeObserver(this, NotificationCenter.botInfoDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.botKeyboardDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.chatSearchResultsAvailable);
        getNotificationCenter().removeObserver(this, NotificationCenter.chatSearchResultsLoading);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagePlayingPlayStateChanged);
        getNotificationCenter().removeObserver(this, NotificationCenter.didUpdatedMessagesViews);
        getNotificationCenter().removeObserver(this, NotificationCenter.chatInfoCantLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.pinnedMessageDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.peerSettingsDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.newDraftReceived);
        getNotificationCenter().removeObserver(this, NotificationCenter.userInfoDidLoad);
        NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.didSetNewWallpapper);
        getNotificationCenter().removeObserver(this, NotificationCenter.channelRightsUpdated);
        getNotificationCenter().removeObserver(this, NotificationCenter.updateMentionsCount);
        getNotificationCenter().removeObserver(this, NotificationCenter.audioRecordTooShort);
        getNotificationCenter().removeObserver(this, NotificationCenter.didUpdatePollResults);
        getNotificationCenter().removeObserver(this, NotificationCenter.chatOnlineCountDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.videoLoadingStateChanged);
        if (AndroidUtilities.isTablet()) {
            getNotificationCenter().postNotificationName(NotificationCenter.openedChatChanged, Long.valueOf(this.dialog_id), Boolean.valueOf(true));
        }
        if (this.currentUser != null) {
            MediaController.getInstance().stopMediaObserver();
        }
        if (this.currentEncryptedChat != null) {
            try {
                if (VERSION.SDK_INT >= 23 && (SharedConfig.passcodeHash.length() == 0 || SharedConfig.allowScreenCapture)) {
                    MediaController.getInstance().setFlagSecure(this, false);
                }
            } catch (Throwable th) {
                FileLog.e(th);
            }
        }
        if (this.currentUser != null) {
            getMessagesController().cancelLoadFullUser(this.currentUser.id);
        }
        AndroidUtilities.removeAdjustResize(getParentActivity(), this.classGuid);
        StickersAdapter stickersAdapter = this.stickersAdapter;
        if (stickersAdapter != null) {
            stickersAdapter.onDestroy();
        }
        chatAttachAlert = this.chatAttachAlert;
        if (chatAttachAlert != null) {
            chatAttachAlert.onDestroy();
        }
        AndroidUtilities.unlockOrientation(getParentActivity());
        if (ChatObject.isChannel(this.currentChat)) {
            getMessagesController().startShortPoll(this.currentChat, true);
        }
    }

    /* JADX WARNING: Removed duplicated region for block: B:219:0x0d9c  */
    /* JADX WARNING: Removed duplicated region for block: B:218:0x0d9a  */
    /* JADX WARNING: Removed duplicated region for block: B:229:0x0dbe  */
    /* JADX WARNING: Removed duplicated region for block: B:228:0x0dbb  */
    /* JADX WARNING: Removed duplicated region for block: B:198:0x077a  */
    /* JADX WARNING: Removed duplicated region for block: B:206:0x08d6  */
    /* JADX WARNING: Removed duplicated region for block: B:209:0x0cbd  */
    /* JADX WARNING: Removed duplicated region for block: B:238:0x10c6  */
    /* JADX WARNING: Removed duplicated region for block: B:253:0x110f  */
    /* JADX WARNING: Removed duplicated region for block: B:263:0x1674  */
    /* JADX WARNING: Removed duplicated region for block: B:266:0x17e8  */
    /* JADX WARNING: Removed duplicated region for block: B:291:0x187d  */
    /* JADX WARNING: Removed duplicated region for block: B:132:0x0425  */
    /* JADX WARNING: Removed duplicated region for block: B:136:0x0508  */
    /* JADX WARNING: Removed duplicated region for block: B:135:0x0482  */
    /* JADX WARNING: Removed duplicated region for block: B:146:0x05af  */
    /* JADX WARNING: Removed duplicated region for block: B:145:0x05ad  */
    /* JADX WARNING: Removed duplicated region for block: B:150:0x05cf  */
    /* JADX WARNING: Removed duplicated region for block: B:149:0x05cd  */
    /* JADX WARNING: Removed duplicated region for block: B:154:0x05e0  */
    /* JADX WARNING: Removed duplicated region for block: B:153:0x05de  */
    /* JADX WARNING: Removed duplicated region for block: B:185:0x070c  */
    /* JADX WARNING: Removed duplicated region for block: B:157:0x0630  */
    /* JADX WARNING: Removed duplicated region for block: B:192:0x0762  */
    /* JADX WARNING: Removed duplicated region for block: B:198:0x077a  */
    /* JADX WARNING: Removed duplicated region for block: B:206:0x08d6  */
    /* JADX WARNING: Removed duplicated region for block: B:209:0x0cbd  */
    /* JADX WARNING: Removed duplicated region for block: B:238:0x10c6  */
    /* JADX WARNING: Removed duplicated region for block: B:241:0x10ec  */
    /* JADX WARNING: Removed duplicated region for block: B:247:0x10fc  */
    /* JADX WARNING: Removed duplicated region for block: B:253:0x110f  */
    /* JADX WARNING: Removed duplicated region for block: B:263:0x1674  */
    /* JADX WARNING: Removed duplicated region for block: B:266:0x17e8  */
    /* JADX WARNING: Removed duplicated region for block: B:269:0x1820  */
    /* JADX WARNING: Removed duplicated region for block: B:291:0x187d  */
    /* JADX WARNING: Removed duplicated region for block: B:102:0x033b  */
    /* JADX WARNING: Removed duplicated region for block: B:112:0x0379  */
    /* JADX WARNING: Removed duplicated region for block: B:132:0x0425  */
    /* JADX WARNING: Removed duplicated region for block: B:135:0x0482  */
    /* JADX WARNING: Removed duplicated region for block: B:136:0x0508  */
    /* JADX WARNING: Removed duplicated region for block: B:139:0x057a  */
    /* JADX WARNING: Removed duplicated region for block: B:145:0x05ad  */
    /* JADX WARNING: Removed duplicated region for block: B:146:0x05af  */
    /* JADX WARNING: Removed duplicated region for block: B:149:0x05cd  */
    /* JADX WARNING: Removed duplicated region for block: B:150:0x05cf  */
    /* JADX WARNING: Removed duplicated region for block: B:153:0x05de  */
    /* JADX WARNING: Removed duplicated region for block: B:154:0x05e0  */
    /* JADX WARNING: Removed duplicated region for block: B:157:0x0630  */
    /* JADX WARNING: Removed duplicated region for block: B:185:0x070c  */
    /* JADX WARNING: Removed duplicated region for block: B:192:0x0762  */
    /* JADX WARNING: Removed duplicated region for block: B:198:0x077a  */
    /* JADX WARNING: Removed duplicated region for block: B:206:0x08d6  */
    /* JADX WARNING: Removed duplicated region for block: B:209:0x0cbd  */
    /* JADX WARNING: Removed duplicated region for block: B:238:0x10c6  */
    /* JADX WARNING: Removed duplicated region for block: B:241:0x10ec  */
    /* JADX WARNING: Removed duplicated region for block: B:247:0x10fc  */
    /* JADX WARNING: Removed duplicated region for block: B:253:0x110f  */
    /* JADX WARNING: Removed duplicated region for block: B:263:0x1674  */
    /* JADX WARNING: Removed duplicated region for block: B:266:0x17e8  */
    /* JADX WARNING: Removed duplicated region for block: B:269:0x1820  */
    /* JADX WARNING: Removed duplicated region for block: B:291:0x187d  */
    /* JADX WARNING: Missing block: B:51:0x00f7, code skipped:
            if ((r1.participants instanceof org.telegram.tgnet.TLRPC.TL_chatParticipantsForbidden) != false) goto L_0x00f9;
     */
    /* JADX WARNING: Missing block: B:93:0x0309, code skipped:
            if (android.text.TextUtils.isEmpty(r2.username) != false) goto L_0x030b;
     */
    /* JADX WARNING: Missing block: B:214:0x0d7f, code skipped:
            if (r1.megagroup != false) goto L_0x0d81;
     */
    public android.view.View createView(android.content.Context r33) {
        /*
        r32 = this;
        r7 = r32;
        r0 = r33;
        r1 = r7.chatMessageCellsCache;
        r1 = r1.isEmpty();
        r8 = 8;
        r9 = 0;
        if (r1 == 0) goto L_0x001f;
    L_0x000f:
        r1 = 0;
    L_0x0010:
        if (r1 >= r8) goto L_0x001f;
    L_0x0012:
        r2 = r7.chatMessageCellsCache;
        r3 = new org.telegram.ui.Cells.ChatMessageCell;
        r3.<init>(r0);
        r2.add(r3);
        r1 = r1 + 1;
        goto L_0x0010;
    L_0x001f:
        r10 = 1;
        r1 = 1;
    L_0x0021:
        if (r1 < 0) goto L_0x003b;
    L_0x0023:
        r2 = r7.selectedMessagesIds;
        r2 = r2[r1];
        r2.clear();
        r2 = r7.selectedMessagesCanCopyIds;
        r2 = r2[r1];
        r2.clear();
        r2 = r7.selectedMessagesCanStarIds;
        r2 = r2[r1];
        r2.clear();
        r1 = r1 + -1;
        goto L_0x0021;
    L_0x003b:
        r7.cantDeleteMessagesCount = r9;
        r7.canEditMessagesCount = r9;
        r7.cantForwardMessagesCount = r9;
        r7.canForwardMessagesCount = r9;
        r11 = 0;
        r7.videoPlayerContainer = r11;
        r7.hasOwnBackground = r10;
        r1 = r7.chatAttachAlert;
        if (r1 == 0) goto L_0x005e;
    L_0x004c:
        r1 = r1.isShowing();	 Catch:{ Exception -> 0x0057 }
        if (r1 == 0) goto L_0x0057;
    L_0x0052:
        r1 = r7.chatAttachAlert;	 Catch:{ Exception -> 0x0057 }
        r1.dismiss();	 Catch:{ Exception -> 0x0057 }
    L_0x0057:
        r1 = r7.chatAttachAlert;
        r1.onDestroy();
        r7.chatAttachAlert = r11;
    L_0x005e:
        r1 = r7.stickersAdapter;
        if (r1 == 0) goto L_0x0067;
    L_0x0062:
        r1.onDestroy();
        r7.stickersAdapter = r11;
    L_0x0067:
        org.telegram.ui.ActionBar.Theme.createChatResources(r0, r9);
        r1 = r7.actionBar;
        r1.setAddToContainer(r9);
        r1 = r7.inPreviewMode;
        if (r1 == 0) goto L_0x0079;
    L_0x0073:
        r1 = r7.actionBar;
        r1.setBackButtonDrawable(r11);
        goto L_0x0083;
    L_0x0079:
        r1 = r7.actionBar;
        r2 = new org.telegram.ui.ActionBar.BackDrawable;
        r2.<init>(r9);
        r1.setBackButtonDrawable(r2);
    L_0x0083:
        r1 = r7.actionBar;
        r2 = new org.telegram.ui.ChatActivity$5;
        r2.<init>();
        r1.setActionBarMenuOnItemClick(r2);
        r1 = new org.telegram.ui.Components.ChatAvatarContainer;
        r2 = r7.currentEncryptedChat;
        if (r2 == 0) goto L_0x0095;
    L_0x0093:
        r2 = 1;
        goto L_0x0096;
    L_0x0095:
        r2 = 0;
    L_0x0096:
        r1.<init>(r0, r7, r2);
        r7.avatarContainer = r1;
        r1 = r7.inPreviewMode;
        if (r1 == 0) goto L_0x00a4;
    L_0x009f:
        r1 = r7.avatarContainer;
        r1.setOccupyStatusBar(r9);
    L_0x00a4:
        r1 = r7.actionBar;
        r2 = r7.avatarContainer;
        r12 = -2;
        r13 = -NUM; // 0xffffffffbvar_ float:-1.0 double:NaN;
        r14 = 51;
        r3 = r7.inPreviewMode;
        if (r3 != 0) goto L_0x00b6;
    L_0x00b1:
        r3 = NUM; // 0x42600000 float:56.0 double:5.50185432E-315;
        r15 = NUM; // 0x42600000 float:56.0 double:5.50185432E-315;
        goto L_0x00b8;
    L_0x00b6:
        r3 = 0;
        r15 = 0;
    L_0x00b8:
        r16 = 0;
        r17 = NUM; // 0x42200000 float:40.0 double:5.481131706E-315;
        r18 = 0;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r12, r13, r14, r15, r16, r17, r18);
        r1.addView(r2, r9, r3);
        r1 = r7.currentChat;
        if (r1 == 0) goto L_0x00fe;
    L_0x00c9:
        r1 = org.telegram.messenger.ChatObject.isChannel(r1);
        if (r1 != 0) goto L_0x00fe;
    L_0x00cf:
        r1 = r7.currentChat;
        r1 = r1.participants_count;
        r2 = r7.chatInfo;
        if (r2 == 0) goto L_0x00df;
    L_0x00d7:
        r1 = r2.participants;
        r1 = r1.participants;
        r1 = r1.size();
    L_0x00df:
        if (r1 == 0) goto L_0x00f9;
    L_0x00e1:
        r1 = r7.currentChat;
        r2 = r1.deactivated;
        if (r2 != 0) goto L_0x00f9;
    L_0x00e7:
        r2 = r1.left;
        if (r2 != 0) goto L_0x00f9;
    L_0x00eb:
        r1 = r1 instanceof org.telegram.tgnet.TLRPC.TL_chatForbidden;
        if (r1 != 0) goto L_0x00f9;
    L_0x00ef:
        r1 = r7.chatInfo;
        if (r1 == 0) goto L_0x00fe;
    L_0x00f3:
        r1 = r1.participants;
        r1 = r1 instanceof org.telegram.tgnet.TLRPC.TL_chatParticipantsForbidden;
        if (r1 == 0) goto L_0x00fe;
    L_0x00f9:
        r1 = r7.avatarContainer;
        r1.setEnabled(r9);
    L_0x00fe:
        r1 = r7.actionBar;
        r1 = r1.createMenu();
        r2 = r7.currentEncryptedChat;
        if (r2 != 0) goto L_0x0135;
    L_0x0108:
        r2 = r7.isBroadcast;
        if (r2 != 0) goto L_0x0135;
    L_0x010c:
        r2 = NUM; // 0x7var_af float:1.7944933E38 double:1.0529355895E-314;
        r2 = r1.addItem(r9, r2);
        r2 = r2.setIsSearchField(r10);
        r3 = new org.telegram.ui.ChatActivity$6;
        r3.<init>();
        r2 = r2.setActionBarMenuItemSearchListener(r3);
        r7.searchItem = r2;
        r2 = r7.searchItem;
        r3 = NUM; // 0x7f0d0925 float:1.8746863E38 double:1.053130934E-314;
        r4 = "Search";
        r3 = org.telegram.messenger.LocaleController.getString(r4, r3);
        r2.setSearchFieldHint(r3);
        r2 = r7.searchItem;
        r2.setVisibility(r8);
    L_0x0135:
        r2 = NUM; // 0x7var_ac float:1.7944927E38 double:1.052935588E-314;
        r2 = r1.addItem(r9, r2);
        r7.headerItem = r2;
        r2 = r7.headerItem;
        r3 = NUM; // 0x7f0d002b float:1.8742202E38 double:1.053129799E-314;
        r4 = "AccDescrMoreOptions";
        r3 = org.telegram.messenger.LocaleController.getString(r4, r3);
        r2.setContentDescription(r3);
        r2 = r7.currentUser;
        if (r2 == 0) goto L_0x0184;
    L_0x0150:
        r2 = r7.headerItem;
        r3 = 32;
        r4 = NUM; // 0x7var_e float:1.794532E38 double:1.052935684E-314;
        r5 = NUM; // 0x7f0d01e2 float:1.8743092E38 double:1.0531300157E-314;
        r6 = "Call";
        r5 = org.telegram.messenger.LocaleController.getString(r6, r5);
        r2.addSubItem(r3, r4, r5);
        r2 = r32.getMessagesController();
        r3 = r7.currentUser;
        r3 = r3.id;
        r2 = r2.getUserFull(r3);
        if (r2 == 0) goto L_0x017d;
    L_0x0171:
        r2 = r2.phone_calls_available;
        if (r2 == 0) goto L_0x017d;
    L_0x0175:
        r2 = r7.headerItem;
        r3 = 32;
        r2.showSubItem(r3);
        goto L_0x0184;
    L_0x017d:
        r2 = r7.headerItem;
        r3 = 32;
        r2.hideSubItem(r3);
    L_0x0184:
        r2 = NUM; // 0x7var_ac float:1.7944927E38 double:1.052935588E-314;
        r2 = r1.addItem(r9, r2);
        r7.editTextItem = r2;
        r2 = r7.editTextItem;
        r2.setTag(r11);
        r2 = r7.editTextItem;
        r2.setVisibility(r8);
        r2 = new android.text.SpannableStringBuilder;
        r3 = NUM; // 0x7f0d01cc float:1.8743048E38 double:1.053130005E-314;
        r4 = "Bold";
        r3 = org.telegram.messenger.LocaleController.getString(r4, r3);
        r2.<init>(r3);
        r3 = new org.telegram.ui.Components.TypefaceSpan;
        r12 = "fonts/rmedium.ttf";
        r4 = org.telegram.messenger.AndroidUtilities.getTypeface(r12);
        r3.<init>(r4);
        r4 = r2.length();
        r5 = 33;
        r2.setSpan(r3, r9, r4, r5);
        r3 = r7.editTextItem;
        r4 = 50;
        r3.addSubItem(r4, r2);
        r2 = new android.text.SpannableStringBuilder;
        r3 = NUM; // 0x7f0d054a float:1.874486E38 double:1.0531304465E-314;
        r4 = "Italic";
        r3 = org.telegram.messenger.LocaleController.getString(r4, r3);
        r2.<init>(r3);
        r3 = new org.telegram.ui.Components.TypefaceSpan;
        r4 = "fonts/ritalic.ttf";
        r4 = org.telegram.messenger.AndroidUtilities.getTypeface(r4);
        r3.<init>(r4);
        r4 = r2.length();
        r2.setSpan(r3, r9, r4, r5);
        r3 = r7.editTextItem;
        r13 = 51;
        r3.addSubItem(r13, r2);
        r2 = new android.text.SpannableStringBuilder;
        r3 = NUM; // 0x7f0d0608 float:1.8745246E38 double:1.0531305404E-314;
        r4 = "Mono";
        r3 = org.telegram.messenger.LocaleController.getString(r4, r3);
        r2.<init>(r3);
        r3 = new org.telegram.ui.Components.TypefaceSpan;
        r4 = android.graphics.Typeface.MONOSPACE;
        r3.<init>(r4);
        r4 = r2.length();
        r2.setSpan(r3, r9, r4, r5);
        r3 = r7.editTextItem;
        r4 = 52;
        r3.addSubItem(r4, r2);
        r2 = r7.currentEncryptedChat;
        r14 = 16;
        if (r2 == 0) goto L_0x021c;
    L_0x0210:
        if (r2 == 0) goto L_0x0274;
    L_0x0212:
        r2 = r2.layer;
        r2 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r2);
        r3 = 101; // 0x65 float:1.42E-43 double:5.0E-322;
        if (r2 < r3) goto L_0x0274;
    L_0x021c:
        r2 = new android.text.SpannableStringBuilder;
        r3 = NUM; // 0x7f0d09f7 float:1.8747289E38 double:1.053131038E-314;
        r4 = "Strike";
        r3 = org.telegram.messenger.LocaleController.getString(r4, r3);
        r2.<init>(r3);
        r3 = new org.telegram.ui.Components.TextStyleSpan$TextStyleRun;
        r3.<init>();
        r4 = r3.flags;
        r4 = r4 | r8;
        r3.flags = r4;
        r4 = new org.telegram.ui.Components.TextStyleSpan;
        r4.<init>(r3);
        r3 = r2.length();
        r5 = 33;
        r2.setSpan(r4, r9, r3, r5);
        r3 = r7.editTextItem;
        r4 = 55;
        r3.addSubItem(r4, r2);
        r2 = new android.text.SpannableStringBuilder;
        r3 = NUM; // 0x7f0d0a5f float:1.87475E38 double:1.0531310893E-314;
        r4 = "Underline";
        r3 = org.telegram.messenger.LocaleController.getString(r4, r3);
        r2.<init>(r3);
        r3 = new org.telegram.ui.Components.TextStyleSpan$TextStyleRun;
        r3.<init>();
        r4 = r3.flags;
        r4 = r4 | r14;
        r3.flags = r4;
        r4 = new org.telegram.ui.Components.TextStyleSpan;
        r4.<init>(r3);
        r3 = r2.length();
        r2.setSpan(r4, r9, r3, r5);
        r3 = r7.editTextItem;
        r4 = 56;
        r3.addSubItem(r4, r2);
    L_0x0274:
        r2 = r7.editTextItem;
        r3 = 53;
        r4 = NUM; // 0x7f0d0316 float:1.8743717E38 double:1.053130168E-314;
        r5 = "CreateLink";
        r4 = org.telegram.messenger.LocaleController.getString(r5, r4);
        r2.addSubItem(r3, r4);
        r2 = r7.editTextItem;
        r3 = 54;
        r4 = NUM; // 0x7f0d08c7 float:1.8746672E38 double:1.0531308877E-314;
        r5 = "Regular";
        r4 = org.telegram.messenger.LocaleController.getString(r5, r4);
        r2.addSubItem(r3, r4);
        r2 = r7.searchItem;
        if (r2 == 0) goto L_0x02ab;
    L_0x0298:
        r2 = r7.headerItem;
        r3 = 40;
        r4 = NUM; // 0x7var_a3 float:1.7945428E38 double:1.05293571E-314;
        r5 = NUM; // 0x7f0d0925 float:1.8746863E38 double:1.053130934E-314;
        r6 = "Search";
        r5 = org.telegram.messenger.LocaleController.getString(r6, r5);
        r2.addSubItem(r3, r4, r5);
    L_0x02ab:
        r2 = r7.currentChat;
        if (r2 == 0) goto L_0x02c6;
    L_0x02af:
        r2 = r2.creator;
        if (r2 != 0) goto L_0x02c6;
    L_0x02b3:
        r2 = r7.headerItem;
        r3 = 21;
        r4 = NUM; // 0x7var_a float:1.794541E38 double:1.0529357056E-314;
        r5 = NUM; // 0x7f0d08d7 float:1.8746705E38 double:1.0531308956E-314;
        r6 = "ReportChat";
        r5 = org.telegram.messenger.LocaleController.getString(r6, r5);
        r2.addSubItem(r3, r4, r5);
    L_0x02c6:
        r2 = r7.currentUser;
        r15 = 17;
        if (r2 == 0) goto L_0x02d9;
    L_0x02cc:
        r2 = r7.headerItem;
        r3 = NUM; // 0x7var_a float:1.7945312E38 double:1.052935682E-314;
        r4 = "";
        r2 = r2.addSubItem(r15, r3, r4);
        r7.addContactItem = r2;
    L_0x02d9:
        r2 = r7.currentEncryptedChat;
        if (r2 == 0) goto L_0x02f3;
    L_0x02dd:
        r2 = r7.headerItem;
        r3 = 13;
        r4 = NUM; // 0x7var_a9 float:1.794544E38 double:1.052935713E-314;
        r5 = NUM; // 0x7f0d0989 float:1.8747066E38 double:1.0531309836E-314;
        r6 = "SetTimer";
        r5 = org.telegram.messenger.LocaleController.getString(r6, r5);
        r2 = r2.addSubItem(r3, r4, r5);
        r7.timeItem2 = r2;
    L_0x02f3:
        r2 = r7.currentChat;
        r2 = org.telegram.messenger.ChatObject.isChannel(r2);
        if (r2 == 0) goto L_0x030b;
    L_0x02fb:
        r2 = r7.currentChat;
        if (r2 == 0) goto L_0x031e;
    L_0x02ff:
        r3 = r2.megagroup;
        if (r3 == 0) goto L_0x031e;
    L_0x0303:
        r2 = r2.username;
        r2 = android.text.TextUtils.isEmpty(r2);
        if (r2 == 0) goto L_0x031e;
    L_0x030b:
        r2 = r7.headerItem;
        r3 = 15;
        r4 = NUM; // 0x7var_ float:1.7945326E38 double:1.0529356853E-314;
        r5 = NUM; // 0x7f0d02d8 float:1.8743591E38 double:1.053130137E-314;
        r6 = "ClearHistory";
        r5 = org.telegram.messenger.LocaleController.getString(r6, r5);
        r2.addSubItem(r3, r4, r5);
    L_0x031e:
        r2 = r7.currentUser;
        if (r2 == 0) goto L_0x0326;
    L_0x0322:
        r2 = r2.self;
        if (r2 != 0) goto L_0x0333;
    L_0x0326:
        r2 = r7.headerItem;
        r3 = 18;
        r4 = NUM; // 0x7var_e float:1.7945385E38 double:1.0529356997E-314;
        r2 = r2.addSubItem(r3, r4, r11);
        r7.muteItem = r2;
    L_0x0333:
        r2 = r7.currentChat;
        r2 = org.telegram.messenger.ChatObject.isChannel(r2);
        if (r2 == 0) goto L_0x0371;
    L_0x033b:
        r2 = r7.currentChat;
        r3 = r2.creator;
        if (r3 != 0) goto L_0x0371;
    L_0x0341:
        r2 = org.telegram.messenger.ChatObject.isNotInChat(r2);
        if (r2 != 0) goto L_0x03a4;
    L_0x0347:
        r2 = r7.currentChat;
        r2 = r2.megagroup;
        if (r2 == 0) goto L_0x035f;
    L_0x034d:
        r2 = r7.headerItem;
        r3 = NUM; // 0x7var_ float:1.7945367E38 double:1.052935695E-314;
        r4 = NUM; // 0x7f0d0357 float:1.8743849E38 double:1.0531302E-314;
        r5 = "DeleteAndExit";
        r4 = org.telegram.messenger.LocaleController.getString(r5, r4);
        r2.addSubItem(r14, r3, r4);
        goto L_0x03a4;
    L_0x035f:
        r2 = r7.headerItem;
        r3 = NUM; // 0x7var_ float:1.7945367E38 double:1.052935695E-314;
        r4 = NUM; // 0x7f0d0577 float:1.8744952E38 double:1.0531304687E-314;
        r5 = "LeaveChannelMenu";
        r4 = org.telegram.messenger.LocaleController.getString(r5, r4);
        r2.addSubItem(r14, r3, r4);
        goto L_0x03a4;
    L_0x0371:
        r2 = r7.currentChat;
        r2 = org.telegram.messenger.ChatObject.isChannel(r2);
        if (r2 != 0) goto L_0x03a4;
    L_0x0379:
        r2 = r7.currentChat;
        if (r2 == 0) goto L_0x0393;
    L_0x037d:
        r2 = r7.isBroadcast;
        if (r2 != 0) goto L_0x0393;
    L_0x0381:
        r2 = r7.headerItem;
        r3 = NUM; // 0x7var_ float:1.7945367E38 double:1.052935695E-314;
        r4 = NUM; // 0x7f0d0357 float:1.8743849E38 double:1.0531302E-314;
        r5 = "DeleteAndExit";
        r4 = org.telegram.messenger.LocaleController.getString(r5, r4);
        r2.addSubItem(r14, r3, r4);
        goto L_0x03a4;
    L_0x0393:
        r2 = r7.headerItem;
        r3 = NUM; // 0x7var_ float:1.7945334E38 double:1.0529356873E-314;
        r4 = NUM; // 0x7f0d035d float:1.8743861E38 double:1.053130203E-314;
        r5 = "DeleteChatUser";
        r4 = org.telegram.messenger.LocaleController.getString(r5, r4);
        r2.addSubItem(r14, r3, r4);
    L_0x03a4:
        r2 = r7.currentUser;
        if (r2 == 0) goto L_0x03bf;
    L_0x03a8:
        r2 = r2.self;
        if (r2 == 0) goto L_0x03bf;
    L_0x03ac:
        r2 = r7.headerItem;
        r3 = 24;
        r4 = NUM; // 0x7var_f float:1.7945355E38 double:1.0529356923E-314;
        r5 = NUM; // 0x7f0d00ba float:1.8742492E38 double:1.0531298694E-314;
        r6 = "AddShortcut";
        r5 = org.telegram.messenger.LocaleController.getString(r6, r5);
        r2.addSubItem(r3, r4, r5);
    L_0x03bf:
        r2 = r7.currentUser;
        if (r2 == 0) goto L_0x03f4;
    L_0x03c3:
        r3 = r7.currentEncryptedChat;
        if (r3 != 0) goto L_0x03f4;
    L_0x03c7:
        r2 = r2.bot;
        if (r2 == 0) goto L_0x03f4;
    L_0x03cb:
        r2 = r7.headerItem;
        r3 = 31;
        r4 = NUM; // 0x7var_c float:1.7945284E38 double:1.052935675E-314;
        r5 = NUM; // 0x7f0d01d4 float:1.8743064E38 double:1.053130009E-314;
        r6 = "BotSettings";
        r5 = org.telegram.messenger.LocaleController.getString(r6, r5);
        r2.addSubItem(r3, r4, r5);
        r2 = r7.headerItem;
        r3 = 30;
        r4 = NUM; // 0x7var_d float:1.7945253E38 double:1.0529356676E-314;
        r5 = NUM; // 0x7f0d01cf float:1.8743054E38 double:1.0531300063E-314;
        r6 = "BotHelp";
        r5 = org.telegram.messenger.LocaleController.getString(r6, r5);
        r2.addSubItem(r3, r4, r5);
        r32.updateBotButtons();
    L_0x03f4:
        r32.updateTitle();
        r2 = r7.avatarContainer;
        r2.updateOnlineCount();
        r2 = r7.avatarContainer;
        r2.updateSubtitle();
        r32.updateTitleIcons();
        r2 = 14;
        r3 = NUM; // 0x7var_ac float:1.7944927E38 double:1.052935588E-314;
        r1 = r1.addItem(r2, r3);
        r1 = r1.setOverrideMenuClick(r10);
        r1 = r1.setAllowCloseAnimation(r9);
        r7.attachItem = r1;
        r1 = r7.attachItem;
        r1.setVisibility(r8);
        r1 = r7.actionModeViews;
        r1.clear();
        r1 = r7.inPreviewMode;
        if (r1 == 0) goto L_0x0430;
    L_0x0425:
        r1 = r7.headerItem;
        r2 = 0;
        r1.setAlpha(r2);
        r1 = r7.attachItem;
        r1.setAlpha(r2);
    L_0x0430:
        r1 = r7.actionBar;
        r1 = r1.createActionMode();
        r2 = new org.telegram.ui.Components.NumberTextView;
        r3 = r1.getContext();
        r2.<init>(r3);
        r7.selectedMessagesCountTextView = r2;
        r2 = r7.selectedMessagesCountTextView;
        r3 = 18;
        r2.setTextSize(r3);
        r2 = r7.selectedMessagesCountTextView;
        r3 = org.telegram.messenger.AndroidUtilities.getTypeface(r12);
        r2.setTypeface(r3);
        r2 = r7.selectedMessagesCountTextView;
        r3 = "actionBarActionModeDefaultIcon";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r2.setTextColor(r3);
        r2 = r7.selectedMessagesCountTextView;
        r16 = 0;
        r17 = -1;
        r18 = NUM; // 0x3var_ float:1.0 double:5.263544247E-315;
        r19 = 65;
        r20 = 0;
        r21 = 0;
        r22 = 0;
        r3 = org.telegram.ui.Components.LayoutHelper.createLinear(r16, r17, r18, r19, r20, r21, r22);
        r1.addView(r2, r3);
        r2 = r7.selectedMessagesCountTextView;
        r3 = org.telegram.ui.-$$Lambda$ChatActivity$NimgLxaIUxUA1P59a4CSYNRrn9s.INSTANCE;
        r2.setOnTouchListener(r3);
        r2 = r7.currentEncryptedChat;
        r6 = 23;
        r3 = NUM; // 0x42580000 float:54.0 double:5.499263994E-315;
        if (r2 != 0) goto L_0x0508;
    L_0x0482:
        r2 = r7.actionModeViews;
        r4 = NUM; // 0x7var_ float:1.7945339E38 double:1.0529356883E-314;
        r5 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r14 = NUM; // 0x7f0d039f float:1.8743995E38 double:1.0531302355E-314;
        r8 = "Edit";
        r8 = org.telegram.messenger.LocaleController.getString(r8, r14);
        r4 = r1.addItemWithWidth(r6, r4, r5, r8);
        r2.add(r4);
        r2 = r7.actionModeViews;
        r4 = 22;
        r5 = NUM; // 0x7var_ float:1.794534E38 double:1.052935689E-314;
        r8 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r14 = NUM; // 0x7f0d00c3 float:1.874251E38 double:1.053129874E-314;
        r13 = "AddToFavorites";
        r13 = org.telegram.messenger.LocaleController.getString(r13, r14);
        r4 = r1.addItemWithWidth(r4, r5, r8, r13);
        r2.add(r4);
        r2 = r7.actionModeViews;
        r4 = 10;
        r5 = NUM; // 0x7var_ float:1.7945332E38 double:1.052935687E-314;
        r8 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r13 = NUM; // 0x7f0d0310 float:1.8743705E38 double:1.053130165E-314;
        r14 = "Copy";
        r13 = org.telegram.messenger.LocaleController.getString(r14, r13);
        r4 = r1.addItemWithWidth(r4, r5, r8, r13);
        r2.add(r4);
        r2 = r7.actionModeViews;
        r4 = 11;
        r5 = NUM; // 0x7var_ float:1.7945343E38 double:1.0529356893E-314;
        r8 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r13 = NUM; // 0x7f0d0481 float:1.8744453E38 double:1.053130347E-314;
        r14 = "Forward";
        r13 = org.telegram.messenger.LocaleController.getString(r14, r13);
        r4 = r1.addItemWithWidth(r4, r5, r8, r13);
        r2.add(r4);
        r2 = r7.actionModeViews;
        r4 = 12;
        r5 = NUM; // 0x7var_ float:1.7945334E38 double:1.0529356873E-314;
        r3 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r8 = NUM; // 0x7f0d0350 float:1.8743835E38 double:1.0531301965E-314;
        r13 = "Delete";
        r8 = org.telegram.messenger.LocaleController.getString(r13, r8);
        r3 = r1.addItemWithWidth(r4, r5, r3, r8);
        r2.add(r3);
        goto L_0x0572;
    L_0x0508:
        r2 = r7.actionModeViews;
        r4 = NUM; // 0x7var_ float:1.7945339E38 double:1.0529356883E-314;
        r5 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r8 = NUM; // 0x7f0d039f float:1.8743995E38 double:1.0531302355E-314;
        r13 = "Edit";
        r8 = org.telegram.messenger.LocaleController.getString(r13, r8);
        r4 = r1.addItemWithWidth(r6, r4, r5, r8);
        r2.add(r4);
        r2 = r7.actionModeViews;
        r4 = 22;
        r5 = NUM; // 0x7var_ float:1.794534E38 double:1.052935689E-314;
        r8 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r13 = NUM; // 0x7f0d00c3 float:1.874251E38 double:1.053129874E-314;
        r14 = "AddToFavorites";
        r13 = org.telegram.messenger.LocaleController.getString(r14, r13);
        r4 = r1.addItemWithWidth(r4, r5, r8, r13);
        r2.add(r4);
        r2 = r7.actionModeViews;
        r4 = 10;
        r5 = NUM; // 0x7var_ float:1.7945332E38 double:1.052935687E-314;
        r8 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r13 = NUM; // 0x7f0d0310 float:1.8743705E38 double:1.053130165E-314;
        r14 = "Copy";
        r13 = org.telegram.messenger.LocaleController.getString(r14, r13);
        r4 = r1.addItemWithWidth(r4, r5, r8, r13);
        r2.add(r4);
        r2 = r7.actionModeViews;
        r4 = 12;
        r5 = NUM; // 0x7var_ float:1.7945334E38 double:1.0529356873E-314;
        r3 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r8 = NUM; // 0x7f0d0350 float:1.8743835E38 double:1.0531301965E-314;
        r13 = "Delete";
        r8 = org.telegram.messenger.LocaleController.getString(r13, r8);
        r3 = r1.addItemWithWidth(r4, r5, r3, r8);
        r2.add(r3);
    L_0x0572:
        r2 = r1.getItem(r6);
        r3 = r7.canEditMessagesCount;
        if (r3 != r10) goto L_0x058f;
    L_0x057a:
        r3 = r7.selectedMessagesIds;
        r3 = r3[r9];
        r3 = r3.size();
        r4 = r7.selectedMessagesIds;
        r4 = r4[r10];
        r4 = r4.size();
        r3 = r3 + r4;
        if (r3 != r10) goto L_0x058f;
    L_0x058d:
        r3 = 0;
        goto L_0x0591;
    L_0x058f:
        r3 = 8;
    L_0x0591:
        r2.setVisibility(r3);
        r2 = 10;
        r2 = r1.getItem(r2);
        r3 = r7.selectedMessagesCanCopyIds;
        r3 = r3[r9];
        r3 = r3.size();
        r4 = r7.selectedMessagesCanCopyIds;
        r4 = r4[r10];
        r4 = r4.size();
        r3 = r3 + r4;
        if (r3 == 0) goto L_0x05af;
    L_0x05ad:
        r3 = 0;
        goto L_0x05b1;
    L_0x05af:
        r3 = 8;
    L_0x05b1:
        r2.setVisibility(r3);
        r2 = 22;
        r2 = r1.getItem(r2);
        r3 = r7.selectedMessagesCanStarIds;
        r3 = r3[r9];
        r3 = r3.size();
        r4 = r7.selectedMessagesCanStarIds;
        r4 = r4[r10];
        r4 = r4.size();
        r3 = r3 + r4;
        if (r3 == 0) goto L_0x05cf;
    L_0x05cd:
        r3 = 0;
        goto L_0x05d1;
    L_0x05cf:
        r3 = 8;
    L_0x05d1:
        r2.setVisibility(r3);
        r2 = 12;
        r1 = r1.getItem(r2);
        r2 = r7.cantDeleteMessagesCount;
        if (r2 != 0) goto L_0x05e0;
    L_0x05de:
        r2 = 0;
        goto L_0x05e2;
    L_0x05e0:
        r2 = 8;
    L_0x05e2:
        r1.setVisibility(r2);
        r32.checkActionBarMenu();
        r1 = new org.telegram.ui.ChatActivity$7;
        r1.<init>();
        r7.scrimPaint = r1;
        r1 = new org.telegram.ui.ChatActivity$8;
        r1.<init>(r0);
        r7.fragmentView = r1;
        r1 = r7.fragmentView;
        r1 = (org.telegram.ui.Components.SizeNotifierFrameLayout) r1;
        r7.contentView = r1;
        r1 = r7.contentView;
        r2 = org.telegram.ui.ActionBar.Theme.getCachedWallpaper();
        r3 = org.telegram.ui.ActionBar.Theme.isWallpaperMotion();
        r1.setBackgroundImage(r2, r3);
        r1 = new android.widget.FrameLayout;
        r1.<init>(r0);
        r7.emptyViewContainer = r1;
        r1 = r7.emptyViewContainer;
        r8 = 4;
        r1.setVisibility(r8);
        r1 = r7.contentView;
        r2 = r7.emptyViewContainer;
        r13 = -2;
        r14 = -1;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r14, r13, r15);
        r1.addView(r2, r3);
        r1 = r7.emptyViewContainer;
        r2 = org.telegram.ui.-$$Lambda$ChatActivity$hcAWiiBslensQzGGfNwnu6FWkPI.INSTANCE;
        r1.setOnTouchListener(r2);
        r1 = r7.currentEncryptedChat;
        r5 = NUM; // 0x41600000 float:14.0 double:5.41896386E-315;
        if (r1 != 0) goto L_0x070c;
    L_0x0630:
        r1 = r7.currentUser;
        if (r1 == 0) goto L_0x0638;
    L_0x0634:
        r1 = r1.self;
        if (r1 != 0) goto L_0x0640;
    L_0x0638:
        r1 = r7.currentChat;
        if (r1 == 0) goto L_0x0672;
    L_0x063c:
        r1 = r1.creator;
        if (r1 == 0) goto L_0x0672;
    L_0x0640:
        r1 = new org.telegram.ui.Components.ChatBigEmptyView;
        r2 = r7.currentChat;
        if (r2 == 0) goto L_0x0648;
    L_0x0646:
        r2 = 1;
        goto L_0x0649;
    L_0x0648:
        r2 = 2;
    L_0x0649:
        r1.<init>(r0, r2);
        r7.bigEmptyView = r1;
        r1 = r7.emptyViewContainer;
        r2 = r7.bigEmptyView;
        r3 = new android.widget.FrameLayout$LayoutParams;
        r3.<init>(r13, r13, r15);
        r1.addView(r2, r3);
        r1 = r7.currentChat;
        if (r1 == 0) goto L_0x075e;
    L_0x065e:
        r1 = r7.bigEmptyView;
        r2 = NUM; // 0x7f0d04eb float:1.8744668E38 double:1.0531303996E-314;
        r3 = "GroupEmptyTitle1";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r2 = org.telegram.messenger.AndroidUtilities.replaceTags(r2);
        r1.setStatusText(r2);
        goto L_0x075e;
    L_0x0672:
        r1 = new android.widget.TextView;
        r1.<init>(r0);
        r7.emptyView = r1;
        r1 = r7.currentUser;
        if (r1 == 0) goto L_0x06a3;
    L_0x067d:
        r2 = r1.id;
        r3 = 777000; // 0xbdb28 float:1.088809E-39 double:3.83889E-318;
        if (r2 == r3) goto L_0x06a3;
    L_0x0684:
        r3 = 429000; // 0x68bc8 float:6.01157E-40 double:2.11954E-318;
        if (r2 == r3) goto L_0x06a3;
    L_0x0689:
        r3 = 4244000; // 0x40CLASSNAME float:5.94711E-39 double:2.0968146E-317;
        if (r2 == r3) goto L_0x06a3;
    L_0x068e:
        r1 = org.telegram.messenger.MessagesController.isSupportUser(r1);
        if (r1 == 0) goto L_0x06a3;
    L_0x0694:
        r1 = r7.emptyView;
        r2 = NUM; // 0x7f0d04df float:1.8744644E38 double:1.0531303936E-314;
        r3 = "GotAQuestion";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r1.setText(r2);
        goto L_0x06b1;
    L_0x06a3:
        r1 = r7.emptyView;
        r2 = NUM; // 0x7f0d0645 float:1.874537E38 double:1.0531305705E-314;
        r3 = "NoMessages";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r1.setText(r2);
    L_0x06b1:
        r1 = r7.emptyView;
        r1.setTextSize(r10, r5);
        r1 = r7.emptyView;
        r1.setGravity(r15);
        r1 = r7.emptyView;
        r2 = "chat_serviceText";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setTextColor(r2);
        r1 = r7.emptyView;
        r2 = NUM; // 0x7var_ float:1.794583E38 double:1.052935808E-314;
        r1.setBackgroundResource(r2);
        r1 = r7.emptyView;
        r1 = r1.getBackground();
        r2 = org.telegram.ui.ActionBar.Theme.colorFilter;
        r1.setColorFilter(r2);
        r1 = r7.emptyView;
        r2 = org.telegram.messenger.AndroidUtilities.getTypeface(r12);
        r1.setTypeface(r2);
        r1 = r7.emptyView;
        r2 = NUM; // 0x41200000 float:10.0 double:5.398241246E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r3 = NUM; // 0x40000000 float:2.0 double:5.304989477E-315;
        r3 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r4 = NUM; // 0x41200000 float:10.0 double:5.398241246E-315;
        r4 = org.telegram.messenger.AndroidUtilities.dp(r4);
        r19 = NUM; // 0x40400000 float:3.0 double:5.325712093E-315;
        r5 = org.telegram.messenger.AndroidUtilities.dp(r19);
        r1.setPadding(r2, r3, r4, r5);
        r1 = r7.emptyViewContainer;
        r2 = r7.emptyView;
        r3 = new android.widget.FrameLayout$LayoutParams;
        r3.<init>(r13, r13, r15);
        r1.addView(r2, r3);
        goto L_0x075e;
    L_0x070c:
        r1 = new org.telegram.ui.Components.ChatBigEmptyView;
        r1.<init>(r0, r9);
        r7.bigEmptyView = r1;
        r1 = r7.currentEncryptedChat;
        r1 = r1.admin_id;
        r2 = r32.getUserConfig();
        r2 = r2.getClientUserId();
        if (r1 != r2) goto L_0x073a;
    L_0x0721:
        r1 = r7.bigEmptyView;
        r2 = NUM; // 0x7f0d03e8 float:1.8744143E38 double:1.0531302716E-314;
        r3 = new java.lang.Object[r10];
        r4 = r7.currentUser;
        r4 = org.telegram.messenger.UserObject.getFirstName(r4);
        r3[r9] = r4;
        r4 = "EncryptedPlaceholderTitleOutgoing";
        r2 = org.telegram.messenger.LocaleController.formatString(r4, r2, r3);
        r1.setStatusText(r2);
        goto L_0x0752;
    L_0x073a:
        r1 = r7.bigEmptyView;
        r2 = NUM; // 0x7f0d03e7 float:1.874414E38 double:1.053130271E-314;
        r3 = new java.lang.Object[r10];
        r4 = r7.currentUser;
        r4 = org.telegram.messenger.UserObject.getFirstName(r4);
        r3[r9] = r4;
        r4 = "EncryptedPlaceholderTitleIncoming";
        r2 = org.telegram.messenger.LocaleController.formatString(r4, r2, r3);
        r1.setStatusText(r2);
    L_0x0752:
        r1 = r7.emptyViewContainer;
        r2 = r7.bigEmptyView;
        r3 = new android.widget.FrameLayout$LayoutParams;
        r3.<init>(r13, r13, r15);
        r1.addView(r2, r3);
    L_0x075e:
        r1 = r7.chatActivityEnterView;
        if (r1 == 0) goto L_0x0775;
    L_0x0762:
        r1.onDestroy();
        r1 = r7.chatActivityEnterView;
        r1 = r1.isEditingMessage();
        if (r1 != 0) goto L_0x0775;
    L_0x076d:
        r1 = r7.chatActivityEnterView;
        r1 = r1.getFieldText();
        r5 = r1;
        goto L_0x0776;
    L_0x0775:
        r5 = r11;
    L_0x0776:
        r1 = r7.mentionsAdapter;
        if (r1 == 0) goto L_0x077d;
    L_0x077a:
        r1.onDestroy();
    L_0x077d:
        r1 = new org.telegram.ui.ChatActivity$9;
        r1.<init>(r0);
        r7.chatListView = r1;
        r1 = r7.currentEncryptedChat;
        if (r1 == 0) goto L_0x0793;
    L_0x0788:
        r1 = android.os.Build.VERSION.SDK_INT;
        r2 = 19;
        if (r1 < r2) goto L_0x0793;
    L_0x078e:
        r1 = r7.chatListView;
        r1.setImportantForAccessibility(r8);
    L_0x0793:
        r1 = r7.chatListView;
        r1.setInstantClick(r10);
        r1 = r7.chatListView;
        r1.setDisableHighlightState(r10);
        r1 = r7.chatListView;
        r2 = java.lang.Integer.valueOf(r10);
        r1.setTag(r2);
        r1 = r7.chatListView;
        r1.setVerticalScrollBarEnabled(r10);
        r1 = r7.chatListView;
        r2 = new org.telegram.ui.ChatActivity$ChatActivityAdapter;
        r2.<init>(r0);
        r7.chatAdapter = r2;
        r1.setAdapter(r2);
        r1 = r7.chatListView;
        r1.setClipToPadding(r9);
        r1 = r7.chatListView;
        r2 = NUM; // 0x40800000 float:4.0 double:5.34643471E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r3 = NUM; // 0x40400000 float:3.0 double:5.325712093E-315;
        r3 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r1.setPadding(r9, r2, r9, r3);
        r1 = r7.chatListView;
        r1.setItemAnimator(r11);
        r1 = r7.chatListView;
        r1.setLayoutAnimation(r11);
        r4 = new org.telegram.ui.ChatActivity$10;
        r19 = 1000; // 0x3e8 float:1.401E-42 double:4.94E-321;
        r21 = 1;
        r22 = 1;
        r1 = r4;
        r2 = r32;
        r3 = r33;
        r13 = r4;
        r4 = r19;
        r23 = r5;
        r11 = NUM; // 0x41600000 float:14.0 double:5.41896386E-315;
        r5 = r21;
        r6 = r22;
        r1.<init>(r3, r4, r5, r6);
        r7.chatLayoutManager = r13;
        r1 = r7.chatLayoutManager;
        r2 = new org.telegram.ui.ChatActivity$11;
        r2.<init>();
        r1.setSpanSizeLookup(r2);
        r1 = r7.chatListView;
        r2 = r7.chatLayoutManager;
        r1.setLayoutManager(r2);
        r1 = r7.chatListView;
        r2 = new org.telegram.ui.ChatActivity$12;
        r2.<init>();
        r1.addItemDecoration(r2);
        r1 = r7.contentView;
        r2 = r7.chatListView;
        r3 = -NUM; // 0xffffffffbvar_ float:-1.0 double:NaN;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r14, r3);
        r1.addView(r2, r3);
        r1 = r7.chatListView;
        r2 = r7.onItemLongClickListener;
        r1.setOnItemLongClickListener(r2);
        r1 = r7.chatListView;
        r2 = r7.onItemClickListener;
        r1.setOnItemClickListener(r2);
        r1 = r7.chatListView;
        r2 = new org.telegram.ui.ChatActivity$13;
        r2.<init>();
        r1.setOnScrollListener(r2);
        r1 = new android.widget.FrameLayout;
        r1.<init>(r0);
        r7.progressView = r1;
        r1 = r7.progressView;
        r1.setVisibility(r8);
        r1 = r7.contentView;
        r2 = r7.progressView;
        r3 = 51;
        r4 = org.telegram.ui.Components.LayoutHelper.createFrame(r14, r14, r3);
        r1.addView(r2, r4);
        r1 = new android.view.View;
        r1.<init>(r0);
        r7.progressView2 = r1;
        r1 = r7.progressView2;
        r2 = NUM; // 0x7var_a float:1.7945831E38 double:1.0529358084E-314;
        r1.setBackgroundResource(r2);
        r1 = r7.progressView2;
        r1 = r1.getBackground();
        r2 = org.telegram.ui.ActionBar.Theme.colorFilter;
        r1.setColorFilter(r2);
        r1 = r7.progressView;
        r2 = r7.progressView2;
        r3 = 36;
        r4 = 36;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r3, r4, r15);
        r1.addView(r2, r3);
        r1 = new org.telegram.ui.Components.RadialProgressView;
        r1.<init>(r0);
        r7.progressBar = r1;
        r1 = r7.progressBar;
        r2 = NUM; // 0x41e00000 float:28.0 double:5.46040909E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r1.setSize(r2);
        r1 = r7.progressBar;
        r2 = "chat_serviceText";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setProgressColor(r2);
        r1 = r7.progressView;
        r2 = r7.progressBar;
        r3 = 32;
        r4 = 32;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r3, r4, r15);
        r1.addView(r2, r3);
        r1 = new org.telegram.ui.ChatActivity$14;
        r1.<init>(r0);
        r7.floatingDateView = r1;
        r1 = r7.floatingDateView;
        r2 = 0;
        r1.setAlpha(r2);
        r1 = r7.contentView;
        r2 = r7.floatingDateView;
        r25 = -2;
        r26 = -NUM; // 0xffffffffCLASSNAME float:-2.0 double:NaN;
        r27 = 49;
        r28 = 0;
        r29 = NUM; // 0x40800000 float:4.0 double:5.34643471E-315;
        r30 = 0;
        r31 = 0;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r25, r26, r27, r28, r29, r30, r31);
        r1.addView(r2, r3);
        r1 = r7.floatingDateView;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$TRtVc5U1jd24GfIVVVdgV24kMHw;
        r2.<init>(r7);
        r1.setOnClickListener(r2);
        r1 = r7.currentEncryptedChat;
        if (r1 != 0) goto L_0x0a32;
    L_0x08d6:
        r1 = new android.widget.FrameLayout;
        r1.<init>(r0);
        r7.pinnedMessageView = r1;
        r1 = r7.pinnedMessageView;
        r2 = java.lang.Integer.valueOf(r10);
        r1.setTag(r2);
        r1 = r7.pinnedMessageView;
        r2 = NUM; // 0x42480000 float:50.0 double:5.49408334E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r2 = -r2;
        r2 = (float) r2;
        r1.setTranslationY(r2);
        r1 = r7.pinnedMessageView;
        r2 = 8;
        r1.setVisibility(r2);
        r1 = r7.pinnedMessageView;
        r2 = NUM; // 0x7var_ float:1.7944655E38 double:1.052935522E-314;
        r1.setBackgroundResource(r2);
        r1 = r7.pinnedMessageView;
        r1 = r1.getBackground();
        r2 = new android.graphics.PorterDuffColorFilter;
        r3 = "chat_topPanelBackground";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r4 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r2.<init>(r3, r4);
        r1.setColorFilter(r2);
        r1 = r7.contentView;
        r2 = r7.pinnedMessageView;
        r3 = 50;
        r4 = 51;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r14, r3, r4);
        r1.addView(r2, r3);
        r1 = r7.pinnedMessageView;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$eO37gXPlV8wUc5mdxL8y-mJBqno;
        r2.<init>(r7);
        r1.setOnClickListener(r2);
        r1 = new android.view.View;
        r1.<init>(r0);
        r7.pinnedLineView = r1;
        r1 = r7.pinnedLineView;
        r2 = "chat_topPanelLine";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setBackgroundColor(r2);
        r1 = r7.pinnedMessageView;
        r2 = r7.pinnedLineView;
        r25 = 2;
        r26 = NUM; // 0x42000000 float:32.0 double:5.4707704E-315;
        r27 = 51;
        r28 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r29 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r30 = 0;
        r31 = 0;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r25, r26, r27, r28, r29, r30, r31);
        r1.addView(r2, r3);
        r1 = new org.telegram.ui.Components.BackupImageView;
        r1.<init>(r0);
        r7.pinnedMessageImageView = r1;
        r1 = r7.pinnedMessageView;
        r2 = r7.pinnedMessageImageView;
        r25 = 32;
        r28 = NUM; // 0x41880000 float:17.0 double:5.431915495E-315;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r25, r26, r27, r28, r29, r30, r31);
        r1.addView(r2, r3);
        r1 = new org.telegram.ui.ActionBar.SimpleTextView;
        r1.<init>(r0);
        r7.pinnedMessageNameTextView = r1;
        r1 = r7.pinnedMessageNameTextView;
        r2 = 14;
        r1.setTextSize(r2);
        r1 = r7.pinnedMessageNameTextView;
        r2 = "chat_topPanelTitle";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setTextColor(r2);
        r1 = r7.pinnedMessageNameTextView;
        r2 = org.telegram.messenger.AndroidUtilities.getTypeface(r12);
        r1.setTypeface(r2);
        r1 = r7.pinnedMessageView;
        r2 = r7.pinnedMessageNameTextView;
        r25 = -1;
        r3 = NUM; // 0x41900000 float:18.0 double:5.43450582E-315;
        r3 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r3 = (float) r3;
        r28 = NUM; // 0x41900000 float:18.0 double:5.43450582E-315;
        r29 = NUM; // 0x40e9999a float:7.3 double:5.380627025E-315;
        r30 = NUM; // 0x42200000 float:40.0 double:5.481131706E-315;
        r26 = r3;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r25, r26, r27, r28, r29, r30, r31);
        r1.addView(r2, r3);
        r1 = new org.telegram.ui.ActionBar.SimpleTextView;
        r1.<init>(r0);
        r7.pinnedMessageTextView = r1;
        r1 = r7.pinnedMessageTextView;
        r2 = 14;
        r1.setTextSize(r2);
        r1 = r7.pinnedMessageTextView;
        r2 = "chat_topPanelMessage";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setTextColor(r2);
        r1 = r7.pinnedMessageView;
        r2 = r7.pinnedMessageTextView;
        r3 = NUM; // 0x41900000 float:18.0 double:5.43450582E-315;
        r3 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r3 = (float) r3;
        r29 = NUM; // 0x41ca6666 float:25.3 double:5.453415206E-315;
        r26 = r3;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r25, r26, r27, r28, r29, r30, r31);
        r1.addView(r2, r3);
        r1 = new android.widget.ImageView;
        r1.<init>(r0);
        r7.closePinned = r1;
        r1 = r7.closePinned;
        r2 = NUM; // 0x7var_ float:1.79453E38 double:1.052935679E-314;
        r1.setImageResource(r2);
        r1 = r7.closePinned;
        r2 = new android.graphics.PorterDuffColorFilter;
        r3 = "chat_topPanelClose";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r4 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r2.<init>(r3, r4);
        r1.setColorFilter(r2);
        r1 = r7.closePinned;
        r2 = android.widget.ImageView.ScaleType.CENTER;
        r1.setScaleType(r2);
        r1 = r7.closePinned;
        r2 = NUM; // 0x7f0d02e2 float:1.8743612E38 double:1.053130142E-314;
        r3 = "Close";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r1.setContentDescription(r2);
        r1 = r7.pinnedMessageView;
        r2 = r7.closePinned;
        r3 = 36;
        r4 = 48;
        r5 = 53;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r3, r4, r5);
        r1.addView(r2, r3);
        r1 = r7.closePinned;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$MC1nlfA7DBtHsUYoqPF_QO9JBh4;
        r2.<init>(r7);
        r1.setOnClickListener(r2);
    L_0x0a32:
        r1 = new org.telegram.ui.ChatActivity$15;
        r1.<init>(r0);
        r7.topChatPanelView = r1;
        r1 = r7.topChatPanelView;
        r2 = java.lang.Integer.valueOf(r10);
        r1.setTag(r2);
        r1 = r7.topChatPanelView;
        r2 = NUM; // 0x42480000 float:50.0 double:5.49408334E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r2 = -r2;
        r2 = (float) r2;
        r1.setTranslationY(r2);
        r1 = r7.topChatPanelView;
        r2 = 8;
        r1.setVisibility(r2);
        r1 = r7.topChatPanelView;
        r2 = NUM; // 0x7var_ float:1.7944655E38 double:1.052935522E-314;
        r1.setBackgroundResource(r2);
        r1 = r7.topChatPanelView;
        r1 = r1.getBackground();
        r2 = new android.graphics.PorterDuffColorFilter;
        r3 = "chat_topPanelBackground";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r4 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r2.<init>(r3, r4);
        r1.setColorFilter(r2);
        r1 = r7.contentView;
        r2 = r7.topChatPanelView;
        r3 = 50;
        r4 = 51;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r14, r3, r4);
        r1.addView(r2, r3);
        r1 = new android.widget.TextView;
        r1.<init>(r0);
        r7.reportSpamButton = r1;
        r1 = r7.reportSpamButton;
        r2 = "chat_reportSpam";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setTextColor(r2);
        r1 = r7.reportSpamButton;
        r2 = "chat_reportSpam";
        r1.setTag(r2);
        r1 = r7.reportSpamButton;
        r1.setTextSize(r10, r11);
        r1 = r7.reportSpamButton;
        r2 = org.telegram.messenger.AndroidUtilities.getTypeface(r12);
        r1.setTypeface(r2);
        r1 = r7.reportSpamButton;
        r1.setSingleLine(r10);
        r1 = r7.reportSpamButton;
        r1.setMaxLines(r10);
        r1 = r7.reportSpamButton;
        r1.setGravity(r15);
        r1 = r7.topChatPanelView;
        r2 = r7.reportSpamButton;
        r25 = -1;
        r26 = -NUM; // 0xffffffffbvar_ float:-1.0 double:NaN;
        r27 = 51;
        r28 = 0;
        r29 = 0;
        r30 = 0;
        r3 = NUM; // 0x3var_ float:1.0 double:5.263544247E-315;
        r3 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r3 = (float) r3;
        r31 = r3;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r25, r26, r27, r28, r29, r30, r31);
        r1.addView(r2, r3);
        r1 = r7.reportSpamButton;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$z4kV81jtLN8yO8nD9oB5qxVjSYQ;
        r2.<init>(r7);
        r1.setOnClickListener(r2);
        r1 = new android.widget.TextView;
        r1.<init>(r0);
        r7.addToContactsButton = r1;
        r1 = r7.addToContactsButton;
        r2 = "chat_addContact";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setTextColor(r2);
        r1 = r7.addToContactsButton;
        r2 = 8;
        r1.setVisibility(r2);
        r1 = r7.addToContactsButton;
        r1.setTextSize(r10, r11);
        r1 = r7.addToContactsButton;
        r2 = org.telegram.messenger.AndroidUtilities.getTypeface(r12);
        r1.setTypeface(r2);
        r1 = r7.addToContactsButton;
        r1.setSingleLine(r10);
        r1 = r7.addToContactsButton;
        r1.setMaxLines(r10);
        r1 = r7.addToContactsButton;
        r2 = NUM; // 0x40800000 float:4.0 double:5.34643471E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r3 = NUM; // 0x40800000 float:4.0 double:5.34643471E-315;
        r3 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r1.setPadding(r2, r9, r3, r9);
        r1 = r7.addToContactsButton;
        r1.setGravity(r15);
        r1 = r7.topChatPanelView;
        r2 = r7.addToContactsButton;
        r3 = NUM; // 0x3var_ float:1.0 double:5.263544247E-315;
        r3 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r3 = (float) r3;
        r31 = r3;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r25, r26, r27, r28, r29, r30, r31);
        r1.addView(r2, r3);
        r1 = r7.addToContactsButton;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$IBbC6tGGvSanxWVehZQ8A5DagBM;
        r2.<init>(r7);
        r1.setOnClickListener(r2);
        r1 = new android.widget.ImageView;
        r1.<init>(r0);
        r7.closeReportSpam = r1;
        r1 = r7.closeReportSpam;
        r2 = NUM; // 0x7var_ float:1.79453E38 double:1.052935679E-314;
        r1.setImageResource(r2);
        r1 = r7.closeReportSpam;
        r2 = new android.graphics.PorterDuffColorFilter;
        r3 = "chat_topPanelClose";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r4 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r2.<init>(r3, r4);
        r1.setColorFilter(r2);
        r1 = r7.closeReportSpam;
        r2 = android.widget.ImageView.ScaleType.CENTER;
        r1.setScaleType(r2);
        r1 = r7.topChatPanelView;
        r2 = r7.closeReportSpam;
        r3 = 48;
        r4 = 48;
        r5 = 53;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r3, r4, r5);
        r1.addView(r2, r3);
        r1 = r7.closeReportSpam;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$8zbREdQOEF7GEfjtwX3ytHFHUU8;
        r2.<init>(r7);
        r1.setOnClickListener(r2);
        r1 = new android.widget.FrameLayout;
        r1.<init>(r0);
        r7.alertView = r1;
        r1 = r7.alertView;
        r2 = java.lang.Integer.valueOf(r10);
        r1.setTag(r2);
        r1 = r7.alertView;
        r2 = NUM; // 0x42480000 float:50.0 double:5.49408334E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r2 = -r2;
        r2 = (float) r2;
        r1.setTranslationY(r2);
        r1 = r7.alertView;
        r2 = 8;
        r1.setVisibility(r2);
        r1 = r7.alertView;
        r2 = NUM; // 0x7var_ float:1.7944655E38 double:1.052935522E-314;
        r1.setBackgroundResource(r2);
        r1 = r7.alertView;
        r1 = r1.getBackground();
        r2 = new android.graphics.PorterDuffColorFilter;
        r3 = "chat_topPanelBackground";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r4 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r2.<init>(r3, r4);
        r1.setColorFilter(r2);
        r1 = r7.contentView;
        r2 = r7.alertView;
        r3 = 50;
        r4 = 51;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r14, r3, r4);
        r1.addView(r2, r3);
        r1 = new android.widget.TextView;
        r1.<init>(r0);
        r7.alertNameTextView = r1;
        r1 = r7.alertNameTextView;
        r1.setTextSize(r10, r11);
        r1 = r7.alertNameTextView;
        r2 = "chat_topPanelTitle";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setTextColor(r2);
        r1 = r7.alertNameTextView;
        r2 = org.telegram.messenger.AndroidUtilities.getTypeface(r12);
        r1.setTypeface(r2);
        r1 = r7.alertNameTextView;
        r1.setSingleLine(r10);
        r1 = r7.alertNameTextView;
        r2 = android.text.TextUtils.TruncateAt.END;
        r1.setEllipsize(r2);
        r1 = r7.alertNameTextView;
        r1.setMaxLines(r10);
        r1 = r7.alertView;
        r2 = r7.alertNameTextView;
        r25 = -2;
        r26 = -NUM; // 0xffffffffCLASSNAME float:-2.0 double:NaN;
        r28 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r29 = NUM; // 0x40a00000 float:5.0 double:5.356796015E-315;
        r30 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r31 = 0;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r25, r26, r27, r28, r29, r30, r31);
        r1.addView(r2, r3);
        r1 = new android.widget.TextView;
        r1.<init>(r0);
        r7.alertTextView = r1;
        r1 = r7.alertTextView;
        r1.setTextSize(r10, r11);
        r1 = r7.alertTextView;
        r2 = "chat_topPanelMessage";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setTextColor(r2);
        r1 = r7.alertTextView;
        r1.setSingleLine(r10);
        r1 = r7.alertTextView;
        r2 = android.text.TextUtils.TruncateAt.END;
        r1.setEllipsize(r2);
        r1 = r7.alertTextView;
        r1.setMaxLines(r10);
        r1 = r7.alertView;
        r2 = r7.alertTextView;
        r29 = NUM; // 0x41b80000 float:23.0 double:5.447457457E-315;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r25, r26, r27, r28, r29, r30, r31);
        r1.addView(r2, r3);
        r1 = new android.widget.FrameLayout;
        r1.<init>(r0);
        r7.pagedownButton = r1;
        r1 = r7.pagedownButton;
        r1.setVisibility(r8);
        r1 = r7.contentView;
        r2 = r7.pagedownButton;
        r25 = 66;
        r26 = NUM; // 0x426CLASSNAME float:59.0 double:5.50573981E-315;
        r27 = 85;
        r28 = 0;
        r29 = 0;
        r30 = -NUM; // 0xffffffffCLASSNAME float:-3.0 double:NaN;
        r31 = NUM; // 0x40a00000 float:5.0 double:5.356796015E-315;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r25, r26, r27, r28, r29, r30, r31);
        r1.addView(r2, r3);
        r1 = r7.pagedownButton;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$HuW961Aw9Nll-8oju6fbIqSGX6M;
        r2.<init>(r7);
        r1.setOnClickListener(r2);
        r1 = new android.widget.FrameLayout;
        r1.<init>(r0);
        r7.mentiondownButton = r1;
        r1 = r7.mentiondownButton;
        r1.setVisibility(r8);
        r1 = r7.contentView;
        r2 = r7.mentiondownButton;
        r25 = 46;
        r30 = NUM; // 0x40e00000 float:7.0 double:5.37751863E-315;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r25, r26, r27, r28, r29, r30, r31);
        r1.addView(r2, r3);
        r1 = r7.mentiondownButton;
        r2 = new org.telegram.ui.ChatActivity$16;
        r2.<init>();
        r1.setOnClickListener(r2);
        r1 = r7.mentiondownButton;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$dkCwhVCDInaA7Dl8jF6PMMZRIZM;
        r2.<init>(r7);
        r1.setOnLongClickListener(r2);
        r1 = r7.isBroadcast;
        r13 = 46;
        if (r1 != 0) goto L_0x0de2;
    L_0x0cbd:
        r1 = new org.telegram.ui.ChatActivity$17;
        r1.<init>(r0);
        r7.mentionContainer = r1;
        r1 = r7.mentionContainer;
        r2 = 8;
        r1.setVisibility(r2);
        r32.updateMessageListAccessibilityVisibility();
        r1 = r7.mentionContainer;
        r1.setWillNotDraw(r9);
        r1 = r7.contentView;
        r2 = r7.mentionContainer;
        r3 = 110; // 0x6e float:1.54E-43 double:5.43E-322;
        r4 = 83;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r14, r3, r4);
        r1.addView(r2, r3);
        r1 = new org.telegram.ui.ChatActivity$18;
        r1.<init>(r0);
        r7.mentionListView = r1;
        r1 = r7.mentionListView;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$yak5l46vc9tFvRUQKeI3JXvh7d0;
        r2.<init>(r7);
        r1.setOnTouchListener(r2);
        r1 = r7.mentionListView;
        r2 = 2;
        r2 = java.lang.Integer.valueOf(r2);
        r1.setTag(r2);
        r1 = new org.telegram.ui.ChatActivity$19;
        r1.<init>(r0);
        r7.mentionLayoutManager = r1;
        r1 = r7.mentionLayoutManager;
        r1.setOrientation(r10);
        r1 = new org.telegram.ui.ChatActivity$20;
        r2 = 100;
        r1.<init>(r0, r2);
        r7.mentionGridLayoutManager = r1;
        r1 = r7.mentionGridLayoutManager;
        r2 = new org.telegram.ui.ChatActivity$21;
        r2.<init>();
        r1.setSpanSizeLookup(r2);
        r1 = r7.mentionListView;
        r2 = new org.telegram.ui.ChatActivity$22;
        r2.<init>();
        r1.addItemDecoration(r2);
        r1 = r7.mentionListView;
        r2 = 0;
        r1.setItemAnimator(r2);
        r1 = r7.mentionListView;
        r1.setLayoutAnimation(r2);
        r1 = r7.mentionListView;
        r1.setClipToPadding(r9);
        r1 = r7.mentionListView;
        r2 = r7.mentionLayoutManager;
        r1.setLayoutManager(r2);
        r1 = r7.mentionListView;
        r2 = 2;
        r1.setOverScrollMode(r2);
        r1 = r7.mentionContainer;
        r2 = r7.mentionListView;
        r3 = -NUM; // 0xffffffffbvar_ float:-1.0 double:NaN;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r14, r3);
        r1.addView(r2, r3);
        r6 = r7.mentionListView;
        r4 = new org.telegram.ui.Adapters.MentionsAdapter;
        r3 = 0;
        r1 = r7.dialog_id;
        r5 = new org.telegram.ui.ChatActivity$23;
        r5.<init>();
        r20 = r1;
        r1 = r4;
        r2 = r33;
        r11 = r4;
        r25 = r5;
        r4 = r20;
        r14 = r6;
        r6 = r25;
        r1.<init>(r2, r3, r4, r6);
        r7.mentionsAdapter = r11;
        r14.setAdapter(r11);
        r1 = r7.currentChat;
        r1 = org.telegram.messenger.ChatObject.isChannel(r1);
        if (r1 == 0) goto L_0x0d81;
    L_0x0d79:
        r1 = r7.currentChat;
        if (r1 == 0) goto L_0x0d88;
    L_0x0d7d:
        r1 = r1.megagroup;
        if (r1 == 0) goto L_0x0d88;
    L_0x0d81:
        r1 = r7.mentionsAdapter;
        r2 = r7.botInfo;
        r1.setBotInfo(r2);
    L_0x0d88:
        r1 = r7.mentionsAdapter;
        r1.setParentFragment(r7);
        r1 = r7.mentionsAdapter;
        r2 = r7.chatInfo;
        r1.setChatInfo(r2);
        r1 = r7.mentionsAdapter;
        r2 = r7.currentChat;
        if (r2 == 0) goto L_0x0d9c;
    L_0x0d9a:
        r2 = 1;
        goto L_0x0d9d;
    L_0x0d9c:
        r2 = 0;
    L_0x0d9d:
        r1.setNeedUsernames(r2);
        r1 = r7.mentionsAdapter;
        r2 = r7.currentEncryptedChat;
        if (r2 == 0) goto L_0x0db1;
    L_0x0da6:
        r2 = r2.layer;
        r2 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r2);
        if (r2 < r13) goto L_0x0daf;
    L_0x0dae:
        goto L_0x0db1;
    L_0x0daf:
        r2 = 0;
        goto L_0x0db2;
    L_0x0db1:
        r2 = 1;
    L_0x0db2:
        r1.setNeedBotContext(r2);
        r1 = r7.mentionsAdapter;
        r2 = r7.currentChat;
        if (r2 == 0) goto L_0x0dbe;
    L_0x0dbb:
        r2 = r7.botsCount;
        goto L_0x0dbf;
    L_0x0dbe:
        r2 = 1;
    L_0x0dbf:
        r1.setBotsCount(r2);
        r1 = r7.mentionListView;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$vQvOODyAJAsviazwjbu2efaVStw;
        r2.<init>(r7);
        r7.mentionsOnItemClickListener = r2;
        r1.setOnItemClickListener(r2);
        r1 = r7.mentionListView;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$oSeTkD6Qi_KxAOE4A0OI5EHtYjI;
        r2.<init>(r7);
        r1.setOnItemLongClickListener(r2);
        r1 = r7.mentionListView;
        r2 = new org.telegram.ui.ChatActivity$24;
        r2.<init>();
        r1.setOnScrollListener(r2);
    L_0x0de2:
        r1 = new android.widget.ImageView;
        r1.<init>(r0);
        r7.pagedownButtonImage = r1;
        r1 = r7.pagedownButtonImage;
        r2 = NUM; // 0x7var_d8 float:1.7945535E38 double:1.052935736E-314;
        r1.setImageResource(r2);
        r1 = r7.pagedownButtonImage;
        r2 = android.widget.ImageView.ScaleType.CENTER;
        r1.setScaleType(r2);
        r1 = r7.pagedownButtonImage;
        r2 = new android.graphics.PorterDuffColorFilter;
        r3 = "chat_goDownButtonIcon";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r4 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r2.<init>(r3, r4);
        r1.setColorFilter(r2);
        r1 = r7.pagedownButtonImage;
        r2 = NUM; // 0x40000000 float:2.0 double:5.304989477E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r1.setPadding(r9, r2, r9, r9);
        r1 = NUM; // 0x42280000 float:42.0 double:5.483722033E-315;
        r1 = org.telegram.messenger.AndroidUtilities.dp(r1);
        r2 = "chat_goDownButton";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1 = org.telegram.ui.ActionBar.Theme.createCircleDrawable(r1, r2);
        r2 = r33.getResources();
        r3 = NUM; // 0x7var_d9 float:1.7945537E38 double:1.0529357367E-314;
        r2 = r2.getDrawable(r3);
        r2 = r2.mutate();
        r3 = new android.graphics.PorterDuffColorFilter;
        r4 = "chat_goDownButtonShadow";
        r4 = org.telegram.ui.ActionBar.Theme.getColor(r4);
        r5 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r3.<init>(r4, r5);
        r2.setColorFilter(r3);
        r3 = new org.telegram.ui.Components.CombinedDrawable;
        r3.<init>(r2, r1, r9, r9);
        r1 = NUM; // 0x42280000 float:42.0 double:5.483722033E-315;
        r1 = org.telegram.messenger.AndroidUtilities.dp(r1);
        r2 = NUM; // 0x42280000 float:42.0 double:5.483722033E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r3.setIconSize(r1, r2);
        r1 = r7.pagedownButtonImage;
        r1.setBackgroundDrawable(r3);
        r1 = r7.pagedownButton;
        r2 = r7.pagedownButtonImage;
        r3 = 81;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r13, r13, r3);
        r1.addView(r2, r3);
        r1 = r7.pagedownButton;
        r2 = NUM; // 0x7f0d0034 float:1.874222E38 double:1.053129803E-314;
        r3 = "AccDescrPageDown";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r1.setContentDescription(r2);
        r1 = new android.widget.TextView;
        r1.<init>(r0);
        r7.pagedownButtonCounter = r1;
        r1 = r7.pagedownButtonCounter;
        r1.setVisibility(r8);
        r1 = r7.pagedownButtonCounter;
        r2 = org.telegram.messenger.AndroidUtilities.getTypeface(r12);
        r1.setTypeface(r2);
        r1 = r7.pagedownButtonCounter;
        r2 = NUM; // 0x41500000 float:13.0 double:5.413783207E-315;
        r1.setTextSize(r10, r2);
        r1 = r7.pagedownButtonCounter;
        r2 = "chat_goDownButtonCounter";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setTextColor(r2);
        r1 = r7.pagedownButtonCounter;
        r1.setGravity(r15);
        r1 = r7.pagedownButtonCounter;
        r2 = NUM; // 0x41380000 float:11.5 double:5.406012226E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r3 = "chat_goDownButtonCounterBackground";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r2 = org.telegram.ui.ActionBar.Theme.createRoundRectDrawable(r2, r3);
        r1.setBackgroundDrawable(r2);
        r1 = r7.pagedownButtonCounter;
        r2 = NUM; // 0x41b80000 float:23.0 double:5.447457457E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r1.setMinWidth(r2);
        r1 = r7.pagedownButtonCounter;
        r2 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r3 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r3 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r4 = NUM; // 0x3var_ float:1.0 double:5.263544247E-315;
        r4 = org.telegram.messenger.AndroidUtilities.dp(r4);
        r1.setPadding(r2, r9, r3, r4);
        r1 = r7.pagedownButton;
        r2 = r7.pagedownButtonCounter;
        r3 = 49;
        r4 = -2;
        r11 = 23;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r4, r11, r3);
        r1.addView(r2, r3);
        r1 = new android.widget.ImageView;
        r1.<init>(r0);
        r7.mentiondownButtonImage = r1;
        r1 = r7.mentiondownButtonImage;
        r2 = NUM; // 0x7var_b float:1.7945217E38 double:1.0529356587E-314;
        r1.setImageResource(r2);
        r1 = r7.mentiondownButtonImage;
        r2 = android.widget.ImageView.ScaleType.CENTER;
        r1.setScaleType(r2);
        r1 = r7.mentiondownButtonImage;
        r2 = new android.graphics.PorterDuffColorFilter;
        r3 = "chat_goDownButtonIcon";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r4 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r2.<init>(r3, r4);
        r1.setColorFilter(r2);
        r1 = r7.mentiondownButtonImage;
        r2 = NUM; // 0x40000000 float:2.0 double:5.304989477E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r1.setPadding(r9, r2, r9, r9);
        r1 = NUM; // 0x42280000 float:42.0 double:5.483722033E-315;
        r1 = org.telegram.messenger.AndroidUtilities.dp(r1);
        r2 = "chat_goDownButton";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1 = org.telegram.ui.ActionBar.Theme.createCircleDrawable(r1, r2);
        r2 = r33.getResources();
        r3 = NUM; // 0x7var_d9 float:1.7945537E38 double:1.0529357367E-314;
        r2 = r2.getDrawable(r3);
        r2 = r2.mutate();
        r3 = new android.graphics.PorterDuffColorFilter;
        r4 = "chat_goDownButtonShadow";
        r4 = org.telegram.ui.ActionBar.Theme.getColor(r4);
        r5 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r3.<init>(r4, r5);
        r2.setColorFilter(r3);
        r3 = new org.telegram.ui.Components.CombinedDrawable;
        r3.<init>(r2, r1, r9, r9);
        r1 = NUM; // 0x42280000 float:42.0 double:5.483722033E-315;
        r1 = org.telegram.messenger.AndroidUtilities.dp(r1);
        r2 = NUM; // 0x42280000 float:42.0 double:5.483722033E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r3.setIconSize(r1, r2);
        r1 = r7.mentiondownButtonImage;
        r1.setBackgroundDrawable(r3);
        r1 = r7.mentiondownButton;
        r2 = r7.mentiondownButtonImage;
        r3 = 83;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r13, r13, r3);
        r1.addView(r2, r3);
        r1 = new android.widget.TextView;
        r1.<init>(r0);
        r7.mentiondownButtonCounter = r1;
        r1 = r7.mentiondownButtonCounter;
        r1.setVisibility(r8);
        r1 = r7.mentiondownButtonCounter;
        r2 = org.telegram.messenger.AndroidUtilities.getTypeface(r12);
        r1.setTypeface(r2);
        r1 = r7.mentiondownButtonCounter;
        r2 = NUM; // 0x41500000 float:13.0 double:5.413783207E-315;
        r1.setTextSize(r10, r2);
        r1 = r7.mentiondownButtonCounter;
        r2 = "chat_goDownButtonCounter";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setTextColor(r2);
        r1 = r7.mentiondownButtonCounter;
        r1.setGravity(r15);
        r1 = r7.mentiondownButtonCounter;
        r2 = NUM; // 0x41380000 float:11.5 double:5.406012226E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r3 = "chat_goDownButtonCounterBackground";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r2 = org.telegram.ui.ActionBar.Theme.createRoundRectDrawable(r2, r3);
        r1.setBackgroundDrawable(r2);
        r1 = r7.mentiondownButtonCounter;
        r2 = NUM; // 0x41b80000 float:23.0 double:5.447457457E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r1.setMinWidth(r2);
        r1 = r7.mentiondownButtonCounter;
        r2 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r3 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r3 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r4 = NUM; // 0x3var_ float:1.0 double:5.263544247E-315;
        r4 = org.telegram.messenger.AndroidUtilities.dp(r4);
        r1.setPadding(r2, r9, r3, r4);
        r1 = r7.mentiondownButton;
        r2 = r7.mentiondownButtonCounter;
        r3 = 49;
        r4 = -2;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r4, r11, r3);
        r1.addView(r2, r3);
        r1 = r7.mentiondownButton;
        r2 = NUM; // 0x7f0d002a float:1.87422E38 double:1.0531297983E-314;
        r3 = "AccDescrMentionDown";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r1.setContentDescription(r2);
        r1 = org.telegram.messenger.AndroidUtilities.isTablet();
        if (r1 == 0) goto L_0x0ffe;
    L_0x0ff8:
        r1 = org.telegram.messenger.AndroidUtilities.isSmallTablet();
        if (r1 == 0) goto L_0x1034;
    L_0x0ffe:
        r1 = new org.telegram.ui.Components.FragmentContextView;
        r1.<init>(r0, r7, r10);
        r2 = r7.contentView;
        r24 = -1;
        r25 = NUM; // 0x421CLASSNAME float:39.0 double:5.479836543E-315;
        r26 = 51;
        r27 = 0;
        r28 = -NUM; // 0xffffffffCLASSNAME float:-36.0 double:NaN;
        r29 = 0;
        r30 = 0;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r24, r25, r26, r27, r28, r29, r30);
        r2.addView(r1, r3);
        r2 = r7.contentView;
        r3 = new org.telegram.ui.Components.FragmentContextView;
        r3.<init>(r0, r7, r9);
        r7.fragmentContextView = r3;
        r4 = org.telegram.ui.Components.LayoutHelper.createFrame(r24, r25, r26, r27, r28, r29, r30);
        r2.addView(r3, r4);
        r2 = r7.fragmentContextView;
        r2.setAdditionalContextView(r1);
        r2 = r7.fragmentContextView;
        r1.setAdditionalContextView(r2);
    L_0x1034:
        r1 = r7.contentView;
        r2 = r7.actionBar;
        r1.addView(r2);
        r1 = new android.view.View;
        r1.<init>(r0);
        r7.overlayView = r1;
        r1 = r7.overlayView;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$rIRxAJOsiFFBwgJ9kSlIrSjN1MU;
        r2.<init>(r7);
        r1.setOnTouchListener(r2);
        r1 = r7.contentView;
        r2 = r7.overlayView;
        r3 = 51;
        r4 = -1;
        r5 = org.telegram.ui.Components.LayoutHelper.createFrame(r4, r4, r3);
        r1.addView(r2, r5);
        r1 = r7.overlayView;
        r2 = 8;
        r1.setVisibility(r2);
        r1 = new org.telegram.ui.Components.InstantCameraView;
        r1.<init>(r0, r7);
        r7.instantCameraView = r1;
        r1 = r7.contentView;
        r2 = r7.instantCameraView;
        r5 = org.telegram.ui.Components.LayoutHelper.createFrame(r4, r4, r3);
        r1.addView(r2, r5);
        r1 = new org.telegram.ui.ChatActivity$25;
        r1.<init>(r0);
        r7.bottomMessagesActionContainer = r1;
        r1 = r7.bottomMessagesActionContainer;
        r1.setVisibility(r8);
        r1 = r7.bottomMessagesActionContainer;
        r1.setWillNotDraw(r9);
        r1 = r7.bottomMessagesActionContainer;
        r2 = NUM; // 0x40000000 float:2.0 double:5.304989477E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r1.setPadding(r9, r2, r9, r9);
        r1 = r7.contentView;
        r2 = r7.bottomMessagesActionContainer;
        r3 = 80;
        r4 = 51;
        r5 = -1;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r5, r4, r3);
        r1.addView(r2, r3);
        r1 = r7.bottomMessagesActionContainer;
        r2 = org.telegram.ui.-$$Lambda$ChatActivity$8D9d2AbNQrK5taCb_g8UF_AIhgU.INSTANCE;
        r1.setOnTouchListener(r2);
        r14 = new org.telegram.ui.ChatActivity$26;
        r3 = r32.getParentActivity();
        r4 = r7.contentView;
        r6 = 1;
        r1 = r14;
        r2 = r32;
        r5 = r32;
        r1.<init>(r3, r4, r5, r6);
        r7.chatActivityEnterView = r14;
        r1 = r7.chatActivityEnterView;
        r2 = r7.dialog_id;
        r4 = r7.currentAccount;
        r1.setDialogId(r2, r4);
        r1 = r7.chatInfo;
        if (r1 == 0) goto L_0x10cb;
    L_0x10c6:
        r2 = r7.chatActivityEnterView;
        r2.setChatInfo(r1);
    L_0x10cb:
        r1 = r7.chatActivityEnterView;
        r2 = 1000; // 0x3e8 float:1.401E-42 double:4.94E-321;
        r1.setId(r2);
        r1 = r7.chatActivityEnterView;
        r2 = r7.botsCount;
        r3 = r7.hasBotsCommands;
        r1.setBotsCount(r2, r3);
        r1 = r7.chatActivityEnterView;
        r2 = NUM; // 0x424CLASSNAME float:51.0 double:5.495378504E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r1.setMinimumHeight(r2);
        r1 = r7.chatActivityEnterView;
        r2 = r7.currentEncryptedChat;
        if (r2 == 0) goto L_0x10f7;
    L_0x10ec:
        r2 = r2.layer;
        r2 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r2);
        if (r2 < r11) goto L_0x10f5;
    L_0x10f4:
        goto L_0x10f7;
    L_0x10f5:
        r2 = 0;
        goto L_0x10f8;
    L_0x10f7:
        r2 = 1;
    L_0x10f8:
        r3 = r7.currentEncryptedChat;
        if (r3 == 0) goto L_0x1107;
    L_0x10fc:
        r3 = r3.layer;
        r3 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r3);
        if (r3 < r13) goto L_0x1105;
    L_0x1104:
        goto L_0x1107;
    L_0x1105:
        r3 = 0;
        goto L_0x1108;
    L_0x1107:
        r3 = 1;
    L_0x1108:
        r1.setAllowStickersAndGifs(r2, r3);
        r1 = r7.inPreviewMode;
        if (r1 == 0) goto L_0x1114;
    L_0x110f:
        r1 = r7.chatActivityEnterView;
        r1.setVisibility(r8);
    L_0x1114:
        r1 = r7.contentView;
        r2 = r7.chatActivityEnterView;
        r3 = r1.getChildCount();
        r3 = r3 - r10;
        r4 = 83;
        r5 = -2;
        r6 = -1;
        r4 = org.telegram.ui.Components.LayoutHelper.createFrame(r6, r5, r4);
        r1.addView(r2, r3, r4);
        r1 = r7.chatActivityEnterView;
        r2 = new org.telegram.ui.ChatActivity$27;
        r2.<init>();
        r1.setDelegate(r2);
        r1 = new org.telegram.ui.ChatActivity$28;
        r1.<init>(r0);
        r2 = new android.view.View;
        r2.<init>(r0);
        r7.replyLineView = r2;
        r2 = r7.replyLineView;
        r3 = "chat_replyPanelLine";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r2.setBackgroundColor(r3);
        r2 = r7.chatActivityEnterView;
        r3 = r7.replyLineView;
        r4 = 48;
        r2.addTopView(r1, r3, r4);
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$S608bx2oIMaZW-qZppW8aaTId_g;
        r2.<init>(r7);
        r1.setOnClickListener(r2);
        r2 = new android.widget.ImageView;
        r2.<init>(r0);
        r7.replyIconImageView = r2;
        r2 = r7.replyIconImageView;
        r3 = new android.graphics.PorterDuffColorFilter;
        r4 = "chat_replyPanelIcons";
        r4 = org.telegram.ui.ActionBar.Theme.getColor(r4);
        r5 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r3.<init>(r4, r5);
        r2.setColorFilter(r3);
        r2 = r7.replyIconImageView;
        r3 = android.widget.ImageView.ScaleType.CENTER;
        r2.setScaleType(r3);
        r2 = r7.replyIconImageView;
        r3 = 52;
        r4 = 51;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r3, r13, r4);
        r1.addView(r2, r3);
        r2 = new android.widget.ImageView;
        r2.<init>(r0);
        r7.replyCloseImageView = r2;
        r2 = r7.replyCloseImageView;
        r3 = new android.graphics.PorterDuffColorFilter;
        r4 = "chat_replyPanelClose";
        r4 = org.telegram.ui.ActionBar.Theme.getColor(r4);
        r5 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r3.<init>(r4, r5);
        r2.setColorFilter(r3);
        r2 = r7.replyCloseImageView;
        r3 = NUM; // 0x7var_eb float:1.7945055E38 double:1.052935619E-314;
        r2.setImageResource(r3);
        r2 = r7.replyCloseImageView;
        r3 = android.widget.ImageView.ScaleType.CENTER;
        r2.setScaleType(r3);
        r2 = r7.replyCloseImageView;
        r24 = 52;
        r25 = NUM; // 0x42380000 float:46.0 double:5.488902687E-315;
        r26 = 53;
        r27 = 0;
        r28 = NUM; // 0x3var_ float:0.5 double:5.222099017E-315;
        r29 = 0;
        r30 = 0;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r24, r25, r26, r27, r28, r29, r30);
        r1.addView(r2, r3);
        r2 = r7.replyCloseImageView;
        r3 = new org.telegram.ui.-$$Lambda$ChatActivity$JdIFIjyclkHsNiK4bBCtNJWg_Pc;
        r3.<init>(r7);
        r2.setOnClickListener(r3);
        r2 = new org.telegram.ui.ActionBar.SimpleTextView;
        r2.<init>(r0);
        r7.replyNameTextView = r2;
        r2 = r7.replyNameTextView;
        r3 = 14;
        r2.setTextSize(r3);
        r2 = r7.replyNameTextView;
        r3 = "chat_replyPanelName";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r2.setTextColor(r3);
        r2 = r7.replyNameTextView;
        r3 = org.telegram.messenger.AndroidUtilities.getTypeface(r12);
        r2.setTypeface(r3);
        r2 = r7.replyNameTextView;
        r24 = -1;
        r25 = NUM; // 0x41900000 float:18.0 double:5.43450582E-315;
        r26 = 51;
        r27 = NUM; // 0x42500000 float:52.0 double:5.496673668E-315;
        r28 = NUM; // 0x40CLASSNAME float:6.0 double:5.367157323E-315;
        r29 = NUM; // 0x42500000 float:52.0 double:5.496673668E-315;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r24, r25, r26, r27, r28, r29, r30);
        r1.addView(r2, r3);
        r2 = new org.telegram.ui.ActionBar.SimpleTextView;
        r2.<init>(r0);
        r7.replyObjectTextView = r2;
        r2 = r7.replyObjectTextView;
        r3 = 14;
        r2.setTextSize(r3);
        r2 = r7.replyObjectTextView;
        r3 = "chat_replyPanelMessage";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r2.setTextColor(r3);
        r2 = r7.replyObjectTextView;
        r28 = NUM; // 0x41CLASSNAME float:24.0 double:5.450047783E-315;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r24, r25, r26, r27, r28, r29, r30);
        r1.addView(r2, r3);
        r2 = new org.telegram.ui.Components.BackupImageView;
        r2.<init>(r0);
        r7.replyImageView = r2;
        r2 = r7.replyImageView;
        r24 = 34;
        r25 = NUM; // 0x42080000 float:34.0 double:5.473360725E-315;
        r28 = NUM; // 0x40CLASSNAME float:6.0 double:5.367157323E-315;
        r29 = 0;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r24, r25, r26, r27, r28, r29, r30);
        r1.addView(r2, r3);
        r1 = new android.widget.FrameLayout;
        r1.<init>(r0);
        r7.stickersPanel = r1;
        r1 = r7.stickersPanel;
        r2 = 8;
        r1.setVisibility(r2);
        r1 = r7.contentView;
        r2 = r7.stickersPanel;
        r24 = -2;
        r25 = NUM; // 0x42a30000 float:81.5 double:5.52354831E-315;
        r26 = 83;
        r27 = 0;
        r28 = 0;
        r30 = NUM; // 0x42180000 float:38.0 double:5.47854138E-315;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r24, r25, r26, r27, r28, r29, r30);
        r1.addView(r2, r3);
        r1 = new org.telegram.ui.ChatActivity$29;
        r1.<init>();
        r2 = new org.telegram.ui.ChatActivity$30;
        r2.<init>(r0, r1);
        r7.stickersListView = r2;
        r2 = r7.stickersListView;
        r3 = 3;
        r3 = java.lang.Integer.valueOf(r3);
        r2.setTag(r3);
        r2 = r7.stickersListView;
        r3 = new org.telegram.ui.-$$Lambda$ChatActivity$bbTk9JcLsAoVv3WBtmTSQO3mlic;
        r3.<init>(r7, r1);
        r2.setOnTouchListener(r3);
        r1 = r7.stickersListView;
        r1.setDisallowInterceptTouchEvents(r10);
        r1 = new androidx.recyclerview.widget.LinearLayoutManager;
        r1.<init>(r0);
        r1.setOrientation(r9);
        r2 = r7.stickersListView;
        r2.setLayoutManager(r1);
        r1 = r7.stickersListView;
        r1.setClipToPadding(r9);
        r1 = r7.stickersListView;
        r2 = 2;
        r1.setOverScrollMode(r2);
        r1 = r7.stickersPanel;
        r2 = r7.stickersListView;
        r3 = NUM; // 0x429CLASSNAME float:78.0 double:5.521281773E-315;
        r4 = -1;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r4, r3);
        r1.addView(r2, r3);
        r32.initStickers();
        r1 = new android.widget.ImageView;
        r1.<init>(r0);
        r7.stickersPanelArrow = r1;
        r1 = r7.stickersPanelArrow;
        r2 = NUM; // 0x7var_e float:1.7945807E38 double:1.0529358024E-314;
        r1.setImageResource(r2);
        r1 = r7.stickersPanelArrow;
        r2 = new android.graphics.PorterDuffColorFilter;
        r3 = "chat_stickersHintPanel";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r4 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r2.<init>(r3, r4);
        r1.setColorFilter(r2);
        r1 = r7.stickersPanel;
        r2 = r7.stickersPanelArrow;
        r25 = -NUM; // 0xffffffffCLASSNAME float:-2.0 double:NaN;
        r27 = NUM; // 0x42540000 float:53.0 double:5.49796883E-315;
        r29 = NUM; // 0x42540000 float:53.0 double:5.49796883E-315;
        r30 = 0;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r24, r25, r26, r27, r28, r29, r30);
        r1.addView(r2, r3);
        r1 = new org.telegram.ui.ChatActivity$31;
        r1.<init>(r0);
        r7.searchContainer = r1;
        r1 = r7.searchContainer;
        r2 = org.telegram.ui.-$$Lambda$ChatActivity$SCRsxMf0EqKNI1HAAJtApwnNECc.INSTANCE;
        r1.setOnTouchListener(r2);
        r1 = r7.searchContainer;
        r1.setWillNotDraw(r9);
        r1 = r7.searchContainer;
        r1.setVisibility(r8);
        r1 = r7.searchContainer;
        r1.setFocusable(r10);
        r1 = r7.searchContainer;
        r1.setFocusableInTouchMode(r10);
        r1 = r7.searchContainer;
        r1.setClickable(r10);
        r1 = r7.searchContainer;
        r2 = NUM; // 0x40400000 float:3.0 double:5.325712093E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r1.setPadding(r9, r2, r9, r9);
        r1 = new android.widget.ImageView;
        r1.<init>(r0);
        r7.searchUpButton = r1;
        r1 = r7.searchUpButton;
        r2 = android.widget.ImageView.ScaleType.CENTER;
        r1.setScaleType(r2);
        r1 = r7.searchUpButton;
        r2 = NUM; // 0x7var_d float:1.794535E38 double:1.0529356913E-314;
        r1.setImageResource(r2);
        r1 = r7.searchUpButton;
        r2 = new android.graphics.PorterDuffColorFilter;
        r3 = "chat_searchPanelIcons";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r4 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r2.<init>(r3, r4);
        r1.setColorFilter(r2);
        r1 = r7.searchUpButton;
        r2 = "actionBarActionModeDefaultSelector";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r2 = org.telegram.ui.ActionBar.Theme.createSelectorDrawable(r2, r10);
        r1.setBackgroundDrawable(r2);
        r1 = r7.searchContainer;
        r2 = r7.searchUpButton;
        r24 = 48;
        r25 = NUM; // 0x42400000 float:48.0 double:5.491493014E-315;
        r26 = 53;
        r27 = 0;
        r29 = NUM; // 0x42400000 float:48.0 double:5.491493014E-315;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r24, r25, r26, r27, r28, r29, r30);
        r1.addView(r2, r3);
        r1 = r7.searchUpButton;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$zuLfb_3UyBmXz28-TR_XfUeBQL0;
        r2.<init>(r7);
        r1.setOnClickListener(r2);
        r1 = r7.searchUpButton;
        r2 = NUM; // 0x7f0d0044 float:1.8742253E38 double:1.053129811E-314;
        r3 = "AccDescrSearchNext";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r1.setContentDescription(r2);
        r1 = new android.widget.ImageView;
        r1.<init>(r0);
        r7.searchDownButton = r1;
        r1 = r7.searchDownButton;
        r2 = android.widget.ImageView.ScaleType.CENTER;
        r1.setScaleType(r2);
        r1 = r7.searchDownButton;
        r2 = NUM; // 0x7var_c float:1.7945349E38 double:1.052935691E-314;
        r1.setImageResource(r2);
        r1 = r7.searchDownButton;
        r2 = new android.graphics.PorterDuffColorFilter;
        r3 = "chat_searchPanelIcons";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r4 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r2.<init>(r3, r4);
        r1.setColorFilter(r2);
        r1 = r7.searchDownButton;
        r2 = "actionBarActionModeDefaultSelector";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r2 = org.telegram.ui.ActionBar.Theme.createSelectorDrawable(r2, r10);
        r1.setBackgroundDrawable(r2);
        r1 = r7.searchContainer;
        r2 = r7.searchDownButton;
        r29 = 0;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r24, r25, r26, r27, r28, r29, r30);
        r1.addView(r2, r3);
        r1 = r7.searchDownButton;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$CRYdccYggXGAOLHbGZiTyObk6GM;
        r2.<init>(r7);
        r1.setOnClickListener(r2);
        r1 = r7.searchDownButton;
        r2 = NUM; // 0x7f0d0045 float:1.8742255E38 double:1.0531298116E-314;
        r3 = "AccDescrSearchPrev";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r1.setContentDescription(r2);
        r1 = r7.currentChat;
        if (r1 == 0) goto L_0x1454;
    L_0x13e0:
        r1 = org.telegram.messenger.ChatObject.isChannel(r1);
        if (r1 == 0) goto L_0x13ec;
    L_0x13e6:
        r1 = r7.currentChat;
        r1 = r1.megagroup;
        if (r1 == 0) goto L_0x1454;
    L_0x13ec:
        r1 = new android.widget.ImageView;
        r1.<init>(r0);
        r7.searchUserButton = r1;
        r1 = r7.searchUserButton;
        r2 = android.widget.ImageView.ScaleType.CENTER;
        r1.setScaleType(r2);
        r1 = r7.searchUserButton;
        r2 = NUM; // 0x7var_af float:1.7945452E38 double:1.052935716E-314;
        r1.setImageResource(r2);
        r1 = r7.searchUserButton;
        r2 = new android.graphics.PorterDuffColorFilter;
        r3 = "chat_searchPanelIcons";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r4 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r2.<init>(r3, r4);
        r1.setColorFilter(r2);
        r1 = r7.searchUserButton;
        r2 = "actionBarActionModeDefaultSelector";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r2 = org.telegram.ui.ActionBar.Theme.createSelectorDrawable(r2, r10);
        r1.setBackgroundDrawable(r2);
        r1 = r7.searchContainer;
        r2 = r7.searchUserButton;
        r24 = 48;
        r25 = NUM; // 0x42400000 float:48.0 double:5.491493014E-315;
        r26 = 51;
        r27 = NUM; // 0x42400000 float:48.0 double:5.491493014E-315;
        r28 = 0;
        r29 = 0;
        r30 = 0;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r24, r25, r26, r27, r28, r29, r30);
        r1.addView(r2, r3);
        r1 = r7.searchUserButton;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$mev4Akd_7iG3dCdELC9naoY6yXw;
        r2.<init>(r7);
        r1.setOnClickListener(r2);
        r1 = r7.searchUserButton;
        r2 = NUM; // 0x7f0d0043 float:1.874225E38 double:1.0531298106E-314;
        r3 = "AccDescrSearchByUser";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r1.setContentDescription(r2);
    L_0x1454:
        r1 = new android.widget.ImageView;
        r1.<init>(r0);
        r7.searchCalendarButton = r1;
        r1 = r7.searchCalendarButton;
        r2 = android.widget.ImageView.ScaleType.CENTER;
        r1.setScaleType(r2);
        r1 = r7.searchCalendarButton;
        r2 = NUM; // 0x7var_d float:1.7945318E38 double:1.0529356834E-314;
        r1.setImageResource(r2);
        r1 = r7.searchCalendarButton;
        r2 = new android.graphics.PorterDuffColorFilter;
        r3 = "chat_searchPanelIcons";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r4 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r2.<init>(r3, r4);
        r1.setColorFilter(r2);
        r1 = r7.searchCalendarButton;
        r2 = "actionBarActionModeDefaultSelector";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r2 = org.telegram.ui.ActionBar.Theme.createSelectorDrawable(r2, r10);
        r1.setBackgroundDrawable(r2);
        r1 = r7.searchContainer;
        r2 = r7.searchCalendarButton;
        r3 = 48;
        r4 = 48;
        r5 = 51;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r3, r4, r5);
        r1.addView(r2, r3);
        r1 = r7.searchCalendarButton;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$pA7Fvp3WXJtRkmGeNZIDr6xQwqk;
        r2.<init>(r7);
        r1.setOnClickListener(r2);
        r1 = r7.searchCalendarButton;
        r2 = NUM; // 0x7f0d0550 float:1.8744873E38 double:1.0531304495E-314;
        r3 = "JumpToDate";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r1.setContentDescription(r2);
        r1 = new org.telegram.ui.ActionBar.SimpleTextView;
        r1.<init>(r0);
        r7.searchCountText = r1;
        r1 = r7.searchCountText;
        r2 = "chat_searchPanelText";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setTextColor(r2);
        r1 = r7.searchCountText;
        r2 = 15;
        r1.setTextSize(r2);
        r1 = r7.searchCountText;
        r2 = org.telegram.messenger.AndroidUtilities.getTypeface(r12);
        r1.setTypeface(r2);
        r1 = r7.searchCountText;
        r2 = 5;
        r1.setGravity(r2);
        r1 = r7.searchContainer;
        r2 = r7.searchCountText;
        r24 = -2;
        r25 = -NUM; // 0xffffffffCLASSNAME float:-2.0 double:NaN;
        r26 = 21;
        r27 = 0;
        r28 = 0;
        r29 = NUM; // 0x42d80000 float:108.0 double:5.540709225E-315;
        r30 = 0;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r24, r25, r26, r27, r28, r29, r30);
        r1.addView(r2, r3);
        r1 = new org.telegram.ui.ChatActivity$32;
        r1.<init>(r0);
        r7.bottomOverlay = r1;
        r1 = r7.bottomOverlay;
        r1.setWillNotDraw(r9);
        r1 = r7.bottomOverlay;
        r1.setVisibility(r8);
        r1 = r7.bottomOverlay;
        r1.setFocusable(r10);
        r1 = r7.bottomOverlay;
        r1.setFocusableInTouchMode(r10);
        r1 = r7.bottomOverlay;
        r1.setClickable(r10);
        r1 = r7.bottomOverlay;
        r2 = NUM; // 0x40000000 float:2.0 double:5.304989477E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r1.setPadding(r9, r2, r9, r9);
        r1 = r7.contentView;
        r2 = r7.bottomOverlay;
        r3 = 80;
        r4 = 51;
        r5 = -1;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r5, r4, r3);
        r1.addView(r2, r3);
        r1 = new android.widget.TextView;
        r1.<init>(r0);
        r7.bottomOverlayText = r1;
        r1 = r7.bottomOverlayText;
        r2 = NUM; // 0x41600000 float:14.0 double:5.41896386E-315;
        r1.setTextSize(r10, r2);
        r1 = r7.bottomOverlayText;
        r1.setGravity(r15);
        r1 = r7.bottomOverlayText;
        r2 = 2;
        r1.setMaxLines(r2);
        r1 = r7.bottomOverlayText;
        r2 = android.text.TextUtils.TruncateAt.END;
        r1.setEllipsize(r2);
        r1 = r7.bottomOverlayText;
        r2 = NUM; // 0x40000000 float:2.0 double:5.304989477E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r2 = (float) r2;
        r3 = NUM; // 0x3var_ float:1.0 double:5.263544247E-315;
        r1.setLineSpacing(r2, r3);
        r1 = r7.bottomOverlayText;
        r2 = "chat_secretChatStatusText";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setTextColor(r2);
        r1 = r7.bottomOverlay;
        r2 = r7.bottomOverlayText;
        r26 = 17;
        r27 = NUM; // 0x41600000 float:14.0 double:5.41896386E-315;
        r29 = NUM; // 0x41600000 float:14.0 double:5.41896386E-315;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r24, r25, r26, r27, r28, r29, r30);
        r1.addView(r2, r3);
        r1 = new org.telegram.ui.ChatActivity$33;
        r1.<init>(r0);
        r7.bottomOverlayChat = r1;
        r1 = r7.bottomOverlayChat;
        r1.setWillNotDraw(r9);
        r1 = r7.bottomOverlayChat;
        r2 = NUM; // 0x40400000 float:3.0 double:5.325712093E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r1.setPadding(r9, r2, r9, r9);
        r1 = r7.bottomOverlayChat;
        r1.setVisibility(r8);
        r1 = r7.contentView;
        r2 = r7.bottomOverlayChat;
        r3 = 80;
        r4 = 51;
        r5 = -1;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r5, r4, r3);
        r1.addView(r2, r3);
        r1 = new android.widget.TextView;
        r1.<init>(r0);
        r7.bottomOverlayChatText = r1;
        r1 = r7.bottomOverlayChatText;
        r2 = NUM; // 0x41700000 float:15.0 double:5.424144515E-315;
        r1.setTextSize(r10, r2);
        r1 = r7.bottomOverlayChatText;
        r2 = org.telegram.messenger.AndroidUtilities.getTypeface(r12);
        r1.setTypeface(r2);
        r1 = r7.bottomOverlayChatText;
        r2 = "chat_fieldOverlayText";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setTextColor(r2);
        r1 = r7.bottomOverlayChatText;
        r1.setGravity(r15);
        r1 = r7.bottomOverlayChat;
        r2 = r7.bottomOverlayChatText;
        r3 = -NUM; // 0xffffffffbvar_ float:-1.0 double:NaN;
        r4 = -1;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r4, r3);
        r1.addView(r2, r3);
        r1 = r7.bottomOverlayChatText;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$fwEBU17y4SYZ67VjN-jy2DJ10TA;
        r2.<init>(r7);
        r1.setOnClickListener(r2);
        r1 = new org.telegram.ui.ChatActivity$UnreadCounterTextView;
        r1.<init>(r0);
        r7.bottomOverlayChatText2 = r1;
        r1 = r7.bottomOverlayChatText2;
        r2 = NUM; // 0x41700000 float:15.0 double:5.424144515E-315;
        r1.setTextSize(r10, r2);
        r1 = r7.bottomOverlayChatText2;
        r2 = org.telegram.messenger.AndroidUtilities.getTypeface(r12);
        r1.setTypeface(r2);
        r1 = r7.bottomOverlayChatText2;
        r2 = "chat_fieldOverlayText";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setTextColor(r2);
        r1 = r7.bottomOverlayChatText2;
        r1.setGravity(r15);
        r1 = r7.bottomOverlayChatText2;
        r2 = 8;
        r1.setVisibility(r2);
        r1 = r7.bottomOverlayChat;
        r2 = r7.bottomOverlayChatText2;
        r3 = -NUM; // 0xffffffffbvar_ float:-1.0 double:NaN;
        r4 = -1;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r4, r3);
        r1.addView(r2, r3);
        r1 = r7.bottomOverlayChatText2;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$XI5-iuaszK3El6MRKLRW6i8D4x0;
        r2.<init>(r7);
        r1.setOnClickListener(r2);
        r1 = new org.telegram.ui.Components.RadialProgressView;
        r1.<init>(r0);
        r7.bottomOverlayProgress = r1;
        r1 = r7.bottomOverlayProgress;
        r2 = NUM; // 0x41b00000 float:22.0 double:5.44486713E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r1.setSize(r2);
        r1 = r7.bottomOverlayProgress;
        r2 = "chat_fieldOverlayText";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setProgressColor(r2);
        r1 = r7.bottomOverlayProgress;
        r1.setVisibility(r8);
        r1 = r7.bottomOverlayProgress;
        r2 = NUM; // 0x3dcccccd float:0.1 double:5.122630465E-315;
        r1.setScaleX(r2);
        r1 = r7.bottomOverlayProgress;
        r1.setScaleY(r2);
        r1 = r7.bottomOverlayProgress;
        r2 = NUM; // 0x3var_ float:1.0 double:5.263544247E-315;
        r1.setAlpha(r2);
        r1 = r7.bottomOverlayChat;
        r2 = r7.bottomOverlayProgress;
        r3 = 30;
        r4 = 30;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r3, r4, r15);
        r1.addView(r2, r3);
        r1 = r7.isBroadcast;
        if (r1 != 0) goto L_0x1715;
    L_0x1674:
        r1 = new android.widget.TextView;
        r1.<init>(r0);
        r7.replyButton = r1;
        r1 = r7.replyButton;
        r2 = NUM; // 0x7f0d08d4 float:1.8746699E38 double:1.053130894E-314;
        r3 = "Reply";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r1.setText(r2);
        r1 = r7.replyButton;
        r2 = 16;
        r1.setGravity(r2);
        r1 = r7.replyButton;
        r2 = NUM; // 0x41700000 float:15.0 double:5.424144515E-315;
        r1.setTextSize(r10, r2);
        r1 = r7.replyButton;
        r2 = NUM; // 0x41600000 float:14.0 double:5.41896386E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r3 = NUM; // 0x41a80000 float:21.0 double:5.442276803E-315;
        r3 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r1.setPadding(r2, r9, r3, r9);
        r1 = r7.replyButton;
        r2 = "actionBarActionModeDefaultSelector";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r3 = 3;
        r2 = org.telegram.ui.ActionBar.Theme.createSelectorDrawable(r2, r3);
        r1.setBackgroundDrawable(r2);
        r1 = r7.replyButton;
        r2 = "actionBarActionModeDefaultIcon";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setTextColor(r2);
        r1 = r7.replyButton;
        r2 = NUM; // 0x40e00000 float:7.0 double:5.37751863E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r1.setCompoundDrawablePadding(r2);
        r1 = r7.replyButton;
        r2 = org.telegram.messenger.AndroidUtilities.getTypeface(r12);
        r1.setTypeface(r2);
        r1 = r33.getResources();
        r2 = NUM; // 0x7var_f3 float:1.794507E38 double:1.052935623E-314;
        r1 = r1.getDrawable(r2);
        r1 = r1.mutate();
        r2 = new android.graphics.PorterDuffColorFilter;
        r3 = "actionBarActionModeDefaultIcon";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r4 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r2.<init>(r3, r4);
        r1.setColorFilter(r2);
        r2 = r7.replyButton;
        r3 = 0;
        r2.setCompoundDrawablesWithIntrinsicBounds(r1, r3, r3, r3);
        r1 = r7.replyButton;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$wlHsNE9I_Dn0FclPLAtTX2Iu9mg;
        r2.<init>(r7);
        r1.setOnClickListener(r2);
        r1 = r7.bottomMessagesActionContainer;
        r2 = r7.replyButton;
        r3 = -2;
        r4 = 51;
        r5 = -1;
        r6 = org.telegram.ui.Components.LayoutHelper.createFrame(r3, r5, r4);
        r1.addView(r2, r6);
    L_0x1715:
        r1 = new android.widget.TextView;
        r1.<init>(r0);
        r7.forwardButton = r1;
        r1 = r7.forwardButton;
        r2 = NUM; // 0x7f0d0481 float:1.8744453E38 double:1.053130347E-314;
        r3 = "Forward";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r1.setText(r2);
        r1 = r7.forwardButton;
        r2 = 16;
        r1.setGravity(r2);
        r1 = r7.forwardButton;
        r2 = NUM; // 0x41700000 float:15.0 double:5.424144515E-315;
        r1.setTextSize(r10, r2);
        r1 = r7.forwardButton;
        r2 = NUM; // 0x41a80000 float:21.0 double:5.442276803E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r3 = NUM; // 0x41a80000 float:21.0 double:5.442276803E-315;
        r3 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r1.setPadding(r2, r9, r3, r9);
        r1 = r7.forwardButton;
        r2 = NUM; // 0x40CLASSNAME float:6.0 double:5.367157323E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r1.setCompoundDrawablePadding(r2);
        r1 = r7.forwardButton;
        r2 = "actionBarActionModeDefaultSelector";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r3 = 3;
        r2 = org.telegram.ui.ActionBar.Theme.createSelectorDrawable(r2, r3);
        r1.setBackgroundDrawable(r2);
        r1 = r7.forwardButton;
        r2 = "actionBarActionModeDefaultIcon";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setTextColor(r2);
        r1 = r7.forwardButton;
        r2 = org.telegram.messenger.AndroidUtilities.getTypeface(r12);
        r1.setTypeface(r2);
        r1 = r33.getResources();
        r2 = NUM; // 0x7var_ed float:1.7945059E38 double:1.05293562E-314;
        r1 = r1.getDrawable(r2);
        r1 = r1.mutate();
        r2 = new android.graphics.PorterDuffColorFilter;
        r3 = "actionBarActionModeDefaultIcon";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r4 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r2.<init>(r3, r4);
        r1.setColorFilter(r2);
        r2 = r7.forwardButton;
        r3 = 0;
        r2.setCompoundDrawablesWithIntrinsicBounds(r1, r3, r3, r3);
        r1 = r7.forwardButton;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$_iQk3SF4kIEhKwwnqEexfa_fkws;
        r2.<init>(r7);
        r1.setOnClickListener(r2);
        r1 = r7.bottomMessagesActionContainer;
        r2 = r7.forwardButton;
        r3 = 53;
        r4 = -2;
        r5 = -1;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r4, r5, r3);
        r1.addView(r2, r3);
        r1 = r7.contentView;
        r2 = r7.searchContainer;
        r3 = 80;
        r4 = 51;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r5, r4, r3);
        r1.addView(r2, r3);
        r1 = new org.telegram.ui.Components.UndoView;
        r1.<init>(r0);
        r7.undoView = r1;
        r0 = r7.contentView;
        r1 = r7.undoView;
        r12 = -1;
        r13 = -NUM; // 0xffffffffCLASSNAME float:-2.0 double:NaN;
        r14 = 83;
        r15 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r16 = 0;
        r17 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r18 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r2 = org.telegram.ui.Components.LayoutHelper.createFrame(r12, r13, r14, r15, r16, r17, r18);
        r0.addView(r1, r2);
        r0 = r7.currentChat;
        if (r0 == 0) goto L_0x1817;
    L_0x17e8:
        r0 = new org.telegram.ui.Components.HintView;
        r1 = r32.getParentActivity();
        r2 = 2;
        r0.<init>(r1, r2);
        r7.slowModeHint = r0;
        r0 = r7.slowModeHint;
        r1 = 0;
        r0.setAlpha(r1);
        r0 = r7.slowModeHint;
        r0.setVisibility(r8);
        r0 = r7.contentView;
        r1 = r7.slowModeHint;
        r12 = -2;
        r13 = -NUM; // 0xffffffffCLASSNAME float:-2.0 double:NaN;
        r14 = 51;
        r15 = NUM; // 0x41980000 float:19.0 double:5.43709615E-315;
        r16 = 0;
        r17 = NUM; // 0x41980000 float:19.0 double:5.43709615E-315;
        r18 = 0;
        r2 = org.telegram.ui.Components.LayoutHelper.createFrame(r12, r13, r14, r15, r16, r17, r18);
        r0.addView(r1, r2);
    L_0x1817:
        r0 = r7.chatAdapter;
        r0.updateRows();
        r0 = r7.loading;
        if (r0 == 0) goto L_0x183e;
    L_0x1820:
        r0 = r7.messages;
        r0 = r0.isEmpty();
        if (r0 == 0) goto L_0x183e;
    L_0x1828:
        r0 = r7.progressView;
        r1 = r7.chatAdapter;
        r1 = r1.botInfoRow;
        r2 = -1;
        if (r1 != r2) goto L_0x1834;
    L_0x1833:
        r8 = 0;
    L_0x1834:
        r0.setVisibility(r8);
        r0 = r7.chatListView;
        r1 = 0;
        r0.setEmptyView(r1);
        goto L_0x184a;
    L_0x183e:
        r0 = r7.progressView;
        r0.setVisibility(r8);
        r0 = r7.chatListView;
        r1 = r7.emptyViewContainer;
        r0.setEmptyView(r1);
    L_0x184a:
        r32.checkBotKeyboard();
        r32.updateBottomOverlay();
        r32.updateSecretStatus();
        r7.updateTopPanel(r9);
        r7.updatePinnedMessageView(r10);
        r0 = r7.currentEncryptedChat;	 Catch:{ Throwable -> 0x1875 }
        if (r0 == 0) goto L_0x1879;
    L_0x185d:
        r0 = android.os.Build.VERSION.SDK_INT;	 Catch:{ Throwable -> 0x1875 }
        if (r0 < r11) goto L_0x1879;
    L_0x1861:
        r0 = org.telegram.messenger.SharedConfig.passcodeHash;	 Catch:{ Throwable -> 0x1875 }
        r0 = r0.length();	 Catch:{ Throwable -> 0x1875 }
        if (r0 == 0) goto L_0x186d;
    L_0x1869:
        r0 = org.telegram.messenger.SharedConfig.allowScreenCapture;	 Catch:{ Throwable -> 0x1875 }
        if (r0 == 0) goto L_0x1879;
    L_0x186d:
        r0 = org.telegram.messenger.MediaController.getInstance();	 Catch:{ Throwable -> 0x1875 }
        r0.setFlagSecure(r7, r10);	 Catch:{ Throwable -> 0x1875 }
        goto L_0x1879;
    L_0x1875:
        r0 = move-exception;
        org.telegram.messenger.FileLog.e(r0);
    L_0x1879:
        r11 = r23;
        if (r11 == 0) goto L_0x1882;
    L_0x187d:
        r0 = r7.chatActivityEnterView;
        r0.setFieldText(r11);
    L_0x1882:
        r32.fixLayoutInternal();
        r0 = r7.fragmentView;
        return r0;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.createView(android.content.Context):android.view.View");
    }

    public /* synthetic */ void lambda$createView$6$ChatActivity(View view) {
        if (this.floatingDateView.getAlpha() != 0.0f && !this.actionBar.isActionModeShowed()) {
            Calendar instance = Calendar.getInstance();
            instance.setTimeInMillis(((long) this.floatingDateView.getCustomDate()) * 1000);
            int i = instance.get(1);
            int i2 = instance.get(2);
            int i3 = instance.get(5);
            instance.clear();
            instance.set(i, i2, i3);
            jumpToDate((int) (instance.getTime().getTime() / 1000));
        }
    }

    public /* synthetic */ void lambda$createView$7$ChatActivity(View view) {
        this.wasManualScroll = true;
        ChatFull chatFull = this.chatInfo;
        if (chatFull != null) {
            scrollToMessageId(chatFull.pinned_msg_id, 0, true, 0, false);
            return;
        }
        UserFull userFull = this.userInfo;
        if (userFull != null) {
            scrollToMessageId(userFull.pinned_msg_id, 0, true, 0, false);
        }
    }

    public /* synthetic */ void lambda$createView$9$ChatActivity(View view) {
        if (getParentActivity() != null) {
            Chat chat = this.currentChat;
            boolean z = false;
            if (chat != null) {
                z = ChatObject.canPinMessages(chat);
            } else if (this.currentEncryptedChat == null) {
                UserFull userFull = this.userInfo;
                if (userFull != null) {
                    z = userFull.can_pin_message;
                }
            }
            if (z) {
                AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                builder.setTitle(LocaleController.getString("UnpinMessageAlertTitle", NUM));
                builder.setMessage(LocaleController.getString("UnpinMessageAlert", NUM));
                builder.setPositiveButton(LocaleController.getString("UnpinMessage", NUM), new -$$Lambda$ChatActivity$VDE4I_1TJtOt5ofSxoShI_veUKI(this));
                builder.setNegativeButton(LocaleController.getString("Cancel", NUM), null);
                showDialog(builder.create());
            } else {
                SharedPreferences notificationsSettings = MessagesController.getNotificationsSettings(this.currentAccount);
                String str = "pin_";
                Editor edit;
                StringBuilder stringBuilder;
                if (this.chatInfo != null) {
                    edit = notificationsSettings.edit();
                    stringBuilder = new StringBuilder();
                    stringBuilder.append(str);
                    stringBuilder.append(this.dialog_id);
                    edit.putInt(stringBuilder.toString(), this.chatInfo.pinned_msg_id).commit();
                } else if (this.userInfo != null) {
                    edit = notificationsSettings.edit();
                    stringBuilder = new StringBuilder();
                    stringBuilder.append(str);
                    stringBuilder.append(this.dialog_id);
                    edit.putInt(stringBuilder.toString(), this.userInfo.pinned_msg_id).commit();
                }
                updatePinnedMessageView(true);
            }
        }
    }

    public /* synthetic */ void lambda$null$8$ChatActivity(DialogInterface dialogInterface, int i) {
        getMessagesController().pinMessage(this.currentChat, this.currentUser, 0, false);
    }

    public /* synthetic */ void lambda$createView$11$ChatActivity(View view) {
        AlertsCreator.showBlockReportSpamAlert(this, this.dialog_id, this.currentUser, this.currentChat, this.currentEncryptedChat, this.reportSpamButton.getTag(NUM) != null, this.chatInfo, new -$$Lambda$ChatActivity$K0zSH5H4hmK-rEQ8__XLFanbOJM(this));
    }

    public /* synthetic */ void lambda$null$10$ChatActivity(int i) {
        if (i == 0) {
            updateTopPanel(true);
        } else {
            finishFragment();
        }
    }

    public /* synthetic */ void lambda$createView$13$ChatActivity(View view) {
        if (this.addToContactsButton.getTag() != null) {
            shareMyContact(1, null);
            return;
        }
        Bundle bundle = new Bundle();
        bundle.putInt("user_id", this.currentUser.id);
        bundle.putBoolean("addContact", true);
        ContactAddActivity contactAddActivity = new ContactAddActivity(bundle);
        contactAddActivity.setDelegate(new -$$Lambda$ChatActivity$VB4Z01GL3s5EmqcsfzV7ImbavTM(this));
        presentFragment(contactAddActivity);
    }

    public /* synthetic */ void lambda$null$12$ChatActivity() {
        this.undoView.setAdditionalTranslationY((float) AndroidUtilities.dp(51.0f));
        this.undoView.showWithAction(this.dialog_id, 8, this.currentUser);
    }

    public /* synthetic */ void lambda$createView$14$ChatActivity(View view) {
        getMessagesController().hidePeerSettingsBar(this.dialog_id, this.currentUser, this.currentChat);
        updateTopPanel(true);
    }

    public /* synthetic */ void lambda$createView$15$ChatActivity(View view) {
        this.wasManualScroll = true;
        this.checkTextureViewPosition = true;
        int i = this.createUnreadMessageAfterId;
        if (i != 0) {
            scrollToMessageId(i, 0, false, this.returnToLoadIndex, false);
            return;
        }
        int i2 = this.returnToMessageId;
        if (i2 > 0) {
            scrollToMessageId(i2, 0, true, this.returnToLoadIndex, false);
            return;
        }
        scrollToLastMessage(true);
    }

    public /* synthetic */ boolean lambda$createView$16$ChatActivity(View view) {
        for (int i = 0; i < this.messages.size(); i++) {
            MessageObject messageObject = (MessageObject) this.messages.get(i);
            if (messageObject.messageOwner.mentioned && !messageObject.isContentUnread()) {
                messageObject.setContentIsRead();
            }
        }
        this.newMentionsCount = 0;
        getMessagesController().markMentionsAsRead(this.dialog_id);
        this.hasAllMentionsLocal = true;
        showMentionDownButton(false, true);
        return true;
    }

    public /* synthetic */ boolean lambda$createView$17$ChatActivity(View view, MotionEvent motionEvent) {
        return ContentPreviewViewer.getInstance().onTouch(motionEvent, this.mentionListView, 0, this.mentionsOnItemClickListener, null);
    }

    public /* synthetic */ void lambda$createView$18$ChatActivity(View view, int i) {
        int i2 = i;
        if (!this.mentionsAdapter.isBannedInline()) {
            Object item = this.mentionsAdapter.getItem(i2);
            int resultStartPosition = this.mentionsAdapter.getResultStartPosition();
            int resultLength = this.mentionsAdapter.getResultLength();
            String str = "";
            String str2 = " ";
            String str3;
            ChatActivityEnterView chatActivityEnterView;
            StringBuilder stringBuilder;
            if (item instanceof User) {
                if (this.searchingForUser && this.searchContainer.getVisibility() == 0) {
                    this.searchingUserMessages = (User) item;
                    User user = this.searchingUserMessages;
                    if (user != null) {
                        str3 = user.first_name;
                        if (TextUtils.isEmpty(str3)) {
                            str3 = this.searchingUserMessages.last_name;
                        }
                        this.searchingForUser = false;
                        String string = LocaleController.getString("SearchFrom", NUM);
                        StringBuilder stringBuilder2 = new StringBuilder();
                        stringBuilder2.append(string);
                        stringBuilder2.append(str2);
                        stringBuilder2.append(str3);
                        SpannableString spannableString = new SpannableString(stringBuilder2.toString());
                        spannableString.setSpan(new ForegroundColorSpan(Theme.getColor("actionBarDefaultSubtitle")), string.length() + 1, spannableString.length(), 33);
                        this.searchItem.setSearchFieldCaption(spannableString);
                        this.mentionsAdapter.searchUsernameOrHashtag(null, 0, null, false);
                        this.searchItem.setSearchFieldHint(null);
                        this.searchItem.clearSearchText();
                        getMediaDataController().searchMessagesInChat("", this.dialog_id, this.mergeDialogId, this.classGuid, 0, this.searchingUserMessages);
                    } else {
                        return;
                    }
                }
                User user2 = (User) item;
                if (user2 != null) {
                    if (user2.username != null) {
                        chatActivityEnterView = this.chatActivityEnterView;
                        stringBuilder = new StringBuilder();
                        stringBuilder.append("@");
                        stringBuilder.append(user2.username);
                        stringBuilder.append(str2);
                        chatActivityEnterView.replaceWithText(resultStartPosition, resultLength, stringBuilder.toString(), false);
                    } else {
                        str3 = UserObject.getFirstName(user2, false);
                        StringBuilder stringBuilder3 = new StringBuilder();
                        stringBuilder3.append(str3);
                        stringBuilder3.append(str2);
                        SpannableString spannableString2 = new SpannableString(stringBuilder3.toString());
                        StringBuilder stringBuilder4 = new StringBuilder();
                        stringBuilder4.append(str);
                        stringBuilder4.append(user2.id);
                        spannableString2.setSpan(new URLSpanUserMention(stringBuilder4.toString(), 1), 0, spannableString2.length(), 33);
                        this.chatActivityEnterView.replaceWithText(resultStartPosition, resultLength, spannableString2, false);
                    }
                }
            } else if (item instanceof String) {
                if (!this.mentionsAdapter.isBotCommands()) {
                    chatActivityEnterView = this.chatActivityEnterView;
                    stringBuilder = new StringBuilder();
                    stringBuilder.append(item);
                    stringBuilder.append(str2);
                    chatActivityEnterView.replaceWithText(resultStartPosition, resultLength, stringBuilder.toString(), false);
                } else if (!checkSlowMode(view)) {
                    getSendMessagesHelper().sendMessage((String) item, this.dialog_id, this.replyingMessageObject, null, false, null, null, null);
                    this.chatActivityEnterView.setFieldText(str);
                    hideFieldPanel(false);
                }
            } else if (item instanceof BotInlineResult) {
                if (this.chatActivityEnterView.getFieldText() != null && !checkSlowMode(view)) {
                    BotInlineResult botInlineResult = (BotInlineResult) item;
                    if ((!botInlineResult.type.equals("photo") || (botInlineResult.photo == null && botInlineResult.content == null)) && ((!botInlineResult.type.equals("gif") || (botInlineResult.document == null && botInlineResult.content == null)) && (!botInlineResult.type.equals("video") || botInlineResult.document == null))) {
                        sendBotInlineResult(botInlineResult);
                    } else {
                        ArrayList arrayList = new ArrayList(this.mentionsAdapter.getSearchResultBotContext());
                        this.botContextResults = arrayList;
                        PhotoViewer.getInstance().setParentActivity(getParentActivity());
                        PhotoViewer.getInstance().openPhotoForSelect(arrayList, this.mentionsAdapter.getItemPosition(i2), 3, this.botContextProvider, null);
                    }
                }
            } else if (item instanceof TL_inlineBotSwitchPM) {
                processInlineBotContextPM((TL_inlineBotSwitchPM) item);
            } else if (item instanceof KeywordResult) {
                str3 = ((KeywordResult) item).emoji;
                this.chatActivityEnterView.addEmojiToRecent(str3);
                this.chatActivityEnterView.replaceWithText(resultStartPosition, resultLength, str3, true);
            }
        }
    }

    public /* synthetic */ boolean lambda$createView$20$ChatActivity(View view, int i) {
        boolean z = false;
        if (getParentActivity() != null && this.mentionsAdapter.isLongClickEnabled()) {
            Object item = this.mentionsAdapter.getItem(i);
            if (item instanceof String) {
                if (!this.mentionsAdapter.isBotCommands()) {
                    AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                    builder.setTitle(LocaleController.getString("AppName", NUM));
                    builder.setMessage(LocaleController.getString("ClearSearch", NUM));
                    builder.setPositiveButton(LocaleController.getString("ClearButton", NUM).toUpperCase(), new -$$Lambda$ChatActivity$pmQXQaae4jIRCs8iHrx2sNxvjL8(this));
                    builder.setNegativeButton(LocaleController.getString("Cancel", NUM), null);
                    showDialog(builder.create());
                    return true;
                } else if (!URLSpanBotCommand.enabled) {
                    return false;
                } else {
                    this.chatActivityEnterView.setFieldText("");
                    ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
                    String str = (String) item;
                    Chat chat = this.currentChat;
                    if (chat != null && chat.megagroup) {
                        z = true;
                    }
                    chatActivityEnterView.setCommand(null, str, true, z);
                    return true;
                }
            }
        }
        return false;
    }

    public /* synthetic */ void lambda$null$19$ChatActivity(DialogInterface dialogInterface, int i) {
        this.mentionsAdapter.clearRecentHashtags();
    }

    public /* synthetic */ boolean lambda$createView$21$ChatActivity(View view, MotionEvent motionEvent) {
        if (motionEvent.getAction() == 0) {
            checkRecordLocked();
        }
        this.overlayView.getParent().requestDisallowInterceptTouchEvent(true);
        return true;
    }

    public /* synthetic */ void lambda$createView$23$ChatActivity(View view) {
        ArrayList arrayList = this.forwardingMessages;
        if (arrayList == null || arrayList.isEmpty()) {
            MessageObject messageObject = this.replyingMessageObject;
            if (messageObject != null) {
                scrollToMessageId(messageObject.getId(), 0, true, 0, false);
                return;
            }
            messageObject = this.editingMessageObject;
            if (messageObject != null && messageObject.canEditMedia() && this.editingMessageObjectReqId == 0) {
                if (this.chatAttachAlert == null) {
                    createChatAttachView();
                }
                this.chatAttachAlert.setEditingMessageObject(this.editingMessageObject);
                openAttachMenu();
                return;
            }
            return;
        }
        int size = this.forwardingMessages.size();
        for (int i = 0; i < size; i++) {
            MessageObject messageObject2 = (MessageObject) this.forwardingMessages.get(i);
            this.selectedMessagesIds[0].put(messageObject2.getId(), messageObject2);
        }
        Bundle bundle = new Bundle();
        bundle.putBoolean("onlySelect", true);
        bundle.putInt("dialogsType", 3);
        bundle.putInt("messagesCount", this.forwardingMessages.size());
        DialogsActivity dialogsActivity = new DialogsActivity(bundle);
        dialogsActivity.setDelegate(this);
        presentFragment(dialogsActivity);
    }

    public /* synthetic */ void lambda$createView$24$ChatActivity(View view) {
        ArrayList arrayList = this.forwardingMessages;
        if (arrayList != null) {
            arrayList.clear();
        }
        showFieldPanel(false, null, null, null, this.foundWebPage, true, true);
    }

    public /* synthetic */ boolean lambda$createView$25$ChatActivity(ContentPreviewViewerDelegate contentPreviewViewerDelegate, View view, MotionEvent motionEvent) {
        return ContentPreviewViewer.getInstance().onTouch(motionEvent, this.stickersListView, 0, this.stickersOnItemClickListener, contentPreviewViewerDelegate);
    }

    public /* synthetic */ void lambda$createView$27$ChatActivity(View view) {
        getMediaDataController().searchMessagesInChat(null, this.dialog_id, this.mergeDialogId, this.classGuid, 1, this.searchingUserMessages);
    }

    public /* synthetic */ void lambda$createView$28$ChatActivity(View view) {
        getMediaDataController().searchMessagesInChat(null, this.dialog_id, this.mergeDialogId, this.classGuid, 2, this.searchingUserMessages);
    }

    public /* synthetic */ void lambda$createView$29$ChatActivity(View view) {
        this.mentionLayoutManager.setReverseLayout(true);
        this.mentionsAdapter.setSearchingMentions(true);
        this.searchCalendarButton.setVisibility(8);
        this.searchUserButton.setVisibility(8);
        this.searchingForUser = true;
        this.searchingUserMessages = null;
        this.searchItem.setSearchFieldHint(LocaleController.getString("SearchMembers", NUM));
        this.searchItem.setSearchFieldCaption(LocaleController.getString("SearchFrom", NUM));
        AndroidUtilities.showKeyboard(this.searchItem.getSearchField());
        this.searchItem.clearSearchText();
    }

    public /* synthetic */ void lambda$createView$33$ChatActivity(View view) {
        if (getParentActivity() != null) {
            AndroidUtilities.hideKeyboard(this.searchItem.getSearchField());
            Calendar instance = Calendar.getInstance();
            try {
                DatePickerDialog datePickerDialog = new DatePickerDialog(getParentActivity(), new -$$Lambda$ChatActivity$ZHEW6hRxAy45x03slS8-b1mBrag(this), instance.get(1), instance.get(2), instance.get(5));
                DatePicker datePicker = datePickerDialog.getDatePicker();
                datePicker.setMinDate(1375315200000L);
                datePicker.setMaxDate(System.currentTimeMillis());
                datePickerDialog.setButton(-1, LocaleController.getString("JumpToDate", NUM), datePickerDialog);
                datePickerDialog.setButton(-2, LocaleController.getString("Cancel", NUM), -$$Lambda$ChatActivity$RRFkmsQWWgvhuh1RJdJ8Ri-b7B4.INSTANCE);
                if (VERSION.SDK_INT >= 21) {
                    datePickerDialog.setOnShowListener(new -$$Lambda$ChatActivity$ud5NBLWSViMxFEOUEbipkMHf8-M(datePicker));
                }
                showDialog(datePickerDialog);
            } catch (Exception e) {
                FileLog.e(e);
            }
        }
    }

    public /* synthetic */ void lambda$null$30$ChatActivity(DatePicker datePicker, int i, int i2, int i3) {
        Calendar instance = Calendar.getInstance();
        instance.clear();
        instance.set(i, i2, i3);
        int time = (int) (instance.getTime().getTime() / 1000);
        clearChatData();
        this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
        MessagesController messagesController = getMessagesController();
        long j = this.dialog_id;
        int i4 = this.classGuid;
        boolean isChannel = ChatObject.isChannel(this.currentChat);
        int i5 = this.lastLoadIndex;
        this.lastLoadIndex = i5 + 1;
        messagesController.loadMessages(j, 30, 0, time, true, 0, i4, 4, 0, isChannel, i5);
    }

    static /* synthetic */ void lambda$null$32(DatePicker datePicker, DialogInterface dialogInterface) {
        int childCount = datePicker.getChildCount();
        for (int i = 0; i < childCount; i++) {
            View childAt = datePicker.getChildAt(i);
            ViewGroup.LayoutParams layoutParams = childAt.getLayoutParams();
            layoutParams.width = -1;
            childAt.setLayoutParams(layoutParams);
        }
    }

    public /* synthetic */ void lambda$createView$36$ChatActivity(View view) {
        if (getParentActivity() != null) {
            User user = this.currentUser;
            String str;
            if (user == null || !this.userBlocked) {
                user = this.currentUser;
                if (user != null && user.bot) {
                    str = this.botUser;
                    if (str != null) {
                        if (str.length() != 0) {
                            getMessagesController().sendBotStart(this.currentUser, this.botUser);
                        } else {
                            getSendMessagesHelper().sendMessage("/start", this.dialog_id, null, null, false, null, null, null);
                        }
                        this.botUser = null;
                        updateBottomOverlay();
                    }
                }
                if (ChatObject.isChannel(this.currentChat)) {
                    Chat chat = this.currentChat;
                    if (!(chat instanceof TL_channelForbidden)) {
                        if (ChatObject.isNotInChat(chat)) {
                            showBottomOverlayProgress(true, true);
                            getMessagesController().addUserToChat(this.currentChat.id, getUserConfig().getCurrentUser(), null, 0, null, this, null);
                            NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.closeSearchByActiveAction, new Object[0]);
                            if (hasReportSpam() && this.reportSpamButton.getTag(NUM) != null) {
                                Editor edit = MessagesController.getNotificationsSettings(this.currentAccount).edit();
                                StringBuilder stringBuilder = new StringBuilder();
                                stringBuilder.append("dialog_bar_vis3");
                                stringBuilder.append(this.dialog_id);
                                edit.putInt(stringBuilder.toString(), 3).commit();
                                getNotificationCenter().postNotificationName(NotificationCenter.peerSettingsDidLoad, Long.valueOf(this.dialog_id));
                            }
                        } else {
                            toggleMute(true);
                        }
                    }
                }
                AlertsCreator.createClearOrDeleteDialogAlert(this, false, this.currentChat, this.currentUser, this.currentEncryptedChat != null, new -$$Lambda$ChatActivity$eb7XWJ3Pwqhr4Z2ATOeozWBa1iI(this));
            } else if (user.bot) {
                str = this.botUser;
                this.botUser = null;
                getMessagesController().unblockUser(this.currentUser.id);
                if (str == null || str.length() == 0) {
                    getSendMessagesHelper().sendMessage("/start", this.dialog_id, null, null, false, null, null, null);
                } else {
                    getMessagesController().sendBotStart(this.currentUser, str);
                }
            } else {
                AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                builder.setMessage(LocaleController.getString("AreYouSureUnblockContact", NUM));
                builder.setPositiveButton(LocaleController.getString("OK", NUM), new -$$Lambda$ChatActivity$dy0MyrA47LqMZd-WgTxidaRN93k(this));
                builder.setTitle(LocaleController.getString("AppName", NUM));
                builder.setNegativeButton(LocaleController.getString("Cancel", NUM), null);
                showDialog(builder.create());
            }
        }
    }

    public /* synthetic */ void lambda$null$34$ChatActivity(DialogInterface dialogInterface, int i) {
        getMessagesController().unblockUser(this.currentUser.id);
    }

    public /* synthetic */ void lambda$null$35$ChatActivity(boolean z) {
        getNotificationCenter().removeObserver(this, NotificationCenter.closeChats);
        getNotificationCenter().postNotificationName(NotificationCenter.closeChats, new Object[0]);
        finishFragment();
        getNotificationCenter().postNotificationName(NotificationCenter.needDeleteDialog, Long.valueOf(this.dialog_id), this.currentUser, this.currentChat, Boolean.valueOf(z));
    }

    public /* synthetic */ void lambda$createView$37$ChatActivity(View view) {
        if (this.chatInfo != null) {
            Bundle bundle = new Bundle();
            bundle.putInt("chat_id", this.chatInfo.linked_chat_id);
            if (getMessagesController().checkCanOpenChat(bundle, this)) {
                presentFragment(new ChatActivity(bundle));
            }
        }
    }

    public /* synthetic */ void lambda$createView$38$ChatActivity(View view) {
        MessageObject messageObject = null;
        int i = 1;
        while (i >= 0) {
            if (messageObject == null && this.selectedMessagesIds[i].size() != 0) {
                messageObject = (MessageObject) this.messagesDict[i].get(this.selectedMessagesIds[i].keyAt(0));
            }
            this.selectedMessagesIds[i].clear();
            this.selectedMessagesCanCopyIds[i].clear();
            this.selectedMessagesCanStarIds[i].clear();
            i--;
        }
        hideActionMode();
        if (messageObject != null) {
            i = messageObject.messageOwner.id;
            if (i > 0 || (i < 0 && this.currentEncryptedChat != null)) {
                showFieldPanelForReply(messageObject);
            }
        }
        updatePinnedMessageView(true);
        updateVisibleRows();
    }

    public /* synthetic */ void lambda$createView$39$ChatActivity(View view) {
        openForward();
    }

    private TextureView createTextureView(boolean z) {
        if (this.parentLayout == null) {
            return null;
        }
        if (this.videoPlayerContainer == null) {
            if (VERSION.SDK_INT >= 21) {
                this.videoPlayerContainer = new FrameLayout(getParentActivity()) {
                    public void setTranslationY(float f) {
                        super.setTranslationY(f);
                        ChatActivity.this.contentView.invalidate();
                    }
                };
                this.videoPlayerContainer.setOutlineProvider(new ViewOutlineProvider() {
                    @TargetApi(21)
                    public void getOutline(View view, Outline outline) {
                        if (view.getTag(NUM) != null) {
                            outline.setRoundRect(0, 0, view.getMeasuredWidth(), view.getMeasuredHeight(), (float) AndroidUtilities.dp(4.0f));
                            return;
                        }
                        int i = AndroidUtilities.roundMessageSize;
                        outline.setOval(0, 0, i, i);
                    }
                });
                this.videoPlayerContainer.setClipToOutline(true);
            } else {
                this.videoPlayerContainer = new FrameLayout(getParentActivity()) {
                    RectF rect = new RectF();

                    /* Access modifiers changed, original: protected */
                    public void onSizeChanged(int i, int i2, int i3, int i4) {
                        super.onSizeChanged(i, i2, i3, i4);
                        ChatActivity.this.aspectPath.reset();
                        if (getTag(NUM) != null) {
                            this.rect.set(0.0f, 0.0f, (float) i, (float) i2);
                            ChatActivity.this.aspectPath.addRoundRect(this.rect, (float) AndroidUtilities.dp(4.0f), (float) AndroidUtilities.dp(4.0f), Direction.CW);
                        } else {
                            float f = (float) (i / 2);
                            ChatActivity.this.aspectPath.addCircle(f, (float) (i2 / 2), f, Direction.CW);
                        }
                        ChatActivity.this.aspectPath.toggleInverseFillType();
                    }

                    public void setTranslationY(float f) {
                        super.setTranslationY(f);
                        ChatActivity.this.contentView.invalidate();
                    }

                    public void setVisibility(int i) {
                        super.setVisibility(i);
                        if (i == 0) {
                            setLayerType(2, null);
                        }
                    }

                    /* Access modifiers changed, original: protected */
                    public void dispatchDraw(Canvas canvas) {
                        super.dispatchDraw(canvas);
                        if (getTag() == null) {
                            canvas.drawPath(ChatActivity.this.aspectPath, ChatActivity.this.aspectPaint);
                        }
                    }
                };
                this.aspectPath = new Path();
                this.aspectPaint = new Paint(1);
                this.aspectPaint.setColor(-16777216);
                this.aspectPaint.setXfermode(new PorterDuffXfermode(Mode.CLEAR));
            }
            this.videoPlayerContainer.setWillNotDraw(false);
            this.aspectRatioFrameLayout = new AspectRatioFrameLayout(getParentActivity());
            this.aspectRatioFrameLayout.setBackgroundColor(0);
            if (z) {
                this.videoPlayerContainer.addView(this.aspectRatioFrameLayout, LayoutHelper.createFrame(-1, -1, 17));
            }
            this.videoTextureView = new TextureView(getParentActivity());
            this.videoTextureView.setOpaque(false);
            this.aspectRatioFrameLayout.addView(this.videoTextureView, LayoutHelper.createFrame(-1, -1.0f));
        }
        ViewGroup viewGroup = (ViewGroup) this.videoPlayerContainer.getParent();
        if (!(viewGroup == null || viewGroup == this.contentView)) {
            viewGroup.removeView(this.videoPlayerContainer);
            viewGroup = null;
        }
        if (viewGroup == null) {
            SizeNotifierFrameLayout sizeNotifierFrameLayout = this.contentView;
            FrameLayout frameLayout = this.videoPlayerContainer;
            int i = AndroidUtilities.roundMessageSize;
            sizeNotifierFrameLayout.addView(frameLayout, 1, new FrameLayout.LayoutParams(i, i));
        }
        this.videoPlayerContainer.setTag(null);
        this.aspectRatioFrameLayout.setDrawingReady(false);
        return this.videoTextureView;
    }

    private void destroyTextureView() {
        FrameLayout frameLayout = this.videoPlayerContainer;
        if (frameLayout != null && frameLayout.getParent() != null) {
            this.contentView.removeView(this.videoPlayerContainer);
            this.aspectRatioFrameLayout.setDrawingReady(false);
            this.videoPlayerContainer.setTag(null);
            if (VERSION.SDK_INT < 21) {
                this.videoPlayerContainer.setLayerType(0, null);
            }
        }
    }

    private void openForward() {
        Bundle bundle = new Bundle();
        bundle.putBoolean("onlySelect", true);
        bundle.putInt("dialogsType", 3);
        bundle.putInt("messagesCount", this.canForwardMessagesCount);
        DialogsActivity dialogsActivity = new DialogsActivity(bundle);
        dialogsActivity.setDelegate(this);
        presentFragment(dialogsActivity);
    }

    private void showBottomOverlayProgress(boolean z, boolean z2) {
        final boolean z3 = z;
        if ((!z3 || this.bottomOverlayProgress.getTag() == null) && (z3 || this.bottomOverlayProgress.getTag() != null)) {
            AnimatorSet animatorSet = this.bottomOverlayAnimation;
            Object obj = null;
            if (animatorSet != null) {
                animatorSet.cancel();
                this.bottomOverlayAnimation = null;
            }
            RadialProgressView radialProgressView = this.bottomOverlayProgress;
            if (z3) {
                obj = Integer.valueOf(1);
            }
            radialProgressView.setTag(obj);
            int i = 4;
            float f = 0.0f;
            float f2 = 0.1f;
            if (z2) {
                this.bottomOverlayAnimation = new AnimatorSet();
                if (z3) {
                    this.bottomOverlayProgress.setVisibility(0);
                    AnimatorSet animatorSet2 = this.bottomOverlayAnimation;
                    r14 = new Animator[9];
                    r14[0] = ObjectAnimator.ofFloat(this.bottomOverlayChatText, View.SCALE_X, new float[]{0.1f});
                    r14[1] = ObjectAnimator.ofFloat(this.bottomOverlayChatText, View.SCALE_Y, new float[]{0.1f});
                    r14[2] = ObjectAnimator.ofFloat(this.bottomOverlayChatText, View.ALPHA, new float[]{0.0f});
                    r14[3] = ObjectAnimator.ofFloat(this.bottomOverlayChatText2, View.SCALE_X, new float[]{0.1f});
                    r14[4] = ObjectAnimator.ofFloat(this.bottomOverlayChatText2, View.SCALE_Y, new float[]{0.1f});
                    r14[5] = ObjectAnimator.ofFloat(this.bottomOverlayChatText2, View.ALPHA, new float[]{0.0f});
                    r14[6] = ObjectAnimator.ofFloat(this.bottomOverlayProgress, View.SCALE_X, new float[]{1.0f});
                    r14[7] = ObjectAnimator.ofFloat(this.bottomOverlayProgress, View.SCALE_Y, new float[]{1.0f});
                    r14[8] = ObjectAnimator.ofFloat(this.bottomOverlayProgress, View.ALPHA, new float[]{1.0f});
                    animatorSet2.playTogether(r14);
                } else {
                    this.bottomOverlayChatText.setVisibility(0);
                    AnimatorSet animatorSet3 = this.bottomOverlayAnimation;
                    r9 = new Animator[9];
                    r9[0] = ObjectAnimator.ofFloat(this.bottomOverlayProgress, View.SCALE_X, new float[]{0.1f});
                    r9[1] = ObjectAnimator.ofFloat(this.bottomOverlayProgress, View.SCALE_Y, new float[]{0.1f});
                    r9[2] = ObjectAnimator.ofFloat(this.bottomOverlayProgress, View.ALPHA, new float[]{0.0f});
                    r9[3] = ObjectAnimator.ofFloat(this.bottomOverlayChatText, View.SCALE_X, new float[]{1.0f});
                    r9[4] = ObjectAnimator.ofFloat(this.bottomOverlayChatText, View.SCALE_Y, new float[]{1.0f});
                    r9[5] = ObjectAnimator.ofFloat(this.bottomOverlayChatText, View.ALPHA, new float[]{1.0f});
                    r9[6] = ObjectAnimator.ofFloat(this.bottomOverlayChatText2, View.SCALE_X, new float[]{1.0f});
                    r9[7] = ObjectAnimator.ofFloat(this.bottomOverlayChatText2, View.SCALE_Y, new float[]{1.0f});
                    r9[8] = ObjectAnimator.ofFloat(this.bottomOverlayChatText2, View.ALPHA, new float[]{1.0f});
                    animatorSet3.playTogether(r9);
                }
                this.bottomOverlayAnimation.addListener(new AnimatorListenerAdapter() {
                    public void onAnimationEnd(Animator animator) {
                        if (ChatActivity.this.bottomOverlayAnimation != null && ChatActivity.this.bottomOverlayAnimation.equals(animator)) {
                            if (z3) {
                                ChatActivity.this.bottomOverlayChatText.setVisibility(4);
                            } else {
                                ChatActivity.this.bottomOverlayProgress.setVisibility(4);
                            }
                        }
                    }

                    public void onAnimationCancel(Animator animator) {
                        if (ChatActivity.this.bottomOverlayAnimation != null && ChatActivity.this.bottomOverlayAnimation.equals(animator)) {
                            ChatActivity.this.bottomOverlayAnimation = null;
                        }
                    }
                });
                this.bottomOverlayAnimation.setDuration(150);
                this.bottomOverlayAnimation.start();
            } else {
                this.bottomOverlayProgress.setVisibility(z3 ? 0 : 4);
                this.bottomOverlayProgress.setScaleX(z3 ? 1.0f : 0.1f);
                this.bottomOverlayProgress.setScaleY(z3 ? 1.0f : 0.1f);
                this.bottomOverlayProgress.setAlpha(1.0f);
                TextView textView = this.bottomOverlayChatText;
                if (!z3) {
                    i = 0;
                }
                textView.setVisibility(i);
                this.bottomOverlayChatText.setScaleX(z3 ? 0.1f : 1.0f);
                this.bottomOverlayChatText.setScaleY(z3 ? 0.1f : 1.0f);
                this.bottomOverlayChatText.setAlpha(z3 ? 0.0f : 1.0f);
                this.bottomOverlayChatText2.setScaleX(z3 ? 0.1f : 1.0f);
                UnreadCounterTextView unreadCounterTextView = this.bottomOverlayChatText2;
                if (!z3) {
                    f2 = 1.0f;
                }
                unreadCounterTextView.setScaleY(f2);
                unreadCounterTextView = this.bottomOverlayChatText2;
                if (!z3) {
                    f = 1.0f;
                }
                unreadCounterTextView.setAlpha(f);
            }
        }
    }

    private void sendBotInlineResult(BotInlineResult botInlineResult) {
        int contextBotId = this.mentionsAdapter.getContextBotId();
        HashMap hashMap = new HashMap();
        hashMap.put("id", botInlineResult.id);
        StringBuilder stringBuilder = new StringBuilder();
        String str = "";
        stringBuilder.append(str);
        stringBuilder.append(botInlineResult.query_id);
        hashMap.put("query_id", stringBuilder.toString());
        stringBuilder = new StringBuilder();
        stringBuilder.append(str);
        stringBuilder.append(contextBotId);
        hashMap.put("bot", stringBuilder.toString());
        hashMap.put("bot_name", this.mentionsAdapter.getContextBotName());
        SendMessagesHelper.prepareSendingBotContextResult(getAccountInstance(), botInlineResult, hashMap, this.dialog_id, this.replyingMessageObject);
        this.chatActivityEnterView.setFieldText(str);
        hideFieldPanel(false);
        getMediaDataController().increaseInlineRaiting(contextBotId);
    }

    private void mentionListViewUpdateLayout() {
        if (this.mentionListView.getChildCount() <= 0) {
            this.mentionListViewScrollOffsetY = 0;
            this.mentionListViewLastViewPosition = -1;
            return;
        }
        RecyclerListView recyclerListView = this.mentionListView;
        View childAt = recyclerListView.getChildAt(recyclerListView.getChildCount() - 1);
        Holder holder = (Holder) this.mentionListView.findContainingViewHolder(childAt);
        Holder holder2;
        int measuredHeight;
        RecyclerListView recyclerListView2;
        if (this.mentionLayoutManager.getReverseLayout()) {
            if (holder != null) {
                this.mentionListViewLastViewPosition = holder.getAdapterPosition();
                this.mentionListViewLastViewTop = childAt.getBottom();
            } else {
                this.mentionListViewLastViewPosition = -1;
            }
            childAt = this.mentionListView.getChildAt(0);
            holder2 = (Holder) this.mentionListView.findContainingViewHolder(childAt);
            measuredHeight = (childAt.getBottom() >= this.mentionListView.getMeasuredHeight() || holder2 == null || holder2.getAdapterPosition() != 0) ? this.mentionListView.getMeasuredHeight() : childAt.getBottom();
            if (this.mentionListViewScrollOffsetY != measuredHeight) {
                recyclerListView2 = this.mentionListView;
                this.mentionListViewScrollOffsetY = measuredHeight;
                recyclerListView2.setBottomGlowOffset(measuredHeight);
                this.mentionListView.setTopGlowOffset(0);
                this.mentionListView.invalidate();
                this.mentionContainer.invalidate();
            }
        } else {
            if (holder != null) {
                this.mentionListViewLastViewPosition = holder.getAdapterPosition();
                this.mentionListViewLastViewTop = childAt.getTop();
            } else {
                this.mentionListViewLastViewPosition = -1;
            }
            childAt = this.mentionListView.getChildAt(0);
            holder2 = (Holder) this.mentionListView.findContainingViewHolder(childAt);
            measuredHeight = (childAt.getTop() <= 0 || holder2 == null || holder2.getAdapterPosition() != 0) ? 0 : childAt.getTop();
            if (this.mentionListViewScrollOffsetY != measuredHeight) {
                recyclerListView2 = this.mentionListView;
                this.mentionListViewScrollOffsetY = measuredHeight;
                recyclerListView2.setTopGlowOffset(measuredHeight);
                this.mentionListView.setBottomGlowOffset(0);
                this.mentionListView.invalidate();
                this.mentionContainer.invalidate();
            }
        }
    }

    private void checkBotCommands() {
        boolean z = false;
        URLSpanBotCommand.enabled = false;
        User user = this.currentUser;
        if (user == null || !user.bot) {
            ChatFull chatFull = this.chatInfo;
            if (chatFull instanceof TL_chatFull) {
                int i;
                while (i < this.chatInfo.participants.participants.size()) {
                    user = getMessagesController().getUser(Integer.valueOf(((ChatParticipant) this.chatInfo.participants.participants.get(i)).user_id));
                    if (user == null || !user.bot) {
                        i++;
                    } else {
                        URLSpanBotCommand.enabled = true;
                        return;
                    }
                }
                return;
            } else if (chatFull instanceof TL_channelFull) {
                if (!chatFull.bot_info.isEmpty()) {
                    Chat chat = this.currentChat;
                    if (chat != null && chat.megagroup) {
                        z = true;
                    }
                }
                URLSpanBotCommand.enabled = z;
                return;
            } else {
                return;
            }
        }
        URLSpanBotCommand.enabled = true;
    }

    private GroupedMessages getValidGroupedMessage(MessageObject messageObject) {
        if (messageObject.getGroupId() == 0) {
            return null;
        }
        GroupedMessages groupedMessages = (GroupedMessages) this.groupedMessagesMap.get(messageObject.getGroupId());
        if (groupedMessages == null || (groupedMessages.messages.size() > 1 && groupedMessages.positions.get(messageObject) != null)) {
            return groupedMessages;
        }
        return null;
    }

    private void jumpToDate(int i) {
        int i2 = i;
        if (!this.messages.isEmpty()) {
            MessageObject messageObject = (MessageObject) this.messages.get(0);
            ArrayList arrayList = this.messages;
            int i3 = 1;
            MessageObject messageObject2 = (MessageObject) arrayList.get(arrayList.size() - 1);
            int size;
            if (messageObject.messageOwner.date >= i2 && messageObject2.messageOwner.date <= i2) {
                size = this.messages.size() - 1;
                while (size >= 0) {
                    messageObject2 = (MessageObject) this.messages.get(size);
                    if (messageObject2.messageOwner.date < i2 || messageObject2.getId() == 0) {
                        size--;
                    } else {
                        size = messageObject2.getId();
                        if (messageObject2.getDialogId() != this.mergeDialogId) {
                            i3 = 0;
                        }
                        scrollToMessageId(size, 0, false, i3, false);
                    }
                }
            } else if (((int) this.dialog_id) != 0) {
                clearChatData();
                this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
                MessagesController messagesController = getMessagesController();
                long j = this.dialog_id;
                int i4 = this.classGuid;
                boolean isChannel = ChatObject.isChannel(this.currentChat);
                size = this.lastLoadIndex;
                this.lastLoadIndex = size + 1;
                messagesController.loadMessages(j, 30, 0, i, true, 0, i4, 4, 0, isChannel, size);
                this.floatingDateView.setAlpha(0.0f);
                this.floatingDateView.setTag(null);
            }
        }
    }

    public void processInlineBotContextPM(TL_inlineBotSwitchPM tL_inlineBotSwitchPM) {
        if (tL_inlineBotSwitchPM != null) {
            User contextBotUser = this.mentionsAdapter.getContextBotUser();
            if (contextBotUser != null) {
                this.chatActivityEnterView.setFieldText("");
                long j = this.dialog_id;
                if (j == ((long) contextBotUser.id)) {
                    this.inlineReturn = j;
                    getMessagesController().sendBotStart(this.currentUser, tL_inlineBotSwitchPM.start_param);
                } else {
                    Bundle bundle = new Bundle();
                    bundle.putInt("user_id", contextBotUser.id);
                    bundle.putString("inline_query", tL_inlineBotSwitchPM.start_param);
                    bundle.putLong("inline_return", this.dialog_id);
                    if (getMessagesController().checkCanOpenChat(bundle, this)) {
                        presentFragment(new ChatActivity(bundle));
                    }
                }
            }
        }
    }

    private void createChatAttachView() {
        if (getParentActivity() != null && this.chatAttachAlert == null) {
            this.chatAttachAlert = new ChatAttachAlert(getParentActivity(), this) {
                public void dismissInternal() {
                    if (ChatActivity.this.chatAttachAlert.isShowing()) {
                        AndroidUtilities.requestAdjustResize(ChatActivity.this.getParentActivity(), ChatActivity.this.classGuid);
                        if (ChatActivity.this.chatActivityEnterView.getVisibility() == 0 && ChatActivity.this.fragmentView != null) {
                            ChatActivity.this.fragmentView.requestLayout();
                        }
                    }
                    super.dismissInternal();
                    if (ChatActivity.this.openKeyboardOnAttachMenuClose) {
                        AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$38$X1xph1TWo-y1HWnNmQbSpPzFgnc(this), 50);
                        ChatActivity.this.openKeyboardOnAttachMenuClose = false;
                    }
                }

                public /* synthetic */ void lambda$dismissInternal$0$ChatActivity$38() {
                    ChatActivity.this.chatActivityEnterView.openKeyboard();
                }
            };
            this.chatAttachAlert.setDelegate(new ChatAttachViewDelegate() {
                public void didPressedButton(int i, boolean z) {
                    int i2 = i;
                    if (!(ChatActivity.this.getParentActivity() == null || ChatActivity.this.chatAttachAlert == null)) {
                        if (ChatActivity.this.chatAttachAlert != null) {
                            ChatActivity chatActivity = ChatActivity.this;
                            chatActivity.editingMessageObject = chatActivity.chatAttachAlert.getEditingMessageObject();
                        } else {
                            ChatActivity.this.editingMessageObject = null;
                        }
                        if (i2 == 8 || i2 == 7 || (i2 == 4 && !ChatActivity.this.chatAttachAlert.getSelectedPhotos().isEmpty())) {
                            if (i2 != 8) {
                                ChatActivity.this.chatAttachAlert.dismiss();
                            }
                            HashMap selectedPhotos = ChatActivity.this.chatAttachAlert.getSelectedPhotos();
                            ArrayList selectedPhotosOrder = ChatActivity.this.chatAttachAlert.getSelectedPhotosOrder();
                            if (!selectedPhotos.isEmpty()) {
                                ArrayList arrayList = new ArrayList();
                                for (int i3 = 0; i3 < selectedPhotosOrder.size(); i3++) {
                                    PhotoEntry photoEntry = (PhotoEntry) selectedPhotos.get(selectedPhotosOrder.get(i3));
                                    SendingMediaInfo sendingMediaInfo = new SendingMediaInfo();
                                    String str = photoEntry.imagePath;
                                    if (str != null) {
                                        sendingMediaInfo.path = str;
                                    } else {
                                        str = photoEntry.path;
                                        if (str != null) {
                                            sendingMediaInfo.path = str;
                                        }
                                    }
                                    sendingMediaInfo.isVideo = photoEntry.isVideo;
                                    CharSequence charSequence = photoEntry.caption;
                                    sendingMediaInfo.caption = charSequence != null ? charSequence.toString() : null;
                                    sendingMediaInfo.entities = photoEntry.entities;
                                    sendingMediaInfo.masks = !photoEntry.stickers.isEmpty() ? new ArrayList(photoEntry.stickers) : null;
                                    sendingMediaInfo.ttl = photoEntry.ttl;
                                    sendingMediaInfo.videoEditedInfo = photoEntry.editedInfo;
                                    sendingMediaInfo.canDeleteAfter = photoEntry.canDeleteAfter;
                                    arrayList.add(sendingMediaInfo);
                                    photoEntry.reset();
                                }
                                ChatActivity.this.fillEditingMediaWithCaption(((SendingMediaInfo) arrayList.get(0)).caption, ((SendingMediaInfo) arrayList.get(0)).entities);
                                SendMessagesHelper.prepareSendingMedia(ChatActivity.this.getAccountInstance(), arrayList, ChatActivity.this.dialog_id, ChatActivity.this.replyingMessageObject, null, i2 == 4, z, ChatActivity.this.editingMessageObject);
                                ChatActivity.this.hideFieldPanel(false);
                                ChatActivity.this.getMediaDataController().cleanDraft(ChatActivity.this.dialog_id, true);
                            }
                        } else {
                            if (ChatActivity.this.chatAttachAlert != null) {
                                ChatActivity.this.chatAttachAlert.dismissWithButtonClick(i2);
                            }
                            ChatActivity.this.processSelectedAttach(i2);
                        }
                    }
                }

                public View getRevealView() {
                    return ChatActivity.this.chatActivityEnterView.getAttachButton();
                }

                public void didSelectBot(User user) {
                    if (ChatActivity.this.chatActivityEnterView != null && !TextUtils.isEmpty(user.username)) {
                        ChatActivityEnterView chatActivityEnterView = ChatActivity.this.chatActivityEnterView;
                        StringBuilder stringBuilder = new StringBuilder();
                        stringBuilder.append("@");
                        stringBuilder.append(user.username);
                        stringBuilder.append(" ");
                        chatActivityEnterView.setFieldText(stringBuilder.toString());
                        ChatActivity.this.chatActivityEnterView.openKeyboard();
                    }
                }

                public void onCameraOpened() {
                    ChatActivity.this.chatActivityEnterView.closeKeyboard();
                }

                public void needEnterComment() {
                    if (ChatActivity.this.chatActivityEnterView.isKeyboardVisible()) {
                        ChatActivity.this.chatActivityEnterView.showEmojiView();
                        ChatActivity.this.openKeyboardOnAttachMenuClose = true;
                    }
                    AndroidUtilities.setAdjustResizeToNothing(ChatActivity.this.getParentActivity(), ChatActivity.this.classGuid);
                    ChatActivity.this.fragmentView.requestLayout();
                }
            });
        }
    }

    public long getDialogId() {
        return this.dialog_id;
    }

    public boolean hasReportSpam() {
        FrameLayout frameLayout = this.topChatPanelView;
        return (frameLayout == null || frameLayout.getTag() != null || this.reportSpamButton.getVisibility() == 8) ? false : true;
    }

    public void setBotUser(String str) {
        if (this.inlineReturn != 0) {
            getMessagesController().sendBotStart(this.currentUser, str);
            return;
        }
        this.botUser = str;
        updateBottomOverlay();
    }

    public boolean playFirstUnreadVoiceMessage() {
        ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
        if (chatActivityEnterView != null && chatActivityEnterView.isRecordingAudioVideo()) {
            return true;
        }
        for (int size = this.messages.size() - 1; size >= 0; size--) {
            MessageObject messageObject = (MessageObject) this.messages.get(size);
            if ((messageObject.isVoice() || messageObject.isRoundVideo()) && messageObject.isContentUnread() && !messageObject.isOut()) {
                MediaController.getInstance().setVoiceMessagesPlaylist(MediaController.getInstance().playMessage(messageObject) ? createVoiceMessagesPlaylist(messageObject, true) : null, true);
                return true;
            }
        }
        if (VERSION.SDK_INT >= 23 && getParentActivity() != null) {
            if (getParentActivity().checkSelfPermission("android.permission.RECORD_AUDIO") != 0) {
                getParentActivity().requestPermissions(new String[]{"android.permission.RECORD_AUDIO"}, 3);
                return true;
            }
        }
        return false;
    }

    private void initStickers() {
        if (this.chatActivityEnterView != null && getParentActivity() != null && this.stickersAdapter == null) {
            EncryptedChat encryptedChat = this.currentEncryptedChat;
            if (encryptedChat == null || AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) >= 23) {
                this.stickersListView.setPadding(AndroidUtilities.dp(18.0f), 0, AndroidUtilities.dp(18.0f), 0);
                RecyclerListView recyclerListView = this.stickersListView;
                StickersAdapter stickersAdapter = new StickersAdapter(getParentActivity(), new -$$Lambda$ChatActivity$x_1VBEVh2QfBPofNf5BzBpjNZ6c(this));
                this.stickersAdapter = stickersAdapter;
                recyclerListView.setAdapter(stickersAdapter);
                recyclerListView = this.stickersListView;
                OnItemClickListener -__lambda_chatactivity_xexxc4dxtdhxd7wwpvtvcxdjgqk = new -$$Lambda$ChatActivity$xexXc4DxtDHxd7WwPVtVcxdJGQk(this);
                this.stickersOnItemClickListener = -__lambda_chatactivity_xexxc4dxtdhxd7wwpvtvcxdjgqk;
                recyclerListView.setOnItemClickListener(-__lambda_chatactivity_xexxc4dxtdhxd7wwpvtvcxdjgqk);
            }
        }
    }

    public /* synthetic */ void lambda$initStickers$40$ChatActivity(final boolean z) {
        if (z) {
            int dp = this.stickersAdapter.isShowingKeywords() ? AndroidUtilities.dp(24.0f) : 0;
            if (dp != this.stickersListView.getPaddingTop() || this.stickersPanel.getTag() == null) {
                this.stickersListView.setPadding(AndroidUtilities.dp(18.0f), dp, AndroidUtilities.dp(18.0f), 0);
                this.stickersListView.scrollToPosition(0);
                ((FrameLayout.LayoutParams) this.stickersPanelArrow.getLayoutParams()).gravity = (this.chatActivityEnterView.isRtlText() ? 5 : 3) | 80;
                this.stickersPanelArrow.requestLayout();
            }
        }
        if ((!z || this.stickersPanel.getTag() == null) && (z || this.stickersPanel.getTag() != null)) {
            if (z) {
                this.stickersPanel.setVisibility(this.allowStickersPanel ? 0 : 4);
                this.stickersPanel.setTag(Integer.valueOf(1));
            } else {
                this.stickersPanel.setTag(null);
            }
            AnimatorSet animatorSet = this.runningAnimation;
            if (animatorSet != null) {
                animatorSet.cancel();
                this.runningAnimation = null;
            }
            if (this.stickersPanel.getVisibility() != 4) {
                this.runningAnimation = new AnimatorSet();
                AnimatorSet animatorSet2 = this.runningAnimation;
                Animator[] animatorArr = new Animator[1];
                FrameLayout frameLayout = this.stickersPanel;
                Property property = View.ALPHA;
                float[] fArr = new float[2];
                float f = 0.0f;
                fArr[0] = z ? 0.0f : 1.0f;
                if (z) {
                    f = 1.0f;
                }
                fArr[1] = f;
                animatorArr[0] = ObjectAnimator.ofFloat(frameLayout, property, fArr);
                animatorSet2.playTogether(animatorArr);
                this.runningAnimation.setDuration(150);
                this.runningAnimation.addListener(new AnimatorListenerAdapter() {
                    public void onAnimationEnd(Animator animator) {
                        if (ChatActivity.this.runningAnimation != null && ChatActivity.this.runningAnimation.equals(animator)) {
                            if (!z) {
                                ChatActivity.this.stickersAdapter.clearStickers();
                                ChatActivity.this.stickersPanel.setVisibility(8);
                                if (ContentPreviewViewer.getInstance().isVisible()) {
                                    ContentPreviewViewer.getInstance().close();
                                }
                                ContentPreviewViewer.getInstance().reset();
                            }
                            ChatActivity.this.runningAnimation = null;
                        }
                    }

                    public void onAnimationCancel(Animator animator) {
                        if (ChatActivity.this.runningAnimation != null && ChatActivity.this.runningAnimation.equals(animator)) {
                            ChatActivity.this.runningAnimation = null;
                        }
                    }
                });
                this.runningAnimation.start();
            } else if (!z) {
                this.stickersPanel.setVisibility(8);
            }
        }
    }

    public /* synthetic */ void lambda$initStickers$41$ChatActivity(View view, int i) {
        Object item = this.stickersAdapter.getItem(i);
        Object itemParent = this.stickersAdapter.getItemParent(i);
        if (item instanceof TL_document) {
            if (!checkSlowMode(view)) {
                Document document = (TL_document) item;
                getSendMessagesHelper().sendSticker(document, this.dialog_id, this.replyingMessageObject, itemParent);
                hideFieldPanel(false);
                this.chatActivityEnterView.addStickerToRecent(document);
                this.chatActivityEnterView.setFieldText("");
            }
        } else if (item instanceof String) {
            SpannableString spannableString = new SpannableString((String) item);
            Emoji.replaceEmoji(spannableString, this.chatActivityEnterView.getEditField().getPaint().getFontMetricsInt(), AndroidUtilities.dp(20.0f), false);
            this.chatActivityEnterView.setFieldText(spannableString, false);
        }
    }

    public void shareMyContact(int i, MessageObject messageObject) {
        AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
        builder.setTitle(LocaleController.getString("ShareYouPhoneNumberTitle", NUM));
        User user = this.currentUser;
        if (user == null) {
            builder.setMessage(LocaleController.getString("AreYouSureShareMyContactInfo", NUM));
        } else if (user.bot) {
            builder.setMessage(LocaleController.getString("AreYouSureShareMyContactInfoBot", NUM));
        } else {
            Object[] objArr = new Object[2];
            PhoneFormat instance = PhoneFormat.getInstance();
            StringBuilder stringBuilder = new StringBuilder();
            stringBuilder.append("+");
            stringBuilder.append(getUserConfig().getCurrentUser().phone);
            objArr[0] = instance.format(stringBuilder.toString());
            User user2 = this.currentUser;
            objArr[1] = ContactsController.formatName(user2.first_name, user2.last_name);
            builder.setMessage(AndroidUtilities.replaceTags(LocaleController.formatString("AreYouSureShareMyContactInfoUser", NUM, objArr)));
        }
        builder.setPositiveButton(LocaleController.getString("ShareContact", NUM), new -$$Lambda$ChatActivity$pJjZKiHW3kxptO2Qvbe9nI0kgVY(this, i, messageObject));
        builder.setNegativeButton(LocaleController.getString("Cancel", NUM), null);
        showDialog(builder.create());
    }

    public /* synthetic */ void lambda$shareMyContact$43$ChatActivity(int i, MessageObject messageObject, DialogInterface dialogInterface, int i2) {
        if (i == 1) {
            TL_contacts_acceptContact tL_contacts_acceptContact = new TL_contacts_acceptContact();
            tL_contacts_acceptContact.id = getMessagesController().getInputUser(this.currentUser);
            getConnectionsManager().sendRequest(tL_contacts_acceptContact, new -$$Lambda$ChatActivity$JFTK6UXIZ6VTztI635jr8gyBrzA(this));
            return;
        }
        SendMessagesHelper.getInstance(this.currentAccount).sendMessage(getUserConfig().getCurrentUser(), this.dialog_id, messageObject, null, null);
        moveScrollToLastMessage();
        hideFieldPanel(false);
    }

    public /* synthetic */ void lambda$null$42$ChatActivity(TLObject tLObject, TL_error tL_error) {
        if (tL_error == null) {
            getMessagesController().processUpdates((Updates) tLObject, false);
        }
    }

    private void hideVoiceHint() {
        this.voiceHintAnimation = new AnimatorSet();
        AnimatorSet animatorSet = this.voiceHintAnimation;
        Animator[] animatorArr = new Animator[1];
        animatorArr[0] = ObjectAnimator.ofFloat(this.voiceHintTextView, View.ALPHA, new float[]{0.0f});
        animatorSet.playTogether(animatorArr);
        this.voiceHintAnimation.addListener(new AnimatorListenerAdapter() {
            public void onAnimationEnd(Animator animator) {
                if (animator.equals(ChatActivity.this.voiceHintAnimation)) {
                    ChatActivity.this.voiceHintAnimation = null;
                    ChatActivity.this.voiceHintHideRunnable = null;
                    if (ChatActivity.this.voiceHintTextView != null) {
                        ChatActivity.this.voiceHintTextView.setVisibility(8);
                    }
                }
            }

            public void onAnimationCancel(Animator animator) {
                if (animator.equals(ChatActivity.this.voiceHintAnimation)) {
                    ChatActivity.this.voiceHintAnimation = null;
                    ChatActivity.this.voiceHintHideRunnable = null;
                }
            }
        });
        this.voiceHintAnimation.setDuration(300);
        this.voiceHintAnimation.start();
    }

    private void showVoiceHint(boolean z, boolean z2) {
        if (!(getParentActivity() == null || this.fragmentView == null || (z && this.voiceHintTextView == null))) {
            if (this.voiceHintTextView == null) {
                SizeNotifierFrameLayout sizeNotifierFrameLayout = (SizeNotifierFrameLayout) this.fragmentView;
                int indexOfChild = sizeNotifierFrameLayout.indexOfChild(this.chatActivityEnterView);
                if (indexOfChild != -1) {
                    this.voiceHintTextView = new TextView(getParentActivity());
                    this.voiceHintTextView.setBackgroundDrawable(Theme.createRoundRectDrawable(AndroidUtilities.dp(3.0f), Theme.getColor("chat_gifSaveHintBackground")));
                    this.voiceHintTextView.setTextColor(Theme.getColor("chat_gifSaveHintText"));
                    this.voiceHintTextView.setTextSize(1, 14.0f);
                    this.voiceHintTextView.setPadding(AndroidUtilities.dp(8.0f), AndroidUtilities.dp(7.0f), AndroidUtilities.dp(8.0f), AndroidUtilities.dp(7.0f));
                    this.voiceHintTextView.setGravity(16);
                    this.voiceHintTextView.setAlpha(0.0f);
                    sizeNotifierFrameLayout.addView(this.voiceHintTextView, indexOfChild + 1, LayoutHelper.createFrame(-2, -2.0f, 85, 5.0f, 0.0f, 5.0f, 3.0f));
                } else {
                    return;
                }
            }
            AnimatorSet animatorSet;
            if (z) {
                animatorSet = this.voiceHintAnimation;
                if (animatorSet != null) {
                    animatorSet.cancel();
                    this.voiceHintAnimation = null;
                }
                AndroidUtilities.cancelRunOnUIThread(this.voiceHintHideRunnable);
                this.voiceHintHideRunnable = null;
                if (this.voiceHintTextView.getVisibility() == 0) {
                    hideVoiceHint();
                }
                return;
            }
            int i;
            String str;
            TextView textView = this.voiceHintTextView;
            if (z2) {
                i = NUM;
                str = "HoldToVideo";
            } else {
                i = NUM;
                str = "HoldToAudio";
            }
            textView.setText(LocaleController.getString(str, i));
            Runnable runnable = this.voiceHintHideRunnable;
            if (runnable != null) {
                AnimatorSet animatorSet2 = this.voiceHintAnimation;
                if (animatorSet2 != null) {
                    animatorSet2.cancel();
                    this.voiceHintAnimation = null;
                } else {
                    AndroidUtilities.cancelRunOnUIThread(runnable);
                    -$$Lambda$ChatActivity$pe75AXzEVBCivaaObrUmNMqELz0 -__lambda_chatactivity_pe75axzevbcivaaobrumnmqelz0 = new -$$Lambda$ChatActivity$pe75AXzEVBCivaaObrUmNMqELz0(this);
                    this.voiceHintHideRunnable = -__lambda_chatactivity_pe75axzevbcivaaobrumnmqelz0;
                    AndroidUtilities.runOnUIThread(-__lambda_chatactivity_pe75axzevbcivaaobrumnmqelz0, 2000);
                    return;
                }
            } else if (this.voiceHintAnimation != null) {
                return;
            }
            this.voiceHintTextView.setVisibility(0);
            this.voiceHintAnimation = new AnimatorSet();
            animatorSet = this.voiceHintAnimation;
            Animator[] animatorArr = new Animator[1];
            animatorArr[0] = ObjectAnimator.ofFloat(this.voiceHintTextView, View.ALPHA, new float[]{1.0f});
            animatorSet.playTogether(animatorArr);
            this.voiceHintAnimation.addListener(new AnimatorListenerAdapter() {
                public void onAnimationEnd(Animator animator) {
                    if (animator.equals(ChatActivity.this.voiceHintAnimation)) {
                        ChatActivity.this.voiceHintAnimation = null;
                        ChatActivity chatActivity = ChatActivity.this;
                        -$$Lambda$ChatActivity$42$q_FtZ4mUBdWh5WQN98Sbu_ePbjs -__lambda_chatactivity_42_q_ftz4mubdwh5wqn98sbu_epbjs = new -$$Lambda$ChatActivity$42$q_FtZ4mUBdWh5WQN98Sbu_ePbjs(this);
                        chatActivity.voiceHintHideRunnable = -__lambda_chatactivity_42_q_ftz4mubdwh5wqn98sbu_epbjs;
                        AndroidUtilities.runOnUIThread(-__lambda_chatactivity_42_q_ftz4mubdwh5wqn98sbu_epbjs, 2000);
                    }
                }

                public /* synthetic */ void lambda$onAnimationEnd$0$ChatActivity$42() {
                    ChatActivity.this.hideVoiceHint();
                }

                public void onAnimationCancel(Animator animator) {
                    if (animator.equals(ChatActivity.this.voiceHintAnimation)) {
                        ChatActivity.this.voiceHintAnimation = null;
                    }
                }
            });
            this.voiceHintAnimation.setDuration(300);
            this.voiceHintAnimation.start();
        }
    }

    private boolean checkSlowMode(View view) {
        CharSequence slowModeTimer = this.chatActivityEnterView.getSlowModeTimer();
        if (slowModeTimer == null) {
            return false;
        }
        showSlowModeHint(view, true, slowModeTimer);
        return true;
    }

    private void showSlowModeHint(View view, boolean z, CharSequence charSequence) {
        if (getParentActivity() != null && this.fragmentView != null) {
            if (!z) {
                HintView hintView = this.slowModeHint;
                if (hintView == null || hintView.getVisibility() != 0) {
                    return;
                }
            }
            this.slowModeHint.setText(AndroidUtilities.replaceTags(LocaleController.formatString("SlowModeHint", NUM, charSequence)));
            if (z) {
                this.slowModeHint.showForView(view, true);
            }
        }
    }

    private void showMediaBannedHint() {
        if (!(getParentActivity() == null || this.currentChat == null || this.fragmentView == null)) {
            TextView textView = this.mediaBanTooltip;
            if (textView == null || textView.getVisibility() != 0) {
                SizeNotifierFrameLayout sizeNotifierFrameLayout = (SizeNotifierFrameLayout) this.fragmentView;
                int indexOfChild = sizeNotifierFrameLayout.indexOfChild(this.chatActivityEnterView);
                if (indexOfChild != -1) {
                    if (this.mediaBanTooltip == null) {
                        this.mediaBanTooltip = new CorrectlyMeasuringTextView(getParentActivity());
                        this.mediaBanTooltip.setBackgroundDrawable(Theme.createRoundRectDrawable(AndroidUtilities.dp(3.0f), Theme.getColor("chat_gifSaveHintBackground")));
                        this.mediaBanTooltip.setTextColor(Theme.getColor("chat_gifSaveHintText"));
                        this.mediaBanTooltip.setPadding(AndroidUtilities.dp(8.0f), AndroidUtilities.dp(7.0f), AndroidUtilities.dp(8.0f), AndroidUtilities.dp(7.0f));
                        this.mediaBanTooltip.setGravity(16);
                        this.mediaBanTooltip.setTextSize(1, 14.0f);
                        this.mediaBanTooltip.setVisibility(8);
                        sizeNotifierFrameLayout.addView(this.mediaBanTooltip, indexOfChild + 1, LayoutHelper.createFrame(-2, -2.0f, 85, 30.0f, 0.0f, 5.0f, 3.0f));
                    }
                    if (ChatObject.isActionBannedByDefault(this.currentChat, 7)) {
                        this.mediaBanTooltip.setText(LocaleController.getString("GlobalAttachMediaRestricted", NUM));
                    } else {
                        TL_chatBannedRights tL_chatBannedRights = this.currentChat.banned_rights;
                        if (tL_chatBannedRights != null) {
                            if (AndroidUtilities.isBannedForever(tL_chatBannedRights)) {
                                this.mediaBanTooltip.setText(LocaleController.getString("AttachMediaRestrictedForever", NUM));
                            } else {
                                this.mediaBanTooltip.setText(LocaleController.formatString("AttachMediaRestricted", NUM, LocaleController.formatDateForBan((long) this.currentChat.banned_rights.until_date)));
                            }
                        } else {
                            return;
                        }
                    }
                    this.mediaBanTooltip.setVisibility(0);
                    AnimatorSet animatorSet = new AnimatorSet();
                    animatorSet.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.mediaBanTooltip, View.ALPHA, new float[]{0.0f, 1.0f})});
                    animatorSet.addListener(new AnimatorListenerAdapter() {
                        public void onAnimationEnd(Animator animator) {
                            AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$43$VO4nZS6qYAkQlcqiQljZq1QNAiE(this), 5000);
                        }

                        public /* synthetic */ void lambda$onAnimationEnd$0$ChatActivity$43() {
                            if (ChatActivity.this.mediaBanTooltip != null) {
                                AnimatorSet animatorSet = new AnimatorSet();
                                Animator[] animatorArr = new Animator[1];
                                animatorArr[0] = ObjectAnimator.ofFloat(ChatActivity.this.mediaBanTooltip, View.ALPHA, new float[]{0.0f});
                                animatorSet.playTogether(animatorArr);
                                animatorSet.addListener(new AnimatorListenerAdapter() {
                                    public void onAnimationEnd(Animator animator) {
                                        if (ChatActivity.this.mediaBanTooltip != null) {
                                            ChatActivity.this.mediaBanTooltip.setVisibility(8);
                                        }
                                    }
                                });
                                animatorSet.setDuration(300);
                                animatorSet.start();
                            }
                        }
                    });
                    animatorSet.setDuration(300);
                    animatorSet.start();
                }
            }
        }
    }

    private void showNoSoundHint() {
        if (!this.scrollingChatListView && !SharedConfig.noSoundHintShowed && this.chatListView != null && getParentActivity() != null && this.fragmentView != null) {
            HintView hintView = this.noSoundHintView;
            if (hintView == null || hintView.getTag() == null) {
                int i = 0;
                if (this.noSoundHintView == null) {
                    SizeNotifierFrameLayout sizeNotifierFrameLayout = (SizeNotifierFrameLayout) this.fragmentView;
                    int indexOfChild = sizeNotifierFrameLayout.indexOfChild(this.chatActivityEnterView);
                    if (indexOfChild != -1) {
                        this.noSoundHintView = new HintView(getParentActivity(), 0);
                        sizeNotifierFrameLayout.addView(this.noSoundHintView, indexOfChild + 1, LayoutHelper.createFrame(-2, -2.0f, 51, 19.0f, 0.0f, 19.0f, 0.0f));
                        this.noSoundHintView.setAlpha(0.0f);
                        this.noSoundHintView.setVisibility(4);
                    } else {
                        return;
                    }
                }
                int childCount = this.chatListView.getChildCount();
                while (i < childCount) {
                    View childAt = this.chatListView.getChildAt(i);
                    if (childAt instanceof ChatMessageCell) {
                        ChatMessageCell chatMessageCell = (ChatMessageCell) childAt;
                        MessageObject messageObject = chatMessageCell.getMessageObject();
                        if (messageObject != null && messageObject.isVideo()) {
                            AnimatedFileDrawable animation = chatMessageCell.getPhotoImage().getAnimation();
                            if (animation != null && animation.getCurrentProgressMs() >= 3000 && this.noSoundHintView.showForMessageCell(chatMessageCell, true)) {
                                SharedConfig.setNoSoundHintShowed(true);
                                break;
                            }
                        }
                    }
                    i++;
                }
            }
        }
    }

    private void showForwardHint(ChatMessageCell chatMessageCell) {
        if (!(this.scrollingChatListView || this.chatListView == null || getParentActivity() == null)) {
            View view = this.fragmentView;
            if (view != null) {
                if (this.forwardHintView == null) {
                    SizeNotifierFrameLayout sizeNotifierFrameLayout = (SizeNotifierFrameLayout) view;
                    int indexOfChild = sizeNotifierFrameLayout.indexOfChild(this.chatActivityEnterView);
                    if (indexOfChild != -1) {
                        this.forwardHintView = new HintView(getParentActivity(), 1);
                        sizeNotifierFrameLayout.addView(this.forwardHintView, indexOfChild + 1, LayoutHelper.createFrame(-2, -2.0f, 51, 19.0f, 0.0f, 19.0f, 0.0f));
                        this.forwardHintView.setAlpha(0.0f);
                        this.forwardHintView.setVisibility(4);
                    } else {
                        return;
                    }
                }
                this.forwardHintView.showForMessageCell(chatMessageCell, true);
            }
        }
    }

    private void showGifHint() {
        SharedPreferences globalMainSettings = MessagesController.getGlobalMainSettings();
        String str = "gifhint";
        if (!globalMainSettings.getBoolean(str, false)) {
            globalMainSettings.edit().putBoolean(str, true).commit();
            if (getParentActivity() != null) {
                View view = this.fragmentView;
                if (view != null && this.gifHintTextView == null) {
                    if (this.allowContextBotPanelSecond) {
                        SizeNotifierFrameLayout sizeNotifierFrameLayout = (SizeNotifierFrameLayout) view;
                        int indexOfChild = sizeNotifierFrameLayout.indexOfChild(this.chatActivityEnterView);
                        if (indexOfChild != -1) {
                            this.chatActivityEnterView.setOpenGifsTabFirst();
                            this.emojiButtonRed = new View(getParentActivity());
                            this.emojiButtonRed.setBackgroundResource(NUM);
                            indexOfChild++;
                            sizeNotifierFrameLayout.addView(this.emojiButtonRed, indexOfChild, LayoutHelper.createFrame(10, 10.0f, 83, 30.0f, 0.0f, 0.0f, 27.0f));
                            this.gifHintTextView = new TextView(getParentActivity());
                            this.gifHintTextView.setBackgroundDrawable(Theme.createRoundRectDrawable(AndroidUtilities.dp(3.0f), Theme.getColor("chat_gifSaveHintBackground")));
                            this.gifHintTextView.setTextColor(Theme.getColor("chat_gifSaveHintText"));
                            this.gifHintTextView.setTextSize(1, 14.0f);
                            this.gifHintTextView.setPadding(AndroidUtilities.dp(8.0f), AndroidUtilities.dp(7.0f), AndroidUtilities.dp(8.0f), AndroidUtilities.dp(7.0f));
                            this.gifHintTextView.setText(LocaleController.getString("TapHereGifs", NUM));
                            this.gifHintTextView.setGravity(16);
                            sizeNotifierFrameLayout.addView(this.gifHintTextView, indexOfChild, LayoutHelper.createFrame(-2, -2.0f, 83, 5.0f, 0.0f, 5.0f, 3.0f));
                            AnimatorSet animatorSet = new AnimatorSet();
                            animatorSet.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.gifHintTextView, View.ALPHA, new float[]{0.0f, 1.0f}), ObjectAnimator.ofFloat(this.emojiButtonRed, View.ALPHA, new float[]{0.0f, 1.0f})});
                            animatorSet.addListener(new AnimatorListenerAdapter() {
                                public void onAnimationEnd(Animator animator) {
                                    AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$44$R1vDtHEyccW887hwRWJ3Lkwgc2g(this), 2000);
                                }

                                public /* synthetic */ void lambda$onAnimationEnd$0$ChatActivity$44() {
                                    if (ChatActivity.this.gifHintTextView != null) {
                                        AnimatorSet animatorSet = new AnimatorSet();
                                        Animator[] animatorArr = new Animator[1];
                                        animatorArr[0] = ObjectAnimator.ofFloat(ChatActivity.this.gifHintTextView, View.ALPHA, new float[]{0.0f});
                                        animatorSet.playTogether(animatorArr);
                                        animatorSet.addListener(new AnimatorListenerAdapter() {
                                            public void onAnimationEnd(Animator animator) {
                                                if (ChatActivity.this.gifHintTextView != null) {
                                                    ChatActivity.this.gifHintTextView.setVisibility(8);
                                                }
                                            }
                                        });
                                        animatorSet.setDuration(300);
                                        animatorSet.start();
                                    }
                                }
                            });
                            animatorSet.setDuration(300);
                            animatorSet.start();
                        } else {
                            return;
                        }
                    }
                    ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
                    if (chatActivityEnterView != null) {
                        chatActivityEnterView.setOpenGifsTabFirst();
                    }
                }
            }
        }
    }

    private void openAttachMenu() {
        if (getParentActivity() != null) {
            createChatAttachView();
            this.chatAttachAlert.loadGalleryPhotos();
            int i = VERSION.SDK_INT;
            if (i == 21 || i == 22) {
                this.chatActivityEnterView.closeKeyboard();
            }
            Chat chat = this.currentChat;
            if (chat == null || ChatObject.hasAdminRights(chat) || !this.currentChat.slowmode_enabled) {
                this.chatAttachAlert.setMaxSelectedPhotos(-1, true);
            } else {
                this.chatAttachAlert.setMaxSelectedPhotos(10, true);
            }
            this.chatAttachAlert.init();
            showDialog(this.chatAttachAlert);
        }
    }

    private void checkContextBotPanel() {
        if (this.allowStickersPanel) {
            MentionsAdapter mentionsAdapter = this.mentionsAdapter;
            if (mentionsAdapter != null && mentionsAdapter.isBotContext()) {
                AnimatorSet animatorSet;
                if (this.allowContextBotPanel || this.allowContextBotPanelSecond) {
                    if (this.mentionContainer.getVisibility() == 4 || this.mentionContainer.getTag() != null) {
                        animatorSet = this.mentionListAnimation;
                        if (animatorSet != null) {
                            animatorSet.cancel();
                        }
                        this.mentionContainer.setTag(null);
                        this.mentionContainer.setVisibility(0);
                        updateMessageListAccessibilityVisibility();
                        this.mentionListAnimation = new AnimatorSet();
                        this.mentionListAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.mentionContainer, View.ALPHA, new float[]{0.0f, 1.0f})});
                        this.mentionListAnimation.addListener(new AnimatorListenerAdapter() {
                            public void onAnimationEnd(Animator animator) {
                                if (ChatActivity.this.mentionListAnimation != null && ChatActivity.this.mentionListAnimation.equals(animator)) {
                                    ChatActivity.this.mentionListAnimation = null;
                                }
                            }

                            public void onAnimationCancel(Animator animator) {
                                if (ChatActivity.this.mentionListAnimation != null && ChatActivity.this.mentionListAnimation.equals(animator)) {
                                    ChatActivity.this.mentionListAnimation = null;
                                }
                            }
                        });
                        this.mentionListAnimation.setDuration(200);
                        this.mentionListAnimation.start();
                    }
                } else if (this.mentionContainer.getVisibility() == 0 && this.mentionContainer.getTag() == null) {
                    animatorSet = this.mentionListAnimation;
                    if (animatorSet != null) {
                        animatorSet.cancel();
                    }
                    this.mentionContainer.setTag(Integer.valueOf(1));
                    this.mentionListAnimation = new AnimatorSet();
                    animatorSet = this.mentionListAnimation;
                    Animator[] animatorArr = new Animator[1];
                    animatorArr[0] = ObjectAnimator.ofFloat(this.mentionContainer, View.ALPHA, new float[]{0.0f});
                    animatorSet.playTogether(animatorArr);
                    this.mentionListAnimation.addListener(new AnimatorListenerAdapter() {
                        public void onAnimationEnd(Animator animator) {
                            if (ChatActivity.this.mentionListAnimation != null && ChatActivity.this.mentionListAnimation.equals(animator)) {
                                ChatActivity.this.mentionContainer.setVisibility(4);
                                ChatActivity.this.mentionListAnimation = null;
                                ChatActivity.this.updateMessageListAccessibilityVisibility();
                            }
                        }

                        public void onAnimationCancel(Animator animator) {
                            if (ChatActivity.this.mentionListAnimation != null && ChatActivity.this.mentionListAnimation.equals(animator)) {
                                ChatActivity.this.mentionListAnimation = null;
                            }
                        }
                    });
                    this.mentionListAnimation.setDuration(200);
                    this.mentionListAnimation.start();
                }
            }
        }
    }

    private void checkAutoDownloadMessages(boolean z) {
        RecyclerListView recyclerListView = this.chatListView;
        if (recyclerListView != null) {
            int childCount = recyclerListView.getChildCount();
            int i = -1;
            int i2 = -1;
            for (int i3 = 0; i3 < childCount; i3++) {
                View childAt = this.chatListView.getChildAt(i3);
                if (childAt instanceof ChatMessageCell) {
                    ViewHolder findContainingViewHolder = this.chatListView.findContainingViewHolder(childAt);
                    if (findContainingViewHolder != null) {
                        i2 = findContainingViewHolder.getAdapterPosition();
                        if (i == -1) {
                            i = i2;
                        }
                    }
                    ChatMessageCell chatMessageCell = (ChatMessageCell) childAt;
                    MessageObject messageObject = chatMessageCell.getMessageObject();
                    if (!(messageObject == null || messageObject.mediaExists || !messageObject.isSent())) {
                        Document document = messageObject.getDocument();
                        if (!(document == null || MessageObject.isStickerDocument(document) || MessageObject.isAnimatedStickerDocument(document) || MessageObject.isGifDocument(document) || MessageObject.isRoundVideoDocument(document))) {
                            int canDownloadMedia = getDownloadController().canDownloadMedia(messageObject.messageOwner);
                            if (canDownloadMedia != 0) {
                                int i4 = 2;
                                if (canDownloadMedia != 2) {
                                    FileLoader fileLoader = getFileLoader();
                                    if (!(MessageObject.isVideoDocument(document) && messageObject.shouldEncryptPhotoOrVideo())) {
                                        i4 = 0;
                                    }
                                    fileLoader.loadFile(document, messageObject, 0, i4);
                                    chatMessageCell.updateButtonState(false, true, false);
                                } else if (this.currentEncryptedChat == null && !messageObject.shouldEncryptPhotoOrVideo() && messageObject.canStreamVideo()) {
                                    getFileLoader().loadFile(document, messageObject, 0, 10);
                                }
                            }
                        }
                    }
                }
            }
            if (i != -1) {
                int i5;
                int access$14100;
                if (z) {
                    i5 = i2 + 10;
                    if (i5 >= this.chatAdapter.messagesEndRow) {
                        i5 = this.chatAdapter.messagesEndRow;
                    }
                    childCount = this.messages.size();
                    while (i2 < i5) {
                        access$14100 = i2 - this.chatAdapter.messagesStartRow;
                        if (access$14100 >= 0 && access$14100 < childCount) {
                            checkAutoDownloadMessage((MessageObject) this.messages.get(access$14100));
                        }
                        i2++;
                    }
                } else {
                    i5 = i - 20;
                    if (i5 <= this.chatAdapter.messagesStartRow) {
                        i5 = this.chatAdapter.messagesStartRow;
                    }
                    childCount = this.messages.size();
                    for (i--; i >= i5; i--) {
                        access$14100 = i - this.chatAdapter.messagesStartRow;
                        if (access$14100 >= 0 && access$14100 < childCount) {
                            checkAutoDownloadMessage((MessageObject) this.messages.get(access$14100));
                        }
                    }
                }
            }
            showNoSoundHint();
        }
    }

    private void checkAutoDownloadMessage(MessageObject messageObject) {
        if (!messageObject.mediaExists) {
            int canDownloadMedia = getDownloadController().canDownloadMedia(messageObject.messageOwner);
            if (canDownloadMedia != 0) {
                Document document = messageObject.getDocument();
                PhotoSize closestPhotoSizeWithSize = document == null ? FileLoader.getClosestPhotoSizeWithSize(messageObject.photoThumbs, AndroidUtilities.getPhotoSize()) : null;
                if (document != null || closestPhotoSizeWithSize != null) {
                    int i = 2;
                    if (canDownloadMedia == 2 || (canDownloadMedia == 1 && messageObject.isVideo())) {
                        if (document != null && this.currentEncryptedChat == null && !messageObject.shouldEncryptPhotoOrVideo() && messageObject.canStreamVideo()) {
                            getFileLoader().loadFile(document, messageObject, 0, 10);
                        }
                    } else if (document != null) {
                        FileLoader fileLoader = getFileLoader();
                        if (!(MessageObject.isVideoDocument(document) && messageObject.shouldEncryptPhotoOrVideo())) {
                            i = 0;
                        }
                        fileLoader.loadFile(document, messageObject, 0, i);
                    } else {
                        getFileLoader().loadFile(ImageLocation.getForObject(closestPhotoSizeWithSize, messageObject.photoThumbsObject), messageObject, null, 0, messageObject.shouldEncryptPhotoOrVideo() ? 2 : 0);
                    }
                }
            }
        }
    }

    private void showFloatingDateView(boolean z) {
        if (this.floatingDateView.getTag() == null) {
            AnimatorSet animatorSet = this.floatingDateAnimation;
            if (animatorSet != null) {
                animatorSet.cancel();
            }
            this.floatingDateView.setTag(Integer.valueOf(1));
            this.floatingDateAnimation = new AnimatorSet();
            this.floatingDateAnimation.setDuration(150);
            animatorSet = this.floatingDateAnimation;
            Animator[] animatorArr = new Animator[1];
            animatorArr[0] = ObjectAnimator.ofFloat(this.floatingDateView, View.ALPHA, new float[]{1.0f});
            animatorSet.playTogether(animatorArr);
            this.floatingDateAnimation.addListener(new AnimatorListenerAdapter() {
                public void onAnimationEnd(Animator animator) {
                    if (animator.equals(ChatActivity.this.floatingDateAnimation)) {
                        ChatActivity.this.floatingDateAnimation = null;
                    }
                }
            });
            this.floatingDateAnimation.start();
        }
        if (!z) {
            updateMessagesVisiblePart(false);
            this.hideDateDelay = 1000;
        }
    }

    private void hideFloatingDateView(boolean z) {
        if (this.floatingDateView.getTag() != null && !this.currentFloatingDateOnScreen) {
            if (!this.scrollingFloatingDate || this.currentFloatingTopIsNotMessage) {
                this.floatingDateView.setTag(null);
                AnimatorSet animatorSet;
                if (z) {
                    this.floatingDateAnimation = new AnimatorSet();
                    this.floatingDateAnimation.setDuration(150);
                    animatorSet = this.floatingDateAnimation;
                    Animator[] animatorArr = new Animator[1];
                    animatorArr[0] = ObjectAnimator.ofFloat(this.floatingDateView, View.ALPHA, new float[]{0.0f});
                    animatorSet.playTogether(animatorArr);
                    this.floatingDateAnimation.addListener(new AnimatorListenerAdapter() {
                        public void onAnimationEnd(Animator animator) {
                            if (animator.equals(ChatActivity.this.floatingDateAnimation)) {
                                ChatActivity.this.floatingDateAnimation = null;
                            }
                        }
                    });
                    this.floatingDateAnimation.setStartDelay((long) this.hideDateDelay);
                    this.floatingDateAnimation.start();
                } else {
                    animatorSet = this.floatingDateAnimation;
                    if (animatorSet != null) {
                        animatorSet.cancel();
                        this.floatingDateAnimation = null;
                    }
                    this.floatingDateView.setAlpha(0.0f);
                }
                this.hideDateDelay = 500;
            }
        }
    }

    /* Access modifiers changed, original: protected */
    public void onRemoveFromParent() {
        MessageObject playingMessageObject = MediaController.getInstance().getPlayingMessageObject();
        if (playingMessageObject == null || !playingMessageObject.isVideo()) {
            MediaController.getInstance().setTextureView(this.videoTextureView, null, null, false);
        } else {
            MediaController.getInstance().cleanupPlayer(true, true);
        }
    }

    /* Access modifiers changed, original: protected */
    public void setIgnoreAttachOnPause(boolean z) {
        this.ignoreAttachOnPause = z;
    }

    private void checkScrollForLoad(boolean z) {
        GridLayoutManagerFixed gridLayoutManagerFixed = this.chatLayoutManager;
        if (gridLayoutManagerFixed != null && !this.paused) {
            int i;
            int i2;
            int findFirstVisibleItemPosition = gridLayoutManagerFixed.findFirstVisibleItemPosition();
            if (findFirstVisibleItemPosition == -1) {
                i = 0;
            } else {
                i = Math.abs(this.chatLayoutManager.findLastVisibleItemPosition() - findFirstVisibleItemPosition) + 1;
            }
            if ((this.chatAdapter.getItemCount() - findFirstVisibleItemPosition) - i <= (z ? 25 : 5) && !this.loading) {
                boolean[] zArr = this.endReached;
                int i3;
                int i4;
                if (!zArr[0]) {
                    this.loading = true;
                    this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
                    if (this.messagesByDays.size() != 0) {
                        MessagesController messagesController = getMessagesController();
                        long j = this.dialog_id;
                        i2 = this.maxMessageId[0];
                        i3 = this.cacheEndReached[0] ^ 1;
                        int i5 = this.minDate[0];
                        i4 = this.classGuid;
                        boolean isChannel = ChatObject.isChannel(this.currentChat);
                        int i6 = this.lastLoadIndex;
                        this.lastLoadIndex = i6 + 1;
                        messagesController.loadMessages(j, 50, i2, 0, i3, i5, i4, 0, 0, isChannel, i6);
                    } else {
                        MessagesController messagesController2 = getMessagesController();
                        long j2 = this.dialog_id;
                        int i7 = this.cacheEndReached[0] ^ 1;
                        int i8 = this.minDate[0];
                        int i9 = this.classGuid;
                        boolean isChannel2 = ChatObject.isChannel(this.currentChat);
                        int i10 = this.lastLoadIndex;
                        this.lastLoadIndex = i10 + 1;
                        messagesController2.loadMessages(j2, 50, 0, 0, i7, i8, i9, 0, 0, isChannel2, i10);
                    }
                } else if (!(this.mergeDialogId == 0 || zArr[1])) {
                    this.loading = true;
                    this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
                    MessagesController messagesController3 = getMessagesController();
                    long j3 = this.mergeDialogId;
                    int i11 = this.maxMessageId[1];
                    i2 = this.cacheEndReached[1] ^ 1;
                    int i12 = this.minDate[1];
                    i3 = this.classGuid;
                    i4 = this.lastLoadIndex;
                    this.lastLoadIndex = i4 + 1;
                    messagesController3.loadMessages(j3, 50, i11, 0, i2, i12, i3, 0, 0, false, i4);
                }
            }
            if (i > 0 && !this.loadingForward && findFirstVisibleItemPosition <= 10) {
                MessagesController messagesController4;
                long j4;
                int i13;
                int i14;
                if (this.mergeDialogId != 0 && !this.forwardEndReached[1]) {
                    this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
                    messagesController4 = getMessagesController();
                    j4 = this.mergeDialogId;
                    i13 = this.minMessageId[1];
                    i14 = this.maxDate[1];
                    i2 = this.classGuid;
                    findFirstVisibleItemPosition = this.lastLoadIndex;
                    this.lastLoadIndex = findFirstVisibleItemPosition + 1;
                    messagesController4.loadMessages(j4, 50, i13, 0, true, i14, i2, 1, 0, false, findFirstVisibleItemPosition);
                    this.loadingForward = true;
                } else if (!this.forwardEndReached[0]) {
                    this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
                    messagesController4 = getMessagesController();
                    j4 = this.dialog_id;
                    i13 = this.minMessageId[0];
                    i14 = this.maxDate[0];
                    i2 = this.classGuid;
                    boolean isChannel3 = ChatObject.isChannel(this.currentChat);
                    findFirstVisibleItemPosition = this.lastLoadIndex;
                    this.lastLoadIndex = findFirstVisibleItemPosition + 1;
                    messagesController4.loadMessages(j4, 50, i13, 0, true, i14, i2, 1, 0, isChannel3, findFirstVisibleItemPosition);
                    this.loadingForward = true;
                }
            }
        }
    }

    /* JADX WARNING: Removed duplicated region for block: B:51:0x00c9  */
    /* JADX WARNING: Removed duplicated region for block: B:50:0x00c7  */
    /* JADX WARNING: Removed duplicated region for block: B:54:0x00ce  */
    /* JADX WARNING: Missing block: B:34:0x0095, code skipped:
            if (r11.send_gifs != false) goto L_0x0097;
     */
    private void processSelectedAttach(int r11) {
        /*
        r10 = this;
        r0 = "org.telegram.messenger.beta.provider";
        r1 = 24;
        r2 = "output";
        r3 = "android.permission.CAMERA";
        r4 = 2;
        r5 = 23;
        r6 = 0;
        r7 = 1;
        if (r11 != 0) goto L_0x0066;
    L_0x000f:
        r11 = android.os.Build.VERSION.SDK_INT;
        if (r11 < r5) goto L_0x002b;
    L_0x0013:
        r11 = r10.getParentActivity();
        r11 = r11.checkSelfPermission(r3);
        if (r11 == 0) goto L_0x002b;
    L_0x001d:
        r11 = r10.getParentActivity();
        r0 = new java.lang.String[r7];
        r0[r6] = r3;
        r1 = 19;
        r11.requestPermissions(r0, r1);
        return;
    L_0x002b:
        r11 = new android.content.Intent;	 Catch:{ Exception -> 0x0060 }
        r3 = "android.media.action.IMAGE_CAPTURE";
        r11.<init>(r3);	 Catch:{ Exception -> 0x0060 }
        r3 = org.telegram.messenger.AndroidUtilities.generatePicturePath();	 Catch:{ Exception -> 0x0060 }
        if (r3 == 0) goto L_0x005b;
    L_0x0038:
        r5 = android.os.Build.VERSION.SDK_INT;	 Catch:{ Exception -> 0x0060 }
        if (r5 < r1) goto L_0x004e;
    L_0x003c:
        r1 = r10.getParentActivity();	 Catch:{ Exception -> 0x0060 }
        r0 = androidx.core.content.FileProvider.getUriForFile(r1, r0, r3);	 Catch:{ Exception -> 0x0060 }
        r11.putExtra(r2, r0);	 Catch:{ Exception -> 0x0060 }
        r11.addFlags(r4);	 Catch:{ Exception -> 0x0060 }
        r11.addFlags(r7);	 Catch:{ Exception -> 0x0060 }
        goto L_0x0055;
    L_0x004e:
        r0 = android.net.Uri.fromFile(r3);	 Catch:{ Exception -> 0x0060 }
        r11.putExtra(r2, r0);	 Catch:{ Exception -> 0x0060 }
    L_0x0055:
        r0 = r3.getAbsolutePath();	 Catch:{ Exception -> 0x0060 }
        r10.currentPicturePath = r0;	 Catch:{ Exception -> 0x0060 }
    L_0x005b:
        r10.startActivityForResult(r11, r6);	 Catch:{ Exception -> 0x0060 }
        goto L_0x022c;
    L_0x0060:
        r11 = move-exception;
        org.telegram.messenger.FileLog.e(r11);
        goto L_0x022c;
    L_0x0066:
        r8 = 4;
        r9 = "android.permission.READ_EXTERNAL_STORAGE";
        if (r11 != r7) goto L_0x00df;
    L_0x006b:
        r11 = android.os.Build.VERSION.SDK_INT;
        if (r11 < r5) goto L_0x0085;
    L_0x006f:
        r11 = r10.getParentActivity();
        r11 = r11.checkSelfPermission(r9);
        if (r11 == 0) goto L_0x0085;
    L_0x0079:
        r11 = r10.getParentActivity();	 Catch:{ Throwable -> 0x0084 }
        r0 = new java.lang.String[r7];	 Catch:{ Throwable -> 0x0084 }
        r0[r6] = r9;	 Catch:{ Throwable -> 0x0084 }
        r11.requestPermissions(r0, r8);	 Catch:{ Throwable -> 0x0084 }
    L_0x0084:
        return;
    L_0x0085:
        r11 = r10.currentChat;
        r11 = org.telegram.messenger.ChatObject.isChannel(r11);
        if (r11 == 0) goto L_0x0099;
    L_0x008d:
        r11 = r10.currentChat;
        r11 = r11.banned_rights;
        if (r11 == 0) goto L_0x0099;
    L_0x0093:
        r11 = r11.send_gifs;
        if (r11 == 0) goto L_0x0099;
    L_0x0097:
        r11 = 0;
        goto L_0x00a8;
    L_0x0099:
        r11 = r10.currentEncryptedChat;
        if (r11 == 0) goto L_0x00a7;
    L_0x009d:
        r11 = r11.layer;
        r11 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r11);
        r0 = 46;
        if (r11 < r0) goto L_0x0097;
    L_0x00a7:
        r11 = 1;
    L_0x00a8:
        r0 = new org.telegram.ui.PhotoAlbumPickerActivity;
        r0.<init>(r6, r11, r7, r10);
        r11 = r10.currentChat;
        if (r11 == 0) goto L_0x00c3;
    L_0x00b1:
        r11 = org.telegram.messenger.ChatObject.hasAdminRights(r11);
        if (r11 != 0) goto L_0x00c3;
    L_0x00b7:
        r11 = r10.currentChat;
        r11 = r11.slowmode_enabled;
        if (r11 == 0) goto L_0x00c3;
    L_0x00bd:
        r11 = 10;
        r0.setMaxSelectedPhotos(r11, r7);
        goto L_0x00d2;
    L_0x00c3:
        r11 = r10.editingMessageObject;
        if (r11 == 0) goto L_0x00c9;
    L_0x00c7:
        r11 = 1;
        goto L_0x00ca;
    L_0x00c9:
        r11 = 0;
    L_0x00ca:
        r1 = r10.editingMessageObject;
        if (r1 != 0) goto L_0x00cf;
    L_0x00ce:
        r6 = 1;
    L_0x00cf:
        r0.setMaxSelectedPhotos(r11, r6);
    L_0x00d2:
        r11 = new org.telegram.ui.ChatActivity$49;
        r11.<init>();
        r0.setDelegate(r11);
        r10.presentFragment(r0);
        goto L_0x022c;
    L_0x00df:
        if (r11 != r4) goto L_0x0146;
    L_0x00e1:
        r11 = android.os.Build.VERSION.SDK_INT;
        if (r11 < r5) goto L_0x00fd;
    L_0x00e5:
        r11 = r10.getParentActivity();
        r11 = r11.checkSelfPermission(r3);
        if (r11 == 0) goto L_0x00fd;
    L_0x00ef:
        r11 = r10.getParentActivity();	 Catch:{ Throwable -> 0x00fc }
        r0 = new java.lang.String[r7];	 Catch:{ Throwable -> 0x00fc }
        r0[r6] = r3;	 Catch:{ Throwable -> 0x00fc }
        r1 = 20;
        r11.requestPermissions(r0, r1);	 Catch:{ Throwable -> 0x00fc }
    L_0x00fc:
        return;
    L_0x00fd:
        r11 = new android.content.Intent;	 Catch:{ Exception -> 0x0140 }
        r3 = "android.media.action.VIDEO_CAPTURE";
        r11.<init>(r3);	 Catch:{ Exception -> 0x0140 }
        r3 = org.telegram.messenger.AndroidUtilities.generateVideoPath();	 Catch:{ Exception -> 0x0140 }
        if (r3 == 0) goto L_0x013b;
    L_0x010a:
        r5 = android.os.Build.VERSION.SDK_INT;	 Catch:{ Exception -> 0x0140 }
        if (r5 < r1) goto L_0x0120;
    L_0x010e:
        r1 = r10.getParentActivity();	 Catch:{ Exception -> 0x0140 }
        r0 = androidx.core.content.FileProvider.getUriForFile(r1, r0, r3);	 Catch:{ Exception -> 0x0140 }
        r11.putExtra(r2, r0);	 Catch:{ Exception -> 0x0140 }
        r11.addFlags(r4);	 Catch:{ Exception -> 0x0140 }
        r11.addFlags(r7);	 Catch:{ Exception -> 0x0140 }
        goto L_0x012d;
    L_0x0120:
        r0 = android.os.Build.VERSION.SDK_INT;	 Catch:{ Exception -> 0x0140 }
        r1 = 18;
        if (r0 < r1) goto L_0x012d;
    L_0x0126:
        r0 = android.net.Uri.fromFile(r3);	 Catch:{ Exception -> 0x0140 }
        r11.putExtra(r2, r0);	 Catch:{ Exception -> 0x0140 }
    L_0x012d:
        r0 = "android.intent.extra.sizeLimit";
        r1 = NUM; // 0x60000000 float:3.6893488E19 double:7.957484216E-315;
        r11.putExtra(r0, r1);	 Catch:{ Exception -> 0x0140 }
        r0 = r3.getAbsolutePath();	 Catch:{ Exception -> 0x0140 }
        r10.currentPicturePath = r0;	 Catch:{ Exception -> 0x0140 }
    L_0x013b:
        r10.startActivityForResult(r11, r4);	 Catch:{ Exception -> 0x0140 }
        goto L_0x022c;
    L_0x0140:
        r11 = move-exception;
        org.telegram.messenger.FileLog.e(r11);
        goto L_0x022c;
    L_0x0146:
        r0 = 6;
        if (r11 != r0) goto L_0x0167;
    L_0x0149:
        r11 = org.telegram.messenger.AndroidUtilities.isGoogleMapsInstalled(r10);
        if (r11 != 0) goto L_0x0150;
    L_0x014f:
        return;
    L_0x0150:
        r11 = new org.telegram.ui.LocationActivity;
        r0 = r10.currentEncryptedChat;
        if (r0 != 0) goto L_0x0157;
    L_0x0156:
        r6 = 1;
    L_0x0157:
        r11.<init>(r6);
        r0 = r10.dialog_id;
        r11.setDialogId(r0);
        r11.setDelegate(r10);
        r10.presentFragment(r11);
        goto L_0x022c;
    L_0x0167:
        if (r11 != r8) goto L_0x01ae;
    L_0x0169:
        r11 = android.os.Build.VERSION.SDK_INT;
        if (r11 < r5) goto L_0x0183;
    L_0x016d:
        r11 = r10.getParentActivity();
        r11 = r11.checkSelfPermission(r9);
        if (r11 == 0) goto L_0x0183;
    L_0x0177:
        r11 = r10.getParentActivity();	 Catch:{ Throwable -> 0x0182 }
        r0 = new java.lang.String[r7];	 Catch:{ Throwable -> 0x0182 }
        r0[r6] = r9;	 Catch:{ Throwable -> 0x0182 }
        r11.requestPermissions(r0, r8);	 Catch:{ Throwable -> 0x0182 }
    L_0x0182:
        return;
    L_0x0183:
        r11 = new org.telegram.ui.DocumentSelectActivity;
        r11.<init>(r7);
        r0 = r10.currentChat;
        if (r0 == 0) goto L_0x0198;
    L_0x018c:
        r0 = org.telegram.messenger.ChatObject.hasAdminRights(r0);
        if (r0 != 0) goto L_0x0198;
    L_0x0192:
        r0 = r10.currentChat;
        r0 = r0.slowmode_enabled;
        if (r0 != 0) goto L_0x019e;
    L_0x0198:
        r0 = r10.editingMessageObject;
        if (r0 == 0) goto L_0x019d;
    L_0x019c:
        goto L_0x019e;
    L_0x019d:
        r7 = -1;
    L_0x019e:
        r11.setMaxSelectedFiles(r7);
        r0 = new org.telegram.ui.ChatActivity$50;
        r0.<init>();
        r11.setDelegate(r0);
        r10.presentFragment(r11);
        goto L_0x022c;
    L_0x01ae:
        r0 = 3;
        if (r11 != r0) goto L_0x01dc;
    L_0x01b1:
        r11 = android.os.Build.VERSION.SDK_INT;
        if (r11 < r5) goto L_0x01cb;
    L_0x01b5:
        r11 = r10.getParentActivity();
        r11 = r11.checkSelfPermission(r9);
        if (r11 == 0) goto L_0x01cb;
    L_0x01bf:
        r11 = r10.getParentActivity();
        r0 = new java.lang.String[r7];
        r0[r6] = r9;
        r11.requestPermissions(r0, r8);
        return;
    L_0x01cb:
        r11 = new org.telegram.ui.AudioSelectActivity;
        r11.<init>();
        r0 = new org.telegram.ui.-$$Lambda$ChatActivity$-GtAEHdnhYsGF9-WtU4tijSIkdI;
        r0.<init>(r10);
        r11.setDelegate(r0);
        r10.presentFragment(r11);
        goto L_0x022c;
    L_0x01dc:
        r0 = 5;
        if (r11 != r0) goto L_0x020c;
    L_0x01df:
        r11 = android.os.Build.VERSION.SDK_INT;
        if (r11 < r5) goto L_0x01fb;
    L_0x01e3:
        r11 = r10.getParentActivity();
        r1 = "android.permission.READ_CONTACTS";
        r11 = r11.checkSelfPermission(r1);
        if (r11 == 0) goto L_0x01fb;
    L_0x01ef:
        r11 = r10.getParentActivity();
        r2 = new java.lang.String[r7];
        r2[r6] = r1;
        r11.requestPermissions(r2, r0);
        return;
    L_0x01fb:
        r11 = new org.telegram.ui.PhonebookSelectActivity;
        r11.<init>();
        r0 = new org.telegram.ui.-$$Lambda$ChatActivity$WiczyarIwMsf9z7UB_OQTv70EA4;
        r0.<init>(r10);
        r11.setDelegate(r0);
        r10.presentFragment(r11);
        goto L_0x022c;
    L_0x020c:
        r0 = 9;
        if (r11 != r0) goto L_0x022c;
    L_0x0210:
        r11 = r10.currentChat;
        if (r11 == 0) goto L_0x022c;
    L_0x0214:
        r11 = org.telegram.messenger.ChatObject.canSendPolls(r11);
        if (r11 != 0) goto L_0x021b;
    L_0x021a:
        goto L_0x022c;
    L_0x021b:
        r11 = new org.telegram.ui.PollCreateActivity;
        r11.<init>();
        r0 = new org.telegram.ui.-$$Lambda$ChatActivity$xjME3A9fFFJMEuiO7cfeOzv2Q5w;
        r0.<init>(r10);
        r11.setDelegate(r0);
        r10.presentFragment(r11);
    L_0x022c:
        return;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.processSelectedAttach(int):void");
    }

    public /* synthetic */ void lambda$processSelectedAttach$44$ChatActivity(ArrayList arrayList) {
        fillEditingMediaWithCaption(null, null);
        SendMessagesHelper.prepareSendingAudioDocuments(getAccountInstance(), arrayList, this.dialog_id, this.replyingMessageObject, this.editingMessageObject);
        hideFieldPanel(false);
        getMediaDataController().cleanDraft(this.dialog_id, true);
    }

    public /* synthetic */ void lambda$processSelectedAttach$45$ChatActivity(User user) {
        getSendMessagesHelper().sendMessage(user, this.dialog_id, this.replyingMessageObject, null, null);
        hideFieldPanel(false);
        getMediaDataController().cleanDraft(this.dialog_id, true);
    }

    public /* synthetic */ void lambda$processSelectedAttach$46$ChatActivity(TL_messageMediaPoll tL_messageMediaPoll) {
        getSendMessagesHelper().sendMessage(tL_messageMediaPoll, this.dialog_id, this.replyingMessageObject, null, null);
        hideFieldPanel(false);
        getMediaDataController().cleanDraft(this.dialog_id, true);
    }

    public boolean dismissDialogOnPause(Dialog dialog) {
        return dialog != this.chatAttachAlert && super.dismissDialogOnPause(dialog);
    }

    private void searchLinks(CharSequence charSequence, boolean z) {
        if (this.currentEncryptedChat == null || (getMessagesController().secretWebpagePreview != 0 && AndroidUtilities.getPeerLayerVersion(this.currentEncryptedChat.layer) >= 46)) {
            if (z) {
                WebPage webPage = this.foundWebPage;
                if (webPage != null) {
                    String str = webPage.url;
                    if (str != null) {
                        char charAt;
                        int indexOf = TextUtils.indexOf(charSequence, str);
                        Object obj = 1;
                        if (indexOf == -1) {
                            String str2 = this.foundWebPage.display_url;
                            if (str2 != null) {
                                indexOf = TextUtils.indexOf(charSequence, str2);
                                if (indexOf == -1 || this.foundWebPage.display_url.length() + indexOf != charSequence.length()) {
                                    obj = null;
                                }
                                if (indexOf != -1 && r3 == null) {
                                    charAt = charSequence.charAt(this.foundWebPage.display_url.length() + indexOf);
                                    if (indexOf != -1 && (r3 != null || charAt == ' ' || charAt == ',' || charAt == '.' || charAt == '!' || charAt == '/')) {
                                        return;
                                    }
                                }
                            }
                            obj = null;
                        } else {
                            if (this.foundWebPage.url.length() + indexOf != charSequence.length()) {
                                obj = null;
                            }
                            if (obj == null) {
                                charAt = charSequence.charAt(this.foundWebPage.url.length() + indexOf);
                                return;
                            }
                        }
                        charAt = 0;
                        return;
                    }
                    this.pendingLinkSearchString = null;
                    this.foundUrls = null;
                    showFieldPanelForWebPage(false, this.foundWebPage, false);
                }
            }
            Utilities.searchQueue.postRunnable(new -$$Lambda$ChatActivity$jfDN39pi2zrJFvCElkayzSQ8KzA(this, charSequence, getMessagesController(), z));
        }
    }

    public /* synthetic */ void lambda$searchLinks$53$ChatActivity(CharSequence charSequence, MessagesController messagesController, boolean z) {
        if (this.linkSearchRequestId != 0) {
            getConnectionsManager().cancelRequest(this.linkSearchRequestId, true);
            this.linkSearchRequestId = 0;
        }
        ArrayList arrayList = null;
        CharSequence join;
        try {
            Matcher matcher = AndroidUtilities.WEB_URL.matcher(charSequence);
            while (matcher.find()) {
                if (matcher.start() <= 0 || charSequence.charAt(matcher.start() - 1) != '@') {
                    if (arrayList == null) {
                        arrayList = new ArrayList();
                    }
                    arrayList.add(charSequence.subSequence(matcher.start(), matcher.end()));
                }
            }
            if (charSequence instanceof Spannable) {
                URLSpanReplacement[] uRLSpanReplacementArr = (URLSpanReplacement[]) ((Spannable) charSequence).getSpans(0, charSequence.length(), URLSpanReplacement.class);
                if (uRLSpanReplacementArr != null && uRLSpanReplacementArr.length > 0) {
                    if (arrayList == null) {
                        arrayList = new ArrayList();
                    }
                    for (URLSpan url : uRLSpanReplacementArr) {
                        arrayList.add(url.getURL());
                    }
                }
            }
            if (!(arrayList == null || this.foundUrls == null || arrayList.size() != this.foundUrls.size())) {
                Object obj = 1;
                for (int i = 0; i < arrayList.size(); i++) {
                    if (!TextUtils.equals((CharSequence) arrayList.get(i), (CharSequence) this.foundUrls.get(i))) {
                        obj = null;
                    }
                }
                if (obj != null) {
                    return;
                }
            }
            this.foundUrls = arrayList;
            if (arrayList == null) {
                AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$r35bvXIMlawwbGl8yE1C1u9tWlE(this));
                return;
            }
            join = TextUtils.join(" ", arrayList);
            if (this.currentEncryptedChat == null || messagesController.secretWebpagePreview != 2) {
                TL_messages_getWebPagePreview tL_messages_getWebPagePreview = new TL_messages_getWebPagePreview();
                if (join instanceof String) {
                    tL_messages_getWebPagePreview.message = (String) join;
                } else {
                    tL_messages_getWebPagePreview.message = join.toString();
                }
                this.linkSearchRequestId = getConnectionsManager().sendRequest(tL_messages_getWebPagePreview, new -$$Lambda$ChatActivity$qcyqMgTYg_pjCoKG7AItpSHzEfk(this, tL_messages_getWebPagePreview));
                getConnectionsManager().bindRequestToGuid(this.linkSearchRequestId, this.classGuid);
                return;
            }
            AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$IQW4cc7_-JwX4Qukg4BWpN2HBcE(this, messagesController, charSequence, z));
        } catch (Exception e) {
            FileLog.e(e);
            String toLowerCase = charSequence.toString().toLowerCase();
            if (charSequence.length() < 13 || !(toLowerCase.contains("http://") || toLowerCase.contains("https://"))) {
                AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$fj03EuybfkHHB_esU920jhJKLW8(this));
                return;
            }
            join = charSequence;
        }
    }

    public /* synthetic */ void lambda$null$47$ChatActivity() {
        WebPage webPage = this.foundWebPage;
        if (webPage != null) {
            showFieldPanelForWebPage(false, webPage, false);
            this.foundWebPage = null;
        }
    }

    public /* synthetic */ void lambda$null$48$ChatActivity() {
        WebPage webPage = this.foundWebPage;
        if (webPage != null) {
            showFieldPanelForWebPage(false, webPage, false);
            this.foundWebPage = null;
        }
    }

    public /* synthetic */ void lambda$null$50$ChatActivity(MessagesController messagesController, CharSequence charSequence, boolean z) {
        AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
        builder.setTitle(LocaleController.getString("AppName", NUM));
        builder.setPositiveButton(LocaleController.getString("OK", NUM), new -$$Lambda$ChatActivity$-bRCkaPqqWDtcnmPMbtsYn_oHx0(this, messagesController, charSequence, z));
        builder.setNegativeButton(LocaleController.getString("Cancel", NUM), null);
        builder.setMessage(LocaleController.getString("SecretLinkPreviewAlert", NUM));
        showDialog(builder.create());
        messagesController.secretWebpagePreview = 0;
        MessagesController.getGlobalMainSettings().edit().putInt("secretWebpage2", messagesController.secretWebpagePreview).commit();
    }

    public /* synthetic */ void lambda$null$49$ChatActivity(MessagesController messagesController, CharSequence charSequence, boolean z, DialogInterface dialogInterface, int i) {
        messagesController.secretWebpagePreview = 1;
        MessagesController.getGlobalMainSettings().edit().putInt("secretWebpage2", getMessagesController().secretWebpagePreview).commit();
        this.foundUrls = null;
        searchLinks(charSequence, z);
    }

    public /* synthetic */ void lambda$null$52$ChatActivity(TL_messages_getWebPagePreview tL_messages_getWebPagePreview, TLObject tLObject, TL_error tL_error) {
        AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$I1XtQFQJnTJgtZS3VsAS9var_ZpU(this, tL_error, tLObject, tL_messages_getWebPagePreview));
    }

    public /* synthetic */ void lambda$null$51$ChatActivity(TL_error tL_error, TLObject tLObject, TL_messages_getWebPagePreview tL_messages_getWebPagePreview) {
        this.linkSearchRequestId = 0;
        if (tL_error != null) {
            return;
        }
        WebPage webPage;
        if (tLObject instanceof TL_messageMediaWebPage) {
            this.foundWebPage = ((TL_messageMediaWebPage) tLObject).webpage;
            webPage = this.foundWebPage;
            if ((webPage instanceof TL_webPage) || (webPage instanceof TL_webPagePending)) {
                if (this.foundWebPage instanceof TL_webPagePending) {
                    this.pendingLinkSearchString = tL_messages_getWebPagePreview.message;
                }
                if (this.currentEncryptedChat != null) {
                    webPage = this.foundWebPage;
                    if (webPage instanceof TL_webPagePending) {
                        webPage.url = tL_messages_getWebPagePreview.message;
                    }
                }
                showFieldPanelForWebPage(true, this.foundWebPage, false);
                return;
            } else if (webPage != null) {
                showFieldPanelForWebPage(false, webPage, false);
                this.foundWebPage = null;
                return;
            } else {
                return;
            }
        }
        webPage = this.foundWebPage;
        if (webPage != null) {
            showFieldPanelForWebPage(false, webPage, false);
            this.foundWebPage = null;
        }
    }

    private void forwardMessages(ArrayList<MessageObject> arrayList, boolean z) {
        if (arrayList != null && !arrayList.isEmpty()) {
            if (z) {
                Iterator it = arrayList.iterator();
                while (it.hasNext()) {
                    getSendMessagesHelper().processForwardFromMyName((MessageObject) it.next(), this.dialog_id);
                }
                return;
            }
            AlertsCreator.showSendMediaAlert(getSendMessagesHelper().sendMessage(arrayList, this.dialog_id), this);
        }
    }

    private void checkBotKeyboard() {
        if (this.chatActivityEnterView != null) {
            MessageObject messageObject = this.botButtons;
            if (messageObject != null && !this.userBlocked) {
                if (messageObject.messageOwner.reply_markup instanceof TL_replyKeyboardForceReply) {
                    SharedPreferences mainSettings = MessagesController.getMainSettings(this.currentAccount);
                    StringBuilder stringBuilder = new StringBuilder();
                    stringBuilder.append("answered_");
                    stringBuilder.append(this.dialog_id);
                    if (mainSettings.getInt(stringBuilder.toString(), 0) == this.botButtons.getId()) {
                        return;
                    }
                    if (this.replyingMessageObject == null || this.chatActivityEnterView.getFieldText() == null) {
                        messageObject = this.botButtons;
                        this.botReplyButtons = messageObject;
                        this.chatActivityEnterView.setButtons(messageObject);
                        showFieldPanelForReply(this.botButtons);
                        return;
                    }
                    return;
                }
                messageObject = this.replyingMessageObject;
                if (messageObject != null && this.botReplyButtons == messageObject) {
                    this.botReplyButtons = null;
                    hideFieldPanel(true);
                }
                this.chatActivityEnterView.setButtons(this.botButtons);
            }
        }
    }

    public void hideFieldPanel(boolean z) {
        showFieldPanel(false, null, null, null, null, false, z);
    }

    public void showFieldPanelForWebPage(boolean z, WebPage webPage, boolean z2) {
        showFieldPanel(z, null, null, null, webPage, z2, true);
    }

    public void showFieldPanelForForward(boolean z, ArrayList<MessageObject> arrayList) {
        showFieldPanel(z, null, null, arrayList, null, false, true);
    }

    public void showFieldPanelForReply(MessageObject messageObject) {
        showFieldPanel(true, messageObject, null, null, null, false, true);
    }

    public void showFieldPanelForEdit(boolean z, MessageObject messageObject) {
        showFieldPanel(z, null, messageObject, null, null, false, true);
    }

    public void showFieldPanel(boolean z, MessageObject messageObject, MessageObject messageObject2, ArrayList<MessageObject> arrayList, WebPage webPage, boolean z2, boolean z3) {
        MessageObject messageObject3 = messageObject;
        MessageObject messageObject4 = messageObject2;
        WebPage webPage2 = webPage;
        if (this.chatActivityEnterView != null) {
            if (z) {
                if (messageObject3 != null || arrayList != null || messageObject4 != null || webPage2 != null) {
                    ArrayList arrayList2;
                    boolean z4;
                    PhotoSize closestPhotoSizeWithSize;
                    TLObject tLObject;
                    int i;
                    int i2;
                    PhotoSize closestPhotoSizeWithSize2;
                    HintView hintView = this.noSoundHintView;
                    if (hintView != null) {
                        hintView.hide();
                    }
                    hintView = this.forwardHintView;
                    if (hintView != null) {
                        hintView.hide();
                    }
                    hintView = this.slowModeHint;
                    if (hintView != null) {
                        hintView.hide();
                    }
                    if (this.searchItem != null && this.actionBar.isSearchFieldVisible()) {
                        this.actionBar.closeSearchField(false);
                        this.chatActivityEnterView.setFieldFocused();
                        AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$W4uCBbEdvLcA_38gUeBgmvPm6is(this), 100);
                    }
                    if (messageObject3 == null || messageObject.getDialogId() == this.dialog_id) {
                        arrayList2 = arrayList;
                        z4 = false;
                    } else {
                        arrayList2 = new ArrayList();
                        arrayList2.add(messageObject3);
                        messageObject3 = null;
                        z4 = true;
                    }
                    CharSequence charSequence;
                    String charSequence2;
                    SimpleTextView simpleTextView;
                    MessageMedia messageMedia;
                    if (messageObject4 != null) {
                        this.forwardingMessages = null;
                        this.replyingMessageObject = null;
                        this.editingMessageObject = messageObject4;
                        this.chatActivityEnterView.setReplyingMessageObject(null);
                        this.chatActivityEnterView.setEditingMessageObject(messageObject4, messageObject2.isMediaEmpty() ^ 1);
                        if (this.foundWebPage == null) {
                            this.chatActivityEnterView.setForceShowSendButton(false, false);
                            this.replyIconImageView.setImageResource(NUM);
                            this.replyIconImageView.setContentDescription(LocaleController.getString("AccDescrEditing", NUM));
                            this.replyCloseImageView.setContentDescription(LocaleController.getString("AccDescrCancelEdit", NUM));
                            if (messageObject2.isMediaEmpty()) {
                                this.replyNameTextView.setText(LocaleController.getString("EditMessage", NUM));
                            } else {
                                this.replyNameTextView.setText(LocaleController.getString("EditCaption", NUM));
                            }
                            if (messageObject2.canEditMedia()) {
                                this.replyObjectTextView.setText(LocaleController.getString("EditMessageMedia", NUM));
                            } else {
                                charSequence = messageObject4.messageText;
                                if (charSequence != null) {
                                    charSequence2 = charSequence.toString();
                                    if (charSequence2.length() > 150) {
                                        charSequence2 = charSequence2.substring(0, 150);
                                    }
                                    charSequence2 = charSequence2.replace(10, ' ');
                                    simpleTextView = this.replyObjectTextView;
                                    simpleTextView.setText(Emoji.replaceEmoji(charSequence2, simpleTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0f), false));
                                }
                            }
                        } else {
                            return;
                        }
                    } else if (messageObject3 != null) {
                        this.forwardingMessages = null;
                        this.editingMessageObject = null;
                        this.replyingMessageObject = messageObject3;
                        this.chatActivityEnterView.setReplyingMessageObject(messageObject3);
                        this.chatActivityEnterView.setEditingMessageObject(null, false);
                        if (this.foundWebPage == null) {
                            this.chatActivityEnterView.setForceShowSendButton(false, false);
                            if (messageObject3.isFromUser()) {
                                User user = getMessagesController().getUser(Integer.valueOf(messageObject3.messageOwner.from_id));
                                if (user != null) {
                                    charSequence = UserObject.getUserName(user);
                                } else {
                                    return;
                                }
                            }
                            Chat chat;
                            if (ChatObject.isChannel(this.currentChat) && this.currentChat.megagroup && messageObject3.isForwardedChannelPost()) {
                                chat = getMessagesController().getChat(Integer.valueOf(messageObject3.messageOwner.fwd_from.channel_id));
                            } else {
                                chat = getMessagesController().getChat(Integer.valueOf(messageObject3.messageOwner.to_id.channel_id));
                            }
                            if (chat != null) {
                                charSequence = chat.title;
                            } else {
                                return;
                            }
                            this.replyIconImageView.setImageResource(NUM);
                            this.replyNameTextView.setText(charSequence);
                            this.replyIconImageView.setContentDescription(LocaleController.getString("AccDescrReplying", NUM));
                            this.replyCloseImageView.setContentDescription(LocaleController.getString("AccDescrCancelReply", NUM));
                            messageMedia = messageObject3.messageOwner.media;
                            if (messageMedia instanceof TL_messageMediaGame) {
                                simpleTextView = this.replyObjectTextView;
                                simpleTextView.setText(Emoji.replaceEmoji(messageMedia.game.title, simpleTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0f), false));
                            } else {
                                charSequence = messageObject3.messageText;
                                if (charSequence != null) {
                                    charSequence2 = charSequence.toString();
                                    if (charSequence2.length() > 150) {
                                        charSequence2 = charSequence2.substring(0, 150);
                                    }
                                    charSequence2 = charSequence2.replace(10, ' ');
                                    simpleTextView = this.replyObjectTextView;
                                    simpleTextView.setText(Emoji.replaceEmoji(charSequence2, simpleTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0f), false));
                                }
                            }
                        } else {
                            return;
                        }
                    } else if (arrayList2 == null) {
                        this.replyIconImageView.setImageResource(NUM);
                        if (webPage2 instanceof TL_webPagePending) {
                            this.replyNameTextView.setText(LocaleController.getString("GettingLinkInfo", NUM));
                            this.replyObjectTextView.setText(this.pendingLinkSearchString);
                        } else {
                            String str = webPage2.site_name;
                            if (str != null) {
                                this.replyNameTextView.setText(str);
                            } else {
                                str = webPage2.title;
                                if (str != null) {
                                    this.replyNameTextView.setText(str);
                                } else {
                                    this.replyNameTextView.setText(LocaleController.getString("LinkPreview", NUM));
                                }
                            }
                            str = webPage2.title;
                            if (str != null) {
                                this.replyObjectTextView.setText(str);
                            } else {
                                str = webPage2.description;
                                if (str != null) {
                                    this.replyObjectTextView.setText(str);
                                } else {
                                    str = webPage2.author;
                                    if (str != null) {
                                        this.replyObjectTextView.setText(str);
                                    } else {
                                        this.replyObjectTextView.setText(webPage2.display_url);
                                    }
                                }
                            }
                            this.chatActivityEnterView.setWebPage(webPage2, true);
                        }
                    } else if (!arrayList2.isEmpty()) {
                        this.replyingMessageObject = null;
                        this.editingMessageObject = null;
                        this.chatActivityEnterView.setReplyingMessageObject(null);
                        this.chatActivityEnterView.setEditingMessageObject(null, false);
                        this.forwardingMessages = arrayList2;
                        if (this.foundWebPage == null) {
                            int i3;
                            this.chatActivityEnterView.setForceShowSendButton(true, false);
                            ArrayList arrayList3 = new ArrayList();
                            this.replyIconImageView.setImageResource(NUM);
                            this.replyIconImageView.setContentDescription(LocaleController.getString("AccDescrForwarding", NUM));
                            this.replyCloseImageView.setContentDescription(LocaleController.getString("AccDescrCancelForward", NUM));
                            MessageObject messageObject5 = (MessageObject) arrayList2.get(0);
                            if (messageObject5.isFromUser()) {
                                arrayList3.add(Integer.valueOf(messageObject5.messageOwner.from_id));
                            } else {
                                Chat chat2 = getMessagesController().getChat(Integer.valueOf(messageObject5.messageOwner.to_id.channel_id));
                                if (ChatObject.isChannel(chat2) && chat2.megagroup && messageObject5.isForwardedChannelPost()) {
                                    arrayList3.add(Integer.valueOf(-messageObject5.messageOwner.fwd_from.channel_id));
                                } else {
                                    arrayList3.add(Integer.valueOf(-messageObject5.messageOwner.to_id.channel_id));
                                }
                            }
                            int i4 = messageObject5.isAnimatedEmoji() ? 0 : messageObject5.type;
                            for (int i5 = 1; i5 < arrayList2.size(); i5++) {
                                int i6;
                                MessageObject messageObject6 = (MessageObject) arrayList2.get(i5);
                                if (messageObject6.isFromUser()) {
                                    i6 = messageObject6.messageOwner.from_id;
                                } else {
                                    Chat chat3 = getMessagesController().getChat(Integer.valueOf(messageObject6.messageOwner.to_id.channel_id));
                                    if (ChatObject.isChannel(chat3) && chat3.megagroup && messageObject6.isForwardedChannelPost()) {
                                        i3 = messageObject6.messageOwner.fwd_from.channel_id;
                                    } else {
                                        i3 = messageObject6.messageOwner.to_id.channel_id;
                                    }
                                    i6 = -i3;
                                }
                                if (!arrayList3.contains(Integer.valueOf(i6))) {
                                    arrayList3.add(Integer.valueOf(i6));
                                }
                                if (((MessageObject) arrayList2.get(i5)).type != i4) {
                                    i4 = -1;
                                }
                            }
                            StringBuilder stringBuilder = new StringBuilder();
                            for (i3 = 0; i3 < arrayList3.size(); i3++) {
                                User user2;
                                Chat chat4;
                                Integer num = (Integer) arrayList3.get(i3);
                                if (num.intValue() > 0) {
                                    user2 = getMessagesController().getUser(num);
                                    chat4 = null;
                                } else {
                                    chat4 = getMessagesController().getChat(Integer.valueOf(-num.intValue()));
                                    user2 = null;
                                }
                                if (user2 != null || chat4 != null) {
                                    if (arrayList3.size() != 1) {
                                        String str2 = " ";
                                        if (arrayList3.size() != 2 && stringBuilder.length() != 0) {
                                            stringBuilder.append(str2);
                                            stringBuilder.append(LocaleController.formatPluralString("AndOther", arrayList3.size() - 1));
                                            break;
                                        }
                                        if (stringBuilder.length() > 0) {
                                            stringBuilder.append(", ");
                                        }
                                        if (user2 == null) {
                                            stringBuilder.append(chat4.title);
                                        } else if (!TextUtils.isEmpty(user2.first_name)) {
                                            stringBuilder.append(user2.first_name);
                                        } else if (TextUtils.isEmpty(user2.last_name)) {
                                            stringBuilder.append(str2);
                                        } else {
                                            stringBuilder.append(user2.last_name);
                                        }
                                    } else if (user2 != null) {
                                        stringBuilder.append(UserObject.getUserName(user2));
                                    } else {
                                        stringBuilder.append(chat4.title);
                                    }
                                }
                            }
                            this.replyNameTextView.setText(stringBuilder);
                            if (i4 == -1 || i4 == 0 || i4 == 10 || i4 == 11) {
                                if (arrayList2.size() != 1 || ((MessageObject) arrayList2.get(0)).messageText == null) {
                                    this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedMessageCount", arrayList2.size()));
                                } else {
                                    messageObject5 = (MessageObject) arrayList2.get(0);
                                    messageMedia = messageObject5.messageOwner.media;
                                    SimpleTextView simpleTextView2;
                                    if (messageMedia instanceof TL_messageMediaGame) {
                                        simpleTextView2 = this.replyObjectTextView;
                                        simpleTextView2.setText(Emoji.replaceEmoji(messageMedia.game.title, simpleTextView2.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0f), false));
                                    } else {
                                        charSequence2 = messageObject5.messageText.toString();
                                        if (charSequence2.length() > 150) {
                                            charSequence2 = charSequence2.substring(0, 150);
                                        }
                                        charSequence2 = charSequence2.replace(10, ' ');
                                        simpleTextView2 = this.replyObjectTextView;
                                        simpleTextView2.setText(Emoji.replaceEmoji(charSequence2, simpleTextView2.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0f), false));
                                    }
                                }
                            } else if (i4 == 1) {
                                this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedPhoto", arrayList2.size()));
                                if (arrayList2.size() == 1) {
                                    messageObject3 = (MessageObject) arrayList2.get(0);
                                }
                            } else if (i4 == 4) {
                                this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedLocation", arrayList2.size()));
                            } else if (i4 == 3) {
                                this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedVideo", arrayList2.size()));
                                if (arrayList2.size() == 1) {
                                    messageObject3 = (MessageObject) arrayList2.get(0);
                                }
                            } else if (i4 == 12) {
                                this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedContact", arrayList2.size()));
                            } else if (i4 == 2) {
                                this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedAudio", arrayList2.size()));
                            } else if (i4 == 5) {
                                this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedRound", arrayList2.size()));
                            } else if (i4 == 14) {
                                this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedMusic", arrayList2.size()));
                            } else if (i4 == 13 || i4 == 15) {
                                this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedSticker", arrayList2.size()));
                            } else if (i4 == 17) {
                                this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedPoll", arrayList2.size()));
                            } else if (i4 == 8 || i4 == 9) {
                                if (arrayList2.size() != 1) {
                                    this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedFile", arrayList2.size()));
                                } else if (i4 == 8) {
                                    this.replyObjectTextView.setText(LocaleController.getString("AttachGif", NUM));
                                } else {
                                    String documentFileName = FileLoader.getDocumentFileName(((MessageObject) arrayList2.get(0)).getDocument());
                                    if (documentFileName.length() != 0) {
                                        this.replyObjectTextView.setText(documentFileName);
                                    }
                                    messageObject3 = (MessageObject) arrayList2.get(0);
                                }
                            }
                        } else {
                            return;
                        }
                    } else {
                        return;
                    }
                    if (messageObject3 == null) {
                        messageObject3 = messageObject4 != null ? messageObject4 : null;
                    }
                    FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) this.replyNameTextView.getLayoutParams();
                    FrameLayout.LayoutParams layoutParams2 = (FrameLayout.LayoutParams) this.replyObjectTextView.getLayoutParams();
                    if (messageObject3 != null) {
                        closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(messageObject3.photoThumbs2, 320);
                        PhotoSize closestPhotoSizeWithSize3 = FileLoader.getClosestPhotoSizeWithSize(messageObject3.photoThumbs2, AndroidUtilities.dp(40.0f));
                        tLObject = messageObject3.photoThumbsObject2;
                        if (closestPhotoSizeWithSize == null) {
                            if (messageObject3.mediaExists) {
                                closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(messageObject3.photoThumbs, AndroidUtilities.getPhotoSize());
                                i = closestPhotoSizeWithSize != null ? closestPhotoSizeWithSize.size : 0;
                                i2 = 0;
                            } else {
                                closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(messageObject3.photoThumbs, 320);
                                i2 = 1;
                                i = 0;
                            }
                            closestPhotoSizeWithSize2 = FileLoader.getClosestPhotoSizeWithSize(messageObject3.photoThumbs, AndroidUtilities.dp(40.0f));
                            tLObject = messageObject3.photoThumbsObject;
                        } else {
                            closestPhotoSizeWithSize2 = closestPhotoSizeWithSize3;
                            i2 = 1;
                            i = 0;
                        }
                    } else {
                        closestPhotoSizeWithSize = null;
                        i2 = 1;
                        i = 0;
                        closestPhotoSizeWithSize2 = null;
                        tLObject = null;
                    }
                    if (closestPhotoSizeWithSize == closestPhotoSizeWithSize2) {
                        closestPhotoSizeWithSize2 = null;
                    }
                    int dp;
                    if (closestPhotoSizeWithSize == null || (closestPhotoSizeWithSize instanceof TL_photoSizeEmpty) || (closestPhotoSizeWithSize.location instanceof TL_fileLocationUnavailable) || messageObject3.isAnyKindOfSticker() || (messageObject3 != null && messageObject3.isSecretMedia())) {
                        this.replyImageView.setImageBitmap(null);
                        this.replyImageLocation = null;
                        this.replyImageLocationObject = null;
                        this.replyImageView.setVisibility(4);
                        dp = AndroidUtilities.dp(52.0f);
                        layoutParams2.leftMargin = dp;
                        layoutParams.leftMargin = dp;
                    } else {
                        if (messageObject3 == null || !messageObject3.isRoundVideo()) {
                            this.replyImageView.setRoundRadius(0);
                        } else {
                            this.replyImageView.setRoundRadius(AndroidUtilities.dp(17.0f));
                        }
                        this.replyImageSize = i;
                        this.replyImageCacheType = i2;
                        this.replyImageLocation = closestPhotoSizeWithSize;
                        this.replyImageThumbLocation = closestPhotoSizeWithSize2;
                        this.replyImageLocationObject = tLObject;
                        this.replyImageView.setImage(ImageLocation.getForObject(this.replyImageLocation, tLObject), "50_50", ImageLocation.getForObject(closestPhotoSizeWithSize2, tLObject), "50_50_b", null, i, i2, messageObject3);
                        this.replyImageView.setVisibility(0);
                        dp = AndroidUtilities.dp(96.0f);
                        layoutParams2.leftMargin = dp;
                        layoutParams.leftMargin = dp;
                    }
                    this.replyNameTextView.setLayoutParams(layoutParams);
                    this.replyObjectTextView.setLayoutParams(layoutParams2);
                    this.chatActivityEnterView.showTopView(true, z4);
                }
            } else if (this.replyingMessageObject != null || this.forwardingMessages != null || this.foundWebPage != null || this.editingMessageObject != null) {
                boolean z5;
                messageObject3 = this.replyingMessageObject;
                if (messageObject3 != null && (messageObject3.messageOwner.reply_markup instanceof TL_replyKeyboardForceReply)) {
                    Editor edit = MessagesController.getMainSettings(this.currentAccount).edit();
                    StringBuilder stringBuilder2 = new StringBuilder();
                    stringBuilder2.append("answered_");
                    stringBuilder2.append(this.dialog_id);
                    edit.putInt(stringBuilder2.toString(), this.replyingMessageObject.getId()).commit();
                }
                if (this.foundWebPage != null) {
                    this.foundWebPage = null;
                    this.chatActivityEnterView.setWebPage(null, z2 ^ 1);
                    if (!(webPage2 == null || (this.replyingMessageObject == null && this.forwardingMessages == null && this.editingMessageObject == null))) {
                        showFieldPanel(true, this.replyingMessageObject, this.editingMessageObject, this.forwardingMessages, null, false, true);
                        return;
                    }
                }
                ArrayList arrayList4 = this.forwardingMessages;
                if (arrayList4 != null) {
                    z5 = false;
                    forwardMessages(arrayList4, false);
                } else {
                    z5 = false;
                }
                this.chatActivityEnterView.setForceShowSendButton(z5, z5);
                this.chatActivityEnterView.hideTopView(z3);
                this.chatActivityEnterView.setReplyingMessageObject(null);
                this.chatActivityEnterView.setEditingMessageObject(null, z5);
                this.topViewWasVisible = z5;
                this.replyingMessageObject = null;
                this.editingMessageObject = null;
                this.forwardingMessages = null;
                this.replyImageLocation = null;
                this.replyImageLocationObject = null;
            }
        }
    }

    public /* synthetic */ void lambda$showFieldPanel$54$ChatActivity() {
        ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
        if (chatActivityEnterView != null) {
            chatActivityEnterView.openKeyboard();
        }
    }

    private void moveScrollToLastMessage() {
        if (this.chatListView != null && !this.messages.isEmpty()) {
            this.chatLayoutManager.scrollToPositionWithOffset(0, 0);
        }
    }

    private boolean sendSecretMessageRead(MessageObject messageObject) {
        MessageObject messageObject2 = messageObject;
        if (!(messageObject2 == null || messageObject.isOut() || !messageObject.isSecretMedia())) {
            Message message = messageObject2.messageOwner;
            if (message.destroyTime == 0 && message.ttl > 0) {
                if (this.currentEncryptedChat != null) {
                    MessagesController messagesController = getMessagesController();
                    long j = this.dialog_id;
                    Message message2 = messageObject2.messageOwner;
                    messagesController.markMessageAsRead(j, message2.random_id, message2.ttl);
                } else {
                    getMessagesController().markMessageAsRead(messageObject.getId(), ChatObject.isChannel(this.currentChat) ? this.currentChat.id : 0, null, messageObject2.messageOwner.ttl, 0);
                }
                Message message3 = messageObject2.messageOwner;
                message3.destroyTime = message3.ttl + getConnectionsManager().getCurrentTime();
                return true;
            }
        }
        return false;
    }

    private void clearChatData() {
        this.messages.clear();
        this.messagesByDays.clear();
        this.waitingForLoad.clear();
        this.groupedMessagesMap.clear();
        this.progressView.setVisibility(this.chatAdapter.botInfoRow == -1 ? 0 : 4);
        this.chatListView.setEmptyView(null);
        for (int i = 0; i < 2; i++) {
            this.messagesDict[i].clear();
            if (this.currentEncryptedChat == null) {
                this.maxMessageId[i] = Integer.MAX_VALUE;
                this.minMessageId[i] = Integer.MIN_VALUE;
            } else {
                this.maxMessageId[i] = Integer.MIN_VALUE;
                this.minMessageId[i] = Integer.MAX_VALUE;
            }
            this.maxDate[i] = Integer.MIN_VALUE;
            this.minDate[i] = 0;
            this.endReached[i] = false;
            this.cacheEndReached[i] = false;
            this.forwardEndReached[i] = true;
        }
        this.first = true;
        this.firstLoading = true;
        this.loading = true;
        this.loadingForward = false;
        this.waitingForReplyMessageLoad = false;
        this.startLoadFromMessageId = 0;
        this.showScrollToMessageError = false;
        this.last_message_id = 0;
        this.unreadMessageObject = null;
        this.createUnreadMessageAfterId = 0;
        this.createUnreadMessageAfterIdLoading = false;
        this.needSelectFromMessageId = false;
        this.chatAdapter.notifyDataSetChanged();
    }

    private void scrollToLastMessage(boolean z) {
        if (!this.forwardEndReached[0] || this.first_unread_id != 0 || this.startLoadFromMessageId != 0) {
            clearChatData();
            this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
            MessagesController messagesController = getMessagesController();
            long j = this.dialog_id;
            int i = this.classGuid;
            boolean isChannel = ChatObject.isChannel(this.currentChat);
            int i2 = this.lastLoadIndex;
            this.lastLoadIndex = i2 + 1;
            messagesController.loadMessages(j, 30, 0, 0, true, 0, i, 0, 0, isChannel, i2);
        } else if (z && this.chatLayoutManager.findFirstCompletelyVisibleItemPosition() == 0) {
            showPagedownButton(false, true);
            removeSelectedMessageHighlight();
            updateVisibleRows();
        } else {
            this.chatLayoutManager.scrollToPositionWithOffset(0, 0);
        }
    }

    public void updateTextureViewPosition(boolean z) {
        if (this.fragmentView != null && !this.paused) {
            Object obj;
            int childCount = this.chatListView.getChildCount();
            for (int i = 0; i < childCount; i++) {
                View childAt = this.chatListView.getChildAt(i);
                if (childAt instanceof ChatMessageCell) {
                    ChatMessageCell chatMessageCell = (ChatMessageCell) childAt;
                    MessageObject messageObject = chatMessageCell.getMessageObject();
                    if (this.videoPlayerContainer != null && ((messageObject.isRoundVideo() || messageObject.isVideo()) && MediaController.getInstance().isPlayingMessage(messageObject))) {
                        ImageReceiver photoImage = chatMessageCell.getPhotoImage();
                        this.videoPlayerContainer.setTranslationX(((float) photoImage.getImageX()) + chatMessageCell.getX());
                        this.videoPlayerContainer.setTranslationY((((float) (((this.fragmentView.getPaddingTop() + chatMessageCell.getTop()) + photoImage.getImageY()) - this.chatListViewClipTop)) + this.chatListView.getTranslationY()) + ((float) (this.inPreviewMode ? AndroidUtilities.statusBarHeight : 0)));
                        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) this.videoPlayerContainer.getLayoutParams();
                        if (messageObject.isRoundVideo()) {
                            this.videoPlayerContainer.setTag(NUM, null);
                            if (!(layoutParams.width == AndroidUtilities.roundMessageSize && layoutParams.height == AndroidUtilities.roundMessageSize)) {
                                childCount = AndroidUtilities.roundMessageSize;
                                layoutParams.height = childCount;
                                layoutParams.width = childCount;
                                this.aspectRatioFrameLayout.setResizeMode(0);
                                this.videoPlayerContainer.setLayoutParams(layoutParams);
                            }
                        } else {
                            this.videoPlayerContainer.setTag(NUM, Integer.valueOf(1));
                            if (!(layoutParams.width == photoImage.getImageWidth() && layoutParams.height == photoImage.getImageHeight())) {
                                this.aspectRatioFrameLayout.setResizeMode(3);
                                layoutParams.width = photoImage.getImageWidth();
                                layoutParams.height = photoImage.getImageHeight();
                                this.videoPlayerContainer.setLayoutParams(layoutParams);
                            }
                        }
                        this.fragmentView.invalidate();
                        this.videoPlayerContainer.invalidate();
                        obj = 1;
                        if (z && this.videoPlayerContainer != null) {
                            MessageObject playingMessageObject = MediaController.getInstance().getPlayingMessageObject();
                            if (playingMessageObject != null && playingMessageObject.eventId == 0) {
                                if (obj != null) {
                                    MediaController.getInstance().setCurrentVideoVisible(true);
                                    if (playingMessageObject.isRoundVideo() || this.scrollToVideo) {
                                        scrollToMessageId(playingMessageObject.getId(), 0, false, 0, true);
                                        return;
                                    } else {
                                        this.chatListView.invalidate();
                                        return;
                                    }
                                } else if (this.checkTextureViewPosition && playingMessageObject.isVideo()) {
                                    MediaController.getInstance().cleanupPlayer(true, true);
                                    return;
                                } else {
                                    this.videoPlayerContainer.setTranslationY((float) ((-AndroidUtilities.roundMessageSize) - 100));
                                    this.fragmentView.invalidate();
                                    if (playingMessageObject == null) {
                                        return;
                                    }
                                    if (!playingMessageObject.isRoundVideo() && !playingMessageObject.isVideo()) {
                                        return;
                                    }
                                    if (this.checkTextureViewPosition || PipRoundVideoView.getInstance() != null) {
                                        MediaController.getInstance().setCurrentVideoVisible(false);
                                        return;
                                    } else {
                                        scrollToMessageId(playingMessageObject.getId(), 0, false, 0, true);
                                        return;
                                    }
                                }
                            }
                            return;
                        }
                    }
                }
            }
            obj = null;
            if (z) {
            }
        }
    }

    private void updateMessagesVisiblePart(boolean z) {
        RecyclerListView recyclerListView = this.chatListView;
        if (recyclerListView != null) {
            View view;
            View view2;
            MessageObject messageObject;
            int childCount = recyclerListView.getChildCount();
            int measuredHeight = this.chatListView.getMeasuredHeight();
            EncryptedChat encryptedChat = this.currentEncryptedChat;
            this.pollsToCheck.clear();
            int i = Integer.MAX_VALUE;
            int i2 = 0;
            Object obj = null;
            View view3 = null;
            View view4 = null;
            View view5 = null;
            int i3 = Integer.MAX_VALUE;
            int i4 = Integer.MIN_VALUE;
            int i5 = Integer.MIN_VALUE;
            int i6 = Integer.MAX_VALUE;
            while (i2 < childCount) {
                int i7;
                int i8;
                View childAt = this.chatListView.getChildAt(i2);
                boolean z2 = childAt instanceof ChatMessageCell;
                if (z2) {
                    int i9;
                    Object obj2;
                    ChatMessageCell chatMessageCell = (ChatMessageCell) childAt;
                    i7 = childCount;
                    childCount = chatMessageCell.getTop();
                    chatMessageCell.getBottom();
                    if (childCount >= 0) {
                        view = view4;
                        view2 = view5;
                        i9 = 0;
                    } else {
                        view = view4;
                        i9 = -childCount;
                        view2 = view5;
                    }
                    int measuredHeight2 = chatMessageCell.getMeasuredHeight();
                    if (measuredHeight2 > measuredHeight) {
                        measuredHeight2 = i9 + measuredHeight;
                    }
                    chatMessageCell.setVisiblePart(i9, measuredHeight2 - i9);
                    MessageObject messageObject2 = chatMessageCell.getMessageObject();
                    if (this.videoPlayerContainer != null) {
                        Object obj3 = (messageObject2.isVideo() || messageObject2.isRoundVideo()) ? 1 : null;
                        if (obj3 != null) {
                            i8 = measuredHeight;
                            if (MediaController.getInstance().isPlayingMessage(messageObject2)) {
                                ImageReceiver photoImage = chatMessageCell.getPhotoImage();
                                if (obj3 == null || photoImage.getImageY2() + childCount >= 0) {
                                    this.videoPlayerContainer.setTranslationX(((float) photoImage.getImageX()) + chatMessageCell.getX());
                                    this.videoPlayerContainer.setTranslationY((((float) (((this.fragmentView.getPaddingTop() + childCount) + photoImage.getImageY()) - this.chatListViewClipTop)) + this.chatListView.getTranslationY()) + ((float) (this.inPreviewMode ? AndroidUtilities.statusBarHeight : 0)));
                                    this.fragmentView.invalidate();
                                    this.videoPlayerContainer.invalidate();
                                    obj2 = 1;
                                    messageObject = messageObject2;
                                    obj = obj2;
                                } else {
                                    obj2 = null;
                                    messageObject = messageObject2;
                                    obj = obj2;
                                }
                            }
                            obj2 = obj;
                            messageObject = messageObject2;
                            obj = obj2;
                        }
                    }
                    i8 = measuredHeight;
                    obj2 = obj;
                    messageObject = messageObject2;
                    obj = obj2;
                } else {
                    i7 = childCount;
                    i8 = measuredHeight;
                    view = view4;
                    view2 = view5;
                    messageObject = childAt instanceof ChatActionCell ? ((ChatActionCell) childAt).getMessageObject() : null;
                }
                if (messageObject != null) {
                    if (!messageObject.isOut() && messageObject.isUnread()) {
                        measuredHeight = messageObject.getId();
                        if (measuredHeight > 0) {
                            i5 = Math.max(i5, messageObject.getId());
                        }
                        if (measuredHeight < 0) {
                            i6 = Math.min(i6, messageObject.getId());
                        }
                        i4 = Math.max(i4, messageObject.messageOwner.date);
                    }
                    if (messageObject.type == 17) {
                        this.pollsToCheck.add(messageObject);
                    }
                }
                if (childAt.getBottom() > (this.chatListView.getPaddingTop() + AndroidUtilities.dp(1.0f)) + this.chatListViewClipTop) {
                    measuredHeight = childAt.getBottom();
                    if (measuredHeight < i3) {
                        if (z2 || (childAt instanceof ChatActionCell)) {
                            view3 = childAt;
                        }
                        i3 = measuredHeight;
                        view2 = childAt;
                    }
                    if ((childAt instanceof ChatActionCell) && messageObject.isDateObject) {
                        if (childAt.getAlpha() != 1.0f) {
                            childAt.setAlpha(1.0f);
                        }
                        if (measuredHeight < i) {
                            i = measuredHeight;
                            view4 = childAt;
                            view5 = view2;
                            i2++;
                            childCount = i7;
                            measuredHeight = i8;
                        }
                    }
                }
                view4 = view;
                view5 = view2;
                i2++;
                childCount = i7;
                measuredHeight = i8;
            }
            view = view4;
            view2 = view5;
            getMessagesController().addToPollsQueue(this.dialog_id, this.pollsToCheck);
            if (this.videoPlayerContainer != null) {
                if (obj == null) {
                    messageObject = MediaController.getInstance().getPlayingMessageObject();
                    if (messageObject != null) {
                        if (this.checkTextureViewPosition && messageObject.isVideo()) {
                            MediaController.getInstance().cleanupPlayer(true, true);
                        } else {
                            this.videoPlayerContainer.setTranslationY((float) ((-AndroidUtilities.roundMessageSize) - 100));
                            this.fragmentView.invalidate();
                            if ((messageObject.isRoundVideo() || messageObject.isVideo()) && messageObject.eventId == 0 && this.checkTextureViewPosition) {
                                MediaController.getInstance().setCurrentVideoVisible(false);
                            }
                        }
                    }
                } else {
                    MediaController.getInstance().setCurrentVideoVisible(true);
                }
            }
            if (view3 != null) {
                if (view3 instanceof ChatMessageCell) {
                    messageObject = ((ChatMessageCell) view3).getMessageObject();
                } else {
                    messageObject = ((ChatActionCell) view3).getMessageObject();
                }
                this.floatingDateView.setCustomDate(messageObject.messageOwner.date);
            }
            this.currentFloatingDateOnScreen = false;
            View view6 = view2;
            boolean z3 = ((view6 instanceof ChatMessageCell) || (view6 instanceof ChatActionCell)) ? false : true;
            this.currentFloatingTopIsNotMessage = z3;
            if (view != null) {
                if (view.getTop() - this.chatListViewClipTop > this.chatListView.getPaddingTop() || this.currentFloatingTopIsNotMessage) {
                    view6 = view;
                    if (view6.getAlpha() != 1.0f) {
                        view6.setAlpha(1.0f);
                    }
                    hideFloatingDateView(this.currentFloatingTopIsNotMessage ^ 1);
                } else {
                    if (view.getAlpha() != 0.0f) {
                        view6 = view;
                        view6.setAlpha(0.0f);
                    } else {
                        view6 = view;
                    }
                    AnimatorSet animatorSet = this.floatingDateAnimation;
                    if (animatorSet != null) {
                        animatorSet.cancel();
                        this.floatingDateAnimation = null;
                    }
                    if (this.floatingDateView.getTag() == null) {
                        this.floatingDateView.setTag(Integer.valueOf(1));
                    }
                    if (this.floatingDateView.getAlpha() != 1.0f) {
                        this.floatingDateView.setAlpha(1.0f);
                    }
                    this.currentFloatingDateOnScreen = true;
                }
                float bottom = (float) ((view6.getBottom() - this.chatListView.getPaddingTop()) - this.chatListViewClipTop);
                if (bottom <= ((float) this.floatingDateView.getMeasuredHeight()) || bottom >= ((float) (this.floatingDateView.getMeasuredHeight() * 2))) {
                    this.floatingDateView.setTranslationY(0.0f);
                } else {
                    ChatActionCell chatActionCell = this.floatingDateView;
                    chatActionCell.setTranslationY(((float) ((-chatActionCell.getMeasuredHeight()) * 2)) + bottom);
                }
            } else {
                hideFloatingDateView(true);
                this.floatingDateView.setTranslationY(0.0f);
            }
            if (!(this.firstLoading || this.paused || this.inPreviewMode)) {
                if (i5 != Integer.MIN_VALUE || i6 != Integer.MAX_VALUE) {
                    boolean z4;
                    int i10 = 0;
                    for (childCount = 0; childCount < this.messages.size(); childCount++) {
                        MessageObject messageObject3 = (MessageObject) this.messages.get(childCount);
                        int id = messageObject3.getId();
                        if (i5 != Integer.MIN_VALUE && id > 0 && id <= i5 && messageObject3.isUnread()) {
                            messageObject3.setIsRead();
                            i10++;
                        }
                        if (i6 != Integer.MAX_VALUE && id < 0 && id >= i6 && messageObject3.isUnread()) {
                            messageObject3.setIsRead();
                            i10++;
                        }
                    }
                    if ((this.forwardEndReached[0] && i5 == this.minMessageId[0]) || i6 == this.minMessageId[0]) {
                        this.newUnreadMessageCount = 0;
                    } else {
                        this.newUnreadMessageCount -= i10;
                        if (this.newUnreadMessageCount < 0) {
                            this.newUnreadMessageCount = 0;
                        }
                    }
                    if (z) {
                        AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$r8G5ryI3TCtj8E-vwPu9tBJgvUE(this));
                    } else {
                        inlineUpdate1();
                    }
                    MessagesController messagesController = getMessagesController();
                    long j = this.dialog_id;
                    int[] iArr = this.minMessageId;
                    if (i5 == iArr[0] || i6 == iArr[0]) {
                        i = i4;
                        z4 = true;
                    } else {
                        i = i4;
                        z4 = false;
                    }
                    messagesController.markDialogAsRead(j, i5, i6, i, false, i10, z4);
                    this.firstUnreadSent = true;
                } else if (!this.firstUnreadSent && this.chatLayoutManager.findFirstVisibleItemPosition() == 0) {
                    this.newUnreadMessageCount = 0;
                    if (z) {
                        AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$NFR4cP3nNe6c-Xs7PotAXGjVKSQ(this));
                    } else {
                        inlineUpdate2();
                    }
                    MessagesController messagesController2 = getMessagesController();
                    long j2 = this.dialog_id;
                    int[] iArr2 = this.minMessageId;
                    messagesController2.markDialogAsRead(j2, iArr2[0], iArr2[0], this.maxDate[0], false, 0, true);
                    this.firstUnreadSent = true;
                }
            }
        }
    }

    private void inlineUpdate1() {
        int i = this.prevSetUnreadCount;
        int i2 = this.newUnreadMessageCount;
        if (i != i2) {
            this.prevSetUnreadCount = i2;
            this.pagedownButtonCounter.setText(String.format("%d", new Object[]{Integer.valueOf(i2)}));
        }
        if (this.newUnreadMessageCount <= 0) {
            if (this.pagedownButtonCounter.getVisibility() != 4) {
                this.pagedownButtonCounter.setVisibility(4);
            }
        } else if (this.pagedownButtonCounter.getVisibility() != 0) {
            this.pagedownButtonCounter.setVisibility(0);
        }
    }

    private void inlineUpdate2() {
        int i = this.prevSetUnreadCount;
        int i2 = this.newUnreadMessageCount;
        if (i != i2) {
            this.prevSetUnreadCount = i2;
            this.pagedownButtonCounter.setText(String.format("%d", new Object[]{Integer.valueOf(i2)}));
        }
        if (this.pagedownButtonCounter.getVisibility() != 4) {
            this.pagedownButtonCounter.setVisibility(4);
        }
    }

    private void toggleMute(boolean z) {
        String str = "notify2_";
        Editor edit;
        StringBuilder stringBuilder;
        TLRPC.Dialog dialog;
        if (getMessagesController().isDialogMuted(this.dialog_id)) {
            edit = MessagesController.getNotificationsSettings(this.currentAccount).edit();
            stringBuilder = new StringBuilder();
            stringBuilder.append(str);
            stringBuilder.append(this.dialog_id);
            edit.putInt(stringBuilder.toString(), 0);
            getMessagesStorage().setDialogFlags(this.dialog_id, 0);
            edit.commit();
            dialog = (TLRPC.Dialog) getMessagesController().dialogs_dict.get(this.dialog_id);
            if (dialog != null) {
                dialog.notify_settings = new TL_peerNotifySettings();
            }
            getNotificationsController().updateServerNotificationsSettings(this.dialog_id);
        } else if (z) {
            edit = MessagesController.getNotificationsSettings(this.currentAccount).edit();
            stringBuilder = new StringBuilder();
            stringBuilder.append(str);
            stringBuilder.append(this.dialog_id);
            edit.putInt(stringBuilder.toString(), 2);
            getMessagesStorage().setDialogFlags(this.dialog_id, 1);
            edit.commit();
            dialog = (TLRPC.Dialog) getMessagesController().dialogs_dict.get(this.dialog_id);
            if (dialog != null) {
                dialog.notify_settings = new TL_peerNotifySettings();
                dialog.notify_settings.mute_until = Integer.MAX_VALUE;
            }
            getNotificationsController().updateServerNotificationsSettings(this.dialog_id);
            getNotificationsController().removeNotificationsForDialog(this.dialog_id);
        } else {
            showDialog(AlertsCreator.createMuteAlert(getParentActivity(), this.dialog_id));
        }
    }

    private int getScrollOffsetForMessage(MessageObject messageObject) {
        int measuredHeight;
        GroupedMessages validGroupedMessage = getValidGroupedMessage(messageObject);
        if (validGroupedMessage != null) {
            float f;
            int dp;
            GroupedMessagePosition groupedMessagePosition = (GroupedMessagePosition) validGroupedMessage.positions.get(messageObject);
            Point point = AndroidUtilities.displaySize;
            float max = ((float) Math.max(point.x, point.y)) * 0.5f;
            float[] fArr = groupedMessagePosition.siblingHeights;
            if (fArr != null) {
                f = fArr[0];
            } else {
                f = groupedMessagePosition.ph;
            }
            SparseBooleanArray sparseBooleanArray = new SparseBooleanArray();
            float f2 = 0.0f;
            float f3 = 0.0f;
            for (int i = 0; i < validGroupedMessage.posArray.size(); i++) {
                GroupedMessagePosition groupedMessagePosition2 = (GroupedMessagePosition) validGroupedMessage.posArray.get(i);
                if (sparseBooleanArray.indexOfKey(groupedMessagePosition2.minY) < 0 && groupedMessagePosition2.siblingHeights == null) {
                    sparseBooleanArray.put(groupedMessagePosition2.minY, true);
                    byte b = groupedMessagePosition2.minY;
                    byte b2 = groupedMessagePosition.minY;
                    if (b < b2) {
                        f3 -= groupedMessagePosition2.ph;
                    } else if (b > b2) {
                        f3 += groupedMessagePosition2.ph;
                    }
                    f2 += groupedMessagePosition2.ph;
                }
            }
            if (Math.abs(f2 - f) < 0.02f) {
                measuredHeight = (((int) (((float) this.chatListView.getMeasuredHeight()) - (f2 * max))) / 2) - this.chatListView.getPaddingTop();
                dp = AndroidUtilities.dp(7.0f);
            } else {
                measuredHeight = (((int) (((float) this.chatListView.getMeasuredHeight()) - ((f + f3) * max))) / 2) - this.chatListView.getPaddingTop();
                dp = AndroidUtilities.dp(7.0f);
            }
            measuredHeight -= dp;
        } else {
            measuredHeight = Integer.MAX_VALUE;
        }
        if (measuredHeight == Integer.MAX_VALUE) {
            measuredHeight = (this.chatListView.getMeasuredHeight() - messageObject.getApproximateHeight()) / 2;
        }
        return Math.max(0, measuredHeight);
    }

    private void startMessageUnselect() {
        Runnable runnable = this.unselectRunnable;
        if (runnable != null) {
            AndroidUtilities.cancelRunOnUIThread(runnable);
        }
        this.unselectRunnable = new -$$Lambda$ChatActivity$5HIq_zzKJBih4WsTfjpFFUcLEMU(this);
        AndroidUtilities.runOnUIThread(this.unselectRunnable, 1000);
    }

    public /* synthetic */ void lambda$startMessageUnselect$55$ChatActivity() {
        this.highlightMessageId = Integer.MAX_VALUE;
        updateVisibleRows();
        this.unselectRunnable = null;
    }

    private void removeSelectedMessageHighlight() {
        Runnable runnable = this.unselectRunnable;
        if (runnable != null) {
            AndroidUtilities.cancelRunOnUIThread(runnable);
            this.unselectRunnable = null;
        }
        this.highlightMessageId = Integer.MAX_VALUE;
    }

    public void scrollToMessageId(int i, int i2, boolean z, int i3, boolean z2) {
        Object obj;
        int i4;
        int i5 = i;
        boolean z3 = z;
        int i6 = i3;
        this.wasManualScroll = true;
        MessageObject messageObject = (MessageObject) this.messagesDict[i6].get(i5);
        if (messageObject == null || this.messages.indexOf(messageObject) == -1) {
            obj = 1;
        } else {
            removeSelectedMessageHighlight();
            if (z3) {
                this.highlightMessageId = i5;
            }
            int scrollOffsetForMessage = getScrollOffsetForMessage(messageObject);
            if (z2) {
                ArrayList arrayList = this.messages;
                if (arrayList.get(arrayList.size() - 1) == messageObject) {
                    this.chatListView.smoothScrollToPosition(this.chatAdapter.getItemCount() - 1);
                } else {
                    this.chatListView.smoothScrollToPosition(this.chatAdapter.messagesStartRow + this.messages.indexOf(messageObject));
                }
            } else {
                ArrayList arrayList2 = this.messages;
                if (arrayList2.get(arrayList2.size() - 1) == messageObject) {
                    this.chatLayoutManager.scrollToPositionWithOffset(this.chatAdapter.getItemCount() - 1, scrollOffsetForMessage, false);
                } else {
                    this.chatLayoutManager.scrollToPositionWithOffset(this.chatAdapter.messagesStartRow + this.messages.indexOf(messageObject), scrollOffsetForMessage, false);
                }
            }
            updateVisibleRows();
            scrollOffsetForMessage = this.chatListView.getChildCount();
            i4 = 0;
            while (i4 < scrollOffsetForMessage) {
                View childAt = this.chatListView.getChildAt(i4);
                MessageObject messageObject2;
                if (childAt instanceof ChatMessageCell) {
                    messageObject2 = ((ChatMessageCell) childAt).getMessageObject();
                    if (messageObject2 != null && messageObject2.getId() == messageObject.getId()) {
                        childAt.sendAccessibilityEvent(8);
                    }
                    i4++;
                } else {
                    if (childAt instanceof ChatActionCell) {
                        messageObject2 = ((ChatActionCell) childAt).getMessageObject();
                        if (messageObject2 != null && messageObject2.getId() == messageObject.getId()) {
                            childAt.sendAccessibilityEvent(8);
                        }
                    } else {
                        continue;
                    }
                    i4++;
                }
                obj = 1;
                break;
            }
            obj = null;
            if (obj == null) {
                showPagedownButton(true, true);
            }
            obj = null;
        }
        if (obj == null) {
            showFloatingDateView(false);
        } else if (this.currentEncryptedChat == null || getMessagesStorage().checkMessageId(this.dialog_id, this.startLoadFromMessageId)) {
            this.waitingForLoad.clear();
            this.waitingForReplyMessageLoad = true;
            removeSelectedMessageHighlight();
            this.scrollToMessagePosition = -10000;
            this.startLoadFromMessageId = i5;
            this.showScrollToMessageError = true;
            if (i5 == this.createUnreadMessageAfterId) {
                this.createUnreadMessageAfterIdLoading = true;
            }
            this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
            MessagesController messagesController = getMessagesController();
            long j = i6 == 0 ? this.dialog_id : this.mergeDialogId;
            i4 = AndroidUtilities.isTablet() ? 30 : 20;
            int i7 = this.startLoadFromMessageId;
            int i8 = this.classGuid;
            boolean isChannel = ChatObject.isChannel(this.currentChat);
            i5 = this.lastLoadIndex;
            this.lastLoadIndex = i5 + 1;
            messagesController.loadMessages(j, i4, i7, 0, true, 0, i8, 3, 0, isChannel, i5);
        } else {
            return;
        }
        this.returnToMessageId = i2;
        this.returnToLoadIndex = i6;
        this.needSelectFromMessageId = z3;
    }

    private void showPagedownButton(boolean z, boolean z2) {
        FrameLayout frameLayout = this.pagedownButton;
        if (frameLayout != null) {
            AnimatorSet animatorSet;
            Animator[] animatorArr;
            if (z) {
                this.pagedownButtonShowedByScroll = false;
                if (frameLayout.getTag() == null) {
                    animatorSet = this.pagedownButtonAnimation;
                    if (animatorSet != null) {
                        animatorSet.cancel();
                        this.pagedownButtonAnimation = null;
                    }
                    if (z2) {
                        if (this.pagedownButton.getTranslationY() == 0.0f) {
                            this.pagedownButton.setTranslationY((float) AndroidUtilities.dp(100.0f));
                        }
                        this.pagedownButton.setVisibility(0);
                        this.pagedownButton.setTag(Integer.valueOf(1));
                        this.pagedownButtonAnimation = new AnimatorSet();
                        if (this.mentiondownButton.getVisibility() == 0) {
                            animatorSet = this.pagedownButtonAnimation;
                            animatorArr = new Animator[2];
                            animatorArr[0] = ObjectAnimator.ofFloat(this.pagedownButton, View.TRANSLATION_Y, new float[]{0.0f});
                            animatorArr[1] = ObjectAnimator.ofFloat(this.mentiondownButton, View.TRANSLATION_Y, new float[]{(float) (-AndroidUtilities.dp(72.0f))});
                            animatorSet.playTogether(animatorArr);
                        } else {
                            animatorSet = this.pagedownButtonAnimation;
                            animatorArr = new Animator[1];
                            animatorArr[0] = ObjectAnimator.ofFloat(this.pagedownButton, View.TRANSLATION_Y, new float[]{0.0f});
                            animatorSet.playTogether(animatorArr);
                        }
                        this.pagedownButtonAnimation.setDuration(200);
                        this.pagedownButtonAnimation.start();
                    } else {
                        this.pagedownButton.setVisibility(0);
                    }
                }
            } else {
                this.returnToMessageId = 0;
                this.newUnreadMessageCount = 0;
                if (frameLayout.getTag() != null) {
                    this.pagedownButton.setTag(null);
                    animatorSet = this.pagedownButtonAnimation;
                    if (animatorSet != null) {
                        animatorSet.cancel();
                        this.pagedownButtonAnimation = null;
                    }
                    if (z2) {
                        this.pagedownButtonAnimation = new AnimatorSet();
                        if (this.mentiondownButton.getVisibility() == 0) {
                            animatorSet = this.pagedownButtonAnimation;
                            animatorArr = new Animator[2];
                            animatorArr[0] = ObjectAnimator.ofFloat(this.pagedownButton, View.TRANSLATION_Y, new float[]{(float) AndroidUtilities.dp(100.0f)});
                            animatorArr[1] = ObjectAnimator.ofFloat(this.mentiondownButton, View.TRANSLATION_Y, new float[]{0.0f});
                            animatorSet.playTogether(animatorArr);
                        } else {
                            animatorSet = this.pagedownButtonAnimation;
                            animatorArr = new Animator[1];
                            animatorArr[0] = ObjectAnimator.ofFloat(this.pagedownButton, View.TRANSLATION_Y, new float[]{(float) AndroidUtilities.dp(100.0f)});
                            animatorSet.playTogether(animatorArr);
                        }
                        this.pagedownButtonAnimation.setDuration(200);
                        this.pagedownButtonAnimation.addListener(new AnimatorListenerAdapter() {
                            public void onAnimationEnd(Animator animator) {
                                ChatActivity.this.pagedownButtonCounter.setVisibility(4);
                                ChatActivity.this.pagedownButton.setVisibility(4);
                            }
                        });
                        this.pagedownButtonAnimation.start();
                    } else {
                        this.pagedownButton.setVisibility(4);
                    }
                }
            }
        }
    }

    private void showMentionDownButton(boolean z, boolean z2) {
        FrameLayout frameLayout = this.mentiondownButton;
        if (frameLayout != null) {
            ObjectAnimator objectAnimator;
            if (!z) {
                this.returnToMessageId = 0;
                if (frameLayout.getTag() != null) {
                    this.mentiondownButton.setTag(null);
                    objectAnimator = this.mentiondownButtonAnimation;
                    if (objectAnimator != null) {
                        objectAnimator.cancel();
                        this.mentiondownButtonAnimation = null;
                    }
                    if (z2) {
                        if (this.pagedownButton.getVisibility() == 0) {
                            this.mentiondownButtonAnimation = ObjectAnimator.ofFloat(this.mentiondownButton, View.ALPHA, new float[]{1.0f, 0.0f}).setDuration(200);
                        } else {
                            this.mentiondownButtonAnimation = ObjectAnimator.ofFloat(this.mentiondownButton, View.TRANSLATION_Y, new float[]{(float) AndroidUtilities.dp(100.0f)}).setDuration(200);
                        }
                        this.mentiondownButtonAnimation.addListener(new AnimatorListenerAdapter() {
                            public void onAnimationEnd(Animator animator) {
                                ChatActivity.this.mentiondownButtonCounter.setVisibility(4);
                                ChatActivity.this.mentiondownButton.setVisibility(4);
                            }
                        });
                        this.mentiondownButtonAnimation.start();
                    } else {
                        this.mentiondownButton.setVisibility(4);
                    }
                }
            } else if (frameLayout.getTag() == null) {
                objectAnimator = this.mentiondownButtonAnimation;
                if (objectAnimator != null) {
                    objectAnimator.cancel();
                    this.mentiondownButtonAnimation = null;
                }
                if (z2) {
                    this.mentiondownButton.setVisibility(0);
                    this.mentiondownButton.setTag(Integer.valueOf(1));
                    if (this.pagedownButton.getVisibility() == 0) {
                        this.mentiondownButton.setTranslationY((float) (-AndroidUtilities.dp(72.0f)));
                        this.mentiondownButtonAnimation = ObjectAnimator.ofFloat(this.mentiondownButton, View.ALPHA, new float[]{0.0f, 1.0f}).setDuration(200);
                    } else {
                        if (this.mentiondownButton.getTranslationY() == 0.0f) {
                            this.mentiondownButton.setTranslationY((float) AndroidUtilities.dp(100.0f));
                        }
                        this.mentiondownButtonAnimation = ObjectAnimator.ofFloat(this.mentiondownButton, View.TRANSLATION_Y, new float[]{0.0f}).setDuration(200);
                    }
                    this.mentiondownButtonAnimation.start();
                } else {
                    this.mentiondownButton.setVisibility(0);
                }
            }
        }
    }

    private void updateSecretStatus() {
        if (this.bottomOverlay != null) {
            Chat chat = this.currentChat;
            int i = 1;
            if (chat == null || ChatObject.canSendMessages(chat) || (ChatObject.isChannel(this.currentChat) && !this.currentChat.megagroup)) {
                EncryptedChat encryptedChat = this.currentEncryptedChat;
                if (encryptedChat == null || this.bigEmptyView == null) {
                    this.bottomOverlay.setVisibility(4);
                    if (this.stickersAdapter != null) {
                        ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
                        if (chatActivityEnterView != null && chatActivityEnterView.hasText()) {
                            this.stickersAdapter.loadStikersForEmoji(this.chatActivityEnterView.getFieldText(), false);
                        }
                    }
                    return;
                }
                if (encryptedChat instanceof TL_encryptedChatRequested) {
                    this.bottomOverlayText.setText(LocaleController.getString("EncryptionProcessing", NUM));
                    this.bottomOverlay.setVisibility(0);
                } else if (encryptedChat instanceof TL_encryptedChatWaiting) {
                    TextView textView = this.bottomOverlayText;
                    Object[] objArr = new Object[1];
                    StringBuilder stringBuilder = new StringBuilder();
                    stringBuilder.append("<b>");
                    stringBuilder.append(this.currentUser.first_name);
                    stringBuilder.append("</b>");
                    objArr[0] = stringBuilder.toString();
                    textView.setText(AndroidUtilities.replaceTags(LocaleController.formatString("AwaitingEncryption", NUM, objArr)));
                    this.bottomOverlay.setVisibility(0);
                } else if (encryptedChat instanceof TL_encryptedChatDiscarded) {
                    this.bottomOverlayText.setText(LocaleController.getString("EncryptionRejected", NUM));
                    this.bottomOverlay.setVisibility(0);
                    this.chatActivityEnterView.setFieldText("");
                    getMediaDataController().cleanDraft(this.dialog_id, false);
                } else {
                    if (encryptedChat instanceof TL_encryptedChat) {
                        this.bottomOverlay.setVisibility(4);
                    }
                    i = 0;
                }
                checkRaiseSensors();
                checkActionBarMenu();
            } else {
                TL_chatBannedRights tL_chatBannedRights = this.currentChat.default_banned_rights;
                if (tL_chatBannedRights != null && tL_chatBannedRights.send_messages) {
                    this.bottomOverlayText.setText(LocaleController.getString("GlobalSendMessageRestricted", NUM));
                } else if (AndroidUtilities.isBannedForever(this.currentChat.banned_rights)) {
                    this.bottomOverlayText.setText(LocaleController.getString("SendMessageRestrictedForever", NUM));
                } else {
                    this.bottomOverlayText.setText(LocaleController.formatString("SendMessageRestricted", NUM, LocaleController.formatDateForBan((long) this.currentChat.banned_rights.until_date)));
                }
                this.bottomOverlay.setVisibility(0);
                AnimatorSet animatorSet = this.mentionListAnimation;
                if (animatorSet != null) {
                    animatorSet.cancel();
                    this.mentionListAnimation = null;
                }
                this.mentionContainer.setVisibility(8);
                this.mentionContainer.setTag(null);
                updateMessageListAccessibilityVisibility();
                StickersAdapter stickersAdapter = this.stickersAdapter;
                if (stickersAdapter != null) {
                    stickersAdapter.hide();
                }
            }
            if (this.inPreviewMode) {
                this.bottomOverlay.setVisibility(4);
            }
            if (i != 0) {
                this.chatActivityEnterView.hidePopup(false);
                if (getParentActivity() != null) {
                    AndroidUtilities.hideKeyboard(getParentActivity().getCurrentFocus());
                }
            }
        }
    }

    public void onRequestPermissionsResultFragment(int i, String[] strArr, int[] iArr) {
        ChatAttachAlert chatAttachAlert;
        ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
        if (chatActivityEnterView != null) {
            chatActivityEnterView.onRequestPermissionsResultFragment(i, strArr, iArr);
        }
        MentionsAdapter mentionsAdapter = this.mentionsAdapter;
        if (mentionsAdapter != null) {
            mentionsAdapter.onRequestPermissionsResultFragment(i, strArr, iArr);
        }
        if (i == 4) {
            chatAttachAlert = this.chatAttachAlert;
            if (chatAttachAlert != null) {
                chatAttachAlert.checkStorage();
            }
        }
        boolean z = false;
        if (i == 17 || i == 18) {
            chatAttachAlert = this.chatAttachAlert;
            if (chatAttachAlert != null) {
                if (iArr.length > 0 && iArr[0] == 0) {
                    z = true;
                }
                chatAttachAlert.checkCamera(z);
            }
        }
        if (i == 21) {
            if (!(getParentActivity() == null || iArr == null || iArr.length == 0 || iArr[0] == 0)) {
                AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                builder.setTitle(LocaleController.getString("AppName", NUM));
                builder.setMessage(LocaleController.getString("PermissionNoAudioVideo", NUM));
                builder.setNegativeButton(LocaleController.getString("PermissionOpenSettings", NUM), new -$$Lambda$ChatActivity$HqV2GXjVbT1bV-SH8GOiJNmID_U(this));
                builder.setPositiveButton(LocaleController.getString("OK", NUM), null);
                builder.show();
            }
        } else if (i == 19 && iArr != null && iArr.length > 0 && iArr[0] == 0) {
            processSelectedAttach(0);
        } else if (i == 20 && iArr != null && iArr.length > 0 && iArr[0] == 0) {
            processSelectedAttach(2);
        } else if (i == 101) {
            User user = this.currentUser;
            if (user != null) {
                if (iArr.length <= 0 || iArr[0] != 0) {
                    VoIPHelper.permissionDenied(getParentActivity(), null);
                } else {
                    VoIPHelper.startCall(user, getParentActivity(), getMessagesController().getUserFull(this.currentUser.id));
                }
            }
        }
    }

    public /* synthetic */ void lambda$onRequestPermissionsResultFragment$56$ChatActivity(DialogInterface dialogInterface, int i) {
        try {
            Intent intent = new Intent("android.settings.APPLICATION_DETAILS_SETTINGS");
            StringBuilder stringBuilder = new StringBuilder();
            stringBuilder.append("package:");
            stringBuilder.append(ApplicationLoader.applicationContext.getPackageName());
            intent.setData(Uri.parse(stringBuilder.toString()));
            getParentActivity().startActivity(intent);
        } catch (Exception e) {
            FileLog.e(e);
        }
    }

    /* JADX WARNING: Removed duplicated region for block: B:26:0x0040  */
    private void checkActionBarMenu() {
        /*
        r2 = this;
        r0 = r2.currentEncryptedChat;
        if (r0 == 0) goto L_0x0008;
    L_0x0004:
        r0 = r0 instanceof org.telegram.tgnet.TLRPC.TL_encryptedChat;
        if (r0 == 0) goto L_0x001c;
    L_0x0008:
        r0 = r2.currentChat;
        if (r0 == 0) goto L_0x0012;
    L_0x000c:
        r0 = org.telegram.messenger.ChatObject.isNotInChat(r0);
        if (r0 != 0) goto L_0x001c;
    L_0x0012:
        r0 = r2.currentUser;
        if (r0 == 0) goto L_0x002d;
    L_0x0016:
        r0 = org.telegram.messenger.UserObject.isDeleted(r0);
        if (r0 == 0) goto L_0x002d;
    L_0x001c:
        r0 = r2.timeItem2;
        if (r0 == 0) goto L_0x0025;
    L_0x0020:
        r1 = 8;
        r0.setVisibility(r1);
    L_0x0025:
        r0 = r2.avatarContainer;
        if (r0 == 0) goto L_0x003c;
    L_0x0029:
        r0.hideTimeItem();
        goto L_0x003c;
    L_0x002d:
        r0 = r2.timeItem2;
        if (r0 == 0) goto L_0x0035;
    L_0x0031:
        r1 = 0;
        r0.setVisibility(r1);
    L_0x0035:
        r0 = r2.avatarContainer;
        if (r0 == 0) goto L_0x003c;
    L_0x0039:
        r0.showTimeItem();
    L_0x003c:
        r0 = r2.avatarContainer;
        if (r0 == 0) goto L_0x0049;
    L_0x0040:
        r1 = r2.currentEncryptedChat;
        if (r1 == 0) goto L_0x0049;
    L_0x0044:
        r1 = r1.ttl;
        r0.setTime(r1);
    L_0x0049:
        r2.checkAndUpdateAvatar();
        return;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.checkActionBarMenu():void");
    }

    private int getMessageType(MessageObject messageObject) {
        MessageObject messageObject2 = messageObject;
        if (messageObject2 == null) {
            return -1;
        }
        int i = 0;
        int i2;
        InputStickerSet inputStickerSet;
        String str;
        if (this.currentEncryptedChat == null) {
            Object obj = (this.isBroadcast && messageObject.getId() <= 0 && messageObject.isSendError()) ? 1 : null;
            if (messageObject.isEditing()) {
                return -1;
            }
            if ((this.isBroadcast || messageObject.getId() > 0 || !messageObject.isOut()) && obj == null) {
                if (messageObject.isAnimatedEmoji()) {
                    return 2;
                }
                i2 = messageObject2.type;
                if (i2 == 6) {
                    return -1;
                }
                if (i2 == 10 || i2 == 11) {
                    return messageObject.getId() == 0 ? -1 : 1;
                } else {
                    if (messageObject.isVoice()) {
                        return 2;
                    }
                    if (messageObject.isSticker() || messageObject.isAnimatedSticker()) {
                        inputStickerSet = messageObject.getInputStickerSet();
                        if (inputStickerSet instanceof TL_inputStickerSetID) {
                            if (!getMediaDataController().isStickerPackInstalled(inputStickerSet.id)) {
                                return 7;
                            }
                        } else if ((inputStickerSet instanceof TL_inputStickerSetShortName) && !getMediaDataController().isStickerPackInstalled(inputStickerSet.short_name)) {
                            return 7;
                        }
                        return 9;
                    }
                    if (!messageObject.isRoundVideo() && ((messageObject2.messageOwner.media instanceof TL_messageMediaPhoto) || messageObject.getDocument() != null || messageObject.isMusic() || messageObject.isVideo())) {
                        if (!TextUtils.isEmpty(messageObject2.messageOwner.attachPath) && new File(messageObject2.messageOwner.attachPath).exists()) {
                            i = 1;
                        }
                        if (i == 0 && FileLoader.getPathToMessage(messageObject2.messageOwner).exists()) {
                            i = 1;
                        }
                        if (i != 0) {
                            if (messageObject.getDocument() != null) {
                                str = messageObject.getDocument().mime_type;
                                if (str != null) {
                                    if (messageObject.getDocumentName().toLowerCase().endsWith("attheme")) {
                                        return 10;
                                    }
                                    if (str.endsWith("/xml")) {
                                        return 5;
                                    }
                                    if (str.endsWith("/png") || str.endsWith("/jpg") || str.endsWith("/jpeg")) {
                                        return 6;
                                    }
                                }
                            }
                            return 4;
                        }
                    } else if (messageObject2.type == 12) {
                        return 8;
                    } else {
                        if (messageObject.isMediaEmpty()) {
                            return 3;
                        }
                    }
                    return 2;
                }
            } else if (messageObject.isSendError()) {
                return !messageObject.isMediaEmpty() ? 0 : 20;
            } else {
                return -1;
            }
        } else if (messageObject.isSending()) {
            return -1;
        } else {
            if (messageObject.isAnimatedEmoji()) {
                return 2;
            }
            if (messageObject2.type == 6) {
                return -1;
            }
            if (messageObject.isSendError()) {
                return !messageObject.isMediaEmpty() ? 0 : 20;
            } else {
                i2 = messageObject2.type;
                if (i2 == 10 || i2 == 11) {
                    return (messageObject.getId() == 0 || messageObject.isSending()) ? -1 : 1;
                } else {
                    if (messageObject.isVoice()) {
                        return 2;
                    }
                    if (!messageObject.isAnimatedEmoji() && (messageObject.isSticker() || messageObject.isAnimatedSticker())) {
                        inputStickerSet = messageObject.getInputStickerSet();
                        if ((inputStickerSet instanceof TL_inputStickerSetShortName) && !getMediaDataController().isStickerPackInstalled(inputStickerSet.short_name)) {
                            return 7;
                        }
                    } else if (!messageObject.isRoundVideo() && ((messageObject2.messageOwner.media instanceof TL_messageMediaPhoto) || messageObject.getDocument() != null || messageObject.isMusic() || messageObject.isVideo())) {
                        if (!TextUtils.isEmpty(messageObject2.messageOwner.attachPath) && new File(messageObject2.messageOwner.attachPath).exists()) {
                            i = 1;
                        }
                        if (i == 0 && FileLoader.getPathToMessage(messageObject2.messageOwner).exists()) {
                            i = 1;
                        }
                        if (i != 0) {
                            if (messageObject.getDocument() != null) {
                                str = messageObject.getDocument().mime_type;
                                if (str != null && str.endsWith("text/xml")) {
                                    return 5;
                                }
                            }
                            if (messageObject2.messageOwner.ttl <= 0) {
                                return 4;
                            }
                        }
                    } else if (messageObject2.type == 12) {
                        return 8;
                    } else {
                        if (messageObject.isMediaEmpty()) {
                            return 3;
                        }
                    }
                    return 2;
                }
            }
        }
    }

    private void addToSelectedMessages(MessageObject messageObject, boolean z) {
        addToSelectedMessages(messageObject, z, true);
    }

    /* JADX WARNING: Removed duplicated region for block: B:238:0x0413  */
    private void addToSelectedMessages(org.telegram.messenger.MessageObject r23, boolean r24, boolean r25) {
        /*
        r22 = this;
        r0 = r22;
        r1 = r23;
        r2 = r0.cantForwardMessagesCount;
        r3 = 0;
        r5 = 0;
        r6 = 1;
        if (r1 == 0) goto L_0x0193;
    L_0x000c:
        r7 = r23.getDialogId();
        r9 = r0.dialog_id;
        r11 = (r7 > r9 ? 1 : (r7 == r9 ? 0 : -1));
        if (r11 != 0) goto L_0x0018;
    L_0x0016:
        r7 = 0;
        goto L_0x0019;
    L_0x0018:
        r7 = 1;
    L_0x0019:
        if (r24 == 0) goto L_0x0094;
    L_0x001b:
        r8 = r23.getGroupId();
        r10 = (r8 > r3 ? 1 : (r8 == r3 ? 0 : -1));
        if (r10 == 0) goto L_0x0094;
    L_0x0023:
        r2 = r0.groupedMessagesMap;
        r3 = r23.getGroupId();
        r1 = r2.get(r3);
        r1 = (org.telegram.messenger.MessageObject.GroupedMessages) r1;
        if (r1 == 0) goto L_0x0093;
    L_0x0031:
        r2 = 0;
        r3 = 0;
        r4 = 0;
    L_0x0034:
        r8 = r1.messages;
        r8 = r8.size();
        if (r2 >= r8) goto L_0x0057;
    L_0x003c:
        r8 = r1.messages;
        r8 = r8.get(r2);
        r8 = (org.telegram.messenger.MessageObject) r8;
        r9 = r0.selectedMessagesIds;
        r9 = r9[r7];
        r8 = r8.getId();
        r8 = r9.indexOfKey(r8);
        if (r8 >= 0) goto L_0x0054;
    L_0x0052:
        r4 = r2;
        r3 = 1;
    L_0x0054:
        r2 = r2 + 1;
        goto L_0x0034;
    L_0x0057:
        r2 = 0;
    L_0x0058:
        r8 = r1.messages;
        r8 = r8.size();
        if (r2 >= r8) goto L_0x0093;
    L_0x0060:
        r8 = r1.messages;
        r8 = r8.get(r2);
        r8 = (org.telegram.messenger.MessageObject) r8;
        if (r3 == 0) goto L_0x0081;
    L_0x006a:
        r9 = r0.selectedMessagesIds;
        r9 = r9[r7];
        r10 = r8.getId();
        r9 = r9.indexOfKey(r10);
        if (r9 >= 0) goto L_0x0090;
    L_0x0078:
        if (r2 != r4) goto L_0x007c;
    L_0x007a:
        r9 = 1;
        goto L_0x007d;
    L_0x007c:
        r9 = 0;
    L_0x007d:
        r0.addToSelectedMessages(r8, r5, r9);
        goto L_0x0090;
    L_0x0081:
        r9 = r1.messages;
        r9 = r9.size();
        r9 = r9 - r6;
        if (r2 != r9) goto L_0x008c;
    L_0x008a:
        r9 = 1;
        goto L_0x008d;
    L_0x008c:
        r9 = 0;
    L_0x008d:
        r0.addToSelectedMessages(r8, r5, r9);
    L_0x0090:
        r2 = r2 + 1;
        goto L_0x0058;
    L_0x0093:
        return;
    L_0x0094:
        r8 = r0.selectedMessagesIds;
        r8 = r8[r7];
        r9 = r23.getId();
        r8 = r8.indexOfKey(r9);
        if (r8 < 0) goto L_0x0111;
    L_0x00a2:
        r8 = r0.selectedMessagesIds;
        r8 = r8[r7];
        r9 = r23.getId();
        r8.remove(r9);
        r8 = r1.type;
        if (r8 == 0) goto L_0x00bb;
    L_0x00b1:
        r8 = r23.isAnimatedEmoji();
        if (r8 != 0) goto L_0x00bb;
    L_0x00b7:
        r8 = r1.caption;
        if (r8 == 0) goto L_0x00c6;
    L_0x00bb:
        r8 = r0.selectedMessagesCanCopyIds;
        r8 = r8[r7];
        r9 = r23.getId();
        r8.remove(r9);
    L_0x00c6:
        r8 = r23.isAnimatedEmoji();
        if (r8 != 0) goto L_0x00e3;
    L_0x00cc:
        r8 = r23.isSticker();
        if (r8 != 0) goto L_0x00d8;
    L_0x00d2:
        r8 = r23.isAnimatedSticker();
        if (r8 == 0) goto L_0x00e3;
    L_0x00d8:
        r8 = r0.selectedMessagesCanStarIds;
        r7 = r8[r7];
        r8 = r23.getId();
        r7.remove(r8);
    L_0x00e3:
        r7 = r0.currentChat;
        r7 = r1.canEditMessage(r7);
        if (r7 == 0) goto L_0x00f0;
    L_0x00eb:
        r7 = r0.canEditMessagesCount;
        r7 = r7 - r6;
        r0.canEditMessagesCount = r7;
    L_0x00f0:
        r7 = r0.currentChat;
        r7 = r1.canDeleteMessage(r7);
        if (r7 != 0) goto L_0x00fd;
    L_0x00f8:
        r7 = r0.cantDeleteMessagesCount;
        r7 = r7 - r6;
        r0.cantDeleteMessagesCount = r7;
    L_0x00fd:
        r1 = r23.canForwardMessage();
        if (r1 != 0) goto L_0x010a;
    L_0x0103:
        r1 = r0.cantForwardMessagesCount;
        r1 = r1 - r6;
        r0.cantForwardMessagesCount = r1;
        goto L_0x0193;
    L_0x010a:
        r1 = r0.canForwardMessagesCount;
        r1 = r1 - r6;
        r0.canForwardMessagesCount = r1;
        goto L_0x0193;
    L_0x0111:
        r8 = r0.selectedMessagesIds;
        r8 = r8[r5];
        r8 = r8.size();
        r9 = r0.selectedMessagesIds;
        r9 = r9[r6];
        r9 = r9.size();
        r8 = r8 + r9;
        r9 = 100;
        if (r8 < r9) goto L_0x0127;
    L_0x0126:
        return;
    L_0x0127:
        r8 = r0.selectedMessagesIds;
        r8 = r8[r7];
        r9 = r23.getId();
        r8.put(r9, r1);
        r8 = r1.type;
        if (r8 == 0) goto L_0x0140;
    L_0x0136:
        r8 = r23.isAnimatedEmoji();
        if (r8 != 0) goto L_0x0140;
    L_0x013c:
        r8 = r1.caption;
        if (r8 == 0) goto L_0x014b;
    L_0x0140:
        r8 = r0.selectedMessagesCanCopyIds;
        r8 = r8[r7];
        r9 = r23.getId();
        r8.put(r9, r1);
    L_0x014b:
        r8 = r23.isAnimatedEmoji();
        if (r8 != 0) goto L_0x0168;
    L_0x0151:
        r8 = r23.isSticker();
        if (r8 != 0) goto L_0x015d;
    L_0x0157:
        r8 = r23.isAnimatedSticker();
        if (r8 == 0) goto L_0x0168;
    L_0x015d:
        r8 = r0.selectedMessagesCanStarIds;
        r7 = r8[r7];
        r8 = r23.getId();
        r7.put(r8, r1);
    L_0x0168:
        r7 = r0.currentChat;
        r7 = r1.canEditMessage(r7);
        if (r7 == 0) goto L_0x0175;
    L_0x0170:
        r7 = r0.canEditMessagesCount;
        r7 = r7 + r6;
        r0.canEditMessagesCount = r7;
    L_0x0175:
        r7 = r0.currentChat;
        r7 = r1.canDeleteMessage(r7);
        if (r7 != 0) goto L_0x0182;
    L_0x017d:
        r7 = r0.cantDeleteMessagesCount;
        r7 = r7 + r6;
        r0.cantDeleteMessagesCount = r7;
    L_0x0182:
        r1 = r23.canForwardMessage();
        if (r1 != 0) goto L_0x018e;
    L_0x0188:
        r1 = r0.cantForwardMessagesCount;
        r1 = r1 + r6;
        r0.cantForwardMessagesCount = r1;
        goto L_0x0193;
    L_0x018e:
        r1 = r0.canForwardMessagesCount;
        r1 = r1 + r6;
        r0.canForwardMessagesCount = r1;
    L_0x0193:
        r1 = r0.forwardButtonAnimation;
        if (r1 == 0) goto L_0x019d;
    L_0x0197:
        r1.cancel();
        r1 = 0;
        r0.forwardButtonAnimation = r1;
    L_0x019d:
        if (r25 == 0) goto L_0x052a;
    L_0x019f:
        r1 = r0.actionBar;
        r1 = r1.isActionModeShowed();
        if (r1 == 0) goto L_0x052a;
    L_0x01a7:
        r1 = r0.selectedMessagesIds;
        r1 = r1[r5];
        r1 = r1.size();
        r7 = r0.selectedMessagesIds;
        r7 = r7[r6];
        r7 = r7.size();
        r1 = r1 + r7;
        if (r1 != 0) goto L_0x01c2;
    L_0x01ba:
        r22.hideActionMode();
        r0.updatePinnedMessageView(r6);
        goto L_0x052a;
    L_0x01c2:
        r7 = r0.actionBar;
        r7 = r7.createActionMode();
        r8 = 10;
        r7 = r7.getItem(r8);
        r8 = r0.actionBar;
        r8 = r8.createActionMode();
        r9 = 22;
        r8 = r8.getItem(r9);
        r9 = r0.actionBar;
        r9 = r9.createActionMode();
        r10 = 23;
        r9 = r9.getItem(r10);
        r10 = r0.actionBar;
        r10 = r10.createActionMode();
        r11 = 11;
        r10 = r10.getItem(r11);
        r11 = 100;
        if (r2 != 0) goto L_0x01fa;
    L_0x01f6:
        r15 = r0.cantForwardMessagesCount;
        if (r15 != 0) goto L_0x0200;
    L_0x01fa:
        if (r2 == 0) goto L_0x026e;
    L_0x01fc:
        r2 = r0.cantForwardMessagesCount;
        if (r2 != 0) goto L_0x026e;
    L_0x0200:
        r2 = new android.animation.AnimatorSet;
        r2.<init>();
        r0.forwardButtonAnimation = r2;
        r2 = new java.util.ArrayList;
        r2.<init>();
        if (r10 == 0) goto L_0x022e;
    L_0x020e:
        r15 = r0.cantForwardMessagesCount;
        if (r15 != 0) goto L_0x0214;
    L_0x0212:
        r15 = 1;
        goto L_0x0215;
    L_0x0214:
        r15 = 0;
    L_0x0215:
        r10.setEnabled(r15);
        r15 = android.view.View.ALPHA;
        r13 = new float[r6];
        r14 = r0.cantForwardMessagesCount;
        if (r14 != 0) goto L_0x0223;
    L_0x0220:
        r14 = NUM; // 0x3var_ float:1.0 double:5.263544247E-315;
        goto L_0x0225;
    L_0x0223:
        r14 = NUM; // 0x3var_ float:0.5 double:5.222099017E-315;
    L_0x0225:
        r13[r5] = r14;
        r10 = android.animation.ObjectAnimator.ofFloat(r10, r15, r13);
        r2.add(r10);
    L_0x022e:
        r10 = r0.forwardButton;
        if (r10 == 0) goto L_0x0254;
    L_0x0232:
        r13 = r0.cantForwardMessagesCount;
        if (r13 != 0) goto L_0x0238;
    L_0x0236:
        r13 = 1;
        goto L_0x0239;
    L_0x0238:
        r13 = 0;
    L_0x0239:
        r10.setEnabled(r13);
        r10 = r0.forwardButton;
        r13 = android.view.View.ALPHA;
        r14 = new float[r6];
        r15 = r0.cantForwardMessagesCount;
        if (r15 != 0) goto L_0x0249;
    L_0x0246:
        r15 = NUM; // 0x3var_ float:1.0 double:5.263544247E-315;
        goto L_0x024b;
    L_0x0249:
        r15 = NUM; // 0x3var_ float:0.5 double:5.222099017E-315;
    L_0x024b:
        r14[r5] = r15;
        r10 = android.animation.ObjectAnimator.ofFloat(r10, r13, r14);
        r2.add(r10);
    L_0x0254:
        r10 = r0.forwardButtonAnimation;
        r10.playTogether(r2);
        r2 = r0.forwardButtonAnimation;
        r2.setDuration(r11);
        r2 = r0.forwardButtonAnimation;
        r10 = new org.telegram.ui.ChatActivity$53;
        r10.<init>();
        r2.addListener(r10);
        r2 = r0.forwardButtonAnimation;
        r2.start();
        goto L_0x02a2;
    L_0x026e:
        if (r10 == 0) goto L_0x0286;
    L_0x0270:
        r2 = r0.cantForwardMessagesCount;
        if (r2 != 0) goto L_0x0276;
    L_0x0274:
        r2 = 1;
        goto L_0x0277;
    L_0x0276:
        r2 = 0;
    L_0x0277:
        r10.setEnabled(r2);
        r2 = r0.cantForwardMessagesCount;
        if (r2 != 0) goto L_0x0281;
    L_0x027e:
        r2 = NUM; // 0x3var_ float:1.0 double:5.263544247E-315;
        goto L_0x0283;
    L_0x0281:
        r2 = NUM; // 0x3var_ float:0.5 double:5.222099017E-315;
    L_0x0283:
        r10.setAlpha(r2);
    L_0x0286:
        r2 = r0.forwardButton;
        if (r2 == 0) goto L_0x02a2;
    L_0x028a:
        r10 = r0.cantForwardMessagesCount;
        if (r10 != 0) goto L_0x0290;
    L_0x028e:
        r10 = 1;
        goto L_0x0291;
    L_0x0290:
        r10 = 0;
    L_0x0291:
        r2.setEnabled(r10);
        r2 = r0.forwardButton;
        r10 = r0.cantForwardMessagesCount;
        if (r10 != 0) goto L_0x029d;
    L_0x029a:
        r10 = NUM; // 0x3var_ float:1.0 double:5.263544247E-315;
        goto L_0x029f;
    L_0x029d:
        r10 = NUM; // 0x3var_ float:0.5 double:5.222099017E-315;
    L_0x029f:
        r2.setAlpha(r10);
    L_0x02a2:
        r2 = r7.getVisibility();
        r10 = r8.getVisibility();
        r13 = r0.selectedMessagesCanCopyIds;
        r13 = r13[r5];
        r13 = r13.size();
        r14 = r0.selectedMessagesCanCopyIds;
        r14 = r14[r6];
        r14 = r14.size();
        r13 = r13 + r14;
        if (r13 == 0) goto L_0x02bf;
    L_0x02bd:
        r13 = 0;
        goto L_0x02c1;
    L_0x02bf:
        r13 = 8;
    L_0x02c1:
        r7.setVisibility(r13);
        r13 = r22.getMediaDataController();
        r13 = r13.canAddStickerToFavorites();
        if (r13 == 0) goto L_0x02e3;
    L_0x02ce:
        r13 = r0.selectedMessagesCanStarIds;
        r13 = r13[r5];
        r13 = r13.size();
        r15 = r0.selectedMessagesCanStarIds;
        r15 = r15[r6];
        r15 = r15.size();
        r13 = r13 + r15;
        if (r13 != r1) goto L_0x02e3;
    L_0x02e1:
        r13 = 0;
        goto L_0x02e5;
    L_0x02e3:
        r13 = 8;
    L_0x02e5:
        r8.setVisibility(r13);
        r7 = r7.getVisibility();
        r13 = r8.getVisibility();
        r15 = r0.actionBar;
        r15 = r15.createActionMode();
        r11 = 12;
        r11 = r15.getItem(r11);
        r12 = r0.cantDeleteMessagesCount;
        if (r12 != 0) goto L_0x0302;
    L_0x0300:
        r12 = 0;
        goto L_0x0304;
    L_0x0302:
        r12 = 8;
    L_0x0304:
        r11.setVisibility(r12);
        r0.hasUnfavedSelected = r5;
        r11 = 0;
    L_0x030a:
        r12 = 2;
        if (r11 >= r12) goto L_0x0342;
    L_0x030d:
        r15 = 0;
    L_0x030e:
        r14 = r0.selectedMessagesCanStarIds;
        r14 = r14[r11];
        r14 = r14.size();
        if (r15 >= r14) goto L_0x0338;
    L_0x0318:
        r14 = r0.selectedMessagesCanStarIds;
        r14 = r14[r11];
        r14 = r14.valueAt(r15);
        r14 = (org.telegram.messenger.MessageObject) r14;
        r3 = r22.getMediaDataController();
        r4 = r14.getDocument();
        r3 = r3.isStickerInFavorites(r4);
        if (r3 != 0) goto L_0x0333;
    L_0x0330:
        r0.hasUnfavedSelected = r6;
        goto L_0x0338;
    L_0x0333:
        r15 = r15 + 1;
        r3 = 0;
        goto L_0x030e;
    L_0x0338:
        r3 = r0.hasUnfavedSelected;
        if (r3 == 0) goto L_0x033d;
    L_0x033c:
        goto L_0x0342;
    L_0x033d:
        r11 = r11 + 1;
        r3 = 0;
        goto L_0x030a;
    L_0x0342:
        r3 = r0.hasUnfavedSelected;
        if (r3 == 0) goto L_0x034a;
    L_0x0346:
        r3 = NUM; // 0x7var_ float:1.794534E38 double:1.052935689E-314;
        goto L_0x034d;
    L_0x034a:
        r3 = NUM; // 0x7var_ab float:1.7945444E38 double:1.052935714E-314;
    L_0x034d:
        r8.setIcon(r3);
        r3 = r0.canEditMessagesCount;
        if (r3 != r6) goto L_0x0358;
    L_0x0354:
        if (r1 != r6) goto L_0x0358;
    L_0x0356:
        r3 = 0;
        goto L_0x035a;
    L_0x0358:
        r3 = 8;
    L_0x035a:
        r4 = r0.replyButton;
        if (r4 == 0) goto L_0x0489;
    L_0x035e:
        r4 = r0.currentEncryptedChat;
        if (r4 == 0) goto L_0x036c;
    L_0x0362:
        r4 = r4.layer;
        r4 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r4);
        r11 = 46;
        if (r4 < r11) goto L_0x03a5;
    L_0x036c:
        r4 = r0.isBroadcast;
        if (r4 != 0) goto L_0x03a5;
    L_0x0370:
        r4 = r0.bottomOverlayChat;
        if (r4 == 0) goto L_0x037a;
    L_0x0374:
        r4 = r4.getVisibility();
        if (r4 == 0) goto L_0x03a5;
    L_0x037a:
        r4 = r0.currentChat;
        if (r4 == 0) goto L_0x03a3;
    L_0x037e:
        r4 = org.telegram.messenger.ChatObject.isNotInChat(r4);
        if (r4 != 0) goto L_0x03a5;
    L_0x0384:
        r4 = r0.currentChat;
        r4 = org.telegram.messenger.ChatObject.isChannel(r4);
        if (r4 == 0) goto L_0x039a;
    L_0x038c:
        r4 = r0.currentChat;
        r4 = org.telegram.messenger.ChatObject.canPost(r4);
        if (r4 != 0) goto L_0x039a;
    L_0x0394:
        r4 = r0.currentChat;
        r4 = r4.megagroup;
        if (r4 == 0) goto L_0x03a5;
    L_0x039a:
        r4 = r0.currentChat;
        r4 = org.telegram.messenger.ChatObject.canSendMessages(r4);
        if (r4 != 0) goto L_0x03a3;
    L_0x03a2:
        goto L_0x03a5;
    L_0x03a3:
        r4 = 1;
        goto L_0x03a6;
    L_0x03a5:
        r4 = 0;
    L_0x03a6:
        if (r4 == 0) goto L_0x0407;
    L_0x03a8:
        if (r1 == 0) goto L_0x0407;
    L_0x03aa:
        r4 = r0.selectedMessagesIds;
        r4 = r4[r5];
        r4 = r4.size();
        if (r4 == 0) goto L_0x03bf;
    L_0x03b4:
        r4 = r0.selectedMessagesIds;
        r4 = r4[r6];
        r4 = r4.size();
        if (r4 == 0) goto L_0x03bf;
    L_0x03be:
        goto L_0x0407;
    L_0x03bf:
        if (r1 != r6) goto L_0x03c3;
    L_0x03c1:
        r4 = 0;
        goto L_0x040b;
    L_0x03c3:
        r1 = 0;
        r4 = 0;
        r14 = 0;
    L_0x03c7:
        if (r1 >= r12) goto L_0x040b;
    L_0x03c9:
        r11 = r0.selectedMessagesIds;
        r11 = r11[r1];
        r11 = r11.size();
        r18 = r14;
        r14 = 0;
    L_0x03d4:
        if (r14 >= r11) goto L_0x03fb;
    L_0x03d6:
        r15 = r0.selectedMessagesIds;
        r15 = r15[r1];
        r15 = r15.valueAt(r14);
        r15 = (org.telegram.messenger.MessageObject) r15;
        r20 = r15.getGroupId();
        r16 = 0;
        r15 = (r20 > r16 ? 1 : (r20 == r16 ? 0 : -1));
        if (r15 == 0) goto L_0x03f8;
    L_0x03ea:
        r15 = (r18 > r16 ? 1 : (r18 == r16 ? 0 : -1));
        if (r15 == 0) goto L_0x03f3;
    L_0x03ee:
        r15 = (r18 > r20 ? 1 : (r18 == r20 ? 0 : -1));
        if (r15 == 0) goto L_0x03f3;
    L_0x03f2:
        goto L_0x03f8;
    L_0x03f3:
        r14 = r14 + 1;
        r18 = r20;
        goto L_0x03d4;
    L_0x03f8:
        r4 = 8;
        goto L_0x03fd;
    L_0x03fb:
        r16 = 0;
    L_0x03fd:
        r11 = 8;
        if (r4 != r11) goto L_0x0402;
    L_0x0401:
        goto L_0x040b;
    L_0x0402:
        r1 = r1 + 1;
        r14 = r18;
        goto L_0x03c7;
    L_0x0407:
        r11 = 8;
        r4 = 8;
    L_0x040b:
        r1 = r0.replyButton;
        r1 = r1.getVisibility();
        if (r1 == r4) goto L_0x0489;
    L_0x0413:
        r1 = r0.replyButtonAnimation;
        if (r1 == 0) goto L_0x041a;
    L_0x0417:
        r1.cancel();
    L_0x041a:
        r1 = new android.animation.AnimatorSet;
        r1.<init>();
        r0.replyButtonAnimation = r1;
        if (r4 != 0) goto L_0x044e;
    L_0x0423:
        r1 = r0.replyButton;
        r1.setVisibility(r4);
        r1 = r0.replyButtonAnimation;
        r11 = new android.animation.Animator[r12];
        r14 = r0.replyButton;
        r15 = android.view.View.ALPHA;
        r8 = new float[r6];
        r16 = NUM; // 0x3var_ float:1.0 double:5.263544247E-315;
        r8[r5] = r16;
        r8 = android.animation.ObjectAnimator.ofFloat(r14, r15, r8);
        r11[r5] = r8;
        r8 = r0.replyButton;
        r14 = android.view.View.SCALE_Y;
        r15 = new float[r6];
        r15[r5] = r16;
        r8 = android.animation.ObjectAnimator.ofFloat(r8, r14, r15);
        r11[r6] = r8;
        r1.playTogether(r11);
        goto L_0x0473;
    L_0x044e:
        r1 = r0.replyButtonAnimation;
        r8 = new android.animation.Animator[r12];
        r11 = r0.replyButton;
        r14 = android.view.View.ALPHA;
        r15 = new float[r6];
        r16 = 0;
        r15[r5] = r16;
        r11 = android.animation.ObjectAnimator.ofFloat(r11, r14, r15);
        r8[r5] = r11;
        r11 = r0.replyButton;
        r14 = android.view.View.SCALE_Y;
        r15 = new float[r6];
        r15[r5] = r16;
        r11 = android.animation.ObjectAnimator.ofFloat(r11, r14, r15);
        r8[r6] = r11;
        r1.playTogether(r8);
    L_0x0473:
        r1 = r0.replyButtonAnimation;
        r14 = 100;
        r1.setDuration(r14);
        r1 = r0.replyButtonAnimation;
        r8 = new org.telegram.ui.ChatActivity$54;
        r8.<init>(r4);
        r1.addListener(r8);
        r1 = r0.replyButtonAnimation;
        r1.start();
    L_0x0489:
        if (r9 == 0) goto L_0x052a;
    L_0x048b:
        if (r2 != r7) goto L_0x0515;
    L_0x048d:
        if (r10 == r13) goto L_0x0491;
    L_0x048f:
        goto L_0x0515;
    L_0x0491:
        r1 = r9.getVisibility();
        if (r1 == r3) goto L_0x052a;
    L_0x0497:
        r1 = r0.editButtonAnimation;
        if (r1 == 0) goto L_0x049e;
    L_0x049b:
        r1.cancel();
    L_0x049e:
        r1 = new android.animation.AnimatorSet;
        r1.<init>();
        r0.editButtonAnimation = r1;
        r1 = NUM; // 0x42580000 float:54.0 double:5.499263994E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r1);
        r2 = (float) r2;
        r9.setPivotX(r2);
        r1 = org.telegram.messenger.AndroidUtilities.dp(r1);
        r1 = (float) r1;
        r9.setPivotX(r1);
        if (r3 != 0) goto L_0x04de;
    L_0x04b9:
        r9.setVisibility(r3);
        r1 = r0.editButtonAnimation;
        r2 = new android.animation.Animator[r12];
        r4 = android.view.View.ALPHA;
        r7 = new float[r6];
        r8 = NUM; // 0x3var_ float:1.0 double:5.263544247E-315;
        r7[r5] = r8;
        r4 = android.animation.ObjectAnimator.ofFloat(r9, r4, r7);
        r2[r5] = r4;
        r4 = android.view.View.SCALE_X;
        r7 = new float[r6];
        r7[r5] = r8;
        r4 = android.animation.ObjectAnimator.ofFloat(r9, r4, r7);
        r2[r6] = r4;
        r1.playTogether(r2);
        goto L_0x04fe;
    L_0x04de:
        r1 = r0.editButtonAnimation;
        r2 = new android.animation.Animator[r12];
        r4 = android.view.View.ALPHA;
        r7 = new float[r6];
        r8 = 0;
        r7[r5] = r8;
        r4 = android.animation.ObjectAnimator.ofFloat(r9, r4, r7);
        r2[r5] = r4;
        r4 = android.view.View.SCALE_X;
        r7 = new float[r6];
        r7[r5] = r8;
        r4 = android.animation.ObjectAnimator.ofFloat(r9, r4, r7);
        r2[r6] = r4;
        r1.playTogether(r2);
    L_0x04fe:
        r1 = r0.editButtonAnimation;
        r4 = 100;
        r1.setDuration(r4);
        r1 = r0.editButtonAnimation;
        r2 = new org.telegram.ui.ChatActivity$55;
        r2.<init>(r3, r9);
        r1.addListener(r2);
        r1 = r0.editButtonAnimation;
        r1.start();
        goto L_0x052a;
    L_0x0515:
        if (r3 != 0) goto L_0x0520;
    L_0x0517:
        r1 = NUM; // 0x3var_ float:1.0 double:5.263544247E-315;
        r9.setAlpha(r1);
        r9.setScaleX(r1);
        goto L_0x0527;
    L_0x0520:
        r1 = 0;
        r9.setAlpha(r1);
        r9.setScaleX(r1);
    L_0x0527:
        r9.setVisibility(r3);
    L_0x052a:
        return;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.addToSelectedMessages(org.telegram.messenger.MessageObject, boolean, boolean):void");
    }

    private void processRowSelect(View view, boolean z, float f, float f2) {
        MessageObject messageObject = view instanceof ChatMessageCell ? ((ChatMessageCell) view).getMessageObject() : view instanceof ChatActionCell ? ((ChatActionCell) view).getMessageObject() : null;
        int messageType = getMessageType(messageObject);
        if (messageType >= 2 && messageType != 20) {
            addToSelectedMessages(messageObject, z);
            updateActionModeTitle();
            updateVisibleRows();
        }
    }

    private void updateActionModeTitle() {
        if (this.actionBar.isActionModeShowed()) {
            if (!(this.selectedMessagesIds[0].size() == 0 && this.selectedMessagesIds[1].size() == 0)) {
                this.selectedMessagesCountTextView.setNumber(this.selectedMessagesIds[0].size() + this.selectedMessagesIds[1].size(), true);
            }
        }
    }

    private void updateTitle() {
        ChatAvatarContainer chatAvatarContainer = this.avatarContainer;
        if (chatAvatarContainer != null) {
            Chat chat = this.currentChat;
            if (chat != null) {
                chatAvatarContainer.setTitle(chat.title, chat.scam);
            } else {
                User user = this.currentUser;
                if (user != null) {
                    if (user.self) {
                        chatAvatarContainer.setTitle(LocaleController.getString("SavedMessages", NUM));
                    } else if (MessagesController.isSupportUser(user) || getContactsController().contactsDict.get(Integer.valueOf(this.currentUser.id)) != null || (getContactsController().contactsDict.size() == 0 && getContactsController().isLoadingContacts())) {
                        this.avatarContainer.setTitle(UserObject.getUserName(this.currentUser), this.currentUser.scam);
                    } else if (TextUtils.isEmpty(this.currentUser.phone)) {
                        this.avatarContainer.setTitle(UserObject.getUserName(this.currentUser), this.currentUser.scam);
                    } else {
                        chatAvatarContainer = this.avatarContainer;
                        PhoneFormat instance = PhoneFormat.getInstance();
                        StringBuilder stringBuilder = new StringBuilder();
                        stringBuilder.append("+");
                        stringBuilder.append(this.currentUser.phone);
                        chatAvatarContainer.setTitle(instance.format(stringBuilder.toString()));
                    }
                }
            }
            setParentActivityTitle(this.avatarContainer.getTitleTextView().getText());
        }
    }

    private void updateBotButtons() {
        if (this.headerItem != null) {
            User user = this.currentUser;
            if (user != null && this.currentEncryptedChat == null && user.bot) {
                Object obj;
                Object obj2 = null;
                if (this.botInfo.size() != 0) {
                    Object obj3 = null;
                    obj = null;
                    for (int i = 0; i < this.botInfo.size(); i++) {
                        BotInfo botInfo = (BotInfo) this.botInfo.valueAt(i);
                        Object obj4 = obj3;
                        for (int i2 = 0; i2 < botInfo.commands.size(); i2++) {
                            TL_botCommand tL_botCommand = (TL_botCommand) botInfo.commands.get(i2);
                            if (tL_botCommand.command.toLowerCase().equals("help")) {
                                obj4 = 1;
                            } else if (tL_botCommand.command.toLowerCase().equals("settings")) {
                                obj = 1;
                            }
                            if (obj != null && r5 != null) {
                                break;
                            }
                        }
                        obj3 = obj4;
                    }
                    obj2 = obj3;
                } else {
                    obj = null;
                }
                if (obj2 != null) {
                    this.headerItem.showSubItem(30);
                } else {
                    this.headerItem.hideSubItem(30);
                }
                if (obj != null) {
                    this.headerItem.showSubItem(31);
                } else {
                    this.headerItem.hideSubItem(31);
                }
            }
        }
    }

    private void updateTitleIcons() {
        if (this.avatarContainer != null) {
            Drawable drawable = null;
            Drawable drawable2 = getMessagesController().isDialogMuted(this.dialog_id) ? Theme.chat_muteIconDrawable : null;
            ChatAvatarContainer chatAvatarContainer = this.avatarContainer;
            if (this.currentEncryptedChat != null) {
                drawable = Theme.chat_lockIconDrawable;
            }
            chatAvatarContainer.setTitleIcons(drawable, drawable2);
            ActionBarMenuSubItem actionBarMenuSubItem = this.muteItem;
            if (actionBarMenuSubItem != null) {
                if (drawable2 != null) {
                    actionBarMenuSubItem.setTextAndIcon(LocaleController.getString("UnmuteNotifications", NUM), NUM);
                } else {
                    actionBarMenuSubItem.setTextAndIcon(LocaleController.getString("MuteNotifications", NUM), NUM);
                }
            }
        }
    }

    private void checkAndUpdateAvatar() {
        if (this.currentUser != null) {
            User user = getMessagesController().getUser(Integer.valueOf(this.currentUser.id));
            if (user != null) {
                this.currentUser = user;
            } else {
                return;
            }
        } else if (this.currentChat != null) {
            Chat chat = getMessagesController().getChat(Integer.valueOf(this.currentChat.id));
            if (chat != null) {
                this.currentChat = chat;
            } else {
                return;
            }
        }
        ChatAvatarContainer chatAvatarContainer = this.avatarContainer;
        if (chatAvatarContainer != null) {
            chatAvatarContainer.checkAndUpdateAvatar();
        }
    }

    public void openVideoEditor(String str, String str2) {
        String str3 = str2;
        if (getParentActivity() != null) {
            final Bitmap createVideoThumbnail = ThumbnailUtils.createVideoThumbnail(str, 1);
            PhotoViewer.getInstance().setParentActivity(getParentActivity());
            final ArrayList arrayList = new ArrayList();
            PhotoEntry photoEntry = new PhotoEntry(0, 0, 0, str, 0, true);
            photoEntry.caption = str3;
            arrayList.add(photoEntry);
            PhotoViewer.getInstance().openPhotoForSelect(arrayList, 0, 2, new EmptyPhotoViewerProvider() {
                public boolean canScrollAway() {
                    return false;
                }

                public BitmapHolder getThumbForPhoto(MessageObject messageObject, FileLocation fileLocation, int i) {
                    return new BitmapHolder(createVideoThumbnail, null);
                }

                public void sendButtonPressed(int i, VideoEditedInfo videoEditedInfo) {
                    ChatActivity.this.sendMedia((PhotoEntry) arrayList.get(0), videoEditedInfo);
                }
            }, this);
            return;
        }
        String str4 = str;
        fillEditingMediaWithCaption(str3, null);
        SendMessagesHelper.prepareSendingVideo(getAccountInstance(), str, 0, 0, 0, 0, null, this.dialog_id, this.replyingMessageObject, null, null, 0, this.editingMessageObject);
        hideFieldPanel(false);
        getMediaDataController().cleanDraft(this.dialog_id, true);
    }

    private void showAttachmentError() {
        if (getParentActivity() != null) {
            Toast.makeText(getParentActivity(), LocaleController.getString("UnsupportedAttachment", NUM), 0).show();
        }
    }

    private void fillEditingMediaWithCaption(CharSequence charSequence, ArrayList<MessageEntity> arrayList) {
        if (this.editingMessageObject != null) {
            if (TextUtils.isEmpty(charSequence)) {
                ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
                if (chatActivityEnterView != null) {
                    this.editingMessageObject.editingMessage = chatActivityEnterView.getFieldText();
                    MessageObject messageObject = this.editingMessageObject;
                    if (messageObject.editingMessage == null && !TextUtils.isEmpty(messageObject.messageOwner.message)) {
                        this.editingMessageObject.editingMessage = "";
                    }
                }
            } else {
                MessageObject messageObject2 = this.editingMessageObject;
                messageObject2.editingMessage = charSequence;
                messageObject2.editingMessageEntities = arrayList;
            }
        }
    }

    private void sendUriAsDocument(Uri uri) {
        if (uri != null) {
            String copyFileToCache;
            String str;
            String uri2 = uri.toString();
            if (uri2.contains("com.google.android.apps.photos.contentprovider")) {
                try {
                    uri2 = uri2.split("/1/")[1];
                    int indexOf = uri2.indexOf("/ACTUAL");
                    if (indexOf != -1) {
                        uri = Uri.parse(URLDecoder.decode(uri2.substring(0, indexOf), "UTF-8"));
                    }
                } catch (Exception e) {
                    FileLog.e(e);
                }
            }
            uri2 = AndroidUtilities.getPath(uri);
            if (uri2 == null) {
                uri2 = uri.toString();
                copyFileToCache = MediaController.copyFileToCache(uri, "file");
                str = uri2;
            } else {
                copyFileToCache = uri2;
                str = copyFileToCache;
            }
            if (copyFileToCache == null) {
                showAttachmentError();
                return;
            }
            fillEditingMediaWithCaption(null, null);
            SendMessagesHelper.prepareSendingDocument(getAccountInstance(), copyFileToCache, str, null, null, null, this.dialog_id, this.replyingMessageObject, null, this.editingMessageObject);
            hideFieldPanel(false);
        }
    }

    public void onActivityResultFragment(int i, int i2, Intent intent) {
        int i3 = i;
        Intent intent2 = intent;
        if (i2 == -1) {
            if (i3 == 0 || i3 == 2) {
                createChatAttachView();
                ChatAttachAlert chatAttachAlert = this.chatAttachAlert;
                if (chatAttachAlert != null) {
                    chatAttachAlert.onActivityResultFragment(i3, intent2, this.currentPicturePath);
                }
                this.currentPicturePath = null;
            } else if (i3 == 1) {
                if (intent2 == null || intent.getData() == null) {
                    showAttachmentError();
                    return;
                }
                Uri data = intent.getData();
                if (data.toString().contains("video")) {
                    String path;
                    try {
                        path = AndroidUtilities.getPath(data);
                    } catch (Exception e) {
                        FileLog.e(e);
                        path = null;
                    }
                    if (path == null) {
                        showAttachmentError();
                    }
                    if (this.paused) {
                        this.startVideoEdit = path;
                    } else {
                        openVideoEditor(path, null);
                    }
                } else {
                    fillEditingMediaWithCaption(null, null);
                    SendMessagesHelper.prepareSendingPhoto(getAccountInstance(), null, data, this.dialog_id, this.replyingMessageObject, null, null, null, null, 0, this.editingMessageObject);
                }
                hideFieldPanel(false);
                getMediaDataController().cleanDraft(this.dialog_id, true);
            } else if (i3 == 21) {
                if (intent2 == null) {
                    showAttachmentError();
                    return;
                }
                if (intent.getData() != null) {
                    sendUriAsDocument(intent.getData());
                } else if (intent.getClipData() != null) {
                    ClipData clipData = intent.getClipData();
                    for (int i4 = 0; i4 < clipData.getItemCount(); i4++) {
                        sendUriAsDocument(clipData.getItemAt(i4).getUri());
                    }
                } else {
                    showAttachmentError();
                }
                hideFieldPanel(false);
                getMediaDataController().cleanDraft(this.dialog_id, true);
            }
        }
    }

    public void saveSelfArgs(Bundle bundle) {
        String str = this.currentPicturePath;
        if (str != null) {
            bundle.putString("path", str);
        }
    }

    public void restoreSelfArgs(Bundle bundle) {
        this.currentPicturePath = bundle.getString("path");
    }

    private void removeUnreadPlane(boolean z) {
        if (this.unreadMessageObject != null) {
            if (z) {
                boolean[] zArr = this.forwardEndReached;
                zArr[1] = true;
                zArr[0] = true;
                this.first_unread_id = 0;
                this.last_message_id = 0;
            }
            this.createUnreadMessageAfterId = 0;
            this.createUnreadMessageAfterIdLoading = false;
            removeMessageObject(this.unreadMessageObject);
            this.unreadMessageObject = null;
        }
    }

    public boolean processSendingText(String str) {
        return this.chatActivityEnterView.processSendingText(str);
    }

    /* JADX WARNING: Removed duplicated region for block: B:345:0x0696  */
    /* JADX WARNING: Removed duplicated region for block: B:344:0x0690  */
    /* JADX WARNING: Removed duplicated region for block: B:348:0x06a5  */
    /* JADX WARNING: Removed duplicated region for block: B:344:0x0690  */
    /* JADX WARNING: Removed duplicated region for block: B:345:0x0696  */
    /* JADX WARNING: Removed duplicated region for block: B:348:0x06a5  */
    /* JADX WARNING: Removed duplicated region for block: B:419:0x07b3  */
    /* JADX WARNING: Removed duplicated region for block: B:490:0x08d9  */
    /* JADX WARNING: Removed duplicated region for block: B:506:0x093f  */
    /* JADX WARNING: Removed duplicated region for block: B:456:0x083d  */
    /* JADX WARNING: Removed duplicated region for block: B:448:0x081c  */
    /* JADX WARNING: Removed duplicated region for block: B:459:0x0843  */
    /* JADX WARNING: Removed duplicated region for block: B:458:0x0841  */
    /* JADX WARNING: Removed duplicated region for block: B:462:0x085a  */
    /* JADX WARNING: Removed duplicated region for block: B:465:0x0873  */
    /* JADX WARNING: Removed duplicated region for block: B:521:0x09a1  */
    /* JADX WARNING: Removed duplicated region for block: B:526:0x09ad  */
    /* JADX WARNING: Removed duplicated region for block: B:96:0x020d  */
    /* JADX WARNING: Removed duplicated region for block: B:109:0x0266  */
    /* JADX WARNING: Removed duplicated region for block: B:112:0x026d  */
    /* JADX WARNING: Removed duplicated region for block: B:117:0x027d  */
    /* JADX WARNING: Removed duplicated region for block: B:115:0x0279  */
    /* JADX WARNING: Removed duplicated region for block: B:124:0x029a  */
    /* JADX WARNING: Removed duplicated region for block: B:139:0x02d6  */
    /* JADX WARNING: Removed duplicated region for block: B:354:0x06cc  */
    /* JADX WARNING: Removed duplicated region for block: B:399:0x0783  */
    /* JADX WARNING: Removed duplicated region for block: B:364:0x06ec  */
    /* JADX WARNING: Removed duplicated region for block: B:533:0x09c2  */
    /* JADX WARNING: Removed duplicated region for block: B:578:0x0a6a  */
    /* JADX WARNING: Removed duplicated region for block: B:586:0x0aad  */
    /* JADX WARNING: Removed duplicated region for block: B:585:0x0aa8  */
    /* JADX WARNING: Removed duplicated region for block: B:886:0x0f4d  */
    /* JADX WARNING: Removed duplicated region for block: B:987:0x1110  */
    /* JADX WARNING: Removed duplicated region for block: B:986:0x110e  */
    /* JADX WARNING: Removed duplicated region for block: B:980:0x10f4  */
    /* JADX WARNING: Removed duplicated region for block: B:986:0x110e  */
    /* JADX WARNING: Removed duplicated region for block: B:987:0x1110  */
    /* JADX WARNING: Removed duplicated region for block: B:1070:0x12d3  */
    /* JADX WARNING: Removed duplicated region for block: B:961:0x10a7  */
    /* JADX WARNING: Removed duplicated region for block: B:998:0x1142  */
    /* JADX WARNING: Removed duplicated region for block: B:1017:0x119a  */
    /* JADX WARNING: Removed duplicated region for block: B:2426:0x1181 A:{SYNTHETIC} */
    /* JADX WARNING: Removed duplicated region for block: B:1201:0x14f8  */
    /* JADX WARNING: Removed duplicated region for block: B:1218:0x153d  */
    /* JADX WARNING: Removed duplicated region for block: B:1236:0x158a  */
    /* JADX WARNING: Removed duplicated region for block: B:1366:0x182d  */
    /* JADX WARNING: Removed duplicated region for block: B:1343:0x17ab  */
    /* JADX WARNING: Removed duplicated region for block: B:1323:0x1759  */
    /* JADX WARNING: Removed duplicated region for block: B:1377:0x185e  */
    /* JADX WARNING: Removed duplicated region for block: B:1381:0x186b  */
    /* JADX WARNING: Removed duplicated region for block: B:1395:0x18be  */
    /* JADX WARNING: Removed duplicated region for block: B:1428:0x1981  */
    /* JADX WARNING: Removed duplicated region for block: B:1513:0x1b29  */
    /* JADX WARNING: Removed duplicated region for block: B:1517:0x1b44  */
    /* JADX WARNING: Removed duplicated region for block: B:1524:0x1b61  */
    /* JADX WARNING: Removed duplicated region for block: B:1625:0x1d6e  */
    /* JADX WARNING: Removed duplicated region for block: B:1637:0x1da1  */
    /* JADX WARNING: Removed duplicated region for block: B:1640:0x1da8  */
    /* JADX WARNING: Removed duplicated region for block: B:2061:0x25a4  */
    /* JADX WARNING: Removed duplicated region for block: B:2056:0x258d  */
    /* JADX WARNING: Removed duplicated region for block: B:1513:0x1b29  */
    /* JADX WARNING: Removed duplicated region for block: B:1517:0x1b44  */
    /* JADX WARNING: Removed duplicated region for block: B:1524:0x1b61  */
    /* JADX WARNING: Removed duplicated region for block: B:1527:0x1b69  */
    /* JADX WARNING: Removed duplicated region for block: B:1530:0x1b95  */
    /* JADX WARNING: Removed duplicated region for block: B:1533:0x1bb1  */
    /* JADX WARNING: Removed duplicated region for block: B:1536:0x1bbe  */
    /* JADX WARNING: Removed duplicated region for block: B:1513:0x1b29  */
    /* JADX WARNING: Removed duplicated region for block: B:1517:0x1b44  */
    /* JADX WARNING: Removed duplicated region for block: B:1524:0x1b61  */
    /* JADX WARNING: Removed duplicated region for block: B:1527:0x1b69  */
    /* JADX WARNING: Removed duplicated region for block: B:1530:0x1b95  */
    /* JADX WARNING: Removed duplicated region for block: B:1533:0x1bb1  */
    /* JADX WARNING: Removed duplicated region for block: B:1536:0x1bbe  */
    /* JADX WARNING: Missing block: B:116:0x027a, code skipped:
            if (r2 == true) goto L_0x027e;
     */
    /* JADX WARNING: Missing block: B:199:0x03e3, code skipped:
            if (r1 == r9) goto L_0x03f0;
     */
    /* JADX WARNING: Missing block: B:269:0x0584, code skipped:
            if (r1.getId() < r7.createUnreadMessageAfterId) goto L_0x05a7;
     */
    /* JADX WARNING: Missing block: B:279:0x05a4, code skipped:
            if (r1.getId() < r7.createUnreadMessageAfterId) goto L_0x05a7;
     */
    /* JADX WARNING: Missing block: B:303:0x060a, code skipped:
            if (r11 <= r9) goto L_0x060c;
     */
    /* JADX WARNING: Missing block: B:443:0x07f9, code skipped:
            if (r6 == true) goto L_0x07fb;
     */
    /* JADX WARNING: Missing block: B:472:0x088b, code skipped:
            if (r6 == true) goto L_0x088d;
     */
    /* JADX WARNING: Missing block: B:497:0x0908, code skipped:
            if (r4.get(r4.size() - 2) == r7.scrollToMessage) goto L_0x090a;
     */
    /* JADX WARNING: Missing block: B:748:0x0d4d, code skipped:
            if (r6.users.contains(java.lang.Integer.valueOf(r0)) != false) goto L_0x0d4f;
     */
    /* JADX WARNING: Missing block: B:983:0x1109, code skipped:
            if (r13.messages.size() == 0) goto L_0x110b;
     */
    /* JADX WARNING: Missing block: B:1333:0x1788, code skipped:
            if (r12.pinned_msg_id == r10.intValue()) goto L_0x177c;
     */
    /* JADX WARNING: Missing block: B:1645:0x1db6, code skipped:
            if (r0.megagroup != false) goto L_0x1db8;
     */
    /* JADX WARNING: Missing block: B:2104:0x2686, code skipped:
            if (r1.pinned_msg_id == r0.getId()) goto L_0x2688;
     */
    /* JADX WARNING: Missing block: B:2188:0x27f7, code skipped:
            if (r0.megagroup != false) goto L_0x27f9;
     */
    /* JADX WARNING: Missing block: B:2255:0x2940, code skipped:
            if (((long) r2.id) == r0) goto L_0x2942;
     */
    public void didReceivedNotification(int r41, int r42, java.lang.Object... r43) {
        /*
        r40 = this;
        r7 = r40;
        r0 = r41;
        r8 = r43;
        r1 = org.telegram.messenger.NotificationCenter.messagesDidLoad;
        r3 = "";
        r4 = 6;
        r5 = "%d";
        r9 = 5;
        r11 = 3;
        r12 = -1;
        r15 = 4;
        r2 = 2;
        r14 = 1;
        r13 = 0;
        if (r0 != r1) goto L_0x0ab7;
    L_0x0016:
        r0 = 10;
        r0 = r8[r0];
        r0 = (java.lang.Integer) r0;
        r0 = r0.intValue();
        r1 = r7.classGuid;
        if (r0 != r1) goto L_0x2b4e;
    L_0x0024:
        r7.setItemAnimationsEnabled(r13);
        r0 = r7.openAnimationEnded;
        if (r0 != 0) goto L_0x004c;
    L_0x002b:
        r0 = r40.getNotificationCenter();
        r1 = new int[r4];
        r19 = org.telegram.messenger.NotificationCenter.chatInfoDidLoad;
        r1[r13] = r19;
        r19 = org.telegram.messenger.NotificationCenter.dialogsNeedReload;
        r1[r14] = r19;
        r19 = org.telegram.messenger.NotificationCenter.closeChats;
        r1[r2] = r19;
        r19 = org.telegram.messenger.NotificationCenter.botKeyboardDidLoad;
        r1[r11] = r19;
        r19 = org.telegram.messenger.NotificationCenter.userInfoDidLoad;
        r1[r15] = r19;
        r19 = org.telegram.messenger.NotificationCenter.needDeleteDialog;
        r1[r9] = r19;
        r0.setAllowedNotificationsDutingAnimation(r1);
    L_0x004c:
        r0 = 11;
        r0 = r8[r0];
        r0 = (java.lang.Integer) r0;
        r0 = r0.intValue();
        r1 = r7.waitingForLoad;
        r0 = java.lang.Integer.valueOf(r0);
        r0 = r1.indexOf(r0);
        r1 = r40.getUserConfig();
        r1 = r1.getClientUserId();
        if (r0 != r12) goto L_0x006b;
    L_0x006a:
        return;
    L_0x006b:
        r12 = r7.waitingForLoad;
        r12.remove(r0);
        r0 = r8[r2];
        r0 = (java.util.ArrayList) r0;
        r12 = r7.waitingForReplyMessageLoad;
        if (r12 == 0) goto L_0x00d4;
    L_0x0078:
        r10 = r7.createUnreadMessageAfterIdLoading;
        if (r10 != 0) goto L_0x00c2;
    L_0x007c:
        r10 = 0;
    L_0x007d:
        r6 = r0.size();
        if (r10 >= r6) goto L_0x00bc;
    L_0x0083:
        r6 = r0.get(r10);
        r6 = (org.telegram.messenger.MessageObject) r6;
        r2 = r6.getId();
        r4 = r7.startLoadFromMessageId;
        if (r2 != r4) goto L_0x0093;
    L_0x0091:
        r2 = 1;
        goto L_0x00bd;
    L_0x0093:
        r10 = r10 + 1;
        r2 = r0.size();
        if (r10 >= r2) goto L_0x00b8;
    L_0x009b:
        r2 = r0.get(r10);
        r2 = (org.telegram.messenger.MessageObject) r2;
        r4 = r6.getId();
        r9 = r7.startLoadFromMessageId;
        if (r4 < r9) goto L_0x00b8;
    L_0x00a9:
        r2 = r2.getId();
        r4 = r7.startLoadFromMessageId;
        if (r2 >= r4) goto L_0x00b8;
    L_0x00b1:
        r2 = r6.getId();
        r7.startLoadFromMessageId = r2;
        goto L_0x0091;
    L_0x00b8:
        r2 = 2;
        r4 = 6;
        r9 = 5;
        goto L_0x007d;
    L_0x00bc:
        r2 = 0;
    L_0x00bd:
        if (r2 != 0) goto L_0x00c2;
    L_0x00bf:
        r7.startLoadFromMessageId = r13;
        return;
    L_0x00c2:
        r2 = r7.startLoadFromMessageId;
        r4 = r7.needSelectFromMessageId;
        r6 = r7.createUnreadMessageAfterId;
        r9 = r7.createUnreadMessageAfterIdLoading;
        r40.clearChatData();
        r7.createUnreadMessageAfterId = r6;
        r7.startLoadFromMessageId = r2;
        r7.needSelectFromMessageId = r4;
        goto L_0x00d5;
    L_0x00d4:
        r9 = 0;
    L_0x00d5:
        r2 = r7.loadsCount;
        r2 = r2 + r14;
        r7.loadsCount = r2;
        r2 = r8[r13];
        r2 = (java.lang.Long) r2;
        r23 = r2.longValue();
        r4 = r12;
        r11 = r7.dialog_id;
        r6 = (r23 > r11 ? 1 : (r23 == r11 ? 0 : -1));
        if (r6 != 0) goto L_0x00eb;
    L_0x00e9:
        r6 = 0;
        goto L_0x00ec;
    L_0x00eb:
        r6 = 1;
    L_0x00ec:
        r10 = r8[r14];
        r10 = (java.lang.Integer) r10;
        r10 = r10.intValue();
        r2 = 3;
        r11 = r8[r2];
        r11 = (java.lang.Boolean) r11;
        r11 = r11.booleanValue();
        r12 = r8[r15];
        r12 = (java.lang.Integer) r12;
        r12 = r12.intValue();
        r23 = 7;
        r23 = r8[r23];
        r23 = (java.lang.Integer) r23;
        r23.intValue();
        r23 = 8;
        r23 = r8[r23];
        r23 = (java.lang.Integer) r23;
        r2 = r23.intValue();
        r23 = 9;
        r23 = r8[r23];
        r23 = (java.lang.Boolean) r23;
        r23 = r23.booleanValue();
        r24 = 12;
        r24 = r8[r24];
        r24 = (java.lang.Integer) r24;
        r15 = r24.intValue();
        r24 = 13;
        r24 = r8[r24];
        r24 = (java.lang.Integer) r24;
        r24 = r24.intValue();
        if (r24 >= 0) goto L_0x013d;
    L_0x0138:
        r24 = r24 * -1;
        r7.hasAllMentionsLocal = r13;
        goto L_0x0143;
    L_0x013d:
        r13 = r7.first;
        if (r13 == 0) goto L_0x0143;
    L_0x0141:
        r7.hasAllMentionsLocal = r14;
    L_0x0143:
        r13 = r24;
        r14 = 4;
        if (r2 != r14) goto L_0x017d;
    L_0x0148:
        r7.startLoadFromMessageId = r15;
        r14 = r0.size();
        r15 = 1;
        r14 = r14 - r15;
    L_0x0150:
        if (r14 <= 0) goto L_0x017d;
    L_0x0152:
        r24 = r0.get(r14);
        r15 = r24;
        r15 = (org.telegram.messenger.MessageObject) r15;
        r26 = r4;
        r4 = r15.type;
        if (r4 >= 0) goto L_0x0177;
    L_0x0160:
        r4 = r15.getId();
        r15 = r7.startLoadFromMessageId;
        if (r4 != r15) goto L_0x0177;
    L_0x0168:
        r4 = 1;
        r14 = r14 - r4;
        r4 = r0.get(r14);
        r4 = (org.telegram.messenger.MessageObject) r4;
        r4 = r4.getId();
        r7.startLoadFromMessageId = r4;
        goto L_0x017f;
    L_0x0177:
        r14 = r14 + -1;
        r4 = r26;
        r15 = 1;
        goto L_0x0150;
    L_0x017d:
        r26 = r4;
    L_0x017f:
        if (r12 == 0) goto L_0x01b5;
    L_0x0181:
        r4 = 5;
        r14 = r8[r4];
        r14 = (java.lang.Integer) r14;
        r4 = r14.intValue();
        r7.last_message_id = r4;
        r4 = 3;
        if (r2 != r4) goto L_0x01a9;
    L_0x018f:
        r14 = r7.loadingFromOldPosition;
        if (r14 == 0) goto L_0x01a4;
    L_0x0193:
        r14 = 6;
        r8 = r8[r14];
        r8 = (java.lang.Integer) r8;
        r8 = r8.intValue();
        if (r8 == 0) goto L_0x01a0;
    L_0x019e:
        r7.createUnreadMessageAfterId = r12;
    L_0x01a0:
        r12 = 0;
        r7.loadingFromOldPosition = r12;
        goto L_0x01a6;
    L_0x01a4:
        r12 = 0;
        r8 = 0;
    L_0x01a6:
        r7.first_unread_id = r12;
        goto L_0x01cb;
    L_0x01a9:
        r7.first_unread_id = r12;
        r12 = 6;
        r8 = r8[r12];
        r8 = (java.lang.Integer) r8;
        r8 = r8.intValue();
        goto L_0x01cb;
    L_0x01b5:
        r12 = r7.startLoadFromMessageId;
        if (r12 == 0) goto L_0x01ca;
    L_0x01b9:
        r4 = 3;
        if (r2 == r4) goto L_0x01bf;
    L_0x01bc:
        r12 = 4;
        if (r2 != r12) goto L_0x01ca;
    L_0x01bf:
        r12 = 5;
        r8 = r8[r12];
        r8 = (java.lang.Integer) r8;
        r8 = r8.intValue();
        r7.last_message_id = r8;
    L_0x01ca:
        r8 = 0;
    L_0x01cb:
        if (r2 == 0) goto L_0x01df;
    L_0x01cd:
        r12 = r7.startLoadFromMessageId;
        if (r12 != 0) goto L_0x01d9;
    L_0x01d1:
        r12 = r7.last_message_id;
        if (r12 == 0) goto L_0x01d6;
    L_0x01d5:
        goto L_0x01d9;
    L_0x01d6:
        r12 = 1;
        r14 = 0;
        goto L_0x01e1;
    L_0x01d9:
        r12 = r7.forwardEndReached;
        r14 = 0;
        r12[r6] = r14;
        goto L_0x01e0;
    L_0x01df:
        r14 = 0;
    L_0x01e0:
        r12 = 1;
    L_0x01e1:
        if (r2 == r12) goto L_0x01e6;
    L_0x01e3:
        r4 = 3;
        if (r2 != r4) goto L_0x01f8;
    L_0x01e6:
        if (r6 != r12) goto L_0x01f8;
    L_0x01e8:
        r15 = r7.endReached;
        r4 = r7.cacheEndReached;
        r4[r14] = r12;
        r15[r14] = r12;
        r4 = r7.forwardEndReached;
        r4[r14] = r14;
        r4 = r7.minMessageId;
        r4[r14] = r14;
    L_0x01f8:
        r4 = r7.loadsCount;
        if (r4 != r12) goto L_0x0209;
    L_0x01fc:
        r4 = r0.size();
        r14 = 20;
        if (r4 <= r14) goto L_0x0209;
    L_0x0204:
        r4 = r7.loadsCount;
        r4 = r4 + r12;
        r7.loadsCount = r4;
    L_0x0209:
        r4 = r7.firstLoading;
        if (r4 == 0) goto L_0x0263;
    L_0x020d:
        r4 = r7.forwardEndReached;
        r4 = r4[r6];
        if (r4 != 0) goto L_0x0258;
    L_0x0213:
        r4 = r7.messages;
        r4.clear();
        r4 = r7.messagesByDays;
        r4.clear();
        r4 = r7.groupedMessagesMap;
        r4.clear();
        r4 = 0;
    L_0x0223:
        r12 = 2;
        if (r4 >= r12) goto L_0x0258;
    L_0x0226:
        r12 = r7.messagesDict;
        r12 = r12[r4];
        r12.clear();
        r12 = r7.currentEncryptedChat;
        if (r12 != 0) goto L_0x023f;
    L_0x0231:
        r12 = r7.maxMessageId;
        r14 = NUM; // 0x7fffffff float:NaN double:1.060997895E-314;
        r12[r4] = r14;
        r12 = r7.minMessageId;
        r15 = -NUM; // 0xfffffffvar_ float:-0.0 double:NaN;
        r12[r4] = r15;
        goto L_0x024c;
    L_0x023f:
        r14 = NUM; // 0x7fffffff float:NaN double:1.060997895E-314;
        r15 = -NUM; // 0xfffffffvar_ float:-0.0 double:NaN;
        r12 = r7.maxMessageId;
        r12[r4] = r15;
        r12 = r7.minMessageId;
        r12[r4] = r14;
    L_0x024c:
        r12 = r7.maxDate;
        r12[r4] = r15;
        r12 = r7.minDate;
        r14 = 0;
        r12[r4] = r14;
        r4 = r4 + 1;
        goto L_0x0223;
    L_0x0258:
        r14 = 0;
        r7.firstLoading = r14;
        r4 = new org.telegram.ui.-$$Lambda$ChatActivity$2d1ii8B76N0Qvbg73XgLRZ3MPbw;
        r4.<init>(r7);
        org.telegram.messenger.AndroidUtilities.runOnUIThread(r4);
    L_0x0263:
        r4 = 1;
        if (r2 != r4) goto L_0x0269;
    L_0x0266:
        java.util.Collections.reverse(r0);
    L_0x0269:
        r4 = r7.currentEncryptedChat;
        if (r4 != 0) goto L_0x0276;
    L_0x026d:
        r4 = r40.getMediaDataController();
        r14 = r7.dialog_id;
        r4.loadReplyMessagesForMessages(r0, r14);
    L_0x0276:
        r4 = 2;
        if (r2 == r4) goto L_0x027d;
    L_0x0279:
        r4 = 1;
        if (r2 != r4) goto L_0x028b;
    L_0x027c:
        goto L_0x027e;
    L_0x027d:
        r4 = 1;
    L_0x027e:
        r12 = r0.isEmpty();
        if (r12 == 0) goto L_0x028b;
    L_0x0284:
        if (r11 != 0) goto L_0x028b;
    L_0x0286:
        r12 = r7.forwardEndReached;
        r14 = 0;
        r12[r14] = r4;
    L_0x028b:
        r12 = org.telegram.messenger.MediaController.getInstance();
        r14 = r0.size();
        r15 = 0;
        r20 = 0;
        r27 = 0;
    L_0x0298:
        if (r15 >= r14) goto L_0x02c5;
    L_0x029a:
        r24 = r14 - r15;
        r42 = r14;
        r14 = r24 + -1;
        r4 = r0.get(r14);
        r4 = (org.telegram.messenger.MessageObject) r4;
        r4 = r4.messageOwner;
        r4 = r4.action;
        if (r15 != 0) goto L_0x02b3;
    L_0x02ac:
        r14 = r4 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChatCreate;
        if (r14 == 0) goto L_0x02b3;
    L_0x02b0:
        r20 = 1;
        goto L_0x02bf;
    L_0x02b3:
        if (r20 != 0) goto L_0x02b6;
    L_0x02b5:
        goto L_0x02c5;
    L_0x02b6:
        r14 = 2;
        if (r15 >= r14) goto L_0x02bf;
    L_0x02b9:
        r14 = r4 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChatEditPhoto;
        if (r14 == 0) goto L_0x02bf;
    L_0x02bd:
        r27 = r4;
    L_0x02bf:
        r15 = r15 + 1;
        r14 = r42;
        r4 = 1;
        goto L_0x0298;
    L_0x02c5:
        r28 = r5;
        r43 = r8;
        r42 = r13;
        r4 = 0;
        r5 = 0;
        r13 = 0;
        r14 = 0;
        r15 = 0;
    L_0x02d0:
        r8 = r0.size();
        if (r4 >= r8) goto L_0x06c4;
    L_0x02d6:
        r8 = r0.get(r4);
        r8 = (org.telegram.messenger.MessageObject) r8;
        r29 = r11;
        r11 = r8.getId();
        r20 = r8.getApproximateHeight();
        r14 = r14 + r20;
        r30 = r10;
        r10 = r7.currentUser;
        if (r10 == 0) goto L_0x0312;
    L_0x02ee:
        r10 = r10.self;
        if (r10 == 0) goto L_0x02fa;
    L_0x02f2:
        r10 = r8.messageOwner;
        r31 = r9;
        r9 = 1;
        r10.out = r9;
        goto L_0x02fc;
    L_0x02fa:
        r31 = r9;
    L_0x02fc:
        r9 = r7.currentUser;
        r9 = r9.bot;
        if (r9 == 0) goto L_0x0308;
    L_0x0302:
        r9 = r8.isOut();
        if (r9 != 0) goto L_0x030e;
    L_0x0308:
        r9 = r7.currentUser;
        r9 = r9.id;
        if (r9 != r1) goto L_0x0314;
    L_0x030e:
        r8.setIsRead();
        goto L_0x0314;
    L_0x0312:
        r31 = r9;
    L_0x0314:
        r9 = r7.messagesDict;
        r9 = r9[r6];
        r9 = r9.indexOfKey(r11);
        if (r9 < 0) goto L_0x0326;
    L_0x031e:
        r32 = r1;
    L_0x0320:
        r33 = r12;
        r20 = r27;
        goto L_0x06b4;
    L_0x0326:
        r9 = 0;
        r7.addToPolls(r8, r9);
        r9 = r40.isSecretChat();
        if (r9 == 0) goto L_0x0333;
    L_0x0330:
        r7.checkSecretMessageForLocation(r8);
    L_0x0333:
        r9 = r12.isPlayingMessage(r8);
        if (r9 == 0) goto L_0x0349;
    L_0x0339:
        r9 = r12.getPlayingMessageObject();
        r10 = r9.audioProgress;
        r8.audioProgress = r10;
        r10 = r9.audioProgressSec;
        r8.audioProgressSec = r10;
        r9 = r9.audioPlayerDuration;
        r8.audioPlayerDuration = r9;
    L_0x0349:
        if (r6 != 0) goto L_0x035e;
    L_0x034b:
        r9 = r7.currentChat;
        r9 = org.telegram.messenger.ChatObject.isChannel(r9);
        if (r9 == 0) goto L_0x035e;
    L_0x0353:
        r9 = 1;
        if (r11 != r9) goto L_0x035e;
    L_0x0356:
        r10 = r7.endReached;
        r10[r6] = r9;
        r10 = r7.cacheEndReached;
        r10[r6] = r9;
    L_0x035e:
        if (r11 <= 0) goto L_0x0375;
    L_0x0360:
        r9 = r7.maxMessageId;
        r10 = r9[r6];
        r10 = java.lang.Math.min(r11, r10);
        r9[r6] = r10;
        r9 = r7.minMessageId;
        r10 = r9[r6];
        r10 = java.lang.Math.max(r11, r10);
        r9[r6] = r10;
        goto L_0x038d;
    L_0x0375:
        r9 = r7.currentEncryptedChat;
        if (r9 == 0) goto L_0x038d;
    L_0x0379:
        r9 = r7.maxMessageId;
        r10 = r9[r6];
        r10 = java.lang.Math.max(r11, r10);
        r9[r6] = r10;
        r9 = r7.minMessageId;
        r10 = r9[r6];
        r10 = java.lang.Math.min(r11, r10);
        r9[r6] = r10;
    L_0x038d:
        r9 = r8.messageOwner;
        r9 = r9.date;
        if (r9 == 0) goto L_0x03b6;
    L_0x0393:
        r10 = r7.maxDate;
        r32 = r1;
        r1 = r10[r6];
        r1 = java.lang.Math.max(r1, r9);
        r10[r6] = r1;
        r1 = r7.minDate;
        r9 = r1[r6];
        if (r9 == 0) goto L_0x03ad;
    L_0x03a5:
        r9 = r8.messageOwner;
        r9 = r9.date;
        r1 = r1[r6];
        if (r9 >= r1) goto L_0x03b8;
    L_0x03ad:
        r1 = r7.minDate;
        r9 = r8.messageOwner;
        r9 = r9.date;
        r1[r6] = r9;
        goto L_0x03b8;
    L_0x03b6:
        r32 = r1;
    L_0x03b8:
        r1 = r7.last_message_id;
        if (r11 != r1) goto L_0x03c2;
    L_0x03bc:
        r1 = r7.forwardEndReached;
        r9 = 1;
        r1[r6] = r9;
        goto L_0x03c3;
    L_0x03c2:
        r9 = 1;
    L_0x03c3:
        r1 = r8.messageOwner;
        r1 = r1.action;
        r10 = r8.type;
        if (r10 < 0) goto L_0x0320;
    L_0x03cb:
        if (r6 != r9) goto L_0x03d3;
    L_0x03cd:
        r9 = r1 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChatMigrateTo;
        if (r9 == 0) goto L_0x03d3;
    L_0x03d1:
        goto L_0x0320;
    L_0x03d3:
        r9 = r7.currentChat;
        if (r9 == 0) goto L_0x03e6;
    L_0x03d7:
        r9 = r9.creator;
        if (r9 == 0) goto L_0x03e6;
    L_0x03db:
        r9 = r1 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChatCreate;
        if (r9 != 0) goto L_0x0320;
    L_0x03df:
        r9 = r27;
        if (r9 == 0) goto L_0x03e8;
    L_0x03e3:
        if (r1 != r9) goto L_0x03e8;
    L_0x03e5:
        goto L_0x03f0;
    L_0x03e6:
        r9 = r27;
    L_0x03e8:
        r1 = r8.messageOwner;
        r1 = r1.action;
        r1 = r1 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChannelMigrateFrom;
        if (r1 == 0) goto L_0x03f6;
    L_0x03f0:
        r20 = r9;
        r33 = r12;
        goto L_0x06b4;
    L_0x03f6:
        r1 = r7.needAnimateToMessage;
        if (r1 == 0) goto L_0x0411;
    L_0x03fa:
        r1 = r1.getId();
        if (r1 != r11) goto L_0x0411;
    L_0x0400:
        if (r11 >= 0) goto L_0x0411;
    L_0x0402:
        r1 = r8.type;
        r10 = 5;
        if (r1 != r10) goto L_0x0411;
    L_0x0407:
        r8 = r7.needAnimateToMessage;
        r1 = r7.animatingMessageObjects;
        r1.add(r8);
        r1 = 0;
        r7.needAnimateToMessage = r1;
    L_0x0411:
        r1 = r7.messagesDict;
        r1 = r1[r6];
        r1.put(r11, r8);
        r1 = r7.messagesByDays;
        r10 = r8.dateKey;
        r1 = r1.get(r10);
        r1 = (java.util.ArrayList) r1;
        if (r1 != 0) goto L_0x0471;
    L_0x0424:
        r1 = new java.util.ArrayList;
        r1.<init>();
        r10 = r7.messagesByDays;
        r20 = r9;
        r9 = r8.dateKey;
        r10.put(r9, r1);
        r9 = new org.telegram.tgnet.TLRPC$TL_message;
        r9.<init>();
        r10 = r8.messageOwner;
        r10 = r10.date;
        r27 = r11;
        r10 = (long) r10;
        r10 = org.telegram.messenger.LocaleController.formatDateChat(r10);
        r9.message = r10;
        r10 = 0;
        r9.id = r10;
        r11 = r8.messageOwner;
        r11 = r11.date;
        r9.date = r11;
        r11 = new org.telegram.messenger.MessageObject;
        r33 = r1;
        r1 = r7.currentAccount;
        r11.<init>(r1, r9, r10);
        r1 = 10;
        r11.type = r1;
        r1 = 1;
        r11.contentType = r1;
        r11.isDateObject = r1;
        if (r2 != r1) goto L_0x0467;
    L_0x0461:
        r1 = r7.messages;
        r1.add(r10, r11);
        goto L_0x046c;
    L_0x0467:
        r1 = r7.messages;
        r1.add(r11);
    L_0x046c:
        r15 = r15 + 1;
        r1 = r33;
        goto L_0x0475;
    L_0x0471:
        r20 = r9;
        r27 = r11;
    L_0x0475:
        r9 = r8.hasValidGroupId();
        if (r9 == 0) goto L_0x0536;
    L_0x047b:
        r9 = r7.groupedMessagesMap;
        r10 = r8.getGroupIdForUse();
        r9 = r9.get(r10);
        r9 = (org.telegram.messenger.MessageObject.GroupedMessages) r9;
        if (r9 == 0) goto L_0x04e9;
    L_0x0489:
        r10 = r7.messages;
        r10 = r10.size();
        r11 = 1;
        if (r10 <= r11) goto L_0x04e9;
    L_0x0492:
        if (r2 != r11) goto L_0x049e;
    L_0x0494:
        r10 = r7.messages;
        r11 = 0;
        r10 = r10.get(r11);
        r10 = (org.telegram.messenger.MessageObject) r10;
        goto L_0x04ae;
    L_0x049e:
        r10 = r7.messages;
        r11 = r10.size();
        r22 = 2;
        r11 = r11 + -2;
        r10 = r10.get(r11);
        r10 = (org.telegram.messenger.MessageObject) r10;
    L_0x04ae:
        r33 = r10.getGroupIdForUse();
        r35 = r8.getGroupIdForUse();
        r11 = (r33 > r35 ? 1 : (r33 == r35 ? 0 : -1));
        if (r11 != 0) goto L_0x04d1;
    L_0x04ba:
        r33 = r12;
        r11 = r10.localGroupId;
        r17 = 0;
        r34 = (r11 > r17 ? 1 : (r11 == r17 ? 0 : -1));
        if (r34 == 0) goto L_0x04eb;
    L_0x04c4:
        r8.localGroupId = r11;
        r9 = r7.groupedMessagesMap;
        r10 = r10.localGroupId;
        r9 = r9.get(r10);
        r9 = (org.telegram.messenger.MessageObject.GroupedMessages) r9;
        goto L_0x04eb;
    L_0x04d1:
        r33 = r12;
        r10 = r10.getGroupIdForUse();
        r34 = r8.getGroupIdForUse();
        r12 = (r10 > r34 ? 1 : (r10 == r34 ? 0 : -1));
        if (r12 == 0) goto L_0x04eb;
    L_0x04df:
        r9 = org.telegram.messenger.Utilities.random;
        r9 = r9.nextLong();
        r8.localGroupId = r9;
        r9 = 0;
        goto L_0x04eb;
    L_0x04e9:
        r33 = r12;
    L_0x04eb:
        if (r9 != 0) goto L_0x0500;
    L_0x04ed:
        r9 = new org.telegram.messenger.MessageObject$GroupedMessages;
        r9.<init>();
        r10 = r8.getGroupId();
        r9.groupId = r10;
        r10 = r7.groupedMessagesMap;
        r11 = r9.groupId;
        r10.put(r11, r9);
        goto L_0x051a;
    L_0x0500:
        if (r13 == 0) goto L_0x050c;
    L_0x0502:
        r10 = r8.getGroupId();
        r10 = r13.indexOfKey(r10);
        if (r10 >= 0) goto L_0x051a;
    L_0x050c:
        if (r5 != 0) goto L_0x0513;
    L_0x050e:
        r5 = new android.util.LongSparseArray;
        r5.<init>();
    L_0x0513:
        r10 = r8.getGroupId();
        r5.put(r10, r9);
    L_0x051a:
        if (r13 != 0) goto L_0x0521;
    L_0x051c:
        r13 = new android.util.LongSparseArray;
        r13.<init>();
    L_0x0521:
        r10 = r9.groupId;
        r13.put(r10, r9);
        r10 = 1;
        if (r2 != r10) goto L_0x052f;
    L_0x0529:
        r9 = r9.messages;
        r9.add(r8);
        goto L_0x0548;
    L_0x052f:
        r9 = r9.messages;
        r10 = 0;
        r9.add(r10, r8);
        goto L_0x0548;
    L_0x0536:
        r33 = r12;
        r9 = r8.getGroupIdForUse();
        r11 = 0;
        r17 = (r9 > r11 ? 1 : (r9 == r11 ? 0 : -1));
        if (r17 == 0) goto L_0x0548;
    L_0x0542:
        r9 = r8.messageOwner;
        r9.grouped_id = r11;
        r8.localSentGroupId = r11;
    L_0x0548:
        r9 = 1;
        r15 = r15 + r9;
        r1.add(r8);
        if (r2 != r9) goto L_0x0556;
    L_0x054f:
        r1 = r7.messages;
        r10 = 0;
        r1.add(r10, r8);
        goto L_0x0560;
    L_0x0556:
        r1 = r7.messages;
        r10 = r1.size();
        r10 = r10 - r9;
        r1.add(r10, r8);
    L_0x0560:
        r1 = r7.currentEncryptedChat;
        if (r1 != 0) goto L_0x0587;
    L_0x0564:
        r1 = r7.createUnreadMessageAfterId;
        if (r1 == 0) goto L_0x05a6;
    L_0x0568:
        if (r2 == r9) goto L_0x05a6;
    L_0x056a:
        r1 = r4 + 1;
        r9 = r0.size();
        if (r1 >= r9) goto L_0x05a6;
    L_0x0572:
        r1 = r0.get(r1);
        r1 = (org.telegram.messenger.MessageObject) r1;
        r9 = r8.isOut();
        if (r9 != 0) goto L_0x05a6;
    L_0x057e:
        r9 = r1.getId();
        r10 = r7.createUnreadMessageAfterId;
        if (r9 < r10) goto L_0x05a7;
    L_0x0586:
        goto L_0x05a6;
    L_0x0587:
        r1 = r7.createUnreadMessageAfterId;
        if (r1 == 0) goto L_0x05a6;
    L_0x058b:
        r1 = 1;
        if (r2 == r1) goto L_0x05a6;
    L_0x058e:
        r1 = r4 + -1;
        if (r1 < 0) goto L_0x05a6;
    L_0x0592:
        r1 = r0.get(r1);
        r1 = (org.telegram.messenger.MessageObject) r1;
        r9 = r8.isOut();
        if (r9 != 0) goto L_0x05a6;
    L_0x059e:
        r9 = r1.getId();
        r10 = r7.createUnreadMessageAfterId;
        if (r9 < r10) goto L_0x05a7;
    L_0x05a6:
        r1 = 0;
    L_0x05a7:
        r9 = 2;
        if (r2 != r9) goto L_0x05f4;
    L_0x05aa:
        r10 = r7.first_unread_id;
        r11 = r27;
        if (r11 != r10) goto L_0x05f6;
    L_0x05b0:
        r10 = org.telegram.messenger.AndroidUtilities.displaySize;
        r10 = r10.y;
        r10 = r10 / r9;
        if (r14 > r10) goto L_0x05c3;
    L_0x05b7:
        r9 = r7.forwardEndReached;
        r10 = 0;
        r9 = r9[r10];
        if (r9 != 0) goto L_0x05bf;
    L_0x05be:
        goto L_0x05c4;
    L_0x05bf:
        r27 = r5;
        goto L_0x063c;
    L_0x05c3:
        r10 = 0;
    L_0x05c4:
        r9 = new org.telegram.tgnet.TLRPC$TL_message;
        r9.<init>();
        r9.message = r3;
        r9.id = r10;
        r12 = new org.telegram.messenger.MessageObject;
        r27 = r5;
        r5 = r7.currentAccount;
        r12.<init>(r5, r9, r10);
        r5 = 6;
        r12.type = r5;
        r5 = 2;
        r12.contentType = r5;
        r5 = r7.messages;
        r9 = r5.size();
        r10 = 1;
        r9 = r9 - r10;
        r5.add(r9, r12);
        r7.unreadMessageObject = r12;
        r5 = r7.unreadMessageObject;
        r7.scrollToMessage = r5;
        r5 = -10000; // 0xffffffffffffd8f0 float:NaN double:NaN;
        r7.scrollToMessagePosition = r5;
        r15 = r15 + 1;
        goto L_0x063c;
    L_0x05f4:
        r11 = r27;
    L_0x05f6:
        r27 = r5;
        r5 = 3;
        if (r2 == r5) goto L_0x05fe;
    L_0x05fb:
        r9 = 4;
        if (r2 != r9) goto L_0x063c;
    L_0x05fe:
        r9 = r7.startLoadFromMessageId;
        if (r9 >= 0) goto L_0x0604;
    L_0x0602:
        if (r11 == r9) goto L_0x060c;
    L_0x0604:
        r9 = r7.startLoadFromMessageId;
        if (r9 <= 0) goto L_0x063c;
    L_0x0608:
        if (r11 <= 0) goto L_0x063c;
    L_0x060a:
        if (r11 > r9) goto L_0x063c;
    L_0x060c:
        r40.removeSelectedMessageHighlight();
        r9 = r7.needSelectFromMessageId;
        if (r9 == 0) goto L_0x0619;
    L_0x0613:
        r9 = r7.startLoadFromMessageId;
        if (r11 != r9) goto L_0x0619;
    L_0x0617:
        r7.highlightMessageId = r11;
    L_0x0619:
        r9 = r7.showScrollToMessageError;
        if (r9 == 0) goto L_0x062d;
    L_0x061d:
        r9 = r7.startLoadFromMessageId;
        if (r11 == r9) goto L_0x062d;
    L_0x0621:
        r9 = NUM; // 0x7f0d05ec float:1.874519E38 double:1.0531305265E-314;
        r10 = "MessageNotFound";
        r9 = org.telegram.messenger.LocaleController.getString(r10, r9);
        org.telegram.ui.Components.AlertsCreator.showSimpleToast(r7, r9);
    L_0x062d:
        r7.scrollToMessage = r8;
        r9 = 0;
        r7.startLoadFromMessageId = r9;
        r9 = r7.scrollToMessagePosition;
        r10 = -10000; // 0xffffffffffffd8f0 float:NaN double:NaN;
        if (r9 != r10) goto L_0x063c;
    L_0x0638:
        r9 = -9000; // 0xffffffffffffdcd8 float:NaN double:NaN;
        r7.scrollToMessagePosition = r9;
    L_0x063c:
        r9 = 2;
        if (r2 == r9) goto L_0x06b2;
    L_0x063f:
        r9 = r7.unreadMessageObject;
        if (r9 != 0) goto L_0x06b2;
    L_0x0643:
        r9 = r7.createUnreadMessageAfterId;
        if (r9 == 0) goto L_0x06b2;
    L_0x0647:
        r9 = r7.currentEncryptedChat;
        if (r9 != 0) goto L_0x0658;
    L_0x064b:
        r9 = r8.isOut();
        if (r9 != 0) goto L_0x0658;
    L_0x0651:
        r9 = r7.createUnreadMessageAfterId;
        if (r11 >= r9) goto L_0x0656;
    L_0x0655:
        goto L_0x0658;
    L_0x0656:
        r8 = 1;
        goto L_0x0667;
    L_0x0658:
        r9 = r7.currentEncryptedChat;
        if (r9 == 0) goto L_0x06b2;
    L_0x065c:
        r8 = r8.isOut();
        if (r8 != 0) goto L_0x06b2;
    L_0x0662:
        r8 = r7.createUnreadMessageAfterId;
        if (r11 > r8) goto L_0x06b2;
    L_0x0666:
        goto L_0x0656;
    L_0x0667:
        if (r2 == r8) goto L_0x0676;
    L_0x0669:
        if (r1 != 0) goto L_0x0676;
    L_0x066b:
        if (r1 != 0) goto L_0x06b2;
    L_0x066d:
        if (r31 == 0) goto L_0x06b2;
    L_0x066f:
        r1 = r0.size();
        r1 = r1 - r8;
        if (r4 != r1) goto L_0x06b2;
    L_0x0676:
        r1 = new org.telegram.tgnet.TLRPC$TL_message;
        r1.<init>();
        r1.message = r3;
        r8 = 0;
        r1.id = r8;
        r9 = new org.telegram.messenger.MessageObject;
        r10 = r7.currentAccount;
        r9.<init>(r10, r1, r8);
        r1 = 6;
        r9.type = r1;
        r1 = 2;
        r9.contentType = r1;
        r1 = 1;
        if (r2 != r1) goto L_0x0696;
    L_0x0690:
        r8 = r7.messages;
        r8.add(r1, r9);
        goto L_0x06a0;
    L_0x0696:
        r8 = r7.messages;
        r10 = r8.size();
        r10 = r10 - r1;
        r8.add(r10, r9);
    L_0x06a0:
        r7.unreadMessageObject = r9;
        r1 = 3;
        if (r2 != r1) goto L_0x06b0;
    L_0x06a5:
        r5 = r7.unreadMessageObject;
        r7.scrollToMessage = r5;
        r5 = 0;
        r7.startLoadFromMessageId = r5;
        r5 = -9000; // 0xffffffffffffdcd8 float:NaN double:NaN;
        r7.scrollToMessagePosition = r5;
    L_0x06b0:
        r15 = r15 + 1;
    L_0x06b2:
        r5 = r27;
    L_0x06b4:
        r4 = r4 + 1;
        r27 = r20;
        r11 = r29;
        r10 = r30;
        r9 = r31;
        r1 = r32;
        r12 = r33;
        goto L_0x02d0;
    L_0x06c4:
        r31 = r9;
        r30 = r10;
        r29 = r11;
        if (r31 == 0) goto L_0x06cf;
    L_0x06cc:
        r4 = 0;
        r7.createUnreadMessageAfterId = r4;
    L_0x06cf:
        if (r2 != 0) goto L_0x06da;
    L_0x06d1:
        if (r15 != 0) goto L_0x06da;
    L_0x06d3:
        r4 = r7.loadsCount;
        r8 = 1;
        r4 = r4 - r8;
        r7.loadsCount = r4;
        goto L_0x06db;
    L_0x06da:
        r8 = 1;
    L_0x06db:
        r4 = r7.forwardEndReached;
        r4 = r4[r6];
        if (r4 == 0) goto L_0x06ea;
    L_0x06e1:
        if (r6 == r8) goto L_0x06ea;
    L_0x06e3:
        r4 = 0;
        r7.first_unread_id = r4;
        r7.last_message_id = r4;
        r7.createUnreadMessageAfterId = r4;
    L_0x06ea:
        if (r2 != r8) goto L_0x0783;
    L_0x06ec:
        r0 = r0.size();
        r4 = r30;
        if (r0 == r4) goto L_0x071e;
    L_0x06f4:
        if (r29 == 0) goto L_0x0700;
    L_0x06f6:
        r0 = r7.currentEncryptedChat;
        if (r0 != 0) goto L_0x0700;
    L_0x06fa:
        r0 = r7.forwardEndReached;
        r0 = r0[r6];
        if (r0 == 0) goto L_0x071e;
    L_0x0700:
        r0 = r7.forwardEndReached;
        r2 = 1;
        r0[r6] = r2;
        if (r6 == r2) goto L_0x0719;
    L_0x0707:
        r2 = 0;
        r7.first_unread_id = r2;
        r7.last_message_id = r2;
        r7.createUnreadMessageAfterId = r2;
        r0 = r7.chatAdapter;
        r4 = r0.loadingDownRow;
        r0.notifyItemRemoved(r4);
        r0 = 1;
        goto L_0x071b;
    L_0x0719:
        r2 = 0;
        r0 = 0;
    L_0x071b:
        r7.startLoadFromMessageId = r2;
        goto L_0x071f;
    L_0x071e:
        r0 = 0;
    L_0x071f:
        if (r15 <= 0) goto L_0x077e;
    L_0x0721:
        r2 = r7.chatLayoutManager;
        r2 = r2.findFirstVisibleItemPosition();
        if (r2 != 0) goto L_0x072b;
    L_0x0729:
        r2 = r2 + 1;
    L_0x072b:
        r12 = r2;
        r2 = r7.chatLayoutManager;
        r2 = r2.findViewByPosition(r12);
        if (r2 == 0) goto L_0x0755;
    L_0x0734:
        r4 = r2;
        r8 = r12;
    L_0x0736:
        r9 = r4 instanceof org.telegram.ui.Cells.ChatMessageCell;
        if (r9 == 0) goto L_0x0752;
    L_0x073a:
        r9 = r4;
        r9 = (org.telegram.ui.Cells.ChatMessageCell) r9;
        r9 = r9.getMessageObject();
        r9 = r9.hasValidGroupId();
        if (r9 == 0) goto L_0x0752;
    L_0x0747:
        r8 = r8 + 1;
        r4 = r7.chatLayoutManager;
        r4 = r4.findViewByPosition(r8);
        if (r4 != 0) goto L_0x0736;
    L_0x0751:
        goto L_0x0757;
    L_0x0752:
        r2 = r4;
        r12 = r8;
        goto L_0x0757;
    L_0x0755:
        r2 = 0;
        r12 = -1;
    L_0x0757:
        if (r2 != 0) goto L_0x075b;
    L_0x0759:
        r2 = 0;
        goto L_0x076e;
    L_0x075b:
        r4 = r7.chatListView;
        r4 = r4.getMeasuredHeight();
        r2 = r2.getBottom();
        r4 = r4 - r2;
        r2 = r7.chatListView;
        r2 = r2.getPaddingBottom();
        r2 = r4 - r2;
    L_0x076e:
        r4 = r7.chatAdapter;
        r8 = 1;
        r4.notifyItemRangeInserted(r8, r15);
        r4 = -1;
        if (r12 == r4) goto L_0x077e;
    L_0x0777:
        r4 = r7.chatLayoutManager;
        r12 = r12 + r15;
        r12 = r12 - r0;
        r4.scrollToPositionWithOffset(r12, r2);
    L_0x077e:
        r2 = 0;
        r7.loadingForward = r2;
        goto L_0x09c0;
    L_0x0783:
        r4 = r30;
        r8 = r0.size();
        if (r8 >= r4) goto L_0x07ce;
    L_0x078b:
        r1 = 3;
        if (r2 == r1) goto L_0x07ce;
    L_0x078e:
        r4 = 4;
        if (r2 == r4) goto L_0x07ce;
    L_0x0791:
        if (r29 == 0) goto L_0x07b8;
    L_0x0793:
        r0 = r7.currentEncryptedChat;
        if (r0 != 0) goto L_0x07ab;
    L_0x0797:
        r0 = r7.isBroadcast;
        if (r0 != 0) goto L_0x07ab;
    L_0x079b:
        r4 = 1;
        if (r6 != r4) goto L_0x07b0;
    L_0x079e:
        r8 = r7.mergeDialogId;
        r10 = 0;
        r0 = (r8 > r10 ? 1 : (r8 == r10 ? 0 : -1));
        if (r0 == 0) goto L_0x07a9;
    L_0x07a6:
        if (r23 == 0) goto L_0x07a9;
    L_0x07a8:
        goto L_0x07ab;
    L_0x07a9:
        r4 = 1;
        goto L_0x07b0;
    L_0x07ab:
        r0 = r7.endReached;
        r4 = 1;
        r0[r6] = r4;
    L_0x07b0:
        r8 = 2;
        if (r2 == r8) goto L_0x07ce;
    L_0x07b3:
        r0 = r7.cacheEndReached;
        r0[r6] = r4;
        goto L_0x07ce;
    L_0x07b8:
        r8 = 2;
        if (r2 != r8) goto L_0x07c9;
    L_0x07bb:
        r0 = r0.size();
        if (r0 != 0) goto L_0x07ce;
    L_0x07c1:
        r0 = r7.messages;
        r0 = r0.isEmpty();
        if (r0 == 0) goto L_0x07ce;
    L_0x07c9:
        r0 = r7.endReached;
        r2 = 1;
        r0[r6] = r2;
    L_0x07ce:
        r2 = 0;
        r7.loading = r2;
        r0 = r7.chatListView;
        if (r0 == 0) goto L_0x09b7;
    L_0x07d5:
        r0 = r7.first;
        if (r0 != 0) goto L_0x0898;
    L_0x07d9:
        r0 = r7.scrollToTopOnResume;
        if (r0 != 0) goto L_0x0898;
    L_0x07dd:
        r0 = r7.forceScrollToTop;
        if (r0 == 0) goto L_0x07e3;
    L_0x07e1:
        goto L_0x0898;
    L_0x07e3:
        if (r15 == 0) goto L_0x087a;
    L_0x07e5:
        r0 = r7.endReached;
        r0 = r0[r6];
        if (r0 == 0) goto L_0x080d;
    L_0x07eb:
        if (r6 != 0) goto L_0x07f8;
    L_0x07ed:
        r8 = r7.mergeDialogId;
        r10 = 0;
        r0 = (r8 > r10 ? 1 : (r8 == r10 ? 0 : -1));
        if (r0 == 0) goto L_0x07f6;
    L_0x07f5:
        goto L_0x07f8;
    L_0x07f6:
        r2 = 1;
        goto L_0x07fb;
    L_0x07f8:
        r2 = 1;
        if (r6 != r2) goto L_0x080d;
    L_0x07fb:
        r0 = r7.chatAdapter;
        r4 = r0.loadingUpRow;
        r4 = r4 - r2;
        r2 = 2;
        r0.notifyItemRangeChanged(r4, r2);
        r0 = r7.chatAdapter;
        r0.updateRows();
        r0 = 1;
        goto L_0x080e;
    L_0x080d:
        r0 = 0;
    L_0x080e:
        r2 = r7.chatLayoutManager;
        r12 = r2.findFirstVisibleItemPosition();
        r2 = r7.chatLayoutManager;
        r2 = r2.findViewByPosition(r12);
        if (r2 == 0) goto L_0x083d;
    L_0x081c:
        r4 = r2;
        r8 = r12;
    L_0x081e:
        r9 = r4 instanceof org.telegram.ui.Cells.ChatMessageCell;
        if (r9 == 0) goto L_0x083a;
    L_0x0822:
        r9 = r4;
        r9 = (org.telegram.ui.Cells.ChatMessageCell) r9;
        r9 = r9.getMessageObject();
        r9 = r9.hasValidGroupId();
        if (r9 == 0) goto L_0x083a;
    L_0x082f:
        r8 = r8 + 1;
        r4 = r7.chatLayoutManager;
        r4 = r4.findViewByPosition(r8);
        if (r4 != 0) goto L_0x081e;
    L_0x0839:
        goto L_0x083f;
    L_0x083a:
        r2 = r4;
        r12 = r8;
        goto L_0x083f;
    L_0x083d:
        r2 = 0;
        r12 = -1;
    L_0x083f:
        if (r2 != 0) goto L_0x0843;
    L_0x0841:
        r2 = 0;
        goto L_0x0856;
    L_0x0843:
        r4 = r7.chatListView;
        r4 = r4.getMeasuredHeight();
        r2 = r2.getBottom();
        r4 = r4 - r2;
        r2 = r7.chatListView;
        r2 = r2.getPaddingBottom();
        r2 = r4 - r2;
    L_0x0856:
        r4 = r15 - r0;
        if (r4 <= 0) goto L_0x0870;
    L_0x085a:
        r4 = r7.chatAdapter;
        r4 = r4.messagesEndRow;
        r8 = r7.chatAdapter;
        r9 = r8.loadingUpRow;
        r8.notifyItemChanged(r9);
        r8 = r7.chatAdapter;
        r0 = r15 - r0;
        r8.notifyItemRangeInserted(r4, r0);
    L_0x0870:
        r0 = -1;
        if (r12 == r0) goto L_0x099c;
    L_0x0873:
        r0 = r7.chatLayoutManager;
        r0.scrollToPositionWithOffset(r12, r2);
        goto L_0x099c;
    L_0x087a:
        r0 = r7.endReached;
        r0 = r0[r6];
        if (r0 == 0) goto L_0x099c;
    L_0x0880:
        if (r6 != 0) goto L_0x088a;
    L_0x0882:
        r8 = r7.mergeDialogId;
        r10 = 0;
        r0 = (r8 > r10 ? 1 : (r8 == r10 ? 0 : -1));
        if (r0 == 0) goto L_0x088d;
    L_0x088a:
        r2 = 1;
        if (r6 != r2) goto L_0x099d;
    L_0x088d:
        r0 = r7.chatAdapter;
        r2 = r0.loadingUpRow;
        r0.notifyItemRemoved(r2);
        goto L_0x099c;
    L_0x0898:
        r2 = 0;
        r7.forceScrollToTop = r2;
        r0 = r7.chatAdapter;
        r0.notifyDataSetChanged();
        r0 = r7.scrollToMessage;
        if (r0 == 0) goto L_0x0973;
    L_0x08a4:
        r2 = r7.startLoadFromMessageOffset;
        r4 = NUM; // 0x7fffffff float:NaN double:1.060997895E-314;
        if (r2 == r4) goto L_0x08b7;
    L_0x08ab:
        r0 = -r2;
        r2 = r7.chatListView;
        r2 = r2.getPaddingBottom();
        r0 = r0 - r2;
        r7.startLoadFromMessageOffset = r4;
    L_0x08b5:
        r2 = 1;
        goto L_0x08d1;
    L_0x08b7:
        r2 = r7.scrollToMessagePosition;
        r4 = -9000; // 0xffffffffffffdcd8 float:NaN double:NaN;
        if (r2 != r4) goto L_0x08c3;
    L_0x08bd:
        r0 = r7.getScrollOffsetForMessage(r0);
    L_0x08c1:
        r2 = 0;
        goto L_0x08d1;
    L_0x08c3:
        r0 = -10000; // 0xffffffffffffd8f0 float:NaN double:NaN;
        if (r2 != r0) goto L_0x08cf;
    L_0x08c7:
        r0 = NUM; // 0x41300000 float:11.0 double:5.4034219E-315;
        r0 = org.telegram.messenger.AndroidUtilities.dp(r0);
        r0 = -r0;
        goto L_0x08c1;
    L_0x08cf:
        r0 = r2;
        goto L_0x08b5;
    L_0x08d1:
        r4 = r7.messages;
        r4 = r4.isEmpty();
        if (r4 != 0) goto L_0x092a;
    L_0x08d9:
        r4 = r7.chatAdapter;
        r4 = r4.loadingUpRow;
        r8 = -1;
        if (r4 == r8) goto L_0x0916;
    L_0x08e2:
        r4 = r7.messages;
        r4 = r4.isEmpty();
        if (r4 != 0) goto L_0x0916;
    L_0x08ea:
        r4 = r7.messages;
        r8 = r4.size();
        r9 = 1;
        r8 = r8 - r9;
        r4 = r4.get(r8);
        r8 = r7.scrollToMessage;
        if (r4 == r8) goto L_0x090a;
    L_0x08fa:
        r4 = r7.messages;
        r8 = r4.size();
        r9 = 2;
        r8 = r8 - r9;
        r4 = r4.get(r8);
        r8 = r7.scrollToMessage;
        if (r4 != r8) goto L_0x0916;
    L_0x090a:
        r4 = r7.chatLayoutManager;
        r8 = r7.chatAdapter;
        r8 = r8.loadingUpRow;
        r4.scrollToPositionWithOffset(r8, r0, r2);
        goto L_0x092a;
    L_0x0916:
        r4 = r7.chatLayoutManager;
        r8 = r7.chatAdapter;
        r8 = r8.messagesStartRow;
        r9 = r7.messages;
        r10 = r7.scrollToMessage;
        r9 = r9.indexOf(r10);
        r8 = r8 + r9;
        r4.scrollToPositionWithOffset(r8, r0, r2);
    L_0x092a:
        r0 = r7.chatListView;
        r0.invalidate();
        r0 = r7.scrollToMessagePosition;
        r2 = -10000; // 0xffffffffffffd8f0 float:NaN double:NaN;
        if (r0 == r2) goto L_0x0939;
    L_0x0935:
        r2 = -9000; // 0xffffffffffffdcd8 float:NaN double:NaN;
        if (r0 != r2) goto L_0x0969;
    L_0x0939:
        r2 = 1;
        r7.showPagedownButton(r2, r2);
        if (r43 == 0) goto L_0x0969;
    L_0x093f:
        r0 = r7.pagedownButtonCounter;
        if (r0 == 0) goto L_0x0969;
    L_0x0943:
        r4 = 0;
        r0.setVisibility(r4);
        r0 = r7.prevSetUnreadCount;
        r8 = r7.newUnreadMessageCount;
        if (r0 == r8) goto L_0x0969;
    L_0x094d:
        r0 = r7.pagedownButtonCounter;
        r8 = new java.lang.Object[r2];
        r2 = r43;
        r7.newUnreadMessageCount = r2;
        r2 = java.lang.Integer.valueOf(r2);
        r8[r4] = r2;
        r4 = r28;
        r2 = java.lang.String.format(r4, r8);
        r0.setText(r2);
        r0 = r7.newUnreadMessageCount;
        r7.prevSetUnreadCount = r0;
        goto L_0x096b;
    L_0x0969:
        r4 = r28;
    L_0x096b:
        r0 = -10000; // 0xffffffffffffd8f0 float:NaN double:NaN;
        r7.scrollToMessagePosition = r0;
        r2 = 0;
        r7.scrollToMessage = r2;
        goto L_0x0978;
    L_0x0973:
        r4 = r28;
        r40.moveScrollToLastMessage();
    L_0x0978:
        if (r42 == 0) goto L_0x099c;
    L_0x097a:
        r2 = 1;
        r7.showMentionDownButton(r2, r2);
        r0 = r7.mentiondownButtonCounter;
        if (r0 == 0) goto L_0x099d;
    L_0x0982:
        r8 = 0;
        r0.setVisibility(r8);
        r0 = r7.mentiondownButtonCounter;
        r9 = new java.lang.Object[r2];
        r10 = r42;
        r7.newMentionsCount = r10;
        r10 = java.lang.Integer.valueOf(r10);
        r9[r8] = r10;
        r4 = java.lang.String.format(r4, r9);
        r0.setText(r4);
        goto L_0x099d;
    L_0x099c:
        r2 = 1;
    L_0x099d:
        r0 = r7.paused;
        if (r0 == 0) goto L_0x09a9;
    L_0x09a1:
        r7.scrollToTopOnResume = r2;
        r0 = r7.scrollToMessage;
        if (r0 == 0) goto L_0x09a9;
    L_0x09a7:
        r7.scrollToTopUnReadOnResume = r2;
    L_0x09a9:
        r0 = r7.first;
        if (r0 == 0) goto L_0x09c0;
    L_0x09ad:
        r0 = r7.chatListView;
        if (r0 == 0) goto L_0x09c0;
    L_0x09b1:
        r2 = r7.emptyViewContainer;
        r0.setEmptyView(r2);
        goto L_0x09c0;
    L_0x09b7:
        r2 = 1;
        r7.scrollToTopOnResume = r2;
        r0 = r7.scrollToMessage;
        if (r0 == 0) goto L_0x09c0;
    L_0x09be:
        r7.scrollToTopUnReadOnResume = r2;
    L_0x09c0:
        if (r13 == 0) goto L_0x0a0b;
    L_0x09c2:
        r0 = 0;
    L_0x09c3:
        r2 = r13.size();
        if (r0 >= r2) goto L_0x0a0b;
    L_0x09c9:
        r2 = r13.valueAt(r0);
        r2 = (org.telegram.messenger.MessageObject.GroupedMessages) r2;
        r2.calculate();
        r4 = r7.chatAdapter;
        if (r4 == 0) goto L_0x0a08;
    L_0x09d6:
        if (r5 == 0) goto L_0x0a08;
    L_0x09d8:
        r8 = r13.keyAt(r0);
        r4 = r5.indexOfKey(r8);
        if (r4 < 0) goto L_0x0a08;
    L_0x09e2:
        r4 = r2.messages;
        r8 = r4.size();
        r9 = 1;
        r8 = r8 - r9;
        r4 = r4.get(r8);
        r4 = (org.telegram.messenger.MessageObject) r4;
        r8 = r7.messages;
        r4 = r8.indexOf(r4);
        if (r4 < 0) goto L_0x0a08;
    L_0x09f8:
        r8 = r7.chatAdapter;
        r9 = r8.messagesStartRow;
        r4 = r4 + r9;
        r2 = r2.messages;
        r2 = r2.size();
        r8.notifyItemRangeChanged(r4, r2);
    L_0x0a08:
        r0 = r0 + 1;
        goto L_0x09c3;
    L_0x0a0b:
        r0 = r7.first;
        if (r0 == 0) goto L_0x0a1a;
    L_0x0a0f:
        r0 = r7.messages;
        r0 = r0.size();
        if (r0 <= 0) goto L_0x0a1a;
    L_0x0a17:
        r2 = 0;
        r7.first = r2;
    L_0x0a1a:
        r0 = r7.messages;
        r0 = r0.isEmpty();
        if (r0 == 0) goto L_0x0a37;
    L_0x0a22:
        r0 = r7.currentEncryptedChat;
        if (r0 != 0) goto L_0x0a37;
    L_0x0a26:
        r0 = r7.currentUser;
        if (r0 == 0) goto L_0x0a37;
    L_0x0a2a:
        r0 = r0.bot;
        if (r0 == 0) goto L_0x0a37;
    L_0x0a2e:
        r0 = r7.botUser;
        if (r0 != 0) goto L_0x0a37;
    L_0x0a32:
        r7.botUser = r3;
        r40.updateBottomOverlay();
    L_0x0a37:
        if (r15 != 0) goto L_0x0a65;
    L_0x0a39:
        r2 = r7.mergeDialogId;
        r4 = 0;
        r0 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1));
        if (r0 == 0) goto L_0x0a46;
    L_0x0a41:
        if (r6 == 0) goto L_0x0a44;
    L_0x0a43:
        goto L_0x0a46;
    L_0x0a44:
        r2 = 1;
        goto L_0x0a52;
    L_0x0a46:
        r0 = r7.currentEncryptedChat;
        if (r0 == 0) goto L_0x0a65;
    L_0x0a4a:
        r0 = r7.endReached;
        r2 = 0;
        r0 = r0[r2];
        if (r0 != 0) goto L_0x0a65;
    L_0x0a51:
        goto L_0x0a44;
    L_0x0a52:
        r7.first = r2;
        r0 = r7.chatListView;
        if (r0 == 0) goto L_0x0a5c;
    L_0x0a58:
        r2 = 0;
        r0.setEmptyView(r2);
    L_0x0a5c:
        r0 = r7.emptyViewContainer;
        if (r0 == 0) goto L_0x0a6d;
    L_0x0a60:
        r2 = 4;
        r0.setVisibility(r2);
        goto L_0x0a6d;
    L_0x0a65:
        r2 = 4;
        r0 = r7.progressView;
        if (r0 == 0) goto L_0x0a6d;
    L_0x0a6a:
        r0.setVisibility(r2);
    L_0x0a6d:
        if (r15 != 0) goto L_0x0aa6;
    L_0x0a6f:
        r2 = r7.mergeDialogId;
        r4 = 0;
        r0 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1));
        if (r0 == 0) goto L_0x0aa6;
    L_0x0a77:
        if (r6 != 0) goto L_0x0aa6;
    L_0x0a79:
        r0 = r40.getNotificationCenter();
        r2 = 7;
        r2 = new int[r2];
        r3 = org.telegram.messenger.NotificationCenter.chatInfoDidLoad;
        r4 = 0;
        r2[r4] = r3;
        r3 = org.telegram.messenger.NotificationCenter.dialogsNeedReload;
        r4 = 1;
        r2[r4] = r3;
        r3 = org.telegram.messenger.NotificationCenter.closeChats;
        r4 = 2;
        r2[r4] = r3;
        r3 = org.telegram.messenger.NotificationCenter.messagesDidLoad;
        r1 = 3;
        r2[r1] = r3;
        r1 = org.telegram.messenger.NotificationCenter.botKeyboardDidLoad;
        r3 = 4;
        r2[r3] = r1;
        r1 = org.telegram.messenger.NotificationCenter.userInfoDidLoad;
        r3 = 5;
        r2[r3] = r1;
        r1 = org.telegram.messenger.NotificationCenter.needDeleteDialog;
        r3 = 6;
        r2[r3] = r1;
        r0.setAllowedNotificationsDutingAnimation(r2);
    L_0x0aa6:
        if (r26 == 0) goto L_0x0aad;
    L_0x0aa8:
        r1 = 0;
        r7.showFloatingDateView(r1);
        goto L_0x0aae;
    L_0x0aad:
        r1 = 0;
    L_0x0aae:
        r7.checkScrollForLoad(r1);
        r1 = 1;
        r7.setItemAnimationsEnabled(r1);
        goto L_0x2b4e;
    L_0x0ab7:
        r4 = r5;
        r1 = org.telegram.messenger.NotificationCenter.emojiDidLoad;
        if (r0 != r1) goto L_0x0ae8;
    L_0x0abc:
        r0 = r7.chatListView;
        if (r0 == 0) goto L_0x0ac3;
    L_0x0ac0:
        r0.invalidateViews();
    L_0x0ac3:
        r0 = r7.replyObjectTextView;
        if (r0 == 0) goto L_0x0aca;
    L_0x0ac7:
        r0.invalidate();
    L_0x0aca:
        r0 = r7.alertTextView;
        if (r0 == 0) goto L_0x0ad1;
    L_0x0ace:
        r0.invalidate();
    L_0x0ad1:
        r0 = r7.pinnedMessageTextView;
        if (r0 == 0) goto L_0x0ad8;
    L_0x0ad5:
        r0.invalidate();
    L_0x0ad8:
        r0 = r7.mentionListView;
        if (r0 == 0) goto L_0x0adf;
    L_0x0adc:
        r0.invalidateViews();
    L_0x0adf:
        r0 = r7.stickersListView;
        if (r0 == 0) goto L_0x2b4e;
    L_0x0ae3:
        r0.invalidateViews();
        goto L_0x2b4e;
    L_0x0ae8:
        r1 = org.telegram.messenger.NotificationCenter.didUpdateConnectionState;
        if (r0 != r1) goto L_0x0afd;
    L_0x0aec:
        r0 = org.telegram.tgnet.ConnectionsManager.getInstance(r42);
        r0 = r0.getConnectionState();
        r1 = 3;
        if (r0 != r1) goto L_0x2b4e;
    L_0x0af7:
        r1 = 0;
        r7.checkAutoDownloadMessages(r1);
        goto L_0x2b4e;
    L_0x0afd:
        r1 = 0;
        r5 = org.telegram.messenger.NotificationCenter.chatOnlineCountDidLoad;
        if (r0 != r5) goto L_0x0b33;
    L_0x0b02:
        r0 = r8[r1];
        r0 = (java.lang.Integer) r0;
        r1 = r7.chatInfo;
        if (r1 == 0) goto L_0x0b32;
    L_0x0b0a:
        r1 = r7.currentChat;
        if (r1 == 0) goto L_0x0b32;
    L_0x0b0e:
        r1 = r1.id;
        r0 = r0.intValue();
        if (r1 == r0) goto L_0x0b17;
    L_0x0b16:
        goto L_0x0b32;
    L_0x0b17:
        r0 = r7.chatInfo;
        r1 = 1;
        r1 = r8[r1];
        r1 = (java.lang.Integer) r1;
        r1 = r1.intValue();
        r0.online_count = r1;
        r0 = r7.avatarContainer;
        if (r0 == 0) goto L_0x2b4e;
    L_0x0b28:
        r0.updateOnlineCount();
        r0 = r7.avatarContainer;
        r0.updateSubtitle();
        goto L_0x2b4e;
    L_0x0b32:
        return;
    L_0x0b33:
        r1 = org.telegram.messenger.NotificationCenter.updateInterfaces;
        if (r0 != r1) goto L_0x0c0d;
    L_0x0b37:
        r1 = 0;
        r0 = r8[r1];
        r0 = (java.lang.Integer) r0;
        r0 = r0.intValue();
        r1 = r0 & 1;
        if (r1 != 0) goto L_0x0b48;
    L_0x0b44:
        r2 = r0 & 16;
        if (r2 == 0) goto L_0x0b7c;
    L_0x0b48:
        r2 = r7.currentChat;
        if (r2 == 0) goto L_0x0b61;
    L_0x0b4c:
        r2 = r40.getMessagesController();
        r3 = r7.currentChat;
        r3 = r3.id;
        r3 = java.lang.Integer.valueOf(r3);
        r2 = r2.getChat(r3);
        if (r2 == 0) goto L_0x0b79;
    L_0x0b5e:
        r7.currentChat = r2;
        goto L_0x0b79;
    L_0x0b61:
        r2 = r7.currentUser;
        if (r2 == 0) goto L_0x0b79;
    L_0x0b65:
        r2 = r40.getMessagesController();
        r3 = r7.currentUser;
        r3 = r3.id;
        r3 = java.lang.Integer.valueOf(r3);
        r2 = r2.getUser(r3);
        if (r2 == 0) goto L_0x0b79;
    L_0x0b77:
        r7.currentUser = r2;
    L_0x0b79:
        r40.updateTitle();
    L_0x0b7c:
        r2 = r0 & 32;
        if (r2 != 0) goto L_0x0b87;
    L_0x0b80:
        r2 = r0 & 4;
        if (r2 == 0) goto L_0x0b85;
    L_0x0b84:
        goto L_0x0b87;
    L_0x0b85:
        r14 = 0;
        goto L_0x0b93;
    L_0x0b87:
        r2 = r7.currentChat;
        if (r2 == 0) goto L_0x0b92;
    L_0x0b8b:
        r2 = r7.avatarContainer;
        if (r2 == 0) goto L_0x0b92;
    L_0x0b8f:
        r2.updateOnlineCount();
    L_0x0b92:
        r14 = 1;
    L_0x0b93:
        r2 = r0 & 2;
        if (r2 != 0) goto L_0x0b9d;
    L_0x0b97:
        r2 = r0 & 8;
        if (r2 != 0) goto L_0x0b9d;
    L_0x0b9b:
        if (r1 == 0) goto L_0x0ba3;
    L_0x0b9d:
        r40.checkAndUpdateAvatar();
        r40.updateVisibleRows();
    L_0x0ba3:
        r1 = r0 & 64;
        if (r1 == 0) goto L_0x0ba8;
    L_0x0ba7:
        r14 = 1;
    L_0x0ba8:
        r1 = r0 & 8192;
        if (r1 == 0) goto L_0x0bd4;
    L_0x0bac:
        r1 = r7.currentChat;
        if (r1 == 0) goto L_0x0bd4;
    L_0x0bb0:
        r1 = r40.getMessagesController();
        r2 = r7.currentChat;
        r2 = r2.id;
        r2 = java.lang.Integer.valueOf(r2);
        r1 = r1.getChat(r2);
        if (r1 != 0) goto L_0x0bc3;
    L_0x0bc2:
        return;
    L_0x0bc3:
        r7.currentChat = r1;
        r40.updateBottomOverlay();
        r1 = r7.chatActivityEnterView;
        if (r1 == 0) goto L_0x0bd3;
    L_0x0bcc:
        r2 = r7.dialog_id;
        r4 = r7.currentAccount;
        r1.setDialogId(r2, r4);
    L_0x0bd3:
        r14 = 1;
    L_0x0bd4:
        r1 = r0 & 256;
        if (r1 == 0) goto L_0x0bfa;
    L_0x0bd8:
        r1 = r7.bottomOverlayChatText2;
        if (r1 == 0) goto L_0x0bfa;
    L_0x0bdc:
        r1 = r7.chatInfo;
        if (r1 == 0) goto L_0x0bfa;
    L_0x0be0:
        r1 = r7.currentChat;
        r1 = org.telegram.messenger.ChatObject.isChannel(r1);
        if (r1 == 0) goto L_0x0bfa;
    L_0x0be8:
        r1 = r7.currentChat;
        r1 = r1.megagroup;
        if (r1 != 0) goto L_0x0bfa;
    L_0x0bee:
        r1 = r7.chatInfo;
        r1 = r1.linked_chat_id;
        r1 = -r1;
        if (r1 == 0) goto L_0x0bfa;
    L_0x0bf5:
        r1 = r7.bottomOverlayChatText2;
        r1.updateCounter();
    L_0x0bfa:
        r1 = r7.avatarContainer;
        if (r1 == 0) goto L_0x0CLASSNAME;
    L_0x0bfe:
        if (r14 == 0) goto L_0x0CLASSNAME;
    L_0x0CLASSNAME:
        r1.updateSubtitle();
    L_0x0CLASSNAME:
        r0 = r0 & 128;
        if (r0 == 0) goto L_0x2b4e;
    L_0x0CLASSNAME:
        r1 = 1;
        r7.updateTopPanel(r1);
        goto L_0x2b4e;
    L_0x0c0d:
        r1 = org.telegram.messenger.NotificationCenter.didReceiveNewMessages;
        if (r0 != r1) goto L_0x1449;
    L_0x0CLASSNAME:
        r1 = 0;
        r0 = r8[r1];
        r0 = (java.lang.Long) r0;
        r0 = r0.longValue();
        r5 = r7.dialog_id;
        r2 = (r0 > r5 ? 1 : (r0 == r5 ? 0 : -1));
        if (r2 != 0) goto L_0x2b4e;
    L_0x0CLASSNAME:
        r0 = r40.getUserConfig();
        r0 = r0.getClientUserId();
        r1 = 1;
        r2 = r8[r1];
        r2 = (java.util.ArrayList) r2;
        r5 = r7.currentEncryptedChat;
        if (r5 == 0) goto L_0x0cb4;
    L_0x0CLASSNAME:
        r5 = r2.size();
        if (r5 != r1) goto L_0x0cb4;
    L_0x0CLASSNAME:
        r1 = 0;
        r5 = r2.get(r1);
        r5 = (org.telegram.messenger.MessageObject) r5;
        r1 = r7.currentEncryptedChat;
        if (r1 == 0) goto L_0x0cb4;
    L_0x0CLASSNAME:
        r1 = r5.isOut();
        if (r1 == 0) goto L_0x0cb4;
    L_0x0CLASSNAME:
        r1 = r5.messageOwner;
        r1 = r1.action;
        r5 = r1 instanceof org.telegram.tgnet.TLRPC.TL_messageEncryptedAction;
        if (r5 == 0) goto L_0x0cb4;
    L_0x0CLASSNAME:
        r1 = r1.encryptedAction;
        r1 = r1 instanceof org.telegram.tgnet.TLRPC.TL_decryptedMessageActionSetMessageTTL;
        if (r1 == 0) goto L_0x0cb4;
    L_0x0CLASSNAME:
        r1 = r40.getParentActivity();
        if (r1 == 0) goto L_0x0cb4;
    L_0x0c5c:
        r1 = r7.currentEncryptedChat;
        r1 = r1.layer;
        r1 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r1);
        r5 = 17;
        if (r1 >= r5) goto L_0x0cb4;
    L_0x0CLASSNAME:
        r1 = r7.currentEncryptedChat;
        r1 = r1.ttl;
        if (r1 <= 0) goto L_0x0cb4;
    L_0x0c6e:
        r5 = 60;
        if (r1 > r5) goto L_0x0cb4;
    L_0x0CLASSNAME:
        r1 = new org.telegram.ui.ActionBar.AlertDialog$Builder;
        r5 = r40.getParentActivity();
        r1.<init>(r5);
        r5 = NUM; // 0x7f0d00f1 float:1.8742604E38 double:1.0531298966E-314;
        r6 = "AppName";
        r5 = org.telegram.messenger.LocaleController.getString(r6, r5);
        r1.setTitle(r5);
        r5 = NUM; // 0x7f0d06ee float:1.8745713E38 double:1.053130654E-314;
        r6 = "OK";
        r5 = org.telegram.messenger.LocaleController.getString(r6, r5);
        r6 = 0;
        r1.setPositiveButton(r5, r6);
        r5 = NUM; // 0x7f0d02f3 float:1.8743646E38 double:1.0531301506E-314;
        r6 = 2;
        r8 = new java.lang.Object[r6];
        r6 = r7.currentUser;
        r6 = r6.first_name;
        r9 = 0;
        r8[r9] = r6;
        r9 = 1;
        r8[r9] = r6;
        r6 = "CompatibilityChat";
        r5 = org.telegram.messenger.LocaleController.formatString(r6, r5, r8);
        r1.setMessage(r5);
        r1 = r1.create();
        r7.showDialog(r1);
    L_0x0cb4:
        r1 = 0;
        r14 = 0;
    L_0x0cb6:
        r5 = r2.size();
        if (r1 >= r5) goto L_0x0e06;
    L_0x0cbc:
        r5 = r2.get(r1);
        r5 = (org.telegram.messenger.MessageObject) r5;
        r6 = r5.isOut();
        if (r6 == 0) goto L_0x0d2b;
    L_0x0cc8:
        if (r14 != 0) goto L_0x0cd7;
    L_0x0cca:
        r6 = org.telegram.messenger.NotificationCenter.getGlobalInstance();
        r8 = org.telegram.messenger.NotificationCenter.closeSearchByActiveAction;
        r9 = 0;
        r10 = new java.lang.Object[r9];
        r6.postNotificationName(r8, r10);
        r14 = 1;
    L_0x0cd7:
        r6 = r7.currentChat;
        if (r6 == 0) goto L_0x0d2b;
    L_0x0cdb:
        r6 = r6.slowmode_enabled;
        if (r6 == 0) goto L_0x0d2b;
    L_0x0cdf:
        r6 = r5.isSent();
        if (r6 == 0) goto L_0x0d2b;
    L_0x0ce5:
        r6 = r7.chatInfo;
        if (r6 == 0) goto L_0x0d1e;
    L_0x0ce9:
        r8 = r5.messageOwner;
        r8 = r8.date;
        r6 = r6.slowmode_seconds;
        r8 = r8 + r6;
        r6 = r40.getConnectionsManager();
        r6 = r6.getCurrentTime();
        r9 = r40.getConnectionsManager();
        r9 = r9.getCurrentTime();
        if (r8 <= r9) goto L_0x0d1e;
    L_0x0d02:
        r9 = r7.chatInfo;
        r10 = r9.slowmode_next_send_date;
        r11 = r9.slowmode_seconds;
        r6 = r6 + r11;
        r6 = java.lang.Math.min(r6, r8);
        r6 = java.lang.Math.max(r10, r6);
        r9.slowmode_next_send_date = r6;
        r6 = r7.chatActivityEnterView;
        if (r6 == 0) goto L_0x0d1e;
    L_0x0d17:
        r8 = r7.chatInfo;
        r8 = r8.slowmode_next_send_date;
        r6.setSlowModeTimer(r8);
    L_0x0d1e:
        r6 = r40.getMessagesController();
        r8 = r7.currentChat;
        r8 = r8.id;
        r9 = 1;
        r10 = 0;
        r6.loadFullChat(r8, r10, r9);
    L_0x0d2b:
        r6 = r7.currentChat;
        if (r6 == 0) goto L_0x0d71;
    L_0x0d2f:
        r6 = r5.messageOwner;
        r6 = r6.action;
        r8 = r6 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChatDeleteUser;
        if (r8 == 0) goto L_0x0d3b;
    L_0x0d37:
        r6 = r6.user_id;
        if (r6 == r0) goto L_0x0d4f;
    L_0x0d3b:
        r6 = r5.messageOwner;
        r6 = r6.action;
        r8 = r6 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChatAddUser;
        if (r8 == 0) goto L_0x0db9;
    L_0x0d43:
        r6 = r6.users;
        r8 = java.lang.Integer.valueOf(r0);
        r6 = r6.contains(r8);
        if (r6 == 0) goto L_0x0db9;
    L_0x0d4f:
        r6 = r40.getMessagesController();
        r8 = r7.currentChat;
        r8 = r8.id;
        r8 = java.lang.Integer.valueOf(r8);
        r6 = r6.getChat(r8);
        if (r6 == 0) goto L_0x0db9;
    L_0x0d61:
        r7.currentChat = r6;
        r40.checkActionBarMenu();
        r40.updateBottomOverlay();
        r6 = r7.avatarContainer;
        if (r6 == 0) goto L_0x0db9;
    L_0x0d6d:
        r6.updateSubtitle();
        goto L_0x0db9;
    L_0x0d71:
        r8 = r7.inlineReturn;
        r10 = 0;
        r6 = (r8 > r10 ? 1 : (r8 == r10 ? 0 : -1));
        if (r6 == 0) goto L_0x0db9;
    L_0x0d79:
        r6 = r5.messageOwner;
        r6 = r6.reply_markup;
        if (r6 == 0) goto L_0x0db9;
    L_0x0d7f:
        r6 = 0;
    L_0x0d80:
        r8 = r5.messageOwner;
        r8 = r8.reply_markup;
        r8 = r8.rows;
        r8 = r8.size();
        if (r6 >= r8) goto L_0x0db9;
    L_0x0d8c:
        r8 = r5.messageOwner;
        r8 = r8.reply_markup;
        r8 = r8.rows;
        r8 = r8.get(r6);
        r8 = (org.telegram.tgnet.TLRPC.TL_keyboardButtonRow) r8;
        r9 = 0;
    L_0x0d99:
        r10 = r8.buttons;
        r10 = r10.size();
        if (r9 >= r10) goto L_0x0db6;
    L_0x0da1:
        r10 = r8.buttons;
        r10 = r10.get(r9);
        r10 = (org.telegram.tgnet.TLRPC.KeyboardButton) r10;
        r11 = r10 instanceof org.telegram.tgnet.TLRPC.TL_keyboardButtonSwitchInline;
        if (r11 == 0) goto L_0x0db3;
    L_0x0dad:
        r10 = (org.telegram.tgnet.TLRPC.TL_keyboardButtonSwitchInline) r10;
        r7.processSwitchButton(r10);
        goto L_0x0db6;
    L_0x0db3:
        r9 = r9 + 1;
        goto L_0x0d99;
    L_0x0db6:
        r6 = r6 + 1;
        goto L_0x0d80;
    L_0x0db9:
        r6 = r5.messageOwner;
        r6 = r6.reply_to_msg_id;
        if (r6 == 0) goto L_0x0e02;
    L_0x0dbf:
        r8 = r5.replyMessageObject;
        if (r8 != 0) goto L_0x0e02;
    L_0x0dc3:
        r8 = r7.messagesDict;
        r9 = 0;
        r8 = r8[r9];
        r6 = r8.get(r6);
        r6 = (org.telegram.messenger.MessageObject) r6;
        r5.replyMessageObject = r6;
        r6 = r5.messageOwner;
        r6 = r6.action;
        r8 = r6 instanceof org.telegram.tgnet.TLRPC.TL_messageActionPinMessage;
        if (r8 == 0) goto L_0x0ddd;
    L_0x0dd8:
        r8 = 0;
        r5.generatePinMessageText(r8, r8);
        goto L_0x0ded;
    L_0x0ddd:
        r8 = 0;
        r9 = r6 instanceof org.telegram.tgnet.TLRPC.TL_messageActionGameScore;
        if (r9 == 0) goto L_0x0de6;
    L_0x0de2:
        r5.generateGameMessageText(r8);
        goto L_0x0ded;
    L_0x0de6:
        r6 = r6 instanceof org.telegram.tgnet.TLRPC.TL_messageActionPaymentSent;
        if (r6 == 0) goto L_0x0ded;
    L_0x0dea:
        r5.generatePaymentSentMessageText(r8);
    L_0x0ded:
        r6 = r5.isMegagroup();
        if (r6 == 0) goto L_0x0e02;
    L_0x0df3:
        r5 = r5.replyMessageObject;
        if (r5 == 0) goto L_0x0e02;
    L_0x0df7:
        r5 = r5.messageOwner;
        if (r5 == 0) goto L_0x0e02;
    L_0x0dfb:
        r6 = r5.flags;
        r8 = -NUM; // 0xfffffffvar_ float:-0.0 double:NaN;
        r6 = r6 | r8;
        r5.flags = r6;
    L_0x0e02:
        r1 = r1 + 1;
        goto L_0x0cb6;
    L_0x0e06:
        r1 = r7.forwardEndReached;
        r5 = 0;
        r1 = r1[r5];
        if (r1 != 0) goto L_0x0var_;
    L_0x0e0d:
        r1 = r7.currentEncryptedChat;
        if (r1 == 0) goto L_0x0e15;
    L_0x0e11:
        r21 = NUM; // 0x7fffffff float:NaN double:1.060997895E-314;
        goto L_0x0e17;
    L_0x0e15:
        r21 = -NUM; // 0xfffffffvar_ float:-0.0 double:NaN;
    L_0x0e17:
        r6 = r21;
        r1 = 0;
        r3 = 0;
        r5 = -NUM; // 0xfffffffvar_ float:-0.0 double:NaN;
        r14 = 0;
    L_0x0e1e:
        r8 = r2.size();
        if (r1 >= r8) goto L_0x0var_;
    L_0x0e24:
        r8 = r2.get(r1);
        r8 = (org.telegram.messenger.MessageObject) r8;
        r9 = r8.getId();
        r10 = r7.currentUser;
        if (r10 == 0) goto L_0x0e45;
    L_0x0e32:
        r10 = r10.bot;
        if (r10 == 0) goto L_0x0e3c;
    L_0x0e36:
        r10 = r8.isOut();
        if (r10 != 0) goto L_0x0e42;
    L_0x0e3c:
        r10 = r7.currentUser;
        r10 = r10.id;
        if (r10 != r0) goto L_0x0e45;
    L_0x0e42:
        r8.setIsRead();
    L_0x0e45:
        r10 = r8.messageOwner;
        r10 = r10.action;
        r11 = r7.avatarContainer;
        if (r11 == 0) goto L_0x0e62;
    L_0x0e4d:
        r12 = r7.currentEncryptedChat;
        if (r12 == 0) goto L_0x0e62;
    L_0x0e51:
        r12 = r10 instanceof org.telegram.tgnet.TLRPC.TL_messageEncryptedAction;
        if (r12 == 0) goto L_0x0e62;
    L_0x0e55:
        r12 = r10.encryptedAction;
        r13 = r12 instanceof org.telegram.tgnet.TLRPC.TL_decryptedMessageActionSetMessageTTL;
        if (r13 == 0) goto L_0x0e62;
    L_0x0e5b:
        r12 = (org.telegram.tgnet.TLRPC.TL_decryptedMessageActionSetMessageTTL) r12;
        r12 = r12.ttl_seconds;
        r11.setTime(r12);
    L_0x0e62:
        r11 = r10 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChatMigrateTo;
        if (r11 == 0) goto L_0x0e6a;
    L_0x0e66:
        r7.migrateToNewChat(r8);
        return;
    L_0x0e6a:
        r11 = r7.currentChat;
        if (r11 == 0) goto L_0x0e7b;
    L_0x0e6e:
        r11 = r11.megagroup;
        if (r11 == 0) goto L_0x0e7b;
    L_0x0e72:
        r11 = r10 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChatAddUser;
        if (r11 != 0) goto L_0x0e7a;
    L_0x0e76:
        r11 = r10 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChatDeleteUser;
        if (r11 == 0) goto L_0x0e7b;
    L_0x0e7a:
        r14 = 1;
    L_0x0e7b:
        if (r1 != 0) goto L_0x0e8a;
    L_0x0e7d:
        r11 = r8.messageOwner;
        r11 = r11.id;
        if (r11 >= 0) goto L_0x0e8a;
    L_0x0e83:
        r11 = r8.type;
        r12 = 5;
        if (r11 != r12) goto L_0x0e8a;
    L_0x0e88:
        r7.needAnimateToMessage = r8;
    L_0x0e8a:
        r11 = r8.isOut();
        if (r11 == 0) goto L_0x0e9b;
    L_0x0e90:
        r11 = r8.isSending();
        if (r11 == 0) goto L_0x0e9b;
    L_0x0e96:
        r11 = 0;
        r7.scrollToLastMessage(r11);
        return;
    L_0x0e9b:
        r11 = 0;
        r12 = r8.type;
        if (r12 < 0) goto L_0x0f1d;
    L_0x0ea0:
        r12 = r7.messagesDict;
        r12 = r12[r11];
        r11 = r12.indexOfKey(r9);
        if (r11 < 0) goto L_0x0eac;
    L_0x0eaa:
        goto L_0x0f1d;
    L_0x0eac:
        r11 = r7.currentChat;
        if (r11 == 0) goto L_0x0ec6;
    L_0x0eb0:
        r11 = r11.creator;
        if (r11 == 0) goto L_0x0ec6;
    L_0x0eb4:
        r11 = r10 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChatCreate;
        if (r11 != 0) goto L_0x0f1d;
    L_0x0eb8:
        r11 = r10 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChatEditPhoto;
        if (r11 == 0) goto L_0x0ec6;
    L_0x0ebc:
        r11 = r7.messages;
        r11 = r11.size();
        r12 = 4;
        if (r11 >= r12) goto L_0x0ec6;
    L_0x0ec5:
        goto L_0x0f1d;
    L_0x0ec6:
        r10 = r10 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChannelMigrateFrom;
        if (r10 == 0) goto L_0x0ecb;
    L_0x0eca:
        goto L_0x0f1d;
    L_0x0ecb:
        r10 = 0;
        r7.addToPolls(r8, r10);
        r8.checkLayout();
        r10 = r8.messageOwner;
        r10 = r10.date;
        r5 = java.lang.Math.max(r5, r10);
        if (r9 <= 0) goto L_0x0ee9;
    L_0x0edc:
        r6 = java.lang.Math.max(r9, r6);
        r10 = r7.last_message_id;
        r9 = java.lang.Math.max(r10, r9);
        r7.last_message_id = r9;
        goto L_0x0ef9;
    L_0x0ee9:
        r10 = r7.currentEncryptedChat;
        if (r10 == 0) goto L_0x0ef9;
    L_0x0eed:
        r6 = java.lang.Math.min(r9, r6);
        r10 = r7.last_message_id;
        r9 = java.lang.Math.min(r10, r9);
        r7.last_message_id = r9;
    L_0x0ef9:
        r9 = r8.messageOwner;
        r9 = r9.mentioned;
        if (r9 == 0) goto L_0x0f0c;
    L_0x0eff:
        r9 = r8.isContentUnread();
        if (r9 == 0) goto L_0x0f0c;
    L_0x0var_:
        r9 = r7.newMentionsCount;
        r10 = 1;
        r9 = r9 + r10;
        r7.newMentionsCount = r9;
        goto L_0x0f0d;
    L_0x0f0c:
        r10 = 1;
    L_0x0f0d:
        r9 = r7.newUnreadMessageCount;
        r9 = r9 + r10;
        r7.newUnreadMessageCount = r9;
        r8 = r8.type;
        r9 = 10;
        if (r8 == r9) goto L_0x0f1c;
    L_0x0var_:
        r9 = 11;
        if (r8 != r9) goto L_0x0f1d;
    L_0x0f1c:
        r3 = 1;
    L_0x0f1d:
        r1 = r1 + 1;
        goto L_0x0e1e;
    L_0x0var_:
        r0 = r7.newUnreadMessageCount;
        if (r0 == 0) goto L_0x0var_;
    L_0x0var_:
        r0 = r7.pagedownButtonCounter;
        if (r0 == 0) goto L_0x0var_;
    L_0x0var_:
        r1 = 0;
        r0.setVisibility(r1);
        r0 = r7.prevSetUnreadCount;
        r2 = r7.newUnreadMessageCount;
        if (r0 == r2) goto L_0x0var_;
    L_0x0var_:
        r7.prevSetUnreadCount = r2;
        r0 = r7.pagedownButtonCounter;
        r5 = 1;
        r6 = new java.lang.Object[r5];
        r2 = java.lang.Integer.valueOf(r2);
        r6[r1] = r2;
        r2 = java.lang.String.format(r4, r6);
        r0.setText(r2);
        goto L_0x0var_;
    L_0x0var_:
        r1 = 0;
    L_0x0var_:
        r0 = r7.newMentionsCount;
        if (r0 == 0) goto L_0x0f6b;
    L_0x0f4d:
        r0 = r7.mentiondownButtonCounter;
        if (r0 == 0) goto L_0x0f6b;
    L_0x0var_:
        r0.setVisibility(r1);
        r0 = r7.mentiondownButtonCounter;
        r2 = 1;
        r5 = new java.lang.Object[r2];
        r6 = r7.newMentionsCount;
        r6 = java.lang.Integer.valueOf(r6);
        r5[r1] = r6;
        r1 = java.lang.String.format(r4, r5);
        r0.setText(r1);
        r7.showMentionDownButton(r2, r2);
    L_0x0f6b:
        r40.updateVisibleRows();
        goto L_0x1418;
    L_0x0var_:
        r1 = org.telegram.messenger.BuildVars.LOGS_ENABLED;
        if (r1 == 0) goto L_0x0var_;
    L_0x0var_:
        r1 = new java.lang.StringBuilder;
        r1.<init>();
        r5 = "received new messages ";
        r1.append(r5);
        r5 = r2.size();
        r1.append(r5);
        r5 = " in dialog ";
        r1.append(r5);
        r5 = r7.dialog_id;
        r1.append(r5);
        r1 = r1.toString();
        org.telegram.messenger.FileLog.d(r1);
    L_0x0var_:
        r1 = 0;
        r5 = 0;
        r6 = 0;
        r8 = 0;
        r9 = 0;
        r14 = 0;
    L_0x0f9c:
        r10 = r2.size();
        if (r1 >= r10) goto L_0x1318;
    L_0x0fa2:
        r10 = r2.get(r1);
        r10 = (org.telegram.messenger.MessageObject) r10;
        r11 = r10.getId();
        r12 = r40.isSecretChat();
        if (r12 == 0) goto L_0x0fb5;
    L_0x0fb2:
        r7.checkSecretMessageForLocation(r10);
    L_0x0fb5:
        r12 = r7.currentUser;
        if (r12 == 0) goto L_0x0fcc;
    L_0x0fb9:
        r12 = r12.bot;
        if (r12 == 0) goto L_0x0fc3;
    L_0x0fbd:
        r12 = r10.isOut();
        if (r12 != 0) goto L_0x0fc9;
    L_0x0fc3:
        r12 = r7.currentUser;
        r12 = r12.id;
        if (r12 != r0) goto L_0x0fcc;
    L_0x0fc9:
        r10.setIsRead();
    L_0x0fcc:
        r12 = r10.messageOwner;
        r12 = r12.action;
        r13 = r7.avatarContainer;
        if (r13 == 0) goto L_0x0fec;
    L_0x0fd4:
        r15 = r7.currentEncryptedChat;
        if (r15 == 0) goto L_0x0fec;
    L_0x0fd8:
        r15 = r12 instanceof org.telegram.tgnet.TLRPC.TL_messageEncryptedAction;
        if (r15 == 0) goto L_0x0fec;
    L_0x0fdc:
        r15 = r12.encryptedAction;
        r41 = r0;
        r0 = r15 instanceof org.telegram.tgnet.TLRPC.TL_decryptedMessageActionSetMessageTTL;
        if (r0 == 0) goto L_0x0fee;
    L_0x0fe4:
        r15 = (org.telegram.tgnet.TLRPC.TL_decryptedMessageActionSetMessageTTL) r15;
        r0 = r15.ttl_seconds;
        r13.setTime(r0);
        goto L_0x0fee;
    L_0x0fec:
        r41 = r0;
    L_0x0fee:
        r0 = r10.type;
        if (r0 < 0) goto L_0x1306;
    L_0x0ff2:
        r0 = r7.messagesDict;
        r13 = 0;
        r0 = r0[r13];
        r0 = r0.indexOfKey(r11);
        if (r0 < 0) goto L_0x0fff;
    L_0x0ffd:
        goto L_0x1306;
    L_0x0fff:
        r0 = r7.currentChat;
        if (r0 == 0) goto L_0x101a;
    L_0x1003:
        r0 = r0.creator;
        if (r0 == 0) goto L_0x101a;
    L_0x1007:
        r0 = r12 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChatCreate;
        if (r0 != 0) goto L_0x1306;
    L_0x100b:
        r0 = r12 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChatEditPhoto;
        if (r0 == 0) goto L_0x101a;
    L_0x100f:
        r0 = r7.messages;
        r0 = r0.size();
        r13 = 4;
        if (r0 >= r13) goto L_0x101a;
    L_0x1018:
        goto L_0x1306;
    L_0x101a:
        r0 = r12 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChannelMigrateFrom;
        if (r0 == 0) goto L_0x1020;
    L_0x101e:
        goto L_0x1306;
    L_0x1020:
        r13 = 0;
        r7.addToPolls(r10, r13);
        if (r1 != 0) goto L_0x1036;
    L_0x1026:
        r0 = r10.messageOwner;
        r0 = r0.id;
        if (r0 >= 0) goto L_0x1036;
    L_0x102c:
        r0 = r10.type;
        r13 = 5;
        if (r0 != r13) goto L_0x1036;
    L_0x1031:
        r0 = r7.animatingMessageObjects;
        r0.add(r10);
    L_0x1036:
        r0 = r10.hasValidGroupId();
        if (r0 == 0) goto L_0x1076;
    L_0x103c:
        r0 = r7.groupedMessagesMap;
        r42 = r8;
        r43 = r9;
        r8 = r10.getGroupId();
        r0 = r0.get(r8);
        r0 = (org.telegram.messenger.MessageObject.GroupedMessages) r0;
        if (r0 != 0) goto L_0x1062;
    L_0x104e:
        r0 = new org.telegram.messenger.MessageObject$GroupedMessages;
        r0.<init>();
        r8 = r10.getGroupId();
        r0.groupId = r8;
        r8 = r7.groupedMessagesMap;
        r9 = r14;
        r13 = r0.groupId;
        r8.put(r13, r0);
        goto L_0x1063;
    L_0x1062:
        r9 = r14;
    L_0x1063:
        r13 = r0;
        if (r6 != 0) goto L_0x106b;
    L_0x1066:
        r6 = new android.util.LongSparseArray;
        r6.<init>();
    L_0x106b:
        r14 = r13.groupId;
        r6.put(r14, r13);
        r0 = r13.messages;
        r0.add(r10);
        goto L_0x107c;
    L_0x1076:
        r42 = r8;
        r43 = r9;
        r9 = r14;
        r13 = 0;
    L_0x107c:
        if (r13 == 0) goto L_0x10a3;
    L_0x107e:
        r0 = r13.messages;
        r0 = r0.size();
        r8 = 1;
        if (r0 <= r8) goto L_0x1097;
    L_0x1087:
        r0 = r13.messages;
        r8 = r0.size();
        r13 = 2;
        r8 = r8 - r13;
        r0 = r0.get(r8);
        r13 = r0;
        r13 = (org.telegram.messenger.MessageObject) r13;
        goto L_0x1098;
    L_0x1097:
        r13 = 0;
    L_0x1098:
        if (r13 == 0) goto L_0x10a3;
    L_0x109a:
        r0 = r7.messages;
        r0 = r0.indexOf(r13);
        r13 = r0;
        r0 = -1;
        goto L_0x10a5;
    L_0x10a3:
        r0 = -1;
        r13 = -1;
    L_0x10a5:
        if (r13 != r0) goto L_0x113e;
    L_0x10a7:
        r0 = r10.messageOwner;
        r0 = r0.id;
        if (r0 < 0) goto L_0x113d;
    L_0x10ad:
        r0 = r7.messages;
        r0 = r0.isEmpty();
        if (r0 == 0) goto L_0x10b7;
    L_0x10b5:
        goto L_0x113d;
    L_0x10b7:
        r0 = r7.messages;
        r0 = r0.size();
        r8 = 0;
    L_0x10be:
        if (r8 >= r0) goto L_0x112b;
    L_0x10c0:
        r14 = r7.messages;
        r14 = r14.get(r8);
        r14 = (org.telegram.messenger.MessageObject) r14;
        r15 = r14.type;
        if (r15 < 0) goto L_0x1124;
    L_0x10cc:
        r15 = r14.messageOwner;
        r20 = r0;
        r0 = r15.date;
        if (r0 <= 0) goto L_0x1126;
    L_0x10d4:
        r0 = r15.id;
        if (r0 <= 0) goto L_0x10e0;
    L_0x10d8:
        r15 = r10.messageOwner;
        r15 = r15.id;
        if (r15 <= 0) goto L_0x10e0;
    L_0x10de:
        if (r0 < r15) goto L_0x10ea;
    L_0x10e0:
        r0 = r14.messageOwner;
        r0 = r0.date;
        r15 = r10.messageOwner;
        r15 = r15.date;
        if (r0 >= r15) goto L_0x1126;
    L_0x10ea:
        r20 = r14.getGroupId();
        r17 = 0;
        r0 = (r20 > r17 ? 1 : (r20 == r17 ? 0 : -1));
        if (r0 == 0) goto L_0x110b;
    L_0x10f4:
        r0 = r7.groupedMessagesMap;
        r13 = r14.getGroupId();
        r0 = r0.get(r13);
        r13 = r0;
        r13 = (org.telegram.messenger.MessageObject.GroupedMessages) r13;
        if (r13 == 0) goto L_0x110c;
    L_0x1103:
        r0 = r13.messages;
        r0 = r0.size();
        if (r0 != 0) goto L_0x110c;
    L_0x110b:
        r13 = 0;
    L_0x110c:
        if (r13 != 0) goto L_0x1110;
    L_0x110e:
        r13 = r8;
        goto L_0x112b;
    L_0x1110:
        r0 = r7.messages;
        r8 = r13.messages;
        r13 = r8.size();
        r14 = 1;
        r13 = r13 - r14;
        r8 = r8.get(r13);
        r0 = r0.indexOf(r8);
        r13 = r0;
        goto L_0x112b;
    L_0x1124:
        r20 = r0;
    L_0x1126:
        r8 = r8 + 1;
        r0 = r20;
        goto L_0x10be;
    L_0x112b:
        r0 = -1;
        if (r13 == r0) goto L_0x1136;
    L_0x112e:
        r0 = r7.messages;
        r0 = r0.size();
        if (r13 <= r0) goto L_0x113e;
    L_0x1136:
        r0 = r7.messages;
        r13 = r0.size();
        goto L_0x113e;
    L_0x113d:
        r13 = 0;
    L_0x113e:
        r0 = r7.currentEncryptedChat;
        if (r0 == 0) goto L_0x117a;
    L_0x1142:
        r0 = r10.messageOwner;
        r0 = r0.media;
        r8 = r0 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaWebPage;
        if (r8 == 0) goto L_0x117a;
    L_0x114a:
        r0 = r0.webpage;
        r0 = r0 instanceof org.telegram.tgnet.TLRPC.TL_webPageUrlPending;
        if (r0 == 0) goto L_0x117a;
    L_0x1150:
        if (r5 != 0) goto L_0x1157;
    L_0x1152:
        r5 = new java.util.HashMap;
        r5.<init>();
    L_0x1157:
        r0 = r10.messageOwner;
        r0 = r0.media;
        r0 = r0.webpage;
        r0 = r0.url;
        r0 = r5.get(r0);
        r0 = (java.util.ArrayList) r0;
        if (r0 != 0) goto L_0x1177;
    L_0x1167:
        r0 = new java.util.ArrayList;
        r0.<init>();
        r8 = r10.messageOwner;
        r8 = r8.media;
        r8 = r8.webpage;
        r8 = r8.url;
        r5.put(r8, r0);
    L_0x1177:
        r0.add(r10);
    L_0x117a:
        r10.checkLayout();
        r0 = r12 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChatMigrateTo;
        if (r0 == 0) goto L_0x119a;
    L_0x1181:
        r7.migrateToNewChat(r10);
        if (r6 == 0) goto L_0x1199;
    L_0x1186:
        r0 = 0;
    L_0x1187:
        r1 = r6.size();
        if (r0 >= r1) goto L_0x1199;
    L_0x118d:
        r1 = r6.valueAt(r0);
        r1 = (org.telegram.messenger.MessageObject.GroupedMessages) r1;
        r1.calculate();
        r0 = r0 + 1;
        goto L_0x1187;
    L_0x1199:
        return;
    L_0x119a:
        r0 = r7.currentChat;
        if (r0 == 0) goto L_0x11ac;
    L_0x119e:
        r0 = r0.megagroup;
        if (r0 == 0) goto L_0x11ac;
    L_0x11a2:
        r0 = r12 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChatAddUser;
        if (r0 != 0) goto L_0x11aa;
    L_0x11a6:
        r0 = r12 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChatDeleteUser;
        if (r0 == 0) goto L_0x11ac;
    L_0x11aa:
        r8 = 1;
        goto L_0x11ae;
    L_0x11ac:
        r8 = r42;
    L_0x11ae:
        r0 = r7.minDate;
        r12 = 0;
        r14 = r0[r12];
        if (r14 == 0) goto L_0x11bd;
    L_0x11b5:
        r14 = r10.messageOwner;
        r14 = r14.date;
        r0 = r0[r12];
        if (r14 >= r0) goto L_0x11c5;
    L_0x11bd:
        r0 = r7.minDate;
        r14 = r10.messageOwner;
        r14 = r14.date;
        r0[r12] = r14;
    L_0x11c5:
        r0 = r10.isOut();
        if (r0 == 0) goto L_0x11d1;
    L_0x11cb:
        r14 = 1;
        r7.removeUnreadPlane(r14);
        r14 = 1;
        goto L_0x11d2;
    L_0x11d1:
        r14 = r9;
    L_0x11d2:
        if (r11 <= 0) goto L_0x11e9;
    L_0x11d4:
        r0 = r7.maxMessageId;
        r9 = r0[r12];
        r9 = java.lang.Math.min(r11, r9);
        r0[r12] = r9;
        r0 = r7.minMessageId;
        r9 = r0[r12];
        r9 = java.lang.Math.max(r11, r9);
        r0[r12] = r9;
        goto L_0x1201;
    L_0x11e9:
        r0 = r7.currentEncryptedChat;
        if (r0 == 0) goto L_0x1201;
    L_0x11ed:
        r0 = r7.maxMessageId;
        r9 = r0[r12];
        r9 = java.lang.Math.max(r11, r9);
        r0[r12] = r9;
        r0 = r7.minMessageId;
        r9 = r0[r12];
        r9 = java.lang.Math.min(r11, r9);
        r0[r12] = r9;
    L_0x1201:
        r0 = r7.maxDate;
        r9 = r0[r12];
        r15 = r10.messageOwner;
        r15 = r15.date;
        r9 = java.lang.Math.max(r9, r15);
        r0[r12] = r9;
        r0 = r7.messagesDict;
        r0 = r0[r12];
        r0.put(r11, r10);
        r0 = r7.messagesByDays;
        r9 = r10.dateKey;
        r0 = r0.get(r9);
        r0 = (java.util.ArrayList) r0;
        r9 = r7.messages;
        r9 = r9.size();
        if (r13 <= r9) goto L_0x122e;
    L_0x1228:
        r9 = r7.messages;
        r13 = r9.size();
    L_0x122e:
        if (r0 != 0) goto L_0x1271;
    L_0x1230:
        r0 = new java.util.ArrayList;
        r0.<init>();
        r9 = r7.messagesByDays;
        r11 = r10.dateKey;
        r9.put(r11, r0);
        r9 = new org.telegram.tgnet.TLRPC$TL_message;
        r9.<init>();
        r11 = r10.messageOwner;
        r11 = r11.date;
        r11 = (long) r11;
        r11 = org.telegram.messenger.LocaleController.formatDateChat(r11);
        r9.message = r11;
        r11 = 0;
        r9.id = r11;
        r12 = r10.messageOwner;
        r12 = r12.date;
        r9.date = r12;
        r12 = new org.telegram.messenger.MessageObject;
        r15 = r7.currentAccount;
        r12.<init>(r15, r9, r11);
        r9 = 10;
        r12.type = r9;
        r9 = 1;
        r12.contentType = r9;
        r12.isDateObject = r9;
        r9 = r7.messages;
        r9.add(r13, r12);
        r9 = r7.chatAdapter;
        if (r9 == 0) goto L_0x1271;
    L_0x126e:
        r9.notifyItemInserted(r13);
    L_0x1271:
        r9 = r10.isOut();
        if (r9 != 0) goto L_0x12c4;
    L_0x1277:
        r9 = r7.paused;
        if (r9 == 0) goto L_0x12c4;
    L_0x127b:
        if (r13 != 0) goto L_0x12c4;
    L_0x127d:
        r9 = r7.scrollToTopUnReadOnResume;
        if (r9 != 0) goto L_0x128f;
    L_0x1281:
        r9 = r7.unreadMessageObject;
        if (r9 == 0) goto L_0x128f;
    L_0x1285:
        r7.removeMessageObject(r9);
        if (r13 <= 0) goto L_0x128c;
    L_0x128a:
        r13 = r13 + -1;
    L_0x128c:
        r9 = 0;
        r7.unreadMessageObject = r9;
    L_0x128f:
        r9 = r7.unreadMessageObject;
        if (r9 != 0) goto L_0x12c4;
    L_0x1293:
        r9 = new org.telegram.tgnet.TLRPC$TL_message;
        r9.<init>();
        r9.message = r3;
        r11 = 0;
        r9.id = r11;
        r12 = new org.telegram.messenger.MessageObject;
        r15 = r7.currentAccount;
        r12.<init>(r15, r9, r11);
        r9 = 6;
        r12.type = r9;
        r9 = 2;
        r12.contentType = r9;
        r9 = r7.messages;
        r9.add(r11, r12);
        r9 = r7.chatAdapter;
        if (r9 == 0) goto L_0x12b6;
    L_0x12b3:
        r9.notifyItemInserted(r11);
    L_0x12b6:
        r7.unreadMessageObject = r12;
        r9 = r7.unreadMessageObject;
        r7.scrollToMessage = r9;
        r11 = -10000; // 0xffffffffffffd8f0 float:NaN double:NaN;
        r7.scrollToMessagePosition = r11;
        r9 = 1;
        r7.scrollToTopUnReadOnResume = r9;
        goto L_0x12c6;
    L_0x12c4:
        r11 = -10000; // 0xffffffffffffd8f0 float:NaN double:NaN;
    L_0x12c6:
        r9 = 0;
        r0.add(r9, r10);
        r0 = r7.messages;
        r0.add(r13, r10);
        r0 = r7.chatAdapter;
        if (r0 == 0) goto L_0x12db;
    L_0x12d3:
        r0.notifyItemChanged(r13);
        r0 = r7.chatAdapter;
        r0.notifyItemInserted(r13);
    L_0x12db:
        r0 = r10.isOut();
        if (r0 != 0) goto L_0x12f4;
    L_0x12e1:
        r0 = r10.messageOwner;
        r0 = r0.mentioned;
        if (r0 == 0) goto L_0x12f4;
    L_0x12e7:
        r0 = r10.isContentUnread();
        if (r0 == 0) goto L_0x12f4;
    L_0x12ed:
        r0 = r7.newMentionsCount;
        r9 = 1;
        r0 = r0 + r9;
        r7.newMentionsCount = r0;
        goto L_0x12f5;
    L_0x12f4:
        r9 = 1;
    L_0x12f5:
        r0 = r7.newUnreadMessageCount;
        r0 = r0 + r9;
        r7.newUnreadMessageCount = r0;
        r0 = r10.type;
        r9 = 10;
        if (r0 == r9) goto L_0x1304;
    L_0x1300:
        r9 = 11;
        if (r0 != r9) goto L_0x1310;
    L_0x1304:
        r9 = 1;
        goto L_0x1312;
    L_0x1306:
        r42 = r8;
        r43 = r9;
        r9 = r14;
        r11 = -10000; // 0xffffffffffffd8f0 float:NaN double:NaN;
        r8 = r42;
        r14 = r9;
    L_0x1310:
        r9 = r43;
    L_0x1312:
        r1 = r1 + 1;
        r0 = r41;
        goto L_0x0f9c;
    L_0x1318:
        r42 = r8;
        r43 = r9;
        r9 = r14;
        if (r5 == 0) goto L_0x1328;
    L_0x131f:
        r0 = r40.getMessagesController();
        r1 = r7.dialog_id;
        r0.reloadWebPages(r1, r5);
    L_0x1328:
        if (r6 == 0) goto L_0x136a;
    L_0x132a:
        r0 = 0;
    L_0x132b:
        r1 = r6.size();
        if (r0 >= r1) goto L_0x136a;
    L_0x1331:
        r1 = r6.valueAt(r0);
        r1 = (org.telegram.messenger.MessageObject.GroupedMessages) r1;
        r2 = r1.posArray;
        r2 = r2.size();
        r1.calculate();
        r3 = r1.posArray;
        r3 = r3.size();
        r2 = r3 - r2;
        if (r2 <= 0) goto L_0x1367;
    L_0x134a:
        r2 = r7.chatAdapter;
        if (r2 == 0) goto L_0x1367;
    L_0x134e:
        r2 = r7.messages;
        r1 = r1.messages;
        r5 = r1.size();
        r8 = 1;
        r5 = r5 - r8;
        r1 = r1.get(r5);
        r1 = r2.indexOf(r1);
        if (r1 < 0) goto L_0x1367;
    L_0x1362:
        r2 = r7.chatAdapter;
        r2.notifyItemRangeChanged(r1, r3);
    L_0x1367:
        r0 = r0 + 1;
        goto L_0x132b;
    L_0x136a:
        r0 = r7.progressView;
        if (r0 == 0) goto L_0x1372;
    L_0x136e:
        r1 = 4;
        r0.setVisibility(r1);
    L_0x1372:
        r0 = r7.chatAdapter;
        if (r0 != 0) goto L_0x1379;
    L_0x1376:
        r1 = 1;
        r7.scrollToTopOnResume = r1;
    L_0x1379:
        r0 = r7.chatListView;
        if (r0 == 0) goto L_0x1411;
    L_0x137d:
        r0 = r7.chatAdapter;
        if (r0 == 0) goto L_0x1411;
    L_0x1381:
        r0 = r7.chatLayoutManager;
        r13 = r0.findFirstVisibleItemPosition();
        r0 = -1;
        if (r13 != r0) goto L_0x138b;
    L_0x138a:
        r13 = 0;
    L_0x138b:
        r0 = r7.chatLayoutManager;
        r0 = r0.findViewByPosition(r13);
        if (r0 == 0) goto L_0x139f;
    L_0x1393:
        r0 = r0.getBottom();
        r1 = r7.chatListView;
        r1 = r1.getMeasuredHeight();
        r0 = r0 - r1;
        goto L_0x13a0;
    L_0x139f:
        r0 = 0;
    L_0x13a0:
        if (r13 != 0) goto L_0x13aa;
    L_0x13a2:
        r1 = NUM; // 0x40a00000 float:5.0 double:5.356796015E-315;
        r1 = org.telegram.messenger.AndroidUtilities.dp(r1);
        if (r0 <= r1) goto L_0x13ac;
    L_0x13aa:
        if (r9 == 0) goto L_0x13c3;
    L_0x13ac:
        r1 = 0;
        r7.newUnreadMessageCount = r1;
        r0 = r7.firstLoading;
        if (r0 != 0) goto L_0x13c1;
    L_0x13b3:
        r0 = r7.paused;
        if (r0 == 0) goto L_0x13bb;
    L_0x13b7:
        r1 = 1;
        r7.scrollToTopOnResume = r1;
        goto L_0x13c1;
    L_0x13bb:
        r1 = 1;
        r7.forceScrollToTop = r1;
        r40.moveScrollToLastMessage();
    L_0x13c1:
        r3 = 1;
        goto L_0x13ee;
    L_0x13c3:
        r0 = r7.newUnreadMessageCount;
        if (r0 == 0) goto L_0x13ea;
    L_0x13c7:
        r0 = r7.pagedownButtonCounter;
        if (r0 == 0) goto L_0x13ea;
    L_0x13cb:
        r1 = 0;
        r0.setVisibility(r1);
        r0 = r7.prevSetUnreadCount;
        r2 = r7.newUnreadMessageCount;
        if (r0 == r2) goto L_0x13ea;
    L_0x13d5:
        r7.prevSetUnreadCount = r2;
        r0 = r7.pagedownButtonCounter;
        r3 = 1;
        r5 = new java.lang.Object[r3];
        r2 = java.lang.Integer.valueOf(r2);
        r5[r1] = r2;
        r1 = java.lang.String.format(r4, r5);
        r0.setText(r1);
        goto L_0x13eb;
    L_0x13ea:
        r3 = 1;
    L_0x13eb:
        r7.showPagedownButton(r3, r3);
    L_0x13ee:
        r0 = r7.newMentionsCount;
        if (r0 == 0) goto L_0x1414;
    L_0x13f2:
        r0 = r7.mentiondownButtonCounter;
        if (r0 == 0) goto L_0x1414;
    L_0x13f6:
        r1 = 0;
        r0.setVisibility(r1);
        r0 = r7.mentiondownButtonCounter;
        r2 = new java.lang.Object[r3];
        r5 = r7.newMentionsCount;
        r5 = java.lang.Integer.valueOf(r5);
        r2[r1] = r5;
        r1 = java.lang.String.format(r4, r2);
        r0.setText(r1);
        r7.showMentionDownButton(r3, r3);
        goto L_0x1414;
    L_0x1411:
        r3 = 1;
        r7.scrollToTopOnResume = r3;
    L_0x1414:
        r14 = r42;
        r3 = r43;
    L_0x1418:
        r0 = r7.messages;
        r0 = r0.isEmpty();
        if (r0 != 0) goto L_0x1430;
    L_0x1420:
        r0 = r7.botUser;
        if (r0 == 0) goto L_0x1430;
    L_0x1424:
        r0 = r0.length();
        if (r0 != 0) goto L_0x1430;
    L_0x142a:
        r1 = 0;
        r7.botUser = r1;
        r40.updateBottomOverlay();
    L_0x1430:
        if (r3 == 0) goto L_0x1438;
    L_0x1432:
        r40.updateTitle();
        r40.checkAndUpdateAvatar();
    L_0x1438:
        if (r14 == 0) goto L_0x2b4e;
    L_0x143a:
        r0 = r40.getMessagesController();
        r1 = r7.currentChat;
        r1 = r1.id;
        r2 = 1;
        r5 = 0;
        r0.loadFullChat(r1, r5, r2);
        goto L_0x2b4e;
    L_0x1449:
        r5 = 0;
        r1 = org.telegram.messenger.NotificationCenter.closeChats;
        if (r0 != r1) goto L_0x146b;
    L_0x144e:
        if (r8 == 0) goto L_0x1466;
    L_0x1450:
        r0 = r8.length;
        if (r0 <= 0) goto L_0x1466;
    L_0x1453:
        r0 = r8[r5];
        r0 = (java.lang.Long) r0;
        r0 = r0.longValue();
        r2 = r7.dialog_id;
        r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1));
        if (r4 != 0) goto L_0x2b4e;
    L_0x1461:
        r40.finishFragment();
        goto L_0x2b4e;
    L_0x1466:
        r40.removeSelfFromStack();
        goto L_0x2b4e;
    L_0x146b:
        r1 = org.telegram.messenger.NotificationCenter.messagesRead;
        if (r0 != r1) goto L_0x158f;
    L_0x146f:
        r1 = 0;
        r0 = r8[r1];
        r0 = (org.telegram.messenger.support.SparseLongArray) r0;
        r1 = 1;
        r2 = r8[r1];
        r2 = (org.telegram.messenger.support.SparseLongArray) r2;
        if (r0 == 0) goto L_0x14f4;
    L_0x147b:
        r1 = r7.bottomOverlayChatText2;
        if (r1 == 0) goto L_0x149d;
    L_0x147f:
        r1 = r7.chatInfo;
        if (r1 == 0) goto L_0x149d;
    L_0x1483:
        r1 = r7.currentChat;
        r1 = org.telegram.messenger.ChatObject.isChannel(r1);
        if (r1 == 0) goto L_0x149d;
    L_0x148b:
        r1 = r7.currentChat;
        r1 = r1.megagroup;
        if (r1 != 0) goto L_0x149d;
    L_0x1491:
        r1 = r7.chatInfo;
        r1 = r1.linked_chat_id;
        r1 = -r1;
        if (r1 == 0) goto L_0x149d;
    L_0x1498:
        r1 = r7.bottomOverlayChatText2;
        r1.updateCounter();
    L_0x149d:
        r1 = r0.size();
        r3 = 0;
    L_0x14a2:
        if (r3 >= r1) goto L_0x14f4;
    L_0x14a4:
        r5 = r0.keyAt(r3);
        r8 = r0.get(r5);
        r5 = (long) r5;
        r10 = r7.dialog_id;
        r12 = (r5 > r10 ? 1 : (r5 == r10 ? 0 : -1));
        if (r12 == 0) goto L_0x14b6;
    L_0x14b3:
        r3 = r3 + 1;
        goto L_0x14a2;
    L_0x14b6:
        r0 = r7.messages;
        r0 = r0.size();
        r1 = 0;
        r14 = 0;
    L_0x14be:
        if (r1 >= r0) goto L_0x14ef;
    L_0x14c0:
        r3 = r7.messages;
        r3 = r3.get(r1);
        r3 = (org.telegram.messenger.MessageObject) r3;
        r5 = r3.isOut();
        if (r5 != 0) goto L_0x14ec;
    L_0x14ce:
        r5 = r3.getId();
        if (r5 <= 0) goto L_0x14ec;
    L_0x14d4:
        r5 = r3.getId();
        r6 = (int) r8;
        if (r5 > r6) goto L_0x14ec;
    L_0x14db:
        r5 = r3.isUnread();
        if (r5 != 0) goto L_0x14e2;
    L_0x14e1:
        goto L_0x14ef;
    L_0x14e2:
        r3.setIsRead();
        r3 = r7.newUnreadMessageCount;
        r5 = 1;
        r3 = r3 - r5;
        r7.newUnreadMessageCount = r3;
        r14 = 1;
    L_0x14ec:
        r1 = r1 + 1;
        goto L_0x14be;
    L_0x14ef:
        r1 = 0;
        r7.removeUnreadPlane(r1);
        goto L_0x14f6;
    L_0x14f4:
        r1 = 0;
        r14 = 0;
    L_0x14f6:
        if (r14 == 0) goto L_0x153b;
    L_0x14f8:
        r0 = r7.newUnreadMessageCount;
        if (r0 >= 0) goto L_0x14fe;
    L_0x14fc:
        r7.newUnreadMessageCount = r1;
    L_0x14fe:
        r0 = r7.pagedownButtonCounter;
        if (r0 == 0) goto L_0x153b;
    L_0x1502:
        r3 = r7.prevSetUnreadCount;
        r5 = r7.newUnreadMessageCount;
        if (r3 == r5) goto L_0x151a;
    L_0x1508:
        r7.prevSetUnreadCount = r5;
        r3 = 1;
        r6 = new java.lang.Object[r3];
        r3 = java.lang.Integer.valueOf(r5);
        r6[r1] = r3;
        r1 = java.lang.String.format(r4, r6);
        r0.setText(r1);
    L_0x151a:
        r0 = r7.newUnreadMessageCount;
        if (r0 > 0) goto L_0x152d;
    L_0x151e:
        r0 = r7.pagedownButtonCounter;
        r0 = r0.getVisibility();
        r1 = 4;
        if (r0 == r1) goto L_0x153b;
    L_0x1527:
        r0 = r7.pagedownButtonCounter;
        r0.setVisibility(r1);
        goto L_0x153b;
    L_0x152d:
        r0 = r7.pagedownButtonCounter;
        r0 = r0.getVisibility();
        if (r0 == 0) goto L_0x153b;
    L_0x1535:
        r0 = r7.pagedownButtonCounter;
        r1 = 0;
        r0.setVisibility(r1);
    L_0x153b:
        if (r2 == 0) goto L_0x1588;
    L_0x153d:
        r0 = r2.size();
        r1 = 0;
    L_0x1542:
        if (r1 >= r0) goto L_0x1588;
    L_0x1544:
        r3 = r2.keyAt(r1);
        r4 = r2.get(r3);
        r5 = (int) r4;
        r3 = (long) r3;
        r8 = r7.dialog_id;
        r6 = (r3 > r8 ? 1 : (r3 == r8 ? 0 : -1));
        if (r6 == 0) goto L_0x1557;
    L_0x1554:
        r1 = r1 + 1;
        goto L_0x1542;
    L_0x1557:
        r0 = r7.messages;
        r0 = r0.size();
        r1 = 0;
    L_0x155e:
        if (r1 >= r0) goto L_0x1588;
    L_0x1560:
        r2 = r7.messages;
        r2 = r2.get(r1);
        r2 = (org.telegram.messenger.MessageObject) r2;
        r3 = r2.isOut();
        if (r3 == 0) goto L_0x1585;
    L_0x156e:
        r3 = r2.getId();
        if (r3 <= 0) goto L_0x1585;
    L_0x1574:
        r3 = r2.getId();
        if (r3 > r5) goto L_0x1585;
    L_0x157a:
        r3 = r2.isUnread();
        if (r3 != 0) goto L_0x1581;
    L_0x1580:
        goto L_0x1588;
    L_0x1581:
        r2.setIsRead();
        r14 = 1;
    L_0x1585:
        r1 = r1 + 1;
        goto L_0x155e;
    L_0x1588:
        if (r14 == 0) goto L_0x2b4e;
    L_0x158a:
        r40.updateVisibleRows();
        goto L_0x2b4e;
    L_0x158f:
        r1 = org.telegram.messenger.NotificationCenter.historyCleared;
        if (r0 != r1) goto L_0x171c;
    L_0x1593:
        r1 = 0;
        r0 = r8[r1];
        r0 = (java.lang.Long) r0;
        r0 = r0.longValue();
        r4 = r7.dialog_id;
        r2 = (r0 > r4 ? 1 : (r0 == r4 ? 0 : -1));
        if (r2 == 0) goto L_0x15a3;
    L_0x15a2:
        return;
    L_0x15a3:
        r1 = 1;
        r0 = r8[r1];
        r0 = (java.lang.Integer) r0;
        r0 = r0.intValue();
        r1 = 0;
        r14 = 0;
    L_0x15ae:
        r2 = r7.messages;
        r2 = r2.size();
        if (r1 >= r2) goto L_0x1645;
    L_0x15b6:
        r2 = r7.messages;
        r2 = r2.get(r1);
        r2 = (org.telegram.messenger.MessageObject) r2;
        r4 = r2.getId();
        if (r4 <= 0) goto L_0x1641;
    L_0x15c4:
        if (r4 <= r0) goto L_0x15c8;
    L_0x15c6:
        goto L_0x1641;
    L_0x15c8:
        r5 = r7.chatInfo;
        if (r5 == 0) goto L_0x15e6;
    L_0x15cc:
        r6 = r5.pinned_msg_id;
        if (r6 != r4) goto L_0x15e6;
    L_0x15d0:
        r6 = 0;
        r7.pinnedMessageObject = r6;
        r6 = 0;
        r5.pinned_msg_id = r6;
        r5 = r40.getMessagesStorage();
        r8 = r7.chatInfo;
        r8 = r8.id;
        r5.updateChatPinnedMessage(r8, r6);
        r5 = 1;
        r7.updatePinnedMessageView(r5);
        goto L_0x1603;
    L_0x15e6:
        r6 = 0;
        r5 = r7.userInfo;
        if (r5 == 0) goto L_0x1603;
    L_0x15eb:
        r8 = r5.pinned_msg_id;
        if (r8 != r4) goto L_0x1603;
    L_0x15ef:
        r8 = 0;
        r7.pinnedMessageObject = r8;
        r5.pinned_msg_id = r6;
        r5 = r40.getMessagesStorage();
        r8 = r7.chatInfo;
        r8 = r8.id;
        r5.updateUserPinnedMessage(r8, r6);
        r5 = 1;
        r7.updatePinnedMessageView(r5);
    L_0x1603:
        r5 = r7.messages;
        r5.remove(r1);
        r1 = r1 + -1;
        r5 = r7.messagesDict;
        r5 = r5[r6];
        r5.remove(r4);
        r4 = r7.messagesByDays;
        r5 = r2.dateKey;
        r4 = r4.get(r5);
        r4 = (java.util.ArrayList) r4;
        if (r4 == 0) goto L_0x163e;
    L_0x161d:
        r4.remove(r2);
        r4 = r4.isEmpty();
        if (r4 == 0) goto L_0x163e;
    L_0x1626:
        r4 = r7.messagesByDays;
        r2 = r2.dateKey;
        r4.remove(r2);
        if (r1 < 0) goto L_0x163e;
    L_0x162f:
        r2 = r7.messages;
        r2 = r2.size();
        if (r1 >= r2) goto L_0x163e;
    L_0x1637:
        r2 = r7.messages;
        r2.remove(r1);
        r1 = r1 + -1;
    L_0x163e:
        r2 = 1;
        r14 = 1;
        goto L_0x1642;
    L_0x1641:
        r2 = 1;
    L_0x1642:
        r1 = r1 + r2;
        goto L_0x15ae;
    L_0x1645:
        r0 = r7.messages;
        r0 = r0.isEmpty();
        if (r0 == 0) goto L_0x1704;
    L_0x164d:
        r0 = r7.endReached;
        r1 = 0;
        r0 = r0[r1];
        if (r0 != 0) goto L_0x16e0;
    L_0x1654:
        r0 = r7.loading;
        if (r0 != 0) goto L_0x16e0;
    L_0x1658:
        r0 = r7.progressView;
        if (r0 == 0) goto L_0x1660;
    L_0x165c:
        r1 = 4;
        r0.setVisibility(r1);
    L_0x1660:
        r0 = r7.chatListView;
        if (r0 == 0) goto L_0x1668;
    L_0x1664:
        r1 = 0;
        r0.setEmptyView(r1);
    L_0x1668:
        r0 = r7.currentEncryptedChat;
        if (r0 != 0) goto L_0x1680;
    L_0x166c:
        r0 = r7.maxMessageId;
        r1 = NUM; // 0x7fffffff float:NaN double:1.060997895E-314;
        r2 = 1;
        r0[r2] = r1;
        r3 = 0;
        r0[r3] = r1;
        r0 = r7.minMessageId;
        r4 = -NUM; // 0xfffffffvar_ float:-0.0 double:NaN;
        r0[r2] = r4;
        r0[r3] = r4;
        goto L_0x1693;
    L_0x1680:
        r1 = NUM; // 0x7fffffff float:NaN double:1.060997895E-314;
        r2 = 1;
        r3 = 0;
        r4 = -NUM; // 0xfffffffvar_ float:-0.0 double:NaN;
        r0 = r7.maxMessageId;
        r0[r2] = r4;
        r0[r3] = r4;
        r0 = r7.minMessageId;
        r0[r2] = r1;
        r0[r3] = r1;
    L_0x1693:
        r0 = r7.maxDate;
        r0[r2] = r4;
        r0[r3] = r4;
        r0 = r7.minDate;
        r0[r2] = r3;
        r0[r3] = r3;
        r0 = r7.waitingForLoad;
        r1 = r7.lastLoadIndex;
        r1 = java.lang.Integer.valueOf(r1);
        r0.add(r1);
        r26 = r40.getMessagesController();
        r0 = r7.dialog_id;
        r29 = 30;
        r30 = 0;
        r31 = 0;
        r2 = r7.cacheEndReached;
        r2 = r2[r3];
        r4 = 1;
        r32 = r2 ^ 1;
        r2 = r7.minDate;
        r33 = r2[r3];
        r2 = r7.classGuid;
        r35 = 0;
        r36 = 0;
        r3 = r7.currentChat;
        r37 = org.telegram.messenger.ChatObject.isChannel(r3);
        r3 = r7.lastLoadIndex;
        r4 = r3 + 1;
        r7.lastLoadIndex = r4;
        r27 = r0;
        r34 = r2;
        r38 = r3;
        r26.loadMessages(r27, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38);
        r1 = 1;
        r7.loading = r1;
        goto L_0x1705;
    L_0x16e0:
        r0 = r7.botButtons;
        if (r0 == 0) goto L_0x16ef;
    L_0x16e4:
        r1 = 0;
        r7.botButtons = r1;
        r0 = r7.chatActivityEnterView;
        if (r0 == 0) goto L_0x16ef;
    L_0x16eb:
        r2 = 0;
        r0.setButtons(r1, r2);
    L_0x16ef:
        r0 = r7.currentEncryptedChat;
        if (r0 != 0) goto L_0x1704;
    L_0x16f3:
        r0 = r7.currentUser;
        if (r0 == 0) goto L_0x1704;
    L_0x16f7:
        r0 = r0.bot;
        if (r0 == 0) goto L_0x1704;
    L_0x16fb:
        r0 = r7.botUser;
        if (r0 != 0) goto L_0x1704;
    L_0x16ff:
        r7.botUser = r3;
        r40.updateBottomOverlay();
    L_0x1704:
        r1 = 1;
    L_0x1705:
        r2 = 0;
        r7.showPagedownButton(r2, r1);
        r7.showMentionDownButton(r2, r1);
        if (r14 == 0) goto L_0x2b4e;
    L_0x170e:
        r0 = r7.chatAdapter;
        if (r0 == 0) goto L_0x2b4e;
    L_0x1712:
        r7.removeUnreadPlane(r1);
        r0 = r7.chatAdapter;
        r0.notifyDataSetChanged();
        goto L_0x2b4e;
    L_0x171c:
        r1 = 1;
        r5 = org.telegram.messenger.NotificationCenter.messagesDeleted;
        if (r0 != r5) goto L_0x1a02;
    L_0x1721:
        r5 = 0;
        r0 = r8[r5];
        r0 = (java.util.ArrayList) r0;
        r2 = r8[r1];
        r2 = (java.lang.Integer) r2;
        r1 = r2.intValue();
        r2 = r7.currentChat;
        r2 = org.telegram.messenger.ChatObject.isChannel(r2);
        if (r2 == 0) goto L_0x174a;
    L_0x1736:
        if (r1 != 0) goto L_0x1742;
    L_0x1738:
        r4 = r7.mergeDialogId;
        r8 = 0;
        r2 = (r4 > r8 ? 1 : (r4 == r8 ? 0 : -1));
        if (r2 == 0) goto L_0x1742;
    L_0x1740:
        r2 = 1;
        goto L_0x174e;
    L_0x1742:
        r2 = r7.currentChat;
        r2 = r2.id;
        if (r1 != r2) goto L_0x1749;
    L_0x1748:
        goto L_0x174d;
    L_0x1749:
        return;
    L_0x174a:
        if (r1 == 0) goto L_0x174d;
    L_0x174c:
        return;
    L_0x174d:
        r2 = 0;
    L_0x174e:
        r4 = r0.size();
        r5 = 0;
        r6 = 0;
        r8 = 0;
        r9 = 0;
        r14 = 0;
    L_0x1757:
        if (r5 >= r4) goto L_0x185c;
    L_0x1759:
        r10 = r0.get(r5);
        r10 = (java.lang.Integer) r10;
        r11 = r7.messagesDict;
        r11 = r11[r2];
        r12 = r10.intValue();
        r11 = r11.get(r12);
        r11 = (org.telegram.messenger.MessageObject) r11;
        if (r2 != 0) goto L_0x17a8;
    L_0x176f:
        r12 = r7.chatInfo;
        if (r12 == 0) goto L_0x177e;
    L_0x1773:
        r12 = r12.pinned_msg_id;
        r13 = r10.intValue();
        if (r12 == r13) goto L_0x177c;
    L_0x177b:
        goto L_0x177e;
    L_0x177c:
        r12 = 0;
        goto L_0x178b;
    L_0x177e:
        r12 = r7.userInfo;
        if (r12 == 0) goto L_0x17a8;
    L_0x1782:
        r12 = r12.pinned_msg_id;
        r13 = r10.intValue();
        if (r12 != r13) goto L_0x17a8;
    L_0x178a:
        goto L_0x177c;
    L_0x178b:
        r7.pinnedMessageObject = r12;
        r12 = r7.chatInfo;
        if (r12 == 0) goto L_0x1795;
    L_0x1791:
        r13 = 0;
        r12.pinned_msg_id = r13;
        goto L_0x179c;
    L_0x1795:
        r13 = 0;
        r12 = r7.userInfo;
        if (r12 == 0) goto L_0x179c;
    L_0x179a:
        r12.pinned_msg_id = r13;
    L_0x179c:
        r12 = r40.getMessagesStorage();
        r12.updateChatPinnedMessage(r1, r13);
        r12 = 1;
        r7.updatePinnedMessageView(r12);
        goto L_0x17a9;
    L_0x17a8:
        r12 = 1;
    L_0x17a9:
        if (r11 == 0) goto L_0x1850;
    L_0x17ab:
        r13 = r7.editingMessageObject;
        if (r13 != r11) goto L_0x17b2;
    L_0x17af:
        r7.hideFieldPanel(r12);
    L_0x17b2:
        r12 = r7.messages;
        r12 = r12.indexOf(r11);
        r13 = -1;
        if (r12 == r13) goto L_0x1850;
    L_0x17bb:
        r13 = 0;
        r7.removeUnreadPlane(r13);
        r9 = r7.selectedMessagesIds;
        r9 = r9[r2];
        r15 = r10.intValue();
        r9 = r9.indexOfKey(r15);
        if (r9 < 0) goto L_0x17d8;
    L_0x17cd:
        r6 = r4 + -1;
        if (r5 != r6) goto L_0x17d3;
    L_0x17d1:
        r6 = 1;
        goto L_0x17d4;
    L_0x17d3:
        r6 = 0;
    L_0x17d4:
        r7.addToSelectedMessages(r11, r13, r6);
        r14 = 1;
    L_0x17d8:
        r9 = r7.messages;
        r9 = r9.remove(r12);
        r9 = (org.telegram.messenger.MessageObject) r9;
        r15 = r9.getGroupId();
        r17 = 0;
        r13 = (r15 > r17 ? 1 : (r15 == r17 ? 0 : -1));
        if (r13 == 0) goto L_0x1810;
    L_0x17ea:
        r13 = r7.groupedMessagesMap;
        r41 = r0;
        r42 = r1;
        r0 = r9.getGroupId();
        r0 = r13.get(r0);
        r0 = (org.telegram.messenger.MessageObject.GroupedMessages) r0;
        if (r0 == 0) goto L_0x1814;
    L_0x17fc:
        if (r8 != 0) goto L_0x1803;
    L_0x17fe:
        r8 = new android.util.LongSparseArray;
        r8.<init>();
    L_0x1803:
        r43 = r14;
        r13 = r0.groupId;
        r8.put(r13, r0);
        r0 = r0.messages;
        r0.remove(r11);
        goto L_0x1816;
    L_0x1810:
        r41 = r0;
        r42 = r1;
    L_0x1814:
        r43 = r14;
    L_0x1816:
        r0 = r7.messagesDict;
        r0 = r0[r2];
        r1 = r10.intValue();
        r0.remove(r1);
        r0 = r7.messagesByDays;
        r1 = r11.dateKey;
        r0 = r0.get(r1);
        r0 = (java.util.ArrayList) r0;
        if (r0 == 0) goto L_0x184c;
    L_0x182d:
        r0.remove(r11);
        r0 = r0.isEmpty();
        if (r0 == 0) goto L_0x184c;
    L_0x1836:
        r0 = r7.messagesByDays;
        r1 = r11.dateKey;
        r0.remove(r1);
        if (r12 < 0) goto L_0x184c;
    L_0x183f:
        r0 = r7.messages;
        r0 = r0.size();
        if (r12 >= r0) goto L_0x184c;
    L_0x1847:
        r0 = r7.messages;
        r0.remove(r12);
    L_0x184c:
        r14 = r43;
        r9 = 1;
        goto L_0x1854;
    L_0x1850:
        r41 = r0;
        r42 = r1;
    L_0x1854:
        r5 = r5 + 1;
        r0 = r41;
        r1 = r42;
        goto L_0x1757;
    L_0x185c:
        if (r14 == 0) goto L_0x1869;
    L_0x185e:
        if (r6 != 0) goto L_0x1866;
    L_0x1860:
        r1 = 0;
        r2 = 1;
        r4 = 0;
        r7.addToSelectedMessages(r1, r4, r2);
    L_0x1866:
        r40.updateActionModeTitle();
    L_0x1869:
        if (r8 == 0) goto L_0x18b6;
    L_0x186b:
        r0 = 0;
    L_0x186c:
        r1 = r8.size();
        if (r0 >= r1) goto L_0x18b6;
    L_0x1872:
        r1 = r8.valueAt(r0);
        r1 = (org.telegram.messenger.MessageObject.GroupedMessages) r1;
        r2 = r1.messages;
        r2 = r2.isEmpty();
        if (r2 == 0) goto L_0x1888;
    L_0x1880:
        r2 = r7.groupedMessagesMap;
        r4 = r1.groupId;
        r2.remove(r4);
        goto L_0x18b3;
    L_0x1888:
        r1.calculate();
        r2 = r1.messages;
        r4 = r2.size();
        r5 = 1;
        r4 = r4 - r5;
        r2 = r2.get(r4);
        r2 = (org.telegram.messenger.MessageObject) r2;
        r4 = r7.messages;
        r2 = r4.indexOf(r2);
        if (r2 < 0) goto L_0x18b3;
    L_0x18a1:
        r4 = r7.chatAdapter;
        if (r4 == 0) goto L_0x18b3;
    L_0x18a5:
        r5 = r4.messagesStartRow;
        r2 = r2 + r5;
        r1 = r1.messages;
        r1 = r1.size();
        r4.notifyItemRangeChanged(r2, r1);
    L_0x18b3:
        r0 = r0 + 1;
        goto L_0x186c;
    L_0x18b6:
        r0 = r7.messages;
        r0 = r0.isEmpty();
        if (r0 == 0) goto L_0x197d;
    L_0x18be:
        r0 = r7.endReached;
        r1 = 0;
        r0 = r0[r1];
        if (r0 != 0) goto L_0x1951;
    L_0x18c5:
        r0 = r7.loading;
        if (r0 != 0) goto L_0x1951;
    L_0x18c9:
        r0 = r7.progressView;
        if (r0 == 0) goto L_0x18d1;
    L_0x18cd:
        r1 = 4;
        r0.setVisibility(r1);
    L_0x18d1:
        r0 = r7.chatListView;
        if (r0 == 0) goto L_0x18d9;
    L_0x18d5:
        r1 = 0;
        r0.setEmptyView(r1);
    L_0x18d9:
        r0 = r7.currentEncryptedChat;
        if (r0 != 0) goto L_0x18f1;
    L_0x18dd:
        r0 = r7.maxMessageId;
        r1 = NUM; // 0x7fffffff float:NaN double:1.060997895E-314;
        r2 = 1;
        r0[r2] = r1;
        r3 = 0;
        r0[r3] = r1;
        r0 = r7.minMessageId;
        r4 = -NUM; // 0xfffffffvar_ float:-0.0 double:NaN;
        r0[r2] = r4;
        r0[r3] = r4;
        goto L_0x1904;
    L_0x18f1:
        r1 = NUM; // 0x7fffffff float:NaN double:1.060997895E-314;
        r2 = 1;
        r3 = 0;
        r4 = -NUM; // 0xfffffffvar_ float:-0.0 double:NaN;
        r0 = r7.maxMessageId;
        r0[r2] = r4;
        r0[r3] = r4;
        r0 = r7.minMessageId;
        r0[r2] = r1;
        r0[r3] = r1;
    L_0x1904:
        r0 = r7.maxDate;
        r0[r2] = r4;
        r0[r3] = r4;
        r0 = r7.minDate;
        r0[r2] = r3;
        r0[r3] = r3;
        r0 = r7.waitingForLoad;
        r1 = r7.lastLoadIndex;
        r1 = java.lang.Integer.valueOf(r1);
        r0.add(r1);
        r26 = r40.getMessagesController();
        r0 = r7.dialog_id;
        r29 = 30;
        r30 = 0;
        r31 = 0;
        r2 = r7.cacheEndReached;
        r2 = r2[r3];
        r4 = 1;
        r32 = r2 ^ 1;
        r2 = r7.minDate;
        r33 = r2[r3];
        r2 = r7.classGuid;
        r35 = 0;
        r36 = 0;
        r3 = r7.currentChat;
        r37 = org.telegram.messenger.ChatObject.isChannel(r3);
        r3 = r7.lastLoadIndex;
        r4 = r3 + 1;
        r7.lastLoadIndex = r4;
        r27 = r0;
        r34 = r2;
        r38 = r3;
        r26.loadMessages(r27, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38);
        r1 = 1;
        r7.loading = r1;
        goto L_0x1976;
    L_0x1951:
        r0 = r7.botButtons;
        if (r0 == 0) goto L_0x1960;
    L_0x1955:
        r1 = 0;
        r7.botButtons = r1;
        r0 = r7.chatActivityEnterView;
        if (r0 == 0) goto L_0x1960;
    L_0x195c:
        r2 = 0;
        r0.setButtons(r1, r2);
    L_0x1960:
        r0 = r7.currentEncryptedChat;
        if (r0 != 0) goto L_0x1975;
    L_0x1964:
        r0 = r7.currentUser;
        if (r0 == 0) goto L_0x1975;
    L_0x1968:
        r0 = r0.bot;
        if (r0 == 0) goto L_0x1975;
    L_0x196c:
        r0 = r7.botUser;
        if (r0 != 0) goto L_0x1975;
    L_0x1970:
        r7.botUser = r3;
        r40.updateBottomOverlay();
    L_0x1975:
        r1 = 1;
    L_0x1976:
        r2 = 0;
        r7.showPagedownButton(r2, r1);
        r7.showMentionDownButton(r2, r1);
    L_0x197d:
        r0 = r7.chatAdapter;
        if (r0 == 0) goto L_0x2b4e;
    L_0x1981:
        if (r9 == 0) goto L_0x19e9;
    L_0x1983:
        r0 = r7.chatListView;
        r0 = r0.getChildCount();
        r1 = 0;
    L_0x198a:
        if (r1 >= r0) goto L_0x19c8;
    L_0x198c:
        r2 = r7.chatListView;
        r2 = r2.getChildAt(r1);
        r3 = r2 instanceof org.telegram.ui.Cells.ChatMessageCell;
        if (r3 == 0) goto L_0x199e;
    L_0x1996:
        r3 = r2;
        r3 = (org.telegram.ui.Cells.ChatMessageCell) r3;
        r13 = r3.getMessageObject();
        goto L_0x19ab;
    L_0x199e:
        r3 = r2 instanceof org.telegram.ui.Cells.ChatActionCell;
        if (r3 == 0) goto L_0x19aa;
    L_0x19a2:
        r3 = r2;
        r3 = (org.telegram.ui.Cells.ChatActionCell) r3;
        r13 = r3.getMessageObject();
        goto L_0x19ab;
    L_0x19aa:
        r13 = 0;
    L_0x19ab:
        if (r13 == 0) goto L_0x19c5;
    L_0x19ad:
        r3 = r7.messages;
        r3 = r3.indexOf(r13);
        if (r3 >= 0) goto L_0x19b6;
    L_0x19b5:
        goto L_0x19c5;
    L_0x19b6:
        r0 = r7.chatAdapter;
        r0 = r0.messagesStartRow;
        r12 = r0 + r3;
        r13 = r2.getBottom();
        r25 = r13;
        goto L_0x19cb;
    L_0x19c5:
        r1 = r1 + 1;
        goto L_0x198a;
    L_0x19c8:
        r12 = -1;
        r25 = 0;
    L_0x19cb:
        r0 = r7.chatAdapter;
        r0.notifyDataSetChanged();
        r1 = -1;
        if (r12 == r1) goto L_0x2b4e;
    L_0x19d3:
        r0 = r7.chatLayoutManager;
        r1 = r7.chatListView;
        r1 = r1.getMeasuredHeight();
        r1 = r1 - r25;
        r2 = r7.chatListView;
        r2 = r2.getPaddingBottom();
        r1 = r1 - r2;
        r0.scrollToPositionWithOffset(r12, r1);
        goto L_0x2b4e;
    L_0x19e9:
        r1 = 0;
        r7.first_unread_id = r1;
        r7.last_message_id = r1;
        r7.createUnreadMessageAfterId = r1;
        r0 = r7.unreadMessageObject;
        r7.removeMessageObject(r0);
        r1 = 0;
        r7.unreadMessageObject = r1;
        r0 = r7.pagedownButtonCounter;
        if (r0 == 0) goto L_0x2b4e;
    L_0x19fc:
        r1 = 4;
        r0.setVisibility(r1);
        goto L_0x2b4e;
    L_0x1a02:
        r1 = -1;
        r3 = org.telegram.messenger.NotificationCenter.messageReceivedByServer;
        if (r0 != r3) goto L_0x1bda;
    L_0x1a07:
        r3 = 0;
        r0 = r8[r3];
        r1 = r0;
        r1 = (java.lang.Integer) r1;
        r0 = r7.messagesDict;
        r0 = r0[r3];
        r2 = r1.intValue();
        r0 = r0.get(r2);
        r2 = r0;
        r2 = (org.telegram.messenger.MessageObject) r2;
        if (r2 == 0) goto L_0x2b4e;
    L_0x1a1e:
        r4 = 1;
        r0 = r8[r4];
        r4 = r0;
        r4 = (java.lang.Integer) r4;
        r0 = r4.equals(r1);
        if (r0 != 0) goto L_0x1a8f;
    L_0x1a2a:
        r0 = r7.messagesDict;
        r0 = r0[r3];
        r5 = r4.intValue();
        r0 = r0.indexOfKey(r5);
        if (r0 < 0) goto L_0x1a8f;
    L_0x1a38:
        r0 = r7.messagesDict;
        r0 = r0[r3];
        r4 = r1.intValue();
        r0 = r0.get(r4);
        r0 = (org.telegram.messenger.MessageObject) r0;
        r4 = r7.messagesDict;
        r3 = r4[r3];
        r1 = r1.intValue();
        r3.remove(r1);
        if (r0 == 0) goto L_0x1a8e;
    L_0x1a53:
        r1 = r7.messages;
        r1 = r1.indexOf(r0);
        r3 = r7.messages;
        r3.remove(r1);
        r3 = r7.messagesByDays;
        r0 = r0.dateKey;
        r0 = r3.get(r0);
        r0 = (java.util.ArrayList) r0;
        r0.remove(r2);
        r0 = r0.isEmpty();
        if (r0 == 0) goto L_0x1a87;
    L_0x1a71:
        r0 = r7.messagesByDays;
        r2 = r2.dateKey;
        r0.remove(r2);
        if (r1 < 0) goto L_0x1a87;
    L_0x1a7a:
        r0 = r7.messages;
        r0 = r0.size();
        if (r1 >= r0) goto L_0x1a87;
    L_0x1a82:
        r0 = r7.messages;
        r0.remove(r1);
    L_0x1a87:
        r0 = r7.chatAdapter;
        if (r0 == 0) goto L_0x1a8e;
    L_0x1a8b:
        r0.notifyDataSetChanged();
    L_0x1a8e:
        return;
    L_0x1a8f:
        r0 = 2;
        r0 = r8[r0];
        r3 = r0;
        r3 = (org.telegram.tgnet.TLRPC.Message) r3;
        r0 = r8.length;
        r5 = 4;
        if (r0 < r5) goto L_0x1a9e;
    L_0x1a99:
        r0 = r8[r5];
        r0 = (java.lang.Long) r0;
        goto L_0x1aa4;
    L_0x1a9e:
        r5 = 0;
        r0 = java.lang.Long.valueOf(r5);
    L_0x1aa4:
        r5 = r0;
        if (r3 == 0) goto L_0x1b65;
    L_0x1aa7:
        r0 = r2.isForwarded();	 Catch:{ Exception -> 0x1b04 }
        if (r0 == 0) goto L_0x1ac5;
    L_0x1aad:
        r0 = r2.messageOwner;	 Catch:{ Exception -> 0x1b04 }
        r0 = r0.reply_markup;	 Catch:{ Exception -> 0x1b04 }
        if (r0 != 0) goto L_0x1ab7;
    L_0x1ab3:
        r0 = r3.reply_markup;	 Catch:{ Exception -> 0x1b04 }
        if (r0 != 0) goto L_0x1ac3;
    L_0x1ab7:
        r0 = r2.messageOwner;	 Catch:{ Exception -> 0x1b04 }
        r0 = r0.message;	 Catch:{ Exception -> 0x1b04 }
        r6 = r3.message;	 Catch:{ Exception -> 0x1b04 }
        r0 = r0.equals(r6);	 Catch:{ Exception -> 0x1b04 }
        if (r0 != 0) goto L_0x1ac5;
    L_0x1ac3:
        r13 = 1;
        goto L_0x1ac6;
    L_0x1ac5:
        r13 = 0;
    L_0x1ac6:
        if (r13 != 0) goto L_0x1afd;
    L_0x1ac8:
        r0 = r2.messageOwner;	 Catch:{ Exception -> 0x1afb }
        r0 = r0.params;	 Catch:{ Exception -> 0x1afb }
        if (r0 == 0) goto L_0x1ada;
    L_0x1ace:
        r0 = r2.messageOwner;	 Catch:{ Exception -> 0x1afb }
        r0 = r0.params;	 Catch:{ Exception -> 0x1afb }
        r6 = "query_id";
        r0 = r0.containsKey(r6);	 Catch:{ Exception -> 0x1afb }
        if (r0 != 0) goto L_0x1afd;
    L_0x1ada:
        r0 = r3.media;	 Catch:{ Exception -> 0x1afb }
        if (r0 == 0) goto L_0x1af9;
    L_0x1ade:
        r0 = r2.messageOwner;	 Catch:{ Exception -> 0x1afb }
        r0 = r0.media;	 Catch:{ Exception -> 0x1afb }
        if (r0 == 0) goto L_0x1af9;
    L_0x1ae4:
        r0 = r3.media;	 Catch:{ Exception -> 0x1afb }
        r0 = r0.getClass();	 Catch:{ Exception -> 0x1afb }
        r6 = r2.messageOwner;	 Catch:{ Exception -> 0x1afb }
        r6 = r6.media;	 Catch:{ Exception -> 0x1afb }
        r6 = r6.getClass();	 Catch:{ Exception -> 0x1afb }
        r0 = r0.equals(r6);	 Catch:{ Exception -> 0x1afb }
        if (r0 != 0) goto L_0x1af9;
    L_0x1af8:
        goto L_0x1afd;
    L_0x1af9:
        r0 = 0;
        goto L_0x1afe;
    L_0x1afb:
        r0 = move-exception;
        goto L_0x1b06;
    L_0x1afd:
        r0 = 1;
    L_0x1afe:
        r39 = r13;
        r13 = r0;
        r0 = r39;
        goto L_0x1b0b;
    L_0x1b04:
        r0 = move-exception;
        r13 = 0;
    L_0x1b06:
        org.telegram.messenger.FileLog.e(r0);
        r0 = r13;
        r13 = 0;
    L_0x1b0b:
        r9 = r2.getGroupId();
        r11 = 0;
        r6 = (r9 > r11 ? 1 : (r9 == r11 ? 0 : -1));
        if (r6 == 0) goto L_0x1b3c;
    L_0x1b15:
        r9 = r3.grouped_id;
        r6 = (r9 > r11 ? 1 : (r9 == r11 ? 0 : -1));
        if (r6 == 0) goto L_0x1b3c;
    L_0x1b1b:
        r6 = r7.groupedMessagesMap;
        r9 = r2.getGroupId();
        r6 = r6.get(r9);
        r6 = (org.telegram.messenger.MessageObject.GroupedMessages) r6;
        if (r6 == 0) goto L_0x1b30;
    L_0x1b29:
        r9 = r7.groupedMessagesMap;
        r10 = r3.grouped_id;
        r9.put(r10, r6);
    L_0x1b30:
        r6 = r2.messageOwner;
        r9 = r6.grouped_id;
        r2.localSentGroupId = r9;
        r9 = r5.longValue();
        r6.grouped_id = r9;
    L_0x1b3c:
        r5 = r2.messageOwner;
        r5 = r5.fwd_from;
        r2.messageOwner = r3;
        if (r5 == 0) goto L_0x1b54;
    L_0x1b44:
        r6 = r3.fwd_from;
        if (r6 == 0) goto L_0x1b54;
    L_0x1b48:
        r6 = r6.from_name;
        r6 = android.text.TextUtils.isEmpty(r6);
        if (r6 != 0) goto L_0x1b54;
    L_0x1b50:
        r6 = r2.messageOwner;
        r6.fwd_from = r5;
    L_0x1b54:
        r5 = 1;
        r2.generateThumbs(r5);
        r2.setType();
        r3 = r3.media;
        r3 = r3 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaGame;
        if (r3 == 0) goto L_0x1b67;
    L_0x1b61:
        r2.applyNewText();
        goto L_0x1b67;
    L_0x1b65:
        r0 = 0;
        r13 = 0;
    L_0x1b67:
        if (r0 == 0) goto L_0x1b6c;
    L_0x1b69:
        r2.measureInlineBotButtons();
    L_0x1b6c:
        r0 = r7.messagesDict;
        r3 = 0;
        r0 = r0[r3];
        r1 = r1.intValue();
        r0.remove(r1);
        r0 = r7.messagesDict;
        r0 = r0[r3];
        r1 = r4.intValue();
        r0.put(r1, r2);
        r0 = r2.messageOwner;
        r1 = r4.intValue();
        r0.id = r1;
        r0 = r2.messageOwner;
        r0.send_state = r3;
        r2.forceUpdate = r13;
        r0 = r8.length;
        r1 = 6;
        if (r0 < r1) goto L_0x1ba1;
    L_0x1b95:
        r1 = 5;
        r0 = r8[r1];
        r0 = (java.lang.Integer) r0;
        r0 = r0.intValue();
        r2.applyMediaExistanceFlags(r0);
    L_0x1ba1:
        r1 = 0;
        r7.addToPolls(r2, r1);
        r0 = new java.util.ArrayList;
        r0.<init>();
        r0.add(r2);
        r1 = r7.currentEncryptedChat;
        if (r1 != 0) goto L_0x1bba;
    L_0x1bb1:
        r1 = r40.getMediaDataController();
        r3 = r7.dialog_id;
        r1.loadReplyMessagesForMessages(r0, r3);
    L_0x1bba:
        r0 = r7.chatAdapter;
        if (r0 == 0) goto L_0x1bc2;
    L_0x1bbe:
        r1 = 1;
        r0.updateRowWithMessageObject(r2, r1);
    L_0x1bc2:
        r0 = r7.chatLayoutManager;
        if (r0 == 0) goto L_0x1bd1;
    L_0x1bc6:
        if (r13 == 0) goto L_0x1bd1;
    L_0x1bc8:
        r0 = r0.findFirstVisibleItemPosition();
        if (r0 != 0) goto L_0x1bd1;
    L_0x1bce:
        r40.moveScrollToLastMessage();
    L_0x1bd1:
        r0 = r40.getNotificationsController();
        r0.playOutChatSound();
        goto L_0x2b4e;
    L_0x1bda:
        r3 = org.telegram.messenger.NotificationCenter.messageReceivedByAck;
        if (r0 != r3) goto L_0x1CLASSNAME;
    L_0x1bde:
        r3 = 0;
        r0 = r8[r3];
        r0 = (java.lang.Integer) r0;
        r1 = r7.messagesDict;
        r1 = r1[r3];
        r0 = r0.intValue();
        r0 = r1.get(r0);
        r0 = (org.telegram.messenger.MessageObject) r0;
        if (r0 == 0) goto L_0x2b4e;
    L_0x1bf3:
        r1 = r0.messageOwner;
        r1.send_state = r3;
        r1 = r7.chatAdapter;
        if (r1 == 0) goto L_0x2b4e;
    L_0x1bfb:
        r2 = 1;
        r1.updateRowWithMessageObject(r0, r2);
        goto L_0x2b4e;
    L_0x1CLASSNAME:
        r3 = 0;
        r5 = org.telegram.messenger.NotificationCenter.messageSendError;
        if (r0 != r5) goto L_0x1CLASSNAME;
    L_0x1CLASSNAME:
        r0 = r8[r3];
        r0 = (java.lang.Integer) r0;
        r1 = r7.messagesDict;
        r1 = r1[r3];
        r0 = r0.intValue();
        r0 = r1.get(r0);
        r0 = (org.telegram.messenger.MessageObject) r0;
        if (r0 == 0) goto L_0x2b4e;
    L_0x1c1a:
        r0 = r0.messageOwner;
        r1 = 2;
        r0.send_state = r1;
        r40.updateVisibleRows();
        goto L_0x2b4e;
    L_0x1CLASSNAME:
        r3 = org.telegram.messenger.NotificationCenter.chatInfoDidLoad;
        if (r0 != r3) goto L_0x1e2d;
    L_0x1CLASSNAME:
        r3 = 0;
        r0 = r8[r3];
        r0 = (org.telegram.tgnet.TLRPC.ChatFull) r0;
        r1 = r7.currentChat;
        if (r1 == 0) goto L_0x2b4e;
    L_0x1CLASSNAME:
        r3 = r0.id;
        r4 = r1.id;
        if (r3 != r4) goto L_0x2b4e;
    L_0x1CLASSNAME:
        r3 = r0 instanceof org.telegram.tgnet.TLRPC.TL_channelFull;
        if (r3 == 0) goto L_0x1CLASSNAME;
    L_0x1c3b:
        r1 = r1.megagroup;
        if (r1 == 0) goto L_0x1CLASSNAME;
    L_0x1c3f:
        r1 = r0.participants;
        if (r1 == 0) goto L_0x1CLASSNAME;
    L_0x1CLASSNAME:
        r1 = 0;
        r13 = 0;
    L_0x1CLASSNAME:
        r3 = r0.participants;
        r3 = r3.participants;
        r3 = r3.size();
        if (r1 >= r3) goto L_0x1CLASSNAME;
    L_0x1c4f:
        r3 = r0.participants;
        r3 = r3.participants;
        r3 = r3.get(r1);
        r3 = (org.telegram.tgnet.TLRPC.ChatParticipant) r3;
        r3 = r3.date;
        r13 = java.lang.Math.max(r3, r13);
        r1 = r1 + 1;
        goto L_0x1CLASSNAME;
    L_0x1CLASSNAME:
        r13 = 0;
    L_0x1CLASSNAME:
        if (r13 == 0) goto L_0x1CLASSNAME;
    L_0x1CLASSNAME:
        r3 = java.lang.System.currentTimeMillis();
        r5 = 1000; // 0x3e8 float:1.401E-42 double:4.94E-321;
        r3 = r3 / r5;
        r5 = (long) r13;
        r3 = r3 - r5;
        r3 = java.lang.Math.abs(r3);
        r5 = 3600; // 0xe10 float:5.045E-42 double:1.7786E-320;
        r1 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1));
        if (r1 <= 0) goto L_0x1CLASSNAME;
    L_0x1CLASSNAME:
        r1 = r40.getMessagesController();
        r3 = r7.currentChat;
        r3 = r3.id;
        r3 = java.lang.Integer.valueOf(r3);
        r1.loadChannelParticipants(r3);
    L_0x1CLASSNAME:
        r1 = r0.participants;
        if (r1 != 0) goto L_0x1CLASSNAME;
    L_0x1c8b:
        r1 = r7.chatInfo;
        if (r1 == 0) goto L_0x1CLASSNAME;
    L_0x1c8f:
        r1 = r1.participants;
        r0.participants = r1;
    L_0x1CLASSNAME:
        r7.chatInfo = r0;
        r0 = r7.chatActivityEnterView;
        if (r0 == 0) goto L_0x1c9e;
    L_0x1CLASSNAME:
        r1 = r7.chatInfo;
        r0.setChatInfo(r1);
    L_0x1c9e:
        r0 = r7.mentionsAdapter;
        if (r0 == 0) goto L_0x1ca7;
    L_0x1ca2:
        r1 = r7.chatInfo;
        r0.setChatInfo(r1);
    L_0x1ca7:
        r0 = 3;
        r1 = r8[r0];
        r1 = r1 instanceof org.telegram.messenger.MessageObject;
        if (r1 == 0) goto L_0x1cb9;
    L_0x1cae:
        r0 = r8[r0];
        r0 = (org.telegram.messenger.MessageObject) r0;
        r7.pinnedMessageObject = r0;
        r1 = 0;
        r7.updatePinnedMessageView(r1);
        goto L_0x1cbd;
    L_0x1cb9:
        r1 = 1;
        r7.updatePinnedMessageView(r1);
    L_0x1cbd:
        r0 = r7.avatarContainer;
        if (r0 == 0) goto L_0x1cc9;
    L_0x1cc1:
        r0.updateOnlineCount();
        r0 = r7.avatarContainer;
        r0.updateSubtitle();
    L_0x1cc9:
        r0 = r7.isBroadcast;
        if (r0 == 0) goto L_0x1cd6;
    L_0x1ccd:
        r0 = r40.getSendMessagesHelper();
        r1 = r7.chatInfo;
        r0.setCurrentChatInfo(r1);
    L_0x1cd6:
        r0 = r7.chatInfo;
        r1 = r0 instanceof org.telegram.tgnet.TLRPC.TL_chatFull;
        if (r1 == 0) goto L_0x1d34;
    L_0x1cdc:
        r1 = 0;
        r7.hasBotsCommands = r1;
        r0 = r7.botInfo;
        r0.clear();
        r7.botsCount = r1;
        org.telegram.ui.Components.URLSpanBotCommand.enabled = r1;
        r0 = 0;
    L_0x1ce9:
        r1 = r7.chatInfo;
        r1 = r1.participants;
        r1 = r1.participants;
        r1 = r1.size();
        if (r0 >= r1) goto L_0x1d2b;
    L_0x1cf5:
        r1 = r7.chatInfo;
        r1 = r1.participants;
        r1 = r1.participants;
        r1 = r1.get(r0);
        r1 = (org.telegram.tgnet.TLRPC.ChatParticipant) r1;
        r2 = r40.getMessagesController();
        r1 = r1.user_id;
        r1 = java.lang.Integer.valueOf(r1);
        r1 = r2.getUser(r1);
        if (r1 == 0) goto L_0x1d28;
    L_0x1d11:
        r2 = r1.bot;
        if (r2 == 0) goto L_0x1d28;
    L_0x1d15:
        r2 = 1;
        org.telegram.ui.Components.URLSpanBotCommand.enabled = r2;
        r3 = r7.botsCount;
        r3 = r3 + r2;
        r7.botsCount = r3;
        r3 = r40.getMediaDataController();
        r1 = r1.id;
        r4 = r7.classGuid;
        r3.loadBotInfo(r1, r2, r4);
    L_0x1d28:
        r0 = r0 + 1;
        goto L_0x1ce9;
    L_0x1d2b:
        r0 = r7.chatListView;
        if (r0 == 0) goto L_0x1ddd;
    L_0x1d2f:
        r0.invalidateViews();
        goto L_0x1ddd;
    L_0x1d34:
        r0 = r0 instanceof org.telegram.tgnet.TLRPC.TL_channelFull;
        if (r0 == 0) goto L_0x1ddd;
    L_0x1d38:
        r1 = 0;
        r7.hasBotsCommands = r1;
        r0 = r7.botInfo;
        r0.clear();
        r7.botsCount = r1;
        r0 = r7.chatInfo;
        r0 = r0.bot_info;
        r0 = r0.isEmpty();
        if (r0 != 0) goto L_0x1d56;
    L_0x1d4c:
        r0 = r7.currentChat;
        if (r0 == 0) goto L_0x1d56;
    L_0x1d50:
        r0 = r0.megagroup;
        if (r0 == 0) goto L_0x1d56;
    L_0x1d54:
        r0 = 1;
        goto L_0x1d57;
    L_0x1d56:
        r0 = 0;
    L_0x1d57:
        org.telegram.ui.Components.URLSpanBotCommand.enabled = r0;
        r0 = r7.chatInfo;
        r0 = r0.bot_info;
        r0 = r0.size();
        r7.botsCount = r0;
        r0 = 0;
    L_0x1d64:
        r1 = r7.chatInfo;
        r1 = r1.bot_info;
        r1 = r1.size();
        if (r0 >= r1) goto L_0x1d9d;
    L_0x1d6e:
        r1 = r7.chatInfo;
        r1 = r1.bot_info;
        r1 = r1.get(r0);
        r1 = (org.telegram.tgnet.TLRPC.BotInfo) r1;
        r2 = r1.commands;
        r2 = r2.isEmpty();
        if (r2 != 0) goto L_0x1d93;
    L_0x1d80:
        r2 = r7.currentChat;
        r2 = org.telegram.messenger.ChatObject.isChannel(r2);
        if (r2 == 0) goto L_0x1d90;
    L_0x1d88:
        r2 = r7.currentChat;
        if (r2 == 0) goto L_0x1d93;
    L_0x1d8c:
        r2 = r2.megagroup;
        if (r2 == 0) goto L_0x1d93;
    L_0x1d90:
        r2 = 1;
        r7.hasBotsCommands = r2;
    L_0x1d93:
        r2 = r7.botInfo;
        r3 = r1.user_id;
        r2.put(r3, r1);
        r0 = r0 + 1;
        goto L_0x1d64;
    L_0x1d9d:
        r0 = r7.chatListView;
        if (r0 == 0) goto L_0x1da4;
    L_0x1da1:
        r0.invalidateViews();
    L_0x1da4:
        r0 = r7.mentionsAdapter;
        if (r0 == 0) goto L_0x1dbf;
    L_0x1da8:
        r0 = r7.currentChat;
        r0 = org.telegram.messenger.ChatObject.isChannel(r0);
        if (r0 == 0) goto L_0x1db8;
    L_0x1db0:
        r0 = r7.currentChat;
        if (r0 == 0) goto L_0x1dbf;
    L_0x1db4:
        r0 = r0.megagroup;
        if (r0 == 0) goto L_0x1dbf;
    L_0x1db8:
        r0 = r7.mentionsAdapter;
        r1 = r7.botInfo;
        r0.setBotInfo(r1);
    L_0x1dbf:
        r0 = r7.bottomOverlayChatText2;
        if (r0 == 0) goto L_0x1ddd;
    L_0x1dc3:
        r0 = r7.currentChat;
        r0 = org.telegram.messenger.ChatObject.isChannel(r0);
        if (r0 == 0) goto L_0x1ddd;
    L_0x1dcb:
        r0 = r7.currentChat;
        r0 = r0.megagroup;
        if (r0 != 0) goto L_0x1ddd;
    L_0x1dd1:
        r0 = r7.chatInfo;
        r0 = r0.linked_chat_id;
        r0 = -r0;
        if (r0 == 0) goto L_0x1ddd;
    L_0x1dd8:
        r0 = r7.bottomOverlayChatText2;
        r0.updateCounter();
    L_0x1ddd:
        r0 = r7.chatActivityEnterView;
        if (r0 == 0) goto L_0x1de8;
    L_0x1de1:
        r1 = r7.botsCount;
        r2 = r7.hasBotsCommands;
        r0.setBotsCount(r1, r2);
    L_0x1de8:
        r0 = r7.mentionsAdapter;
        if (r0 == 0) goto L_0x1df1;
    L_0x1dec:
        r1 = r7.botsCount;
        r0.setBotsCount(r1);
    L_0x1df1:
        r0 = r7.currentChat;
        r0 = org.telegram.messenger.ChatObject.isChannel(r0);
        if (r0 == 0) goto L_0x2b4e;
    L_0x1df9:
        r0 = r7.mergeDialogId;
        r2 = 0;
        r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1));
        if (r4 != 0) goto L_0x2b4e;
    L_0x1e01:
        r0 = r7.chatInfo;
        r1 = r0.migrated_from_chat_id;
        if (r1 == 0) goto L_0x2b4e;
    L_0x1e07:
        r1 = -r1;
        r1 = (long) r1;
        r7.mergeDialogId = r1;
        r1 = r7.maxMessageId;
        r0 = r0.migrated_from_max_id;
        r2 = 1;
        r1[r2] = r0;
        r0 = r7.chatAdapter;
        if (r0 == 0) goto L_0x1e19;
    L_0x1e16:
        r0.notifyDataSetChanged();
    L_0x1e19:
        r0 = r7.mergeDialogId;
        r2 = 0;
        r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1));
        if (r4 == 0) goto L_0x2b4e;
    L_0x1e21:
        r0 = r7.endReached;
        r1 = 0;
        r0 = r0[r1];
        if (r0 == 0) goto L_0x2b4e;
    L_0x1e28:
        r7.checkScrollForLoad(r1);
        goto L_0x2b4e;
    L_0x1e2d:
        r3 = org.telegram.messenger.NotificationCenter.chatInfoCantLoad;
        if (r0 != r3) goto L_0x1ec4;
    L_0x1e31:
        r3 = 0;
        r0 = r8[r3];
        r0 = (java.lang.Integer) r0;
        r0 = r0.intValue();
        r1 = r7.currentChat;
        if (r1 == 0) goto L_0x2b4e;
    L_0x1e3e:
        r1 = r1.id;
        if (r1 != r0) goto L_0x2b4e;
    L_0x1e42:
        r1 = 1;
        r0 = r8[r1];
        r0 = (java.lang.Integer) r0;
        r0 = r0.intValue();
        r1 = r40.getParentActivity();
        if (r1 == 0) goto L_0x1ec3;
    L_0x1e51:
        r1 = r7.closeChatDialog;
        if (r1 == 0) goto L_0x1e56;
    L_0x1e55:
        goto L_0x1ec3;
    L_0x1e56:
        r1 = new org.telegram.ui.ActionBar.AlertDialog$Builder;
        r2 = r40.getParentActivity();
        r1.<init>(r2);
        r2 = NUM; // 0x7f0d00f1 float:1.8742604E38 double:1.0531298966E-314;
        r3 = "AppName";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r1.setTitle(r2);
        if (r0 != 0) goto L_0x1e7a;
    L_0x1e6d:
        r0 = NUM; // 0x7f0d022b float:1.874324E38 double:1.0531300518E-314;
        r2 = "ChannelCantOpenPrivate";
        r0 = org.telegram.messenger.LocaleController.getString(r2, r0);
        r1.setMessage(r0);
        goto L_0x1e99;
    L_0x1e7a:
        r2 = 1;
        if (r0 != r2) goto L_0x1e8a;
    L_0x1e7d:
        r0 = NUM; // 0x7f0d022a float:1.8743238E38 double:1.0531300513E-314;
        r2 = "ChannelCantOpenNa";
        r0 = org.telegram.messenger.LocaleController.getString(r2, r0);
        r1.setMessage(r0);
        goto L_0x1e99;
    L_0x1e8a:
        r2 = 2;
        if (r0 != r2) goto L_0x1e99;
    L_0x1e8d:
        r0 = NUM; // 0x7f0d0229 float:1.8743236E38 double:1.053130051E-314;
        r2 = "ChannelCantOpenBanned";
        r0 = org.telegram.messenger.LocaleController.getString(r2, r0);
        r1.setMessage(r0);
    L_0x1e99:
        r0 = NUM; // 0x7f0d06ee float:1.8745713E38 double:1.053130654E-314;
        r2 = "OK";
        r0 = org.telegram.messenger.LocaleController.getString(r2, r0);
        r2 = 0;
        r1.setPositiveButton(r0, r2);
        r0 = r1.create();
        r7.closeChatDialog = r0;
        r7.showDialog(r0);
        r1 = 0;
        r7.loading = r1;
        r0 = r7.progressView;
        if (r0 == 0) goto L_0x1eba;
    L_0x1eb6:
        r1 = 4;
        r0.setVisibility(r1);
    L_0x1eba:
        r0 = r7.chatAdapter;
        if (r0 == 0) goto L_0x2b4e;
    L_0x1ebe:
        r0.notifyDataSetChanged();
        goto L_0x2b4e;
    L_0x1ec3:
        return;
    L_0x1ec4:
        r3 = org.telegram.messenger.NotificationCenter.contactsDidLoad;
        if (r0 != r3) goto L_0x1ed5;
    L_0x1ec8:
        r3 = 1;
        r7.updateTopPanel(r3);
        r0 = r7.avatarContainer;
        if (r0 == 0) goto L_0x2b4e;
    L_0x1ed0:
        r0.updateSubtitle();
        goto L_0x2b4e;
    L_0x1ed5:
        r3 = org.telegram.messenger.NotificationCenter.encryptedChatUpdated;
        if (r0 != r3) goto L_0x1var_;
    L_0x1ed9:
        r3 = 0;
        r0 = r8[r3];
        r0 = (org.telegram.tgnet.TLRPC.EncryptedChat) r0;
        r1 = r7.currentEncryptedChat;
        if (r1 == 0) goto L_0x2b4e;
    L_0x1ee2:
        r2 = r0.id;
        r1 = r1.id;
        if (r2 != r1) goto L_0x2b4e;
    L_0x1ee8:
        r7.currentEncryptedChat = r0;
        r1 = 1;
        r7.updateTopPanel(r1);
        r40.updateSecretStatus();
        r40.initStickers();
        r0 = r7.chatActivityEnterView;
        if (r0 == 0) goto L_0x1var_;
    L_0x1ef8:
        r1 = r7.currentEncryptedChat;
        if (r1 == 0) goto L_0x1var_;
    L_0x1efc:
        r1 = r1.layer;
        r1 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r1);
        r2 = 23;
        if (r1 < r2) goto L_0x1var_;
    L_0x1var_:
        goto L_0x1var_;
    L_0x1var_:
        r1 = 0;
        goto L_0x1f0a;
    L_0x1var_:
        r1 = 1;
    L_0x1f0a:
        r2 = r7.currentEncryptedChat;
        if (r2 == 0) goto L_0x1f1b;
    L_0x1f0e:
        r2 = r2.layer;
        r2 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r2);
        r3 = 46;
        if (r2 < r3) goto L_0x1var_;
    L_0x1var_:
        goto L_0x1f1b;
    L_0x1var_:
        r2 = 0;
        goto L_0x1f1c;
    L_0x1f1b:
        r2 = 1;
    L_0x1f1c:
        r0.setAllowStickersAndGifs(r1, r2);
        r0 = r7.chatActivityEnterView;
        r0.checkRoundVideo();
    L_0x1var_:
        r0 = r7.mentionsAdapter;
        if (r0 == 0) goto L_0x2b4e;
    L_0x1var_:
        r1 = r7.chatActivityEnterView;
        r1 = r1.isEditingMessage();
        if (r1 != 0) goto L_0x1var_;
    L_0x1var_:
        r1 = r7.currentEncryptedChat;
        if (r1 == 0) goto L_0x1f3e;
    L_0x1var_:
        r1 = r1.layer;
        r1 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r1);
        r2 = 46;
        if (r1 < r2) goto L_0x1var_;
    L_0x1f3e:
        r1 = 1;
        goto L_0x1var_;
    L_0x1var_:
        r1 = 0;
    L_0x1var_:
        r0.setNeedBotContext(r1);
        goto L_0x2b4e;
    L_0x1var_:
        r3 = org.telegram.messenger.NotificationCenter.messagesReadEncrypted;
        if (r0 != r3) goto L_0x1f9b;
    L_0x1f4a:
        r3 = 0;
        r0 = r8[r3];
        r0 = (java.lang.Integer) r0;
        r0 = r0.intValue();
        r1 = r7.currentEncryptedChat;
        if (r1 == 0) goto L_0x2b4e;
    L_0x1var_:
        r1 = r1.id;
        if (r1 != r0) goto L_0x2b4e;
    L_0x1f5b:
        r1 = 1;
        r0 = r8[r1];
        r0 = (java.lang.Integer) r0;
        r0 = r0.intValue();
        r1 = r7.messages;
        r1 = r1.iterator();
    L_0x1f6a:
        r2 = r1.hasNext();
        if (r2 == 0) goto L_0x1var_;
    L_0x1var_:
        r2 = r1.next();
        r2 = (org.telegram.messenger.MessageObject) r2;
        r3 = r2.isOut();
        if (r3 != 0) goto L_0x1f7d;
    L_0x1f7c:
        goto L_0x1f6a;
    L_0x1f7d:
        r3 = r2.isOut();
        if (r3 == 0) goto L_0x1f8a;
    L_0x1var_:
        r3 = r2.isUnread();
        if (r3 != 0) goto L_0x1f8a;
    L_0x1var_:
        goto L_0x1var_;
    L_0x1f8a:
        r3 = r2.messageOwner;
        r3 = r3.date;
        r4 = 1;
        r3 = r3 - r4;
        if (r3 > r0) goto L_0x1f6a;
    L_0x1var_:
        r2.setIsRead();
        goto L_0x1f6a;
    L_0x1var_:
        r40.updateVisibleRows();
        goto L_0x2b4e;
    L_0x1f9b:
        r3 = org.telegram.messenger.NotificationCenter.removeAllMessagesFromDialog;
        if (r0 != r3) goto L_0x1fbc;
    L_0x1f9f:
        r3 = 0;
        r0 = r8[r3];
        r0 = (java.lang.Long) r0;
        r0 = r0.longValue();
        r2 = r7.dialog_id;
        r4 = (r2 > r0 ? 1 : (r2 == r0 ? 0 : -1));
        if (r4 != 0) goto L_0x2b4e;
    L_0x1fae:
        r1 = 1;
        r0 = r8[r1];
        r0 = (java.lang.Boolean) r0;
        r0 = r0.booleanValue();
        r7.clearHistory(r0);
        goto L_0x2b4e;
    L_0x1fbc:
        r3 = org.telegram.messenger.NotificationCenter.screenshotTook;
        if (r0 != r3) goto L_0x1fc5;
    L_0x1fc0:
        r40.updateInformationForScreenshotDetector();
        goto L_0x2b4e;
    L_0x1fc5:
        r3 = org.telegram.messenger.NotificationCenter.blockedUsersDidLoad;
        if (r0 != r3) goto L_0x1fed;
    L_0x1fc9:
        r0 = r7.currentUser;
        if (r0 == 0) goto L_0x2b4e;
    L_0x1fcd:
        r0 = r7.userBlocked;
        r1 = r40.getMessagesController();
        r1 = r1.blockedUsers;
        r2 = r7.currentUser;
        r2 = r2.id;
        r1 = r1.indexOfKey(r2);
        if (r1 < 0) goto L_0x1fe1;
    L_0x1fdf:
        r1 = 1;
        goto L_0x1fe2;
    L_0x1fe1:
        r1 = 0;
    L_0x1fe2:
        r7.userBlocked = r1;
        r1 = r7.userBlocked;
        if (r0 == r1) goto L_0x2b4e;
    L_0x1fe8:
        r40.updateBottomOverlay();
        goto L_0x2b4e;
    L_0x1fed:
        r3 = org.telegram.messenger.NotificationCenter.fileNewChunkAvailable;
        if (r0 != r3) goto L_0x2030;
    L_0x1ff1:
        r3 = 0;
        r0 = r8[r3];
        r0 = (org.telegram.messenger.MessageObject) r0;
        r1 = 3;
        r1 = r8[r1];
        r1 = (java.lang.Long) r1;
        r1 = r1.longValue();
        r3 = 0;
        r5 = (r1 > r3 ? 1 : (r1 == r3 ? 0 : -1));
        if (r5 == 0) goto L_0x2b4e;
    L_0x2005:
        r3 = r7.dialog_id;
        r5 = r0.getDialogId();
        r8 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1));
        if (r8 != 0) goto L_0x2b4e;
    L_0x200f:
        r3 = r7.messagesDict;
        r4 = 0;
        r3 = r3[r4];
        r0 = r0.getId();
        r0 = r3.get(r0);
        r0 = (org.telegram.messenger.MessageObject) r0;
        if (r0 == 0) goto L_0x2b4e;
    L_0x2020:
        r0 = r0.messageOwner;
        r0 = r0.media;
        r0 = r0.document;
        if (r0 == 0) goto L_0x2b4e;
    L_0x2028:
        r2 = (int) r1;
        r0.size = r2;
        r40.updateVisibleRows();
        goto L_0x2b4e;
    L_0x2030:
        r3 = org.telegram.messenger.NotificationCenter.didCreatedNewDeleteTask;
        if (r0 != r3) goto L_0x2099;
    L_0x2034:
        r3 = 0;
        r0 = r8[r3];
        r0 = (android.util.SparseArray) r0;
        r1 = 0;
        r2 = 0;
    L_0x203b:
        r3 = r0.size();
        if (r1 >= r3) goto L_0x2092;
    L_0x2041:
        r3 = r0.keyAt(r1);
        r4 = r0.get(r3);
        r4 = (java.util.ArrayList) r4;
        r5 = r2;
        r2 = 0;
    L_0x204d:
        r6 = r4.size();
        if (r2 >= r6) goto L_0x208e;
    L_0x2053:
        r6 = r4.get(r2);
        r6 = (java.lang.Long) r6;
        r8 = r6.longValue();
        if (r2 != 0) goto L_0x2078;
    L_0x205f:
        r6 = 32;
        r10 = r8 >> r6;
        r13 = (int) r10;
        if (r13 >= 0) goto L_0x2067;
    L_0x2066:
        r13 = 0;
    L_0x2067:
        r6 = r7.currentChat;
        r6 = org.telegram.messenger.ChatObject.isChannel(r6);
        if (r6 == 0) goto L_0x2074;
    L_0x206f:
        r6 = r7.currentChat;
        r6 = r6.id;
        goto L_0x2075;
    L_0x2074:
        r6 = 0;
    L_0x2075:
        if (r13 == r6) goto L_0x2078;
    L_0x2077:
        return;
    L_0x2078:
        r6 = r7.messagesDict;
        r10 = 0;
        r6 = r6[r10];
        r9 = (int) r8;
        r6 = r6.get(r9);
        r6 = (org.telegram.messenger.MessageObject) r6;
        if (r6 == 0) goto L_0x208b;
    L_0x2086:
        r5 = r6.messageOwner;
        r5.destroyTime = r3;
        r5 = 1;
    L_0x208b:
        r2 = r2 + 1;
        goto L_0x204d;
    L_0x208e:
        r1 = r1 + 1;
        r2 = r5;
        goto L_0x203b;
    L_0x2092:
        if (r2 == 0) goto L_0x2b4e;
    L_0x2094:
        r40.updateVisibleRows();
        goto L_0x2b4e;
    L_0x2099:
        r3 = org.telegram.messenger.NotificationCenter.messagePlayingDidStart;
        if (r0 != r3) goto L_0x2181;
    L_0x209d:
        r3 = 0;
        r0 = r8[r3];
        r0 = (org.telegram.messenger.MessageObject) r0;
        r1 = r0.eventId;
        r3 = 0;
        r5 = (r1 > r3 ? 1 : (r1 == r3 ? 0 : -1));
        if (r5 == 0) goto L_0x20ab;
    L_0x20aa:
        return;
    L_0x20ab:
        r7.sendSecretMessageRead(r0);
        r1 = r0.isRoundVideo();
        if (r1 != 0) goto L_0x20ba;
    L_0x20b4:
        r0 = r0.isVideo();
        if (r0 == 0) goto L_0x20d7;
    L_0x20ba:
        r0 = r7.fragmentView;
        if (r0 == 0) goto L_0x20d7;
    L_0x20be:
        r0 = r0.getParent();
        if (r0 == 0) goto L_0x20d7;
    L_0x20c4:
        r0 = org.telegram.messenger.MediaController.getInstance();
        r1 = 1;
        r2 = r7.createTextureView(r1);
        r3 = r7.aspectRatioFrameLayout;
        r4 = r7.videoPlayerContainer;
        r0.setTextureView(r2, r3, r4, r1);
        r7.updateTextureViewPosition(r1);
    L_0x20d7:
        r0 = r7.chatListView;
        if (r0 == 0) goto L_0x2b4e;
    L_0x20db:
        r0 = r0.getChildCount();
        r1 = 0;
    L_0x20e0:
        if (r1 >= r0) goto L_0x2152;
    L_0x20e2:
        r2 = r7.chatListView;
        r2 = r2.getChildAt(r1);
        r3 = r2 instanceof org.telegram.ui.Cells.ChatMessageCell;
        if (r3 == 0) goto L_0x214f;
    L_0x20ec:
        r2 = (org.telegram.ui.Cells.ChatMessageCell) r2;
        r3 = r2.getMessageObject();
        if (r3 == 0) goto L_0x214f;
    L_0x20f4:
        r4 = r3.isVideo();
        r5 = r3.isRoundVideo();
        if (r5 != 0) goto L_0x2113;
    L_0x20fe:
        if (r4 == 0) goto L_0x2101;
    L_0x2100:
        goto L_0x2113;
    L_0x2101:
        r4 = r3.isVoice();
        if (r4 != 0) goto L_0x210d;
    L_0x2107:
        r3 = r3.isMusic();
        if (r3 == 0) goto L_0x214f;
    L_0x210d:
        r3 = 1;
        r5 = 0;
        r2.updateButtonState(r5, r3, r5);
        goto L_0x214f;
    L_0x2113:
        r5 = 0;
        r2.checkVideoPlayback(r5);
        r5 = org.telegram.messenger.MediaController.getInstance();
        r5 = r5.isPlayingMessage(r3);
        if (r5 != 0) goto L_0x2148;
    L_0x2121:
        if (r4 == 0) goto L_0x213a;
    L_0x2123:
        r4 = org.telegram.messenger.MediaController.getInstance();
        r4 = r4.isGoingToShowMessageObject(r3);
        if (r4 != 0) goto L_0x213a;
    L_0x212d:
        r4 = r2.getPhotoImage();
        r4 = r4.getAnimation();
        if (r4 == 0) goto L_0x213a;
    L_0x2137:
        r4.start();
    L_0x213a:
        r4 = r3.audioProgress;
        r5 = 0;
        r4 = (r4 > r5 ? 1 : (r4 == r5 ? 0 : -1));
        if (r4 == 0) goto L_0x214f;
    L_0x2141:
        r3.resetPlayingProgress();
        r2.invalidate();
        goto L_0x214f;
    L_0x2148:
        if (r4 == 0) goto L_0x214f;
    L_0x214a:
        r3 = 1;
        r4 = 0;
        r2.updateButtonState(r4, r3, r4);
    L_0x214f:
        r1 = r1 + 1;
        goto L_0x20e0;
    L_0x2152:
        r0 = r7.mentionListView;
        r0 = r0.getChildCount();
        r1 = 0;
    L_0x2159:
        if (r1 >= r0) goto L_0x2b4e;
    L_0x215b:
        r2 = r7.mentionListView;
        r2 = r2.getChildAt(r1);
        r3 = r2 instanceof org.telegram.ui.Cells.ContextLinkCell;
        if (r3 == 0) goto L_0x217e;
    L_0x2165:
        r2 = (org.telegram.ui.Cells.ContextLinkCell) r2;
        r3 = r2.getMessageObject();
        if (r3 == 0) goto L_0x217e;
    L_0x216d:
        r4 = r3.isVoice();
        if (r4 != 0) goto L_0x2179;
    L_0x2173:
        r3 = r3.isMusic();
        if (r3 == 0) goto L_0x217e;
    L_0x2179:
        r3 = 1;
        r4 = 0;
        r2.updateButtonState(r4, r3);
    L_0x217e:
        r1 = r1 + 1;
        goto L_0x2159;
    L_0x2181:
        r3 = org.telegram.messenger.NotificationCenter.messagePlayingGoingToStop;
        if (r0 != r3) goto L_0x2219;
    L_0x2185:
        r3 = 1;
        r0 = r8[r3];
        r0 = (java.lang.Boolean) r0;
        r0 = r0.booleanValue();
        if (r0 == 0) goto L_0x21a0;
    L_0x2190:
        r0 = r7.contentView;
        r1 = r7.videoPlayerContainer;
        r0.removeView(r1);
        r1 = 0;
        r7.videoPlayerContainer = r1;
        r7.videoTextureView = r1;
        r7.aspectRatioFrameLayout = r1;
        goto L_0x2b4e;
    L_0x21a0:
        r0 = r7.chatListView;
        if (r0 == 0) goto L_0x2b4e;
    L_0x21a4:
        r0 = r7.videoPlayerContainer;
        if (r0 == 0) goto L_0x2b4e;
    L_0x21a8:
        r0 = r0.getTag();
        if (r0 == 0) goto L_0x2b4e;
    L_0x21ae:
        r1 = 0;
        r0 = r8[r1];
        r1 = r0;
        r1 = (org.telegram.messenger.MessageObject) r1;
        r0 = r7.chatListView;
        r0 = r0.getChildCount();
        r2 = 0;
    L_0x21bb:
        if (r2 >= r0) goto L_0x2b4e;
    L_0x21bd:
        r3 = r7.chatListView;
        r3 = r3.getChildAt(r2);
        r4 = r3 instanceof org.telegram.ui.Cells.ChatMessageCell;
        if (r4 == 0) goto L_0x2216;
    L_0x21c7:
        r3 = (org.telegram.ui.Cells.ChatMessageCell) r3;
        r4 = r3.getMessageObject();
        if (r1 != r4) goto L_0x2216;
    L_0x21cf:
        r0 = r3.getPhotoImage();
        r2 = r0.getAnimation();
        if (r2 == 0) goto L_0x2b4e;
    L_0x21d9:
        r0 = r2.getAnimatedBitmap();
        if (r0 == 0) goto L_0x2200;
    L_0x21df:
        r3 = r7.videoTextureView;	 Catch:{ Throwable -> 0x21fc }
        r4 = r0.getWidth();	 Catch:{ Throwable -> 0x21fc }
        r5 = r0.getHeight();	 Catch:{ Throwable -> 0x21fc }
        r3 = r3.getBitmap(r4, r5);	 Catch:{ Throwable -> 0x21fc }
        r4 = new android.graphics.Canvas;	 Catch:{ Throwable -> 0x21fc }
        r4.<init>(r0);	 Catch:{ Throwable -> 0x21fc }
        r0 = 0;
        r5 = 0;
        r6 = 0;
        r4.drawBitmap(r3, r0, r5, r6);	 Catch:{ Throwable -> 0x21fc }
        r3.recycle();	 Catch:{ Throwable -> 0x21fc }
        goto L_0x2200;
    L_0x21fc:
        r0 = move-exception;
        org.telegram.messenger.FileLog.e(r0);
    L_0x2200:
        r0 = r1.audioProgressMs;
        r3 = (long) r0;
        r0 = r40.getFileLoader();
        r1 = r1.getDocument();
        r5 = 1;
        r0 = r0.isLoadingVideo(r1, r5);
        r0 = r0 ^ r5;
        r2.seekTo(r3, r0);
        goto L_0x2b4e;
    L_0x2216:
        r2 = r2 + 1;
        goto L_0x21bb;
    L_0x2219:
        r3 = org.telegram.messenger.NotificationCenter.messagePlayingDidReset;
        if (r0 == r3) goto L_0x2aa1;
    L_0x221d:
        r3 = org.telegram.messenger.NotificationCenter.messagePlayingPlayStateChanged;
        if (r0 != r3) goto L_0x2223;
    L_0x2221:
        goto L_0x2aa1;
    L_0x2223:
        r3 = org.telegram.messenger.NotificationCenter.messagePlayingProgressDidChanged;
        if (r0 != r3) goto L_0x227a;
    L_0x2227:
        r3 = 0;
        r0 = r8[r3];
        r0 = (java.lang.Integer) r0;
        r1 = r7.chatListView;
        if (r1 == 0) goto L_0x2b4e;
    L_0x2230:
        r1 = r1.getChildCount();
        r2 = 0;
    L_0x2235:
        if (r2 >= r1) goto L_0x2b4e;
    L_0x2237:
        r3 = r7.chatListView;
        r3 = r3.getChildAt(r2);
        r4 = r3 instanceof org.telegram.ui.Cells.ChatMessageCell;
        if (r4 == 0) goto L_0x2277;
    L_0x2241:
        r3 = (org.telegram.ui.Cells.ChatMessageCell) r3;
        r4 = r3.getMessageObject();
        if (r4 == 0) goto L_0x2277;
    L_0x2249:
        r5 = r4.getId();
        r6 = r0.intValue();
        if (r5 != r6) goto L_0x2277;
    L_0x2253:
        r0 = org.telegram.messenger.MediaController.getInstance();
        r0 = r0.getPlayingMessageObject();
        if (r0 == 0) goto L_0x2b4e;
    L_0x225d:
        r1 = r0.audioProgress;
        r4.audioProgress = r1;
        r1 = r0.audioProgressSec;
        r4.audioProgressSec = r1;
        r0 = r0.audioPlayerDuration;
        r4.audioPlayerDuration = r0;
        r3.updatePlayingMessageProgress();
        r0 = r7.drawLaterRoundProgressCell;
        if (r0 != r3) goto L_0x2b4e;
    L_0x2270:
        r0 = r7.fragmentView;
        r0.invalidate();
        goto L_0x2b4e;
    L_0x2277:
        r2 = r2 + 1;
        goto L_0x2235;
    L_0x227a:
        r3 = org.telegram.messenger.NotificationCenter.didUpdatePollResults;
        if (r0 != r3) goto L_0x22c0;
    L_0x227e:
        r3 = 0;
        r0 = r8[r3];
        r0 = (java.lang.Long) r0;
        r0 = r0.longValue();
        r2 = r7.polls;
        r0 = r2.get(r0);
        r0 = (java.util.ArrayList) r0;
        if (r0 == 0) goto L_0x2b4e;
    L_0x2291:
        r1 = 1;
        r2 = r8[r1];
        r2 = (org.telegram.tgnet.TLRPC.TL_poll) r2;
        r3 = 2;
        r1 = r8[r3];
        r1 = (org.telegram.tgnet.TLRPC.TL_pollResults) r1;
        r3 = r0.size();
        r4 = 0;
    L_0x22a0:
        if (r4 >= r3) goto L_0x2b4e;
    L_0x22a2:
        r5 = r0.get(r4);
        r5 = (org.telegram.messenger.MessageObject) r5;
        r6 = r5.messageOwner;
        r6 = r6.media;
        r6 = (org.telegram.tgnet.TLRPC.TL_messageMediaPoll) r6;
        if (r2 == 0) goto L_0x22b2;
    L_0x22b0:
        r6.poll = r2;
    L_0x22b2:
        org.telegram.messenger.MessageObject.updatePollResults(r6, r1);
        r6 = r7.chatAdapter;
        if (r6 == 0) goto L_0x22bd;
    L_0x22b9:
        r8 = 1;
        r6.updateRowWithMessageObject(r5, r8);
    L_0x22bd:
        r4 = r4 + 1;
        goto L_0x22a0;
    L_0x22c0:
        r3 = 2;
        r5 = org.telegram.messenger.NotificationCenter.updateMessageMedia;
        if (r0 != r5) goto L_0x23d8;
    L_0x22c5:
        r5 = 0;
        r0 = r8[r5];
        r0 = (org.telegram.tgnet.TLRPC.Message) r0;
        r1 = r7.messagesDict;
        r1 = r1[r5];
        r2 = r0.id;
        r1 = r1.get(r2);
        r1 = (org.telegram.messenger.MessageObject) r1;
        if (r1 == 0) goto L_0x2b4e;
    L_0x22d8:
        r2 = r1.messageOwner;
        r3 = r0.media;
        r2.media = r3;
        r3 = r0.attachPath;
        r2.attachPath = r3;
        r1.generateThumbs(r5);
        r2 = r1.getGroupId();
        r4 = 0;
        r6 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1));
        if (r6 == 0) goto L_0x23b4;
    L_0x22ef:
        r2 = r1.photoThumbs;
        if (r2 == 0) goto L_0x22f9;
    L_0x22f3:
        r2 = r2.isEmpty();
        if (r2 == 0) goto L_0x23b4;
    L_0x22f9:
        r2 = r7.groupedMessagesMap;
        r3 = r1.getGroupId();
        r2 = r2.get(r3);
        r2 = (org.telegram.messenger.MessageObject.GroupedMessages) r2;
        if (r2 == 0) goto L_0x23b4;
    L_0x2307:
        r3 = r2.messages;
        r3 = r3.indexOf(r1);
        if (r3 < 0) goto L_0x23b4;
    L_0x230f:
        r4 = r2.messages;
        r4 = r4.size();
        if (r3 <= 0) goto L_0x2376;
    L_0x2317:
        r5 = r2.messages;
        r5 = r5.size();
        r6 = 1;
        r5 = r5 - r6;
        if (r3 >= r5) goto L_0x2376;
    L_0x2321:
        r5 = new org.telegram.messenger.MessageObject$GroupedMessages;
        r5.<init>();
        r6 = org.telegram.messenger.Utilities.random;
        r8 = r6.nextLong();
        r5.groupId = r8;
        r6 = r5.messages;
        r8 = r2.messages;
        r9 = r3 + 1;
        r10 = r8.size();
        r8 = r8.subList(r9, r10);
        r6.addAll(r8);
        r6 = 0;
    L_0x2340:
        r8 = r5.messages;
        r8 = r8.size();
        if (r6 >= r8) goto L_0x235c;
    L_0x2348:
        r8 = r5.messages;
        r8 = r8.get(r6);
        r8 = (org.telegram.messenger.MessageObject) r8;
        r10 = r5.groupId;
        r8.localGroupId = r10;
        r8 = r2.messages;
        r8.remove(r9);
        r6 = r6 + 1;
        goto L_0x2340;
    L_0x235c:
        r6 = r7.groupedMessagesMap;
        r8 = r5.groupId;
        r6.put(r8, r5);
        r6 = r5.messages;
        r8 = r6.size();
        r9 = 1;
        r8 = r8 - r9;
        r6 = r6.get(r8);
        r13 = r6;
        r13 = (org.telegram.messenger.MessageObject) r13;
        r5.calculate();
        goto L_0x2377;
    L_0x2376:
        r13 = 0;
    L_0x2377:
        r5 = r2.messages;
        r5.remove(r3);
        r3 = r2.messages;
        r3 = r3.isEmpty();
        if (r3 == 0) goto L_0x238c;
    L_0x2384:
        r3 = r7.groupedMessagesMap;
        r4 = r2.groupId;
        r3.remove(r4);
        goto L_0x23b4;
    L_0x238c:
        if (r13 != 0) goto L_0x239d;
    L_0x238e:
        r3 = r2.messages;
        r5 = r3.size();
        r6 = 1;
        r5 = r5 - r6;
        r3 = r3.get(r5);
        r13 = r3;
        r13 = (org.telegram.messenger.MessageObject) r13;
    L_0x239d:
        r2.calculate();
        r2 = r7.messages;
        r2 = r2.indexOf(r13);
        if (r2 < 0) goto L_0x23b4;
    L_0x23a8:
        r3 = r7.chatAdapter;
        if (r3 == 0) goto L_0x23b4;
    L_0x23ac:
        r5 = r3.messagesStartRow;
        r2 = r2 + r5;
        r3.notifyItemRangeChanged(r2, r4);
    L_0x23b4:
        r0 = r0.media;
        r2 = r0.ttl_seconds;
        if (r2 == 0) goto L_0x23d3;
    L_0x23ba:
        r2 = r0.photo;
        r2 = r2 instanceof org.telegram.tgnet.TLRPC.TL_photoEmpty;
        if (r2 != 0) goto L_0x23c6;
    L_0x23c0:
        r0 = r0.document;
        r0 = r0 instanceof org.telegram.tgnet.TLRPC.TL_documentEmpty;
        if (r0 == 0) goto L_0x23d3;
    L_0x23c6:
        r1.setType();
        r0 = r7.chatAdapter;
        if (r0 == 0) goto L_0x2b4e;
    L_0x23cd:
        r5 = 0;
        r0.updateRowWithMessageObject(r1, r5);
        goto L_0x2b4e;
    L_0x23d3:
        r40.updateVisibleRows();
        goto L_0x2b4e;
    L_0x23d8:
        r5 = 0;
        r6 = org.telegram.messenger.NotificationCenter.replaceMessagesObjects;
        if (r0 != r6) goto L_0x2631;
    L_0x23dd:
        r0 = r8[r5];
        r0 = (java.lang.Long) r0;
        r2 = r0.longValue();
        r4 = r7.dialog_id;
        r0 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1));
        if (r0 == 0) goto L_0x23f2;
    L_0x23eb:
        r4 = r7.mergeDialogId;
        r0 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1));
        if (r0 == 0) goto L_0x23f2;
    L_0x23f1:
        return;
    L_0x23f2:
        r4 = r7.dialog_id;
        r0 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1));
        if (r0 != 0) goto L_0x23fa;
    L_0x23f8:
        r0 = 0;
        goto L_0x23fb;
    L_0x23fa:
        r0 = 1;
    L_0x23fb:
        r2 = 1;
        r3 = r8[r2];
        r3 = (java.util.ArrayList) r3;
        r2 = 0;
        r4 = 0;
    L_0x2402:
        r5 = r3.size();
        if (r2 >= r5) goto L_0x25e4;
    L_0x2408:
        r5 = r3.get(r2);
        r5 = (org.telegram.messenger.MessageObject) r5;
        r6 = r7.messagesDict;
        r6 = r6[r0];
        r8 = r5.getId();
        r6 = r6.get(r8);
        r6 = (org.telegram.messenger.MessageObject) r6;
        r8 = r7.pinnedMessageObject;
        if (r8 == 0) goto L_0x2430;
    L_0x2420:
        r8 = r8.getId();
        r9 = r5.getId();
        if (r8 != r9) goto L_0x2430;
    L_0x242a:
        r7.pinnedMessageObject = r5;
        r8 = 1;
        r7.updatePinnedMessageView(r8);
    L_0x2430:
        if (r6 == 0) goto L_0x25d6;
    L_0x2432:
        r7.addToPolls(r5, r6);
        r8 = r5.type;
        if (r8 < 0) goto L_0x2488;
    L_0x2439:
        r8 = r6.replyMessageObject;
        if (r8 == 0) goto L_0x2454;
    L_0x243d:
        r5.replyMessageObject = r8;
        r8 = r5.messageOwner;
        r8 = r8.action;
        r9 = r8 instanceof org.telegram.tgnet.TLRPC.TL_messageActionGameScore;
        if (r9 == 0) goto L_0x244c;
    L_0x2447:
        r9 = 0;
        r5.generateGameMessageText(r9);
        goto L_0x2454;
    L_0x244c:
        r9 = 0;
        r8 = r8 instanceof org.telegram.tgnet.TLRPC.TL_messageActionPaymentSent;
        if (r8 == 0) goto L_0x2454;
    L_0x2451:
        r5.generatePaymentSentMessageText(r9);
    L_0x2454:
        r8 = r6.isEditing();
        if (r8 != 0) goto L_0x247c;
    L_0x245a:
        r8 = r6.getFileName();
        r9 = r5.getFileName();
        r8 = r8.equals(r9);
        if (r8 == 0) goto L_0x2479;
    L_0x2468:
        r8 = r5.messageOwner;
        r9 = r6.messageOwner;
        r9 = r9.attachPath;
        r8.attachPath = r9;
        r8 = r6.attachPathExists;
        r5.attachPathExists = r8;
        r8 = r6.mediaExists;
        r5.mediaExists = r8;
        goto L_0x247c;
    L_0x2479:
        r5.checkMediaExistance();
    L_0x247c:
        r8 = r7.messagesDict;
        r8 = r8[r0];
        r9 = r6.getId();
        r8.put(r9, r5);
        goto L_0x2493;
    L_0x2488:
        r8 = r7.messagesDict;
        r8 = r8[r0];
        r9 = r6.getId();
        r8.remove(r9);
    L_0x2493:
        r8 = r7.messages;
        r8 = r8.indexOf(r6);
        if (r8 < 0) goto L_0x25d6;
    L_0x249b:
        r9 = r7.messagesByDays;
        r10 = r6.dateKey;
        r9 = r9.get(r10);
        r9 = (java.util.ArrayList) r9;
        if (r9 == 0) goto L_0x24ac;
    L_0x24a7:
        r12 = r9.indexOf(r6);
        goto L_0x24ad;
    L_0x24ac:
        r12 = -1;
    L_0x24ad:
        r10 = r6.getGroupId();
        r13 = 0;
        r15 = (r10 > r13 ? 1 : (r10 == r13 ? 0 : -1));
        if (r15 == 0) goto L_0x250d;
    L_0x24b7:
        r10 = r7.groupedMessagesMap;
        r13 = r6.getGroupId();
        r10 = r10.get(r13);
        r10 = (org.telegram.messenger.MessageObject.GroupedMessages) r10;
        if (r10 == 0) goto L_0x250d;
    L_0x24c5:
        r11 = r10.messages;
        r11 = r11.indexOf(r6);
        if (r11 < 0) goto L_0x250d;
    L_0x24cd:
        r13 = r6.getGroupId();
        r15 = r5.getGroupId();
        r19 = (r13 > r15 ? 1 : (r13 == r15 ? 0 : -1));
        if (r19 == 0) goto L_0x24e2;
    L_0x24d9:
        r13 = r7.groupedMessagesMap;
        r14 = r5.getGroupId();
        r13.put(r14, r10);
    L_0x24e2:
        r13 = r5.photoThumbs;
        if (r13 == 0) goto L_0x2514;
    L_0x24e6:
        r13 = r13.isEmpty();
        if (r13 == 0) goto L_0x24ed;
    L_0x24ec:
        goto L_0x2514;
    L_0x24ed:
        r13 = r10.messages;
        r13.set(r11, r5);
        r11 = r10.positions;
        r11 = r11.remove(r6);
        r11 = (org.telegram.messenger.MessageObject.GroupedMessagePosition) r11;
        if (r11 == 0) goto L_0x2501;
    L_0x24fc:
        r13 = r10.positions;
        r13.put(r5, r11);
    L_0x2501:
        if (r4 != 0) goto L_0x2508;
    L_0x2503:
        r4 = new android.util.LongSparseArray;
        r4.<init>();
    L_0x2508:
        r13 = r10.groupId;
        r4.put(r13, r10);
    L_0x250d:
        r41 = r0;
        r15 = r2;
        r42 = r3;
        goto L_0x2589;
    L_0x2514:
        if (r4 != 0) goto L_0x251b;
    L_0x2516:
        r4 = new android.util.LongSparseArray;
        r4.<init>();
    L_0x251b:
        r13 = r10.groupId;
        r4.put(r13, r10);
        if (r11 <= 0) goto L_0x257f;
    L_0x2522:
        r13 = r10.messages;
        r13 = r13.size();
        r14 = 1;
        r13 = r13 - r14;
        if (r11 >= r13) goto L_0x257f;
    L_0x252c:
        r13 = new org.telegram.messenger.MessageObject$GroupedMessages;
        r13.<init>();
        r14 = org.telegram.messenger.Utilities.random;
        r14 = r14.nextLong();
        r13.groupId = r14;
        r14 = r13.messages;
        r15 = r10.messages;
        r1 = r11 + 1;
        r41 = r0;
        r0 = r15.size();
        r0 = r15.subList(r1, r0);
        r14.addAll(r0);
        r0 = 0;
    L_0x254d:
        r14 = r13.messages;
        r14 = r14.size();
        if (r0 >= r14) goto L_0x256f;
    L_0x2555:
        r14 = r13.messages;
        r14 = r14.get(r0);
        r14 = (org.telegram.messenger.MessageObject) r14;
        r15 = r2;
        r42 = r3;
        r2 = r13.groupId;
        r14.localGroupId = r2;
        r2 = r10.messages;
        r2.remove(r1);
        r0 = r0 + 1;
        r3 = r42;
        r2 = r15;
        goto L_0x254d;
    L_0x256f:
        r15 = r2;
        r42 = r3;
        r0 = r13.groupId;
        r4.put(r0, r13);
        r0 = r7.groupedMessagesMap;
        r1 = r13.groupId;
        r0.put(r1, r13);
        goto L_0x2584;
    L_0x257f:
        r41 = r0;
        r15 = r2;
        r42 = r3;
    L_0x2584:
        r0 = r10.messages;
        r0.remove(r11);
    L_0x2589:
        r0 = r5.type;
        if (r0 < 0) goto L_0x25a4;
    L_0x258d:
        r0 = r7.messages;
        r0.set(r8, r5);
        r0 = r7.chatAdapter;
        if (r0 == 0) goto L_0x259e;
    L_0x2596:
        r1 = r0.messagesStartRow;
        r1 = r1 + r8;
        r0.updateRowAtPosition(r1);
    L_0x259e:
        if (r12 < 0) goto L_0x25db;
    L_0x25a0:
        r9.set(r12, r5);
        goto L_0x25db;
    L_0x25a4:
        r0 = r7.messages;
        r0.remove(r8);
        r0 = r7.chatAdapter;
        if (r0 == 0) goto L_0x25b5;
    L_0x25ad:
        r1 = r0.messagesStartRow;
        r1 = r1 + r8;
        r0.notifyItemRemoved(r1);
    L_0x25b5:
        if (r12 < 0) goto L_0x25db;
    L_0x25b7:
        r9.remove(r12);
        r0 = r9.isEmpty();
        if (r0 == 0) goto L_0x25db;
    L_0x25c0:
        r0 = r7.messagesByDays;
        r1 = r6.dateKey;
        r0.remove(r1);
        r0 = r7.messages;
        r0.remove(r8);
        r0 = r7.chatAdapter;
        r1 = r0.messagesStartRow;
        r0.notifyItemRemoved(r1);
        goto L_0x25db;
    L_0x25d6:
        r41 = r0;
        r15 = r2;
        r42 = r3;
    L_0x25db:
        r2 = r15 + 1;
        r0 = r41;
        r3 = r42;
        r1 = -1;
        goto L_0x2402;
    L_0x25e4:
        if (r4 == 0) goto L_0x2b4e;
    L_0x25e6:
        r0 = 0;
    L_0x25e7:
        r1 = r4.size();
        if (r0 >= r1) goto L_0x2b4e;
    L_0x25ed:
        r1 = r4.valueAt(r0);
        r1 = (org.telegram.messenger.MessageObject.GroupedMessages) r1;
        r2 = r1.messages;
        r2 = r2.isEmpty();
        if (r2 == 0) goto L_0x2603;
    L_0x25fb:
        r2 = r7.groupedMessagesMap;
        r5 = r1.groupId;
        r2.remove(r5);
        goto L_0x262e;
    L_0x2603:
        r1.calculate();
        r2 = r1.messages;
        r3 = r2.size();
        r5 = 1;
        r3 = r3 - r5;
        r2 = r2.get(r3);
        r2 = (org.telegram.messenger.MessageObject) r2;
        r3 = r7.messages;
        r2 = r3.indexOf(r2);
        if (r2 < 0) goto L_0x262e;
    L_0x261c:
        r3 = r7.chatAdapter;
        if (r3 == 0) goto L_0x262e;
    L_0x2620:
        r5 = r3.messagesStartRow;
        r2 = r2 + r5;
        r1 = r1.messages;
        r1 = r1.size();
        r3.notifyItemRangeChanged(r2, r1);
    L_0x262e:
        r0 = r0 + 1;
        goto L_0x25e7;
    L_0x2631:
        r1 = org.telegram.messenger.NotificationCenter.notificationsSettingsUpdated;
        if (r0 != r1) goto L_0x2645;
    L_0x2635:
        r40.updateTitleIcons();
        r0 = r7.currentChat;
        r0 = org.telegram.messenger.ChatObject.isChannel(r0);
        if (r0 == 0) goto L_0x2b4e;
    L_0x2640:
        r40.updateBottomOverlay();
        goto L_0x2b4e;
    L_0x2645:
        r1 = org.telegram.messenger.NotificationCenter.replyMessagesDidLoad;
        if (r0 != r1) goto L_0x265d;
    L_0x2649:
        r1 = 0;
        r0 = r8[r1];
        r0 = (java.lang.Long) r0;
        r0 = r0.longValue();
        r2 = r7.dialog_id;
        r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1));
        if (r4 != 0) goto L_0x2b4e;
    L_0x2658:
        r40.updateVisibleRows();
        goto L_0x2b4e;
    L_0x265d:
        r1 = org.telegram.messenger.NotificationCenter.pinnedMessageDidLoad;
        if (r0 != r1) goto L_0x2693;
    L_0x2661:
        r1 = 0;
        r0 = r8[r1];
        r0 = (org.telegram.messenger.MessageObject) r0;
        r1 = r0.getDialogId();
        r3 = r7.dialog_id;
        r5 = (r1 > r3 ? 1 : (r1 == r3 ? 0 : -1));
        if (r5 != 0) goto L_0x2b4e;
    L_0x2670:
        r1 = r7.chatInfo;
        if (r1 == 0) goto L_0x267c;
    L_0x2674:
        r1 = r1.pinned_msg_id;
        r2 = r0.getId();
        if (r1 == r2) goto L_0x2688;
    L_0x267c:
        r1 = r7.userInfo;
        if (r1 == 0) goto L_0x2b4e;
    L_0x2680:
        r1 = r1.pinned_msg_id;
        r2 = r0.getId();
        if (r1 != r2) goto L_0x2b4e;
    L_0x2688:
        r7.pinnedMessageObject = r0;
        r1 = 0;
        r7.loadingPinnedMessage = r1;
        r1 = 1;
        r7.updatePinnedMessageView(r1);
        goto L_0x2b4e;
    L_0x2693:
        r1 = 0;
        r5 = org.telegram.messenger.NotificationCenter.didReceivedWebpages;
        if (r0 != r5) goto L_0x26f4;
    L_0x2698:
        r0 = r8[r1];
        r0 = (java.util.ArrayList) r0;
        r1 = 0;
        r14 = 0;
    L_0x269e:
        r2 = r0.size();
        if (r1 >= r2) goto L_0x26ed;
    L_0x26a4:
        r2 = r0.get(r1);
        r2 = (org.telegram.tgnet.TLRPC.Message) r2;
        r3 = org.telegram.messenger.MessageObject.getDialogId(r2);
        r5 = r7.dialog_id;
        r8 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1));
        if (r8 == 0) goto L_0x26bb;
    L_0x26b4:
        r5 = r7.mergeDialogId;
        r8 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1));
        if (r8 == 0) goto L_0x26bb;
    L_0x26ba:
        goto L_0x26ea;
    L_0x26bb:
        r5 = r7.messagesDict;
        r8 = r7.dialog_id;
        r6 = (r3 > r8 ? 1 : (r3 == r8 ? 0 : -1));
        if (r6 != 0) goto L_0x26c5;
    L_0x26c3:
        r3 = 0;
        goto L_0x26c6;
    L_0x26c5:
        r3 = 1;
    L_0x26c6:
        r3 = r5[r3];
        r4 = r2.id;
        r3 = r3.get(r4);
        r3 = (org.telegram.messenger.MessageObject) r3;
        if (r3 == 0) goto L_0x26ea;
    L_0x26d2:
        r4 = r3.messageOwner;
        r5 = new org.telegram.tgnet.TLRPC$TL_messageMediaWebPage;
        r5.<init>();
        r4.media = r5;
        r4 = r3.messageOwner;
        r4 = r4.media;
        r2 = r2.media;
        r2 = r2.webpage;
        r4.webpage = r2;
        r2 = 1;
        r3.generateThumbs(r2);
        r14 = 1;
    L_0x26ea:
        r1 = r1 + 1;
        goto L_0x269e;
    L_0x26ed:
        if (r14 == 0) goto L_0x2b4e;
    L_0x26ef:
        r40.updateVisibleRows();
        goto L_0x2b4e;
    L_0x26f4:
        r1 = org.telegram.messenger.NotificationCenter.didReceivedWebpagesInUpdates;
        if (r0 != r1) goto L_0x2729;
    L_0x26f8:
        r0 = r7.foundWebPage;
        if (r0 == 0) goto L_0x2b4e;
    L_0x26fc:
        r1 = 0;
        r0 = r8[r1];
        r0 = (android.util.LongSparseArray) r0;
        r1 = 0;
    L_0x2702:
        r2 = r0.size();
        if (r1 >= r2) goto L_0x2b4e;
    L_0x2708:
        r2 = r0.valueAt(r1);
        r2 = (org.telegram.tgnet.TLRPC.WebPage) r2;
        r3 = r2.id;
        r5 = r7.foundWebPage;
        r5 = r5.id;
        r8 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1));
        if (r8 != 0) goto L_0x2725;
    L_0x2718:
        r0 = r2 instanceof org.telegram.tgnet.TLRPC.TL_webPageEmpty;
        if (r0 != 0) goto L_0x271e;
    L_0x271c:
        r0 = 1;
        goto L_0x271f;
    L_0x271e:
        r0 = 0;
    L_0x271f:
        r5 = 0;
        r7.showFieldPanelForWebPage(r0, r2, r5);
        goto L_0x2b4e;
    L_0x2725:
        r5 = 0;
        r1 = r1 + 1;
        goto L_0x2702;
    L_0x2729:
        r5 = 0;
        r1 = org.telegram.messenger.NotificationCenter.messagesReadContent;
        if (r0 != r1) goto L_0x27a6;
    L_0x272e:
        r0 = r8[r5];
        r0 = (java.util.ArrayList) r0;
        r1 = r7.currentChat;
        r1 = org.telegram.messenger.ChatObject.isChannel(r1);
        if (r1 == 0) goto L_0x273f;
    L_0x273a:
        r1 = r7.currentChat;
        r13 = r1.id;
        goto L_0x2740;
    L_0x273f:
        r13 = 0;
    L_0x2740:
        r1 = 0;
        r14 = 0;
    L_0x2742:
        r2 = r0.size();
        if (r1 >= r2) goto L_0x279f;
    L_0x2748:
        r2 = r0.get(r1);
        r2 = (java.lang.Long) r2;
        r2 = r2.longValue();
        r5 = 32;
        r5 = r2 >> r5;
        r6 = (int) r5;
        if (r6 >= 0) goto L_0x275a;
    L_0x2759:
        r6 = 0;
    L_0x275a:
        if (r6 == r13) goto L_0x275d;
    L_0x275c:
        goto L_0x279c;
    L_0x275d:
        r5 = r7.messagesDict;
        r6 = 0;
        r5 = r5[r6];
        r3 = (int) r2;
        r2 = r5.get(r3);
        r2 = (org.telegram.messenger.MessageObject) r2;
        if (r2 == 0) goto L_0x279c;
    L_0x276b:
        r2.setContentIsRead();
        r2 = r2.messageOwner;
        r2 = r2.mentioned;
        if (r2 == 0) goto L_0x279b;
    L_0x2774:
        r2 = r7.newMentionsCount;
        r3 = 1;
        r2 = r2 - r3;
        r7.newMentionsCount = r2;
        r2 = r7.newMentionsCount;
        if (r2 > 0) goto L_0x2787;
    L_0x277e:
        r5 = 0;
        r7.newMentionsCount = r5;
        r7.hasAllMentionsLocal = r3;
        r7.showMentionDownButton(r5, r3);
        goto L_0x279b;
    L_0x2787:
        r5 = 0;
        r6 = r7.mentiondownButtonCounter;
        if (r6 == 0) goto L_0x279b;
    L_0x278c:
        r8 = new java.lang.Object[r3];
        r2 = java.lang.Integer.valueOf(r2);
        r8[r5] = r2;
        r2 = java.lang.String.format(r4, r8);
        r6.setText(r2);
    L_0x279b:
        r14 = 1;
    L_0x279c:
        r1 = r1 + 1;
        goto L_0x2742;
    L_0x279f:
        if (r14 == 0) goto L_0x2b4e;
    L_0x27a1:
        r40.updateVisibleRows();
        goto L_0x2b4e;
    L_0x27a6:
        r1 = org.telegram.messenger.NotificationCenter.botInfoDidLoad;
        if (r0 != r1) goto L_0x2810;
    L_0x27aa:
        r1 = 1;
        r0 = r8[r1];
        r0 = (java.lang.Integer) r0;
        r0 = r0.intValue();
        r1 = r7.classGuid;
        if (r1 != r0) goto L_0x2b4e;
    L_0x27b7:
        r1 = 0;
        r0 = r8[r1];
        r0 = (org.telegram.tgnet.TLRPC.BotInfo) r0;
        r1 = r7.currentEncryptedChat;
        if (r1 != 0) goto L_0x280b;
    L_0x27c0:
        r1 = r0.commands;
        r1 = r1.isEmpty();
        if (r1 != 0) goto L_0x27d3;
    L_0x27c8:
        r1 = r7.currentChat;
        r1 = org.telegram.messenger.ChatObject.isChannel(r1);
        if (r1 != 0) goto L_0x27d3;
    L_0x27d0:
        r1 = 1;
        r7.hasBotsCommands = r1;
    L_0x27d3:
        r1 = r7.botInfo;
        r2 = r0.user_id;
        r1.put(r2, r0);
        r0 = r7.chatAdapter;
        if (r0 == 0) goto L_0x27e5;
    L_0x27de:
        r1 = r0.botInfoRow;
        r0.notifyItemChanged(r1);
    L_0x27e5:
        r0 = r7.mentionsAdapter;
        if (r0 == 0) goto L_0x2800;
    L_0x27e9:
        r0 = r7.currentChat;
        r0 = org.telegram.messenger.ChatObject.isChannel(r0);
        if (r0 == 0) goto L_0x27f9;
    L_0x27f1:
        r0 = r7.currentChat;
        if (r0 == 0) goto L_0x2800;
    L_0x27f5:
        r0 = r0.megagroup;
        if (r0 == 0) goto L_0x2800;
    L_0x27f9:
        r0 = r7.mentionsAdapter;
        r1 = r7.botInfo;
        r0.setBotInfo(r1);
    L_0x2800:
        r0 = r7.chatActivityEnterView;
        if (r0 == 0) goto L_0x280b;
    L_0x2804:
        r1 = r7.botsCount;
        r2 = r7.hasBotsCommands;
        r0.setBotsCount(r1, r2);
    L_0x280b:
        r40.updateBotButtons();
        goto L_0x2b4e;
    L_0x2810:
        r1 = org.telegram.messenger.NotificationCenter.botKeyboardDidLoad;
        if (r0 != r1) goto L_0x285a;
    L_0x2814:
        r0 = r7.dialog_id;
        r2 = 1;
        r3 = r8[r2];
        r3 = (java.lang.Long) r3;
        r2 = r3.longValue();
        r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1));
        if (r4 != 0) goto L_0x2b4e;
    L_0x2823:
        r1 = 0;
        r0 = r8[r1];
        r0 = (org.telegram.tgnet.TLRPC.Message) r0;
        if (r0 == 0) goto L_0x283c;
    L_0x282a:
        r2 = r7.userBlocked;
        if (r2 != 0) goto L_0x283c;
    L_0x282e:
        r2 = new org.telegram.messenger.MessageObject;
        r3 = r7.currentAccount;
        r2.<init>(r3, r0, r1);
        r7.botButtons = r2;
        r40.checkBotKeyboard();
        goto L_0x2b4e;
    L_0x283c:
        r1 = 0;
        r7.botButtons = r1;
        r0 = r7.chatActivityEnterView;
        if (r0 == 0) goto L_0x2b4e;
    L_0x2843:
        r0 = r7.replyingMessageObject;
        if (r0 == 0) goto L_0x2851;
    L_0x2847:
        r2 = r7.botReplyButtons;
        if (r2 != r0) goto L_0x2851;
    L_0x284b:
        r7.botReplyButtons = r1;
        r1 = 1;
        r7.hideFieldPanel(r1);
    L_0x2851:
        r0 = r7.chatActivityEnterView;
        r1 = r7.botButtons;
        r0.setButtons(r1);
        goto L_0x2b4e;
    L_0x285a:
        r1 = org.telegram.messenger.NotificationCenter.chatSearchResultsAvailable;
        if (r0 != r1) goto L_0x28c4;
    L_0x285e:
        r0 = r7.classGuid;
        r1 = 0;
        r4 = r8[r1];
        r4 = (java.lang.Integer) r4;
        r1 = r4.intValue();
        if (r0 != r1) goto L_0x2b4e;
    L_0x286b:
        r1 = 1;
        r0 = r8[r1];
        r0 = (java.lang.Integer) r0;
        r0 = r0.intValue();
        r1 = 3;
        r1 = r8[r1];
        r1 = (java.lang.Long) r1;
        r1 = r1.longValue();
        if (r0 == 0) goto L_0x2899;
    L_0x287f:
        r4 = 0;
        r5 = 1;
        r9 = r7.dialog_id;
        r6 = (r1 > r9 ? 1 : (r1 == r9 ? 0 : -1));
        if (r6 != 0) goto L_0x288a;
    L_0x2887:
        r24 = 0;
        goto L_0x288c;
    L_0x288a:
        r24 = 1;
    L_0x288c:
        r6 = 0;
        r1 = r40;
        r9 = 2;
        r2 = r0;
        r3 = r4;
        r4 = r5;
        r5 = r24;
        r1.scrollToMessageId(r2, r3, r4, r5, r6);
        goto L_0x289d;
    L_0x2899:
        r9 = 2;
        r40.updateVisibleRows();
    L_0x289d:
        r0 = r8[r9];
        r0 = (java.lang.Integer) r0;
        r0 = r0.intValue();
        r1 = 4;
        r1 = r8[r1];
        r1 = (java.lang.Integer) r1;
        r1 = r1.intValue();
        r2 = 5;
        r2 = r8[r2];
        r2 = (java.lang.Integer) r2;
        r2 = r2.intValue();
        r7.updateSearchButtons(r0, r1, r2);
        r0 = r7.searchItem;
        if (r0 == 0) goto L_0x2b4e;
    L_0x28be:
        r1 = 0;
        r0.setShowSearchProgress(r1);
        goto L_0x2b4e;
    L_0x28c4:
        r1 = 0;
        r9 = 2;
        r2 = org.telegram.messenger.NotificationCenter.chatSearchResultsLoading;
        if (r0 != r2) goto L_0x28e0;
    L_0x28ca:
        r0 = r7.classGuid;
        r1 = r8[r1];
        r1 = (java.lang.Integer) r1;
        r1 = r1.intValue();
        if (r0 != r1) goto L_0x2b4e;
    L_0x28d6:
        r0 = r7.searchItem;
        if (r0 == 0) goto L_0x2b4e;
    L_0x28da:
        r1 = 1;
        r0.setShowSearchProgress(r1);
        goto L_0x2b4e;
    L_0x28e0:
        r1 = org.telegram.messenger.NotificationCenter.didUpdatedMessagesViews;
        if (r0 != r1) goto L_0x2924;
    L_0x28e4:
        r1 = 0;
        r0 = r8[r1];
        r0 = (android.util.SparseArray) r0;
        r1 = r7.dialog_id;
        r2 = (int) r1;
        r0 = r0.get(r2);
        r0 = (android.util.SparseIntArray) r0;
        if (r0 == 0) goto L_0x2b4e;
    L_0x28f4:
        r1 = 0;
        r14 = 0;
    L_0x28f6:
        r2 = r0.size();
        if (r1 >= r2) goto L_0x291d;
    L_0x28fc:
        r2 = r0.keyAt(r1);
        r3 = r7.messagesDict;
        r4 = 0;
        r3 = r3[r4];
        r3 = r3.get(r2);
        r3 = (org.telegram.messenger.MessageObject) r3;
        if (r3 == 0) goto L_0x291a;
    L_0x290d:
        r2 = r0.get(r2);
        r3 = r3.messageOwner;
        r4 = r3.views;
        if (r2 <= r4) goto L_0x291a;
    L_0x2917:
        r3.views = r2;
        r14 = 1;
    L_0x291a:
        r1 = r1 + 1;
        goto L_0x28f6;
    L_0x291d:
        if (r14 == 0) goto L_0x2b4e;
    L_0x291f:
        r40.updateVisibleRows();
        goto L_0x2b4e;
    L_0x2924:
        r1 = org.telegram.messenger.NotificationCenter.peerSettingsDidLoad;
        if (r0 != r1) goto L_0x294b;
    L_0x2928:
        r1 = 0;
        r0 = r8[r1];
        r0 = (java.lang.Long) r0;
        r0 = r0.longValue();
        r2 = r7.dialog_id;
        r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1));
        if (r4 == 0) goto L_0x2942;
    L_0x2937:
        r2 = r7.currentUser;
        if (r2 == 0) goto L_0x2b4e;
    L_0x293b:
        r2 = r2.id;
        r2 = (long) r2;
        r4 = (r2 > r0 ? 1 : (r2 == r0 ? 0 : -1));
        if (r4 != 0) goto L_0x2b4e;
    L_0x2942:
        r0 = r7.paused;
        r1 = 1;
        r0 = r0 ^ r1;
        r7.updateTopPanel(r0);
        goto L_0x2b4e;
    L_0x294b:
        r1 = org.telegram.messenger.NotificationCenter.newDraftReceived;
        if (r0 != r1) goto L_0x2964;
    L_0x294f:
        r1 = 0;
        r0 = r8[r1];
        r0 = (java.lang.Long) r0;
        r0 = r0.longValue();
        r2 = r7.dialog_id;
        r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1));
        if (r4 != 0) goto L_0x2b4e;
    L_0x295e:
        r1 = 1;
        r7.applyDraftMaybe(r1);
        goto L_0x2b4e;
    L_0x2964:
        r1 = org.telegram.messenger.NotificationCenter.userInfoDidLoad;
        if (r0 != r1) goto L_0x29ad;
    L_0x2968:
        r1 = 0;
        r0 = r8[r1];
        r0 = (java.lang.Integer) r0;
        r1 = r7.currentUser;
        if (r1 == 0) goto L_0x2b4e;
    L_0x2971:
        r1 = r1.id;
        r0 = r0.intValue();
        if (r1 != r0) goto L_0x2b4e;
    L_0x2979:
        r1 = 1;
        r0 = r8[r1];
        r0 = (org.telegram.tgnet.TLRPC.UserFull) r0;
        r7.userInfo = r0;
        r0 = r7.headerItem;
        if (r0 == 0) goto L_0x2995;
    L_0x2984:
        r1 = r7.userInfo;
        r1 = r1.phone_calls_available;
        if (r1 == 0) goto L_0x2990;
    L_0x298a:
        r1 = 32;
        r0.showSubItem(r1);
        goto L_0x2995;
    L_0x2990:
        r1 = 32;
        r0.hideSubItem(r1);
    L_0x2995:
        r0 = r8[r9];
        r0 = r0 instanceof org.telegram.messenger.MessageObject;
        if (r0 == 0) goto L_0x29a7;
    L_0x299b:
        r0 = r8[r9];
        r0 = (org.telegram.messenger.MessageObject) r0;
        r7.pinnedMessageObject = r0;
        r1 = 0;
        r7.updatePinnedMessageView(r1);
        goto L_0x2b4e;
    L_0x29a7:
        r1 = 1;
        r7.updatePinnedMessageView(r1);
        goto L_0x2b4e;
    L_0x29ad:
        r1 = org.telegram.messenger.NotificationCenter.didSetNewWallpapper;
        if (r0 != r1) goto L_0x29ee;
    L_0x29b1:
        r0 = r7.fragmentView;
        if (r0 == 0) goto L_0x2b4e;
    L_0x29b5:
        r0 = r7.contentView;
        r1 = org.telegram.ui.ActionBar.Theme.getCachedWallpaper();
        r2 = org.telegram.ui.ActionBar.Theme.isWallpaperMotion();
        r0.setBackgroundImage(r1, r2);
        r0 = r7.progressView2;
        r0 = r0.getBackground();
        r1 = org.telegram.ui.ActionBar.Theme.colorFilter;
        r0.setColorFilter(r1);
        r0 = r7.emptyView;
        if (r0 == 0) goto L_0x29da;
    L_0x29d1:
        r0 = r0.getBackground();
        r1 = org.telegram.ui.ActionBar.Theme.colorFilter;
        r0.setColorFilter(r1);
    L_0x29da:
        r0 = r7.bigEmptyView;
        if (r0 == 0) goto L_0x29e7;
    L_0x29de:
        r0 = r0.getBackground();
        r1 = org.telegram.ui.ActionBar.Theme.colorFilter;
        r0.setColorFilter(r1);
    L_0x29e7:
        r0 = r7.chatListView;
        r0.invalidateViews();
        goto L_0x2b4e;
    L_0x29ee:
        r1 = org.telegram.messenger.NotificationCenter.channelRightsUpdated;
        if (r0 != r1) goto L_0x2a12;
    L_0x29f2:
        r1 = 0;
        r0 = r8[r1];
        r0 = (org.telegram.tgnet.TLRPC.Chat) r0;
        r1 = r7.currentChat;
        if (r1 == 0) goto L_0x2b4e;
    L_0x29fb:
        r2 = r0.id;
        r1 = r1.id;
        if (r2 != r1) goto L_0x2b4e;
    L_0x2a01:
        r1 = r7.chatActivityEnterView;
        if (r1 == 0) goto L_0x2b4e;
    L_0x2a05:
        r7.currentChat = r0;
        r1.checkChannelRights();
        r40.checkRaiseSensors();
        r40.updateSecretStatus();
        goto L_0x2b4e;
    L_0x2a12:
        r1 = org.telegram.messenger.NotificationCenter.updateMentionsCount;
        if (r0 != r1) goto L_0x2a56;
    L_0x2a16:
        r0 = r7.dialog_id;
        r2 = 0;
        r3 = r8[r2];
        r3 = (java.lang.Long) r3;
        r2 = r3.longValue();
        r5 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1));
        if (r5 != 0) goto L_0x2b4e;
    L_0x2a25:
        r1 = 1;
        r0 = r8[r1];
        r0 = (java.lang.Integer) r0;
        r0 = r0.intValue();
        r2 = r7.newMentionsCount;
        if (r2 <= r0) goto L_0x2b4e;
    L_0x2a32:
        r7.newMentionsCount = r0;
        r0 = r7.newMentionsCount;
        if (r0 > 0) goto L_0x2a42;
    L_0x2a38:
        r2 = 0;
        r7.newMentionsCount = r2;
        r7.hasAllMentionsLocal = r1;
        r7.showMentionDownButton(r2, r1);
        goto L_0x2b4e;
    L_0x2a42:
        r2 = 0;
        r3 = r7.mentiondownButtonCounter;
        r1 = new java.lang.Object[r1];
        r0 = java.lang.Integer.valueOf(r0);
        r1[r2] = r0;
        r0 = java.lang.String.format(r4, r1);
        r3.setText(r0);
        goto L_0x2b4e;
    L_0x2a56:
        r2 = 0;
        r1 = org.telegram.messenger.NotificationCenter.audioRecordTooShort;
        if (r0 != r1) goto L_0x2a68;
    L_0x2a5b:
        r0 = r8[r2];
        r0 = (java.lang.Boolean) r0;
        r0 = r0.booleanValue();
        r7.showVoiceHint(r2, r0);
        goto L_0x2b4e;
    L_0x2a68:
        r1 = org.telegram.messenger.NotificationCenter.videoLoadingStateChanged;
        if (r0 != r1) goto L_0x2b4e;
    L_0x2a6c:
        r0 = r7.chatListView;
        if (r0 == 0) goto L_0x2b4e;
    L_0x2a70:
        r1 = r8[r2];
        r1 = (java.lang.String) r1;
        r0 = r0.getChildCount();
        r2 = 0;
    L_0x2a79:
        if (r2 >= r0) goto L_0x2b4e;
    L_0x2a7b:
        r3 = r7.chatListView;
        r3 = r3.getChildAt(r2);
        r4 = r3 instanceof org.telegram.ui.Cells.ChatMessageCell;
        if (r4 != 0) goto L_0x2a86;
    L_0x2a85:
        goto L_0x2a9e;
    L_0x2a86:
        r3 = (org.telegram.ui.Cells.ChatMessageCell) r3;
        r4 = r3.getStreamingMedia();
        if (r4 != 0) goto L_0x2a8f;
    L_0x2a8e:
        goto L_0x2a9e;
    L_0x2a8f:
        r4 = org.telegram.messenger.FileLoader.getAttachFileName(r4);
        r4 = r4.equals(r1);
        if (r4 == 0) goto L_0x2a9e;
    L_0x2a99:
        r4 = 1;
        r5 = 0;
        r3.updateButtonState(r5, r4, r5);
    L_0x2a9e:
        r2 = r2 + 1;
        goto L_0x2a79;
    L_0x2aa1:
        r1 = org.telegram.messenger.NotificationCenter.messagePlayingDidReset;
        if (r0 != r1) goto L_0x2aa8;
    L_0x2aa5:
        r40.destroyTextureView();
    L_0x2aa8:
        r0 = r7.chatListView;
        if (r0 == 0) goto L_0x2b4e;
    L_0x2aac:
        r0 = r0.getChildCount();
        r1 = 0;
    L_0x2ab1:
        if (r1 >= r0) goto L_0x2b1c;
    L_0x2ab3:
        r2 = r7.chatListView;
        r2 = r2.getChildAt(r1);
        r3 = r2 instanceof org.telegram.ui.Cells.ChatMessageCell;
        if (r3 == 0) goto L_0x2b19;
    L_0x2abd:
        r2 = (org.telegram.ui.Cells.ChatMessageCell) r2;
        r3 = r2.getMessageObject();
        if (r3 == 0) goto L_0x2b19;
    L_0x2ac5:
        r4 = r3.isVoice();
        if (r4 != 0) goto L_0x2b14;
    L_0x2acb:
        r4 = r3.isMusic();
        if (r4 == 0) goto L_0x2ad2;
    L_0x2ad1:
        goto L_0x2b14;
    L_0x2ad2:
        r4 = r3.isVideo();
        if (r4 == 0) goto L_0x2aff;
    L_0x2ad8:
        r4 = 1;
        r5 = 0;
        r2.updateButtonState(r5, r4, r5);
        r4 = org.telegram.messenger.MediaController.getInstance();
        r4 = r4.isPlayingMessage(r3);
        if (r4 != 0) goto L_0x2b19;
    L_0x2ae7:
        r4 = org.telegram.messenger.MediaController.getInstance();
        r3 = r4.isGoingToShowMessageObject(r3);
        if (r3 != 0) goto L_0x2b19;
    L_0x2af1:
        r2 = r2.getPhotoImage();
        r2 = r2.getAnimation();
        if (r2 == 0) goto L_0x2b19;
    L_0x2afb:
        r2.start();
        goto L_0x2b19;
    L_0x2aff:
        r4 = r3.isRoundVideo();
        if (r4 == 0) goto L_0x2b19;
    L_0x2b05:
        r4 = org.telegram.messenger.MediaController.getInstance();
        r3 = r4.isPlayingMessage(r3);
        if (r3 != 0) goto L_0x2b19;
    L_0x2b0f:
        r3 = 1;
        r2.checkVideoPlayback(r3);
        goto L_0x2b19;
    L_0x2b14:
        r3 = 1;
        r4 = 0;
        r2.updateButtonState(r4, r3, r4);
    L_0x2b19:
        r1 = r1 + 1;
        goto L_0x2ab1;
    L_0x2b1c:
        r0 = r7.mentionListView;
        r0 = r0.getChildCount();
        r1 = 0;
    L_0x2b23:
        if (r1 >= r0) goto L_0x2b4e;
    L_0x2b25:
        r2 = r7.mentionListView;
        r2 = r2.getChildAt(r1);
        r3 = r2 instanceof org.telegram.ui.Cells.ContextLinkCell;
        if (r3 == 0) goto L_0x2b49;
    L_0x2b2f:
        r2 = (org.telegram.ui.Cells.ContextLinkCell) r2;
        r3 = r2.getMessageObject();
        if (r3 == 0) goto L_0x2b49;
    L_0x2b37:
        r4 = r3.isVoice();
        if (r4 != 0) goto L_0x2b43;
    L_0x2b3d:
        r3 = r3.isMusic();
        if (r3 == 0) goto L_0x2b49;
    L_0x2b43:
        r3 = 1;
        r4 = 0;
        r2.updateButtonState(r4, r3);
        goto L_0x2b4b;
    L_0x2b49:
        r3 = 1;
        r4 = 0;
    L_0x2b4b:
        r1 = r1 + 1;
        goto L_0x2b23;
    L_0x2b4e:
        return;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.didReceivedNotification(int, int, java.lang.Object[]):void");
    }

    public /* synthetic */ void lambda$didReceivedNotification$57$ChatActivity() {
        ActionBarLayout actionBarLayout = this.parentLayout;
        if (actionBarLayout != null) {
            actionBarLayout.resumeDelayedFragmentAnimation();
        }
    }

    private void checkSecretMessageForLocation(MessageObject messageObject) {
        if (messageObject.type == 4 && !this.locationAlertShown && !SharedConfig.isSecretMapPreviewSet()) {
            this.locationAlertShown = true;
            AlertsCreator.showSecretLocationAlert(getParentActivity(), this.currentAccount, new -$$Lambda$ChatActivity$Ph3hgVoYZPvj4tWeFbg1CEJQdWc(this), true);
        }
    }

    public /* synthetic */ void lambda$checkSecretMessageForLocation$58$ChatActivity() {
        int childCount = this.chatListView.getChildCount();
        for (int i = 0; i < childCount; i++) {
            View childAt = this.chatListView.getChildAt(i);
            if (childAt instanceof ChatMessageCell) {
                ChatMessageCell chatMessageCell = (ChatMessageCell) childAt;
                if (chatMessageCell.getMessageObject().type == 4) {
                    chatMessageCell.forceResetMessageObject();
                }
            }
        }
    }

    private void clearHistory(boolean z) {
        int i;
        ChatActivityAdapter chatActivityAdapter;
        this.messages.clear();
        this.waitingForLoad.clear();
        this.messagesByDays.clear();
        this.groupedMessagesMap.clear();
        for (i = 1; i >= 0; i--) {
            this.messagesDict[i].clear();
            if (this.currentEncryptedChat == null) {
                this.maxMessageId[i] = Integer.MAX_VALUE;
                this.minMessageId[i] = Integer.MIN_VALUE;
            } else {
                this.maxMessageId[i] = Integer.MIN_VALUE;
                this.minMessageId[i] = Integer.MAX_VALUE;
            }
            this.maxDate[i] = Integer.MIN_VALUE;
            this.minDate[i] = 0;
            this.selectedMessagesIds[i].clear();
            this.selectedMessagesCanCopyIds[i].clear();
            this.selectedMessagesCanStarIds[i].clear();
        }
        hideActionMode();
        updatePinnedMessageView(true);
        if (this.botButtons != null) {
            this.botButtons = null;
            ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
            if (chatActivityEnterView != null) {
                chatActivityEnterView.setButtons(null, false);
            }
        }
        i = 4;
        if (z) {
            chatActivityAdapter = this.chatAdapter;
            if (chatActivityAdapter != null) {
                FrameLayout frameLayout = this.progressView;
                if (chatActivityAdapter.botInfoRow == -1) {
                    i = 0;
                }
                frameLayout.setVisibility(i);
                this.chatListView.setEmptyView(null);
            }
            for (int i2 = 0; i2 < 2; i2++) {
                this.endReached[i2] = false;
                this.cacheEndReached[i2] = false;
                this.forwardEndReached[i2] = true;
            }
            this.first = true;
            this.firstLoading = true;
            this.loading = true;
            this.startLoadFromMessageId = 0;
            this.needSelectFromMessageId = false;
            this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
            MessagesController messagesController = getMessagesController();
            long j = this.dialog_id;
            int i3 = AndroidUtilities.isTablet() ? 30 : 20;
            int i4 = this.classGuid;
            boolean isChannel = ChatObject.isChannel(this.currentChat);
            int i5 = this.lastLoadIndex;
            this.lastLoadIndex = i5 + 1;
            messagesController.loadMessages(j, i3, 0, 0, true, 0, i4, 2, 0, isChannel, i5);
        } else {
            FrameLayout frameLayout2 = this.progressView;
            if (frameLayout2 != null) {
                frameLayout2.setVisibility(4);
                this.chatListView.setEmptyView(this.emptyViewContainer);
            }
        }
        chatActivityAdapter = this.chatAdapter;
        if (chatActivityAdapter != null) {
            chatActivityAdapter.notifyDataSetChanged();
        }
        if (this.currentEncryptedChat == null) {
            User user = this.currentUser;
            if (user != null && user.bot && this.botUser == null) {
                this.botUser = "";
                updateBottomOverlay();
            }
        }
    }

    public boolean processSwitchButton(TL_keyboardButtonSwitchInline tL_keyboardButtonSwitchInline) {
        if (this.inlineReturn == 0 || tL_keyboardButtonSwitchInline.same_peer || this.parentLayout == null) {
            return false;
        }
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("@");
        stringBuilder.append(this.currentUser.username);
        stringBuilder.append(" ");
        stringBuilder.append(tL_keyboardButtonSwitchInline.query);
        String stringBuilder2 = stringBuilder.toString();
        if (this.inlineReturn == this.dialog_id) {
            this.inlineReturn = 0;
            this.chatActivityEnterView.setFieldText(stringBuilder2);
        } else {
            getMediaDataController().saveDraft(this.inlineReturn, stringBuilder2, null, null, false);
            if (this.parentLayout.fragmentsStack.size() > 1) {
                ArrayList arrayList = this.parentLayout.fragmentsStack;
                BaseFragment baseFragment = (BaseFragment) arrayList.get(arrayList.size() - 2);
                if ((baseFragment instanceof ChatActivity) && ((ChatActivity) baseFragment).dialog_id == this.inlineReturn) {
                    finishFragment();
                } else {
                    Bundle bundle = new Bundle();
                    long j = this.inlineReturn;
                    int i = (int) j;
                    int i2 = (int) (j >> 32);
                    if (i == 0) {
                        bundle.putInt("enc_id", i2);
                    } else if (i > 0) {
                        bundle.putInt("user_id", i);
                    } else if (i < 0) {
                        bundle.putInt("chat_id", -i);
                    }
                    presentFragment(new ChatActivity(bundle), true);
                }
            }
        }
        return true;
    }

    private void migrateToNewChat(MessageObject messageObject) {
        ActionBarLayout actionBarLayout = this.parentLayout;
        if (actionBarLayout != null) {
            BaseFragment baseFragment;
            int i = messageObject.messageOwner.action.channel_id;
            if (actionBarLayout.fragmentsStack.size() > 0) {
                ArrayList arrayList = this.parentLayout.fragmentsStack;
                baseFragment = (BaseFragment) arrayList.get(arrayList.size() - 1);
            } else {
                baseFragment = null;
            }
            int indexOf = this.parentLayout.fragmentsStack.indexOf(this);
            ActionBarLayout actionBarLayout2 = this.parentLayout;
            if (indexOf <= 0 || (baseFragment instanceof ChatActivity) || (baseFragment instanceof ProfileActivity) || !this.currentChat.creator) {
                AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$vsxOcWFlXCHlvqT3wEHaxSvUZa0(this, baseFragment, messageObject, actionBarLayout2));
            } else {
                int size = actionBarLayout2.fragmentsStack.size() - 1;
                while (indexOf < size) {
                    baseFragment = (BaseFragment) actionBarLayout2.fragmentsStack.get(indexOf);
                    String str = "chat_id";
                    Bundle bundle;
                    if (baseFragment instanceof ChatActivity) {
                        bundle = new Bundle();
                        bundle.putInt(str, i);
                        actionBarLayout2.addFragmentToStack(new ChatActivity(bundle), indexOf);
                        baseFragment.removeSelfFromStack();
                    } else if (baseFragment instanceof ProfileActivity) {
                        bundle = new Bundle();
                        bundle.putInt(str, i);
                        actionBarLayout2.addFragmentToStack(new ProfileActivity(bundle), indexOf);
                        baseFragment.removeSelfFromStack();
                    } else if (baseFragment instanceof ChatEditActivity) {
                        bundle = new Bundle();
                        bundle.putInt(str, i);
                        actionBarLayout2.addFragmentToStack(new ChatEditActivity(bundle), indexOf);
                        baseFragment.removeSelfFromStack();
                    } else if (baseFragment instanceof ChatUsersActivity) {
                        if (!((ChatUsersActivity) baseFragment).hasSelectType()) {
                            bundle = baseFragment.getArguments();
                            bundle.putInt(str, i);
                            actionBarLayout2.addFragmentToStack(new ChatUsersActivity(bundle), indexOf);
                        }
                        baseFragment.removeSelfFromStack();
                    }
                    indexOf++;
                }
            }
            AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$iATSC3ENIxyl5t1DBrYoJiDGWJQ(this, i), 1000);
        }
    }

    public /* synthetic */ void lambda$migrateToNewChat$59$ChatActivity(BaseFragment baseFragment, MessageObject messageObject, ActionBarLayout actionBarLayout) {
        if (baseFragment != null) {
            getNotificationCenter().removeObserver(baseFragment, NotificationCenter.closeChats);
        }
        getNotificationCenter().postNotificationName(NotificationCenter.closeChats, new Object[0]);
        Bundle bundle = new Bundle();
        bundle.putInt("chat_id", messageObject.messageOwner.action.channel_id);
        actionBarLayout.presentFragment(new ChatActivity(bundle), true);
    }

    public /* synthetic */ void lambda$migrateToNewChat$60$ChatActivity(int i) {
        getMessagesController().loadFullChat(i, 0, true);
    }

    private void addToPolls(MessageObject messageObject, MessageObject messageObject2) {
        long pollId = messageObject.getPollId();
        if (pollId != 0) {
            ArrayList arrayList = (ArrayList) this.polls.get(pollId);
            if (arrayList == null) {
                arrayList = new ArrayList();
                this.polls.put(pollId, arrayList);
            }
            arrayList.add(messageObject);
            if (messageObject2 != null) {
                arrayList.remove(messageObject2);
            }
        }
    }

    private void updateSearchButtons(int i, int i2, int i3) {
        ImageView imageView = this.searchUpButton;
        if (imageView != null) {
            imageView.setEnabled((i & 1) != 0);
            this.searchDownButton.setEnabled((i & 2) != 0);
            ImageView imageView2 = this.searchUpButton;
            float f = 1.0f;
            imageView2.setAlpha(imageView2.isEnabled() ? 1.0f : 0.5f);
            imageView2 = this.searchDownButton;
            if (!imageView2.isEnabled()) {
                f = 0.5f;
            }
            imageView2.setAlpha(f);
            if (i3 < 0) {
                this.searchCountText.setText("");
            } else if (i3 == 0) {
                this.searchCountText.setText(LocaleController.getString("NoResult", NUM));
            } else {
                this.searchCountText.setText(LocaleController.formatString("Of", NUM, Integer.valueOf(i2 + 1), Integer.valueOf(i3)));
            }
        }
    }

    public boolean needDelayOpenAnimation() {
        return this.firstLoading;
    }

    /* Access modifiers changed, original: protected */
    public void onBecomeFullyHidden() {
        UndoView undoView = this.undoView;
        if (undoView != null) {
            undoView.hide(true, 0);
        }
    }

    public void onTransitionAnimationStart(boolean z, boolean z2) {
        if (z) {
            getNotificationCenter().setAllowedNotificationsDutingAnimation(new int[]{NotificationCenter.chatInfoDidLoad, NotificationCenter.dialogsNeedReload, NotificationCenter.closeChats, NotificationCenter.messagesDidLoad, NotificationCenter.botKeyboardDidLoad, NotificationCenter.userInfoDidLoad, NotificationCenter.needDeleteDialog});
            this.openAnimationEnded = false;
        } else {
            ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
            if (chatActivityEnterView != null) {
                chatActivityEnterView.onBeginHide();
            }
        }
        getNotificationCenter().setAnimationInProgress(true);
    }

    public void onTransitionAnimationEnd(boolean z, boolean z2) {
        int i = 0;
        getNotificationCenter().setAnimationInProgress(false);
        if (z) {
            this.openAnimationEnded = true;
            if (VERSION.SDK_INT >= 21) {
                createChatAttachView();
            }
            if (this.chatActivityEnterView.hasRecordVideo() && !this.chatActivityEnterView.isSendButtonVisible()) {
                Chat chat = this.currentChat;
                Object obj = (chat == null || !ChatObject.isChannel(chat) || this.currentChat.megagroup) ? null : 1;
                SharedPreferences globalMainSettings = MessagesController.getGlobalMainSettings();
                String str = obj != null ? "needShowRoundHintChannel" : "needShowRoundHint";
                if (globalMainSettings.getBoolean(str, true) && Utilities.random.nextFloat() < 0.2f) {
                    showVoiceHint(false, this.chatActivityEnterView.isInVideoMode());
                    globalMainSettings.edit().putBoolean(str, false).commit();
                }
            }
            if (!z2) {
                ActionBarLayout actionBarLayout = this.parentLayout;
                if (actionBarLayout != null) {
                    int size = actionBarLayout.fragmentsStack.size() - 1;
                    while (i < size) {
                        BaseFragment baseFragment = (BaseFragment) this.parentLayout.fragmentsStack.get(i);
                        if (baseFragment != this && (baseFragment instanceof ChatActivity) && ((ChatActivity) baseFragment).dialog_id == this.dialog_id) {
                            baseFragment.removeSelfFromStack();
                            return;
                        }
                        i++;
                    }
                }
            }
        }
    }

    /* Access modifiers changed, original: protected */
    public void onDialogDismiss(Dialog dialog) {
        Dialog dialog2 = this.closeChatDialog;
        if (dialog2 != null && dialog == dialog2) {
            getMessagesController().deleteDialog(this.dialog_id, 0);
            ActionBarLayout actionBarLayout = this.parentLayout;
            if (!(actionBarLayout == null || actionBarLayout.fragmentsStack.isEmpty())) {
                ArrayList arrayList = this.parentLayout.fragmentsStack;
                if (arrayList.get(arrayList.size() - 1) != this) {
                    arrayList = this.parentLayout.fragmentsStack;
                    BaseFragment baseFragment = (BaseFragment) arrayList.get(arrayList.size() - 1);
                    removeSelfFromStack();
                    baseFragment.finishFragment();
                    return;
                }
            }
            finishFragment();
        }
    }

    /* JADX WARNING: Missing block: B:12:0x0031, code skipped:
            if (r9.findItem(16908321) != null) goto L_0x0035;
     */
    public boolean extendActionMode(android.view.Menu r9) {
        /*
        r8 = this;
        r0 = org.telegram.ui.PhotoViewer.hasInstance();
        r1 = 16908321; // 0x1020021 float:2.3877321E-38 double:8.3538205E-317;
        r2 = 1;
        if (r0 == 0) goto L_0x0025;
    L_0x000a:
        r0 = org.telegram.ui.PhotoViewer.getInstance();
        r0 = r0.isVisible();
        if (r0 == 0) goto L_0x0025;
    L_0x0014:
        r0 = org.telegram.ui.PhotoViewer.getInstance();
        r0 = r0.getSelectiongLength();
        if (r0 == 0) goto L_0x0024;
    L_0x001e:
        r0 = r9.findItem(r1);
        if (r0 != 0) goto L_0x0035;
    L_0x0024:
        return r2;
    L_0x0025:
        r0 = r8.chatActivityEnterView;
        r0 = r0.getSelectionLength();
        if (r0 == 0) goto L_0x0144;
    L_0x002d:
        r0 = r9.findItem(r1);
        if (r0 != 0) goto L_0x0035;
    L_0x0033:
        goto L_0x0144;
    L_0x0035:
        r0 = android.os.Build.VERSION.SDK_INT;
        r1 = 23;
        if (r0 < r1) goto L_0x0041;
    L_0x003b:
        r0 = 16908341; // 0x1020035 float:2.3877378E-38 double:8.3538304E-317;
        r9.removeItem(r0);
    L_0x0041:
        r0 = new android.text.SpannableStringBuilder;
        r1 = NUM; // 0x7f0d01cc float:1.8743048E38 double:1.053130005E-314;
        r3 = "Bold";
        r1 = org.telegram.messenger.LocaleController.getString(r3, r1);
        r0.<init>(r1);
        r1 = new org.telegram.ui.Components.TypefaceSpan;
        r3 = "fonts/rmedium.ttf";
        r3 = org.telegram.messenger.AndroidUtilities.getTypeface(r3);
        r1.<init>(r3);
        r3 = r0.length();
        r4 = 33;
        r5 = 0;
        r0.setSpan(r1, r5, r3, r4);
        r1 = NUM; // 0x7var_ float:1.8077742E38 double:1.052967941E-314;
        r3 = 6;
        r6 = NUM; // 0x7var_ float:1.8077744E38 double:1.0529679414E-314;
        r9.add(r6, r1, r3, r0);
        r0 = new android.text.SpannableStringBuilder;
        r1 = NUM; // 0x7f0d054a float:1.874486E38 double:1.0531304465E-314;
        r3 = "Italic";
        r1 = org.telegram.messenger.LocaleController.getString(r3, r1);
        r0.<init>(r1);
        r1 = new org.telegram.ui.Components.TypefaceSpan;
        r3 = "fonts/ritalic.ttf";
        r3 = org.telegram.messenger.AndroidUtilities.getTypeface(r3);
        r1.<init>(r3);
        r3 = r0.length();
        r0.setSpan(r1, r5, r3, r4);
        r1 = NUM; // 0x7var_ float:1.8077746E38 double:1.052967942E-314;
        r3 = 7;
        r9.add(r6, r1, r3, r0);
        r0 = new android.text.SpannableStringBuilder;
        r1 = NUM; // 0x7f0d0608 float:1.8745246E38 double:1.0531305404E-314;
        r3 = "Mono";
        r1 = org.telegram.messenger.LocaleController.getString(r3, r1);
        r0.<init>(r1);
        r1 = new org.telegram.ui.Components.TypefaceSpan;
        r3 = android.graphics.Typeface.MONOSPACE;
        r1.<init>(r3);
        r3 = r0.length();
        r0.setSpan(r1, r5, r3, r4);
        r1 = NUM; // 0x7var_b float:1.807775E38 double:1.052967943E-314;
        r3 = 8;
        r9.add(r6, r1, r3, r0);
        r0 = r8.currentEncryptedChat;
        if (r0 == 0) goto L_0x00c9;
    L_0x00bd:
        if (r0 == 0) goto L_0x0122;
    L_0x00bf:
        r0 = r0.layer;
        r0 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r0);
        r1 = 101; // 0x65 float:1.42E-43 double:5.0E-322;
        if (r0 < r1) goto L_0x0122;
    L_0x00c9:
        r0 = new android.text.SpannableStringBuilder;
        r1 = NUM; // 0x7f0d09f7 float:1.8747289E38 double:1.053131038E-314;
        r7 = "Strike";
        r1 = org.telegram.messenger.LocaleController.getString(r7, r1);
        r0.<init>(r1);
        r1 = new org.telegram.ui.Components.TextStyleSpan$TextStyleRun;
        r1.<init>();
        r7 = r1.flags;
        r3 = r3 | r7;
        r1.flags = r3;
        r3 = new org.telegram.ui.Components.TextStyleSpan;
        r3.<init>(r1);
        r1 = r0.length();
        r0.setSpan(r3, r5, r1, r4);
        r1 = NUM; // 0x7var_d float:1.8077754E38 double:1.052967944E-314;
        r3 = 9;
        r9.add(r6, r1, r3, r0);
        r0 = new android.text.SpannableStringBuilder;
        r1 = NUM; // 0x7f0d0a5f float:1.87475E38 double:1.0531310893E-314;
        r3 = "Underline";
        r1 = org.telegram.messenger.LocaleController.getString(r3, r1);
        r0.<init>(r1);
        r1 = new org.telegram.ui.Components.TextStyleSpan$TextStyleRun;
        r1.<init>();
        r3 = r1.flags;
        r3 = r3 | 16;
        r1.flags = r3;
        r3 = new org.telegram.ui.Components.TextStyleSpan;
        r3.<init>(r1);
        r1 = r0.length();
        r0.setSpan(r3, r5, r1, r4);
        r1 = NUM; // 0x7var_e float:1.8077756E38 double:1.0529679444E-314;
        r3 = 10;
        r9.add(r6, r1, r3, r0);
    L_0x0122:
        r0 = NUM; // 0x7var_a float:1.8077748E38 double:1.0529679424E-314;
        r1 = 11;
        r3 = NUM; // 0x7f0d0316 float:1.8743717E38 double:1.053130168E-314;
        r4 = "CreateLink";
        r3 = org.telegram.messenger.LocaleController.getString(r4, r3);
        r9.add(r6, r0, r1, r3);
        r0 = NUM; // 0x7var_c float:1.8077752E38 double:1.0529679434E-314;
        r1 = 12;
        r3 = NUM; // 0x7f0d08c7 float:1.8746672E38 double:1.0531308877E-314;
        r4 = "Regular";
        r3 = org.telegram.messenger.LocaleController.getString(r4, r3);
        r9.add(r6, r0, r1, r3);
    L_0x0144:
        return r2;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.extendActionMode(android.view.Menu):boolean");
    }

    /* JADX WARNING: Removed duplicated region for block: B:107:0x0249  */
    /* JADX WARNING: Missing block: B:33:0x0092, code skipped:
            if (r0.linked_chat_id != 0) goto L_0x0094;
     */
    private void updateBottomOverlay() {
        /*
        r6 = this;
        r0 = r6.bottomOverlayChatText;
        if (r0 != 0) goto L_0x0005;
    L_0x0004:
        return;
    L_0x0005:
        r0 = r6.currentChat;
        r1 = 8;
        r2 = 1;
        r3 = 0;
        if (r0 == 0) goto L_0x00c5;
    L_0x000d:
        r0 = org.telegram.messenger.ChatObject.isChannel(r0);
        if (r0 == 0) goto L_0x00b5;
    L_0x0013:
        r0 = r6.currentChat;
        r4 = r0 instanceof org.telegram.tgnet.TLRPC.TL_channelForbidden;
        if (r4 != 0) goto L_0x00b5;
    L_0x0019:
        r0 = org.telegram.messenger.ChatObject.isNotInChat(r0);
        if (r0 == 0) goto L_0x0043;
    L_0x001f:
        r0 = r6.getMessagesController();
        r4 = r6.currentChat;
        r4 = r4.id;
        r0 = r0.isJoiningChannel(r4);
        if (r0 == 0) goto L_0x0031;
    L_0x002d:
        r6.showBottomOverlayProgress(r2, r3);
        goto L_0x007a;
    L_0x0031:
        r0 = r6.bottomOverlayChatText;
        r4 = NUM; // 0x7f0d023a float:1.874327E38 double:1.053130059E-314;
        r5 = "ChannelJoin";
        r4 = org.telegram.messenger.LocaleController.getString(r5, r4);
        r0.setText(r4);
        r6.showBottomOverlayProgress(r3, r3);
        goto L_0x007a;
    L_0x0043:
        r0 = r6.getMessagesController();
        r4 = r6.dialog_id;
        r0 = r0.isDialogMuted(r4);
        if (r0 != 0) goto L_0x005e;
    L_0x004f:
        r0 = r6.bottomOverlayChatText;
        r4 = NUM; // 0x7f0d0254 float:1.8743324E38 double:1.053130072E-314;
        r5 = "ChannelMute";
        r4 = org.telegram.messenger.LocaleController.getString(r5, r4);
        r0.setText(r4);
        goto L_0x006c;
    L_0x005e:
        r0 = r6.bottomOverlayChatText;
        r4 = NUM; // 0x7f0d0270 float:1.874338E38 double:1.053130086E-314;
        r5 = "ChannelUnmute";
        r4 = org.telegram.messenger.LocaleController.getString(r5, r4);
        r0.setText(r4);
    L_0x006c:
        r0 = r6.bottomOverlayProgress;
        r0 = r0.getTag();
        if (r0 == 0) goto L_0x0076;
    L_0x0074:
        r0 = 1;
        goto L_0x0077;
    L_0x0076:
        r0 = 0;
    L_0x0077:
        r6.showBottomOverlayProgress(r3, r0);
    L_0x007a:
        r0 = r6.currentChat;
        r0 = org.telegram.messenger.ChatObject.isNotInChat(r0);
        if (r0 != 0) goto L_0x00ae;
    L_0x0082:
        r0 = r6.currentChat;
        r4 = r0.megagroup;
        if (r4 != 0) goto L_0x00ae;
    L_0x0088:
        r0 = r0.has_link;
        if (r0 != 0) goto L_0x0094;
    L_0x008c:
        r0 = r6.chatInfo;
        if (r0 == 0) goto L_0x00ae;
    L_0x0090:
        r0 = r0.linked_chat_id;
        if (r0 == 0) goto L_0x00ae;
    L_0x0094:
        r0 = r6.bottomOverlayChatText2;
        r4 = NUM; // 0x7f0d0235 float:1.874326E38 double:1.0531300567E-314;
        r5 = "ChannelDiscuss";
        r4 = org.telegram.messenger.LocaleController.getString(r5, r4);
        r0.setText(r4);
        r0 = r6.bottomOverlayChatText2;
        r0.setVisibility(r3);
        r0 = r6.bottomOverlayChatText2;
        r0.updateCounter();
        goto L_0x014c;
    L_0x00ae:
        r0 = r6.bottomOverlayChatText2;
        r0.setVisibility(r1);
        goto L_0x014c;
    L_0x00b5:
        r0 = r6.bottomOverlayChatText;
        r4 = NUM; // 0x7f0d0373 float:1.8743906E38 double:1.053130214E-314;
        r5 = "DeleteThisGroup";
        r4 = org.telegram.messenger.LocaleController.getString(r5, r4);
        r0.setText(r4);
        goto L_0x014c;
    L_0x00c5:
        r6.showBottomOverlayProgress(r3, r3);
        r0 = r6.userBlocked;
        if (r0 == 0) goto L_0x010f;
    L_0x00cc:
        r0 = r6.currentUser;
        r0 = r0.bot;
        if (r0 == 0) goto L_0x00e1;
    L_0x00d2:
        r0 = r6.bottomOverlayChatText;
        r4 = NUM; // 0x7f0d01da float:1.8743076E38 double:1.0531300117E-314;
        r5 = "BotUnblock";
        r4 = org.telegram.messenger.LocaleController.getString(r5, r4);
        r0.setText(r4);
        goto L_0x00ef;
    L_0x00e1:
        r0 = r6.bottomOverlayChatText;
        r4 = NUM; // 0x7f0d0a5d float:1.8747496E38 double:1.0531310883E-314;
        r5 = "Unblock";
        r4 = org.telegram.messenger.LocaleController.getString(r5, r4);
        r0.setText(r4);
    L_0x00ef:
        r0 = r6.botButtons;
        if (r0 == 0) goto L_0x014c;
    L_0x00f3:
        r0 = 0;
        r6.botButtons = r0;
        r4 = r6.chatActivityEnterView;
        if (r4 == 0) goto L_0x014c;
    L_0x00fa:
        r4 = r6.replyingMessageObject;
        if (r4 == 0) goto L_0x0107;
    L_0x00fe:
        r5 = r6.botReplyButtons;
        if (r5 != r4) goto L_0x0107;
    L_0x0102:
        r6.botReplyButtons = r0;
        r6.hideFieldPanel(r3);
    L_0x0107:
        r0 = r6.chatActivityEnterView;
        r4 = r6.botButtons;
        r0.setButtons(r4, r3);
        goto L_0x014c;
    L_0x010f:
        r0 = r6.botUser;
        if (r0 == 0) goto L_0x013e;
    L_0x0113:
        r0 = r6.currentUser;
        r0 = r0.bot;
        if (r0 == 0) goto L_0x013e;
    L_0x0119:
        r0 = r6.bottomOverlayChatText;
        r4 = NUM; // 0x7f0d01d6 float:1.8743068E38 double:1.05313001E-314;
        r5 = "BotStart";
        r4 = org.telegram.messenger.LocaleController.getString(r5, r4);
        r0.setText(r4);
        r0 = r6.chatActivityEnterView;
        r0.hidePopup(r3);
        r0 = r6.getParentActivity();
        if (r0 == 0) goto L_0x014c;
    L_0x0132:
        r0 = r6.getParentActivity();
        r0 = r0.getCurrentFocus();
        org.telegram.messenger.AndroidUtilities.hideKeyboard(r0);
        goto L_0x014c;
    L_0x013e:
        r0 = r6.bottomOverlayChatText;
        r4 = NUM; // 0x7f0d0372 float:1.8743904E38 double:1.0531302133E-314;
        r5 = "DeleteThisChat";
        r4 = org.telegram.messenger.LocaleController.getString(r5, r4);
        r0.setText(r4);
    L_0x014c:
        r0 = r6.inPreviewMode;
        r4 = 4;
        if (r0 == 0) goto L_0x0167;
    L_0x0151:
        r0 = r6.searchContainer;
        r0.setVisibility(r4);
        r0 = r6.bottomOverlayChat;
        r0.setVisibility(r4);
        r0 = r6.chatActivityEnterView;
        r0.setFieldFocused(r3);
        r0 = r6.chatActivityEnterView;
        r0.setVisibility(r4);
        goto L_0x0250;
    L_0x0167:
        r0 = r6.searchItem;
        if (r0 == 0) goto L_0x019b;
    L_0x016b:
        r0 = r0.getVisibility();
        if (r0 != 0) goto L_0x019b;
    L_0x0171:
        r0 = r6.searchContainer;
        r0.setVisibility(r3);
        r0 = r6.bottomOverlayChat;
        r0.setVisibility(r4);
        r0 = r6.chatActivityEnterView;
        r0.setFieldFocused(r3);
        r0 = r6.chatActivityEnterView;
        r0.setVisibility(r4);
        r0 = r6.chatActivityEnterView;
        r0 = r0.isTopViewVisible();
        if (r0 == 0) goto L_0x0196;
    L_0x018d:
        r6.topViewWasVisible = r2;
        r0 = r6.chatActivityEnterView;
        r0.hideTopView(r3);
        goto L_0x0250;
    L_0x0196:
        r0 = 2;
        r6.topViewWasVisible = r0;
        goto L_0x0250;
    L_0x019b:
        r0 = r6.searchContainer;
        r0.setVisibility(r4);
        r0 = r6.muteItem;
        if (r0 == 0) goto L_0x01b9;
    L_0x01a4:
        r0 = r6.currentChat;
        if (r0 == 0) goto L_0x01b4;
    L_0x01a8:
        r0 = org.telegram.messenger.ChatObject.isNotInChat(r0);
        if (r0 == 0) goto L_0x01b4;
    L_0x01ae:
        r0 = r6.muteItem;
        r0.setVisibility(r1);
        goto L_0x01b9;
    L_0x01b4:
        r0 = r6.muteItem;
        r0.setVisibility(r3);
    L_0x01b9:
        r0 = r6.currentChat;
        if (r0 == 0) goto L_0x01cb;
    L_0x01bd:
        r0 = org.telegram.messenger.ChatObject.isNotInChat(r0);
        if (r0 != 0) goto L_0x01d9;
    L_0x01c3:
        r0 = r6.currentChat;
        r0 = org.telegram.messenger.ChatObject.canWriteToChat(r0);
        if (r0 == 0) goto L_0x01d9;
    L_0x01cb:
        r0 = r6.currentUser;
        if (r0 == 0) goto L_0x0226;
    L_0x01cf:
        r0 = org.telegram.messenger.UserObject.isDeleted(r0);
        if (r0 != 0) goto L_0x01d9;
    L_0x01d5:
        r0 = r6.userBlocked;
        if (r0 == 0) goto L_0x0226;
    L_0x01d9:
        r0 = r6.chatActivityEnterView;
        r0 = r0.isEditingMessage();
        if (r0 == 0) goto L_0x01fb;
    L_0x01e1:
        r0 = r6.chatActivityEnterView;
        r0.setVisibility(r3);
        r0 = r6.bottomOverlayChat;
        r0.setVisibility(r4);
        r0 = r6.chatActivityEnterView;
        r0.setFieldFocused();
        r0 = new org.telegram.ui.-$$Lambda$ChatActivity$gZVkivxYbTSZIzEDKvtuXKTpmK0;
        r0.<init>(r6);
        r4 = 100;
        org.telegram.messenger.AndroidUtilities.runOnUIThread(r0, r4);
        goto L_0x0216;
    L_0x01fb:
        r0 = r6.bottomOverlayChat;
        r0.setVisibility(r3);
        r0 = r6.chatActivityEnterView;
        r0.setFieldFocused(r3);
        r0 = r6.chatActivityEnterView;
        r0.setVisibility(r4);
        r0 = r6.chatActivityEnterView;
        r0.closeKeyboard();
        r0 = r6.stickersAdapter;
        if (r0 == 0) goto L_0x0216;
    L_0x0213:
        r0.hide();
    L_0x0216:
        r0 = r6.attachItem;
        r0.setVisibility(r1);
        r0 = r6.editTextItem;
        r0.setVisibility(r1);
        r0 = r6.headerItem;
        r0.setVisibility(r3);
        goto L_0x0245;
    L_0x0226:
        r0 = r6.botUser;
        if (r0 == 0) goto L_0x023b;
    L_0x022a:
        r0 = r6.currentUser;
        r0 = r0.bot;
        if (r0 == 0) goto L_0x023b;
    L_0x0230:
        r0 = r6.bottomOverlayChat;
        r0.setVisibility(r3);
        r0 = r6.chatActivityEnterView;
        r0.setVisibility(r4);
        goto L_0x0245;
    L_0x023b:
        r0 = r6.chatActivityEnterView;
        r0.setVisibility(r3);
        r0 = r6.bottomOverlayChat;
        r0.setVisibility(r4);
    L_0x0245:
        r0 = r6.topViewWasVisible;
        if (r0 != r2) goto L_0x0250;
    L_0x0249:
        r0 = r6.chatActivityEnterView;
        r0.showTopView(r3, r3);
        r6.topViewWasVisible = r3;
    L_0x0250:
        r6.checkRaiseSensors();
        return;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.updateBottomOverlay():void");
    }

    public /* synthetic */ void lambda$updateBottomOverlay$61$ChatActivity() {
        this.chatActivityEnterView.openKeyboard();
    }

    public void showAlert(String str, String str2) {
        FrameLayout frameLayout = this.alertView;
        if (frameLayout != null && str != null && str2 != null) {
            if (frameLayout.getTag() != null) {
                this.alertView.setTag(null);
                AnimatorSet animatorSet = this.alertViewAnimator;
                if (animatorSet != null) {
                    animatorSet.cancel();
                    this.alertViewAnimator = null;
                }
                this.alertView.setVisibility(0);
                this.alertViewAnimator = new AnimatorSet();
                animatorSet = this.alertViewAnimator;
                Animator[] animatorArr = new Animator[1];
                animatorArr[0] = ObjectAnimator.ofFloat(this.alertView, View.TRANSLATION_Y, new float[]{0.0f});
                animatorSet.playTogether(animatorArr);
                this.alertViewAnimator.setDuration(200);
                this.alertViewAnimator.addListener(new AnimatorListenerAdapter() {
                    public void onAnimationEnd(Animator animator) {
                        if (ChatActivity.this.alertViewAnimator != null && ChatActivity.this.alertViewAnimator.equals(animator)) {
                            ChatActivity.this.alertViewAnimator = null;
                        }
                    }

                    public void onAnimationCancel(Animator animator) {
                        if (ChatActivity.this.alertViewAnimator != null && ChatActivity.this.alertViewAnimator.equals(animator)) {
                            ChatActivity.this.alertViewAnimator = null;
                        }
                    }
                });
                this.alertViewAnimator.start();
            }
            this.alertNameTextView.setText(str);
            this.alertTextView.setText(Emoji.replaceEmoji(str2.replace(10, ' '), this.alertTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0f), false));
            Runnable runnable = this.hideAlertViewRunnable;
            if (runnable != null) {
                AndroidUtilities.cancelRunOnUIThread(runnable);
            }
            AnonymousClass58 anonymousClass58 = new Runnable() {
                public void run() {
                    if (ChatActivity.this.hideAlertViewRunnable == this && ChatActivity.this.alertView.getTag() == null) {
                        ChatActivity.this.alertView.setTag(Integer.valueOf(1));
                        if (ChatActivity.this.alertViewAnimator != null) {
                            ChatActivity.this.alertViewAnimator.cancel();
                            ChatActivity.this.alertViewAnimator = null;
                        }
                        ChatActivity.this.alertViewAnimator = new AnimatorSet();
                        AnimatorSet access$22900 = ChatActivity.this.alertViewAnimator;
                        Animator[] animatorArr = new Animator[1];
                        animatorArr[0] = ObjectAnimator.ofFloat(ChatActivity.this.alertView, View.TRANSLATION_Y, new float[]{(float) (-AndroidUtilities.dp(50.0f))});
                        access$22900.playTogether(animatorArr);
                        ChatActivity.this.alertViewAnimator.setDuration(200);
                        ChatActivity.this.alertViewAnimator.addListener(new AnimatorListenerAdapter() {
                            public void onAnimationEnd(Animator animator) {
                                if (ChatActivity.this.alertViewAnimator != null && ChatActivity.this.alertViewAnimator.equals(animator)) {
                                    ChatActivity.this.alertView.setVisibility(8);
                                    ChatActivity.this.alertViewAnimator = null;
                                }
                            }

                            public void onAnimationCancel(Animator animator) {
                                if (ChatActivity.this.alertViewAnimator != null && ChatActivity.this.alertViewAnimator.equals(animator)) {
                                    ChatActivity.this.alertViewAnimator = null;
                                }
                            }
                        });
                        ChatActivity.this.alertViewAnimator.start();
                    }
                }
            };
            this.hideAlertViewRunnable = anonymousClass58;
            AndroidUtilities.runOnUIThread(anonymousClass58, 3000);
        }
    }

    private void hidePinnedMessageView(boolean z) {
        if (this.pinnedMessageView.getTag() == null) {
            this.pinnedMessageView.setTag(Integer.valueOf(1));
            AnimatorSet animatorSet = this.pinnedMessageViewAnimator;
            if (animatorSet != null) {
                animatorSet.cancel();
                this.pinnedMessageViewAnimator = null;
            }
            if (z) {
                this.pinnedMessageViewAnimator = new AnimatorSet();
                AnimatorSet animatorSet2 = this.pinnedMessageViewAnimator;
                Animator[] animatorArr = new Animator[1];
                animatorArr[0] = ObjectAnimator.ofFloat(this.pinnedMessageView, View.TRANSLATION_Y, new float[]{(float) (-AndroidUtilities.dp(50.0f))});
                animatorSet2.playTogether(animatorArr);
                this.pinnedMessageViewAnimator.setDuration(200);
                this.pinnedMessageViewAnimator.addListener(new AnimatorListenerAdapter() {
                    public void onAnimationEnd(Animator animator) {
                        if (ChatActivity.this.pinnedMessageViewAnimator != null && ChatActivity.this.pinnedMessageViewAnimator.equals(animator)) {
                            ChatActivity.this.pinnedMessageView.setVisibility(8);
                            ChatActivity.this.pinnedMessageViewAnimator = null;
                        }
                    }

                    public void onAnimationCancel(Animator animator) {
                        if (ChatActivity.this.pinnedMessageViewAnimator != null && ChatActivity.this.pinnedMessageViewAnimator.equals(animator)) {
                            ChatActivity.this.pinnedMessageViewAnimator = null;
                        }
                    }
                });
                this.pinnedMessageViewAnimator.start();
                return;
            }
            this.pinnedMessageView.setTranslationY((float) (-AndroidUtilities.dp(50.0f)));
            this.pinnedMessageView.setVisibility(8);
        }
    }

    /* JADX WARNING: Removed duplicated region for block: B:38:0x008e  */
    private void updatePinnedMessageView(boolean r19) {
        /*
        r18 = this;
        r0 = r18;
        r1 = r0.pinnedMessageView;
        if (r1 != 0) goto L_0x0007;
    L_0x0006:
        return;
    L_0x0007:
        r1 = r0.chatInfo;
        r2 = 0;
        r3 = 0;
        if (r1 == 0) goto L_0x0037;
    L_0x000d:
        r4 = r0.pinnedMessageObject;
        if (r4 == 0) goto L_0x001b;
    L_0x0011:
        r1 = r1.pinned_msg_id;
        r4 = r4.getId();
        if (r1 == r4) goto L_0x001b;
    L_0x0019:
        r0.pinnedMessageObject = r2;
    L_0x001b:
        r1 = r0.chatInfo;
        r1 = r1.pinned_msg_id;
        if (r1 == 0) goto L_0x0031;
    L_0x0021:
        r4 = r0.pinnedMessageObject;
        if (r4 != 0) goto L_0x0031;
    L_0x0025:
        r4 = r0.messagesDict;
        r4 = r4[r3];
        r1 = r4.get(r1);
        r1 = (org.telegram.messenger.MessageObject) r1;
        r0.pinnedMessageObject = r1;
    L_0x0031:
        r1 = r0.chatInfo;
        r1 = r1.pinned_msg_id;
    L_0x0035:
        r8 = r1;
        goto L_0x0065;
    L_0x0037:
        r1 = r0.userInfo;
        if (r1 == 0) goto L_0x0064;
    L_0x003b:
        r4 = r0.pinnedMessageObject;
        if (r4 == 0) goto L_0x0049;
    L_0x003f:
        r1 = r1.pinned_msg_id;
        r4 = r4.getId();
        if (r1 == r4) goto L_0x0049;
    L_0x0047:
        r0.pinnedMessageObject = r2;
    L_0x0049:
        r1 = r0.userInfo;
        r1 = r1.pinned_msg_id;
        if (r1 == 0) goto L_0x005f;
    L_0x004f:
        r4 = r0.pinnedMessageObject;
        if (r4 != 0) goto L_0x005f;
    L_0x0053:
        r4 = r0.messagesDict;
        r4 = r4[r3];
        r1 = r4.get(r1);
        r1 = (org.telegram.messenger.MessageObject) r1;
        r0.pinnedMessageObject = r1;
    L_0x005f:
        r1 = r0.userInfo;
        r1 = r1.pinned_msg_id;
        goto L_0x0035;
    L_0x0064:
        r8 = 0;
    L_0x0065:
        r1 = r0.currentAccount;
        r1 = org.telegram.messenger.MessagesController.getNotificationsSettings(r1);
        r4 = r0.chatInfo;
        if (r4 != 0) goto L_0x0073;
    L_0x006f:
        r4 = r0.userInfo;
        if (r4 == 0) goto L_0x0314;
    L_0x0073:
        if (r8 == 0) goto L_0x0314;
    L_0x0075:
        r4 = new java.lang.StringBuilder;
        r4.<init>();
        r5 = "pin_";
        r4.append(r5);
        r5 = r0.dialog_id;
        r4.append(r5);
        r4 = r4.toString();
        r1 = r1.getInt(r4, r3);
        if (r8 == r1) goto L_0x0314;
    L_0x008e:
        r1 = r0.actionBar;
        if (r1 == 0) goto L_0x00a2;
    L_0x0092:
        r1 = r1.isActionModeShowed();
        if (r1 != 0) goto L_0x0314;
    L_0x0098:
        r1 = r0.actionBar;
        r1 = r1.isSearchFieldVisible();
        if (r1 == 0) goto L_0x00a2;
    L_0x00a0:
        goto L_0x0314;
    L_0x00a2:
        r1 = r0.pinnedMessageObject;
        if (r1 == 0) goto L_0x02ed;
    L_0x00a6:
        r1 = r0.pinnedMessageView;
        r1 = r1.getTag();
        r4 = 1;
        if (r1 == 0) goto L_0x0102;
    L_0x00af:
        r1 = r0.pinnedMessageView;
        r1.setTag(r2);
        r1 = r0.pinnedMessageViewAnimator;
        if (r1 == 0) goto L_0x00bd;
    L_0x00b8:
        r1.cancel();
        r0.pinnedMessageViewAnimator = r2;
    L_0x00bd:
        r1 = 0;
        if (r19 == 0) goto L_0x00f8;
    L_0x00c0:
        r5 = r0.pinnedMessageView;
        r5.setVisibility(r3);
        r5 = new android.animation.AnimatorSet;
        r5.<init>();
        r0.pinnedMessageViewAnimator = r5;
        r5 = r0.pinnedMessageViewAnimator;
        r6 = new android.animation.Animator[r4];
        r7 = r0.pinnedMessageView;
        r8 = android.view.View.TRANSLATION_Y;
        r9 = new float[r4];
        r9[r3] = r1;
        r1 = android.animation.ObjectAnimator.ofFloat(r7, r8, r9);
        r6[r3] = r1;
        r5.playTogether(r6);
        r1 = r0.pinnedMessageViewAnimator;
        r5 = 200; // 0xc8 float:2.8E-43 double:9.9E-322;
        r1.setDuration(r5);
        r1 = r0.pinnedMessageViewAnimator;
        r5 = new org.telegram.ui.ChatActivity$60;
        r5.<init>();
        r1.addListener(r5);
        r1 = r0.pinnedMessageViewAnimator;
        r1.start();
        goto L_0x0102;
    L_0x00f8:
        r5 = r0.pinnedMessageView;
        r5.setTranslationY(r1);
        r1 = r0.pinnedMessageView;
        r1.setVisibility(r3);
    L_0x0102:
        r1 = r0.pinnedMessageNameTextView;
        r1 = r1.getLayoutParams();
        r1 = (android.widget.FrameLayout.LayoutParams) r1;
        r5 = r0.pinnedMessageTextView;
        r5 = r5.getLayoutParams();
        r5 = (android.widget.FrameLayout.LayoutParams) r5;
        r6 = r0.pinnedMessageObject;
        r6 = r6.photoThumbs2;
        r7 = NUM; // 0x43a00000 float:320.0 double:5.605467397E-315;
        r8 = org.telegram.messenger.AndroidUtilities.dp(r7);
        r6 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r6, r8);
        r8 = r0.pinnedMessageObject;
        r8 = r8.photoThumbs2;
        r9 = NUM; // 0x42200000 float:40.0 double:5.481131706E-315;
        r10 = org.telegram.messenger.AndroidUtilities.dp(r9);
        r8 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r8, r10);
        r10 = r0.pinnedMessageObject;
        r11 = r10.photoThumbsObject2;
        if (r6 != 0) goto L_0x016a;
    L_0x0134:
        r6 = r10.mediaExists;
        if (r6 == 0) goto L_0x014a;
    L_0x0138:
        r6 = r10.photoThumbs;
        r7 = org.telegram.messenger.AndroidUtilities.getPhotoSize();
        r6 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r6, r7);
        if (r6 == 0) goto L_0x0147;
    L_0x0144:
        r7 = r6.size;
        goto L_0x0148;
    L_0x0147:
        r7 = 0;
    L_0x0148:
        r8 = 0;
        goto L_0x0156;
    L_0x014a:
        r6 = r10.photoThumbs;
        r7 = org.telegram.messenger.AndroidUtilities.dp(r7);
        r6 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r6, r7);
        r7 = 0;
        r8 = 1;
    L_0x0156:
        r10 = r0.pinnedMessageObject;
        r10 = r10.photoThumbs;
        r9 = org.telegram.messenger.AndroidUtilities.dp(r9);
        r9 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r10, r9);
        r10 = r0.pinnedMessageObject;
        r11 = r10.photoThumbsObject;
        r15 = r7;
        r7 = r8;
        r8 = r9;
        goto L_0x016c;
    L_0x016a:
        r7 = 1;
        r15 = 0;
    L_0x016c:
        if (r6 != r8) goto L_0x016f;
    L_0x016e:
        r8 = r2;
    L_0x016f:
        if (r6 == 0) goto L_0x01d1;
    L_0x0171:
        r9 = r6 instanceof org.telegram.tgnet.TLRPC.TL_photoSizeEmpty;
        if (r9 != 0) goto L_0x01d1;
    L_0x0175:
        r9 = r6.location;
        r9 = r9 instanceof org.telegram.tgnet.TLRPC.TL_fileLocationUnavailable;
        if (r9 != 0) goto L_0x01d1;
    L_0x017b:
        r9 = r0.pinnedMessageObject;
        r9 = r9.isAnyKindOfSticker();
        if (r9 == 0) goto L_0x0184;
    L_0x0183:
        goto L_0x01d1;
    L_0x0184:
        r2 = r0.pinnedMessageObject;
        r2 = r2.isRoundVideo();
        if (r2 == 0) goto L_0x0198;
    L_0x018c:
        r2 = r0.pinnedMessageImageView;
        r9 = NUM; // 0x41800000 float:16.0 double:5.42932517E-315;
        r9 = org.telegram.messenger.AndroidUtilities.dp(r9);
        r2.setRoundRadius(r9);
        goto L_0x019d;
    L_0x0198:
        r2 = r0.pinnedMessageImageView;
        r2.setRoundRadius(r3);
    L_0x019d:
        r0.pinnedImageSize = r15;
        r0.pinnedImageCacheType = r7;
        r0.pinnedImageLocation = r6;
        r0.pinnedImageThumbLocation = r8;
        r0.pinnedImageLocationObject = r11;
        r9 = r0.pinnedMessageImageView;
        r2 = r0.pinnedImageLocation;
        r10 = org.telegram.messenger.ImageLocation.getForObject(r2, r11);
        r12 = org.telegram.messenger.ImageLocation.getForObject(r8, r11);
        r14 = 0;
        r2 = r0.pinnedMessageObject;
        r11 = "50_50";
        r13 = "50_50_b";
        r16 = r7;
        r17 = r2;
        r9.setImage(r10, r11, r12, r13, r14, r15, r16, r17);
        r2 = r0.pinnedMessageImageView;
        r2.setVisibility(r3);
        r2 = NUM; // 0x425CLASSNAME float:55.0 double:5.50055916E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r5.leftMargin = r2;
        r1.leftMargin = r2;
        goto L_0x01ea;
    L_0x01d1:
        r6 = r0.pinnedMessageImageView;
        r6.setImageBitmap(r2);
        r0.pinnedImageLocation = r2;
        r0.pinnedImageLocationObject = r2;
        r2 = r0.pinnedMessageImageView;
        r6 = 4;
        r2.setVisibility(r6);
        r2 = NUM; // 0x41900000 float:18.0 double:5.43450582E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r5.leftMargin = r2;
        r1.leftMargin = r2;
    L_0x01ea:
        r2 = r0.pinnedMessageNameTextView;
        r2.setLayoutParams(r1);
        r1 = r0.pinnedMessageTextView;
        r1.setLayoutParams(r5);
        r1 = r0.pinnedMessageObject;
        r1 = r1.type;
        r2 = 17;
        if (r1 != r2) goto L_0x020b;
    L_0x01fc:
        r1 = r0.pinnedMessageNameTextView;
        r5 = NUM; // 0x7f0d0862 float:1.8746467E38 double:1.053130838E-314;
        r6 = "PinnedPoll";
        r5 = org.telegram.messenger.LocaleController.getString(r6, r5);
        r1.setText(r5);
        goto L_0x0219;
    L_0x020b:
        r1 = r0.pinnedMessageNameTextView;
        r5 = NUM; // 0x7f0d0860 float:1.8746463E38 double:1.053130837E-314;
        r6 = "PinnedMessage";
        r5 = org.telegram.messenger.LocaleController.getString(r6, r5);
        r1.setText(r5);
    L_0x0219:
        r1 = r0.pinnedMessageObject;
        r5 = r1.type;
        r6 = 14;
        if (r5 != r6) goto L_0x023f;
    L_0x0221:
        r2 = r0.pinnedMessageTextView;
        r5 = 2;
        r5 = new java.lang.Object[r5];
        r1 = r1.getMusicAuthor();
        r5[r3] = r1;
        r1 = r0.pinnedMessageObject;
        r1 = r1.getMusicTitle();
        r5[r4] = r1;
        r1 = "%s - %s";
        r1 = java.lang.String.format(r1, r5);
        r2.setText(r1);
        goto L_0x0317;
    L_0x023f:
        r4 = 32;
        r6 = 10;
        r7 = 150; // 0x96 float:2.1E-43 double:7.4E-322;
        if (r5 != r2) goto L_0x0266;
    L_0x0247:
        r1 = r1.messageOwner;
        r1 = r1.media;
        r1 = (org.telegram.tgnet.TLRPC.TL_messageMediaPoll) r1;
        r1 = r1.poll;
        r1 = r1.question;
        r2 = r1.length();
        if (r2 <= r7) goto L_0x025b;
    L_0x0257:
        r1 = r1.substring(r3, r7);
    L_0x025b:
        r1 = r1.replace(r6, r4);
        r2 = r0.pinnedMessageTextView;
        r2.setText(r1);
        goto L_0x0317;
    L_0x0266:
        r2 = r1.messageOwner;
        r2 = r2.media;
        r5 = r2 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaGame;
        r8 = NUM; // 0x41600000 float:14.0 double:5.41896386E-315;
        if (r5 == 0) goto L_0x028b;
    L_0x0270:
        r1 = r0.pinnedMessageTextView;
        r2 = r2.game;
        r2 = r2.title;
        r4 = r1.getPaint();
        r4 = r4.getFontMetricsInt();
        r5 = org.telegram.messenger.AndroidUtilities.dp(r8);
        r2 = org.telegram.messenger.Emoji.replaceEmoji(r2, r4, r5, r3);
        r1.setText(r2);
        goto L_0x0317;
    L_0x028b:
        r1 = r1.caption;
        r1 = android.text.TextUtils.isEmpty(r1);
        if (r1 != 0) goto L_0x02bf;
    L_0x0293:
        r1 = r0.pinnedMessageObject;
        r1 = r1.caption;
        r1 = r1.toString();
        r2 = r1.length();
        if (r2 <= r7) goto L_0x02a5;
    L_0x02a1:
        r1 = r1.substring(r3, r7);
    L_0x02a5:
        r1 = r1.replace(r6, r4);
        r2 = r0.pinnedMessageTextView;
        r4 = r2.getPaint();
        r4 = r4.getFontMetricsInt();
        r5 = org.telegram.messenger.AndroidUtilities.dp(r8);
        r1 = org.telegram.messenger.Emoji.replaceEmoji(r1, r4, r5, r3);
        r2.setText(r1);
        goto L_0x0317;
    L_0x02bf:
        r1 = r0.pinnedMessageObject;
        r1 = r1.messageText;
        if (r1 == 0) goto L_0x0317;
    L_0x02c5:
        r1 = r1.toString();
        r2 = r1.length();
        if (r2 <= r7) goto L_0x02d3;
    L_0x02cf:
        r1 = r1.substring(r3, r7);
    L_0x02d3:
        r1 = r1.replace(r6, r4);
        r2 = r0.pinnedMessageTextView;
        r4 = r2.getPaint();
        r4 = r4.getFontMetricsInt();
        r5 = org.telegram.messenger.AndroidUtilities.dp(r8);
        r1 = org.telegram.messenger.Emoji.replaceEmoji(r1, r4, r5, r3);
        r2.setText(r1);
        goto L_0x0317;
    L_0x02ed:
        r0.pinnedImageLocation = r2;
        r0.pinnedImageLocationObject = r2;
        r18.hidePinnedMessageView(r19);
        r1 = r0.loadingPinnedMessage;
        if (r1 == r8) goto L_0x0317;
    L_0x02f8:
        r0.loadingPinnedMessage = r8;
        r4 = r18.getMediaDataController();
        r5 = r0.dialog_id;
        r1 = r0.currentChat;
        r1 = org.telegram.messenger.ChatObject.isChannel(r1);
        if (r1 == 0) goto L_0x030e;
    L_0x0308:
        r1 = r0.currentChat;
        r3 = r1.id;
        r7 = r3;
        goto L_0x030f;
    L_0x030e:
        r7 = 0;
    L_0x030f:
        r9 = 1;
        r4.loadPinnedMessage(r5, r7, r8, r9);
        goto L_0x0317;
    L_0x0314:
        r18.hidePinnedMessageView(r19);
    L_0x0317:
        r18.checkListViewPaddings();
        return;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.updatePinnedMessageView(boolean):void");
    }

    private void updateTopPanel(boolean z) {
        if (this.topChatPanelView != null) {
            StringBuilder stringBuilder;
            Object obj;
            SharedPreferences notificationsSettings = MessagesController.getNotificationsSettings(this.currentAccount);
            long j = this.dialog_id;
            EncryptedChat encryptedChat = this.currentEncryptedChat;
            String str = "dialog_bar_vis3";
            if (encryptedChat != null) {
                Object obj2 = (encryptedChat.admin_id == getUserConfig().getClientUserId() || getContactsController().isLoadingContacts() || getContactsController().contactsDict.get(Integer.valueOf(this.currentUser.id)) != null) ? null : 1;
                long j2 = (long) this.currentUser.id;
                stringBuilder = new StringBuilder();
                stringBuilder.append(str);
                stringBuilder.append(j2);
                int i = notificationsSettings.getInt(stringBuilder.toString(), 0);
                if (obj2 != null && (i == 1 || i == 3)) {
                    obj2 = null;
                }
                obj = obj2;
                j = j2;
            } else {
                StringBuilder stringBuilder2 = new StringBuilder();
                stringBuilder2.append(str);
                stringBuilder2.append(j);
                obj = notificationsSettings.getInt(stringBuilder2.toString(), 0) == 2 ? 1 : null;
            }
            StringBuilder stringBuilder3 = new StringBuilder();
            stringBuilder3.append("dialog_bar_share");
            stringBuilder3.append(j);
            boolean z2 = notificationsSettings.getBoolean(stringBuilder3.toString(), false);
            stringBuilder = new StringBuilder();
            stringBuilder.append("dialog_bar_report");
            stringBuilder.append(j);
            boolean z3 = notificationsSettings.getBoolean(stringBuilder.toString(), false);
            StringBuilder stringBuilder4 = new StringBuilder();
            stringBuilder4.append("dialog_bar_block");
            stringBuilder4.append(j);
            boolean z4 = notificationsSettings.getBoolean(stringBuilder4.toString(), false);
            StringBuilder stringBuilder5 = new StringBuilder();
            stringBuilder5.append("dialog_bar_add");
            stringBuilder5.append(j);
            boolean z5 = notificationsSettings.getBoolean(stringBuilder5.toString(), false);
            StringBuilder stringBuilder6 = new StringBuilder();
            stringBuilder6.append("dialog_bar_location");
            stringBuilder6.append(j);
            boolean z6 = notificationsSettings.getBoolean(stringBuilder6.toString(), false);
            if (z3 || z4 || z6) {
                this.reportSpamButton.setVisibility(0);
            } else {
                this.reportSpamButton.setVisibility(8);
            }
            User user = this.currentUser != null ? getMessagesController().getUser(Integer.valueOf(this.currentUser.id)) : null;
            if (user != null) {
                if (user.contact || !z5) {
                    String str2 = "ShareMyContactInfo";
                    if (z2) {
                        this.addContactItem.setVisibility(0);
                        this.addToContactsButton.setVisibility(0);
                        this.addContactItem.setText(LocaleController.getString(str2, NUM));
                        this.addToContactsButton.setText(LocaleController.getString("ShareMyPhone", NUM).toUpperCase());
                        this.addToContactsButton.setTag(Integer.valueOf(1));
                        this.addToContactsButton.setVisibility(0);
                    } else {
                        if (user.contact || r4 != null) {
                            this.addContactItem.setVisibility(8);
                        } else {
                            this.addContactItem.setVisibility(0);
                            this.addContactItem.setText(LocaleController.getString(str2, NUM));
                            this.addToContactsButton.setTag(Integer.valueOf(2));
                        }
                        this.addToContactsButton.setVisibility(8);
                    }
                } else {
                    this.addContactItem.setVisibility(0);
                    this.addToContactsButton.setVisibility(0);
                    this.addContactItem.setText(LocaleController.getString("AddToContacts", NUM));
                    if (this.reportSpamButton.getVisibility() == 0) {
                        this.addToContactsButton.setText(LocaleController.getString("AddContactChat", NUM));
                    } else {
                        this.addToContactsButton.setText(LocaleController.formatString("AddContactFullChat", NUM, UserObject.getFirstName(user)).toUpperCase());
                    }
                    this.addToContactsButton.setTag(null);
                    this.addToContactsButton.setVisibility(0);
                }
                this.reportSpamButton.setText(LocaleController.getString("ReportSpamUser", NUM));
            } else {
                String str3;
                if (z6) {
                    this.reportSpamButton.setText(LocaleController.getString("ReportSpamLocation", NUM));
                    this.reportSpamButton.setTag(NUM, Integer.valueOf(1));
                    str3 = "chat_addContact";
                    this.reportSpamButton.setTextColor(Theme.getColor(str3));
                    this.reportSpamButton.setTag(str3);
                } else {
                    this.reportSpamButton.setText(LocaleController.getString("ReportSpamAndLeave", NUM));
                    this.reportSpamButton.setTag(NUM, null);
                    str3 = "chat_reportSpam";
                    this.reportSpamButton.setTextColor(Theme.getColor(str3));
                    this.reportSpamButton.setTag(str3);
                }
                ActionBarMenuSubItem actionBarMenuSubItem = this.addContactItem;
                if (actionBarMenuSubItem != null) {
                    actionBarMenuSubItem.setVisibility(8);
                }
                this.addToContactsButton.setVisibility(8);
            }
            if (this.userBlocked || (this.addToContactsButton.getVisibility() == 8 && this.reportSpamButton.getVisibility() == 8)) {
                obj = null;
            }
            AnimatorSet animatorSet;
            AnimatorSet animatorSet2;
            Animator[] animatorArr;
            if (obj != null) {
                if (this.topChatPanelView.getTag() != null) {
                    if (BuildVars.LOGS_ENABLED) {
                        FileLog.d("show spam button");
                    }
                    this.topChatPanelView.setTag(null);
                    this.topChatPanelView.setVisibility(0);
                    animatorSet = this.reportSpamViewAnimator;
                    if (animatorSet != null) {
                        animatorSet.cancel();
                        this.reportSpamViewAnimator = null;
                    }
                    if (z) {
                        this.reportSpamViewAnimator = new AnimatorSet();
                        animatorSet2 = this.reportSpamViewAnimator;
                        animatorArr = new Animator[1];
                        animatorArr[0] = ObjectAnimator.ofFloat(this.topChatPanelView, View.TRANSLATION_Y, new float[]{0.0f});
                        animatorSet2.playTogether(animatorArr);
                        this.reportSpamViewAnimator.setDuration(200);
                        this.reportSpamViewAnimator.addListener(new AnimatorListenerAdapter() {
                            public void onAnimationEnd(Animator animator) {
                                if (ChatActivity.this.reportSpamViewAnimator != null && ChatActivity.this.reportSpamViewAnimator.equals(animator)) {
                                    ChatActivity.this.reportSpamViewAnimator = null;
                                }
                            }

                            public void onAnimationCancel(Animator animator) {
                                if (ChatActivity.this.reportSpamViewAnimator != null && ChatActivity.this.reportSpamViewAnimator.equals(animator)) {
                                    ChatActivity.this.reportSpamViewAnimator = null;
                                }
                            }
                        });
                        this.reportSpamViewAnimator.start();
                    } else {
                        this.topChatPanelView.setTranslationY(0.0f);
                    }
                }
            } else if (this.topChatPanelView.getTag() == null) {
                if (BuildVars.LOGS_ENABLED) {
                    FileLog.d("hide spam button");
                }
                this.topChatPanelView.setTag(Integer.valueOf(1));
                animatorSet = this.reportSpamViewAnimator;
                if (animatorSet != null) {
                    animatorSet.cancel();
                    this.reportSpamViewAnimator = null;
                }
                if (z) {
                    this.reportSpamViewAnimator = new AnimatorSet();
                    animatorSet2 = this.reportSpamViewAnimator;
                    animatorArr = new Animator[1];
                    animatorArr[0] = ObjectAnimator.ofFloat(this.topChatPanelView, View.TRANSLATION_Y, new float[]{(float) (-AndroidUtilities.dp(50.0f))});
                    animatorSet2.playTogether(animatorArr);
                    this.reportSpamViewAnimator.setDuration(200);
                    this.reportSpamViewAnimator.addListener(new AnimatorListenerAdapter() {
                        public void onAnimationEnd(Animator animator) {
                            if (ChatActivity.this.reportSpamViewAnimator != null && ChatActivity.this.reportSpamViewAnimator.equals(animator)) {
                                ChatActivity.this.topChatPanelView.setVisibility(8);
                                ChatActivity.this.reportSpamViewAnimator = null;
                            }
                        }

                        public void onAnimationCancel(Animator animator) {
                            if (ChatActivity.this.reportSpamViewAnimator != null && ChatActivity.this.reportSpamViewAnimator.equals(animator)) {
                                ChatActivity.this.reportSpamViewAnimator = null;
                            }
                        }
                    });
                    this.reportSpamViewAnimator.start();
                } else {
                    this.topChatPanelView.setTranslationY((float) (-AndroidUtilities.dp(50.0f)));
                }
            }
            checkListViewPaddings();
        }
    }

    /* JADX WARNING: Removed duplicated region for block: B:44:0x00f0 A:{Catch:{ Exception -> 0x0113 }} */
    /* JADX WARNING: Removed duplicated region for block: B:43:0x00ea A:{Catch:{ Exception -> 0x0113 }} */
    /* JADX WARNING: Removed duplicated region for block: B:14:0x002a A:{Catch:{ Exception -> 0x0113 }} */
    /* JADX WARNING: Removed duplicated region for block: B:21:0x0057 A:{Catch:{ Exception -> 0x0113 }} */
    /* JADX WARNING: Removed duplicated region for block: B:32:0x00a9 A:{Catch:{ Exception -> 0x0113 }} */
    /* JADX WARNING: Removed duplicated region for block: B:43:0x00ea A:{Catch:{ Exception -> 0x0113 }} */
    /* JADX WARNING: Removed duplicated region for block: B:44:0x00f0 A:{Catch:{ Exception -> 0x0113 }} */
    private void checkListViewPaddingsInternal() {
        /*
        r9 = this;
        r0 = r9.chatLayoutManager;
        if (r0 != 0) goto L_0x0005;
    L_0x0004:
        return;
    L_0x0005:
        r0 = r0.findFirstVisibleItemPosition();	 Catch:{ Exception -> 0x0113 }
        r1 = r9.wasManualScroll;	 Catch:{ Exception -> 0x0113 }
        r2 = -1;
        if (r1 != 0) goto L_0x0026;
    L_0x000e:
        r1 = r9.unreadMessageObject;	 Catch:{ Exception -> 0x0113 }
        if (r1 == 0) goto L_0x0026;
    L_0x0012:
        r1 = r9.messages;	 Catch:{ Exception -> 0x0113 }
        r3 = r9.unreadMessageObject;	 Catch:{ Exception -> 0x0113 }
        r1 = r1.indexOf(r3);	 Catch:{ Exception -> 0x0113 }
        if (r1 < 0) goto L_0x0026;
    L_0x001c:
        r0 = r9.chatAdapter;	 Catch:{ Exception -> 0x0113 }
        r0 = r0.messagesStartRow;	 Catch:{ Exception -> 0x0113 }
        r0 = r0 + r1;
        r1 = r0;
        r0 = -1;
        goto L_0x0027;
    L_0x0026:
        r1 = -1;
    L_0x0027:
        r3 = 0;
        if (r0 == r2) goto L_0x0046;
    L_0x002a:
        r4 = r9.chatLayoutManager;	 Catch:{ Exception -> 0x0113 }
        r4 = r4.findViewByPosition(r0);	 Catch:{ Exception -> 0x0113 }
        if (r4 != 0) goto L_0x0033;
    L_0x0032:
        goto L_0x0046;
    L_0x0033:
        r5 = r9.chatListView;	 Catch:{ Exception -> 0x0113 }
        r5 = r5.getMeasuredHeight();	 Catch:{ Exception -> 0x0113 }
        r4 = r4.getBottom();	 Catch:{ Exception -> 0x0113 }
        r5 = r5 - r4;
        r4 = r9.chatListView;	 Catch:{ Exception -> 0x0113 }
        r4 = r4.getPaddingBottom();	 Catch:{ Exception -> 0x0113 }
        r5 = r5 - r4;
        goto L_0x0047;
    L_0x0046:
        r5 = 0;
    L_0x0047:
        r4 = r9.chatListView;	 Catch:{ Exception -> 0x0113 }
        r4 = r4.getPaddingTop();	 Catch:{ Exception -> 0x0113 }
        r6 = NUM; // 0x42500000 float:52.0 double:5.496673668E-315;
        r7 = org.telegram.messenger.AndroidUtilities.dp(r6);	 Catch:{ Exception -> 0x0113 }
        r8 = NUM; // 0x40400000 float:3.0 double:5.325712093E-315;
        if (r4 == r7) goto L_0x009b;
    L_0x0057:
        r4 = r9.pinnedMessageView;	 Catch:{ Exception -> 0x0113 }
        if (r4 == 0) goto L_0x0063;
    L_0x005b:
        r4 = r9.pinnedMessageView;	 Catch:{ Exception -> 0x0113 }
        r4 = r4.getTag();	 Catch:{ Exception -> 0x0113 }
        if (r4 == 0) goto L_0x006f;
    L_0x0063:
        r4 = r9.topChatPanelView;	 Catch:{ Exception -> 0x0113 }
        if (r4 == 0) goto L_0x009b;
    L_0x0067:
        r4 = r9.topChatPanelView;	 Catch:{ Exception -> 0x0113 }
        r4 = r4.getTag();	 Catch:{ Exception -> 0x0113 }
        if (r4 != 0) goto L_0x009b;
    L_0x006f:
        r4 = r9.chatListView;	 Catch:{ Exception -> 0x0113 }
        r7 = org.telegram.messenger.AndroidUtilities.dp(r6);	 Catch:{ Exception -> 0x0113 }
        r8 = org.telegram.messenger.AndroidUtilities.dp(r8);	 Catch:{ Exception -> 0x0113 }
        r4.setPadding(r3, r7, r3, r8);	 Catch:{ Exception -> 0x0113 }
        r3 = r9.floatingDateView;	 Catch:{ Exception -> 0x0113 }
        r3 = r3.getLayoutParams();	 Catch:{ Exception -> 0x0113 }
        r3 = (android.widget.FrameLayout.LayoutParams) r3;	 Catch:{ Exception -> 0x0113 }
        r4 = org.telegram.messenger.AndroidUtilities.dp(r6);	 Catch:{ Exception -> 0x0113 }
        r3.topMargin = r4;	 Catch:{ Exception -> 0x0113 }
        r4 = r9.floatingDateView;	 Catch:{ Exception -> 0x0113 }
        r4.setLayoutParams(r3);	 Catch:{ Exception -> 0x0113 }
        r3 = r9.chatListView;	 Catch:{ Exception -> 0x0113 }
        r4 = NUM; // 0x42400000 float:48.0 double:5.491493014E-315;
        r4 = org.telegram.messenger.AndroidUtilities.dp(r4);	 Catch:{ Exception -> 0x0113 }
        r3.setTopGlowOffset(r4);	 Catch:{ Exception -> 0x0113 }
        goto L_0x00e8;
    L_0x009b:
        r4 = r9.chatListView;	 Catch:{ Exception -> 0x0113 }
        r4 = r4.getPaddingTop();	 Catch:{ Exception -> 0x0113 }
        r6 = NUM; // 0x40800000 float:4.0 double:5.34643471E-315;
        r7 = org.telegram.messenger.AndroidUtilities.dp(r6);	 Catch:{ Exception -> 0x0113 }
        if (r4 == r7) goto L_0x00e7;
    L_0x00a9:
        r4 = r9.pinnedMessageView;	 Catch:{ Exception -> 0x0113 }
        if (r4 == 0) goto L_0x00b5;
    L_0x00ad:
        r4 = r9.pinnedMessageView;	 Catch:{ Exception -> 0x0113 }
        r4 = r4.getTag();	 Catch:{ Exception -> 0x0113 }
        if (r4 == 0) goto L_0x00e7;
    L_0x00b5:
        r4 = r9.topChatPanelView;	 Catch:{ Exception -> 0x0113 }
        if (r4 == 0) goto L_0x00c1;
    L_0x00b9:
        r4 = r9.topChatPanelView;	 Catch:{ Exception -> 0x0113 }
        r4 = r4.getTag();	 Catch:{ Exception -> 0x0113 }
        if (r4 == 0) goto L_0x00e7;
    L_0x00c1:
        r4 = r9.chatListView;	 Catch:{ Exception -> 0x0113 }
        r7 = org.telegram.messenger.AndroidUtilities.dp(r6);	 Catch:{ Exception -> 0x0113 }
        r8 = org.telegram.messenger.AndroidUtilities.dp(r8);	 Catch:{ Exception -> 0x0113 }
        r4.setPadding(r3, r7, r3, r8);	 Catch:{ Exception -> 0x0113 }
        r4 = r9.floatingDateView;	 Catch:{ Exception -> 0x0113 }
        r4 = r4.getLayoutParams();	 Catch:{ Exception -> 0x0113 }
        r4 = (android.widget.FrameLayout.LayoutParams) r4;	 Catch:{ Exception -> 0x0113 }
        r6 = org.telegram.messenger.AndroidUtilities.dp(r6);	 Catch:{ Exception -> 0x0113 }
        r4.topMargin = r6;	 Catch:{ Exception -> 0x0113 }
        r6 = r9.floatingDateView;	 Catch:{ Exception -> 0x0113 }
        r6.setLayoutParams(r4);	 Catch:{ Exception -> 0x0113 }
        r4 = r9.chatListView;	 Catch:{ Exception -> 0x0113 }
        r4.setTopGlowOffset(r3);	 Catch:{ Exception -> 0x0113 }
        goto L_0x00e8;
    L_0x00e7:
        r0 = -1;
    L_0x00e8:
        if (r0 == r2) goto L_0x00f0;
    L_0x00ea:
        r1 = r9.chatLayoutManager;	 Catch:{ Exception -> 0x0113 }
        r1.scrollToPositionWithOffset(r0, r5);	 Catch:{ Exception -> 0x0113 }
        goto L_0x0117;
    L_0x00f0:
        if (r1 == r2) goto L_0x0117;
    L_0x00f2:
        r0 = r9.chatListView;	 Catch:{ Exception -> 0x0113 }
        r0 = r0.getMeasuredHeight();	 Catch:{ Exception -> 0x0113 }
        r2 = r9.chatListView;	 Catch:{ Exception -> 0x0113 }
        r2 = r2.getPaddingBottom();	 Catch:{ Exception -> 0x0113 }
        r0 = r0 - r2;
        r2 = r9.chatListView;	 Catch:{ Exception -> 0x0113 }
        r2 = r2.getPaddingTop();	 Catch:{ Exception -> 0x0113 }
        r0 = r0 - r2;
        r2 = NUM; // 0x41e80000 float:29.0 double:5.46299942E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);	 Catch:{ Exception -> 0x0113 }
        r0 = r0 - r2;
        r2 = r9.chatLayoutManager;	 Catch:{ Exception -> 0x0113 }
        r2.scrollToPositionWithOffset(r1, r0);	 Catch:{ Exception -> 0x0113 }
        goto L_0x0117;
    L_0x0113:
        r0 = move-exception;
        org.telegram.messenger.FileLog.e(r0);
    L_0x0117:
        return;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.checkListViewPaddingsInternal():void");
    }

    private void checkListViewPaddings() {
        if (!this.wasManualScroll) {
            MessageObject messageObject = this.unreadMessageObject;
            if (messageObject != null) {
                if (this.messages.indexOf(messageObject) >= 0) {
                    this.fixPaddingsInLayout = true;
                    View view = this.fragmentView;
                    if (view != null) {
                        view.requestLayout();
                        return;
                    }
                    return;
                }
                return;
            }
        }
        AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$qjQM5B3y6VBtwKZMKbvAeLv3zzQ(this));
    }

    private void checkRaiseSensors() {
        ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
        if (chatActivityEnterView == null || !chatActivityEnterView.isStickersExpanded()) {
            Chat chat = this.currentChat;
            if (chat == null || ChatObject.canSendMedia(chat)) {
                if (!ApplicationLoader.mainInterfacePaused) {
                    FrameLayout frameLayout = this.bottomOverlayChat;
                    if (frameLayout == null || frameLayout.getVisibility() != 0) {
                        frameLayout = this.bottomOverlay;
                        if (frameLayout == null || frameLayout.getVisibility() != 0) {
                            frameLayout = this.searchContainer;
                            if (frameLayout == null || frameLayout.getVisibility() != 0) {
                                MediaController.getInstance().setAllowStartRecord(true);
                                return;
                            }
                        }
                    }
                }
                MediaController.getInstance().setAllowStartRecord(false);
                return;
            }
            MediaController.getInstance().setAllowStartRecord(false);
            return;
        }
        MediaController.getInstance().setAllowStartRecord(false);
    }

    public void dismissCurrentDialig() {
        Dialog dialog = this.chatAttachAlert;
        if (dialog == null || this.visibleDialog != dialog) {
            super.dismissCurrentDialig();
            return;
        }
        dialog.closeCamera(false);
        this.chatAttachAlert.dismissInternal();
        this.chatAttachAlert.hideCamera(true);
    }

    /* Access modifiers changed, original: protected */
    public void setInPreviewMode(boolean z) {
        super.setInPreviewMode(z);
        ChatAvatarContainer chatAvatarContainer = this.avatarContainer;
        float f = 0.0f;
        if (chatAvatarContainer != null) {
            chatAvatarContainer.setOccupyStatusBar(z ^ 1);
            this.avatarContainer.setLayoutParams(LayoutHelper.createFrame(-2, -1.0f, 51, !z ? 56.0f : 0.0f, 0.0f, 40.0f, 0.0f));
        }
        ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
        if (chatActivityEnterView != null) {
            chatActivityEnterView.setVisibility(!z ? 0 : 4);
        }
        ActionBar actionBar = this.actionBar;
        if (actionBar != null) {
            actionBar.setBackButtonDrawable(!z ? new BackDrawable(false) : null);
            this.headerItem.setAlpha(!z ? 1.0f : 0.0f);
            ActionBarMenuItem actionBarMenuItem = this.attachItem;
            if (!z) {
                f = 1.0f;
            }
            actionBarMenuItem.setAlpha(f);
        }
        RecyclerListView recyclerListView = this.chatListView;
        if (recyclerListView != null) {
            int childCount = recyclerListView.getChildCount();
            for (int i = 0; i < childCount; i++) {
                View childAt = this.chatListView.getChildAt(i);
                boolean z2 = childAt instanceof ChatMessageCell;
                MessageObject messageObject = z2 ? ((ChatMessageCell) childAt).getMessageObject() : childAt instanceof ChatActionCell ? ((ChatActionCell) childAt).getMessageObject() : null;
                if (messageObject != null) {
                    Message message = messageObject.messageOwner;
                    if (message != null && message.media_unread && message.mentioned) {
                        if (!(messageObject.isVoice() || messageObject.isRoundVideo())) {
                            this.newMentionsCount--;
                            if (this.newMentionsCount <= 0) {
                                this.newMentionsCount = 0;
                                this.hasAllMentionsLocal = true;
                                showMentionDownButton(false, true);
                            } else {
                                this.mentiondownButtonCounter.setText(String.format("%d", new Object[]{Integer.valueOf(this.newMentionsCount)}));
                            }
                            getMessagesController().markMentionMessageAsRead(messageObject.getId(), ChatObject.isChannel(this.currentChat) ? this.currentChat.id : 0, this.dialog_id);
                            messageObject.setContentIsRead();
                        }
                        if (z2) {
                            ChatMessageCell chatMessageCell = (ChatMessageCell) childAt;
                            chatMessageCell.setHighlighted(false);
                            chatMessageCell.setHighlightedAnimated();
                        }
                    }
                }
            }
        }
        updateBottomOverlay();
        updateSecretStatus();
    }

    public void onResume() {
        BackupImageView backupImageView;
        super.onResume();
        AndroidUtilities.requestAdjustResize(getParentActivity(), this.classGuid);
        MediaController.getInstance().startRaiseToEarSensors(this);
        checkRaiseSensors();
        ChatAttachAlert chatAttachAlert = this.chatAttachAlert;
        if (chatAttachAlert != null) {
            chatAttachAlert.onResume();
        }
        SizeNotifierFrameLayout sizeNotifierFrameLayout = this.contentView;
        if (sizeNotifierFrameLayout != null) {
            sizeNotifierFrameLayout.onResume();
        }
        if (this.firstOpen && getMessagesController().isProxyDialog(this.dialog_id, true)) {
            SharedPreferences globalNotificationsSettings = MessagesController.getGlobalNotificationsSettings();
            String str = "proxychannel";
            if (globalNotificationsSettings.getLong(str, 0) != this.dialog_id) {
                globalNotificationsSettings.edit().putLong(str, this.dialog_id).commit();
                AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                builder.setTitle(LocaleController.getString("AppName", NUM));
                builder.setMessage(LocaleController.getString("UseProxySponsorInfo", NUM));
                builder.setPositiveButton(LocaleController.getString("OK", NUM), null);
                showDialog(builder.create());
            }
        }
        checkActionBarMenu();
        PhotoSize photoSize = this.replyImageLocation;
        if (photoSize != null) {
            backupImageView = this.replyImageView;
            if (backupImageView != null) {
                backupImageView.setImage(ImageLocation.getForObject(photoSize, this.replyImageLocationObject), "50_50", ImageLocation.getForObject(this.replyImageThumbLocation, this.replyImageLocationObject), "50_50_b", null, this.replyImageSize, this.replyImageCacheType, this.replyingMessageObject);
            }
        }
        photoSize = this.pinnedImageLocation;
        if (photoSize != null) {
            backupImageView = this.pinnedMessageImageView;
            if (backupImageView != null) {
                backupImageView.setImage(ImageLocation.getForObject(photoSize, this.pinnedImageLocationObject), "50_50", ImageLocation.getForObject(this.pinnedImageThumbLocation, this.pinnedImageLocationObject), "50_50_b", null, this.pinnedImageSize, this.pinnedImageCacheType, this.pinnedMessageObject);
            }
        }
        getNotificationsController().setOpenedDialogId(this.dialog_id);
        getMessagesController().setLastVisibleDialogId(this.dialog_id, true);
        if (this.scrollToTopOnResume) {
            if (this.scrollToTopUnReadOnResume) {
                MessageObject messageObject = this.scrollToMessage;
                if (messageObject != null) {
                    if (this.chatListView != null) {
                        boolean z;
                        int i = this.scrollToMessagePosition;
                        if (i == -9000) {
                            i = getScrollOffsetForMessage(messageObject);
                        } else if (i == -10000) {
                            i = -AndroidUtilities.dp(11.0f);
                        } else {
                            z = true;
                            this.chatLayoutManager.scrollToPositionWithOffset(this.chatAdapter.messagesStartRow + this.messages.indexOf(this.scrollToMessage), i, z);
                        }
                        z = false;
                        this.chatLayoutManager.scrollToPositionWithOffset(this.chatAdapter.messagesStartRow + this.messages.indexOf(this.scrollToMessage), i, z);
                    }
                    this.scrollToTopUnReadOnResume = false;
                    this.scrollToTopOnResume = false;
                    this.scrollToMessage = null;
                }
            }
            moveScrollToLastMessage();
            this.scrollToTopUnReadOnResume = false;
            this.scrollToTopOnResume = false;
            this.scrollToMessage = null;
        }
        this.paused = false;
        this.pausedOnLastMessage = false;
        checkScrollForLoad(false);
        if (this.wasPaused) {
            this.wasPaused = false;
            ChatActivityAdapter chatActivityAdapter = this.chatAdapter;
            if (chatActivityAdapter != null) {
                chatActivityAdapter.notifyDataSetChanged();
            }
        }
        fixLayout();
        applyDraftMaybe(false);
        FrameLayout frameLayout = this.bottomOverlayChat;
        if (!(frameLayout == null || frameLayout.getVisibility() == 0 || this.actionBar.isSearchFieldVisible())) {
            this.chatActivityEnterView.setFieldFocused(true);
        }
        ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
        if (chatActivityEnterView != null) {
            chatActivityEnterView.onResume();
        }
        if (this.currentUser != null) {
            this.chatEnterTime = System.currentTimeMillis();
            this.chatLeaveTime = 0;
        }
        if (this.startVideoEdit != null) {
            AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$o80XIATfve0PFB98NoXgPS6umGw(this));
        }
        if (this.chatListView != null) {
            chatActivityEnterView = this.chatActivityEnterView;
            if (chatActivityEnterView == null || !chatActivityEnterView.isEditingMessage()) {
                this.chatListView.setOnItemLongClickListener(this.onItemLongClickListener);
                this.chatListView.setOnItemClickListener(this.onItemClickListener);
                this.chatListView.setLongClickable(true);
            }
        }
        checkBotCommands();
        updateTitle();
    }

    public /* synthetic */ void lambda$onResume$62$ChatActivity() {
        openVideoEditor(this.startVideoEdit, null);
        this.startVideoEdit = null;
    }

    public void finishFragment() {
        super.finishFragment();
        ActionBarPopupWindow actionBarPopupWindow = this.scrimPopupWindow;
        if (actionBarPopupWindow != null) {
            actionBarPopupWindow.dismiss();
        }
    }

    /* JADX WARNING: Removed duplicated region for block: B:69:0x014d  */
    /* JADX WARNING: Removed duplicated region for block: B:68:0x0142  */
    /* JADX WARNING: Removed duplicated region for block: B:81:0x017a  */
    /* JADX WARNING: Removed duplicated region for block: B:86:0x01c8  */
    /* JADX WARNING: Removed duplicated region for block: B:85:0x019f  */
    /* JADX WARNING: Removed duplicated region for block: B:68:0x0142  */
    /* JADX WARNING: Removed duplicated region for block: B:69:0x014d  */
    /* JADX WARNING: Removed duplicated region for block: B:81:0x017a  */
    /* JADX WARNING: Removed duplicated region for block: B:85:0x019f  */
    /* JADX WARNING: Removed duplicated region for block: B:86:0x01c8  */
    /* JADX WARNING: Removed duplicated region for block: B:86:0x01c8  */
    /* JADX WARNING: Removed duplicated region for block: B:85:0x019f  */
    public void onPause() {
        /*
        r14 = this;
        super.onPause();
        r0 = r14.scrimPopupWindow;
        if (r0 == 0) goto L_0x000a;
    L_0x0007:
        r0.dismiss();
    L_0x000a:
        r0 = r14.getMessagesController();
        r1 = r14.dialog_id;
        r0.markDialogAsReadNow(r1);
        r0 = org.telegram.messenger.MediaController.getInstance();
        r1 = 1;
        r0.stopRaiseToEarSensors(r14, r1);
        r14.paused = r1;
        r14.wasPaused = r1;
        r0 = r14.getNotificationsController();
        r2 = 0;
        r0.setOpenedDialogId(r2);
        r0 = r14.getMessagesController();
        r2 = r14.dialog_id;
        r4 = 0;
        r0.setLastVisibleDialogId(r2, r4);
        r0 = r14.ignoreAttachOnPause;
        r2 = 0;
        if (r0 != 0) goto L_0x006a;
    L_0x0037:
        r0 = r14.chatActivityEnterView;
        if (r0 == 0) goto L_0x006a;
    L_0x003b:
        r0 = r14.bottomOverlayChat;
        r0 = r0.getVisibility();
        if (r0 == 0) goto L_0x006a;
    L_0x0043:
        r0 = r14.chatActivityEnterView;
        r0.onPause();
        r0 = r14.replyingMessageObject;
        r3 = r14.chatActivityEnterView;
        r3 = r3.isEditingMessage();
        if (r3 != 0) goto L_0x005d;
    L_0x0052:
        r3 = r14.chatActivityEnterView;
        r3 = r3.getFieldText();
        r3 = org.telegram.messenger.AndroidUtilities.getTrimmedString(r3);
        goto L_0x005e;
    L_0x005d:
        r3 = r2;
    L_0x005e:
        r5 = r14.chatActivityEnterView;
        r5 = r5.isMessageWebPageSearchEnabled();
        r6 = r14.chatActivityEnterView;
        r6.setFieldFocused(r4);
        goto L_0x006d;
    L_0x006a:
        r0 = r2;
        r3 = r0;
        r5 = 1;
    L_0x006d:
        r6 = r14.chatAttachAlert;
        if (r6 == 0) goto L_0x007b;
    L_0x0071:
        r7 = r14.ignoreAttachOnPause;
        if (r7 != 0) goto L_0x0079;
    L_0x0075:
        r6.onPause();
        goto L_0x007b;
    L_0x0079:
        r14.ignoreAttachOnPause = r4;
    L_0x007b:
        r6 = r14.contentView;
        if (r6 == 0) goto L_0x0082;
    L_0x007f:
        r6.onPause();
    L_0x0082:
        r6 = new java.lang.CharSequence[r1];
        r6[r4] = r3;
        r3 = r14.getMediaDataController();
        r11 = r3.getEntities(r6);
        r7 = r14.getMediaDataController();
        r8 = r14.dialog_id;
        r10 = r6[r4];
        if (r0 == 0) goto L_0x009a;
    L_0x0098:
        r2 = r0.messageOwner;
    L_0x009a:
        r12 = r2;
        if (r5 != 0) goto L_0x009f;
    L_0x009d:
        r13 = 1;
        goto L_0x00a0;
    L_0x009f:
        r13 = 0;
    L_0x00a0:
        r7.saveDraft(r8, r10, r11, r12, r13);
        r0 = r14.getMessagesController();
        r2 = r14.dialog_id;
        r0.cancelTyping(r4, r2);
        r0 = r14.pausedOnLastMessage;
        if (r0 != 0) goto L_0x01f5;
    L_0x00b0:
        r0 = r14.currentAccount;
        r0 = org.telegram.messenger.MessagesController.getNotificationsSettings(r0);
        r0 = r0.edit();
        r2 = r14.chatLayoutManager;
        if (r2 == 0) goto L_0x0197;
    L_0x00be:
        r2 = r2.findFirstVisibleItemPosition();
        if (r2 == 0) goto L_0x0197;
    L_0x00c4:
        r3 = r14.chatListView;
        r3 = r3.findViewHolderForAdapterPosition(r2);
        r3 = (org.telegram.ui.Components.RecyclerListView.Holder) r3;
        if (r3 == 0) goto L_0x0197;
    L_0x00ce:
        r5 = r3.itemView;
        r6 = r5 instanceof org.telegram.ui.Cells.ChatMessageCell;
        if (r6 == 0) goto L_0x00df;
    L_0x00d4:
        r5 = (org.telegram.ui.Cells.ChatMessageCell) r5;
        r5 = r5.getMessageObject();
        r5 = r5.getId();
        goto L_0x00ef;
    L_0x00df:
        r6 = r5 instanceof org.telegram.ui.Cells.ChatActionCell;
        if (r6 == 0) goto L_0x00ee;
    L_0x00e3:
        r5 = (org.telegram.ui.Cells.ChatActionCell) r5;
        r5 = r5.getMessageObject();
        r5 = r5.getId();
        goto L_0x00ef;
    L_0x00ee:
        r5 = 0;
    L_0x00ef:
        if (r5 != 0) goto L_0x00fb;
    L_0x00f1:
        r3 = r14.chatListView;
        r5 = r2 + 1;
        r3 = r3.findViewHolderForAdapterPosition(r5);
        r3 = (org.telegram.ui.Components.RecyclerListView.Holder) r3;
    L_0x00fb:
        r2 = r2 - r1;
    L_0x00fc:
        r5 = r14.chatAdapter;
        r5 = r5.messagesStartRow;
        if (r2 < r5) goto L_0x0137;
    L_0x0104:
        r5 = r14.chatAdapter;
        r5 = r5.messagesStartRow;
        r5 = r2 - r5;
        if (r5 < 0) goto L_0x0134;
    L_0x010e:
        r6 = r14.messages;
        r6 = r6.size();
        if (r5 < r6) goto L_0x0117;
    L_0x0116:
        goto L_0x0134;
    L_0x0117:
        r6 = r14.messages;
        r5 = r6.get(r5);
        r5 = (org.telegram.messenger.MessageObject) r5;
        r6 = r5.getId();
        if (r6 != 0) goto L_0x0126;
    L_0x0125:
        goto L_0x0134;
    L_0x0126:
        r2 = r5.isOut();
        if (r2 != 0) goto L_0x0137;
    L_0x012c:
        r2 = r5.isUnread();
        if (r2 == 0) goto L_0x0137;
    L_0x0132:
        r2 = 1;
        goto L_0x0138;
    L_0x0134:
        r2 = r2 + -1;
        goto L_0x00fc;
    L_0x0137:
        r2 = 0;
    L_0x0138:
        if (r3 == 0) goto L_0x0197;
    L_0x013a:
        if (r2 != 0) goto L_0x0197;
    L_0x013c:
        r2 = r3.itemView;
        r5 = r2 instanceof org.telegram.ui.Cells.ChatMessageCell;
        if (r5 == 0) goto L_0x014d;
    L_0x0142:
        r2 = (org.telegram.ui.Cells.ChatMessageCell) r2;
        r2 = r2.getMessageObject();
        r2 = r2.getId();
        goto L_0x015d;
    L_0x014d:
        r5 = r2 instanceof org.telegram.ui.Cells.ChatActionCell;
        if (r5 == 0) goto L_0x015c;
    L_0x0151:
        r2 = (org.telegram.ui.Cells.ChatActionCell) r2;
        r2 = r2.getMessageObject();
        r2 = r2.getId();
        goto L_0x015d;
    L_0x015c:
        r2 = 0;
    L_0x015d:
        if (r2 <= 0) goto L_0x0163;
    L_0x015f:
        r5 = r14.currentEncryptedChat;
        if (r5 == 0) goto L_0x0169;
    L_0x0163:
        if (r2 >= 0) goto L_0x0197;
    L_0x0165:
        r5 = r14.currentEncryptedChat;
        if (r5 == 0) goto L_0x0197;
    L_0x0169:
        r3 = r3.itemView;
        r3 = r3.getBottom();
        r5 = r14.chatListView;
        r5 = r5.getMeasuredHeight();
        r3 = r3 - r5;
        r5 = org.telegram.messenger.BuildVars.LOGS_ENABLED;
        if (r5 == 0) goto L_0x0199;
    L_0x017a:
        r5 = new java.lang.StringBuilder;
        r5.<init>();
        r6 = "save offset = ";
        r5.append(r6);
        r5.append(r3);
        r6 = " for mid ";
        r5.append(r6);
        r5.append(r2);
        r5 = r5.toString();
        org.telegram.messenger.FileLog.d(r5);
        goto L_0x0199;
    L_0x0197:
        r2 = 0;
        r3 = 0;
    L_0x0199:
        r5 = "diditemo";
        r6 = "diditem";
        if (r2 == 0) goto L_0x01c8;
    L_0x019f:
        r7 = new java.lang.StringBuilder;
        r7.<init>();
        r7.append(r6);
        r8 = r14.dialog_id;
        r7.append(r8);
        r6 = r7.toString();
        r0.putInt(r6, r2);
        r2 = new java.lang.StringBuilder;
        r2.<init>();
        r2.append(r5);
        r5 = r14.dialog_id;
        r2.append(r5);
        r2 = r2.toString();
        r0.putInt(r2, r3);
        goto L_0x01f2;
    L_0x01c8:
        r14.pausedOnLastMessage = r1;
        r2 = new java.lang.StringBuilder;
        r2.<init>();
        r2.append(r6);
        r6 = r14.dialog_id;
        r2.append(r6);
        r2 = r2.toString();
        r0.remove(r2);
        r2 = new java.lang.StringBuilder;
        r2.<init>();
        r2.append(r5);
        r5 = r14.dialog_id;
        r2.append(r5);
        r2 = r2.toString();
        r0.remove(r2);
    L_0x01f2:
        r0.commit();
    L_0x01f5:
        r0 = r14.currentUser;
        if (r0 == 0) goto L_0x0202;
    L_0x01f9:
        r2 = java.lang.System.currentTimeMillis();
        r14.chatLeaveTime = r2;
        r14.updateInformationForScreenshotDetector();
    L_0x0202:
        r0 = r14.undoView;
        if (r0 == 0) goto L_0x0209;
    L_0x0206:
        r0.hide(r1, r4);
    L_0x0209:
        return;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.onPause():void");
    }

    private void applyDraftMaybe(boolean z) {
        if (this.chatActivityEnterView != null) {
            DraftMessage draft = getMediaDataController().getDraft(this.dialog_id);
            Message draftMessage = (draft == null || draft.reply_to_msg_id == 0) ? null : getMediaDataController().getDraftMessage(this.dialog_id);
            String str = "";
            if (this.chatActivityEnterView.getFieldText() == null) {
                if (draft != null) {
                    CharSequence charSequence;
                    this.chatActivityEnterView.setWebPage(null, draft.no_webpage ^ 1);
                    if (draft.entities.isEmpty()) {
                        charSequence = draft.message;
                    } else {
                        charSequence = SpannableStringBuilder.valueOf(draft.message);
                        MediaDataController.sortEntities(draft.entities);
                        for (int i = 0; i < draft.entities.size(); i++) {
                            MessageEntity messageEntity = (MessageEntity) draft.entities.get(i);
                            boolean z2 = messageEntity instanceof TL_inputMessageEntityMentionName;
                            int i2;
                            TextStyleRun textStyleRun;
                            TextStyleSpan textStyleSpan;
                            if (z2 || (messageEntity instanceof TL_messageEntityMentionName)) {
                                if (z2) {
                                    i2 = ((TL_inputMessageEntityMentionName) messageEntity).user_id.user_id;
                                } else {
                                    i2 = ((TL_messageEntityMentionName) messageEntity).user_id;
                                }
                                if (messageEntity.offset + messageEntity.length < charSequence.length() && charSequence.charAt(messageEntity.offset + messageEntity.length) == ' ') {
                                    messageEntity.length++;
                                }
                                StringBuilder stringBuilder = new StringBuilder();
                                stringBuilder.append(str);
                                stringBuilder.append(i2);
                                URLSpanUserMention uRLSpanUserMention = new URLSpanUserMention(stringBuilder.toString(), 1);
                                i2 = messageEntity.offset;
                                charSequence.setSpan(uRLSpanUserMention, i2, messageEntity.length + i2, 33);
                            } else if ((messageEntity instanceof TL_messageEntityCode) || (messageEntity instanceof TL_messageEntityPre)) {
                                textStyleRun = new TextStyleRun();
                                textStyleRun.flags |= 4;
                                textStyleSpan = new TextStyleSpan(textStyleRun);
                                i2 = messageEntity.offset;
                                MediaDataController.addStyleToText(textStyleSpan, i2, messageEntity.length + i2, charSequence, true);
                            } else if (messageEntity instanceof TL_messageEntityBold) {
                                textStyleRun = new TextStyleRun();
                                textStyleRun.flags |= 1;
                                textStyleSpan = new TextStyleSpan(textStyleRun);
                                i2 = messageEntity.offset;
                                MediaDataController.addStyleToText(textStyleSpan, i2, messageEntity.length + i2, charSequence, true);
                            } else if (messageEntity instanceof TL_messageEntityItalic) {
                                textStyleRun = new TextStyleRun();
                                textStyleRun.flags |= 2;
                                textStyleSpan = new TextStyleSpan(textStyleRun);
                                i2 = messageEntity.offset;
                                MediaDataController.addStyleToText(textStyleSpan, i2, messageEntity.length + i2, charSequence, true);
                            } else if (messageEntity instanceof TL_messageEntityStrike) {
                                textStyleRun = new TextStyleRun();
                                textStyleRun.flags |= 8;
                                textStyleSpan = new TextStyleSpan(textStyleRun);
                                i2 = messageEntity.offset;
                                MediaDataController.addStyleToText(textStyleSpan, i2, messageEntity.length + i2, charSequence, true);
                            } else if (messageEntity instanceof TL_messageEntityUnderline) {
                                textStyleRun = new TextStyleRun();
                                textStyleRun.flags |= 16;
                                textStyleSpan = new TextStyleSpan(textStyleRun);
                                i2 = messageEntity.offset;
                                MediaDataController.addStyleToText(textStyleSpan, i2, messageEntity.length + i2, charSequence, true);
                            } else if (messageEntity instanceof TL_messageEntityTextUrl) {
                                URLSpanReplacement uRLSpanReplacement = new URLSpanReplacement(messageEntity.url);
                                int i3 = messageEntity.offset;
                                charSequence.setSpan(uRLSpanReplacement, i3, messageEntity.length + i3, 33);
                            }
                        }
                    }
                    this.chatActivityEnterView.setFieldText(charSequence);
                    if (getArguments().getBoolean("hasUrl", false)) {
                        this.chatActivityEnterView.setSelection(draft.message.indexOf(10) + 1);
                        AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$3wjCuO6ZDQxQZZgY8IDGQo_jtP0(this), 700);
                    }
                }
            } else if (z && draft == null) {
                this.chatActivityEnterView.setFieldText(str);
                hideFieldPanel(true);
            }
            if (this.replyingMessageObject == null && draftMessage != null) {
                this.replyingMessageObject = new MessageObject(this.currentAccount, draftMessage, getMessagesController().getUsers(), false);
                showFieldPanelForReply(this.replyingMessageObject);
            }
        }
    }

    public /* synthetic */ void lambda$applyDraftMaybe$63$ChatActivity() {
        ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
        if (chatActivityEnterView != null) {
            chatActivityEnterView.setFieldFocused(true);
            this.chatActivityEnterView.openKeyboard();
        }
    }

    private void updateInformationForScreenshotDetector() {
        if (this.currentUser != null) {
            if (this.currentEncryptedChat != null) {
                ArrayList arrayList = new ArrayList();
                RecyclerListView recyclerListView = this.chatListView;
                if (recyclerListView != null) {
                    int childCount = recyclerListView.getChildCount();
                    for (int i = 0; i < childCount; i++) {
                        View childAt = this.chatListView.getChildAt(i);
                        MessageObject messageObject = null;
                        if (childAt instanceof ChatMessageCell) {
                            messageObject = ((ChatMessageCell) childAt).getMessageObject();
                        }
                        if (messageObject != null && messageObject.getId() < 0) {
                            long j = messageObject.messageOwner.random_id;
                            if (j != 0) {
                                arrayList.add(Long.valueOf(j));
                            }
                        }
                    }
                }
                MediaController.getInstance().setLastVisibleMessageIds(this.currentAccount, this.chatEnterTime, this.chatLeaveTime, this.currentUser, this.currentEncryptedChat, arrayList, 0);
            } else {
                SecretMediaViewer instance = SecretMediaViewer.getInstance();
                MessageObject currentMessageObject = instance.getCurrentMessageObject();
                if (!(currentMessageObject == null || currentMessageObject.isOut())) {
                    MediaController.getInstance().setLastVisibleMessageIds(this.currentAccount, instance.getOpenTime(), instance.getCloseTime(), this.currentUser, null, null, currentMessageObject.getId());
                }
            }
        }
    }

    private boolean fixLayoutInternal() {
        boolean z;
        if (AndroidUtilities.isTablet() || ApplicationLoader.applicationContext.getResources().getConfiguration().orientation != 2) {
            this.selectedMessagesCountTextView.setTextSize(20);
        } else {
            this.selectedMessagesCountTextView.setTextSize(18);
        }
        int childCount = this.chatListView.getChildCount();
        HashMap hashMap = null;
        int i = 0;
        while (true) {
            z = true;
            if (i >= childCount) {
                break;
            }
            View childAt = this.chatListView.getChildAt(i);
            if (childAt instanceof ChatMessageCell) {
                GroupedMessages currentMessagesGroup = ((ChatMessageCell) childAt).getCurrentMessagesGroup();
                if (currentMessagesGroup != null && currentMessagesGroup.hasSibling) {
                    if (hashMap == null) {
                        hashMap = new HashMap();
                    }
                    if (!hashMap.containsKey(Long.valueOf(currentMessagesGroup.groupId))) {
                        hashMap.put(Long.valueOf(currentMessagesGroup.groupId), currentMessagesGroup);
                        ArrayList arrayList = currentMessagesGroup.messages;
                        int indexOf = this.messages.indexOf((MessageObject) arrayList.get(arrayList.size() - 1));
                        if (indexOf >= 0) {
                            ChatActivityAdapter chatActivityAdapter = this.chatAdapter;
                            chatActivityAdapter.notifyItemRangeChanged(indexOf + chatActivityAdapter.messagesStartRow, currentMessagesGroup.messages.size());
                        }
                    }
                }
            }
            i++;
        }
        if (!AndroidUtilities.isTablet()) {
            return true;
        }
        FragmentContextView fragmentContextView;
        if (AndroidUtilities.isSmallTablet() && ApplicationLoader.applicationContext.getResources().getConfiguration().orientation == 1) {
            this.actionBar.setBackButtonDrawable(new BackDrawable(false));
            fragmentContextView = this.fragmentContextView;
            if (fragmentContextView != null && fragmentContextView.getParent() == null) {
                ((ViewGroup) this.fragmentView).addView(this.fragmentContextView, LayoutHelper.createFrame(-1, 39.0f, 51, 0.0f, -36.0f, 0.0f, 0.0f));
            }
        } else {
            ActionBar actionBar = this.actionBar;
            ActionBarLayout actionBarLayout = this.parentLayout;
            if (!(actionBarLayout == null || actionBarLayout.fragmentsStack.isEmpty() || this.parentLayout.fragmentsStack.get(0) == this || this.parentLayout.fragmentsStack.size() == 1)) {
                z = false;
            }
            actionBar.setBackButtonDrawable(new BackDrawable(z));
            fragmentContextView = this.fragmentContextView;
            if (!(fragmentContextView == null || fragmentContextView.getParent() == null)) {
                this.fragmentView.setPadding(0, 0, 0, 0);
                ((ViewGroup) this.fragmentView).removeView(this.fragmentContextView);
            }
        }
        return false;
    }

    private void fixLayout() {
        ChatAvatarContainer chatAvatarContainer = this.avatarContainer;
        if (chatAvatarContainer != null) {
            chatAvatarContainer.getViewTreeObserver().addOnPreDrawListener(new OnPreDrawListener() {
                public boolean onPreDraw() {
                    if (ChatActivity.this.avatarContainer != null) {
                        ChatActivity.this.avatarContainer.getViewTreeObserver().removeOnPreDrawListener(this);
                    }
                    return ChatActivity.this.fixLayoutInternal();
                }
            });
        }
    }

    public boolean maybePlayVisibleVideo() {
        if (this.chatListView == null) {
            return false;
        }
        MessageObject playingMessageObject = MediaController.getInstance().getPlayingMessageObject();
        if (playingMessageObject != null && !playingMessageObject.isVideo()) {
            return false;
        }
        AnimatedFileDrawable animatedFileDrawable;
        MessageObject messageObject;
        HintView hintView = this.noSoundHintView;
        ArrayList arrayList = null;
        if (hintView == null || hintView.getTag() == null) {
            animatedFileDrawable = null;
            messageObject = animatedFileDrawable;
        } else {
            ChatMessageCell messageCell = this.noSoundHintView.getMessageCell();
            ImageReceiver photoImage = messageCell.getPhotoImage();
            animatedFileDrawable = photoImage.getAnimation();
            if (animatedFileDrawable != null) {
                messageObject = messageCell.getMessageObject();
                this.scrollToVideo = messageCell.getTop() + photoImage.getImageY2() > this.chatListView.getMeasuredHeight();
            } else {
                messageObject = null;
            }
        }
        if (messageObject == null) {
            int childCount = this.chatListView.getChildCount();
            for (int i = 0; i < childCount; i++) {
                View childAt = this.chatListView.getChildAt(i);
                if (childAt instanceof ChatMessageCell) {
                    ChatMessageCell chatMessageCell = (ChatMessageCell) childAt;
                    MessageObject messageObject2 = chatMessageCell.getMessageObject();
                    boolean isRoundVideo = messageObject2.isRoundVideo();
                    if (messageObject2.isVideo() || isRoundVideo) {
                        ImageReceiver photoImage2 = chatMessageCell.getPhotoImage();
                        AnimatedFileDrawable animation = photoImage2.getAnimation();
                        if (animation != null) {
                            int top = childAt.getTop() + photoImage2.getImageY();
                            int imageHeight = photoImage2.getImageHeight() + top;
                            if (imageHeight >= 0 && top <= this.chatListView.getMeasuredHeight()) {
                                if (messageObject != null && top < 0) {
                                    break;
                                }
                                boolean z = top < 0 || imageHeight > this.chatListView.getMeasuredHeight();
                                this.scrollToVideo = z;
                                if (top >= 0 && imageHeight <= this.chatListView.getMeasuredHeight()) {
                                    messageObject = messageObject2;
                                    animatedFileDrawable = animation;
                                    break;
                                }
                                messageObject = messageObject2;
                                animatedFileDrawable = animation;
                            }
                        } else {
                            continue;
                        }
                    }
                }
            }
        }
        if (messageObject == null || MediaController.getInstance().isPlayingMessage(messageObject)) {
            return false;
        }
        hintView = this.noSoundHintView;
        if (hintView != null) {
            hintView.hide();
        }
        hintView = this.forwardHintView;
        if (hintView != null) {
            hintView.hide();
        }
        if (messageObject.isRoundVideo()) {
            boolean playMessage = MediaController.getInstance().playMessage(messageObject);
            MediaController instance = MediaController.getInstance();
            if (playMessage) {
                arrayList = createVoiceMessagesPlaylist(messageObject, false);
            }
            instance.setVoiceMessagesPlaylist(arrayList, false);
            return playMessage;
        }
        SharedConfig.setNoSoundHintShowed(true);
        messageObject.audioProgress = animatedFileDrawable.getCurrentProgress();
        messageObject.audioProgressMs = animatedFileDrawable.getCurrentProgressMs();
        animatedFileDrawable.stop();
        if (PhotoViewer.isPlayingMessageInPip(messageObject)) {
            PhotoViewer.getPipInstance().destroyPhotoViewer();
        }
        return MediaController.getInstance().playMessage(messageObject);
    }

    public void onConfigurationChanged(Configuration configuration) {
        fixLayout();
        Dialog dialog = this.visibleDialog;
        if (dialog instanceof DatePickerDialog) {
            dialog.dismiss();
        }
        ActionBarPopupWindow actionBarPopupWindow = this.scrimPopupWindow;
        if (actionBarPopupWindow != null) {
            actionBarPopupWindow.dismiss();
        }
        if (!AndroidUtilities.isTablet()) {
            if (configuration.orientation == 2) {
                if (!PhotoViewer.hasInstance() || !PhotoViewer.getInstance().isVisible()) {
                    MessageObject playingMessageObject = MediaController.getInstance().getPlayingMessageObject();
                    if (playingMessageObject != null && playingMessageObject.isVideo()) {
                        PhotoViewer.getInstance().setParentActivity(getParentActivity());
                        getFileLoader().setLoadingVideoForPlayer(playingMessageObject.getDocument(), false);
                        MediaController.getInstance().cleanupPlayer(true, true, false, true);
                        PhotoViewer instance = PhotoViewer.getInstance();
                        long j = 0;
                        long j2 = playingMessageObject.type != 0 ? this.dialog_id : 0;
                        if (playingMessageObject.type != 0) {
                            j = this.mergeDialogId;
                        }
                        if (instance.openPhoto(playingMessageObject, j2, j, this.photoViewerProvider, false)) {
                            PhotoViewer.getInstance().setParentChatActivity(this);
                        }
                        HintView hintView = this.noSoundHintView;
                        if (hintView != null) {
                            hintView.hide();
                        }
                        hintView = this.forwardHintView;
                        if (hintView != null) {
                            hintView.hide();
                        }
                        hintView = this.slowModeHint;
                        if (hintView != null) {
                            hintView.hide();
                        }
                        MediaController.getInstance().resetGoingToShowMessageObject();
                    }
                }
            } else if (PhotoViewer.hasInstance() && PhotoViewer.getInstance().isOpenedFullScreenVideo()) {
                PhotoViewer.getInstance().injectVideoPlayerToMediaController();
                PhotoViewer.getInstance().closePhoto(false, true);
            }
        }
    }

    private void createDeleteMessagesAlert(MessageObject messageObject, GroupedMessages groupedMessages) {
        createDeleteMessagesAlert(messageObject, groupedMessages, 1);
    }

    private void createDeleteMessagesAlert(MessageObject messageObject, GroupedMessages groupedMessages, int i) {
        AlertsCreator.createDeleteMessagesAlert(this, this.currentUser, this.currentChat, this.currentEncryptedChat, this.chatInfo, this.mergeDialogId, messageObject, this.selectedMessagesIds, groupedMessages, i, new -$$Lambda$ChatActivity$52aFKnVt51zrXleUfe7RLvPSCEs(this));
    }

    public /* synthetic */ void lambda$createDeleteMessagesAlert$64$ChatActivity() {
        hideActionMode();
        updatePinnedMessageView(true);
    }

    private void hideActionMode() {
        if (this.actionBar.isActionModeShowed()) {
            ActionBar actionBar = this.actionBar;
            if (actionBar != null) {
                actionBar.hideActionMode();
            }
            this.cantDeleteMessagesCount = 0;
            this.canEditMessagesCount = 0;
            this.cantForwardMessagesCount = 0;
            ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
            if (chatActivityEnterView != null) {
                EditTextCaption editField = chatActivityEnterView.getEditField();
                editField.requestFocus();
                editField.setAllowDrawCursor(true);
            }
        }
    }

    private void createMenu(View view, boolean z, boolean z2, float f, float f2) {
        createMenu(view, z, z2, f, f2, true);
    }

    /* JADX WARNING: Removed duplicated region for block: B:434:0x0e39  */
    /* JADX WARNING: Removed duplicated region for block: B:433:0x0e38 A:{RETURN} */
    /* JADX WARNING: Removed duplicated region for block: B:433:0x0e38 A:{RETURN} */
    /* JADX WARNING: Removed duplicated region for block: B:434:0x0e39  */
    /* JADX WARNING: Removed duplicated region for block: B:168:0x0312  */
    /* JADX WARNING: Removed duplicated region for block: B:167:0x0311 A:{RETURN} */
    /* JADX WARNING: Removed duplicated region for block: B:73:0x0110  */
    /* JADX WARNING: Removed duplicated region for block: B:83:0x0135  */
    /* JADX WARNING: Removed duplicated region for block: B:82:0x0133  */
    /* JADX WARNING: Removed duplicated region for block: B:120:0x01a4 A:{SKIP} */
    /* JADX WARNING: Removed duplicated region for block: B:167:0x0311 A:{RETURN} */
    /* JADX WARNING: Removed duplicated region for block: B:168:0x0312  */
    /* JADX WARNING: Removed duplicated region for block: B:56:0x00d9  */
    /* JADX WARNING: Removed duplicated region for block: B:62:0x00ec  */
    /* JADX WARNING: Removed duplicated region for block: B:73:0x0110  */
    /* JADX WARNING: Removed duplicated region for block: B:82:0x0133  */
    /* JADX WARNING: Removed duplicated region for block: B:83:0x0135  */
    /* JADX WARNING: Removed duplicated region for block: B:120:0x01a4 A:{SKIP} */
    /* JADX WARNING: Removed duplicated region for block: B:168:0x0312  */
    /* JADX WARNING: Removed duplicated region for block: B:167:0x0311 A:{RETURN} */
    /* JADX WARNING: Removed duplicated region for block: B:56:0x00d9  */
    /* JADX WARNING: Removed duplicated region for block: B:62:0x00ec  */
    /* JADX WARNING: Removed duplicated region for block: B:73:0x0110  */
    /* JADX WARNING: Removed duplicated region for block: B:83:0x0135  */
    /* JADX WARNING: Removed duplicated region for block: B:82:0x0133  */
    /* JADX WARNING: Removed duplicated region for block: B:120:0x01a4 A:{SKIP} */
    /* JADX WARNING: Removed duplicated region for block: B:167:0x0311 A:{RETURN} */
    /* JADX WARNING: Removed duplicated region for block: B:168:0x0312  */
    /* JADX WARNING: Removed duplicated region for block: B:56:0x00d9  */
    /* JADX WARNING: Removed duplicated region for block: B:62:0x00ec  */
    /* JADX WARNING: Removed duplicated region for block: B:73:0x0110  */
    /* JADX WARNING: Removed duplicated region for block: B:82:0x0133  */
    /* JADX WARNING: Removed duplicated region for block: B:83:0x0135  */
    /* JADX WARNING: Removed duplicated region for block: B:120:0x01a4 A:{SKIP} */
    /* JADX WARNING: Removed duplicated region for block: B:168:0x0312  */
    /* JADX WARNING: Removed duplicated region for block: B:167:0x0311 A:{RETURN} */
    /* JADX WARNING: Missing block: B:57:0x00df, code skipped:
            if (r5.pinned_msg_id == r0.getId()) goto L_0x00e1;
     */
    /* JADX WARNING: Missing block: B:219:0x0483, code skipped:
            if (r2.bot != false) goto L_0x0485;
     */
    /* JADX WARNING: Missing block: B:289:0x06ba, code skipped:
            if (r1.edit_messages != false) goto L_0x06bc;
     */
    /* JADX WARNING: Missing block: B:379:0x0b8e, code skipped:
            if (r1.bot != false) goto L_0x0b90;
     */
    private void createMenu(android.view.View r22, boolean r23, boolean r24, float r25, float r26, boolean r27) {
        /*
        r21 = this;
        r7 = r21;
        r8 = r22;
        r0 = r7.actionBar;
        r0 = r0.isActionModeShowed();
        if (r0 == 0) goto L_0x000d;
    L_0x000c:
        return;
    L_0x000d:
        r0 = r8 instanceof org.telegram.ui.Cells.ChatMessageCell;
        r1 = 0;
        if (r0 == 0) goto L_0x001a;
    L_0x0012:
        r0 = r8;
        r0 = (org.telegram.ui.Cells.ChatMessageCell) r0;
        r0 = r0.getMessageObject();
        goto L_0x0027;
    L_0x001a:
        r0 = r8 instanceof org.telegram.ui.Cells.ChatActionCell;
        if (r0 == 0) goto L_0x0026;
    L_0x001e:
        r0 = r8;
        r0 = (org.telegram.ui.Cells.ChatActionCell) r0;
        r0 = r0.getMessageObject();
        goto L_0x0027;
    L_0x0026:
        r0 = r1;
    L_0x0027:
        if (r0 != 0) goto L_0x002a;
    L_0x0029:
        return;
    L_0x002a:
        r2 = r7.getMessageType(r0);
        if (r23 == 0) goto L_0x004f;
    L_0x0030:
        r3 = r0.messageOwner;
        r4 = r3.action;
        r4 = r4 instanceof org.telegram.tgnet.TLRPC.TL_messageActionPinMessage;
        if (r4 == 0) goto L_0x004f;
    L_0x0038:
        r0 = r3.reply_to_msg_id;
        r1 = r3.id;
        r2 = 1;
        r3 = 0;
        r4 = 0;
        r22 = r21;
        r23 = r0;
        r24 = r1;
        r25 = r2;
        r26 = r3;
        r27 = r4;
        r22.scrollToMessageId(r23, r24, r25, r26, r27);
        return;
    L_0x004f:
        r7.selectedObject = r1;
        r7.selectedObjectGroup = r1;
        r7.forwardingMessage = r1;
        r7.forwardingMessageGroup = r1;
        r7.selectedObjectToEditCaption = r1;
        r9 = 1;
        r3 = 1;
    L_0x005b:
        if (r3 < 0) goto L_0x0075;
    L_0x005d:
        r4 = r7.selectedMessagesCanCopyIds;
        r4 = r4[r3];
        r4.clear();
        r4 = r7.selectedMessagesCanStarIds;
        r4 = r4[r3];
        r4.clear();
        r4 = r7.selectedMessagesIds;
        r4 = r4[r3];
        r4.clear();
        r3 = r3 + -1;
        goto L_0x005b;
    L_0x0075:
        r21.hideActionMode();
        r7.updatePinnedMessageView(r9);
        if (r27 == 0) goto L_0x0082;
    L_0x007d:
        r3 = r7.getValidGroupedMessage(r0);
        goto L_0x0083;
    L_0x0082:
        r3 = r1;
    L_0x0083:
        r4 = r7.currentChat;
        r10 = 0;
        if (r4 == 0) goto L_0x009c;
    L_0x0088:
        r4 = r0.getDialogId();
        r11 = r7.mergeDialogId;
        r6 = (r4 > r11 ? 1 : (r4 == r11 ? 0 : -1));
        if (r6 == 0) goto L_0x00a7;
    L_0x0092:
        r4 = r7.currentChat;
        r4 = org.telegram.messenger.ChatObject.canPinMessages(r4);
        if (r4 == 0) goto L_0x00a7;
    L_0x009a:
        r4 = 1;
        goto L_0x00a8;
    L_0x009c:
        r4 = r7.currentEncryptedChat;
        if (r4 != 0) goto L_0x00a7;
    L_0x00a0:
        r4 = r7.userInfo;
        if (r4 == 0) goto L_0x00a7;
    L_0x00a4:
        r4 = r4.can_pin_message;
        goto L_0x00a8;
    L_0x00a7:
        r4 = 0;
    L_0x00a8:
        if (r4 == 0) goto L_0x00bc;
    L_0x00aa:
        r4 = r0.getId();
        if (r4 <= 0) goto L_0x00bc;
    L_0x00b0:
        r4 = r0.messageOwner;
        r4 = r4.action;
        if (r4 == 0) goto L_0x00ba;
    L_0x00b6:
        r4 = r4 instanceof org.telegram.tgnet.TLRPC.TL_messageActionEmpty;
        if (r4 == 0) goto L_0x00bc;
    L_0x00ba:
        r4 = 1;
        goto L_0x00bd;
    L_0x00bc:
        r4 = 0;
    L_0x00bd:
        r5 = r0.getDialogId();
        r11 = r7.mergeDialogId;
        r13 = (r5 > r11 ? 1 : (r5 == r11 ? 0 : -1));
        if (r13 == 0) goto L_0x00e3;
    L_0x00c7:
        if (r4 == 0) goto L_0x00e3;
    L_0x00c9:
        r5 = r7.chatInfo;
        if (r5 == 0) goto L_0x00d5;
    L_0x00cd:
        r5 = r5.pinned_msg_id;
        r6 = r0.getId();
        if (r5 == r6) goto L_0x00e1;
    L_0x00d5:
        r5 = r7.userInfo;
        if (r5 == 0) goto L_0x00e3;
    L_0x00d9:
        r5 = r5.pinned_msg_id;
        r6 = r0.getId();
        if (r5 != r6) goto L_0x00e3;
    L_0x00e1:
        r5 = 1;
        goto L_0x00e4;
    L_0x00e3:
        r5 = 0;
    L_0x00e4:
        r6 = r7.currentChat;
        r6 = r0.canEditMessage(r6);
        if (r6 == 0) goto L_0x0100;
    L_0x00ec:
        r6 = r7.chatActivityEnterView;
        r6 = r6.hasAudioToSend();
        if (r6 != 0) goto L_0x0100;
    L_0x00f4:
        r11 = r0.getDialogId();
        r13 = r7.mergeDialogId;
        r6 = (r11 > r13 ? 1 : (r11 == r13 ? 0 : -1));
        if (r6 == 0) goto L_0x0100;
    L_0x00fe:
        r6 = 1;
        goto L_0x0101;
    L_0x0100:
        r6 = 0;
    L_0x0101:
        r11 = 2;
        if (r6 == 0) goto L_0x0136;
    L_0x0104:
        if (r3 == 0) goto L_0x0136;
    L_0x0106:
        r6 = r3.messages;
        r6 = r6.size();
        r12 = 0;
        r13 = 0;
    L_0x010e:
        if (r12 >= r6) goto L_0x0131;
    L_0x0110:
        r14 = r3.messages;
        r14 = r14.get(r12);
        r14 = (org.telegram.messenger.MessageObject) r14;
        if (r12 == 0) goto L_0x0122;
    L_0x011a:
        r15 = r14.caption;
        r15 = android.text.TextUtils.isEmpty(r15);
        if (r15 != 0) goto L_0x012e;
    L_0x0122:
        r7.selectedObjectToEditCaption = r14;
        r14 = r14.caption;
        r14 = android.text.TextUtils.isEmpty(r14);
        if (r14 != 0) goto L_0x012e;
    L_0x012c:
        r13 = r13 + 1;
    L_0x012e:
        r12 = r12 + 1;
        goto L_0x010e;
    L_0x0131:
        if (r13 >= r11) goto L_0x0135;
    L_0x0133:
        r6 = 1;
        goto L_0x0136;
    L_0x0135:
        r6 = 0;
    L_0x0136:
        r12 = r7.currentEncryptedChat;
        if (r12 == 0) goto L_0x0144;
    L_0x013a:
        r12 = r12.layer;
        r12 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r12);
        r13 = 46;
        if (r12 < r13) goto L_0x01a1;
    L_0x0144:
        if (r2 != r9) goto L_0x0156;
    L_0x0146:
        r12 = r0.getDialogId();
        r14 = r7.mergeDialogId;
        r16 = (r12 > r14 ? 1 : (r12 == r14 ? 0 : -1));
        if (r16 == 0) goto L_0x01a1;
    L_0x0150:
        r12 = r0.needDrawBluredPreview();
        if (r12 != 0) goto L_0x01a1;
    L_0x0156:
        r12 = r0.messageOwner;
        r12 = r12.action;
        r12 = r12 instanceof org.telegram.tgnet.TLRPC.TL_messageActionSecureValuesSent;
        if (r12 != 0) goto L_0x01a1;
    L_0x015e:
        r12 = r7.currentEncryptedChat;
        if (r12 != 0) goto L_0x0168;
    L_0x0162:
        r12 = r0.getId();
        if (r12 < 0) goto L_0x01a1;
    L_0x0168:
        r12 = r7.bottomOverlayChat;
        if (r12 == 0) goto L_0x0172;
    L_0x016c:
        r12 = r12.getVisibility();
        if (r12 == 0) goto L_0x01a1;
    L_0x0172:
        r12 = r7.isBroadcast;
        if (r12 != 0) goto L_0x01a1;
    L_0x0176:
        r12 = r7.currentChat;
        if (r12 == 0) goto L_0x019f;
    L_0x017a:
        r12 = org.telegram.messenger.ChatObject.isNotInChat(r12);
        if (r12 != 0) goto L_0x01a1;
    L_0x0180:
        r12 = r7.currentChat;
        r12 = org.telegram.messenger.ChatObject.isChannel(r12);
        if (r12 == 0) goto L_0x0196;
    L_0x0188:
        r12 = r7.currentChat;
        r12 = org.telegram.messenger.ChatObject.canPost(r12);
        if (r12 != 0) goto L_0x0196;
    L_0x0190:
        r12 = r7.currentChat;
        r12 = r12.megagroup;
        if (r12 == 0) goto L_0x01a1;
    L_0x0196:
        r12 = r7.currentChat;
        r12 = org.telegram.messenger.ChatObject.canSendMessages(r12);
        if (r12 != 0) goto L_0x019f;
    L_0x019e:
        goto L_0x01a1;
    L_0x019f:
        r12 = 1;
        goto L_0x01a2;
    L_0x01a1:
        r12 = 0;
    L_0x01a2:
        if (r23 != 0) goto L_0x030b;
    L_0x01a4:
        if (r2 < r11) goto L_0x030b;
    L_0x01a6:
        r13 = 20;
        if (r2 != r13) goto L_0x01ac;
    L_0x01aa:
        goto L_0x030b;
    L_0x01ac:
        r1 = r7.chatActivityEnterView;
        if (r1 == 0) goto L_0x01bf;
    L_0x01b0:
        r1 = r1.isRecordingAudioVideo();
        if (r1 != 0) goto L_0x01be;
    L_0x01b6:
        r1 = r7.chatActivityEnterView;
        r1 = r1.isRecordLocked();
        if (r1 == 0) goto L_0x01bf;
    L_0x01be:
        return;
    L_0x01bf:
        r1 = r7.actionBar;
        r1 = r1.createActionMode();
        r2 = 12;
        r1 = r1.getItem(r2);
        if (r1 == 0) goto L_0x01d0;
    L_0x01cd:
        r1.setVisibility(r10);
    L_0x01d0:
        r1 = r7.bottomMessagesActionContainer;
        r1.setVisibility(r10);
        r1 = r7.chatActivityEnterView;
        r1 = r1.getMeasuredHeight();
        r2 = NUM; // 0x424CLASSNAME float:51.0 double:5.495378504E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r18 = r1 - r2;
        r1 = r7.chatActivityEnterView;
        r1 = r1.getVisibility();
        if (r1 != 0) goto L_0x0249;
    L_0x01eb:
        r1 = new java.util.ArrayList;
        r1.<init>();
        r2 = r7.chatActivityEnterView;
        r1.add(r2);
        r2 = r7.mentionContainer;
        if (r2 == 0) goto L_0x0204;
    L_0x01f9:
        r2 = r2.getVisibility();
        if (r2 != 0) goto L_0x0204;
    L_0x01ff:
        r2 = r7.mentionContainer;
        r1.add(r2);
    L_0x0204:
        r2 = r7.stickersPanel;
        if (r2 == 0) goto L_0x0213;
    L_0x0208:
        r2 = r2.getVisibility();
        if (r2 != 0) goto L_0x0213;
    L_0x020e:
        r2 = r7.stickersPanel;
        r1.add(r2);
    L_0x0213:
        r12 = r7.actionBar;
        r13 = r7.bottomMessagesActionContainer;
        r14 = 0;
        r2 = new android.view.View[r10];
        r1 = r1.toArray(r2);
        r15 = r1;
        r15 = (android.view.View[]) r15;
        r1 = 3;
        r1 = new boolean[r1];
        r1 = {0, 1, 1};
        r2 = r7.chatListView;
        r16 = r1;
        r17 = r2;
        r12.showActionMode(r13, r14, r15, r16, r17, r18);
        r1 = r21.getParentActivity();
        if (r1 == 0) goto L_0x023f;
    L_0x0236:
        r1 = r21.getParentActivity();
        r1 = (org.telegram.ui.LaunchActivity) r1;
        r1.hideVisibleActionMode();
    L_0x023f:
        r1 = r7.chatActivityEnterView;
        r1 = r1.getEditField();
        r1.setAllowDrawCursor(r10);
        goto L_0x029a;
    L_0x0249:
        r1 = r7.bottomOverlayChat;
        r1 = r1.getVisibility();
        if (r1 != 0) goto L_0x026a;
    L_0x0251:
        r12 = r7.actionBar;
        r13 = r7.bottomMessagesActionContainer;
        r14 = 0;
        r15 = new android.view.View[r9];
        r1 = r7.bottomOverlayChat;
        r15[r10] = r1;
        r1 = new boolean[r9];
        r1[r10] = r9;
        r2 = r7.chatListView;
        r16 = r1;
        r17 = r2;
        r12.showActionMode(r13, r14, r15, r16, r17, r18);
        goto L_0x029a;
    L_0x026a:
        r1 = r7.searchContainer;
        r1 = r1.getVisibility();
        if (r1 != 0) goto L_0x028b;
    L_0x0272:
        r12 = r7.actionBar;
        r13 = r7.bottomMessagesActionContainer;
        r14 = 0;
        r15 = new android.view.View[r9];
        r1 = r7.searchContainer;
        r15[r10] = r1;
        r1 = new boolean[r9];
        r1[r10] = r9;
        r2 = r7.chatListView;
        r16 = r1;
        r17 = r2;
        r12.showActionMode(r13, r14, r15, r16, r17, r18);
        goto L_0x029a;
    L_0x028b:
        r12 = r7.actionBar;
        r13 = r7.bottomMessagesActionContainer;
        r14 = 0;
        r15 = 0;
        r16 = 0;
        r1 = r7.chatListView;
        r17 = r1;
        r12.showActionMode(r13, r14, r15, r16, r17, r18);
    L_0x029a:
        r1 = r7.scrimPopupWindow;
        if (r1 == 0) goto L_0x02a1;
    L_0x029e:
        r1.dismiss();
    L_0x02a1:
        r1 = r7.chatLayoutManager;
        r1.setCanScrollVertically(r9);
        r7.updatePinnedMessageView(r9);
        r1 = new android.animation.AnimatorSet;
        r1.<init>();
        r2 = new java.util.ArrayList;
        r2.<init>();
        r3 = 0;
    L_0x02b4:
        r4 = r7.actionModeViews;
        r4 = r4.size();
        if (r3 >= r4) goto L_0x02e1;
    L_0x02bc:
        r4 = r7.actionModeViews;
        r4 = r4.get(r3);
        r4 = (android.view.View) r4;
        r5 = org.telegram.ui.ActionBar.ActionBar.getCurrentActionBarHeight();
        r5 = r5 / r11;
        r5 = (float) r5;
        r4.setPivotY(r5);
        org.telegram.messenger.AndroidUtilities.clearDrawableAnimation(r4);
        r5 = android.view.View.SCALE_Y;
        r6 = new float[r11];
        r6 = {NUM, NUM};
        r4 = android.animation.ObjectAnimator.ofFloat(r4, r5, r6);
        r2.add(r4);
        r3 = r3 + 1;
        goto L_0x02b4;
    L_0x02e1:
        r1.playTogether(r2);
        r2 = 250; // 0xfa float:3.5E-43 double:1.235E-321;
        r1.setDuration(r2);
        r1.start();
        r1 = r24;
        r7.addToSelectedMessages(r0, r1);
        r0 = r7.selectedMessagesCountTextView;
        r1 = r7.selectedMessagesIds;
        r1 = r1[r10];
        r1 = r1.size();
        r2 = r7.selectedMessagesIds;
        r2 = r2[r9];
        r2 = r2.size();
        r1 = r1 + r2;
        r0.setNumber(r1, r10);
        r21.updateVisibleRows();
        return;
    L_0x030b:
        r13 = r21.getParentActivity();
        if (r13 != 0) goto L_0x0312;
    L_0x0311:
        return;
    L_0x0312:
        r13 = new java.util.ArrayList;
        r13.<init>();
        r14 = new java.util.ArrayList;
        r14.<init>();
        r15 = new java.util.ArrayList;
        r15.<init>();
        if (r2 >= 0) goto L_0x033c;
    L_0x0323:
        r1 = -1;
        if (r2 != r1) goto L_0x0339;
    L_0x0326:
        if (r23 == 0) goto L_0x0339;
    L_0x0328:
        r1 = r0.isSending();
        if (r1 != 0) goto L_0x0334;
    L_0x032e:
        r1 = r0.isEditing();
        if (r1 == 0) goto L_0x0339;
    L_0x0334:
        r1 = r7.currentEncryptedChat;
        if (r1 != 0) goto L_0x0339;
    L_0x0338:
        goto L_0x033c;
    L_0x0339:
        r1 = 4;
        goto L_0x0e32;
    L_0x033c:
        r7.selectedObject = r0;
        r7.selectedObjectGroup = r3;
        r1 = -1;
        r3 = "Copy";
        r17 = NUM; // 0x7var_ float:1.7945334E38 double:1.0529356873E-314;
        if (r2 != r1) goto L_0x0393;
    L_0x0348:
        r0 = r7.selectedObject;
        r1 = r0.type;
        if (r1 == 0) goto L_0x035a;
    L_0x034e:
        r0 = r0.isAnimatedEmoji();
        if (r0 != 0) goto L_0x035a;
    L_0x0354:
        r0 = r7.selectedObject;
        r0 = r0.caption;
        if (r0 == 0) goto L_0x0376;
    L_0x035a:
        r0 = NUM; // 0x7f0d0310 float:1.8743705E38 double:1.053130165E-314;
        r0 = org.telegram.messenger.LocaleController.getString(r3, r0);
        r14.add(r0);
        r0 = 3;
        r0 = java.lang.Integer.valueOf(r0);
        r15.add(r0);
        r0 = NUM; // 0x7var_ float:1.7945332E38 double:1.052935687E-314;
        r0 = java.lang.Integer.valueOf(r0);
        r13.add(r0);
    L_0x0376:
        r0 = NUM; // 0x7f0d0203 float:1.874316E38 double:1.053130032E-314;
        r1 = "CancelSending";
        r0 = org.telegram.messenger.LocaleController.getString(r1, r0);
        r14.add(r0);
        r0 = 24;
        r0 = java.lang.Integer.valueOf(r0);
        r15.add(r0);
        r0 = java.lang.Integer.valueOf(r17);
        r13.add(r0);
        goto L_0x0339;
    L_0x0393:
        r1 = NUM; // 0x7f0d0350 float:1.8743835E38 double:1.0531301965E-314;
        r11 = "Delete";
        if (r2 != 0) goto L_0x03ce;
    L_0x039a:
        r0 = NUM; // 0x7f0d090b float:1.874681E38 double:1.0531309213E-314;
        r2 = "Retry";
        r0 = org.telegram.messenger.LocaleController.getString(r2, r0);
        r14.add(r0);
        r0 = java.lang.Integer.valueOf(r10);
        r15.add(r0);
        r0 = NUM; // 0x7var_b float:1.7945412E38 double:1.052935706E-314;
        r0 = java.lang.Integer.valueOf(r0);
        r13.add(r0);
        r0 = org.telegram.messenger.LocaleController.getString(r11, r1);
        r14.add(r0);
        r0 = java.lang.Integer.valueOf(r9);
        r15.add(r0);
        r0 = java.lang.Integer.valueOf(r17);
        r13.add(r0);
        goto L_0x0339;
    L_0x03ce:
        if (r2 != r9) goto L_0x050b;
    L_0x03d0:
        r2 = r7.currentChat;
        if (r2 == 0) goto L_0x04c3;
    L_0x03d4:
        r2 = r7.isBroadcast;
        if (r2 != 0) goto L_0x04c3;
    L_0x03d8:
        if (r12 == 0) goto L_0x03f9;
    L_0x03da:
        r2 = NUM; // 0x7f0d08d4 float:1.8746699E38 double:1.053130894E-314;
        r3 = "Reply";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r14.add(r2);
        r2 = 8;
        r2 = java.lang.Integer.valueOf(r2);
        r15.add(r2);
        r2 = NUM; // 0x7var_ float:1.7945407E38 double:1.052935705E-314;
        r2 = java.lang.Integer.valueOf(r2);
        r13.add(r2);
    L_0x03f9:
        if (r5 == 0) goto L_0x041b;
    L_0x03fb:
        r2 = NUM; // 0x7f0d0a68 float:1.8747518E38 double:1.0531310937E-314;
        r3 = "UnpinMessage";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r14.add(r2);
        r2 = 14;
        r2 = java.lang.Integer.valueOf(r2);
        r15.add(r2);
        r2 = NUM; // 0x7var_ad float:1.7945448E38 double:1.052935715E-314;
        r2 = java.lang.Integer.valueOf(r2);
        r13.add(r2);
        goto L_0x043c;
    L_0x041b:
        if (r4 == 0) goto L_0x043c;
    L_0x041d:
        r2 = NUM; // 0x7f0d0856 float:1.8746443E38 double:1.053130832E-314;
        r3 = "PinMessage";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r14.add(r2);
        r2 = 13;
        r2 = java.lang.Integer.valueOf(r2);
        r15.add(r2);
        r2 = NUM; // 0x7var_ float:1.7945403E38 double:1.052935704E-314;
        r2 = java.lang.Integer.valueOf(r2);
        r13.add(r2);
    L_0x043c:
        if (r6 == 0) goto L_0x045d;
    L_0x043e:
        r2 = NUM; // 0x7f0d039f float:1.8743995E38 double:1.0531302355E-314;
        r3 = "Edit";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r14.add(r2);
        r2 = 12;
        r2 = java.lang.Integer.valueOf(r2);
        r15.add(r2);
        r2 = NUM; // 0x7var_ float:1.7945339E38 double:1.0529356883E-314;
        r2 = java.lang.Integer.valueOf(r2);
        r13.add(r2);
    L_0x045d:
        r2 = r7.selectedObject;
        r3 = r2.contentType;
        if (r3 != 0) goto L_0x04a4;
    L_0x0463:
        r2 = r2.isMediaEmptyWebpage();
        if (r2 != 0) goto L_0x04a4;
    L_0x0469:
        r2 = r7.selectedObject;
        r2 = r2.getId();
        if (r2 <= 0) goto L_0x04a4;
    L_0x0471:
        r2 = r7.selectedObject;
        r2 = r2.isOut();
        if (r2 != 0) goto L_0x04a4;
    L_0x0479:
        r2 = r7.currentChat;
        if (r2 != 0) goto L_0x0485;
    L_0x047d:
        r2 = r7.currentUser;
        if (r2 == 0) goto L_0x04a4;
    L_0x0481:
        r2 = r2.bot;
        if (r2 == 0) goto L_0x04a4;
    L_0x0485:
        r2 = NUM; // 0x7f0d08d7 float:1.8746705E38 double:1.0531308956E-314;
        r3 = "ReportChat";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r14.add(r2);
        r2 = 23;
        r2 = java.lang.Integer.valueOf(r2);
        r15.add(r2);
        r2 = NUM; // 0x7var_a float:1.794541E38 double:1.0529357056E-314;
        r2 = java.lang.Integer.valueOf(r2);
        r13.add(r2);
    L_0x04a4:
        r2 = r7.currentChat;
        r0 = r0.canDeleteMessage(r2);
        if (r0 == 0) goto L_0x0339;
    L_0x04ac:
        r0 = org.telegram.messenger.LocaleController.getString(r11, r1);
        r14.add(r0);
        r0 = java.lang.Integer.valueOf(r9);
        r15.add(r0);
        r0 = java.lang.Integer.valueOf(r17);
        r13.add(r0);
        goto L_0x0339;
    L_0x04c3:
        r2 = r7.selectedObject;
        r2 = r2.getId();
        if (r2 <= 0) goto L_0x04ec;
    L_0x04cb:
        if (r12 == 0) goto L_0x04ec;
    L_0x04cd:
        r2 = NUM; // 0x7f0d08d4 float:1.8746699E38 double:1.053130894E-314;
        r3 = "Reply";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r14.add(r2);
        r2 = 8;
        r2 = java.lang.Integer.valueOf(r2);
        r15.add(r2);
        r2 = NUM; // 0x7var_ float:1.7945407E38 double:1.052935705E-314;
        r2 = java.lang.Integer.valueOf(r2);
        r13.add(r2);
    L_0x04ec:
        r2 = r7.currentChat;
        r0 = r0.canDeleteMessage(r2);
        if (r0 == 0) goto L_0x0339;
    L_0x04f4:
        r0 = org.telegram.messenger.LocaleController.getString(r11, r1);
        r14.add(r0);
        r0 = java.lang.Integer.valueOf(r9);
        r15.add(r0);
        r0 = java.lang.Integer.valueOf(r17);
        r13.add(r0);
        goto L_0x0339;
    L_0x050b:
        r9 = 20;
        if (r2 != r9) goto L_0x0560;
    L_0x050f:
        r0 = NUM; // 0x7f0d090b float:1.874681E38 double:1.0531309213E-314;
        r2 = "Retry";
        r0 = org.telegram.messenger.LocaleController.getString(r2, r0);
        r14.add(r0);
        r0 = java.lang.Integer.valueOf(r10);
        r15.add(r0);
        r0 = NUM; // 0x7var_b float:1.7945412E38 double:1.052935706E-314;
        r0 = java.lang.Integer.valueOf(r0);
        r13.add(r0);
        r0 = NUM; // 0x7f0d0310 float:1.8743705E38 double:1.053130165E-314;
        r0 = org.telegram.messenger.LocaleController.getString(r3, r0);
        r14.add(r0);
        r0 = 3;
        r0 = java.lang.Integer.valueOf(r0);
        r15.add(r0);
        r0 = NUM; // 0x7var_ float:1.7945332E38 double:1.052935687E-314;
        r0 = java.lang.Integer.valueOf(r0);
        r13.add(r0);
        r0 = org.telegram.messenger.LocaleController.getString(r11, r1);
        r14.add(r0);
        r0 = 1;
        r1 = java.lang.Integer.valueOf(r0);
        r15.add(r1);
        r0 = java.lang.Integer.valueOf(r17);
        r13.add(r0);
        goto L_0x0339;
    L_0x0560:
        r9 = r7.currentEncryptedChat;
        r19 = NUM; // 0x7var_ float:1.7945337E38 double:1.052935688E-314;
        r20 = NUM; // 0x7var_a5 float:1.7945432E38 double:1.052935711E-314;
        r1 = "ShareFile";
        if (r9 != 0) goto L_0x0bd2;
    L_0x056c:
        r9 = r7.selectedObject;
        r9 = r9.messageOwner;
        r9 = r9.action;
        r9 = r9 instanceof org.telegram.tgnet.TLRPC.TL_messageActionPhoneCall;
        if (r9 == 0) goto L_0x05d6;
    L_0x0576:
        r9 = r0.messageOwner;
        r9 = r9.action;
        r9 = (org.telegram.tgnet.TLRPC.TL_messageActionPhoneCall) r9;
        r10 = r9.reason;
        r8 = r10 instanceof org.telegram.tgnet.TLRPC.TL_phoneCallDiscardReasonMissed;
        if (r8 != 0) goto L_0x0586;
    L_0x0582:
        r8 = r10 instanceof org.telegram.tgnet.TLRPC.TL_phoneCallDiscardReasonBusy;
        if (r8 == 0) goto L_0x0592;
    L_0x0586:
        r8 = r0.isOutOwner();
        if (r8 != 0) goto L_0x0592;
    L_0x058c:
        r8 = NUM; // 0x7f0d01e4 float:1.8743096E38 double:1.0531300167E-314;
        r10 = "CallBack";
        goto L_0x0597;
    L_0x0592:
        r8 = NUM; // 0x7f0d01e3 float:1.8743094E38 double:1.053130016E-314;
        r10 = "CallAgain";
    L_0x0597:
        r8 = org.telegram.messenger.LocaleController.getString(r10, r8);
        r14.add(r8);
        r8 = 18;
        r8 = java.lang.Integer.valueOf(r8);
        r15.add(r8);
        r8 = NUM; // 0x7var_e float:1.794532E38 double:1.052935684E-314;
        r8 = java.lang.Integer.valueOf(r8);
        r13.add(r8);
        r8 = org.telegram.ui.Components.voip.VoIPHelper.canRateCall(r9);
        if (r8 == 0) goto L_0x05d6;
    L_0x05b7:
        r8 = NUM; // 0x7f0d01eb float:1.874311E38 double:1.05313002E-314;
        r9 = "CallMessageReportProblem";
        r8 = org.telegram.messenger.LocaleController.getString(r9, r8);
        r14.add(r8);
        r8 = 19;
        r8 = java.lang.Integer.valueOf(r8);
        r15.add(r8);
        r8 = NUM; // 0x7var_ float:1.794534E38 double:1.052935689E-314;
        r8 = java.lang.Integer.valueOf(r8);
        r13.add(r8);
    L_0x05d6:
        if (r12 == 0) goto L_0x05f7;
    L_0x05d8:
        r8 = NUM; // 0x7f0d08d4 float:1.8746699E38 double:1.053130894E-314;
        r9 = "Reply";
        r8 = org.telegram.messenger.LocaleController.getString(r9, r8);
        r14.add(r8);
        r8 = 8;
        r8 = java.lang.Integer.valueOf(r8);
        r15.add(r8);
        r8 = NUM; // 0x7var_ float:1.7945407E38 double:1.052935705E-314;
        r8 = java.lang.Integer.valueOf(r8);
        r13.add(r8);
    L_0x05f7:
        r8 = r7.selectedObject;
        r9 = r8.type;
        if (r9 == 0) goto L_0x0609;
    L_0x05fd:
        r8 = r8.isAnimatedEmoji();
        if (r8 != 0) goto L_0x0609;
    L_0x0603:
        r8 = r7.selectedObject;
        r8 = r8.caption;
        if (r8 == 0) goto L_0x0625;
    L_0x0609:
        r8 = NUM; // 0x7f0d0310 float:1.8743705E38 double:1.053130165E-314;
        r8 = org.telegram.messenger.LocaleController.getString(r3, r8);
        r14.add(r8);
        r8 = 3;
        r8 = java.lang.Integer.valueOf(r8);
        r15.add(r8);
        r8 = NUM; // 0x7var_ float:1.7945332E38 double:1.052935687E-314;
        r8 = java.lang.Integer.valueOf(r8);
        r13.add(r8);
    L_0x0625:
        r8 = r7.currentChat;
        r8 = org.telegram.messenger.ChatObject.isChannel(r8);
        if (r8 == 0) goto L_0x0652;
    L_0x062d:
        r8 = r7.currentChat;
        r8 = r8.megagroup;
        if (r8 == 0) goto L_0x0652;
    L_0x0633:
        r8 = NUM; // 0x7f0d0311 float:1.8743707E38 double:1.0531301654E-314;
        r9 = "CopyLink";
        r8 = org.telegram.messenger.LocaleController.getString(r9, r8);
        r14.add(r8);
        r8 = 22;
        r8 = java.lang.Integer.valueOf(r8);
        r15.add(r8);
        r8 = NUM; // 0x7var_ float:1.7945369E38 double:1.0529356957E-314;
        r8 = java.lang.Integer.valueOf(r8);
        r13.add(r8);
    L_0x0652:
        r8 = 2;
        if (r2 != r8) goto L_0x06dd;
    L_0x0655:
        r1 = r7.selectedObject;
        r1 = r1.type;
        r2 = 17;
        if (r1 != r2) goto L_0x0ad6;
    L_0x065d:
        r1 = r0.isPollClosed();
        if (r1 != 0) goto L_0x0ad6;
    L_0x0663:
        r1 = r0.isVoted();
        if (r1 == 0) goto L_0x0688;
    L_0x0669:
        r1 = NUM; // 0x7f0d0a6e float:1.874753E38 double:1.0531310967E-314;
        r2 = "Unvote";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 25;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = NUM; // 0x7var_ae float:1.794545E38 double:1.0529357155E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
    L_0x0688:
        r1 = r0.isForwarded();
        if (r1 != 0) goto L_0x0ad6;
    L_0x068e:
        r1 = r0.isOut();
        if (r1 == 0) goto L_0x06a2;
    L_0x0694:
        r1 = r7.currentChat;
        r1 = org.telegram.messenger.ChatObject.isChannel(r1);
        if (r1 == 0) goto L_0x06bc;
    L_0x069c:
        r1 = r7.currentChat;
        r1 = r1.megagroup;
        if (r1 != 0) goto L_0x06bc;
    L_0x06a2:
        r1 = r7.currentChat;
        r1 = org.telegram.messenger.ChatObject.isChannel(r1);
        if (r1 == 0) goto L_0x0ad6;
    L_0x06aa:
        r1 = r7.currentChat;
        r2 = r1.megagroup;
        if (r2 != 0) goto L_0x0ad6;
    L_0x06b0:
        r2 = r1.creator;
        if (r2 != 0) goto L_0x06bc;
    L_0x06b4:
        r1 = r1.admin_rights;
        if (r1 == 0) goto L_0x0ad6;
    L_0x06b8:
        r1 = r1.edit_messages;
        if (r1 == 0) goto L_0x0ad6;
    L_0x06bc:
        r1 = NUM; // 0x7f0d09f1 float:1.8747277E38 double:1.053131035E-314;
        r2 = "StopPoll";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 26;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = NUM; // 0x7var_ float:1.7945405E38 double:1.0529357046E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
        goto L_0x0ad6;
    L_0x06dd:
        r8 = 3;
        if (r2 != r8) goto L_0x0715;
    L_0x06e0:
        r1 = r7.selectedObject;
        r1 = r1.messageOwner;
        r1 = r1.media;
        r2 = r1 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaWebPage;
        if (r2 == 0) goto L_0x0ad6;
    L_0x06ea:
        r1 = r1.webpage;
        r1 = r1.document;
        r1 = org.telegram.messenger.MessageObject.isNewGifDocument(r1);
        if (r1 == 0) goto L_0x0ad6;
    L_0x06f4:
        r1 = NUM; // 0x7f0d091a float:1.874684E38 double:1.0531309287E-314;
        r2 = "SaveToGIFs";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 11;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = NUM; // 0x7var_b float:1.7945347E38 double:1.0529356903E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
        goto L_0x0ad6;
    L_0x0715:
        r8 = 4;
        if (r2 != r8) goto L_0x0831;
    L_0x0718:
        r2 = r7.selectedObject;
        r2 = r2.isVideo();
        if (r2 == 0) goto L_0x0760;
    L_0x0720:
        r2 = r7.selectedObject;
        r2 = r2.needDrawBluredPreview();
        if (r2 != 0) goto L_0x0ad6;
    L_0x0728:
        r2 = NUM; // 0x7f0d091b float:1.8746843E38 double:1.053130929E-314;
        r3 = "SaveToGallery";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r14.add(r2);
        r2 = java.lang.Integer.valueOf(r8);
        r15.add(r2);
        r2 = NUM; // 0x7var_a float:1.7945345E38 double:1.05293569E-314;
        r2 = java.lang.Integer.valueOf(r2);
        r13.add(r2);
        r2 = NUM; // 0x7f0d0994 float:1.8747088E38 double:1.053130989E-314;
        r1 = org.telegram.messenger.LocaleController.getString(r1, r2);
        r14.add(r1);
        r1 = 6;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = java.lang.Integer.valueOf(r20);
        r13.add(r1);
        goto L_0x0ad6;
    L_0x0760:
        r2 = r7.selectedObject;
        r2 = r2.isMusic();
        if (r2 == 0) goto L_0x079f;
    L_0x0768:
        r2 = NUM; // 0x7f0d091d float:1.8746847E38 double:1.05313093E-314;
        r3 = "SaveToMusic";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r14.add(r2);
        r2 = 10;
        r2 = java.lang.Integer.valueOf(r2);
        r15.add(r2);
        r2 = java.lang.Integer.valueOf(r19);
        r13.add(r2);
        r2 = NUM; // 0x7f0d0994 float:1.8747088E38 double:1.053130989E-314;
        r1 = org.telegram.messenger.LocaleController.getString(r1, r2);
        r14.add(r1);
        r1 = 6;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = java.lang.Integer.valueOf(r20);
        r13.add(r1);
        goto L_0x0ad6;
    L_0x079f:
        r2 = r7.selectedObject;
        r2 = r2.getDocument();
        if (r2 == 0) goto L_0x0809;
    L_0x07a7:
        r2 = r7.selectedObject;
        r2 = r2.getDocument();
        r2 = org.telegram.messenger.MessageObject.isNewGifDocument(r2);
        if (r2 == 0) goto L_0x07d2;
    L_0x07b3:
        r2 = NUM; // 0x7f0d091a float:1.874684E38 double:1.0531309287E-314;
        r3 = "SaveToGIFs";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r14.add(r2);
        r2 = 11;
        r2 = java.lang.Integer.valueOf(r2);
        r15.add(r2);
        r2 = NUM; // 0x7var_b float:1.7945347E38 double:1.0529356903E-314;
        r2 = java.lang.Integer.valueOf(r2);
        r13.add(r2);
    L_0x07d2:
        r2 = NUM; // 0x7f0d0919 float:1.8746839E38 double:1.053130928E-314;
        r3 = "SaveToDownloads";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r14.add(r2);
        r2 = 10;
        r2 = java.lang.Integer.valueOf(r2);
        r15.add(r2);
        r2 = java.lang.Integer.valueOf(r19);
        r13.add(r2);
        r2 = NUM; // 0x7f0d0994 float:1.8747088E38 double:1.053130989E-314;
        r1 = org.telegram.messenger.LocaleController.getString(r1, r2);
        r14.add(r1);
        r1 = 6;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = java.lang.Integer.valueOf(r20);
        r13.add(r1);
        goto L_0x0ad6;
    L_0x0809:
        r1 = r7.selectedObject;
        r1 = r1.needDrawBluredPreview();
        if (r1 != 0) goto L_0x0ad6;
    L_0x0811:
        r1 = NUM; // 0x7f0d091b float:1.8746843E38 double:1.053130929E-314;
        r2 = "SaveToGallery";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 4;
        r2 = java.lang.Integer.valueOf(r1);
        r15.add(r2);
        r1 = NUM; // 0x7var_a float:1.7945345E38 double:1.05293569E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
        goto L_0x0ad6;
    L_0x0831:
        r8 = 5;
        if (r2 != r8) goto L_0x0889;
    L_0x0834:
        r2 = NUM; // 0x7f0d00f4 float:1.874261E38 double:1.053129898E-314;
        r3 = "ApplyLocalizationFile";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r14.add(r2);
        r2 = 5;
        r2 = java.lang.Integer.valueOf(r2);
        r15.add(r2);
        r2 = NUM; // 0x7var_ float:1.7945365E38 double:1.0529356947E-314;
        r2 = java.lang.Integer.valueOf(r2);
        r13.add(r2);
        r2 = NUM; // 0x7f0d0919 float:1.8746839E38 double:1.053130928E-314;
        r3 = "SaveToDownloads";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r14.add(r2);
        r8 = 10;
        r2 = java.lang.Integer.valueOf(r8);
        r15.add(r2);
        r2 = java.lang.Integer.valueOf(r19);
        r13.add(r2);
        r2 = NUM; // 0x7f0d0994 float:1.8747088E38 double:1.053130989E-314;
        r1 = org.telegram.messenger.LocaleController.getString(r1, r2);
        r14.add(r1);
        r1 = 6;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = java.lang.Integer.valueOf(r20);
        r13.add(r1);
        goto L_0x0ad6;
    L_0x0889:
        r8 = 10;
        if (r2 != r8) goto L_0x08e2;
    L_0x088d:
        r2 = NUM; // 0x7f0d00f6 float:1.8742614E38 double:1.053129899E-314;
        r3 = "ApplyThemeFile";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r14.add(r2);
        r2 = 5;
        r2 = java.lang.Integer.valueOf(r2);
        r15.add(r2);
        r2 = NUM; // 0x7var_a8 float:1.7945438E38 double:1.0529357125E-314;
        r2 = java.lang.Integer.valueOf(r2);
        r13.add(r2);
        r2 = NUM; // 0x7f0d0919 float:1.8746839E38 double:1.053130928E-314;
        r3 = "SaveToDownloads";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r14.add(r2);
        r2 = 10;
        r2 = java.lang.Integer.valueOf(r2);
        r15.add(r2);
        r2 = java.lang.Integer.valueOf(r19);
        r13.add(r2);
        r2 = NUM; // 0x7f0d0994 float:1.8747088E38 double:1.053130989E-314;
        r1 = org.telegram.messenger.LocaleController.getString(r1, r2);
        r14.add(r1);
        r8 = 6;
        r1 = java.lang.Integer.valueOf(r8);
        r15.add(r1);
        r1 = java.lang.Integer.valueOf(r20);
        r13.add(r1);
        goto L_0x0ad6;
    L_0x08e2:
        r8 = 6;
        if (r2 != r8) goto L_0x093a;
    L_0x08e5:
        r2 = NUM; // 0x7f0d091b float:1.8746843E38 double:1.053130929E-314;
        r3 = "SaveToGallery";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r14.add(r2);
        r2 = 7;
        r2 = java.lang.Integer.valueOf(r2);
        r15.add(r2);
        r2 = NUM; // 0x7var_a float:1.7945345E38 double:1.05293569E-314;
        r2 = java.lang.Integer.valueOf(r2);
        r13.add(r2);
        r2 = NUM; // 0x7f0d0919 float:1.8746839E38 double:1.053130928E-314;
        r3 = "SaveToDownloads";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r14.add(r2);
        r2 = 10;
        r2 = java.lang.Integer.valueOf(r2);
        r15.add(r2);
        r2 = java.lang.Integer.valueOf(r19);
        r13.add(r2);
        r2 = NUM; // 0x7f0d0994 float:1.8747088E38 double:1.053130989E-314;
        r1 = org.telegram.messenger.LocaleController.getString(r1, r2);
        r14.add(r1);
        r1 = 6;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = java.lang.Integer.valueOf(r20);
        r13.add(r1);
        goto L_0x0ad6;
    L_0x093a:
        r1 = 7;
        if (r2 != r1) goto L_0x09e1;
    L_0x093d:
        r1 = r7.selectedObject;
        r1 = r1.isMask();
        if (r1 == 0) goto L_0x0966;
    L_0x0945:
        r1 = NUM; // 0x7f0d00c4 float:1.8742512E38 double:1.0531298744E-314;
        r2 = "AddToMasks";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 9;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = NUM; // 0x7var_a7 float:1.7945436E38 double:1.052935712E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
        goto L_0x0ad6;
    L_0x0966:
        r1 = NUM; // 0x7f0d00c5 float:1.8742514E38 double:1.053129875E-314;
        r2 = "AddToStickers";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 9;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = NUM; // 0x7var_a7 float:1.7945436E38 double:1.052935712E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
        r1 = r21.getMediaDataController();
        r2 = r7.selectedObject;
        r2 = r2.getDocument();
        r1 = r1.isStickerInFavorites(r2);
        if (r1 != 0) goto L_0x09c0;
    L_0x0995:
        r1 = r21.getMediaDataController();
        r1 = r1.canAddStickerToFavorites();
        if (r1 == 0) goto L_0x0ad6;
    L_0x099f:
        r1 = NUM; // 0x7f0d00c3 float:1.874251E38 double:1.053129874E-314;
        r2 = "AddToFavorites";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 20;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = NUM; // 0x7var_ float:1.794534E38 double:1.052935689E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
        goto L_0x0ad6;
    L_0x09c0:
        r1 = NUM; // 0x7f0d0362 float:1.8743871E38 double:1.0531302054E-314;
        r2 = "DeleteFromFavorites";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 21;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = NUM; // 0x7var_ab float:1.7945444E38 double:1.052935714E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
        goto L_0x0ad6;
    L_0x09e1:
        r1 = 8;
        if (r2 != r1) goto L_0x0a83;
    L_0x09e5:
        r1 = r21.getMessagesController();
        r2 = r7.selectedObject;
        r2 = r2.messageOwner;
        r2 = r2.media;
        r2 = r2.user_id;
        r2 = java.lang.Integer.valueOf(r2);
        r1 = r1.getUser(r2);
        if (r1 == 0) goto L_0x0a38;
    L_0x09fb:
        r2 = r1.id;
        r8 = r21.getUserConfig();
        r8 = r8.getClientUserId();
        if (r2 == r8) goto L_0x0a38;
    L_0x0a07:
        r2 = r21.getContactsController();
        r2 = r2.contactsDict;
        r1 = r1.id;
        r1 = java.lang.Integer.valueOf(r1);
        r1 = r2.get(r1);
        if (r1 != 0) goto L_0x0a38;
    L_0x0a19:
        r1 = NUM; // 0x7f0d00ab float:1.8742462E38 double:1.053129862E-314;
        r2 = "AddContactTitle";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 15;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = NUM; // 0x7var_a float:1.7945312E38 double:1.052935682E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
    L_0x0a38:
        r1 = r7.selectedObject;
        r1 = r1.messageOwner;
        r1 = r1.media;
        r1 = r1.phone_number;
        r1 = android.text.TextUtils.isEmpty(r1);
        if (r1 != 0) goto L_0x0ad6;
    L_0x0a46:
        r1 = NUM; // 0x7f0d0310 float:1.8743705E38 double:1.053130165E-314;
        r1 = org.telegram.messenger.LocaleController.getString(r3, r1);
        r14.add(r1);
        r1 = 16;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = NUM; // 0x7var_ float:1.7945332E38 double:1.052935687E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
        r1 = NUM; // 0x7f0d01e2 float:1.8743092E38 double:1.0531300157E-314;
        r2 = "Call";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 17;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = NUM; // 0x7var_e float:1.794532E38 double:1.052935684E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
        goto L_0x0ad6;
    L_0x0a83:
        r1 = 9;
        if (r2 != r1) goto L_0x0ad6;
    L_0x0a87:
        r1 = r21.getMediaDataController();
        r2 = r7.selectedObject;
        r2 = r2.getDocument();
        r1 = r1.isStickerInFavorites(r2);
        if (r1 != 0) goto L_0x0ab7;
    L_0x0a97:
        r1 = NUM; // 0x7f0d00c3 float:1.874251E38 double:1.053129874E-314;
        r2 = "AddToFavorites";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 20;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = NUM; // 0x7var_ float:1.794534E38 double:1.052935689E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
        goto L_0x0ad6;
    L_0x0ab7:
        r1 = NUM; // 0x7f0d0362 float:1.8743871E38 double:1.0531302054E-314;
        r2 = "DeleteFromFavorites";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 21;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = NUM; // 0x7var_ab float:1.7945444E38 double:1.052935714E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
    L_0x0ad6:
        r1 = r7.selectedObject;
        r1 = r1.needDrawBluredPreview();
        if (r1 != 0) goto L_0x0b0c;
    L_0x0ade:
        r1 = r7.selectedObject;
        r1 = r1.isLiveLocation();
        if (r1 != 0) goto L_0x0b0c;
    L_0x0ae6:
        r1 = r7.selectedObject;
        r1 = r1.type;
        r2 = 16;
        if (r1 == r2) goto L_0x0b0c;
    L_0x0aee:
        r1 = NUM; // 0x7f0d0481 float:1.8744453E38 double:1.053130347E-314;
        r2 = "Forward";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 2;
        r2 = java.lang.Integer.valueOf(r1);
        r15.add(r2);
        r1 = NUM; // 0x7var_ float:1.7945343E38 double:1.0529356893E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
    L_0x0b0c:
        if (r5 == 0) goto L_0x0b2e;
    L_0x0b0e:
        r1 = NUM; // 0x7f0d0a68 float:1.8747518E38 double:1.0531310937E-314;
        r2 = "UnpinMessage";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 14;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = NUM; // 0x7var_ad float:1.7945448E38 double:1.052935715E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
        goto L_0x0b4f;
    L_0x0b2e:
        if (r4 == 0) goto L_0x0b4f;
    L_0x0b30:
        r1 = NUM; // 0x7f0d0856 float:1.8746443E38 double:1.053130832E-314;
        r2 = "PinMessage";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 13;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = NUM; // 0x7var_ float:1.7945403E38 double:1.052935704E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
    L_0x0b4f:
        if (r6 == 0) goto L_0x0b70;
    L_0x0b51:
        r1 = NUM; // 0x7f0d039f float:1.8743995E38 double:1.0531302355E-314;
        r2 = "Edit";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 12;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = NUM; // 0x7var_ float:1.7945339E38 double:1.0529356883E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
    L_0x0b70:
        r1 = r7.selectedObject;
        r2 = r1.contentType;
        if (r2 != 0) goto L_0x0baf;
    L_0x0b76:
        r1 = r1.getId();
        if (r1 <= 0) goto L_0x0baf;
    L_0x0b7c:
        r1 = r7.selectedObject;
        r1 = r1.isOut();
        if (r1 != 0) goto L_0x0baf;
    L_0x0b84:
        r1 = r7.currentChat;
        if (r1 != 0) goto L_0x0b90;
    L_0x0b88:
        r1 = r7.currentUser;
        if (r1 == 0) goto L_0x0baf;
    L_0x0b8c:
        r1 = r1.bot;
        if (r1 == 0) goto L_0x0baf;
    L_0x0b90:
        r1 = NUM; // 0x7f0d08d7 float:1.8746705E38 double:1.0531308956E-314;
        r2 = "ReportChat";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 23;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = NUM; // 0x7var_a float:1.794541E38 double:1.0529357056E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
    L_0x0baf:
        r1 = r7.currentChat;
        r0 = r0.canDeleteMessage(r1);
        if (r0 == 0) goto L_0x0339;
    L_0x0bb7:
        r0 = NUM; // 0x7f0d0350 float:1.8743835E38 double:1.0531301965E-314;
        r0 = org.telegram.messenger.LocaleController.getString(r11, r0);
        r14.add(r0);
        r0 = 1;
        r1 = java.lang.Integer.valueOf(r0);
        r15.add(r1);
        r0 = java.lang.Integer.valueOf(r17);
        r13.add(r0);
        goto L_0x0339;
    L_0x0bd2:
        if (r12 == 0) goto L_0x0bf3;
    L_0x0bd4:
        r0 = NUM; // 0x7f0d08d4 float:1.8746699E38 double:1.053130894E-314;
        r4 = "Reply";
        r0 = org.telegram.messenger.LocaleController.getString(r4, r0);
        r14.add(r0);
        r0 = 8;
        r0 = java.lang.Integer.valueOf(r0);
        r15.add(r0);
        r0 = NUM; // 0x7var_ float:1.7945407E38 double:1.052935705E-314;
        r0 = java.lang.Integer.valueOf(r0);
        r13.add(r0);
    L_0x0bf3:
        r0 = r7.selectedObject;
        r4 = r0.type;
        if (r4 == 0) goto L_0x0CLASSNAME;
    L_0x0bf9:
        r0 = r0.isAnimatedEmoji();
        if (r0 != 0) goto L_0x0CLASSNAME;
    L_0x0bff:
        r0 = r7.selectedObject;
        r0 = r0.caption;
        if (r0 == 0) goto L_0x0CLASSNAME;
    L_0x0CLASSNAME:
        r0 = NUM; // 0x7f0d0310 float:1.8743705E38 double:1.053130165E-314;
        r0 = org.telegram.messenger.LocaleController.getString(r3, r0);
        r14.add(r0);
        r0 = 3;
        r0 = java.lang.Integer.valueOf(r0);
        r15.add(r0);
        r0 = NUM; // 0x7var_ float:1.7945332E38 double:1.052935687E-314;
        r0 = java.lang.Integer.valueOf(r0);
        r13.add(r0);
    L_0x0CLASSNAME:
        r0 = 4;
        if (r2 != r0) goto L_0x0d0c;
    L_0x0CLASSNAME:
        r2 = r7.selectedObject;
        r2 = r2.isVideo();
        if (r2 == 0) goto L_0x0CLASSNAME;
    L_0x0c2c:
        r2 = NUM; // 0x7f0d091b float:1.8746843E38 double:1.053130929E-314;
        r3 = "SaveToGallery";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r14.add(r2);
        r2 = java.lang.Integer.valueOf(r0);
        r15.add(r2);
        r0 = NUM; // 0x7var_a float:1.7945345E38 double:1.05293569E-314;
        r0 = java.lang.Integer.valueOf(r0);
        r13.add(r0);
        r0 = NUM; // 0x7f0d0994 float:1.8747088E38 double:1.053130989E-314;
        r0 = org.telegram.messenger.LocaleController.getString(r1, r0);
        r14.add(r0);
        r0 = 6;
        r0 = java.lang.Integer.valueOf(r0);
        r15.add(r0);
        r0 = java.lang.Integer.valueOf(r20);
        r13.add(r0);
    L_0x0CLASSNAME:
        r0 = NUM; // 0x7f0d0350 float:1.8743835E38 double:1.0531301965E-314;
        r1 = 4;
        goto L_0x0e1c;
    L_0x0CLASSNAME:
        r0 = r7.selectedObject;
        r0 = r0.isMusic();
        if (r0 == 0) goto L_0x0ca6;
    L_0x0CLASSNAME:
        r0 = NUM; // 0x7f0d091d float:1.8746847E38 double:1.05313093E-314;
        r2 = "SaveToMusic";
        r0 = org.telegram.messenger.LocaleController.getString(r2, r0);
        r14.add(r0);
        r0 = 10;
        r0 = java.lang.Integer.valueOf(r0);
        r15.add(r0);
        r0 = java.lang.Integer.valueOf(r19);
        r13.add(r0);
        r0 = NUM; // 0x7f0d0994 float:1.8747088E38 double:1.053130989E-314;
        r0 = org.telegram.messenger.LocaleController.getString(r1, r0);
        r14.add(r0);
        r0 = 6;
        r0 = java.lang.Integer.valueOf(r0);
        r15.add(r0);
        r0 = java.lang.Integer.valueOf(r20);
        r13.add(r0);
        goto L_0x0CLASSNAME;
    L_0x0ca6:
        r0 = r7.selectedObject;
        r0 = r0.isVideo();
        if (r0 != 0) goto L_0x0ced;
    L_0x0cae:
        r0 = r7.selectedObject;
        r0 = r0.getDocument();
        if (r0 == 0) goto L_0x0ced;
    L_0x0cb6:
        r0 = NUM; // 0x7f0d0919 float:1.8746839E38 double:1.053130928E-314;
        r2 = "SaveToDownloads";
        r0 = org.telegram.messenger.LocaleController.getString(r2, r0);
        r14.add(r0);
        r0 = 10;
        r0 = java.lang.Integer.valueOf(r0);
        r15.add(r0);
        r0 = java.lang.Integer.valueOf(r19);
        r13.add(r0);
        r0 = NUM; // 0x7f0d0994 float:1.8747088E38 double:1.053130989E-314;
        r0 = org.telegram.messenger.LocaleController.getString(r1, r0);
        r14.add(r0);
        r0 = 6;
        r0 = java.lang.Integer.valueOf(r0);
        r15.add(r0);
        r0 = java.lang.Integer.valueOf(r20);
        r13.add(r0);
        goto L_0x0CLASSNAME;
    L_0x0ced:
        r0 = NUM; // 0x7f0d091b float:1.8746843E38 double:1.053130929E-314;
        r1 = "SaveToGallery";
        r0 = org.telegram.messenger.LocaleController.getString(r1, r0);
        r14.add(r0);
        r1 = 4;
        r0 = java.lang.Integer.valueOf(r1);
        r15.add(r0);
        r0 = NUM; // 0x7var_a float:1.7945345E38 double:1.05293569E-314;
        r0 = java.lang.Integer.valueOf(r0);
        r13.add(r0);
        goto L_0x0d2e;
    L_0x0d0c:
        r1 = 4;
        r0 = 5;
        if (r2 != r0) goto L_0x0d33;
    L_0x0d10:
        r0 = NUM; // 0x7f0d00f4 float:1.874261E38 double:1.053129898E-314;
        r2 = "ApplyLocalizationFile";
        r0 = org.telegram.messenger.LocaleController.getString(r2, r0);
        r14.add(r0);
        r0 = 5;
        r0 = java.lang.Integer.valueOf(r0);
        r15.add(r0);
        r0 = NUM; // 0x7var_ float:1.7945365E38 double:1.0529356947E-314;
        r0 = java.lang.Integer.valueOf(r0);
        r13.add(r0);
    L_0x0d2e:
        r0 = NUM; // 0x7f0d0350 float:1.8743835E38 double:1.0531301965E-314;
        goto L_0x0e1c;
    L_0x0d33:
        r0 = 10;
        if (r2 != r0) goto L_0x0d56;
    L_0x0d37:
        r0 = NUM; // 0x7f0d00f6 float:1.8742614E38 double:1.053129899E-314;
        r2 = "ApplyThemeFile";
        r0 = org.telegram.messenger.LocaleController.getString(r2, r0);
        r14.add(r0);
        r0 = 5;
        r0 = java.lang.Integer.valueOf(r0);
        r15.add(r0);
        r0 = NUM; // 0x7var_a8 float:1.7945438E38 double:1.0529357125E-314;
        r0 = java.lang.Integer.valueOf(r0);
        r13.add(r0);
        goto L_0x0d2e;
    L_0x0d56:
        r0 = 7;
        if (r2 != r0) goto L_0x0d79;
    L_0x0d59:
        r0 = NUM; // 0x7f0d00c5 float:1.8742514E38 double:1.053129875E-314;
        r2 = "AddToStickers";
        r0 = org.telegram.messenger.LocaleController.getString(r2, r0);
        r14.add(r0);
        r0 = 9;
        r0 = java.lang.Integer.valueOf(r0);
        r15.add(r0);
        r0 = NUM; // 0x7var_a7 float:1.7945436E38 double:1.052935712E-314;
        r0 = java.lang.Integer.valueOf(r0);
        r13.add(r0);
        goto L_0x0d2e;
    L_0x0d79:
        r0 = 8;
        if (r2 != r0) goto L_0x0d2e;
    L_0x0d7d:
        r0 = r21.getMessagesController();
        r2 = r7.selectedObject;
        r2 = r2.messageOwner;
        r2 = r2.media;
        r2 = r2.user_id;
        r2 = java.lang.Integer.valueOf(r2);
        r0 = r0.getUser(r2);
        if (r0 == 0) goto L_0x0dd0;
    L_0x0d93:
        r2 = r0.id;
        r4 = r21.getUserConfig();
        r4 = r4.getClientUserId();
        if (r2 == r4) goto L_0x0dd0;
    L_0x0d9f:
        r2 = r21.getContactsController();
        r2 = r2.contactsDict;
        r0 = r0.id;
        r0 = java.lang.Integer.valueOf(r0);
        r0 = r2.get(r0);
        if (r0 != 0) goto L_0x0dd0;
    L_0x0db1:
        r0 = NUM; // 0x7f0d00ab float:1.8742462E38 double:1.053129862E-314;
        r2 = "AddContactTitle";
        r0 = org.telegram.messenger.LocaleController.getString(r2, r0);
        r14.add(r0);
        r0 = 15;
        r0 = java.lang.Integer.valueOf(r0);
        r15.add(r0);
        r0 = NUM; // 0x7var_a float:1.7945312E38 double:1.052935682E-314;
        r0 = java.lang.Integer.valueOf(r0);
        r13.add(r0);
    L_0x0dd0:
        r0 = r7.selectedObject;
        r0 = r0.messageOwner;
        r0 = r0.media;
        r0 = r0.phone_number;
        r0 = android.text.TextUtils.isEmpty(r0);
        if (r0 != 0) goto L_0x0d2e;
    L_0x0dde:
        r0 = NUM; // 0x7f0d0310 float:1.8743705E38 double:1.053130165E-314;
        r0 = org.telegram.messenger.LocaleController.getString(r3, r0);
        r14.add(r0);
        r0 = 16;
        r0 = java.lang.Integer.valueOf(r0);
        r15.add(r0);
        r0 = NUM; // 0x7var_ float:1.7945332E38 double:1.052935687E-314;
        r0 = java.lang.Integer.valueOf(r0);
        r13.add(r0);
        r0 = NUM; // 0x7f0d01e2 float:1.8743092E38 double:1.0531300157E-314;
        r2 = "Call";
        r0 = org.telegram.messenger.LocaleController.getString(r2, r0);
        r14.add(r0);
        r0 = 17;
        r0 = java.lang.Integer.valueOf(r0);
        r15.add(r0);
        r0 = NUM; // 0x7var_e float:1.794532E38 double:1.052935684E-314;
        r0 = java.lang.Integer.valueOf(r0);
        r13.add(r0);
        goto L_0x0d2e;
    L_0x0e1c:
        r0 = org.telegram.messenger.LocaleController.getString(r11, r0);
        r14.add(r0);
        r0 = 1;
        r2 = java.lang.Integer.valueOf(r0);
        r15.add(r2);
        r0 = java.lang.Integer.valueOf(r17);
        r13.add(r0);
    L_0x0e32:
        r0 = r15.isEmpty();
        if (r0 == 0) goto L_0x0e39;
    L_0x0e38:
        return;
    L_0x0e39:
        r0 = r7.scrimPopupWindow;
        if (r0 == 0) goto L_0x0e44;
    L_0x0e3d:
        r0.dismiss();
        r0 = 0;
        r7.scrimPopupWindow = r0;
        return;
    L_0x0e44:
        r0 = new android.graphics.Rect;
        r0.<init>();
        r8 = new org.telegram.ui.ActionBar.ActionBarPopupWindow$ActionBarPopupWindowLayout;
        r2 = r21.getParentActivity();
        r8.<init>(r2);
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$8ZN9U3za0i44QfbYqGWvkmCMgz0;
        r9 = r22;
        r2.<init>(r7, r9, r0);
        r8.setOnTouchListener(r2);
        r0 = new org.telegram.ui.-$$Lambda$ChatActivity$XJpPs1p2tgaowZOtRoNV42sjGWo;
        r0.<init>(r7);
        r8.setDispatchKeyEventListener(r0);
        r10 = new android.graphics.Rect;
        r10.<init>();
        r0 = r21.getParentActivity();
        r0 = r0.getResources();
        r2 = NUM; // 0x7var_c float:1.794564E38 double:1.052935762E-314;
        r0 = r0.getDrawable(r2);
        r0 = r0.mutate();
        r2 = new android.graphics.PorterDuffColorFilter;
        r3 = "dialogBackground";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r4 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r2.<init>(r3, r4);
        r0.setColorFilter(r2);
        r0.getPadding(r10);
        r8.setBackgroundDrawable(r0);
        r11 = new android.widget.LinearLayout;
        r0 = r21.getParentActivity();
        r11.<init>(r0);
        r0 = android.os.Build.VERSION.SDK_INT;
        r2 = 21;
        if (r0 < r2) goto L_0x0eba;
    L_0x0ea1:
        r12 = new org.telegram.ui.ChatActivity$64;
        r2 = r21.getParentActivity();
        r3 = 0;
        r4 = 0;
        r5 = NUM; // 0x7f0e0023 float:1.8875109E38 double:1.053162174E-314;
        r0 = r12;
        r6 = 4;
        r1 = r21;
        r23 = r12;
        r12 = 4;
        r6 = r11;
        r0.<init>(r2, r3, r4, r5, r6);
        r0 = r23;
        goto L_0x0ec4;
    L_0x0eba:
        r12 = 4;
        r0 = new android.widget.ScrollView;
        r1 = r21.getParentActivity();
        r0.<init>(r1);
    L_0x0ec4:
        r1 = 0;
        r0.setClipToPadding(r1);
        r1 = -2;
        r2 = -NUM; // 0xffffffffCLASSNAME float:-2.0 double:NaN;
        r1 = org.telegram.ui.Components.LayoutHelper.createFrame(r1, r2);
        r8.addView(r0, r1);
        r1 = NUM; // 0x43480000 float:200.0 double:5.5769738E-315;
        r1 = org.telegram.messenger.AndroidUtilities.dp(r1);
        r11.setMinimumWidth(r1);
        r1 = 1;
        r11.setOrientation(r1);
        r1 = r14.size();
        r2 = 0;
    L_0x0ee4:
        if (r2 >= r1) goto L_0x0var_;
    L_0x0ee6:
        r3 = new org.telegram.ui.ActionBar.ActionBarMenuSubItem;
        r4 = r21.getParentActivity();
        r3.<init>(r4);
        r4 = r14.get(r2);
        r4 = (java.lang.CharSequence) r4;
        r5 = r13.get(r2);
        r5 = (java.lang.Integer) r5;
        r5 = r5.intValue();
        r3.setTextAndIcon(r4, r5);
        r11.addView(r3);
        r4 = new org.telegram.ui.-$$Lambda$ChatActivity$LAsIKTx2jXTiqvpXOoOiBC1Y5BU;
        r4.<init>(r7, r2, r15);
        r3.setOnClickListener(r4);
        r2 = r2 + 1;
        goto L_0x0ee4;
    L_0x0var_:
        r1 = -2;
        r2 = -2;
        r3 = 51;
        r1 = org.telegram.ui.Components.LayoutHelper.createScroll(r1, r2, r3);
        r0.addView(r11, r1);
        r0 = new org.telegram.ui.ChatActivity$65;
        r1 = -2;
        r0.<init>(r8, r1, r2);
        r7.scrimPopupWindow = r0;
        r0 = r7.scrimPopupWindow;
        r1 = 220; // 0xdc float:3.08E-43 double:1.087E-321;
        r0.setDismissAnimationDuration(r1);
        r0 = r7.scrimPopupWindow;
        r1 = 1;
        r0.setOutsideTouchable(r1);
        r0 = r7.scrimPopupWindow;
        r0.setClippingEnabled(r1);
        r0 = r7.scrimPopupWindow;
        r2 = NUM; // 0x7f0e0008 float:1.8875054E38 double:1.0531621606E-314;
        r0.setAnimationStyle(r2);
        r0 = r7.scrimPopupWindow;
        r0.setFocusable(r1);
        r0 = NUM; // 0x447a0000 float:1000.0 double:5.676053805E-315;
        r0 = org.telegram.messenger.AndroidUtilities.dp(r0);
        r1 = -NUM; // 0xfffffffvar_ float:-0.0 double:NaN;
        r0 = android.view.View.MeasureSpec.makeMeasureSpec(r0, r1);
        r1 = NUM; // 0x447a0000 float:1000.0 double:5.676053805E-315;
        r1 = org.telegram.messenger.AndroidUtilities.dp(r1);
        r2 = -NUM; // 0xfffffffvar_ float:-0.0 double:NaN;
        r1 = android.view.View.MeasureSpec.makeMeasureSpec(r1, r2);
        r8.measure(r0, r1);
        r0 = r7.scrimPopupWindow;
        r1 = 2;
        r0.setInputMethodMode(r1);
        r0 = r7.scrimPopupWindow;
        r1 = 0;
        r0.setSoftInputMode(r1);
        r0 = r7.scrimPopupWindow;
        r0 = r0.getContentView();
        r1 = 1;
        r0.setFocusableInTouchMode(r1);
        r0 = r22.getLeft();
        r1 = r25;
        r1 = (int) r1;
        r0 = r0 + r1;
        r1 = r8.getMeasuredWidth();
        r0 = r0 - r1;
        r1 = r10.left;
        r0 = r0 + r1;
        r1 = NUM; // 0x41e00000 float:28.0 double:5.46040909E-315;
        r1 = org.telegram.messenger.AndroidUtilities.dp(r1);
        r0 = r0 - r1;
        r1 = NUM; // 0x40CLASSNAME float:6.0 double:5.367157323E-315;
        r1 = org.telegram.messenger.AndroidUtilities.dp(r1);
        if (r0 >= r1) goto L_0x0var_;
    L_0x0var_:
        r0 = NUM; // 0x40CLASSNAME float:6.0 double:5.367157323E-315;
        r0 = org.telegram.messenger.AndroidUtilities.dp(r0);
        goto L_0x0fbf;
    L_0x0var_:
        r1 = r7.chatListView;
        r1 = r1.getMeasuredWidth();
        r2 = NUM; // 0x40CLASSNAME float:6.0 double:5.367157323E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r1 = r1 - r2;
        r2 = r8.getMeasuredWidth();
        r1 = r1 - r2;
        if (r0 <= r1) goto L_0x0fbf;
    L_0x0fad:
        r0 = r7.chatListView;
        r0 = r0.getMeasuredWidth();
        r1 = NUM; // 0x40CLASSNAME float:6.0 double:5.367157323E-315;
        r1 = org.telegram.messenger.AndroidUtilities.dp(r1);
        r0 = r0 - r1;
        r1 = r8.getMeasuredWidth();
        r0 = r0 - r1;
    L_0x0fbf:
        r1 = org.telegram.messenger.AndroidUtilities.isTablet();
        if (r1 == 0) goto L_0x0fd1;
    L_0x0fc5:
        r1 = 2;
        r2 = new int[r1];
        r1 = r7.fragmentView;
        r1.getLocationInWindow(r2);
        r1 = 0;
        r2 = r2[r1];
        r0 = r0 + r2;
    L_0x0fd1:
        r1 = r7.contentView;
        r1 = r1.getHeight();
        r2 = r8.getMeasuredHeight();
        r3 = r7.contentView;
        r3 = r3.getKeyboardHeight();
        r4 = NUM; // 0x41a00000 float:20.0 double:5.439686476E-315;
        r4 = org.telegram.messenger.AndroidUtilities.dp(r4);
        if (r3 <= r4) goto L_0x0fea;
    L_0x0fe9:
        r1 = r1 + r3;
    L_0x0fea:
        if (r2 >= r1) goto L_0x1049;
    L_0x0fec:
        r3 = r7.chatListView;
        r3 = r3.getY();
        r4 = r22.getTop();
        r4 = (float) r4;
        r3 = r3 + r4;
        r3 = r3 + r26;
        r3 = (int) r3;
        r4 = r10.top;
        r4 = r2 - r4;
        r5 = r10.bottom;
        r4 = r4 - r5;
        r5 = NUM; // 0x43700000 float:240.0 double:5.589925436E-315;
        r5 = org.telegram.messenger.AndroidUtilities.dp(r5);
        if (r4 <= r5) goto L_0x1012;
    L_0x100a:
        r4 = NUM; // 0x43700000 float:240.0 double:5.589925436E-315;
        r4 = org.telegram.messenger.AndroidUtilities.dp(r4);
        r4 = r4 - r2;
        r3 = r3 + r4;
    L_0x1012:
        r4 = (float) r3;
        r5 = r7.chatListView;
        r5 = r5.getY();
        r6 = NUM; // 0x41CLASSNAME float:24.0 double:5.450047783E-315;
        r6 = org.telegram.messenger.AndroidUtilities.dp(r6);
        r6 = (float) r6;
        r5 = r5 + r6;
        r4 = (r4 > r5 ? 1 : (r4 == r5 ? 0 : -1));
        if (r4 >= 0) goto L_0x1035;
    L_0x1025:
        r1 = r7.chatListView;
        r1 = r1.getY();
        r2 = NUM; // 0x41CLASSNAME float:24.0 double:5.450047783E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r2 = (float) r2;
        r1 = r1 + r2;
        r3 = (int) r1;
        goto L_0x104b;
    L_0x1035:
        r1 = r1 - r2;
        r2 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r2 = r1 - r2;
        if (r3 <= r2) goto L_0x104b;
    L_0x1040:
        r2 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r3 = r1 - r2;
        goto L_0x104b;
    L_0x1049:
        r3 = org.telegram.messenger.AndroidUtilities.statusBarHeight;
    L_0x104b:
        r1 = r7.scrimPopupWindow;
        r2 = r7.chatListView;
        r4 = 51;
        r1.showAtLocation(r2, r4, r0, r3);
        r0 = r7.chatListView;
        r0.stopScroll();
        r0 = r7.chatLayoutManager;
        r1 = 0;
        r0.setCanScrollVertically(r1);
        r7.scrimView = r9;
        r0 = r7.scrimView;
        r1 = r0 instanceof org.telegram.ui.Cells.ChatMessageCell;
        if (r1 == 0) goto L_0x1070;
    L_0x1067:
        r0 = (org.telegram.ui.Cells.ChatMessageCell) r0;
        r1 = 1;
        r0.setInvalidatesParent(r1);
        r7.restartSticker(r0);
    L_0x1070:
        r0 = r7.contentView;
        r0.invalidate();
        r0 = r7.chatListView;
        r0.invalidate();
        r0 = r7.scrimAnimatorSet;
        if (r0 == 0) goto L_0x1081;
    L_0x107e:
        r0.cancel();
    L_0x1081:
        r0 = new android.animation.AnimatorSet;
        r0.<init>();
        r7.scrimAnimatorSet = r0;
        r0 = new java.util.ArrayList;
        r0.<init>();
        r1 = r7.scrimPaint;
        r2 = org.telegram.ui.Components.AnimationProperties.PAINT_ALPHA;
        r3 = 2;
        r3 = new int[r3];
        r3 = {0, 50};
        r1 = android.animation.ObjectAnimator.ofInt(r1, r2, r3);
        r0.add(r1);
        r1 = r7.pagedownButton;
        r1 = r1.getTag();
        if (r1 == 0) goto L_0x10b8;
    L_0x10a6:
        r1 = r7.pagedownButton;
        r2 = android.view.View.ALPHA;
        r3 = 1;
        r4 = new float[r3];
        r3 = 0;
        r5 = 0;
        r4[r5] = r3;
        r1 = android.animation.ObjectAnimator.ofFloat(r1, r2, r4);
        r0.add(r1);
    L_0x10b8:
        r1 = r7.mentiondownButton;
        r1 = r1.getTag();
        if (r1 == 0) goto L_0x10d2;
    L_0x10c0:
        r1 = r7.mentiondownButton;
        r2 = android.view.View.ALPHA;
        r3 = 1;
        r3 = new float[r3];
        r4 = 0;
        r5 = 0;
        r3[r5] = r4;
        r1 = android.animation.ObjectAnimator.ofFloat(r1, r2, r3);
        r0.add(r1);
    L_0x10d2:
        r1 = r7.scrimAnimatorSet;
        r1.playTogether(r0);
        r0 = r7.scrimAnimatorSet;
        r1 = 150; // 0x96 float:2.1E-43 double:7.4E-322;
        r0.setDuration(r1);
        r0 = r7.scrimAnimatorSet;
        r0.start();
        r0 = r7.forwardHintView;
        if (r0 == 0) goto L_0x10ea;
    L_0x10e7:
        r0.hide();
    L_0x10ea:
        r0 = r7.noSoundHintView;
        if (r0 == 0) goto L_0x10f1;
    L_0x10ee:
        r0.hide();
    L_0x10f1:
        r0 = r7.slowModeHint;
        if (r0 == 0) goto L_0x10f8;
    L_0x10f5:
        r0.hide();
    L_0x10f8:
        r0 = r7.chatActivityEnterView;
        if (r0 == 0) goto L_0x1104;
    L_0x10fc:
        r0 = r0.getEditField();
        r1 = 0;
        r0.setAllowDrawCursor(r1);
    L_0x1104:
        r0 = android.os.Build.VERSION.SDK_INT;
        r1 = 19;
        if (r0 < r1) goto L_0x1119;
    L_0x110a:
        r0 = r21.getParentActivity();
        r0 = r0.getWindow();
        r0 = r0.getDecorView();
        r0.setImportantForAccessibility(r12);
    L_0x1119:
        return;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.createMenu(android.view.View, boolean, boolean, float, float, boolean):void");
    }

    public /* synthetic */ boolean lambda$createMenu$65$ChatActivity(View view, Rect rect, View view2, MotionEvent motionEvent) {
        if (motionEvent.getActionMasked() == 0) {
            ActionBarPopupWindow actionBarPopupWindow = this.scrimPopupWindow;
            if (actionBarPopupWindow != null && actionBarPopupWindow.isShowing()) {
                view.getHitRect(rect);
                if (!rect.contains((int) motionEvent.getX(), (int) motionEvent.getY())) {
                    this.scrimPopupWindow.dismiss();
                }
            }
        } else if (motionEvent.getActionMasked() == 4) {
            ActionBarPopupWindow actionBarPopupWindow2 = this.scrimPopupWindow;
            if (actionBarPopupWindow2 != null && actionBarPopupWindow2.isShowing()) {
                this.scrimPopupWindow.dismiss();
            }
        }
        return false;
    }

    public /* synthetic */ void lambda$createMenu$66$ChatActivity(KeyEvent keyEvent) {
        if (keyEvent.getKeyCode() == 4 && keyEvent.getRepeatCount() == 0) {
            ActionBarPopupWindow actionBarPopupWindow = this.scrimPopupWindow;
            if (actionBarPopupWindow != null && actionBarPopupWindow.isShowing()) {
                this.scrimPopupWindow.dismiss();
            }
        }
    }

    public /* synthetic */ void lambda$createMenu$67$ChatActivity(int i, ArrayList arrayList, View view) {
        if (this.selectedObject != null && i >= 0 && i < arrayList.size()) {
            processSelectedOption(((Integer) arrayList.get(i)).intValue());
            ActionBarPopupWindow actionBarPopupWindow = this.scrimPopupWindow;
            if (actionBarPopupWindow != null) {
                actionBarPopupWindow.dismiss();
            }
        }
    }

    private void startEditingMessageObject(MessageObject messageObject) {
        if (messageObject != null && getParentActivity() != null) {
            if (this.searchItem != null && this.actionBar.isSearchFieldVisible()) {
                this.actionBar.closeSearchField();
                this.chatActivityEnterView.setFieldFocused();
            }
            this.mentionsAdapter.setNeedBotContext(false);
            this.chatActivityEnterView.setVisibility(0);
            showFieldPanelForEdit(true, messageObject);
            updateBottomOverlay();
            checkEditTimer();
            this.chatActivityEnterView.setAllowStickersAndGifs(false, false);
            updatePinnedMessageView(true);
            updateVisibleRows();
            TL_messages_getMessageEditData tL_messages_getMessageEditData = new TL_messages_getMessageEditData();
            tL_messages_getMessageEditData.peer = getMessagesController().getInputPeer((int) this.dialog_id);
            tL_messages_getMessageEditData.id = messageObject.getId();
            this.editingMessageObjectReqId = getConnectionsManager().sendRequest(tL_messages_getMessageEditData, new -$$Lambda$ChatActivity$3WnOhoffzjjGGcQAUThhfqYJdSc(this));
        }
    }

    public /* synthetic */ void lambda$startEditingMessageObject$69$ChatActivity(TLObject tLObject, TL_error tL_error) {
        AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$8q_Z7var__OBtv-ycpC4Y5lZYJ3U(this, tLObject));
    }

    public /* synthetic */ void lambda$null$68$ChatActivity(TLObject tLObject) {
        this.editingMessageObjectReqId = 0;
        ChatActivityEnterView chatActivityEnterView;
        if (tLObject == null) {
            AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
            builder.setTitle(LocaleController.getString("AppName", NUM));
            builder.setMessage(LocaleController.getString("EditMessageError", NUM));
            builder.setPositiveButton(LocaleController.getString("OK", NUM), null);
            showDialog(builder.create());
            chatActivityEnterView = this.chatActivityEnterView;
            if (chatActivityEnterView != null) {
                chatActivityEnterView.setEditingMessageObject(null, false);
                hideFieldPanel(true);
                return;
            }
            return;
        }
        chatActivityEnterView = this.chatActivityEnterView;
        if (chatActivityEnterView != null) {
            chatActivityEnterView.showEditDoneProgress(false, true);
        }
    }

    private void restartSticker(ChatMessageCell chatMessageCell) {
        MessageObject messageObject = chatMessageCell.getMessageObject();
        Document document = messageObject.getDocument();
        if (messageObject.isAnimatedEmoji() || (MessageObject.isAnimatedStickerDocument(document) && !SharedConfig.loopStickers)) {
            RLottieDrawable lottieAnimation = chatMessageCell.getPhotoImage().getLottieAnimation();
            if (lottieAnimation != null) {
                lottieAnimation.restart();
                if (messageObject.isAnimatedEmoji()) {
                    if ("❤".equals(messageObject.getStickerEmoji())) {
                        HashMap hashMap = new HashMap();
                        hashMap.put(Integer.valueOf(1), Integer.valueOf(1));
                        hashMap.put(Integer.valueOf(13), Integer.valueOf(0));
                        hashMap.put(Integer.valueOf(59), Integer.valueOf(1));
                        hashMap.put(Integer.valueOf(71), Integer.valueOf(0));
                        hashMap.put(Integer.valueOf(128), Integer.valueOf(1));
                        hashMap.put(Integer.valueOf(140), Integer.valueOf(0));
                        lottieAnimation.setVibrationPattern(hashMap);
                    }
                }
            }
        }
    }

    private String getMessageContent(MessageObject messageObject, int i, boolean z) {
        String str = "";
        if (z) {
            int i2 = messageObject.messageOwner.from_id;
            if (i != i2) {
                String str2 = ":\n";
                StringBuilder stringBuilder;
                if (i2 > 0) {
                    User user = getMessagesController().getUser(Integer.valueOf(messageObject.messageOwner.from_id));
                    if (user != null) {
                        stringBuilder = new StringBuilder();
                        stringBuilder.append(ContactsController.formatName(user.first_name, user.last_name));
                        stringBuilder.append(str2);
                        str = stringBuilder.toString();
                    }
                } else if (i2 < 0) {
                    Chat chat = getMessagesController().getChat(Integer.valueOf(-messageObject.messageOwner.from_id));
                    if (chat != null) {
                        stringBuilder = new StringBuilder();
                        stringBuilder.append(chat.title);
                        stringBuilder.append(str2);
                        str = stringBuilder.toString();
                    }
                }
            }
        }
        StringBuilder stringBuilder2;
        if ((messageObject.type == 0 || messageObject.isAnimatedEmoji()) && messageObject.messageOwner.message != null) {
            stringBuilder2 = new StringBuilder();
            stringBuilder2.append(str);
            stringBuilder2.append(messageObject.messageOwner.message);
            return stringBuilder2.toString();
        }
        Message message = messageObject.messageOwner;
        if (message.media == null || message.message == null) {
            stringBuilder2 = new StringBuilder();
            stringBuilder2.append(str);
            stringBuilder2.append(messageObject.messageText);
            return stringBuilder2.toString();
        }
        stringBuilder2 = new StringBuilder();
        stringBuilder2.append(str);
        stringBuilder2.append(messageObject.messageOwner.message);
        return stringBuilder2.toString();
    }

    private void saveMessageToGallery(MessageObject messageObject) {
        String str = messageObject.messageOwner.attachPath;
        if (!(TextUtils.isEmpty(str) || new File(str).exists())) {
            str = null;
        }
        if (TextUtils.isEmpty(str)) {
            str = FileLoader.getPathToMessage(messageObject.messageOwner).toString();
        }
        MediaController.saveFile(str, getParentActivity(), messageObject.isVideo(), null, null);
    }

    /* JADX WARNING: Missing block: B:146:0x04f5, code skipped:
            if (r14.exists() != false) goto L_0x04f9;
     */
    private void processSelectedOption(int r24) {
        /*
        r23 = this;
        r7 = r23;
        r0 = r7.selectedObject;
        if (r0 == 0) goto L_0x06df;
    L_0x0006:
        r0 = r23.getParentActivity();
        if (r0 != 0) goto L_0x000e;
    L_0x000c:
        goto L_0x06df;
    L_0x000e:
        r0 = "";
        r1 = 1000; // 0x3e8 float:1.401E-42 double:4.94E-321;
        r3 = NUM; // 0x7f0d06ee float:1.8745713E38 double:1.053130654E-314;
        r4 = "OK";
        r5 = 4;
        r6 = NUM; // 0x7f0d01f9 float:1.874314E38 double:1.053130027E-314;
        r8 = "Cancel";
        r9 = 23;
        r10 = 3;
        r11 = "android.permission.WRITE_EXTERNAL_STORAGE";
        r12 = 1;
        r13 = 0;
        r14 = 0;
        switch(r24) {
            case 0: goto L_0x0698;
            case 1: goto L_0x0682;
            case 2: goto L_0x064f;
            case 3: goto L_0x0643;
            case 4: goto L_0x05fe;
            case 5: goto L_0x04da;
            case 6: goto L_0x0455;
            case 7: goto L_0x03fc;
            case 8: goto L_0x03f5;
            case 9: goto L_0x03c6;
            case 10: goto L_0x033e;
            case 11: goto L_0x0325;
            case 12: goto L_0x030f;
            case 13: goto L_0x0225;
            case 14: goto L_0x01e3;
            case 15: goto L_0x01b5;
            case 16: goto L_0x01a8;
            case 17: goto L_0x016e;
            case 18: goto L_0x0155;
            case 19: goto L_0x0144;
            case 20: goto L_0x0128;
            case 21: goto L_0x0111;
            case 22: goto L_0x00f1;
            case 23: goto L_0x00e0;
            case 24: goto L_0x0097;
            case 25: goto L_0x006e;
            case 26: goto L_0x002b;
            default: goto L_0x0028;
        };
    L_0x0028:
        r1 = r14;
        goto L_0x06d9;
    L_0x002b:
        r0 = r7.selectedObject;
        r1 = new org.telegram.ui.ActionBar.AlertDialog$Builder;
        r2 = r23.getParentActivity();
        r1.<init>(r2);
        r2 = NUM; // 0x7f0d09f3 float:1.874728E38 double:1.053131036E-314;
        r3 = "StopPollAlertTitle";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r1.setTitle(r2);
        r2 = NUM; // 0x7f0d09f2 float:1.8747279E38 double:1.0531310354E-314;
        r3 = "StopPollAlertText";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r1.setMessage(r2);
        r2 = NUM; // 0x7f0d09e9 float:1.874726E38 double:1.053131031E-314;
        r3 = "Stop";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r3 = new org.telegram.ui.-$$Lambda$ChatActivity$DIMPYRfOO1arM3MSK4qcHTTOkHM;
        r3.<init>(r7, r0);
        r1.setPositiveButton(r2, r3);
        r0 = org.telegram.messenger.LocaleController.getString(r8, r6);
        r1.setNegativeButton(r0, r14);
        r0 = r1.create();
        r7.showDialog(r0);
        goto L_0x0028;
    L_0x006e:
        r0 = new org.telegram.ui.ActionBar.AlertDialog[r12];
        r1 = new org.telegram.ui.ActionBar.AlertDialog;
        r2 = r23.getParentActivity();
        r1.<init>(r2, r10);
        r0[r13] = r1;
        r1 = r23.getSendMessagesHelper();
        r2 = r7.selectedObject;
        r3 = new org.telegram.ui.-$$Lambda$ChatActivity$MEKaM8x9iY2x1E1v9xmuL-UVyp8;
        r3.<init>(r0);
        r1 = r1.sendVote(r2, r14, r3);
        if (r1 == 0) goto L_0x0028;
    L_0x008c:
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$4wPKLb86CAqXlFkM9Z4UoQ4a9EE;
        r2.<init>(r7, r0, r1);
        r0 = 500; // 0x1f4 float:7.0E-43 double:2.47E-321;
        org.telegram.messenger.AndroidUtilities.runOnUIThread(r2, r0);
        goto L_0x0028;
    L_0x0097:
        r0 = r7.selectedObject;
        r0 = r0.isEditing();
        if (r0 != 0) goto L_0x00d5;
    L_0x009f:
        r0 = r7.selectedObject;
        r0 = r0.isSending();
        if (r0 == 0) goto L_0x00ac;
    L_0x00a7:
        r0 = r7.selectedObjectGroup;
        if (r0 != 0) goto L_0x00ac;
    L_0x00ab:
        goto L_0x00d5;
    L_0x00ac:
        r0 = r7.selectedObject;
        r0 = r0.isSending();
        if (r0 == 0) goto L_0x0028;
    L_0x00b4:
        r0 = r7.selectedObjectGroup;
        if (r0 == 0) goto L_0x0028;
    L_0x00b8:
        r0 = r7.selectedObjectGroup;
        r0 = r0.messages;
        r0 = r0.size();
        if (r13 >= r0) goto L_0x0028;
    L_0x00c2:
        r0 = r23.getSendMessagesHelper();
        r1 = new java.util.ArrayList;
        r2 = r7.selectedObjectGroup;
        r2 = r2.messages;
        r1.<init>(r2);
        r0.cancelSendingMessage(r1);
        r13 = r13 + 1;
        goto L_0x00b8;
    L_0x00d5:
        r0 = r23.getSendMessagesHelper();
        r1 = r7.selectedObject;
        r0.cancelSendingMessage(r1);
        goto L_0x0028;
    L_0x00e0:
        r0 = r23.getParentActivity();
        r1 = r7.dialog_id;
        r3 = r7.selectedObject;
        r3 = r3.getId();
        org.telegram.ui.Components.AlertsCreator.createReportAlert(r0, r1, r3, r7);
        goto L_0x0028;
    L_0x00f1:
        r0 = new org.telegram.tgnet.TLRPC$TL_channels_exportMessageLink;
        r0.<init>();
        r1 = r7.selectedObject;
        r1 = r1.getId();
        r0.id = r1;
        r1 = r7.currentChat;
        r1 = org.telegram.messenger.MessagesController.getInputChannel(r1);
        r0.channel = r1;
        r1 = r23.getConnectionsManager();
        r2 = org.telegram.ui.-$$Lambda$ChatActivity$n4HarHZ_JY6HBR1whyHld2Ayx08.INSTANCE;
        r1.sendRequest(r0, r2);
        goto L_0x0028;
    L_0x0111:
        r8 = r23.getMediaDataController();
        r9 = 2;
        r10 = r7.selectedObject;
        r11 = r10.getDocument();
        r3 = java.lang.System.currentTimeMillis();
        r3 = r3 / r1;
        r12 = (int) r3;
        r13 = 1;
        r8.addRecentSticker(r9, r10, r11, r12, r13);
        goto L_0x0028;
    L_0x0128:
        r0 = r23.getMediaDataController();
        r3 = 2;
        r4 = r7.selectedObject;
        r5 = r4.getDocument();
        r8 = java.lang.System.currentTimeMillis();
        r8 = r8 / r1;
        r6 = (int) r8;
        r8 = 0;
        r1 = r3;
        r2 = r4;
        r3 = r5;
        r4 = r6;
        r5 = r8;
        r0.addRecentSticker(r1, r2, r3, r4, r5);
        goto L_0x0028;
    L_0x0144:
        r0 = r23.getParentActivity();
        r1 = r7.selectedObject;
        r1 = r1.messageOwner;
        r1 = r1.action;
        r1 = (org.telegram.tgnet.TLRPC.TL_messageActionPhoneCall) r1;
        org.telegram.ui.Components.voip.VoIPHelper.showRateAlert(r0, r1);
        goto L_0x0028;
    L_0x0155:
        r0 = r7.currentUser;
        if (r0 == 0) goto L_0x0028;
    L_0x0159:
        r1 = r23.getParentActivity();
        r2 = r23.getMessagesController();
        r3 = r7.currentUser;
        r3 = r3.id;
        r2 = r2.getUserFull(r3);
        org.telegram.ui.Components.voip.VoIPHelper.startCall(r0, r1, r2);
        goto L_0x0028;
    L_0x016e:
        r0 = new android.content.Intent;	 Catch:{ Exception -> 0x01a2 }
        r1 = "android.intent.action.DIAL";
        r2 = new java.lang.StringBuilder;	 Catch:{ Exception -> 0x01a2 }
        r2.<init>();	 Catch:{ Exception -> 0x01a2 }
        r3 = "tel:";
        r2.append(r3);	 Catch:{ Exception -> 0x01a2 }
        r3 = r7.selectedObject;	 Catch:{ Exception -> 0x01a2 }
        r3 = r3.messageOwner;	 Catch:{ Exception -> 0x01a2 }
        r3 = r3.media;	 Catch:{ Exception -> 0x01a2 }
        r3 = r3.phone_number;	 Catch:{ Exception -> 0x01a2 }
        r2.append(r3);	 Catch:{ Exception -> 0x01a2 }
        r2 = r2.toString();	 Catch:{ Exception -> 0x01a2 }
        r2 = android.net.Uri.parse(r2);	 Catch:{ Exception -> 0x01a2 }
        r0.<init>(r1, r2);	 Catch:{ Exception -> 0x01a2 }
        r1 = NUM; // 0x10000000 float:2.5243549E-29 double:1.32624737E-315;
        r0.addFlags(r1);	 Catch:{ Exception -> 0x01a2 }
        r1 = r23.getParentActivity();	 Catch:{ Exception -> 0x01a2 }
        r2 = 500; // 0x1f4 float:7.0E-43 double:2.47E-321;
        r1.startActivityForResult(r0, r2);	 Catch:{ Exception -> 0x01a2 }
        goto L_0x0028;
    L_0x01a2:
        r0 = move-exception;
        org.telegram.messenger.FileLog.e(r0);
        goto L_0x0028;
    L_0x01a8:
        r0 = r7.selectedObject;
        r0 = r0.messageOwner;
        r0 = r0.media;
        r0 = r0.phone_number;
        org.telegram.messenger.AndroidUtilities.addToClipboard(r0);
        goto L_0x0028;
    L_0x01b5:
        r0 = new android.os.Bundle;
        r0.<init>();
        r1 = r7.selectedObject;
        r1 = r1.messageOwner;
        r1 = r1.media;
        r1 = r1.user_id;
        r2 = "user_id";
        r0.putInt(r2, r1);
        r1 = r7.selectedObject;
        r1 = r1.messageOwner;
        r1 = r1.media;
        r1 = r1.phone_number;
        r2 = "phone";
        r0.putString(r2, r1);
        r1 = "addContact";
        r0.putBoolean(r1, r12);
        r1 = new org.telegram.ui.ContactAddActivity;
        r1.<init>(r0);
        r7.presentFragment(r1);
        goto L_0x0028;
    L_0x01e3:
        r0 = new org.telegram.ui.ActionBar.AlertDialog$Builder;
        r1 = r23.getParentActivity();
        r0.<init>(r1);
        r1 = NUM; // 0x7f0d0a6a float:1.8747522E38 double:1.0531310947E-314;
        r2 = "UnpinMessageAlertTitle";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r0.setTitle(r1);
        r1 = NUM; // 0x7f0d0a69 float:1.874752E38 double:1.053131094E-314;
        r2 = "UnpinMessageAlert";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r0.setMessage(r1);
        r1 = NUM; // 0x7f0d0a68 float:1.8747518E38 double:1.0531310937E-314;
        r2 = "UnpinMessage";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$JpGYdEIFnCnXIaVOMziGAvk4pl4;
        r2.<init>(r7);
        r0.setPositiveButton(r1, r2);
        r1 = org.telegram.messenger.LocaleController.getString(r8, r6);
        r0.setNegativeButton(r1, r14);
        r0 = r0.create();
        r7.showDialog(r0);
        goto L_0x0028;
    L_0x0225:
        r1 = r7.selectedObject;
        r1 = r1.getId();
        r2 = new org.telegram.ui.ActionBar.AlertDialog$Builder;
        r5 = r23.getParentActivity();
        r2.<init>(r5);
        r5 = NUM; // 0x7f0d085a float:1.8746451E38 double:1.053130834E-314;
        r9 = "PinMessageAlertTitle";
        r5 = org.telegram.messenger.LocaleController.getString(r9, r5);
        r2.setTitle(r5);
        r5 = r7.currentUser;
        if (r5 == 0) goto L_0x0256;
    L_0x0244:
        r0 = NUM; // 0x7f0d0859 float:1.874645E38 double:1.0531308334E-314;
        r5 = "PinMessageAlertChat";
        r0 = org.telegram.messenger.LocaleController.getString(r5, r0);
        r2.setMessage(r0);
        r0 = new boolean[r12];
        r0[r13] = r13;
        goto L_0x02f2;
    L_0x0256:
        r5 = r7.currentChat;
        r5 = org.telegram.messenger.ChatObject.isChannel(r5);
        if (r5 == 0) goto L_0x0264;
    L_0x025e:
        r5 = r7.currentChat;
        r5 = r5.megagroup;
        if (r5 != 0) goto L_0x026e;
    L_0x0264:
        r5 = r7.currentChat;
        if (r5 == 0) goto L_0x02e2;
    L_0x0268:
        r5 = org.telegram.messenger.ChatObject.isChannel(r5);
        if (r5 != 0) goto L_0x02e2;
    L_0x026e:
        r5 = NUM; // 0x7f0d0857 float:1.8746445E38 double:1.0531308324E-314;
        r9 = "PinMessageAlert";
        r5 = org.telegram.messenger.LocaleController.getString(r9, r5);
        r2.setMessage(r5);
        r5 = new boolean[r12];
        r5[r13] = r12;
        r9 = new android.widget.FrameLayout;
        r10 = r23.getParentActivity();
        r9.<init>(r10);
        r10 = new org.telegram.ui.Cells.CheckBoxCell;
        r11 = r23.getParentActivity();
        r10.<init>(r11, r12);
        r11 = org.telegram.ui.ActionBar.Theme.getSelectorDrawable(r13);
        r10.setBackgroundDrawable(r11);
        r11 = NUM; // 0x7f0d085b float:1.8746453E38 double:1.0531308344E-314;
        r15 = new java.lang.Object[r13];
        r14 = "PinNotify";
        r11 = org.telegram.messenger.LocaleController.formatString(r14, r11, r15);
        r10.setText(r11, r0, r12, r13);
        r0 = org.telegram.messenger.LocaleController.isRTL;
        if (r0 == 0) goto L_0x02b0;
    L_0x02a9:
        r0 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r0 = org.telegram.messenger.AndroidUtilities.dp(r0);
        goto L_0x02b1;
    L_0x02b0:
        r0 = 0;
    L_0x02b1:
        r11 = org.telegram.messenger.LocaleController.isRTL;
        if (r11 == 0) goto L_0x02b7;
    L_0x02b5:
        r11 = 0;
        goto L_0x02bd;
    L_0x02b7:
        r11 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r11 = org.telegram.messenger.AndroidUtilities.dp(r11);
    L_0x02bd:
        r10.setPadding(r0, r13, r11, r13);
        r16 = -1;
        r17 = NUM; // 0x42400000 float:48.0 double:5.491493014E-315;
        r18 = 51;
        r19 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r20 = 0;
        r21 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r22 = 0;
        r0 = org.telegram.ui.Components.LayoutHelper.createFrame(r16, r17, r18, r19, r20, r21, r22);
        r9.addView(r10, r0);
        r0 = new org.telegram.ui.-$$Lambda$ChatActivity$-ktfFg8piAGEHHYvubHj3y8iBRI;
        r0.<init>(r5);
        r10.setOnClickListener(r0);
        r2.setView(r9);
        r0 = r5;
        goto L_0x02f2;
    L_0x02e2:
        r0 = NUM; // 0x7f0d0858 float:1.8746447E38 double:1.053130833E-314;
        r5 = "PinMessageAlertChannel";
        r0 = org.telegram.messenger.LocaleController.getString(r5, r0);
        r2.setMessage(r0);
        r0 = new boolean[r12];
        r0[r13] = r13;
    L_0x02f2:
        r3 = org.telegram.messenger.LocaleController.getString(r4, r3);
        r4 = new org.telegram.ui.-$$Lambda$ChatActivity$PL0AYgo3N8Ne6_9WYj-yYAfC8cI;
        r4.<init>(r7, r1, r0);
        r2.setPositiveButton(r3, r4);
        r0 = org.telegram.messenger.LocaleController.getString(r8, r6);
        r1 = 0;
        r2.setNegativeButton(r0, r1);
        r0 = r2.create();
        r7.showDialog(r0);
        goto L_0x06d9;
    L_0x030f:
        r1 = r14;
        r0 = r7.selectedObjectToEditCaption;
        if (r0 == 0) goto L_0x0318;
    L_0x0314:
        r7.startEditingMessageObject(r0);
        goto L_0x031d;
    L_0x0318:
        r0 = r7.selectedObject;
        r7.startEditingMessageObject(r0);
    L_0x031d:
        r7.selectedObject = r1;
        r7.selectedObjectGroup = r1;
        r7.selectedObjectToEditCaption = r1;
        goto L_0x06d9;
    L_0x0325:
        r0 = r7.selectedObject;
        r0 = r0.getDocument();
        r1 = r23.getMessagesController();
        r2 = r7.selectedObject;
        r1.saveGif(r2, r0);
        r23.showGifHint();
        r1 = r7.chatActivityEnterView;
        r1.addRecentGif(r0);
        goto L_0x064c;
    L_0x033e:
        r1 = android.os.Build.VERSION.SDK_INT;
        if (r1 < r9) goto L_0x035f;
    L_0x0342:
        r1 = r23.getParentActivity();
        r1 = r1.checkSelfPermission(r11);
        if (r1 == 0) goto L_0x035f;
    L_0x034c:
        r0 = r23.getParentActivity();
        r1 = new java.lang.String[r12];
        r1[r13] = r11;
        r0.requestPermissions(r1, r5);
        r1 = 0;
        r7.selectedObject = r1;
        r7.selectedObjectGroup = r1;
        r7.selectedObjectToEditCaption = r1;
        return;
    L_0x035f:
        r1 = r7.selectedObject;
        r1 = r1.getDocument();
        r1 = org.telegram.messenger.FileLoader.getDocumentFileName(r1);
        r2 = android.text.TextUtils.isEmpty(r1);
        if (r2 == 0) goto L_0x0375;
    L_0x036f:
        r1 = r7.selectedObject;
        r1 = r1.getFileName();
    L_0x0375:
        r2 = r7.selectedObject;
        r2 = r2.messageOwner;
        r14 = r2.attachPath;
        if (r14 == 0) goto L_0x038f;
    L_0x037d:
        r2 = r14.length();
        if (r2 <= 0) goto L_0x038f;
    L_0x0383:
        r2 = new java.io.File;
        r2.<init>(r14);
        r2 = r2.exists();
        if (r2 != 0) goto L_0x038f;
    L_0x038e:
        r14 = 0;
    L_0x038f:
        if (r14 == 0) goto L_0x0397;
    L_0x0391:
        r2 = r14.length();
        if (r2 != 0) goto L_0x03a3;
    L_0x0397:
        r2 = r7.selectedObject;
        r2 = r2.messageOwner;
        r2 = org.telegram.messenger.FileLoader.getPathToMessage(r2);
        r14 = r2.toString();
    L_0x03a3:
        r2 = r23.getParentActivity();
        r3 = r7.selectedObject;
        r3 = r3.isMusic();
        if (r3 == 0) goto L_0x03b0;
    L_0x03af:
        goto L_0x03b1;
    L_0x03b0:
        r10 = 2;
    L_0x03b1:
        r3 = r7.selectedObject;
        r3 = r3.getDocument();
        if (r3 == 0) goto L_0x03c1;
    L_0x03b9:
        r0 = r7.selectedObject;
        r0 = r0.getDocument();
        r0 = r0.mime_type;
    L_0x03c1:
        org.telegram.messenger.MediaController.saveFile(r14, r2, r10, r1, r0);
        goto L_0x064c;
    L_0x03c6:
        r0 = new org.telegram.ui.Components.StickersAlert;
        r2 = r23.getParentActivity();
        r1 = r7.selectedObject;
        r4 = r1.getInputStickerSet();
        r5 = 0;
        r1 = r7.bottomOverlayChat;
        r1 = r1.getVisibility();
        if (r1 == 0) goto L_0x03e9;
    L_0x03db:
        r1 = r7.currentChat;
        if (r1 == 0) goto L_0x03e5;
    L_0x03df:
        r1 = org.telegram.messenger.ChatObject.canSendStickers(r1);
        if (r1 == 0) goto L_0x03e9;
    L_0x03e5:
        r1 = r7.chatActivityEnterView;
        r6 = r1;
        goto L_0x03ea;
    L_0x03e9:
        r6 = 0;
    L_0x03ea:
        r1 = r0;
        r3 = r23;
        r1.<init>(r2, r3, r4, r5, r6);
        r7.showDialog(r0);
        goto L_0x064c;
    L_0x03f5:
        r0 = r7.selectedObject;
        r7.showFieldPanelForReply(r0);
        goto L_0x064c;
    L_0x03fc:
        r0 = r7.selectedObject;
        r0 = r0.messageOwner;
        r14 = r0.attachPath;
        if (r14 == 0) goto L_0x0416;
    L_0x0404:
        r0 = r14.length();
        if (r0 <= 0) goto L_0x0416;
    L_0x040a:
        r0 = new java.io.File;
        r0.<init>(r14);
        r0 = r0.exists();
        if (r0 != 0) goto L_0x0416;
    L_0x0415:
        r14 = 0;
    L_0x0416:
        if (r14 == 0) goto L_0x041e;
    L_0x0418:
        r0 = r14.length();
        if (r0 != 0) goto L_0x042a;
    L_0x041e:
        r0 = r7.selectedObject;
        r0 = r0.messageOwner;
        r0 = org.telegram.messenger.FileLoader.getPathToMessage(r0);
        r14 = r0.toString();
    L_0x042a:
        r0 = android.os.Build.VERSION.SDK_INT;
        if (r0 < r9) goto L_0x044b;
    L_0x042e:
        r0 = r23.getParentActivity();
        r0 = r0.checkSelfPermission(r11);
        if (r0 == 0) goto L_0x044b;
    L_0x0438:
        r0 = r23.getParentActivity();
        r1 = new java.lang.String[r12];
        r1[r13] = r11;
        r0.requestPermissions(r1, r5);
        r1 = 0;
        r7.selectedObject = r1;
        r7.selectedObjectGroup = r1;
        r7.selectedObjectToEditCaption = r1;
        return;
    L_0x044b:
        r1 = 0;
        r0 = r23.getParentActivity();
        org.telegram.messenger.MediaController.saveFile(r14, r0, r13, r1, r1);
        goto L_0x06d9;
    L_0x0455:
        r0 = r7.selectedObject;
        r0 = r0.messageOwner;
        r14 = r0.attachPath;
        if (r14 == 0) goto L_0x046f;
    L_0x045d:
        r0 = r14.length();
        if (r0 <= 0) goto L_0x046f;
    L_0x0463:
        r0 = new java.io.File;
        r0.<init>(r14);
        r0 = r0.exists();
        if (r0 != 0) goto L_0x046f;
    L_0x046e:
        r14 = 0;
    L_0x046f:
        if (r14 == 0) goto L_0x0477;
    L_0x0471:
        r0 = r14.length();
        if (r0 != 0) goto L_0x0483;
    L_0x0477:
        r0 = r7.selectedObject;
        r0 = r0.messageOwner;
        r0 = org.telegram.messenger.FileLoader.getPathToMessage(r0);
        r14 = r0.toString();
    L_0x0483:
        r0 = new android.content.Intent;
        r1 = "android.intent.action.SEND";
        r0.<init>(r1);
        r1 = r7.selectedObject;
        r1 = r1.getDocument();
        r1 = r1.mime_type;
        r0.setType(r1);
        r1 = new java.io.File;
        r1.<init>(r14);
        r2 = android.os.Build.VERSION.SDK_INT;
        r3 = 24;
        r4 = "android.intent.extra.STREAM";
        if (r2 < r3) goto L_0x04bb;
    L_0x04a2:
        r2 = r23.getParentActivity();	 Catch:{ Exception -> 0x04b3 }
        r3 = "org.telegram.messenger.beta.provider";
        r2 = androidx.core.content.FileProvider.getUriForFile(r2, r3, r1);	 Catch:{ Exception -> 0x04b3 }
        r0.putExtra(r4, r2);	 Catch:{ Exception -> 0x04b3 }
        r0.setFlags(r12);	 Catch:{ Exception -> 0x04b3 }
        goto L_0x04c2;
    L_0x04b3:
        r1 = android.net.Uri.fromFile(r1);
        r0.putExtra(r4, r1);
        goto L_0x04c2;
    L_0x04bb:
        r1 = android.net.Uri.fromFile(r1);
        r0.putExtra(r4, r1);
    L_0x04c2:
        r1 = r23.getParentActivity();	 Catch:{ Throwable -> 0x064c }
        r2 = "ShareFile";
        r3 = NUM; // 0x7f0d0994 float:1.8747088E38 double:1.053130989E-314;
        r2 = org.telegram.messenger.LocaleController.getString(r2, r3);	 Catch:{ Throwable -> 0x064c }
        r0 = android.content.Intent.createChooser(r0, r2);	 Catch:{ Throwable -> 0x064c }
        r2 = 500; // 0x1f4 float:7.0E-43 double:2.47E-321;
        r1.startActivityForResult(r0, r2);	 Catch:{ Throwable -> 0x064c }
        goto L_0x064c;
    L_0x04da:
        r0 = r7.selectedObject;
        r0 = r0.messageOwner;
        r0 = r0.attachPath;
        r0 = android.text.TextUtils.isEmpty(r0);
        if (r0 != 0) goto L_0x04f8;
    L_0x04e6:
        r14 = new java.io.File;
        r0 = r7.selectedObject;
        r0 = r0.messageOwner;
        r0 = r0.attachPath;
        r14.<init>(r0);
        r0 = r14.exists();
        if (r0 == 0) goto L_0x04f8;
    L_0x04f7:
        goto L_0x04f9;
    L_0x04f8:
        r14 = 0;
    L_0x04f9:
        if (r14 != 0) goto L_0x050a;
    L_0x04fb:
        r0 = r7.selectedObject;
        r0 = r0.messageOwner;
        r0 = org.telegram.messenger.FileLoader.getPathToMessage(r0);
        r1 = r0.exists();
        if (r1 == 0) goto L_0x050a;
    L_0x0509:
        r14 = r0;
    L_0x050a:
        if (r14 == 0) goto L_0x064c;
    L_0x050c:
        r0 = r14.getName();
        r0 = r0.toLowerCase();
        r1 = "attheme";
        r0 = r0.endsWith(r1);
        if (r0 == 0) goto L_0x05a9;
    L_0x051c:
        r0 = r7.chatLayoutManager;
        r1 = -1;
        if (r0 == 0) goto L_0x0551;
    L_0x0521:
        r0 = r0.findFirstVisibleItemPosition();
        if (r0 == 0) goto L_0x054f;
    L_0x0527:
        r7.scrollToPositionOnRecreate = r0;
        r0 = r7.chatListView;
        r2 = r7.scrollToPositionOnRecreate;
        r0 = r0.findViewHolderForAdapterPosition(r2);
        r0 = (org.telegram.ui.Components.RecyclerListView.Holder) r0;
        if (r0 == 0) goto L_0x054c;
    L_0x0535:
        r2 = r7.chatListView;
        r2 = r2.getMeasuredHeight();
        r0 = r0.itemView;
        r0 = r0.getBottom();
        r2 = r2 - r0;
        r0 = r7.chatListView;
        r0 = r0.getPaddingBottom();
        r2 = r2 - r0;
        r7.scrollToOffsetOnRecreate = r2;
        goto L_0x0551;
    L_0x054c:
        r7.scrollToPositionOnRecreate = r1;
        goto L_0x0551;
    L_0x054f:
        r7.scrollToPositionOnRecreate = r1;
    L_0x0551:
        r0 = r7.selectedObject;
        r0 = r0.getDocumentName();
        r0 = org.telegram.ui.ActionBar.Theme.applyThemeFile(r14, r0, r12);
        if (r0 == 0) goto L_0x0567;
    L_0x055d:
        r1 = new org.telegram.ui.ThemePreviewActivity;
        r1.<init>(r14, r0);
        r7.presentFragment(r1);
        goto L_0x064c;
    L_0x0567:
        r7.scrollToPositionOnRecreate = r1;
        r0 = r23.getParentActivity();
        if (r0 != 0) goto L_0x0577;
    L_0x056f:
        r1 = 0;
        r7.selectedObject = r1;
        r7.selectedObjectGroup = r1;
        r7.selectedObjectToEditCaption = r1;
        return;
    L_0x0577:
        r0 = new org.telegram.ui.ActionBar.AlertDialog$Builder;
        r1 = r23.getParentActivity();
        r0.<init>(r1);
        r1 = NUM; // 0x7f0d00f1 float:1.8742604E38 double:1.0531298966E-314;
        r2 = "AppName";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r0.setTitle(r1);
        r1 = NUM; // 0x7f0d0525 float:1.8744786E38 double:1.053130428E-314;
        r2 = "IncorrectTheme";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r0.setMessage(r1);
        r1 = org.telegram.messenger.LocaleController.getString(r4, r3);
        r2 = 0;
        r0.setPositiveButton(r1, r2);
        r0 = r0.create();
        r7.showDialog(r0);
        goto L_0x064c;
    L_0x05a9:
        r0 = org.telegram.messenger.LocaleController.getInstance();
        r1 = r7.currentAccount;
        r0 = r0.applyLanguageFile(r14, r1);
        if (r0 == 0) goto L_0x05bf;
    L_0x05b5:
        r0 = new org.telegram.ui.LanguageSelectActivity;
        r0.<init>();
        r7.presentFragment(r0);
        goto L_0x064c;
    L_0x05bf:
        r0 = r23.getParentActivity();
        if (r0 != 0) goto L_0x05cd;
    L_0x05c5:
        r1 = 0;
        r7.selectedObject = r1;
        r7.selectedObjectGroup = r1;
        r7.selectedObjectToEditCaption = r1;
        return;
    L_0x05cd:
        r0 = new org.telegram.ui.ActionBar.AlertDialog$Builder;
        r1 = r23.getParentActivity();
        r0.<init>(r1);
        r1 = NUM; // 0x7f0d00f1 float:1.8742604E38 double:1.0531298966E-314;
        r2 = "AppName";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r0.setTitle(r1);
        r1 = NUM; // 0x7f0d0524 float:1.8744784E38 double:1.0531304277E-314;
        r2 = "IncorrectLocalization";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r0.setMessage(r1);
        r1 = org.telegram.messenger.LocaleController.getString(r4, r3);
        r2 = 0;
        r0.setPositiveButton(r1, r2);
        r0 = r0.create();
        r7.showDialog(r0);
        goto L_0x064c;
    L_0x05fe:
        r0 = android.os.Build.VERSION.SDK_INT;
        if (r0 < r9) goto L_0x061f;
    L_0x0602:
        r0 = r23.getParentActivity();
        r0 = r0.checkSelfPermission(r11);
        if (r0 == 0) goto L_0x061f;
    L_0x060c:
        r0 = r23.getParentActivity();
        r1 = new java.lang.String[r12];
        r1[r13] = r11;
        r0.requestPermissions(r1, r5);
        r1 = 0;
        r7.selectedObject = r1;
        r7.selectedObjectGroup = r1;
        r7.selectedObjectToEditCaption = r1;
        return;
    L_0x061f:
        r0 = r7.selectedObjectGroup;
        if (r0 == 0) goto L_0x063d;
    L_0x0623:
        r0 = r7.selectedObjectGroup;
        r0 = r0.messages;
        r0 = r0.size();
        if (r13 >= r0) goto L_0x064c;
    L_0x062d:
        r0 = r7.selectedObjectGroup;
        r0 = r0.messages;
        r0 = r0.get(r13);
        r0 = (org.telegram.messenger.MessageObject) r0;
        r7.saveMessageToGallery(r0);
        r13 = r13 + 1;
        goto L_0x0623;
    L_0x063d:
        r0 = r7.selectedObject;
        r7.saveMessageToGallery(r0);
        goto L_0x064c;
    L_0x0643:
        r0 = r7.selectedObject;
        r0 = r7.getMessageContent(r0, r13, r13);
        org.telegram.messenger.AndroidUtilities.addToClipboard(r0);
    L_0x064c:
        r1 = 0;
        goto L_0x06d9;
    L_0x064f:
        r0 = r7.selectedObject;
        r7.forwardingMessage = r0;
        r0 = r7.selectedObjectGroup;
        r7.forwardingMessageGroup = r0;
        r0 = new android.os.Bundle;
        r0.<init>();
        r1 = "onlySelect";
        r0.putBoolean(r1, r12);
        r1 = "dialogsType";
        r0.putInt(r1, r10);
        r1 = r7.forwardingMessageGroup;
        if (r1 != 0) goto L_0x066b;
    L_0x066a:
        goto L_0x0671;
    L_0x066b:
        r1 = r1.messages;
        r12 = r1.size();
    L_0x0671:
        r1 = "messagesCount";
        r0.putInt(r1, r12);
        r1 = new org.telegram.ui.DialogsActivity;
        r1.<init>(r0);
        r1.setDelegate(r7);
        r7.presentFragment(r1);
        goto L_0x064c;
    L_0x0682:
        r0 = r23.getParentActivity();
        if (r0 != 0) goto L_0x0690;
    L_0x0688:
        r1 = 0;
        r7.selectedObject = r1;
        r7.selectedObjectToEditCaption = r1;
        r7.selectedObjectGroup = r1;
        return;
    L_0x0690:
        r0 = r7.selectedObject;
        r1 = r7.selectedObjectGroup;
        r7.createDeleteMessagesAlert(r0, r1);
        goto L_0x064c;
    L_0x0698:
        r0 = r7.selectedObjectGroup;
        if (r0 == 0) goto L_0x06c5;
    L_0x069c:
        r0 = 0;
    L_0x069d:
        r1 = r7.selectedObjectGroup;
        r1 = r1.messages;
        r1 = r1.size();
        if (r0 >= r1) goto L_0x06bf;
    L_0x06a7:
        r1 = r23.getSendMessagesHelper();
        r2 = r7.selectedObjectGroup;
        r2 = r2.messages;
        r2 = r2.get(r0);
        r2 = (org.telegram.messenger.MessageObject) r2;
        r1 = r1.retrySendMessage(r2, r13);
        if (r1 != 0) goto L_0x06bc;
    L_0x06bb:
        r12 = 0;
    L_0x06bc:
        r0 = r0 + 1;
        goto L_0x069d;
    L_0x06bf:
        if (r12 == 0) goto L_0x064c;
    L_0x06c1:
        r23.moveScrollToLastMessage();
        goto L_0x064c;
    L_0x06c5:
        r0 = r23.getSendMessagesHelper();
        r1 = r7.selectedObject;
        r0 = r0.retrySendMessage(r1, r13);
        if (r0 == 0) goto L_0x064c;
    L_0x06d1:
        r23.updateVisibleRows();
        r23.moveScrollToLastMessage();
        goto L_0x064c;
    L_0x06d9:
        r7.selectedObject = r1;
        r7.selectedObjectGroup = r1;
        r7.selectedObjectToEditCaption = r1;
    L_0x06df:
        return;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.processSelectedOption(int):void");
    }

    static /* synthetic */ void lambda$processSelectedOption$70(boolean[] zArr, View view) {
        CheckBoxCell checkBoxCell = (CheckBoxCell) view;
        zArr[0] = zArr[0] ^ 1;
        checkBoxCell.setChecked(zArr[0], true);
    }

    public /* synthetic */ void lambda$processSelectedOption$71$ChatActivity(int i, boolean[] zArr, DialogInterface dialogInterface, int i2) {
        getMessagesController().pinMessage(this.currentChat, this.currentUser, i, zArr[0]);
    }

    public /* synthetic */ void lambda$processSelectedOption$72$ChatActivity(DialogInterface dialogInterface, int i) {
        getMessagesController().pinMessage(this.currentChat, this.currentUser, 0, false);
    }

    static /* synthetic */ void lambda$null$73(TLObject tLObject) {
        if (tLObject != null) {
            TL_exportedMessageLink tL_exportedMessageLink = (TL_exportedMessageLink) tLObject;
            try {
                ((ClipboardManager) ApplicationLoader.applicationContext.getSystemService("clipboard")).setPrimaryClip(ClipData.newPlainText("label", tL_exportedMessageLink.link));
                if (tL_exportedMessageLink.link.contains("/c/")) {
                    Toast.makeText(ApplicationLoader.applicationContext, LocaleController.getString("LinkCopiedPrivate", NUM), 0).show();
                } else {
                    Toast.makeText(ApplicationLoader.applicationContext, LocaleController.getString("LinkCopied", NUM), 0).show();
                }
            } catch (Exception e) {
                FileLog.e(e);
            }
        }
    }

    static /* synthetic */ void lambda$processSelectedOption$75(AlertDialog[] alertDialogArr) {
        try {
            alertDialogArr[0].dismiss();
        } catch (Throwable unused) {
        }
        alertDialogArr[0] = null;
    }

    public /* synthetic */ void lambda$processSelectedOption$77$ChatActivity(AlertDialog[] alertDialogArr, int i) {
        if (alertDialogArr[0] != null) {
            alertDialogArr[0].setOnCancelListener(new -$$Lambda$ChatActivity$-E_ibZFz5mtlzQ9GVZLTSlVLx18(this, i));
            showDialog(alertDialogArr[0]);
        }
    }

    public /* synthetic */ void lambda$null$76$ChatActivity(int i, DialogInterface dialogInterface) {
        getConnectionsManager().cancelRequest(i, true);
    }

    public /* synthetic */ void lambda$processSelectedOption$83$ChatActivity(MessageObject messageObject, DialogInterface dialogInterface, int i) {
        AlertDialog[] alertDialogArr = new AlertDialog[]{new AlertDialog(getParentActivity(), 3)};
        TL_messages_editMessage tL_messages_editMessage = new TL_messages_editMessage();
        TL_messageMediaPoll tL_messageMediaPoll = (TL_messageMediaPoll) messageObject.messageOwner.media;
        TL_inputMediaPoll tL_inputMediaPoll = new TL_inputMediaPoll();
        tL_inputMediaPoll.poll = new TL_poll();
        TL_poll tL_poll = tL_inputMediaPoll.poll;
        TL_poll tL_poll2 = tL_messageMediaPoll.poll;
        tL_poll.id = tL_poll2.id;
        tL_poll.question = tL_poll2.question;
        tL_poll.answers = tL_poll2.answers;
        tL_poll.closed = true;
        tL_messages_editMessage.media = tL_inputMediaPoll;
        tL_messages_editMessage.peer = getMessagesController().getInputPeer((int) this.dialog_id);
        tL_messages_editMessage.id = messageObject.getId();
        tL_messages_editMessage.flags |= 16384;
        AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$EdOtB0aViTXvYTAhkrVW8fNClJ4(this, alertDialogArr, getConnectionsManager().sendRequest(tL_messages_editMessage, new -$$Lambda$ChatActivity$nootH1RI82jsHNzxauvU9var_CCs(this, alertDialogArr, tL_messages_editMessage))), 500);
    }

    public /* synthetic */ void lambda$null$80$ChatActivity(AlertDialog[] alertDialogArr, TL_messages_editMessage tL_messages_editMessage, TLObject tLObject, TL_error tL_error) {
        AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$65YyGXUsK6q_vz9slChwJ8zPYYE(alertDialogArr));
        if (tL_error == null) {
            getMessagesController().processUpdates((Updates) tLObject, false);
        } else {
            AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$VaGjXVgZKgBArPciYTROqVaNg18(this, tL_error, tL_messages_editMessage));
        }
    }

    static /* synthetic */ void lambda$null$78(AlertDialog[] alertDialogArr) {
        try {
            alertDialogArr[0].dismiss();
        } catch (Throwable unused) {
        }
        alertDialogArr[0] = null;
    }

    public /* synthetic */ void lambda$null$79$ChatActivity(TL_error tL_error, TL_messages_editMessage tL_messages_editMessage) {
        AlertsCreator.processError(this.currentAccount, tL_error, this, tL_messages_editMessage, new Object[0]);
    }

    public /* synthetic */ void lambda$null$82$ChatActivity(AlertDialog[] alertDialogArr, int i) {
        if (alertDialogArr[0] != null) {
            alertDialogArr[0].setOnCancelListener(new -$$Lambda$ChatActivity$OfLK59f8b8emMCfGF8L3gjXhGKU(this, i));
            showDialog(alertDialogArr[0]);
        }
    }

    public /* synthetic */ void lambda$null$81$ChatActivity(int i, DialogInterface dialogInterface) {
        getConnectionsManager().cancelRequest(i, true);
    }

    public void didSelectDialogs(DialogsActivity dialogsActivity, ArrayList<Long> arrayList, CharSequence charSequence, boolean z) {
        ArrayList<Long> arrayList2 = arrayList;
        int i = 0;
        if (this.forwardingMessage != null || this.selectedMessagesIds[0].size() != 0 || this.selectedMessagesIds[1].size() != 0) {
            ArrayList arrayList3 = new ArrayList();
            MessageObject messageObject = this.forwardingMessage;
            if (messageObject != null) {
                GroupedMessages groupedMessages = this.forwardingMessageGroup;
                if (groupedMessages != null) {
                    arrayList3.addAll(groupedMessages.messages);
                } else {
                    arrayList3.add(messageObject);
                }
                this.forwardingMessage = null;
                this.forwardingMessageGroup = null;
            } else {
                for (int i2 = 1; i2 >= 0; i2--) {
                    int i3;
                    ArrayList arrayList4 = new ArrayList();
                    for (i3 = 0; i3 < this.selectedMessagesIds[i2].size(); i3++) {
                        arrayList4.add(Integer.valueOf(this.selectedMessagesIds[i2].keyAt(i3)));
                    }
                    Collections.sort(arrayList4);
                    for (i3 = 0; i3 < arrayList4.size(); i3++) {
                        MessageObject messageObject2 = (MessageObject) this.selectedMessagesIds[i2].get(((Integer) arrayList4.get(i3)).intValue());
                        if (messageObject2 != null) {
                            arrayList3.add(messageObject2);
                        }
                    }
                    this.selectedMessagesCanCopyIds[i2].clear();
                    this.selectedMessagesCanStarIds[i2].clear();
                    this.selectedMessagesIds[i2].clear();
                }
                hideActionMode();
                updatePinnedMessageView(true);
            }
            DialogsActivity dialogsActivity2;
            if (arrayList.size() > 1 || ((Long) arrayList2.get(0)).longValue() == ((long) getUserConfig().getClientUserId()) || charSequence != null) {
                dialogsActivity2 = dialogsActivity;
                while (i < arrayList.size()) {
                    long longValue = ((Long) arrayList2.get(i)).longValue();
                    if (charSequence != null) {
                        getSendMessagesHelper().sendMessage(charSequence.toString(), longValue, null, null, true, null, null, null);
                    }
                    getSendMessagesHelper().sendMessage(arrayList3, longValue);
                    i++;
                }
                dialogsActivity.finishFragment();
            } else {
                long longValue2 = ((Long) arrayList2.get(0)).longValue();
                if (longValue2 != this.dialog_id) {
                    int i4 = (int) longValue2;
                    i = (int) (longValue2 >> 32);
                    Bundle bundle = new Bundle();
                    bundle.putBoolean("scrollToTopOnResume", this.scrollToTopOnResume);
                    if (i4 == 0) {
                        bundle.putInt("enc_id", i);
                    } else if (i4 > 0) {
                        bundle.putInt("user_id", i4);
                    } else if (i4 < 0) {
                        bundle.putInt("chat_id", -i4);
                    }
                    if (i4 == 0) {
                        dialogsActivity2 = dialogsActivity;
                    } else if (!getMessagesController().checkCanOpenChat(bundle, dialogsActivity)) {
                        return;
                    }
                    ChatActivity chatActivity = new ChatActivity(bundle);
                    if (presentFragment(chatActivity, true)) {
                        chatActivity.showFieldPanelForForward(true, arrayList3);
                        if (!AndroidUtilities.isTablet()) {
                            removeSelfFromStack();
                        }
                    } else {
                        dialogsActivity.finishFragment();
                    }
                } else {
                    dialogsActivity2 = dialogsActivity;
                    dialogsActivity.finishFragment();
                    moveScrollToLastMessage();
                    showFieldPanelForForward(true, arrayList3);
                    if (AndroidUtilities.isTablet()) {
                        hideActionMode();
                        updatePinnedMessageView(true);
                    }
                    updateVisibleRows();
                }
            }
        }
    }

    public boolean checkRecordLocked() {
        ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
        if (chatActivityEnterView == null || !chatActivityEnterView.isRecordLocked()) {
            return false;
        }
        AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
        if (this.chatActivityEnterView.isInVideoMode()) {
            builder.setTitle(LocaleController.getString("DiscardVideoMessageTitle", NUM));
            builder.setMessage(LocaleController.getString("DiscardVideoMessageDescription", NUM));
        } else {
            builder.setTitle(LocaleController.getString("DiscardVoiceMessageTitle", NUM));
            builder.setMessage(LocaleController.getString("DiscardVoiceMessageDescription", NUM));
        }
        builder.setPositiveButton(LocaleController.getString("DiscardVoiceMessageAction", NUM), new -$$Lambda$ChatActivity$W0t_ju-lh1R_vSA_DPDMqPdzYrw(this));
        builder.setNegativeButton(LocaleController.getString("Continue", NUM), null);
        showDialog(builder.create());
        return true;
    }

    public /* synthetic */ void lambda$checkRecordLocked$84$ChatActivity(DialogInterface dialogInterface, int i) {
        ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
        if (chatActivityEnterView != null) {
            chatActivityEnterView.cancelRecordingAudioVideo();
        }
    }

    public boolean onBackPressed() {
        ActionBarPopupWindow actionBarPopupWindow = this.scrimPopupWindow;
        if (actionBarPopupWindow != null) {
            actionBarPopupWindow.dismiss();
            return false;
        } else if (checkRecordLocked()) {
            return false;
        } else {
            ActionBar actionBar = this.actionBar;
            if (actionBar == null || !actionBar.isActionModeShowed()) {
                ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
                if (chatActivityEnterView == null || !chatActivityEnterView.isPopupShowing()) {
                    return true;
                }
                this.chatActivityEnterView.hidePopup(true);
                return false;
            }
            for (int i = 1; i >= 0; i--) {
                this.selectedMessagesIds[i].clear();
                this.selectedMessagesCanCopyIds[i].clear();
                this.selectedMessagesCanStarIds[i].clear();
            }
            hideActionMode();
            updatePinnedMessageView(true);
            updateVisibleRows();
            return false;
        }
    }

    /* JADX WARNING: Removed duplicated region for block: B:16:0x0039  */
    /* JADX WARNING: Removed duplicated region for block: B:15:0x0034  */
    /* JADX WARNING: Removed duplicated region for block: B:19:0x003e  */
    /* JADX WARNING: Removed duplicated region for block: B:71:0x012a  */
    private void updateVisibleRows() {
        /*
        r16 = this;
        r0 = r16;
        r1 = r0.chatListView;
        if (r1 != 0) goto L_0x0007;
    L_0x0006:
        return;
    L_0x0007:
        r2 = r0.wasManualScroll;
        r3 = -1;
        if (r2 != 0) goto L_0x0028;
    L_0x000c:
        r2 = r0.unreadMessageObject;
        if (r2 == 0) goto L_0x0028;
    L_0x0010:
        r1 = r1.getMeasuredHeight();
        if (r1 == 0) goto L_0x0028;
    L_0x0016:
        r1 = r0.messages;
        r2 = r0.unreadMessageObject;
        r1 = r1.indexOf(r2);
        if (r1 < 0) goto L_0x0028;
    L_0x0020:
        r2 = r0.chatAdapter;
        r2 = r2.messagesStartRow;
        r1 = r1 + r2;
        goto L_0x0029;
    L_0x0028:
        r1 = -1;
    L_0x0029:
        r2 = r0.chatListView;
        r2 = r2.getChildCount();
        r4 = r0.chatActivityEnterView;
        r5 = 0;
        if (r4 == 0) goto L_0x0039;
    L_0x0034:
        r4 = r4.getEditingMessageObject();
        goto L_0x003a;
    L_0x0039:
        r4 = r5;
    L_0x003a:
        r6 = 0;
        r7 = 0;
    L_0x003c:
        if (r7 >= r2) goto L_0x0123;
    L_0x003e:
        r8 = r0.chatListView;
        r8 = r8.getChildAt(r7);
        r9 = r8 instanceof org.telegram.ui.Cells.ChatMessageCell;
        if (r9 == 0) goto L_0x0111;
    L_0x0048:
        r8 = (org.telegram.ui.Cells.ChatMessageCell) r8;
        r9 = r8.getMessageObject();
        r10 = r0.actionBar;
        r10 = r10.isActionModeShowed();
        r11 = 1;
        if (r10 == 0) goto L_0x0087;
    L_0x0057:
        r8.setCheckBoxVisible(r11, r11);
        r12 = r9.getDialogId();
        r14 = r0.dialog_id;
        r10 = (r12 > r14 ? 1 : (r12 == r14 ? 0 : -1));
        if (r10 != 0) goto L_0x0066;
    L_0x0064:
        r10 = 0;
        goto L_0x0067;
    L_0x0066:
        r10 = 1;
    L_0x0067:
        if (r9 == r4) goto L_0x0080;
    L_0x0069:
        r12 = r0.selectedMessagesIds;
        r12 = r12[r10];
        r13 = r9.getId();
        r12 = r12.indexOfKey(r13);
        if (r12 < 0) goto L_0x0078;
    L_0x0077:
        goto L_0x0080;
    L_0x0078:
        r8.setDrawSelectionBackground(r6);
        r8.setChecked(r6, r6, r11);
        r10 = 0;
        goto L_0x0084;
    L_0x0080:
        r0.setCellSelectionBackground(r9, r8, r10, r11);
        r10 = 1;
    L_0x0084:
        r12 = r10;
        r10 = 1;
        goto L_0x0092;
    L_0x0087:
        r8.setDrawSelectionBackground(r6);
        r8.setCheckBoxVisible(r6, r11);
        r8.setChecked(r6, r6, r11);
        r10 = 0;
        r12 = 0;
    L_0x0092:
        r13 = r8.getMessageObject();
        r14 = r8.getCurrentMessagesGroup();
        r15 = r8.isPinnedBottom();
        r6 = r8.isPinnedTop();
        r8.setMessageObject(r13, r14, r15, r6);
        r6 = r0.scrimView;
        if (r8 == r6) goto L_0x00b5;
    L_0x00a9:
        r6 = r10 ^ 1;
        if (r10 == 0) goto L_0x00b1;
    L_0x00ad:
        if (r12 == 0) goto L_0x00b1;
    L_0x00af:
        r10 = 1;
        goto L_0x00b2;
    L_0x00b1:
        r10 = 0;
    L_0x00b2:
        r8.setCheckPressed(r6, r10);
    L_0x00b5:
        r6 = r0.highlightMessageId;
        r10 = NUM; // 0x7fffffff float:NaN double:1.060997895E-314;
        if (r6 == r10) goto L_0x00c8;
    L_0x00bc:
        if (r9 == 0) goto L_0x00c8;
    L_0x00be:
        r6 = r9.getId();
        r12 = r0.highlightMessageId;
        if (r6 != r12) goto L_0x00c8;
    L_0x00c6:
        r6 = 1;
        goto L_0x00c9;
    L_0x00c8:
        r6 = 0;
    L_0x00c9:
        r8.setHighlighted(r6);
        r6 = r0.highlightMessageId;
        if (r6 == r10) goto L_0x00d3;
    L_0x00d0:
        r16.startMessageUnselect();
    L_0x00d3:
        r6 = r0.searchContainer;
        if (r6 == 0) goto L_0x010d;
    L_0x00d7:
        r6 = r6.getVisibility();
        if (r6 != 0) goto L_0x010d;
    L_0x00dd:
        r6 = r16.getMediaDataController();
        r10 = r9.getId();
        r12 = r9.getDialogId();
        r14 = r0.mergeDialogId;
        r9 = (r12 > r14 ? 1 : (r12 == r14 ? 0 : -1));
        if (r9 != 0) goto L_0x00f0;
    L_0x00ef:
        goto L_0x00f1;
    L_0x00f0:
        r11 = 0;
    L_0x00f1:
        r6 = r6.isMessageFound(r10, r11);
        if (r6 == 0) goto L_0x010d;
    L_0x00f7:
        r6 = r16.getMediaDataController();
        r6 = r6.getLastSearchQuery();
        if (r6 == 0) goto L_0x010d;
    L_0x0101:
        r6 = r16.getMediaDataController();
        r6 = r6.getLastSearchQuery();
        r8.setHighlightedText(r6);
        goto L_0x011e;
    L_0x010d:
        r8.setHighlightedText(r5);
        goto L_0x011e;
    L_0x0111:
        r6 = r8 instanceof org.telegram.ui.Cells.ChatActionCell;
        if (r6 == 0) goto L_0x011e;
    L_0x0115:
        r8 = (org.telegram.ui.Cells.ChatActionCell) r8;
        r6 = r8.getMessageObject();
        r8.setMessageObject(r6);
    L_0x011e:
        r7 = r7 + 1;
        r6 = 0;
        goto L_0x003c;
    L_0x0123:
        r2 = r0.chatListView;
        r2.invalidate();
        if (r1 == r3) goto L_0x014a;
    L_0x012a:
        r2 = r0.chatListView;
        r2 = r2.getMeasuredHeight();
        r3 = r0.chatListView;
        r3 = r3.getPaddingBottom();
        r2 = r2 - r3;
        r3 = r0.chatListView;
        r3 = r3.getPaddingTop();
        r2 = r2 - r3;
        r3 = NUM; // 0x41e80000 float:29.0 double:5.46299942E-315;
        r3 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r2 = r2 - r3;
        r3 = r0.chatLayoutManager;
        r3.scrollToPositionWithOffset(r1, r2);
    L_0x014a:
        return;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.updateVisibleRows():void");
    }

    private void checkEditTimer() {
        ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
        if (chatActivityEnterView != null) {
            MessageObject editingMessageObject = chatActivityEnterView.getEditingMessageObject();
            if (editingMessageObject != null) {
                User user = this.currentUser;
                if (user == null || !user.self) {
                    int abs = editingMessageObject.canEditMessageAnytime(this.currentChat) ? 360 : (getMessagesController().maxEditTime + 300) - Math.abs(getConnectionsManager().getCurrentTime() - editingMessageObject.messageOwner.date);
                    if (abs > 0) {
                        if (abs <= 300) {
                            SimpleTextView simpleTextView = this.replyObjectTextView;
                            Object[] objArr = new Object[1];
                            objArr[0] = String.format("%d:%02d", new Object[]{Integer.valueOf(abs / 60), Integer.valueOf(abs % 60)});
                            simpleTextView.setText(LocaleController.formatString("TimeToEdit", NUM, objArr));
                        }
                        AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$BhRjZmtnKKyPZ5cOcgFDHcn6z6c(this), 1000);
                    } else {
                        this.chatActivityEnterView.onEditTimeExpired();
                        this.replyObjectTextView.setText(LocaleController.formatString("TimeToEditExpired", NUM, new Object[0]));
                    }
                }
            }
        }
    }

    private ArrayList<MessageObject> createVoiceMessagesPlaylist(MessageObject messageObject, boolean z) {
        ArrayList arrayList = new ArrayList();
        arrayList.add(messageObject);
        int id = messageObject.getId();
        messageObject.getDialogId();
        if (id != 0) {
            for (int size = this.messages.size() - 1; size >= 0; size--) {
                MessageObject messageObject2 = (MessageObject) this.messages.get(size);
                if ((messageObject2.getDialogId() != this.mergeDialogId || messageObject.getDialogId() == this.mergeDialogId) && (((this.currentEncryptedChat == null && messageObject2.getId() > id) || (this.currentEncryptedChat != null && messageObject2.getId() < id)) && ((messageObject2.isVoice() || messageObject2.isRoundVideo()) && (!z || (messageObject2.isContentUnread() && !messageObject2.isOut()))))) {
                    arrayList.add(messageObject2);
                }
            }
        }
        return arrayList;
    }

    private void alertUserOpenError(MessageObject messageObject) {
        if (getParentActivity() != null) {
            AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
            builder.setTitle(LocaleController.getString("AppName", NUM));
            builder.setPositiveButton(LocaleController.getString("OK", NUM), null);
            if (messageObject.type == 3) {
                builder.setMessage(LocaleController.getString("NoPlayerInstalled", NUM));
            } else {
                builder.setMessage(LocaleController.formatString("NoHandleAppInstalled", NUM, messageObject.getDocument().mime_type));
            }
            showDialog(builder.create());
        }
    }

    private void openSearchWithText(String str) {
        if (!this.actionBar.isSearchFieldVisible()) {
            this.avatarContainer.setVisibility(8);
            this.headerItem.setVisibility(8);
            this.attachItem.setVisibility(8);
            this.editTextItem.setVisibility(8);
            this.searchItem.setVisibility(0);
            updateSearchButtons(0, 0, -1);
            updateBottomOverlay();
        }
        this.openSearchKeyboard = str == null;
        this.searchItem.openSearch(this.openSearchKeyboard);
        if (str != null) {
            this.searchItem.setSearchFieldText(str, false);
            getMediaDataController().searchMessagesInChat(str, this.dialog_id, this.mergeDialogId, this.classGuid, 0, this.searchingUserMessages);
        }
        updatePinnedMessageView(true);
    }

    public void didSelectLocation(MessageMedia messageMedia, int i) {
        getSendMessagesHelper().sendMessage(messageMedia, this.dialog_id, this.replyingMessageObject, null, null);
        moveScrollToLastMessage();
        if (i == 1) {
            hideFieldPanel(false);
            getMediaDataController().cleanDraft(this.dialog_id, true);
        }
        if (this.paused) {
            this.scrollToTopOnResume = true;
        }
    }

    public boolean isEditingMessageMedia() {
        ChatAttachAlert chatAttachAlert = this.chatAttachAlert;
        return (chatAttachAlert == null || chatAttachAlert.getEditingMessageObject() == null) ? false : true;
    }

    public boolean isSecretChat() {
        return this.currentEncryptedChat != null;
    }

    public User getCurrentUser() {
        return this.currentUser;
    }

    public Chat getCurrentChat() {
        return this.currentChat;
    }

    public boolean allowGroupPhotos() {
        if (!isEditingMessageMedia()) {
            EncryptedChat encryptedChat = this.currentEncryptedChat;
            if (encryptedChat == null || AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) >= 73) {
                return true;
            }
        }
        return false;
    }

    public EncryptedChat getCurrentEncryptedChat() {
        return this.currentEncryptedChat;
    }

    public ChatFull getCurrentChatInfo() {
        return this.chatInfo;
    }

    public UserFull getCurrentUserInfo() {
        return this.userInfo;
    }

    public void sendMedia(PhotoEntry photoEntry, VideoEditedInfo videoEditedInfo) {
        PhotoEntry photoEntry2 = photoEntry;
        VideoEditedInfo videoEditedInfo2 = videoEditedInfo;
        if (photoEntry2 != null) {
            fillEditingMediaWithCaption(photoEntry2.caption, photoEntry2.entities);
            if (photoEntry2.isVideo) {
                if (videoEditedInfo2 != null) {
                    AccountInstance accountInstance = getAccountInstance();
                    String str = photoEntry2.path;
                    long j = videoEditedInfo2.estimatedSize;
                    long j2 = videoEditedInfo2.estimatedDuration;
                    int i = videoEditedInfo2.resultWidth;
                    int i2 = videoEditedInfo2.resultHeight;
                    long j3 = this.dialog_id;
                    MessageObject messageObject = this.replyingMessageObject;
                    CharSequence charSequence = photoEntry2.caption;
                    ArrayList arrayList = photoEntry2.entities;
                    SendMessagesHelper.prepareSendingVideo(accountInstance, str, j, j2, i, i2, videoEditedInfo, j3, messageObject, charSequence, arrayList, photoEntry2.ttl, this.editingMessageObject);
                } else {
                    SendMessagesHelper.prepareSendingVideo(getAccountInstance(), photoEntry2.path, 0, 0, 0, 0, null, this.dialog_id, this.replyingMessageObject, photoEntry2.caption, photoEntry2.entities, photoEntry2.ttl, this.editingMessageObject);
                }
                hideFieldPanel(false);
                getMediaDataController().cleanDraft(this.dialog_id, true);
            } else if (photoEntry2.imagePath != null) {
                SendMessagesHelper.prepareSendingPhoto(getAccountInstance(), photoEntry2.imagePath, null, this.dialog_id, this.replyingMessageObject, photoEntry2.caption, photoEntry2.entities, photoEntry2.stickers, null, photoEntry2.ttl, this.editingMessageObject);
                hideFieldPanel(false);
                getMediaDataController().cleanDraft(this.dialog_id, true);
            } else if (photoEntry2.path != null) {
                SendMessagesHelper.prepareSendingPhoto(getAccountInstance(), photoEntry2.path, null, this.dialog_id, this.replyingMessageObject, photoEntry2.caption, photoEntry2.entities, photoEntry2.stickers, null, photoEntry2.ttl, this.editingMessageObject);
                hideFieldPanel(false);
                getMediaDataController().cleanDraft(this.dialog_id, true);
            }
        }
    }

    /* JADX WARNING: Missing block: B:23:0x00b5, code skipped:
            if (r14 != null) goto L_0x00b9;
     */
    public void showOpenGameAlert(org.telegram.tgnet.TLRPC.TL_game r10, org.telegram.messenger.MessageObject r11, java.lang.String r12, boolean r13, int r14) {
        /*
        r9 = this;
        r0 = r9.getMessagesController();
        r1 = java.lang.Integer.valueOf(r14);
        r0 = r0.getUser(r1);
        r1 = 1;
        r2 = "";
        if (r13 == 0) goto L_0x006d;
    L_0x0011:
        r13 = new org.telegram.ui.ActionBar.AlertDialog$Builder;
        r3 = r9.getParentActivity();
        r13.<init>(r3);
        r3 = NUM; // 0x7f0d00f1 float:1.8742604E38 double:1.0531298966E-314;
        r4 = "AppName";
        r3 = org.telegram.messenger.LocaleController.getString(r4, r3);
        r13.setTitle(r3);
        if (r0 == 0) goto L_0x0030;
    L_0x0028:
        r2 = r0.first_name;
        r0 = r0.last_name;
        r2 = org.telegram.messenger.ContactsController.formatName(r2, r0);
    L_0x0030:
        r0 = NUM; // 0x7f0d01d2 float:1.874306E38 double:1.053130008E-314;
        r1 = new java.lang.Object[r1];
        r3 = 0;
        r1[r3] = r2;
        r2 = "BotPermissionGameAlert";
        r0 = org.telegram.messenger.LocaleController.formatString(r2, r0, r1);
        r13.setMessage(r0);
        r0 = NUM; // 0x7f0d06ee float:1.8745713E38 double:1.053130654E-314;
        r1 = "OK";
        r0 = org.telegram.messenger.LocaleController.getString(r1, r0);
        r7 = new org.telegram.ui.-$$Lambda$ChatActivity$j3p4cSxcgswHs6XMpffWohhkQ0I;
        r1 = r7;
        r2 = r9;
        r3 = r10;
        r4 = r11;
        r5 = r12;
        r6 = r14;
        r1.<init>(r2, r3, r4, r5, r6);
        r13.setPositiveButton(r0, r7);
        r10 = NUM; // 0x7f0d01f9 float:1.874314E38 double:1.053130027E-314;
        r11 = "Cancel";
        r10 = org.telegram.messenger.LocaleController.getString(r11, r10);
        r11 = 0;
        r13.setNegativeButton(r10, r11);
        r10 = r13.create();
        r9.showDialog(r10);
        goto L_0x00bc;
    L_0x006d:
        r13 = android.os.Build.VERSION.SDK_INT;
        r14 = 21;
        if (r13 < r14) goto L_0x00ab;
    L_0x0073:
        r13 = org.telegram.messenger.AndroidUtilities.isTablet();
        if (r13 != 0) goto L_0x00ab;
    L_0x0079:
        r13 = org.telegram.ui.WebviewActivity.supportWebview();
        if (r13 == 0) goto L_0x00ab;
    L_0x007f:
        r13 = r9.parentLayout;
        r13 = r13.fragmentsStack;
        r14 = r13.size();
        r14 = r14 - r1;
        r13 = r13.get(r14);
        if (r13 != r9) goto L_0x00bc;
    L_0x008e:
        r13 = new org.telegram.ui.WebviewActivity;
        if (r0 == 0) goto L_0x009c;
    L_0x0092:
        r14 = r0.username;
        r14 = android.text.TextUtils.isEmpty(r14);
        if (r14 != 0) goto L_0x009c;
    L_0x009a:
        r2 = r0.username;
    L_0x009c:
        r5 = r2;
        r6 = r10.title;
        r7 = r10.short_name;
        r3 = r13;
        r4 = r12;
        r8 = r11;
        r3.<init>(r4, r5, r6, r7, r8);
        r9.presentFragment(r13);
        goto L_0x00bc;
    L_0x00ab:
        r13 = r9.getParentActivity();
        r10 = r10.short_name;
        if (r0 == 0) goto L_0x00b8;
    L_0x00b3:
        r14 = r0.username;
        if (r14 == 0) goto L_0x00b8;
    L_0x00b7:
        goto L_0x00b9;
    L_0x00b8:
        r14 = r2;
    L_0x00b9:
        org.telegram.ui.WebviewActivity.openGameInBrowser(r12, r11, r13, r10, r14);
    L_0x00bc:
        return;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.showOpenGameAlert(org.telegram.tgnet.TLRPC$TL_game, org.telegram.messenger.MessageObject, java.lang.String, boolean, int):void");
    }

    public /* synthetic */ void lambda$showOpenGameAlert$85$ChatActivity(TL_game tL_game, MessageObject messageObject, String str, int i, DialogInterface dialogInterface, int i2) {
        showOpenGameAlert(tL_game, messageObject, str, false, i);
        Editor edit = MessagesController.getNotificationsSettings(this.currentAccount).edit();
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("askgame_");
        stringBuilder.append(i);
        edit.putBoolean(stringBuilder.toString(), false).commit();
    }

    public void showOpenUrlAlert(String str, boolean z) {
        boolean z2 = true;
        if (Browser.isInternalUrl(str, null) || !z) {
            Context parentActivity = getParentActivity();
            if (this.inlineReturn != 0) {
                z2 = false;
            }
            Browser.openUrl(parentActivity, str, z2);
        } else if (getParentActivity() != null) {
            AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
            builder.setTitle(LocaleController.getString("OpenUrlTitle", NUM));
            String string = LocaleController.getString("OpenUrlAlert2", NUM);
            int indexOf = string.indexOf("%");
            SpannableStringBuilder spannableStringBuilder = new SpannableStringBuilder(String.format(string, new Object[]{str}));
            if (indexOf >= 0) {
                spannableStringBuilder.setSpan(new URLSpan(str), indexOf, str.length() + indexOf, 33);
            }
            builder.setMessage(spannableStringBuilder);
            builder.setMessageTextViewClickable(false);
            builder.setPositiveButton(LocaleController.getString("Open", NUM), new -$$Lambda$ChatActivity$_GnR3rZGvtP_HZG7sOzUIxU1VbM(this, str));
            builder.setNegativeButton(LocaleController.getString("Cancel", NUM), null);
            showDialog(builder.create());
        }
    }

    public /* synthetic */ void lambda$showOpenUrlAlert$86$ChatActivity(String str, DialogInterface dialogInterface, int i) {
        Browser.openUrl(getParentActivity(), str, this.inlineReturn == 0);
    }

    public void showRequestUrlAlert(TL_urlAuthResultRequest tL_urlAuthResultRequest, TL_messages_requestUrlAuth tL_messages_requestUrlAuth, String str) {
        TL_urlAuthResultRequest tL_urlAuthResultRequest2 = tL_urlAuthResultRequest;
        String str2 = str;
        if (getParentActivity() != null) {
            AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
            builder.setTitle(LocaleController.getString("OpenUrlTitle", NUM));
            String string = LocaleController.getString("OpenUrlAlert2", NUM);
            int indexOf = string.indexOf("%");
            SpannableStringBuilder spannableStringBuilder = new SpannableStringBuilder(String.format(string, new Object[]{str2}));
            if (indexOf >= 0) {
                spannableStringBuilder.setSpan(new URLSpan(str2), indexOf, str.length() + indexOf, 33);
            }
            builder.setMessage(spannableStringBuilder);
            builder.setMessageTextViewClickable(false);
            builder.setNegativeButton(LocaleController.getString("Cancel", NUM), null);
            CheckBoxCell[] checkBoxCellArr = new CheckBoxCell[2];
            LinearLayout linearLayout = new LinearLayout(getParentActivity());
            linearLayout.setOrientation(1);
            User currentUser = getUserConfig().getCurrentUser();
            int i = 0;
            while (true) {
                if (i < (tL_urlAuthResultRequest2.request_write_access ? 2 : 1)) {
                    checkBoxCellArr[i] = new CheckBoxCell(getParentActivity(), 1);
                    checkBoxCellArr[i].setBackgroundDrawable(Theme.getSelectorDrawable(false));
                    checkBoxCellArr[i].setMultiline(true);
                    checkBoxCellArr[i].setTag(Integer.valueOf(i));
                    String str3 = "";
                    if (i == 0) {
                        SpannableStringBuilder replaceTags = AndroidUtilities.replaceTags(LocaleController.formatString("OpenUrlOption1", NUM, tL_urlAuthResultRequest2.domain, ContactsController.formatName(currentUser.first_name, currentUser.last_name)));
                        int indexOf2 = TextUtils.indexOf(replaceTags, tL_urlAuthResultRequest2.domain);
                        if (indexOf2 >= 0) {
                            replaceTags.setSpan(new URLSpan(str3), indexOf2, tL_urlAuthResultRequest2.domain.length() + indexOf2, 33);
                        }
                        checkBoxCellArr[i].setText(replaceTags, str3, true, false);
                    } else if (i == 1) {
                        checkBoxCellArr[i].setText(AndroidUtilities.replaceTags(LocaleController.formatString("OpenUrlOption2", NUM, UserObject.getFirstName(tL_urlAuthResultRequest2.bot))), str3, true, false);
                    }
                    checkBoxCellArr[i].setPadding(LocaleController.isRTL ? AndroidUtilities.dp(16.0f) : AndroidUtilities.dp(8.0f), 0, LocaleController.isRTL ? AndroidUtilities.dp(8.0f) : AndroidUtilities.dp(16.0f), 0);
                    linearLayout.addView(checkBoxCellArr[i], LayoutHelper.createLinear(-1, -2));
                    checkBoxCellArr[i].setOnClickListener(new -$$Lambda$ChatActivity$qf7XbhPpVSoKulGah3Ob9epRMmQ(checkBoxCellArr));
                    i++;
                } else {
                    builder.setCustomViewOffset(12);
                    builder.setView(linearLayout);
                    builder.setPositiveButton(LocaleController.getString("Open", NUM), new -$$Lambda$ChatActivity$S-24XC8PR7jcdcIf6vQvar_conw4(this, checkBoxCellArr, str, tL_messages_requestUrlAuth, tL_urlAuthResultRequest));
                    showDialog(builder.create());
                    return;
                }
            }
        }
    }

    static /* synthetic */ void lambda$showRequestUrlAlert$87(CheckBoxCell[] checkBoxCellArr, View view) {
        if (view.isEnabled()) {
            Integer num = (Integer) view.getTag();
            checkBoxCellArr[num.intValue()].setChecked(checkBoxCellArr[num.intValue()].isChecked() ^ 1, true);
            if (num.intValue() == 0 && checkBoxCellArr[1] != null) {
                if (checkBoxCellArr[num.intValue()].isChecked()) {
                    checkBoxCellArr[1].setEnabled(true);
                } else {
                    checkBoxCellArr[1].setChecked(false, true);
                    checkBoxCellArr[1].setEnabled(false);
                }
            }
        }
    }

    public /* synthetic */ void lambda$showRequestUrlAlert$92$ChatActivity(CheckBoxCell[] checkBoxCellArr, String str, TL_messages_requestUrlAuth tL_messages_requestUrlAuth, TL_urlAuthResultRequest tL_urlAuthResultRequest, DialogInterface dialogInterface, int i) {
        if (checkBoxCellArr[0].isChecked()) {
            AlertDialog[] alertDialogArr = new AlertDialog[]{new AlertDialog(getParentActivity(), 3)};
            TL_messages_acceptUrlAuth tL_messages_acceptUrlAuth = new TL_messages_acceptUrlAuth();
            tL_messages_acceptUrlAuth.button_id = tL_messages_requestUrlAuth.button_id;
            tL_messages_acceptUrlAuth.msg_id = tL_messages_requestUrlAuth.msg_id;
            tL_messages_acceptUrlAuth.peer = tL_messages_requestUrlAuth.peer;
            if (tL_urlAuthResultRequest.request_write_access) {
                tL_messages_acceptUrlAuth.write_allowed = checkBoxCellArr[1].isChecked();
            }
            try {
                alertDialogArr[0].dismiss();
            } catch (Throwable unused) {
            }
            alertDialogArr[0] = null;
            AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$Bd7cF0kBwO4DEYCaqn_xrxKgfDU(this, alertDialogArr, getConnectionsManager().sendRequest(tL_messages_acceptUrlAuth, new -$$Lambda$ChatActivity$Hg2nVndH0f2yGRJql3t0EnPE2G8(this, str))), 500);
            return;
        }
        Browser.openUrl(getParentActivity(), str, false);
    }

    public /* synthetic */ void lambda$null$89$ChatActivity(String str, TLObject tLObject, TL_error tL_error) {
        AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$J_i47qHI68p_g3-GRc2SkcnbZR8(this, tLObject, str));
    }

    public /* synthetic */ void lambda$null$88$ChatActivity(TLObject tLObject, String str) {
        if (tLObject instanceof TL_urlAuthResultAccepted) {
            Browser.openUrl(getParentActivity(), ((TL_urlAuthResultAccepted) tLObject).url, false);
        } else if (tLObject instanceof TL_urlAuthResultDefault) {
            Browser.openUrl(getParentActivity(), str, false);
        }
    }

    public /* synthetic */ void lambda$null$91$ChatActivity(AlertDialog[] alertDialogArr, int i) {
        if (alertDialogArr[0] != null) {
            alertDialogArr[0].setOnCancelListener(new -$$Lambda$ChatActivity$y3m_6bBSosLjCZIJRuT5gZ-_atc(this, i));
            showDialog(alertDialogArr[0]);
        }
    }

    public /* synthetic */ void lambda$null$90$ChatActivity(int i, DialogInterface dialogInterface) {
        getConnectionsManager().cancelRequest(i, true);
    }

    private void removeMessageObject(MessageObject messageObject) {
        int indexOf = this.messages.indexOf(messageObject);
        if (indexOf != -1) {
            this.messages.remove(indexOf);
            ChatActivityAdapter chatActivityAdapter = this.chatAdapter;
            if (chatActivityAdapter != null) {
                chatActivityAdapter.notifyItemRemoved(chatActivityAdapter.messagesStartRow + indexOf);
            }
        }
    }

    public void openVCard(String str, String str2, String str3) {
        try {
            File file = new File(FileLoader.getDirectory(4), "sharing/");
            file.mkdirs();
            File file2 = new File(file, "vcard.vcf");
            BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(file2));
            bufferedWriter.write(str);
            bufferedWriter.close();
            presentFragment(new PhonebookShareActivity(null, null, file2, ContactsController.formatName(str2, str3)));
        } catch (Exception e) {
            FileLog.e(e);
        }
    }

    private void setCellSelectionBackground(MessageObject messageObject, ChatMessageCell chatMessageCell, int i, boolean z) {
        GroupedMessages validGroupedMessage = getValidGroupedMessage(messageObject);
        boolean z2 = false;
        if (validGroupedMessage != null) {
            Object obj;
            for (int i2 = 0; i2 < validGroupedMessage.messages.size(); i2++) {
                if (this.selectedMessagesIds[i].indexOfKey(((MessageObject) validGroupedMessage.messages.get(i2)).getId()) < 0) {
                    obj = 1;
                    break;
                }
            }
            obj = null;
            if (obj == null) {
                validGroupedMessage = null;
            }
        }
        chatMessageCell.setDrawSelectionBackground(validGroupedMessage == null);
        if (validGroupedMessage == null) {
            z2 = true;
        }
        chatMessageCell.setChecked(true, z2, z);
    }

    private void updateMessageListAccessibilityVisibility() {
        if (this.currentEncryptedChat == null && VERSION.SDK_INT >= 19) {
            int i;
            RecyclerListView recyclerListView = this.chatListView;
            if (this.mentionContainer.getVisibility() != 0) {
                ActionBarPopupWindow actionBarPopupWindow = this.scrimPopupWindow;
                if (actionBarPopupWindow == null || !actionBarPopupWindow.isShowing()) {
                    i = 0;
                    recyclerListView.setImportantForAccessibility(i);
                }
            }
            i = 4;
            recyclerListView.setImportantForAccessibility(i);
        }
    }

    public ThemeDescription[] getThemeDescriptions() {
        View subtitleTextView;
        -$$Lambda$ChatActivity$bxn2T3MUo3ExItMpqkbTacQIMRg -__lambda_chatactivity_bxn2t3muo3exitmpqkbtacqimrg = new -$$Lambda$ChatActivity$bxn2T3MUo3ExItMpqkbTacQIMRg(this);
        ThemeDescription[] themeDescriptionArr = new ThemeDescription[393];
        themeDescriptionArr[0] = new ThemeDescription(this.fragmentView, 0, null, null, null, null, "chat_wallpaper");
        themeDescriptionArr[1] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_BACKGROUND, null, null, null, null, "actionBarDefault");
        themeDescriptionArr[2] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_LISTGLOWCOLOR, null, null, null, null, "actionBarDefault");
        themeDescriptionArr[3] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_ITEMSCOLOR, null, null, null, null, "actionBarDefaultIcon");
        themeDescriptionArr[4] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_SELECTORCOLOR, null, null, null, null, "actionBarDefaultSelector");
        themeDescriptionArr[5] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_SUBMENUBACKGROUND, null, null, null, null, "actionBarDefaultSubmenuBackground");
        themeDescriptionArr[6] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_SUBMENUITEM, null, null, null, null, "actionBarDefaultSubmenuItem");
        themeDescriptionArr[7] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_SUBMENUITEM | ThemeDescription.FLAG_IMAGECOLOR, null, null, null, null, "actionBarDefaultSubmenuItemIcon");
        themeDescriptionArr[8] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_BACKGROUND, null, null, null, null, "actionBarDefault");
        themeDescriptionArr[9] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_LISTGLOWCOLOR, null, null, null, null, "actionBarDefault");
        themeDescriptionArr[10] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_ITEMSCOLOR, null, null, null, null, "actionBarDefaultIcon");
        ChatAvatarContainer chatAvatarContainer = this.avatarContainer;
        View view = null;
        themeDescriptionArr[11] = new ThemeDescription(chatAvatarContainer != null ? chatAvatarContainer.getTitleTextView() : null, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "actionBarDefaultTitle");
        chatAvatarContainer = this.avatarContainer;
        themeDescriptionArr[12] = new ThemeDescription(chatAvatarContainer != null ? chatAvatarContainer.getTitleTextView() : null, ThemeDescription.FLAG_IMAGECOLOR, null, null, null, null, "actionBarDefaultSubtitle");
        ChatAvatarContainer chatAvatarContainer2 = this.avatarContainer;
        themeDescriptionArr[13] = new ThemeDescription(chatAvatarContainer2 != null ? chatAvatarContainer2.getSubtitleTextView() : null, ThemeDescription.FLAG_TEXTCOLOR | ThemeDescription.FLAG_CHECKTAG, null, new Paint[]{Theme.chat_statusPaint, Theme.chat_statusRecordPaint}, null, null, "chat_status", null);
        chatAvatarContainer2 = this.avatarContainer;
        if (chatAvatarContainer2 != null) {
            subtitleTextView = chatAvatarContainer2.getSubtitleTextView();
        } else {
            subtitleTextView = null;
        }
        themeDescriptionArr[14] = new ThemeDescription(subtitleTextView, ThemeDescription.FLAG_TEXTCOLOR | ThemeDescription.FLAG_CHECKTAG, null, null, null, null, "actionBarDefaultSubtitle", null);
        themeDescriptionArr[15] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_SELECTORCOLOR, null, null, null, null, "actionBarDefaultSelector");
        themeDescriptionArr[16] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_SEARCH, null, null, null, null, "actionBarDefaultSearch");
        themeDescriptionArr[17] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_SEARCHPLACEHOLDER, null, null, null, null, "actionBarDefaultSearchPlaceholder");
        themeDescriptionArr[18] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_AM_ITEMSCOLOR, null, null, null, null, "actionBarActionModeDefaultIcon");
        themeDescriptionArr[19] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_AM_BACKGROUND, null, null, null, null, "actionBarActionModeDefault");
        themeDescriptionArr[20] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_AM_TOPBACKGROUND, null, null, null, null, "actionBarActionModeDefaultTop");
        themeDescriptionArr[21] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_AM_SELECTORCOLOR, null, null, null, null, "actionBarActionModeDefaultSelector");
        themeDescriptionArr[22] = new ThemeDescription(this.selectedMessagesCountTextView, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "actionBarActionModeDefaultIcon");
        chatAvatarContainer2 = this.avatarContainer;
        themeDescriptionArr[23] = new ThemeDescription(chatAvatarContainer2 != null ? chatAvatarContainer2.getTitleTextView() : null, 0, null, null, new Drawable[]{Theme.chat_muteIconDrawable}, null, "chat_muteIcon");
        chatAvatarContainer2 = this.avatarContainer;
        if (chatAvatarContainer2 != null) {
            subtitleTextView = chatAvatarContainer2.getTitleTextView();
        } else {
            subtitleTextView = null;
        }
        themeDescriptionArr[24] = new ThemeDescription(subtitleTextView, 0, null, null, new Drawable[]{Theme.chat_lockIconDrawable}, null, "chat_lockIcon");
        themeDescriptionArr[25] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.avatar_broadcastDrawable, Theme.avatar_savedDrawable}, null, "avatar_text");
        themeDescriptionArr[26] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "avatar_backgroundRed");
        themeDescriptionArr[27] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "avatar_backgroundOrange");
        themeDescriptionArr[28] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "avatar_backgroundViolet");
        themeDescriptionArr[29] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "avatar_backgroundGreen");
        themeDescriptionArr[30] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "avatar_backgroundCyan");
        themeDescriptionArr[31] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "avatar_backgroundBlue");
        themeDescriptionArr[32] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "avatar_backgroundPink");
        themeDescriptionArr[33] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "avatar_nameInMessageRed");
        themeDescriptionArr[34] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "avatar_nameInMessageOrange");
        themeDescriptionArr[35] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "avatar_nameInMessageViolet");
        themeDescriptionArr[36] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "avatar_nameInMessageGreen");
        themeDescriptionArr[37] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "avatar_nameInMessageCyan");
        themeDescriptionArr[38] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "avatar_nameInMessageBlue");
        themeDescriptionArr[39] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "avatar_nameInMessagePink");
        themeDescriptionArr[40] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class, BotHelpCell.class}, null, new Drawable[]{Theme.chat_msgInDrawable, Theme.chat_msgInMediaDrawable}, null, "chat_inBubble");
        themeDescriptionArr[41] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgInSelectedDrawable, Theme.chat_msgInMediaSelectedDrawable}, null, "chat_inBubbleSelected");
        themeDescriptionArr[42] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class, BotHelpCell.class}, null, new Drawable[]{Theme.chat_msgInShadowDrawable, Theme.chat_msgInMediaShadowDrawable}, null, "chat_inBubbleShadow");
        themeDescriptionArr[43] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgOutDrawable, Theme.chat_msgOutMediaDrawable}, null, "chat_outBubble");
        themeDescriptionArr[44] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgOutSelectedDrawable, Theme.chat_msgOutMediaSelectedDrawable}, null, "chat_outBubbleSelected");
        themeDescriptionArr[45] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgOutShadowDrawable, Theme.chat_msgOutMediaShadowDrawable}, null, "chat_outBubbleShadow");
        themeDescriptionArr[46] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{ChatActionCell.class}, Theme.chat_actionTextPaint, null, null, "chat_serviceText");
        themeDescriptionArr[47] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_LINKCOLOR, new Class[]{ChatActionCell.class}, Theme.chat_actionTextPaint, null, null, "chat_serviceLink");
        themeDescriptionArr[48] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_shareIconDrawable, Theme.chat_replyIconDrawable, Theme.chat_botInlineDrawable, Theme.chat_botLinkDrawalbe, Theme.chat_goIconDrawable}, null, "chat_serviceIcon");
        themeDescriptionArr[49] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class, ChatActionCell.class}, null, null, null, "chat_serviceBackground");
        themeDescriptionArr[50] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class, ChatActionCell.class}, null, null, null, "chat_serviceBackgroundSelected");
        themeDescriptionArr[51] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class, BotHelpCell.class}, null, null, null, "chat_messageTextIn");
        themeDescriptionArr[52] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_messageTextOut");
        themeDescriptionArr[53] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_LINKCOLOR, new Class[]{ChatMessageCell.class, BotHelpCell.class}, null, null, null, "chat_messageLinkIn", null);
        themeDescriptionArr[54] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_LINKCOLOR, new Class[]{ChatMessageCell.class}, null, null, null, "chat_messageLinkOut", null);
        themeDescriptionArr[55] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgNoSoundDrawable}, null, "chat_mediaTimeText");
        themeDescriptionArr[56] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgOutCheckDrawable, Theme.chat_msgOutHalfCheckDrawable}, null, "chat_outSentCheck");
        themeDescriptionArr[57] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgOutCheckSelectedDrawable, Theme.chat_msgOutHalfCheckSelectedDrawable}, null, "chat_outSentCheckSelected");
        themeDescriptionArr[58] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgOutClockDrawable}, null, "chat_outSentClock");
        themeDescriptionArr[59] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgOutSelectedClockDrawable}, null, "chat_outSentClockSelected");
        themeDescriptionArr[60] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgInClockDrawable}, null, "chat_inSentClock");
        themeDescriptionArr[61] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgInSelectedClockDrawable}, null, "chat_inSentClockSelected");
        themeDescriptionArr[62] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgMediaCheckDrawable, Theme.chat_msgMediaHalfCheckDrawable}, null, "chat_mediaSentCheck");
        themeDescriptionArr[63] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgStickerHalfCheckDrawable, Theme.chat_msgStickerCheckDrawable, Theme.chat_msgStickerClockDrawable, Theme.chat_msgStickerViewsDrawable}, null, "chat_serviceText");
        themeDescriptionArr[64] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgMediaClockDrawable}, null, "chat_mediaSentClock");
        themeDescriptionArr[65] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgOutViewsDrawable}, null, "chat_outViews");
        themeDescriptionArr[66] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgOutViewsSelectedDrawable}, null, "chat_outViewsSelected");
        themeDescriptionArr[67] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgInViewsDrawable}, null, "chat_inViews");
        themeDescriptionArr[68] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgInViewsSelectedDrawable}, null, "chat_inViewsSelected");
        themeDescriptionArr[69] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgMediaViewsDrawable}, null, "chat_mediaViews");
        themeDescriptionArr[70] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgOutMenuDrawable}, null, "chat_outMenu");
        themeDescriptionArr[71] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgOutMenuSelectedDrawable}, null, "chat_outMenuSelected");
        themeDescriptionArr[72] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgInMenuDrawable}, null, "chat_inMenu");
        themeDescriptionArr[73] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgInMenuSelectedDrawable}, null, "chat_inMenuSelected");
        themeDescriptionArr[74] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgMediaMenuDrawable}, null, "chat_mediaMenu");
        themeDescriptionArr[75] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgOutInstantDrawable, Theme.chat_msgOutCallDrawable}, null, "chat_outInstant");
        themeDescriptionArr[76] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgOutCallSelectedDrawable}, null, "chat_outInstantSelected");
        themeDescriptionArr[77] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgInInstantDrawable, Theme.chat_msgInCallDrawable}, null, "chat_inInstant");
        themeDescriptionArr[78] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgInCallSelectedDrawable}, null, "chat_inInstantSelected");
        themeDescriptionArr[79] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgCallUpGreenDrawable}, null, "chat_outUpCall");
        themeDescriptionArr[80] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgCallDownRedDrawable}, null, "chat_inUpCall");
        themeDescriptionArr[81] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgCallDownGreenDrawable}, null, "chat_inDownCall");
        themeDescriptionArr[82] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_msgErrorPaint, null, null, "chat_sentError");
        themeDescriptionArr[83] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgErrorDrawable}, null, "chat_sentErrorIcon");
        themeDescriptionArr[84] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, -__lambda_chatactivity_bxn2t3muo3exitmpqkbtacqimrg, "chat_selectedBackground");
        themeDescriptionArr[85] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_durationPaint, null, null, "chat_previewDurationText");
        themeDescriptionArr[86] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_gamePaint, null, null, "chat_previewGameText");
        themeDescriptionArr[87] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inPreviewInstantText");
        themeDescriptionArr[88] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outPreviewInstantText");
        themeDescriptionArr[89] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inPreviewInstantSelectedText");
        themeDescriptionArr[90] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outPreviewInstantSelectedText");
        themeDescriptionArr[91] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_deleteProgressPaint, null, null, "chat_secretTimeText");
        themeDescriptionArr[92] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_stickerNameText");
        themeDescriptionArr[93] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_botButtonPaint, null, null, "chat_botButtonText");
        themeDescriptionArr[94] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_botProgressPaint, null, null, "chat_botProgress");
        themeDescriptionArr[95] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_timeBackgroundPaint, null, null, "chat_mediaTimeBackground");
        themeDescriptionArr[96] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inForwardedNameText");
        themeDescriptionArr[97] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outForwardedNameText");
        themeDescriptionArr[98] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inViaBotNameText");
        themeDescriptionArr[99] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outViaBotNameText");
        themeDescriptionArr[100] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_stickerViaBotNameText");
        themeDescriptionArr[101] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inReplyLine");
        themeDescriptionArr[102] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outReplyLine");
        themeDescriptionArr[103] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_stickerReplyLine");
        themeDescriptionArr[104] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inReplyNameText");
        themeDescriptionArr[105] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outReplyNameText");
        themeDescriptionArr[106] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_stickerReplyNameText");
        themeDescriptionArr[107] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inReplyMessageText");
        themeDescriptionArr[108] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outReplyMessageText");
        themeDescriptionArr[109] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inReplyMediaMessageText");
        themeDescriptionArr[110] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outReplyMediaMessageText");
        themeDescriptionArr[111] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inReplyMediaMessageSelectedText");
        themeDescriptionArr[112] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outReplyMediaMessageSelectedText");
        themeDescriptionArr[113] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_stickerReplyMessageText");
        themeDescriptionArr[114] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inPreviewLine");
        themeDescriptionArr[115] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outPreviewLine");
        themeDescriptionArr[116] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inSiteNameText");
        themeDescriptionArr[117] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outSiteNameText");
        themeDescriptionArr[118] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inContactNameText");
        themeDescriptionArr[119] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outContactNameText");
        themeDescriptionArr[120] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inContactPhoneText");
        themeDescriptionArr[121] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inContactPhoneSelectedText");
        themeDescriptionArr[122] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outContactPhoneText");
        themeDescriptionArr[123] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outContactPhoneSelectedText");
        themeDescriptionArr[124] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_mediaProgress");
        themeDescriptionArr[125] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inAudioProgress");
        themeDescriptionArr[126] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outAudioProgress");
        themeDescriptionArr[127] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inAudioSelectedProgress");
        themeDescriptionArr[128] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outAudioSelectedProgress");
        themeDescriptionArr[129] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_mediaTimeText");
        themeDescriptionArr[130] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inTimeText");
        themeDescriptionArr[131] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outTimeText");
        themeDescriptionArr[132] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inTimeSelectedText");
        themeDescriptionArr[133] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_adminText");
        themeDescriptionArr[134] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_adminSelectedText");
        themeDescriptionArr[135] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outTimeSelectedText");
        themeDescriptionArr[136] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inAudioPerfomerText");
        themeDescriptionArr[137] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inAudioPerfomerSelectedText");
        themeDescriptionArr[138] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outAudioPerfomerText");
        themeDescriptionArr[139] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outAudioPerfomerSelectedText");
        themeDescriptionArr[140] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inAudioTitleText");
        themeDescriptionArr[141] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outAudioTitleText");
        themeDescriptionArr[142] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inAudioDurationText");
        themeDescriptionArr[143] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outAudioDurationText");
        themeDescriptionArr[144] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inAudioDurationSelectedText");
        themeDescriptionArr[145] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outAudioDurationSelectedText");
        themeDescriptionArr[146] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inAudioSeekbar");
        themeDescriptionArr[147] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outAudioSeekbar");
        themeDescriptionArr[148] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inAudioSeekbarSelected");
        themeDescriptionArr[149] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outAudioSeekbarSelected");
        themeDescriptionArr[150] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inAudioSeekbarFill");
        themeDescriptionArr[151] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inAudioCacheSeekbar");
        themeDescriptionArr[152] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outAudioSeekbarFill");
        themeDescriptionArr[153] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outAudioCacheSeekbar");
        themeDescriptionArr[154] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inVoiceSeekbar");
        themeDescriptionArr[155] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outVoiceSeekbar");
        themeDescriptionArr[156] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inVoiceSeekbarSelected");
        themeDescriptionArr[157] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outVoiceSeekbarSelected");
        themeDescriptionArr[158] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inVoiceSeekbarFill");
        themeDescriptionArr[159] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outVoiceSeekbarFill");
        themeDescriptionArr[160] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inFileProgress");
        themeDescriptionArr[161] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outFileProgress");
        themeDescriptionArr[162] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inFileProgressSelected");
        themeDescriptionArr[163] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outFileProgressSelected");
        themeDescriptionArr[164] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inFileNameText");
        themeDescriptionArr[165] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outFileNameText");
        themeDescriptionArr[166] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inFileInfoText");
        themeDescriptionArr[167] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outFileInfoText");
        themeDescriptionArr[168] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inFileInfoSelectedText");
        themeDescriptionArr[169] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outFileInfoSelectedText");
        themeDescriptionArr[170] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inFileBackground");
        themeDescriptionArr[171] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outFileBackground");
        themeDescriptionArr[172] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inFileBackgroundSelected");
        themeDescriptionArr[173] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outFileBackgroundSelected");
        themeDescriptionArr[174] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inVenueInfoText");
        themeDescriptionArr[175] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outVenueInfoText");
        themeDescriptionArr[176] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inVenueInfoSelectedText");
        themeDescriptionArr[177] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outVenueInfoSelectedText");
        themeDescriptionArr[178] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_mediaInfoText");
        themeDescriptionArr[179] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_urlPaint, null, null, "chat_linkSelectBackground");
        themeDescriptionArr[180] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_textSearchSelectionPaint, null, null, "chat_textSelectBackground");
        themeDescriptionArr[181] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outLoader");
        themeDescriptionArr[182] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outMediaIcon");
        themeDescriptionArr[183] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outLoaderSelected");
        themeDescriptionArr[184] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outMediaIconSelected");
        themeDescriptionArr[185] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inLoader");
        themeDescriptionArr[186] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inMediaIcon");
        themeDescriptionArr[187] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inLoaderSelected");
        themeDescriptionArr[188] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inMediaIconSelected");
        View view2 = this.chatListView;
        int i = ThemeDescription.FLAG_BACKGROUNDFILTER;
        Class[] clsArr = new Class[]{ChatMessageCell.class};
        r5 = new Drawable[4];
        Drawable[][] drawableArr = Theme.chat_photoStatesDrawables;
        r5[0] = drawableArr[0][0];
        r5[1] = drawableArr[1][0];
        r5[2] = drawableArr[2][0];
        r5[3] = drawableArr[3][0];
        themeDescriptionArr[189] = new ThemeDescription(view2, i, clsArr, null, r5, null, "chat_mediaLoaderPhoto");
        view2 = this.chatListView;
        clsArr = new Class[]{ChatMessageCell.class};
        r5 = new Drawable[4];
        drawableArr = Theme.chat_photoStatesDrawables;
        r5[0] = drawableArr[0][0];
        r5[1] = drawableArr[1][0];
        r5[2] = drawableArr[2][0];
        r5[3] = drawableArr[3][0];
        themeDescriptionArr[190] = new ThemeDescription(view2, 0, clsArr, null, r5, null, "chat_mediaLoaderPhotoIcon");
        view2 = this.chatListView;
        i = ThemeDescription.FLAG_BACKGROUNDFILTER;
        clsArr = new Class[]{ChatMessageCell.class};
        r5 = new Drawable[4];
        drawableArr = Theme.chat_photoStatesDrawables;
        r5[0] = drawableArr[0][1];
        r5[1] = drawableArr[1][1];
        r5[2] = drawableArr[2][1];
        r5[3] = drawableArr[3][1];
        themeDescriptionArr[191] = new ThemeDescription(view2, i, clsArr, null, r5, null, "chat_mediaLoaderPhotoSelected");
        view2 = this.chatListView;
        clsArr = new Class[]{ChatMessageCell.class};
        r5 = new Drawable[4];
        drawableArr = Theme.chat_photoStatesDrawables;
        r5[0] = drawableArr[0][1];
        r5[1] = drawableArr[1][1];
        r5[2] = drawableArr[2][1];
        r5[3] = drawableArr[3][1];
        themeDescriptionArr[192] = new ThemeDescription(view2, 0, clsArr, null, r5, null, "chat_mediaLoaderPhotoIconSelected");
        view2 = this.chatListView;
        i = ThemeDescription.FLAG_BACKGROUNDFILTER;
        clsArr = new Class[]{ChatMessageCell.class};
        r5 = new Drawable[2];
        drawableArr = Theme.chat_photoStatesDrawables;
        r5[0] = drawableArr[7][0];
        r5[1] = drawableArr[8][0];
        themeDescriptionArr[193] = new ThemeDescription(view2, i, clsArr, null, r5, null, "chat_outLoaderPhoto");
        view2 = this.chatListView;
        clsArr = new Class[]{ChatMessageCell.class};
        r5 = new Drawable[2];
        drawableArr = Theme.chat_photoStatesDrawables;
        r5[0] = drawableArr[7][0];
        r5[1] = drawableArr[8][0];
        themeDescriptionArr[194] = new ThemeDescription(view2, 0, clsArr, null, r5, null, "chat_outLoaderPhotoIcon");
        view2 = this.chatListView;
        i = ThemeDescription.FLAG_BACKGROUNDFILTER;
        clsArr = new Class[]{ChatMessageCell.class};
        r5 = new Drawable[2];
        drawableArr = Theme.chat_photoStatesDrawables;
        r5[0] = drawableArr[7][1];
        r5[1] = drawableArr[8][1];
        themeDescriptionArr[195] = new ThemeDescription(view2, i, clsArr, null, r5, null, "chat_outLoaderPhotoSelected");
        view2 = this.chatListView;
        clsArr = new Class[]{ChatMessageCell.class};
        r5 = new Drawable[2];
        drawableArr = Theme.chat_photoStatesDrawables;
        r5[0] = drawableArr[7][1];
        r5[1] = drawableArr[8][1];
        themeDescriptionArr[196] = new ThemeDescription(view2, 0, clsArr, null, r5, null, "chat_outLoaderPhotoIconSelected");
        view2 = this.chatListView;
        i = ThemeDescription.FLAG_BACKGROUNDFILTER;
        clsArr = new Class[]{ChatMessageCell.class};
        r5 = new Drawable[2];
        drawableArr = Theme.chat_photoStatesDrawables;
        r5[0] = drawableArr[10][0];
        r5[1] = drawableArr[11][0];
        themeDescriptionArr[197] = new ThemeDescription(view2, i, clsArr, null, r5, null, "chat_inLoaderPhoto");
        view2 = this.chatListView;
        clsArr = new Class[]{ChatMessageCell.class};
        r5 = new Drawable[2];
        drawableArr = Theme.chat_photoStatesDrawables;
        r5[0] = drawableArr[10][0];
        r5[1] = drawableArr[11][0];
        themeDescriptionArr[198] = new ThemeDescription(view2, 0, clsArr, null, r5, null, "chat_inLoaderPhotoIcon");
        view2 = this.chatListView;
        i = ThemeDescription.FLAG_BACKGROUNDFILTER;
        clsArr = new Class[]{ChatMessageCell.class};
        r5 = new Drawable[2];
        drawableArr = Theme.chat_photoStatesDrawables;
        r5[0] = drawableArr[10][1];
        r5[1] = drawableArr[11][1];
        themeDescriptionArr[199] = new ThemeDescription(view2, i, clsArr, null, r5, null, "chat_inLoaderPhotoSelected");
        view2 = this.chatListView;
        clsArr = new Class[]{ChatMessageCell.class};
        r5 = new Drawable[2];
        drawableArr = Theme.chat_photoStatesDrawables;
        r5[0] = drawableArr[10][1];
        r5[1] = drawableArr[11][1];
        themeDescriptionArr[200] = new ThemeDescription(view2, 0, clsArr, null, r5, null, "chat_inLoaderPhotoIconSelected");
        themeDescriptionArr[201] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_photoStatesDrawables[9][0]}, null, "chat_outFileIcon");
        themeDescriptionArr[202] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_photoStatesDrawables[9][1]}, null, "chat_outFileSelectedIcon");
        themeDescriptionArr[203] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_photoStatesDrawables[12][0]}, null, "chat_inFileIcon");
        themeDescriptionArr[204] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_photoStatesDrawables[12][1]}, null, "chat_inFileSelectedIcon");
        themeDescriptionArr[205] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_contactDrawable[0]}, null, "chat_inContactBackground");
        themeDescriptionArr[206] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_contactDrawable[0]}, null, "chat_inContactIcon");
        themeDescriptionArr[207] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_contactDrawable[1]}, null, "chat_outContactBackground");
        themeDescriptionArr[208] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_contactDrawable[1]}, null, "chat_outContactIcon");
        themeDescriptionArr[209] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_locationDrawable[0]}, null, "chat_inLocationBackground");
        themeDescriptionArr[210] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_locationDrawable[0]}, null, "chat_inLocationIcon");
        themeDescriptionArr[211] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_locationDrawable[1]}, null, "chat_outLocationBackground");
        themeDescriptionArr[212] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_locationDrawable[1]}, null, "chat_outLocationIcon");
        themeDescriptionArr[213] = new ThemeDescription(this.mentionContainer, 0, null, Theme.chat_composeBackgroundPaint, null, null, "chat_messagePanelBackground");
        themeDescriptionArr[214] = new ThemeDescription(this.mentionContainer, 0, null, null, new Drawable[]{Theme.chat_composeShadowDrawable}, null, "chat_messagePanelShadow");
        themeDescriptionArr[215] = new ThemeDescription(this.searchContainer, 0, null, Theme.chat_composeBackgroundPaint, null, null, "chat_messagePanelBackground");
        themeDescriptionArr[216] = new ThemeDescription(this.searchContainer, 0, null, null, new Drawable[]{Theme.chat_composeShadowDrawable}, null, "chat_messagePanelShadow");
        themeDescriptionArr[217] = new ThemeDescription(this.bottomOverlay, 0, null, Theme.chat_composeBackgroundPaint, null, null, "chat_messagePanelBackground");
        themeDescriptionArr[218] = new ThemeDescription(this.bottomOverlay, 0, null, null, new Drawable[]{Theme.chat_composeShadowDrawable}, null, "chat_messagePanelShadow");
        themeDescriptionArr[219] = new ThemeDescription(this.bottomOverlayChat, 0, null, Theme.chat_composeBackgroundPaint, null, null, "chat_messagePanelBackground");
        themeDescriptionArr[220] = new ThemeDescription(this.bottomOverlayChat, 0, null, null, new Drawable[]{Theme.chat_composeShadowDrawable}, null, "chat_messagePanelShadow");
        themeDescriptionArr[221] = new ThemeDescription(this.bottomMessagesActionContainer, 0, null, Theme.chat_composeBackgroundPaint, null, null, "chat_messagePanelBackground");
        themeDescriptionArr[222] = new ThemeDescription(this.bottomMessagesActionContainer, 0, null, null, new Drawable[]{Theme.chat_composeShadowDrawable}, null, "chat_messagePanelShadow");
        themeDescriptionArr[223] = new ThemeDescription(this.chatActivityEnterView, 0, null, Theme.chat_composeBackgroundPaint, null, null, "chat_messagePanelBackground");
        themeDescriptionArr[224] = new ThemeDescription(this.chatActivityEnterView, 0, null, null, new Drawable[]{Theme.chat_composeShadowDrawable}, null, "chat_messagePanelShadow");
        themeDescriptionArr[225] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_BACKGROUND, new Class[]{ChatActivityEnterView.class}, new String[]{"audioVideoButtonContainer"}, null, null, null, "chat_messagePanelBackground");
        themeDescriptionArr[226] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"messageEditText"}, null, null, null, "chat_messagePanelText");
        themeDescriptionArr[227] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"recordSendText"}, null, null, null, "chat_fieldOverlayText");
        themeDescriptionArr[228] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_HINTTEXTCOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"messageEditText"}, null, null, null, "chat_messagePanelHint");
        view2 = this.chatActivityEnterView;
        int i2 = ThemeDescription.FLAG_IMAGECOLOR;
        clsArr = new Class[]{ChatActivityEnterView.class};
        String[] strArr = new String[1];
        strArr[0] = "sendButton";
        themeDescriptionArr[229] = new ThemeDescription(view2, i2, clsArr, strArr, null, null, null, "chat_messagePanelSend");
        themeDescriptionArr[230] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"sendButton"}, null, null, null, "chat_messagePanelPressedSend");
        themeDescriptionArr[231] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatActivityEnterView.class}, new String[]{"sendButton"}, null, null, 24, null, "chat_messagePanelSend");
        themeDescriptionArr[232] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"emojiButton"}, null, null, null, "chat_messagePanelIcons");
        themeDescriptionArr[233] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"botButton"}, null, null, null, "chat_messagePanelIcons");
        themeDescriptionArr[234] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"notifyButton"}, null, null, null, "chat_messagePanelIcons");
        themeDescriptionArr[235] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"attachButton"}, null, null, null, "chat_messagePanelIcons");
        themeDescriptionArr[236] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"audioSendButton"}, null, null, null, "chat_messagePanelIcons");
        themeDescriptionArr[237] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"videoSendButton"}, null, null, null, "chat_messagePanelIcons");
        themeDescriptionArr[238] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_IMAGECOLOR | ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatActivityEnterView.class}, new String[]{"doneButtonImage"}, null, null, null, "chat_messagePanelSend");
        themeDescriptionArr[239] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"doneButtonImage"}, null, null, null, "chat_messagePanelBackground");
        themeDescriptionArr[240] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_BACKGROUND, new Class[]{ChatActivityEnterView.class}, new String[]{"recordedAudioPanel"}, null, null, null, "chat_messagePanelBackground");
        themeDescriptionArr[241] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"micDrawable"}, null, null, null, "chat_messagePanelVoicePressed");
        themeDescriptionArr[242] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"cameraDrawable"}, null, null, null, "chat_messagePanelVoicePressed");
        themeDescriptionArr[243] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"sendDrawable"}, null, null, null, "chat_messagePanelVoicePressed");
        themeDescriptionArr[244] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"lockDrawable"}, null, null, null, "key_chat_messagePanelVoiceLock");
        themeDescriptionArr[245] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"lockTopDrawable"}, null, null, null, "key_chat_messagePanelVoiceLock");
        themeDescriptionArr[246] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"lockArrowDrawable"}, null, null, null, "key_chat_messagePanelVoiceLock");
        themeDescriptionArr[247] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"lockBackgroundDrawable"}, null, null, null, "key_chat_messagePanelVoiceLockBackground");
        themeDescriptionArr[248] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"lockShadowDrawable"}, null, null, null, "key_chat_messagePanelVoiceLockShadow");
        themeDescriptionArr[249] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"recordDeleteImageView"}, null, null, null, "chat_messagePanelVoiceDelete");
        themeDescriptionArr[250] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatActivityEnterView.class}, new String[]{"recordedAudioBackground"}, null, null, null, "chat_recordedVoiceBackground");
        themeDescriptionArr[251] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"recordTimeText"}, null, null, null, "chat_recordTime");
        themeDescriptionArr[252] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_BACKGROUND, new Class[]{ChatActivityEnterView.class}, new String[]{"recordTimeContainer"}, null, null, null, "chat_messagePanelBackground");
        themeDescriptionArr[253] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"recordCancelText"}, null, null, null, "chat_recordVoiceCancel");
        themeDescriptionArr[254] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_BACKGROUND, new Class[]{ChatActivityEnterView.class}, new String[]{"recordPanel"}, null, null, null, "chat_messagePanelBackground");
        themeDescriptionArr[255] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"recordedAudioTimeTextView"}, null, null, null, "chat_messagePanelVoiceDuration");
        themeDescriptionArr[256] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"recordCancelImage"}, null, null, null, "chat_recordVoiceCancel");
        themeDescriptionArr[257] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"doneButtonProgress"}, null, null, null, "contextProgressInner1");
        themeDescriptionArr[258] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"doneButtonProgress"}, null, null, null, "contextProgressOuter1");
        themeDescriptionArr[259] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"cancelBotButton"}, null, null, null, "chat_messagePanelCancelInlineBot");
        themeDescriptionArr[260] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"redDotPaint"}, null, null, null, "chat_recordedVoiceDot");
        themeDescriptionArr[261] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"paint"}, null, null, null, "chat_messagePanelVoiceBackground");
        themeDescriptionArr[262] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"paintRecord"}, null, null, null, "chat_messagePanelVoiceShadow");
        themeDescriptionArr[263] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"seekBarWaveform"}, null, null, null, "chat_recordedVoiceProgress");
        themeDescriptionArr[264] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"seekBarWaveform"}, null, null, null, "chat_recordedVoiceProgressInner");
        themeDescriptionArr[265] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"playDrawable"}, null, null, null, "chat_recordedVoicePlayPause");
        themeDescriptionArr[266] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"pauseDrawable"}, null, null, null, "chat_recordedVoicePlayPause");
        themeDescriptionArr[267] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_DRAWABLESELECTEDSTATE, new Class[]{ChatActivityEnterView.class}, new String[]{"playDrawable"}, null, null, null, "chat_recordedVoicePlayPausePressed");
        themeDescriptionArr[268] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_DRAWABLESELECTEDSTATE, new Class[]{ChatActivityEnterView.class}, new String[]{"pauseDrawable"}, null, null, null, "chat_recordedVoicePlayPausePressed");
        themeDescriptionArr[269] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"dotPaint"}, null, null, null, "chat_emojiPanelNewTrending");
        View view3 = this.chatActivityEnterView;
        if (view3 != null) {
            view3 = view3.getEmojiView();
        }
        themeDescriptionArr[270] = new ThemeDescription(view3, 0, new Class[]{EmojiView.class}, null, null, null, (ThemeDescriptionDelegate) -__lambda_chatactivity_bxn2t3muo3exitmpqkbtacqimrg, "chat_emojiPanelBackground");
        view3 = this.chatActivityEnterView;
        if (view3 != null) {
            view3 = view3.getEmojiView();
        }
        themeDescriptionArr[271] = new ThemeDescription(view3, 0, new Class[]{EmojiView.class}, null, null, null, (ThemeDescriptionDelegate) -__lambda_chatactivity_bxn2t3muo3exitmpqkbtacqimrg, "chat_emojiPanelShadowLine");
        view3 = this.chatActivityEnterView;
        if (view3 != null) {
            view3 = view3.getEmojiView();
        }
        themeDescriptionArr[272] = new ThemeDescription(view3, 0, new Class[]{EmojiView.class}, null, null, null, (ThemeDescriptionDelegate) -__lambda_chatactivity_bxn2t3muo3exitmpqkbtacqimrg, "chat_emojiPanelEmptyText");
        view3 = this.chatActivityEnterView;
        if (view3 != null) {
            view3 = view3.getEmojiView();
        }
        themeDescriptionArr[273] = new ThemeDescription(view3, 0, new Class[]{EmojiView.class}, null, null, null, (ThemeDescriptionDelegate) -__lambda_chatactivity_bxn2t3muo3exitmpqkbtacqimrg, "chat_emojiPanelIcon");
        view3 = this.chatActivityEnterView;
        if (view3 != null) {
            view3 = view3.getEmojiView();
        }
        themeDescriptionArr[274] = new ThemeDescription(view3, 0, new Class[]{EmojiView.class}, null, null, null, (ThemeDescriptionDelegate) -__lambda_chatactivity_bxn2t3muo3exitmpqkbtacqimrg, "chat_emojiPanelIconSelected");
        view3 = this.chatActivityEnterView;
        if (view3 != null) {
            view3 = view3.getEmojiView();
        }
        themeDescriptionArr[275] = new ThemeDescription(view3, 0, new Class[]{EmojiView.class}, null, null, null, (ThemeDescriptionDelegate) -__lambda_chatactivity_bxn2t3muo3exitmpqkbtacqimrg, "chat_emojiPanelStickerPackSelector");
        view3 = this.chatActivityEnterView;
        if (view3 != null) {
            view3 = view3.getEmojiView();
        }
        themeDescriptionArr[276] = new ThemeDescription(view3, 0, new Class[]{EmojiView.class}, null, null, null, (ThemeDescriptionDelegate) -__lambda_chatactivity_bxn2t3muo3exitmpqkbtacqimrg, "chat_emojiPanelBackspace");
        view3 = this.chatActivityEnterView;
        if (view3 != null) {
            view3 = view3.getEmojiView();
        }
        themeDescriptionArr[277] = new ThemeDescription(view3, 0, new Class[]{EmojiView.class}, null, null, null, (ThemeDescriptionDelegate) -__lambda_chatactivity_bxn2t3muo3exitmpqkbtacqimrg, "chat_emojiPanelTrendingTitle");
        view3 = this.chatActivityEnterView;
        if (view3 != null) {
            view3 = view3.getEmojiView();
        }
        themeDescriptionArr[278] = new ThemeDescription(view3, 0, new Class[]{EmojiView.class}, null, null, null, (ThemeDescriptionDelegate) -__lambda_chatactivity_bxn2t3muo3exitmpqkbtacqimrg, "chat_emojiPanelTrendingDescription");
        view3 = this.chatActivityEnterView;
        if (view3 != null) {
            view3 = view3.getEmojiView();
        }
        themeDescriptionArr[279] = new ThemeDescription(view3, 0, new Class[]{EmojiView.class}, null, null, null, (ThemeDescriptionDelegate) -__lambda_chatactivity_bxn2t3muo3exitmpqkbtacqimrg, "chat_emojiPanelBadgeText");
        view3 = this.chatActivityEnterView;
        if (view3 != null) {
            view3 = view3.getEmojiView();
        }
        themeDescriptionArr[280] = new ThemeDescription(view3, 0, new Class[]{EmojiView.class}, null, null, null, (ThemeDescriptionDelegate) -__lambda_chatactivity_bxn2t3muo3exitmpqkbtacqimrg, "chat_emojiPanelBadgeBackground");
        view3 = this.chatActivityEnterView;
        if (view3 != null) {
            view3 = view3.getEmojiView();
        }
        themeDescriptionArr[281] = new ThemeDescription(view3, 0, new Class[]{EmojiView.class}, null, null, null, (ThemeDescriptionDelegate) -__lambda_chatactivity_bxn2t3muo3exitmpqkbtacqimrg, "chat_emojiBottomPanelIcon");
        view3 = this.chatActivityEnterView;
        if (view3 != null) {
            view3 = view3.getEmojiView();
        }
        themeDescriptionArr[282] = new ThemeDescription(view3, 0, new Class[]{EmojiView.class}, null, null, null, (ThemeDescriptionDelegate) -__lambda_chatactivity_bxn2t3muo3exitmpqkbtacqimrg, "chat_emojiSearchIcon");
        view3 = this.chatActivityEnterView;
        if (view3 != null) {
            view3 = view3.getEmojiView();
        }
        themeDescriptionArr[283] = new ThemeDescription(view3, 0, new Class[]{EmojiView.class}, null, null, null, (ThemeDescriptionDelegate) -__lambda_chatactivity_bxn2t3muo3exitmpqkbtacqimrg, "chat_emojiPanelStickerSetNameHighlight");
        view3 = this.chatActivityEnterView;
        if (view3 != null) {
            view3 = view3.getEmojiView();
        }
        themeDescriptionArr[284] = new ThemeDescription(view3, 0, new Class[]{EmojiView.class}, null, null, null, (ThemeDescriptionDelegate) -__lambda_chatactivity_bxn2t3muo3exitmpqkbtacqimrg, "chat_emojiPanelStickerPackSelectorLine");
        themeDescriptionArr[285] = new ThemeDescription(this.undoView, ThemeDescription.FLAG_BACKGROUND, null, null, null, null, "undo_background");
        themeDescriptionArr[286] = new ThemeDescription(this.undoView, 0, new Class[]{UndoView.class}, new String[]{"undoImageView"}, null, null, null, "undo_cancelColor");
        themeDescriptionArr[287] = new ThemeDescription(this.undoView, 0, new Class[]{UndoView.class}, new String[]{"undoTextView"}, null, null, null, "undo_cancelColor");
        themeDescriptionArr[288] = new ThemeDescription(this.undoView, 0, new Class[]{UndoView.class}, new String[]{"infoTextView"}, null, null, null, "undo_infoColor");
        themeDescriptionArr[289] = new ThemeDescription(this.undoView, 0, new Class[]{UndoView.class}, new String[]{"textPaint"}, null, null, null, "undo_infoColor");
        themeDescriptionArr[290] = new ThemeDescription(this.undoView, 0, new Class[]{UndoView.class}, new String[]{"progressPaint"}, null, null, null, "undo_infoColor");
        themeDescriptionArr[291] = new ThemeDescription(this.undoView, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{UndoView.class}, new String[]{"leftImageView"}, null, null, null, "undo_infoColor");
        themeDescriptionArr[292] = new ThemeDescription(null, 0, null, null, null, null, "chat_botKeyboardButtonText");
        themeDescriptionArr[293] = new ThemeDescription(null, 0, null, null, null, null, "chat_botKeyboardButtonBackground");
        themeDescriptionArr[294] = new ThemeDescription(null, 0, null, null, null, null, "chat_botKeyboardButtonBackgroundPressed");
        themeDescriptionArr[295] = new ThemeDescription(this.fragmentView, ThemeDescription.FLAG_BACKGROUND | ThemeDescription.FLAG_CHECKTAG, new Class[]{FragmentContextView.class}, new String[]{"frameLayout"}, null, null, null, "inappPlayerBackground");
        themeDescriptionArr[296] = new ThemeDescription(this.fragmentView, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{FragmentContextView.class}, new String[]{"playButton"}, null, null, null, "inappPlayerPlayPause");
        themeDescriptionArr[297] = new ThemeDescription(this.fragmentView, ThemeDescription.FLAG_TEXTCOLOR | ThemeDescription.FLAG_CHECKTAG, new Class[]{FragmentContextView.class}, new String[]{"titleTextView"}, null, null, null, "inappPlayerTitle");
        themeDescriptionArr[298] = new ThemeDescription(this.fragmentView, ThemeDescription.FLAG_TEXTCOLOR | ThemeDescription.FLAG_FASTSCROLL, new Class[]{FragmentContextView.class}, new String[]{"titleTextView"}, null, null, null, "inappPlayerPerformer");
        themeDescriptionArr[299] = new ThemeDescription(this.fragmentView, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{FragmentContextView.class}, new String[]{"closeButton"}, null, null, null, "inappPlayerClose");
        themeDescriptionArr[300] = new ThemeDescription(this.fragmentView, ThemeDescription.FLAG_BACKGROUND | ThemeDescription.FLAG_CHECKTAG, new Class[]{FragmentContextView.class}, new String[]{"frameLayout"}, null, null, null, "returnToCallBackground");
        themeDescriptionArr[301] = new ThemeDescription(this.fragmentView, ThemeDescription.FLAG_TEXTCOLOR | ThemeDescription.FLAG_CHECKTAG, new Class[]{FragmentContextView.class}, new String[]{"titleTextView"}, null, null, null, "returnToCallText");
        themeDescriptionArr[302] = new ThemeDescription(this.pinnedLineView, ThemeDescription.FLAG_BACKGROUND, null, null, null, null, "chat_topPanelLine");
        themeDescriptionArr[303] = new ThemeDescription(this.pinnedMessageNameTextView, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_topPanelTitle");
        themeDescriptionArr[304] = new ThemeDescription(this.pinnedMessageTextView, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_topPanelMessage");
        themeDescriptionArr[305] = new ThemeDescription(this.alertNameTextView, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_topPanelTitle");
        themeDescriptionArr[306] = new ThemeDescription(this.alertTextView, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_topPanelMessage");
        themeDescriptionArr[307] = new ThemeDescription(this.closePinned, ThemeDescription.FLAG_IMAGECOLOR, null, null, null, null, "chat_topPanelClose");
        themeDescriptionArr[308] = new ThemeDescription(this.closeReportSpam, ThemeDescription.FLAG_IMAGECOLOR, null, null, null, null, "chat_topPanelClose");
        themeDescriptionArr[309] = new ThemeDescription(this.topChatPanelView, ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, null, null, "chat_topPanelBackground");
        themeDescriptionArr[310] = new ThemeDescription(this.alertView, ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, null, null, "chat_topPanelBackground");
        themeDescriptionArr[311] = new ThemeDescription(this.pinnedMessageView, ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, null, null, "chat_topPanelBackground");
        themeDescriptionArr[312] = new ThemeDescription(this.addToContactsButton, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_addContact");
        themeDescriptionArr[313] = new ThemeDescription(this.reportSpamButton, ThemeDescription.FLAG_CHECKTAG | ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_reportSpam");
        themeDescriptionArr[314] = new ThemeDescription(this.reportSpamButton, ThemeDescription.FLAG_CHECKTAG | ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_addContact");
        themeDescriptionArr[315] = new ThemeDescription(this.replyLineView, ThemeDescription.FLAG_BACKGROUND, null, null, null, null, "chat_replyPanelLine");
        themeDescriptionArr[316] = new ThemeDescription(this.replyNameTextView, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_replyPanelName");
        themeDescriptionArr[317] = new ThemeDescription(this.replyObjectTextView, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_replyPanelMessage");
        themeDescriptionArr[318] = new ThemeDescription(this.replyIconImageView, ThemeDescription.FLAG_IMAGECOLOR, null, null, null, null, "chat_replyPanelIcons");
        themeDescriptionArr[319] = new ThemeDescription(this.replyCloseImageView, ThemeDescription.FLAG_IMAGECOLOR, null, null, null, null, "chat_replyPanelClose");
        themeDescriptionArr[320] = new ThemeDescription(this.searchUpButton, ThemeDescription.FLAG_IMAGECOLOR, null, null, null, null, "chat_searchPanelIcons");
        themeDescriptionArr[321] = new ThemeDescription(this.searchDownButton, ThemeDescription.FLAG_IMAGECOLOR, null, null, null, null, "chat_searchPanelIcons");
        themeDescriptionArr[322] = new ThemeDescription(this.searchCalendarButton, ThemeDescription.FLAG_IMAGECOLOR, null, null, null, null, "chat_searchPanelIcons");
        themeDescriptionArr[323] = new ThemeDescription(this.searchUserButton, ThemeDescription.FLAG_IMAGECOLOR, null, null, null, null, "chat_searchPanelIcons");
        themeDescriptionArr[324] = new ThemeDescription(this.searchCountText, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_searchPanelText");
        themeDescriptionArr[325] = new ThemeDescription(this.bottomOverlayText, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_secretChatStatusText");
        themeDescriptionArr[326] = new ThemeDescription(this.bottomOverlayChatText, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_fieldOverlayText");
        themeDescriptionArr[327] = new ThemeDescription(this.bottomOverlayChatText2, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_fieldOverlayText");
        themeDescriptionArr[328] = new ThemeDescription(this.bottomOverlayProgress, 0, null, null, null, null, "chat_fieldOverlayText");
        themeDescriptionArr[329] = new ThemeDescription(this.bigEmptyView, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_serviceText");
        themeDescriptionArr[330] = new ThemeDescription(this.emptyView, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_serviceText");
        themeDescriptionArr[331] = new ThemeDescription(this.progressBar, ThemeDescription.FLAG_PROGRESSBAR, null, null, null, null, "chat_serviceText");
        themeDescriptionArr[332] = new ThemeDescription(this.stickersPanelArrow, ThemeDescription.FLAG_IMAGECOLOR, null, null, null, null, "chat_stickersHintPanel");
        themeDescriptionArr[333] = new ThemeDescription(this.stickersListView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{StickerCell.class}, null, null, null, "chat_stickersHintPanel");
        themeDescriptionArr[334] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_USEBACKGROUNDDRAWABLE, new Class[]{ChatUnreadCell.class}, new String[]{"backgroundLayout"}, null, null, null, "chat_unreadMessagesStartBackground");
        themeDescriptionArr[335] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{ChatUnreadCell.class}, new String[]{"imageView"}, null, null, null, "chat_unreadMessagesStartArrowIcon");
        view2 = this.chatListView;
        i = ThemeDescription.FLAG_TEXTCOLOR;
        clsArr = new Class[]{ChatUnreadCell.class};
        strArr = new String[1];
        strArr[0] = "textView";
        themeDescriptionArr[336] = new ThemeDescription(view2, i, clsArr, strArr, null, null, null, "chat_unreadMessagesStartText");
        themeDescriptionArr[337] = new ThemeDescription(this.progressView2, ThemeDescription.FLAG_SERVICEBACKGROUND, null, null, null, null, "chat_serviceBackground");
        themeDescriptionArr[338] = new ThemeDescription(this.emptyView, ThemeDescription.FLAG_SERVICEBACKGROUND, null, null, null, null, "chat_serviceBackground");
        themeDescriptionArr[339] = new ThemeDescription(this.bigEmptyView, ThemeDescription.FLAG_SERVICEBACKGROUND, null, null, null, null, "chat_serviceBackground");
        themeDescriptionArr[340] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_SERVICEBACKGROUND, new Class[]{ChatLoadingCell.class}, new String[]{"textView"}, null, null, null, "chat_serviceBackground");
        themeDescriptionArr[341] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_PROGRESSBAR, new Class[]{ChatLoadingCell.class}, new String[]{"textView"}, null, null, null, "chat_serviceText");
        themeDescriptionArr[342] = new ThemeDescription(this.mentionListView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{BotSwitchCell.class}, new String[]{"textView"}, null, null, null, "chat_botSwitchToInlineText");
        themeDescriptionArr[343] = new ThemeDescription(this.mentionListView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{MentionCell.class}, new String[]{"nameTextView"}, null, null, null, "windowBackgroundWhiteBlackText");
        themeDescriptionArr[344] = new ThemeDescription(this.mentionListView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{MentionCell.class}, new String[]{"usernameTextView"}, null, null, null, "windowBackgroundWhiteGrayText3");
        themeDescriptionArr[345] = new ThemeDescription(this.mentionListView, 0, new Class[]{ContextLinkCell.class}, null, new Drawable[]{Theme.chat_inlineResultFile, Theme.chat_inlineResultAudio, Theme.chat_inlineResultLocation}, null, "chat_inlineResultIcon");
        themeDescriptionArr[346] = new ThemeDescription(this.mentionListView, 0, new Class[]{ContextLinkCell.class}, null, null, null, "windowBackgroundWhiteGrayText2");
        themeDescriptionArr[347] = new ThemeDescription(this.mentionListView, 0, new Class[]{ContextLinkCell.class}, null, null, null, "windowBackgroundWhiteLinkText");
        themeDescriptionArr[348] = new ThemeDescription(this.mentionListView, 0, new Class[]{ContextLinkCell.class}, null, null, null, "windowBackgroundWhiteBlackText");
        themeDescriptionArr[349] = new ThemeDescription(this.mentionListView, 0, new Class[]{ContextLinkCell.class}, null, null, null, "chat_inAudioProgress");
        themeDescriptionArr[350] = new ThemeDescription(this.mentionListView, 0, new Class[]{ContextLinkCell.class}, null, null, null, "chat_inAudioSelectedProgress");
        themeDescriptionArr[351] = new ThemeDescription(this.mentionListView, 0, new Class[]{ContextLinkCell.class}, null, null, null, "divider");
        themeDescriptionArr[352] = new ThemeDescription(this.gifHintTextView, ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, null, null, "chat_gifSaveHintBackground");
        themeDescriptionArr[353] = new ThemeDescription(this.gifHintTextView, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_gifSaveHintText");
        -$$Lambda$ChatActivity$bxn2T3MUo3ExItMpqkbTacQIMRg -__lambda_chatactivity_bxn2t3muo3exitmpqkbtacqimrg2 = -__lambda_chatactivity_bxn2t3muo3exitmpqkbtacqimrg;
        themeDescriptionArr[354] = new ThemeDescription(null, 0, null, null, null, -__lambda_chatactivity_bxn2t3muo3exitmpqkbtacqimrg2, "chat_attachMediaBanBackground");
        themeDescriptionArr[355] = new ThemeDescription(null, 0, null, null, null, -__lambda_chatactivity_bxn2t3muo3exitmpqkbtacqimrg2, "chat_attachMediaBanText");
        themeDescriptionArr[356] = new ThemeDescription(this.noSoundHintView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{HintView.class}, new String[]{"textView"}, null, null, null, "chat_gifSaveHintText");
        themeDescriptionArr[357] = new ThemeDescription(this.noSoundHintView, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{HintView.class}, new String[]{"imageView"}, null, null, null, "chat_gifSaveHintText");
        themeDescriptionArr[358] = new ThemeDescription(this.noSoundHintView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{HintView.class}, new String[]{"arrowImageView"}, null, null, null, "chat_gifSaveHintBackground");
        themeDescriptionArr[359] = new ThemeDescription(this.forwardHintView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{HintView.class}, new String[]{"textView"}, null, null, null, "chat_gifSaveHintText");
        themeDescriptionArr[360] = new ThemeDescription(this.forwardHintView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{HintView.class}, new String[]{"arrowImageView"}, null, null, null, "chat_gifSaveHintBackground");
        themeDescriptionArr[361] = new ThemeDescription(this.pagedownButtonCounter, ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, null, null, "chat_goDownButtonCounterBackground");
        themeDescriptionArr[362] = new ThemeDescription(this.pagedownButtonCounter, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_goDownButtonCounter");
        themeDescriptionArr[363] = new ThemeDescription(this.pagedownButtonImage, ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, null, null, "chat_goDownButton");
        themeDescriptionArr[364] = new ThemeDescription(this.pagedownButtonImage, ThemeDescription.FLAG_DRAWABLESELECTEDSTATE | ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, null, null, "chat_goDownButtonShadow");
        themeDescriptionArr[365] = new ThemeDescription(this.pagedownButtonImage, ThemeDescription.FLAG_IMAGECOLOR, null, null, null, null, "chat_goDownButtonIcon");
        themeDescriptionArr[366] = new ThemeDescription(this.mentiondownButtonCounter, ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, null, null, "chat_goDownButtonCounterBackground");
        themeDescriptionArr[367] = new ThemeDescription(this.mentiondownButtonCounter, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_goDownButtonCounter");
        themeDescriptionArr[368] = new ThemeDescription(this.mentiondownButtonImage, ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, null, null, "chat_goDownButton");
        themeDescriptionArr[369] = new ThemeDescription(this.mentiondownButtonImage, ThemeDescription.FLAG_DRAWABLESELECTEDSTATE | ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, null, null, "chat_goDownButtonShadow");
        themeDescriptionArr[370] = new ThemeDescription(this.mentiondownButtonImage, ThemeDescription.FLAG_IMAGECOLOR, null, null, null, null, "chat_goDownButtonIcon");
        chatAvatarContainer = this.avatarContainer;
        themeDescriptionArr[371] = new ThemeDescription(chatAvatarContainer != null ? chatAvatarContainer.getTimeItem() : null, 0, null, null, null, null, "chat_secretTimerBackground");
        chatAvatarContainer = this.avatarContainer;
        if (chatAvatarContainer != null) {
            view = chatAvatarContainer.getTimeItem();
        }
        themeDescriptionArr[372] = new ThemeDescription(view, 0, null, null, null, null, "chat_secretTimerText");
        themeDescriptionArr[373] = new ThemeDescription(null, ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, new Drawable[]{Theme.chat_attachButtonDrawables[0]}, null, "chat_attachGalleryBackground");
        themeDescriptionArr[374] = new ThemeDescription(null, 0, null, null, new Drawable[]{Theme.chat_attachButtonDrawables[0]}, null, "chat_attachGalleryIcon");
        themeDescriptionArr[375] = new ThemeDescription(null, ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, new Drawable[]{Theme.chat_attachButtonDrawables[1]}, null, "chat_attachAudioBackground");
        themeDescriptionArr[376] = new ThemeDescription(null, 0, null, null, new Drawable[]{Theme.chat_attachButtonDrawables[1]}, null, "chat_attachAudioIcon");
        themeDescriptionArr[377] = new ThemeDescription(null, ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, new Drawable[]{Theme.chat_attachButtonDrawables[2]}, null, "chat_attachFileBackground");
        themeDescriptionArr[378] = new ThemeDescription(null, 0, null, null, new Drawable[]{Theme.chat_attachButtonDrawables[2]}, null, "chat_attachFileIcon");
        themeDescriptionArr[379] = new ThemeDescription(null, ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, new Drawable[]{Theme.chat_attachButtonDrawables[3]}, null, "chat_attachContactBackground");
        themeDescriptionArr[380] = new ThemeDescription(null, 0, null, null, new Drawable[]{Theme.chat_attachButtonDrawables[3]}, null, "chat_attachContactIcon");
        themeDescriptionArr[381] = new ThemeDescription(null, ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, new Drawable[]{Theme.chat_attachButtonDrawables[4]}, null, "chat_attachLocationBackground");
        themeDescriptionArr[382] = new ThemeDescription(null, 0, null, null, new Drawable[]{Theme.chat_attachButtonDrawables[4]}, null, "chat_attachLocationIcon");
        themeDescriptionArr[383] = new ThemeDescription(null, ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, new Drawable[]{Theme.chat_attachButtonDrawables[5]}, null, "chat_attachPollBackground");
        themeDescriptionArr[384] = new ThemeDescription(null, 0, null, null, new Drawable[]{Theme.chat_attachButtonDrawables[5]}, null, "chat_attachPollIcon");
        themeDescriptionArr[385] = new ThemeDescription(null, 0, null, null, new Drawable[]{Theme.chat_attachEmptyDrawable}, null, "chat_attachEmptyImage");
        -__lambda_chatactivity_bxn2t3muo3exitmpqkbtacqimrg2 = -__lambda_chatactivity_bxn2t3muo3exitmpqkbtacqimrg;
        themeDescriptionArr[386] = new ThemeDescription(null, 0, null, null, null, -__lambda_chatactivity_bxn2t3muo3exitmpqkbtacqimrg2, "chat_attachPhotoBackground");
        themeDescriptionArr[387] = new ThemeDescription(null, 0, null, null, null, -__lambda_chatactivity_bxn2t3muo3exitmpqkbtacqimrg2, "dialogBackground");
        themeDescriptionArr[388] = new ThemeDescription(null, 0, null, null, null, -__lambda_chatactivity_bxn2t3muo3exitmpqkbtacqimrg2, "dialogBackgroundGray");
        themeDescriptionArr[389] = new ThemeDescription(null, 0, null, null, null, -__lambda_chatactivity_bxn2t3muo3exitmpqkbtacqimrg2, "dialogTextGray2");
        themeDescriptionArr[390] = new ThemeDescription(null, 0, null, null, null, -__lambda_chatactivity_bxn2t3muo3exitmpqkbtacqimrg2, "dialogScrollGlow");
        themeDescriptionArr[391] = new ThemeDescription(null, 0, null, null, null, -__lambda_chatactivity_bxn2t3muo3exitmpqkbtacqimrg2, "dialogGrayLine");
        themeDescriptionArr[392] = new ThemeDescription(null, 0, null, null, null, -__lambda_chatactivity_bxn2t3muo3exitmpqkbtacqimrg2, "dialogCameraIcon");
        return themeDescriptionArr;
    }

    public /* synthetic */ void lambda$getThemeDescriptions$93$ChatActivity() {
        updateVisibleRows();
        ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
        if (!(chatActivityEnterView == null || chatActivityEnterView.getEmojiView() == null)) {
            this.chatActivityEnterView.getEmojiView().updateColors();
        }
        ChatAttachAlert chatAttachAlert = this.chatAttachAlert;
        if (chatAttachAlert != null) {
            chatAttachAlert.checkColors();
        }
    }
}
