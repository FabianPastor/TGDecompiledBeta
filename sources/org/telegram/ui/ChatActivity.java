package org.telegram.ui;

import android.animation.Animator;
import android.animation.AnimatorListenerAdapter;
import android.animation.AnimatorSet;
import android.animation.ObjectAnimator;
import android.annotation.TargetApi;
import android.app.DatePickerDialog;
import android.app.Dialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.content.res.Configuration;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Outline;
import android.graphics.Paint;
import android.graphics.Path;
import android.graphics.Path.Direction;
import android.graphics.PorterDuff.Mode;
import android.graphics.PorterDuffXfermode;
import android.graphics.RectF;
import android.graphics.drawable.Drawable;
import android.media.ThumbnailUtils;
import android.net.Uri;
import android.os.Build.VERSION;
import android.os.Bundle;
import android.os.SystemClock;
import android.text.Layout;
import android.text.Spannable;
import android.text.SpannableString;
import android.text.SpannableStringBuilder;
import android.text.TextPaint;
import android.text.TextUtils;
import android.text.style.CharacterStyle;
import android.text.style.ClickableSpan;
import android.text.style.ForegroundColorSpan;
import android.text.style.URLSpan;
import android.util.LongSparseArray;
import android.util.Property;
import android.util.SparseArray;
import android.view.KeyEvent;
import android.view.MotionEvent;
import android.view.TextureView;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewOutlineProvider;
import android.view.ViewTreeObserver.OnPreDrawListener;
import android.widget.DatePicker;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;
import androidx.recyclerview.widget.GridLayoutManagerFixed;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView.LayoutParams;
import androidx.recyclerview.widget.RecyclerView.OnScrollListener;
import androidx.recyclerview.widget.RecyclerView.ViewHolder;
import com.google.android.exoplayer2.ui.AspectRatioFrameLayout;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.HashMap;
import java.util.Iterator;
import java.util.concurrent.CountDownLatch;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import org.telegram.PhoneFormat.PhoneFormat;
import org.telegram.messenger.AccountInstance;
import org.telegram.messenger.AndroidUtilities;
import org.telegram.messenger.ApplicationLoader;
import org.telegram.messenger.BuildVars;
import org.telegram.messenger.ChatObject;
import org.telegram.messenger.ContactsController;
import org.telegram.messenger.Emoji;
import org.telegram.messenger.FileLoader;
import org.telegram.messenger.FileLog;
import org.telegram.messenger.ImageLocation;
import org.telegram.messenger.ImageReceiver;
import org.telegram.messenger.ImageReceiver.BitmapHolder;
import org.telegram.messenger.LocaleController;
import org.telegram.messenger.MediaController;
import org.telegram.messenger.MediaController.PhotoEntry;
import org.telegram.messenger.MediaDataController;
import org.telegram.messenger.MediaDataController.KeywordResult;
import org.telegram.messenger.MessageObject;
import org.telegram.messenger.MessageObject.GroupedMessages;
import org.telegram.messenger.MessagesController;
import org.telegram.messenger.MessagesStorage;
import org.telegram.messenger.NotificationCenter;
import org.telegram.messenger.NotificationCenter.NotificationCenterDelegate;
import org.telegram.messenger.SendMessagesHelper;
import org.telegram.messenger.SendMessagesHelper.SendingMediaInfo;
import org.telegram.messenger.SharedConfig;
import org.telegram.messenger.UserObject;
import org.telegram.messenger.Utilities;
import org.telegram.messenger.VideoEditedInfo;
import org.telegram.messenger.browser.Browser;
import org.telegram.tgnet.TLObject;
import org.telegram.tgnet.TLRPC;
import org.telegram.tgnet.TLRPC.BotInfo;
import org.telegram.tgnet.TLRPC.BotInlineResult;
import org.telegram.tgnet.TLRPC.Chat;
import org.telegram.tgnet.TLRPC.ChatFull;
import org.telegram.tgnet.TLRPC.ChatParticipant;
import org.telegram.tgnet.TLRPC.Document;
import org.telegram.tgnet.TLRPC.DraftMessage;
import org.telegram.tgnet.TLRPC.EncryptedChat;
import org.telegram.tgnet.TLRPC.FileLocation;
import org.telegram.tgnet.TLRPC.InputStickerSet;
import org.telegram.tgnet.TLRPC.KeyboardButton;
import org.telegram.tgnet.TLRPC.Message;
import org.telegram.tgnet.TLRPC.MessageEntity;
import org.telegram.tgnet.TLRPC.MessageMedia;
import org.telegram.tgnet.TLRPC.Peer;
import org.telegram.tgnet.TLRPC.PhotoSize;
import org.telegram.tgnet.TLRPC.TL_botCommand;
import org.telegram.tgnet.TLRPC.TL_channelForbidden;
import org.telegram.tgnet.TLRPC.TL_channelFull;
import org.telegram.tgnet.TLRPC.TL_chatBannedRights;
import org.telegram.tgnet.TLRPC.TL_chatFull;
import org.telegram.tgnet.TLRPC.TL_contacts_acceptContact;
import org.telegram.tgnet.TLRPC.TL_document;
import org.telegram.tgnet.TLRPC.TL_encryptedChat;
import org.telegram.tgnet.TLRPC.TL_encryptedChatDiscarded;
import org.telegram.tgnet.TLRPC.TL_encryptedChatRequested;
import org.telegram.tgnet.TLRPC.TL_encryptedChatWaiting;
import org.telegram.tgnet.TLRPC.TL_error;
import org.telegram.tgnet.TLRPC.TL_exportedMessageLink;
import org.telegram.tgnet.TLRPC.TL_fileLocationUnavailable;
import org.telegram.tgnet.TLRPC.TL_game;
import org.telegram.tgnet.TLRPC.TL_inlineBotSwitchPM;
import org.telegram.tgnet.TLRPC.TL_inputMediaPoll;
import org.telegram.tgnet.TLRPC.TL_inputMessageEntityMentionName;
import org.telegram.tgnet.TLRPC.TL_inputStickerSetID;
import org.telegram.tgnet.TLRPC.TL_inputStickerSetShortName;
import org.telegram.tgnet.TLRPC.TL_keyboardButtonBuy;
import org.telegram.tgnet.TLRPC.TL_keyboardButtonCallback;
import org.telegram.tgnet.TLRPC.TL_keyboardButtonGame;
import org.telegram.tgnet.TLRPC.TL_keyboardButtonSwitchInline;
import org.telegram.tgnet.TLRPC.TL_keyboardButtonUrl;
import org.telegram.tgnet.TLRPC.TL_keyboardButtonUrlAuth;
import org.telegram.tgnet.TLRPC.TL_messageEntityBold;
import org.telegram.tgnet.TLRPC.TL_messageEntityCode;
import org.telegram.tgnet.TLRPC.TL_messageEntityItalic;
import org.telegram.tgnet.TLRPC.TL_messageEntityMentionName;
import org.telegram.tgnet.TLRPC.TL_messageEntityPre;
import org.telegram.tgnet.TLRPC.TL_messageEntityStrike;
import org.telegram.tgnet.TLRPC.TL_messageEntityTextUrl;
import org.telegram.tgnet.TLRPC.TL_messageEntityUnderline;
import org.telegram.tgnet.TLRPC.TL_messageMediaGame;
import org.telegram.tgnet.TLRPC.TL_messageMediaPhoto;
import org.telegram.tgnet.TLRPC.TL_messageMediaPoll;
import org.telegram.tgnet.TLRPC.TL_messageMediaWebPage;
import org.telegram.tgnet.TLRPC.TL_messages_acceptUrlAuth;
import org.telegram.tgnet.TLRPC.TL_messages_editMessage;
import org.telegram.tgnet.TLRPC.TL_messages_getMessageEditData;
import org.telegram.tgnet.TLRPC.TL_messages_getWebPagePreview;
import org.telegram.tgnet.TLRPC.TL_messages_requestUrlAuth;
import org.telegram.tgnet.TLRPC.TL_messages_sendScheduledMessages;
import org.telegram.tgnet.TLRPC.TL_peerNotifySettings;
import org.telegram.tgnet.TLRPC.TL_photoSizeEmpty;
import org.telegram.tgnet.TLRPC.TL_poll;
import org.telegram.tgnet.TLRPC.TL_pollAnswer;
import org.telegram.tgnet.TLRPC.TL_reactionCount;
import org.telegram.tgnet.TLRPC.TL_replyKeyboardForceReply;
import org.telegram.tgnet.TLRPC.TL_urlAuthResultAccepted;
import org.telegram.tgnet.TLRPC.TL_urlAuthResultDefault;
import org.telegram.tgnet.TLRPC.TL_urlAuthResultRequest;
import org.telegram.tgnet.TLRPC.TL_webPage;
import org.telegram.tgnet.TLRPC.TL_webPagePending;
import org.telegram.tgnet.TLRPC.Updates;
import org.telegram.tgnet.TLRPC.User;
import org.telegram.tgnet.TLRPC.UserFull;
import org.telegram.tgnet.TLRPC.WebPage;
import org.telegram.ui.ActionBar.ActionBar;
import org.telegram.ui.ActionBar.ActionBarLayout;
import org.telegram.ui.ActionBar.ActionBarMenuItem;
import org.telegram.ui.ActionBar.ActionBarMenuSubItem;
import org.telegram.ui.ActionBar.ActionBarPopupWindow;
import org.telegram.ui.ActionBar.AlertDialog;
import org.telegram.ui.ActionBar.BackDrawable;
import org.telegram.ui.ActionBar.BaseFragment;
import org.telegram.ui.ActionBar.BottomSheet.Builder;
import org.telegram.ui.ActionBar.SimpleTextView;
import org.telegram.ui.ActionBar.Theme;
import org.telegram.ui.ActionBar.Theme.MessageDrawable;
import org.telegram.ui.ActionBar.Theme.ThemeAccent;
import org.telegram.ui.ActionBar.Theme.ThemeInfo;
import org.telegram.ui.ActionBar.ThemeDescription;
import org.telegram.ui.ActionBar.ThemeDescription.ThemeDescriptionDelegate;
import org.telegram.ui.Adapters.MentionsAdapter;
import org.telegram.ui.Adapters.MessagesSearchAdapter;
import org.telegram.ui.Adapters.StickersAdapter;
import org.telegram.ui.Cells.BotHelpCell;
import org.telegram.ui.Cells.BotSwitchCell;
import org.telegram.ui.Cells.ChatActionCell;
import org.telegram.ui.Cells.ChatActionCell.ChatActionCellDelegate;
import org.telegram.ui.Cells.ChatLoadingCell;
import org.telegram.ui.Cells.ChatMessageCell;
import org.telegram.ui.Cells.ChatMessageCell.ChatMessageCellDelegate;
import org.telegram.ui.Cells.ChatUnreadCell;
import org.telegram.ui.Cells.CheckBoxCell;
import org.telegram.ui.Cells.ContextLinkCell;
import org.telegram.ui.Cells.DialogCell;
import org.telegram.ui.Cells.MentionCell;
import org.telegram.ui.Cells.StickerCell;
import org.telegram.ui.Cells.TextSelectionHelper.ChatListTextSelectionHelper;
import org.telegram.ui.Components.AlertsCreator;
import org.telegram.ui.Components.AnimatedFileDrawable;
import org.telegram.ui.Components.BackupImageView;
import org.telegram.ui.Components.ChatActivityEnterView;
import org.telegram.ui.Components.ChatAttachAlert;
import org.telegram.ui.Components.ChatAttachAlert.ChatAttachViewDelegate;
import org.telegram.ui.Components.ChatAvatarContainer;
import org.telegram.ui.Components.ChatBigEmptyView;
import org.telegram.ui.Components.ClippingImageView;
import org.telegram.ui.Components.CorrectlyMeasuringTextView;
import org.telegram.ui.Components.CubicBezierInterpolator;
import org.telegram.ui.Components.EditTextCaption;
import org.telegram.ui.Components.EmbedBottomSheet;
import org.telegram.ui.Components.EmojiView;
import org.telegram.ui.Components.ExtendedGridLayoutManager;
import org.telegram.ui.Components.FragmentContextView;
import org.telegram.ui.Components.HintView;
import org.telegram.ui.Components.InstantCameraView;
import org.telegram.ui.Components.LayoutHelper;
import org.telegram.ui.Components.NumberTextView;
import org.telegram.ui.Components.PhonebookSelectShareAlert;
import org.telegram.ui.Components.PhonebookShareAlert;
import org.telegram.ui.Components.PipRoundVideoView;
import org.telegram.ui.Components.RLottieDrawable;
import org.telegram.ui.Components.RadialProgressView;
import org.telegram.ui.Components.RecyclerAnimationScrollHelper;
import org.telegram.ui.Components.RecyclerAnimationScrollHelper.AnimatableAdapter;
import org.telegram.ui.Components.RecyclerAnimationScrollHelper.AnimationCallback;
import org.telegram.ui.Components.RecyclerListView;
import org.telegram.ui.Components.RecyclerListView.Holder;
import org.telegram.ui.Components.RecyclerListView.OnItemClickListener;
import org.telegram.ui.Components.RecyclerListView.OnItemClickListenerExtended;
import org.telegram.ui.Components.RecyclerListView.OnItemLongClickListenerExtended;
import org.telegram.ui.Components.ShareAlert;
import org.telegram.ui.Components.SizeNotifierFrameLayout;
import org.telegram.ui.Components.TextStyleSpan;
import org.telegram.ui.Components.TextStyleSpan.TextStyleRun;
import org.telegram.ui.Components.URLSpanBotCommand;
import org.telegram.ui.Components.URLSpanMono;
import org.telegram.ui.Components.URLSpanNoUnderline;
import org.telegram.ui.Components.URLSpanReplacement;
import org.telegram.ui.Components.URLSpanUserMention;
import org.telegram.ui.Components.UndoView;
import org.telegram.ui.Components.voip.VoIPHelper;
import org.telegram.ui.ContentPreviewViewer.ContentPreviewViewerDelegate;
import org.telegram.ui.DialogsActivity.DialogsActivityDelegate;
import org.telegram.ui.LocationActivity.LocationActivityDelegate;
import org.telegram.ui.PhotoViewer.EmptyPhotoViewerProvider;
import org.telegram.ui.PhotoViewer.PhotoViewerProvider;

public class ChatActivity extends BaseFragment implements NotificationCenterDelegate, DialogsActivityDelegate, LocationActivityDelegate {
    private static final int add_shortcut = 24;
    private static final int attach_audio = 3;
    private static final int attach_contact = 5;
    private static final int attach_document = 4;
    private static final int attach_gallery = 1;
    private static final int attach_location = 6;
    private static final int attach_photo = 0;
    private static final int attach_poll = 9;
    private static final int attach_video = 2;
    private static final int bot_help = 30;
    private static final int bot_settings = 31;
    private static final int call = 32;
    private static final int chat_enc_timer = 13;
    private static final int chat_menu_attach = 14;
    private static final int clear_history = 15;
    private static final int copy = 10;
    private static final int delete = 12;
    private static final int delete_chat = 16;
    private static final int edit = 23;
    private static final int forward = 11;
    private static final int id_chat_compose_panel = 1000;
    private static final int mute = 18;
    public static Pattern privateMsgUrlPattern = null;
    public static Pattern publicMsgUrlPattern = null;
    private static final int report = 21;
    private static final int search = 40;
    private static final int share_contact = 17;
    private static final int star = 22;
    private static final int text_bold = 50;
    private static final int text_italic = 51;
    private static final int text_link = 53;
    private static final int text_mono = 52;
    private static final int text_regular = 54;
    private static final int text_strike = 55;
    private static final int text_underline = 56;
    private ArrayList<View> actionModeViews = new ArrayList();
    private ActionBarMenuSubItem addContactItem;
    private TextView addToContactsButton;
    private TextView alertNameTextView;
    private TextView alertTextView;
    private FrameLayout alertView;
    private AnimatorSet alertViewAnimator;
    private boolean allowContextBotPanel;
    private boolean allowContextBotPanelSecond = true;
    private boolean allowStickersPanel;
    private HashMap<MessageObject, Boolean> alredyPlayedStickers = new HashMap();
    private ClippingImageView animatingImageView;
    private ArrayList<MessageObject> animatingMessageObjects = new ArrayList();
    private Paint aspectPaint;
    private Path aspectPath;
    private AspectRatioFrameLayout aspectRatioFrameLayout;
    private ActionBarMenuItem attachItem;
    private ChatAvatarContainer avatarContainer;
    private ChatBigEmptyView bigEmptyView;
    private MessageObject botButtons;
    private PhotoViewerProvider botContextProvider = new EmptyPhotoViewerProvider() {
        /* JADX WARNING: Removed duplicated region for block: B:18:0x007c A:{LOOP_END, LOOP:0: B:5:0x0026->B:18:0x007c} */
        /* JADX WARNING: Removed duplicated region for block: B:20:0x0047 A:{SYNTHETIC} */
        public org.telegram.ui.PhotoViewer.PlaceProviderObject getPlaceForPhoto(org.telegram.messenger.MessageObject r5, org.telegram.tgnet.TLRPC.FileLocation r6, int r7, boolean r8) {
            /*
            r4 = this;
            r5 = 0;
            if (r7 < 0) goto L_0x007f;
        L_0x0003:
            r6 = org.telegram.ui.ChatActivity.this;
            r6 = r6.botContextResults;
            r6 = r6.size();
            if (r7 < r6) goto L_0x0010;
        L_0x000f:
            goto L_0x007f;
        L_0x0010:
            r6 = org.telegram.ui.ChatActivity.this;
            r6 = r6.mentionListView;
            r6 = r6.getChildCount();
            r8 = org.telegram.ui.ChatActivity.this;
            r8 = r8.botContextResults;
            r7 = r8.get(r7);
            r8 = 0;
            r0 = 0;
        L_0x0026:
            if (r0 >= r6) goto L_0x007f;
        L_0x0028:
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.mentionListView;
            r1 = r1.getChildAt(r0);
            r2 = r1 instanceof org.telegram.ui.Cells.ContextLinkCell;
            if (r2 == 0) goto L_0x0044;
        L_0x0036:
            r2 = r1;
            r2 = (org.telegram.ui.Cells.ContextLinkCell) r2;
            r3 = r2.getResult();
            if (r3 != r7) goto L_0x0044;
        L_0x003f:
            r2 = r2.getPhotoImage();
            goto L_0x0045;
        L_0x0044:
            r2 = r5;
        L_0x0045:
            if (r2 == 0) goto L_0x007c;
        L_0x0047:
            r5 = 2;
            r5 = new int[r5];
            r1.getLocationInWindow(r5);
            r6 = new org.telegram.ui.PhotoViewer$PlaceProviderObject;
            r6.<init>();
            r7 = r5[r8];
            r6.viewX = r7;
            r7 = 1;
            r5 = r5[r7];
            r7 = android.os.Build.VERSION.SDK_INT;
            r0 = 21;
            if (r7 < r0) goto L_0x0060;
        L_0x005f:
            goto L_0x0062;
        L_0x0060:
            r8 = org.telegram.messenger.AndroidUtilities.statusBarHeight;
        L_0x0062:
            r5 = r5 - r8;
            r6.viewY = r5;
            r5 = org.telegram.ui.ChatActivity.this;
            r5 = r5.mentionListView;
            r6.parentView = r5;
            r6.imageReceiver = r2;
            r5 = r2.getBitmapSafe();
            r6.thumb = r5;
            r5 = r2.getRoundRadius();
            r6.radius = r5;
            return r6;
        L_0x007c:
            r0 = r0 + 1;
            goto L_0x0026;
        L_0x007f:
            return r5;
            */
            throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity$AnonymousClass2.getPlaceForPhoto(org.telegram.messenger.MessageObject, org.telegram.tgnet.TLRPC$FileLocation, int, boolean):org.telegram.ui.PhotoViewer$PlaceProviderObject");
        }

        public void sendButtonPressed(int i, VideoEditedInfo videoEditedInfo, boolean z, int i2) {
            if (i >= 0 && i < ChatActivity.this.botContextResults.size()) {
                ChatActivity chatActivity = ChatActivity.this;
                chatActivity.sendBotInlineResult((BotInlineResult) chatActivity.botContextResults.get(i), z, i2);
            }
        }
    };
    private ArrayList<Object> botContextResults;
    private SparseArray<BotInfo> botInfo = new SparseArray();
    private MessageObject botReplyButtons;
    private String botUser;
    private int botsCount;
    private FrameLayout bottomMessagesActionContainer;
    private FrameLayout bottomOverlay;
    private AnimatorSet bottomOverlayAnimation;
    private FrameLayout bottomOverlayChat;
    private TextView bottomOverlayChatText;
    private UnreadCounterTextView bottomOverlayChatText2;
    private RadialProgressView bottomOverlayProgress;
    private TextView bottomOverlayText;
    private boolean[] cacheEndReached = new boolean[2];
    private int canEditMessagesCount;
    private int canForwardMessagesCount;
    private boolean canShowPagedownButton;
    private int cantDeleteMessagesCount;
    private int cantForwardMessagesCount;
    private ChatActivityDelegate chatActivityDelegate;
    protected ChatActivityEnterView chatActivityEnterView;
    private ChatActivityAdapter chatAdapter;
    private ChatAttachAlert chatAttachAlert;
    private long chatEnterTime;
    protected ChatFull chatInfo;
    private GridLayoutManagerFixed chatLayoutManager;
    private long chatLeaveTime;
    private RecyclerListView chatListView;
    private int chatListViewClipTop;
    private ArrayList<ChatMessageCell> chatMessageCellsCache = new ArrayList();
    private RecyclerAnimationScrollHelper chatScrollHelper;
    private final ChatScrollCallback chatScrollHelperCallback = new ChatScrollCallback();
    private Runnable checkPaddingsRunnable;
    private boolean checkTextureViewPosition;
    private boolean clearingHistory;
    private Dialog closeChatDialog;
    private ImageView closePinned;
    private ImageView closeReportSpam;
    private SizeNotifierFrameLayout contentView;
    private int createUnreadMessageAfterId;
    private boolean createUnreadMessageAfterIdLoading;
    protected Chat currentChat;
    protected EncryptedChat currentEncryptedChat;
    private boolean currentFloatingDateOnScreen;
    private boolean currentFloatingTopIsNotMessage;
    private String currentPicturePath;
    protected User currentUser;
    private long dialog_id;
    private ChatMessageCell drawLaterRoundProgressCell;
    private ChatMessageCell dummyMessageCell;
    private AnimatorSet editButtonAnimation;
    private int editTextEnd;
    private ActionBarMenuItem editTextItem;
    private int editTextStart;
    private MessageObject editingMessageObject;
    private int editingMessageObjectReqId;
    private View emojiButtonRed;
    private TextView emptyView;
    private FrameLayout emptyViewContainer;
    private boolean[] endReached = new boolean[2];
    private boolean first = true;
    private boolean firstLoading = true;
    boolean firstOpen = true;
    private boolean firstUnreadSent = false;
    private int first_unread_id;
    private boolean fixPaddingsInLayout;
    private AnimatorSet floatingDateAnimation;
    private ChatActionCell floatingDateView;
    private boolean forceScrollToTop;
    private TextView forwardButton;
    private AnimatorSet forwardButtonAnimation;
    private boolean[] forwardEndReached = new boolean[]{true, true};
    private HintView forwardHintView;
    private MessageObject forwardingMessage;
    private GroupedMessages forwardingMessageGroup;
    private ArrayList<MessageObject> forwardingMessages;
    private ArrayList<CharSequence> foundUrls;
    private WebPage foundWebPage;
    private FragmentContextView fragmentContextView;
    private TextView gifHintTextView;
    private boolean globalIgnoreLayout;
    private LongSparseArray<GroupedMessages> groupedMessagesMap = new LongSparseArray();
    private boolean hasAllMentionsLocal;
    private boolean hasBotsCommands;
    private boolean hasUnfavedSelected;
    private ActionBarMenuItem headerItem;
    private Runnable hideAlertViewRunnable;
    private int hideDateDelay = 500;
    private int highlightMessageId = Integer.MAX_VALUE;
    private boolean ignoreAttachOnPause;
    private boolean inScheduleMode;
    private long inlineReturn;
    private InstantCameraView instantCameraView;
    private int lastLoadIndex;
    private float lastTouchY;
    private int last_message_id = 0;
    private int linkSearchRequestId;
    private boolean loading;
    private boolean loadingForward;
    private boolean loadingFromOldPosition;
    private int loadingPinnedMessage;
    private int loadsCount;
    private boolean locationAlertShown;
    private int[] maxDate = new int[]{Integer.MIN_VALUE, Integer.MIN_VALUE};
    private int[] maxMessageId = new int[]{Integer.MAX_VALUE, Integer.MAX_VALUE};
    private TextView mediaBanTooltip;
    private FrameLayout mentionContainer;
    private ExtendedGridLayoutManager mentionGridLayoutManager;
    private LinearLayoutManager mentionLayoutManager;
    private AnimatorSet mentionListAnimation;
    private RecyclerListView mentionListView;
    private boolean mentionListViewIgnoreLayout;
    private boolean mentionListViewIsScrolling;
    private int mentionListViewLastViewPosition;
    private int mentionListViewLastViewTop;
    private int mentionListViewScrollOffsetY;
    private FrameLayout mentiondownButton;
    private ObjectAnimator mentiondownButtonAnimation;
    private SimpleTextView mentiondownButtonCounter;
    private ImageView mentiondownButtonImage;
    private MentionsAdapter mentionsAdapter;
    private OnItemClickListener mentionsOnItemClickListener;
    private long mergeDialogId;
    protected ArrayList<MessageObject> messages = new ArrayList();
    private HashMap<String, ArrayList<MessageObject>> messagesByDays = new HashMap();
    private SparseArray<MessageObject>[] messagesDict = new SparseArray[]{new SparseArray(), new SparseArray()};
    private MessagesSearchAdapter messagesSearchAdapter;
    private RecyclerListView messagesSearchListView;
    private AnimatorSet messagesSearchListViewAnimation;
    private int[] minDate = new int[2];
    private int[] minMessageId = new int[]{Integer.MIN_VALUE, Integer.MIN_VALUE};
    private ActionBarMenuSubItem muteItem;
    private MessageObject needAnimateToMessage;
    private boolean needSelectFromMessageId;
    private int newMentionsCount;
    private int newUnreadMessageCount;
    private HintView noSoundHintView;
    OnItemClickListenerExtended onItemClickListener = new OnItemClickListenerExtended() {
        public void onItemClick(View view, int i, float f, float f2) {
            ChatActivity.this.wasManualScroll = true;
            if (ChatActivity.this.actionBar.isActionModeShowed()) {
                boolean z = false;
                if (view instanceof ChatMessageCell) {
                    ChatMessageCell chatMessageCell = (ChatMessageCell) view;
                    if (!ChatActivity.this.textSelectionHelper.isSelected(chatMessageCell.getMessageObject())) {
                        z = chatMessageCell.isInsideBackground(f, f2) ^ true;
                    } else {
                        return;
                    }
                }
                ChatActivity.this.processRowSelect(view, z, f, f2);
                return;
            }
            ChatActivity.this.createMenu(view, true, false, f, f2);
        }
    };
    OnItemLongClickListenerExtended onItemLongClickListener = new OnItemLongClickListenerExtended() {
        public void onLongClickRelease() {
        }

        public void onMove(float f, float f2) {
        }

        public boolean onItemClick(View view, int i, float f, float f2) {
            boolean z = false;
            if (ChatActivity.this.textSelectionHelper.isTryingSelect() || ChatActivity.this.textSelectionHelper.isSelectionMode()) {
                return false;
            }
            ChatActivity.this.wasManualScroll = true;
            if (ChatActivity.this.actionBar.isActionModeShowed()) {
                if (view instanceof ChatMessageCell) {
                    z = ((ChatMessageCell) view).isInsideBackground(f, f2) ^ 1;
                }
                ChatActivity.this.processRowSelect(view, z, f, f2);
            } else {
                ChatActivity.this.createMenu(view, false, true, f, f2);
            }
            return true;
        }
    };
    private boolean openAnimationEnded;
    private long openAnimationStartTime;
    private boolean openKeyboardOnAttachMenuClose;
    private boolean openSearchKeyboard;
    private View overlayView;
    private FrameLayout pagedownButton;
    private AnimatorSet pagedownButtonAnimation;
    private SimpleTextView pagedownButtonCounter;
    private ImageView pagedownButtonImage;
    private boolean pagedownButtonShowedByScroll;
    private boolean paused = true;
    private boolean pausedOnLastMessage;
    private String pendingLinkSearchString;
    private Runnable pendingWebPageTimeoutRunnable;
    private PhotoViewerProvider photoViewerProvider = new EmptyPhotoViewerProvider() {
        /* JADX WARNING: Removed duplicated region for block: B:60:0x0128 A:{LOOP_END, LOOP:0: B:1:0x0010->B:60:0x0128} */
        /* JADX WARNING: Removed duplicated region for block: B:62:0x008b A:{SYNTHETIC} */
        /* JADX WARNING: Removed duplicated region for block: B:62:0x008b A:{SYNTHETIC} */
        /* JADX WARNING: Removed duplicated region for block: B:60:0x0128 A:{LOOP_END, LOOP:0: B:1:0x0010->B:60:0x0128} */
        public org.telegram.ui.PhotoViewer.PlaceProviderObject getPlaceForPhoto(org.telegram.messenger.MessageObject r17, org.telegram.tgnet.TLRPC.FileLocation r18, int r19, boolean r20) {
            /*
            r16 = this;
            r0 = r16;
            r1 = r18;
            r2 = org.telegram.ui.ChatActivity.this;
            r2 = r2.chatListView;
            r2 = r2.getChildCount();
            r3 = 0;
            r4 = 0;
        L_0x0010:
            r5 = 0;
            if (r4 >= r2) goto L_0x012c;
        L_0x0013:
            r6 = org.telegram.ui.ChatActivity.this;
            r6 = r6.chatListView;
            r6 = r6.getChildAt(r4);
            r7 = r6 instanceof org.telegram.ui.Cells.ChatMessageCell;
            if (r7 == 0) goto L_0x003b;
        L_0x0021:
            if (r17 == 0) goto L_0x0088;
        L_0x0023:
            r7 = r6;
            r7 = (org.telegram.ui.Cells.ChatMessageCell) r7;
            r8 = r7.getMessageObject();
            if (r8 == 0) goto L_0x0088;
        L_0x002c:
            r8 = r8.getId();
            r9 = r17.getId();
            if (r8 != r9) goto L_0x0088;
        L_0x0036:
            r7 = r7.getPhotoImage();
            goto L_0x0089;
        L_0x003b:
            r7 = r6 instanceof org.telegram.ui.Cells.ChatActionCell;
            if (r7 == 0) goto L_0x0088;
        L_0x003f:
            r7 = r6;
            r7 = (org.telegram.ui.Cells.ChatActionCell) r7;
            r8 = r7.getMessageObject();
            if (r8 == 0) goto L_0x0088;
        L_0x0048:
            if (r17 == 0) goto L_0x0059;
        L_0x004a:
            r8 = r8.getId();
            r9 = r17.getId();
            if (r8 != r9) goto L_0x0088;
        L_0x0054:
            r7 = r7.getPhotoImage();
            goto L_0x0089;
        L_0x0059:
            if (r1 == 0) goto L_0x0088;
        L_0x005b:
            r9 = r8.photoThumbs;
            if (r9 == 0) goto L_0x0088;
        L_0x005f:
            r9 = 0;
        L_0x0060:
            r10 = r8.photoThumbs;
            r10 = r10.size();
            if (r9 >= r10) goto L_0x0088;
        L_0x0068:
            r10 = r8.photoThumbs;
            r10 = r10.get(r9);
            r10 = (org.telegram.tgnet.TLRPC.PhotoSize) r10;
            r10 = r10.location;
            r11 = r10.volume_id;
            r13 = r1.volume_id;
            r15 = (r11 > r13 ? 1 : (r11 == r13 ? 0 : -1));
            if (r15 != 0) goto L_0x0085;
        L_0x007a:
            r10 = r10.local_id;
            r11 = r1.local_id;
            if (r10 != r11) goto L_0x0085;
        L_0x0080:
            r7 = r7.getPhotoImage();
            goto L_0x0089;
        L_0x0085:
            r9 = r9 + 1;
            goto L_0x0060;
        L_0x0088:
            r7 = r5;
        L_0x0089:
            if (r7 == 0) goto L_0x0128;
        L_0x008b:
            r1 = 2;
            r1 = new int[r1];
            r6.getLocationInWindow(r1);
            r2 = new org.telegram.ui.PhotoViewer$PlaceProviderObject;
            r2.<init>();
            r4 = r1[r3];
            r2.viewX = r4;
            r4 = 1;
            r1 = r1[r4];
            r4 = android.os.Build.VERSION.SDK_INT;
            r8 = 21;
            if (r4 < r8) goto L_0x00a4;
        L_0x00a3:
            goto L_0x00a6;
        L_0x00a4:
            r3 = org.telegram.messenger.AndroidUtilities.statusBarHeight;
        L_0x00a6:
            r1 = r1 - r3;
            r2.viewY = r1;
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.chatListView;
            r2.parentView = r1;
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.pagedownButton;
            if (r1 == 0) goto L_0x00cb;
        L_0x00b9:
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.pagedownButton;
            r1 = r1.getTag();
            if (r1 == 0) goto L_0x00cb;
        L_0x00c5:
            r1 = org.telegram.ui.ChatActivity.this;
            r5 = r1.animatingImageView;
        L_0x00cb:
            r2.animatingImageView = r5;
            r2.imageReceiver = r7;
            if (r20 == 0) goto L_0x00d7;
        L_0x00d1:
            r1 = r7.getBitmapSafe();
            r2.thumb = r1;
        L_0x00d7:
            r1 = r7.getRoundRadius();
            r2.radius = r1;
            r1 = r6 instanceof org.telegram.ui.Cells.ChatActionCell;
            if (r1 == 0) goto L_0x00ec;
        L_0x00e1:
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.currentChat;
            if (r1 == 0) goto L_0x00ec;
        L_0x00e7:
            r1 = r1.id;
            r1 = -r1;
            r2.dialogId = r1;
        L_0x00ec:
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.pinnedMessageView;
            if (r1 == 0) goto L_0x0100;
        L_0x00f4:
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.pinnedMessageView;
            r1 = r1.getTag();
            if (r1 == 0) goto L_0x0114;
        L_0x0100:
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.topChatPanelView;
            if (r1 == 0) goto L_0x011c;
        L_0x0108:
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.topChatPanelView;
            r1 = r1.getTag();
            if (r1 != 0) goto L_0x011c;
        L_0x0114:
            r1 = NUM; // 0x42400000 float:48.0 double:5.491493014E-315;
            r1 = org.telegram.messenger.AndroidUtilities.dp(r1);
            r2.clipTopAddition = r1;
        L_0x011c:
            r1 = r2.clipTopAddition;
            r3 = org.telegram.ui.ChatActivity.this;
            r3 = r3.chatListViewClipTop;
            r1 = r1 + r3;
            r2.clipTopAddition = r1;
            return r2;
        L_0x0128:
            r4 = r4 + 1;
            goto L_0x0010;
        L_0x012c:
            return r5;
            */
            throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity$AnonymousClass1.getPlaceForPhoto(org.telegram.messenger.MessageObject, org.telegram.tgnet.TLRPC$FileLocation, int, boolean):org.telegram.ui.PhotoViewer$PlaceProviderObject");
        }
    };
    private int pinnedImageCacheType;
    private PhotoSize pinnedImageLocation;
    private TLObject pinnedImageLocationObject;
    private int pinnedImageSize;
    private PhotoSize pinnedImageThumbLocation;
    private View pinnedLineView;
    private BackupImageView pinnedMessageImageView;
    private SimpleTextView pinnedMessageNameTextView;
    private MessageObject pinnedMessageObject;
    private SimpleTextView pinnedMessageTextView;
    private FrameLayout pinnedMessageView;
    private AnimatorSet pinnedMessageViewAnimator;
    private LongSparseArray<ArrayList<MessageObject>> polls = new LongSparseArray();
    ArrayList<MessageObject> pollsToCheck = new ArrayList(10);
    private boolean postponedScrollIsCanceled;
    private int postponedScrollMessageId;
    private int postponedScrollToLastMessageQueryIndex;
    private int prevSetUnreadCount = Integer.MIN_VALUE;
    private RadialProgressView progressBar;
    private AlertDialog progressDialog;
    private FrameLayout progressView;
    private View progressView2;
    private TextView replyButton;
    private AnimatorSet replyButtonAnimation;
    private ImageView replyCloseImageView;
    private ImageView replyIconImageView;
    private int replyImageCacheType;
    private PhotoSize replyImageLocation;
    private TLObject replyImageLocationObject;
    private int replyImageSize;
    private PhotoSize replyImageThumbLocation;
    private BackupImageView replyImageView;
    private View replyLineView;
    private SimpleTextView replyNameTextView;
    private SimpleTextView replyObjectTextView;
    private MessageObject replyingMessageObject;
    private TextView reportSpamButton;
    private AnimatorSet reportSpamViewAnimator;
    private int returnToLoadIndex;
    private int returnToMessageId;
    private AnimatorSet runningAnimation;
    private int scheduledMessagesCount = -1;
    private AnimatorSet scrimAnimatorSet;
    private Paint scrimPaint;
    private ActionBarPopupWindow scrimPopupWindow;
    private ActionBarMenuSubItem[] scrimPopupWindowItems;
    private View scrimView;
    private MessageObject scrollToMessage;
    private int scrollToMessagePosition = -10000;
    private int scrollToOffsetOnRecreate = 0;
    private int scrollToPositionOnRecreate = -1;
    private boolean scrollToTopOnResume;
    private boolean scrollToTopUnReadOnResume;
    private boolean scrollToVideo;
    private boolean scrollingChatListView;
    private boolean scrollingFloatingDate;
    private HintView searchAsListHint;
    private boolean searchAsListHintShown;
    private View searchAsListTogglerView;
    private ImageView searchCalendarButton;
    private FrameLayout searchContainer;
    private SimpleTextView searchCountText;
    private ImageView searchDownButton;
    private ActionBarMenuItem searchItem;
    private ImageView searchUpButton;
    private ImageView searchUserButton;
    private boolean searchingForUser;
    private User searchingUserMessages;
    private SparseArray<MessageObject>[] selectedMessagesCanCopyIds = new SparseArray[]{new SparseArray(), new SparseArray()};
    private SparseArray<MessageObject>[] selectedMessagesCanStarIds = new SparseArray[]{new SparseArray(), new SparseArray()};
    private NumberTextView selectedMessagesCountTextView;
    private SparseArray<MessageObject>[] selectedMessagesIds = new SparseArray[]{new SparseArray(), new SparseArray()};
    private MessageObject selectedObject;
    private GroupedMessages selectedObjectGroup;
    private MessageObject selectedObjectToEditCaption;
    private boolean showScrollToMessageError;
    private ChatMessageCell slidingView;
    private HintView slowModeHint;
    private int startLoadFromMessageId;
    private int startLoadFromMessageIdSaved;
    private int startLoadFromMessageOffset = Integer.MAX_VALUE;
    private String startVideoEdit;
    private StickersAdapter stickersAdapter;
    private RecyclerListView stickersListView;
    private OnItemClickListener stickersOnItemClickListener;
    private FrameLayout stickersPanel;
    private ImageView stickersPanelArrow;
    private ChatListTextSelectionHelper textSelectionHelper;
    private TextSelectionHint textSelectionHint;
    private boolean textSelectionHintWasShowed;
    private View timeItem2;
    private FrameLayout topChatPanelView;
    private int topViewWasVisible;
    private UndoView undoView;
    private MessageObject unreadMessageObject;
    private Runnable unselectRunnable;
    private boolean userBlocked;
    protected UserFull userInfo;
    private FrameLayout videoPlayerContainer;
    private TextureView videoTextureView;
    private AnimatorSet voiceHintAnimation;
    private Runnable voiceHintHideRunnable;
    private TextView voiceHintTextView;
    private Runnable waitingForCharaterEnterRunnable;
    private ArrayList<Integer> waitingForLoad = new ArrayList();
    private boolean waitingForReplyMessageLoad;
    private boolean wasManualScroll;
    private boolean wasPaused;

    private interface ChatActivityDelegate {
        void openReplyMessage(int i);
    }

    private class UnreadCounterTextView extends TextView {
        private int circleWidth;
        private int currentCounter;
        private String currentCounterString;
        private Paint paint = new Paint(1);
        private RectF rect = new RectF();
        private TextPaint textPaint = new TextPaint(1);
        private int textWidth;

        public UnreadCounterTextView(Context context) {
            super(context);
            this.textPaint.setTextSize((float) AndroidUtilities.dp(13.0f));
            this.textPaint.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        }

        public void setTextColor(int i) {
            super.setTextColor(i);
            this.textPaint.setColor(Theme.getColor("chat_messagePanelBackground"));
            this.paint.setColor(Theme.getColor("chat_goDownButtonCounterBackground"));
        }

        /* JADX WARNING: Removed duplicated region for block: B:22:? A:{SYNTHETIC, RETURN} */
        /* JADX WARNING: Removed duplicated region for block: B:14:0x0039  */
        public void updateCounter() {
            /*
            r4 = this;
            r0 = org.telegram.ui.ChatActivity.this;
            r0 = r0.currentChat;
            r0 = org.telegram.messenger.ChatObject.isChannel(r0);
            r1 = 0;
            if (r0 == 0) goto L_0x0034;
        L_0x000b:
            r0 = org.telegram.ui.ChatActivity.this;
            r2 = r0.currentChat;
            r2 = r2.megagroup;
            if (r2 != 0) goto L_0x0034;
        L_0x0013:
            r2 = r0.chatInfo;
            if (r2 == 0) goto L_0x0034;
        L_0x0017:
            r2 = r2.linked_chat_id;
            if (r2 == 0) goto L_0x0034;
        L_0x001b:
            r0 = r0.getMessagesController();
            r0 = r0.dialogs_dict;
            r2 = org.telegram.ui.ChatActivity.this;
            r2 = r2.chatInfo;
            r2 = r2.linked_chat_id;
            r2 = -r2;
            r2 = (long) r2;
            r0 = r0.get(r2);
            r0 = (org.telegram.tgnet.TLRPC.Dialog) r0;
            if (r0 == 0) goto L_0x0034;
        L_0x0031:
            r0 = r0.unread_count;
            goto L_0x0035;
        L_0x0034:
            r0 = 0;
        L_0x0035:
            r2 = r4.currentCounter;
            if (r2 == r0) goto L_0x0093;
        L_0x0039:
            r4.currentCounter = r0;
            r0 = r4.currentCounter;
            if (r0 != 0) goto L_0x0048;
        L_0x003f:
            r0 = 0;
            r4.currentCounterString = r0;
            r4.circleWidth = r1;
            r4.setPadding(r1, r1, r1, r1);
            goto L_0x0090;
        L_0x0048:
            r2 = 1;
            r2 = new java.lang.Object[r2];
            r0 = java.lang.Integer.valueOf(r0);
            r2[r1] = r0;
            r0 = "%d";
            r0 = java.lang.String.format(r0, r2);
            r4.currentCounterString = r0;
            r0 = r4.textPaint;
            r2 = r4.currentCounterString;
            r0 = r0.measureText(r2);
            r2 = (double) r0;
            r2 = java.lang.Math.ceil(r2);
            r0 = (int) r2;
            r4.textWidth = r0;
            r0 = NUM; // 0x41a00000 float:20.0 double:5.439686476E-315;
            r0 = org.telegram.messenger.AndroidUtilities.dp(r0);
            r2 = NUM; // 0x41400000 float:12.0 double:5.408602553E-315;
            r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
            r3 = r4.textWidth;
            r2 = r2 + r3;
            r0 = java.lang.Math.max(r0, r2);
            r2 = r4.circleWidth;
            if (r2 == r0) goto L_0x0090;
        L_0x0080:
            r4.circleWidth = r0;
            r0 = r4.circleWidth;
            r0 = r0 / 2;
            r2 = NUM; // 0x40e00000 float:7.0 double:5.37751863E-315;
            r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
            r0 = r0 + r2;
            r4.setPadding(r1, r1, r0, r1);
        L_0x0090:
            r4.invalidate();
        L_0x0093:
            return;
            */
            throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity$UnreadCounterTextView.updateCounter():void");
        }

        /* Access modifiers changed, original: protected */
        public void onDraw(Canvas canvas) {
            super.onDraw(canvas);
            if (this.currentCounterString != null) {
                Layout layout = getLayout();
                if (layout != null && getLineCount() > 0) {
                    int measuredWidth = ((getMeasuredWidth() + (((int) Math.ceil((double) layout.getLineWidth(0))) - this.circleWidth)) / 2) + AndroidUtilities.dp(8.0f);
                    this.rect.set((float) measuredWidth, (float) ((getMeasuredHeight() / 2) - AndroidUtilities.dp(10.0f)), (float) (measuredWidth + this.circleWidth), (float) ((getMeasuredHeight() / 2) + AndroidUtilities.dp(10.0f)));
                    canvas.drawRoundRect(this.rect, (float) AndroidUtilities.dp(10.0f), (float) AndroidUtilities.dp(10.0f), this.paint);
                    canvas.drawText(this.currentCounterString, this.rect.centerX() - (((float) this.textWidth) / 2.0f), this.rect.top + ((float) AndroidUtilities.dp(14.5f)), this.textPaint);
                }
            }
        }
    }

    public class ChatScrollCallback extends AnimationCallback {
        private boolean lastBottom;
        private int lastItemOffset;
        private MessageObject scrollTo;

        public void onEndAnimation() {
            if (this.scrollTo != null) {
                ChatActivity.this.chatAdapter.updateRows();
                int indexOf = ChatActivity.this.chatAdapter.messagesStartRow + ChatActivity.this.messages.indexOf(this.scrollTo);
                if (indexOf >= 0) {
                    ChatActivity.this.chatLayoutManager.scrollToPositionWithOffset(indexOf, this.lastItemOffset, this.lastBottom);
                }
            }
            this.scrollTo = null;
            int i = 1;
            ChatActivity.this.checkTextureViewPosition = true;
            OnScrollListener onScrollListener = ChatActivity.this.chatListView.getOnScrollListener();
            RecyclerListView access$100 = ChatActivity.this.chatListView;
            if (ChatActivity.this.chatScrollHelper.getScrollDirection() != 0) {
                i = -1;
            }
            onScrollListener.onScrolled(access$100, 0, i);
        }
    }

    public class ChatActivityAdapter extends AnimatableAdapter {
        private int botInfoRow = -1;
        private boolean isBot;
        private int loadingDownRow;
        private int loadingUpRow;
        private Context mContext;
        private int messagesEndRow;
        public int messagesStartRow;
        private int rowCount;

        public long getItemId(int i) {
            return -1;
        }

        public boolean isEnabled(ViewHolder viewHolder) {
            return false;
        }

        public ChatActivityAdapter(Context context) {
            this.mContext = context;
            User user = ChatActivity.this.currentUser;
            boolean z = user != null && user.bot;
            this.isBot = z;
        }

        public void updateRows() {
            this.rowCount = 0;
            int i;
            if (ChatActivity.this.messages.isEmpty()) {
                this.loadingUpRow = -1;
                this.loadingDownRow = -1;
                this.messagesStartRow = -1;
                this.messagesEndRow = -1;
                User user = ChatActivity.this.currentUser;
                if (user == null || !user.bot || MessagesController.isSupportUser(user) || ChatActivity.this.inScheduleMode) {
                    this.botInfoRow = -1;
                    return;
                }
                i = this.rowCount;
                this.rowCount = i + 1;
                this.botInfoRow = i;
                return;
            }
            int i2;
            if (ChatActivity.this.forwardEndReached[0] && (ChatActivity.this.mergeDialogId == 0 || ChatActivity.this.forwardEndReached[1])) {
                this.loadingDownRow = -1;
            } else {
                i2 = this.rowCount;
                this.rowCount = i2 + 1;
                this.loadingDownRow = i2;
            }
            i2 = this.rowCount;
            this.messagesStartRow = i2;
            this.rowCount = i2 + ChatActivity.this.messages.size();
            this.messagesEndRow = this.rowCount;
            ChatActivity chatActivity = ChatActivity.this;
            User user2 = chatActivity.currentUser;
            if (user2 == null || !user2.bot || chatActivity.inScheduleMode) {
                this.botInfoRow = -1;
            } else {
                i2 = this.rowCount;
                this.rowCount = i2 + 1;
                this.botInfoRow = i2;
            }
            if (ChatActivity.this.endReached[0] && (ChatActivity.this.mergeDialogId == 0 || ChatActivity.this.endReached[1])) {
                this.loadingUpRow = -1;
                return;
            }
            i = this.rowCount;
            this.rowCount = i + 1;
            this.loadingUpRow = i;
        }

        public int getItemCount() {
            return ChatActivity.this.clearingHistory ? 0 : this.rowCount;
        }

        public ViewHolder onCreateViewHolder(ViewGroup viewGroup, int i) {
            View chatMessageCell;
            if (i == 0) {
                if (ChatActivity.this.chatMessageCellsCache.isEmpty()) {
                    chatMessageCell = new ChatMessageCell(this.mContext);
                } else {
                    chatMessageCell = (View) ChatActivity.this.chatMessageCellsCache.get(0);
                    ChatActivity.this.chatMessageCellsCache.remove(0);
                }
                ChatMessageCell chatMessageCell2 = (ChatMessageCell) chatMessageCell;
                chatMessageCell2.setDelegate(new ChatMessageCellDelegate() {
                    public void didPressShare(ChatMessageCell chatMessageCell) {
                        if (ChatActivity.this.getParentActivity() != null) {
                            ChatActivityEnterView chatActivityEnterView = ChatActivity.this.chatActivityEnterView;
                            if (chatActivityEnterView != null) {
                                chatActivityEnterView.closeKeyboard();
                            }
                            MessageObject messageObject = chatMessageCell.getMessageObject();
                            if (!UserObject.isUserSelf(ChatActivity.this.currentUser) || messageObject.messageOwner.fwd_from.saved_from_peer == null) {
                                ArrayList arrayList = null;
                                if (messageObject.getGroupId() != 0) {
                                    GroupedMessages groupedMessages = (GroupedMessages) ChatActivity.this.groupedMessagesMap.get(messageObject.getGroupId());
                                    if (groupedMessages != null) {
                                        arrayList = groupedMessages.messages;
                                    }
                                }
                                if (arrayList == null) {
                                    arrayList = new ArrayList();
                                    arrayList.add(messageObject);
                                }
                                ArrayList arrayList2 = arrayList;
                                ChatActivityAdapter chatActivityAdapter = ChatActivityAdapter.this;
                                ChatActivity.this.showDialog(new ShareAlert(chatActivityAdapter.mContext, arrayList2, null, ChatObject.isChannel(ChatActivity.this.currentChat), null, false) {
                                    public void dismissInternal() {
                                        super.dismissInternal();
                                        AndroidUtilities.requestAdjustResize(ChatActivity.this.getParentActivity(), ChatActivity.this.classGuid);
                                        if (ChatActivity.this.chatActivityEnterView.getVisibility() == 0) {
                                            ChatActivity.this.fragmentView.requestLayout();
                                        }
                                    }
                                });
                                AndroidUtilities.setAdjustResizeToNothing(ChatActivity.this.getParentActivity(), ChatActivity.this.classGuid);
                                ChatActivity.this.fragmentView.requestLayout();
                            } else {
                                Bundle bundle = new Bundle();
                                Peer peer = messageObject.messageOwner.fwd_from.saved_from_peer;
                                int i = peer.channel_id;
                                String str = "chat_id";
                                if (i != 0) {
                                    bundle.putInt(str, i);
                                } else {
                                    i = peer.chat_id;
                                    if (i != 0) {
                                        bundle.putInt(str, i);
                                    } else {
                                        int i2 = peer.user_id;
                                        if (i2 != 0) {
                                            bundle.putInt("user_id", i2);
                                        }
                                    }
                                }
                                bundle.putInt("message_id", messageObject.messageOwner.fwd_from.saved_from_msg_id);
                                if (ChatActivity.this.getMessagesController().checkCanOpenChat(bundle, ChatActivity.this)) {
                                    ChatActivity.this.presentFragment(new ChatActivity(bundle));
                                }
                            }
                        }
                    }

                    public boolean needPlayMessage(MessageObject messageObject) {
                        if (messageObject.isVoice() || messageObject.isRoundVideo()) {
                            boolean playMessage = MediaController.getInstance().playMessage(messageObject);
                            MediaController.getInstance().setVoiceMessagesPlaylist(playMessage ? ChatActivity.this.createVoiceMessagesPlaylist(messageObject, false) : null, false);
                            return playMessage;
                        } else if (messageObject.isMusic()) {
                            return MediaController.getInstance().setPlaylist(ChatActivity.this.messages, messageObject);
                        } else {
                            return false;
                        }
                    }

                    public void videoTimerReached() {
                        ChatActivity.this.showNoSoundHint();
                    }

                    public void didPressChannelAvatar(ChatMessageCell chatMessageCell, Chat chat, int i, float f, float f2) {
                        if (ChatActivity.this.actionBar.isActionModeShowed()) {
                            ChatActivity.this.processRowSelect(chatMessageCell, true, f, f2);
                            return;
                        }
                        if (!(chat == null || chat == ChatActivity.this.currentChat)) {
                            Bundle bundle = new Bundle();
                            bundle.putInt("chat_id", chat.id);
                            if (i != 0) {
                                bundle.putInt("message_id", i);
                            }
                            if (ChatActivity.this.getMessagesController().checkCanOpenChat(bundle, ChatActivity.this, chatMessageCell.getMessageObject())) {
                                ChatActivity.this.presentFragment(new ChatActivity(bundle));
                            }
                        }
                    }

                    public void didPressHiddenForward(ChatMessageCell chatMessageCell) {
                        ChatActivity.this.showForwardHint(chatMessageCell);
                    }

                    public void didPressOther(ChatMessageCell chatMessageCell, float f, float f2) {
                        if (chatMessageCell.getMessageObject().type == 16) {
                            ChatActivity chatActivity = ChatActivity.this;
                            User user = chatActivity.currentUser;
                            if (user != null) {
                                VoIPHelper.startCall(user, chatActivity.getParentActivity(), ChatActivity.this.getMessagesController().getUserFull(ChatActivity.this.currentUser.id));
                                return;
                            }
                            return;
                        }
                        ChatActivity.this.createMenu(chatMessageCell, true, false, f, f2, false);
                    }

                    public void didPressUserAvatar(ChatMessageCell chatMessageCell, User user, float f, float f2) {
                        boolean z = true;
                        if (ChatActivity.this.actionBar.isActionModeShowed()) {
                            ChatActivity.this.processRowSelect(chatMessageCell, true, f, f2);
                            return;
                        }
                        if (!(user == null || user.id == ChatActivity.this.getUserConfig().getClientUserId())) {
                            Bundle bundle = new Bundle();
                            bundle.putInt("user_id", user.id);
                            ProfileActivity profileActivity = new ProfileActivity(bundle);
                            User user2 = ChatActivity.this.currentUser;
                            if (user2 == null || user2.id != user.id) {
                                z = false;
                            }
                            profileActivity.setPlayProfileAnimation(z);
                            ChatActivity.this.presentFragment(profileActivity);
                        }
                    }

                    public void didPressBotButton(ChatMessageCell chatMessageCell, KeyboardButton keyboardButton) {
                        if (ChatActivity.this.getParentActivity() == null) {
                            return;
                        }
                        if (ChatActivity.this.bottomOverlayChat.getVisibility() != 0 || (keyboardButton instanceof TL_keyboardButtonSwitchInline) || (keyboardButton instanceof TL_keyboardButtonCallback) || (keyboardButton instanceof TL_keyboardButtonGame) || (keyboardButton instanceof TL_keyboardButtonUrl) || (keyboardButton instanceof TL_keyboardButtonBuy) || (keyboardButton instanceof TL_keyboardButtonUrlAuth)) {
                            ChatActivity.this.chatActivityEnterView.didPressedBotButton(keyboardButton, chatMessageCell.getMessageObject(), chatMessageCell.getMessageObject());
                        }
                    }

                    public void didPressReaction(ChatMessageCell chatMessageCell, TL_reactionCount tL_reactionCount) {
                        ChatActivity.this.getSendMessagesHelper().sendReaction(chatMessageCell.getMessageObject(), tL_reactionCount.reaction, ChatActivity.this);
                    }

                    public void didPressVoteButton(ChatMessageCell chatMessageCell, TL_pollAnswer tL_pollAnswer) {
                        ChatActivity.this.getSendMessagesHelper().sendVote(chatMessageCell.getMessageObject(), tL_pollAnswer, null);
                    }

                    public void didPressCancelSendButton(ChatMessageCell chatMessageCell) {
                        MessageObject messageObject = chatMessageCell.getMessageObject();
                        if (messageObject.messageOwner.send_state != 0) {
                            ChatActivity.this.getSendMessagesHelper().cancelSendingMessage(messageObject);
                        }
                    }

                    public void didLongPress(ChatMessageCell chatMessageCell, float f, float f2) {
                        ChatActivity.this.createMenu(chatMessageCell, false, false, f, f2);
                    }

                    public boolean canPerformActions() {
                        return (ChatActivity.this.actionBar == null || ChatActivity.this.actionBar.isActionModeShowed()) ? false : true;
                    }

                    public void didPressUrl(ChatMessageCell chatMessageCell, CharacterStyle characterStyle, boolean z) {
                        CharacterStyle characterStyle2 = characterStyle;
                        boolean z2 = z;
                        if (!(characterStyle2 == null || ChatActivity.this.getParentActivity() == null)) {
                            MessageObject messageObject = chatMessageCell.getMessageObject();
                            if (characterStyle2 instanceof URLSpanMono) {
                                ((URLSpanMono) characterStyle2).copyToClipboard();
                                Toast.makeText(ChatActivity.this.getParentActivity(), LocaleController.getString("TextCopied", NUM), 0).show();
                            } else {
                                ChatMessageCell chatMessageCell2 = null;
                                if (characterStyle2 instanceof URLSpanUserMention) {
                                    User user = ChatActivity.this.getMessagesController().getUser(Utilities.parseInt(((URLSpanUserMention) characterStyle2).getURL()));
                                    if (user != null) {
                                        MessagesController.openChatOrProfileWith(user, null, ChatActivity.this, 0, false);
                                    }
                                } else {
                                    String str = "Copy";
                                    String str2 = "Open";
                                    boolean z3 = true;
                                    String url;
                                    if (characterStyle2 instanceof URLSpanNoUnderline) {
                                        url = ((URLSpanNoUnderline) characterStyle2).getURL();
                                        if (ChatActivity.isClickableLink(url)) {
                                            if (z2) {
                                                Builder builder = new Builder(ChatActivity.this.getParentActivity());
                                                builder.setTitle(url);
                                                builder.setItems(new CharSequence[]{LocaleController.getString(str2, NUM), LocaleController.getString(str, NUM)}, new -$$Lambda$ChatActivity$ChatActivityAdapter$1$mvBU2f0l49KzASBTxcsB_CaLwnI(this, url));
                                                ChatActivity.this.showDialog(builder.create());
                                            } else {
                                                openClickableLink(url);
                                            }
                                        } else if (url.startsWith("/")) {
                                            if (URLSpanBotCommand.enabled) {
                                                ChatActivity chatActivity = ChatActivity.this;
                                                ChatActivityEnterView chatActivityEnterView = chatActivity.chatActivityEnterView;
                                                Chat chat = chatActivity.currentChat;
                                                if (chat == null || !chat.megagroup) {
                                                    z3 = false;
                                                }
                                                chatActivityEnterView.setCommand(messageObject, url, z2, z3);
                                                if (!z2 && ChatActivity.this.chatActivityEnterView.getFieldText() == null) {
                                                    ChatActivity.this.hideFieldPanel(false);
                                                }
                                            }
                                        } else if (url.startsWith("video")) {
                                            WebPage webPage;
                                            int intValue = Utilities.parseInt(url).intValue();
                                            if (messageObject.isYouTubeVideo()) {
                                                webPage = messageObject.messageOwner.media.webpage;
                                            } else {
                                                MessageObject messageObject2 = messageObject.replyMessageObject;
                                                webPage = (messageObject2 == null || !messageObject2.isYouTubeVideo()) ? null : messageObject.replyMessageObject.messageOwner.media.webpage;
                                            }
                                            if (webPage != null) {
                                                EmbedBottomSheet.show(ChatActivityAdapter.this.mContext, webPage.site_name, webPage.title, webPage.url, webPage.embed_url, webPage.embed_width, webPage.embed_height, intValue);
                                            } else {
                                                if (messageObject.isVideo() || messageObject.replyMessageObject == null) {
                                                    chatMessageCell2 = chatMessageCell;
                                                } else {
                                                    int i;
                                                    SparseArray[] access$3200 = ChatActivity.this.messagesDict;
                                                    if (messageObject.replyMessageObject.getDialogId() == ChatActivity.this.dialog_id) {
                                                        i = 0;
                                                    }
                                                    messageObject = (MessageObject) access$3200[i].get(messageObject.replyMessageObject.getId());
                                                }
                                                messageObject.forceSeekTo = ((float) intValue) / ((float) messageObject.getDuration());
                                                openPhotoViewerForMessage(chatMessageCell2, messageObject);
                                            }
                                        }
                                    } else {
                                        String url2 = ((URLSpan) characterStyle2).getURL();
                                        if (z2) {
                                            Builder builder2 = new Builder(ChatActivity.this.getParentActivity());
                                            builder2.setTitle(url2);
                                            builder2.setItems(new CharSequence[]{LocaleController.getString(str2, NUM), LocaleController.getString(str, NUM)}, new -$$Lambda$ChatActivity$ChatActivityAdapter$1$PQUAU82GV4yYs4_Ri00P3NgllDc(this, url2));
                                            ChatActivity.this.showDialog(builder2.create());
                                        } else if (!(characterStyle2 instanceof URLSpanReplacement) || (url2 != null && url2.startsWith("mailto:"))) {
                                            if (characterStyle2 instanceof URLSpan) {
                                                MessageMedia messageMedia = messageObject.messageOwner.media;
                                                if (messageMedia instanceof TL_messageMediaWebPage) {
                                                    WebPage webPage2 = messageMedia.webpage;
                                                    if (!(webPage2 == null || webPage2.cached_page == null)) {
                                                        url = url2.toLowerCase();
                                                        String toLowerCase = messageObject.messageOwner.media.webpage.url.toLowerCase();
                                                        if ((url.contains("telegram.org/blog") || url.contains("telegra.ph") || url.contains("t.me/iv")) && (url.contains(toLowerCase) || toLowerCase.contains(url))) {
                                                            ArticleViewer.getInstance().setParentActivity(ChatActivity.this.getParentActivity(), ChatActivity.this);
                                                            ArticleViewer.getInstance().open(messageObject);
                                                            return;
                                                        }
                                                    }
                                                }
                                                if (!ChatActivity.this.openLinkInternally(url2, chatMessageCell.getMessageObject().getId())) {
                                                    Context parentActivity = ChatActivity.this.getParentActivity();
                                                    if (ChatActivity.this.inlineReturn != 0) {
                                                        z3 = false;
                                                    }
                                                    Browser.openUrl(parentActivity, url2, z3);
                                                }
                                            } else if (characterStyle2 instanceof ClickableSpan) {
                                                ((ClickableSpan) characterStyle2).onClick(ChatActivity.this.fragmentView);
                                            }
                                        } else if (!ChatActivity.this.openLinkInternally(url2, chatMessageCell.getMessageObject().getId())) {
                                            ChatActivity.this.showOpenUrlAlert(url2, true);
                                        }
                                    }
                                }
                            }
                        }
                    }

                    public /* synthetic */ void lambda$didPressUrl$0$ChatActivity$ChatActivityAdapter$1(String str, DialogInterface dialogInterface, int i) {
                        if (i == 0) {
                            openClickableLink(str);
                        } else if (i == 1) {
                            AndroidUtilities.addToClipboard(str);
                        }
                    }

                    public /* synthetic */ void lambda$didPressUrl$1$ChatActivity$ChatActivityAdapter$1(String str, DialogInterface dialogInterface, int i) {
                        boolean z = true;
                        if (i == 0) {
                            Context parentActivity = ChatActivity.this.getParentActivity();
                            if (ChatActivity.this.inlineReturn != 0) {
                                z = false;
                            }
                            Browser.openUrl(parentActivity, str, z, false);
                        } else if (i == 1) {
                            CharSequence str2;
                            if (str2.startsWith("mailto:")) {
                                str2 = str2.substring(7);
                            } else if (str2.startsWith("tel:")) {
                                str2 = str2.substring(4);
                            }
                            AndroidUtilities.addToClipboard(str2);
                        }
                    }

                    private void openClickableLink(String str) {
                        if (str.startsWith("@")) {
                            User user;
                            str = str.substring(1).toLowerCase();
                            Chat chat = ChatActivity.this.currentChat;
                            if (chat == null || TextUtils.isEmpty(chat.username) || !str.equals(ChatActivity.this.currentChat.username.toLowerCase())) {
                                user = ChatActivity.this.currentUser;
                                if (user == null || TextUtils.isEmpty(user.username) || !str.equals(ChatActivity.this.currentUser.username.toLowerCase())) {
                                    MessagesController.getInstance(ChatActivity.this.currentAccount).openByUserName(str, ChatActivity.this, 0);
                                    return;
                                }
                            }
                            Bundle bundle = new Bundle();
                            ChatActivity chatActivity = ChatActivity.this;
                            Chat chat2 = chatActivity.currentChat;
                            if (chat2 != null) {
                                bundle.putInt("chat_id", chat2.id);
                            } else {
                                user = chatActivity.currentUser;
                                if (user != null) {
                                    bundle.putInt("user_id", user.id);
                                    chatActivity = ChatActivity.this;
                                    if (chatActivity.currentEncryptedChat != null) {
                                        bundle.putLong("dialog_id", chatActivity.dialog_id);
                                    }
                                }
                            }
                            ProfileActivity profileActivity = new ProfileActivity(bundle);
                            profileActivity.setPlayProfileAnimation(true);
                            profileActivity.setChatInfo(ChatActivity.this.chatInfo);
                            profileActivity.setUserInfo(ChatActivity.this.userInfo);
                            ChatActivity.this.presentFragment(profileActivity);
                        } else if (!str.startsWith("#") && !str.startsWith("$")) {
                            Browser.openUrl(ChatActivity.this.getParentActivity(), str);
                        } else if (ChatObject.isChannel(ChatActivity.this.currentChat)) {
                            ChatActivity.this.openSearchWithText(str);
                        } else {
                            DialogsActivity dialogsActivity = new DialogsActivity(null);
                            dialogsActivity.setSearchString(str);
                            ChatActivity.this.presentFragment(dialogsActivity);
                        }
                    }

                    public void needOpenWebView(String str, String str2, String str3, String str4, int i, int i2) {
                        try {
                            EmbedBottomSheet.show(ChatActivityAdapter.this.mContext, str2, str3, str4, str, i, i2);
                        } catch (Throwable th) {
                            FileLog.e(th);
                        }
                    }

                    public void didPressReplyMessage(ChatMessageCell chatMessageCell, int i) {
                        MessageObject messageObject = chatMessageCell.getMessageObject();
                        if (ChatActivity.this.inScheduleMode) {
                            ChatActivity.this.chatActivityDelegate.openReplyMessage(i);
                            ChatActivity.this.finishFragment();
                            return;
                        }
                        ChatActivity.this.scrollToMessageId(i, messageObject.getId(), true, messageObject.getDialogId() == ChatActivity.this.mergeDialogId ? 1 : 0, true);
                    }

                    /* JADX WARNING: Missing block: B:8:0x0030, code skipped:
            return;
     */
                    public void didPressViaBot(org.telegram.ui.Cells.ChatMessageCell r3, java.lang.String r4) {
                        /*
                        r2 = this;
                        r3 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r3 = org.telegram.ui.ChatActivity.this;
                        r3 = r3.bottomOverlayChat;
                        if (r3 == 0) goto L_0x0018;
                    L_0x000a:
                        r3 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r3 = org.telegram.ui.ChatActivity.this;
                        r3 = r3.bottomOverlayChat;
                        r3 = r3.getVisibility();
                        if (r3 == 0) goto L_0x0030;
                    L_0x0018:
                        r3 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r3 = org.telegram.ui.ChatActivity.this;
                        r3 = r3.bottomOverlay;
                        if (r3 == 0) goto L_0x0031;
                    L_0x0022:
                        r3 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r3 = org.telegram.ui.ChatActivity.this;
                        r3 = r3.bottomOverlay;
                        r3 = r3.getVisibility();
                        if (r3 != 0) goto L_0x0031;
                    L_0x0030:
                        return;
                    L_0x0031:
                        r3 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r3 = org.telegram.ui.ChatActivity.this;
                        r3 = r3.chatActivityEnterView;
                        if (r3 == 0) goto L_0x0069;
                    L_0x0039:
                        if (r4 == 0) goto L_0x0069;
                    L_0x003b:
                        r3 = r4.length();
                        if (r3 <= 0) goto L_0x0069;
                    L_0x0041:
                        r3 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r3 = org.telegram.ui.ChatActivity.this;
                        r3 = r3.chatActivityEnterView;
                        r0 = new java.lang.StringBuilder;
                        r0.<init>();
                        r1 = "@";
                        r0.append(r1);
                        r0.append(r4);
                        r4 = " ";
                        r0.append(r4);
                        r4 = r0.toString();
                        r3.setFieldText(r4);
                        r3 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r3 = org.telegram.ui.ChatActivity.this;
                        r3 = r3.chatActivityEnterView;
                        r3.openKeyboard();
                    L_0x0069:
                        return;
                        */
                        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity$ChatActivityAdapter$AnonymousClass1.didPressViaBot(org.telegram.ui.Cells.ChatMessageCell, java.lang.String):void");
                    }

                    public void didStartVideoStream(MessageObject messageObject) {
                        if (messageObject.isVideo()) {
                            ChatActivity.this.sendSecretMessageRead(messageObject);
                        }
                    }

                    /* Access modifiers changed, original: 0000 */
                    public void openPhotoViewerForMessage(ChatMessageCell chatMessageCell, MessageObject messageObject) {
                        int childCount;
                        int i;
                        ChatMessageCell chatMessageCell2;
                        MessageObject messageObject2 = messageObject;
                        if (chatMessageCell == null) {
                            childCount = ChatActivity.this.chatListView.getChildCount();
                            for (i = 0; i < childCount; i++) {
                                View childAt = ChatActivity.this.chatListView.getChildAt(i);
                                if (childAt instanceof ChatMessageCell) {
                                    chatMessageCell2 = (ChatMessageCell) childAt;
                                    if (chatMessageCell2.getMessageObject().equals(messageObject2)) {
                                        break;
                                    }
                                }
                            }
                        }
                        chatMessageCell2 = chatMessageCell;
                        if (messageObject.isVideo()) {
                            ChatActivity.this.sendSecretMessageRead(messageObject2);
                        }
                        PhotoViewer.getInstance().setParentActivity(ChatActivity.this.getParentActivity());
                        MessageObject playingMessageObject = MediaController.getInstance().getPlayingMessageObject();
                        if (!(chatMessageCell2 == null || playingMessageObject == null || !playingMessageObject.isVideo())) {
                            ChatActivity.this.getFileLoader().setLoadingVideoForPlayer(playingMessageObject.getDocument(), false);
                            if (playingMessageObject.equals(messageObject2)) {
                                AnimatedFileDrawable animation = chatMessageCell2.getPhotoImage().getAnimation();
                                if (!(animation == null || ChatActivity.this.videoTextureView == null || ChatActivity.this.videoPlayerContainer.getTag() == null)) {
                                    Bitmap animatedBitmap = animation.getAnimatedBitmap();
                                    if (animatedBitmap != null) {
                                        try {
                                            Bitmap bitmap = ChatActivity.this.videoTextureView.getBitmap(animatedBitmap.getWidth(), animatedBitmap.getHeight());
                                            new Canvas(animatedBitmap).drawBitmap(bitmap, 0.0f, 0.0f, null);
                                            bitmap.recycle();
                                        } catch (Throwable th) {
                                            FileLog.e(th);
                                        }
                                    }
                                }
                            }
                            MediaController.getInstance().cleanupPlayer(true, true, false, playingMessageObject.equals(messageObject2));
                        }
                        if (ChatActivity.this.inScheduleMode && (messageObject.isVideo() || messageObject2.type == 1)) {
                            PhotoViewer.getInstance().setParentChatActivity(ChatActivity.this);
                            ArrayList arrayList = new ArrayList();
                            childCount = ChatActivity.this.messages.size();
                            for (i = 0; i < childCount; i++) {
                                MessageObject messageObject3 = (MessageObject) ChatActivity.this.messages.get(i);
                                if (messageObject3.isVideo() || messageObject3.type == 1) {
                                    arrayList.add(0, messageObject3);
                                }
                            }
                            PhotoViewer.getInstance().openPhoto(arrayList, arrayList.indexOf(messageObject2), ChatActivity.this.dialog_id, 0, ChatActivity.this.photoViewerProvider);
                        } else {
                            PhotoViewer instance = PhotoViewer.getInstance();
                            long j = 0;
                            long access$2600 = messageObject2.type != 0 ? ChatActivity.this.dialog_id : 0;
                            if (messageObject2.type != 0) {
                                j = ChatActivity.this.mergeDialogId;
                            }
                            if (instance.openPhoto(messageObject, access$2600, j, ChatActivity.this.photoViewerProvider)) {
                                PhotoViewer.getInstance().setParentChatActivity(ChatActivity.this);
                            }
                        }
                        ChatActivity.this.hideHints();
                        MediaController.getInstance().resetGoingToShowMessageObject();
                    }

                    /* JADX WARNING: Missing block: B:73:0x0190, code skipped:
            if (r9.exists() != false) goto L_0x0194;
     */
                    public void didPressImage(org.telegram.ui.Cells.ChatMessageCell r9, float r10, float r11) {
                        /*
                        r8 = this;
                        r7 = r9.getMessageObject();
                        r0 = r7.isSendError();
                        if (r0 == 0) goto L_0x0017;
                    L_0x000a:
                        r0 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r1 = org.telegram.ui.ChatActivity.this;
                        r3 = 0;
                        r4 = 0;
                        r2 = r9;
                        r5 = r10;
                        r6 = r11;
                        r1.createMenu(r2, r3, r4, r5, r6);
                        return;
                    L_0x0017:
                        r10 = r7.isSending();
                        if (r10 == 0) goto L_0x001e;
                    L_0x001d:
                        return;
                    L_0x001e:
                        r10 = r7.isAnimatedEmoji();
                        if (r10 == 0) goto L_0x002d;
                    L_0x0024:
                        r10 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r10 = org.telegram.ui.ChatActivity.this;
                        r10.restartSticker(r9);
                        goto L_0x0262;
                    L_0x002d:
                        r10 = r7.needDrawBluredPreview();
                        if (r10 == 0) goto L_0x0060;
                    L_0x0033:
                        r10 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r10 = org.telegram.ui.ChatActivity.this;
                        r10 = r10.sendSecretMessageRead(r7);
                        if (r10 == 0) goto L_0x0040;
                    L_0x003d:
                        r9.invalidate();
                    L_0x0040:
                        r9 = org.telegram.ui.SecretMediaViewer.getInstance();
                        r10 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r10 = org.telegram.ui.ChatActivity.this;
                        r10 = r10.getParentActivity();
                        r9.setParentActivity(r10);
                        r9 = org.telegram.ui.SecretMediaViewer.getInstance();
                        r10 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r10 = org.telegram.ui.ChatActivity.this;
                        r10 = r10.photoViewerProvider;
                        r9.openMedia(r7, r10);
                        goto L_0x0262;
                    L_0x0060:
                        r10 = r7.type;
                        r11 = 13;
                        r0 = 0;
                        if (r10 == r11) goto L_0x0225;
                    L_0x0067:
                        r11 = 15;
                        if (r10 != r11) goto L_0x006d;
                    L_0x006b:
                        goto L_0x0225;
                    L_0x006d:
                        r10 = r7.isVideo();
                        if (r10 != 0) goto L_0x0221;
                    L_0x0073:
                        r10 = r7.type;
                        r11 = 1;
                        if (r10 == r11) goto L_0x0221;
                    L_0x0078:
                        if (r10 != 0) goto L_0x0080;
                    L_0x007a:
                        r10 = r7.isWebpageDocument();
                        if (r10 == 0) goto L_0x0221;
                    L_0x0080:
                        r10 = r7.isGif();
                        if (r10 == 0) goto L_0x0088;
                    L_0x0086:
                        goto L_0x0221;
                    L_0x0088:
                        r9 = r7.type;
                        r10 = 3;
                        if (r9 != r10) goto L_0x0103;
                    L_0x008d:
                        r9 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r9 = org.telegram.ui.ChatActivity.this;
                        r9.sendSecretMessageRead(r7);
                        r9 = r7.messageOwner;	 Catch:{ Exception -> 0x00f6 }
                        r9 = r9.attachPath;	 Catch:{ Exception -> 0x00f6 }
                        if (r9 == 0) goto L_0x00ad;
                    L_0x009a:
                        r9 = r7.messageOwner;	 Catch:{ Exception -> 0x00f6 }
                        r9 = r9.attachPath;	 Catch:{ Exception -> 0x00f6 }
                        r9 = r9.length();	 Catch:{ Exception -> 0x00f6 }
                        if (r9 == 0) goto L_0x00ad;
                    L_0x00a4:
                        r0 = new java.io.File;	 Catch:{ Exception -> 0x00f6 }
                        r9 = r7.messageOwner;	 Catch:{ Exception -> 0x00f6 }
                        r9 = r9.attachPath;	 Catch:{ Exception -> 0x00f6 }
                        r0.<init>(r9);	 Catch:{ Exception -> 0x00f6 }
                    L_0x00ad:
                        if (r0 == 0) goto L_0x00b5;
                    L_0x00af:
                        r9 = r0.exists();	 Catch:{ Exception -> 0x00f6 }
                        if (r9 != 0) goto L_0x00bb;
                    L_0x00b5:
                        r9 = r7.messageOwner;	 Catch:{ Exception -> 0x00f6 }
                        r0 = org.telegram.messenger.FileLoader.getPathToMessage(r9);	 Catch:{ Exception -> 0x00f6 }
                    L_0x00bb:
                        r9 = new android.content.Intent;	 Catch:{ Exception -> 0x00f6 }
                        r10 = "android.intent.action.VIEW";
                        r9.<init>(r10);	 Catch:{ Exception -> 0x00f6 }
                        r10 = android.os.Build.VERSION.SDK_INT;	 Catch:{ Exception -> 0x00f6 }
                        r1 = 24;
                        r2 = "video/mp4";
                        if (r10 < r1) goto L_0x00e0;
                    L_0x00cb:
                        r9.setFlags(r11);	 Catch:{ Exception -> 0x00f6 }
                        r10 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;	 Catch:{ Exception -> 0x00f6 }
                        r10 = org.telegram.ui.ChatActivity.this;	 Catch:{ Exception -> 0x00f6 }
                        r10 = r10.getParentActivity();	 Catch:{ Exception -> 0x00f6 }
                        r11 = "org.telegram.messenger.beta.provider";
                        r10 = androidx.core.content.FileProvider.getUriForFile(r10, r11, r0);	 Catch:{ Exception -> 0x00f6 }
                        r9.setDataAndType(r10, r2);	 Catch:{ Exception -> 0x00f6 }
                        goto L_0x00e7;
                    L_0x00e0:
                        r10 = android.net.Uri.fromFile(r0);	 Catch:{ Exception -> 0x00f6 }
                        r9.setDataAndType(r10, r2);	 Catch:{ Exception -> 0x00f6 }
                    L_0x00e7:
                        r10 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;	 Catch:{ Exception -> 0x00f6 }
                        r10 = org.telegram.ui.ChatActivity.this;	 Catch:{ Exception -> 0x00f6 }
                        r10 = r10.getParentActivity();	 Catch:{ Exception -> 0x00f6 }
                        r11 = 500; // 0x1f4 float:7.0E-43 double:2.47E-321;
                        r10.startActivityForResult(r9, r11);	 Catch:{ Exception -> 0x00f6 }
                        goto L_0x0262;
                    L_0x00f6:
                        r9 = move-exception;
                        org.telegram.messenger.FileLog.e(r9);
                        r9 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r9 = org.telegram.ui.ChatActivity.this;
                        r9.alertUserOpenError(r7);
                        goto L_0x0262;
                    L_0x0103:
                        r1 = 4;
                        r2 = 0;
                        if (r9 != r1) goto L_0x0161;
                    L_0x0107:
                        r9 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r9 = org.telegram.ui.ChatActivity.this;
                        r9 = org.telegram.messenger.AndroidUtilities.isGoogleMapsInstalled(r9);
                        if (r9 != 0) goto L_0x0112;
                    L_0x0111:
                        return;
                    L_0x0112:
                        r9 = r7.isLiveLocation();
                        if (r9 == 0) goto L_0x0138;
                    L_0x0118:
                        r9 = new org.telegram.ui.LocationActivity;
                        r10 = 2;
                        r9.<init>(r10);
                        r10 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r10 = org.telegram.ui.ChatActivity.this;
                        r9.setDelegate(r10);
                        r9.setMessageObject(r7);
                        r10 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r10 = org.telegram.ui.ChatActivity.this;
                        r9.setDelegate(r10);
                        r10 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r10 = org.telegram.ui.ChatActivity.this;
                        r10.presentFragment(r9);
                        goto L_0x0262;
                    L_0x0138:
                        r9 = new org.telegram.ui.LocationActivity;
                        r11 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r11 = org.telegram.ui.ChatActivity.this;
                        r11 = r11.currentEncryptedChat;
                        if (r11 != 0) goto L_0x0143;
                    L_0x0142:
                        goto L_0x0144;
                    L_0x0143:
                        r10 = 0;
                    L_0x0144:
                        r9.<init>(r10);
                        r10 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r10 = org.telegram.ui.ChatActivity.this;
                        r9.setDelegate(r10);
                        r9.setMessageObject(r7);
                        r10 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r10 = org.telegram.ui.ChatActivity.this;
                        r9.setDelegate(r10);
                        r10 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r10 = org.telegram.ui.ChatActivity.this;
                        r10.presentFragment(r9);
                        goto L_0x0262;
                    L_0x0161:
                        r10 = 9;
                        if (r9 == r10) goto L_0x0167;
                    L_0x0165:
                        if (r9 != 0) goto L_0x0262;
                    L_0x0167:
                        r9 = r7.getDocumentName();
                        r9 = r9.toLowerCase();
                        r10 = "attheme";
                        r9 = r9.endsWith(r10);
                        if (r9 == 0) goto L_0x01c2;
                    L_0x0177:
                        r9 = r7.messageOwner;
                        r9 = r9.attachPath;
                        if (r9 == 0) goto L_0x0193;
                    L_0x017d:
                        r9 = r9.length();
                        if (r9 == 0) goto L_0x0193;
                    L_0x0183:
                        r9 = new java.io.File;
                        r10 = r7.messageOwner;
                        r10 = r10.attachPath;
                        r9.<init>(r10);
                        r10 = r9.exists();
                        if (r10 == 0) goto L_0x0193;
                    L_0x0192:
                        goto L_0x0194;
                    L_0x0193:
                        r9 = r0;
                    L_0x0194:
                        if (r9 != 0) goto L_0x01a3;
                    L_0x0196:
                        r10 = r7.messageOwner;
                        r10 = org.telegram.messenger.FileLoader.getPathToMessage(r10);
                        r1 = r10.exists();
                        if (r1 == 0) goto L_0x01a3;
                    L_0x01a2:
                        r9 = r10;
                    L_0x01a3:
                        r10 = r7.getDocumentName();
                        r9 = org.telegram.ui.ActionBar.Theme.applyThemeFile(r9, r10, r0, r11);
                        if (r9 == 0) goto L_0x01ba;
                    L_0x01ad:
                        r10 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r10 = org.telegram.ui.ChatActivity.this;
                        r11 = new org.telegram.ui.ThemePreviewActivity;
                        r11.<init>(r9);
                        r10.presentFragment(r11);
                        return;
                    L_0x01ba:
                        r9 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r9 = org.telegram.ui.ChatActivity.this;
                        r10 = -1;
                        r9.scrollToPositionOnRecreate = r10;
                    L_0x01c2:
                        r9 = r7.canPreviewDocument();
                        if (r9 == 0) goto L_0x0206;
                    L_0x01c8:
                        r9 = org.telegram.ui.PhotoViewer.getInstance();
                        r10 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r10 = org.telegram.ui.ChatActivity.this;
                        r10 = r10.getParentActivity();
                        r9.setParentActivity(r10);
                        r0 = org.telegram.ui.PhotoViewer.getInstance();
                        r9 = r7.type;
                        r1 = 0;
                        if (r9 == 0) goto L_0x01ea;
                    L_0x01e1:
                        r9 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r9 = org.telegram.ui.ChatActivity.this;
                        r9 = r9.dialog_id;
                        goto L_0x01eb;
                    L_0x01ea:
                        r9 = r1;
                    L_0x01eb:
                        r3 = r7.type;
                        if (r3 == 0) goto L_0x01f7;
                    L_0x01ef:
                        r1 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r1 = org.telegram.ui.ChatActivity.this;
                        r1 = r1.mergeDialogId;
                    L_0x01f7:
                        r4 = r1;
                        r1 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r1 = org.telegram.ui.ChatActivity.this;
                        r6 = r1.photoViewerProvider;
                        r1 = r7;
                        r2 = r9;
                        r0.openPhoto(r1, r2, r4, r6);
                        goto L_0x0207;
                    L_0x0206:
                        r11 = 0;
                    L_0x0207:
                        if (r11 != 0) goto L_0x0262;
                    L_0x0209:
                        r9 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;	 Catch:{ Exception -> 0x0215 }
                        r9 = org.telegram.ui.ChatActivity.this;	 Catch:{ Exception -> 0x0215 }
                        r9 = r9.getParentActivity();	 Catch:{ Exception -> 0x0215 }
                        org.telegram.messenger.AndroidUtilities.openForView(r7, r9);	 Catch:{ Exception -> 0x0215 }
                        goto L_0x0262;
                    L_0x0215:
                        r9 = move-exception;
                        org.telegram.messenger.FileLog.e(r9);
                        r9 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r9 = org.telegram.ui.ChatActivity.this;
                        r9.alertUserOpenError(r7);
                        goto L_0x0262;
                    L_0x0221:
                        r8.openPhotoViewerForMessage(r9, r7);
                        goto L_0x0262;
                    L_0x0225:
                        r9 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r9 = org.telegram.ui.ChatActivity.this;
                        r10 = new org.telegram.ui.Components.StickersAlert;
                        r2 = r9.getParentActivity();
                        r11 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r3 = org.telegram.ui.ChatActivity.this;
                        r4 = r7.getInputStickerSet();
                        r5 = 0;
                        r11 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r11 = org.telegram.ui.ChatActivity.this;
                        r11 = r11.bottomOverlayChat;
                        r11 = r11.getVisibility();
                        if (r11 == 0) goto L_0x025a;
                    L_0x0246:
                        r11 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r11 = org.telegram.ui.ChatActivity.this;
                        r11 = r11.currentChat;
                        if (r11 == 0) goto L_0x0254;
                    L_0x024e:
                        r11 = org.telegram.messenger.ChatObject.canSendStickers(r11);
                        if (r11 == 0) goto L_0x025a;
                    L_0x0254:
                        r11 = org.telegram.ui.ChatActivity.ChatActivityAdapter.this;
                        r11 = org.telegram.ui.ChatActivity.this;
                        r0 = r11.chatActivityEnterView;
                    L_0x025a:
                        r6 = r0;
                        r1 = r10;
                        r1.<init>(r2, r3, r4, r5, r6);
                        r9.showDialog(r10);
                    L_0x0262:
                        return;
                        */
                        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity$ChatActivityAdapter$AnonymousClass1.didPressImage(org.telegram.ui.Cells.ChatMessageCell, float, float):void");
                    }

                    public void didPressInstantButton(ChatMessageCell chatMessageCell, int i) {
                        MessageObject messageObject = chatMessageCell.getMessageObject();
                        MessageMedia messageMedia;
                        WebPage webPage;
                        if (i == 0) {
                            messageMedia = messageObject.messageOwner.media;
                            if (messageMedia != null) {
                                webPage = messageMedia.webpage;
                                if (webPage != null && webPage.cached_page != null) {
                                    ArticleViewer.getInstance().setParentActivity(ChatActivity.this.getParentActivity(), ChatActivity.this);
                                    ArticleViewer.getInstance().open(messageObject);
                                }
                            }
                        } else if (i == 5) {
                            ChatActivity chatActivity = ChatActivity.this;
                            User user = chatActivity.getMessagesController().getUser(Integer.valueOf(messageObject.messageOwner.media.user_id));
                            MessageMedia messageMedia2 = messageObject.messageOwner.media;
                            chatActivity.openVCard(user, messageMedia2.vcard, messageMedia2.first_name, messageMedia2.last_name);
                        } else {
                            messageMedia = messageObject.messageOwner.media;
                            if (messageMedia != null) {
                                webPage = messageMedia.webpage;
                                if (webPage != null && !ChatActivity.this.openLinkInternally(webPage.url, messageObject.getId())) {
                                    Browser.openUrl(ChatActivity.this.getParentActivity(), messageObject.messageOwner.media.webpage.url);
                                }
                            }
                        }
                    }

                    public String getAdminRank(int i) {
                        if (ChatObject.isChannel(ChatActivity.this.currentChat)) {
                            ChatActivity chatActivity = ChatActivity.this;
                            if (chatActivity.currentChat.megagroup) {
                                return chatActivity.getMessagesController().getAdminRank(ChatActivity.this.currentChat.id, i);
                            }
                        }
                        return null;
                    }

                    public boolean shouldRepeatSticker(MessageObject messageObject) {
                        return ChatActivity.this.alredyPlayedStickers.containsKey(messageObject) ^ 1;
                    }

                    public void setShouldNotRepeatSticker(MessageObject messageObject) {
                        ChatActivity.this.alredyPlayedStickers.put(messageObject, Boolean.valueOf(true));
                    }

                    public ChatListTextSelectionHelper getTextSelectionHelper() {
                        return ChatActivity.this.textSelectionHelper;
                    }

                    public boolean hasSelectedMessages() {
                        return ChatActivity.this.selectedMessagesIds[0].size() + ChatActivity.this.selectedMessagesIds[1].size() > 0;
                    }
                });
                if (ChatActivity.this.currentEncryptedChat == null) {
                    chatMessageCell2.setAllowAssistant(true);
                }
            } else if (i == 1) {
                chatMessageCell = new ChatActionCell(this.mContext);
                chatMessageCell.setDelegate(new ChatActionCellDelegate() {
                    public void didClickImage(ChatActionCell chatActionCell) {
                        MessageObject messageObject = chatActionCell.getMessageObject();
                        PhotoViewer.getInstance().setParentActivity(ChatActivity.this.getParentActivity());
                        PhotoSize closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(messageObject.photoThumbs, 640);
                        if (closestPhotoSizeWithSize != null) {
                            PhotoViewer.getInstance().openPhoto(closestPhotoSizeWithSize.location, ImageLocation.getForPhoto(closestPhotoSizeWithSize, messageObject.messageOwner.action.photo), ChatActivity.this.photoViewerProvider);
                            return;
                        }
                        PhotoViewer.getInstance().openPhoto(messageObject, 0, 0, ChatActivity.this.photoViewerProvider);
                    }

                    public void didLongPress(ChatActionCell chatActionCell, float f, float f2) {
                        ChatActivity.this.createMenu(chatActionCell, false, false, f, f2);
                    }

                    public void needOpenUserProfile(int i) {
                        Bundle bundle;
                        if (i < 0) {
                            bundle = new Bundle();
                            bundle.putInt("chat_id", -i);
                            if (ChatActivity.this.getMessagesController().checkCanOpenChat(bundle, ChatActivity.this)) {
                                ChatActivity.this.presentFragment(new ChatActivity(bundle));
                            }
                        } else if (i != ChatActivity.this.getUserConfig().getClientUserId()) {
                            bundle = new Bundle();
                            bundle.putInt("user_id", i);
                            ChatActivity chatActivity = ChatActivity.this;
                            if (chatActivity.currentEncryptedChat != null && i == chatActivity.currentUser.id) {
                                bundle.putLong("dialog_id", chatActivity.dialog_id);
                            }
                            ProfileActivity profileActivity = new ProfileActivity(bundle);
                            User user = ChatActivity.this.currentUser;
                            boolean z = user != null && user.id == i;
                            profileActivity.setPlayProfileAnimation(z);
                            ChatActivity.this.presentFragment(profileActivity);
                        }
                    }

                    public void didPressReplyMessage(ChatActionCell chatActionCell, int i) {
                        MessageObject messageObject = chatActionCell.getMessageObject();
                        ChatActivity.this.scrollToMessageId(i, messageObject.getId(), true, messageObject.getDialogId() == ChatActivity.this.mergeDialogId ? 1 : 0, true);
                    }

                    public void didPressBotButton(MessageObject messageObject, KeyboardButton keyboardButton) {
                        if (ChatActivity.this.getParentActivity() == null) {
                            return;
                        }
                        if (ChatActivity.this.bottomOverlayChat.getVisibility() != 0 || (keyboardButton instanceof TL_keyboardButtonSwitchInline) || (keyboardButton instanceof TL_keyboardButtonCallback) || (keyboardButton instanceof TL_keyboardButtonGame) || (keyboardButton instanceof TL_keyboardButtonUrl) || (keyboardButton instanceof TL_keyboardButtonBuy) || (keyboardButton instanceof TL_keyboardButtonUrlAuth)) {
                            ChatActivity.this.chatActivityEnterView.didPressedBotButton(keyboardButton, messageObject, messageObject);
                        }
                    }
                });
            } else if (i == 2) {
                chatMessageCell = new ChatUnreadCell(this.mContext);
            } else if (i == 3) {
                chatMessageCell = new BotHelpCell(this.mContext);
                chatMessageCell.setDelegate(new -$$Lambda$ChatActivity$ChatActivityAdapter$XvP34CBh8veH5SfzBXUoiQ29tr8(this));
            } else {
                chatMessageCell = i == 4 ? new ChatLoadingCell(this.mContext) : null;
            }
            chatMessageCell.setLayoutParams(new LayoutParams(-1, -2));
            return new Holder(chatMessageCell);
        }

        public /* synthetic */ void lambda$onCreateViewHolder$0$ChatActivity$ChatActivityAdapter(String str) {
            if (str.startsWith("@")) {
                ChatActivity.this.getMessagesController().openByUserName(str.substring(1), ChatActivity.this, 0);
            } else if (str.startsWith("#") || str.startsWith("$")) {
                DialogsActivity dialogsActivity = new DialogsActivity(null);
                dialogsActivity.setSearchString(str);
                ChatActivity.this.presentFragment(dialogsActivity);
            } else if (str.startsWith("/")) {
                ChatActivity.this.chatActivityEnterView.setCommand(null, str, false, false);
                if (ChatActivity.this.chatActivityEnterView.getFieldText() == null) {
                    ChatActivity.this.hideFieldPanel(false);
                }
            }
        }

        /* JADX WARNING: Removed duplicated region for block: B:57:0x0122  */
        /* JADX WARNING: Removed duplicated region for block: B:92:0x01b2  */
        /* JADX WARNING: Removed duplicated region for block: B:70:0x0150  */
        /* JADX WARNING: Removed duplicated region for block: B:99:0x01cb  */
        /* JADX WARNING: Removed duplicated region for block: B:114:0x01ff  */
        /* JADX WARNING: Removed duplicated region for block: B:134:? A:{SYNTHETIC, RETURN} */
        /* JADX WARNING: Removed duplicated region for block: B:117:0x0211  */
        /* JADX WARNING: Missing block: B:60:0x0130, code skipped:
            if (r2.messageOwner.from_id == r3.messageOwner.from_id) goto L_0x0132;
     */
        /* JADX WARNING: Missing block: B:62:0x0134, code skipped:
            r2 = false;
     */
        /* JADX WARNING: Missing block: B:66:0x0146, code skipped:
            if (r2.getFromId() == r3.getFromId()) goto L_0x0132;
     */
        /* JADX WARNING: Missing block: B:84:0x0197, code skipped:
            if (r1.messageOwner.from_id == r3.messageOwner.from_id) goto L_0x0199;
     */
        /* JADX WARNING: Missing block: B:86:0x019b, code skipped:
            r1 = false;
     */
        /* JADX WARNING: Missing block: B:90:0x01ad, code skipped:
            if (r1.getFromId() == r3.getFromId()) goto L_0x0199;
     */
        public void onBindViewHolder(androidx.recyclerview.widget.RecyclerView.ViewHolder r17, int r18) {
            /*
            r16 = this;
            r0 = r16;
            r1 = r17;
            r2 = r18;
            r3 = r0.botInfoRow;
            if (r2 != r3) goto L_0x0035;
        L_0x000a:
            r1 = r1.itemView;
            r1 = (org.telegram.ui.Cells.BotHelpCell) r1;
            r2 = org.telegram.ui.ChatActivity.this;
            r2 = r2.botInfo;
            r2 = r2.size();
            if (r2 == 0) goto L_0x002f;
        L_0x001a:
            r2 = org.telegram.ui.ChatActivity.this;
            r2 = r2.botInfo;
            r3 = org.telegram.ui.ChatActivity.this;
            r3 = r3.currentUser;
            r3 = r3.id;
            r2 = r2.get(r3);
            r2 = (org.telegram.tgnet.TLRPC.BotInfo) r2;
            r2 = r2.description;
            goto L_0x0030;
        L_0x002f:
            r2 = 0;
        L_0x0030:
            r1.setText(r2);
            goto L_0x0268;
        L_0x0035:
            r3 = r0.loadingDownRow;
            r4 = 0;
            r5 = 1;
            if (r2 == r3) goto L_0x0256;
        L_0x003b:
            r3 = r0.loadingUpRow;
            if (r2 != r3) goto L_0x0041;
        L_0x003f:
            goto L_0x0256;
        L_0x0041:
            r3 = r0.messagesStartRow;
            if (r2 < r3) goto L_0x0268;
        L_0x0045:
            r6 = r0.messagesEndRow;
            if (r2 >= r6) goto L_0x0268;
        L_0x0049:
            r6 = org.telegram.ui.ChatActivity.this;
            r6 = r6.messages;
            r3 = r2 - r3;
            r3 = r6.get(r3);
            r3 = (org.telegram.messenger.MessageObject) r3;
            r6 = r1.itemView;
            r7 = r6 instanceof org.telegram.ui.Cells.ChatMessageCell;
            if (r7 == 0) goto L_0x0227;
        L_0x005b:
            r6 = (org.telegram.ui.Cells.ChatMessageCell) r6;
            r7 = org.telegram.ui.ChatActivity.this;
            r8 = r7.currentChat;
            if (r8 != 0) goto L_0x006e;
        L_0x0063:
            r7 = r7.currentUser;
            r7 = org.telegram.messenger.UserObject.isUserSelf(r7);
            if (r7 == 0) goto L_0x006c;
        L_0x006b:
            goto L_0x006e;
        L_0x006c:
            r7 = 0;
            goto L_0x006f;
        L_0x006e:
            r7 = 1;
        L_0x006f:
            r6.isChat = r7;
            r7 = org.telegram.ui.ChatActivity.this;
            r7 = r7.currentChat;
            r7 = org.telegram.messenger.ChatObject.isChannel(r7);
            if (r7 == 0) goto L_0x0085;
        L_0x007b:
            r7 = org.telegram.ui.ChatActivity.this;
            r7 = r7.currentChat;
            r7 = r7.megagroup;
            if (r7 == 0) goto L_0x0085;
        L_0x0083:
            r7 = 1;
            goto L_0x0086;
        L_0x0085:
            r7 = 0;
        L_0x0086:
            r6.isMegagroup = r7;
            r7 = org.telegram.ui.ChatActivity.this;
            r7 = r7.getValidGroupedMessage(r3);
            if (r7 == 0) goto L_0x00d1;
        L_0x0090:
            r8 = r7.positions;
            r8 = r8.get(r3);
            r8 = (org.telegram.messenger.MessageObject.GroupedMessagePosition) r8;
            r9 = -100;
            if (r8 == 0) goto L_0x00cc;
        L_0x009c:
            r10 = r8.flags;
            r10 = r10 & 4;
            if (r10 == 0) goto L_0x00ad;
        L_0x00a2:
            r10 = r7.posArray;
            r10 = r10.indexOf(r8);
            r10 = r10 + r2;
            r10 = r10 + r5;
            r11 = 0;
            r12 = 0;
            goto L_0x00b1;
        L_0x00ad:
            r10 = -100;
            r11 = 1;
            r12 = 1;
        L_0x00b1:
            r13 = r8.flags;
            r13 = r13 & 8;
            if (r13 == 0) goto L_0x00c9;
        L_0x00b7:
            r9 = r7.posArray;
            r9 = r9.size();
            r2 = r2 - r9;
            r9 = r7.posArray;
            r8 = r9.indexOf(r8);
            r9 = r2 + r8;
            r2 = 0;
            r8 = 0;
            goto L_0x00d9;
        L_0x00c9:
            r2 = 1;
            r8 = 1;
            goto L_0x00d9;
        L_0x00cc:
            r2 = 0;
            r8 = 0;
            r10 = -100;
            goto L_0x00d7;
        L_0x00d1:
            r9 = r2 + -1;
            r10 = r2 + 1;
            r2 = 0;
            r8 = 0;
        L_0x00d7:
            r11 = 0;
            r12 = 0;
        L_0x00d9:
            r13 = r0.getItemViewType(r9);
            r14 = r0.getItemViewType(r10);
            r15 = r3.hasReactions();
            r5 = 300; // 0x12c float:4.2E-43 double:1.48E-321;
            if (r15 != 0) goto L_0x014a;
        L_0x00e9:
            r15 = r3.messageOwner;
            r15 = r15.reply_markup;
            r15 = r15 instanceof org.telegram.tgnet.TLRPC.TL_replyInlineMarkup;
            if (r15 != 0) goto L_0x014a;
        L_0x00f1:
            r15 = r17.getItemViewType();
            if (r13 != r15) goto L_0x014a;
        L_0x00f7:
            r2 = org.telegram.ui.ChatActivity.this;
            r2 = r2.messages;
            r13 = r0.messagesStartRow;
            r9 = r9 - r13;
            r2 = r2.get(r9);
            r2 = (org.telegram.messenger.MessageObject) r2;
            r9 = r2.isOutOwner();
            r13 = r3.isOutOwner();
            if (r9 != r13) goto L_0x011f;
        L_0x010e:
            r9 = r2.messageOwner;
            r9 = r9.date;
            r13 = r3.messageOwner;
            r13 = r13.date;
            r9 = r9 - r13;
            r9 = java.lang.Math.abs(r9);
            if (r9 > r5) goto L_0x011f;
        L_0x011d:
            r9 = 1;
            goto L_0x0120;
        L_0x011f:
            r9 = 0;
        L_0x0120:
            if (r9 == 0) goto L_0x0149;
        L_0x0122:
            r13 = org.telegram.ui.ChatActivity.this;
            r15 = r13.currentChat;
            if (r15 == 0) goto L_0x0136;
        L_0x0128:
            r2 = r2.messageOwner;
            r2 = r2.from_id;
            r9 = r3.messageOwner;
            r9 = r9.from_id;
            if (r2 != r9) goto L_0x0134;
        L_0x0132:
            r2 = 1;
            goto L_0x014a;
        L_0x0134:
            r2 = 0;
            goto L_0x014a;
        L_0x0136:
            r13 = r13.currentUser;
            r13 = org.telegram.messenger.UserObject.isUserSelf(r13);
            if (r13 == 0) goto L_0x0149;
        L_0x013e:
            r2 = r2.getFromId();
            r9 = r3.getFromId();
            if (r2 != r9) goto L_0x0134;
        L_0x0148:
            goto L_0x0132;
        L_0x0149:
            r2 = r9;
        L_0x014a:
            r1 = r17.getItemViewType();
            if (r14 != r1) goto L_0x01b2;
        L_0x0150:
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.messages;
            r9 = r0.messagesStartRow;
            r10 = r10 - r9;
            r1 = r1.get(r10);
            r1 = (org.telegram.messenger.MessageObject) r1;
            r9 = r1.hasReactions();
            if (r9 != 0) goto L_0x0186;
        L_0x0163:
            r9 = r1.messageOwner;
            r9 = r9.reply_markup;
            r9 = r9 instanceof org.telegram.tgnet.TLRPC.TL_replyInlineMarkup;
            if (r9 != 0) goto L_0x0186;
        L_0x016b:
            r9 = r1.isOutOwner();
            r10 = r3.isOutOwner();
            if (r9 != r10) goto L_0x0186;
        L_0x0175:
            r9 = r1.messageOwner;
            r9 = r9.date;
            r10 = r3.messageOwner;
            r10 = r10.date;
            r9 = r9 - r10;
            r9 = java.lang.Math.abs(r9);
            if (r9 > r5) goto L_0x0186;
        L_0x0184:
            r5 = 1;
            goto L_0x0187;
        L_0x0186:
            r5 = 0;
        L_0x0187:
            if (r5 == 0) goto L_0x01b0;
        L_0x0189:
            r9 = org.telegram.ui.ChatActivity.this;
            r10 = r9.currentChat;
            if (r10 == 0) goto L_0x019d;
        L_0x018f:
            r1 = r1.messageOwner;
            r1 = r1.from_id;
            r5 = r3.messageOwner;
            r5 = r5.from_id;
            if (r1 != r5) goto L_0x019b;
        L_0x0199:
            r1 = 1;
            goto L_0x01b3;
        L_0x019b:
            r1 = 0;
            goto L_0x01b3;
        L_0x019d:
            r9 = r9.currentUser;
            r9 = org.telegram.messenger.UserObject.isUserSelf(r9);
            if (r9 == 0) goto L_0x01b0;
        L_0x01a5:
            r1 = r1.getFromId();
            r5 = r3.getFromId();
            if (r1 != r5) goto L_0x019b;
        L_0x01af:
            goto L_0x0199;
        L_0x01b0:
            r1 = r5;
            goto L_0x01b3;
        L_0x01b2:
            r1 = r11;
        L_0x01b3:
            r5 = org.telegram.ui.ChatActivity.this;
            r5 = r5.currentChat;
            r5 = org.telegram.messenger.ChatObject.isChannel(r5);
            if (r5 == 0) goto L_0x01d9;
        L_0x01bd:
            r5 = org.telegram.ui.ChatActivity.this;
            r5 = r5.currentChat;
            r5 = r5.megagroup;
            if (r5 == 0) goto L_0x01d9;
        L_0x01c5:
            r5 = r3.messageOwner;
            r9 = r5.from_id;
            if (r9 > 0) goto L_0x01d9;
        L_0x01cb:
            r5 = r5.fwd_from;
            if (r5 == 0) goto L_0x01d9;
        L_0x01cf:
            r5 = r5.channel_post;
            if (r5 == 0) goto L_0x01d9;
        L_0x01d3:
            if (r12 != 0) goto L_0x01d6;
        L_0x01d5:
            r1 = 0;
        L_0x01d6:
            if (r8 != 0) goto L_0x01d9;
        L_0x01d8:
            r2 = 0;
        L_0x01d9:
            r6.setMessageObject(r3, r7, r2, r1);
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.highlightMessageId;
            r2 = NUM; // 0x7fffffff float:NaN double:1.060997895E-314;
            if (r1 == r2) goto L_0x01f4;
        L_0x01e7:
            r1 = r3.getId();
            r5 = org.telegram.ui.ChatActivity.this;
            r5 = r5.highlightMessageId;
            if (r1 != r5) goto L_0x01f4;
        L_0x01f3:
            r4 = 1;
        L_0x01f4:
            r6.setHighlighted(r4);
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.highlightMessageId;
            if (r1 == r2) goto L_0x0204;
        L_0x01ff:
            r1 = org.telegram.ui.ChatActivity.this;
            r1.startMessageUnselect();
        L_0x0204:
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.animatingMessageObjects;
            r1 = r1.indexOf(r3);
            r2 = -1;
            if (r1 == r2) goto L_0x0268;
        L_0x0211:
            r2 = org.telegram.ui.ChatActivity.this;
            r2 = r2.animatingMessageObjects;
            r2.remove(r1);
            r1 = r6.getViewTreeObserver();
            r2 = new org.telegram.ui.ChatActivity$ChatActivityAdapter$3;
            r2.<init>(r6);
            r1.addOnPreDrawListener(r2);
            goto L_0x0268;
        L_0x0227:
            r1 = r6 instanceof org.telegram.ui.Cells.ChatActionCell;
            if (r1 == 0) goto L_0x0236;
        L_0x022b:
            r6 = (org.telegram.ui.Cells.ChatActionCell) r6;
            r6.setMessageObject(r3);
            r1 = NUM; // 0x3var_ float:1.0 double:5.263544247E-315;
            r6.setAlpha(r1);
            goto L_0x0268;
        L_0x0236:
            r1 = r6 instanceof org.telegram.ui.Cells.ChatUnreadCell;
            if (r1 == 0) goto L_0x0268;
        L_0x023a:
            r6 = (org.telegram.ui.Cells.ChatUnreadCell) r6;
            r1 = NUM; // 0x7f0e0b5d float:1.8880938E38 double:1.053163594E-314;
            r2 = "UnreadMessages";
            r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
            r6.setText(r1);
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.createUnreadMessageAfterId;
            if (r1 == 0) goto L_0x0268;
        L_0x0250:
            r1 = org.telegram.ui.ChatActivity.this;
            r1.createUnreadMessageAfterId = r4;
            goto L_0x0268;
        L_0x0256:
            r1 = r1.itemView;
            r1 = (org.telegram.ui.Cells.ChatLoadingCell) r1;
            r2 = org.telegram.ui.ChatActivity.this;
            r2 = r2.loadsCount;
            r3 = 1;
            if (r2 <= r3) goto L_0x0264;
        L_0x0263:
            goto L_0x0265;
        L_0x0264:
            r3 = 0;
        L_0x0265:
            r1.setProgressVisible(r3);
        L_0x0268:
            return;
            */
            throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity$ChatActivityAdapter.onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder, int):void");
        }

        public int getItemViewType(int i) {
            int i2 = this.messagesStartRow;
            if (i < i2 || i >= this.messagesEndRow) {
                return i == this.botInfoRow ? 3 : 4;
            } else {
                return ((MessageObject) ChatActivity.this.messages.get(i - i2)).contentType;
            }
        }

        /* JADX WARNING: Removed duplicated region for block: B:50:0x010d  */
        public void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView.ViewHolder r12) {
            /*
            r11 = this;
            r0 = r12.itemView;
            r1 = r0 instanceof org.telegram.ui.Cells.ChatMessageCell;
            r2 = 1;
            r3 = 0;
            if (r1 == 0) goto L_0x0112;
        L_0x0008:
            r0 = (org.telegram.ui.Cells.ChatMessageCell) r0;
            r1 = r0.getMessageObject();
            r4 = org.telegram.ui.ChatActivity.this;
            r4 = r4.actionBar;
            r4 = r4.isActionModeShowed();
            r5 = 0;
            if (r4 == 0) goto L_0x0061;
        L_0x001b:
            r0.setCheckBoxVisible(r2, r3);
            r4 = org.telegram.ui.ChatActivity.this;
            r4 = r4.chatActivityEnterView;
            if (r4 == 0) goto L_0x0029;
        L_0x0024:
            r4 = r4.getEditingMessageObject();
            goto L_0x002a;
        L_0x0029:
            r4 = r5;
        L_0x002a:
            r6 = r1.getDialogId();
            r8 = org.telegram.ui.ChatActivity.this;
            r8 = r8.dialog_id;
            r10 = (r6 > r8 ? 1 : (r6 == r8 ? 0 : -1));
            if (r10 != 0) goto L_0x003a;
        L_0x0038:
            r6 = 0;
            goto L_0x003b;
        L_0x003a:
            r6 = 1;
        L_0x003b:
            if (r4 == r1) goto L_0x0058;
        L_0x003d:
            r4 = org.telegram.ui.ChatActivity.this;
            r4 = r4.selectedMessagesIds;
            r4 = r4[r6];
            r7 = r1.getId();
            r4 = r4.indexOfKey(r7);
            if (r4 < 0) goto L_0x0050;
        L_0x004f:
            goto L_0x0058;
        L_0x0050:
            r0.setDrawSelectionBackground(r3);
            r0.setChecked(r3, r3, r3);
            r4 = 0;
            goto L_0x005e;
        L_0x0058:
            r4 = org.telegram.ui.ChatActivity.this;
            r4.setCellSelectionBackground(r1, r0, r6, r3);
            r4 = 1;
        L_0x005e:
            r6 = r4;
            r4 = 1;
            goto L_0x006c;
        L_0x0061:
            r0.setDrawSelectionBackground(r3);
            r0.setChecked(r3, r3, r3);
            r0.setCheckBoxVisible(r3, r3);
            r4 = 0;
            r6 = 0;
        L_0x006c:
            r7 = r4 ^ 1;
            if (r4 == 0) goto L_0x0074;
        L_0x0070:
            if (r6 == 0) goto L_0x0074;
        L_0x0072:
            r4 = 1;
            goto L_0x0075;
        L_0x0074:
            r4 = 0;
        L_0x0075:
            r0.setCheckPressed(r7, r4);
            r4 = org.telegram.ui.ChatActivity.this;
            r4 = r4.searchContainer;
            if (r4 == 0) goto L_0x00c7;
        L_0x0080:
            r4 = org.telegram.ui.ChatActivity.this;
            r4 = r4.searchContainer;
            r4 = r4.getVisibility();
            if (r4 != 0) goto L_0x00c7;
        L_0x008c:
            r4 = org.telegram.ui.ChatActivity.this;
            r4 = r4.getMediaDataController();
            r6 = r1.getId();
            r7 = r1.getDialogId();
            r1 = org.telegram.ui.ChatActivity.this;
            r9 = r1.mergeDialogId;
            r1 = (r7 > r9 ? 1 : (r7 == r9 ? 0 : -1));
            if (r1 != 0) goto L_0x00a6;
        L_0x00a4:
            r1 = 1;
            goto L_0x00a7;
        L_0x00a6:
            r1 = 0;
        L_0x00a7:
            r1 = r4.isMessageFound(r6, r1);
            if (r1 == 0) goto L_0x00c7;
        L_0x00ad:
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.getMediaDataController();
            r1 = r1.getLastSearchQuery();
            if (r1 == 0) goto L_0x00c7;
        L_0x00b9:
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.getMediaDataController();
            r1 = r1.getLastSearchQuery();
            r0.setHighlightedText(r1);
            goto L_0x00ca;
        L_0x00c7:
            r0.setHighlightedText(r5);
        L_0x00ca:
            r1 = r0.getViewTreeObserver();
            r4 = new org.telegram.ui.ChatActivity$ChatActivityAdapter$4;
            r4.<init>(r0);
            r1.addOnPreDrawListener(r4);
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.inPreviewMode;
            if (r1 == 0) goto L_0x00e4;
        L_0x00de:
            r1 = r0.isHighlighted();
            if (r1 != 0) goto L_0x0112;
        L_0x00e4:
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.highlightMessageId;
            r4 = NUM; // 0x7fffffff float:NaN double:1.060997895E-314;
            if (r1 == r4) goto L_0x0101;
        L_0x00ef:
            r1 = r0.getMessageObject();
            r1 = r1.getId();
            r5 = org.telegram.ui.ChatActivity.this;
            r5 = r5.highlightMessageId;
            if (r1 != r5) goto L_0x0101;
        L_0x00ff:
            r1 = 1;
            goto L_0x0102;
        L_0x0101:
            r1 = 0;
        L_0x0102:
            r0.setHighlighted(r1);
            r0 = org.telegram.ui.ChatActivity.this;
            r0 = r0.highlightMessageId;
            if (r0 == r4) goto L_0x0112;
        L_0x010d:
            r0 = org.telegram.ui.ChatActivity.this;
            r0.startMessageUnselect();
        L_0x0112:
            r0 = r12.getAdapterPosition();
            r1 = r11.messagesStartRow;
            if (r0 < r1) goto L_0x01ca;
        L_0x011a:
            r4 = r11.messagesEndRow;
            if (r0 >= r4) goto L_0x01ca;
        L_0x011e:
            r4 = org.telegram.ui.ChatActivity.this;
            r4 = r4.messages;
            r0 = r0 - r1;
            r0 = r4.get(r0);
            r0 = (org.telegram.messenger.MessageObject) r0;
            r12 = r12.itemView;
            if (r0 == 0) goto L_0x01ca;
        L_0x012d:
            r1 = r0.messageOwner;
            if (r1 == 0) goto L_0x01ca;
        L_0x0131:
            r4 = r1.media_unread;
            if (r4 == 0) goto L_0x01ca;
        L_0x0135:
            r1 = r1.mentioned;
            if (r1 == 0) goto L_0x01ca;
        L_0x0139:
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.inPreviewMode;
            if (r1 != 0) goto L_0x01b5;
        L_0x0141:
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.inScheduleMode;
            if (r1 != 0) goto L_0x01b5;
        L_0x0149:
            r1 = r0.isVoice();
            if (r1 != 0) goto L_0x01b5;
        L_0x014f:
            r1 = r0.isRoundVideo();
            if (r1 != 0) goto L_0x01b5;
        L_0x0155:
            r1 = org.telegram.ui.ChatActivity.this;
            r1.newMentionsCount = r1.newMentionsCount - 1;
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.newMentionsCount;
            if (r1 > 0) goto L_0x0172;
        L_0x0162:
            r1 = org.telegram.ui.ChatActivity.this;
            r1.newMentionsCount = r3;
            r1 = org.telegram.ui.ChatActivity.this;
            r1.hasAllMentionsLocal = r2;
            r1 = org.telegram.ui.ChatActivity.this;
            r1.showMentionDownButton(r3, r2);
            goto L_0x018f;
        L_0x0172:
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.mentiondownButtonCounter;
            r4 = new java.lang.Object[r2];
            r5 = org.telegram.ui.ChatActivity.this;
            r5 = r5.newMentionsCount;
            r5 = java.lang.Integer.valueOf(r5);
            r4[r3] = r5;
            r5 = "%d";
            r4 = java.lang.String.format(r5, r4);
            r1.setText(r4);
        L_0x018f:
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.getMessagesController();
            r4 = r0.getId();
            r5 = org.telegram.ui.ChatActivity.this;
            r5 = r5.currentChat;
            r5 = org.telegram.messenger.ChatObject.isChannel(r5);
            if (r5 == 0) goto L_0x01a9;
        L_0x01a3:
            r3 = org.telegram.ui.ChatActivity.this;
            r3 = r3.currentChat;
            r3 = r3.id;
        L_0x01a9:
            r5 = org.telegram.ui.ChatActivity.this;
            r5 = r5.dialog_id;
            r1.markMentionMessageAsRead(r4, r3, r5);
            r0.setContentIsRead();
        L_0x01b5:
            r0 = r12 instanceof org.telegram.ui.Cells.ChatMessageCell;
            if (r0 == 0) goto L_0x01ca;
        L_0x01b9:
            r12 = (org.telegram.ui.Cells.ChatMessageCell) r12;
            r0 = org.telegram.ui.ChatActivity.this;
            r0 = r0.inPreviewMode;
            if (r0 == 0) goto L_0x01c7;
        L_0x01c3:
            r12.setHighlighted(r2);
            goto L_0x01ca;
        L_0x01c7:
            r12.setHighlightedAnimated();
        L_0x01ca:
            return;
            */
            throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity$ChatActivityAdapter.onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder):void");
        }

        /* JADX WARNING: Removed duplicated region for block: B:13:0x0032  */
        public void updateRowAtPosition(int r4) {
            /*
            r3 = this;
            r0 = org.telegram.ui.ChatActivity.this;
            r0 = r0.chatLayoutManager;
            if (r0 != 0) goto L_0x0009;
        L_0x0008:
            return;
        L_0x0009:
            r0 = org.telegram.ui.ChatActivity.this;
            r0 = r0.wasManualScroll;
            r1 = -1;
            if (r0 != 0) goto L_0x002c;
        L_0x0012:
            r0 = org.telegram.ui.ChatActivity.this;
            r0 = r0.unreadMessageObject;
            if (r0 == 0) goto L_0x002c;
        L_0x001a:
            r0 = org.telegram.ui.ChatActivity.this;
            r2 = r0.messages;
            r0 = r0.unreadMessageObject;
            r0 = r2.indexOf(r0);
            if (r0 < 0) goto L_0x002c;
        L_0x0028:
            r2 = r3.messagesStartRow;
            r0 = r0 + r2;
            goto L_0x002d;
        L_0x002c:
            r0 = -1;
        L_0x002d:
            r3.notifyItemChanged(r4);
            if (r0 == r1) goto L_0x0062;
        L_0x0032:
            r4 = org.telegram.ui.ChatActivity.this;
            r4 = r4.chatListView;
            r4 = r4.getMeasuredHeight();
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.chatListView;
            r1 = r1.getPaddingBottom();
            r4 = r4 - r1;
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.chatListView;
            r1 = r1.getPaddingTop();
            r4 = r4 - r1;
            r1 = NUM; // 0x41e80000 float:29.0 double:5.46299942E-315;
            r1 = org.telegram.messenger.AndroidUtilities.dp(r1);
            r4 = r4 - r1;
            r1 = org.telegram.ui.ChatActivity.this;
            r1 = r1.chatLayoutManager;
            r1.scrollToPositionWithOffset(r0, r4);
        L_0x0062:
            return;
            */
            throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity$ChatActivityAdapter.updateRowAtPosition(int):void");
        }

        public void updateRowWithMessageObject(MessageObject messageObject, boolean z) {
            if (z) {
                int childCount = ChatActivity.this.chatListView.getChildCount();
                for (int i = 0; i < childCount; i++) {
                    View childAt = ChatActivity.this.chatListView.getChildAt(i);
                    if (childAt instanceof ChatMessageCell) {
                        ChatMessageCell chatMessageCell = (ChatMessageCell) childAt;
                        if (chatMessageCell.getMessageObject() == messageObject) {
                            chatMessageCell.setMessageObject(messageObject, chatMessageCell.getCurrentMessagesGroup(), chatMessageCell.isPinnedBottom(), chatMessageCell.isPinnedTop());
                            return;
                        }
                    }
                }
            }
            int indexOf = ChatActivity.this.messages.indexOf(messageObject);
            if (indexOf != -1) {
                updateRowAtPosition(indexOf + this.messagesStartRow);
            }
        }

        public void notifyDataSetChanged() {
            updateRows();
            try {
                super.notifyDataSetChanged();
            } catch (Exception e) {
                FileLog.e(e);
            }
        }

        public void notifyItemChanged(int i) {
            updateRows();
            try {
                super.notifyItemChanged(i);
            } catch (Exception e) {
                FileLog.e(e);
            }
        }

        public void notifyItemRangeChanged(int i, int i2) {
            updateRows();
            try {
                super.notifyItemRangeChanged(i, i2);
            } catch (Exception e) {
                FileLog.e(e);
            }
        }

        public void notifyItemInserted(int i) {
            updateRows();
            try {
                super.notifyItemInserted(i);
            } catch (Exception e) {
                FileLog.e(e);
            }
        }

        public void notifyItemMoved(int i, int i2) {
            updateRows();
            try {
                super.notifyItemMoved(i, i2);
            } catch (Exception e) {
                FileLog.e(e);
            }
        }

        public void notifyItemRangeInserted(int i, int i2) {
            updateRows();
            try {
                super.notifyItemRangeInserted(i, i2);
            } catch (Exception e) {
                FileLog.e(e);
            }
        }

        public void notifyItemRemoved(int i) {
            updateRows();
            try {
                super.notifyItemRemoved(i);
            } catch (Exception e) {
                FileLog.e(e);
            }
        }

        public void notifyItemRangeRemoved(int i, int i2) {
            updateRows();
            try {
                super.notifyItemRangeRemoved(i, i2);
            } catch (Exception e) {
                FileLog.e(e);
            }
        }
    }

    static /* synthetic */ void lambda$null$35(DialogInterface dialogInterface, int i) {
    }

    private void setItemAnimationsEnabled(boolean z) {
    }

    public ChatActivity(Bundle bundle) {
        super(bundle);
    }

    public boolean onFragmentCreate() {
        MessagesController messagesController;
        long j;
        boolean isChannel;
        boolean z = false;
        int i = this.arguments.getInt("chat_id", 0);
        int i2 = this.arguments.getInt("user_id", 0);
        int i3 = this.arguments.getInt("enc_id", 0);
        this.inScheduleMode = this.arguments.getBoolean("scheduled", false);
        this.inlineReturn = this.arguments.getLong("inline_return", 0);
        String string = this.arguments.getString("inline_query");
        this.startLoadFromMessageId = this.arguments.getInt("message_id", 0);
        int i4 = this.arguments.getInt("migrated_to", 0);
        this.scrollToTopOnResume = this.arguments.getBoolean("scrollToTopOnResume", false);
        CountDownLatch countDownLatch;
        if (i != 0) {
            this.currentChat = getMessagesController().getChat(Integer.valueOf(i));
            if (this.currentChat == null) {
                countDownLatch = new CountDownLatch(1);
                MessagesStorage messagesStorage = getMessagesStorage();
                messagesStorage.getStorageQueue().postRunnable(new -$$Lambda$ChatActivity$diV3z76REAMmAeIIp51DTLTaiSg(this, messagesStorage, i, countDownLatch));
                try {
                    countDownLatch.await();
                } catch (Exception e) {
                    FileLog.e(e);
                }
                if (this.currentChat == null) {
                    return false;
                }
                getMessagesController().putChat(this.currentChat, true);
            }
            this.dialog_id = (long) (-i);
            if (ChatObject.isChannel(this.currentChat)) {
                getMessagesController().startShortPoll(this.currentChat, false);
            }
        } else if (i2 != 0) {
            this.currentUser = getMessagesController().getUser(Integer.valueOf(i2));
            if (this.currentUser == null) {
                MessagesStorage messagesStorage2 = getMessagesStorage();
                CountDownLatch countDownLatch2 = new CountDownLatch(1);
                messagesStorage2.getStorageQueue().postRunnable(new -$$Lambda$ChatActivity$rqBjWQeWrMiTLhewd-W0HAwxKps(this, messagesStorage2, i2, countDownLatch2));
                try {
                    countDownLatch2.await();
                } catch (Exception e2) {
                    FileLog.e(e2);
                }
                if (this.currentUser == null) {
                    return false;
                }
                getMessagesController().putUser(this.currentUser, true);
            }
            this.dialog_id = (long) i2;
            this.botUser = this.arguments.getString("botUser");
            if (string != null) {
                getMessagesController().sendBotStart(this.currentUser, string);
            }
        } else if (i3 == 0) {
            return false;
        } else {
            this.currentEncryptedChat = getMessagesController().getEncryptedChat(Integer.valueOf(i3));
            MessagesStorage messagesStorage3 = getMessagesStorage();
            if (this.currentEncryptedChat == null) {
                countDownLatch = new CountDownLatch(1);
                messagesStorage3.getStorageQueue().postRunnable(new -$$Lambda$ChatActivity$8qYn5CerE3-o6oJqpu7NjPs2smE(this, messagesStorage3, i3, countDownLatch));
                try {
                    countDownLatch.await();
                } catch (Exception e22) {
                    FileLog.e(e22);
                }
                if (this.currentEncryptedChat == null) {
                    return false;
                }
                getMessagesController().putEncryptedChat(this.currentEncryptedChat, true);
            }
            this.currentUser = getMessagesController().getUser(Integer.valueOf(this.currentEncryptedChat.user_id));
            if (this.currentUser == null) {
                countDownLatch = new CountDownLatch(1);
                messagesStorage3.getStorageQueue().postRunnable(new -$$Lambda$ChatActivity$zbo6FUWEskAD8BCSLY3b_JqK_JY(this, messagesStorage3, countDownLatch));
                try {
                    countDownLatch.await();
                } catch (Exception e222) {
                    FileLog.e(e222);
                }
                if (this.currentUser == null) {
                    return false;
                }
                getMessagesController().putUser(this.currentUser, true);
            }
            this.dialog_id = ((long) i3) << 32;
            int[] iArr = this.maxMessageId;
            iArr[1] = Integer.MIN_VALUE;
            iArr[0] = Integer.MIN_VALUE;
            iArr = this.minMessageId;
            iArr[1] = Integer.MAX_VALUE;
            iArr[0] = Integer.MAX_VALUE;
        }
        if (this.currentUser != null) {
            MediaController.getInstance().startMediaObserver();
        }
        if (!this.inScheduleMode) {
            getNotificationCenter().addObserver(this, NotificationCenter.messagesRead);
            getNotificationCenter().addObserver(this, NotificationCenter.screenshotTook);
            getNotificationCenter().addObserver(this, NotificationCenter.encryptedChatUpdated);
            getNotificationCenter().addObserver(this, NotificationCenter.messagesReadEncrypted);
            getNotificationCenter().addObserver(this, NotificationCenter.removeAllMessagesFromDialog);
            getNotificationCenter().addObserver(this, NotificationCenter.messagesReadContent);
            getNotificationCenter().addObserver(this, NotificationCenter.botKeyboardDidLoad);
            getNotificationCenter().addObserver(this, NotificationCenter.chatSearchResultsAvailable);
            getNotificationCenter().addObserver(this, NotificationCenter.chatSearchResultsLoading);
            getNotificationCenter().addObserver(this, NotificationCenter.didUpdatedMessagesViews);
            getNotificationCenter().addObserver(this, NotificationCenter.pinnedMessageDidLoad);
            getNotificationCenter().addObserver(this, NotificationCenter.peerSettingsDidLoad);
            getNotificationCenter().addObserver(this, NotificationCenter.newDraftReceived);
            getNotificationCenter().addObserver(this, NotificationCenter.updateMentionsCount);
            getNotificationCenter().addObserver(this, NotificationCenter.didUpdatePollResults);
            getNotificationCenter().addObserver(this, NotificationCenter.chatOnlineCountDidLoad);
        }
        getNotificationCenter().addObserver(this, NotificationCenter.messagesDidLoad);
        NotificationCenter.getGlobalInstance().addObserver(this, NotificationCenter.emojiDidLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.didUpdateConnectionState);
        getNotificationCenter().addObserver(this, NotificationCenter.updateInterfaces);
        getNotificationCenter().addObserver(this, NotificationCenter.didReceiveNewMessages);
        getNotificationCenter().addObserver(this, NotificationCenter.closeChats);
        getNotificationCenter().addObserver(this, NotificationCenter.messagesDeleted);
        getNotificationCenter().addObserver(this, NotificationCenter.historyCleared);
        getNotificationCenter().addObserver(this, NotificationCenter.messageReceivedByServer);
        getNotificationCenter().addObserver(this, NotificationCenter.messageReceivedByAck);
        getNotificationCenter().addObserver(this, NotificationCenter.messageSendError);
        getNotificationCenter().addObserver(this, NotificationCenter.chatInfoDidLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.contactsDidLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.messagePlayingProgressDidChanged);
        getNotificationCenter().addObserver(this, NotificationCenter.messagePlayingDidReset);
        getNotificationCenter().addObserver(this, NotificationCenter.messagePlayingGoingToStop);
        getNotificationCenter().addObserver(this, NotificationCenter.messagePlayingPlayStateChanged);
        getNotificationCenter().addObserver(this, NotificationCenter.blockedUsersDidLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.fileNewChunkAvailable);
        getNotificationCenter().addObserver(this, NotificationCenter.didCreatedNewDeleteTask);
        getNotificationCenter().addObserver(this, NotificationCenter.messagePlayingDidStart);
        getNotificationCenter().addObserver(this, NotificationCenter.updateMessageMedia);
        getNotificationCenter().addObserver(this, NotificationCenter.replaceMessagesObjects);
        getNotificationCenter().addObserver(this, NotificationCenter.notificationsSettingsUpdated);
        getNotificationCenter().addObserver(this, NotificationCenter.replyMessagesDidLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.didReceivedWebpages);
        getNotificationCenter().addObserver(this, NotificationCenter.didReceivedWebpagesInUpdates);
        getNotificationCenter().addObserver(this, NotificationCenter.botInfoDidLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.chatInfoCantLoad);
        getNotificationCenter().addObserver(this, NotificationCenter.userInfoDidLoad);
        NotificationCenter.getGlobalInstance().addObserver(this, NotificationCenter.didSetNewWallpapper);
        NotificationCenter.getGlobalInstance().addObserver(this, NotificationCenter.didApplyNewTheme);
        NotificationCenter.getGlobalInstance().addObserver(this, NotificationCenter.goingToPreviewTheme);
        getNotificationCenter().addObserver(this, NotificationCenter.channelRightsUpdated);
        getNotificationCenter().addObserver(this, NotificationCenter.audioRecordTooShort);
        getNotificationCenter().addObserver(this, NotificationCenter.didUpdateReactions);
        getNotificationCenter().addObserver(this, NotificationCenter.videoLoadingStateChanged);
        getNotificationCenter().addObserver(this, NotificationCenter.scheduledMessagesUpdated);
        super.onFragmentCreate();
        this.loading = true;
        if (!this.inScheduleMode) {
            if (this.currentEncryptedChat == null) {
                getMediaDataController().loadBotKeyboard(this.dialog_id);
            }
            getMessagesController().loadPeerSettings(this.currentUser, this.currentChat);
            getMessagesController().setLastCreatedDialogId(this.dialog_id, this.inScheduleMode, true);
            if (this.startLoadFromMessageId == 0) {
                SharedPreferences notificationsSettings = MessagesController.getNotificationsSettings(this.currentAccount);
                StringBuilder stringBuilder = new StringBuilder();
                stringBuilder.append("diditem");
                stringBuilder.append(this.dialog_id);
                i = notificationsSettings.getInt(stringBuilder.toString(), 0);
                if (i != 0) {
                    this.wasManualScroll = true;
                    this.loadingFromOldPosition = true;
                    StringBuilder stringBuilder2 = new StringBuilder();
                    stringBuilder2.append("diditemo");
                    stringBuilder2.append(this.dialog_id);
                    this.startLoadFromMessageOffset = notificationsSettings.getInt(stringBuilder2.toString(), 0);
                    this.startLoadFromMessageId = i;
                }
            } else {
                this.showScrollToMessageError = true;
                this.needSelectFromMessageId = true;
            }
        }
        this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
        int i5 = this.startLoadFromMessageId;
        boolean z2;
        long j2;
        if (i5 != 0) {
            this.startLoadFromMessageIdSaved = i5;
            if (i4 != 0) {
                this.mergeDialogId = (long) i4;
                messagesController = getMessagesController();
                j = this.mergeDialogId;
                int i6 = this.loadingFromOldPosition ? 50 : AndroidUtilities.isTablet() ? 30 : 20;
                int i7 = this.startLoadFromMessageId;
                i5 = this.classGuid;
                isChannel = ChatObject.isChannel(this.currentChat);
                z2 = this.inScheduleMode;
                i3 = this.lastLoadIndex;
                this.lastLoadIndex = i3 + 1;
                messagesController.loadMessages(j, i6, i7, 0, true, 0, i5, 3, 0, isChannel, z2, i3);
            } else {
                MessagesController messagesController2 = getMessagesController();
                j2 = this.dialog_id;
                int i8 = this.loadingFromOldPosition ? 50 : AndroidUtilities.isTablet() ? 30 : 20;
                i5 = this.startLoadFromMessageId;
                i = this.classGuid;
                boolean isChannel2 = ChatObject.isChannel(this.currentChat);
                boolean z3 = this.inScheduleMode;
                int i9 = this.lastLoadIndex;
                this.lastLoadIndex = i9 + 1;
                messagesController2.loadMessages(j2, i8, i5, 0, true, 0, i, 3, 0, isChannel2, z3, i9);
            }
        } else {
            MessagesController messagesController3 = getMessagesController();
            j2 = this.dialog_id;
            int i10 = AndroidUtilities.isTablet() ? 30 : 20;
            i5 = this.classGuid;
            boolean isChannel3 = ChatObject.isChannel(this.currentChat);
            z2 = this.inScheduleMode;
            i3 = this.lastLoadIndex;
            this.lastLoadIndex = i3 + 1;
            messagesController3.loadMessages(j2, i10, 0, 0, true, 0, i5, 2, 0, isChannel3, z2, i3);
        }
        if (!this.inScheduleMode) {
            this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
            messagesController = getMessagesController();
            j = this.dialog_id;
            i5 = this.classGuid;
            isChannel = ChatObject.isChannel(this.currentChat);
            i = this.lastLoadIndex;
            this.lastLoadIndex = i + 1;
            messagesController.loadMessages(j, 1, 0, 0, true, 0, i5, 2, 0, isChannel, true, i);
        }
        if (this.currentChat != null) {
            this.chatInfo = getMessagesController().getChatFull(this.currentChat.id);
            if (this.currentChat.megagroup && !getMessagesController().isChannelAdminsLoaded(this.currentChat.id)) {
                getMessagesController().loadChannelAdmins(this.currentChat.id, true);
            }
            ChatFull loadChatInfo = getMessagesStorage().loadChatInfo(this.currentChat.id, null, true, false);
            if (this.chatInfo == null) {
                this.chatInfo = loadChatInfo;
            }
            if (!(this.inScheduleMode || this.chatInfo == null || !ChatObject.isChannel(this.currentChat))) {
                loadChatInfo = this.chatInfo;
                i3 = loadChatInfo.migrated_from_chat_id;
                if (i3 != 0) {
                    this.mergeDialogId = (long) (-i3);
                    this.maxMessageId[1] = loadChatInfo.migrated_from_max_id;
                }
            }
        } else if (this.currentUser != null) {
            getMessagesController().loadUserInfo(this.currentUser, true, this.classGuid);
        }
        if (!this.inScheduleMode) {
            if (i2 != 0 && this.currentUser.bot) {
                getMediaDataController().loadBotInfo(i2, true, this.classGuid);
            } else if (this.chatInfo instanceof TL_chatFull) {
                for (i5 = 0; i5 < this.chatInfo.participants.participants.size(); i5++) {
                    User user = getMessagesController().getUser(Integer.valueOf(((ChatParticipant) this.chatInfo.participants.participants.get(i5)).user_id));
                    if (user != null && user.bot) {
                        getMediaDataController().loadBotInfo(user.id, true, this.classGuid);
                    }
                }
            }
            if (AndroidUtilities.isTablet()) {
                getNotificationCenter().postNotificationName(NotificationCenter.openedChatChanged, Long.valueOf(this.dialog_id), Boolean.valueOf(false));
            }
            if (this.currentUser != null) {
                if (getMessagesController().blockedUsers.indexOfKey(this.currentUser.id) >= 0) {
                    z = true;
                }
                this.userBlocked = z;
            }
            EncryptedChat encryptedChat = this.currentEncryptedChat;
            if (!(encryptedChat == null || AndroidUtilities.getMyLayerVersion(encryptedChat.layer) == 101)) {
                getSecretChatHelper().sendNotifyLayerMessage(this.currentEncryptedChat, null);
            }
        }
        return true;
    }

    public /* synthetic */ void lambda$onFragmentCreate$0$ChatActivity(MessagesStorage messagesStorage, int i, CountDownLatch countDownLatch) {
        this.currentChat = messagesStorage.getChat(i);
        countDownLatch.countDown();
    }

    public /* synthetic */ void lambda$onFragmentCreate$1$ChatActivity(MessagesStorage messagesStorage, int i, CountDownLatch countDownLatch) {
        this.currentUser = messagesStorage.getUser(i);
        countDownLatch.countDown();
    }

    public /* synthetic */ void lambda$onFragmentCreate$2$ChatActivity(MessagesStorage messagesStorage, int i, CountDownLatch countDownLatch) {
        this.currentEncryptedChat = messagesStorage.getEncryptedChat(i);
        countDownLatch.countDown();
    }

    public /* synthetic */ void lambda$onFragmentCreate$3$ChatActivity(MessagesStorage messagesStorage, CountDownLatch countDownLatch) {
        this.currentUser = messagesStorage.getUser(this.currentEncryptedChat.user_id);
        countDownLatch.countDown();
    }

    public void onFragmentDestroy() {
        super.onFragmentDestroy();
        ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
        if (chatActivityEnterView != null) {
            chatActivityEnterView.onDestroy();
        }
        MentionsAdapter mentionsAdapter = this.mentionsAdapter;
        if (mentionsAdapter != null) {
            mentionsAdapter.onDestroy();
        }
        ChatAttachAlert chatAttachAlert = this.chatAttachAlert;
        if (chatAttachAlert != null) {
            chatAttachAlert.dismissInternal();
        }
        UndoView undoView = this.undoView;
        if (undoView != null) {
            undoView.hide(true, 0);
        }
        getMessagesController().setLastCreatedDialogId(this.dialog_id, this.inScheduleMode, false);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagesDidLoad);
        NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.emojiDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.didUpdateConnectionState);
        getNotificationCenter().removeObserver(this, NotificationCenter.updateInterfaces);
        getNotificationCenter().removeObserver(this, NotificationCenter.didReceiveNewMessages);
        getNotificationCenter().removeObserver(this, NotificationCenter.closeChats);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagesRead);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagesDeleted);
        getNotificationCenter().removeObserver(this, NotificationCenter.historyCleared);
        getNotificationCenter().removeObserver(this, NotificationCenter.messageReceivedByServer);
        getNotificationCenter().removeObserver(this, NotificationCenter.messageReceivedByAck);
        getNotificationCenter().removeObserver(this, NotificationCenter.messageSendError);
        getNotificationCenter().removeObserver(this, NotificationCenter.chatInfoDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.encryptedChatUpdated);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagesReadEncrypted);
        getNotificationCenter().removeObserver(this, NotificationCenter.removeAllMessagesFromDialog);
        getNotificationCenter().removeObserver(this, NotificationCenter.contactsDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagePlayingProgressDidChanged);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagePlayingDidReset);
        getNotificationCenter().removeObserver(this, NotificationCenter.screenshotTook);
        getNotificationCenter().removeObserver(this, NotificationCenter.blockedUsersDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.fileNewChunkAvailable);
        getNotificationCenter().removeObserver(this, NotificationCenter.didCreatedNewDeleteTask);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagePlayingDidStart);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagePlayingGoingToStop);
        getNotificationCenter().removeObserver(this, NotificationCenter.updateMessageMedia);
        getNotificationCenter().removeObserver(this, NotificationCenter.replaceMessagesObjects);
        getNotificationCenter().removeObserver(this, NotificationCenter.notificationsSettingsUpdated);
        getNotificationCenter().removeObserver(this, NotificationCenter.replyMessagesDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.didReceivedWebpages);
        getNotificationCenter().removeObserver(this, NotificationCenter.didReceivedWebpagesInUpdates);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagesReadContent);
        getNotificationCenter().removeObserver(this, NotificationCenter.botInfoDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.botKeyboardDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.chatSearchResultsAvailable);
        getNotificationCenter().removeObserver(this, NotificationCenter.chatSearchResultsLoading);
        getNotificationCenter().removeObserver(this, NotificationCenter.messagePlayingPlayStateChanged);
        getNotificationCenter().removeObserver(this, NotificationCenter.didUpdatedMessagesViews);
        getNotificationCenter().removeObserver(this, NotificationCenter.chatInfoCantLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.pinnedMessageDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.peerSettingsDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.newDraftReceived);
        getNotificationCenter().removeObserver(this, NotificationCenter.userInfoDidLoad);
        NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.didSetNewWallpapper);
        NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.didApplyNewTheme);
        NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.goingToPreviewTheme);
        getNotificationCenter().removeObserver(this, NotificationCenter.channelRightsUpdated);
        getNotificationCenter().removeObserver(this, NotificationCenter.updateMentionsCount);
        getNotificationCenter().removeObserver(this, NotificationCenter.audioRecordTooShort);
        getNotificationCenter().removeObserver(this, NotificationCenter.didUpdatePollResults);
        getNotificationCenter().removeObserver(this, NotificationCenter.didUpdateReactions);
        getNotificationCenter().removeObserver(this, NotificationCenter.chatOnlineCountDidLoad);
        getNotificationCenter().removeObserver(this, NotificationCenter.videoLoadingStateChanged);
        getNotificationCenter().removeObserver(this, NotificationCenter.scheduledMessagesUpdated);
        if (!this.inScheduleMode && AndroidUtilities.isTablet()) {
            getNotificationCenter().postNotificationName(NotificationCenter.openedChatChanged, Long.valueOf(this.dialog_id), Boolean.valueOf(true));
        }
        if (this.currentUser != null) {
            MediaController.getInstance().stopMediaObserver();
        }
        if (this.currentEncryptedChat != null) {
            try {
                if (VERSION.SDK_INT >= 23 && (SharedConfig.passcodeHash.length() == 0 || SharedConfig.allowScreenCapture)) {
                    AndroidUtilities.setFlagSecure(this, false);
                }
            } catch (Throwable th) {
                FileLog.e(th);
            }
        }
        if (this.currentUser != null) {
            getMessagesController().cancelLoadFullUser(this.currentUser.id);
        }
        AndroidUtilities.removeAdjustResize(getParentActivity(), this.classGuid);
        StickersAdapter stickersAdapter = this.stickersAdapter;
        if (stickersAdapter != null) {
            stickersAdapter.onDestroy();
        }
        chatAttachAlert = this.chatAttachAlert;
        if (chatAttachAlert != null) {
            chatAttachAlert.onDestroy();
        }
        AndroidUtilities.unlockOrientation(getParentActivity());
        if (ChatObject.isChannel(this.currentChat)) {
            getMessagesController().startShortPoll(this.currentChat, true);
        }
        ChatListTextSelectionHelper chatListTextSelectionHelper = this.textSelectionHelper;
        if (chatListTextSelectionHelper != null) {
            chatListTextSelectionHelper.clear();
        }
    }

    /* JADX WARNING: Removed duplicated region for block: B:104:0x0347  */
    /* JADX WARNING: Removed duplicated region for block: B:114:0x0385  */
    /* JADX WARNING: Removed duplicated region for block: B:226:0x0de6  */
    /* JADX WARNING: Removed duplicated region for block: B:225:0x0de4  */
    /* JADX WARNING: Removed duplicated region for block: B:236:0x0e0a  */
    /* JADX WARNING: Removed duplicated region for block: B:235:0x0e07  */
    /* JADX WARNING: Removed duplicated region for block: B:244:0x117b  */
    /* JADX WARNING: Removed duplicated region for block: B:259:0x11c6  */
    /* JADX WARNING: Removed duplicated region for block: B:262:0x13cf  */
    /* JADX WARNING: Removed duplicated region for block: B:273:0x15e0  */
    /* JADX WARNING: Removed duplicated region for block: B:272:0x15dd  */
    /* JADX WARNING: Removed duplicated region for block: B:276:0x18da  */
    /* JADX WARNING: Removed duplicated region for block: B:301:0x1987  */
    /* JADX WARNING: Removed duplicated region for block: B:207:0x07a1  */
    /* JADX WARNING: Removed duplicated region for block: B:215:0x0923  */
    /* JADX WARNING: Removed duplicated region for block: B:218:0x0dc3  */
    /* JADX WARNING: Removed duplicated region for block: B:225:0x0de4  */
    /* JADX WARNING: Removed duplicated region for block: B:226:0x0de6  */
    /* JADX WARNING: Removed duplicated region for block: B:229:0x0df0  */
    /* JADX WARNING: Removed duplicated region for block: B:235:0x0e07  */
    /* JADX WARNING: Removed duplicated region for block: B:236:0x0e0a  */
    /* JADX WARNING: Removed duplicated region for block: B:244:0x117b  */
    /* JADX WARNING: Removed duplicated region for block: B:247:0x11a1  */
    /* JADX WARNING: Removed duplicated region for block: B:253:0x11b1  */
    /* JADX WARNING: Removed duplicated region for block: B:259:0x11c6  */
    /* JADX WARNING: Removed duplicated region for block: B:262:0x13cf  */
    /* JADX WARNING: Removed duplicated region for block: B:272:0x15dd  */
    /* JADX WARNING: Removed duplicated region for block: B:273:0x15e0  */
    /* JADX WARNING: Removed duplicated region for block: B:276:0x18da  */
    /* JADX WARNING: Removed duplicated region for block: B:279:0x1913  */
    /* JADX WARNING: Removed duplicated region for block: B:301:0x1987  */
    /* JADX WARNING: Missing block: B:51:0x00ff, code skipped:
            if ((r1.participants instanceof org.telegram.tgnet.TLRPC.TL_chatParticipantsForbidden) != false) goto L_0x0101;
     */
    /* JADX WARNING: Missing block: B:95:0x0315, code skipped:
            if (android.text.TextUtils.isEmpty(r2.username) != false) goto L_0x0317;
     */
    /* JADX WARNING: Missing block: B:170:0x0652, code skipped:
            if (r1.creator != false) goto L_0x0654;
     */
    /* JADX WARNING: Missing block: B:221:0x0dc9, code skipped:
            if (r1.megagroup != false) goto L_0x0dcb;
     */
    public android.view.View createView(android.content.Context r34) {
        /*
        r33 = this;
        r7 = r33;
        r8 = r34;
        r0 = new org.telegram.ui.Cells.TextSelectionHelper$ChatListTextSelectionHelper;
        r0.<init>();
        r7.textSelectionHelper = r0;
        r0 = r7.chatMessageCellsCache;
        r0 = r0.isEmpty();
        r9 = 8;
        r10 = 0;
        if (r0 == 0) goto L_0x0026;
    L_0x0016:
        r0 = 0;
    L_0x0017:
        if (r0 >= r9) goto L_0x0026;
    L_0x0019:
        r1 = r7.chatMessageCellsCache;
        r2 = new org.telegram.ui.Cells.ChatMessageCell;
        r2.<init>(r8);
        r1.add(r2);
        r0 = r0 + 1;
        goto L_0x0017;
    L_0x0026:
        r0 = 1;
        r1 = 1;
    L_0x0028:
        if (r1 < 0) goto L_0x0042;
    L_0x002a:
        r2 = r7.selectedMessagesIds;
        r2 = r2[r1];
        r2.clear();
        r2 = r7.selectedMessagesCanCopyIds;
        r2 = r2[r1];
        r2.clear();
        r2 = r7.selectedMessagesCanStarIds;
        r2 = r2[r1];
        r2.clear();
        r1 = r1 + -1;
        goto L_0x0028;
    L_0x0042:
        r7.cantDeleteMessagesCount = r10;
        r7.canEditMessagesCount = r10;
        r7.cantForwardMessagesCount = r10;
        r7.canForwardMessagesCount = r10;
        r11 = 0;
        r7.videoPlayerContainer = r11;
        r7.voiceHintTextView = r11;
        r7.hasOwnBackground = r0;
        r1 = r7.chatAttachAlert;
        if (r1 == 0) goto L_0x0067;
    L_0x0055:
        r1 = r1.isShowing();	 Catch:{ Exception -> 0x0060 }
        if (r1 == 0) goto L_0x0060;
    L_0x005b:
        r1 = r7.chatAttachAlert;	 Catch:{ Exception -> 0x0060 }
        r1.dismiss();	 Catch:{ Exception -> 0x0060 }
    L_0x0060:
        r1 = r7.chatAttachAlert;
        r1.onDestroy();
        r7.chatAttachAlert = r11;
    L_0x0067:
        r1 = r7.stickersAdapter;
        if (r1 == 0) goto L_0x0070;
    L_0x006b:
        r1.onDestroy();
        r7.stickersAdapter = r11;
    L_0x0070:
        org.telegram.ui.ActionBar.Theme.createChatResources(r8, r10);
        r1 = r7.actionBar;
        r1.setAddToContainer(r10);
        r1 = r7.inPreviewMode;
        if (r1 == 0) goto L_0x0082;
    L_0x007c:
        r1 = r7.actionBar;
        r1.setBackButtonDrawable(r11);
        goto L_0x008c;
    L_0x0082:
        r1 = r7.actionBar;
        r2 = new org.telegram.ui.ActionBar.BackDrawable;
        r2.<init>(r10);
        r1.setBackButtonDrawable(r2);
    L_0x008c:
        r1 = r7.actionBar;
        r2 = new org.telegram.ui.ChatActivity$5;
        r2.<init>();
        r1.setActionBarMenuOnItemClick(r2);
        r1 = new org.telegram.ui.Components.ChatAvatarContainer;
        r2 = r7.currentEncryptedChat;
        if (r2 == 0) goto L_0x009e;
    L_0x009c:
        r2 = 1;
        goto L_0x009f;
    L_0x009e:
        r2 = 0;
    L_0x009f:
        r1.<init>(r8, r7, r2);
        r7.avatarContainer = r1;
        r1 = r7.inPreviewMode;
        if (r1 == 0) goto L_0x00ad;
    L_0x00a8:
        r1 = r7.avatarContainer;
        r1.setOccupyStatusBar(r10);
    L_0x00ad:
        r1 = r7.actionBar;
        r2 = r7.avatarContainer;
        r12 = -2;
        r13 = -NUM; // 0xffffffffbvar_ float:-1.0 double:NaN;
        r14 = 51;
        r3 = r7.inPreviewMode;
        if (r3 != 0) goto L_0x00bf;
    L_0x00ba:
        r3 = NUM; // 0x42600000 float:56.0 double:5.50185432E-315;
        r15 = NUM; // 0x42600000 float:56.0 double:5.50185432E-315;
        goto L_0x00c0;
    L_0x00bf:
        r15 = 0;
    L_0x00c0:
        r16 = 0;
        r17 = NUM; // 0x42200000 float:40.0 double:5.481131706E-315;
        r18 = 0;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r12, r13, r14, r15, r16, r17, r18);
        r1.addView(r2, r10, r3);
        r1 = r7.currentChat;
        if (r1 == 0) goto L_0x0106;
    L_0x00d1:
        r1 = org.telegram.messenger.ChatObject.isChannel(r1);
        if (r1 != 0) goto L_0x0106;
    L_0x00d7:
        r1 = r7.currentChat;
        r1 = r1.participants_count;
        r2 = r7.chatInfo;
        if (r2 == 0) goto L_0x00e7;
    L_0x00df:
        r1 = r2.participants;
        r1 = r1.participants;
        r1 = r1.size();
    L_0x00e7:
        if (r1 == 0) goto L_0x0101;
    L_0x00e9:
        r1 = r7.currentChat;
        r2 = r1.deactivated;
        if (r2 != 0) goto L_0x0101;
    L_0x00ef:
        r2 = r1.left;
        if (r2 != 0) goto L_0x0101;
    L_0x00f3:
        r1 = r1 instanceof org.telegram.tgnet.TLRPC.TL_chatForbidden;
        if (r1 != 0) goto L_0x0101;
    L_0x00f7:
        r1 = r7.chatInfo;
        if (r1 == 0) goto L_0x0106;
    L_0x00fb:
        r1 = r1.participants;
        r1 = r1 instanceof org.telegram.tgnet.TLRPC.TL_chatParticipantsForbidden;
        if (r1 == 0) goto L_0x0106;
    L_0x0101:
        r1 = r7.avatarContainer;
        r1.setEnabled(r10);
    L_0x0106:
        r1 = r7.actionBar;
        r1 = r1.createMenu();
        r2 = r7.currentEncryptedChat;
        if (r2 != 0) goto L_0x013d;
    L_0x0110:
        r2 = r7.inScheduleMode;
        if (r2 != 0) goto L_0x013d;
    L_0x0114:
        r2 = NUM; // 0x7var_fc float:1.794509E38 double:1.0529356275E-314;
        r2 = r1.addItem(r10, r2);
        r2 = r2.setIsSearchField(r0);
        r3 = new org.telegram.ui.ChatActivity$6;
        r3.<init>();
        r2 = r2.setActionBarMenuItemSearchListener(r3);
        r7.searchItem = r2;
        r2 = r7.searchItem;
        r3 = NUM; // 0x7f0e09ba float:1.8880088E38 double:1.053163387E-314;
        r4 = "Search";
        r3 = org.telegram.messenger.LocaleController.getString(r4, r3);
        r2.setSearchFieldHint(r3);
        r2 = r7.searchItem;
        r2.setVisibility(r9);
    L_0x013d:
        r2 = r7.inScheduleMode;
        r12 = 16;
        r13 = "fonts/rmedium.ttf";
        r14 = 17;
        r15 = 51;
        if (r2 != 0) goto L_0x03fc;
    L_0x0149:
        r2 = NUM; // 0x7var_f9 float:1.7945083E38 double:1.052935626E-314;
        r2 = r1.addItem(r10, r2);
        r7.headerItem = r2;
        r2 = r7.headerItem;
        r3 = NUM; // 0x7f0e002c float:1.8875127E38 double:1.0531621784E-314;
        r4 = "AccDescrMoreOptions";
        r3 = org.telegram.messenger.LocaleController.getString(r4, r3);
        r2.setContentDescription(r3);
        r2 = r7.currentUser;
        if (r2 == 0) goto L_0x0198;
    L_0x0164:
        r2 = r7.headerItem;
        r3 = 32;
        r4 = NUM; // 0x7var_c7 float:1.79455E38 double:1.052935728E-314;
        r5 = NUM; // 0x7f0e01fd float:1.887607E38 double:1.053162408E-314;
        r6 = "Call";
        r5 = org.telegram.messenger.LocaleController.getString(r6, r5);
        r2.addSubItem(r3, r4, r5);
        r2 = r33.getMessagesController();
        r3 = r7.currentUser;
        r3 = r3.id;
        r2 = r2.getUserFull(r3);
        if (r2 == 0) goto L_0x0191;
    L_0x0185:
        r2 = r2.phone_calls_available;
        if (r2 == 0) goto L_0x0191;
    L_0x0189:
        r2 = r7.headerItem;
        r3 = 32;
        r2.showSubItem(r3);
        goto L_0x0198;
    L_0x0191:
        r2 = r7.headerItem;
        r3 = 32;
        r2.hideSubItem(r3);
    L_0x0198:
        r2 = NUM; // 0x7var_f9 float:1.7945083E38 double:1.052935626E-314;
        r2 = r1.addItem(r10, r2);
        r7.editTextItem = r2;
        r2 = r7.editTextItem;
        r2.setTag(r11);
        r2 = r7.editTextItem;
        r2.setVisibility(r9);
        r2 = new android.text.SpannableStringBuilder;
        r3 = NUM; // 0x7f0e01e7 float:1.8876025E38 double:1.053162397E-314;
        r4 = "Bold";
        r3 = org.telegram.messenger.LocaleController.getString(r4, r3);
        r2.<init>(r3);
        r3 = new org.telegram.ui.Components.TypefaceSpan;
        r4 = org.telegram.messenger.AndroidUtilities.getTypeface(r13);
        r3.<init>(r4);
        r4 = r2.length();
        r5 = 33;
        r2.setSpan(r3, r10, r4, r5);
        r3 = r7.editTextItem;
        r4 = 50;
        r3.addSubItem(r4, r2);
        r2 = new android.text.SpannableStringBuilder;
        r3 = NUM; // 0x7f0e059f float:1.8877956E38 double:1.0531628676E-314;
        r4 = "Italic";
        r3 = org.telegram.messenger.LocaleController.getString(r4, r3);
        r2.<init>(r3);
        r3 = new org.telegram.ui.Components.TypefaceSpan;
        r4 = "fonts/ritalic.ttf";
        r4 = org.telegram.messenger.AndroidUtilities.getTypeface(r4);
        r3.<init>(r4);
        r4 = r2.length();
        r2.setSpan(r3, r10, r4, r5);
        r3 = r7.editTextItem;
        r3.addSubItem(r15, r2);
        r2 = new android.text.SpannableStringBuilder;
        r3 = NUM; // 0x7f0e066d float:1.8878374E38 double:1.0531629694E-314;
        r4 = "Mono";
        r3 = org.telegram.messenger.LocaleController.getString(r4, r3);
        r2.<init>(r3);
        r3 = new org.telegram.ui.Components.TypefaceSpan;
        r4 = android.graphics.Typeface.MONOSPACE;
        r3.<init>(r4);
        r4 = r2.length();
        r2.setSpan(r3, r10, r4, r5);
        r3 = r7.editTextItem;
        r4 = 52;
        r3.addSubItem(r4, r2);
        r2 = r7.currentEncryptedChat;
        if (r2 == 0) goto L_0x022a;
    L_0x021e:
        if (r2 == 0) goto L_0x0282;
    L_0x0220:
        r2 = r2.layer;
        r2 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r2);
        r3 = 101; // 0x65 float:1.42E-43 double:5.0E-322;
        if (r2 < r3) goto L_0x0282;
    L_0x022a:
        r2 = new android.text.SpannableStringBuilder;
        r3 = NUM; // 0x7f0e0aa9 float:1.8880573E38 double:1.053163505E-314;
        r4 = "Strike";
        r3 = org.telegram.messenger.LocaleController.getString(r4, r3);
        r2.<init>(r3);
        r3 = new org.telegram.ui.Components.TextStyleSpan$TextStyleRun;
        r3.<init>();
        r4 = r3.flags;
        r4 = r4 | r9;
        r3.flags = r4;
        r4 = new org.telegram.ui.Components.TextStyleSpan;
        r4.<init>(r3);
        r3 = r2.length();
        r5 = 33;
        r2.setSpan(r4, r10, r3, r5);
        r3 = r7.editTextItem;
        r4 = 55;
        r3.addSubItem(r4, r2);
        r2 = new android.text.SpannableStringBuilder;
        r3 = NUM; // 0x7f0e0b51 float:1.8880913E38 double:1.053163588E-314;
        r4 = "Underline";
        r3 = org.telegram.messenger.LocaleController.getString(r4, r3);
        r2.<init>(r3);
        r3 = new org.telegram.ui.Components.TextStyleSpan$TextStyleRun;
        r3.<init>();
        r4 = r3.flags;
        r4 = r4 | r12;
        r3.flags = r4;
        r4 = new org.telegram.ui.Components.TextStyleSpan;
        r4.<init>(r3);
        r3 = r2.length();
        r2.setSpan(r4, r10, r3, r5);
        r3 = r7.editTextItem;
        r4 = 56;
        r3.addSubItem(r4, r2);
    L_0x0282:
        r2 = r7.editTextItem;
        r3 = 53;
        r4 = NUM; // 0x7f0e0346 float:1.8876737E38 double:1.0531625707E-314;
        r5 = "CreateLink";
        r4 = org.telegram.messenger.LocaleController.getString(r5, r4);
        r2.addSubItem(r3, r4);
        r2 = r7.editTextItem;
        r3 = 54;
        r4 = NUM; // 0x7f0e0950 float:1.8879873E38 double:1.0531633345E-314;
        r5 = "Regular";
        r4 = org.telegram.messenger.LocaleController.getString(r5, r4);
        r2.addSubItem(r3, r4);
        r2 = r7.searchItem;
        if (r2 == 0) goto L_0x02b9;
    L_0x02a6:
        r2 = r7.headerItem;
        r3 = 40;
        r4 = NUM; // 0x7var_ff float:1.7945614E38 double:1.0529357555E-314;
        r5 = NUM; // 0x7f0e09ba float:1.8880088E38 double:1.053163387E-314;
        r6 = "Search";
        r5 = org.telegram.messenger.LocaleController.getString(r6, r5);
        r2.addSubItem(r3, r4, r5);
    L_0x02b9:
        r2 = r7.currentChat;
        if (r2 == 0) goto L_0x02d4;
    L_0x02bd:
        r2 = r2.creator;
        if (r2 != 0) goto L_0x02d4;
    L_0x02c1:
        r2 = r7.headerItem;
        r3 = 21;
        r4 = NUM; // 0x7var_f4 float:1.7945592E38 double:1.05293575E-314;
        r5 = NUM; // 0x7f0e0964 float:1.8879913E38 double:1.0531633444E-314;
        r6 = "ReportChat";
        r5 = org.telegram.messenger.LocaleController.getString(r6, r5);
        r2.addSubItem(r3, r4, r5);
    L_0x02d4:
        r2 = r7.currentUser;
        if (r2 == 0) goto L_0x02e5;
    L_0x02d8:
        r2 = r7.headerItem;
        r3 = NUM; // 0x7var_c3 float:1.7945493E38 double:1.052935726E-314;
        r4 = "";
        r2 = r2.addSubItem(r14, r3, r4);
        r7.addContactItem = r2;
    L_0x02e5:
        r2 = r7.currentEncryptedChat;
        if (r2 == 0) goto L_0x02ff;
    L_0x02e9:
        r2 = r7.headerItem;
        r3 = 13;
        r4 = NUM; // 0x7var_ float:1.7945627E38 double:1.0529357585E-314;
        r5 = NUM; // 0x7f0e0a2b float:1.8880317E38 double:1.0531634427E-314;
        r6 = "SetTimer";
        r5 = org.telegram.messenger.LocaleController.getString(r6, r5);
        r2 = r2.addSubItem(r3, r4, r5);
        r7.timeItem2 = r2;
    L_0x02ff:
        r2 = r7.currentChat;
        r2 = org.telegram.messenger.ChatObject.isChannel(r2);
        if (r2 == 0) goto L_0x0317;
    L_0x0307:
        r2 = r7.currentChat;
        if (r2 == 0) goto L_0x032a;
    L_0x030b:
        r3 = r2.megagroup;
        if (r3 == 0) goto L_0x032a;
    L_0x030f:
        r2 = r2.username;
        r2 = android.text.TextUtils.isEmpty(r2);
        if (r2 == 0) goto L_0x032a;
    L_0x0317:
        r2 = r7.headerItem;
        r3 = 15;
        r4 = NUM; // 0x7var_ca float:1.7945507E38 double:1.0529357293E-314;
        r5 = NUM; // 0x7f0e02f9 float:1.8876581E38 double:1.0531625326E-314;
        r6 = "ClearHistory";
        r5 = org.telegram.messenger.LocaleController.getString(r6, r5);
        r2.addSubItem(r3, r4, r5);
    L_0x032a:
        r2 = r7.currentUser;
        if (r2 == 0) goto L_0x0332;
    L_0x032e:
        r2 = r2.self;
        if (r2 != 0) goto L_0x033f;
    L_0x0332:
        r2 = r7.headerItem;
        r3 = 18;
        r4 = NUM; // 0x7var_e8 float:1.7945568E38 double:1.052935744E-314;
        r2 = r2.addSubItem(r3, r4, r11);
        r7.muteItem = r2;
    L_0x033f:
        r2 = r7.currentChat;
        r2 = org.telegram.messenger.ChatObject.isChannel(r2);
        if (r2 == 0) goto L_0x037d;
    L_0x0347:
        r2 = r7.currentChat;
        r3 = r2.creator;
        if (r3 != 0) goto L_0x037d;
    L_0x034d:
        r2 = org.telegram.messenger.ChatObject.isNotInChat(r2);
        if (r2 != 0) goto L_0x03ac;
    L_0x0353:
        r2 = r7.currentChat;
        r2 = r2.megagroup;
        if (r2 == 0) goto L_0x036b;
    L_0x0359:
        r2 = r7.headerItem;
        r3 = NUM; // 0x7var_de float:1.7945547E38 double:1.052935739E-314;
        r4 = NUM; // 0x7f0e05ce float:1.8878052E38 double:1.053162891E-314;
        r5 = "LeaveMegaMenu";
        r4 = org.telegram.messenger.LocaleController.getString(r5, r4);
        r2.addSubItem(r12, r3, r4);
        goto L_0x03ac;
    L_0x036b:
        r2 = r7.headerItem;
        r3 = NUM; // 0x7var_de float:1.7945547E38 double:1.052935739E-314;
        r4 = NUM; // 0x7f0e05cc float:1.8878047E38 double:1.05316289E-314;
        r5 = "LeaveChannelMenu";
        r4 = org.telegram.messenger.LocaleController.getString(r5, r4);
        r2.addSubItem(r12, r3, r4);
        goto L_0x03ac;
    L_0x037d:
        r2 = r7.currentChat;
        r2 = org.telegram.messenger.ChatObject.isChannel(r2);
        if (r2 != 0) goto L_0x03ac;
    L_0x0385:
        r2 = r7.currentChat;
        if (r2 == 0) goto L_0x039b;
    L_0x0389:
        r2 = r7.headerItem;
        r3 = NUM; // 0x7var_de float:1.7945547E38 double:1.052935739E-314;
        r4 = NUM; // 0x7f0e0389 float:1.8876873E38 double:1.053162604E-314;
        r5 = "DeleteAndExit";
        r4 = org.telegram.messenger.LocaleController.getString(r5, r4);
        r2.addSubItem(r12, r3, r4);
        goto L_0x03ac;
    L_0x039b:
        r2 = r7.headerItem;
        r3 = NUM; // 0x7var_ce float:1.7945515E38 double:1.0529357313E-314;
        r4 = NUM; // 0x7f0e0395 float:1.8876897E38 double:1.0531626097E-314;
        r5 = "DeleteChatUser";
        r4 = org.telegram.messenger.LocaleController.getString(r5, r4);
        r2.addSubItem(r12, r3, r4);
    L_0x03ac:
        r2 = r7.currentUser;
        if (r2 == 0) goto L_0x03c7;
    L_0x03b0:
        r2 = r2.self;
        if (r2 == 0) goto L_0x03c7;
    L_0x03b4:
        r2 = r7.headerItem;
        r3 = 24;
        r4 = NUM; // 0x7var_d8 float:1.7945535E38 double:1.052935736E-314;
        r5 = NUM; // 0x7f0e00c0 float:1.8875427E38 double:1.0531622515E-314;
        r6 = "AddShortcut";
        r5 = org.telegram.messenger.LocaleController.getString(r6, r5);
        r2.addSubItem(r3, r4, r5);
    L_0x03c7:
        r2 = r7.currentUser;
        if (r2 == 0) goto L_0x03fc;
    L_0x03cb:
        r3 = r7.currentEncryptedChat;
        if (r3 != 0) goto L_0x03fc;
    L_0x03cf:
        r2 = r2.bot;
        if (r2 == 0) goto L_0x03fc;
    L_0x03d3:
        r2 = r7.headerItem;
        r3 = 31;
        r4 = NUM; // 0x7var_b1 float:1.7945456E38 double:1.052935717E-314;
        r5 = NUM; // 0x7f0e01ef float:1.8876042E38 double:1.053162401E-314;
        r6 = "BotSettings";
        r5 = org.telegram.messenger.LocaleController.getString(r6, r5);
        r2.addSubItem(r3, r4, r5);
        r2 = r7.headerItem;
        r3 = 30;
        r4 = NUM; // 0x7var_d float:1.7945416E38 double:1.052935707E-314;
        r5 = NUM; // 0x7f0e01ea float:1.8876031E38 double:1.0531623987E-314;
        r6 = "BotHelp";
        r5 = org.telegram.messenger.LocaleController.getString(r6, r5);
        r2.addSubItem(r3, r4, r5);
        r33.updateBotButtons();
    L_0x03fc:
        r33.updateTitle();
        r2 = r7.avatarContainer;
        r2.updateOnlineCount();
        r2 = r7.avatarContainer;
        r2.updateSubtitle();
        r33.updateTitleIcons();
        r2 = r7.inScheduleMode;
        if (r2 != 0) goto L_0x0428;
    L_0x0410:
        r2 = 14;
        r3 = NUM; // 0x7var_f9 float:1.7945083E38 double:1.052935626E-314;
        r1 = r1.addItem(r2, r3);
        r1 = r1.setOverrideMenuClick(r0);
        r1 = r1.setAllowCloseAnimation(r10);
        r7.attachItem = r1;
        r1 = r7.attachItem;
        r1.setVisibility(r9);
    L_0x0428:
        r1 = r7.actionModeViews;
        r1.clear();
        r1 = r7.inPreviewMode;
        if (r1 == 0) goto L_0x043d;
    L_0x0431:
        r1 = r7.headerItem;
        r6 = 0;
        r1.setAlpha(r6);
        r1 = r7.attachItem;
        r1.setAlpha(r6);
        goto L_0x043e;
    L_0x043d:
        r6 = 0;
    L_0x043e:
        r1 = r7.actionBar;
        r1 = r1.createActionMode();
        r2 = new org.telegram.ui.Components.NumberTextView;
        r3 = r1.getContext();
        r2.<init>(r3);
        r7.selectedMessagesCountTextView = r2;
        r2 = r7.selectedMessagesCountTextView;
        r3 = 18;
        r2.setTextSize(r3);
        r2 = r7.selectedMessagesCountTextView;
        r3 = org.telegram.messenger.AndroidUtilities.getTypeface(r13);
        r2.setTypeface(r3);
        r2 = r7.selectedMessagesCountTextView;
        r3 = "actionBarActionModeDefaultIcon";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r2.setTextColor(r3);
        r2 = r7.selectedMessagesCountTextView;
        r16 = 0;
        r17 = -1;
        r18 = NUM; // 0x3var_ float:1.0 double:5.263544247E-315;
        r19 = 65;
        r20 = 0;
        r21 = 0;
        r22 = 0;
        r3 = org.telegram.ui.Components.LayoutHelper.createLinear(r16, r17, r18, r19, r20, r21, r22);
        r1.addView(r2, r3);
        r2 = r7.selectedMessagesCountTextView;
        r3 = org.telegram.ui.-$$Lambda$ChatActivity$NimgLxaIUxUA1P59a4CSYNRrn9s.INSTANCE;
        r2.setOnTouchListener(r3);
        r2 = r7.currentEncryptedChat;
        r5 = 23;
        r3 = NUM; // 0x42580000 float:54.0 double:5.499263994E-315;
        if (r2 != 0) goto L_0x0516;
    L_0x0490:
        r2 = r7.actionModeViews;
        r4 = NUM; // 0x7var_d0 float:1.794552E38 double:1.0529357323E-314;
        r6 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r12 = NUM; // 0x7f0e03e5 float:1.887706E38 double:1.053162649E-314;
        r15 = "Edit";
        r12 = org.telegram.messenger.LocaleController.getString(r15, r12);
        r4 = r1.addItemWithWidth(r5, r4, r6, r12);
        r2.add(r4);
        r2 = r7.actionModeViews;
        r4 = 22;
        r6 = NUM; // 0x7var_d1 float:1.7945521E38 double:1.052935733E-314;
        r12 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r15 = NUM; // 0x7f0e00c9 float:1.8875445E38 double:1.053162256E-314;
        r9 = "AddToFavorites";
        r9 = org.telegram.messenger.LocaleController.getString(r9, r15);
        r4 = r1.addItemWithWidth(r4, r6, r12, r9);
        r2.add(r4);
        r2 = r7.actionModeViews;
        r4 = 10;
        r6 = NUM; // 0x7var_cd float:1.7945513E38 double:1.052935731E-314;
        r9 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r12 = NUM; // 0x7f0e0339 float:1.887671E38 double:1.053162564E-314;
        r15 = "Copy";
        r12 = org.telegram.messenger.LocaleController.getString(r15, r12);
        r4 = r1.addItemWithWidth(r4, r6, r9, r12);
        r2.add(r4);
        r2 = r7.actionModeViews;
        r4 = 11;
        r6 = NUM; // 0x7var_d2 float:1.7945523E38 double:1.0529357333E-314;
        r9 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r12 = NUM; // 0x7f0e04cc float:1.8877528E38 double:1.0531627633E-314;
        r15 = "Forward";
        r12 = org.telegram.messenger.LocaleController.getString(r15, r12);
        r4 = r1.addItemWithWidth(r4, r6, r9, r12);
        r2.add(r4);
        r2 = r7.actionModeViews;
        r4 = 12;
        r6 = NUM; // 0x7var_ce float:1.7945515E38 double:1.0529357313E-314;
        r3 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r9 = NUM; // 0x7f0e0382 float:1.8876859E38 double:1.0531626003E-314;
        r12 = "Delete";
        r9 = org.telegram.messenger.LocaleController.getString(r12, r9);
        r3 = r1.addItemWithWidth(r4, r6, r3, r9);
        r2.add(r3);
        goto L_0x0580;
    L_0x0516:
        r2 = r7.actionModeViews;
        r4 = NUM; // 0x7var_d0 float:1.794552E38 double:1.0529357323E-314;
        r6 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r9 = NUM; // 0x7f0e03e5 float:1.887706E38 double:1.053162649E-314;
        r12 = "Edit";
        r9 = org.telegram.messenger.LocaleController.getString(r12, r9);
        r4 = r1.addItemWithWidth(r5, r4, r6, r9);
        r2.add(r4);
        r2 = r7.actionModeViews;
        r4 = 22;
        r6 = NUM; // 0x7var_d1 float:1.7945521E38 double:1.052935733E-314;
        r9 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r12 = NUM; // 0x7f0e00c9 float:1.8875445E38 double:1.053162256E-314;
        r15 = "AddToFavorites";
        r12 = org.telegram.messenger.LocaleController.getString(r15, r12);
        r4 = r1.addItemWithWidth(r4, r6, r9, r12);
        r2.add(r4);
        r2 = r7.actionModeViews;
        r4 = 10;
        r6 = NUM; // 0x7var_cd float:1.7945513E38 double:1.052935731E-314;
        r9 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r12 = NUM; // 0x7f0e0339 float:1.887671E38 double:1.053162564E-314;
        r15 = "Copy";
        r12 = org.telegram.messenger.LocaleController.getString(r15, r12);
        r4 = r1.addItemWithWidth(r4, r6, r9, r12);
        r2.add(r4);
        r2 = r7.actionModeViews;
        r4 = 12;
        r6 = NUM; // 0x7var_ce float:1.7945515E38 double:1.0529357313E-314;
        r3 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r9 = NUM; // 0x7f0e0382 float:1.8876859E38 double:1.0531626003E-314;
        r12 = "Delete";
        r9 = org.telegram.messenger.LocaleController.getString(r12, r9);
        r3 = r1.addItemWithWidth(r4, r6, r3, r9);
        r2.add(r3);
    L_0x0580:
        r2 = r1.getItem(r5);
        r3 = r7.canEditMessagesCount;
        if (r3 != r0) goto L_0x059d;
    L_0x0588:
        r3 = r7.selectedMessagesIds;
        r3 = r3[r10];
        r3 = r3.size();
        r4 = r7.selectedMessagesIds;
        r4 = r4[r0];
        r4 = r4.size();
        r3 = r3 + r4;
        if (r3 != r0) goto L_0x059d;
    L_0x059b:
        r3 = 0;
        goto L_0x059f;
    L_0x059d:
        r3 = 8;
    L_0x059f:
        r2.setVisibility(r3);
        r2 = 10;
        r2 = r1.getItem(r2);
        r3 = r7.selectedMessagesCanCopyIds;
        r3 = r3[r10];
        r3 = r3.size();
        r4 = r7.selectedMessagesCanCopyIds;
        r4 = r4[r0];
        r4 = r4.size();
        r3 = r3 + r4;
        if (r3 == 0) goto L_0x05bd;
    L_0x05bb:
        r3 = 0;
        goto L_0x05bf;
    L_0x05bd:
        r3 = 8;
    L_0x05bf:
        r2.setVisibility(r3);
        r2 = 22;
        r2 = r1.getItem(r2);
        r3 = r7.selectedMessagesCanStarIds;
        r3 = r3[r10];
        r3 = r3.size();
        r4 = r7.selectedMessagesCanStarIds;
        r4 = r4[r0];
        r4 = r4.size();
        r3 = r3 + r4;
        if (r3 == 0) goto L_0x05dd;
    L_0x05db:
        r3 = 0;
        goto L_0x05df;
    L_0x05dd:
        r3 = 8;
    L_0x05df:
        r2.setVisibility(r3);
        r2 = 12;
        r1 = r1.getItem(r2);
        r2 = r7.cantDeleteMessagesCount;
        if (r2 != 0) goto L_0x05ee;
    L_0x05ec:
        r2 = 0;
        goto L_0x05f0;
    L_0x05ee:
        r2 = 8;
    L_0x05f0:
        r1.setVisibility(r2);
        r33.checkActionBarMenu();
        r1 = new org.telegram.ui.ChatActivity$7;
        r1.<init>();
        r7.scrimPaint = r1;
        r1 = new org.telegram.ui.ChatActivity$8;
        r2 = r7.parentLayout;
        r1.<init>(r8, r2, r8);
        r7.fragmentView = r1;
        r1 = r7.fragmentView;
        r1 = (org.telegram.ui.Components.SizeNotifierFrameLayout) r1;
        r7.contentView = r1;
        r1 = r7.contentView;
        r2 = org.telegram.ui.ActionBar.Theme.getCachedWallpaper();
        r3 = org.telegram.ui.ActionBar.Theme.isWallpaperMotion();
        r1.setBackgroundImage(r2, r3);
        r1 = new android.widget.FrameLayout;
        r1.<init>(r8);
        r7.emptyViewContainer = r1;
        r1 = r7.emptyViewContainer;
        r9 = 4;
        r1.setVisibility(r9);
        r1 = r7.contentView;
        r2 = r7.emptyViewContainer;
        r12 = -2;
        r15 = -1;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r15, r12, r14);
        r1.addView(r2, r3);
        r1 = r7.emptyViewContainer;
        r2 = org.telegram.ui.-$$Lambda$ChatActivity$hcAWiiBslensQzGGfNwnu6FWkPI.INSTANCE;
        r1.setOnTouchListener(r2);
        r1 = r7.currentEncryptedChat;
        r6 = NUM; // 0x41600000 float:14.0 double:5.41896386E-315;
        if (r1 != 0) goto L_0x0733;
    L_0x0640:
        r1 = r7.inScheduleMode;
        if (r1 != 0) goto L_0x0686;
    L_0x0644:
        r1 = r7.currentUser;
        if (r1 == 0) goto L_0x064c;
    L_0x0648:
        r1 = r1.self;
        if (r1 != 0) goto L_0x0654;
    L_0x064c:
        r1 = r7.currentChat;
        if (r1 == 0) goto L_0x0686;
    L_0x0650:
        r1 = r1.creator;
        if (r1 == 0) goto L_0x0686;
    L_0x0654:
        r1 = new org.telegram.ui.Components.ChatBigEmptyView;
        r2 = r7.currentChat;
        if (r2 == 0) goto L_0x065c;
    L_0x065a:
        r2 = 1;
        goto L_0x065d;
    L_0x065c:
        r2 = 2;
    L_0x065d:
        r1.<init>(r8, r2);
        r7.bigEmptyView = r1;
        r1 = r7.emptyViewContainer;
        r2 = r7.bigEmptyView;
        r3 = new android.widget.FrameLayout$LayoutParams;
        r3.<init>(r12, r12, r14);
        r1.addView(r2, r3);
        r1 = r7.currentChat;
        if (r1 == 0) goto L_0x0785;
    L_0x0672:
        r1 = r7.bigEmptyView;
        r2 = NUM; // 0x7f0e053a float:1.8877751E38 double:1.0531628177E-314;
        r3 = "GroupEmptyTitle1";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r2 = org.telegram.messenger.AndroidUtilities.replaceTags(r2);
        r1.setStatusText(r2);
        goto L_0x0785;
    L_0x0686:
        r1 = new android.widget.TextView;
        r1.<init>(r8);
        r7.emptyView = r1;
        r1 = r7.inScheduleMode;
        if (r1 == 0) goto L_0x06a0;
    L_0x0691:
        r1 = r7.emptyView;
        r2 = NUM; // 0x7f0e06c8 float:1.8878559E38 double:1.0531630143E-314;
        r3 = "NoScheduledMessages";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r1.setText(r2);
        goto L_0x06d8;
    L_0x06a0:
        r1 = r7.currentUser;
        if (r1 == 0) goto L_0x06ca;
    L_0x06a4:
        r2 = r1.id;
        r3 = 777000; // 0xbdb28 float:1.088809E-39 double:3.83889E-318;
        if (r2 == r3) goto L_0x06ca;
    L_0x06ab:
        r3 = 429000; // 0x68bc8 float:6.01157E-40 double:2.11954E-318;
        if (r2 == r3) goto L_0x06ca;
    L_0x06b0:
        r3 = 4244000; // 0x40CLASSNAME float:5.94711E-39 double:2.0968146E-317;
        if (r2 == r3) goto L_0x06ca;
    L_0x06b5:
        r1 = org.telegram.messenger.MessagesController.isSupportUser(r1);
        if (r1 == 0) goto L_0x06ca;
    L_0x06bb:
        r1 = r7.emptyView;
        r2 = NUM; // 0x7f0e052a float:1.8877719E38 double:1.05316281E-314;
        r3 = "GotAQuestion";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r1.setText(r2);
        goto L_0x06d8;
    L_0x06ca:
        r1 = r7.emptyView;
        r2 = NUM; // 0x7f0e06b9 float:1.8878528E38 double:1.053163007E-314;
        r3 = "NoMessages";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r1.setText(r2);
    L_0x06d8:
        r1 = r7.emptyView;
        r1.setTextSize(r0, r6);
        r1 = r7.emptyView;
        r1.setGravity(r14);
        r1 = r7.emptyView;
        r2 = "chat_serviceText";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setTextColor(r2);
        r1 = r7.emptyView;
        r2 = NUM; // 0x7var_c9 float:1.7946024E38 double:1.0529358553E-314;
        r1.setBackgroundResource(r2);
        r1 = r7.emptyView;
        r1 = r1.getBackground();
        r2 = org.telegram.ui.ActionBar.Theme.colorFilter;
        r1.setColorFilter(r2);
        r1 = r7.emptyView;
        r2 = org.telegram.messenger.AndroidUtilities.getTypeface(r13);
        r1.setTypeface(r2);
        r1 = r7.emptyView;
        r2 = NUM; // 0x41200000 float:10.0 double:5.398241246E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r3 = NUM; // 0x40000000 float:2.0 double:5.304989477E-315;
        r3 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r4 = NUM; // 0x41200000 float:10.0 double:5.398241246E-315;
        r4 = org.telegram.messenger.AndroidUtilities.dp(r4);
        r20 = NUM; // 0x40400000 float:3.0 double:5.325712093E-315;
        r5 = org.telegram.messenger.AndroidUtilities.dp(r20);
        r1.setPadding(r2, r3, r4, r5);
        r1 = r7.emptyViewContainer;
        r2 = r7.emptyView;
        r3 = new android.widget.FrameLayout$LayoutParams;
        r3.<init>(r12, r12, r14);
        r1.addView(r2, r3);
        goto L_0x0785;
    L_0x0733:
        r1 = new org.telegram.ui.Components.ChatBigEmptyView;
        r1.<init>(r8, r10);
        r7.bigEmptyView = r1;
        r1 = r7.currentEncryptedChat;
        r1 = r1.admin_id;
        r2 = r33.getUserConfig();
        r2 = r2.getClientUserId();
        if (r1 != r2) goto L_0x0761;
    L_0x0748:
        r1 = r7.bigEmptyView;
        r2 = NUM; // 0x7f0e042f float:1.887721E38 double:1.053162686E-314;
        r3 = new java.lang.Object[r0];
        r4 = r7.currentUser;
        r4 = org.telegram.messenger.UserObject.getFirstName(r4);
        r3[r10] = r4;
        r4 = "EncryptedPlaceholderTitleOutgoing";
        r2 = org.telegram.messenger.LocaleController.formatString(r4, r2, r3);
        r1.setStatusText(r2);
        goto L_0x0779;
    L_0x0761:
        r1 = r7.bigEmptyView;
        r2 = NUM; // 0x7f0e042e float:1.8877208E38 double:1.0531626853E-314;
        r3 = new java.lang.Object[r0];
        r4 = r7.currentUser;
        r4 = org.telegram.messenger.UserObject.getFirstName(r4);
        r3[r10] = r4;
        r4 = "EncryptedPlaceholderTitleIncoming";
        r2 = org.telegram.messenger.LocaleController.formatString(r4, r2, r3);
        r1.setStatusText(r2);
    L_0x0779:
        r1 = r7.emptyViewContainer;
        r2 = r7.bigEmptyView;
        r3 = new android.widget.FrameLayout$LayoutParams;
        r3.<init>(r12, r12, r14);
        r1.addView(r2, r3);
    L_0x0785:
        r1 = r7.chatActivityEnterView;
        if (r1 == 0) goto L_0x079c;
    L_0x0789:
        r1.onDestroy();
        r1 = r7.chatActivityEnterView;
        r1 = r1.isEditingMessage();
        if (r1 != 0) goto L_0x079c;
    L_0x0794:
        r1 = r7.chatActivityEnterView;
        r1 = r1.getFieldText();
        r5 = r1;
        goto L_0x079d;
    L_0x079c:
        r5 = r11;
    L_0x079d:
        r1 = r7.mentionsAdapter;
        if (r1 == 0) goto L_0x07a4;
    L_0x07a1:
        r1.onDestroy();
    L_0x07a4:
        r1 = new org.telegram.ui.ChatActivity$9;
        r1.<init>(r8);
        r7.chatListView = r1;
        r1 = r7.currentEncryptedChat;
        if (r1 == 0) goto L_0x07ba;
    L_0x07af:
        r1 = android.os.Build.VERSION.SDK_INT;
        r2 = 19;
        if (r1 < r2) goto L_0x07ba;
    L_0x07b5:
        r1 = r7.chatListView;
        r1.setImportantForAccessibility(r9);
    L_0x07ba:
        r1 = r7.chatListView;
        r1.setInstantClick(r0);
        r1 = r7.chatListView;
        r1.setDisableHighlightState(r0);
        r1 = r7.chatListView;
        r2 = java.lang.Integer.valueOf(r0);
        r1.setTag(r2);
        r1 = r7.chatListView;
        r1.setVerticalScrollBarEnabled(r0);
        r1 = r7.chatListView;
        r2 = new org.telegram.ui.ChatActivity$ChatActivityAdapter;
        r2.<init>(r8);
        r7.chatAdapter = r2;
        r1.setAdapter(r2);
        r1 = r7.chatListView;
        r1.setClipToPadding(r10);
        r1 = r7.chatListView;
        r2 = NUM; // 0x40800000 float:4.0 double:5.34643471E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r3 = NUM; // 0x40400000 float:3.0 double:5.325712093E-315;
        r3 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r1.setPadding(r10, r2, r10, r3);
        r1 = r7.chatListView;
        r1.setItemAnimator(r11);
        r1 = r7.chatListView;
        r1.setLayoutAnimation(r11);
        r4 = new org.telegram.ui.ChatActivity$10;
        r20 = 1000; // 0x3e8 float:1.401E-42 double:4.94E-321;
        r22 = 1;
        r23 = 1;
        r1 = r4;
        r2 = r33;
        r3 = r34;
        r12 = r4;
        r4 = r20;
        r24 = r5;
        r5 = r22;
        r11 = 0;
        r6 = r23;
        r1.<init>(r3, r4, r5, r6);
        r7.chatLayoutManager = r12;
        r1 = r7.chatLayoutManager;
        r2 = new org.telegram.ui.ChatActivity$11;
        r2.<init>();
        r1.setSpanSizeLookup(r2);
        r1 = r7.chatListView;
        r2 = r7.chatLayoutManager;
        r1.setLayoutManager(r2);
        r1 = r7.chatListView;
        r2 = new org.telegram.ui.ChatActivity$12;
        r2.<init>();
        r1.addItemDecoration(r2);
        r1 = r7.contentView;
        r2 = r7.chatListView;
        r3 = -NUM; // 0xffffffffbvar_ float:-1.0 double:NaN;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r15, r3);
        r1.addView(r2, r3);
        r1 = r7.chatListView;
        r2 = r7.onItemLongClickListener;
        r1.setOnItemLongClickListener(r2);
        r1 = r7.chatListView;
        r2 = r7.onItemClickListener;
        r1.setOnItemClickListener(r2);
        r1 = r7.chatListView;
        r2 = new org.telegram.ui.ChatActivity$13;
        r2.<init>();
        r1.setOnScrollListener(r2);
        r1 = new org.telegram.ui.Components.ClippingImageView;
        r1.<init>(r8);
        r7.animatingImageView = r1;
        r1 = r7.animatingImageView;
        r2 = 8;
        r1.setVisibility(r2);
        r1 = r7.contentView;
        r2 = r7.animatingImageView;
        r3 = -NUM; // 0xffffffffbvar_ float:-1.0 double:NaN;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r15, r3);
        r1.addView(r2, r3);
        r1 = new android.widget.FrameLayout;
        r1.<init>(r8);
        r7.progressView = r1;
        r1 = r7.progressView;
        r1.setVisibility(r9);
        r1 = r7.contentView;
        r2 = r7.progressView;
        r3 = 51;
        r4 = org.telegram.ui.Components.LayoutHelper.createFrame(r15, r15, r3);
        r1.addView(r2, r4);
        r1 = new android.view.View;
        r1.<init>(r8);
        r7.progressView2 = r1;
        r1 = r7.progressView2;
        r2 = NUM; // 0x7var_ca float:1.7946026E38 double:1.052935856E-314;
        r1.setBackgroundResource(r2);
        r1 = r7.progressView2;
        r1 = r1.getBackground();
        r2 = org.telegram.ui.ActionBar.Theme.colorFilter;
        r1.setColorFilter(r2);
        r1 = r7.progressView;
        r2 = r7.progressView2;
        r3 = 36;
        r4 = 36;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r3, r4, r14);
        r1.addView(r2, r3);
        r1 = new org.telegram.ui.Components.RadialProgressView;
        r1.<init>(r8);
        r7.progressBar = r1;
        r1 = r7.progressBar;
        r2 = NUM; // 0x41e00000 float:28.0 double:5.46040909E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r1.setSize(r2);
        r1 = r7.progressBar;
        r2 = "chat_serviceText";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setProgressColor(r2);
        r1 = r7.progressView;
        r2 = r7.progressBar;
        r3 = 32;
        r4 = 32;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r3, r4, r14);
        r1.addView(r2, r3);
        r1 = new org.telegram.ui.ChatActivity$14;
        r1.<init>(r8);
        r7.floatingDateView = r1;
        r1 = r7.floatingDateView;
        r2 = java.lang.System.currentTimeMillis();
        r4 = 1000; // 0x3e8 float:1.401E-42 double:4.94E-321;
        r2 = r2 / r4;
        r3 = (int) r2;
        r1.setCustomDate(r3, r10, r10);
        r1 = r7.floatingDateView;
        r1.setAlpha(r11);
        r1 = r7.contentView;
        r2 = r7.floatingDateView;
        r26 = -2;
        r27 = -NUM; // 0xffffffffCLASSNAME float:-2.0 double:NaN;
        r28 = 49;
        r29 = 0;
        r30 = NUM; // 0x40800000 float:4.0 double:5.34643471E-315;
        r31 = 0;
        r32 = 0;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r26, r27, r28, r29, r30, r31, r32);
        r1.addView(r2, r3);
        r1 = r7.floatingDateView;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$TRtVc5U1jd24GfIVVVdgV24kMHw;
        r2.<init>(r7);
        r1.setOnClickListener(r2);
        r1 = r7.currentEncryptedChat;
        if (r1 != 0) goto L_0x0a7f;
    L_0x0923:
        r1 = new android.widget.FrameLayout;
        r1.<init>(r8);
        r7.pinnedMessageView = r1;
        r1 = r7.pinnedMessageView;
        r2 = java.lang.Integer.valueOf(r0);
        r1.setTag(r2);
        r1 = r7.pinnedMessageView;
        r2 = NUM; // 0x42480000 float:50.0 double:5.49408334E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r2 = -r2;
        r2 = (float) r2;
        r1.setTranslationY(r2);
        r1 = r7.pinnedMessageView;
        r2 = 8;
        r1.setVisibility(r2);
        r1 = r7.pinnedMessageView;
        r2 = NUM; // 0x7var_ float:1.7944777E38 double:1.0529355514E-314;
        r1.setBackgroundResource(r2);
        r1 = r7.pinnedMessageView;
        r1 = r1.getBackground();
        r2 = new android.graphics.PorterDuffColorFilter;
        r3 = "chat_topPanelBackground";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r4 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r2.<init>(r3, r4);
        r1.setColorFilter(r2);
        r1 = r7.contentView;
        r2 = r7.pinnedMessageView;
        r3 = 50;
        r4 = 51;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r15, r3, r4);
        r1.addView(r2, r3);
        r1 = r7.pinnedMessageView;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$eO37gXPlV8wUc5mdxL8y-mJBqno;
        r2.<init>(r7);
        r1.setOnClickListener(r2);
        r1 = new android.view.View;
        r1.<init>(r8);
        r7.pinnedLineView = r1;
        r1 = r7.pinnedLineView;
        r2 = "chat_topPanelLine";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setBackgroundColor(r2);
        r1 = r7.pinnedMessageView;
        r2 = r7.pinnedLineView;
        r26 = 2;
        r27 = NUM; // 0x42000000 float:32.0 double:5.4707704E-315;
        r28 = 51;
        r29 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r30 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r31 = 0;
        r32 = 0;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r26, r27, r28, r29, r30, r31, r32);
        r1.addView(r2, r3);
        r1 = new org.telegram.ui.Components.BackupImageView;
        r1.<init>(r8);
        r7.pinnedMessageImageView = r1;
        r1 = r7.pinnedMessageView;
        r2 = r7.pinnedMessageImageView;
        r26 = 32;
        r29 = NUM; // 0x41880000 float:17.0 double:5.431915495E-315;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r26, r27, r28, r29, r30, r31, r32);
        r1.addView(r2, r3);
        r1 = new org.telegram.ui.ActionBar.SimpleTextView;
        r1.<init>(r8);
        r7.pinnedMessageNameTextView = r1;
        r1 = r7.pinnedMessageNameTextView;
        r2 = 14;
        r1.setTextSize(r2);
        r1 = r7.pinnedMessageNameTextView;
        r2 = "chat_topPanelTitle";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setTextColor(r2);
        r1 = r7.pinnedMessageNameTextView;
        r2 = org.telegram.messenger.AndroidUtilities.getTypeface(r13);
        r1.setTypeface(r2);
        r1 = r7.pinnedMessageView;
        r2 = r7.pinnedMessageNameTextView;
        r26 = -1;
        r3 = NUM; // 0x41900000 float:18.0 double:5.43450582E-315;
        r3 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r3 = (float) r3;
        r29 = NUM; // 0x41900000 float:18.0 double:5.43450582E-315;
        r30 = NUM; // 0x40e9999a float:7.3 double:5.380627025E-315;
        r31 = NUM; // 0x42200000 float:40.0 double:5.481131706E-315;
        r27 = r3;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r26, r27, r28, r29, r30, r31, r32);
        r1.addView(r2, r3);
        r1 = new org.telegram.ui.ActionBar.SimpleTextView;
        r1.<init>(r8);
        r7.pinnedMessageTextView = r1;
        r1 = r7.pinnedMessageTextView;
        r2 = 14;
        r1.setTextSize(r2);
        r1 = r7.pinnedMessageTextView;
        r2 = "chat_topPanelMessage";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setTextColor(r2);
        r1 = r7.pinnedMessageView;
        r2 = r7.pinnedMessageTextView;
        r3 = NUM; // 0x41900000 float:18.0 double:5.43450582E-315;
        r3 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r3 = (float) r3;
        r30 = NUM; // 0x41ca6666 float:25.3 double:5.453415206E-315;
        r27 = r3;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r26, r27, r28, r29, r30, r31, r32);
        r1.addView(r2, r3);
        r1 = new android.widget.ImageView;
        r1.<init>(r8);
        r7.closePinned = r1;
        r1 = r7.closePinned;
        r2 = NUM; // 0x7var_bd float:1.794548E38 double:1.052935723E-314;
        r1.setImageResource(r2);
        r1 = r7.closePinned;
        r2 = new android.graphics.PorterDuffColorFilter;
        r3 = "chat_topPanelClose";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r4 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r2.<init>(r3, r4);
        r1.setColorFilter(r2);
        r1 = r7.closePinned;
        r2 = android.widget.ImageView.ScaleType.CENTER;
        r1.setScaleType(r2);
        r1 = r7.closePinned;
        r2 = NUM; // 0x7f0e0303 float:1.8876601E38 double:1.0531625376E-314;
        r3 = "Close";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r1.setContentDescription(r2);
        r1 = r7.pinnedMessageView;
        r2 = r7.closePinned;
        r3 = 36;
        r4 = 48;
        r5 = 53;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r3, r4, r5);
        r1.addView(r2, r3);
        r1 = r7.closePinned;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$MC1nlfA7DBtHsUYoqPF_QO9JBh4;
        r2.<init>(r7);
        r1.setOnClickListener(r2);
    L_0x0a7f:
        r1 = new org.telegram.ui.ChatActivity$15;
        r1.<init>(r8);
        r7.topChatPanelView = r1;
        r1 = r7.topChatPanelView;
        r2 = java.lang.Integer.valueOf(r0);
        r1.setTag(r2);
        r1 = r7.topChatPanelView;
        r2 = NUM; // 0x42480000 float:50.0 double:5.49408334E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r2 = -r2;
        r2 = (float) r2;
        r1.setTranslationY(r2);
        r1 = r7.topChatPanelView;
        r2 = 8;
        r1.setVisibility(r2);
        r1 = r7.topChatPanelView;
        r2 = NUM; // 0x7var_ float:1.7944777E38 double:1.0529355514E-314;
        r1.setBackgroundResource(r2);
        r1 = r7.topChatPanelView;
        r1 = r1.getBackground();
        r2 = new android.graphics.PorterDuffColorFilter;
        r3 = "chat_topPanelBackground";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r4 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r2.<init>(r3, r4);
        r1.setColorFilter(r2);
        r1 = r7.contentView;
        r2 = r7.topChatPanelView;
        r3 = 50;
        r4 = 51;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r15, r3, r4);
        r1.addView(r2, r3);
        r1 = new android.widget.TextView;
        r1.<init>(r8);
        r7.reportSpamButton = r1;
        r1 = r7.reportSpamButton;
        r2 = "chat_reportSpam";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setTextColor(r2);
        r1 = r7.reportSpamButton;
        r2 = "chat_reportSpam";
        r1.setTag(r2);
        r1 = r7.reportSpamButton;
        r2 = NUM; // 0x41600000 float:14.0 double:5.41896386E-315;
        r1.setTextSize(r0, r2);
        r1 = r7.reportSpamButton;
        r2 = org.telegram.messenger.AndroidUtilities.getTypeface(r13);
        r1.setTypeface(r2);
        r1 = r7.reportSpamButton;
        r1.setSingleLine(r0);
        r1 = r7.reportSpamButton;
        r1.setMaxLines(r0);
        r1 = r7.reportSpamButton;
        r1.setGravity(r14);
        r1 = r7.topChatPanelView;
        r2 = r7.reportSpamButton;
        r26 = -1;
        r27 = -NUM; // 0xffffffffbvar_ float:-1.0 double:NaN;
        r28 = 51;
        r29 = 0;
        r30 = 0;
        r31 = 0;
        r3 = NUM; // 0x3var_ float:1.0 double:5.263544247E-315;
        r3 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r3 = (float) r3;
        r32 = r3;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r26, r27, r28, r29, r30, r31, r32);
        r1.addView(r2, r3);
        r1 = r7.reportSpamButton;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$z4kV81jtLN8yO8nD9oB5qxVjSYQ;
        r2.<init>(r7);
        r1.setOnClickListener(r2);
        r1 = new android.widget.TextView;
        r1.<init>(r8);
        r7.addToContactsButton = r1;
        r1 = r7.addToContactsButton;
        r2 = "chat_addContact";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setTextColor(r2);
        r1 = r7.addToContactsButton;
        r2 = 8;
        r1.setVisibility(r2);
        r1 = r7.addToContactsButton;
        r2 = NUM; // 0x41600000 float:14.0 double:5.41896386E-315;
        r1.setTextSize(r0, r2);
        r1 = r7.addToContactsButton;
        r2 = org.telegram.messenger.AndroidUtilities.getTypeface(r13);
        r1.setTypeface(r2);
        r1 = r7.addToContactsButton;
        r1.setSingleLine(r0);
        r1 = r7.addToContactsButton;
        r1.setMaxLines(r0);
        r1 = r7.addToContactsButton;
        r2 = NUM; // 0x40800000 float:4.0 double:5.34643471E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r3 = NUM; // 0x40800000 float:4.0 double:5.34643471E-315;
        r3 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r1.setPadding(r2, r10, r3, r10);
        r1 = r7.addToContactsButton;
        r1.setGravity(r14);
        r1 = r7.topChatPanelView;
        r2 = r7.addToContactsButton;
        r3 = NUM; // 0x3var_ float:1.0 double:5.263544247E-315;
        r3 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r3 = (float) r3;
        r32 = r3;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r26, r27, r28, r29, r30, r31, r32);
        r1.addView(r2, r3);
        r1 = r7.addToContactsButton;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$IBbC6tGGvSanxWVehZQ8A5DagBM;
        r2.<init>(r7);
        r1.setOnClickListener(r2);
        r1 = new android.widget.ImageView;
        r1.<init>(r8);
        r7.closeReportSpam = r1;
        r1 = r7.closeReportSpam;
        r2 = NUM; // 0x7var_bd float:1.794548E38 double:1.052935723E-314;
        r1.setImageResource(r2);
        r1 = r7.closeReportSpam;
        r2 = new android.graphics.PorterDuffColorFilter;
        r3 = "chat_topPanelClose";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r4 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r2.<init>(r3, r4);
        r1.setColorFilter(r2);
        r1 = r7.closeReportSpam;
        r2 = android.widget.ImageView.ScaleType.CENTER;
        r1.setScaleType(r2);
        r1 = r7.topChatPanelView;
        r2 = r7.closeReportSpam;
        r3 = 48;
        r4 = 48;
        r5 = 53;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r3, r4, r5);
        r1.addView(r2, r3);
        r1 = r7.closeReportSpam;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$8zbREdQOEF7GEfjtwX3ytHFHUU8;
        r2.<init>(r7);
        r1.setOnClickListener(r2);
        r1 = new android.widget.FrameLayout;
        r1.<init>(r8);
        r7.alertView = r1;
        r1 = r7.alertView;
        r2 = java.lang.Integer.valueOf(r0);
        r1.setTag(r2);
        r1 = r7.alertView;
        r2 = NUM; // 0x42480000 float:50.0 double:5.49408334E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r2 = -r2;
        r2 = (float) r2;
        r1.setTranslationY(r2);
        r1 = r7.alertView;
        r2 = 8;
        r1.setVisibility(r2);
        r1 = r7.alertView;
        r2 = NUM; // 0x7var_ float:1.7944777E38 double:1.0529355514E-314;
        r1.setBackgroundResource(r2);
        r1 = r7.alertView;
        r1 = r1.getBackground();
        r2 = new android.graphics.PorterDuffColorFilter;
        r3 = "chat_topPanelBackground";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r4 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r2.<init>(r3, r4);
        r1.setColorFilter(r2);
        r1 = r7.contentView;
        r2 = r7.alertView;
        r3 = 50;
        r4 = 51;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r15, r3, r4);
        r1.addView(r2, r3);
        r1 = new android.widget.TextView;
        r1.<init>(r8);
        r7.alertNameTextView = r1;
        r1 = r7.alertNameTextView;
        r2 = NUM; // 0x41600000 float:14.0 double:5.41896386E-315;
        r1.setTextSize(r0, r2);
        r1 = r7.alertNameTextView;
        r2 = "chat_topPanelTitle";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setTextColor(r2);
        r1 = r7.alertNameTextView;
        r2 = org.telegram.messenger.AndroidUtilities.getTypeface(r13);
        r1.setTypeface(r2);
        r1 = r7.alertNameTextView;
        r1.setSingleLine(r0);
        r1 = r7.alertNameTextView;
        r2 = android.text.TextUtils.TruncateAt.END;
        r1.setEllipsize(r2);
        r1 = r7.alertNameTextView;
        r1.setMaxLines(r0);
        r1 = r7.alertView;
        r2 = r7.alertNameTextView;
        r26 = -2;
        r27 = -NUM; // 0xffffffffCLASSNAME float:-2.0 double:NaN;
        r29 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r30 = NUM; // 0x40a00000 float:5.0 double:5.356796015E-315;
        r31 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r32 = 0;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r26, r27, r28, r29, r30, r31, r32);
        r1.addView(r2, r3);
        r1 = new android.widget.TextView;
        r1.<init>(r8);
        r7.alertTextView = r1;
        r1 = r7.alertTextView;
        r2 = NUM; // 0x41600000 float:14.0 double:5.41896386E-315;
        r1.setTextSize(r0, r2);
        r1 = r7.alertTextView;
        r2 = "chat_topPanelMessage";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setTextColor(r2);
        r1 = r7.alertTextView;
        r1.setSingleLine(r0);
        r1 = r7.alertTextView;
        r2 = android.text.TextUtils.TruncateAt.END;
        r1.setEllipsize(r2);
        r1 = r7.alertTextView;
        r1.setMaxLines(r0);
        r1 = r7.alertView;
        r2 = r7.alertTextView;
        r30 = NUM; // 0x41b80000 float:23.0 double:5.447457457E-315;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r26, r27, r28, r29, r30, r31, r32);
        r1.addView(r2, r3);
        r1 = new android.widget.FrameLayout;
        r1.<init>(r8);
        r7.pagedownButton = r1;
        r1 = r7.pagedownButton;
        r1.setVisibility(r9);
        r1 = r7.contentView;
        r2 = r7.pagedownButton;
        r26 = 66;
        r27 = NUM; // 0x426CLASSNAME float:59.0 double:5.50573981E-315;
        r28 = 85;
        r29 = 0;
        r30 = 0;
        r31 = -NUM; // 0xffffffffCLASSNAME float:-3.0 double:NaN;
        r32 = NUM; // 0x40a00000 float:5.0 double:5.356796015E-315;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r26, r27, r28, r29, r30, r31, r32);
        r1.addView(r2, r3);
        r1 = r7.pagedownButton;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$HuW961Aw9Nll-8oju6fbIqSGX6M;
        r2.<init>(r7);
        r1.setOnClickListener(r2);
        r1 = new android.widget.FrameLayout;
        r1.<init>(r8);
        r7.mentiondownButton = r1;
        r1 = r7.mentiondownButton;
        r1.setVisibility(r9);
        r1 = r7.contentView;
        r2 = r7.mentiondownButton;
        r26 = 46;
        r31 = NUM; // 0x40e00000 float:7.0 double:5.37751863E-315;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r26, r27, r28, r29, r30, r31, r32);
        r1.addView(r2, r3);
        r1 = r7.mentiondownButton;
        r2 = new org.telegram.ui.ChatActivity$16;
        r2.<init>();
        r1.setOnClickListener(r2);
        r1 = r7.mentiondownButton;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$dkCwhVCDInaA7Dl8jF6PMMZRIZM;
        r2.<init>(r7);
        r1.setOnLongClickListener(r2);
        r1 = new org.telegram.ui.ChatActivity$17;
        r1.<init>(r8);
        r7.mentionContainer = r1;
        r1 = r7.mentionContainer;
        r2 = 8;
        r1.setVisibility(r2);
        r33.updateMessageListAccessibilityVisibility();
        r1 = r7.mentionContainer;
        r1.setWillNotDraw(r10);
        r1 = r7.contentView;
        r2 = r7.mentionContainer;
        r3 = 110; // 0x6e float:1.54E-43 double:5.43E-322;
        r4 = 83;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r15, r3, r4);
        r1.addView(r2, r3);
        r1 = new org.telegram.ui.ChatActivity$18;
        r1.<init>(r8);
        r7.mentionListView = r1;
        r1 = r7.mentionListView;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$yak5l46vc9tFvRUQKeI3JXvh7d0;
        r2.<init>(r7);
        r1.setOnTouchListener(r2);
        r1 = r7.mentionListView;
        r2 = 2;
        r2 = java.lang.Integer.valueOf(r2);
        r1.setTag(r2);
        r1 = new org.telegram.ui.ChatActivity$19;
        r1.<init>(r8);
        r7.mentionLayoutManager = r1;
        r1 = r7.mentionLayoutManager;
        r1.setOrientation(r0);
        r1 = new org.telegram.ui.ChatActivity$20;
        r2 = 100;
        r1.<init>(r8, r2);
        r7.mentionGridLayoutManager = r1;
        r1 = r7.mentionGridLayoutManager;
        r2 = new org.telegram.ui.ChatActivity$21;
        r2.<init>();
        r1.setSpanSizeLookup(r2);
        r1 = r7.mentionListView;
        r2 = new org.telegram.ui.ChatActivity$22;
        r2.<init>();
        r1.addItemDecoration(r2);
        r1 = r7.mentionListView;
        r2 = 0;
        r1.setItemAnimator(r2);
        r1 = r7.mentionListView;
        r1.setLayoutAnimation(r2);
        r1 = r7.mentionListView;
        r1.setClipToPadding(r10);
        r1 = r7.mentionListView;
        r2 = r7.mentionLayoutManager;
        r1.setLayoutManager(r2);
        r1 = r7.mentionListView;
        r2 = 2;
        r1.setOverScrollMode(r2);
        r1 = r7.mentionContainer;
        r2 = r7.mentionListView;
        r3 = -NUM; // 0xffffffffbvar_ float:-1.0 double:NaN;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r15, r3);
        r1.addView(r2, r3);
        r12 = r7.mentionListView;
        r6 = new org.telegram.ui.Adapters.MentionsAdapter;
        r3 = 0;
        r4 = r7.dialog_id;
        r2 = new org.telegram.ui.ChatActivity$23;
        r2.<init>();
        r1 = r6;
        r21 = r2;
        r2 = r34;
        r11 = r6;
        r6 = r21;
        r1.<init>(r2, r3, r4, r6);
        r7.mentionsAdapter = r11;
        r12.setAdapter(r11);
        r1 = r7.currentChat;
        r1 = org.telegram.messenger.ChatObject.isChannel(r1);
        if (r1 == 0) goto L_0x0dcb;
    L_0x0dc3:
        r1 = r7.currentChat;
        if (r1 == 0) goto L_0x0dd2;
    L_0x0dc7:
        r1 = r1.megagroup;
        if (r1 == 0) goto L_0x0dd2;
    L_0x0dcb:
        r1 = r7.mentionsAdapter;
        r2 = r7.botInfo;
        r1.setBotInfo(r2);
    L_0x0dd2:
        r1 = r7.mentionsAdapter;
        r1.setParentFragment(r7);
        r1 = r7.mentionsAdapter;
        r2 = r7.chatInfo;
        r1.setChatInfo(r2);
        r1 = r7.mentionsAdapter;
        r2 = r7.currentChat;
        if (r2 == 0) goto L_0x0de6;
    L_0x0de4:
        r2 = 1;
        goto L_0x0de7;
    L_0x0de6:
        r2 = 0;
    L_0x0de7:
        r1.setNeedUsernames(r2);
        r1 = r7.mentionsAdapter;
        r2 = r7.currentEncryptedChat;
        if (r2 == 0) goto L_0x0dfd;
    L_0x0df0:
        r2 = r2.layer;
        r2 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r2);
        r3 = 46;
        if (r2 < r3) goto L_0x0dfb;
    L_0x0dfa:
        goto L_0x0dfd;
    L_0x0dfb:
        r2 = 0;
        goto L_0x0dfe;
    L_0x0dfd:
        r2 = 1;
    L_0x0dfe:
        r1.setNeedBotContext(r2);
        r1 = r7.mentionsAdapter;
        r2 = r7.currentChat;
        if (r2 == 0) goto L_0x0e0a;
    L_0x0e07:
        r2 = r7.botsCount;
        goto L_0x0e0b;
    L_0x0e0a:
        r2 = 1;
    L_0x0e0b:
        r1.setBotsCount(r2);
        r1 = r7.mentionListView;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$H0t0z2-kWqHQ6ZQYbVrXrdKWyn0;
        r2.<init>(r7);
        r7.mentionsOnItemClickListener = r2;
        r1.setOnItemClickListener(r2);
        r1 = r7.mentionListView;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$ImkD5SIoP012fI3JBfxcr32OG-Q;
        r2.<init>(r7);
        r1.setOnItemLongClickListener(r2);
        r1 = r7.mentionListView;
        r2 = new org.telegram.ui.ChatActivity$24;
        r2.<init>();
        r1.setOnScrollListener(r2);
        r1 = new android.widget.ImageView;
        r1.<init>(r8);
        r7.pagedownButtonImage = r1;
        r1 = r7.pagedownButtonImage;
        r2 = NUM; // 0x7var_ float:1.7945722E38 double:1.0529357817E-314;
        r1.setImageResource(r2);
        r1 = r7.pagedownButtonImage;
        r2 = android.widget.ImageView.ScaleType.CENTER;
        r1.setScaleType(r2);
        r1 = r7.pagedownButtonImage;
        r2 = new android.graphics.PorterDuffColorFilter;
        r3 = "chat_goDownButtonIcon";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r4 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r2.<init>(r3, r4);
        r1.setColorFilter(r2);
        r1 = r7.pagedownButtonImage;
        r2 = NUM; // 0x40000000 float:2.0 double:5.304989477E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r1.setPadding(r10, r2, r10, r10);
        r1 = NUM; // 0x42280000 float:42.0 double:5.483722033E-315;
        r1 = org.telegram.messenger.AndroidUtilities.dp(r1);
        r2 = "chat_goDownButton";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1 = org.telegram.ui.ActionBar.Theme.createCircleDrawable(r1, r2);
        r2 = r34.getResources();
        r3 = NUM; // 0x7var_ float:1.7945724E38 double:1.052935782E-314;
        r2 = r2.getDrawable(r3);
        r2 = r2.mutate();
        r3 = new android.graphics.PorterDuffColorFilter;
        r4 = "chat_goDownButtonShadow";
        r4 = org.telegram.ui.ActionBar.Theme.getColor(r4);
        r5 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r3.<init>(r4, r5);
        r2.setColorFilter(r3);
        r3 = new org.telegram.ui.Components.CombinedDrawable;
        r3.<init>(r2, r1, r10, r10);
        r1 = NUM; // 0x42280000 float:42.0 double:5.483722033E-315;
        r1 = org.telegram.messenger.AndroidUtilities.dp(r1);
        r2 = NUM; // 0x42280000 float:42.0 double:5.483722033E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r3.setIconSize(r1, r2);
        r1 = r7.pagedownButtonImage;
        r1.setBackgroundDrawable(r3);
        r1 = r7.pagedownButton;
        r2 = r7.pagedownButtonImage;
        r3 = 46;
        r4 = 46;
        r5 = 81;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r3, r4, r5);
        r1.addView(r2, r3);
        r1 = r7.pagedownButton;
        r2 = NUM; // 0x7f0e0035 float:1.8875145E38 double:1.053162183E-314;
        r3 = "AccDescrPageDown";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r1.setContentDescription(r2);
        r1 = new org.telegram.ui.ActionBar.SimpleTextView;
        r1.<init>(r8);
        r7.pagedownButtonCounter = r1;
        r1 = r7.pagedownButtonCounter;
        r1.setVisibility(r9);
        r1 = r7.pagedownButtonCounter;
        r2 = org.telegram.messenger.AndroidUtilities.getTypeface(r13);
        r1.setTypeface(r2);
        r1 = r7.pagedownButtonCounter;
        r2 = 13;
        r1.setTextSize(r2);
        r1 = r7.pagedownButtonCounter;
        r2 = "chat_goDownButtonCounter";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setTextColor(r2);
        r1 = r7.pagedownButtonCounter;
        r1.setGravity(r14);
        r1 = r7.pagedownButtonCounter;
        r2 = NUM; // 0x41380000 float:11.5 double:5.406012226E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r3 = "chat_goDownButtonCounterBackground";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r2 = org.telegram.ui.ActionBar.Theme.createRoundRectDrawable(r2, r3);
        r1.setBackgroundDrawable(r2);
        r1 = r7.pagedownButtonCounter;
        r2 = NUM; // 0x41b80000 float:23.0 double:5.447457457E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r1.setMinWidth(r2);
        r1 = r7.pagedownButtonCounter;
        r2 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r3 = NUM; // 0x3var_ float:1.0 double:5.263544247E-315;
        r3 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r4 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r4 = org.telegram.messenger.AndroidUtilities.dp(r4);
        r1.setPadding(r2, r3, r4, r10);
        r1 = r7.pagedownButton;
        r2 = r7.pagedownButtonCounter;
        r3 = 51;
        r11 = 23;
        r4 = org.telegram.ui.Components.LayoutHelper.createFrame(r15, r11, r3);
        r1.addView(r2, r4);
        r1 = new android.widget.ImageView;
        r1.<init>(r8);
        r7.mentiondownButtonImage = r1;
        r1 = r7.mentiondownButtonImage;
        r2 = NUM; // 0x7var_ float:1.7945373E38 double:1.0529356967E-314;
        r1.setImageResource(r2);
        r1 = r7.mentiondownButtonImage;
        r2 = android.widget.ImageView.ScaleType.CENTER;
        r1.setScaleType(r2);
        r1 = r7.mentiondownButtonImage;
        r2 = new android.graphics.PorterDuffColorFilter;
        r3 = "chat_goDownButtonIcon";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r4 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r2.<init>(r3, r4);
        r1.setColorFilter(r2);
        r1 = r7.mentiondownButtonImage;
        r2 = NUM; // 0x40000000 float:2.0 double:5.304989477E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r1.setPadding(r10, r2, r10, r10);
        r1 = NUM; // 0x42280000 float:42.0 double:5.483722033E-315;
        r1 = org.telegram.messenger.AndroidUtilities.dp(r1);
        r2 = "chat_goDownButton";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1 = org.telegram.ui.ActionBar.Theme.createCircleDrawable(r1, r2);
        r2 = r34.getResources();
        r3 = NUM; // 0x7var_ float:1.7945724E38 double:1.052935782E-314;
        r2 = r2.getDrawable(r3);
        r2 = r2.mutate();
        r3 = new android.graphics.PorterDuffColorFilter;
        r4 = "chat_goDownButtonShadow";
        r4 = org.telegram.ui.ActionBar.Theme.getColor(r4);
        r5 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r3.<init>(r4, r5);
        r2.setColorFilter(r3);
        r3 = new org.telegram.ui.Components.CombinedDrawable;
        r3.<init>(r2, r1, r10, r10);
        r1 = NUM; // 0x42280000 float:42.0 double:5.483722033E-315;
        r1 = org.telegram.messenger.AndroidUtilities.dp(r1);
        r2 = NUM; // 0x42280000 float:42.0 double:5.483722033E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r3.setIconSize(r1, r2);
        r1 = r7.mentiondownButtonImage;
        r1.setBackgroundDrawable(r3);
        r1 = r7.mentiondownButton;
        r2 = r7.mentiondownButtonImage;
        r3 = 46;
        r4 = 46;
        r5 = 83;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r3, r4, r5);
        r1.addView(r2, r3);
        r1 = new org.telegram.ui.ActionBar.SimpleTextView;
        r1.<init>(r8);
        r7.mentiondownButtonCounter = r1;
        r1 = r7.mentiondownButtonCounter;
        r1.setVisibility(r9);
        r1 = r7.mentiondownButtonCounter;
        r2 = org.telegram.messenger.AndroidUtilities.getTypeface(r13);
        r1.setTypeface(r2);
        r1 = r7.mentiondownButtonCounter;
        r2 = 13;
        r1.setTextSize(r2);
        r1 = r7.mentiondownButtonCounter;
        r2 = "chat_goDownButtonCounter";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setTextColor(r2);
        r1 = r7.mentiondownButtonCounter;
        r1.setGravity(r14);
        r1 = r7.mentiondownButtonCounter;
        r2 = NUM; // 0x41380000 float:11.5 double:5.406012226E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r3 = "chat_goDownButtonCounterBackground";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r2 = org.telegram.ui.ActionBar.Theme.createRoundRectDrawable(r2, r3);
        r1.setBackgroundDrawable(r2);
        r1 = r7.mentiondownButtonCounter;
        r2 = NUM; // 0x41b80000 float:23.0 double:5.447457457E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r1.setMinWidth(r2);
        r1 = r7.mentiondownButtonCounter;
        r2 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r3 = NUM; // 0x3var_ float:1.0 double:5.263544247E-315;
        r3 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r4 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r4 = org.telegram.messenger.AndroidUtilities.dp(r4);
        r1.setPadding(r2, r3, r4, r10);
        r1 = r7.mentiondownButton;
        r2 = r7.mentiondownButtonCounter;
        r3 = 49;
        r4 = -2;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r4, r11, r3);
        r1.addView(r2, r3);
        r1 = r7.mentiondownButton;
        r2 = NUM; // 0x7f0e002b float:1.8875125E38 double:1.053162178E-314;
        r3 = "AccDescrMentionDown";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r1.setContentDescription(r2);
        r1 = org.telegram.messenger.AndroidUtilities.isTablet();
        if (r1 == 0) goto L_0x1051;
    L_0x104b:
        r1 = org.telegram.messenger.AndroidUtilities.isSmallTablet();
        if (r1 == 0) goto L_0x1087;
    L_0x1051:
        r1 = new org.telegram.ui.Components.FragmentContextView;
        r1.<init>(r8, r7, r0);
        r2 = r7.contentView;
        r25 = -1;
        r26 = NUM; // 0x421CLASSNAME float:39.0 double:5.479836543E-315;
        r27 = 51;
        r28 = 0;
        r29 = -NUM; // 0xffffffffCLASSNAME float:-36.0 double:NaN;
        r30 = 0;
        r31 = 0;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r25, r26, r27, r28, r29, r30, r31);
        r2.addView(r1, r3);
        r2 = r7.contentView;
        r3 = new org.telegram.ui.Components.FragmentContextView;
        r3.<init>(r8, r7, r10);
        r7.fragmentContextView = r3;
        r4 = org.telegram.ui.Components.LayoutHelper.createFrame(r25, r26, r27, r28, r29, r30, r31);
        r2.addView(r3, r4);
        r2 = r7.fragmentContextView;
        r2.setAdditionalContextView(r1);
        r2 = r7.fragmentContextView;
        r1.setAdditionalContextView(r2);
    L_0x1087:
        r1 = new org.telegram.ui.Components.RecyclerListView;
        r1.<init>(r8);
        r7.messagesSearchListView = r1;
        r1 = r7.messagesSearchListView;
        r2 = "windowBackgroundWhite";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setBackgroundColor(r2);
        r1 = new androidx.recyclerview.widget.LinearLayoutManager;
        r1.<init>(r8);
        r1.setOrientation(r0);
        r2 = r7.messagesSearchListView;
        r2.setLayoutManager(r1);
        r2 = r7.messagesSearchListView;
        r3 = 8;
        r2.setVisibility(r3);
        r2 = r7.messagesSearchListView;
        r3 = 0;
        r2.setAlpha(r3);
        r2 = r7.messagesSearchListView;
        r3 = new org.telegram.ui.Adapters.MessagesSearchAdapter;
        r3.<init>(r8);
        r7.messagesSearchAdapter = r3;
        r2.setAdapter(r3);
        r2 = r7.contentView;
        r3 = r7.messagesSearchListView;
        r4 = 51;
        r5 = org.telegram.ui.Components.LayoutHelper.createFrame(r15, r15, r4);
        r2.addView(r3, r5);
        r2 = r7.messagesSearchListView;
        r3 = new org.telegram.ui.-$$Lambda$ChatActivity$JMaFcRpUz7UZ5MrLaPSZg3f9Lew;
        r3.<init>(r7);
        r2.setOnItemClickListener(r3);
        r2 = r7.messagesSearchListView;
        r3 = new org.telegram.ui.ChatActivity$25;
        r3.<init>(r1);
        r2.setOnScrollListener(r3);
        r1 = r7.contentView;
        r2 = r7.actionBar;
        r1.addView(r2);
        r1 = new android.view.View;
        r1.<init>(r8);
        r7.overlayView = r1;
        r1 = r7.overlayView;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$NMy6iiFRDyArhtnLnLKP4Qr8PFc;
        r2.<init>(r7);
        r1.setOnTouchListener(r2);
        r1 = r7.contentView;
        r2 = r7.overlayView;
        r3 = 51;
        r4 = org.telegram.ui.Components.LayoutHelper.createFrame(r15, r15, r3);
        r1.addView(r2, r4);
        r1 = r7.overlayView;
        r2 = 8;
        r1.setVisibility(r2);
        r1 = new org.telegram.ui.Components.InstantCameraView;
        r1.<init>(r8, r7);
        r7.instantCameraView = r1;
        r1 = r7.contentView;
        r2 = r7.instantCameraView;
        r4 = org.telegram.ui.Components.LayoutHelper.createFrame(r15, r15, r3);
        r1.addView(r2, r4);
        r1 = new org.telegram.ui.ChatActivity$26;
        r1.<init>(r8);
        r7.bottomMessagesActionContainer = r1;
        r1 = r7.bottomMessagesActionContainer;
        r1.setVisibility(r9);
        r1 = r7.bottomMessagesActionContainer;
        r1.setWillNotDraw(r10);
        r1 = r7.bottomMessagesActionContainer;
        r2 = NUM; // 0x40000000 float:2.0 double:5.304989477E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r1.setPadding(r10, r2, r10, r10);
        r1 = r7.contentView;
        r2 = r7.bottomMessagesActionContainer;
        r3 = 80;
        r4 = 51;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r15, r4, r3);
        r1.addView(r2, r3);
        r1 = r7.bottomMessagesActionContainer;
        r2 = org.telegram.ui.-$$Lambda$ChatActivity$4HeR0jneWrxEOpNOz9G_tJXVOis.INSTANCE;
        r1.setOnTouchListener(r2);
        r12 = new org.telegram.ui.ChatActivity$27;
        r3 = r33.getParentActivity();
        r4 = r7.contentView;
        r6 = 1;
        r1 = r12;
        r2 = r33;
        r5 = r33;
        r1.<init>(r3, r4, r5, r6);
        r7.chatActivityEnterView = r12;
        r1 = r7.chatActivityEnterView;
        r2 = new org.telegram.ui.ChatActivity$28;
        r2.<init>();
        r1.setDelegate(r2);
        r1 = r7.chatActivityEnterView;
        r2 = r7.dialog_id;
        r4 = r7.currentAccount;
        r1.setDialogId(r2, r4);
        r1 = r7.chatInfo;
        if (r1 == 0) goto L_0x1180;
    L_0x117b:
        r2 = r7.chatActivityEnterView;
        r2.setChatInfo(r1);
    L_0x1180:
        r1 = r7.chatActivityEnterView;
        r2 = 1000; // 0x3e8 float:1.401E-42 double:4.94E-321;
        r1.setId(r2);
        r1 = r7.chatActivityEnterView;
        r2 = r7.botsCount;
        r3 = r7.hasBotsCommands;
        r1.setBotsCount(r2, r3);
        r1 = r7.chatActivityEnterView;
        r2 = NUM; // 0x424CLASSNAME float:51.0 double:5.495378504E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r1.setMinimumHeight(r2);
        r1 = r7.chatActivityEnterView;
        r2 = r7.currentEncryptedChat;
        if (r2 == 0) goto L_0x11ac;
    L_0x11a1:
        r2 = r2.layer;
        r2 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r2);
        if (r2 < r11) goto L_0x11aa;
    L_0x11a9:
        goto L_0x11ac;
    L_0x11aa:
        r2 = 0;
        goto L_0x11ad;
    L_0x11ac:
        r2 = 1;
    L_0x11ad:
        r3 = r7.currentEncryptedChat;
        if (r3 == 0) goto L_0x11be;
    L_0x11b1:
        r3 = r3.layer;
        r3 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r3);
        r4 = 46;
        if (r3 < r4) goto L_0x11bc;
    L_0x11bb:
        goto L_0x11be;
    L_0x11bc:
        r3 = 0;
        goto L_0x11bf;
    L_0x11be:
        r3 = 1;
    L_0x11bf:
        r1.setAllowStickersAndGifs(r2, r3);
        r1 = r7.inPreviewMode;
        if (r1 == 0) goto L_0x11cb;
    L_0x11c6:
        r1 = r7.chatActivityEnterView;
        r1.setVisibility(r9);
    L_0x11cb:
        r1 = r7.contentView;
        r2 = r7.chatActivityEnterView;
        r3 = r1.getChildCount();
        r3 = r3 - r0;
        r4 = 83;
        r5 = -2;
        r4 = org.telegram.ui.Components.LayoutHelper.createFrame(r15, r5, r4);
        r1.addView(r2, r3, r4);
        r1 = new org.telegram.ui.ChatActivity$29;
        r1.<init>(r8);
        r2 = new android.view.View;
        r2.<init>(r8);
        r7.replyLineView = r2;
        r2 = r7.replyLineView;
        r3 = "chat_replyPanelLine";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r2.setBackgroundColor(r3);
        r2 = r7.chatActivityEnterView;
        r3 = r7.replyLineView;
        r4 = 48;
        r2.addTopView(r1, r3, r4);
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$i--pe90wAGWXAlcLG1K1KxSjwJM;
        r2.<init>(r7);
        r1.setOnClickListener(r2);
        r2 = new android.widget.ImageView;
        r2.<init>(r8);
        r7.replyIconImageView = r2;
        r2 = r7.replyIconImageView;
        r3 = new android.graphics.PorterDuffColorFilter;
        r4 = "chat_replyPanelIcons";
        r4 = org.telegram.ui.ActionBar.Theme.getColor(r4);
        r5 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r3.<init>(r4, r5);
        r2.setColorFilter(r3);
        r2 = r7.replyIconImageView;
        r3 = android.widget.ImageView.ScaleType.CENTER;
        r2.setScaleType(r3);
        r2 = r7.replyIconImageView;
        r3 = 52;
        r4 = 46;
        r5 = 51;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r3, r4, r5);
        r1.addView(r2, r3);
        r2 = new android.widget.ImageView;
        r2.<init>(r8);
        r7.replyCloseImageView = r2;
        r2 = r7.replyCloseImageView;
        r3 = new android.graphics.PorterDuffColorFilter;
        r4 = "chat_replyPanelClose";
        r4 = org.telegram.ui.ActionBar.Theme.getColor(r4);
        r5 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r3.<init>(r4, r5);
        r2.setColorFilter(r3);
        r2 = r7.replyCloseImageView;
        r3 = NUM; // 0x7var_ float:1.7945205E38 double:1.0529356557E-314;
        r2.setImageResource(r3);
        r2 = r7.replyCloseImageView;
        r3 = android.widget.ImageView.ScaleType.CENTER;
        r2.setScaleType(r3);
        r2 = r7.replyCloseImageView;
        r25 = 52;
        r26 = NUM; // 0x42380000 float:46.0 double:5.488902687E-315;
        r27 = 53;
        r28 = 0;
        r29 = NUM; // 0x3var_ float:0.5 double:5.222099017E-315;
        r30 = 0;
        r31 = 0;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r25, r26, r27, r28, r29, r30, r31);
        r1.addView(r2, r3);
        r2 = r7.replyCloseImageView;
        r3 = new org.telegram.ui.-$$Lambda$ChatActivity$zuLfb_3UyBmXz28-TR_XfUeBQL0;
        r3.<init>(r7);
        r2.setOnClickListener(r3);
        r2 = new org.telegram.ui.ActionBar.SimpleTextView;
        r2.<init>(r8);
        r7.replyNameTextView = r2;
        r2 = r7.replyNameTextView;
        r3 = 14;
        r2.setTextSize(r3);
        r2 = r7.replyNameTextView;
        r3 = "chat_replyPanelName";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r2.setTextColor(r3);
        r2 = r7.replyNameTextView;
        r3 = org.telegram.messenger.AndroidUtilities.getTypeface(r13);
        r2.setTypeface(r3);
        r2 = r7.replyNameTextView;
        r25 = -1;
        r26 = NUM; // 0x41900000 float:18.0 double:5.43450582E-315;
        r27 = 51;
        r28 = NUM; // 0x42500000 float:52.0 double:5.496673668E-315;
        r29 = NUM; // 0x40CLASSNAME float:6.0 double:5.367157323E-315;
        r30 = NUM; // 0x42500000 float:52.0 double:5.496673668E-315;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r25, r26, r27, r28, r29, r30, r31);
        r1.addView(r2, r3);
        r2 = new org.telegram.ui.ActionBar.SimpleTextView;
        r2.<init>(r8);
        r7.replyObjectTextView = r2;
        r2 = r7.replyObjectTextView;
        r3 = 14;
        r2.setTextSize(r3);
        r2 = r7.replyObjectTextView;
        r3 = "chat_replyPanelMessage";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r2.setTextColor(r3);
        r2 = r7.replyObjectTextView;
        r29 = NUM; // 0x41CLASSNAME float:24.0 double:5.450047783E-315;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r25, r26, r27, r28, r29, r30, r31);
        r1.addView(r2, r3);
        r2 = new org.telegram.ui.Components.BackupImageView;
        r2.<init>(r8);
        r7.replyImageView = r2;
        r2 = r7.replyImageView;
        r25 = 34;
        r26 = NUM; // 0x42080000 float:34.0 double:5.473360725E-315;
        r29 = NUM; // 0x40CLASSNAME float:6.0 double:5.367157323E-315;
        r30 = 0;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r25, r26, r27, r28, r29, r30, r31);
        r1.addView(r2, r3);
        r1 = new android.widget.FrameLayout;
        r1.<init>(r8);
        r7.stickersPanel = r1;
        r1 = r7.stickersPanel;
        r2 = 8;
        r1.setVisibility(r2);
        r1 = r7.contentView;
        r2 = r7.stickersPanel;
        r25 = -2;
        r26 = NUM; // 0x42a30000 float:81.5 double:5.52354831E-315;
        r27 = 83;
        r28 = 0;
        r29 = 0;
        r31 = NUM; // 0x42180000 float:38.0 double:5.47854138E-315;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r25, r26, r27, r28, r29, r30, r31);
        r1.addView(r2, r3);
        r1 = new org.telegram.ui.ChatActivity$30;
        r1.<init>();
        r2 = new org.telegram.ui.ChatActivity$31;
        r2.<init>(r8, r1);
        r7.stickersListView = r2;
        r2 = r7.stickersListView;
        r3 = 3;
        r3 = java.lang.Integer.valueOf(r3);
        r2.setTag(r3);
        r2 = r7.stickersListView;
        r3 = new org.telegram.ui.-$$Lambda$ChatActivity$srNniJkh78PQjCBhr1dnp3gFMEY;
        r3.<init>(r7, r1);
        r2.setOnTouchListener(r3);
        r1 = r7.stickersListView;
        r1.setDisallowInterceptTouchEvents(r0);
        r1 = new androidx.recyclerview.widget.LinearLayoutManager;
        r1.<init>(r8);
        r1.setOrientation(r10);
        r2 = r7.stickersListView;
        r2.setLayoutManager(r1);
        r1 = r7.stickersListView;
        r1.setClipToPadding(r10);
        r1 = r7.stickersListView;
        r2 = 2;
        r1.setOverScrollMode(r2);
        r1 = r7.stickersPanel;
        r2 = r7.stickersListView;
        r3 = NUM; // 0x429CLASSNAME float:78.0 double:5.521281773E-315;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r15, r3);
        r1.addView(r2, r3);
        r33.initStickers();
        r1 = new android.widget.ImageView;
        r1.<init>(r8);
        r7.stickersPanelArrow = r1;
        r1 = r7.stickersPanelArrow;
        r2 = NUM; // 0x7var_be float:1.7946002E38 double:1.05293585E-314;
        r1.setImageResource(r2);
        r1 = r7.stickersPanelArrow;
        r2 = new android.graphics.PorterDuffColorFilter;
        r3 = "chat_stickersHintPanel";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r4 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r2.<init>(r3, r4);
        r1.setColorFilter(r2);
        r1 = r7.stickersPanel;
        r2 = r7.stickersPanelArrow;
        r26 = -NUM; // 0xffffffffCLASSNAME float:-2.0 double:NaN;
        r28 = NUM; // 0x42540000 float:53.0 double:5.49796883E-315;
        r30 = NUM; // 0x42540000 float:53.0 double:5.49796883E-315;
        r31 = 0;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r25, r26, r27, r28, r29, r30, r31);
        r1.addView(r2, r3);
        r1 = new org.telegram.ui.ChatActivity$32;
        r1.<init>(r8);
        r7.searchContainer = r1;
        r1 = r7.searchContainer;
        r1.setWillNotDraw(r10);
        r1 = r7.searchContainer;
        r1.setVisibility(r9);
        r1 = r7.searchContainer;
        r2 = NUM; // 0x40400000 float:3.0 double:5.325712093E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r1.setPadding(r10, r2, r10, r10);
        r1 = r7.searchContainer;
        r1.setClipToPadding(r10);
        r1 = new android.view.View;
        r1.<init>(r8);
        r7.searchAsListTogglerView = r1;
        r1 = r7.searchAsListTogglerView;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$Asb4aA8aKpL3KXigsdMyn0A30XY;
        r2.<init>(r7);
        r1.setOnTouchListener(r2);
        r1 = android.os.Build.VERSION.SDK_INT;
        r2 = 21;
        if (r1 < r2) goto L_0x13de;
    L_0x13cf:
        r1 = r7.searchAsListTogglerView;
        r2 = "actionBarActionModeDefaultSelector";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r2 = org.telegram.ui.ActionBar.Theme.getSelectorDrawable(r2, r10);
        r1.setBackground(r2);
    L_0x13de:
        r1 = r7.searchAsListTogglerView;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$hVl-sLMZJLvzA7hn2PpHt_hxwKI;
        r2.<init>(r7);
        r1.setOnClickListener(r2);
        r1 = org.telegram.ui.ActionBar.Theme.chat_composeShadowDrawable;
        r1 = r1.getIntrinsicHeight();
        r1 = (float) r1;
        r2 = org.telegram.messenger.AndroidUtilities.density;
        r1 = r1 / r2;
        r2 = NUM; // 0x40400000 float:3.0 double:5.325712093E-315;
        r29 = r1 - r2;
        r1 = r7.searchContainer;
        r2 = r7.searchAsListTogglerView;
        r25 = -1;
        r26 = -NUM; // 0xffffffffbvar_ float:-1.0 double:NaN;
        r27 = 0;
        r28 = 0;
        r30 = 0;
        r31 = 0;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r25, r26, r27, r28, r29, r30, r31);
        r1.addView(r2, r3);
        r1 = new android.widget.ImageView;
        r1.<init>(r8);
        r7.searchUpButton = r1;
        r1 = r7.searchUpButton;
        r2 = android.widget.ImageView.ScaleType.CENTER;
        r1.setScaleType(r2);
        r1 = r7.searchUpButton;
        r2 = NUM; // 0x7var_d6 float:1.7945531E38 double:1.052935735E-314;
        r1.setImageResource(r2);
        r1 = r7.searchUpButton;
        r2 = new android.graphics.PorterDuffColorFilter;
        r3 = "chat_searchPanelIcons";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r4 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r2.<init>(r3, r4);
        r1.setColorFilter(r2);
        r1 = r7.searchUpButton;
        r2 = "actionBarActionModeDefaultSelector";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r2 = org.telegram.ui.ActionBar.Theme.createSelectorDrawable(r2, r0);
        r1.setBackgroundDrawable(r2);
        r1 = r7.searchContainer;
        r2 = r7.searchUpButton;
        r25 = 48;
        r26 = NUM; // 0x42400000 float:48.0 double:5.491493014E-315;
        r27 = 53;
        r29 = 0;
        r30 = NUM; // 0x42400000 float:48.0 double:5.491493014E-315;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r25, r26, r27, r28, r29, r30, r31);
        r1.addView(r2, r3);
        r1 = r7.searchUpButton;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$MOf0CQa_rB6F6lq0iWfyvNvS1kM;
        r2.<init>(r7);
        r1.setOnClickListener(r2);
        r1 = r7.searchUpButton;
        r2 = NUM; // 0x7f0e0045 float:1.8875177E38 double:1.0531621907E-314;
        r3 = "AccDescrSearchNext";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r1.setContentDescription(r2);
        r1 = new android.widget.ImageView;
        r1.<init>(r8);
        r7.searchDownButton = r1;
        r1 = r7.searchDownButton;
        r2 = android.widget.ImageView.ScaleType.CENTER;
        r1.setScaleType(r2);
        r1 = r7.searchDownButton;
        r2 = NUM; // 0x7var_d5 float:1.794553E38 double:1.0529357347E-314;
        r1.setImageResource(r2);
        r1 = r7.searchDownButton;
        r2 = new android.graphics.PorterDuffColorFilter;
        r3 = "chat_searchPanelIcons";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r4 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r2.<init>(r3, r4);
        r1.setColorFilter(r2);
        r1 = r7.searchDownButton;
        r2 = "actionBarActionModeDefaultSelector";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r2 = org.telegram.ui.ActionBar.Theme.createSelectorDrawable(r2, r0);
        r1.setBackgroundDrawable(r2);
        r1 = r7.searchContainer;
        r2 = r7.searchDownButton;
        r30 = 0;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r25, r26, r27, r28, r29, r30, r31);
        r1.addView(r2, r3);
        r1 = r7.searchDownButton;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$GtWzF3XwVjLwK5QO2beMs5bgGMY;
        r2.<init>(r7);
        r1.setOnClickListener(r2);
        r1 = r7.searchDownButton;
        r2 = NUM; // 0x7f0e0046 float:1.887518E38 double:1.053162191E-314;
        r3 = "AccDescrSearchPrev";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r1.setContentDescription(r2);
        r1 = r7.currentChat;
        if (r1 == 0) goto L_0x1545;
    L_0x14d1:
        r1 = org.telegram.messenger.ChatObject.isChannel(r1);
        if (r1 == 0) goto L_0x14dd;
    L_0x14d7:
        r1 = r7.currentChat;
        r1 = r1.megagroup;
        if (r1 == 0) goto L_0x1545;
    L_0x14dd:
        r1 = new android.widget.ImageView;
        r1.<init>(r8);
        r7.searchUserButton = r1;
        r1 = r7.searchUserButton;
        r2 = android.widget.ImageView.ScaleType.CENTER;
        r1.setScaleType(r2);
        r1 = r7.searchUserButton;
        r2 = NUM; // 0x7var_b float:1.7945639E38 double:1.0529357614E-314;
        r1.setImageResource(r2);
        r1 = r7.searchUserButton;
        r2 = new android.graphics.PorterDuffColorFilter;
        r3 = "chat_searchPanelIcons";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r4 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r2.<init>(r3, r4);
        r1.setColorFilter(r2);
        r1 = r7.searchUserButton;
        r2 = "actionBarActionModeDefaultSelector";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r2 = org.telegram.ui.ActionBar.Theme.createSelectorDrawable(r2, r0);
        r1.setBackgroundDrawable(r2);
        r1 = r7.searchContainer;
        r2 = r7.searchUserButton;
        r25 = 48;
        r26 = NUM; // 0x42400000 float:48.0 double:5.491493014E-315;
        r27 = 51;
        r28 = NUM; // 0x42400000 float:48.0 double:5.491493014E-315;
        r29 = 0;
        r30 = 0;
        r31 = 0;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r25, r26, r27, r28, r29, r30, r31);
        r1.addView(r2, r3);
        r1 = r7.searchUserButton;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$pA7Fvp3WXJtRkmGeNZIDr6xQwqk;
        r2.<init>(r7);
        r1.setOnClickListener(r2);
        r1 = r7.searchUserButton;
        r2 = NUM; // 0x7f0e0044 float:1.8875175E38 double:1.05316219E-314;
        r3 = "AccDescrSearchByUser";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r1.setContentDescription(r2);
    L_0x1545:
        r1 = new android.widget.ImageView;
        r1.<init>(r8);
        r7.searchCalendarButton = r1;
        r1 = r7.searchCalendarButton;
        r2 = android.widget.ImageView.ScaleType.CENTER;
        r1.setScaleType(r2);
        r1 = r7.searchCalendarButton;
        r2 = NUM; // 0x7var_c6 float:1.7945499E38 double:1.0529357273E-314;
        r1.setImageResource(r2);
        r1 = r7.searchCalendarButton;
        r2 = new android.graphics.PorterDuffColorFilter;
        r3 = "chat_searchPanelIcons";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r4 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r2.<init>(r3, r4);
        r1.setColorFilter(r2);
        r1 = r7.searchCalendarButton;
        r2 = "actionBarActionModeDefaultSelector";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r2 = org.telegram.ui.ActionBar.Theme.createSelectorDrawable(r2, r0);
        r1.setBackgroundDrawable(r2);
        r1 = r7.searchContainer;
        r2 = r7.searchCalendarButton;
        r3 = 48;
        r4 = 48;
        r5 = 51;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r3, r4, r5);
        r1.addView(r2, r3);
        r1 = r7.searchCalendarButton;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$XI5-iuaszK3El6MRKLRW6i8D4x0;
        r2.<init>(r7);
        r1.setOnClickListener(r2);
        r1 = r7.searchCalendarButton;
        r2 = NUM; // 0x7f0e05a5 float:1.8877968E38 double:1.0531628706E-314;
        r3 = "JumpToDate";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r1.setContentDescription(r2);
        r1 = new org.telegram.ui.ActionBar.SimpleTextView;
        r1.<init>(r8);
        r7.searchCountText = r1;
        r1 = r7.searchCountText;
        r2 = "chat_searchPanelText";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setTextColor(r2);
        r1 = r7.searchCountText;
        r2 = 15;
        r1.setTextSize(r2);
        r1 = r7.searchCountText;
        r2 = org.telegram.messenger.AndroidUtilities.getTypeface(r13);
        r1.setTypeface(r2);
        r1 = r7.searchCountText;
        r2 = 3;
        r1.setGravity(r2);
        r1 = r7.searchContainer;
        r2 = r7.searchCountText;
        r25 = -2;
        r26 = -NUM; // 0xffffffffCLASSNAME float:-2.0 double:NaN;
        r27 = 16;
        r3 = NUM; // 0x42700000 float:60.0 double:5.507034975E-315;
        r4 = r7.searchUserButton;
        if (r4 == 0) goto L_0x15e0;
    L_0x15dd:
        r6 = NUM; // 0x42400000 float:48.0 double:5.491493014E-315;
        goto L_0x15e1;
    L_0x15e0:
        r6 = 0;
    L_0x15e1:
        r28 = r6 + r3;
        r29 = 0;
        r30 = NUM; // 0x42d80000 float:108.0 double:5.540709225E-315;
        r31 = 0;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r25, r26, r27, r28, r29, r30, r31);
        r1.addView(r2, r3);
        r1 = new org.telegram.ui.ChatActivity$33;
        r1.<init>(r8);
        r7.bottomOverlay = r1;
        r1 = r7.bottomOverlay;
        r1.setWillNotDraw(r10);
        r1 = r7.bottomOverlay;
        r1.setVisibility(r9);
        r1 = r7.bottomOverlay;
        r1.setFocusable(r0);
        r1 = r7.bottomOverlay;
        r1.setFocusableInTouchMode(r0);
        r1 = r7.bottomOverlay;
        r1.setClickable(r0);
        r1 = r7.bottomOverlay;
        r2 = NUM; // 0x40000000 float:2.0 double:5.304989477E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r1.setPadding(r10, r2, r10, r10);
        r1 = r7.contentView;
        r2 = r7.bottomOverlay;
        r3 = 80;
        r4 = 51;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r15, r4, r3);
        r1.addView(r2, r3);
        r1 = new android.widget.TextView;
        r1.<init>(r8);
        r7.bottomOverlayText = r1;
        r1 = r7.bottomOverlayText;
        r2 = NUM; // 0x41600000 float:14.0 double:5.41896386E-315;
        r1.setTextSize(r0, r2);
        r1 = r7.bottomOverlayText;
        r1.setGravity(r14);
        r1 = r7.bottomOverlayText;
        r2 = 2;
        r1.setMaxLines(r2);
        r1 = r7.bottomOverlayText;
        r2 = android.text.TextUtils.TruncateAt.END;
        r1.setEllipsize(r2);
        r1 = r7.bottomOverlayText;
        r2 = NUM; // 0x40000000 float:2.0 double:5.304989477E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r2 = (float) r2;
        r3 = NUM; // 0x3var_ float:1.0 double:5.263544247E-315;
        r1.setLineSpacing(r2, r3);
        r1 = r7.bottomOverlayText;
        r2 = "chat_secretChatStatusText";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setTextColor(r2);
        r1 = r7.bottomOverlay;
        r2 = r7.bottomOverlayText;
        r25 = -2;
        r26 = -NUM; // 0xffffffffCLASSNAME float:-2.0 double:NaN;
        r27 = 17;
        r28 = NUM; // 0x41600000 float:14.0 double:5.41896386E-315;
        r30 = NUM; // 0x41600000 float:14.0 double:5.41896386E-315;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r25, r26, r27, r28, r29, r30, r31);
        r1.addView(r2, r3);
        r1 = new org.telegram.ui.ChatActivity$34;
        r1.<init>(r8);
        r7.bottomOverlayChat = r1;
        r1 = r7.bottomOverlayChat;
        r1.setWillNotDraw(r10);
        r1 = r7.bottomOverlayChat;
        r2 = NUM; // 0x40400000 float:3.0 double:5.325712093E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r1.setPadding(r10, r2, r10, r10);
        r1 = r7.bottomOverlayChat;
        r1.setVisibility(r9);
        r1 = r7.contentView;
        r2 = r7.bottomOverlayChat;
        r3 = 80;
        r4 = 51;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r15, r4, r3);
        r1.addView(r2, r3);
        r1 = new android.widget.TextView;
        r1.<init>(r8);
        r7.bottomOverlayChatText = r1;
        r1 = r7.bottomOverlayChatText;
        r2 = NUM; // 0x41700000 float:15.0 double:5.424144515E-315;
        r1.setTextSize(r0, r2);
        r1 = r7.bottomOverlayChatText;
        r2 = org.telegram.messenger.AndroidUtilities.getTypeface(r13);
        r1.setTypeface(r2);
        r1 = r7.bottomOverlayChatText;
        r2 = "chat_fieldOverlayText";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setTextColor(r2);
        r1 = r7.bottomOverlayChatText;
        r1.setGravity(r14);
        r1 = r7.bottomOverlayChat;
        r2 = r7.bottomOverlayChatText;
        r3 = -NUM; // 0xffffffffbvar_ float:-1.0 double:NaN;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r15, r3);
        r1.addView(r2, r3);
        r1 = r7.bottomOverlayChatText;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$ICNIfK7lsk1mSdQHIiPfSl5J_Ug;
        r2.<init>(r7);
        r1.setOnClickListener(r2);
        r1 = new org.telegram.ui.ChatActivity$UnreadCounterTextView;
        r1.<init>(r8);
        r7.bottomOverlayChatText2 = r1;
        r1 = r7.bottomOverlayChatText2;
        r2 = NUM; // 0x41700000 float:15.0 double:5.424144515E-315;
        r1.setTextSize(r0, r2);
        r1 = r7.bottomOverlayChatText2;
        r2 = org.telegram.messenger.AndroidUtilities.getTypeface(r13);
        r1.setTypeface(r2);
        r1 = r7.bottomOverlayChatText2;
        r2 = "chat_fieldOverlayText";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setTextColor(r2);
        r1 = r7.bottomOverlayChatText2;
        r1.setGravity(r14);
        r1 = r7.bottomOverlayChatText2;
        r2 = 8;
        r1.setVisibility(r2);
        r1 = r7.bottomOverlayChat;
        r2 = r7.bottomOverlayChatText2;
        r3 = -NUM; // 0xffffffffbvar_ float:-1.0 double:NaN;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r15, r3);
        r1.addView(r2, r3);
        r1 = r7.bottomOverlayChatText2;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$xCEdCVQNRIWeXoSGlni2Esh5Uj8;
        r2.<init>(r7);
        r1.setOnClickListener(r2);
        r1 = new org.telegram.ui.Components.RadialProgressView;
        r1.<init>(r8);
        r7.bottomOverlayProgress = r1;
        r1 = r7.bottomOverlayProgress;
        r2 = NUM; // 0x41b00000 float:22.0 double:5.44486713E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r1.setSize(r2);
        r1 = r7.bottomOverlayProgress;
        r2 = "chat_fieldOverlayText";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setProgressColor(r2);
        r1 = r7.bottomOverlayProgress;
        r1.setVisibility(r9);
        r1 = r7.bottomOverlayProgress;
        r2 = NUM; // 0x3dcccccd float:0.1 double:5.122630465E-315;
        r1.setScaleX(r2);
        r1 = r7.bottomOverlayProgress;
        r1.setScaleY(r2);
        r1 = r7.bottomOverlayProgress;
        r2 = NUM; // 0x3var_ float:1.0 double:5.263544247E-315;
        r1.setAlpha(r2);
        r1 = r7.bottomOverlayChat;
        r2 = r7.bottomOverlayProgress;
        r3 = 30;
        r4 = 30;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r3, r4, r14);
        r1.addView(r2, r3);
        r1 = new android.widget.TextView;
        r1.<init>(r8);
        r7.replyButton = r1;
        r1 = r7.replyButton;
        r2 = NUM; // 0x7f0e0961 float:1.8879907E38 double:1.053163343E-314;
        r3 = "Reply";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r1.setText(r2);
        r1 = r7.replyButton;
        r2 = 16;
        r1.setGravity(r2);
        r1 = r7.replyButton;
        r2 = NUM; // 0x41700000 float:15.0 double:5.424144515E-315;
        r1.setTextSize(r0, r2);
        r1 = r7.replyButton;
        r2 = NUM; // 0x41600000 float:14.0 double:5.41896386E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r3 = NUM; // 0x41a80000 float:21.0 double:5.442276803E-315;
        r3 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r1.setPadding(r2, r10, r3, r10);
        r1 = r7.replyButton;
        r2 = "actionBarActionModeDefaultSelector";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r3 = 3;
        r2 = org.telegram.ui.ActionBar.Theme.createSelectorDrawable(r2, r3);
        r1.setBackgroundDrawable(r2);
        r1 = r7.replyButton;
        r2 = "actionBarActionModeDefaultIcon";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setTextColor(r2);
        r1 = r7.replyButton;
        r2 = NUM; // 0x40e00000 float:7.0 double:5.37751863E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r1.setCompoundDrawablePadding(r2);
        r1 = r7.replyButton;
        r2 = org.telegram.messenger.AndroidUtilities.getTypeface(r13);
        r1.setTypeface(r2);
        r1 = r34.getResources();
        r2 = NUM; // 0x7var_d float:1.794522E38 double:1.0529356596E-314;
        r1 = r1.getDrawable(r2);
        r1 = r1.mutate();
        r2 = new android.graphics.PorterDuffColorFilter;
        r3 = "actionBarActionModeDefaultIcon";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r4 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r2.<init>(r3, r4);
        r1.setColorFilter(r2);
        r2 = r7.replyButton;
        r3 = 0;
        r2.setCompoundDrawablesWithIntrinsicBounds(r1, r3, r3, r3);
        r1 = r7.replyButton;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$n3EG1FPtn9eXu0RXcqgQtP1JSbg;
        r2.<init>(r7);
        r1.setOnClickListener(r2);
        r1 = r7.bottomMessagesActionContainer;
        r2 = r7.replyButton;
        r3 = -2;
        r4 = 51;
        r5 = org.telegram.ui.Components.LayoutHelper.createFrame(r3, r15, r4);
        r1.addView(r2, r5);
        r1 = new android.widget.TextView;
        r1.<init>(r8);
        r7.forwardButton = r1;
        r1 = r7.forwardButton;
        r2 = NUM; // 0x7f0e04cc float:1.8877528E38 double:1.0531627633E-314;
        r3 = "Forward";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r1.setText(r2);
        r1 = r7.forwardButton;
        r2 = 16;
        r1.setGravity(r2);
        r1 = r7.forwardButton;
        r2 = NUM; // 0x41700000 float:15.0 double:5.424144515E-315;
        r1.setTextSize(r0, r2);
        r1 = r7.forwardButton;
        r2 = NUM; // 0x41a80000 float:21.0 double:5.442276803E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r3 = NUM; // 0x41a80000 float:21.0 double:5.442276803E-315;
        r3 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r1.setPadding(r2, r10, r3, r10);
        r1 = r7.forwardButton;
        r2 = NUM; // 0x40CLASSNAME float:6.0 double:5.367157323E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r1.setCompoundDrawablePadding(r2);
        r1 = r7.forwardButton;
        r2 = "actionBarActionModeDefaultSelector";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r3 = 3;
        r2 = org.telegram.ui.ActionBar.Theme.createSelectorDrawable(r2, r3);
        r1.setBackgroundDrawable(r2);
        r1 = r7.forwardButton;
        r2 = "actionBarActionModeDefaultIcon";
        r2 = org.telegram.ui.ActionBar.Theme.getColor(r2);
        r1.setTextColor(r2);
        r1 = r7.forwardButton;
        r2 = org.telegram.messenger.AndroidUtilities.getTypeface(r13);
        r1.setTypeface(r2);
        r1 = r34.getResources();
        r2 = NUM; // 0x7var_ float:1.7945209E38 double:1.0529356567E-314;
        r1 = r1.getDrawable(r2);
        r1 = r1.mutate();
        r2 = new android.graphics.PorterDuffColorFilter;
        r3 = "actionBarActionModeDefaultIcon";
        r3 = org.telegram.ui.ActionBar.Theme.getColor(r3);
        r4 = android.graphics.PorterDuff.Mode.MULTIPLY;
        r2.<init>(r3, r4);
        r1.setColorFilter(r2);
        r2 = r7.forwardButton;
        r3 = 0;
        r2.setCompoundDrawablesWithIntrinsicBounds(r1, r3, r3, r3);
        r1 = r7.forwardButton;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$L--Bn5LcUGoKXepwybqQpIUm8TQ;
        r2.<init>(r7);
        r1.setOnClickListener(r2);
        r1 = r7.bottomMessagesActionContainer;
        r2 = r7.forwardButton;
        r3 = 53;
        r4 = -2;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r4, r15, r3);
        r1.addView(r2, r3);
        r1 = r7.contentView;
        r2 = r7.searchContainer;
        r3 = 80;
        r4 = 51;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r15, r4, r3);
        r1.addView(r2, r3);
        r1 = new org.telegram.ui.Components.UndoView;
        r1.<init>(r8);
        r7.undoView = r1;
        r1 = r7.contentView;
        r2 = r7.undoView;
        r25 = -1;
        r27 = 83;
        r28 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r30 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r31 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r25, r26, r27, r28, r29, r30, r31);
        r1.addView(r2, r3);
        r1 = r7.currentChat;
        if (r1 == 0) goto L_0x190a;
    L_0x18da:
        r1 = new org.telegram.ui.Components.HintView;
        r2 = r33.getParentActivity();
        r3 = 2;
        r1.<init>(r2, r3);
        r7.slowModeHint = r1;
        r1 = r7.slowModeHint;
        r2 = 0;
        r1.setAlpha(r2);
        r1 = r7.slowModeHint;
        r1.setVisibility(r9);
        r1 = r7.contentView;
        r2 = r7.slowModeHint;
        r25 = -2;
        r26 = -NUM; // 0xffffffffCLASSNAME float:-2.0 double:NaN;
        r27 = 51;
        r28 = NUM; // 0x41980000 float:19.0 double:5.43709615E-315;
        r29 = 0;
        r30 = NUM; // 0x41980000 float:19.0 double:5.43709615E-315;
        r31 = 0;
        r3 = org.telegram.ui.Components.LayoutHelper.createFrame(r25, r26, r27, r28, r29, r30, r31);
        r1.addView(r2, r3);
    L_0x190a:
        r1 = r7.chatAdapter;
        r1.updateRows();
        r1 = r7.loading;
        if (r1 == 0) goto L_0x1930;
    L_0x1913:
        r1 = r7.messages;
        r1 = r1.isEmpty();
        if (r1 == 0) goto L_0x1930;
    L_0x191b:
        r1 = r7.progressView;
        r2 = r7.chatAdapter;
        r2 = r2.botInfoRow;
        if (r2 != r15) goto L_0x1926;
    L_0x1925:
        r9 = 0;
    L_0x1926:
        r1.setVisibility(r9);
        r1 = r7.chatListView;
        r2 = 0;
        r1.setEmptyView(r2);
        goto L_0x193c;
    L_0x1930:
        r1 = r7.progressView;
        r1.setVisibility(r9);
        r1 = r7.chatListView;
        r2 = r7.emptyViewContainer;
        r1.setEmptyView(r2);
    L_0x193c:
        r33.checkBotKeyboard();
        r33.updateBottomOverlay();
        r33.updateSecretStatus();
        r7.updateTopPanel(r10);
        r7.updatePinnedMessageView(r0);
        r1 = new org.telegram.ui.Components.RecyclerAnimationScrollHelper;
        r2 = r7.chatListView;
        r3 = r7.chatLayoutManager;
        r1.<init>(r2, r3);
        r7.chatScrollHelper = r1;
        r1 = r7.chatScrollHelper;
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$T77mP0UQVyIM_lX85-5419Z66GA;
        r2.<init>(r7);
        r1.setScrollListener(r2);
        r1 = r7.chatScrollHelper;
        r2 = r7.chatScrollHelperCallback;
        r1.setAnimationCallback(r2);
        r1 = r7.currentEncryptedChat;	 Catch:{ all -> 0x197f }
        if (r1 == 0) goto L_0x1983;
    L_0x196b:
        r1 = android.os.Build.VERSION.SDK_INT;	 Catch:{ all -> 0x197f }
        if (r1 < r11) goto L_0x1983;
    L_0x196f:
        r1 = org.telegram.messenger.SharedConfig.passcodeHash;	 Catch:{ all -> 0x197f }
        r1 = r1.length();	 Catch:{ all -> 0x197f }
        if (r1 == 0) goto L_0x197b;
    L_0x1977:
        r1 = org.telegram.messenger.SharedConfig.allowScreenCapture;	 Catch:{ all -> 0x197f }
        if (r1 == 0) goto L_0x1983;
    L_0x197b:
        org.telegram.messenger.AndroidUtilities.setFlagSecure(r7, r0);	 Catch:{ all -> 0x197f }
        goto L_0x1983;
    L_0x197f:
        r0 = move-exception;
        org.telegram.messenger.FileLog.e(r0);
    L_0x1983:
        r11 = r24;
        if (r11 == 0) goto L_0x198c;
    L_0x1987:
        r0 = r7.chatActivityEnterView;
        r0.setFieldText(r11);
    L_0x198c:
        r33.fixLayoutInternal();
        r0 = r7.textSelectionHelper;
        r1 = new org.telegram.ui.ChatActivity$35;
        r1.<init>();
        r0.setCallback(r1);
        r0 = r7.contentView;
        r1 = r7.textSelectionHelper;
        r1 = r1.getOverlayView(r8);
        r0.addView(r1);
        r0 = r7.textSelectionHelper;
        r1 = r7.chatListView;
        r0.parentView = r1;
        r0 = r7.fragmentView;
        return r0;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.createView(android.content.Context):android.view.View");
    }

    public /* synthetic */ void lambda$createView$6$ChatActivity(View view) {
        if (this.floatingDateView.getAlpha() != 0.0f && !this.actionBar.isActionModeShowed()) {
            Calendar instance = Calendar.getInstance();
            instance.setTimeInMillis(((long) this.floatingDateView.getCustomDate()) * 1000);
            int i = instance.get(1);
            int i2 = instance.get(2);
            int i3 = instance.get(5);
            instance.clear();
            instance.set(i, i2, i3);
            jumpToDate((int) (instance.getTime().getTime() / 1000));
        }
    }

    public /* synthetic */ void lambda$createView$7$ChatActivity(View view) {
        this.wasManualScroll = true;
        ChatFull chatFull = this.chatInfo;
        if (chatFull != null) {
            scrollToMessageId(chatFull.pinned_msg_id, 0, true, 0, true);
            return;
        }
        UserFull userFull = this.userInfo;
        if (userFull != null) {
            scrollToMessageId(userFull.pinned_msg_id, 0, true, 0, true);
        }
    }

    public /* synthetic */ void lambda$createView$9$ChatActivity(View view) {
        if (getParentActivity() != null) {
            Chat chat = this.currentChat;
            boolean z = false;
            if (chat != null) {
                z = ChatObject.canPinMessages(chat);
            } else if (this.currentEncryptedChat == null) {
                UserFull userFull = this.userInfo;
                if (userFull != null) {
                    z = userFull.can_pin_message;
                }
            }
            if (z) {
                AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                builder.setTitle(LocaleController.getString("UnpinMessageAlertTitle", NUM));
                builder.setMessage(LocaleController.getString("UnpinMessageAlert", NUM));
                builder.setPositiveButton(LocaleController.getString("UnpinMessage", NUM), new -$$Lambda$ChatActivity$VDE4I_1TJtOt5ofSxoShI_veUKI(this));
                builder.setNegativeButton(LocaleController.getString("Cancel", NUM), null);
                showDialog(builder.create());
            } else {
                SharedPreferences notificationsSettings = MessagesController.getNotificationsSettings(this.currentAccount);
                String str = "pin_";
                Editor edit;
                StringBuilder stringBuilder;
                if (this.chatInfo != null) {
                    edit = notificationsSettings.edit();
                    stringBuilder = new StringBuilder();
                    stringBuilder.append(str);
                    stringBuilder.append(this.dialog_id);
                    edit.putInt(stringBuilder.toString(), this.chatInfo.pinned_msg_id).commit();
                } else if (this.userInfo != null) {
                    edit = notificationsSettings.edit();
                    stringBuilder = new StringBuilder();
                    stringBuilder.append(str);
                    stringBuilder.append(this.dialog_id);
                    edit.putInt(stringBuilder.toString(), this.userInfo.pinned_msg_id).commit();
                }
                updatePinnedMessageView(true);
            }
        }
    }

    public /* synthetic */ void lambda$null$8$ChatActivity(DialogInterface dialogInterface, int i) {
        getMessagesController().pinMessage(this.currentChat, this.currentUser, 0, false);
    }

    public /* synthetic */ void lambda$createView$11$ChatActivity(View view) {
        AlertsCreator.showBlockReportSpamAlert(this, this.dialog_id, this.currentUser, this.currentChat, this.currentEncryptedChat, this.reportSpamButton.getTag(NUM) != null, this.chatInfo, new -$$Lambda$ChatActivity$K0zSH5H4hmK-rEQ8__XLFanbOJM(this));
    }

    public /* synthetic */ void lambda$null$10$ChatActivity(int i) {
        if (i == 0) {
            updateTopPanel(true);
        } else {
            finishFragment();
        }
    }

    public /* synthetic */ void lambda$createView$13$ChatActivity(View view) {
        if (this.addToContactsButton.getTag() != null) {
            shareMyContact(1, null);
            return;
        }
        Bundle bundle = new Bundle();
        bundle.putInt("user_id", this.currentUser.id);
        bundle.putBoolean("addContact", true);
        ContactAddActivity contactAddActivity = new ContactAddActivity(bundle);
        contactAddActivity.setDelegate(new -$$Lambda$ChatActivity$VB4Z01GL3s5EmqcsfzV7ImbavTM(this));
        presentFragment(contactAddActivity);
    }

    public /* synthetic */ void lambda$null$12$ChatActivity() {
        this.undoView.setAdditionalTranslationY((float) AndroidUtilities.dp(51.0f));
        this.undoView.showWithAction(this.dialog_id, 8, this.currentUser);
    }

    public /* synthetic */ void lambda$createView$14$ChatActivity(View view) {
        getMessagesController().hidePeerSettingsBar(this.dialog_id, this.currentUser, this.currentChat);
        updateTopPanel(true);
    }

    public /* synthetic */ void lambda$createView$15$ChatActivity(View view) {
        this.wasManualScroll = true;
        this.textSelectionHelper.cancelTextSelectionRunnable();
        int i = this.createUnreadMessageAfterId;
        if (i != 0) {
            scrollToMessageId(i, 0, false, this.returnToLoadIndex, true);
            return;
        }
        int i2 = this.returnToMessageId;
        if (i2 > 0) {
            scrollToMessageId(i2, 0, true, this.returnToLoadIndex, true);
            return;
        }
        scrollToLastMessage(true);
    }

    public /* synthetic */ boolean lambda$createView$16$ChatActivity(View view) {
        for (int i = 0; i < this.messages.size(); i++) {
            MessageObject messageObject = (MessageObject) this.messages.get(i);
            if (messageObject.messageOwner.mentioned && !messageObject.isContentUnread()) {
                messageObject.setContentIsRead();
            }
        }
        this.newMentionsCount = 0;
        getMessagesController().markMentionsAsRead(this.dialog_id);
        this.hasAllMentionsLocal = true;
        showMentionDownButton(false, true);
        return true;
    }

    public /* synthetic */ boolean lambda$createView$17$ChatActivity(View view, MotionEvent motionEvent) {
        return ContentPreviewViewer.getInstance().onTouch(motionEvent, this.mentionListView, 0, this.mentionsOnItemClickListener, null);
    }

    public /* synthetic */ void lambda$createView$20$ChatActivity(View view, int i) {
        int i2 = i;
        if (!this.mentionsAdapter.isBannedInline()) {
            Object item = this.mentionsAdapter.getItem(i2);
            int resultStartPosition = this.mentionsAdapter.getResultStartPosition();
            int resultLength = this.mentionsAdapter.getResultLength();
            String str = "";
            String str2 = " ";
            String str3;
            ChatActivityEnterView chatActivityEnterView;
            StringBuilder stringBuilder;
            if (item instanceof User) {
                if (this.searchingForUser && this.searchContainer.getVisibility() == 0) {
                    this.searchingUserMessages = (User) item;
                    User user = this.searchingUserMessages;
                    if (user != null) {
                        str3 = user.first_name;
                        if (TextUtils.isEmpty(str3)) {
                            str3 = this.searchingUserMessages.last_name;
                        }
                        this.searchingForUser = false;
                        String string = LocaleController.getString("SearchFrom", NUM);
                        StringBuilder stringBuilder2 = new StringBuilder();
                        stringBuilder2.append(string);
                        stringBuilder2.append(str2);
                        stringBuilder2.append(str3);
                        SpannableString spannableString = new SpannableString(stringBuilder2.toString());
                        spannableString.setSpan(new ForegroundColorSpan(Theme.getColor("actionBarDefaultSubtitle")), string.length() + 1, spannableString.length(), 33);
                        this.searchItem.setSearchFieldCaption(spannableString);
                        this.mentionsAdapter.searchUsernameOrHashtag(null, 0, null, false);
                        this.searchItem.setSearchFieldHint(null);
                        this.searchItem.clearSearchText();
                        getMediaDataController().searchMessagesInChat("", this.dialog_id, this.mergeDialogId, this.classGuid, 0, this.searchingUserMessages);
                    } else {
                        return;
                    }
                }
                User user2 = (User) item;
                if (user2 != null) {
                    if (user2.username != null) {
                        chatActivityEnterView = this.chatActivityEnterView;
                        stringBuilder = new StringBuilder();
                        stringBuilder.append("@");
                        stringBuilder.append(user2.username);
                        stringBuilder.append(str2);
                        chatActivityEnterView.replaceWithText(resultStartPosition, resultLength, stringBuilder.toString(), false);
                    } else {
                        str3 = UserObject.getFirstName(user2, false);
                        StringBuilder stringBuilder3 = new StringBuilder();
                        stringBuilder3.append(str3);
                        stringBuilder3.append(str2);
                        SpannableString spannableString2 = new SpannableString(stringBuilder3.toString());
                        StringBuilder stringBuilder4 = new StringBuilder();
                        stringBuilder4.append(str);
                        stringBuilder4.append(user2.id);
                        spannableString2.setSpan(new URLSpanUserMention(stringBuilder4.toString(), 1), 0, spannableString2.length(), 33);
                        this.chatActivityEnterView.replaceWithText(resultStartPosition, resultLength, spannableString2, false);
                    }
                }
            } else if (item instanceof String) {
                if (!this.mentionsAdapter.isBotCommands()) {
                    chatActivityEnterView = this.chatActivityEnterView;
                    stringBuilder = new StringBuilder();
                    stringBuilder.append(item);
                    stringBuilder.append(str2);
                    chatActivityEnterView.replaceWithText(resultStartPosition, resultLength, stringBuilder.toString(), false);
                } else if (this.inScheduleMode) {
                    AlertsCreator.createScheduleDatePickerDialog(getParentActivity(), this.dialog_id, new -$$Lambda$ChatActivity$GffrwAbyUhsXkD46An15RMPDrzY(this, item));
                } else if (!checkSlowMode(view)) {
                    getSendMessagesHelper().sendMessage((String) item, this.dialog_id, this.replyingMessageObject, null, false, null, null, null, true, 0);
                    this.chatActivityEnterView.setFieldText(str);
                    hideFieldPanel(false);
                }
            } else if (item instanceof BotInlineResult) {
                if (this.chatActivityEnterView.getFieldText() != null && (this.inScheduleMode || !checkSlowMode(view))) {
                    BotInlineResult botInlineResult = (BotInlineResult) item;
                    if ((botInlineResult.type.equals("photo") && (botInlineResult.photo != null || botInlineResult.content != null)) || ((botInlineResult.type.equals("gif") && (botInlineResult.document != null || botInlineResult.content != null)) || (botInlineResult.type.equals("video") && botInlineResult.document != null))) {
                        ArrayList arrayList = new ArrayList(this.mentionsAdapter.getSearchResultBotContext());
                        this.botContextResults = arrayList;
                        PhotoViewer.getInstance().setParentActivity(getParentActivity());
                        PhotoViewer.getInstance().openPhotoForSelect(arrayList, this.mentionsAdapter.getItemPosition(i2), 3, false, this.botContextProvider, this);
                    } else if (this.inScheduleMode) {
                        AlertsCreator.createScheduleDatePickerDialog(getParentActivity(), this.dialog_id, new -$$Lambda$ChatActivity$sBRQc-wdGlYyW-Gu8efAEQ0dMjM(this, botInlineResult));
                    } else {
                        sendBotInlineResult(botInlineResult, true, 0);
                    }
                }
            } else if (item instanceof TL_inlineBotSwitchPM) {
                processInlineBotContextPM((TL_inlineBotSwitchPM) item);
            } else if (item instanceof KeywordResult) {
                str3 = ((KeywordResult) item).emoji;
                this.chatActivityEnterView.addEmojiToRecent(str3);
                this.chatActivityEnterView.replaceWithText(resultStartPosition, resultLength, str3, true);
            }
        }
    }

    public /* synthetic */ void lambda$null$18$ChatActivity(Object obj, boolean z, int i) {
        getSendMessagesHelper().sendMessage((String) obj, this.dialog_id, this.replyingMessageObject, null, false, null, null, null, z, i);
        this.chatActivityEnterView.setFieldText("");
        hideFieldPanel(false);
    }

    public /* synthetic */ void lambda$null$19$ChatActivity(BotInlineResult botInlineResult, boolean z, int i) {
        sendBotInlineResult(botInlineResult, z, i);
    }

    public /* synthetic */ boolean lambda$createView$22$ChatActivity(View view, int i) {
        boolean z = false;
        if (getParentActivity() != null && this.mentionsAdapter.isLongClickEnabled()) {
            Object item = this.mentionsAdapter.getItem(i);
            if (item instanceof String) {
                if (!this.mentionsAdapter.isBotCommands()) {
                    AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                    builder.setTitle(LocaleController.getString("AppName", NUM));
                    builder.setMessage(LocaleController.getString("ClearSearch", NUM));
                    builder.setPositiveButton(LocaleController.getString("ClearButton", NUM).toUpperCase(), new -$$Lambda$ChatActivity$MLmYiMeQsGB4y-vcTqYzKNNhEnw(this));
                    builder.setNegativeButton(LocaleController.getString("Cancel", NUM), null);
                    showDialog(builder.create());
                    return true;
                } else if (!URLSpanBotCommand.enabled) {
                    return false;
                } else {
                    this.chatActivityEnterView.setFieldText("");
                    ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
                    String str = (String) item;
                    Chat chat = this.currentChat;
                    if (chat != null && chat.megagroup) {
                        z = true;
                    }
                    chatActivityEnterView.setCommand(null, str, true, z);
                    return true;
                }
            }
        }
        return false;
    }

    public /* synthetic */ void lambda$null$21$ChatActivity(DialogInterface dialogInterface, int i) {
        this.mentionsAdapter.clearRecentHashtags();
    }

    public /* synthetic */ void lambda$createView$23$ChatActivity(View view, int i) {
        getMediaDataController().jumpToSearchedMessage(this.classGuid, i);
        showMessagesSearchListView(false);
    }

    public /* synthetic */ boolean lambda$createView$24$ChatActivity(View view, MotionEvent motionEvent) {
        if (motionEvent.getAction() == 0) {
            checkRecordLocked();
        }
        this.overlayView.getParent().requestDisallowInterceptTouchEvent(true);
        return true;
    }

    public /* synthetic */ void lambda$createView$26$ChatActivity(View view) {
        ArrayList arrayList = this.forwardingMessages;
        if (arrayList == null || arrayList.isEmpty()) {
            MessageObject messageObject = this.replyingMessageObject;
            if (messageObject != null) {
                scrollToMessageId(messageObject.getId(), 0, true, 0, true);
                return;
            }
            messageObject = this.editingMessageObject;
            if (messageObject != null && messageObject.canEditMedia() && this.editingMessageObjectReqId == 0) {
                if (this.chatAttachAlert == null) {
                    createChatAttachView();
                }
                this.chatAttachAlert.setEditingMessageObject(this.editingMessageObject);
                openAttachMenu();
                return;
            }
            return;
        }
        int size = this.forwardingMessages.size();
        for (int i = 0; i < size; i++) {
            MessageObject messageObject2 = (MessageObject) this.forwardingMessages.get(i);
            this.selectedMessagesIds[0].put(messageObject2.getId(), messageObject2);
        }
        Bundle bundle = new Bundle();
        bundle.putBoolean("onlySelect", true);
        bundle.putInt("dialogsType", 3);
        bundle.putInt("messagesCount", this.forwardingMessages.size());
        DialogsActivity dialogsActivity = new DialogsActivity(bundle);
        dialogsActivity.setDelegate(this);
        presentFragment(dialogsActivity);
    }

    public /* synthetic */ void lambda$createView$27$ChatActivity(View view) {
        ArrayList arrayList = this.forwardingMessages;
        if (arrayList != null) {
            arrayList.clear();
        }
        showFieldPanel(false, null, null, null, this.foundWebPage, true, 0, true, true);
    }

    public /* synthetic */ boolean lambda$createView$28$ChatActivity(ContentPreviewViewerDelegate contentPreviewViewerDelegate, View view, MotionEvent motionEvent) {
        return ContentPreviewViewer.getInstance().onTouch(motionEvent, this.stickersListView, 0, this.stickersOnItemClickListener, contentPreviewViewerDelegate);
    }

    public /* synthetic */ boolean lambda$createView$29$ChatActivity(View view, MotionEvent motionEvent) {
        return getMediaDataController().getFoundMessageObjects().size() <= 1;
    }

    public /* synthetic */ void lambda$createView$30$ChatActivity(View view) {
        if (getMediaDataController().getFoundMessageObjects().size() > 1) {
            HintView hintView = this.searchAsListHint;
            if (hintView != null) {
                hintView.hide();
            }
            toggleMesagesSearchListView();
            if (!SharedConfig.searchMessagesAsListUsed) {
                SharedConfig.setSearchMessagesAsListUsed(true);
            }
        }
    }

    public /* synthetic */ void lambda$createView$31$ChatActivity(View view) {
        getMediaDataController().searchMessagesInChat(null, this.dialog_id, this.mergeDialogId, this.classGuid, 1, this.searchingUserMessages);
        showMessagesSearchListView(false);
        if (!SharedConfig.searchMessagesAsListUsed && SharedConfig.searchMessagesAsListHintShows < 3 && !this.searchAsListHintShown && Math.random() <= 0.25d) {
            showSearchAsListHint();
            this.searchAsListHintShown = true;
            SharedConfig.increaseSearchAsListHintShows();
        }
    }

    public /* synthetic */ void lambda$createView$32$ChatActivity(View view) {
        getMediaDataController().searchMessagesInChat(null, this.dialog_id, this.mergeDialogId, this.classGuid, 2, this.searchingUserMessages);
        showMessagesSearchListView(false);
    }

    public /* synthetic */ void lambda$createView$33$ChatActivity(View view) {
        this.mentionLayoutManager.setReverseLayout(true);
        this.mentionsAdapter.setSearchingMentions(true);
        this.searchCalendarButton.setVisibility(8);
        this.searchUserButton.setVisibility(8);
        this.searchingForUser = true;
        this.searchingUserMessages = null;
        this.searchItem.setSearchFieldHint(LocaleController.getString("SearchMembers", NUM));
        this.searchItem.setSearchFieldCaption(LocaleController.getString("SearchFrom", NUM));
        AndroidUtilities.showKeyboard(this.searchItem.getSearchField());
        this.searchItem.clearSearchText();
    }

    public /* synthetic */ void lambda$createView$37$ChatActivity(View view) {
        if (getParentActivity() != null) {
            AndroidUtilities.hideKeyboard(this.searchItem.getSearchField());
            Calendar instance = Calendar.getInstance();
            try {
                DatePickerDialog datePickerDialog = new DatePickerDialog(getParentActivity(), new -$$Lambda$ChatActivity$6Nb1FRcfRrF4jNhtIay-Wm2eozQ(this), instance.get(1), instance.get(2), instance.get(5));
                DatePicker datePicker = datePickerDialog.getDatePicker();
                datePicker.setMinDate(1375315200000L);
                datePicker.setMaxDate(System.currentTimeMillis());
                datePickerDialog.setButton(-1, LocaleController.getString("JumpToDate", NUM), datePickerDialog);
                datePickerDialog.setButton(-2, LocaleController.getString("Cancel", NUM), -$$Lambda$ChatActivity$wp15IqYd4n-NR1XBKmHKFk2lhVY.INSTANCE);
                if (VERSION.SDK_INT >= 21) {
                    datePickerDialog.setOnShowListener(new -$$Lambda$ChatActivity$v_ZCrQay2ob_Zi22-elx2AWeKmY(datePicker));
                }
                showDialog(datePickerDialog);
            } catch (Exception e) {
                FileLog.e(e);
            }
        }
    }

    public /* synthetic */ void lambda$null$34$ChatActivity(DatePicker datePicker, int i, int i2, int i3) {
        Calendar instance = Calendar.getInstance();
        instance.clear();
        instance.set(i, i2, i3);
        jumpToDate((int) (instance.getTime().getTime() / 1000));
    }

    static /* synthetic */ void lambda$null$36(DatePicker datePicker, DialogInterface dialogInterface) {
        int childCount = datePicker.getChildCount();
        for (int i = 0; i < childCount; i++) {
            View childAt = datePicker.getChildAt(i);
            ViewGroup.LayoutParams layoutParams = childAt.getLayoutParams();
            layoutParams.width = -1;
            childAt.setLayoutParams(layoutParams);
        }
    }

    public /* synthetic */ void lambda$createView$40$ChatActivity(View view) {
        if (getParentActivity() != null) {
            User user = this.currentUser;
            String str;
            if (user == null || !this.userBlocked) {
                user = this.currentUser;
                if (user != null && user.bot) {
                    str = this.botUser;
                    if (str != null) {
                        if (str.length() != 0) {
                            getMessagesController().sendBotStart(this.currentUser, this.botUser);
                        } else {
                            getSendMessagesHelper().sendMessage("/start", this.dialog_id, null, null, false, null, null, null, true, 0);
                        }
                        this.botUser = null;
                        updateBottomOverlay();
                    }
                }
                if (ChatObject.isChannel(this.currentChat)) {
                    Chat chat = this.currentChat;
                    if (!(chat instanceof TL_channelForbidden)) {
                        if (ChatObject.isNotInChat(chat)) {
                            showBottomOverlayProgress(true, true);
                            getMessagesController().addUserToChat(this.currentChat.id, getUserConfig().getCurrentUser(), null, 0, null, this, null);
                            NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.closeSearchByActiveAction, new Object[0]);
                            if (hasReportSpam() && this.reportSpamButton.getTag(NUM) != null) {
                                Editor edit = MessagesController.getNotificationsSettings(this.currentAccount).edit();
                                StringBuilder stringBuilder = new StringBuilder();
                                stringBuilder.append("dialog_bar_vis3");
                                stringBuilder.append(this.dialog_id);
                                edit.putInt(stringBuilder.toString(), 3).commit();
                                getNotificationCenter().postNotificationName(NotificationCenter.peerSettingsDidLoad, Long.valueOf(this.dialog_id));
                            }
                        } else {
                            toggleMute(true);
                        }
                    }
                }
                AlertsCreator.createClearOrDeleteDialogAlert(this, false, this.currentChat, this.currentUser, this.currentEncryptedChat != null, new -$$Lambda$ChatActivity$2a8S6OgKPECjZrBr2O-jRF0DY_E(this));
            } else if (user.bot) {
                str = this.botUser;
                this.botUser = null;
                getMessagesController().unblockUser(this.currentUser.id);
                if (str == null || str.length() == 0) {
                    getSendMessagesHelper().sendMessage("/start", this.dialog_id, null, null, false, null, null, null, true, 0);
                } else {
                    getMessagesController().sendBotStart(this.currentUser, str);
                }
            } else {
                AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                builder.setMessage(LocaleController.getString("AreYouSureUnblockContact", NUM));
                builder.setPositiveButton(LocaleController.getString("OK", NUM), new -$$Lambda$ChatActivity$V0LwsoLVwLLfOXJ9V1xrd-9kMqM(this));
                builder.setTitle(LocaleController.getString("AppName", NUM));
                builder.setNegativeButton(LocaleController.getString("Cancel", NUM), null);
                showDialog(builder.create());
            }
        }
    }

    public /* synthetic */ void lambda$null$38$ChatActivity(DialogInterface dialogInterface, int i) {
        getMessagesController().unblockUser(this.currentUser.id);
    }

    public /* synthetic */ void lambda$null$39$ChatActivity(boolean z) {
        getNotificationCenter().removeObserver(this, NotificationCenter.closeChats);
        getNotificationCenter().postNotificationName(NotificationCenter.closeChats, new Object[0]);
        finishFragment();
        getNotificationCenter().postNotificationName(NotificationCenter.needDeleteDialog, Long.valueOf(this.dialog_id), this.currentUser, this.currentChat, Boolean.valueOf(z));
    }

    public /* synthetic */ void lambda$createView$41$ChatActivity(View view) {
        if (this.chatInfo != null) {
            Bundle bundle = new Bundle();
            bundle.putInt("chat_id", this.chatInfo.linked_chat_id);
            if (getMessagesController().checkCanOpenChat(bundle, this)) {
                presentFragment(new ChatActivity(bundle));
            }
        }
    }

    public /* synthetic */ void lambda$createView$42$ChatActivity(View view) {
        MessageObject messageObject = null;
        int i = 1;
        while (i >= 0) {
            if (messageObject == null && this.selectedMessagesIds[i].size() != 0) {
                messageObject = (MessageObject) this.messagesDict[i].get(this.selectedMessagesIds[i].keyAt(0));
            }
            this.selectedMessagesIds[i].clear();
            this.selectedMessagesCanCopyIds[i].clear();
            this.selectedMessagesCanStarIds[i].clear();
            i--;
        }
        hideActionMode();
        if (messageObject != null) {
            i = messageObject.messageOwner.id;
            if (i > 0 || (i < 0 && this.currentEncryptedChat != null)) {
                showFieldPanelForReply(messageObject);
            }
        }
        updatePinnedMessageView(true);
        updateVisibleRows();
    }

    public /* synthetic */ void lambda$createView$43$ChatActivity(View view) {
        openForward();
    }

    public /* synthetic */ void lambda$createView$44$ChatActivity() {
        updateMessagesVisiblePart(false);
    }

    private TextureView createTextureView(boolean z) {
        if (this.parentLayout == null) {
            return null;
        }
        if (this.videoPlayerContainer == null) {
            if (VERSION.SDK_INT >= 21) {
                this.videoPlayerContainer = new FrameLayout(getParentActivity()) {
                    public void setTranslationY(float f) {
                        super.setTranslationY(f);
                        ChatActivity.this.contentView.invalidate();
                    }
                };
                this.videoPlayerContainer.setOutlineProvider(new ViewOutlineProvider() {
                    @TargetApi(21)
                    public void getOutline(View view, Outline outline) {
                        if (view.getTag(NUM) != null) {
                            outline.setRoundRect(0, 0, view.getMeasuredWidth(), view.getMeasuredHeight(), (float) AndroidUtilities.dp(4.0f));
                            return;
                        }
                        int i = AndroidUtilities.roundMessageSize;
                        outline.setOval(0, 0, i, i);
                    }
                });
                this.videoPlayerContainer.setClipToOutline(true);
            } else {
                this.videoPlayerContainer = new FrameLayout(getParentActivity()) {
                    RectF rect = new RectF();

                    /* Access modifiers changed, original: protected */
                    public void onSizeChanged(int i, int i2, int i3, int i4) {
                        super.onSizeChanged(i, i2, i3, i4);
                        ChatActivity.this.aspectPath.reset();
                        if (getTag(NUM) != null) {
                            this.rect.set(0.0f, 0.0f, (float) i, (float) i2);
                            ChatActivity.this.aspectPath.addRoundRect(this.rect, (float) AndroidUtilities.dp(4.0f), (float) AndroidUtilities.dp(4.0f), Direction.CW);
                        } else {
                            float f = (float) (i / 2);
                            ChatActivity.this.aspectPath.addCircle(f, (float) (i2 / 2), f, Direction.CW);
                        }
                        ChatActivity.this.aspectPath.toggleInverseFillType();
                    }

                    public void setTranslationY(float f) {
                        super.setTranslationY(f);
                        ChatActivity.this.contentView.invalidate();
                    }

                    public void setVisibility(int i) {
                        super.setVisibility(i);
                        if (i == 0) {
                            setLayerType(2, null);
                        }
                    }

                    /* Access modifiers changed, original: protected */
                    public void dispatchDraw(Canvas canvas) {
                        super.dispatchDraw(canvas);
                        if (getTag() == null) {
                            canvas.drawPath(ChatActivity.this.aspectPath, ChatActivity.this.aspectPaint);
                        }
                    }
                };
                this.aspectPath = new Path();
                this.aspectPaint = new Paint(1);
                this.aspectPaint.setColor(-16777216);
                this.aspectPaint.setXfermode(new PorterDuffXfermode(Mode.CLEAR));
            }
            this.videoPlayerContainer.setWillNotDraw(false);
            this.aspectRatioFrameLayout = new AspectRatioFrameLayout(getParentActivity());
            this.aspectRatioFrameLayout.setBackgroundColor(0);
            if (z) {
                this.videoPlayerContainer.addView(this.aspectRatioFrameLayout, LayoutHelper.createFrame(-1, -1, 17));
            }
            this.videoTextureView = new TextureView(getParentActivity());
            this.videoTextureView.setOpaque(false);
            this.aspectRatioFrameLayout.addView(this.videoTextureView, LayoutHelper.createFrame(-1, -1.0f));
        }
        ViewGroup viewGroup = (ViewGroup) this.videoPlayerContainer.getParent();
        if (!(viewGroup == null || viewGroup == this.contentView)) {
            viewGroup.removeView(this.videoPlayerContainer);
            viewGroup = null;
        }
        if (viewGroup == null) {
            SizeNotifierFrameLayout sizeNotifierFrameLayout = this.contentView;
            FrameLayout frameLayout = this.videoPlayerContainer;
            int i = AndroidUtilities.roundMessageSize;
            sizeNotifierFrameLayout.addView(frameLayout, 1, new FrameLayout.LayoutParams(i, i));
        }
        this.videoPlayerContainer.setTag(null);
        this.aspectRatioFrameLayout.setDrawingReady(false);
        return this.videoTextureView;
    }

    private void destroyTextureView() {
        FrameLayout frameLayout = this.videoPlayerContainer;
        if (frameLayout != null && frameLayout.getParent() != null) {
            this.contentView.removeView(this.videoPlayerContainer);
            this.aspectRatioFrameLayout.setDrawingReady(false);
            this.videoPlayerContainer.setTag(null);
            if (VERSION.SDK_INT < 21) {
                this.videoPlayerContainer.setLayerType(0, null);
            }
        }
    }

    private void openForward() {
        Bundle bundle = new Bundle();
        bundle.putBoolean("onlySelect", true);
        bundle.putInt("dialogsType", 3);
        bundle.putInt("messagesCount", this.canForwardMessagesCount);
        DialogsActivity dialogsActivity = new DialogsActivity(bundle);
        dialogsActivity.setDelegate(this);
        presentFragment(dialogsActivity);
    }

    private void showBottomOverlayProgress(boolean z, boolean z2) {
        final boolean z3 = z;
        if ((!z3 || this.bottomOverlayProgress.getTag() == null) && (z3 || this.bottomOverlayProgress.getTag() != null)) {
            AnimatorSet animatorSet = this.bottomOverlayAnimation;
            Object obj = null;
            if (animatorSet != null) {
                animatorSet.cancel();
                this.bottomOverlayAnimation = null;
            }
            RadialProgressView radialProgressView = this.bottomOverlayProgress;
            if (z3) {
                obj = Integer.valueOf(1);
            }
            radialProgressView.setTag(obj);
            int i = 4;
            float f = 0.0f;
            float f2 = 0.1f;
            if (z2) {
                this.bottomOverlayAnimation = new AnimatorSet();
                if (z3) {
                    this.bottomOverlayProgress.setVisibility(0);
                    AnimatorSet animatorSet2 = this.bottomOverlayAnimation;
                    r14 = new Animator[9];
                    r14[0] = ObjectAnimator.ofFloat(this.bottomOverlayChatText, View.SCALE_X, new float[]{0.1f});
                    r14[1] = ObjectAnimator.ofFloat(this.bottomOverlayChatText, View.SCALE_Y, new float[]{0.1f});
                    r14[2] = ObjectAnimator.ofFloat(this.bottomOverlayChatText, View.ALPHA, new float[]{0.0f});
                    r14[3] = ObjectAnimator.ofFloat(this.bottomOverlayChatText2, View.SCALE_X, new float[]{0.1f});
                    r14[4] = ObjectAnimator.ofFloat(this.bottomOverlayChatText2, View.SCALE_Y, new float[]{0.1f});
                    r14[5] = ObjectAnimator.ofFloat(this.bottomOverlayChatText2, View.ALPHA, new float[]{0.0f});
                    r14[6] = ObjectAnimator.ofFloat(this.bottomOverlayProgress, View.SCALE_X, new float[]{1.0f});
                    r14[7] = ObjectAnimator.ofFloat(this.bottomOverlayProgress, View.SCALE_Y, new float[]{1.0f});
                    r14[8] = ObjectAnimator.ofFloat(this.bottomOverlayProgress, View.ALPHA, new float[]{1.0f});
                    animatorSet2.playTogether(r14);
                } else {
                    this.bottomOverlayChatText.setVisibility(0);
                    AnimatorSet animatorSet3 = this.bottomOverlayAnimation;
                    r9 = new Animator[9];
                    r9[0] = ObjectAnimator.ofFloat(this.bottomOverlayProgress, View.SCALE_X, new float[]{0.1f});
                    r9[1] = ObjectAnimator.ofFloat(this.bottomOverlayProgress, View.SCALE_Y, new float[]{0.1f});
                    r9[2] = ObjectAnimator.ofFloat(this.bottomOverlayProgress, View.ALPHA, new float[]{0.0f});
                    r9[3] = ObjectAnimator.ofFloat(this.bottomOverlayChatText, View.SCALE_X, new float[]{1.0f});
                    r9[4] = ObjectAnimator.ofFloat(this.bottomOverlayChatText, View.SCALE_Y, new float[]{1.0f});
                    r9[5] = ObjectAnimator.ofFloat(this.bottomOverlayChatText, View.ALPHA, new float[]{1.0f});
                    r9[6] = ObjectAnimator.ofFloat(this.bottomOverlayChatText2, View.SCALE_X, new float[]{1.0f});
                    r9[7] = ObjectAnimator.ofFloat(this.bottomOverlayChatText2, View.SCALE_Y, new float[]{1.0f});
                    r9[8] = ObjectAnimator.ofFloat(this.bottomOverlayChatText2, View.ALPHA, new float[]{1.0f});
                    animatorSet3.playTogether(r9);
                }
                this.bottomOverlayAnimation.addListener(new AnimatorListenerAdapter() {
                    public void onAnimationEnd(Animator animator) {
                        if (ChatActivity.this.bottomOverlayAnimation != null && ChatActivity.this.bottomOverlayAnimation.equals(animator)) {
                            if (z3) {
                                ChatActivity.this.bottomOverlayChatText.setVisibility(4);
                            } else {
                                ChatActivity.this.bottomOverlayProgress.setVisibility(4);
                            }
                        }
                    }

                    public void onAnimationCancel(Animator animator) {
                        if (ChatActivity.this.bottomOverlayAnimation != null && ChatActivity.this.bottomOverlayAnimation.equals(animator)) {
                            ChatActivity.this.bottomOverlayAnimation = null;
                        }
                    }
                });
                this.bottomOverlayAnimation.setDuration(150);
                this.bottomOverlayAnimation.start();
            } else {
                this.bottomOverlayProgress.setVisibility(z3 ? 0 : 4);
                this.bottomOverlayProgress.setScaleX(z3 ? 1.0f : 0.1f);
                this.bottomOverlayProgress.setScaleY(z3 ? 1.0f : 0.1f);
                this.bottomOverlayProgress.setAlpha(1.0f);
                TextView textView = this.bottomOverlayChatText;
                if (!z3) {
                    i = 0;
                }
                textView.setVisibility(i);
                this.bottomOverlayChatText.setScaleX(z3 ? 0.1f : 1.0f);
                this.bottomOverlayChatText.setScaleY(z3 ? 0.1f : 1.0f);
                this.bottomOverlayChatText.setAlpha(z3 ? 0.0f : 1.0f);
                this.bottomOverlayChatText2.setScaleX(z3 ? 0.1f : 1.0f);
                UnreadCounterTextView unreadCounterTextView = this.bottomOverlayChatText2;
                if (!z3) {
                    f2 = 1.0f;
                }
                unreadCounterTextView.setScaleY(f2);
                unreadCounterTextView = this.bottomOverlayChatText2;
                if (!z3) {
                    f = 1.0f;
                }
                unreadCounterTextView.setAlpha(f);
            }
        }
    }

    private void sendBotInlineResult(BotInlineResult botInlineResult, boolean z, int i) {
        int contextBotId = this.mentionsAdapter.getContextBotId();
        HashMap hashMap = new HashMap();
        hashMap.put("id", botInlineResult.id);
        StringBuilder stringBuilder = new StringBuilder();
        String str = "";
        stringBuilder.append(str);
        stringBuilder.append(botInlineResult.query_id);
        hashMap.put("query_id", stringBuilder.toString());
        stringBuilder = new StringBuilder();
        stringBuilder.append(str);
        stringBuilder.append(contextBotId);
        hashMap.put("bot", stringBuilder.toString());
        hashMap.put("bot_name", this.mentionsAdapter.getContextBotName());
        SendMessagesHelper.prepareSendingBotContextResult(getAccountInstance(), botInlineResult, hashMap, this.dialog_id, this.replyingMessageObject, z, i);
        this.chatActivityEnterView.setFieldText(str);
        hideFieldPanel(false);
        getMediaDataController().increaseInlineRaiting(contextBotId);
    }

    private void mentionListViewUpdateLayout() {
        if (this.mentionListView.getChildCount() <= 0) {
            this.mentionListViewScrollOffsetY = 0;
            this.mentionListViewLastViewPosition = -1;
            return;
        }
        RecyclerListView recyclerListView = this.mentionListView;
        View childAt = recyclerListView.getChildAt(recyclerListView.getChildCount() - 1);
        Holder holder = (Holder) this.mentionListView.findContainingViewHolder(childAt);
        Holder holder2;
        int measuredHeight;
        RecyclerListView recyclerListView2;
        if (this.mentionLayoutManager.getReverseLayout()) {
            if (holder != null) {
                this.mentionListViewLastViewPosition = holder.getAdapterPosition();
                this.mentionListViewLastViewTop = childAt.getBottom();
            } else {
                this.mentionListViewLastViewPosition = -1;
            }
            childAt = this.mentionListView.getChildAt(0);
            holder2 = (Holder) this.mentionListView.findContainingViewHolder(childAt);
            measuredHeight = (childAt.getBottom() >= this.mentionListView.getMeasuredHeight() || holder2 == null || holder2.getAdapterPosition() != 0) ? this.mentionListView.getMeasuredHeight() : childAt.getBottom();
            if (this.mentionListViewScrollOffsetY != measuredHeight) {
                recyclerListView2 = this.mentionListView;
                this.mentionListViewScrollOffsetY = measuredHeight;
                recyclerListView2.setBottomGlowOffset(measuredHeight);
                this.mentionListView.setTopGlowOffset(0);
                this.mentionListView.invalidate();
                this.mentionContainer.invalidate();
            }
        } else {
            if (holder != null) {
                this.mentionListViewLastViewPosition = holder.getAdapterPosition();
                this.mentionListViewLastViewTop = childAt.getTop();
            } else {
                this.mentionListViewLastViewPosition = -1;
            }
            childAt = this.mentionListView.getChildAt(0);
            holder2 = (Holder) this.mentionListView.findContainingViewHolder(childAt);
            measuredHeight = (childAt.getTop() <= 0 || holder2 == null || holder2.getAdapterPosition() != 0) ? 0 : childAt.getTop();
            if (this.mentionListViewScrollOffsetY != measuredHeight) {
                recyclerListView2 = this.mentionListView;
                this.mentionListViewScrollOffsetY = measuredHeight;
                recyclerListView2.setTopGlowOffset(measuredHeight);
                this.mentionListView.setBottomGlowOffset(0);
                this.mentionListView.invalidate();
                this.mentionContainer.invalidate();
            }
        }
    }

    private void checkBotCommands() {
        boolean z = false;
        URLSpanBotCommand.enabled = false;
        User user = this.currentUser;
        if (user == null || !user.bot) {
            ChatFull chatFull = this.chatInfo;
            if (chatFull instanceof TL_chatFull) {
                int i;
                while (i < this.chatInfo.participants.participants.size()) {
                    user = getMessagesController().getUser(Integer.valueOf(((ChatParticipant) this.chatInfo.participants.participants.get(i)).user_id));
                    if (user == null || !user.bot) {
                        i++;
                    } else {
                        URLSpanBotCommand.enabled = true;
                        return;
                    }
                }
                return;
            } else if (chatFull instanceof TL_channelFull) {
                if (!chatFull.bot_info.isEmpty()) {
                    Chat chat = this.currentChat;
                    if (chat != null && chat.megagroup) {
                        z = true;
                    }
                }
                URLSpanBotCommand.enabled = z;
                return;
            } else {
                return;
            }
        }
        URLSpanBotCommand.enabled = true;
    }

    private GroupedMessages getValidGroupedMessage(MessageObject messageObject) {
        if (messageObject.getGroupId() == 0) {
            return null;
        }
        GroupedMessages groupedMessages = (GroupedMessages) this.groupedMessagesMap.get(messageObject.getGroupId());
        if (groupedMessages == null || (groupedMessages.messages.size() > 1 && groupedMessages.positions.get(messageObject) != null)) {
            return groupedMessages;
        }
        return null;
    }

    /* JADX WARNING: Removed duplicated region for block: B:44:0x00c9  */
    private void jumpToDate(int r22) {
        /*
        r21 = this;
        r6 = r21;
        r0 = r22;
        r1 = r6.messages;
        r1 = r1.isEmpty();
        if (r1 == 0) goto L_0x000d;
    L_0x000c:
        return;
    L_0x000d:
        r1 = r6.messages;
        r2 = 0;
        r1 = r1.get(r2);
        r1 = (org.telegram.messenger.MessageObject) r1;
        r3 = r6.messages;
        r4 = r3.size();
        r5 = 1;
        r4 = r4 - r5;
        r3 = r3.get(r4);
        r3 = (org.telegram.messenger.MessageObject) r3;
        r1 = r1.messageOwner;
        r1 = r1.date;
        if (r1 < r0) goto L_0x0030;
    L_0x002a:
        r1 = r3.messageOwner;
        r1 = r1.date;
        if (r1 <= r0) goto L_0x003c;
    L_0x0030:
        r1 = r3.messageOwner;
        r1 = r1.date;
        if (r1 < r0) goto L_0x007a;
    L_0x0036:
        r1 = r6.endReached;
        r1 = r1[r2];
        if (r1 == 0) goto L_0x007a;
    L_0x003c:
        r1 = r6.messages;
        r1 = r1.size();
        r1 = r1 - r5;
    L_0x0043:
        if (r1 < 0) goto L_0x012b;
    L_0x0045:
        r3 = r6.messages;
        r3 = r3.get(r1);
        r3 = (org.telegram.messenger.MessageObject) r3;
        r4 = r3.messageOwner;
        r4 = r4.date;
        if (r4 < r0) goto L_0x0077;
    L_0x0053:
        r4 = r3.getId();
        if (r4 == 0) goto L_0x0077;
    L_0x0059:
        r1 = r3.getId();
        r4 = 0;
        r7 = 0;
        r8 = r3.getDialogId();
        r10 = r6.mergeDialogId;
        r0 = (r8 > r10 ? 1 : (r8 == r10 ? 0 : -1));
        if (r0 != 0) goto L_0x006a;
    L_0x0069:
        goto L_0x006b;
    L_0x006a:
        r5 = 0;
    L_0x006b:
        r8 = 1;
        r0 = r21;
        r2 = r4;
        r3 = r7;
        r4 = r5;
        r5 = r8;
        r0.scrollToMessageId(r1, r2, r3, r4, r5);
        goto L_0x012b;
    L_0x0077:
        r1 = r1 + -1;
        goto L_0x0043;
    L_0x007a:
        r3 = r6.dialog_id;
        r1 = (int) r3;
        if (r1 == 0) goto L_0x012b;
    L_0x007f:
        r1 = r6.chatLayoutManager;
        r1 = r1.findLastVisibleItemPosition();
        r3 = r6.chatLayoutManager;
        r3 = r3.findFirstVisibleItemPosition();
    L_0x008b:
        if (r3 > r1) goto L_0x00bf;
    L_0x008d:
        r4 = r6.chatAdapter;
        r7 = r4.messagesStartRow;
        if (r3 < r7) goto L_0x00bc;
    L_0x0093:
        r4 = r4.messagesEndRow;
        if (r3 > r4) goto L_0x00bc;
    L_0x0099:
        r4 = r6.messages;
        r7 = r6.chatAdapter;
        r7 = r7.messagesStartRow;
        r7 = r3 - r7;
        r4 = r4.get(r7);
        r4 = (org.telegram.messenger.MessageObject) r4;
        r4 = r4.messageOwner;
        if (r4 == 0) goto L_0x00bc;
    L_0x00ab:
        r1 = r4.date;
        if (r1 >= r0) goto L_0x00b1;
    L_0x00af:
        r1 = 1;
        goto L_0x00b2;
    L_0x00b1:
        r1 = 0;
    L_0x00b2:
        r3 = r21.isSecretChat();
        if (r3 == 0) goto L_0x00ba;
    L_0x00b8:
        r1 = r1 ^ 1;
    L_0x00ba:
        r1 = r1 ^ r5;
        goto L_0x00c0;
    L_0x00bc:
        r3 = r3 + 1;
        goto L_0x008b;
    L_0x00bf:
        r1 = -1;
    L_0x00c0:
        r3 = r6.chatScrollHelper;
        r3.setScrollDirection(r1);
        r1 = r6.progressDialog;
        if (r1 != 0) goto L_0x00d5;
    L_0x00c9:
        r1 = new org.telegram.ui.ActionBar.AlertDialog;
        r3 = r21.getParentActivity();
        r4 = 3;
        r1.<init>(r3, r4);
        r6.progressDialog = r1;
    L_0x00d5:
        r1 = r6.progressDialog;
        r3 = new org.telegram.ui.-$$Lambda$ChatActivity$STr0qdhjpA4wfJSbHNpXXk65iVM;
        r3.<init>(r6);
        r1.setOnCancelListener(r3);
        r1 = r6.progressDialog;
        r3 = 400; // 0x190 float:5.6E-43 double:1.976E-321;
        r1.showDelayed(r3);
        r1 = r6.lastLoadIndex;
        r6.postponedScrollToLastMessageQueryIndex = r1;
        r3 = r6.waitingForLoad;
        r1 = java.lang.Integer.valueOf(r1);
        r3.add(r1);
        r6.postponedScrollMessageId = r2;
        r6.postponedScrollIsCanceled = r2;
        r7 = r21.getMessagesController();
        r8 = r6.dialog_id;
        r10 = 30;
        r11 = 0;
        r13 = 1;
        r14 = 0;
        r15 = r6.classGuid;
        r16 = 4;
        r17 = 0;
        r1 = r6.currentChat;
        r18 = org.telegram.messenger.ChatObject.isChannel(r1);
        r1 = r6.inScheduleMode;
        r2 = r6.lastLoadIndex;
        r3 = r2 + 1;
        r6.lastLoadIndex = r3;
        r12 = r22;
        r19 = r1;
        r20 = r2;
        r7.loadMessages(r8, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20);
        r0 = r6.floatingDateView;
        r1 = 0;
        r0.setAlpha(r1);
        r0 = r6.floatingDateView;
        r1 = 0;
        r0.setTag(r1);
    L_0x012b:
        return;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.jumpToDate(int):void");
    }

    public /* synthetic */ void lambda$jumpToDate$45$ChatActivity(DialogInterface dialogInterface) {
        this.postponedScrollIsCanceled = true;
    }

    public void processInlineBotContextPM(TL_inlineBotSwitchPM tL_inlineBotSwitchPM) {
        if (tL_inlineBotSwitchPM != null) {
            User contextBotUser = this.mentionsAdapter.getContextBotUser();
            if (contextBotUser != null) {
                this.chatActivityEnterView.setFieldText("");
                long j = this.dialog_id;
                if (j == ((long) contextBotUser.id)) {
                    this.inlineReturn = j;
                    getMessagesController().sendBotStart(this.currentUser, tL_inlineBotSwitchPM.start_param);
                } else {
                    Bundle bundle = new Bundle();
                    bundle.putInt("user_id", contextBotUser.id);
                    bundle.putString("inline_query", tL_inlineBotSwitchPM.start_param);
                    bundle.putLong("inline_return", this.dialog_id);
                    if (getMessagesController().checkCanOpenChat(bundle, this)) {
                        presentFragment(new ChatActivity(bundle));
                    }
                }
            }
        }
    }

    private void createChatAttachView() {
        if (getParentActivity() != null && this.chatAttachAlert == null) {
            this.chatAttachAlert = new ChatAttachAlert(getParentActivity(), this) {
                public void dismissInternal() {
                    if (ChatActivity.this.chatAttachAlert.isShowing()) {
                        AndroidUtilities.requestAdjustResize(ChatActivity.this.getParentActivity(), ChatActivity.this.classGuid);
                        if (ChatActivity.this.chatActivityEnterView.getVisibility() == 0 && ChatActivity.this.fragmentView != null) {
                            ChatActivity.this.fragmentView.requestLayout();
                        }
                    }
                    super.dismissInternal();
                    if (ChatActivity.this.openKeyboardOnAttachMenuClose) {
                        AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$40$NGJiaajIBuSJFRmzOPVChJDYwnE(this), 50);
                        ChatActivity.this.openKeyboardOnAttachMenuClose = false;
                    }
                }

                public /* synthetic */ void lambda$dismissInternal$0$ChatActivity$40() {
                    ChatActivity.this.chatActivityEnterView.openKeyboard();
                }
            };
            this.chatAttachAlert.setDelegate(new ChatAttachViewDelegate() {
                public void didPressedButton(int i, boolean z, boolean z2, int i2) {
                    int i3 = i;
                    if (!(ChatActivity.this.getParentActivity() == null || ChatActivity.this.chatAttachAlert == null)) {
                        if (ChatActivity.this.chatAttachAlert != null) {
                            ChatActivity chatActivity = ChatActivity.this;
                            chatActivity.editingMessageObject = chatActivity.chatAttachAlert.getEditingMessageObject();
                        } else {
                            ChatActivity.this.editingMessageObject = null;
                        }
                        if (i3 == 8 || i3 == 7 || (i3 == 4 && !ChatActivity.this.chatAttachAlert.getSelectedPhotos().isEmpty())) {
                            if (i3 != 8) {
                                ChatActivity.this.chatAttachAlert.dismiss();
                            }
                            HashMap selectedPhotos = ChatActivity.this.chatAttachAlert.getSelectedPhotos();
                            ArrayList selectedPhotosOrder = ChatActivity.this.chatAttachAlert.getSelectedPhotosOrder();
                            if (!selectedPhotos.isEmpty()) {
                                ArrayList arrayList = new ArrayList();
                                for (int i4 = 0; i4 < selectedPhotosOrder.size(); i4++) {
                                    PhotoEntry photoEntry = (PhotoEntry) selectedPhotos.get(selectedPhotosOrder.get(i4));
                                    SendingMediaInfo sendingMediaInfo = new SendingMediaInfo();
                                    String str = photoEntry.imagePath;
                                    if (str != null) {
                                        sendingMediaInfo.path = str;
                                    } else {
                                        str = photoEntry.path;
                                        if (str != null) {
                                            sendingMediaInfo.path = str;
                                        }
                                    }
                                    sendingMediaInfo.isVideo = photoEntry.isVideo;
                                    CharSequence charSequence = photoEntry.caption;
                                    sendingMediaInfo.caption = charSequence != null ? charSequence.toString() : null;
                                    sendingMediaInfo.entities = photoEntry.entities;
                                    sendingMediaInfo.masks = !photoEntry.stickers.isEmpty() ? new ArrayList(photoEntry.stickers) : null;
                                    sendingMediaInfo.ttl = photoEntry.ttl;
                                    sendingMediaInfo.videoEditedInfo = photoEntry.editedInfo;
                                    sendingMediaInfo.canDeleteAfter = photoEntry.canDeleteAfter;
                                    arrayList.add(sendingMediaInfo);
                                    photoEntry.reset();
                                }
                                ChatActivity.this.fillEditingMediaWithCaption(((SendingMediaInfo) arrayList.get(0)).caption, ((SendingMediaInfo) arrayList.get(0)).entities);
                                SendMessagesHelper.prepareSendingMedia(ChatActivity.this.getAccountInstance(), arrayList, ChatActivity.this.dialog_id, ChatActivity.this.replyingMessageObject, null, i3 == 4, z, ChatActivity.this.editingMessageObject, z2, i2);
                                ChatActivity.this.afterMessageSend();
                            }
                            if (i2 != 0) {
                                if (ChatActivity.this.scheduledMessagesCount == -1) {
                                    ChatActivity.this.scheduledMessagesCount = 0;
                                }
                                ChatActivity chatActivity2 = ChatActivity.this;
                                chatActivity2.scheduledMessagesCount = chatActivity2.scheduledMessagesCount + selectedPhotos.size();
                                ChatActivity.this.updateScheduledInterface(true);
                            }
                        } else {
                            if (ChatActivity.this.chatAttachAlert != null) {
                                ChatActivity.this.chatAttachAlert.dismissWithButtonClick(i3);
                            }
                            ChatActivity.this.processSelectedAttach(i3);
                        }
                    }
                }

                public View getRevealView() {
                    return ChatActivity.this.chatActivityEnterView.getAttachButton();
                }

                public void didSelectBot(User user) {
                    if (ChatActivity.this.chatActivityEnterView != null && !TextUtils.isEmpty(user.username)) {
                        ChatActivityEnterView chatActivityEnterView = ChatActivity.this.chatActivityEnterView;
                        StringBuilder stringBuilder = new StringBuilder();
                        stringBuilder.append("@");
                        stringBuilder.append(user.username);
                        stringBuilder.append(" ");
                        chatActivityEnterView.setFieldText(stringBuilder.toString());
                        ChatActivity.this.chatActivityEnterView.openKeyboard();
                    }
                }

                public void onCameraOpened() {
                    ChatActivity.this.chatActivityEnterView.closeKeyboard();
                }

                public void needEnterComment() {
                    if (ChatActivity.this.chatActivityEnterView.isKeyboardVisible()) {
                        ChatActivity.this.chatActivityEnterView.showEmojiView();
                        ChatActivity.this.openKeyboardOnAttachMenuClose = true;
                    }
                    AndroidUtilities.setAdjustResizeToNothing(ChatActivity.this.getParentActivity(), ChatActivity.this.classGuid);
                    ChatActivity.this.fragmentView.requestLayout();
                }
            });
        }
    }

    public long getDialogId() {
        return this.dialog_id;
    }

    public boolean hasReportSpam() {
        FrameLayout frameLayout = this.topChatPanelView;
        return (frameLayout == null || frameLayout.getTag() != null || this.reportSpamButton.getVisibility() == 8) ? false : true;
    }

    public void setBotUser(String str) {
        if (this.inlineReturn != 0) {
            getMessagesController().sendBotStart(this.currentUser, str);
            return;
        }
        this.botUser = str;
        updateBottomOverlay();
    }

    private void afterMessageSend() {
        hideFieldPanel(false);
        if (!this.inScheduleMode) {
            getMediaDataController().cleanDraft(this.dialog_id, true);
        }
    }

    private void toggleMesagesSearchListView() {
        RecyclerListView recyclerListView = this.messagesSearchListView;
        if (recyclerListView != null) {
            showMessagesSearchListView(recyclerListView.getTag() == null);
        }
    }

    private void showMessagesSearchListView(final boolean z) {
        RecyclerListView recyclerListView = this.messagesSearchListView;
        if (recyclerListView == null) {
            return;
        }
        if (z && recyclerListView.getTag() != null) {
            return;
        }
        if (z || this.messagesSearchListView.getTag() != null) {
            AnimatorSet animatorSet = this.messagesSearchListViewAnimation;
            Object obj = null;
            if (animatorSet != null) {
                animatorSet.cancel();
                this.messagesSearchListViewAnimation = null;
            }
            if (z) {
                this.messagesSearchListView.setVisibility(0);
            }
            RecyclerListView recyclerListView2 = this.messagesSearchListView;
            if (z) {
                obj = Integer.valueOf(1);
            }
            recyclerListView2.setTag(obj);
            this.messagesSearchListViewAnimation = new AnimatorSet();
            AnimatorSet animatorSet2 = this.messagesSearchListViewAnimation;
            Animator[] animatorArr = new Animator[1];
            RecyclerListView recyclerListView3 = this.messagesSearchListView;
            Property property = View.ALPHA;
            float[] fArr = new float[1];
            fArr[0] = z ? 1.0f : 0.0f;
            animatorArr[0] = ObjectAnimator.ofFloat(recyclerListView3, property, fArr);
            animatorSet2.playTogether(animatorArr);
            this.messagesSearchListViewAnimation.setInterpolator(CubicBezierInterpolator.EASE_IN);
            this.messagesSearchListViewAnimation.setDuration(180);
            this.messagesSearchListViewAnimation.addListener(new AnimatorListenerAdapter() {
                public void onAnimationEnd(Animator animator) {
                    if (animator.equals(ChatActivity.this.messagesSearchListViewAnimation)) {
                        ChatActivity.this.messagesSearchListViewAnimation = null;
                        if (!z) {
                            ChatActivity.this.messagesSearchListView.setVisibility(8);
                        }
                    }
                }

                public void onAnimationCancel(Animator animator) {
                    if (animator.equals(ChatActivity.this.messagesSearchListViewAnimation)) {
                        ChatActivity.this.messagesSearchListViewAnimation = null;
                    }
                }
            });
            this.messagesSearchListViewAnimation.start();
        }
    }

    public boolean playFirstUnreadVoiceMessage() {
        ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
        if (chatActivityEnterView != null && chatActivityEnterView.isRecordingAudioVideo()) {
            return true;
        }
        for (int size = this.messages.size() - 1; size >= 0; size--) {
            MessageObject messageObject = (MessageObject) this.messages.get(size);
            if ((messageObject.isVoice() || messageObject.isRoundVideo()) && messageObject.isContentUnread() && !messageObject.isOut()) {
                MediaController.getInstance().setVoiceMessagesPlaylist(MediaController.getInstance().playMessage(messageObject) ? createVoiceMessagesPlaylist(messageObject, true) : null, true);
                return true;
            }
        }
        if (VERSION.SDK_INT >= 23 && getParentActivity() != null) {
            if (getParentActivity().checkSelfPermission("android.permission.RECORD_AUDIO") != 0) {
                getParentActivity().requestPermissions(new String[]{"android.permission.RECORD_AUDIO"}, 3);
                return true;
            }
        }
        return false;
    }

    private void openScheduledMessages() {
        ActionBarLayout actionBarLayout = this.parentLayout;
        if (actionBarLayout != null && actionBarLayout.getLastFragment() == this) {
            Bundle bundle = new Bundle();
            EncryptedChat encryptedChat = this.currentEncryptedChat;
            if (encryptedChat != null) {
                bundle.putInt("enc_id", encryptedChat.id);
            } else {
                Chat chat = this.currentChat;
                if (chat != null) {
                    bundle.putInt("chat_id", chat.id);
                } else {
                    bundle.putInt("user_id", this.currentUser.id);
                }
            }
            bundle.putBoolean("scheduled", true);
            ChatActivity chatActivity = new ChatActivity(bundle);
            chatActivity.chatActivityDelegate = new -$$Lambda$ChatActivity$KA65EY9BBQ_Yyb7DBdysrDFaxm8(this);
            presentFragment(chatActivity, false);
        }
    }

    public /* synthetic */ void lambda$openScheduledMessages$46$ChatActivity(int i) {
        scrollToMessageId(i, 0, true, 0, true);
    }

    private void initStickers() {
        if (this.chatActivityEnterView != null && getParentActivity() != null && this.stickersAdapter == null) {
            EncryptedChat encryptedChat = this.currentEncryptedChat;
            if (encryptedChat == null || AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) >= 23) {
                this.stickersListView.setPadding(AndroidUtilities.dp(18.0f), 0, AndroidUtilities.dp(18.0f), 0);
                RecyclerListView recyclerListView = this.stickersListView;
                StickersAdapter stickersAdapter = new StickersAdapter(getParentActivity(), new -$$Lambda$ChatActivity$DdrwjgOA1XO5rTyn9tU3UQUzEAw(this));
                this.stickersAdapter = stickersAdapter;
                recyclerListView.setAdapter(stickersAdapter);
                recyclerListView = this.stickersListView;
                OnItemClickListener -__lambda_chatactivity_h4n6ddvfakbe7yolhcv0_vzri-m = new -$$Lambda$ChatActivity$H4N6DDVFakbe7YOlHCv0_vZRi-M(this);
                this.stickersOnItemClickListener = -__lambda_chatactivity_h4n6ddvfakbe7yolhcv0_vzri-m;
                recyclerListView.setOnItemClickListener(-__lambda_chatactivity_h4n6ddvfakbe7yolhcv0_vzri-m);
            }
        }
    }

    public /* synthetic */ void lambda$initStickers$47$ChatActivity(final boolean z) {
        if (z) {
            int dp = this.stickersAdapter.isShowingKeywords() ? AndroidUtilities.dp(24.0f) : 0;
            if (dp != this.stickersListView.getPaddingTop() || this.stickersPanel.getTag() == null) {
                this.stickersListView.setPadding(AndroidUtilities.dp(18.0f), dp, AndroidUtilities.dp(18.0f), 0);
                this.stickersListView.scrollToPosition(0);
                ((FrameLayout.LayoutParams) this.stickersPanelArrow.getLayoutParams()).gravity = (this.chatActivityEnterView.isRtlText() ? 5 : 3) | 80;
                this.stickersPanelArrow.requestLayout();
            }
        }
        if ((!z || this.stickersPanel.getTag() == null) && (z || this.stickersPanel.getTag() != null)) {
            if (z) {
                this.stickersPanel.setVisibility(this.allowStickersPanel ? 0 : 4);
                this.stickersPanel.setTag(Integer.valueOf(1));
            } else {
                this.stickersPanel.setTag(null);
            }
            AnimatorSet animatorSet = this.runningAnimation;
            if (animatorSet != null) {
                animatorSet.cancel();
                this.runningAnimation = null;
            }
            if (this.stickersPanel.getVisibility() != 4) {
                this.runningAnimation = new AnimatorSet();
                AnimatorSet animatorSet2 = this.runningAnimation;
                Animator[] animatorArr = new Animator[1];
                FrameLayout frameLayout = this.stickersPanel;
                Property property = View.ALPHA;
                float[] fArr = new float[2];
                float f = 0.0f;
                fArr[0] = z ? 0.0f : 1.0f;
                if (z) {
                    f = 1.0f;
                }
                fArr[1] = f;
                animatorArr[0] = ObjectAnimator.ofFloat(frameLayout, property, fArr);
                animatorSet2.playTogether(animatorArr);
                this.runningAnimation.setDuration(150);
                this.runningAnimation.addListener(new AnimatorListenerAdapter() {
                    public void onAnimationEnd(Animator animator) {
                        if (ChatActivity.this.runningAnimation != null && ChatActivity.this.runningAnimation.equals(animator)) {
                            if (!z) {
                                ChatActivity.this.stickersAdapter.clearStickers();
                                ChatActivity.this.stickersPanel.setVisibility(8);
                                if (ContentPreviewViewer.getInstance().isVisible()) {
                                    ContentPreviewViewer.getInstance().close();
                                }
                                ContentPreviewViewer.getInstance().reset();
                            }
                            ChatActivity.this.runningAnimation = null;
                        }
                    }

                    public void onAnimationCancel(Animator animator) {
                        if (ChatActivity.this.runningAnimation != null && ChatActivity.this.runningAnimation.equals(animator)) {
                            ChatActivity.this.runningAnimation = null;
                        }
                    }
                });
                this.runningAnimation.start();
            } else if (!z) {
                this.stickersPanel.setVisibility(8);
            }
        }
    }

    public /* synthetic */ void lambda$initStickers$49$ChatActivity(View view, int i) {
        Object item = this.stickersAdapter.getItem(i);
        Object itemParent = this.stickersAdapter.getItemParent(i);
        if (item instanceof TL_document) {
            if (this.inScheduleMode || !checkSlowMode(view)) {
                Document document = (TL_document) item;
                if (this.inScheduleMode) {
                    AlertsCreator.createScheduleDatePickerDialog(getParentActivity(), this.dialog_id, new -$$Lambda$ChatActivity$HmReDFMB8NZK0JyxdLo0C-ldXEM(this, document, itemParent));
                } else {
                    getSendMessagesHelper().sendSticker(document, this.dialog_id, this.replyingMessageObject, itemParent, true, 0);
                }
                hideFieldPanel(false);
                this.chatActivityEnterView.addStickerToRecent(document);
                this.chatActivityEnterView.setFieldText("");
            }
        } else if (item instanceof String) {
            SpannableString spannableString = new SpannableString((String) item);
            Emoji.replaceEmoji(spannableString, this.chatActivityEnterView.getEditField().getPaint().getFontMetricsInt(), AndroidUtilities.dp(20.0f), false);
            this.chatActivityEnterView.setFieldText(spannableString, false);
        }
    }

    public /* synthetic */ void lambda$null$48$ChatActivity(TL_document tL_document, Object obj, boolean z, int i) {
        SendMessagesHelper.getInstance(this.currentAccount).sendSticker(tL_document, this.dialog_id, this.replyingMessageObject, obj, z, i);
    }

    public void shareMyContact(int i, MessageObject messageObject) {
        AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
        builder.setTitle(LocaleController.getString("ShareYouPhoneNumberTitle", NUM));
        User user = this.currentUser;
        if (user == null) {
            builder.setMessage(LocaleController.getString("AreYouSureShareMyContactInfo", NUM));
        } else if (user.bot) {
            builder.setMessage(LocaleController.getString("AreYouSureShareMyContactInfoBot", NUM));
        } else {
            Object[] objArr = new Object[2];
            PhoneFormat instance = PhoneFormat.getInstance();
            StringBuilder stringBuilder = new StringBuilder();
            stringBuilder.append("+");
            stringBuilder.append(getUserConfig().getCurrentUser().phone);
            objArr[0] = instance.format(stringBuilder.toString());
            User user2 = this.currentUser;
            objArr[1] = ContactsController.formatName(user2.first_name, user2.last_name);
            builder.setMessage(AndroidUtilities.replaceTags(LocaleController.formatString("AreYouSureShareMyContactInfoUser", NUM, objArr)));
        }
        builder.setPositiveButton(LocaleController.getString("ShareContact", NUM), new -$$Lambda$ChatActivity$hbPllJLPnTBm3BRXhqjDPHoFCLc(this, i, messageObject));
        builder.setNegativeButton(LocaleController.getString("Cancel", NUM), null);
        showDialog(builder.create());
    }

    public /* synthetic */ void lambda$shareMyContact$51$ChatActivity(int i, MessageObject messageObject, DialogInterface dialogInterface, int i2) {
        if (i == 1) {
            TL_contacts_acceptContact tL_contacts_acceptContact = new TL_contacts_acceptContact();
            tL_contacts_acceptContact.id = getMessagesController().getInputUser(this.currentUser);
            getConnectionsManager().sendRequest(tL_contacts_acceptContact, new -$$Lambda$ChatActivity$6s43-pWydcWeQCxe7e-nrgZJg7Y(this));
            return;
        }
        SendMessagesHelper.getInstance(this.currentAccount).sendMessage(getUserConfig().getCurrentUser(), this.dialog_id, messageObject, null, null, true, 0);
        if (!this.inScheduleMode) {
            moveScrollToLastMessage();
        }
        hideFieldPanel(false);
    }

    public /* synthetic */ void lambda$null$50$ChatActivity(TLObject tLObject, TL_error tL_error) {
        if (tL_error == null) {
            getMessagesController().processUpdates((Updates) tLObject, false);
        }
    }

    private void hideVoiceHint() {
        if (this.voiceHintTextView != null) {
            this.voiceHintAnimation = new AnimatorSet();
            AnimatorSet animatorSet = this.voiceHintAnimation;
            Animator[] animatorArr = new Animator[1];
            animatorArr[0] = ObjectAnimator.ofFloat(this.voiceHintTextView, View.ALPHA, new float[]{0.0f});
            animatorSet.playTogether(animatorArr);
            this.voiceHintAnimation.addListener(new AnimatorListenerAdapter() {
                public void onAnimationEnd(Animator animator) {
                    if (animator.equals(ChatActivity.this.voiceHintAnimation)) {
                        ChatActivity.this.voiceHintAnimation = null;
                        ChatActivity.this.voiceHintHideRunnable = null;
                        if (ChatActivity.this.voiceHintTextView != null) {
                            ChatActivity.this.voiceHintTextView.setVisibility(8);
                        }
                    }
                }

                public void onAnimationCancel(Animator animator) {
                    if (animator.equals(ChatActivity.this.voiceHintAnimation)) {
                        ChatActivity.this.voiceHintAnimation = null;
                        ChatActivity.this.voiceHintHideRunnable = null;
                    }
                }
            });
            this.voiceHintAnimation.setDuration(300);
            this.voiceHintAnimation.start();
        }
    }

    private void showVoiceHint(boolean z, boolean z2) {
        if (!(getParentActivity() == null || this.fragmentView == null || ((z && this.voiceHintTextView == null) || this.inScheduleMode))) {
            if (this.voiceHintTextView == null) {
                SizeNotifierFrameLayout sizeNotifierFrameLayout = (SizeNotifierFrameLayout) this.fragmentView;
                int indexOfChild = sizeNotifierFrameLayout.indexOfChild(this.chatActivityEnterView);
                if (indexOfChild != -1) {
                    this.voiceHintTextView = new TextView(getParentActivity());
                    this.voiceHintTextView.setBackgroundDrawable(Theme.createRoundRectDrawable(AndroidUtilities.dp(3.0f), Theme.getColor("chat_gifSaveHintBackground")));
                    this.voiceHintTextView.setTextColor(Theme.getColor("chat_gifSaveHintText"));
                    this.voiceHintTextView.setTextSize(1, 14.0f);
                    this.voiceHintTextView.setPadding(AndroidUtilities.dp(8.0f), AndroidUtilities.dp(7.0f), AndroidUtilities.dp(8.0f), AndroidUtilities.dp(7.0f));
                    this.voiceHintTextView.setGravity(16);
                    this.voiceHintTextView.setAlpha(0.0f);
                    sizeNotifierFrameLayout.addView(this.voiceHintTextView, indexOfChild + 1, LayoutHelper.createFrame(-2, -2.0f, 85, 5.0f, 0.0f, 5.0f, 3.0f));
                } else {
                    return;
                }
            }
            AnimatorSet animatorSet;
            if (z) {
                animatorSet = this.voiceHintAnimation;
                if (animatorSet != null) {
                    animatorSet.cancel();
                    this.voiceHintAnimation = null;
                }
                AndroidUtilities.cancelRunOnUIThread(this.voiceHintHideRunnable);
                this.voiceHintHideRunnable = null;
                if (this.voiceHintTextView.getVisibility() == 0) {
                    hideVoiceHint();
                }
                return;
            }
            int i;
            String str;
            TextView textView = this.voiceHintTextView;
            if (z2) {
                i = NUM;
                str = "HoldToVideo";
            } else {
                i = NUM;
                str = "HoldToAudio";
            }
            textView.setText(LocaleController.getString(str, i));
            Runnable runnable = this.voiceHintHideRunnable;
            if (runnable != null) {
                AnimatorSet animatorSet2 = this.voiceHintAnimation;
                if (animatorSet2 != null) {
                    animatorSet2.cancel();
                    this.voiceHintAnimation = null;
                } else {
                    AndroidUtilities.cancelRunOnUIThread(runnable);
                    -$$Lambda$ChatActivity$pe75AXzEVBCivaaObrUmNMqELz0 -__lambda_chatactivity_pe75axzevbcivaaobrumnmqelz0 = new -$$Lambda$ChatActivity$pe75AXzEVBCivaaObrUmNMqELz0(this);
                    this.voiceHintHideRunnable = -__lambda_chatactivity_pe75axzevbcivaaobrumnmqelz0;
                    AndroidUtilities.runOnUIThread(-__lambda_chatactivity_pe75axzevbcivaaobrumnmqelz0, 2000);
                    return;
                }
            } else if (this.voiceHintAnimation != null) {
                return;
            }
            this.voiceHintTextView.setVisibility(0);
            this.voiceHintAnimation = new AnimatorSet();
            animatorSet = this.voiceHintAnimation;
            Animator[] animatorArr = new Animator[1];
            animatorArr[0] = ObjectAnimator.ofFloat(this.voiceHintTextView, View.ALPHA, new float[]{1.0f});
            animatorSet.playTogether(animatorArr);
            this.voiceHintAnimation.addListener(new AnimatorListenerAdapter() {
                public void onAnimationEnd(Animator animator) {
                    if (animator.equals(ChatActivity.this.voiceHintAnimation)) {
                        ChatActivity.this.voiceHintAnimation = null;
                        AndroidUtilities.runOnUIThread(ChatActivity.this.voiceHintHideRunnable = new -$$Lambda$ChatActivity$45$GbKrNRKMRG9QPJBs48F6LW1UPWM(this), 2000);
                    }
                }

                public /* synthetic */ void lambda$onAnimationEnd$0$ChatActivity$45() {
                    ChatActivity.this.hideVoiceHint();
                }

                public void onAnimationCancel(Animator animator) {
                    if (animator.equals(ChatActivity.this.voiceHintAnimation)) {
                        ChatActivity.this.voiceHintAnimation = null;
                    }
                }
            });
            this.voiceHintAnimation.setDuration(300);
            this.voiceHintAnimation.start();
        }
    }

    private boolean checkSlowMode(View view) {
        CharSequence slowModeTimer = this.chatActivityEnterView.getSlowModeTimer();
        if (slowModeTimer == null) {
            return false;
        }
        showSlowModeHint(view, true, slowModeTimer);
        return true;
    }

    private void hideHints() {
        HintView hintView = this.noSoundHintView;
        if (hintView != null) {
            hintView.hide();
        }
        hintView = this.forwardHintView;
        if (hintView != null) {
            hintView.hide();
        }
        hintView = this.slowModeHint;
        if (hintView != null) {
            hintView.hide();
        }
        hintView = this.searchAsListHint;
        if (hintView != null) {
            hintView.hide();
        }
    }

    private void showSlowModeHint(View view, boolean z, CharSequence charSequence) {
        if (getParentActivity() != null && this.fragmentView != null) {
            if (!z) {
                HintView hintView = this.slowModeHint;
                if (hintView == null || hintView.getVisibility() != 0) {
                    return;
                }
            }
            this.slowModeHint.setText(AndroidUtilities.replaceTags(LocaleController.formatString("SlowModeHint", NUM, charSequence)));
            if (z) {
                this.slowModeHint.showForView(view, true);
            }
        }
    }

    private void showSearchAsListHint() {
        if (getParentActivity() != null && this.fragmentView != null && this.searchCountText != null) {
            if (this.searchAsListHint == null) {
                this.searchAsListHint = new HintView(getParentActivity(), 3);
                this.searchAsListHint.setAlpha(0.0f);
                this.searchAsListHint.setVisibility(4);
                this.searchAsListHint.setText(LocaleController.getString("TapToViewAsList", NUM));
                this.contentView.addView(this.searchAsListHint, LayoutHelper.createFrame(-2, -2.0f, 51, 19.0f, 0.0f, 19.0f, 0.0f));
            }
            this.searchAsListHint.showForView(this.searchCountText, true);
        }
    }

    private void showMediaBannedHint() {
        if (!(getParentActivity() == null || this.currentChat == null || this.fragmentView == null)) {
            TextView textView = this.mediaBanTooltip;
            if (textView == null || textView.getVisibility() != 0) {
                SizeNotifierFrameLayout sizeNotifierFrameLayout = (SizeNotifierFrameLayout) this.fragmentView;
                int indexOfChild = sizeNotifierFrameLayout.indexOfChild(this.chatActivityEnterView);
                if (indexOfChild != -1) {
                    if (this.mediaBanTooltip == null) {
                        this.mediaBanTooltip = new CorrectlyMeasuringTextView(getParentActivity());
                        this.mediaBanTooltip.setBackgroundDrawable(Theme.createRoundRectDrawable(AndroidUtilities.dp(3.0f), Theme.getColor("chat_gifSaveHintBackground")));
                        this.mediaBanTooltip.setTextColor(Theme.getColor("chat_gifSaveHintText"));
                        this.mediaBanTooltip.setPadding(AndroidUtilities.dp(8.0f), AndroidUtilities.dp(7.0f), AndroidUtilities.dp(8.0f), AndroidUtilities.dp(7.0f));
                        this.mediaBanTooltip.setGravity(16);
                        this.mediaBanTooltip.setTextSize(1, 14.0f);
                        this.mediaBanTooltip.setVisibility(8);
                        sizeNotifierFrameLayout.addView(this.mediaBanTooltip, indexOfChild + 1, LayoutHelper.createFrame(-2, -2.0f, 85, 30.0f, 0.0f, 5.0f, 3.0f));
                    }
                    if (ChatObject.isActionBannedByDefault(this.currentChat, 7)) {
                        this.mediaBanTooltip.setText(LocaleController.getString("GlobalAttachMediaRestricted", NUM));
                    } else {
                        TL_chatBannedRights tL_chatBannedRights = this.currentChat.banned_rights;
                        if (tL_chatBannedRights != null) {
                            if (AndroidUtilities.isBannedForever(tL_chatBannedRights)) {
                                this.mediaBanTooltip.setText(LocaleController.getString("AttachMediaRestrictedForever", NUM));
                            } else {
                                this.mediaBanTooltip.setText(LocaleController.formatString("AttachMediaRestricted", NUM, LocaleController.formatDateForBan((long) this.currentChat.banned_rights.until_date)));
                            }
                        } else {
                            return;
                        }
                    }
                    this.mediaBanTooltip.setVisibility(0);
                    AnimatorSet animatorSet = new AnimatorSet();
                    animatorSet.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.mediaBanTooltip, View.ALPHA, new float[]{0.0f, 1.0f})});
                    animatorSet.addListener(new AnimatorListenerAdapter() {
                        public void onAnimationEnd(Animator animator) {
                            AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$46$tmD3FOzE1TPIq5nTEvL3td9yKgc(this), 5000);
                        }

                        public /* synthetic */ void lambda$onAnimationEnd$0$ChatActivity$46() {
                            if (ChatActivity.this.mediaBanTooltip != null) {
                                AnimatorSet animatorSet = new AnimatorSet();
                                Animator[] animatorArr = new Animator[1];
                                animatorArr[0] = ObjectAnimator.ofFloat(ChatActivity.this.mediaBanTooltip, View.ALPHA, new float[]{0.0f});
                                animatorSet.playTogether(animatorArr);
                                animatorSet.addListener(new AnimatorListenerAdapter() {
                                    public void onAnimationEnd(Animator animator) {
                                        if (ChatActivity.this.mediaBanTooltip != null) {
                                            ChatActivity.this.mediaBanTooltip.setVisibility(8);
                                        }
                                    }
                                });
                                animatorSet.setDuration(300);
                                animatorSet.start();
                            }
                        }
                    });
                    animatorSet.setDuration(300);
                    animatorSet.start();
                }
            }
        }
    }

    private void showNoSoundHint() {
        if (!this.scrollingChatListView && !SharedConfig.noSoundHintShowed && this.chatListView != null && getParentActivity() != null && this.fragmentView != null) {
            HintView hintView = this.noSoundHintView;
            if (hintView == null || hintView.getTag() == null) {
                int i = 0;
                if (this.noSoundHintView == null) {
                    SizeNotifierFrameLayout sizeNotifierFrameLayout = (SizeNotifierFrameLayout) this.fragmentView;
                    int indexOfChild = sizeNotifierFrameLayout.indexOfChild(this.chatActivityEnterView);
                    if (indexOfChild != -1) {
                        this.noSoundHintView = new HintView(getParentActivity(), 0);
                        sizeNotifierFrameLayout.addView(this.noSoundHintView, indexOfChild + 1, LayoutHelper.createFrame(-2, -2.0f, 51, 19.0f, 0.0f, 19.0f, 0.0f));
                        this.noSoundHintView.setAlpha(0.0f);
                        this.noSoundHintView.setVisibility(4);
                    } else {
                        return;
                    }
                }
                int childCount = this.chatListView.getChildCount();
                while (i < childCount) {
                    View childAt = this.chatListView.getChildAt(i);
                    if (childAt instanceof ChatMessageCell) {
                        ChatMessageCell chatMessageCell = (ChatMessageCell) childAt;
                        MessageObject messageObject = chatMessageCell.getMessageObject();
                        if (messageObject != null && messageObject.isVideo()) {
                            AnimatedFileDrawable animation = chatMessageCell.getPhotoImage().getAnimation();
                            if (animation != null && animation.getCurrentProgressMs() >= 3000 && this.noSoundHintView.showForMessageCell(chatMessageCell, true)) {
                                SharedConfig.setNoSoundHintShowed(true);
                                break;
                            }
                        }
                    }
                    i++;
                }
            }
        }
    }

    private void showForwardHint(ChatMessageCell chatMessageCell) {
        if (!(this.scrollingChatListView || this.chatListView == null || getParentActivity() == null)) {
            View view = this.fragmentView;
            if (view != null) {
                if (this.forwardHintView == null) {
                    SizeNotifierFrameLayout sizeNotifierFrameLayout = (SizeNotifierFrameLayout) view;
                    int indexOfChild = sizeNotifierFrameLayout.indexOfChild(this.chatActivityEnterView);
                    if (indexOfChild != -1) {
                        this.forwardHintView = new HintView(getParentActivity(), 1);
                        sizeNotifierFrameLayout.addView(this.forwardHintView, indexOfChild + 1, LayoutHelper.createFrame(-2, -2.0f, 51, 19.0f, 0.0f, 19.0f, 0.0f));
                        this.forwardHintView.setAlpha(0.0f);
                        this.forwardHintView.setVisibility(4);
                    } else {
                        return;
                    }
                }
                this.forwardHintView.showForMessageCell(chatMessageCell, true);
            }
        }
    }

    /* JADX WARNING: Removed duplicated region for block: B:14:0x0029  */
    /* JADX WARNING: Removed duplicated region for block: B:13:0x0027  */
    private void showTextSelectionHint(org.telegram.messenger.MessageObject r9) {
        /*
        r8 = this;
        r0 = r9.textLayoutBlocks;
        r1 = 0;
        r2 = 1;
        if (r0 == 0) goto L_0x0018;
    L_0x0006:
        r0 = r0.isEmpty();
        if (r0 != 0) goto L_0x0018;
    L_0x000c:
        r0 = r9.messageText;
        r9 = r9.textLayoutBlocks;
        r9 = r9.size();
        if (r9 <= r2) goto L_0x001a;
    L_0x0016:
        r9 = 1;
        goto L_0x001b;
    L_0x0018:
        r0 = r9.caption;
    L_0x001a:
        r9 = 0;
    L_0x001b:
        if (r9 != 0) goto L_0x002a;
    L_0x001d:
        if (r0 == 0) goto L_0x002a;
    L_0x001f:
        r9 = r0.length();
        r0 = 200; // 0xc8 float:2.8E-43 double:9.9E-322;
        if (r9 <= r0) goto L_0x0029;
    L_0x0027:
        r9 = 1;
        goto L_0x002a;
    L_0x0029:
        r9 = 0;
    L_0x002a:
        if (r9 == 0) goto L_0x007a;
    L_0x002c:
        r9 = org.telegram.messenger.SharedConfig.textSelectionHintShows;
        r0 = 2;
        if (r9 > r0) goto L_0x007a;
    L_0x0031:
        r9 = r8.textSelectionHintWasShowed;
        if (r9 != 0) goto L_0x007a;
    L_0x0035:
        r9 = r8.lastTouchY;
        r0 = r8.chatActivityEnterView;
        r0 = r0.getTop();
        r1 = NUM; // 0x42700000 float:60.0 double:5.507034975E-315;
        r1 = org.telegram.messenger.AndroidUtilities.dp(r1);
        r0 = r0 - r1;
        r0 = (float) r0;
        r9 = (r9 > r0 ? 1 : (r9 == r0 ? 0 : -1));
        if (r9 <= 0) goto L_0x004a;
    L_0x0049:
        goto L_0x007a;
    L_0x004a:
        r8.textSelectionHintWasShowed = r2;
        org.telegram.messenger.SharedConfig.increaseTextSelectionHintShowed();
        r9 = r8.textSelectionHint;
        if (r9 != 0) goto L_0x0075;
    L_0x0053:
        r9 = new org.telegram.ui.ChatActivity$47;
        r0 = r8.getParentActivity();
        r9.<init>(r0);
        r8.textSelectionHint = r9;
        r9 = r8.contentView;
        r0 = r8.textSelectionHint;
        r1 = -2;
        r2 = NUM; // 0x42600000 float:56.0 double:5.50185432E-315;
        r3 = 83;
        r4 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r5 = 0;
        r6 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r7 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r1 = org.telegram.ui.Components.LayoutHelper.createFrame(r1, r2, r3, r4, r5, r6, r7);
        r9.addView(r0, r1);
    L_0x0075:
        r9 = r8.textSelectionHint;
        r9.show();
    L_0x007a:
        return;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.showTextSelectionHint(org.telegram.messenger.MessageObject):void");
    }

    private void showGifHint() {
        SharedPreferences globalMainSettings = MessagesController.getGlobalMainSettings();
        String str = "gifhint";
        if (!globalMainSettings.getBoolean(str, false)) {
            globalMainSettings.edit().putBoolean(str, true).commit();
            if (getParentActivity() != null) {
                View view = this.fragmentView;
                if (view != null && this.gifHintTextView == null) {
                    if (this.allowContextBotPanelSecond) {
                        SizeNotifierFrameLayout sizeNotifierFrameLayout = (SizeNotifierFrameLayout) view;
                        int indexOfChild = sizeNotifierFrameLayout.indexOfChild(this.chatActivityEnterView);
                        if (indexOfChild != -1) {
                            this.chatActivityEnterView.setOpenGifsTabFirst();
                            this.emojiButtonRed = new View(getParentActivity());
                            this.emojiButtonRed.setBackgroundResource(NUM);
                            indexOfChild++;
                            sizeNotifierFrameLayout.addView(this.emojiButtonRed, indexOfChild, LayoutHelper.createFrame(10, 10.0f, 83, 30.0f, 0.0f, 0.0f, 27.0f));
                            this.gifHintTextView = new TextView(getParentActivity());
                            this.gifHintTextView.setBackgroundDrawable(Theme.createRoundRectDrawable(AndroidUtilities.dp(3.0f), Theme.getColor("chat_gifSaveHintBackground")));
                            this.gifHintTextView.setTextColor(Theme.getColor("chat_gifSaveHintText"));
                            this.gifHintTextView.setTextSize(1, 14.0f);
                            this.gifHintTextView.setPadding(AndroidUtilities.dp(8.0f), AndroidUtilities.dp(7.0f), AndroidUtilities.dp(8.0f), AndroidUtilities.dp(7.0f));
                            this.gifHintTextView.setText(LocaleController.getString("TapHereGifs", NUM));
                            this.gifHintTextView.setGravity(16);
                            sizeNotifierFrameLayout.addView(this.gifHintTextView, indexOfChild, LayoutHelper.createFrame(-2, -2.0f, 83, 5.0f, 0.0f, 5.0f, 3.0f));
                            AnimatorSet animatorSet = new AnimatorSet();
                            animatorSet.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.gifHintTextView, View.ALPHA, new float[]{0.0f, 1.0f}), ObjectAnimator.ofFloat(this.emojiButtonRed, View.ALPHA, new float[]{0.0f, 1.0f})});
                            animatorSet.addListener(new AnimatorListenerAdapter() {
                                public void onAnimationEnd(Animator animator) {
                                    AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$48$IuaawhgP2SIr6LuUhqSazhZ1DNM(this), 2000);
                                }

                                public /* synthetic */ void lambda$onAnimationEnd$0$ChatActivity$48() {
                                    if (ChatActivity.this.gifHintTextView != null) {
                                        AnimatorSet animatorSet = new AnimatorSet();
                                        Animator[] animatorArr = new Animator[1];
                                        animatorArr[0] = ObjectAnimator.ofFloat(ChatActivity.this.gifHintTextView, View.ALPHA, new float[]{0.0f});
                                        animatorSet.playTogether(animatorArr);
                                        animatorSet.addListener(new AnimatorListenerAdapter() {
                                            public void onAnimationEnd(Animator animator) {
                                                if (ChatActivity.this.gifHintTextView != null) {
                                                    ChatActivity.this.gifHintTextView.setVisibility(8);
                                                }
                                            }
                                        });
                                        animatorSet.setDuration(300);
                                        animatorSet.start();
                                    }
                                }
                            });
                            animatorSet.setDuration(300);
                            animatorSet.start();
                        } else {
                            return;
                        }
                    }
                    ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
                    if (chatActivityEnterView != null) {
                        chatActivityEnterView.setOpenGifsTabFirst();
                    }
                }
            }
        }
    }

    private void openAttachMenu() {
        if (getParentActivity() != null) {
            createChatAttachView();
            this.chatAttachAlert.loadGalleryPhotos();
            int i = VERSION.SDK_INT;
            if (i == 21 || i == 22) {
                this.chatActivityEnterView.closeKeyboard();
            }
            Chat chat = this.currentChat;
            if (chat == null || ChatObject.hasAdminRights(chat) || !this.currentChat.slowmode_enabled) {
                this.chatAttachAlert.setMaxSelectedPhotos(-1, true);
            } else {
                this.chatAttachAlert.setMaxSelectedPhotos(10, true);
            }
            this.chatAttachAlert.init();
            showDialog(this.chatAttachAlert);
        }
    }

    private void checkContextBotPanel() {
        if (this.allowStickersPanel) {
            MentionsAdapter mentionsAdapter = this.mentionsAdapter;
            if (mentionsAdapter != null && mentionsAdapter.isBotContext()) {
                AnimatorSet animatorSet;
                if (this.allowContextBotPanel || this.allowContextBotPanelSecond) {
                    if (this.mentionContainer.getVisibility() == 4 || this.mentionContainer.getTag() != null) {
                        animatorSet = this.mentionListAnimation;
                        if (animatorSet != null) {
                            animatorSet.cancel();
                        }
                        this.mentionContainer.setTag(null);
                        this.mentionContainer.setVisibility(0);
                        updateMessageListAccessibilityVisibility();
                        this.mentionListAnimation = new AnimatorSet();
                        this.mentionListAnimation.playTogether(new Animator[]{ObjectAnimator.ofFloat(this.mentionContainer, View.ALPHA, new float[]{0.0f, 1.0f})});
                        this.mentionListAnimation.addListener(new AnimatorListenerAdapter() {
                            public void onAnimationEnd(Animator animator) {
                                if (ChatActivity.this.mentionListAnimation != null && ChatActivity.this.mentionListAnimation.equals(animator)) {
                                    ChatActivity.this.mentionListAnimation = null;
                                }
                            }

                            public void onAnimationCancel(Animator animator) {
                                if (ChatActivity.this.mentionListAnimation != null && ChatActivity.this.mentionListAnimation.equals(animator)) {
                                    ChatActivity.this.mentionListAnimation = null;
                                }
                            }
                        });
                        this.mentionListAnimation.setDuration(200);
                        this.mentionListAnimation.start();
                    }
                } else if (this.mentionContainer.getVisibility() == 0 && this.mentionContainer.getTag() == null) {
                    animatorSet = this.mentionListAnimation;
                    if (animatorSet != null) {
                        animatorSet.cancel();
                    }
                    this.mentionContainer.setTag(Integer.valueOf(1));
                    this.mentionListAnimation = new AnimatorSet();
                    animatorSet = this.mentionListAnimation;
                    Animator[] animatorArr = new Animator[1];
                    animatorArr[0] = ObjectAnimator.ofFloat(this.mentionContainer, View.ALPHA, new float[]{0.0f});
                    animatorSet.playTogether(animatorArr);
                    this.mentionListAnimation.addListener(new AnimatorListenerAdapter() {
                        public void onAnimationEnd(Animator animator) {
                            if (ChatActivity.this.mentionListAnimation != null && ChatActivity.this.mentionListAnimation.equals(animator)) {
                                ChatActivity.this.mentionContainer.setVisibility(4);
                                ChatActivity.this.mentionListAnimation = null;
                                ChatActivity.this.updateMessageListAccessibilityVisibility();
                            }
                        }

                        public void onAnimationCancel(Animator animator) {
                            if (ChatActivity.this.mentionListAnimation != null && ChatActivity.this.mentionListAnimation.equals(animator)) {
                                ChatActivity.this.mentionListAnimation = null;
                            }
                        }
                    });
                    this.mentionListAnimation.setDuration(200);
                    this.mentionListAnimation.start();
                }
            }
        }
    }

    private void checkAutoDownloadMessages(boolean z) {
        RecyclerListView recyclerListView = this.chatListView;
        if (recyclerListView != null) {
            int childCount = recyclerListView.getChildCount();
            int i = -1;
            int i2 = -1;
            for (int i3 = 0; i3 < childCount; i3++) {
                View childAt = this.chatListView.getChildAt(i3);
                if (childAt instanceof ChatMessageCell) {
                    ViewHolder findContainingViewHolder = this.chatListView.findContainingViewHolder(childAt);
                    if (findContainingViewHolder != null) {
                        i2 = findContainingViewHolder.getAdapterPosition();
                        if (i == -1) {
                            i = i2;
                        }
                    }
                    ChatMessageCell chatMessageCell = (ChatMessageCell) childAt;
                    MessageObject messageObject = chatMessageCell.getMessageObject();
                    if (!(messageObject == null || messageObject.mediaExists || !messageObject.isSent())) {
                        Document document = messageObject.getDocument();
                        if (!(document == null || MessageObject.isStickerDocument(document) || MessageObject.isAnimatedStickerDocument(document, true) || MessageObject.isGifDocument(document) || MessageObject.isRoundVideoDocument(document))) {
                            int canDownloadMedia = getDownloadController().canDownloadMedia(messageObject.messageOwner);
                            if (canDownloadMedia != 0) {
                                int i4 = 2;
                                if (canDownloadMedia != 2) {
                                    if (messageObject.isWallpaper() || messageObject.isTheme()) {
                                        i4 = 1;
                                    } else if (!(MessageObject.isVideoDocument(document) && messageObject.shouldEncryptPhotoOrVideo())) {
                                        i4 = 0;
                                    }
                                    getFileLoader().loadFile(document, messageObject, 0, i4);
                                    chatMessageCell.updateButtonState(false, true, false);
                                } else if (this.currentEncryptedChat == null && !messageObject.shouldEncryptPhotoOrVideo() && messageObject.canStreamVideo()) {
                                    getFileLoader().loadFile(document, messageObject, 0, 10);
                                }
                            }
                        }
                    }
                }
            }
            if (i != -1) {
                int i5;
                int i6;
                if (z) {
                    i5 = i2 + 10;
                    if (i5 >= this.chatAdapter.messagesEndRow) {
                        i5 = this.chatAdapter.messagesEndRow;
                    }
                    childCount = this.messages.size();
                    while (i2 < i5) {
                        i6 = i2 - this.chatAdapter.messagesStartRow;
                        if (i6 >= 0 && i6 < childCount) {
                            checkAutoDownloadMessage((MessageObject) this.messages.get(i6));
                        }
                        i2++;
                    }
                } else {
                    i5 = i - 20;
                    childCount = this.chatAdapter.messagesStartRow;
                    if (i5 <= childCount) {
                        i5 = childCount;
                    }
                    childCount = this.messages.size();
                    for (i--; i >= i5; i--) {
                        i6 = i - this.chatAdapter.messagesStartRow;
                        if (i6 >= 0 && i6 < childCount) {
                            checkAutoDownloadMessage((MessageObject) this.messages.get(i6));
                        }
                    }
                }
            }
            showNoSoundHint();
        }
    }

    private void checkAutoDownloadMessage(MessageObject messageObject) {
        if (!messageObject.mediaExists) {
            int canDownloadMedia = getDownloadController().canDownloadMedia(messageObject.messageOwner);
            if (canDownloadMedia != 0) {
                Document document = messageObject.getDocument();
                PhotoSize closestPhotoSizeWithSize = document == null ? FileLoader.getClosestPhotoSizeWithSize(messageObject.photoThumbs, AndroidUtilities.getPhotoSize()) : null;
                if (document != null || closestPhotoSizeWithSize != null) {
                    int i = 2;
                    if (canDownloadMedia == 2 || (canDownloadMedia == 1 && messageObject.isVideo())) {
                        if (document != null && this.currentEncryptedChat == null && !messageObject.shouldEncryptPhotoOrVideo() && messageObject.canStreamVideo()) {
                            getFileLoader().loadFile(document, messageObject, 0, 10);
                        }
                    } else if (document != null) {
                        FileLoader fileLoader = getFileLoader();
                        if (!(MessageObject.isVideoDocument(document) && messageObject.shouldEncryptPhotoOrVideo())) {
                            i = 0;
                        }
                        fileLoader.loadFile(document, messageObject, 0, i);
                    } else {
                        getFileLoader().loadFile(ImageLocation.getForObject(closestPhotoSizeWithSize, messageObject.photoThumbsObject), messageObject, null, 0, messageObject.shouldEncryptPhotoOrVideo() ? 2 : 0);
                    }
                }
            }
        }
    }

    private void showFloatingDateView(boolean z) {
        if (this.floatingDateView.getTag() == null) {
            AnimatorSet animatorSet = this.floatingDateAnimation;
            if (animatorSet != null) {
                animatorSet.cancel();
            }
            this.floatingDateView.setTag(Integer.valueOf(1));
            this.floatingDateAnimation = new AnimatorSet();
            this.floatingDateAnimation.setDuration(150);
            animatorSet = this.floatingDateAnimation;
            Animator[] animatorArr = new Animator[1];
            animatorArr[0] = ObjectAnimator.ofFloat(this.floatingDateView, View.ALPHA, new float[]{1.0f});
            animatorSet.playTogether(animatorArr);
            this.floatingDateAnimation.addListener(new AnimatorListenerAdapter() {
                public void onAnimationEnd(Animator animator) {
                    if (animator.equals(ChatActivity.this.floatingDateAnimation)) {
                        ChatActivity.this.floatingDateAnimation = null;
                    }
                }
            });
            this.floatingDateAnimation.start();
        }
        if (!z) {
            updateMessagesVisiblePart(false);
            this.hideDateDelay = 1000;
        }
    }

    private void hideFloatingDateView(boolean z) {
        if (this.floatingDateView.getTag() != null && !this.currentFloatingDateOnScreen) {
            if (!this.scrollingFloatingDate || this.currentFloatingTopIsNotMessage) {
                this.floatingDateView.setTag(null);
                AnimatorSet animatorSet;
                if (z) {
                    this.floatingDateAnimation = new AnimatorSet();
                    this.floatingDateAnimation.setDuration(150);
                    animatorSet = this.floatingDateAnimation;
                    Animator[] animatorArr = new Animator[1];
                    animatorArr[0] = ObjectAnimator.ofFloat(this.floatingDateView, View.ALPHA, new float[]{0.0f});
                    animatorSet.playTogether(animatorArr);
                    this.floatingDateAnimation.addListener(new AnimatorListenerAdapter() {
                        public void onAnimationEnd(Animator animator) {
                            if (animator.equals(ChatActivity.this.floatingDateAnimation)) {
                                ChatActivity.this.floatingDateAnimation = null;
                            }
                        }
                    });
                    this.floatingDateAnimation.setStartDelay((long) this.hideDateDelay);
                    this.floatingDateAnimation.start();
                } else {
                    animatorSet = this.floatingDateAnimation;
                    if (animatorSet != null) {
                        animatorSet.cancel();
                        this.floatingDateAnimation = null;
                    }
                    this.floatingDateView.setAlpha(0.0f);
                }
                this.hideDateDelay = 500;
            }
        }
    }

    /* Access modifiers changed, original: protected */
    public void onRemoveFromParent() {
        MessageObject playingMessageObject = MediaController.getInstance().getPlayingMessageObject();
        if (playingMessageObject == null || !playingMessageObject.isVideo()) {
            MediaController.getInstance().setTextureView(this.videoTextureView, null, null, false);
        } else {
            MediaController.getInstance().cleanupPlayer(true, true);
        }
    }

    /* Access modifiers changed, original: protected */
    public void setIgnoreAttachOnPause(boolean z) {
        this.ignoreAttachOnPause = z;
    }

    public ChatActivityEnterView getChatActivityEnterView() {
        return this.chatActivityEnterView;
    }

    private void checkScrollForLoad(boolean z) {
        GridLayoutManagerFixed gridLayoutManagerFixed = this.chatLayoutManager;
        if (gridLayoutManagerFixed != null && !this.paused) {
            int i;
            int i2;
            int i3;
            int findFirstVisibleItemPosition = gridLayoutManagerFixed.findFirstVisibleItemPosition();
            if (findFirstVisibleItemPosition == -1) {
                i = 0;
            } else {
                i = Math.abs(this.chatLayoutManager.findLastVisibleItemPosition() - findFirstVisibleItemPosition) + 1;
            }
            if ((this.chatAdapter.getItemCount() - findFirstVisibleItemPosition) - i <= (z ? 25 : 5) && !this.loading) {
                boolean[] zArr = this.endReached;
                int i4;
                if (!zArr[0]) {
                    this.loading = true;
                    this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
                    int i5;
                    if (this.messagesByDays.size() != 0) {
                        MessagesController messagesController = getMessagesController();
                        long j = this.dialog_id;
                        i2 = this.maxMessageId[0];
                        i4 = this.cacheEndReached[0] ^ 1;
                        int i6 = this.minDate[0];
                        int i7 = this.classGuid;
                        boolean isChannel = ChatObject.isChannel(this.currentChat);
                        boolean z2 = this.inScheduleMode;
                        i5 = this.lastLoadIndex;
                        this.lastLoadIndex = i5 + 1;
                        messagesController.loadMessages(j, 50, i2, 0, i4, i6, i7, 0, 0, isChannel, z2, i5);
                    } else {
                        MessagesController messagesController2 = getMessagesController();
                        long j2 = this.dialog_id;
                        int i8 = this.cacheEndReached[0] ^ 1;
                        int i9 = this.minDate[0];
                        i5 = this.classGuid;
                        boolean isChannel2 = ChatObject.isChannel(this.currentChat);
                        boolean z3 = this.inScheduleMode;
                        i3 = this.lastLoadIndex;
                        this.lastLoadIndex = i3 + 1;
                        messagesController2.loadMessages(j2, 50, 0, 0, i8, i9, i5, 0, 0, isChannel2, z3, i3);
                    }
                } else if (!(this.mergeDialogId == 0 || zArr[1])) {
                    this.loading = true;
                    this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
                    MessagesController messagesController3 = getMessagesController();
                    long j3 = this.mergeDialogId;
                    int i10 = this.maxMessageId[1];
                    i2 = this.cacheEndReached[1] ^ 1;
                    int i11 = this.minDate[1];
                    i4 = this.classGuid;
                    boolean z4 = this.inScheduleMode;
                    int i12 = this.lastLoadIndex;
                    this.lastLoadIndex = i12 + 1;
                    messagesController3.loadMessages(j3, 50, i10, 0, i2, i11, i4, 0, 0, false, z4, i12);
                }
            }
            if (i > 0 && !this.loadingForward && findFirstVisibleItemPosition <= 10) {
                MessagesController messagesController4;
                long j4;
                int i13;
                boolean z5;
                if (this.mergeDialogId != 0 && !this.forwardEndReached[1]) {
                    this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
                    messagesController4 = getMessagesController();
                    j4 = this.mergeDialogId;
                    i3 = this.minMessageId[1];
                    i13 = this.maxDate[1];
                    i2 = this.classGuid;
                    z5 = this.inScheduleMode;
                    i = this.lastLoadIndex;
                    this.lastLoadIndex = i + 1;
                    messagesController4.loadMessages(j4, 50, i3, 0, true, i13, i2, 1, 0, false, z5, i);
                    this.loadingForward = true;
                } else if (!this.forwardEndReached[0]) {
                    this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
                    messagesController4 = getMessagesController();
                    j4 = this.dialog_id;
                    i3 = this.minMessageId[0];
                    i13 = this.maxDate[0];
                    i2 = this.classGuid;
                    boolean isChannel3 = ChatObject.isChannel(this.currentChat);
                    z5 = this.inScheduleMode;
                    i = this.lastLoadIndex;
                    this.lastLoadIndex = i + 1;
                    messagesController4.loadMessages(j4, 50, i3, 0, true, i13, i2, 1, 0, isChannel3, z5, i);
                    this.loadingForward = true;
                }
            }
        }
    }

    private void openContactsSelectActivity() {
        PhonebookSelectShareAlert phonebookSelectShareAlert = new PhonebookSelectShareAlert(this);
        phonebookSelectShareAlert.setDelegate(new -$$Lambda$ChatActivity$O8gwCdeEdrKSuky8Neix2vVlILM(this));
        showDialog(phonebookSelectShareAlert);
    }

    public /* synthetic */ void lambda$openContactsSelectActivity$52$ChatActivity(User user, boolean z, int i) {
        getSendMessagesHelper().sendMessage(user, this.dialog_id, this.replyingMessageObject, null, null, z, i);
        afterMessageSend();
    }

    private void openMusicSelectActivity(BaseFragment baseFragment) {
        AudioSelectActivity audioSelectActivity = new AudioSelectActivity(this);
        audioSelectActivity.setDelegate(new -$$Lambda$ChatActivity$n5LeAd6x0CspM4h4vML5pvXOVxQ(this, baseFragment));
        presentFragment(audioSelectActivity);
    }

    public /* synthetic */ void lambda$openMusicSelectActivity$53$ChatActivity(BaseFragment baseFragment, ArrayList arrayList, CharSequence charSequence, boolean z, int i) {
        if (baseFragment != null) {
            baseFragment.removeSelfFromStack();
        }
        ArrayList arrayList2 = null;
        fillEditingMediaWithCaption(charSequence, null);
        AccountInstance accountInstance = getAccountInstance();
        if (charSequence != null) {
            arrayList2 = charSequence.toString();
        }
        SendMessagesHelper.prepareSendingAudioDocuments(accountInstance, arrayList, arrayList2, this.dialog_id, this.replyingMessageObject, this.editingMessageObject, z, i);
        afterMessageSend();
    }

    /* JADX WARNING: Removed duplicated region for block: B:51:0x00c9  */
    /* JADX WARNING: Removed duplicated region for block: B:50:0x00c7  */
    /* JADX WARNING: Removed duplicated region for block: B:54:0x00ce  */
    /* JADX WARNING: Missing block: B:34:0x0095, code skipped:
            if (r11.send_gifs != false) goto L_0x0097;
     */
    private void processSelectedAttach(int r11) {
        /*
        r10 = this;
        r0 = "org.telegram.messenger.beta.provider";
        r1 = 24;
        r2 = "output";
        r3 = "android.permission.CAMERA";
        r4 = 2;
        r5 = 23;
        r6 = 0;
        r7 = 1;
        if (r11 != 0) goto L_0x0066;
    L_0x000f:
        r11 = android.os.Build.VERSION.SDK_INT;
        if (r11 < r5) goto L_0x002b;
    L_0x0013:
        r11 = r10.getParentActivity();
        r11 = r11.checkSelfPermission(r3);
        if (r11 == 0) goto L_0x002b;
    L_0x001d:
        r11 = r10.getParentActivity();
        r0 = new java.lang.String[r7];
        r0[r6] = r3;
        r1 = 19;
        r11.requestPermissions(r0, r1);
        return;
    L_0x002b:
        r11 = new android.content.Intent;	 Catch:{ Exception -> 0x0060 }
        r3 = "android.media.action.IMAGE_CAPTURE";
        r11.<init>(r3);	 Catch:{ Exception -> 0x0060 }
        r3 = org.telegram.messenger.AndroidUtilities.generatePicturePath();	 Catch:{ Exception -> 0x0060 }
        if (r3 == 0) goto L_0x005b;
    L_0x0038:
        r5 = android.os.Build.VERSION.SDK_INT;	 Catch:{ Exception -> 0x0060 }
        if (r5 < r1) goto L_0x004e;
    L_0x003c:
        r1 = r10.getParentActivity();	 Catch:{ Exception -> 0x0060 }
        r0 = androidx.core.content.FileProvider.getUriForFile(r1, r0, r3);	 Catch:{ Exception -> 0x0060 }
        r11.putExtra(r2, r0);	 Catch:{ Exception -> 0x0060 }
        r11.addFlags(r4);	 Catch:{ Exception -> 0x0060 }
        r11.addFlags(r7);	 Catch:{ Exception -> 0x0060 }
        goto L_0x0055;
    L_0x004e:
        r0 = android.net.Uri.fromFile(r3);	 Catch:{ Exception -> 0x0060 }
        r11.putExtra(r2, r0);	 Catch:{ Exception -> 0x0060 }
    L_0x0055:
        r0 = r3.getAbsolutePath();	 Catch:{ Exception -> 0x0060 }
        r10.currentPicturePath = r0;	 Catch:{ Exception -> 0x0060 }
    L_0x005b:
        r10.startActivityForResult(r11, r6);	 Catch:{ Exception -> 0x0060 }
        goto L_0x0224;
    L_0x0060:
        r11 = move-exception;
        org.telegram.messenger.FileLog.e(r11);
        goto L_0x0224;
    L_0x0066:
        r8 = 4;
        r9 = "android.permission.READ_EXTERNAL_STORAGE";
        if (r11 != r7) goto L_0x00df;
    L_0x006b:
        r11 = android.os.Build.VERSION.SDK_INT;
        if (r11 < r5) goto L_0x0085;
    L_0x006f:
        r11 = r10.getParentActivity();
        r11 = r11.checkSelfPermission(r9);
        if (r11 == 0) goto L_0x0085;
    L_0x0079:
        r11 = r10.getParentActivity();	 Catch:{ all -> 0x0084 }
        r0 = new java.lang.String[r7];	 Catch:{ all -> 0x0084 }
        r0[r6] = r9;	 Catch:{ all -> 0x0084 }
        r11.requestPermissions(r0, r8);	 Catch:{ all -> 0x0084 }
    L_0x0084:
        return;
    L_0x0085:
        r11 = r10.currentChat;
        r11 = org.telegram.messenger.ChatObject.isChannel(r11);
        if (r11 == 0) goto L_0x0099;
    L_0x008d:
        r11 = r10.currentChat;
        r11 = r11.banned_rights;
        if (r11 == 0) goto L_0x0099;
    L_0x0093:
        r11 = r11.send_gifs;
        if (r11 == 0) goto L_0x0099;
    L_0x0097:
        r11 = 0;
        goto L_0x00a8;
    L_0x0099:
        r11 = r10.currentEncryptedChat;
        if (r11 == 0) goto L_0x00a7;
    L_0x009d:
        r11 = r11.layer;
        r11 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r11);
        r0 = 46;
        if (r11 < r0) goto L_0x0097;
    L_0x00a7:
        r11 = 1;
    L_0x00a8:
        r0 = new org.telegram.ui.PhotoAlbumPickerActivity;
        r0.<init>(r6, r11, r7, r10);
        r11 = r10.currentChat;
        if (r11 == 0) goto L_0x00c3;
    L_0x00b1:
        r11 = org.telegram.messenger.ChatObject.hasAdminRights(r11);
        if (r11 != 0) goto L_0x00c3;
    L_0x00b7:
        r11 = r10.currentChat;
        r11 = r11.slowmode_enabled;
        if (r11 == 0) goto L_0x00c3;
    L_0x00bd:
        r11 = 10;
        r0.setMaxSelectedPhotos(r11, r7);
        goto L_0x00d2;
    L_0x00c3:
        r11 = r10.editingMessageObject;
        if (r11 == 0) goto L_0x00c9;
    L_0x00c7:
        r11 = 1;
        goto L_0x00ca;
    L_0x00c9:
        r11 = 0;
    L_0x00ca:
        r1 = r10.editingMessageObject;
        if (r1 != 0) goto L_0x00cf;
    L_0x00ce:
        r6 = 1;
    L_0x00cf:
        r0.setMaxSelectedPhotos(r11, r6);
    L_0x00d2:
        r11 = new org.telegram.ui.ChatActivity$53;
        r11.<init>();
        r0.setDelegate(r11);
        r10.presentFragment(r0);
        goto L_0x0224;
    L_0x00df:
        if (r11 != r4) goto L_0x0146;
    L_0x00e1:
        r11 = android.os.Build.VERSION.SDK_INT;
        if (r11 < r5) goto L_0x00fd;
    L_0x00e5:
        r11 = r10.getParentActivity();
        r11 = r11.checkSelfPermission(r3);
        if (r11 == 0) goto L_0x00fd;
    L_0x00ef:
        r11 = r10.getParentActivity();	 Catch:{ all -> 0x00fc }
        r0 = new java.lang.String[r7];	 Catch:{ all -> 0x00fc }
        r0[r6] = r3;	 Catch:{ all -> 0x00fc }
        r1 = 20;
        r11.requestPermissions(r0, r1);	 Catch:{ all -> 0x00fc }
    L_0x00fc:
        return;
    L_0x00fd:
        r11 = new android.content.Intent;	 Catch:{ Exception -> 0x0140 }
        r3 = "android.media.action.VIDEO_CAPTURE";
        r11.<init>(r3);	 Catch:{ Exception -> 0x0140 }
        r3 = org.telegram.messenger.AndroidUtilities.generateVideoPath();	 Catch:{ Exception -> 0x0140 }
        if (r3 == 0) goto L_0x013b;
    L_0x010a:
        r5 = android.os.Build.VERSION.SDK_INT;	 Catch:{ Exception -> 0x0140 }
        if (r5 < r1) goto L_0x0120;
    L_0x010e:
        r1 = r10.getParentActivity();	 Catch:{ Exception -> 0x0140 }
        r0 = androidx.core.content.FileProvider.getUriForFile(r1, r0, r3);	 Catch:{ Exception -> 0x0140 }
        r11.putExtra(r2, r0);	 Catch:{ Exception -> 0x0140 }
        r11.addFlags(r4);	 Catch:{ Exception -> 0x0140 }
        r11.addFlags(r7);	 Catch:{ Exception -> 0x0140 }
        goto L_0x012d;
    L_0x0120:
        r0 = android.os.Build.VERSION.SDK_INT;	 Catch:{ Exception -> 0x0140 }
        r1 = 18;
        if (r0 < r1) goto L_0x012d;
    L_0x0126:
        r0 = android.net.Uri.fromFile(r3);	 Catch:{ Exception -> 0x0140 }
        r11.putExtra(r2, r0);	 Catch:{ Exception -> 0x0140 }
    L_0x012d:
        r0 = "android.intent.extra.sizeLimit";
        r1 = NUM; // 0x60000000 float:3.6893488E19 double:7.957484216E-315;
        r11.putExtra(r0, r1);	 Catch:{ Exception -> 0x0140 }
        r0 = r3.getAbsolutePath();	 Catch:{ Exception -> 0x0140 }
        r10.currentPicturePath = r0;	 Catch:{ Exception -> 0x0140 }
    L_0x013b:
        r10.startActivityForResult(r11, r4);	 Catch:{ Exception -> 0x0140 }
        goto L_0x0224;
    L_0x0140:
        r11 = move-exception;
        org.telegram.messenger.FileLog.e(r11);
        goto L_0x0224;
    L_0x0146:
        r0 = 6;
        if (r11 != r0) goto L_0x0176;
    L_0x0149:
        r11 = org.telegram.messenger.AndroidUtilities.isGoogleMapsInstalled(r10);
        if (r11 != 0) goto L_0x0150;
    L_0x014f:
        return;
    L_0x0150:
        r11 = new org.telegram.ui.LocationActivity;
        r0 = r10.currentEncryptedChat;
        if (r0 != 0) goto L_0x0163;
    L_0x0156:
        r0 = r10.inScheduleMode;
        if (r0 != 0) goto L_0x0163;
    L_0x015a:
        r0 = r10.currentUser;
        r0 = org.telegram.messenger.UserObject.isUserSelf(r0);
        if (r0 != 0) goto L_0x0163;
    L_0x0162:
        r6 = 1;
    L_0x0163:
        r11.<init>(r6);
        r11.setChatActivity(r10);
        r0 = r10.dialog_id;
        r11.setDialogId(r0);
        r11.setDelegate(r10);
        r10.presentFragment(r11);
        goto L_0x0224;
    L_0x0176:
        if (r11 != r8) goto L_0x01bf;
    L_0x0178:
        r11 = android.os.Build.VERSION.SDK_INT;
        if (r11 < r5) goto L_0x0192;
    L_0x017c:
        r11 = r10.getParentActivity();
        r11 = r11.checkSelfPermission(r9);
        if (r11 == 0) goto L_0x0192;
    L_0x0186:
        r11 = r10.getParentActivity();	 Catch:{ all -> 0x0191 }
        r0 = new java.lang.String[r7];	 Catch:{ all -> 0x0191 }
        r0[r6] = r9;	 Catch:{ all -> 0x0191 }
        r11.requestPermissions(r0, r8);	 Catch:{ all -> 0x0191 }
    L_0x0191:
        return;
    L_0x0192:
        r11 = new org.telegram.ui.DocumentSelectActivity;
        r11.<init>(r7);
        r11.setChatActivity(r10);
        r0 = r10.currentChat;
        if (r0 == 0) goto L_0x01aa;
    L_0x019e:
        r0 = org.telegram.messenger.ChatObject.hasAdminRights(r0);
        if (r0 != 0) goto L_0x01aa;
    L_0x01a4:
        r0 = r10.currentChat;
        r0 = r0.slowmode_enabled;
        if (r0 != 0) goto L_0x01b0;
    L_0x01aa:
        r0 = r10.editingMessageObject;
        if (r0 == 0) goto L_0x01af;
    L_0x01ae:
        goto L_0x01b0;
    L_0x01af:
        r7 = -1;
    L_0x01b0:
        r11.setMaxSelectedFiles(r7);
        r0 = new org.telegram.ui.ChatActivity$54;
        r0.<init>();
        r11.setDelegate(r0);
        r10.presentFragment(r11);
        goto L_0x0224;
    L_0x01bf:
        r0 = 3;
        if (r11 != r0) goto L_0x01e1;
    L_0x01c2:
        r11 = android.os.Build.VERSION.SDK_INT;
        if (r11 < r5) goto L_0x01dc;
    L_0x01c6:
        r11 = r10.getParentActivity();
        r11 = r11.checkSelfPermission(r9);
        if (r11 == 0) goto L_0x01dc;
    L_0x01d0:
        r11 = r10.getParentActivity();
        r0 = new java.lang.String[r7];
        r0[r6] = r9;
        r11.requestPermissions(r0, r8);
        return;
    L_0x01dc:
        r11 = 0;
        r10.openMusicSelectActivity(r11);
        goto L_0x0224;
    L_0x01e1:
        r0 = 5;
        if (r11 != r0) goto L_0x0204;
    L_0x01e4:
        r11 = android.os.Build.VERSION.SDK_INT;
        if (r11 < r5) goto L_0x0200;
    L_0x01e8:
        r11 = r10.getParentActivity();
        r1 = "android.permission.READ_CONTACTS";
        r11 = r11.checkSelfPermission(r1);
        if (r11 == 0) goto L_0x0200;
    L_0x01f4:
        r11 = r10.getParentActivity();
        r2 = new java.lang.String[r7];
        r2[r6] = r1;
        r11.requestPermissions(r2, r0);
        return;
    L_0x0200:
        r10.openContactsSelectActivity();
        goto L_0x0224;
    L_0x0204:
        r0 = 9;
        if (r11 != r0) goto L_0x0224;
    L_0x0208:
        r11 = r10.currentChat;
        if (r11 == 0) goto L_0x0224;
    L_0x020c:
        r11 = org.telegram.messenger.ChatObject.canSendPolls(r11);
        if (r11 != 0) goto L_0x0213;
    L_0x0212:
        goto L_0x0224;
    L_0x0213:
        r11 = new org.telegram.ui.PollCreateActivity;
        r11.<init>(r10);
        r0 = new org.telegram.ui.-$$Lambda$ChatActivity$Nu_gkoHV0bhh_8ZPDsDjKQ3pAiM;
        r0.<init>(r10);
        r11.setDelegate(r0);
        r10.presentFragment(r11);
    L_0x0224:
        return;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.processSelectedAttach(int):void");
    }

    public /* synthetic */ void lambda$processSelectedAttach$54$ChatActivity(TL_messageMediaPoll tL_messageMediaPoll, boolean z, int i) {
        getSendMessagesHelper().sendMessage(tL_messageMediaPoll, this.dialog_id, this.replyingMessageObject, null, null, z, i);
        afterMessageSend();
    }

    public boolean dismissDialogOnPause(Dialog dialog) {
        return dialog != this.chatAttachAlert && super.dismissDialogOnPause(dialog);
    }

    private void searchLinks(CharSequence charSequence, boolean z) {
        if (this.currentEncryptedChat == null || (getMessagesController().secretWebpagePreview != 0 && AndroidUtilities.getPeerLayerVersion(this.currentEncryptedChat.layer) >= 46)) {
            if (z) {
                WebPage webPage = this.foundWebPage;
                if (webPage != null) {
                    String str = webPage.url;
                    if (str != null) {
                        char charAt;
                        int indexOf = TextUtils.indexOf(charSequence, str);
                        Object obj = 1;
                        if (indexOf == -1) {
                            String str2 = this.foundWebPage.display_url;
                            if (str2 != null) {
                                indexOf = TextUtils.indexOf(charSequence, str2);
                                if (indexOf == -1 || this.foundWebPage.display_url.length() + indexOf != charSequence.length()) {
                                    obj = null;
                                }
                                if (indexOf != -1 && r3 == null) {
                                    charAt = charSequence.charAt(this.foundWebPage.display_url.length() + indexOf);
                                    if (indexOf != -1 && (r3 != null || charAt == ' ' || charAt == ',' || charAt == '.' || charAt == '!' || charAt == '/')) {
                                        return;
                                    }
                                }
                            }
                            obj = null;
                        } else {
                            if (this.foundWebPage.url.length() + indexOf != charSequence.length()) {
                                obj = null;
                            }
                            if (obj == null) {
                                charAt = charSequence.charAt(this.foundWebPage.url.length() + indexOf);
                                return;
                            }
                        }
                        charAt = 0;
                        return;
                    }
                    this.pendingLinkSearchString = null;
                    this.foundUrls = null;
                    showFieldPanelForWebPage(false, this.foundWebPage, false);
                }
            }
            Utilities.searchQueue.postRunnable(new -$$Lambda$ChatActivity$WtMO8iEihTlMdxy-P6S8kEGjra4(this, charSequence, getMessagesController(), z));
        }
    }

    public /* synthetic */ void lambda$searchLinks$61$ChatActivity(CharSequence charSequence, MessagesController messagesController, boolean z) {
        if (this.linkSearchRequestId != 0) {
            getConnectionsManager().cancelRequest(this.linkSearchRequestId, true);
            this.linkSearchRequestId = 0;
        }
        ArrayList arrayList = null;
        CharSequence join;
        try {
            Matcher matcher = AndroidUtilities.WEB_URL.matcher(charSequence);
            while (matcher.find()) {
                if (matcher.start() <= 0 || charSequence.charAt(matcher.start() - 1) != '@') {
                    if (arrayList == null) {
                        arrayList = new ArrayList();
                    }
                    arrayList.add(charSequence.subSequence(matcher.start(), matcher.end()));
                }
            }
            if (charSequence instanceof Spannable) {
                URLSpanReplacement[] uRLSpanReplacementArr = (URLSpanReplacement[]) ((Spannable) charSequence).getSpans(0, charSequence.length(), URLSpanReplacement.class);
                if (uRLSpanReplacementArr != null && uRLSpanReplacementArr.length > 0) {
                    if (arrayList == null) {
                        arrayList = new ArrayList();
                    }
                    for (URLSpan url : uRLSpanReplacementArr) {
                        arrayList.add(url.getURL());
                    }
                }
            }
            if (!(arrayList == null || this.foundUrls == null || arrayList.size() != this.foundUrls.size())) {
                Object obj = 1;
                for (int i = 0; i < arrayList.size(); i++) {
                    if (!TextUtils.equals((CharSequence) arrayList.get(i), (CharSequence) this.foundUrls.get(i))) {
                        obj = null;
                    }
                }
                if (obj != null) {
                    return;
                }
            }
            this.foundUrls = arrayList;
            if (arrayList == null) {
                AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$WUUOWDj42M6NTmii-y6o3FDrXf4(this));
                return;
            }
            join = TextUtils.join(" ", arrayList);
            if (this.currentEncryptedChat == null || messagesController.secretWebpagePreview != 2) {
                TL_messages_getWebPagePreview tL_messages_getWebPagePreview = new TL_messages_getWebPagePreview();
                if (join instanceof String) {
                    tL_messages_getWebPagePreview.message = (String) join;
                } else {
                    tL_messages_getWebPagePreview.message = join.toString();
                }
                this.linkSearchRequestId = getConnectionsManager().sendRequest(tL_messages_getWebPagePreview, new -$$Lambda$ChatActivity$KGGjaCYdPGcFiBcdk3n8SGt3Vpg(this, tL_messages_getWebPagePreview));
                getConnectionsManager().bindRequestToGuid(this.linkSearchRequestId, this.classGuid);
                return;
            }
            AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$IJ5uGN8jvPbFg0SrYnqfey2xK_U(this, messagesController, charSequence, z));
        } catch (Exception e) {
            FileLog.e(e);
            String toLowerCase = charSequence.toString().toLowerCase();
            if (charSequence.length() < 13 || !(toLowerCase.contains("http://") || toLowerCase.contains("https://"))) {
                AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$uYfoA5kq09NijIrf3BhhbQpMAbw(this));
                return;
            }
            join = charSequence;
        }
    }

    public /* synthetic */ void lambda$null$55$ChatActivity() {
        WebPage webPage = this.foundWebPage;
        if (webPage != null) {
            showFieldPanelForWebPage(false, webPage, false);
            this.foundWebPage = null;
        }
    }

    public /* synthetic */ void lambda$null$56$ChatActivity() {
        WebPage webPage = this.foundWebPage;
        if (webPage != null) {
            showFieldPanelForWebPage(false, webPage, false);
            this.foundWebPage = null;
        }
    }

    public /* synthetic */ void lambda$null$58$ChatActivity(MessagesController messagesController, CharSequence charSequence, boolean z) {
        AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
        builder.setTitle(LocaleController.getString("AppName", NUM));
        builder.setPositiveButton(LocaleController.getString("OK", NUM), new -$$Lambda$ChatActivity$jJnwx0rI62CuYMqUmviItfb5FBQ(this, messagesController, charSequence, z));
        builder.setNegativeButton(LocaleController.getString("Cancel", NUM), null);
        builder.setMessage(LocaleController.getString("SecretLinkPreviewAlert", NUM));
        showDialog(builder.create());
        messagesController.secretWebpagePreview = 0;
        MessagesController.getGlobalMainSettings().edit().putInt("secretWebpage2", messagesController.secretWebpagePreview).commit();
    }

    public /* synthetic */ void lambda$null$57$ChatActivity(MessagesController messagesController, CharSequence charSequence, boolean z, DialogInterface dialogInterface, int i) {
        messagesController.secretWebpagePreview = 1;
        MessagesController.getGlobalMainSettings().edit().putInt("secretWebpage2", getMessagesController().secretWebpagePreview).commit();
        this.foundUrls = null;
        searchLinks(charSequence, z);
    }

    public /* synthetic */ void lambda$null$60$ChatActivity(TL_messages_getWebPagePreview tL_messages_getWebPagePreview, TLObject tLObject, TL_error tL_error) {
        AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$89SvG3nN01yMm8ub1ykixw0CjZc(this, tL_error, tLObject, tL_messages_getWebPagePreview));
    }

    public /* synthetic */ void lambda$null$59$ChatActivity(TL_error tL_error, TLObject tLObject, TL_messages_getWebPagePreview tL_messages_getWebPagePreview) {
        this.linkSearchRequestId = 0;
        if (tL_error != null) {
            return;
        }
        WebPage webPage;
        if (tLObject instanceof TL_messageMediaWebPage) {
            this.foundWebPage = ((TL_messageMediaWebPage) tLObject).webpage;
            webPage = this.foundWebPage;
            if ((webPage instanceof TL_webPage) || (webPage instanceof TL_webPagePending)) {
                if (this.foundWebPage instanceof TL_webPagePending) {
                    this.pendingLinkSearchString = tL_messages_getWebPagePreview.message;
                }
                if (this.currentEncryptedChat != null) {
                    webPage = this.foundWebPage;
                    if (webPage instanceof TL_webPagePending) {
                        webPage.url = tL_messages_getWebPagePreview.message;
                    }
                }
                showFieldPanelForWebPage(true, this.foundWebPage, false);
                return;
            } else if (webPage != null) {
                showFieldPanelForWebPage(false, webPage, false);
                this.foundWebPage = null;
                return;
            } else {
                return;
            }
        }
        webPage = this.foundWebPage;
        if (webPage != null) {
            showFieldPanelForWebPage(false, webPage, false);
            this.foundWebPage = null;
        }
    }

    private void forwardMessages(ArrayList<MessageObject> arrayList, boolean z, boolean z2, int i) {
        if (arrayList != null && !arrayList.isEmpty()) {
            if (z) {
                Iterator it = arrayList.iterator();
                while (it.hasNext()) {
                    getSendMessagesHelper().processForwardFromMyName((MessageObject) it.next(), this.dialog_id);
                }
                return;
            }
            AlertsCreator.showSendMediaAlert(getSendMessagesHelper().sendMessage(arrayList, this.dialog_id, z2, i), this);
        }
    }

    private void checkBotKeyboard() {
        if (this.chatActivityEnterView != null) {
            MessageObject messageObject = this.botButtons;
            if (messageObject != null && !this.userBlocked) {
                if (messageObject.messageOwner.reply_markup instanceof TL_replyKeyboardForceReply) {
                    SharedPreferences mainSettings = MessagesController.getMainSettings(this.currentAccount);
                    StringBuilder stringBuilder = new StringBuilder();
                    stringBuilder.append("answered_");
                    stringBuilder.append(this.dialog_id);
                    if (mainSettings.getInt(stringBuilder.toString(), 0) == this.botButtons.getId()) {
                        return;
                    }
                    if (this.replyingMessageObject == null || this.chatActivityEnterView.getFieldText() == null) {
                        messageObject = this.botButtons;
                        this.botReplyButtons = messageObject;
                        this.chatActivityEnterView.setButtons(messageObject);
                        showFieldPanelForReply(this.botButtons);
                        return;
                    }
                    return;
                }
                messageObject = this.replyingMessageObject;
                if (messageObject != null && this.botReplyButtons == messageObject) {
                    this.botReplyButtons = null;
                    hideFieldPanel(true);
                }
                this.chatActivityEnterView.setButtons(this.botButtons);
            }
        }
    }

    public void hideFieldPanel(boolean z) {
        showFieldPanel(false, null, null, null, null, true, 0, false, z);
    }

    public void hideFieldPanel(boolean z, int i, boolean z2) {
        showFieldPanel(false, null, null, null, null, z, i, false, z2);
    }

    public void showFieldPanelForWebPage(boolean z, WebPage webPage, boolean z2) {
        showFieldPanel(z, null, null, null, webPage, true, 0, z2, true);
    }

    public void showFieldPanelForForward(boolean z, ArrayList<MessageObject> arrayList) {
        showFieldPanel(z, null, null, arrayList, null, true, 0, false, true);
    }

    public void showFieldPanelForReply(MessageObject messageObject) {
        showFieldPanel(true, messageObject, null, null, null, true, 0, false, true);
    }

    public void showFieldPanelForEdit(boolean z, MessageObject messageObject) {
        showFieldPanel(z, null, messageObject, null, null, true, 0, false, true);
    }

    public void showFieldPanel(boolean z, MessageObject messageObject, MessageObject messageObject2, ArrayList<MessageObject> arrayList, WebPage webPage, boolean z2, int i, boolean z3, boolean z4) {
        MessageObject messageObject3 = messageObject;
        MessageObject messageObject4 = messageObject2;
        WebPage webPage2 = webPage;
        int i2 = i;
        if (this.chatActivityEnterView != null) {
            int i3;
            if (z) {
                if (messageObject3 != null || arrayList != null || messageObject4 != null || webPage2 != null) {
                    ArrayList arrayList2;
                    boolean z5;
                    PhotoSize closestPhotoSizeWithSize;
                    PhotoSize closestPhotoSizeWithSize2;
                    TLObject tLObject;
                    int i4;
                    hideHints();
                    if (this.searchItem != null && this.actionBar.isSearchFieldVisible()) {
                        this.actionBar.closeSearchField(false);
                        this.chatActivityEnterView.setFieldFocused();
                        AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$-yFzhx6aJN12XMG1AcQStD6x2mA(this), 100);
                    }
                    if (messageObject3 == null || messageObject.getDialogId() == this.dialog_id) {
                        arrayList2 = arrayList;
                        z5 = false;
                    } else {
                        arrayList2 = new ArrayList();
                        arrayList2.add(messageObject3);
                        messageObject3 = null;
                        z5 = true;
                    }
                    CharSequence charSequence;
                    String charSequence2;
                    SimpleTextView simpleTextView;
                    MessageMedia messageMedia;
                    if (messageObject4 != null) {
                        this.forwardingMessages = null;
                        this.replyingMessageObject = null;
                        this.editingMessageObject = messageObject4;
                        this.chatActivityEnterView.setReplyingMessageObject(null);
                        this.chatActivityEnterView.setEditingMessageObject(messageObject4, messageObject2.isMediaEmpty() ^ 1);
                        if (this.foundWebPage == null) {
                            this.chatActivityEnterView.setForceShowSendButton(false, false);
                            this.replyIconImageView.setImageResource(NUM);
                            this.replyIconImageView.setContentDescription(LocaleController.getString("AccDescrEditing", NUM));
                            this.replyCloseImageView.setContentDescription(LocaleController.getString("AccDescrCancelEdit", NUM));
                            if (messageObject2.isMediaEmpty()) {
                                this.replyNameTextView.setText(LocaleController.getString("EditMessage", NUM));
                            } else {
                                this.replyNameTextView.setText(LocaleController.getString("EditCaption", NUM));
                            }
                            if (messageObject2.canEditMedia()) {
                                this.replyObjectTextView.setText(LocaleController.getString("EditMessageMedia", NUM));
                            } else {
                                charSequence = messageObject4.messageText;
                                if (charSequence != null) {
                                    charSequence2 = charSequence.toString();
                                    if (charSequence2.length() > 150) {
                                        charSequence2 = charSequence2.substring(0, 150);
                                    }
                                    charSequence2 = charSequence2.replace(10, ' ');
                                    simpleTextView = this.replyObjectTextView;
                                    simpleTextView.setText(Emoji.replaceEmoji(charSequence2, simpleTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0f), false));
                                }
                            }
                        } else {
                            return;
                        }
                    } else if (messageObject3 != null) {
                        this.forwardingMessages = null;
                        this.editingMessageObject = null;
                        this.replyingMessageObject = messageObject3;
                        this.chatActivityEnterView.setReplyingMessageObject(messageObject3);
                        this.chatActivityEnterView.setEditingMessageObject(null, false);
                        if (this.foundWebPage == null) {
                            this.chatActivityEnterView.setForceShowSendButton(false, false);
                            if (messageObject3.isFromUser()) {
                                User user = getMessagesController().getUser(Integer.valueOf(messageObject3.messageOwner.from_id));
                                if (user != null) {
                                    charSequence = UserObject.getUserName(user);
                                } else {
                                    return;
                                }
                            }
                            Chat chat;
                            if (ChatObject.isChannel(this.currentChat) && this.currentChat.megagroup && messageObject3.isForwardedChannelPost()) {
                                chat = getMessagesController().getChat(Integer.valueOf(messageObject3.messageOwner.fwd_from.channel_id));
                            } else {
                                chat = getMessagesController().getChat(Integer.valueOf(messageObject3.messageOwner.to_id.channel_id));
                            }
                            if (chat != null) {
                                charSequence = chat.title;
                            } else {
                                return;
                            }
                            this.replyIconImageView.setImageResource(NUM);
                            this.replyNameTextView.setText(charSequence);
                            this.replyIconImageView.setContentDescription(LocaleController.getString("AccDescrReplying", NUM));
                            this.replyCloseImageView.setContentDescription(LocaleController.getString("AccDescrCancelReply", NUM));
                            messageMedia = messageObject3.messageOwner.media;
                            if (messageMedia instanceof TL_messageMediaGame) {
                                simpleTextView = this.replyObjectTextView;
                                simpleTextView.setText(Emoji.replaceEmoji(messageMedia.game.title, simpleTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0f), false));
                            } else {
                                charSequence = messageObject3.messageText;
                                if (charSequence != null) {
                                    charSequence2 = charSequence.toString();
                                    if (charSequence2.length() > 150) {
                                        charSequence2 = charSequence2.substring(0, 150);
                                    }
                                    charSequence2 = charSequence2.replace(10, ' ');
                                    simpleTextView = this.replyObjectTextView;
                                    simpleTextView.setText(Emoji.replaceEmoji(charSequence2, simpleTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0f), false));
                                }
                            }
                        } else {
                            return;
                        }
                    } else if (arrayList2 == null) {
                        this.replyIconImageView.setImageResource(NUM);
                        if (webPage2 instanceof TL_webPagePending) {
                            this.replyNameTextView.setText(LocaleController.getString("GettingLinkInfo", NUM));
                            this.replyObjectTextView.setText(this.pendingLinkSearchString);
                        } else {
                            String str = webPage2.site_name;
                            if (str != null) {
                                this.replyNameTextView.setText(str);
                            } else {
                                str = webPage2.title;
                                if (str != null) {
                                    this.replyNameTextView.setText(str);
                                } else {
                                    this.replyNameTextView.setText(LocaleController.getString("LinkPreview", NUM));
                                }
                            }
                            str = webPage2.title;
                            if (str != null) {
                                this.replyObjectTextView.setText(str);
                            } else {
                                str = webPage2.description;
                                if (str != null) {
                                    this.replyObjectTextView.setText(str);
                                } else {
                                    str = webPage2.author;
                                    if (str != null) {
                                        this.replyObjectTextView.setText(str);
                                    } else {
                                        this.replyObjectTextView.setText(webPage2.display_url);
                                    }
                                }
                            }
                            this.chatActivityEnterView.setWebPage(webPage2, true);
                        }
                    } else if (!arrayList2.isEmpty()) {
                        this.replyingMessageObject = null;
                        this.editingMessageObject = null;
                        this.chatActivityEnterView.setReplyingMessageObject(null);
                        this.chatActivityEnterView.setEditingMessageObject(null, false);
                        this.forwardingMessages = arrayList2;
                        if (this.foundWebPage == null) {
                            int i5;
                            this.chatActivityEnterView.setForceShowSendButton(true, false);
                            ArrayList arrayList3 = new ArrayList();
                            this.replyIconImageView.setImageResource(NUM);
                            this.replyIconImageView.setContentDescription(LocaleController.getString("AccDescrForwarding", NUM));
                            this.replyCloseImageView.setContentDescription(LocaleController.getString("AccDescrCancelForward", NUM));
                            MessageObject messageObject5 = (MessageObject) arrayList2.get(0);
                            if (messageObject5.isFromUser()) {
                                arrayList3.add(Integer.valueOf(messageObject5.messageOwner.from_id));
                            } else {
                                Chat chat2 = getMessagesController().getChat(Integer.valueOf(messageObject5.messageOwner.to_id.channel_id));
                                if (ChatObject.isChannel(chat2) && chat2.megagroup && messageObject5.isForwardedChannelPost()) {
                                    arrayList3.add(Integer.valueOf(-messageObject5.messageOwner.fwd_from.channel_id));
                                } else {
                                    arrayList3.add(Integer.valueOf(-messageObject5.messageOwner.to_id.channel_id));
                                }
                            }
                            int i6 = messageObject5.isAnimatedEmoji() ? 0 : messageObject5.type;
                            for (int i7 = 1; i7 < arrayList2.size(); i7++) {
                                int i8;
                                MessageObject messageObject6 = (MessageObject) arrayList2.get(i7);
                                if (messageObject6.isFromUser()) {
                                    i8 = messageObject6.messageOwner.from_id;
                                } else {
                                    Chat chat3 = getMessagesController().getChat(Integer.valueOf(messageObject6.messageOwner.to_id.channel_id));
                                    if (ChatObject.isChannel(chat3) && chat3.megagroup && messageObject6.isForwardedChannelPost()) {
                                        i5 = messageObject6.messageOwner.fwd_from.channel_id;
                                    } else {
                                        i5 = messageObject6.messageOwner.to_id.channel_id;
                                    }
                                    i8 = -i5;
                                }
                                if (!arrayList3.contains(Integer.valueOf(i8))) {
                                    arrayList3.add(Integer.valueOf(i8));
                                }
                                if (((MessageObject) arrayList2.get(i7)).type != i6) {
                                    i6 = -1;
                                }
                            }
                            StringBuilder stringBuilder = new StringBuilder();
                            for (i5 = 0; i5 < arrayList3.size(); i5++) {
                                User user2;
                                Chat chat4;
                                Integer num = (Integer) arrayList3.get(i5);
                                if (num.intValue() > 0) {
                                    user2 = getMessagesController().getUser(num);
                                    chat4 = null;
                                } else {
                                    chat4 = getMessagesController().getChat(Integer.valueOf(-num.intValue()));
                                    user2 = null;
                                }
                                if (user2 != null || chat4 != null) {
                                    if (arrayList3.size() != 1) {
                                        String str2 = " ";
                                        if (arrayList3.size() != 2 && stringBuilder.length() != 0) {
                                            stringBuilder.append(str2);
                                            stringBuilder.append(LocaleController.formatPluralString("AndOther", arrayList3.size() - 1));
                                            break;
                                        }
                                        if (stringBuilder.length() > 0) {
                                            stringBuilder.append(", ");
                                        }
                                        if (user2 == null) {
                                            stringBuilder.append(chat4.title);
                                        } else if (!TextUtils.isEmpty(user2.first_name)) {
                                            stringBuilder.append(user2.first_name);
                                        } else if (TextUtils.isEmpty(user2.last_name)) {
                                            stringBuilder.append(str2);
                                        } else {
                                            stringBuilder.append(user2.last_name);
                                        }
                                    } else if (user2 != null) {
                                        stringBuilder.append(UserObject.getUserName(user2));
                                    } else {
                                        stringBuilder.append(chat4.title);
                                    }
                                }
                            }
                            this.replyNameTextView.setText(stringBuilder);
                            if (i6 == -1 || i6 == 0 || i6 == 10 || i6 == 11) {
                                if (arrayList2.size() != 1 || ((MessageObject) arrayList2.get(0)).messageText == null) {
                                    this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedMessageCount", arrayList2.size()));
                                } else {
                                    messageObject5 = (MessageObject) arrayList2.get(0);
                                    messageMedia = messageObject5.messageOwner.media;
                                    SimpleTextView simpleTextView2;
                                    if (messageMedia instanceof TL_messageMediaGame) {
                                        simpleTextView2 = this.replyObjectTextView;
                                        simpleTextView2.setText(Emoji.replaceEmoji(messageMedia.game.title, simpleTextView2.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0f), false));
                                    } else {
                                        charSequence2 = messageObject5.messageText.toString();
                                        if (charSequence2.length() > 150) {
                                            charSequence2 = charSequence2.substring(0, 150);
                                        }
                                        charSequence2 = charSequence2.replace(10, ' ');
                                        simpleTextView2 = this.replyObjectTextView;
                                        simpleTextView2.setText(Emoji.replaceEmoji(charSequence2, simpleTextView2.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0f), false));
                                    }
                                }
                            } else if (i6 == 1) {
                                this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedPhoto", arrayList2.size()));
                                if (arrayList2.size() == 1) {
                                    messageObject3 = (MessageObject) arrayList2.get(0);
                                }
                            } else if (i6 == 4) {
                                this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedLocation", arrayList2.size()));
                            } else if (i6 == 3) {
                                this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedVideo", arrayList2.size()));
                                if (arrayList2.size() == 1) {
                                    messageObject3 = (MessageObject) arrayList2.get(0);
                                }
                            } else if (i6 == 12) {
                                this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedContact", arrayList2.size()));
                            } else if (i6 == 2) {
                                this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedAudio", arrayList2.size()));
                            } else if (i6 == 5) {
                                this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedRound", arrayList2.size()));
                            } else if (i6 == 14) {
                                this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedMusic", arrayList2.size()));
                            } else if (i6 == 13 || i6 == 15) {
                                this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedSticker", arrayList2.size()));
                            } else if (i6 == 17) {
                                this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedPoll", arrayList2.size()));
                            } else if (i6 == 8 || i6 == 9) {
                                if (arrayList2.size() != 1) {
                                    this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedFile", arrayList2.size()));
                                } else if (i6 == 8) {
                                    this.replyObjectTextView.setText(LocaleController.getString("AttachGif", NUM));
                                } else {
                                    String documentFileName = FileLoader.getDocumentFileName(((MessageObject) arrayList2.get(0)).getDocument());
                                    if (documentFileName.length() != 0) {
                                        this.replyObjectTextView.setText(documentFileName);
                                    }
                                    messageObject3 = (MessageObject) arrayList2.get(0);
                                }
                            }
                        } else {
                            return;
                        }
                    } else {
                        return;
                    }
                    if (messageObject3 == null) {
                        messageObject3 = messageObject4 != null ? messageObject4 : null;
                    }
                    FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) this.replyNameTextView.getLayoutParams();
                    FrameLayout.LayoutParams layoutParams2 = (FrameLayout.LayoutParams) this.replyObjectTextView.getLayoutParams();
                    if (messageObject3 != null) {
                        closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(messageObject3.photoThumbs2, 320);
                        closestPhotoSizeWithSize2 = FileLoader.getClosestPhotoSizeWithSize(messageObject3.photoThumbs2, AndroidUtilities.dp(40.0f));
                        tLObject = messageObject3.photoThumbsObject2;
                        if (closestPhotoSizeWithSize == null) {
                            int i9;
                            if (messageObject3.mediaExists) {
                                closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(messageObject3.photoThumbs, AndroidUtilities.getPhotoSize());
                                i9 = closestPhotoSizeWithSize != null ? closestPhotoSizeWithSize.size : 0;
                                i3 = 0;
                            } else {
                                closestPhotoSizeWithSize = FileLoader.getClosestPhotoSizeWithSize(messageObject3.photoThumbs, 320);
                                i3 = 1;
                                i9 = 0;
                            }
                            PhotoSize closestPhotoSizeWithSize3 = FileLoader.getClosestPhotoSizeWithSize(messageObject3.photoThumbs, AndroidUtilities.dp(40.0f));
                            tLObject = messageObject3.photoThumbsObject;
                            PhotoSize photoSize = closestPhotoSizeWithSize3;
                            i4 = i9;
                            closestPhotoSizeWithSize2 = photoSize;
                        } else {
                            i3 = 1;
                            i4 = 0;
                        }
                    } else {
                        closestPhotoSizeWithSize = null;
                        i3 = 1;
                        closestPhotoSizeWithSize2 = null;
                        i4 = 0;
                        tLObject = null;
                    }
                    if (closestPhotoSizeWithSize == closestPhotoSizeWithSize2) {
                        closestPhotoSizeWithSize2 = null;
                    }
                    int dp;
                    if (closestPhotoSizeWithSize == null || (closestPhotoSizeWithSize instanceof TL_photoSizeEmpty) || (closestPhotoSizeWithSize.location instanceof TL_fileLocationUnavailable) || messageObject3.isAnyKindOfSticker() || (messageObject3 != null && messageObject3.isSecretMedia())) {
                        this.replyImageView.setImageBitmap(null);
                        this.replyImageLocation = null;
                        this.replyImageLocationObject = null;
                        this.replyImageView.setVisibility(4);
                        dp = AndroidUtilities.dp(52.0f);
                        layoutParams2.leftMargin = dp;
                        layoutParams.leftMargin = dp;
                    } else {
                        if (messageObject3 == null || !messageObject3.isRoundVideo()) {
                            this.replyImageView.setRoundRadius(0);
                        } else {
                            this.replyImageView.setRoundRadius(AndroidUtilities.dp(17.0f));
                        }
                        this.replyImageSize = i4;
                        this.replyImageCacheType = i3;
                        this.replyImageLocation = closestPhotoSizeWithSize;
                        this.replyImageThumbLocation = closestPhotoSizeWithSize2;
                        this.replyImageLocationObject = tLObject;
                        this.replyImageView.setImage(ImageLocation.getForObject(this.replyImageLocation, tLObject), "50_50", ImageLocation.getForObject(closestPhotoSizeWithSize2, tLObject), "50_50_b", null, i4, i3, messageObject3);
                        this.replyImageView.setVisibility(0);
                        dp = AndroidUtilities.dp(96.0f);
                        layoutParams2.leftMargin = dp;
                        layoutParams.leftMargin = dp;
                    }
                    this.replyNameTextView.setLayoutParams(layoutParams);
                    this.replyObjectTextView.setLayoutParams(layoutParams2);
                    this.chatActivityEnterView.showTopView(true, z5);
                }
            } else if (this.replyingMessageObject != null || this.forwardingMessages != null || this.foundWebPage != null || this.editingMessageObject != null) {
                boolean z6;
                messageObject3 = this.replyingMessageObject;
                if (messageObject3 != null && (messageObject3.messageOwner.reply_markup instanceof TL_replyKeyboardForceReply)) {
                    Editor edit = MessagesController.getMainSettings(this.currentAccount).edit();
                    StringBuilder stringBuilder2 = new StringBuilder();
                    stringBuilder2.append("answered_");
                    stringBuilder2.append(this.dialog_id);
                    edit.putInt(stringBuilder2.toString(), this.replyingMessageObject.getId()).commit();
                }
                if (this.foundWebPage != null) {
                    this.foundWebPage = null;
                    this.chatActivityEnterView.setWebPage(null, z3 ^ 1);
                    if (!(webPage2 == null || (this.replyingMessageObject == null && this.forwardingMessages == null && this.editingMessageObject == null))) {
                        showFieldPanel(true, this.replyingMessageObject, this.editingMessageObject, this.forwardingMessages, null, z2, i, false, true);
                        return;
                    }
                }
                ArrayList arrayList4 = this.forwardingMessages;
                if (arrayList4 != null) {
                    boolean z7;
                    this.forwardingMessages = null;
                    if (i2 == 0 || i2 == NUM) {
                        z7 = z2;
                        z6 = false;
                        i3 = 0;
                    } else {
                        i3 = i2 + 1;
                        z7 = z2;
                        z6 = false;
                    }
                    forwardMessages(arrayList4, z6, z7, i3);
                } else {
                    z6 = false;
                }
                this.chatActivityEnterView.setForceShowSendButton(z6, z6);
                this.chatActivityEnterView.hideTopView(z4);
                this.chatActivityEnterView.setReplyingMessageObject(null);
                this.chatActivityEnterView.setEditingMessageObject(null, z6);
                this.topViewWasVisible = z6;
                this.replyingMessageObject = null;
                this.editingMessageObject = null;
                this.replyImageLocation = null;
                this.replyImageLocationObject = null;
            }
        }
    }

    public /* synthetic */ void lambda$showFieldPanel$62$ChatActivity() {
        ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
        if (chatActivityEnterView != null) {
            chatActivityEnterView.openKeyboard();
        }
    }

    private void moveScrollToLastMessage() {
        if (this.chatListView != null && !this.messages.isEmpty()) {
            this.chatLayoutManager.scrollToPositionWithOffset(0, 0);
        }
    }

    private boolean sendSecretMessageRead(MessageObject messageObject) {
        MessageObject messageObject2 = messageObject;
        if (!(messageObject2 == null || messageObject.isOut() || !messageObject.isSecretMedia())) {
            Message message = messageObject2.messageOwner;
            if (message.destroyTime == 0 && message.ttl > 0) {
                if (this.currentEncryptedChat != null) {
                    MessagesController messagesController = getMessagesController();
                    long j = this.dialog_id;
                    Message message2 = messageObject2.messageOwner;
                    messagesController.markMessageAsRead(j, message2.random_id, message2.ttl);
                } else {
                    getMessagesController().markMessageAsRead(messageObject.getId(), ChatObject.isChannel(this.currentChat) ? this.currentChat.id : 0, null, messageObject2.messageOwner.ttl, 0);
                }
                Message message3 = messageObject2.messageOwner;
                message3.destroyTime = message3.ttl + getConnectionsManager().getCurrentTime();
                return true;
            }
        }
        return false;
    }

    private void clearChatData() {
        this.messages.clear();
        this.messagesByDays.clear();
        this.waitingForLoad.clear();
        this.groupedMessagesMap.clear();
        this.progressView.setVisibility(this.chatAdapter.botInfoRow == -1 ? 0 : 4);
        this.chatListView.setEmptyView(null);
        for (int i = 0; i < 2; i++) {
            this.messagesDict[i].clear();
            if (this.currentEncryptedChat == null) {
                this.maxMessageId[i] = Integer.MAX_VALUE;
                this.minMessageId[i] = Integer.MIN_VALUE;
            } else {
                this.maxMessageId[i] = Integer.MIN_VALUE;
                this.minMessageId[i] = Integer.MAX_VALUE;
            }
            this.maxDate[i] = Integer.MIN_VALUE;
            this.minDate[i] = 0;
            this.endReached[i] = false;
            this.cacheEndReached[i] = false;
            this.forwardEndReached[i] = true;
        }
        this.first = true;
        this.firstLoading = true;
        this.loading = true;
        this.loadingForward = false;
        this.waitingForReplyMessageLoad = false;
        this.startLoadFromMessageId = 0;
        this.showScrollToMessageError = false;
        this.last_message_id = 0;
        this.unreadMessageObject = null;
        this.createUnreadMessageAfterId = 0;
        this.createUnreadMessageAfterIdLoading = false;
        this.needSelectFromMessageId = false;
        this.chatAdapter.notifyDataSetChanged();
    }

    private void scrollToLastMessage(boolean z) {
        if (!this.chatListView.animationRunning) {
            this.chatScrollHelper.setScrollDirection(0);
            if (!this.forwardEndReached[0] || this.first_unread_id != 0 || this.startLoadFromMessageId != 0) {
                if (z) {
                    if (this.progressDialog == null) {
                        this.progressDialog = new AlertDialog(getParentActivity(), 3);
                    }
                    this.progressDialog.setOnCancelListener(new -$$Lambda$ChatActivity$lrBQRENtWt4PvJ8BZqCl6X9zocg(this));
                    this.progressDialog.showDelayed(400);
                    this.postponedScrollToLastMessageQueryIndex = this.lastLoadIndex;
                    this.postponedScrollMessageId = 0;
                    this.postponedScrollIsCanceled = false;
                    this.waitingForLoad.clear();
                } else {
                    clearChatData();
                }
                this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
                MessagesController messagesController = getMessagesController();
                long j = this.dialog_id;
                int i = this.classGuid;
                boolean isChannel = ChatObject.isChannel(this.currentChat);
                boolean z2 = this.inScheduleMode;
                int i2 = this.lastLoadIndex;
                this.lastLoadIndex = i2 + 1;
                messagesController.loadMessages(j, 30, 0, 0, true, 0, i, 0, 0, isChannel, z2, i2);
            } else if (z && this.chatLayoutManager.findFirstCompletelyVisibleItemPosition() == 0) {
                this.canShowPagedownButton = false;
                updatePagedownButtonVisibility(true);
                removeSelectedMessageHighlight();
                updateVisibleRows();
            } else {
                int measuredHeight = (int) (((float) this.chatListView.getMeasuredHeight()) * 1.5f);
                int findFirstVisibleItemPosition = this.chatLayoutManager.findFirstVisibleItemPosition() - 1;
                this.chatAdapter.updateRows();
                int i3 = findFirstVisibleItemPosition;
                findFirstVisibleItemPosition = 0;
                while (findFirstVisibleItemPosition < measuredHeight) {
                    ChatActivityAdapter chatActivityAdapter = this.chatAdapter;
                    if (i3 < chatActivityAdapter.messagesStartRow || i3 > chatActivityAdapter.messagesEndRow) {
                        break;
                    }
                    findFirstVisibleItemPosition += ((MessageObject) this.messages.get(i3 - this.chatAdapter.messagesStartRow)).getApproximateHeight();
                    i3--;
                }
                if (findFirstVisibleItemPosition > measuredHeight) {
                    this.chatScrollHelper.scrollToPosition(0, 0, true, true);
                } else {
                    MessageObject messageObject = this.messages.size() > 0 ? (MessageObject) this.messages.get(0) : null;
                    if (messageObject == null || messageObject.getApproximateHeight() <= this.chatListView.getMeasuredHeight() / 2) {
                        this.chatListView.smoothScrollToPosition(0);
                    } else {
                        this.chatScrollHelper.scrollToPosition(0, 0, true, true);
                    }
                }
            }
        }
    }

    public /* synthetic */ void lambda$scrollToLastMessage$63$ChatActivity(DialogInterface dialogInterface) {
        this.postponedScrollIsCanceled = true;
    }

    public void updateTextureViewPosition(boolean z) {
        if (this.fragmentView != null && !this.paused) {
            Object obj;
            int childCount = this.chatListView.getChildCount();
            for (int i = 0; i < childCount; i++) {
                View childAt = this.chatListView.getChildAt(i);
                if (childAt instanceof ChatMessageCell) {
                    ChatMessageCell chatMessageCell = (ChatMessageCell) childAt;
                    MessageObject messageObject = chatMessageCell.getMessageObject();
                    if (this.videoPlayerContainer != null && ((messageObject.isRoundVideo() || messageObject.isVideo()) && MediaController.getInstance().isPlayingMessage(messageObject))) {
                        ImageReceiver photoImage = chatMessageCell.getPhotoImage();
                        this.videoPlayerContainer.setTranslationX(((float) photoImage.getImageX()) + chatMessageCell.getX());
                        this.videoPlayerContainer.setTranslationY(((((((float) this.fragmentView.getPaddingTop()) + chatMessageCell.getY()) + ((float) photoImage.getImageY())) - ((float) this.chatListViewClipTop)) + this.chatListView.getTranslationY()) + ((float) (this.inPreviewMode ? AndroidUtilities.statusBarHeight : 0)));
                        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) this.videoPlayerContainer.getLayoutParams();
                        if (messageObject.isRoundVideo()) {
                            this.videoPlayerContainer.setTag(NUM, null);
                            if (!(layoutParams.width == AndroidUtilities.roundMessageSize && layoutParams.height == AndroidUtilities.roundMessageSize)) {
                                childCount = AndroidUtilities.roundMessageSize;
                                layoutParams.height = childCount;
                                layoutParams.width = childCount;
                                this.aspectRatioFrameLayout.setResizeMode(0);
                                this.videoPlayerContainer.setLayoutParams(layoutParams);
                            }
                            float f = ((float) (AndroidUtilities.roundMessageSize + (AndroidUtilities.roundMessageInset * 2))) / ((float) AndroidUtilities.roundMessageSize);
                            this.videoTextureView.setScaleX(f);
                            this.videoTextureView.setScaleY(f);
                        } else {
                            this.videoPlayerContainer.setTag(NUM, Integer.valueOf(1));
                            if (!(layoutParams.width == photoImage.getImageWidth() && layoutParams.height == photoImage.getImageHeight())) {
                                this.aspectRatioFrameLayout.setResizeMode(3);
                                layoutParams.width = photoImage.getImageWidth();
                                layoutParams.height = photoImage.getImageHeight();
                                this.videoPlayerContainer.setLayoutParams(layoutParams);
                            }
                            this.videoTextureView.setScaleX(1.0f);
                            this.videoTextureView.setScaleY(1.0f);
                        }
                        this.fragmentView.invalidate();
                        this.videoPlayerContainer.invalidate();
                        obj = 1;
                        if (z && this.videoPlayerContainer != null) {
                            MessageObject playingMessageObject = MediaController.getInstance().getPlayingMessageObject();
                            if (playingMessageObject != null && playingMessageObject.eventId == 0) {
                                if (obj != null) {
                                    MediaController.getInstance().setCurrentVideoVisible(true);
                                    if (playingMessageObject.isRoundVideo() || this.scrollToVideo) {
                                        scrollToMessageId(playingMessageObject.getId(), 0, false, 0, true);
                                        return;
                                    } else {
                                        this.chatListView.invalidate();
                                        return;
                                    }
                                } else if (this.checkTextureViewPosition && playingMessageObject.isVideo()) {
                                    MediaController.getInstance().cleanupPlayer(true, true);
                                    return;
                                } else {
                                    this.videoPlayerContainer.setTranslationY((float) ((-AndroidUtilities.roundMessageSize) - 100));
                                    this.fragmentView.invalidate();
                                    if (playingMessageObject == null) {
                                        return;
                                    }
                                    if (!playingMessageObject.isRoundVideo() && !playingMessageObject.isVideo()) {
                                        return;
                                    }
                                    if (this.checkTextureViewPosition || PipRoundVideoView.getInstance() != null) {
                                        MediaController.getInstance().setCurrentVideoVisible(false);
                                        return;
                                    } else {
                                        scrollToMessageId(playingMessageObject.getId(), 0, false, 0, true);
                                        return;
                                    }
                                }
                            }
                            return;
                        }
                    }
                }
            }
            obj = null;
            if (z) {
            }
        }
    }

    private void updateMessagesVisiblePart(boolean z) {
        RecyclerListView recyclerListView = this.chatListView;
        if (recyclerListView != null) {
            int i;
            View view;
            View view2;
            View view3;
            Object obj;
            MessageObject messageObject;
            MessageObject messageObject2;
            View view4;
            int childCount = recyclerListView.getChildCount();
            int measuredHeight = this.chatListView.getMeasuredHeight();
            Integer num = (Integer) getMessagesController().dialogs_read_inbox_max.get(Long.valueOf(this.dialog_id));
            if (num == null) {
                num = Integer.valueOf(0);
            }
            EncryptedChat encryptedChat = this.currentEncryptedChat;
            this.pollsToCheck.clear();
            int i2 = Integer.MIN_VALUE;
            int i3 = Integer.MAX_VALUE;
            int i4 = 0;
            Object obj2 = null;
            View view5 = null;
            View view6 = null;
            View view7 = null;
            int i5 = Integer.MAX_VALUE;
            int i6 = Integer.MAX_VALUE;
            int i7 = Integer.MIN_VALUE;
            while (i4 < childCount) {
                int i8;
                View childAt = this.chatListView.getChildAt(i4);
                boolean z2 = childAt instanceof ChatMessageCell;
                if (z2) {
                    int i9;
                    Object obj3;
                    i = childCount;
                    ChatMessageCell chatMessageCell = (ChatMessageCell) childAt;
                    view = view6;
                    int y = (int) chatMessageCell.getY();
                    chatMessageCell.getBottom();
                    if (y >= 0) {
                        view2 = view5;
                        view3 = view7;
                        i9 = 0;
                    } else {
                        view3 = view7;
                        i9 = -y;
                        view2 = view5;
                    }
                    int measuredHeight2 = chatMessageCell.getMeasuredHeight();
                    if (measuredHeight2 > measuredHeight) {
                        measuredHeight2 = i9 + measuredHeight;
                    }
                    i8 = measuredHeight;
                    obj = obj2;
                    chatMessageCell.setVisiblePart(i9, measuredHeight2 - i9, (this.contentView.getHeightWithKeyboard() - AndroidUtilities.dp(48.0f)) - this.chatListView.getTop());
                    messageObject = chatMessageCell.getMessageObject();
                    if (this.videoPlayerContainer != null) {
                        obj2 = (messageObject.isVideo() || messageObject.isRoundVideo()) ? 1 : null;
                        if (obj2 != null && MediaController.getInstance().isPlayingMessage(messageObject)) {
                            ImageReceiver photoImage = chatMessageCell.getPhotoImage();
                            if (obj2 == null || photoImage.getImageY2() + y >= 0) {
                                this.videoPlayerContainer.setTranslationX(((float) photoImage.getImageX()) + chatMessageCell.getX());
                                this.videoPlayerContainer.setTranslationY((((float) (((this.fragmentView.getPaddingTop() + y) + photoImage.getImageY()) - this.chatListViewClipTop)) + this.chatListView.getTranslationY()) + ((float) (this.inPreviewMode ? AndroidUtilities.statusBarHeight : 0)));
                                this.fragmentView.invalidate();
                                this.videoPlayerContainer.invalidate();
                                obj3 = 1;
                                messageObject2 = messageObject;
                                obj2 = obj3;
                            } else {
                                obj3 = null;
                                messageObject2 = messageObject;
                                obj2 = obj3;
                            }
                        }
                    }
                    obj3 = obj;
                    messageObject2 = messageObject;
                    obj2 = obj3;
                } else {
                    i = childCount;
                    i8 = measuredHeight;
                    obj = obj2;
                    view2 = view5;
                    view = view6;
                    view3 = view7;
                    if (childAt instanceof ChatActionCell) {
                        messageObject2 = ((ChatActionCell) childAt).getMessageObject();
                        obj2 = obj;
                    } else {
                        obj2 = obj;
                        messageObject2 = null;
                    }
                }
                if (!(this.inScheduleMode || messageObject2 == null)) {
                    if ((!messageObject2.isOut() && messageObject2.isUnread()) || (messageObject2.messageOwner.from_scheduled && messageObject2.getId() > num.intValue())) {
                        measuredHeight = messageObject2.getId();
                        if (measuredHeight > 0) {
                            i7 = Math.max(i7, messageObject2.getId());
                        }
                        if (measuredHeight < 0) {
                            i3 = Math.min(i3, messageObject2.getId());
                        }
                        i2 = Math.max(i2, messageObject2.messageOwner.date);
                    }
                    if (messageObject2.type == 17) {
                        this.pollsToCheck.add(messageObject2);
                    }
                }
                if (childAt.getBottom() > (this.chatListView.getPaddingTop() + AndroidUtilities.dp(1.0f)) + this.chatListViewClipTop) {
                    measuredHeight = childAt.getBottom();
                    if (measuredHeight < i5) {
                        view5 = (z2 || (childAt instanceof ChatActionCell)) ? childAt : view2;
                        i5 = measuredHeight;
                        view3 = childAt;
                        view2 = view5;
                    }
                    if ((childAt instanceof ChatActionCell) && messageObject2.isDateObject) {
                        if (childAt.getAlpha() != 1.0f) {
                            childAt.setAlpha(1.0f);
                        }
                        if (measuredHeight < i6) {
                            i6 = measuredHeight;
                            view6 = childAt;
                            view7 = view3;
                            view5 = view2;
                            i4++;
                            childCount = i;
                            measuredHeight = i8;
                        }
                    }
                }
                view6 = view;
                view7 = view3;
                view5 = view2;
                i4++;
                childCount = i;
                measuredHeight = i8;
            }
            obj = obj2;
            view2 = view5;
            view = view6;
            view3 = view7;
            getMessagesController().addToPollsQueue(this.dialog_id, this.pollsToCheck);
            if (this.videoPlayerContainer != null) {
                if (obj == null) {
                    messageObject2 = MediaController.getInstance().getPlayingMessageObject();
                    if (messageObject2 != null) {
                        if (this.checkTextureViewPosition && messageObject2.isVideo()) {
                            MediaController.getInstance().cleanupPlayer(true, true);
                        } else {
                            this.videoPlayerContainer.setTranslationY((float) ((-AndroidUtilities.roundMessageSize) - 100));
                            this.fragmentView.invalidate();
                            if ((messageObject2.isRoundVideo() || messageObject2.isVideo()) && messageObject2.eventId == 0 && this.checkTextureViewPosition && !this.chatListView.animationRunning) {
                                MediaController.getInstance().setCurrentVideoVisible(false);
                            }
                        }
                    }
                } else {
                    MediaController.getInstance().setCurrentVideoVisible(true);
                }
            }
            if (view2 != null) {
                view4 = view2;
                if (view4 instanceof ChatMessageCell) {
                    messageObject2 = ((ChatMessageCell) view4).getMessageObject();
                } else {
                    messageObject2 = ((ChatActionCell) view4).getMessageObject();
                }
                this.floatingDateView.setCustomDate(messageObject2.messageOwner.date, this.inScheduleMode, true);
            }
            this.currentFloatingDateOnScreen = false;
            view4 = view3;
            boolean z3 = ((view4 instanceof ChatMessageCell) || (view4 instanceof ChatActionCell)) ? false : true;
            this.currentFloatingTopIsNotMessage = z3;
            if (view != null) {
                if (view.getTop() - this.chatListViewClipTop > this.chatListView.getPaddingTop() || this.currentFloatingTopIsNotMessage) {
                    view4 = view;
                    if (view4.getAlpha() != 1.0f) {
                        view4.setAlpha(1.0f);
                    }
                    hideFloatingDateView(this.currentFloatingTopIsNotMessage ^ 1);
                } else {
                    view4 = view;
                    if (view.getAlpha() != 0.0f) {
                        view4.setAlpha(0.0f);
                    }
                    AnimatorSet animatorSet = this.floatingDateAnimation;
                    if (animatorSet != null) {
                        animatorSet.cancel();
                        this.floatingDateAnimation = null;
                    }
                    if (this.floatingDateView.getTag() == null) {
                        this.floatingDateView.setTag(Integer.valueOf(1));
                    }
                    if (this.floatingDateView.getAlpha() != 1.0f) {
                        this.floatingDateView.setAlpha(1.0f);
                    }
                    this.currentFloatingDateOnScreen = true;
                }
                float bottom = (float) ((view4.getBottom() - this.chatListView.getPaddingTop()) - this.chatListViewClipTop);
                if (bottom <= ((float) this.floatingDateView.getMeasuredHeight()) || bottom >= ((float) (this.floatingDateView.getMeasuredHeight() * 2))) {
                    this.floatingDateView.setTranslationY(0.0f);
                } else {
                    ChatActionCell chatActionCell = this.floatingDateView;
                    chatActionCell.setTranslationY(((float) ((-chatActionCell.getMeasuredHeight()) * 2)) + bottom);
                }
            } else {
                hideFloatingDateView(true);
                this.floatingDateView.setTranslationY(0.0f);
            }
            if (!(this.firstLoading || this.paused || this.inPreviewMode || this.inScheduleMode)) {
                if (i7 != Integer.MIN_VALUE || i3 != Integer.MAX_VALUE) {
                    i = 0;
                    int i10 = 0;
                    for (childCount = 0; childCount < this.messages.size(); childCount++) {
                        messageObject = (MessageObject) this.messages.get(childCount);
                        int id = messageObject.getId();
                        if (i7 != Integer.MIN_VALUE && id > 0 && id <= i7 && ((messageObject.messageOwner.from_scheduled && id > num.intValue()) || messageObject.isUnread())) {
                            if (messageObject.messageOwner.from_scheduled) {
                                i10++;
                            } else {
                                messageObject.setIsRead();
                            }
                            i++;
                        }
                        if (i3 != Integer.MAX_VALUE && id < 0 && id >= i3 && messageObject.isUnread()) {
                            messageObject.setIsRead();
                            i++;
                        }
                    }
                    if ((this.forwardEndReached[0] && i7 == this.minMessageId[0]) || i3 == this.minMessageId[0]) {
                        this.newUnreadMessageCount = 0;
                    } else {
                        this.newUnreadMessageCount -= i;
                        if (this.newUnreadMessageCount < 0) {
                            this.newUnreadMessageCount = 0;
                        }
                    }
                    if (z) {
                        AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$r8G5ryI3TCtj8E-vwPu9tBJgvUE(this));
                    } else {
                        inlineUpdate1();
                    }
                    MessagesController messagesController = getMessagesController();
                    long j = this.dialog_id;
                    int[] iArr = this.minMessageId;
                    boolean z4 = i7 == iArr[0] || i3 == iArr[0];
                    messagesController.markDialogAsRead(j, i7, i3, i2, false, i, z4, i10);
                    this.firstUnreadSent = true;
                } else if (!this.firstUnreadSent && this.chatLayoutManager.findFirstVisibleItemPosition() == 0) {
                    this.newUnreadMessageCount = 0;
                    if (z) {
                        AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$NFR4cP3nNe6c-Xs7PotAXGjVKSQ(this));
                    } else {
                        inlineUpdate2();
                    }
                    MessagesController messagesController2 = getMessagesController();
                    long j2 = this.dialog_id;
                    int[] iArr2 = this.minMessageId;
                    messagesController2.markDialogAsRead(j2, iArr2[0], iArr2[0], this.maxDate[0], false, 0, true, 0);
                    this.firstUnreadSent = true;
                }
            }
        }
    }

    private void inlineUpdate1() {
        int i = this.prevSetUnreadCount;
        int i2 = this.newUnreadMessageCount;
        if (i != i2) {
            this.prevSetUnreadCount = i2;
            this.pagedownButtonCounter.setText(String.format("%d", new Object[]{Integer.valueOf(i2)}));
        }
        if (this.newUnreadMessageCount <= 0) {
            if (this.pagedownButtonCounter.getVisibility() != 4) {
                this.pagedownButtonCounter.setVisibility(4);
            }
        } else if (this.pagedownButtonCounter.getVisibility() != 0) {
            this.pagedownButtonCounter.setVisibility(0);
        }
    }

    private void inlineUpdate2() {
        int i = this.prevSetUnreadCount;
        int i2 = this.newUnreadMessageCount;
        if (i != i2) {
            this.prevSetUnreadCount = i2;
            this.pagedownButtonCounter.setText(String.format("%d", new Object[]{Integer.valueOf(i2)}));
        }
        if (this.pagedownButtonCounter.getVisibility() != 4) {
            this.pagedownButtonCounter.setVisibility(4);
        }
    }

    private void toggleMute(boolean z) {
        String str = "notify2_";
        Editor edit;
        StringBuilder stringBuilder;
        TLRPC.Dialog dialog;
        if (getMessagesController().isDialogMuted(this.dialog_id)) {
            edit = MessagesController.getNotificationsSettings(this.currentAccount).edit();
            stringBuilder = new StringBuilder();
            stringBuilder.append(str);
            stringBuilder.append(this.dialog_id);
            edit.putInt(stringBuilder.toString(), 0);
            getMessagesStorage().setDialogFlags(this.dialog_id, 0);
            edit.commit();
            dialog = (TLRPC.Dialog) getMessagesController().dialogs_dict.get(this.dialog_id);
            if (dialog != null) {
                dialog.notify_settings = new TL_peerNotifySettings();
            }
            getNotificationsController().updateServerNotificationsSettings(this.dialog_id);
        } else if (z) {
            edit = MessagesController.getNotificationsSettings(this.currentAccount).edit();
            stringBuilder = new StringBuilder();
            stringBuilder.append(str);
            stringBuilder.append(this.dialog_id);
            edit.putInt(stringBuilder.toString(), 2);
            getMessagesStorage().setDialogFlags(this.dialog_id, 1);
            edit.commit();
            dialog = (TLRPC.Dialog) getMessagesController().dialogs_dict.get(this.dialog_id);
            if (dialog != null) {
                dialog.notify_settings = new TL_peerNotifySettings();
                dialog.notify_settings.mute_until = Integer.MAX_VALUE;
            }
            getNotificationsController().updateServerNotificationsSettings(this.dialog_id);
            getNotificationsController().removeNotificationsForDialog(this.dialog_id);
        } else {
            showDialog(AlertsCreator.createMuteAlert(getParentActivity(), this.dialog_id));
        }
    }

    private int getScrollOffsetForMessage(MessageObject messageObject) {
        if (this.dummyMessageCell == null) {
            this.dummyMessageCell = new ChatMessageCell(getParentActivity());
        }
        ChatMessageCell chatMessageCell = this.dummyMessageCell;
        boolean z = false;
        boolean z2 = this.currentChat != null || UserObject.isUserSelf(this.currentUser);
        chatMessageCell.isChat = z2;
        chatMessageCell = this.dummyMessageCell;
        if (ChatObject.isChannel(this.currentChat) && this.currentChat.megagroup) {
            z = true;
        }
        chatMessageCell.isMegagroup = z;
        return Math.max(-AndroidUtilities.dp(2.0f), ((this.chatListView.getMeasuredHeight() - this.chatListView.getPaddingTop()) - this.dummyMessageCell.computeHeight(messageObject, (GroupedMessages) this.groupedMessagesMap.get(messageObject.getGroupId()))) / 2);
    }

    private void startMessageUnselect() {
        Runnable runnable = this.unselectRunnable;
        if (runnable != null) {
            AndroidUtilities.cancelRunOnUIThread(runnable);
        }
        this.unselectRunnable = new -$$Lambda$ChatActivity$OBwH2TmAcsHnppdvX2SmtpGkoIM(this);
        AndroidUtilities.runOnUIThread(this.unselectRunnable, 1000);
    }

    public /* synthetic */ void lambda$startMessageUnselect$64$ChatActivity() {
        this.highlightMessageId = Integer.MAX_VALUE;
        updateVisibleRows();
        this.unselectRunnable = null;
    }

    private void removeSelectedMessageHighlight() {
        Runnable runnable = this.unselectRunnable;
        if (runnable != null) {
            AndroidUtilities.cancelRunOnUIThread(runnable);
            this.unselectRunnable = null;
        }
        this.highlightMessageId = Integer.MAX_VALUE;
    }

    /* JADX WARNING: Removed duplicated region for block: B:121:0x0286  */
    /* JADX WARNING: Removed duplicated region for block: B:40:0x00ae  */
    /* JADX WARNING: Removed duplicated region for block: B:123:0x028c  */
    /* JADX WARNING: Removed duplicated region for block: B:31:0x0082  */
    /* JADX WARNING: Removed duplicated region for block: B:140:0x0317  */
    /* JADX WARNING: Removed duplicated region for block: B:125:0x028f  */
    /* JADX WARNING: Missing block: B:10:0x0032, code skipped:
            if (isSecretChat() != false) goto L_0x0034;
     */
    /* JADX WARNING: Missing block: B:26:0x0074, code skipped:
            if (isSecretChat() != false) goto L_0x0034;
     */
    public void scrollToMessageId(int r24, int r25, boolean r26, int r27, boolean r28) {
        /*
        r23 = this;
        r0 = r23;
        r1 = r24;
        r2 = r25;
        r3 = r26;
        r4 = r27;
        r5 = r0.chatListView;
        r5 = r5.animationRunning;
        if (r5 != 0) goto L_0x032f;
    L_0x0010:
        r5 = r23.getParentActivity();
        if (r5 != 0) goto L_0x0018;
    L_0x0016:
        goto L_0x032f;
    L_0x0018:
        r5 = 1;
        r0.wasManualScroll = r5;
        r6 = r0.messagesDict;
        r6 = r6[r4];
        r6 = r6.get(r1);
        r6 = (org.telegram.messenger.MessageObject) r6;
        r7 = -1;
        r8 = 0;
        if (r2 == 0) goto L_0x0038;
    L_0x0029:
        if (r2 >= r1) goto L_0x002d;
    L_0x002b:
        r9 = 1;
        goto L_0x002e;
    L_0x002d:
        r9 = 0;
    L_0x002e:
        r10 = r23.isSecretChat();
        if (r10 == 0) goto L_0x0036;
    L_0x0034:
        r9 = r9 ^ 1;
    L_0x0036:
        r9 = r9 ^ r5;
        goto L_0x007b;
    L_0x0038:
        r9 = r0.messages;
        r9 = r9.size();
        if (r9 <= 0) goto L_0x007a;
    L_0x0040:
        r9 = r0.chatLayoutManager;
        r9 = r9.findLastVisibleItemPosition();
        r10 = r0.chatLayoutManager;
        r10 = r10.findFirstVisibleItemPosition();
    L_0x004c:
        if (r10 > r9) goto L_0x007a;
    L_0x004e:
        r11 = r0.chatAdapter;
        r12 = r11.messagesStartRow;
        if (r10 < r12) goto L_0x0077;
    L_0x0054:
        r11 = r11.messagesEndRow;
        if (r10 > r11) goto L_0x0077;
    L_0x005a:
        r9 = r0.messages;
        r11 = r0.chatAdapter;
        r11 = r11.messagesStartRow;
        r10 = r10 - r11;
        r9 = r9.get(r10);
        r9 = (org.telegram.messenger.MessageObject) r9;
        r9 = r9.getId();
        if (r9 >= r1) goto L_0x006f;
    L_0x006d:
        r9 = 1;
        goto L_0x0070;
    L_0x006f:
        r9 = 0;
    L_0x0070:
        r10 = r23.isSecretChat();
        if (r10 == 0) goto L_0x0036;
    L_0x0076:
        goto L_0x0034;
    L_0x0077:
        r10 = r10 + 1;
        goto L_0x004c;
    L_0x007a:
        r9 = -1;
    L_0x007b:
        r10 = r0.chatScrollHelper;
        r10.setScrollDirection(r9);
        if (r6 == 0) goto L_0x028c;
    L_0x0082:
        r10 = r0.groupedMessagesMap;
        r11 = r6.getGroupId();
        r10 = r10.get(r11);
        r10 = (org.telegram.messenger.MessageObject.GroupedMessages) r10;
        r11 = r6.getGroupId();
        r13 = 0;
        r15 = (r11 > r13 ? 1 : (r11 == r13 ? 0 : -1));
        if (r15 == 0) goto L_0x00a5;
    L_0x0098:
        if (r10 == 0) goto L_0x00a5;
    L_0x009a:
        r10 = r10.findPrimaryMessageObject();
        if (r10 == 0) goto L_0x00a5;
    L_0x00a0:
        r1 = r10.getId();
        goto L_0x00a6;
    L_0x00a5:
        r10 = r6;
    L_0x00a6:
        r6 = r0.messages;
        r6 = r6.indexOf(r10);
        if (r6 == r7) goto L_0x0286;
    L_0x00ae:
        r23.removeSelectedMessageHighlight();
        if (r3 == 0) goto L_0x00b5;
    L_0x00b3:
        r0.highlightMessageId = r1;
    L_0x00b5:
        r6 = r0.chatAdapter;
        r6.updateRows();
        r6 = r0.chatAdapter;
        r6 = r6.messagesStartRow;
        r11 = r0.messages;
        r11 = r11.indexOf(r10);
        r6 = r6 + r11;
        r23.updateVisibleRows();
        r11 = r0.chatListView;
        r11 = r11.getChildCount();
        r12 = 0;
        r15 = 0;
    L_0x00d0:
        if (r12 >= r11) goto L_0x0133;
    L_0x00d2:
        r7 = r0.chatListView;
        r7 = r7.getChildAt(r12);
        r13 = r7 instanceof org.telegram.ui.Cells.ChatMessageCell;
        r14 = 8;
        if (r13 == 0) goto L_0x00f9;
    L_0x00de:
        r13 = r7;
        r13 = (org.telegram.ui.Cells.ChatMessageCell) r13;
        r13 = r13.getMessageObject();
        if (r13 == 0) goto L_0x00f6;
    L_0x00e7:
        r13 = r13.getId();
        r5 = r10.getId();
        if (r13 != r5) goto L_0x00f6;
    L_0x00f1:
        r7.sendAccessibilityEvent(r14);
        r5 = 1;
        goto L_0x00f7;
    L_0x00f6:
        r5 = r15;
    L_0x00f7:
        r15 = r5;
        goto L_0x0114;
    L_0x00f9:
        r5 = r7 instanceof org.telegram.ui.Cells.ChatActionCell;
        if (r5 == 0) goto L_0x0114;
    L_0x00fd:
        r5 = r7;
        r5 = (org.telegram.ui.Cells.ChatActionCell) r5;
        r5 = r5.getMessageObject();
        if (r5 == 0) goto L_0x0114;
    L_0x0106:
        r5 = r5.getId();
        r13 = r10.getId();
        if (r5 != r13) goto L_0x0114;
    L_0x0110:
        r7.sendAccessibilityEvent(r14);
        r15 = 1;
    L_0x0114:
        if (r15 == 0) goto L_0x012c;
    L_0x0116:
        r5 = r0.getScrollOffsetForMessage(r10);
        r11 = r0.chatListView;
        r7 = r7.getTop();
        r12 = r0.chatListView;
        r12 = r12.getPaddingTop();
        r7 = r7 - r12;
        r7 = r7 - r5;
        r11.smoothScrollBy(r8, r7);
        goto L_0x0133;
    L_0x012c:
        r12 = r12 + 1;
        r5 = 1;
        r7 = -1;
        r13 = 0;
        goto L_0x00d0;
    L_0x0133:
        if (r15 != 0) goto L_0x0282;
    L_0x0135:
        r5 = r0.chatListView;
        r5 = r5.getMeasuredHeight();
        if (r9 != 0) goto L_0x0150;
    L_0x013d:
        r7 = r0.chatLayoutManager;
        r11 = r7.findFirstVisibleItemPosition();
        r7 = r7.findViewByPosition(r11);
        r11 = r0.chatLayoutManager;
        r11 = r11.findFirstVisibleItemPosition();
        r12 = 1;
        r11 = r11 - r12;
        goto L_0x0162;
    L_0x0150:
        r12 = 1;
        r7 = r0.chatLayoutManager;
        r11 = r7.findLastVisibleItemPosition();
        r7 = r7.findViewByPosition(r11);
        r11 = r0.chatLayoutManager;
        r11 = r11.findLastVisibleItemPosition();
        r11 = r11 + r12;
    L_0x0162:
        r12 = r0.dummyMessageCell;
        if (r12 != 0) goto L_0x0171;
    L_0x0166:
        r12 = new org.telegram.ui.Cells.ChatMessageCell;
        r13 = r23.getParentActivity();
        r12.<init>(r13);
        r0.dummyMessageCell = r12;
    L_0x0171:
        r12 = r0.dummyMessageCell;
        r13 = r0.currentChat;
        if (r13 != 0) goto L_0x0182;
    L_0x0177:
        r13 = r0.currentUser;
        r13 = org.telegram.messenger.UserObject.isUserSelf(r13);
        if (r13 == 0) goto L_0x0180;
    L_0x017f:
        goto L_0x0182;
    L_0x0180:
        r13 = 0;
        goto L_0x0183;
    L_0x0182:
        r13 = 1;
    L_0x0183:
        r12.isChat = r13;
        r12 = r0.dummyMessageCell;
        r13 = r0.currentChat;
        r13 = org.telegram.messenger.ChatObject.isChannel(r13);
        if (r13 == 0) goto L_0x0197;
    L_0x018f:
        r13 = r0.currentChat;
        r13 = r13.megagroup;
        if (r13 == 0) goto L_0x0197;
    L_0x0195:
        r13 = 1;
        goto L_0x0198;
    L_0x0197:
        r13 = 0;
    L_0x0198:
        r12.isMegagroup = r13;
        r12 = r11;
        r11 = 0;
        r13 = 0;
    L_0x019e:
        if (r11 >= r5) goto L_0x01ff;
    L_0x01a0:
        r15 = r0.chatAdapter;
        r8 = r15.messagesStartRow;
        if (r12 < r8) goto L_0x01ff;
    L_0x01a6:
        r8 = r15.messagesEndRow;
        if (r12 <= r8) goto L_0x01ad;
    L_0x01ac:
        goto L_0x01ff;
    L_0x01ad:
        if (r9 != 0) goto L_0x01b2;
    L_0x01af:
        if (r6 <= r12) goto L_0x01b5;
    L_0x01b1:
        goto L_0x01ff;
    L_0x01b2:
        if (r6 >= r12) goto L_0x01b5;
    L_0x01b4:
        goto L_0x01ff;
    L_0x01b5:
        r8 = r0.messages;
        r15 = r0.chatAdapter;
        r15 = r15.messagesStartRow;
        r15 = r12 - r15;
        r8 = r8.get(r15);
        r8 = (org.telegram.messenger.MessageObject) r8;
        r17 = 0;
        r15 = (r13 > r17 ? 1 : (r13 == r17 ? 0 : -1));
        if (r15 == 0) goto L_0x01d8;
    L_0x01c9:
        r20 = r8.getGroupId();
        r15 = (r20 > r13 ? 1 : (r20 == r13 ? 0 : -1));
        if (r15 != 0) goto L_0x01d8;
    L_0x01d1:
        if (r9 != 0) goto L_0x01d5;
    L_0x01d3:
        r8 = -1;
        goto L_0x01d6;
    L_0x01d5:
        r8 = 1;
    L_0x01d6:
        r12 = r12 + r8;
        goto L_0x01fd;
    L_0x01d8:
        r13 = r8.getGroupId();
        r15 = r0.dummyMessageCell;
        r20 = r1;
        r1 = r0.groupedMessagesMap;
        r21 = r13;
        r13 = r8.getGroupId();
        r1 = r1.get(r13);
        r1 = (org.telegram.messenger.MessageObject.GroupedMessages) r1;
        r1 = r15.computeHeight(r8, r1);
        r11 = r11 + r1;
        if (r9 != 0) goto L_0x01f7;
    L_0x01f5:
        r1 = -1;
        goto L_0x01f8;
    L_0x01f7:
        r1 = 1;
    L_0x01f8:
        r12 = r12 + r1;
        r1 = r20;
        r13 = r21;
    L_0x01fd:
        r8 = 0;
        goto L_0x019e;
    L_0x01ff:
        r20 = r1;
        if (r11 >= r5) goto L_0x0262;
    L_0x0203:
        r1 = r0.getScrollOffsetForMessage(r10);
        if (r7 == 0) goto L_0x025a;
    L_0x0209:
        r5 = 1;
        if (r9 != r5) goto L_0x0220;
    L_0x020c:
        r5 = r0.chatListView;
        r6 = r7.getTop();
        r7 = r0.chatListView;
        r7 = r7.getPaddingTop();
        r6 = r6 - r7;
        r6 = r6 - r11;
        r6 = r6 - r1;
        r1 = 0;
        r5.smoothScrollBy(r1, r6);
        goto L_0x0260;
    L_0x0220:
        r5 = r0.messages;
        r8 = r0.chatAdapter;
        r8 = r8.messagesStartRow;
        r6 = r6 - r8;
        r5 = r5.get(r6);
        r5 = (org.telegram.messenger.MessageObject) r5;
        r6 = r0.dummyMessageCell;
        r8 = r0.groupedMessagesMap;
        r9 = r5.getGroupId();
        r8 = r8.get(r9);
        r8 = (org.telegram.messenger.MessageObject.GroupedMessages) r8;
        r5 = r6.computeHeight(r5, r8);
        r6 = r0.chatListView;
        r6 = r6.getMeasuredHeight();
        r6 = r6 - r5;
        r5 = r0.chatListView;
        r8 = r5.getMeasuredHeight();
        r7 = r7.getBottom();
        r8 = r8 - r7;
        r7 = -r8;
        r7 = r7 + r6;
        r7 = r7 + r11;
        r7 = r7 - r1;
        r1 = 0;
        r5.smoothScrollBy(r1, r7);
        goto L_0x0260;
    L_0x025a:
        r1 = 0;
        r5 = r0.chatListView;
        r5.smoothScrollToPosition(r6);
    L_0x0260:
        r8 = 1;
        goto L_0x027c;
    L_0x0262:
        r1 = 0;
        r5 = r0.getScrollOffsetForMessage(r10);
        r7 = r0.chatScrollHelperCallback;
        r7.scrollTo = r10;
        r7 = r0.chatScrollHelperCallback;
        r7.lastBottom = r1;
        r7 = r0.chatScrollHelperCallback;
        r7.lastItemOffset = r5;
        r7 = r0.chatScrollHelper;
        r8 = 1;
        r7.scrollToPosition(r6, r5, r1, r8);
    L_0x027c:
        r0.canShowPagedownButton = r8;
        r0.updatePagedownButtonVisibility(r8);
        goto L_0x0284;
    L_0x0282:
        r20 = r1;
    L_0x0284:
        r5 = 0;
        goto L_0x0289;
    L_0x0286:
        r20 = r1;
        r5 = 1;
    L_0x0289:
        r1 = r20;
        goto L_0x028d;
    L_0x028c:
        r5 = 1;
    L_0x028d:
        if (r5 == 0) goto L_0x0317;
    L_0x028f:
        r5 = r0.progressDialog;
        if (r5 != 0) goto L_0x029f;
    L_0x0293:
        r5 = new org.telegram.ui.ActionBar.AlertDialog;
        r6 = r23.getParentActivity();
        r7 = 3;
        r5.<init>(r6, r7);
        r0.progressDialog = r5;
    L_0x029f:
        r5 = r0.progressDialog;
        r6 = new org.telegram.ui.-$$Lambda$ChatActivity$ie4nUnVCnNn8pOZLFn7U9EOSypo;
        r6.<init>(r0);
        r5.setOnCancelListener(r6);
        r5 = r0.progressDialog;
        r6 = 400; // 0x190 float:5.6E-43 double:1.976E-321;
        r5.showDelayed(r6);
        r5 = r0.waitingForLoad;
        r5.clear();
        r23.removeSelectedMessageHighlight();
        r5 = -10000; // 0xffffffffffffd8f0 float:NaN double:NaN;
        r0.scrollToMessagePosition = r5;
        r0.startLoadFromMessageId = r1;
        r5 = 1;
        r6 = r28 ^ 1;
        r0.showScrollToMessageError = r6;
        r6 = r0.createUnreadMessageAfterId;
        if (r1 != r6) goto L_0x02c9;
    L_0x02c7:
        r0.createUnreadMessageAfterIdLoading = r5;
    L_0x02c9:
        r5 = 0;
        r0.postponedScrollIsCanceled = r5;
        r5 = r0.waitingForLoad;
        r6 = r0.lastLoadIndex;
        r6 = java.lang.Integer.valueOf(r6);
        r5.add(r6);
        r5 = r0.lastLoadIndex;
        r0.postponedScrollToLastMessageQueryIndex = r5;
        r0.postponedScrollMessageId = r1;
        r6 = r23.getMessagesController();
        if (r4 != 0) goto L_0x02e6;
    L_0x02e3:
        r7 = r0.dialog_id;
        goto L_0x02e8;
    L_0x02e6:
        r7 = r0.mergeDialogId;
    L_0x02e8:
        r1 = org.telegram.messenger.AndroidUtilities.isTablet();
        if (r1 == 0) goto L_0x02f3;
    L_0x02ee:
        r1 = 30;
        r9 = 30;
        goto L_0x02f7;
    L_0x02f3:
        r1 = 20;
        r9 = 20;
    L_0x02f7:
        r10 = r0.startLoadFromMessageId;
        r11 = 0;
        r12 = 1;
        r13 = 0;
        r14 = r0.classGuid;
        r16 = 0;
        r1 = r0.currentChat;
        r17 = org.telegram.messenger.ChatObject.isChannel(r1);
        r1 = r0.inScheduleMode;
        r5 = r0.lastLoadIndex;
        r15 = r5 + 1;
        r0.lastLoadIndex = r15;
        r15 = 3;
        r18 = r1;
        r19 = r5;
        r6.loadMessages(r7, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19);
        goto L_0x0329;
    L_0x0317:
        r1 = r0.chatListView;
        r5 = 0;
        r1 = r1.getChildAt(r5);
        if (r1 == 0) goto L_0x0329;
    L_0x0320:
        r1 = r1.getTop();
        if (r1 > 0) goto L_0x0329;
    L_0x0326:
        r0.showFloatingDateView(r5);
    L_0x0329:
        r0.returnToMessageId = r2;
        r0.returnToLoadIndex = r4;
        r0.needSelectFromMessageId = r3;
    L_0x032f:
        return;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.scrollToMessageId(int, int, boolean, int, boolean):void");
    }

    public /* synthetic */ void lambda$scrollToMessageId$65$ChatActivity(DialogInterface dialogInterface) {
        this.postponedScrollIsCanceled = true;
    }

    private void updatePagedownButtonVisibility(boolean z) {
        if (this.pagedownButton != null) {
            Object obj = (!this.canShowPagedownButton || this.textSelectionHelper.isSelectionMode()) ? null : 1;
            AnimatorSet animatorSet;
            Animator[] animatorArr;
            if (obj != null) {
                boolean z2 = (!z || SystemClock.uptimeMillis() >= this.openAnimationStartTime + 150) ? z : false;
                this.pagedownButtonShowedByScroll = false;
                if (this.pagedownButton.getTag() == null) {
                    AnimatorSet animatorSet2 = this.pagedownButtonAnimation;
                    if (animatorSet2 != null) {
                        animatorSet2.cancel();
                        this.pagedownButtonAnimation = null;
                    }
                    this.pagedownButton.setTag(Integer.valueOf(1));
                    if (z2) {
                        if (this.pagedownButton.getTranslationY() == 0.0f) {
                            this.pagedownButton.setTranslationY((float) AndroidUtilities.dp(100.0f));
                        }
                        this.pagedownButton.setVisibility(0);
                        this.pagedownButtonAnimation = new AnimatorSet();
                        if (this.mentiondownButton.getVisibility() == 0) {
                            animatorSet = this.pagedownButtonAnimation;
                            animatorArr = new Animator[2];
                            animatorArr[0] = ObjectAnimator.ofFloat(this.pagedownButton, View.TRANSLATION_Y, new float[]{0.0f});
                            animatorArr[1] = ObjectAnimator.ofFloat(this.mentiondownButton, View.TRANSLATION_Y, new float[]{(float) (-AndroidUtilities.dp(72.0f))});
                            animatorSet.playTogether(animatorArr);
                        } else {
                            animatorSet = this.pagedownButtonAnimation;
                            animatorArr = new Animator[1];
                            animatorArr[0] = ObjectAnimator.ofFloat(this.pagedownButton, View.TRANSLATION_Y, new float[]{0.0f});
                            animatorSet.playTogether(animatorArr);
                        }
                        this.pagedownButtonAnimation.setDuration(200);
                        this.pagedownButtonAnimation.start();
                    } else {
                        this.mentiondownButton.setTranslationY((float) (-AndroidUtilities.dp(72.0f)));
                        this.pagedownButton.setTranslationY(0.0f);
                        this.pagedownButton.setVisibility(0);
                    }
                }
            } else {
                this.returnToMessageId = 0;
                this.newUnreadMessageCount = 0;
                if (this.pagedownButton.getTag() != null) {
                    this.pagedownButton.setTag(null);
                    animatorSet = this.pagedownButtonAnimation;
                    if (animatorSet != null) {
                        animatorSet.cancel();
                        this.pagedownButtonAnimation = null;
                    }
                    if (z) {
                        this.pagedownButtonAnimation = new AnimatorSet();
                        if (this.mentiondownButton.getVisibility() == 0) {
                            animatorSet = this.pagedownButtonAnimation;
                            animatorArr = new Animator[2];
                            animatorArr[0] = ObjectAnimator.ofFloat(this.pagedownButton, View.TRANSLATION_Y, new float[]{(float) AndroidUtilities.dp(100.0f)});
                            animatorArr[1] = ObjectAnimator.ofFloat(this.mentiondownButton, View.TRANSLATION_Y, new float[]{0.0f});
                            animatorSet.playTogether(animatorArr);
                        } else {
                            animatorSet = this.pagedownButtonAnimation;
                            animatorArr = new Animator[1];
                            animatorArr[0] = ObjectAnimator.ofFloat(this.pagedownButton, View.TRANSLATION_Y, new float[]{(float) AndroidUtilities.dp(100.0f)});
                            animatorSet.playTogether(animatorArr);
                        }
                        this.pagedownButtonAnimation.setDuration(200);
                        this.pagedownButtonAnimation.addListener(new AnimatorListenerAdapter() {
                            public void onAnimationEnd(Animator animator) {
                                ChatActivity.this.pagedownButtonCounter.setVisibility(4);
                                ChatActivity.this.pagedownButton.setVisibility(4);
                            }
                        });
                        this.pagedownButtonAnimation.start();
                    } else {
                        this.pagedownButton.setVisibility(4);
                    }
                }
            }
        }
    }

    private void showMentionDownButton(boolean z, boolean z2) {
        FrameLayout frameLayout = this.mentiondownButton;
        if (frameLayout != null) {
            ObjectAnimator objectAnimator;
            if (!z) {
                this.returnToMessageId = 0;
                if (frameLayout.getTag() != null) {
                    this.mentiondownButton.setTag(null);
                    objectAnimator = this.mentiondownButtonAnimation;
                    if (objectAnimator != null) {
                        objectAnimator.cancel();
                        this.mentiondownButtonAnimation = null;
                    }
                    if (z2) {
                        if (this.pagedownButton.getVisibility() == 0) {
                            this.mentiondownButtonAnimation = ObjectAnimator.ofFloat(this.mentiondownButton, View.ALPHA, new float[]{1.0f, 0.0f}).setDuration(200);
                        } else {
                            this.mentiondownButtonAnimation = ObjectAnimator.ofFloat(this.mentiondownButton, View.TRANSLATION_Y, new float[]{(float) AndroidUtilities.dp(100.0f)}).setDuration(200);
                        }
                        this.mentiondownButtonAnimation.addListener(new AnimatorListenerAdapter() {
                            public void onAnimationEnd(Animator animator) {
                                ChatActivity.this.mentiondownButtonCounter.setVisibility(4);
                                ChatActivity.this.mentiondownButton.setVisibility(4);
                            }
                        });
                        this.mentiondownButtonAnimation.start();
                    } else {
                        this.mentiondownButton.setVisibility(4);
                    }
                }
            } else if (frameLayout.getTag() == null) {
                objectAnimator = this.mentiondownButtonAnimation;
                if (objectAnimator != null) {
                    objectAnimator.cancel();
                    this.mentiondownButtonAnimation = null;
                }
                if (z2) {
                    this.mentiondownButton.setVisibility(0);
                    this.mentiondownButton.setTag(Integer.valueOf(1));
                    if (this.pagedownButton.getVisibility() == 0) {
                        this.mentiondownButton.setTranslationY((float) (-AndroidUtilities.dp(72.0f)));
                        this.mentiondownButtonAnimation = ObjectAnimator.ofFloat(this.mentiondownButton, View.ALPHA, new float[]{0.0f, 1.0f}).setDuration(200);
                    } else {
                        if (this.mentiondownButton.getTranslationY() == 0.0f) {
                            this.mentiondownButton.setTranslationY((float) AndroidUtilities.dp(100.0f));
                        }
                        this.mentiondownButtonAnimation = ObjectAnimator.ofFloat(this.mentiondownButton, View.TRANSLATION_Y, new float[]{0.0f}).setDuration(200);
                    }
                    this.mentiondownButtonAnimation.start();
                } else {
                    this.mentiondownButton.setVisibility(0);
                }
            }
        }
    }

    private void updateSecretStatus() {
        if (this.bottomOverlay != null) {
            Chat chat = this.currentChat;
            int i = 1;
            if (chat == null || ChatObject.canSendMessages(chat) || (ChatObject.isChannel(this.currentChat) && !this.currentChat.megagroup)) {
                EncryptedChat encryptedChat = this.currentEncryptedChat;
                if (encryptedChat == null || this.bigEmptyView == null) {
                    this.bottomOverlay.setVisibility(4);
                    if (this.stickersAdapter != null) {
                        ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
                        if (chatActivityEnterView != null && chatActivityEnterView.hasText()) {
                            this.stickersAdapter.loadStikersForEmoji(this.chatActivityEnterView.getFieldText(), false);
                        }
                    }
                    return;
                }
                if (encryptedChat instanceof TL_encryptedChatRequested) {
                    this.bottomOverlayText.setText(LocaleController.getString("EncryptionProcessing", NUM));
                    this.bottomOverlay.setVisibility(0);
                } else if (encryptedChat instanceof TL_encryptedChatWaiting) {
                    TextView textView = this.bottomOverlayText;
                    Object[] objArr = new Object[1];
                    StringBuilder stringBuilder = new StringBuilder();
                    stringBuilder.append("<b>");
                    stringBuilder.append(this.currentUser.first_name);
                    stringBuilder.append("</b>");
                    objArr[0] = stringBuilder.toString();
                    textView.setText(AndroidUtilities.replaceTags(LocaleController.formatString("AwaitingEncryption", NUM, objArr)));
                    this.bottomOverlay.setVisibility(0);
                } else if (encryptedChat instanceof TL_encryptedChatDiscarded) {
                    this.bottomOverlayText.setText(LocaleController.getString("EncryptionRejected", NUM));
                    this.bottomOverlay.setVisibility(0);
                    this.chatActivityEnterView.setFieldText("");
                    getMediaDataController().cleanDraft(this.dialog_id, false);
                } else {
                    if (encryptedChat instanceof TL_encryptedChat) {
                        this.bottomOverlay.setVisibility(4);
                    }
                    i = 0;
                }
                checkRaiseSensors();
                checkActionBarMenu();
            } else {
                TL_chatBannedRights tL_chatBannedRights = this.currentChat.default_banned_rights;
                if (tL_chatBannedRights != null && tL_chatBannedRights.send_messages) {
                    this.bottomOverlayText.setText(LocaleController.getString("GlobalSendMessageRestricted", NUM));
                } else if (AndroidUtilities.isBannedForever(this.currentChat.banned_rights)) {
                    this.bottomOverlayText.setText(LocaleController.getString("SendMessageRestrictedForever", NUM));
                } else {
                    this.bottomOverlayText.setText(LocaleController.formatString("SendMessageRestricted", NUM, LocaleController.formatDateForBan((long) this.currentChat.banned_rights.until_date)));
                }
                this.bottomOverlay.setVisibility(0);
                AnimatorSet animatorSet = this.mentionListAnimation;
                if (animatorSet != null) {
                    animatorSet.cancel();
                    this.mentionListAnimation = null;
                }
                this.mentionContainer.setVisibility(8);
                this.mentionContainer.setTag(null);
                updateMessageListAccessibilityVisibility();
                StickersAdapter stickersAdapter = this.stickersAdapter;
                if (stickersAdapter != null) {
                    stickersAdapter.hide();
                }
            }
            if (this.inPreviewMode) {
                this.bottomOverlay.setVisibility(4);
            }
            if (i != 0) {
                this.chatActivityEnterView.hidePopup(false);
                if (getParentActivity() != null) {
                    AndroidUtilities.hideKeyboard(getParentActivity().getCurrentFocus());
                }
            }
        }
    }

    public void onRequestPermissionsResultFragment(int i, String[] strArr, int[] iArr) {
        ChatAttachAlert chatAttachAlert;
        ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
        if (chatActivityEnterView != null) {
            chatActivityEnterView.onRequestPermissionsResultFragment(i, strArr, iArr);
        }
        MentionsAdapter mentionsAdapter = this.mentionsAdapter;
        if (mentionsAdapter != null) {
            mentionsAdapter.onRequestPermissionsResultFragment(i, strArr, iArr);
        }
        if (i == 4) {
            chatAttachAlert = this.chatAttachAlert;
            if (chatAttachAlert != null) {
                chatAttachAlert.checkStorage();
            }
        }
        boolean z = false;
        if (i == 17 || i == 18) {
            chatAttachAlert = this.chatAttachAlert;
            if (chatAttachAlert != null) {
                if (iArr.length > 0 && iArr[0] == 0) {
                    z = true;
                }
                chatAttachAlert.checkCamera(z);
            }
        }
        if (i == 21) {
            if (!(getParentActivity() == null || iArr == null || iArr.length == 0 || iArr[0] == 0)) {
                AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                builder.setTitle(LocaleController.getString("AppName", NUM));
                builder.setMessage(LocaleController.getString("PermissionNoAudioVideo", NUM));
                builder.setNegativeButton(LocaleController.getString("PermissionOpenSettings", NUM), new -$$Lambda$ChatActivity$YtOMXdG1G2Se923E_EOSvSFYp6Q(this));
                builder.setPositiveButton(LocaleController.getString("OK", NUM), null);
                builder.show();
            }
        } else if (i == 19 && iArr != null && iArr.length > 0 && iArr[0] == 0) {
            processSelectedAttach(0);
        } else if (i == 20 && iArr != null && iArr.length > 0 && iArr[0] == 0) {
            processSelectedAttach(2);
        } else if (i == 5 && iArr != null && iArr.length > 0 && iArr[0] == 0) {
            openContactsSelectActivity();
        } else if (i == 101) {
            User user = this.currentUser;
            if (user != null) {
                if (iArr.length <= 0 || iArr[0] != 0) {
                    VoIPHelper.permissionDenied(getParentActivity(), null);
                } else {
                    VoIPHelper.startCall(user, getParentActivity(), getMessagesController().getUserFull(this.currentUser.id));
                }
            }
        }
    }

    public /* synthetic */ void lambda$onRequestPermissionsResultFragment$66$ChatActivity(DialogInterface dialogInterface, int i) {
        try {
            Intent intent = new Intent("android.settings.APPLICATION_DETAILS_SETTINGS");
            StringBuilder stringBuilder = new StringBuilder();
            stringBuilder.append("package:");
            stringBuilder.append(ApplicationLoader.applicationContext.getPackageName());
            intent.setData(Uri.parse(stringBuilder.toString()));
            getParentActivity().startActivity(intent);
        } catch (Exception e) {
            FileLog.e(e);
        }
    }

    /* JADX WARNING: Removed duplicated region for block: B:26:0x0040  */
    private void checkActionBarMenu() {
        /*
        r2 = this;
        r0 = r2.currentEncryptedChat;
        if (r0 == 0) goto L_0x0008;
    L_0x0004:
        r0 = r0 instanceof org.telegram.tgnet.TLRPC.TL_encryptedChat;
        if (r0 == 0) goto L_0x001c;
    L_0x0008:
        r0 = r2.currentChat;
        if (r0 == 0) goto L_0x0012;
    L_0x000c:
        r0 = org.telegram.messenger.ChatObject.isNotInChat(r0);
        if (r0 != 0) goto L_0x001c;
    L_0x0012:
        r0 = r2.currentUser;
        if (r0 == 0) goto L_0x002d;
    L_0x0016:
        r0 = org.telegram.messenger.UserObject.isDeleted(r0);
        if (r0 == 0) goto L_0x002d;
    L_0x001c:
        r0 = r2.timeItem2;
        if (r0 == 0) goto L_0x0025;
    L_0x0020:
        r1 = 8;
        r0.setVisibility(r1);
    L_0x0025:
        r0 = r2.avatarContainer;
        if (r0 == 0) goto L_0x003c;
    L_0x0029:
        r0.hideTimeItem();
        goto L_0x003c;
    L_0x002d:
        r0 = r2.timeItem2;
        if (r0 == 0) goto L_0x0035;
    L_0x0031:
        r1 = 0;
        r0.setVisibility(r1);
    L_0x0035:
        r0 = r2.avatarContainer;
        if (r0 == 0) goto L_0x003c;
    L_0x0039:
        r0.showTimeItem();
    L_0x003c:
        r0 = r2.avatarContainer;
        if (r0 == 0) goto L_0x0049;
    L_0x0040:
        r1 = r2.currentEncryptedChat;
        if (r1 == 0) goto L_0x0049;
    L_0x0044:
        r1 = r1.ttl;
        r0.setTime(r1);
    L_0x0049:
        r2.checkAndUpdateAvatar();
        return;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.checkActionBarMenu():void");
    }

    private int getMessageType(MessageObject messageObject) {
        MessageObject messageObject2 = messageObject;
        if (messageObject2 == null) {
            return -1;
        }
        int i = 0;
        int i2;
        InputStickerSet inputStickerSet;
        String str;
        if (this.currentEncryptedChat == null) {
            if (messageObject.isEditing()) {
                return -1;
            }
            if (messageObject.getId() > 0 || !messageObject.isOut()) {
                if (messageObject.isAnimatedEmoji()) {
                    return 2;
                }
                i2 = messageObject2.type;
                if (i2 == 6) {
                    return -1;
                }
                if (i2 == 10 || i2 == 11) {
                    return messageObject.getId() == 0 ? -1 : 1;
                } else {
                    if (messageObject.isVoice()) {
                        return 2;
                    }
                    if (messageObject.isSticker() || messageObject.isAnimatedSticker()) {
                        inputStickerSet = messageObject.getInputStickerSet();
                        if (inputStickerSet instanceof TL_inputStickerSetID) {
                            if (!getMediaDataController().isStickerPackInstalled(inputStickerSet.id)) {
                                return 7;
                            }
                        } else if ((inputStickerSet instanceof TL_inputStickerSetShortName) && !getMediaDataController().isStickerPackInstalled(inputStickerSet.short_name)) {
                            return 7;
                        }
                        return 9;
                    }
                    if (!messageObject.isRoundVideo() && ((messageObject2.messageOwner.media instanceof TL_messageMediaPhoto) || messageObject.getDocument() != null || messageObject.isMusic() || messageObject.isVideo())) {
                        if (!TextUtils.isEmpty(messageObject2.messageOwner.attachPath) && new File(messageObject2.messageOwner.attachPath).exists()) {
                            i = 1;
                        }
                        if (i == 0 && FileLoader.getPathToMessage(messageObject2.messageOwner).exists()) {
                            i = 1;
                        }
                        if (i != 0) {
                            if (messageObject.getDocument() != null) {
                                str = messageObject.getDocument().mime_type;
                                if (str != null) {
                                    if (messageObject.getDocumentName().toLowerCase().endsWith("attheme")) {
                                        return 10;
                                    }
                                    if (str.endsWith("/xml")) {
                                        return 5;
                                    }
                                    if (str.endsWith("/mp4") || str.endsWith("/png") || str.endsWith("/jpg") || str.endsWith("/jpeg")) {
                                        return 6;
                                    }
                                }
                            }
                            return 4;
                        }
                    } else if (messageObject2.type == 12) {
                        return 8;
                    } else {
                        if (messageObject.isMediaEmpty()) {
                            return 3;
                        }
                    }
                    return 2;
                }
            } else if (messageObject.isSendError()) {
                return !messageObject.isMediaEmpty() ? 0 : 20;
            } else {
                return -1;
            }
        } else if (messageObject.isSending()) {
            return -1;
        } else {
            if (messageObject.isAnimatedEmoji()) {
                return 2;
            }
            if (messageObject2.type == 6) {
                return -1;
            }
            if (messageObject.isSendError()) {
                return !messageObject.isMediaEmpty() ? 0 : 20;
            } else {
                i2 = messageObject2.type;
                if (i2 == 10 || i2 == 11) {
                    return (messageObject.getId() == 0 || messageObject.isSending()) ? -1 : 1;
                } else {
                    if (messageObject.isVoice()) {
                        return 2;
                    }
                    if (!messageObject.isAnimatedEmoji() && (messageObject.isSticker() || messageObject.isAnimatedSticker())) {
                        inputStickerSet = messageObject.getInputStickerSet();
                        return (!(inputStickerSet instanceof TL_inputStickerSetShortName) || getMediaDataController().isStickerPackInstalled(inputStickerSet.short_name)) ? 2 : 7;
                    } else if (!messageObject.isRoundVideo() && ((messageObject2.messageOwner.media instanceof TL_messageMediaPhoto) || messageObject.getDocument() != null || messageObject.isMusic() || messageObject.isVideo())) {
                        if (!TextUtils.isEmpty(messageObject2.messageOwner.attachPath) && new File(messageObject2.messageOwner.attachPath).exists()) {
                            i = 1;
                        }
                        if (i == 0 && FileLoader.getPathToMessage(messageObject2.messageOwner).exists()) {
                            i = 1;
                        }
                        if (i != 0) {
                            if (messageObject.getDocument() != null) {
                                str = messageObject.getDocument().mime_type;
                                if (str != null && str.endsWith("text/xml")) {
                                    return 5;
                                }
                            }
                            if (messageObject2.messageOwner.ttl <= 0) {
                                return 4;
                            }
                        }
                    } else if (messageObject2.type == 12) {
                        return 8;
                    } else {
                        if (messageObject.isMediaEmpty()) {
                            return 3;
                        }
                    }
                }
            }
        }
    }

    private void addToSelectedMessages(MessageObject messageObject, boolean z) {
        addToSelectedMessages(messageObject, z, true);
    }

    /* JADX WARNING: Removed duplicated region for block: B:251:0x0444  */
    private void addToSelectedMessages(org.telegram.messenger.MessageObject r23, boolean r24, boolean r25) {
        /*
        r22 = this;
        r0 = r22;
        r1 = r23;
        r2 = r0.cantForwardMessagesCount;
        r3 = 0;
        r5 = 0;
        r6 = 1;
        if (r1 == 0) goto L_0x01c5;
    L_0x000c:
        r7 = r23.getDialogId();
        r9 = r0.dialog_id;
        r11 = (r7 > r9 ? 1 : (r7 == r9 ? 0 : -1));
        if (r11 != 0) goto L_0x0018;
    L_0x0016:
        r7 = 0;
        goto L_0x0019;
    L_0x0018:
        r7 = 1;
    L_0x0019:
        if (r24 == 0) goto L_0x009f;
    L_0x001b:
        r8 = r23.getGroupId();
        r10 = (r8 > r3 ? 1 : (r8 == r3 ? 0 : -1));
        if (r10 == 0) goto L_0x009f;
    L_0x0023:
        r2 = r0.groupedMessagesMap;
        r3 = r23.getGroupId();
        r2 = r2.get(r3);
        r2 = (org.telegram.messenger.MessageObject.GroupedMessages) r2;
        if (r2 == 0) goto L_0x009e;
    L_0x0031:
        r3 = 0;
        r4 = 0;
        r8 = 0;
    L_0x0034:
        r9 = r2.messages;
        r9 = r9.size();
        if (r3 >= r9) goto L_0x0057;
    L_0x003c:
        r9 = r2.messages;
        r9 = r9.get(r3);
        r9 = (org.telegram.messenger.MessageObject) r9;
        r10 = r0.selectedMessagesIds;
        r10 = r10[r7];
        r9 = r9.getId();
        r9 = r10.indexOfKey(r9);
        if (r9 >= 0) goto L_0x0054;
    L_0x0052:
        r4 = r3;
        r8 = 1;
    L_0x0054:
        r3 = r3 + 1;
        goto L_0x0034;
    L_0x0057:
        r3 = 0;
    L_0x0058:
        r9 = r2.messages;
        r9 = r9.size();
        if (r3 >= r9) goto L_0x009e;
    L_0x0060:
        r9 = r2.messages;
        r9 = r9.get(r3);
        r9 = (org.telegram.messenger.MessageObject) r9;
        if (r8 == 0) goto L_0x0081;
    L_0x006a:
        r10 = r0.selectedMessagesIds;
        r10 = r10[r7];
        r11 = r9.getId();
        r10 = r10.indexOfKey(r11);
        if (r10 >= 0) goto L_0x0090;
    L_0x0078:
        if (r3 != r4) goto L_0x007c;
    L_0x007a:
        r10 = 1;
        goto L_0x007d;
    L_0x007c:
        r10 = 0;
    L_0x007d:
        r0.addToSelectedMessages(r9, r5, r10);
        goto L_0x0090;
    L_0x0081:
        r10 = r2.messages;
        r10 = r10.size();
        r10 = r10 - r6;
        if (r3 != r10) goto L_0x008c;
    L_0x008a:
        r10 = 1;
        goto L_0x008d;
    L_0x008c:
        r10 = 0;
    L_0x008d:
        r0.addToSelectedMessages(r9, r5, r10);
    L_0x0090:
        r9 = r9.caption;
        r9 = android.text.TextUtils.isEmpty(r9);
        if (r9 != 0) goto L_0x009b;
    L_0x0098:
        r22.showTextSelectionHint(r23);
    L_0x009b:
        r3 = r3 + 1;
        goto L_0x0058;
    L_0x009e:
        return;
    L_0x009f:
        r8 = r0.selectedMessagesIds;
        r8 = r8[r7];
        r9 = r23.getId();
        r8 = r8.indexOfKey(r9);
        if (r8 < 0) goto L_0x012d;
    L_0x00ad:
        r8 = r0.selectedMessagesIds;
        r8 = r8[r7];
        r9 = r23.getId();
        r8.remove(r9);
        r8 = r1.type;
        if (r8 == 0) goto L_0x00c6;
    L_0x00bc:
        r8 = r23.isAnimatedEmoji();
        if (r8 != 0) goto L_0x00c6;
    L_0x00c2:
        r8 = r1.caption;
        if (r8 == 0) goto L_0x00d1;
    L_0x00c6:
        r8 = r0.selectedMessagesCanCopyIds;
        r8 = r8[r7];
        r9 = r23.getId();
        r8.remove(r9);
    L_0x00d1:
        r8 = r23.isAnimatedEmoji();
        if (r8 != 0) goto L_0x00f8;
    L_0x00d7:
        r8 = r23.isSticker();
        if (r8 != 0) goto L_0x00e3;
    L_0x00dd:
        r8 = r23.isAnimatedSticker();
        if (r8 == 0) goto L_0x00f8;
    L_0x00e3:
        r8 = r23.getDocument();
        r8 = org.telegram.messenger.MessageObject.isStickerHasSet(r8);
        if (r8 == 0) goto L_0x00f8;
    L_0x00ed:
        r8 = r0.selectedMessagesCanStarIds;
        r7 = r8[r7];
        r8 = r23.getId();
        r7.remove(r8);
    L_0x00f8:
        r7 = r0.currentChat;
        r7 = r1.canEditMessage(r7);
        if (r7 == 0) goto L_0x0105;
    L_0x0100:
        r7 = r0.canEditMessagesCount;
        r7 = r7 - r6;
        r0.canEditMessagesCount = r7;
    L_0x0105:
        r7 = r0.inScheduleMode;
        r8 = r0.currentChat;
        r7 = r1.canDeleteMessage(r7, r8);
        if (r7 != 0) goto L_0x0114;
    L_0x010f:
        r7 = r0.cantDeleteMessagesCount;
        r7 = r7 - r6;
        r0.cantDeleteMessagesCount = r7;
    L_0x0114:
        r7 = r0.inScheduleMode;
        if (r7 != 0) goto L_0x0126;
    L_0x0118:
        r1 = r23.canForwardMessage();
        if (r1 != 0) goto L_0x011f;
    L_0x011e:
        goto L_0x0126;
    L_0x011f:
        r1 = r0.canForwardMessagesCount;
        r1 = r1 - r6;
        r0.canForwardMessagesCount = r1;
        goto L_0x01c5;
    L_0x0126:
        r1 = r0.cantForwardMessagesCount;
        r1 = r1 - r6;
        r0.cantForwardMessagesCount = r1;
        goto L_0x01c5;
    L_0x012d:
        r8 = r0.selectedMessagesIds;
        r8 = r8[r5];
        r8 = r8.size();
        r9 = r0.selectedMessagesIds;
        r9 = r9[r6];
        r9 = r9.size();
        r8 = r8 + r9;
        r9 = 100;
        if (r8 < r9) goto L_0x0143;
    L_0x0142:
        return;
    L_0x0143:
        r8 = r0.selectedMessagesIds;
        r8 = r8[r7];
        r9 = r23.getId();
        r8.put(r9, r1);
        r8 = r1.type;
        if (r8 == 0) goto L_0x015c;
    L_0x0152:
        r8 = r23.isAnimatedEmoji();
        if (r8 != 0) goto L_0x015c;
    L_0x0158:
        r8 = r1.caption;
        if (r8 == 0) goto L_0x0167;
    L_0x015c:
        r8 = r0.selectedMessagesCanCopyIds;
        r8 = r8[r7];
        r9 = r23.getId();
        r8.put(r9, r1);
    L_0x0167:
        r8 = r23.isAnimatedEmoji();
        if (r8 != 0) goto L_0x018e;
    L_0x016d:
        r8 = r23.isSticker();
        if (r8 != 0) goto L_0x0179;
    L_0x0173:
        r8 = r23.isAnimatedSticker();
        if (r8 == 0) goto L_0x018e;
    L_0x0179:
        r8 = r23.getDocument();
        r8 = org.telegram.messenger.MessageObject.isStickerHasSet(r8);
        if (r8 == 0) goto L_0x018e;
    L_0x0183:
        r8 = r0.selectedMessagesCanStarIds;
        r7 = r8[r7];
        r8 = r23.getId();
        r7.put(r8, r1);
    L_0x018e:
        r7 = r0.currentChat;
        r7 = r1.canEditMessage(r7);
        if (r7 == 0) goto L_0x019b;
    L_0x0196:
        r7 = r0.canEditMessagesCount;
        r7 = r7 + r6;
        r0.canEditMessagesCount = r7;
    L_0x019b:
        r7 = r0.inScheduleMode;
        r8 = r0.currentChat;
        r7 = r1.canDeleteMessage(r7, r8);
        if (r7 != 0) goto L_0x01aa;
    L_0x01a5:
        r7 = r0.cantDeleteMessagesCount;
        r7 = r7 + r6;
        r0.cantDeleteMessagesCount = r7;
    L_0x01aa:
        r7 = r0.inScheduleMode;
        if (r7 != 0) goto L_0x01bb;
    L_0x01ae:
        r7 = r23.canForwardMessage();
        if (r7 != 0) goto L_0x01b5;
    L_0x01b4:
        goto L_0x01bb;
    L_0x01b5:
        r7 = r0.canForwardMessagesCount;
        r7 = r7 + r6;
        r0.canForwardMessagesCount = r7;
        goto L_0x01c0;
    L_0x01bb:
        r7 = r0.cantForwardMessagesCount;
        r7 = r7 + r6;
        r0.cantForwardMessagesCount = r7;
    L_0x01c0:
        if (r24 == 0) goto L_0x01c5;
    L_0x01c2:
        r22.showTextSelectionHint(r23);
    L_0x01c5:
        r1 = r0.forwardButtonAnimation;
        if (r1 == 0) goto L_0x01cf;
    L_0x01c9:
        r1.cancel();
        r1 = 0;
        r0.forwardButtonAnimation = r1;
    L_0x01cf:
        if (r25 == 0) goto L_0x055b;
    L_0x01d1:
        r1 = r0.actionBar;
        r1 = r1.isActionModeShowed();
        if (r1 == 0) goto L_0x055b;
    L_0x01d9:
        r1 = r0.selectedMessagesIds;
        r1 = r1[r5];
        r1 = r1.size();
        r7 = r0.selectedMessagesIds;
        r7 = r7[r6];
        r7 = r7.size();
        r1 = r1 + r7;
        if (r1 != 0) goto L_0x01f4;
    L_0x01ec:
        r22.hideActionMode();
        r0.updatePinnedMessageView(r6);
        goto L_0x055b;
    L_0x01f4:
        r7 = r0.actionBar;
        r7 = r7.createActionMode();
        r8 = 10;
        r7 = r7.getItem(r8);
        r8 = r0.actionBar;
        r8 = r8.createActionMode();
        r9 = 22;
        r8 = r8.getItem(r9);
        r9 = r0.actionBar;
        r9 = r9.createActionMode();
        r10 = 23;
        r9 = r9.getItem(r10);
        r10 = r0.actionBar;
        r10 = r10.createActionMode();
        r11 = 11;
        r10 = r10.getItem(r11);
        r11 = 100;
        if (r2 != 0) goto L_0x022c;
    L_0x0228:
        r15 = r0.cantForwardMessagesCount;
        if (r15 != 0) goto L_0x0232;
    L_0x022c:
        if (r2 == 0) goto L_0x02a0;
    L_0x022e:
        r2 = r0.cantForwardMessagesCount;
        if (r2 != 0) goto L_0x02a0;
    L_0x0232:
        r2 = new android.animation.AnimatorSet;
        r2.<init>();
        r0.forwardButtonAnimation = r2;
        r2 = new java.util.ArrayList;
        r2.<init>();
        if (r10 == 0) goto L_0x0260;
    L_0x0240:
        r15 = r0.cantForwardMessagesCount;
        if (r15 != 0) goto L_0x0246;
    L_0x0244:
        r15 = 1;
        goto L_0x0247;
    L_0x0246:
        r15 = 0;
    L_0x0247:
        r10.setEnabled(r15);
        r15 = android.view.View.ALPHA;
        r13 = new float[r6];
        r14 = r0.cantForwardMessagesCount;
        if (r14 != 0) goto L_0x0255;
    L_0x0252:
        r14 = NUM; // 0x3var_ float:1.0 double:5.263544247E-315;
        goto L_0x0257;
    L_0x0255:
        r14 = NUM; // 0x3var_ float:0.5 double:5.222099017E-315;
    L_0x0257:
        r13[r5] = r14;
        r10 = android.animation.ObjectAnimator.ofFloat(r10, r15, r13);
        r2.add(r10);
    L_0x0260:
        r10 = r0.forwardButton;
        if (r10 == 0) goto L_0x0286;
    L_0x0264:
        r13 = r0.cantForwardMessagesCount;
        if (r13 != 0) goto L_0x026a;
    L_0x0268:
        r13 = 1;
        goto L_0x026b;
    L_0x026a:
        r13 = 0;
    L_0x026b:
        r10.setEnabled(r13);
        r10 = r0.forwardButton;
        r13 = android.view.View.ALPHA;
        r14 = new float[r6];
        r15 = r0.cantForwardMessagesCount;
        if (r15 != 0) goto L_0x027b;
    L_0x0278:
        r15 = NUM; // 0x3var_ float:1.0 double:5.263544247E-315;
        goto L_0x027d;
    L_0x027b:
        r15 = NUM; // 0x3var_ float:0.5 double:5.222099017E-315;
    L_0x027d:
        r14[r5] = r15;
        r10 = android.animation.ObjectAnimator.ofFloat(r10, r13, r14);
        r2.add(r10);
    L_0x0286:
        r10 = r0.forwardButtonAnimation;
        r10.playTogether(r2);
        r2 = r0.forwardButtonAnimation;
        r2.setDuration(r11);
        r2 = r0.forwardButtonAnimation;
        r10 = new org.telegram.ui.ChatActivity$57;
        r10.<init>();
        r2.addListener(r10);
        r2 = r0.forwardButtonAnimation;
        r2.start();
        goto L_0x02d4;
    L_0x02a0:
        if (r10 == 0) goto L_0x02b8;
    L_0x02a2:
        r2 = r0.cantForwardMessagesCount;
        if (r2 != 0) goto L_0x02a8;
    L_0x02a6:
        r2 = 1;
        goto L_0x02a9;
    L_0x02a8:
        r2 = 0;
    L_0x02a9:
        r10.setEnabled(r2);
        r2 = r0.cantForwardMessagesCount;
        if (r2 != 0) goto L_0x02b3;
    L_0x02b0:
        r2 = NUM; // 0x3var_ float:1.0 double:5.263544247E-315;
        goto L_0x02b5;
    L_0x02b3:
        r2 = NUM; // 0x3var_ float:0.5 double:5.222099017E-315;
    L_0x02b5:
        r10.setAlpha(r2);
    L_0x02b8:
        r2 = r0.forwardButton;
        if (r2 == 0) goto L_0x02d4;
    L_0x02bc:
        r10 = r0.cantForwardMessagesCount;
        if (r10 != 0) goto L_0x02c2;
    L_0x02c0:
        r10 = 1;
        goto L_0x02c3;
    L_0x02c2:
        r10 = 0;
    L_0x02c3:
        r2.setEnabled(r10);
        r2 = r0.forwardButton;
        r10 = r0.cantForwardMessagesCount;
        if (r10 != 0) goto L_0x02cf;
    L_0x02cc:
        r10 = NUM; // 0x3var_ float:1.0 double:5.263544247E-315;
        goto L_0x02d1;
    L_0x02cf:
        r10 = NUM; // 0x3var_ float:0.5 double:5.222099017E-315;
    L_0x02d1:
        r2.setAlpha(r10);
    L_0x02d4:
        r2 = r7.getVisibility();
        r10 = r8.getVisibility();
        r13 = r0.selectedMessagesCanCopyIds;
        r13 = r13[r5];
        r13 = r13.size();
        r14 = r0.selectedMessagesCanCopyIds;
        r14 = r14[r6];
        r14 = r14.size();
        r13 = r13 + r14;
        if (r13 == 0) goto L_0x02f1;
    L_0x02ef:
        r13 = 0;
        goto L_0x02f3;
    L_0x02f1:
        r13 = 8;
    L_0x02f3:
        r7.setVisibility(r13);
        r13 = r22.getMediaDataController();
        r13 = r13.canAddStickerToFavorites();
        if (r13 == 0) goto L_0x0315;
    L_0x0300:
        r13 = r0.selectedMessagesCanStarIds;
        r13 = r13[r5];
        r13 = r13.size();
        r15 = r0.selectedMessagesCanStarIds;
        r15 = r15[r6];
        r15 = r15.size();
        r13 = r13 + r15;
        if (r13 != r1) goto L_0x0315;
    L_0x0313:
        r13 = 0;
        goto L_0x0317;
    L_0x0315:
        r13 = 8;
    L_0x0317:
        r8.setVisibility(r13);
        r7 = r7.getVisibility();
        r13 = r8.getVisibility();
        r15 = r0.actionBar;
        r15 = r15.createActionMode();
        r11 = 12;
        r11 = r15.getItem(r11);
        r12 = r0.cantDeleteMessagesCount;
        if (r12 != 0) goto L_0x0334;
    L_0x0332:
        r12 = 0;
        goto L_0x0336;
    L_0x0334:
        r12 = 8;
    L_0x0336:
        r11.setVisibility(r12);
        r0.hasUnfavedSelected = r5;
        r11 = 0;
    L_0x033c:
        r12 = 2;
        if (r11 >= r12) goto L_0x0374;
    L_0x033f:
        r15 = 0;
    L_0x0340:
        r14 = r0.selectedMessagesCanStarIds;
        r14 = r14[r11];
        r14 = r14.size();
        if (r15 >= r14) goto L_0x036a;
    L_0x034a:
        r14 = r0.selectedMessagesCanStarIds;
        r14 = r14[r11];
        r14 = r14.valueAt(r15);
        r14 = (org.telegram.messenger.MessageObject) r14;
        r3 = r22.getMediaDataController();
        r4 = r14.getDocument();
        r3 = r3.isStickerInFavorites(r4);
        if (r3 != 0) goto L_0x0365;
    L_0x0362:
        r0.hasUnfavedSelected = r6;
        goto L_0x036a;
    L_0x0365:
        r15 = r15 + 1;
        r3 = 0;
        goto L_0x0340;
    L_0x036a:
        r3 = r0.hasUnfavedSelected;
        if (r3 == 0) goto L_0x036f;
    L_0x036e:
        goto L_0x0374;
    L_0x036f:
        r11 = r11 + 1;
        r3 = 0;
        goto L_0x033c;
    L_0x0374:
        r3 = r0.hasUnfavedSelected;
        if (r3 == 0) goto L_0x037c;
    L_0x0378:
        r3 = NUM; // 0x7var_d1 float:1.7945521E38 double:1.052935733E-314;
        goto L_0x037f;
    L_0x037c:
        r3 = NUM; // 0x7var_ float:1.794563E38 double:1.0529357594E-314;
    L_0x037f:
        r8.setIcon(r3);
        r3 = r0.canEditMessagesCount;
        if (r3 != r6) goto L_0x038a;
    L_0x0386:
        if (r1 != r6) goto L_0x038a;
    L_0x0388:
        r3 = 0;
        goto L_0x038c;
    L_0x038a:
        r3 = 8;
    L_0x038c:
        r4 = r0.replyButton;
        if (r4 == 0) goto L_0x04ba;
    L_0x0390:
        r4 = r0.currentEncryptedChat;
        if (r4 == 0) goto L_0x039e;
    L_0x0394:
        r4 = r4.layer;
        r4 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r4);
        r11 = 46;
        if (r4 < r11) goto L_0x03d0;
    L_0x039e:
        r4 = r0.bottomOverlayChat;
        if (r4 == 0) goto L_0x03a8;
    L_0x03a2:
        r4 = r4.getVisibility();
        if (r4 == 0) goto L_0x03d0;
    L_0x03a8:
        r4 = r0.currentChat;
        if (r4 == 0) goto L_0x03d2;
    L_0x03ac:
        r4 = org.telegram.messenger.ChatObject.isNotInChat(r4);
        if (r4 != 0) goto L_0x03d0;
    L_0x03b2:
        r4 = r0.currentChat;
        r4 = org.telegram.messenger.ChatObject.isChannel(r4);
        if (r4 == 0) goto L_0x03c8;
    L_0x03ba:
        r4 = r0.currentChat;
        r4 = org.telegram.messenger.ChatObject.canPost(r4);
        if (r4 != 0) goto L_0x03c8;
    L_0x03c2:
        r4 = r0.currentChat;
        r4 = r4.megagroup;
        if (r4 == 0) goto L_0x03d0;
    L_0x03c8:
        r4 = r0.currentChat;
        r4 = org.telegram.messenger.ChatObject.canSendMessages(r4);
        if (r4 != 0) goto L_0x03d2;
    L_0x03d0:
        r4 = 0;
        goto L_0x03d3;
    L_0x03d2:
        r4 = 1;
    L_0x03d3:
        r11 = r0.inScheduleMode;
        if (r11 != 0) goto L_0x0438;
    L_0x03d7:
        if (r4 == 0) goto L_0x0438;
    L_0x03d9:
        if (r1 == 0) goto L_0x0438;
    L_0x03db:
        r4 = r0.selectedMessagesIds;
        r4 = r4[r5];
        r4 = r4.size();
        if (r4 == 0) goto L_0x03f0;
    L_0x03e5:
        r4 = r0.selectedMessagesIds;
        r4 = r4[r6];
        r4 = r4.size();
        if (r4 == 0) goto L_0x03f0;
    L_0x03ef:
        goto L_0x0438;
    L_0x03f0:
        if (r1 != r6) goto L_0x03f4;
    L_0x03f2:
        r4 = 0;
        goto L_0x043c;
    L_0x03f4:
        r1 = 0;
        r4 = 0;
        r14 = 0;
    L_0x03f8:
        if (r1 >= r12) goto L_0x043c;
    L_0x03fa:
        r11 = r0.selectedMessagesIds;
        r11 = r11[r1];
        r11 = r11.size();
        r18 = r14;
        r14 = 0;
    L_0x0405:
        if (r14 >= r11) goto L_0x042c;
    L_0x0407:
        r15 = r0.selectedMessagesIds;
        r15 = r15[r1];
        r15 = r15.valueAt(r14);
        r15 = (org.telegram.messenger.MessageObject) r15;
        r20 = r15.getGroupId();
        r16 = 0;
        r15 = (r20 > r16 ? 1 : (r20 == r16 ? 0 : -1));
        if (r15 == 0) goto L_0x0429;
    L_0x041b:
        r15 = (r18 > r16 ? 1 : (r18 == r16 ? 0 : -1));
        if (r15 == 0) goto L_0x0424;
    L_0x041f:
        r15 = (r18 > r20 ? 1 : (r18 == r20 ? 0 : -1));
        if (r15 == 0) goto L_0x0424;
    L_0x0423:
        goto L_0x0429;
    L_0x0424:
        r14 = r14 + 1;
        r18 = r20;
        goto L_0x0405;
    L_0x0429:
        r4 = 8;
        goto L_0x042e;
    L_0x042c:
        r16 = 0;
    L_0x042e:
        r11 = 8;
        if (r4 != r11) goto L_0x0433;
    L_0x0432:
        goto L_0x043c;
    L_0x0433:
        r1 = r1 + 1;
        r14 = r18;
        goto L_0x03f8;
    L_0x0438:
        r11 = 8;
        r4 = 8;
    L_0x043c:
        r1 = r0.replyButton;
        r1 = r1.getVisibility();
        if (r1 == r4) goto L_0x04ba;
    L_0x0444:
        r1 = r0.replyButtonAnimation;
        if (r1 == 0) goto L_0x044b;
    L_0x0448:
        r1.cancel();
    L_0x044b:
        r1 = new android.animation.AnimatorSet;
        r1.<init>();
        r0.replyButtonAnimation = r1;
        if (r4 != 0) goto L_0x047f;
    L_0x0454:
        r1 = r0.replyButton;
        r1.setVisibility(r4);
        r1 = r0.replyButtonAnimation;
        r11 = new android.animation.Animator[r12];
        r14 = r0.replyButton;
        r15 = android.view.View.ALPHA;
        r8 = new float[r6];
        r16 = NUM; // 0x3var_ float:1.0 double:5.263544247E-315;
        r8[r5] = r16;
        r8 = android.animation.ObjectAnimator.ofFloat(r14, r15, r8);
        r11[r5] = r8;
        r8 = r0.replyButton;
        r14 = android.view.View.SCALE_Y;
        r15 = new float[r6];
        r15[r5] = r16;
        r8 = android.animation.ObjectAnimator.ofFloat(r8, r14, r15);
        r11[r6] = r8;
        r1.playTogether(r11);
        goto L_0x04a4;
    L_0x047f:
        r1 = r0.replyButtonAnimation;
        r8 = new android.animation.Animator[r12];
        r11 = r0.replyButton;
        r14 = android.view.View.ALPHA;
        r15 = new float[r6];
        r16 = 0;
        r15[r5] = r16;
        r11 = android.animation.ObjectAnimator.ofFloat(r11, r14, r15);
        r8[r5] = r11;
        r11 = r0.replyButton;
        r14 = android.view.View.SCALE_Y;
        r15 = new float[r6];
        r15[r5] = r16;
        r11 = android.animation.ObjectAnimator.ofFloat(r11, r14, r15);
        r8[r6] = r11;
        r1.playTogether(r8);
    L_0x04a4:
        r1 = r0.replyButtonAnimation;
        r14 = 100;
        r1.setDuration(r14);
        r1 = r0.replyButtonAnimation;
        r8 = new org.telegram.ui.ChatActivity$58;
        r8.<init>(r4);
        r1.addListener(r8);
        r1 = r0.replyButtonAnimation;
        r1.start();
    L_0x04ba:
        if (r9 == 0) goto L_0x055b;
    L_0x04bc:
        if (r2 != r7) goto L_0x0546;
    L_0x04be:
        if (r10 == r13) goto L_0x04c2;
    L_0x04c0:
        goto L_0x0546;
    L_0x04c2:
        r1 = r9.getVisibility();
        if (r1 == r3) goto L_0x055b;
    L_0x04c8:
        r1 = r0.editButtonAnimation;
        if (r1 == 0) goto L_0x04cf;
    L_0x04cc:
        r1.cancel();
    L_0x04cf:
        r1 = new android.animation.AnimatorSet;
        r1.<init>();
        r0.editButtonAnimation = r1;
        r1 = NUM; // 0x42580000 float:54.0 double:5.499263994E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r1);
        r2 = (float) r2;
        r9.setPivotX(r2);
        r1 = org.telegram.messenger.AndroidUtilities.dp(r1);
        r1 = (float) r1;
        r9.setPivotX(r1);
        if (r3 != 0) goto L_0x050f;
    L_0x04ea:
        r9.setVisibility(r3);
        r1 = r0.editButtonAnimation;
        r2 = new android.animation.Animator[r12];
        r4 = android.view.View.ALPHA;
        r7 = new float[r6];
        r8 = NUM; // 0x3var_ float:1.0 double:5.263544247E-315;
        r7[r5] = r8;
        r4 = android.animation.ObjectAnimator.ofFloat(r9, r4, r7);
        r2[r5] = r4;
        r4 = android.view.View.SCALE_X;
        r7 = new float[r6];
        r7[r5] = r8;
        r4 = android.animation.ObjectAnimator.ofFloat(r9, r4, r7);
        r2[r6] = r4;
        r1.playTogether(r2);
        goto L_0x052f;
    L_0x050f:
        r1 = r0.editButtonAnimation;
        r2 = new android.animation.Animator[r12];
        r4 = android.view.View.ALPHA;
        r7 = new float[r6];
        r8 = 0;
        r7[r5] = r8;
        r4 = android.animation.ObjectAnimator.ofFloat(r9, r4, r7);
        r2[r5] = r4;
        r4 = android.view.View.SCALE_X;
        r7 = new float[r6];
        r7[r5] = r8;
        r4 = android.animation.ObjectAnimator.ofFloat(r9, r4, r7);
        r2[r6] = r4;
        r1.playTogether(r2);
    L_0x052f:
        r1 = r0.editButtonAnimation;
        r4 = 100;
        r1.setDuration(r4);
        r1 = r0.editButtonAnimation;
        r2 = new org.telegram.ui.ChatActivity$59;
        r2.<init>(r3, r9);
        r1.addListener(r2);
        r1 = r0.editButtonAnimation;
        r1.start();
        goto L_0x055b;
    L_0x0546:
        if (r3 != 0) goto L_0x0551;
    L_0x0548:
        r1 = NUM; // 0x3var_ float:1.0 double:5.263544247E-315;
        r9.setAlpha(r1);
        r9.setScaleX(r1);
        goto L_0x0558;
    L_0x0551:
        r1 = 0;
        r9.setAlpha(r1);
        r9.setScaleX(r1);
    L_0x0558:
        r9.setVisibility(r3);
    L_0x055b:
        return;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.addToSelectedMessages(org.telegram.messenger.MessageObject, boolean, boolean):void");
    }

    private void processRowSelect(View view, boolean z, float f, float f2) {
        MessageObject messageObject;
        if (view instanceof ChatMessageCell) {
            ChatMessageCell chatMessageCell = (ChatMessageCell) view;
            messageObject = chatMessageCell.getMessageObject();
            chatMessageCell.setLastTouchCoords(f, f2);
        } else {
            messageObject = view instanceof ChatActionCell ? ((ChatActionCell) view).getMessageObject() : null;
        }
        int messageType = getMessageType(messageObject);
        if (messageType >= 2 && messageType != 20) {
            addToSelectedMessages(messageObject, z);
            updateActionModeTitle();
            updateVisibleRows();
        }
    }

    private void updateActionModeTitle() {
        if (this.actionBar.isActionModeShowed()) {
            if (!(this.selectedMessagesIds[0].size() == 0 && this.selectedMessagesIds[1].size() == 0)) {
                this.selectedMessagesCountTextView.setNumber(this.selectedMessagesIds[0].size() + this.selectedMessagesIds[1].size(), true);
            }
        }
    }

    private void updateTitle() {
        ChatAvatarContainer chatAvatarContainer = this.avatarContainer;
        if (chatAvatarContainer != null) {
            if (!this.inScheduleMode) {
                Chat chat = this.currentChat;
                if (chat != null) {
                    chatAvatarContainer.setTitle(chat.title, chat.scam);
                } else {
                    User user = this.currentUser;
                    if (user != null) {
                        if (user.self) {
                            chatAvatarContainer.setTitle(LocaleController.getString("SavedMessages", NUM));
                        } else if (MessagesController.isSupportUser(user) || getContactsController().contactsDict.get(Integer.valueOf(this.currentUser.id)) != null || (getContactsController().contactsDict.size() == 0 && getContactsController().isLoadingContacts())) {
                            this.avatarContainer.setTitle(UserObject.getUserName(this.currentUser), this.currentUser.scam);
                        } else if (TextUtils.isEmpty(this.currentUser.phone)) {
                            this.avatarContainer.setTitle(UserObject.getUserName(this.currentUser), this.currentUser.scam);
                        } else {
                            chatAvatarContainer = this.avatarContainer;
                            PhoneFormat instance = PhoneFormat.getInstance();
                            StringBuilder stringBuilder = new StringBuilder();
                            stringBuilder.append("+");
                            stringBuilder.append(this.currentUser.phone);
                            chatAvatarContainer.setTitle(instance.format(stringBuilder.toString()));
                        }
                    }
                }
            } else if (UserObject.isUserSelf(this.currentUser)) {
                this.avatarContainer.setTitle(LocaleController.getString("Reminders", NUM));
            } else {
                this.avatarContainer.setTitle(LocaleController.getString("ScheduledMessages", NUM));
            }
            setParentActivityTitle(this.avatarContainer.getTitleTextView().getText());
        }
    }

    private void updateBotButtons() {
        if (this.headerItem != null) {
            User user = this.currentUser;
            if (user != null && this.currentEncryptedChat == null && user.bot) {
                Object obj;
                Object obj2 = null;
                if (this.botInfo.size() != 0) {
                    Object obj3 = null;
                    obj = null;
                    for (int i = 0; i < this.botInfo.size(); i++) {
                        BotInfo botInfo = (BotInfo) this.botInfo.valueAt(i);
                        Object obj4 = obj3;
                        for (int i2 = 0; i2 < botInfo.commands.size(); i2++) {
                            TL_botCommand tL_botCommand = (TL_botCommand) botInfo.commands.get(i2);
                            if (tL_botCommand.command.toLowerCase().equals("help")) {
                                obj4 = 1;
                            } else if (tL_botCommand.command.toLowerCase().equals("settings")) {
                                obj = 1;
                            }
                            if (obj != null && r5 != null) {
                                break;
                            }
                        }
                        obj3 = obj4;
                    }
                    obj2 = obj3;
                } else {
                    obj = null;
                }
                if (obj2 != null) {
                    this.headerItem.showSubItem(30);
                } else {
                    this.headerItem.hideSubItem(30);
                }
                if (obj != null) {
                    this.headerItem.showSubItem(31);
                } else {
                    this.headerItem.hideSubItem(31);
                }
            }
        }
    }

    private void updateTitleIcons() {
        if (this.avatarContainer != null && !this.inScheduleMode) {
            Drawable drawable = null;
            Drawable drawable2 = getMessagesController().isDialogMuted(this.dialog_id) ? Theme.chat_muteIconDrawable : null;
            ChatAvatarContainer chatAvatarContainer = this.avatarContainer;
            if (this.currentEncryptedChat != null) {
                drawable = Theme.chat_lockIconDrawable;
            }
            chatAvatarContainer.setTitleIcons(drawable, drawable2);
            ActionBarMenuSubItem actionBarMenuSubItem = this.muteItem;
            if (actionBarMenuSubItem == null) {
                return;
            }
            if (drawable2 != null) {
                actionBarMenuSubItem.setTextAndIcon(LocaleController.getString("UnmuteNotifications", NUM), NUM);
            } else {
                actionBarMenuSubItem.setTextAndIcon(LocaleController.getString("MuteNotifications", NUM), NUM);
            }
        }
    }

    private void checkAndUpdateAvatar() {
        if (this.currentUser != null) {
            User user = getMessagesController().getUser(Integer.valueOf(this.currentUser.id));
            if (user != null) {
                this.currentUser = user;
            } else {
                return;
            }
        } else if (this.currentChat != null) {
            Chat chat = getMessagesController().getChat(Integer.valueOf(this.currentChat.id));
            if (chat != null) {
                this.currentChat = chat;
            } else {
                return;
            }
        }
        ChatAvatarContainer chatAvatarContainer = this.avatarContainer;
        if (chatAvatarContainer != null) {
            chatAvatarContainer.checkAndUpdateAvatar();
        }
    }

    public void openVideoEditor(String str, String str2) {
        String str3 = str2;
        if (getParentActivity() != null) {
            final Bitmap createVideoThumbnail = ThumbnailUtils.createVideoThumbnail(str, 1);
            PhotoViewer.getInstance().setParentActivity(getParentActivity());
            final ArrayList arrayList = new ArrayList();
            PhotoEntry photoEntry = new PhotoEntry(0, 0, 0, str, 0, true, 0, 0, 0);
            photoEntry.caption = str3;
            arrayList.add(photoEntry);
            PhotoViewer.getInstance().openPhotoForSelect(arrayList, 0, 2, false, new EmptyPhotoViewerProvider() {
                public boolean canScrollAway() {
                    return false;
                }

                public BitmapHolder getThumbForPhoto(MessageObject messageObject, FileLocation fileLocation, int i) {
                    return new BitmapHolder(createVideoThumbnail, null);
                }

                public void sendButtonPressed(int i, VideoEditedInfo videoEditedInfo, boolean z, int i2) {
                    ChatActivity.this.sendMedia((PhotoEntry) arrayList.get(0), videoEditedInfo, z, i2);
                }
            }, this);
            return;
        }
        String str4 = str;
        fillEditingMediaWithCaption(str3, null);
        SendMessagesHelper.prepareSendingVideo(getAccountInstance(), str, 0, 0, 0, 0, null, this.dialog_id, this.replyingMessageObject, null, null, 0, this.editingMessageObject, true, 0);
        afterMessageSend();
    }

    private void showAttachmentError() {
        if (getParentActivity() != null) {
            Toast.makeText(getParentActivity(), LocaleController.getString("UnsupportedAttachment", NUM), 0).show();
        }
    }

    private void fillEditingMediaWithCaption(CharSequence charSequence, ArrayList<MessageEntity> arrayList) {
        if (this.editingMessageObject != null) {
            if (TextUtils.isEmpty(charSequence)) {
                ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
                if (chatActivityEnterView != null) {
                    this.editingMessageObject.editingMessage = chatActivityEnterView.getFieldText();
                    MessageObject messageObject = this.editingMessageObject;
                    if (messageObject.editingMessage == null && !TextUtils.isEmpty(messageObject.messageOwner.message)) {
                        this.editingMessageObject.editingMessage = "";
                    }
                }
            } else {
                MessageObject messageObject2 = this.editingMessageObject;
                messageObject2.editingMessage = charSequence;
                messageObject2.editingMessageEntities = arrayList;
            }
        }
    }

    /* JADX WARNING: Removed duplicated region for block: B:15:0x004c  */
    /* JADX WARNING: Removed duplicated region for block: B:14:0x003f  */
    /* JADX WARNING: Removed duplicated region for block: B:19:0x0054  */
    /* JADX WARNING: Removed duplicated region for block: B:17:0x0050  */
    private void sendUriAsDocument(android.net.Uri r18) {
        /*
        r17 = this;
        r1 = r17;
        if (r18 != 0) goto L_0x0005;
    L_0x0004:
        return;
    L_0x0005:
        r0 = r18.toString();
        r2 = "com.google.android.apps.photos.contentprovider";
        r2 = r0.contains(r2);
        r3 = 0;
        if (r2 == 0) goto L_0x0037;
    L_0x0012:
        r2 = "/1/";
        r0 = r0.split(r2);	 Catch:{ Exception -> 0x0033 }
        r2 = 1;
        r0 = r0[r2];	 Catch:{ Exception -> 0x0033 }
        r2 = "/ACTUAL";
        r2 = r0.indexOf(r2);	 Catch:{ Exception -> 0x0033 }
        r4 = -1;
        if (r2 == r4) goto L_0x0037;
    L_0x0024:
        r0 = r0.substring(r3, r2);	 Catch:{ Exception -> 0x0033 }
        r2 = "UTF-8";
        r0 = java.net.URLDecoder.decode(r0, r2);	 Catch:{ Exception -> 0x0033 }
        r0 = android.net.Uri.parse(r0);	 Catch:{ Exception -> 0x0033 }
        goto L_0x0039;
    L_0x0033:
        r0 = move-exception;
        org.telegram.messenger.FileLog.e(r0);
    L_0x0037:
        r0 = r18;
    L_0x0039:
        r2 = org.telegram.messenger.AndroidUtilities.getPath(r0);
        if (r2 != 0) goto L_0x004c;
    L_0x003f:
        r2 = r0.toString();
        r4 = "file";
        r0 = org.telegram.messenger.MediaController.copyFileToCache(r0, r4);
        r5 = r0;
        r6 = r2;
        goto L_0x004e;
    L_0x004c:
        r5 = r2;
        r6 = r5;
    L_0x004e:
        if (r5 != 0) goto L_0x0054;
    L_0x0050:
        r17.showAttachmentError();
        return;
    L_0x0054:
        r0 = 0;
        r1.fillEditingMediaWithCaption(r0, r0);
        r4 = r17.getAccountInstance();
        r7 = 0;
        r8 = 0;
        r9 = 0;
        r10 = r1.dialog_id;
        r12 = r1.replyingMessageObject;
        r13 = 0;
        r14 = r1.editingMessageObject;
        r15 = 1;
        r16 = 0;
        org.telegram.messenger.SendMessagesHelper.prepareSendingDocument(r4, r5, r6, r7, r8, r9, r10, r12, r13, r14, r15, r16);
        r1.hideFieldPanel(r3);
        return;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.sendUriAsDocument(android.net.Uri):void");
    }

    public void onActivityResultFragment(int i, int i2, Intent intent) {
        int i3 = i;
        Intent intent2 = intent;
        if (i2 == -1) {
            if (i3 == 0 || i3 == 2) {
                createChatAttachView();
                ChatAttachAlert chatAttachAlert = this.chatAttachAlert;
                if (chatAttachAlert != null) {
                    chatAttachAlert.onActivityResultFragment(i3, intent2, this.currentPicturePath);
                }
                this.currentPicturePath = null;
            } else if (i3 == 1) {
                if (intent2 == null || intent.getData() == null) {
                    showAttachmentError();
                    return;
                }
                Uri data = intent.getData();
                if (data.toString().contains("video")) {
                    String path;
                    try {
                        path = AndroidUtilities.getPath(data);
                    } catch (Exception e) {
                        FileLog.e(e);
                        path = null;
                    }
                    if (path == null) {
                        showAttachmentError();
                    }
                    if (this.paused) {
                        this.startVideoEdit = path;
                    } else {
                        openVideoEditor(path, null);
                    }
                } else if (this.editingMessageObject == null && this.inScheduleMode) {
                    AlertsCreator.createScheduleDatePickerDialog(getParentActivity(), this.dialog_id, new -$$Lambda$ChatActivity$cLwEiTlqJZa87mVbyyG4p8nNgks(this, data));
                } else {
                    fillEditingMediaWithCaption(null, null);
                    SendMessagesHelper.prepareSendingPhoto(getAccountInstance(), null, data, this.dialog_id, this.replyingMessageObject, null, null, null, null, 0, this.editingMessageObject, true, 0);
                }
                afterMessageSend();
            } else if (i3 == 21) {
                if (intent2 == null) {
                    showAttachmentError();
                    return;
                }
                if (intent.getData() != null) {
                    sendUriAsDocument(intent.getData());
                } else if (intent.getClipData() != null) {
                    ClipData clipData = intent.getClipData();
                    for (int i4 = 0; i4 < clipData.getItemCount(); i4++) {
                        sendUriAsDocument(clipData.getItemAt(i4).getUri());
                    }
                } else {
                    showAttachmentError();
                }
                afterMessageSend();
            }
        }
    }

    public /* synthetic */ void lambda$onActivityResultFragment$67$ChatActivity(Uri uri, boolean z, int i) {
        fillEditingMediaWithCaption(null, null);
        SendMessagesHelper.prepareSendingPhoto(getAccountInstance(), null, uri, this.dialog_id, this.replyingMessageObject, null, null, null, null, 0, this.editingMessageObject, z, i);
    }

    public void saveSelfArgs(Bundle bundle) {
        String str = this.currentPicturePath;
        if (str != null) {
            bundle.putString("path", str);
        }
    }

    public void restoreSelfArgs(Bundle bundle) {
        this.currentPicturePath = bundle.getString("path");
    }

    private void removeUnreadPlane(boolean z) {
        if (this.unreadMessageObject != null) {
            if (z) {
                boolean[] zArr = this.forwardEndReached;
                zArr[1] = true;
                zArr[0] = true;
                this.first_unread_id = 0;
                this.last_message_id = 0;
            }
            this.createUnreadMessageAfterId = 0;
            this.createUnreadMessageAfterIdLoading = false;
            removeMessageObject(this.unreadMessageObject);
            this.unreadMessageObject = null;
        }
    }

    /* JADX WARNING: Removed duplicated region for block: B:308:0x06be A:{SKIP} */
    /* JADX WARNING: Removed duplicated region for block: B:307:0x06ab  */
    /* JADX WARNING: Removed duplicated region for block: B:316:0x06e0  */
    /* JADX WARNING: Removed duplicated region for block: B:315:0x06da  */
    /* JADX WARNING: Removed duplicated region for block: B:320:0x06ef  */
    /* JADX WARNING: Removed duplicated region for block: B:319:0x06e9  */
    /* JADX WARNING: Removed duplicated region for block: B:501:0x09a7  */
    /* JADX WARNING: Removed duplicated region for block: B:585:0x0af8  */
    /* JADX WARNING: Removed duplicated region for block: B:595:0x0b3d  */
    /* JADX WARNING: Removed duplicated region for block: B:540:0x0a35  */
    /* JADX WARNING: Removed duplicated region for block: B:532:0x0a14  */
    /* JADX WARNING: Removed duplicated region for block: B:543:0x0a3b  */
    /* JADX WARNING: Removed duplicated region for block: B:542:0x0a39  */
    /* JADX WARNING: Removed duplicated region for block: B:546:0x0a52  */
    /* JADX WARNING: Removed duplicated region for block: B:611:0x0b9f  */
    /* JADX WARNING: Removed duplicated region for block: B:616:0x0bab  */
    /* JADX WARNING: Removed duplicated region for block: B:146:0x0323  */
    /* JADX WARNING: Removed duplicated region for block: B:154:0x0347  */
    /* JADX WARNING: Removed duplicated region for block: B:167:0x03a0  */
    /* JADX WARNING: Removed duplicated region for block: B:171:0x03bd  */
    /* JADX WARNING: Removed duplicated region for block: B:170:0x03a7  */
    /* JADX WARNING: Removed duplicated region for block: B:176:0x03c6  */
    /* JADX WARNING: Removed duplicated region for block: B:174:0x03c2  */
    /* JADX WARNING: Removed duplicated region for block: B:183:0x03e2  */
    /* JADX WARNING: Removed duplicated region for block: B:198:0x0421  */
    /* JADX WARNING: Removed duplicated region for block: B:434:0x08c0  */
    /* JADX WARNING: Removed duplicated region for block: B:445:0x08e2  */
    /* JADX WARNING: Removed duplicated region for block: B:442:0x08d6  */
    /* JADX WARNING: Removed duplicated region for block: B:483:0x097d  */
    /* JADX WARNING: Removed duplicated region for block: B:447:0x08e6  */
    /* JADX WARNING: Removed duplicated region for block: B:623:0x0bc0  */
    /* JADX WARNING: Removed duplicated region for block: B:668:0x0CLASSNAME  */
    /* JADX WARNING: Removed duplicated region for block: B:676:0x0cad  */
    /* JADX WARNING: Removed duplicated region for block: B:679:0x0cb9  */
    /* JADX WARNING: Removed duplicated region for block: B:1026:0x1252  */
    /* JADX WARNING: Removed duplicated region for block: B:1252:0x16df  */
    /* JADX WARNING: Removed duplicated region for block: B:1156:0x149c  */
    /* JADX WARNING: Removed duplicated region for block: B:1155:0x149a  */
    /* JADX WARNING: Removed duplicated region for block: B:1169:0x14d7  */
    /* JADX WARNING: Removed duplicated region for block: B:1188:0x152f  */
    /* JADX WARNING: Removed duplicated region for block: B:2593:0x1516 A:{SYNTHETIC} */
    /* JADX WARNING: Removed duplicated region for block: B:1152:0x1495  */
    /* JADX WARNING: Removed duplicated region for block: B:1148:0x147c  */
    /* JADX WARNING: Removed duplicated region for block: B:1155:0x149a  */
    /* JADX WARNING: Removed duplicated region for block: B:1156:0x149c  */
    /* JADX WARNING: Removed duplicated region for block: B:1169:0x14d7  */
    /* JADX WARNING: Removed duplicated region for block: B:2593:0x1516 A:{SYNTHETIC} */
    /* JADX WARNING: Removed duplicated region for block: B:1188:0x152f  */
    /* JADX WARNING: Removed duplicated region for block: B:1169:0x14d7  */
    /* JADX WARNING: Removed duplicated region for block: B:1188:0x152f  */
    /* JADX WARNING: Removed duplicated region for block: B:2593:0x1516 A:{SYNTHETIC} */
    /* JADX WARNING: Removed duplicated region for block: B:1169:0x14d7  */
    /* JADX WARNING: Removed duplicated region for block: B:2593:0x1516 A:{SYNTHETIC} */
    /* JADX WARNING: Removed duplicated region for block: B:1188:0x152f  */
    /* JADX WARNING: Removed duplicated region for block: B:1169:0x14d7  */
    /* JADX WARNING: Removed duplicated region for block: B:1188:0x152f  */
    /* JADX WARNING: Removed duplicated region for block: B:2593:0x1516 A:{SYNTHETIC} */
    /* JADX WARNING: Removed duplicated region for block: B:1165:0x14d0  */
    /* JADX WARNING: Removed duplicated region for block: B:1124:0x1424  */
    /* JADX WARNING: Removed duplicated region for block: B:1169:0x14d7  */
    /* JADX WARNING: Removed duplicated region for block: B:2593:0x1516 A:{SYNTHETIC} */
    /* JADX WARNING: Removed duplicated region for block: B:1188:0x152f  */
    /* JADX WARNING: Removed duplicated region for block: B:1059:0x132c  */
    /* JADX WARNING: Removed duplicated region for block: B:1062:0x1333  */
    /* JADX WARNING: Removed duplicated region for block: B:1079:0x1360  */
    /* JADX WARNING: Removed duplicated region for block: B:1114:0x13f5  */
    /* JADX WARNING: Removed duplicated region for block: B:1107:0x13b9  */
    /* JADX WARNING: Removed duplicated region for block: B:1116:0x13fd  */
    /* JADX WARNING: Removed duplicated region for block: B:1124:0x1424  */
    /* JADX WARNING: Removed duplicated region for block: B:1165:0x14d0  */
    /* JADX WARNING: Removed duplicated region for block: B:1169:0x14d7  */
    /* JADX WARNING: Removed duplicated region for block: B:1188:0x152f  */
    /* JADX WARNING: Removed duplicated region for block: B:2593:0x1516 A:{SYNTHETIC} */
    /* JADX WARNING: Removed duplicated region for block: B:1396:0x1945  */
    /* JADX WARNING: Removed duplicated region for block: B:1413:0x198a  */
    /* JADX WARNING: Removed duplicated region for block: B:1431:0x19d7  */
    /* JADX WARNING: Removed duplicated region for block: B:1568:0x1ca0  */
    /* JADX WARNING: Removed duplicated region for block: B:1540:0x1c0e  */
    /* JADX WARNING: Removed duplicated region for block: B:1520:0x1bbb  */
    /* JADX WARNING: Removed duplicated region for block: B:1579:0x1cd0  */
    /* JADX WARNING: Removed duplicated region for block: B:1583:0x1cdd  */
    /* JADX WARNING: Removed duplicated region for block: B:1597:0x1d2e  */
    /* JADX WARNING: Removed duplicated region for block: B:1629:0x1df7  */
    /* JADX WARNING: Removed duplicated region for block: B:1652:0x1e71  */
    /* JADX WARNING: Removed duplicated region for block: B:1719:0x1fab  */
    /* JADX WARNING: Removed duplicated region for block: B:1723:0x1fc6  */
    /* JADX WARNING: Removed duplicated region for block: B:1730:0x1fe3  */
    /* JADX WARNING: Removed duplicated region for block: B:1828:0x21ed  */
    /* JADX WARNING: Removed duplicated region for block: B:1840:0x2220  */
    /* JADX WARNING: Removed duplicated region for block: B:1843:0x2227  */
    /* JADX WARNING: Removed duplicated region for block: B:1719:0x1fab  */
    /* JADX WARNING: Removed duplicated region for block: B:1723:0x1fc6  */
    /* JADX WARNING: Removed duplicated region for block: B:1730:0x1fe3  */
    /* JADX WARNING: Removed duplicated region for block: B:1733:0x1feb  */
    /* JADX WARNING: Removed duplicated region for block: B:1736:0x2017  */
    /* JADX WARNING: Removed duplicated region for block: B:1739:0x2033  */
    /* JADX WARNING: Removed duplicated region for block: B:1742:0x2048  */
    /* JADX WARNING: Removed duplicated region for block: B:1719:0x1fab  */
    /* JADX WARNING: Removed duplicated region for block: B:1723:0x1fc6  */
    /* JADX WARNING: Removed duplicated region for block: B:1730:0x1fe3  */
    /* JADX WARNING: Removed duplicated region for block: B:1733:0x1feb  */
    /* JADX WARNING: Removed duplicated region for block: B:1736:0x2017  */
    /* JADX WARNING: Removed duplicated region for block: B:1739:0x2033  */
    /* JADX WARNING: Removed duplicated region for block: B:1742:0x2048  */
    /* JADX WARNING: Missing block: B:175:0x03c3, code skipped:
            if (r14 == true) goto L_0x03c7;
     */
    /* JADX WARNING: Missing block: B:339:0x0745, code skipped:
            if (r6.messageOwner.from_scheduled == false) goto L_0x0775;
     */
    /* JADX WARNING: Missing block: B:341:0x074d, code skipped:
            if (r3.getId() >= r7.createUnreadMessageAfterId) goto L_0x0775;
     */
    /* JADX WARNING: Missing block: B:351:0x076b, code skipped:
            if (r6.messageOwner.from_scheduled == false) goto L_0x0775;
     */
    /* JADX WARNING: Missing block: B:353:0x0773, code skipped:
            if (r3.getId() >= r7.createUnreadMessageAfterId) goto L_0x0775;
     */
    /* JADX WARNING: Missing block: B:376:0x07dd, code skipped:
            if (r11 <= r2) goto L_0x07df;
     */
    /* JADX WARNING: Missing block: B:496:0x099c, code skipped:
            if (r30 != false) goto L_0x09a0;
     */
    /* JADX WARNING: Missing block: B:527:0x09f1, code skipped:
            if (r3 == 1) goto L_0x09f3;
     */
    /* JADX WARNING: Missing block: B:586:0x0b06, code skipped:
            if (r6.get(r6.size() - 2) == r7.scrollToMessage) goto L_0x0b08;
     */
    /* JADX WARNING: Missing block: B:878:0x1039, code skipped:
            if (r6.users.contains(java.lang.Integer.valueOf(r0)) != false) goto L_0x103b;
     */
    /* JADX WARNING: Missing block: B:1151:0x1492, code skipped:
            if (r0.messages.size() == 0) goto L_0x1497;
     */
    /* JADX WARNING: Missing block: B:1530:0x1beb, code skipped:
            if (r9.pinned_msg_id == r13.intValue()) goto L_0x1bdf;
     */
    /* JADX WARNING: Missing block: B:1848:0x2235, code skipped:
            if (r0.megagroup != false) goto L_0x2237;
     */
    /* JADX WARNING: Missing block: B:2228:0x292d, code skipped:
            if (r1.pinned_msg_id == r0.getId()) goto L_0x292f;
     */
    /* JADX WARNING: Missing block: B:2308:0x2a9b, code skipped:
            if (r0.megagroup != false) goto L_0x2a9d;
     */
    /* JADX WARNING: Missing block: B:2382:0x2bfb, code skipped:
            if (((long) r2.id) == r0) goto L_0x2bfd;
     */
    public void didReceivedNotification(int r48, int r49, java.lang.Object... r50) {
        /*
        r47 = this;
        r7 = r47;
        r0 = r48;
        r8 = r50;
        r1 = org.telegram.messenger.NotificationCenter.messagesDidLoad;
        r3 = "";
        r5 = "%d";
        r9 = 5;
        r6 = 6;
        r11 = 3;
        r12 = -1;
        r15 = 4;
        r2 = 2;
        r14 = 1;
        r13 = 0;
        if (r0 != r1) goto L_0x0d64;
    L_0x0016:
        r0 = 10;
        r0 = r8[r0];
        r0 = (java.lang.Integer) r0;
        r0 = r0.intValue();
        r1 = r7.classGuid;
        if (r0 != r1) goto L_0x2eac;
    L_0x0024:
        r7.setItemAnimationsEnabled(r13);
        r0 = r7.openAnimationEnded;
        if (r0 != 0) goto L_0x0051;
    L_0x002b:
        r0 = r47.getNotificationCenter();
        r1 = 7;
        r1 = new int[r1];
        r20 = org.telegram.messenger.NotificationCenter.chatInfoDidLoad;
        r1[r13] = r20;
        r20 = org.telegram.messenger.NotificationCenter.dialogsNeedReload;
        r1[r14] = r20;
        r20 = org.telegram.messenger.NotificationCenter.scheduledMessagesUpdated;
        r1[r2] = r20;
        r20 = org.telegram.messenger.NotificationCenter.closeChats;
        r1[r11] = r20;
        r20 = org.telegram.messenger.NotificationCenter.botKeyboardDidLoad;
        r1[r15] = r20;
        r20 = org.telegram.messenger.NotificationCenter.userInfoDidLoad;
        r1[r9] = r20;
        r20 = org.telegram.messenger.NotificationCenter.needDeleteDialog;
        r1[r6] = r20;
        r0.setAllowedNotificationsDutingAnimation(r1);
    L_0x0051:
        r0 = 11;
        r0 = r8[r0];
        r0 = (java.lang.Integer) r0;
        r0 = r0.intValue();
        r1 = r7.waitingForLoad;
        r10 = java.lang.Integer.valueOf(r0);
        r1 = r1.indexOf(r10);
        r10 = r47.getUserConfig();
        r10 = r10.getClientUserId();
        r21 = 14;
        r21 = r8[r21];
        r21 = (java.lang.Boolean) r21;
        r4 = r21.booleanValue();
        r21 = r8[r11];
        r21 = (java.lang.Boolean) r21;
        r21 = r21.booleanValue();
        r6 = r7.postponedScrollToLastMessageQueryIndex;
        if (r6 <= 0) goto L_0x0087;
    L_0x0083:
        if (r0 != r6) goto L_0x0087;
    L_0x0085:
        r0 = 1;
        goto L_0x0088;
    L_0x0087:
        r0 = 0;
    L_0x0088:
        if (r1 != r12) goto L_0x00d6;
    L_0x008a:
        r0 = r7.inScheduleMode;
        if (r0 == 0) goto L_0x00d5;
    L_0x008e:
        if (r4 == 0) goto L_0x00d5;
    L_0x0090:
        if (r21 != 0) goto L_0x00d5;
    L_0x0092:
        r7.waitingForReplyMessageLoad = r14;
        r0 = r7.waitingForLoad;
        r1 = r7.lastLoadIndex;
        r1 = java.lang.Integer.valueOf(r1);
        r0.add(r1);
        r8 = r47.getMessagesController();
        r9 = r7.dialog_id;
        r0 = org.telegram.messenger.AndroidUtilities.isTablet();
        if (r0 == 0) goto L_0x00b0;
    L_0x00ab:
        r0 = 30;
        r11 = 30;
        goto L_0x00b4;
    L_0x00b0:
        r0 = 20;
        r11 = 20;
    L_0x00b4:
        r12 = 0;
        r13 = 0;
        r14 = 1;
        r15 = 0;
        r0 = r7.classGuid;
        r17 = 2;
        r18 = 0;
        r1 = r7.currentChat;
        r19 = org.telegram.messenger.ChatObject.isChannel(r1);
        r1 = r7.inScheduleMode;
        r2 = r7.lastLoadIndex;
        r3 = r2 + 1;
        r7.lastLoadIndex = r3;
        r16 = r0;
        r20 = r1;
        r21 = r2;
        r8.loadMessages(r9, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21);
    L_0x00d5:
        return;
    L_0x00d6:
        r6 = r7.waitingForLoad;
        r6.remove(r1);
        r1 = r8[r2];
        r1 = (java.util.ArrayList) r1;
        r6 = r7.inScheduleMode;
        if (r6 == r4) goto L_0x00ef;
    L_0x00e3:
        if (r6 != 0) goto L_0x00ee;
    L_0x00e5:
        r0 = r1.size();
        r7.scheduledMessagesCount = r0;
        r7.updateScheduledInterface(r14);
    L_0x00ee:
        return;
    L_0x00ef:
        r4 = r7.waitingForReplyMessageLoad;
        if (r4 == 0) goto L_0x0155;
    L_0x00f3:
        if (r6 != 0) goto L_0x013f;
    L_0x00f5:
        r6 = r7.createUnreadMessageAfterIdLoading;
        if (r6 != 0) goto L_0x013f;
    L_0x00f9:
        r6 = 0;
    L_0x00fa:
        r12 = r1.size();
        if (r6 >= r12) goto L_0x0139;
    L_0x0100:
        r12 = r1.get(r6);
        r12 = (org.telegram.messenger.MessageObject) r12;
        r2 = r12.getId();
        r11 = r7.startLoadFromMessageId;
        if (r2 != r11) goto L_0x0110;
    L_0x010e:
        r2 = 1;
        goto L_0x013a;
    L_0x0110:
        r6 = r6 + 1;
        r2 = r1.size();
        if (r6 >= r2) goto L_0x0135;
    L_0x0118:
        r2 = r1.get(r6);
        r2 = (org.telegram.messenger.MessageObject) r2;
        r11 = r12.getId();
        r9 = r7.startLoadFromMessageId;
        if (r11 < r9) goto L_0x0135;
    L_0x0126:
        r2 = r2.getId();
        r9 = r7.startLoadFromMessageId;
        if (r2 >= r9) goto L_0x0135;
    L_0x012e:
        r2 = r12.getId();
        r7.startLoadFromMessageId = r2;
        goto L_0x010e;
    L_0x0135:
        r2 = 2;
        r9 = 5;
        r11 = 3;
        goto L_0x00fa;
    L_0x0139:
        r2 = 0;
    L_0x013a:
        if (r2 != 0) goto L_0x013f;
    L_0x013c:
        r7.startLoadFromMessageId = r13;
        return;
    L_0x013f:
        r2 = r7.startLoadFromMessageId;
        r6 = r7.needSelectFromMessageId;
        r9 = r7.createUnreadMessageAfterId;
        r11 = r7.createUnreadMessageAfterIdLoading;
        r47.clearChatData();
        r12 = r7.inScheduleMode;
        if (r12 != 0) goto L_0x0156;
    L_0x014e:
        r7.createUnreadMessageAfterId = r9;
        r7.startLoadFromMessageId = r2;
        r7.needSelectFromMessageId = r6;
        goto L_0x0156;
    L_0x0155:
        r11 = 0;
    L_0x0156:
        r2 = r7.loadsCount;
        r2 = r2 + r14;
        r7.loadsCount = r2;
        r2 = r8[r13];
        r2 = (java.lang.Long) r2;
        r24 = r2.longValue();
        r13 = r7.dialog_id;
        r2 = (r24 > r13 ? 1 : (r24 == r13 ? 0 : -1));
        if (r2 != 0) goto L_0x016b;
    L_0x0169:
        r2 = 0;
        goto L_0x016c;
    L_0x016b:
        r2 = 1;
    L_0x016c:
        r6 = 1;
        r13 = r8[r6];
        r13 = (java.lang.Integer) r13;
        r6 = r13.intValue();
        r13 = r8[r15];
        r13 = (java.lang.Integer) r13;
        r13 = r13.intValue();
        r14 = 7;
        r14 = r8[r14];
        r14 = (java.lang.Integer) r14;
        r14.intValue();
        r14 = 8;
        r14 = r8[r14];
        r14 = (java.lang.Integer) r14;
        r14 = r14.intValue();
        r24 = 9;
        r24 = r8[r24];
        r24 = (java.lang.Boolean) r24;
        r30 = r24.booleanValue();
        r24 = 12;
        r24 = r8[r24];
        r24 = (java.lang.Integer) r24;
        r9 = r24.intValue();
        r24 = 13;
        r24 = r8[r24];
        r24 = (java.lang.Integer) r24;
        r24 = r24.intValue();
        if (r24 >= 0) goto L_0x01b8;
    L_0x01af:
        r24 = r24 * -1;
        r12 = 0;
        r7.hasAllMentionsLocal = r12;
        r44 = r24;
        r12 = 1;
        goto L_0x01c3;
    L_0x01b8:
        r12 = r7.first;
        if (r12 == 0) goto L_0x01c0;
    L_0x01bc:
        r12 = 1;
        r7.hasAllMentionsLocal = r12;
        goto L_0x01c1;
    L_0x01c0:
        r12 = 1;
    L_0x01c1:
        r44 = r24;
    L_0x01c3:
        if (r14 != r15) goto L_0x01f9;
    L_0x01c5:
        r7.startLoadFromMessageId = r9;
        r9 = r1.size();
        r9 = r9 - r12;
    L_0x01cc:
        if (r9 <= 0) goto L_0x01f9;
    L_0x01ce:
        r24 = r1.get(r9);
        r15 = r24;
        r15 = (org.telegram.messenger.MessageObject) r15;
        r12 = r15.type;
        if (r12 >= 0) goto L_0x01f2;
    L_0x01da:
        r12 = r15.getId();
        r15 = r7.startLoadFromMessageId;
        if (r12 != r15) goto L_0x01f2;
    L_0x01e2:
        r12 = 1;
        r15 = r9 + -1;
        r12 = r1.get(r15);
        r12 = (org.telegram.messenger.MessageObject) r12;
        r12 = r12.getId();
        r7.startLoadFromMessageId = r12;
        goto L_0x01f9;
    L_0x01f2:
        r12 = r9;
        r12 = r12 + -1;
        r9 = r12;
        r12 = 1;
        r15 = 4;
        goto L_0x01cc;
    L_0x01f9:
        if (r0 == 0) goto L_0x02a5;
    L_0x01fb:
        if (r14 != 0) goto L_0x0242;
    L_0x01fd:
        if (r21 == 0) goto L_0x0242;
    L_0x01ff:
        r12 = r1.size();
        if (r12 >= r6) goto L_0x0242;
    L_0x0205:
        r0 = r7.lastLoadIndex;
        r7.postponedScrollToLastMessageQueryIndex = r0;
        r1 = r7.waitingForLoad;
        r0 = java.lang.Integer.valueOf(r0);
        r1.add(r0);
        r30 = r47.getMessagesController();
        r0 = r7.dialog_id;
        r34 = 0;
        r35 = 0;
        r36 = 0;
        r37 = 0;
        r2 = r7.classGuid;
        r39 = 0;
        r40 = 0;
        r3 = r7.currentChat;
        r41 = org.telegram.messenger.ChatObject.isChannel(r3);
        r3 = r7.inScheduleMode;
        r4 = r7.lastLoadIndex;
        r5 = r4 + 1;
        r7.lastLoadIndex = r5;
        r31 = r0;
        r33 = r6;
        r38 = r2;
        r42 = r3;
        r43 = r4;
        r30.loadMessages(r31, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43);
        return;
    L_0x0242:
        r12 = 4;
        if (r14 != r12) goto L_0x0249;
    L_0x0245:
        r12 = r7.startLoadFromMessageId;
        r7.postponedScrollMessageId = r12;
    L_0x0249:
        r12 = r7.progressDialog;
        r12.dismiss();
        r12 = r7.postponedScrollIsCanceled;
        if (r12 == 0) goto L_0x0253;
    L_0x0252:
        return;
    L_0x0253:
        r12 = r7.postponedScrollMessageId;
        if (r12 != 0) goto L_0x025b;
    L_0x0257:
        r47.clearChatData();
        goto L_0x02a5;
    L_0x025b:
        r11 = r7.showScrollToMessageError;
        if (r11 == 0) goto L_0x028c;
    L_0x025f:
        r11 = 0;
    L_0x0260:
        r12 = r1.size();
        if (r11 >= r12) goto L_0x0279;
    L_0x0266:
        r12 = r1.get(r11);
        r12 = (org.telegram.messenger.MessageObject) r12;
        r12 = r12.getId();
        r15 = r7.postponedScrollMessageId;
        if (r12 != r15) goto L_0x0276;
    L_0x0274:
        r11 = 1;
        goto L_0x027a;
    L_0x0276:
        r11 = r11 + 1;
        goto L_0x0260;
    L_0x0279:
        r11 = 0;
    L_0x027a:
        if (r11 != 0) goto L_0x0289;
    L_0x027c:
        r0 = NUM; // 0x7f0e0648 float:1.8878299E38 double:1.053162951E-314;
        r1 = "MessageNotFound";
        r0 = org.telegram.messenger.LocaleController.getString(r1, r0);
        org.telegram.ui.Components.AlertsCreator.showSimpleToast(r7, r0);
        return;
    L_0x0289:
        r11 = 0;
        r7.showScrollToMessageError = r11;
    L_0x028c:
        r11 = r7.startLoadFromMessageId;
        r15 = r7.needSelectFromMessageId;
        r9 = r7.createUnreadMessageAfterId;
        r12 = r7.createUnreadMessageAfterIdLoading;
        r47.clearChatData();
        r24 = r12;
        r12 = r7.inScheduleMode;
        if (r12 != 0) goto L_0x02a3;
    L_0x029d:
        r7.createUnreadMessageAfterId = r9;
        r7.startLoadFromMessageId = r11;
        r7.needSelectFromMessageId = r15;
    L_0x02a3:
        r11 = r24;
    L_0x02a5:
        if (r13 == 0) goto L_0x02dc;
    L_0x02a7:
        r9 = 5;
        r12 = r8[r9];
        r12 = (java.lang.Integer) r12;
        r9 = r12.intValue();
        r7.last_message_id = r9;
        r9 = 3;
        if (r14 != r9) goto L_0x02d0;
    L_0x02b5:
        r9 = r7.loadingFromOldPosition;
        if (r9 == 0) goto L_0x02cb;
    L_0x02b9:
        r9 = 6;
        r8 = r8[r9];
        r8 = (java.lang.Integer) r8;
        r8 = r8.intValue();
        if (r8 == 0) goto L_0x02c6;
    L_0x02c4:
        r7.createUnreadMessageAfterId = r13;
    L_0x02c6:
        r9 = 0;
        r7.loadingFromOldPosition = r9;
        r13 = r8;
        goto L_0x02cd;
    L_0x02cb:
        r9 = 0;
        r13 = 0;
    L_0x02cd:
        r7.first_unread_id = r9;
        goto L_0x02f2;
    L_0x02d0:
        r7.first_unread_id = r13;
        r9 = 6;
        r8 = r8[r9];
        r8 = (java.lang.Integer) r8;
        r13 = r8.intValue();
        goto L_0x02f2;
    L_0x02dc:
        r9 = r7.startLoadFromMessageId;
        if (r9 == 0) goto L_0x02f1;
    L_0x02e0:
        r9 = 3;
        if (r14 == r9) goto L_0x02e6;
    L_0x02e3:
        r9 = 4;
        if (r14 != r9) goto L_0x02f1;
    L_0x02e6:
        r9 = 5;
        r8 = r8[r9];
        r8 = (java.lang.Integer) r8;
        r8 = r8.intValue();
        r7.last_message_id = r8;
    L_0x02f1:
        r13 = 0;
    L_0x02f2:
        if (r14 == 0) goto L_0x0306;
    L_0x02f4:
        r8 = r7.startLoadFromMessageId;
        if (r8 != 0) goto L_0x0300;
    L_0x02f8:
        r8 = r7.last_message_id;
        if (r8 == 0) goto L_0x02fd;
    L_0x02fc:
        goto L_0x0300;
    L_0x02fd:
        r8 = 1;
        r9 = 0;
        goto L_0x0308;
    L_0x0300:
        r8 = r7.forwardEndReached;
        r9 = 0;
        r8[r2] = r9;
        goto L_0x0307;
    L_0x0306:
        r9 = 0;
    L_0x0307:
        r8 = 1;
    L_0x0308:
        if (r14 == r8) goto L_0x030d;
    L_0x030a:
        r12 = 3;
        if (r14 != r12) goto L_0x031f;
    L_0x030d:
        if (r2 != r8) goto L_0x031f;
    L_0x030f:
        r12 = r7.endReached;
        r15 = r7.cacheEndReached;
        r15[r9] = r8;
        r12[r9] = r8;
        r12 = r7.forwardEndReached;
        r12[r9] = r9;
        r12 = r7.minMessageId;
        r12[r9] = r9;
    L_0x031f:
        r12 = r7.inScheduleMode;
        if (r12 == 0) goto L_0x0331;
    L_0x0323:
        r12 = r7.endReached;
        r15 = r7.cacheEndReached;
        r15[r9] = r8;
        r12[r9] = r8;
        r12 = r7.forwardEndReached;
        r12[r9] = r8;
        r12[r9] = r8;
    L_0x0331:
        r9 = r7.loadsCount;
        if (r9 != r8) goto L_0x0343;
    L_0x0335:
        r9 = r1.size();
        r15 = 20;
        if (r9 <= r15) goto L_0x0343;
    L_0x033d:
        r9 = r7.loadsCount;
        r15 = r9 + 1;
        r7.loadsCount = r15;
    L_0x0343:
        r8 = r7.firstLoading;
        if (r8 == 0) goto L_0x039d;
    L_0x0347:
        r8 = r7.forwardEndReached;
        r8 = r8[r2];
        if (r8 != 0) goto L_0x0392;
    L_0x034d:
        r8 = r7.messages;
        r8.clear();
        r8 = r7.messagesByDays;
        r8.clear();
        r8 = r7.groupedMessagesMap;
        r8.clear();
        r8 = 0;
    L_0x035d:
        r15 = 2;
        if (r8 >= r15) goto L_0x0392;
    L_0x0360:
        r15 = r7.messagesDict;
        r15 = r15[r8];
        r15.clear();
        r15 = r7.currentEncryptedChat;
        if (r15 != 0) goto L_0x0379;
    L_0x036b:
        r15 = r7.maxMessageId;
        r22 = NUM; // 0x7fffffff float:NaN double:1.060997895E-314;
        r15[r8] = r22;
        r15 = r7.minMessageId;
        r20 = -NUM; // 0xfffffffvar_ float:-0.0 double:NaN;
        r15[r8] = r20;
        goto L_0x0386;
    L_0x0379:
        r20 = -NUM; // 0xfffffffvar_ float:-0.0 double:NaN;
        r22 = NUM; // 0x7fffffff float:NaN double:1.060997895E-314;
        r15 = r7.maxMessageId;
        r15[r8] = r20;
        r15 = r7.minMessageId;
        r15[r8] = r22;
    L_0x0386:
        r15 = r7.maxDate;
        r15[r8] = r20;
        r15 = r7.minDate;
        r12 = 0;
        r15[r8] = r12;
        r8 = r8 + 1;
        goto L_0x035d;
    L_0x0392:
        r12 = 0;
        r7.firstLoading = r12;
        r8 = new org.telegram.ui.-$$Lambda$ChatActivity$WjuMgTQ_LO3TFfORRisITXkj6Ig;
        r8.<init>(r7);
        org.telegram.messenger.AndroidUtilities.runOnUIThread(r8);
    L_0x039d:
        r8 = 1;
        if (r14 != r8) goto L_0x03a3;
    L_0x03a0:
        java.util.Collections.reverse(r1);
    L_0x03a3:
        r8 = r7.currentEncryptedChat;
        if (r8 != 0) goto L_0x03bd;
    L_0x03a7:
        r24 = r47.getMediaDataController();
        r48 = r13;
        r12 = r7.dialog_id;
        r8 = r7.inScheduleMode;
        r29 = 0;
        r25 = r1;
        r26 = r12;
        r28 = r8;
        r24.loadReplyMessagesForMessages(r25, r26, r28, r29);
        goto L_0x03bf;
    L_0x03bd:
        r48 = r13;
    L_0x03bf:
        r8 = 2;
        if (r14 == r8) goto L_0x03c6;
    L_0x03c2:
        r8 = 1;
        if (r14 != r8) goto L_0x03d4;
    L_0x03c5:
        goto L_0x03c7;
    L_0x03c6:
        r8 = 1;
    L_0x03c7:
        r9 = r1.isEmpty();
        if (r9 == 0) goto L_0x03d4;
    L_0x03cd:
        if (r21 != 0) goto L_0x03d4;
    L_0x03cf:
        r9 = r7.forwardEndReached;
        r12 = 0;
        r9[r12] = r8;
    L_0x03d4:
        r13 = org.telegram.messenger.MediaController.getInstance();
        r15 = r1.size();
        r9 = 0;
        r12 = 0;
        r20 = 0;
    L_0x03e0:
        if (r9 >= r15) goto L_0x0410;
    L_0x03e2:
        r24 = r15 - r9;
        r25 = r9;
        r9 = r24 + -1;
        r8 = r25;
        r9 = r1.get(r9);
        r9 = (org.telegram.messenger.MessageObject) r9;
        r9 = r9.messageOwner;
        r9 = r9.action;
        r50 = r15;
        if (r8 != 0) goto L_0x03ff;
    L_0x03f8:
        r15 = r9 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChatCreate;
        if (r15 == 0) goto L_0x03ff;
    L_0x03fc:
        r20 = 1;
        goto L_0x040a;
    L_0x03ff:
        if (r20 != 0) goto L_0x0402;
    L_0x0401:
        goto L_0x0410;
    L_0x0402:
        r15 = 2;
        if (r8 >= r15) goto L_0x040a;
    L_0x0405:
        r15 = r9 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChatEditPhoto;
        if (r15 == 0) goto L_0x040a;
    L_0x0409:
        r12 = r9;
    L_0x040a:
        r9 = r8 + 1;
        r15 = r50;
        r8 = 1;
        goto L_0x03e0;
    L_0x0410:
        r25 = r4;
        r26 = r5;
        r27 = r6;
        r4 = 0;
        r5 = 0;
        r8 = 0;
        r9 = 0;
        r15 = 0;
    L_0x041b:
        r6 = r1.size();
        if (r8 >= r6) goto L_0x08b8;
    L_0x0421:
        r6 = r1.get(r8);
        r6 = (org.telegram.messenger.MessageObject) r6;
        r28 = r11;
        r11 = r6.getId();
        r20 = r6.getApproximateHeight();
        r9 = r9 + r20;
        r50 = r9;
        r9 = r7.currentUser;
        if (r9 == 0) goto L_0x0463;
    L_0x0439:
        r9 = r9.self;
        if (r9 == 0) goto L_0x0445;
    L_0x043d:
        r9 = r6.messageOwner;
        r29 = r3;
        r3 = 1;
        r9.out = r3;
        goto L_0x0447;
    L_0x0445:
        r29 = r3;
    L_0x0447:
        r3 = r50;
        r9 = r7.inScheduleMode;
        if (r9 != 0) goto L_0x0467;
    L_0x044d:
        r9 = r7.currentUser;
        r9 = r9.bot;
        if (r9 == 0) goto L_0x0459;
    L_0x0453:
        r9 = r6.isOut();
        if (r9 != 0) goto L_0x045f;
    L_0x0459:
        r9 = r7.currentUser;
        r9 = r9.id;
        if (r9 != r10) goto L_0x0467;
    L_0x045f:
        r6.setIsRead();
        goto L_0x0467;
    L_0x0463:
        r29 = r3;
        r3 = r50;
    L_0x0467:
        r9 = r7.messagesDict;
        r9 = r9[r2];
        r9 = r9.indexOfKey(r11);
        if (r9 < 0) goto L_0x0480;
    L_0x0471:
        r34 = r2;
        r35 = r3;
        r32 = r10;
        r24 = r12;
        r50 = r13;
        r12 = r29;
        r13 = r4;
        goto L_0x08a6;
    L_0x0480:
        r9 = 0;
        r7.addToPolls(r6, r9);
        r9 = r47.isSecretChat();
        if (r9 == 0) goto L_0x048d;
    L_0x048a:
        r7.checkSecretMessageForLocation(r6);
    L_0x048d:
        r9 = r13.isPlayingMessage(r6);
        if (r9 == 0) goto L_0x04a6;
    L_0x0493:
        r9 = r13.getPlayingMessageObject();
        r32 = r10;
        r10 = r9.audioProgress;
        r6.audioProgress = r10;
        r10 = r9.audioProgressSec;
        r6.audioProgressSec = r10;
        r9 = r9.audioPlayerDuration;
        r6.audioPlayerDuration = r9;
        goto L_0x04a8;
    L_0x04a6:
        r32 = r10;
    L_0x04a8:
        if (r2 != 0) goto L_0x04bd;
    L_0x04aa:
        r9 = r7.currentChat;
        r9 = org.telegram.messenger.ChatObject.isChannel(r9);
        if (r9 == 0) goto L_0x04bd;
    L_0x04b2:
        r9 = 1;
        if (r11 != r9) goto L_0x04bd;
    L_0x04b5:
        r10 = r7.endReached;
        r10[r2] = r9;
        r10 = r7.cacheEndReached;
        r10[r2] = r9;
    L_0x04bd:
        if (r11 <= 0) goto L_0x04d4;
    L_0x04bf:
        r10 = r7.maxMessageId;
        r9 = r10[r2];
        r9 = java.lang.Math.min(r11, r9);
        r10[r2] = r9;
        r9 = r7.minMessageId;
        r10 = r9[r2];
        r10 = java.lang.Math.max(r11, r10);
        r9[r2] = r10;
        goto L_0x04ec;
    L_0x04d4:
        r9 = r7.currentEncryptedChat;
        if (r9 == 0) goto L_0x04ec;
    L_0x04d8:
        r9 = r7.maxMessageId;
        r10 = r9[r2];
        r10 = java.lang.Math.max(r11, r10);
        r9[r2] = r10;
        r9 = r7.minMessageId;
        r10 = r9[r2];
        r10 = java.lang.Math.min(r11, r10);
        r9[r2] = r10;
    L_0x04ec:
        r9 = r6.messageOwner;
        r9 = r9.date;
        if (r9 == 0) goto L_0x0515;
    L_0x04f2:
        r10 = r7.maxDate;
        r50 = r13;
        r13 = r10[r2];
        r9 = java.lang.Math.max(r13, r9);
        r10[r2] = r9;
        r9 = r7.minDate;
        r10 = r9[r2];
        if (r10 == 0) goto L_0x050c;
    L_0x0504:
        r10 = r6.messageOwner;
        r10 = r10.date;
        r9 = r9[r2];
        if (r10 >= r9) goto L_0x0517;
    L_0x050c:
        r9 = r7.minDate;
        r10 = r6.messageOwner;
        r10 = r10.date;
        r9[r2] = r10;
        goto L_0x0517;
    L_0x0515:
        r50 = r13;
    L_0x0517:
        r9 = r7.last_message_id;
        if (r11 != r9) goto L_0x0521;
    L_0x051b:
        r9 = r7.forwardEndReached;
        r10 = 1;
        r9[r2] = r10;
        goto L_0x0522;
    L_0x0521:
        r10 = 1;
    L_0x0522:
        r9 = r6.messageOwner;
        r13 = r9.action;
        r9 = r6.type;
        if (r9 < 0) goto L_0x089d;
    L_0x052a:
        if (r2 != r10) goto L_0x0532;
    L_0x052c:
        r10 = r13 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChatMigrateTo;
        if (r10 == 0) goto L_0x0532;
    L_0x0530:
        goto L_0x089d;
    L_0x0532:
        r10 = r7.currentChat;
        if (r10 == 0) goto L_0x0544;
    L_0x0536:
        r10 = r10.creator;
        if (r10 == 0) goto L_0x0544;
    L_0x053a:
        r10 = r13 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChatCreate;
        if (r10 != 0) goto L_0x089d;
    L_0x053e:
        if (r12 == 0) goto L_0x0544;
    L_0x0540:
        if (r13 != r12) goto L_0x0544;
    L_0x0542:
        goto L_0x089d;
    L_0x0544:
        r10 = r6.messageOwner;
        r10 = r10.action;
        r10 = r10 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChannelMigrateFrom;
        if (r10 == 0) goto L_0x054e;
    L_0x054c:
        goto L_0x089d;
    L_0x054e:
        r10 = r7.needAnimateToMessage;
        if (r10 == 0) goto L_0x056d;
    L_0x0552:
        r10 = r10.getId();
        if (r10 != r11) goto L_0x056d;
    L_0x0558:
        if (r11 >= 0) goto L_0x056d;
    L_0x055a:
        r10 = r6.type;
        r13 = 5;
        if (r10 != r13) goto L_0x056d;
    L_0x055f:
        r10 = r7.inScheduleMode;
        if (r10 != 0) goto L_0x056d;
    L_0x0563:
        r6 = r7.needAnimateToMessage;
        r10 = r7.animatingMessageObjects;
        r10.add(r6);
        r10 = 0;
        r7.needAnimateToMessage = r10;
    L_0x056d:
        r10 = r7.messagesDict;
        r10 = r10[r2];
        r10.put(r11, r6);
        r10 = r7.messagesByDays;
        r13 = r6.dateKey;
        r10 = r10.get(r13);
        r10 = (java.util.ArrayList) r10;
        if (r10 != 0) goto L_0x062b;
    L_0x0580:
        r10 = new java.util.ArrayList;
        r10.<init>();
        r13 = r7.messagesByDays;
        r9 = r6.dateKey;
        r13.put(r9, r10);
        r13 = new org.telegram.tgnet.TLRPC$TL_message;
        r13.<init>();
        r9 = r7.inScheduleMode;
        if (r9 == 0) goto L_0x05d0;
    L_0x0595:
        r9 = r6.messageOwner;
        r9 = r9.date;
        r20 = r10;
        r10 = NUM; // 0x7ffffffe float:NaN double:1.0609978945E-314;
        if (r9 != r10) goto L_0x05b3;
    L_0x05a0:
        r9 = NUM; // 0x7f0e0652 float:1.887832E38 double:1.053162956E-314;
        r10 = "MessageScheduledUntilOnline";
        r9 = org.telegram.messenger.LocaleController.getString(r10, r9);
        r13.message = r9;
        r34 = r2;
        r35 = r3;
        r24 = r12;
        r3 = 0;
        goto L_0x05e4;
    L_0x05b3:
        r24 = r12;
        r10 = 1;
        r12 = new java.lang.Object[r10];
        r34 = r2;
        r35 = r3;
        r2 = (long) r9;
        r2 = org.telegram.messenger.LocaleController.formatDateChat(r2, r10);
        r3 = 0;
        r12[r3] = r2;
        r2 = "MessageScheduledOn";
        r10 = NUM; // 0x7f0e0650 float:1.8878315E38 double:1.053162955E-314;
        r2 = org.telegram.messenger.LocaleController.formatString(r2, r10, r12);
        r13.message = r2;
        goto L_0x05e4;
    L_0x05d0:
        r34 = r2;
        r35 = r3;
        r20 = r10;
        r24 = r12;
        r3 = 0;
        r2 = r6.messageOwner;
        r2 = r2.date;
        r9 = (long) r2;
        r2 = org.telegram.messenger.LocaleController.formatDateChat(r9);
        r13.message = r2;
    L_0x05e4:
        r13.id = r3;
        r2 = java.util.Calendar.getInstance();
        r9 = r6.messageOwner;
        r9 = r9.date;
        r9 = (long) r9;
        r36 = 1000; // 0x3e8 float:1.401E-42 double:4.94E-321;
        r9 = r9 * r36;
        r2.setTimeInMillis(r9);
        r9 = 11;
        r2.set(r9, r3);
        r9 = 12;
        r2.set(r9, r3);
        r9 = r2.getTimeInMillis();
        r9 = r9 / r36;
        r2 = (int) r9;
        r13.date = r2;
        r2 = new org.telegram.messenger.MessageObject;
        r9 = r7.currentAccount;
        r2.<init>(r9, r13, r3);
        r9 = 10;
        r2.type = r9;
        r9 = 1;
        r2.contentType = r9;
        r2.isDateObject = r9;
        if (r14 != r9) goto L_0x0621;
    L_0x061b:
        r10 = r7.messages;
        r10.add(r3, r2);
        goto L_0x0626;
    L_0x0621:
        r10 = r7.messages;
        r10.add(r2);
    L_0x0626:
        r15 = r15 + 1;
        r10 = r20;
        goto L_0x0631;
    L_0x062b:
        r34 = r2;
        r35 = r3;
        r24 = r12;
    L_0x0631:
        r2 = r6.hasValidGroupId();
        if (r2 == 0) goto L_0x06f7;
    L_0x0637:
        r2 = r7.groupedMessagesMap;
        r12 = r6.getGroupIdForUse();
        r2 = r2.get(r12);
        r13 = r2;
        r13 = (org.telegram.messenger.MessageObject.GroupedMessages) r13;
        if (r13 == 0) goto L_0x06a7;
    L_0x0646:
        r2 = r7.messages;
        r2 = r2.size();
        r9 = 1;
        if (r2 <= r9) goto L_0x06a7;
    L_0x064f:
        if (r14 != r9) goto L_0x065b;
    L_0x0651:
        r2 = r7.messages;
        r3 = 0;
        r2 = r2.get(r3);
        r2 = (org.telegram.messenger.MessageObject) r2;
        goto L_0x066b;
    L_0x065b:
        r2 = r7.messages;
        r12 = r2.size();
        r20 = 2;
        r12 = r12 + -2;
        r2 = r2.get(r12);
        r2 = (org.telegram.messenger.MessageObject) r2;
    L_0x066b:
        r36 = r2.getGroupIdForUse();
        r38 = r6.getGroupIdForUse();
        r12 = (r36 > r38 ? 1 : (r36 == r38 ? 0 : -1));
        if (r12 != 0) goto L_0x068f;
    L_0x0677:
        r12 = r10;
        r9 = r2.localGroupId;
        r17 = 0;
        r20 = (r9 > r17 ? 1 : (r9 == r17 ? 0 : -1));
        if (r20 == 0) goto L_0x06a8;
    L_0x0680:
        r6.localGroupId = r9;
        r9 = r7.groupedMessagesMap;
        r10 = r4;
        r3 = r2.localGroupId;
        r2 = r9.get(r3);
        r13 = r2;
        r13 = (org.telegram.messenger.MessageObject.GroupedMessages) r13;
        goto L_0x06a9;
    L_0x068f:
        r12 = r10;
        r10 = r4;
        r2 = r2.getGroupIdForUse();
        r36 = r6.getGroupIdForUse();
        r4 = (r2 > r36 ? 1 : (r2 == r36 ? 0 : -1));
        if (r4 == 0) goto L_0x06a9;
    L_0x069d:
        r2 = org.telegram.messenger.Utilities.random;
        r2 = r2.nextLong();
        r6.localGroupId = r2;
        r13 = 0;
        goto L_0x06a9;
    L_0x06a7:
        r12 = r10;
    L_0x06a8:
        r10 = r4;
    L_0x06a9:
        if (r13 != 0) goto L_0x06be;
    L_0x06ab:
        r13 = new org.telegram.messenger.MessageObject$GroupedMessages;
        r13.<init>();
        r2 = r6.getGroupId();
        r13.groupId = r2;
        r2 = r7.groupedMessagesMap;
        r3 = r13.groupId;
        r2.put(r3, r13);
        goto L_0x06d8;
    L_0x06be:
        if (r10 == 0) goto L_0x06ca;
    L_0x06c0:
        r2 = r6.getGroupId();
        r2 = r10.indexOfKey(r2);
        if (r2 >= 0) goto L_0x06d8;
    L_0x06ca:
        if (r5 != 0) goto L_0x06d1;
    L_0x06cc:
        r5 = new android.util.LongSparseArray;
        r5.<init>();
    L_0x06d1:
        r2 = r6.getGroupId();
        r5.put(r2, r13);
    L_0x06d8:
        if (r10 != 0) goto L_0x06e0;
    L_0x06da:
        r4 = new android.util.LongSparseArray;
        r4.<init>();
        goto L_0x06e1;
    L_0x06e0:
        r4 = r10;
    L_0x06e1:
        r2 = r13.groupId;
        r4.put(r2, r13);
        r2 = 1;
        if (r14 != r2) goto L_0x06ef;
    L_0x06e9:
        r2 = r13.messages;
        r2.add(r6);
        goto L_0x06f5;
    L_0x06ef:
        r2 = r13.messages;
        r3 = 0;
        r2.add(r3, r6);
    L_0x06f5:
        r13 = r4;
        goto L_0x070a;
    L_0x06f7:
        r12 = r10;
        r10 = r4;
        r3 = r6.getGroupIdForUse();
        r13 = r10;
        r9 = 0;
        r17 = (r3 > r9 ? 1 : (r3 == r9 ? 0 : -1));
        if (r17 == 0) goto L_0x070a;
    L_0x0704:
        r3 = r6.messageOwner;
        r3.grouped_id = r9;
        r6.localSentGroupId = r9;
    L_0x070a:
        r3 = 1;
        r15 = r15 + r3;
        r10 = r12;
        r10.add(r6);
        if (r14 != r3) goto L_0x0719;
    L_0x0712:
        r4 = r7.messages;
        r2 = 0;
        r4.add(r2, r6);
        goto L_0x0723;
    L_0x0719:
        r4 = r7.messages;
        r9 = r4.size();
        r9 = r9 - r3;
        r4.add(r9, r6);
    L_0x0723:
        r4 = r7.currentEncryptedChat;
        if (r4 != 0) goto L_0x0750;
    L_0x0727:
        r4 = r7.createUnreadMessageAfterId;
        if (r4 == 0) goto L_0x0775;
    L_0x072b:
        if (r14 == r3) goto L_0x0775;
    L_0x072d:
        r3 = r8 + 1;
        r4 = r1.size();
        if (r3 >= r4) goto L_0x0775;
    L_0x0735:
        r3 = r1.get(r3);
        r3 = (org.telegram.messenger.MessageObject) r3;
        r4 = r6.isOut();
        if (r4 == 0) goto L_0x0747;
    L_0x0741:
        r4 = r6.messageOwner;
        r4 = r4.from_scheduled;
        if (r4 == 0) goto L_0x0775;
    L_0x0747:
        r4 = r3.getId();
        r10 = r7.createUnreadMessageAfterId;
        if (r4 < r10) goto L_0x0776;
    L_0x074f:
        goto L_0x0775;
    L_0x0750:
        r3 = r7.createUnreadMessageAfterId;
        if (r3 == 0) goto L_0x0775;
    L_0x0754:
        r3 = 1;
        if (r14 == r3) goto L_0x0775;
    L_0x0757:
        r3 = r8 + -1;
        if (r3 < 0) goto L_0x0775;
    L_0x075b:
        r3 = r1.get(r3);
        r3 = (org.telegram.messenger.MessageObject) r3;
        r4 = r6.isOut();
        if (r4 == 0) goto L_0x076d;
    L_0x0767:
        r4 = r6.messageOwner;
        r4 = r4.from_scheduled;
        if (r4 == 0) goto L_0x0775;
    L_0x076d:
        r4 = r3.getId();
        r10 = r7.createUnreadMessageAfterId;
        if (r4 < r10) goto L_0x0776;
    L_0x0775:
        r3 = 0;
    L_0x0776:
        r4 = 2;
        if (r14 != r4) goto L_0x07c9;
    L_0x0779:
        r10 = r7.first_unread_id;
        if (r11 != r10) goto L_0x07c9;
    L_0x077d:
        r10 = org.telegram.messenger.AndroidUtilities.displaySize;
        r10 = r10.y;
        r10 = r10 / r4;
        r4 = r35;
        if (r4 > r10) goto L_0x0794;
    L_0x0786:
        r10 = r7.forwardEndReached;
        r2 = 0;
        r10 = r10[r2];
        if (r10 != 0) goto L_0x078e;
    L_0x078d:
        goto L_0x0795;
    L_0x078e:
        r35 = r4;
        r12 = r29;
        goto L_0x0819;
    L_0x0794:
        r2 = 0;
    L_0x0795:
        r10 = new org.telegram.tgnet.TLRPC$TL_message;
        r10.<init>();
        r12 = r29;
        r10.message = r12;
        r10.id = r2;
        r9 = new org.telegram.messenger.MessageObject;
        r35 = r4;
        r4 = r7.currentAccount;
        r9.<init>(r4, r10, r2);
        r2 = 6;
        r9.type = r2;
        r2 = 2;
        r9.contentType = r2;
        r2 = r7.messages;
        r10 = r2.size();
        r20 = 1;
        r10 = r10 + -1;
        r2.add(r10, r9);
        r7.unreadMessageObject = r9;
        r2 = r7.unreadMessageObject;
        r7.scrollToMessage = r2;
        r2 = -10000; // 0xffffffffffffd8f0 float:NaN double:NaN;
        r7.scrollToMessagePosition = r2;
        r15 = r15 + 1;
        goto L_0x0819;
    L_0x07c9:
        r12 = r29;
        r2 = 3;
        if (r14 == r2) goto L_0x07d1;
    L_0x07ce:
        r2 = 4;
        if (r14 != r2) goto L_0x0819;
    L_0x07d1:
        r2 = r7.startLoadFromMessageId;
        if (r2 >= 0) goto L_0x07d7;
    L_0x07d5:
        if (r11 == r2) goto L_0x07df;
    L_0x07d7:
        r2 = r7.startLoadFromMessageId;
        if (r2 <= 0) goto L_0x0819;
    L_0x07db:
        if (r11 <= 0) goto L_0x0819;
    L_0x07dd:
        if (r11 > r2) goto L_0x0819;
    L_0x07df:
        r47.removeSelectedMessageHighlight();
        r2 = r7.needSelectFromMessageId;
        if (r2 == 0) goto L_0x07ec;
    L_0x07e6:
        r2 = r7.startLoadFromMessageId;
        if (r11 != r2) goto L_0x07ec;
    L_0x07ea:
        r7.highlightMessageId = r11;
    L_0x07ec:
        r2 = r7.showScrollToMessageError;
        if (r2 == 0) goto L_0x0800;
    L_0x07f0:
        r2 = r7.startLoadFromMessageId;
        if (r11 == r2) goto L_0x0800;
    L_0x07f4:
        r2 = NUM; // 0x7f0e0648 float:1.8878299E38 double:1.053162951E-314;
        r9 = "MessageNotFound";
        r2 = org.telegram.messenger.LocaleController.getString(r9, r2);
        org.telegram.ui.Components.AlertsCreator.showSimpleToast(r7, r2);
    L_0x0800:
        r7.scrollToMessage = r6;
        if (r0 == 0) goto L_0x080c;
    L_0x0804:
        r2 = r7.scrollToMessage;
        r2 = r2.getId();
        r7.postponedScrollMessageId = r2;
    L_0x080c:
        r2 = 0;
        r7.startLoadFromMessageId = r2;
        r4 = r7.scrollToMessagePosition;
        r9 = -10000; // 0xffffffffffffd8f0 float:NaN double:NaN;
        if (r4 != r9) goto L_0x0819;
    L_0x0815:
        r4 = -9000; // 0xffffffffffffdcd8 float:NaN double:NaN;
        r7.scrollToMessagePosition = r4;
    L_0x0819:
        r4 = 2;
        if (r14 == r4) goto L_0x08a6;
    L_0x081c:
        r4 = r7.unreadMessageObject;
        if (r4 != 0) goto L_0x08a6;
    L_0x0820:
        r4 = r7.createUnreadMessageAfterId;
        if (r4 == 0) goto L_0x08a6;
    L_0x0824:
        r4 = r7.currentEncryptedChat;
        if (r4 != 0) goto L_0x083b;
    L_0x0828:
        r4 = r6.isOut();
        if (r4 == 0) goto L_0x0834;
    L_0x082e:
        r4 = r6.messageOwner;
        r4 = r4.from_scheduled;
        if (r4 == 0) goto L_0x083b;
    L_0x0834:
        r4 = r7.createUnreadMessageAfterId;
        if (r11 >= r4) goto L_0x0839;
    L_0x0838:
        goto L_0x083b;
    L_0x0839:
        r4 = 1;
        goto L_0x0850;
    L_0x083b:
        r4 = r7.currentEncryptedChat;
        if (r4 == 0) goto L_0x08a6;
    L_0x083f:
        r4 = r6.isOut();
        if (r4 == 0) goto L_0x084b;
    L_0x0845:
        r4 = r6.messageOwner;
        r4 = r4.from_scheduled;
        if (r4 == 0) goto L_0x08a6;
    L_0x084b:
        r4 = r7.createUnreadMessageAfterId;
        if (r11 > r4) goto L_0x08a6;
    L_0x084f:
        goto L_0x0839;
    L_0x0850:
        if (r14 == r4) goto L_0x085f;
    L_0x0852:
        if (r3 != 0) goto L_0x085f;
    L_0x0854:
        if (r3 != 0) goto L_0x08a6;
    L_0x0856:
        if (r28 == 0) goto L_0x08a6;
    L_0x0858:
        r3 = r1.size();
        r3 = r3 - r4;
        if (r8 != r3) goto L_0x08a6;
    L_0x085f:
        r3 = new org.telegram.tgnet.TLRPC$TL_message;
        r3.<init>();
        r3.message = r12;
        r2 = 0;
        r3.id = r2;
        r4 = new org.telegram.messenger.MessageObject;
        r6 = r7.currentAccount;
        r4.<init>(r6, r3, r2);
        r2 = 6;
        r4.type = r2;
        r2 = 2;
        r4.contentType = r2;
        r2 = 1;
        if (r14 != r2) goto L_0x087f;
    L_0x0879:
        r6 = r7.messages;
        r6.add(r2, r4);
        goto L_0x088a;
    L_0x087f:
        r6 = r7.messages;
        r9 = r6.size();
        r10 = r9 + -1;
        r6.add(r10, r4);
    L_0x088a:
        r7.unreadMessageObject = r4;
        r2 = 3;
        if (r14 != r2) goto L_0x089a;
    L_0x088f:
        r2 = r7.unreadMessageObject;
        r7.scrollToMessage = r2;
        r2 = 0;
        r7.startLoadFromMessageId = r2;
        r3 = -9000; // 0xffffffffffffdcd8 float:NaN double:NaN;
        r7.scrollToMessagePosition = r3;
    L_0x089a:
        r15 = r15 + 1;
        goto L_0x08a6;
    L_0x089d:
        r34 = r2;
        r35 = r3;
        r13 = r4;
        r24 = r12;
        r12 = r29;
    L_0x08a6:
        r4 = r13;
        r8 = r8 + 1;
        r13 = r50;
        r3 = r12;
        r12 = r24;
        r11 = r28;
        r10 = r32;
        r2 = r34;
        r9 = r35;
        goto L_0x041b;
    L_0x08b8:
        r34 = r2;
        r12 = r3;
        r13 = r4;
        r28 = r11;
        if (r28 == 0) goto L_0x08c3;
    L_0x08c0:
        r2 = 0;
        r7.createUnreadMessageAfterId = r2;
    L_0x08c3:
        r2 = r12;
        if (r14 != 0) goto L_0x08cf;
    L_0x08c6:
        if (r15 != 0) goto L_0x08cf;
    L_0x08c8:
        r3 = r7.loadsCount;
        r4 = 1;
        r3 = r3 - r4;
        r7.loadsCount = r3;
        goto L_0x08d0;
    L_0x08cf:
        r4 = 1;
    L_0x08d0:
        r3 = r7.forwardEndReached;
        r3 = r3[r34];
        if (r3 == 0) goto L_0x08e2;
    L_0x08d6:
        r3 = r34;
        if (r3 == r4) goto L_0x08e4;
    L_0x08da:
        r6 = 0;
        r7.first_unread_id = r6;
        r7.last_message_id = r6;
        r7.createUnreadMessageAfterId = r6;
        goto L_0x08e4;
    L_0x08e2:
        r3 = r34;
    L_0x08e4:
        if (r14 != r4) goto L_0x097d;
    L_0x08e6:
        r1 = r1.size();
        r4 = r27;
        if (r1 == r4) goto L_0x0917;
    L_0x08ee:
        if (r21 == 0) goto L_0x08fa;
    L_0x08f0:
        r1 = r7.currentEncryptedChat;
        if (r1 != 0) goto L_0x08fa;
    L_0x08f4:
        r1 = r7.forwardEndReached;
        r1 = r1[r3];
        if (r1 == 0) goto L_0x0917;
    L_0x08fa:
        r1 = r7.forwardEndReached;
        r4 = 1;
        r1[r3] = r4;
        r1 = 0;
        if (r3 == r4) goto L_0x0913;
    L_0x0902:
        r7.first_unread_id = r1;
        r7.last_message_id = r1;
        r7.createUnreadMessageAfterId = r1;
        r4 = r7.chatAdapter;
        r6 = r4.loadingDownRow;
        r4.notifyItemRemoved(r6);
        r4 = 1;
        goto L_0x0914;
    L_0x0913:
        r4 = 0;
    L_0x0914:
        r7.startLoadFromMessageId = r1;
        goto L_0x0918;
    L_0x0917:
        r4 = 0;
    L_0x0918:
        if (r15 <= 0) goto L_0x0978;
    L_0x091a:
        r1 = r7.chatLayoutManager;
        r1 = r1.findFirstVisibleItemPosition();
        if (r1 != 0) goto L_0x0924;
    L_0x0922:
        r1 = r1 + 1;
    L_0x0924:
        r6 = r7.chatLayoutManager;
        r6 = r6.findViewByPosition(r1);
        if (r6 == 0) goto L_0x094d;
    L_0x092c:
        r10 = r1;
        r8 = r6;
    L_0x092e:
        r11 = r8 instanceof org.telegram.ui.Cells.ChatMessageCell;
        if (r11 == 0) goto L_0x094a;
    L_0x0932:
        r11 = r8;
        r11 = (org.telegram.ui.Cells.ChatMessageCell) r11;
        r11 = r11.getMessageObject();
        r11 = r11.hasValidGroupId();
        if (r11 == 0) goto L_0x094a;
    L_0x093f:
        r10 = r10 + 1;
        r8 = r7.chatLayoutManager;
        r8 = r8.findViewByPosition(r10);
        if (r8 != 0) goto L_0x092e;
    L_0x0949:
        goto L_0x094f;
    L_0x094a:
        r6 = r8;
        r1 = r10;
        goto L_0x094f;
    L_0x094d:
        r1 = -1;
        r6 = 0;
    L_0x094f:
        if (r6 != 0) goto L_0x0953;
    L_0x0951:
        r6 = 0;
        goto L_0x0966;
    L_0x0953:
        r8 = r7.chatListView;
        r8 = r8.getMeasuredHeight();
        r6 = r6.getBottom();
        r8 = r8 - r6;
        r6 = r7.chatListView;
        r6 = r6.getPaddingBottom();
        r6 = r8 - r6;
    L_0x0966:
        if (r0 != 0) goto L_0x0978;
    L_0x0968:
        r8 = r7.chatAdapter;
        r9 = 1;
        r8.notifyItemRangeInserted(r9, r15);
        r8 = -1;
        if (r1 == r8) goto L_0x0978;
    L_0x0971:
        r8 = r7.chatScrollHelper;
        r1 = r1 + r15;
        r1 = r1 - r4;
        r8.scrollToPosition(r1, r6);
    L_0x0978:
        r1 = 0;
        r7.loadingForward = r1;
        goto L_0x0bbe;
    L_0x097d:
        r4 = r27;
        r6 = r1.size();
        if (r6 >= r4) goto L_0x09c2;
    L_0x0985:
        r4 = 3;
        if (r14 == r4) goto L_0x09c2;
    L_0x0988:
        r4 = 4;
        if (r14 == r4) goto L_0x09c2;
    L_0x098b:
        if (r21 == 0) goto L_0x09ac;
    L_0x098d:
        r1 = r7.currentEncryptedChat;
        if (r1 != 0) goto L_0x099f;
    L_0x0991:
        r1 = 1;
        if (r3 != r1) goto L_0x09a4;
    L_0x0994:
        r8 = r7.mergeDialogId;
        r10 = 0;
        r4 = (r8 > r10 ? 1 : (r8 == r10 ? 0 : -1));
        if (r4 == 0) goto L_0x09a4;
    L_0x099c:
        if (r30 == 0) goto L_0x09a4;
    L_0x099e:
        goto L_0x09a0;
    L_0x099f:
        r1 = 1;
    L_0x09a0:
        r4 = r7.endReached;
        r4[r3] = r1;
    L_0x09a4:
        r4 = 2;
        if (r14 == r4) goto L_0x09c2;
    L_0x09a7:
        r6 = r7.cacheEndReached;
        r6[r3] = r1;
        goto L_0x09c2;
    L_0x09ac:
        r4 = 2;
        if (r14 != r4) goto L_0x09bd;
    L_0x09af:
        r1 = r1.size();
        if (r1 != 0) goto L_0x09c2;
    L_0x09b5:
        r1 = r7.messages;
        r1 = r1.isEmpty();
        if (r1 == 0) goto L_0x09c2;
    L_0x09bd:
        r1 = r7.endReached;
        r4 = 1;
        r1[r3] = r4;
    L_0x09c2:
        r1 = 0;
        r7.loading = r1;
        r1 = r7.chatListView;
        if (r1 == 0) goto L_0x0bb5;
    L_0x09c9:
        r1 = r7.first;
        if (r1 != 0) goto L_0x0a92;
    L_0x09cd:
        r1 = r7.scrollToTopOnResume;
        if (r1 != 0) goto L_0x0a92;
    L_0x09d1:
        r1 = r7.forceScrollToTop;
        if (r1 == 0) goto L_0x09d7;
    L_0x09d5:
        goto L_0x0a92;
    L_0x09d7:
        if (r15 == 0) goto L_0x0a74;
    L_0x09d9:
        r1 = r7.startLoadFromMessageIdSaved;
        if (r1 != 0) goto L_0x0a74;
    L_0x09dd:
        r1 = r7.endReached;
        r1 = r1[r3];
        if (r1 == 0) goto L_0x0a05;
    L_0x09e3:
        if (r3 != 0) goto L_0x09f0;
    L_0x09e5:
        r10 = r7.mergeDialogId;
        r16 = 0;
        r1 = (r10 > r16 ? 1 : (r10 == r16 ? 0 : -1));
        if (r1 == 0) goto L_0x09ee;
    L_0x09ed:
        goto L_0x09f0;
    L_0x09ee:
        r1 = 1;
        goto L_0x09f3;
    L_0x09f0:
        r1 = 1;
        if (r3 != r1) goto L_0x0a05;
    L_0x09f3:
        r4 = r7.chatAdapter;
        r6 = r4.loadingUpRow;
        r6 = r6 - r1;
        r1 = 2;
        r4.notifyItemRangeChanged(r6, r1);
        r1 = r7.chatAdapter;
        r1.updateRows();
        r1 = 1;
        goto L_0x0a06;
    L_0x0a05:
        r1 = 0;
    L_0x0a06:
        r4 = r7.chatLayoutManager;
        r4 = r4.findFirstVisibleItemPosition();
        r6 = r7.chatLayoutManager;
        r6 = r6.findViewByPosition(r4);
        if (r6 == 0) goto L_0x0a35;
    L_0x0a14:
        r10 = r4;
        r8 = r6;
    L_0x0a16:
        r11 = r8 instanceof org.telegram.ui.Cells.ChatMessageCell;
        if (r11 == 0) goto L_0x0a32;
    L_0x0a1a:
        r11 = r8;
        r11 = (org.telegram.ui.Cells.ChatMessageCell) r11;
        r11 = r11.getMessageObject();
        r11 = r11.hasValidGroupId();
        if (r11 == 0) goto L_0x0a32;
    L_0x0a27:
        r10 = r10 + 1;
        r8 = r7.chatLayoutManager;
        r8 = r8.findViewByPosition(r10);
        if (r8 != 0) goto L_0x0a16;
    L_0x0a31:
        goto L_0x0a37;
    L_0x0a32:
        r6 = r8;
        r4 = r10;
        goto L_0x0a37;
    L_0x0a35:
        r4 = -1;
        r6 = 0;
    L_0x0a37:
        if (r6 != 0) goto L_0x0a3b;
    L_0x0a39:
        r6 = 0;
        goto L_0x0a4e;
    L_0x0a3b:
        r8 = r7.chatListView;
        r8 = r8.getMeasuredHeight();
        r6 = r6.getBottom();
        r8 = r8 - r6;
        r6 = r7.chatListView;
        r6 = r6.getPaddingBottom();
        r6 = r8 - r6;
    L_0x0a4e:
        r8 = r15 - r1;
        if (r8 <= 0) goto L_0x0a68;
    L_0x0a52:
        r8 = r7.chatAdapter;
        r8 = r8.messagesEndRow;
        r10 = r7.chatAdapter;
        r11 = r10.loadingUpRow;
        r10.notifyItemChanged(r11);
        r10 = r7.chatAdapter;
        r1 = r15 - r1;
        r10.notifyItemRangeInserted(r8, r1);
    L_0x0a68:
        r1 = -1;
        if (r4 == r1) goto L_0x0b9a;
    L_0x0a6b:
        if (r0 != 0) goto L_0x0b9a;
    L_0x0a6d:
        r1 = r7.chatScrollHelper;
        r1.scrollToPosition(r4, r6);
        goto L_0x0b9a;
    L_0x0a74:
        r1 = r7.endReached;
        r1 = r1[r3];
        if (r1 == 0) goto L_0x0b9a;
    L_0x0a7a:
        if (r3 != 0) goto L_0x0a84;
    L_0x0a7c:
        r10 = r7.mergeDialogId;
        r16 = 0;
        r1 = (r10 > r16 ? 1 : (r10 == r16 ? 0 : -1));
        if (r1 == 0) goto L_0x0a87;
    L_0x0a84:
        r1 = 1;
        if (r3 != r1) goto L_0x0b9a;
    L_0x0a87:
        r1 = r7.chatAdapter;
        r4 = r1.loadingUpRow;
        r1.notifyItemRemoved(r4);
        goto L_0x0b9a;
    L_0x0a92:
        r1 = 0;
        r7.forceScrollToTop = r1;
        if (r0 != 0) goto L_0x0a9c;
    L_0x0a97:
        r1 = r7.chatAdapter;
        r1.notifyDataSetChanged();
    L_0x0a9c:
        r1 = r7.scrollToMessage;
        if (r1 == 0) goto L_0x0b71;
    L_0x0aa0:
        r4 = r7.startLoadFromMessageOffset;
        r6 = NUM; // 0x7fffffff float:NaN double:1.060997895E-314;
        if (r4 == r6) goto L_0x0ab3;
    L_0x0aa7:
        r1 = -r4;
        r4 = r7.chatListView;
        r4 = r4.getPaddingBottom();
        r1 = r1 - r4;
        r7.startLoadFromMessageOffset = r6;
    L_0x0ab1:
        r4 = 1;
        goto L_0x0acd;
    L_0x0ab3:
        r4 = r7.scrollToMessagePosition;
        r6 = -9000; // 0xffffffffffffdcd8 float:NaN double:NaN;
        if (r4 != r6) goto L_0x0abf;
    L_0x0ab9:
        r1 = r7.getScrollOffsetForMessage(r1);
    L_0x0abd:
        r4 = 0;
        goto L_0x0acd;
    L_0x0abf:
        r1 = -10000; // 0xffffffffffffd8f0 float:NaN double:NaN;
        if (r4 != r1) goto L_0x0acb;
    L_0x0ac3:
        r1 = NUM; // 0x41300000 float:11.0 double:5.4034219E-315;
        r1 = org.telegram.messenger.AndroidUtilities.dp(r1);
        r1 = -r1;
        goto L_0x0abd;
    L_0x0acb:
        r1 = r4;
        goto L_0x0ab1;
    L_0x0acd:
        if (r0 != 0) goto L_0x0b26;
    L_0x0acf:
        r6 = r7.messages;
        r6 = r6.isEmpty();
        if (r6 != 0) goto L_0x0b26;
    L_0x0ad7:
        r6 = r7.chatAdapter;
        r6 = r6.loadingUpRow;
        r8 = -1;
        if (r6 == r8) goto L_0x0b14;
    L_0x0ae0:
        r6 = r7.messages;
        r6 = r6.isEmpty();
        if (r6 != 0) goto L_0x0b14;
    L_0x0ae8:
        r6 = r7.messages;
        r8 = r6.size();
        r9 = 1;
        r8 = r8 - r9;
        r6 = r6.get(r8);
        r8 = r7.scrollToMessage;
        if (r6 == r8) goto L_0x0b08;
    L_0x0af8:
        r6 = r7.messages;
        r8 = r6.size();
        r10 = 2;
        r8 = r8 - r10;
        r6 = r6.get(r8);
        r8 = r7.scrollToMessage;
        if (r6 != r8) goto L_0x0b14;
    L_0x0b08:
        r6 = r7.chatScrollHelper;
        r8 = r7.chatAdapter;
        r8 = r8.loadingUpRow;
        r6.scrollToPosition(r8, r1, r4);
        goto L_0x0b26;
    L_0x0b14:
        r6 = r7.chatScrollHelper;
        r8 = r7.chatAdapter;
        r8 = r8.messagesStartRow;
        r10 = r7.messages;
        r11 = r7.scrollToMessage;
        r10 = r10.indexOf(r11);
        r8 = r8 + r10;
        r6.scrollToPosition(r8, r1, r4);
    L_0x0b26:
        r1 = r7.chatListView;
        r1.invalidate();
        r1 = r7.scrollToMessagePosition;
        r4 = -10000; // 0xffffffffffffd8f0 float:NaN double:NaN;
        if (r1 == r4) goto L_0x0b35;
    L_0x0b31:
        r4 = -9000; // 0xffffffffffffdcd8 float:NaN double:NaN;
        if (r1 != r4) goto L_0x0b67;
    L_0x0b35:
        r1 = 1;
        r7.canShowPagedownButton = r1;
        r7.updatePagedownButtonVisibility(r1);
        if (r48 == 0) goto L_0x0b67;
    L_0x0b3d:
        r4 = r7.pagedownButtonCounter;
        if (r4 == 0) goto L_0x0b67;
    L_0x0b41:
        r6 = 0;
        r4.setVisibility(r6);
        r4 = r7.prevSetUnreadCount;
        r8 = r7.newUnreadMessageCount;
        if (r4 == r8) goto L_0x0b67;
    L_0x0b4b:
        r4 = r7.pagedownButtonCounter;
        r8 = new java.lang.Object[r1];
        r12 = r48;
        r7.newUnreadMessageCount = r12;
        r1 = java.lang.Integer.valueOf(r12);
        r8[r6] = r1;
        r1 = r26;
        r6 = java.lang.String.format(r1, r8);
        r4.setText(r6);
        r4 = r7.newUnreadMessageCount;
        r7.prevSetUnreadCount = r4;
        goto L_0x0b69;
    L_0x0b67:
        r1 = r26;
    L_0x0b69:
        r4 = -10000; // 0xffffffffffffd8f0 float:NaN double:NaN;
        r7.scrollToMessagePosition = r4;
        r4 = 0;
        r7.scrollToMessage = r4;
        goto L_0x0b76;
    L_0x0b71:
        r1 = r26;
        r47.moveScrollToLastMessage();
    L_0x0b76:
        r4 = r44;
        if (r4 == 0) goto L_0x0b9a;
    L_0x0b7a:
        r6 = 1;
        r7.showMentionDownButton(r6, r6);
        r8 = r7.mentiondownButtonCounter;
        if (r8 == 0) goto L_0x0b9b;
    L_0x0b82:
        r9 = 0;
        r8.setVisibility(r9);
        r8 = r7.mentiondownButtonCounter;
        r10 = new java.lang.Object[r6];
        r7.newMentionsCount = r4;
        r4 = java.lang.Integer.valueOf(r4);
        r10[r9] = r4;
        r1 = java.lang.String.format(r1, r10);
        r8.setText(r1);
        goto L_0x0b9b;
    L_0x0b9a:
        r6 = 1;
    L_0x0b9b:
        r1 = r7.paused;
        if (r1 == 0) goto L_0x0ba7;
    L_0x0b9f:
        r7.scrollToTopOnResume = r6;
        r1 = r7.scrollToMessage;
        if (r1 == 0) goto L_0x0ba7;
    L_0x0ba5:
        r7.scrollToTopUnReadOnResume = r6;
    L_0x0ba7:
        r1 = r7.first;
        if (r1 == 0) goto L_0x0bbe;
    L_0x0bab:
        r1 = r7.chatListView;
        if (r1 == 0) goto L_0x0bbe;
    L_0x0baf:
        r4 = r7.emptyViewContainer;
        r1.setEmptyView(r4);
        goto L_0x0bbe;
    L_0x0bb5:
        r1 = 1;
        r7.scrollToTopOnResume = r1;
        r4 = r7.scrollToMessage;
        if (r4 == 0) goto L_0x0bbe;
    L_0x0bbc:
        r7.scrollToTopUnReadOnResume = r1;
    L_0x0bbe:
        if (r13 == 0) goto L_0x0CLASSNAME;
    L_0x0bc0:
        r1 = 0;
    L_0x0bc1:
        r4 = r13.size();
        if (r1 >= r4) goto L_0x0CLASSNAME;
    L_0x0bc7:
        r4 = r13;
        r6 = r4.valueAt(r1);
        r6 = (org.telegram.messenger.MessageObject.GroupedMessages) r6;
        r6.calculate();
        r8 = r7.chatAdapter;
        if (r8 == 0) goto L_0x0CLASSNAME;
    L_0x0bd5:
        if (r5 == 0) goto L_0x0CLASSNAME;
    L_0x0bd7:
        r10 = r4.keyAt(r1);
        r8 = r5.indexOfKey(r10);
        if (r8 < 0) goto L_0x0CLASSNAME;
    L_0x0be1:
        r8 = r6.messages;
        r10 = r8.size();
        r9 = 1;
        r10 = r10 - r9;
        r8 = r8.get(r10);
        r8 = (org.telegram.messenger.MessageObject) r8;
        r10 = r7.messages;
        r8 = r10.indexOf(r8);
        if (r8 < 0) goto L_0x0CLASSNAME;
    L_0x0bf7:
        r10 = r7.chatAdapter;
        r11 = r10.messagesStartRow;
        r8 = r8 + r11;
        r6 = r6.messages;
        r6 = r6.size();
        r10.notifyItemRangeChanged(r8, r6);
    L_0x0CLASSNAME:
        r1 = r1 + 1;
        r13 = r4;
        goto L_0x0bc1;
    L_0x0CLASSNAME:
        r1 = r7.first;
        if (r1 == 0) goto L_0x0CLASSNAME;
    L_0x0c0d:
        r1 = r7.messages;
        r1 = r1.size();
        if (r1 <= 0) goto L_0x0CLASSNAME;
    L_0x0CLASSNAME:
        r1 = 0;
        r7.first = r1;
    L_0x0CLASSNAME:
        r1 = r7.messages;
        r1 = r1.isEmpty();
        if (r1 == 0) goto L_0x0CLASSNAME;
    L_0x0CLASSNAME:
        r1 = r7.currentEncryptedChat;
        if (r1 != 0) goto L_0x0CLASSNAME;
    L_0x0CLASSNAME:
        r1 = r7.currentUser;
        if (r1 == 0) goto L_0x0CLASSNAME;
    L_0x0CLASSNAME:
        r1 = r1.bot;
        if (r1 == 0) goto L_0x0CLASSNAME;
    L_0x0c2c:
        r1 = r7.botUser;
        if (r1 != 0) goto L_0x0CLASSNAME;
    L_0x0CLASSNAME:
        r7.botUser = r2;
        r47.updateBottomOverlay();
    L_0x0CLASSNAME:
        if (r15 != 0) goto L_0x0CLASSNAME;
    L_0x0CLASSNAME:
        r1 = r7.mergeDialogId;
        r4 = 0;
        r6 = (r1 > r4 ? 1 : (r1 == r4 ? 0 : -1));
        if (r6 == 0) goto L_0x0CLASSNAME;
    L_0x0c3f:
        if (r3 == 0) goto L_0x0CLASSNAME;
    L_0x0CLASSNAME:
        goto L_0x0CLASSNAME;
    L_0x0CLASSNAME:
        r1 = 1;
        goto L_0x0CLASSNAME;
    L_0x0CLASSNAME:
        r1 = r7.currentEncryptedChat;
        if (r1 == 0) goto L_0x0CLASSNAME;
    L_0x0CLASSNAME:
        r1 = r7.endReached;
        r2 = 0;
        r1 = r1[r2];
        if (r1 != 0) goto L_0x0CLASSNAME;
    L_0x0c4f:
        goto L_0x0CLASSNAME;
    L_0x0CLASSNAME:
        r7.first = r1;
        r1 = r7.chatListView;
        if (r1 == 0) goto L_0x0c5a;
    L_0x0CLASSNAME:
        r2 = 0;
        r1.setEmptyView(r2);
    L_0x0c5a:
        r1 = r7.emptyViewContainer;
        if (r1 == 0) goto L_0x0c6b;
    L_0x0c5e:
        r2 = 4;
        r1.setVisibility(r2);
        goto L_0x0c6b;
    L_0x0CLASSNAME:
        r2 = 4;
        r1 = r7.progressView;
        if (r1 == 0) goto L_0x0c6b;
    L_0x0CLASSNAME:
        r1.setVisibility(r2);
    L_0x0c6b:
        if (r15 != 0) goto L_0x0caa;
    L_0x0c6d:
        r1 = r7.mergeDialogId;
        r4 = 0;
        r6 = (r1 > r4 ? 1 : (r1 == r4 ? 0 : -1));
        if (r6 == 0) goto L_0x0caa;
    L_0x0CLASSNAME:
        if (r3 != 0) goto L_0x0caa;
    L_0x0CLASSNAME:
        r1 = r47.getNotificationCenter();
        r2 = 8;
        r2 = new int[r2];
        r4 = org.telegram.messenger.NotificationCenter.chatInfoDidLoad;
        r5 = 0;
        r2[r5] = r4;
        r4 = org.telegram.messenger.NotificationCenter.dialogsNeedReload;
        r5 = 1;
        r2[r5] = r4;
        r4 = org.telegram.messenger.NotificationCenter.scheduledMessagesUpdated;
        r5 = 2;
        r2[r5] = r4;
        r4 = org.telegram.messenger.NotificationCenter.closeChats;
        r5 = 3;
        r2[r5] = r4;
        r4 = org.telegram.messenger.NotificationCenter.messagesDidLoad;
        r5 = 4;
        r2[r5] = r4;
        r4 = org.telegram.messenger.NotificationCenter.botKeyboardDidLoad;
        r5 = 5;
        r2[r5] = r4;
        r4 = org.telegram.messenger.NotificationCenter.userInfoDidLoad;
        r5 = 6;
        r2[r5] = r4;
        r4 = 7;
        r5 = org.telegram.messenger.NotificationCenter.needDeleteDialog;
        r2[r4] = r5;
        r1.setAllowedNotificationsDutingAnimation(r2);
    L_0x0caa:
        r1 = 0;
        if (r25 == 0) goto L_0x0cb0;
    L_0x0cad:
        r7.showFloatingDateView(r1);
    L_0x0cb0:
        r7.checkScrollForLoad(r1);
        r1 = 1;
        r7.setItemAnimationsEnabled(r1);
        if (r0 == 0) goto L_0x2eac;
    L_0x0cb9:
        r0 = r7.chatAdapter;
        r0.notifyDataSetChanged();
        r0 = r7.progressDialog;
        if (r0 == 0) goto L_0x0cc5;
    L_0x0cc2:
        r0.dismiss();
    L_0x0cc5:
        r0 = r7.postponedScrollMessageId;
        if (r0 != 0) goto L_0x0ce2;
    L_0x0cc9:
        r0 = r7.chatScrollHelperCallback;
        r1 = 0;
        r0.scrollTo = r1;
        r0 = r7.chatScrollHelperCallback;
        r1 = 1;
        r0.lastBottom = r1;
        r0 = r7.chatScrollHelperCallback;
        r2 = 0;
        r0.lastItemOffset = r2;
        r0 = r7.chatScrollHelper;
        r0.scrollToPosition(r2, r2, r1, r1);
        goto L_0x2eac;
    L_0x0ce2:
        r1 = r7.messagesDict;
        r1 = r1[r3];
        r0 = r1.get(r0);
        r0 = (org.telegram.messenger.MessageObject) r0;
        if (r0 == 0) goto L_0x0d0d;
    L_0x0cee:
        r1 = r7.groupedMessagesMap;
        r2 = r0.getGroupId();
        r1 = r1.get(r2);
        r1 = (org.telegram.messenger.MessageObject.GroupedMessages) r1;
        r2 = r0.getGroupId();
        r4 = 0;
        r6 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1));
        if (r6 == 0) goto L_0x0d0d;
    L_0x0d04:
        if (r1 == 0) goto L_0x0d0d;
    L_0x0d06:
        r1 = r1.findPrimaryMessageObject();
        if (r1 == 0) goto L_0x0d0d;
    L_0x0d0c:
        r0 = r1;
    L_0x0d0d:
        if (r0 == 0) goto L_0x2eac;
    L_0x0d0f:
        r1 = r7.messages;
        r1 = r1.indexOf(r0);
        if (r1 < 0) goto L_0x2eac;
    L_0x0d17:
        r47.removeSelectedMessageHighlight();
        r1 = r0.getId();
        r7.highlightMessageId = r1;
        r1 = r7.getScrollOffsetForMessage(r0);
        r2 = r7.chatScrollHelperCallback;
        r2.scrollTo = r0;
        r2 = r7.chatScrollHelperCallback;
        r3 = 0;
        r2.lastBottom = r3;
        r2 = r7.chatScrollHelperCallback;
        r2.lastItemOffset = r1;
        r2 = r7.messages;
        r3 = r2.size();
        r4 = 1;
        r3 = r3 - r4;
        r2 = r2.get(r3);
        if (r2 != r0) goto L_0x0d51;
    L_0x0d42:
        r0 = r7.chatScrollHelper;
        r2 = r7.chatAdapter;
        r2 = r2.getItemCount();
        r2 = r2 - r4;
        r3 = 0;
        r0.scrollToPosition(r2, r1, r3, r4);
        goto L_0x2eac;
    L_0x0d51:
        r3 = 0;
        r2 = r7.chatScrollHelper;
        r5 = r7.chatAdapter;
        r5 = r5.messagesStartRow;
        r6 = r7.messages;
        r0 = r6.indexOf(r0);
        r5 = r5 + r0;
        r2.scrollToPosition(r5, r1, r3, r4);
        goto L_0x2eac;
    L_0x0d64:
        r2 = r3;
        r1 = r5;
        r3 = org.telegram.messenger.NotificationCenter.emojiDidLoad;
        if (r0 != r3) goto L_0x0d9d;
    L_0x0d6a:
        r0 = r7.chatListView;
        if (r0 == 0) goto L_0x0d71;
    L_0x0d6e:
        r0.invalidateViews();
    L_0x0d71:
        r0 = r7.replyObjectTextView;
        if (r0 == 0) goto L_0x0d78;
    L_0x0d75:
        r0.invalidate();
    L_0x0d78:
        r0 = r7.alertTextView;
        if (r0 == 0) goto L_0x0d7f;
    L_0x0d7c:
        r0.invalidate();
    L_0x0d7f:
        r0 = r7.pinnedMessageTextView;
        if (r0 == 0) goto L_0x0d86;
    L_0x0d83:
        r0.invalidate();
    L_0x0d86:
        r0 = r7.mentionListView;
        if (r0 == 0) goto L_0x0d8d;
    L_0x0d8a:
        r0.invalidateViews();
    L_0x0d8d:
        r0 = r7.stickersListView;
        if (r0 == 0) goto L_0x0d94;
    L_0x0d91:
        r0.invalidateViews();
    L_0x0d94:
        r0 = r7.messagesSearchListView;
        if (r0 == 0) goto L_0x2eac;
    L_0x0d98:
        r0.invalidateViews();
        goto L_0x2eac;
    L_0x0d9d:
        r3 = org.telegram.messenger.NotificationCenter.didUpdateConnectionState;
        if (r0 != r3) goto L_0x0db2;
    L_0x0da1:
        r0 = org.telegram.tgnet.ConnectionsManager.getInstance(r49);
        r0 = r0.getConnectionState();
        r1 = 3;
        if (r0 != r1) goto L_0x2eac;
    L_0x0dac:
        r3 = 0;
        r7.checkAutoDownloadMessages(r3);
        goto L_0x2eac;
    L_0x0db2:
        r3 = 0;
        r4 = org.telegram.messenger.NotificationCenter.chatOnlineCountDidLoad;
        if (r0 != r4) goto L_0x0de8;
    L_0x0db7:
        r0 = r8[r3];
        r0 = (java.lang.Integer) r0;
        r1 = r7.chatInfo;
        if (r1 == 0) goto L_0x0de7;
    L_0x0dbf:
        r1 = r7.currentChat;
        if (r1 == 0) goto L_0x0de7;
    L_0x0dc3:
        r1 = r1.id;
        r0 = r0.intValue();
        if (r1 == r0) goto L_0x0dcc;
    L_0x0dcb:
        goto L_0x0de7;
    L_0x0dcc:
        r0 = r7.chatInfo;
        r1 = 1;
        r1 = r8[r1];
        r1 = (java.lang.Integer) r1;
        r1 = r1.intValue();
        r0.online_count = r1;
        r0 = r7.avatarContainer;
        if (r0 == 0) goto L_0x2eac;
    L_0x0ddd:
        r0.updateOnlineCount();
        r0 = r7.avatarContainer;
        r0.updateSubtitle();
        goto L_0x2eac;
    L_0x0de7:
        return;
    L_0x0de8:
        r3 = org.telegram.messenger.NotificationCenter.updateInterfaces;
        if (r0 != r3) goto L_0x0ec2;
    L_0x0dec:
        r3 = 0;
        r0 = r8[r3];
        r0 = (java.lang.Integer) r0;
        r0 = r0.intValue();
        r1 = r0 & 1;
        if (r1 != 0) goto L_0x0dfd;
    L_0x0df9:
        r2 = r0 & 16;
        if (r2 == 0) goto L_0x0e31;
    L_0x0dfd:
        r2 = r7.currentChat;
        if (r2 == 0) goto L_0x0e16;
    L_0x0e01:
        r2 = r47.getMessagesController();
        r3 = r7.currentChat;
        r3 = r3.id;
        r3 = java.lang.Integer.valueOf(r3);
        r2 = r2.getChat(r3);
        if (r2 == 0) goto L_0x0e2e;
    L_0x0e13:
        r7.currentChat = r2;
        goto L_0x0e2e;
    L_0x0e16:
        r2 = r7.currentUser;
        if (r2 == 0) goto L_0x0e2e;
    L_0x0e1a:
        r2 = r47.getMessagesController();
        r3 = r7.currentUser;
        r3 = r3.id;
        r3 = java.lang.Integer.valueOf(r3);
        r2 = r2.getUser(r3);
        if (r2 == 0) goto L_0x0e2e;
    L_0x0e2c:
        r7.currentUser = r2;
    L_0x0e2e:
        r47.updateTitle();
    L_0x0e31:
        r2 = r0 & 32;
        if (r2 != 0) goto L_0x0e3c;
    L_0x0e35:
        r2 = r0 & 4;
        if (r2 == 0) goto L_0x0e3a;
    L_0x0e39:
        goto L_0x0e3c;
    L_0x0e3a:
        r14 = 0;
        goto L_0x0e48;
    L_0x0e3c:
        r2 = r7.currentChat;
        if (r2 == 0) goto L_0x0e47;
    L_0x0e40:
        r2 = r7.avatarContainer;
        if (r2 == 0) goto L_0x0e47;
    L_0x0e44:
        r2.updateOnlineCount();
    L_0x0e47:
        r14 = 1;
    L_0x0e48:
        r2 = r0 & 2;
        if (r2 != 0) goto L_0x0e52;
    L_0x0e4c:
        r2 = r0 & 8;
        if (r2 != 0) goto L_0x0e52;
    L_0x0e50:
        if (r1 == 0) goto L_0x0e58;
    L_0x0e52:
        r47.checkAndUpdateAvatar();
        r47.updateVisibleRows();
    L_0x0e58:
        r1 = r0 & 64;
        if (r1 == 0) goto L_0x0e5d;
    L_0x0e5c:
        r14 = 1;
    L_0x0e5d:
        r1 = r0 & 8192;
        if (r1 == 0) goto L_0x0e89;
    L_0x0e61:
        r1 = r7.currentChat;
        if (r1 == 0) goto L_0x0e89;
    L_0x0e65:
        r1 = r47.getMessagesController();
        r2 = r7.currentChat;
        r2 = r2.id;
        r2 = java.lang.Integer.valueOf(r2);
        r1 = r1.getChat(r2);
        if (r1 != 0) goto L_0x0e78;
    L_0x0e77:
        return;
    L_0x0e78:
        r7.currentChat = r1;
        r47.updateBottomOverlay();
        r1 = r7.chatActivityEnterView;
        if (r1 == 0) goto L_0x0e88;
    L_0x0e81:
        r2 = r7.dialog_id;
        r4 = r7.currentAccount;
        r1.setDialogId(r2, r4);
    L_0x0e88:
        r14 = 1;
    L_0x0e89:
        r1 = r0 & 256;
        if (r1 == 0) goto L_0x0eaf;
    L_0x0e8d:
        r1 = r7.bottomOverlayChatText2;
        if (r1 == 0) goto L_0x0eaf;
    L_0x0e91:
        r1 = r7.chatInfo;
        if (r1 == 0) goto L_0x0eaf;
    L_0x0e95:
        r1 = r7.currentChat;
        r1 = org.telegram.messenger.ChatObject.isChannel(r1);
        if (r1 == 0) goto L_0x0eaf;
    L_0x0e9d:
        r1 = r7.currentChat;
        r1 = r1.megagroup;
        if (r1 != 0) goto L_0x0eaf;
    L_0x0ea3:
        r1 = r7.chatInfo;
        r1 = r1.linked_chat_id;
        r1 = -r1;
        if (r1 == 0) goto L_0x0eaf;
    L_0x0eaa:
        r1 = r7.bottomOverlayChatText2;
        r1.updateCounter();
    L_0x0eaf:
        r1 = r7.avatarContainer;
        if (r1 == 0) goto L_0x0eb8;
    L_0x0eb3:
        if (r14 == 0) goto L_0x0eb8;
    L_0x0eb5:
        r1.updateSubtitle();
    L_0x0eb8:
        r0 = r0 & 128;
        if (r0 == 0) goto L_0x2eac;
    L_0x0ebc:
        r1 = 1;
        r7.updateTopPanel(r1);
        goto L_0x2eac;
    L_0x0ec2:
        r3 = org.telegram.messenger.NotificationCenter.didReceiveNewMessages;
        if (r0 != r3) goto L_0x1891;
    L_0x0ec6:
        r3 = 0;
        r0 = r8[r3];
        r0 = (java.lang.Long) r0;
        r3 = r0.longValue();
        r5 = r7.dialog_id;
        r0 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1));
        if (r0 != 0) goto L_0x2eac;
    L_0x0ed5:
        r0 = 2;
        r3 = r8[r0];
        r3 = (java.lang.Boolean) r3;
        r0 = r3.booleanValue();
        r3 = r7.inScheduleMode;
        if (r0 == r3) goto L_0x0var_;
    L_0x0ee2:
        if (r3 != 0) goto L_0x0var_;
    L_0x0ee4:
        r0 = r7.isPaused;
        if (r0 != 0) goto L_0x0var_;
    L_0x0ee8:
        r0 = r7.forwardingMessages;
        if (r0 != 0) goto L_0x0var_;
    L_0x0eec:
        r1 = 1;
        r0 = r8[r1];
        r0 = (java.util.ArrayList) r0;
        r1 = r0.isEmpty();
        if (r1 != 0) goto L_0x0var_;
    L_0x0ef7:
        r1 = 0;
        r0 = r0.get(r1);
        r0 = (org.telegram.messenger.MessageObject) r0;
        r0 = r0.getId();
        if (r0 >= 0) goto L_0x0var_;
    L_0x0var_:
        r47.openScheduledMessages();
    L_0x0var_:
        return;
    L_0x0var_:
        r0 = r47.getUserConfig();
        r0 = r0.getClientUserId();
        r3 = 1;
        r4 = r8[r3];
        r4 = (java.util.ArrayList) r4;
        r5 = r7.currentEncryptedChat;
        if (r5 == 0) goto L_0x0f9c;
    L_0x0var_:
        r5 = r4.size();
        if (r5 != r3) goto L_0x0f9c;
    L_0x0f1f:
        r3 = 0;
        r5 = r4.get(r3);
        r5 = (org.telegram.messenger.MessageObject) r5;
        r3 = r7.currentEncryptedChat;
        if (r3 == 0) goto L_0x0f9c;
    L_0x0f2a:
        r3 = r5.isOut();
        if (r3 == 0) goto L_0x0f9c;
    L_0x0var_:
        r3 = r5.messageOwner;
        r3 = r3.action;
        r5 = r3 instanceof org.telegram.tgnet.TLRPC.TL_messageEncryptedAction;
        if (r5 == 0) goto L_0x0f9c;
    L_0x0var_:
        r3 = r3.encryptedAction;
        r3 = r3 instanceof org.telegram.tgnet.TLRPC.TL_decryptedMessageActionSetMessageTTL;
        if (r3 == 0) goto L_0x0f9c;
    L_0x0f3e:
        r3 = r47.getParentActivity();
        if (r3 == 0) goto L_0x0f9c;
    L_0x0var_:
        r3 = r7.currentEncryptedChat;
        r3 = r3.layer;
        r3 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r3);
        r5 = 17;
        if (r3 >= r5) goto L_0x0f9c;
    L_0x0var_:
        r3 = r7.currentEncryptedChat;
        r3 = r3.ttl;
        if (r3 <= 0) goto L_0x0f9c;
    L_0x0var_:
        r5 = 60;
        if (r3 > r5) goto L_0x0f9c;
    L_0x0f5a:
        r3 = new org.telegram.ui.ActionBar.AlertDialog$Builder;
        r5 = r47.getParentActivity();
        r3.<init>(r5);
        r5 = NUM; // 0x7f0e00f9 float:1.8875543E38 double:1.0531622797E-314;
        r6 = "AppName";
        r5 = org.telegram.messenger.LocaleController.getString(r6, r5);
        r3.setTitle(r5);
        r5 = NUM; // 0x7f0e076c float:1.8878891E38 double:1.0531630954E-314;
        r6 = "OK";
        r5 = org.telegram.messenger.LocaleController.getString(r6, r5);
        r6 = 0;
        r3.setPositiveButton(r5, r6);
        r5 = NUM; // 0x7f0e031b float:1.887665E38 double:1.0531625494E-314;
        r6 = 2;
        r8 = new java.lang.Object[r6];
        r6 = r7.currentUser;
        r6 = r6.first_name;
        r10 = 0;
        r8[r10] = r6;
        r9 = 1;
        r8[r9] = r6;
        r6 = "CompatibilityChat";
        r5 = org.telegram.messenger.LocaleController.formatString(r6, r5, r8);
        r3.setMessage(r5);
        r3 = r3.create();
        r7.showDialog(r3);
    L_0x0f9c:
        r3 = 0;
        r14 = 0;
    L_0x0f9e:
        r5 = r4.size();
        if (r3 >= r5) goto L_0x10f2;
    L_0x0fa4:
        r5 = r4.get(r3);
        r5 = (org.telegram.messenger.MessageObject) r5;
        r6 = r5.isOut();
        if (r6 == 0) goto L_0x1017;
    L_0x0fb0:
        if (r14 != 0) goto L_0x0fbf;
    L_0x0fb2:
        r6 = org.telegram.messenger.NotificationCenter.getGlobalInstance();
        r8 = org.telegram.messenger.NotificationCenter.closeSearchByActiveAction;
        r10 = 0;
        r11 = new java.lang.Object[r10];
        r6.postNotificationName(r8, r11);
        r14 = 1;
    L_0x0fbf:
        r6 = r7.currentChat;
        if (r6 == 0) goto L_0x1017;
    L_0x0fc3:
        r6 = r6.slowmode_enabled;
        if (r6 == 0) goto L_0x1017;
    L_0x0fc7:
        r6 = r5.isSent();
        if (r6 == 0) goto L_0x1017;
    L_0x0fcd:
        r6 = r7.inScheduleMode;
        if (r6 != 0) goto L_0x1017;
    L_0x0fd1:
        r6 = r7.chatInfo;
        if (r6 == 0) goto L_0x100a;
    L_0x0fd5:
        r8 = r5.messageOwner;
        r8 = r8.date;
        r6 = r6.slowmode_seconds;
        r8 = r8 + r6;
        r6 = r47.getConnectionsManager();
        r6 = r6.getCurrentTime();
        r10 = r47.getConnectionsManager();
        r10 = r10.getCurrentTime();
        if (r8 <= r10) goto L_0x100a;
    L_0x0fee:
        r10 = r7.chatInfo;
        r11 = r10.slowmode_next_send_date;
        r13 = r10.slowmode_seconds;
        r6 = r6 + r13;
        r6 = java.lang.Math.min(r6, r8);
        r6 = java.lang.Math.max(r11, r6);
        r10.slowmode_next_send_date = r6;
        r6 = r7.chatActivityEnterView;
        if (r6 == 0) goto L_0x100a;
    L_0x1003:
        r8 = r7.chatInfo;
        r8 = r8.slowmode_next_send_date;
        r6.setSlowModeTimer(r8);
    L_0x100a:
        r6 = r47.getMessagesController();
        r8 = r7.currentChat;
        r8 = r8.id;
        r9 = 1;
        r10 = 0;
        r6.loadFullChat(r8, r10, r9);
    L_0x1017:
        r6 = r7.currentChat;
        if (r6 == 0) goto L_0x105d;
    L_0x101b:
        r6 = r5.messageOwner;
        r6 = r6.action;
        r8 = r6 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChatDeleteUser;
        if (r8 == 0) goto L_0x1027;
    L_0x1023:
        r6 = r6.user_id;
        if (r6 == r0) goto L_0x103b;
    L_0x1027:
        r6 = r5.messageOwner;
        r6 = r6.action;
        r8 = r6 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChatAddUser;
        if (r8 == 0) goto L_0x10a5;
    L_0x102f:
        r6 = r6.users;
        r8 = java.lang.Integer.valueOf(r0);
        r6 = r6.contains(r8);
        if (r6 == 0) goto L_0x10a5;
    L_0x103b:
        r6 = r47.getMessagesController();
        r8 = r7.currentChat;
        r8 = r8.id;
        r8 = java.lang.Integer.valueOf(r8);
        r6 = r6.getChat(r8);
        if (r6 == 0) goto L_0x10a5;
    L_0x104d:
        r7.currentChat = r6;
        r47.checkActionBarMenu();
        r47.updateBottomOverlay();
        r6 = r7.avatarContainer;
        if (r6 == 0) goto L_0x10a5;
    L_0x1059:
        r6.updateSubtitle();
        goto L_0x10a5;
    L_0x105d:
        r10 = r7.inlineReturn;
        r17 = 0;
        r6 = (r10 > r17 ? 1 : (r10 == r17 ? 0 : -1));
        if (r6 == 0) goto L_0x10a5;
    L_0x1065:
        r6 = r5.messageOwner;
        r6 = r6.reply_markup;
        if (r6 == 0) goto L_0x10a5;
    L_0x106b:
        r6 = 0;
    L_0x106c:
        r8 = r5.messageOwner;
        r8 = r8.reply_markup;
        r8 = r8.rows;
        r8 = r8.size();
        if (r6 >= r8) goto L_0x10a5;
    L_0x1078:
        r8 = r5.messageOwner;
        r8 = r8.reply_markup;
        r8 = r8.rows;
        r8 = r8.get(r6);
        r8 = (org.telegram.tgnet.TLRPC.TL_keyboardButtonRow) r8;
        r10 = 0;
    L_0x1085:
        r11 = r8.buttons;
        r11 = r11.size();
        if (r10 >= r11) goto L_0x10a2;
    L_0x108d:
        r11 = r8.buttons;
        r11 = r11.get(r10);
        r11 = (org.telegram.tgnet.TLRPC.KeyboardButton) r11;
        r13 = r11 instanceof org.telegram.tgnet.TLRPC.TL_keyboardButtonSwitchInline;
        if (r13 == 0) goto L_0x109f;
    L_0x1099:
        r11 = (org.telegram.tgnet.TLRPC.TL_keyboardButtonSwitchInline) r11;
        r7.processSwitchButton(r11);
        goto L_0x10a2;
    L_0x109f:
        r10 = r10 + 1;
        goto L_0x1085;
    L_0x10a2:
        r6 = r6 + 1;
        goto L_0x106c;
    L_0x10a5:
        r6 = r5.messageOwner;
        r6 = r6.reply_to_msg_id;
        if (r6 == 0) goto L_0x10ee;
    L_0x10ab:
        r8 = r5.replyMessageObject;
        if (r8 != 0) goto L_0x10ee;
    L_0x10af:
        r8 = r7.messagesDict;
        r10 = 0;
        r8 = r8[r10];
        r6 = r8.get(r6);
        r6 = (org.telegram.messenger.MessageObject) r6;
        r5.replyMessageObject = r6;
        r6 = r5.messageOwner;
        r6 = r6.action;
        r8 = r6 instanceof org.telegram.tgnet.TLRPC.TL_messageActionPinMessage;
        if (r8 == 0) goto L_0x10c9;
    L_0x10c4:
        r8 = 0;
        r5.generatePinMessageText(r8, r8);
        goto L_0x10d9;
    L_0x10c9:
        r8 = 0;
        r10 = r6 instanceof org.telegram.tgnet.TLRPC.TL_messageActionGameScore;
        if (r10 == 0) goto L_0x10d2;
    L_0x10ce:
        r5.generateGameMessageText(r8);
        goto L_0x10d9;
    L_0x10d2:
        r6 = r6 instanceof org.telegram.tgnet.TLRPC.TL_messageActionPaymentSent;
        if (r6 == 0) goto L_0x10d9;
    L_0x10d6:
        r5.generatePaymentSentMessageText(r8);
    L_0x10d9:
        r6 = r5.isMegagroup();
        if (r6 == 0) goto L_0x10ee;
    L_0x10df:
        r5 = r5.replyMessageObject;
        if (r5 == 0) goto L_0x10ee;
    L_0x10e3:
        r5 = r5.messageOwner;
        if (r5 == 0) goto L_0x10ee;
    L_0x10e7:
        r6 = r5.flags;
        r8 = -NUM; // 0xfffffffvar_ float:-0.0 double:NaN;
        r6 = r6 | r8;
        r5.flags = r6;
    L_0x10ee:
        r3 = r3 + 1;
        goto L_0x0f9e;
    L_0x10f2:
        r3 = r7.inScheduleMode;
        if (r3 == 0) goto L_0x1102;
    L_0x10f6:
        r3 = r4.isEmpty();
        if (r3 != 0) goto L_0x1102;
    L_0x10fc:
        r3 = 1;
        r5 = 0;
        r7.replaceMessageObjects(r4, r5, r3);
        goto L_0x1103;
    L_0x1102:
        r5 = 0;
    L_0x1103:
        r3 = r7.forwardEndReached;
        r3 = r3[r5];
        if (r3 != 0) goto L_0x1277;
    L_0x1109:
        r2 = r7.currentEncryptedChat;
        if (r2 == 0) goto L_0x1111;
    L_0x110d:
        r22 = NUM; // 0x7fffffff float:NaN double:1.060997895E-314;
        goto L_0x1113;
    L_0x1111:
        r22 = -NUM; // 0xfffffffvar_ float:-0.0 double:NaN;
    L_0x1113:
        r6 = r22;
        r2 = 0;
        r3 = 0;
        r5 = -NUM; // 0xfffffffvar_ float:-0.0 double:NaN;
        r14 = 0;
    L_0x111a:
        r8 = r4.size();
        if (r2 >= r8) goto L_0x1226;
    L_0x1120:
        r8 = r4.get(r2);
        r8 = (org.telegram.messenger.MessageObject) r8;
        r10 = r8.getId();
        r11 = r7.inScheduleMode;
        if (r11 != 0) goto L_0x1145;
    L_0x112e:
        r11 = r7.currentUser;
        if (r11 == 0) goto L_0x1145;
    L_0x1132:
        r11 = r11.bot;
        if (r11 == 0) goto L_0x113c;
    L_0x1136:
        r11 = r8.isOut();
        if (r11 != 0) goto L_0x1142;
    L_0x113c:
        r11 = r7.currentUser;
        r11 = r11.id;
        if (r11 != r0) goto L_0x1145;
    L_0x1142:
        r8.setIsRead();
    L_0x1145:
        r11 = r8.messageOwner;
        r11 = r11.action;
        r13 = r7.avatarContainer;
        if (r13 == 0) goto L_0x1162;
    L_0x114d:
        r15 = r7.currentEncryptedChat;
        if (r15 == 0) goto L_0x1162;
    L_0x1151:
        r15 = r11 instanceof org.telegram.tgnet.TLRPC.TL_messageEncryptedAction;
        if (r15 == 0) goto L_0x1162;
    L_0x1155:
        r15 = r11.encryptedAction;
        r9 = r15 instanceof org.telegram.tgnet.TLRPC.TL_decryptedMessageActionSetMessageTTL;
        if (r9 == 0) goto L_0x1162;
    L_0x115b:
        r15 = (org.telegram.tgnet.TLRPC.TL_decryptedMessageActionSetMessageTTL) r15;
        r9 = r15.ttl_seconds;
        r13.setTime(r9);
    L_0x1162:
        r9 = r11 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChatMigrateTo;
        if (r9 == 0) goto L_0x116a;
    L_0x1166:
        r7.migrateToNewChat(r8);
        return;
    L_0x116a:
        r9 = r7.currentChat;
        if (r9 == 0) goto L_0x117b;
    L_0x116e:
        r9 = r9.megagroup;
        if (r9 == 0) goto L_0x117b;
    L_0x1172:
        r9 = r11 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChatAddUser;
        if (r9 != 0) goto L_0x117a;
    L_0x1176:
        r9 = r11 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChatDeleteUser;
        if (r9 == 0) goto L_0x117b;
    L_0x117a:
        r3 = 1;
    L_0x117b:
        if (r2 != 0) goto L_0x118e;
    L_0x117d:
        r9 = r8.messageOwner;
        r9 = r9.id;
        if (r9 >= 0) goto L_0x118e;
    L_0x1183:
        r9 = r8.type;
        r13 = 5;
        if (r9 != r13) goto L_0x118e;
    L_0x1188:
        r9 = r7.inScheduleMode;
        if (r9 != 0) goto L_0x118e;
    L_0x118c:
        r7.needAnimateToMessage = r8;
    L_0x118e:
        r9 = r8.isOut();
        if (r9 == 0) goto L_0x119f;
    L_0x1194:
        r9 = r8.isSending();
        if (r9 == 0) goto L_0x119f;
    L_0x119a:
        r9 = 0;
        r7.scrollToLastMessage(r9);
        return;
    L_0x119f:
        r9 = 0;
        r12 = r8.type;
        if (r12 < 0) goto L_0x1222;
    L_0x11a4:
        r12 = r7.messagesDict;
        r13 = r12[r9];
        r9 = r13.indexOfKey(r10);
        if (r9 < 0) goto L_0x11b0;
    L_0x11ae:
        goto L_0x1222;
    L_0x11b0:
        r9 = r7.currentChat;
        if (r9 == 0) goto L_0x11ca;
    L_0x11b4:
        r9 = r9.creator;
        if (r9 == 0) goto L_0x11ca;
    L_0x11b8:
        r9 = r11 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChatCreate;
        if (r9 != 0) goto L_0x1222;
    L_0x11bc:
        r9 = r11 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChatEditPhoto;
        if (r9 == 0) goto L_0x11ca;
    L_0x11c0:
        r9 = r7.messages;
        r9 = r9.size();
        r13 = 4;
        if (r9 >= r13) goto L_0x11ca;
    L_0x11c9:
        goto L_0x1222;
    L_0x11ca:
        r9 = r11 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChannelMigrateFrom;
        if (r9 == 0) goto L_0x11cf;
    L_0x11ce:
        goto L_0x1222;
    L_0x11cf:
        r9 = 0;
        r7.addToPolls(r8, r9);
        r8.checkLayout();
        r9 = r8.messageOwner;
        r9 = r9.date;
        r5 = java.lang.Math.max(r5, r9);
        if (r10 <= 0) goto L_0x11ed;
    L_0x11e0:
        r6 = java.lang.Math.max(r10, r6);
        r9 = r7.last_message_id;
        r9 = java.lang.Math.max(r9, r10);
        r7.last_message_id = r9;
        goto L_0x11fd;
    L_0x11ed:
        r9 = r7.currentEncryptedChat;
        if (r9 == 0) goto L_0x11fd;
    L_0x11f1:
        r6 = java.lang.Math.min(r10, r6);
        r9 = r7.last_message_id;
        r9 = java.lang.Math.min(r9, r10);
        r7.last_message_id = r9;
    L_0x11fd:
        r9 = r8.messageOwner;
        r9 = r9.mentioned;
        if (r9 == 0) goto L_0x1210;
    L_0x1203:
        r9 = r8.isContentUnread();
        if (r9 == 0) goto L_0x1210;
    L_0x1209:
        r9 = r7.newMentionsCount;
        r10 = 1;
        r9 = r9 + r10;
        r7.newMentionsCount = r9;
        goto L_0x1211;
    L_0x1210:
        r10 = 1;
    L_0x1211:
        r9 = r7.newUnreadMessageCount;
        r11 = r9 + 1;
        r7.newUnreadMessageCount = r11;
        r8 = r8.type;
        r10 = 10;
        if (r8 == r10) goto L_0x1221;
    L_0x121d:
        r10 = 11;
        if (r8 != r10) goto L_0x1222;
    L_0x1221:
        r14 = 1;
    L_0x1222:
        r2 = r2 + 1;
        goto L_0x111a;
    L_0x1226:
        r0 = r7.newUnreadMessageCount;
        if (r0 == 0) goto L_0x124d;
    L_0x122a:
        r0 = r7.pagedownButtonCounter;
        if (r0 == 0) goto L_0x124d;
    L_0x122e:
        r2 = 0;
        r0.setVisibility(r2);
        r0 = r7.prevSetUnreadCount;
        r5 = r7.newUnreadMessageCount;
        if (r0 == r5) goto L_0x124e;
    L_0x1238:
        r7.prevSetUnreadCount = r5;
        r0 = r7.pagedownButtonCounter;
        r6 = 1;
        r8 = new java.lang.Object[r6];
        r5 = java.lang.Integer.valueOf(r5);
        r8[r2] = r5;
        r5 = java.lang.String.format(r1, r8);
        r0.setText(r5);
        goto L_0x124e;
    L_0x124d:
        r2 = 0;
    L_0x124e:
        r0 = r7.newMentionsCount;
        if (r0 == 0) goto L_0x1270;
    L_0x1252:
        r0 = r7.mentiondownButtonCounter;
        if (r0 == 0) goto L_0x1270;
    L_0x1256:
        r0.setVisibility(r2);
        r0 = r7.mentiondownButtonCounter;
        r5 = 1;
        r6 = new java.lang.Object[r5];
        r8 = r7.newMentionsCount;
        r8 = java.lang.Integer.valueOf(r8);
        r6[r2] = r8;
        r1 = java.lang.String.format(r1, r6);
        r0.setText(r1);
        r7.showMentionDownButton(r5, r5);
    L_0x1270:
        r47.updateVisibleRows();
        r22 = r3;
        goto L_0x1840;
    L_0x1277:
        r3 = org.telegram.messenger.BuildVars.LOGS_ENABLED;
        if (r3 == 0) goto L_0x129d;
    L_0x127b:
        r3 = new java.lang.StringBuilder;
        r3.<init>();
        r5 = "received new messages ";
        r3.append(r5);
        r5 = r4.size();
        r3.append(r5);
        r5 = " in dialog ";
        r3.append(r5);
        r5 = r7.dialog_id;
        r3.append(r5);
        r3 = r3.toString();
        org.telegram.messenger.FileLog.d(r3);
    L_0x129d:
        r3 = 0;
        r5 = 0;
        r6 = 0;
        r8 = 0;
        r10 = 0;
        r14 = 0;
    L_0x12a3:
        r11 = r4.size();
        if (r3 >= r11) goto L_0x1733;
    L_0x12a9:
        r11 = r4.get(r3);
        r11 = (org.telegram.messenger.MessageObject) r11;
        r13 = r11.scheduled;
        r15 = r7.inScheduleMode;
        if (r13 == r15) goto L_0x12c0;
    L_0x12b5:
        r13 = r0;
        r26 = r1;
        r50 = r8;
    L_0x12ba:
        r22 = r10;
        r8 = -10000; // 0xffffffffffffd8f0 float:NaN double:NaN;
        goto L_0x1727;
    L_0x12c0:
        r13 = r11.getId();
        r15 = r7.inScheduleMode;
        if (r15 == 0) goto L_0x1324;
    L_0x12c8:
        r15 = r7.messagesDict;
        r12 = 0;
        r15 = r15[r12];
        r15 = r15.indexOfKey(r13);
        if (r15 < 0) goto L_0x1324;
    L_0x12d3:
        r15 = r7.messagesDict;
        r15 = r15[r12];
        r15 = r15.get(r13);
        r15 = (org.telegram.messenger.MessageObject) r15;
        r9 = r7.messagesDict;
        r9 = r9[r12];
        r9.remove(r13);
        if (r15 == 0) goto L_0x1324;
    L_0x12e6:
        r9 = r7.messages;
        r9 = r9.indexOf(r15);
        r12 = r7.messages;
        r12.remove(r9);
        r12 = r7.messagesByDays;
        r50 = r8;
        r8 = r15.dateKey;
        r8 = r12.get(r8);
        r8 = (java.util.ArrayList) r8;
        r8.remove(r15);
        r8 = r8.isEmpty();
        if (r8 == 0) goto L_0x131c;
    L_0x1306:
        r8 = r7.messagesByDays;
        r12 = r15.dateKey;
        r8.remove(r12);
        if (r9 < 0) goto L_0x131c;
    L_0x130f:
        r8 = r7.messages;
        r8 = r8.size();
        if (r9 >= r8) goto L_0x131c;
    L_0x1317:
        r8 = r7.messages;
        r8.remove(r9);
    L_0x131c:
        r8 = r7.chatAdapter;
        if (r8 == 0) goto L_0x1326;
    L_0x1320:
        r8.notifyDataSetChanged();
        goto L_0x1326;
    L_0x1324:
        r50 = r8;
    L_0x1326:
        r8 = r47.isSecretChat();
        if (r8 == 0) goto L_0x132f;
    L_0x132c:
        r7.checkSecretMessageForLocation(r11);
    L_0x132f:
        r8 = r7.inScheduleMode;
        if (r8 != 0) goto L_0x134a;
    L_0x1333:
        r8 = r7.currentUser;
        if (r8 == 0) goto L_0x134a;
    L_0x1337:
        r8 = r8.bot;
        if (r8 == 0) goto L_0x1341;
    L_0x133b:
        r8 = r11.isOut();
        if (r8 != 0) goto L_0x1347;
    L_0x1341:
        r8 = r7.currentUser;
        r8 = r8.id;
        if (r8 != r0) goto L_0x134a;
    L_0x1347:
        r11.setIsRead();
    L_0x134a:
        r8 = r11.messageOwner;
        r8 = r8.action;
        r9 = r7.avatarContainer;
        if (r9 == 0) goto L_0x1367;
    L_0x1352:
        r12 = r7.currentEncryptedChat;
        if (r12 == 0) goto L_0x1367;
    L_0x1356:
        r12 = r8 instanceof org.telegram.tgnet.TLRPC.TL_messageEncryptedAction;
        if (r12 == 0) goto L_0x1367;
    L_0x135a:
        r12 = r8.encryptedAction;
        r15 = r12 instanceof org.telegram.tgnet.TLRPC.TL_decryptedMessageActionSetMessageTTL;
        if (r15 == 0) goto L_0x1367;
    L_0x1360:
        r12 = (org.telegram.tgnet.TLRPC.TL_decryptedMessageActionSetMessageTTL) r12;
        r12 = r12.ttl_seconds;
        r9.setTime(r12);
    L_0x1367:
        r9 = r11.type;
        if (r9 < 0) goto L_0x1722;
    L_0x136b:
        r9 = r7.messagesDict;
        r12 = 0;
        r9 = r9[r12];
        r9 = r9.indexOfKey(r13);
        if (r9 < 0) goto L_0x1378;
    L_0x1376:
        goto L_0x1722;
    L_0x1378:
        r9 = r7.currentChat;
        if (r9 == 0) goto L_0x1393;
    L_0x137c:
        r9 = r9.creator;
        if (r9 == 0) goto L_0x1393;
    L_0x1380:
        r9 = r8 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChatCreate;
        if (r9 != 0) goto L_0x1722;
    L_0x1384:
        r9 = r8 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChatEditPhoto;
        if (r9 == 0) goto L_0x1393;
    L_0x1388:
        r9 = r7.messages;
        r9 = r9.size();
        r15 = 4;
        if (r9 >= r15) goto L_0x1393;
    L_0x1391:
        goto L_0x1722;
    L_0x1393:
        r9 = r8 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChannelMigrateFrom;
        if (r9 == 0) goto L_0x1399;
    L_0x1397:
        goto L_0x1722;
    L_0x1399:
        r9 = 0;
        r7.addToPolls(r11, r9);
        if (r3 != 0) goto L_0x13b3;
    L_0x139f:
        r9 = r11.messageOwner;
        r9 = r9.id;
        if (r9 >= 0) goto L_0x13b3;
    L_0x13a5:
        r9 = r11.type;
        r15 = 5;
        if (r9 != r15) goto L_0x13b3;
    L_0x13aa:
        r9 = r7.inScheduleMode;
        if (r9 != 0) goto L_0x13b3;
    L_0x13ae:
        r9 = r7.animatingMessageObjects;
        r9.add(r11);
    L_0x13b3:
        r9 = r11.hasValidGroupId();
        if (r9 == 0) goto L_0x13f5;
    L_0x13b9:
        r9 = r7.groupedMessagesMap;
        r49 = r13;
        r12 = r11.getGroupId();
        r9 = r9.get(r12);
        r9 = (org.telegram.messenger.MessageObject.GroupedMessages) r9;
        if (r9 != 0) goto L_0x13df;
    L_0x13c9:
        r9 = new org.telegram.messenger.MessageObject$GroupedMessages;
        r9.<init>();
        r12 = r11.getGroupId();
        r9.groupId = r12;
        r12 = r7.groupedMessagesMap;
        r13 = r0;
        r26 = r1;
        r0 = r9.groupId;
        r12.put(r0, r9);
        goto L_0x13e2;
    L_0x13df:
        r13 = r0;
        r26 = r1;
    L_0x13e2:
        if (r6 != 0) goto L_0x13e9;
    L_0x13e4:
        r6 = new android.util.LongSparseArray;
        r6.<init>();
    L_0x13e9:
        r0 = r9.groupId;
        r6.put(r0, r9);
        r0 = r9.messages;
        r0.add(r11);
        r0 = r9;
        goto L_0x13fb;
    L_0x13f5:
        r26 = r1;
        r49 = r13;
        r13 = r0;
        r0 = 0;
    L_0x13fb:
        if (r0 == 0) goto L_0x1420;
    L_0x13fd:
        r1 = r0.messages;
        r1 = r1.size();
        r9 = 1;
        if (r1 <= r9) goto L_0x1415;
    L_0x1406:
        r0 = r0.messages;
        r1 = r0.size();
        r12 = 2;
        r1 = r1 - r12;
        r0 = r0.get(r1);
        r0 = (org.telegram.messenger.MessageObject) r0;
        goto L_0x1416;
    L_0x1415:
        r0 = 0;
    L_0x1416:
        if (r0 == 0) goto L_0x1420;
    L_0x1418:
        r1 = r7.messages;
        r12 = r1.indexOf(r0);
        r0 = -1;
        goto L_0x1422;
    L_0x1420:
        r0 = -1;
        r12 = -1;
    L_0x1422:
        if (r12 != r0) goto L_0x14d0;
    L_0x1424:
        r0 = r11.scheduled;
        if (r0 != 0) goto L_0x142e;
    L_0x1428:
        r0 = r11.messageOwner;
        r0 = r0.id;
        if (r0 < 0) goto L_0x1436;
    L_0x142e:
        r0 = r7.messages;
        r0 = r0.isEmpty();
        if (r0 == 0) goto L_0x143b;
    L_0x1436:
        r22 = r10;
        r0 = 0;
        goto L_0x14d3;
    L_0x143b:
        r0 = r7.messages;
        r0 = r0.size();
        r1 = 0;
    L_0x1442:
        if (r1 >= r0) goto L_0x14bc;
    L_0x1444:
        r15 = r7.messages;
        r15 = r15.get(r1);
        r15 = (org.telegram.messenger.MessageObject) r15;
        r9 = r15.type;
        if (r9 < 0) goto L_0x14b1;
    L_0x1450:
        r9 = r15.messageOwner;
        r21 = r0;
        r0 = r9.date;
        if (r0 <= 0) goto L_0x14b3;
    L_0x1458:
        r0 = r7.inScheduleMode;
        if (r0 != 0) goto L_0x1468;
    L_0x145c:
        r0 = r9.id;
        if (r0 <= 0) goto L_0x1468;
    L_0x1460:
        r9 = r11.messageOwner;
        r9 = r9.id;
        if (r9 <= 0) goto L_0x1468;
    L_0x1466:
        if (r0 < r9) goto L_0x1472;
    L_0x1468:
        r0 = r15.messageOwner;
        r0 = r0.date;
        r9 = r11.messageOwner;
        r9 = r9.date;
        if (r0 > r9) goto L_0x14b3;
    L_0x1472:
        r21 = r15.getGroupId();
        r17 = 0;
        r0 = (r21 > r17 ? 1 : (r21 == r17 ? 0 : -1));
        if (r0 == 0) goto L_0x1495;
    L_0x147c:
        r0 = r7.groupedMessagesMap;
        r22 = r10;
        r9 = r15.getGroupId();
        r0 = r0.get(r9);
        r0 = (org.telegram.messenger.MessageObject.GroupedMessages) r0;
        if (r0 == 0) goto L_0x1498;
    L_0x148c:
        r9 = r0.messages;
        r9 = r9.size();
        if (r9 != 0) goto L_0x1498;
    L_0x1494:
        goto L_0x1497;
    L_0x1495:
        r22 = r10;
    L_0x1497:
        r0 = 0;
    L_0x1498:
        if (r0 != 0) goto L_0x149c;
    L_0x149a:
        r12 = r1;
        goto L_0x14be;
    L_0x149c:
        r1 = r7.messages;
        r0 = r0.messages;
        r9 = r0.size();
        r10 = 1;
        r12 = r9 + -1;
        r0 = r0.get(r12);
        r0 = r1.indexOf(r0);
        r12 = r0;
        goto L_0x14be;
    L_0x14b1:
        r21 = r0;
    L_0x14b3:
        r22 = r10;
        r1 = r1 + 1;
        r0 = r21;
        r10 = r22;
        goto L_0x1442;
    L_0x14bc:
        r22 = r10;
    L_0x14be:
        r0 = -1;
        if (r12 == r0) goto L_0x14c9;
    L_0x14c1:
        r0 = r7.messages;
        r0 = r0.size();
        if (r12 <= r0) goto L_0x14d2;
    L_0x14c9:
        r0 = r7.messages;
        r0 = r0.size();
        goto L_0x14d3;
    L_0x14d0:
        r22 = r10;
    L_0x14d2:
        r0 = r12;
    L_0x14d3:
        r1 = r7.currentEncryptedChat;
        if (r1 == 0) goto L_0x150f;
    L_0x14d7:
        r1 = r11.messageOwner;
        r1 = r1.media;
        r10 = r1 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaWebPage;
        if (r10 == 0) goto L_0x150f;
    L_0x14df:
        r1 = r1.webpage;
        r1 = r1 instanceof org.telegram.tgnet.TLRPC.TL_webPageUrlPending;
        if (r1 == 0) goto L_0x150f;
    L_0x14e5:
        if (r5 != 0) goto L_0x14ec;
    L_0x14e7:
        r5 = new java.util.HashMap;
        r5.<init>();
    L_0x14ec:
        r1 = r11.messageOwner;
        r1 = r1.media;
        r1 = r1.webpage;
        r1 = r1.url;
        r1 = r5.get(r1);
        r1 = (java.util.ArrayList) r1;
        if (r1 != 0) goto L_0x150c;
    L_0x14fc:
        r1 = new java.util.ArrayList;
        r1.<init>();
        r10 = r11.messageOwner;
        r10 = r10.media;
        r10 = r10.webpage;
        r10 = r10.url;
        r5.put(r10, r1);
    L_0x150c:
        r1.add(r11);
    L_0x150f:
        r11.checkLayout();
        r1 = r8 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChatMigrateTo;
        if (r1 == 0) goto L_0x152f;
    L_0x1516:
        r7.migrateToNewChat(r11);
        if (r6 == 0) goto L_0x152e;
    L_0x151b:
        r0 = 0;
    L_0x151c:
        r1 = r6.size();
        if (r0 >= r1) goto L_0x152e;
    L_0x1522:
        r1 = r6.valueAt(r0);
        r1 = (org.telegram.messenger.MessageObject.GroupedMessages) r1;
        r1.calculate();
        r0 = r0 + 1;
        goto L_0x151c;
    L_0x152e:
        return;
    L_0x152f:
        r1 = r7.currentChat;
        if (r1 == 0) goto L_0x1541;
    L_0x1533:
        r1 = r1.megagroup;
        if (r1 == 0) goto L_0x1541;
    L_0x1537:
        r1 = r8 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChatAddUser;
        if (r1 != 0) goto L_0x153f;
    L_0x153b:
        r1 = r8 instanceof org.telegram.tgnet.TLRPC.TL_messageActionChatDeleteUser;
        if (r1 == 0) goto L_0x1541;
    L_0x153f:
        r10 = 1;
        goto L_0x1543;
    L_0x1541:
        r10 = r22;
    L_0x1543:
        r1 = r7.minDate;
        r8 = 0;
        r12 = r1[r8];
        if (r12 == 0) goto L_0x1552;
    L_0x154a:
        r12 = r11.messageOwner;
        r12 = r12.date;
        r1 = r1[r8];
        if (r12 >= r1) goto L_0x155a;
    L_0x1552:
        r1 = r7.minDate;
        r12 = r11.messageOwner;
        r12 = r12.date;
        r1[r8] = r12;
    L_0x155a:
        r1 = r11.isOut();
        if (r1 == 0) goto L_0x156b;
    L_0x1560:
        r1 = r11.messageOwner;
        r1 = r1.from_scheduled;
        if (r1 != 0) goto L_0x156b;
    L_0x1566:
        r1 = 1;
        r7.removeUnreadPlane(r1);
        r14 = 1;
    L_0x156b:
        if (r49 <= 0) goto L_0x1585;
    L_0x156d:
        r1 = r7.maxMessageId;
        r8 = 0;
        r12 = r1[r8];
        r15 = r49;
        r12 = java.lang.Math.min(r15, r12);
        r1[r8] = r12;
        r1 = r7.minMessageId;
        r12 = r1[r8];
        r12 = java.lang.Math.max(r15, r12);
        r1[r8] = r12;
        goto L_0x15a0;
    L_0x1585:
        r15 = r49;
        r8 = 0;
        r1 = r7.currentEncryptedChat;
        if (r1 == 0) goto L_0x15a0;
    L_0x158c:
        r1 = r7.maxMessageId;
        r12 = r1[r8];
        r12 = java.lang.Math.max(r15, r12);
        r1[r8] = r12;
        r1 = r7.minMessageId;
        r12 = r1[r8];
        r12 = java.lang.Math.min(r15, r12);
        r1[r8] = r12;
    L_0x15a0:
        r1 = r7.maxDate;
        r12 = r1[r8];
        r9 = r11.messageOwner;
        r9 = r9.date;
        r9 = java.lang.Math.max(r12, r9);
        r1[r8] = r9;
        r1 = r7.messagesDict;
        r1 = r1[r8];
        r1.put(r15, r11);
        r1 = r7.messagesByDays;
        r8 = r11.dateKey;
        r1 = r1.get(r8);
        r1 = (java.util.ArrayList) r1;
        r8 = r7.messages;
        r8 = r8.size();
        if (r0 <= r8) goto L_0x15cd;
    L_0x15c7:
        r0 = r7.messages;
        r0 = r0.size();
    L_0x15cd:
        if (r1 != 0) goto L_0x1671;
    L_0x15cf:
        r1 = new java.util.ArrayList;
        r1.<init>();
        r8 = r7.messagesByDays;
        r9 = r11.dateKey;
        r8.put(r9, r1);
        r8 = new org.telegram.tgnet.TLRPC$TL_message;
        r8.<init>();
        r9 = r7.inScheduleMode;
        if (r9 == 0) goto L_0x161d;
    L_0x15e4:
        r9 = r11.messageOwner;
        r9 = r9.date;
        r15 = NUM; // 0x7ffffffe float:NaN double:1.0609978945E-314;
        if (r9 != r15) goto L_0x1600;
    L_0x15ed:
        r9 = NUM; // 0x7f0e0652 float:1.887832E38 double:1.053162956E-314;
        r15 = "MessageScheduledUntilOnline";
        r9 = org.telegram.messenger.LocaleController.getString(r15, r9);
        r8.message = r9;
        r21 = r5;
        r20 = r6;
        r48 = r10;
        r6 = 0;
        goto L_0x162f;
    L_0x1600:
        r12 = 1;
        r15 = new java.lang.Object[r12];
        r21 = r5;
        r20 = r6;
        r5 = (long) r9;
        r5 = org.telegram.messenger.LocaleController.formatDateChat(r5, r12);
        r6 = 0;
        r15[r6] = r5;
        r5 = "MessageScheduledOn";
        r12 = NUM; // 0x7f0e0650 float:1.8878315E38 double:1.053162955E-314;
        r5 = org.telegram.messenger.LocaleController.formatString(r5, r12, r15);
        r8.message = r5;
        r48 = r10;
        goto L_0x162f;
    L_0x161d:
        r21 = r5;
        r20 = r6;
        r6 = 0;
        r5 = r11.messageOwner;
        r5 = r5.date;
        r48 = r10;
        r9 = (long) r5;
        r5 = org.telegram.messenger.LocaleController.formatDateChat(r9);
        r8.message = r5;
    L_0x162f:
        r8.id = r6;
        r5 = java.util.Calendar.getInstance();
        r9 = r11.messageOwner;
        r9 = r9.date;
        r9 = (long) r9;
        r27 = 1000; // 0x3e8 float:1.401E-42 double:4.94E-321;
        r9 = r9 * r27;
        r5.setTimeInMillis(r9);
        r9 = 11;
        r5.set(r9, r6);
        r9 = 12;
        r5.set(r9, r6);
        r9 = r5.getTimeInMillis();
        r9 = r9 / r27;
        r5 = (int) r9;
        r8.date = r5;
        r5 = new org.telegram.messenger.MessageObject;
        r9 = r7.currentAccount;
        r5.<init>(r9, r8, r6);
        r6 = 10;
        r5.type = r6;
        r6 = 1;
        r5.contentType = r6;
        r5.isDateObject = r6;
        r6 = r7.messages;
        r6.add(r0, r5);
        r5 = r7.chatAdapter;
        if (r5 == 0) goto L_0x1677;
    L_0x166d:
        r5.notifyItemInserted(r0);
        goto L_0x1677;
    L_0x1671:
        r21 = r5;
        r20 = r6;
        r48 = r10;
    L_0x1677:
        r5 = r11.isOut();
        if (r5 == 0) goto L_0x1683;
    L_0x167d:
        r5 = r11.messageOwner;
        r5 = r5.from_scheduled;
        if (r5 == 0) goto L_0x16d0;
    L_0x1683:
        r5 = r7.paused;
        if (r5 == 0) goto L_0x16d0;
    L_0x1687:
        if (r0 != 0) goto L_0x16d0;
    L_0x1689:
        r5 = r7.scrollToTopUnReadOnResume;
        if (r5 != 0) goto L_0x169b;
    L_0x168d:
        r5 = r7.unreadMessageObject;
        if (r5 == 0) goto L_0x169b;
    L_0x1691:
        r7.removeMessageObject(r5);
        if (r0 <= 0) goto L_0x1698;
    L_0x1696:
        r0 = r0 + -1;
    L_0x1698:
        r5 = 0;
        r7.unreadMessageObject = r5;
    L_0x169b:
        r5 = r7.unreadMessageObject;
        if (r5 != 0) goto L_0x16d0;
    L_0x169f:
        r5 = new org.telegram.tgnet.TLRPC$TL_message;
        r5.<init>();
        r5.message = r2;
        r6 = 0;
        r5.id = r6;
        r8 = new org.telegram.messenger.MessageObject;
        r10 = r7.currentAccount;
        r8.<init>(r10, r5, r6);
        r5 = 6;
        r8.type = r5;
        r5 = 2;
        r8.contentType = r5;
        r5 = r7.messages;
        r5.add(r6, r8);
        r5 = r7.chatAdapter;
        if (r5 == 0) goto L_0x16c2;
    L_0x16bf:
        r5.notifyItemInserted(r6);
    L_0x16c2:
        r7.unreadMessageObject = r8;
        r5 = r7.unreadMessageObject;
        r7.scrollToMessage = r5;
        r8 = -10000; // 0xffffffffffffd8f0 float:NaN double:NaN;
        r7.scrollToMessagePosition = r8;
        r5 = 1;
        r7.scrollToTopUnReadOnResume = r5;
        goto L_0x16d2;
    L_0x16d0:
        r8 = -10000; // 0xffffffffffffd8f0 float:NaN double:NaN;
    L_0x16d2:
        r5 = 0;
        r1.add(r5, r11);
        r1 = r7.messages;
        r1.add(r0, r11);
        r1 = r7.chatAdapter;
        if (r1 == 0) goto L_0x16e7;
    L_0x16df:
        r1.notifyItemChanged(r0);
        r1 = r7.chatAdapter;
        r1.notifyItemInserted(r0);
    L_0x16e7:
        r0 = r11.isOut();
        if (r0 != 0) goto L_0x1700;
    L_0x16ed:
        r0 = r11.messageOwner;
        r0 = r0.mentioned;
        if (r0 == 0) goto L_0x1700;
    L_0x16f3:
        r0 = r11.isContentUnread();
        if (r0 == 0) goto L_0x1700;
    L_0x16f9:
        r0 = r7.newMentionsCount;
        r1 = 1;
        r0 = r0 + r1;
        r7.newMentionsCount = r0;
        goto L_0x1701;
    L_0x1700:
        r1 = 1;
    L_0x1701:
        r0 = r7.newUnreadMessageCount;
        r0 = r0 + r1;
        r7.newUnreadMessageCount = r0;
        r0 = r11.type;
        r1 = 10;
        if (r0 == r1) goto L_0x171a;
    L_0x170c:
        r1 = 11;
        if (r0 != r1) goto L_0x1711;
    L_0x1710:
        goto L_0x171a;
    L_0x1711:
        r10 = r48;
        r0 = r50;
        r6 = r20;
        r5 = r21;
        goto L_0x172b;
    L_0x171a:
        r10 = r48;
        r6 = r20;
        r5 = r21;
        r0 = 1;
        goto L_0x172b;
    L_0x1722:
        r13 = r0;
        r26 = r1;
        goto L_0x12ba;
    L_0x1727:
        r0 = r50;
        r10 = r22;
    L_0x172b:
        r3 = r3 + 1;
        r8 = r0;
        r0 = r13;
        r1 = r26;
        goto L_0x12a3;
    L_0x1733:
        r26 = r1;
        r50 = r8;
        r22 = r10;
        if (r5 == 0) goto L_0x1746;
    L_0x173b:
        r0 = r47.getMessagesController();
        r1 = r7.dialog_id;
        r3 = r7.inScheduleMode;
        r0.reloadWebPages(r1, r5, r3);
    L_0x1746:
        if (r6 == 0) goto L_0x1788;
    L_0x1748:
        r0 = 0;
    L_0x1749:
        r1 = r6.size();
        if (r0 >= r1) goto L_0x1788;
    L_0x174f:
        r1 = r6.valueAt(r0);
        r1 = (org.telegram.messenger.MessageObject.GroupedMessages) r1;
        r2 = r1.posArray;
        r2 = r2.size();
        r1.calculate();
        r3 = r1.posArray;
        r3 = r3.size();
        r2 = r3 - r2;
        if (r2 <= 0) goto L_0x1785;
    L_0x1768:
        r2 = r7.chatAdapter;
        if (r2 == 0) goto L_0x1785;
    L_0x176c:
        r2 = r7.messages;
        r1 = r1.messages;
        r5 = r1.size();
        r8 = 1;
        r5 = r5 - r8;
        r1 = r1.get(r5);
        r1 = r2.indexOf(r1);
        if (r1 < 0) goto L_0x1785;
    L_0x1780:
        r2 = r7.chatAdapter;
        r2.notifyItemRangeChanged(r1, r3);
    L_0x1785:
        r0 = r0 + 1;
        goto L_0x1749;
    L_0x1788:
        r0 = r7.progressView;
        if (r0 == 0) goto L_0x1790;
    L_0x178c:
        r1 = 4;
        r0.setVisibility(r1);
    L_0x1790:
        r0 = r7.chatAdapter;
        if (r0 != 0) goto L_0x1797;
    L_0x1794:
        r1 = 1;
        r7.scrollToTopOnResume = r1;
    L_0x1797:
        r0 = r7.chatListView;
        if (r0 == 0) goto L_0x183b;
    L_0x179b:
        r0 = r7.chatAdapter;
        if (r0 == 0) goto L_0x183b;
    L_0x179f:
        r0 = r7.chatLayoutManager;
        r13 = r0.findFirstVisibleItemPosition();
        r0 = -1;
        if (r13 != r0) goto L_0x17a9;
    L_0x17a8:
        r13 = 0;
    L_0x17a9:
        r0 = r7.chatLayoutManager;
        r0 = r0.findViewByPosition(r13);
        if (r0 == 0) goto L_0x17bd;
    L_0x17b1:
        r0 = r0.getBottom();
        r1 = r7.chatListView;
        r1 = r1.getMeasuredHeight();
        r0 = r0 - r1;
        goto L_0x17be;
    L_0x17bd:
        r0 = 0;
    L_0x17be:
        if (r13 != 0) goto L_0x17c8;
    L_0x17c0:
        r1 = NUM; // 0x40a00000 float:5.0 double:5.356796015E-315;
        r1 = org.telegram.messenger.AndroidUtilities.dp(r1);
        if (r0 <= r1) goto L_0x17ca;
    L_0x17c8:
        if (r14 == 0) goto L_0x17e7;
    L_0x17ca:
        r1 = 0;
        r7.newUnreadMessageCount = r1;
        r0 = r7.firstLoading;
        if (r0 != 0) goto L_0x17e3;
    L_0x17d1:
        r0 = r7.inScheduleMode;
        if (r0 != 0) goto L_0x17e3;
    L_0x17d5:
        r0 = r7.paused;
        if (r0 == 0) goto L_0x17dd;
    L_0x17d9:
        r1 = 1;
        r7.scrollToTopOnResume = r1;
        goto L_0x17e3;
    L_0x17dd:
        r1 = 1;
        r7.forceScrollToTop = r1;
        r47.moveScrollToLastMessage();
    L_0x17e3:
        r1 = r26;
        r3 = 1;
        goto L_0x1818;
    L_0x17e7:
        r0 = r7.newUnreadMessageCount;
        if (r0 == 0) goto L_0x1810;
    L_0x17eb:
        r0 = r7.pagedownButtonCounter;
        if (r0 == 0) goto L_0x1810;
    L_0x17ef:
        r1 = 0;
        r0.setVisibility(r1);
        r0 = r7.prevSetUnreadCount;
        r2 = r7.newUnreadMessageCount;
        if (r0 == r2) goto L_0x1810;
    L_0x17f9:
        r7.prevSetUnreadCount = r2;
        r0 = r7.pagedownButtonCounter;
        r3 = 1;
        r5 = new java.lang.Object[r3];
        r2 = java.lang.Integer.valueOf(r2);
        r5[r1] = r2;
        r1 = r26;
        r2 = java.lang.String.format(r1, r5);
        r0.setText(r2);
        goto L_0x1813;
    L_0x1810:
        r1 = r26;
        r3 = 1;
    L_0x1813:
        r7.canShowPagedownButton = r3;
        r7.updatePagedownButtonVisibility(r3);
    L_0x1818:
        r0 = r7.newMentionsCount;
        if (r0 == 0) goto L_0x183e;
    L_0x181c:
        r0 = r7.mentiondownButtonCounter;
        if (r0 == 0) goto L_0x183e;
    L_0x1820:
        r2 = 0;
        r0.setVisibility(r2);
        r0 = r7.mentiondownButtonCounter;
        r5 = new java.lang.Object[r3];
        r6 = r7.newMentionsCount;
        r6 = java.lang.Integer.valueOf(r6);
        r5[r2] = r6;
        r1 = java.lang.String.format(r1, r5);
        r0.setText(r1);
        r7.showMentionDownButton(r3, r3);
        goto L_0x183e;
    L_0x183b:
        r3 = 1;
        r7.scrollToTopOnResume = r3;
    L_0x183e:
        r14 = r50;
    L_0x1840:
        r0 = r7.inScheduleMode;
        if (r0 == 0) goto L_0x1860;
    L_0x1844:
        r0 = r4.isEmpty();
        if (r0 != 0) goto L_0x1860;
    L_0x184a:
        r1 = 0;
        r0 = r4.get(r1);
        r0 = (org.telegram.messenger.MessageObject) r0;
        r2 = r0.getId();
        if (r2 >= 0) goto L_0x1860;
    L_0x1857:
        r3 = 0;
        r4 = 0;
        r5 = 0;
        r6 = 1;
        r1 = r47;
        r1.scrollToMessageId(r2, r3, r4, r5, r6);
    L_0x1860:
        r0 = r7.messages;
        r0 = r0.isEmpty();
        if (r0 != 0) goto L_0x1878;
    L_0x1868:
        r0 = r7.botUser;
        if (r0 == 0) goto L_0x1878;
    L_0x186c:
        r0 = r0.length();
        if (r0 != 0) goto L_0x1878;
    L_0x1872:
        r1 = 0;
        r7.botUser = r1;
        r47.updateBottomOverlay();
    L_0x1878:
        if (r14 == 0) goto L_0x1880;
    L_0x187a:
        r47.updateTitle();
        r47.checkAndUpdateAvatar();
    L_0x1880:
        if (r22 == 0) goto L_0x2eac;
    L_0x1882:
        r0 = r47.getMessagesController();
        r1 = r7.currentChat;
        r1 = r1.id;
        r2 = 1;
        r3 = 0;
        r0.loadFullChat(r1, r3, r2);
        goto L_0x2eac;
    L_0x1891:
        r3 = 0;
        r4 = org.telegram.messenger.NotificationCenter.closeChats;
        if (r0 != r4) goto L_0x18b3;
    L_0x1896:
        if (r8 == 0) goto L_0x18ae;
    L_0x1898:
        r0 = r8.length;
        if (r0 <= 0) goto L_0x18ae;
    L_0x189b:
        r0 = r8[r3];
        r0 = (java.lang.Long) r0;
        r0 = r0.longValue();
        r2 = r7.dialog_id;
        r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1));
        if (r4 != 0) goto L_0x2eac;
    L_0x18a9:
        r47.finishFragment();
        goto L_0x2eac;
    L_0x18ae:
        r47.removeSelfFromStack();
        goto L_0x2eac;
    L_0x18b3:
        r3 = org.telegram.messenger.NotificationCenter.messagesRead;
        if (r0 != r3) goto L_0x19dc;
    L_0x18b7:
        r0 = r7.inScheduleMode;
        if (r0 == 0) goto L_0x18bc;
    L_0x18bb:
        return;
    L_0x18bc:
        r2 = 0;
        r0 = r8[r2];
        r0 = (org.telegram.messenger.support.SparseLongArray) r0;
        r2 = 1;
        r3 = r8[r2];
        r3 = (org.telegram.messenger.support.SparseLongArray) r3;
        if (r0 == 0) goto L_0x1941;
    L_0x18c8:
        r2 = r7.bottomOverlayChatText2;
        if (r2 == 0) goto L_0x18ea;
    L_0x18cc:
        r2 = r7.chatInfo;
        if (r2 == 0) goto L_0x18ea;
    L_0x18d0:
        r2 = r7.currentChat;
        r2 = org.telegram.messenger.ChatObject.isChannel(r2);
        if (r2 == 0) goto L_0x18ea;
    L_0x18d8:
        r2 = r7.currentChat;
        r2 = r2.megagroup;
        if (r2 != 0) goto L_0x18ea;
    L_0x18de:
        r2 = r7.chatInfo;
        r2 = r2.linked_chat_id;
        r2 = -r2;
        if (r2 == 0) goto L_0x18ea;
    L_0x18e5:
        r2 = r7.bottomOverlayChatText2;
        r2.updateCounter();
    L_0x18ea:
        r2 = r0.size();
        r4 = 0;
    L_0x18ef:
        if (r4 >= r2) goto L_0x1941;
    L_0x18f1:
        r5 = r0.keyAt(r4);
        r10 = r0.get(r5);
        r5 = (long) r5;
        r13 = r7.dialog_id;
        r8 = (r5 > r13 ? 1 : (r5 == r13 ? 0 : -1));
        if (r8 == 0) goto L_0x1903;
    L_0x1900:
        r4 = r4 + 1;
        goto L_0x18ef;
    L_0x1903:
        r0 = r7.messages;
        r0 = r0.size();
        r2 = 0;
        r14 = 0;
    L_0x190b:
        if (r2 >= r0) goto L_0x193c;
    L_0x190d:
        r4 = r7.messages;
        r4 = r4.get(r2);
        r4 = (org.telegram.messenger.MessageObject) r4;
        r5 = r4.isOut();
        if (r5 != 0) goto L_0x1939;
    L_0x191b:
        r5 = r4.getId();
        if (r5 <= 0) goto L_0x1939;
    L_0x1921:
        r5 = r4.getId();
        r6 = (int) r10;
        if (r5 > r6) goto L_0x1939;
    L_0x1928:
        r5 = r4.isUnread();
        if (r5 != 0) goto L_0x192f;
    L_0x192e:
        goto L_0x193c;
    L_0x192f:
        r4.setIsRead();
        r4 = r7.newUnreadMessageCount;
        r5 = 1;
        r4 = r4 - r5;
        r7.newUnreadMessageCount = r4;
        r14 = 1;
    L_0x1939:
        r2 = r2 + 1;
        goto L_0x190b;
    L_0x193c:
        r12 = 0;
        r7.removeUnreadPlane(r12);
        goto L_0x1943;
    L_0x1941:
        r12 = 0;
        r14 = 0;
    L_0x1943:
        if (r14 == 0) goto L_0x1988;
    L_0x1945:
        r0 = r7.newUnreadMessageCount;
        if (r0 >= 0) goto L_0x194b;
    L_0x1949:
        r7.newUnreadMessageCount = r12;
    L_0x194b:
        r0 = r7.pagedownButtonCounter;
        if (r0 == 0) goto L_0x1988;
    L_0x194f:
        r2 = r7.prevSetUnreadCount;
        r4 = r7.newUnreadMessageCount;
        if (r2 == r4) goto L_0x1967;
    L_0x1955:
        r7.prevSetUnreadCount = r4;
        r2 = 1;
        r5 = new java.lang.Object[r2];
        r2 = java.lang.Integer.valueOf(r4);
        r5[r12] = r2;
        r1 = java.lang.String.format(r1, r5);
        r0.setText(r1);
    L_0x1967:
        r0 = r7.newUnreadMessageCount;
        if (r0 > 0) goto L_0x197a;
    L_0x196b:
        r0 = r7.pagedownButtonCounter;
        r0 = r0.getVisibility();
        r1 = 4;
        if (r0 == r1) goto L_0x1988;
    L_0x1974:
        r0 = r7.pagedownButtonCounter;
        r0.setVisibility(r1);
        goto L_0x1988;
    L_0x197a:
        r0 = r7.pagedownButtonCounter;
        r0 = r0.getVisibility();
        if (r0 == 0) goto L_0x1988;
    L_0x1982:
        r0 = r7.pagedownButtonCounter;
        r1 = 0;
        r0.setVisibility(r1);
    L_0x1988:
        if (r3 == 0) goto L_0x19d5;
    L_0x198a:
        r0 = r3.size();
        r1 = 0;
    L_0x198f:
        if (r1 >= r0) goto L_0x19d5;
    L_0x1991:
        r2 = r3.keyAt(r1);
        r4 = r3.get(r2);
        r5 = (int) r4;
        r10 = (long) r2;
        r12 = r7.dialog_id;
        r2 = (r10 > r12 ? 1 : (r10 == r12 ? 0 : -1));
        if (r2 == 0) goto L_0x19a4;
    L_0x19a1:
        r1 = r1 + 1;
        goto L_0x198f;
    L_0x19a4:
        r0 = r7.messages;
        r0 = r0.size();
        r1 = 0;
    L_0x19ab:
        if (r1 >= r0) goto L_0x19d5;
    L_0x19ad:
        r2 = r7.messages;
        r2 = r2.get(r1);
        r2 = (org.telegram.messenger.MessageObject) r2;
        r3 = r2.isOut();
        if (r3 == 0) goto L_0x19d2;
    L_0x19bb:
        r3 = r2.getId();
        if (r3 <= 0) goto L_0x19d2;
    L_0x19c1:
        r3 = r2.getId();
        if (r3 > r5) goto L_0x19d2;
    L_0x19c7:
        r3 = r2.isUnread();
        if (r3 != 0) goto L_0x19ce;
    L_0x19cd:
        goto L_0x19d5;
    L_0x19ce:
        r2.setIsRead();
        r14 = 1;
    L_0x19d2:
        r1 = r1 + 1;
        goto L_0x19ab;
    L_0x19d5:
        if (r14 == 0) goto L_0x2eac;
    L_0x19d7:
        r47.updateVisibleRows();
        goto L_0x2eac;
    L_0x19dc:
        r3 = org.telegram.messenger.NotificationCenter.historyCleared;
        if (r0 != r3) goto L_0x1b6f;
    L_0x19e0:
        r3 = 0;
        r0 = r8[r3];
        r0 = (java.lang.Long) r0;
        r0 = r0.longValue();
        r3 = r7.dialog_id;
        r5 = (r0 > r3 ? 1 : (r0 == r3 ? 0 : -1));
        if (r5 == 0) goto L_0x19f0;
    L_0x19ef:
        return;
    L_0x19f0:
        r1 = 1;
        r0 = r8[r1];
        r0 = (java.lang.Integer) r0;
        r0 = r0.intValue();
        r1 = 0;
        r14 = 0;
    L_0x19fb:
        r3 = r7.messages;
        r3 = r3.size();
        if (r1 >= r3) goto L_0x1a92;
    L_0x1a03:
        r3 = r7.messages;
        r3 = r3.get(r1);
        r3 = (org.telegram.messenger.MessageObject) r3;
        r4 = r3.getId();
        if (r4 <= 0) goto L_0x1a8e;
    L_0x1a11:
        if (r4 <= r0) goto L_0x1a15;
    L_0x1a13:
        goto L_0x1a8e;
    L_0x1a15:
        r5 = r7.chatInfo;
        if (r5 == 0) goto L_0x1a33;
    L_0x1a19:
        r6 = r5.pinned_msg_id;
        if (r6 != r4) goto L_0x1a33;
    L_0x1a1d:
        r6 = 0;
        r7.pinnedMessageObject = r6;
        r6 = 0;
        r5.pinned_msg_id = r6;
        r5 = r47.getMessagesStorage();
        r8 = r7.chatInfo;
        r8 = r8.id;
        r5.updateChatPinnedMessage(r8, r6);
        r5 = 1;
        r7.updatePinnedMessageView(r5);
        goto L_0x1a50;
    L_0x1a33:
        r6 = 0;
        r5 = r7.userInfo;
        if (r5 == 0) goto L_0x1a50;
    L_0x1a38:
        r8 = r5.pinned_msg_id;
        if (r8 != r4) goto L_0x1a50;
    L_0x1a3c:
        r8 = 0;
        r7.pinnedMessageObject = r8;
        r5.pinned_msg_id = r6;
        r5 = r47.getMessagesStorage();
        r8 = r7.chatInfo;
        r8 = r8.id;
        r5.updateUserPinnedMessage(r8, r6);
        r5 = 1;
        r7.updatePinnedMessageView(r5);
    L_0x1a50:
        r5 = r7.messages;
        r5.remove(r1);
        r1 = r1 + -1;
        r5 = r7.messagesDict;
        r5 = r5[r6];
        r5.remove(r4);
        r4 = r7.messagesByDays;
        r5 = r3.dateKey;
        r4 = r4.get(r5);
        r4 = (java.util.ArrayList) r4;
        if (r4 == 0) goto L_0x1a8b;
    L_0x1a6a:
        r4.remove(r3);
        r4 = r4.isEmpty();
        if (r4 == 0) goto L_0x1a8b;
    L_0x1a73:
        r4 = r7.messagesByDays;
        r3 = r3.dateKey;
        r4.remove(r3);
        if (r1 < 0) goto L_0x1a8b;
    L_0x1a7c:
        r3 = r7.messages;
        r3 = r3.size();
        if (r1 >= r3) goto L_0x1a8b;
    L_0x1a84:
        r3 = r7.messages;
        r3.remove(r1);
        r1 = r1 + -1;
    L_0x1a8b:
        r3 = 1;
        r14 = 1;
        goto L_0x1a8f;
    L_0x1a8e:
        r3 = 1;
    L_0x1a8f:
        r1 = r1 + r3;
        goto L_0x19fb;
    L_0x1a92:
        r0 = r7.messages;
        r0 = r0.isEmpty();
        if (r0 == 0) goto L_0x1b55;
    L_0x1a9a:
        r0 = r7.endReached;
        r1 = 0;
        r0 = r0[r1];
        if (r0 != 0) goto L_0x1b31;
    L_0x1aa1:
        r0 = r7.loading;
        if (r0 != 0) goto L_0x1b31;
    L_0x1aa5:
        r0 = r7.progressView;
        if (r0 == 0) goto L_0x1aad;
    L_0x1aa9:
        r1 = 4;
        r0.setVisibility(r1);
    L_0x1aad:
        r0 = r7.chatListView;
        if (r0 == 0) goto L_0x1ab5;
    L_0x1ab1:
        r1 = 0;
        r0.setEmptyView(r1);
    L_0x1ab5:
        r0 = r7.currentEncryptedChat;
        if (r0 != 0) goto L_0x1acd;
    L_0x1ab9:
        r0 = r7.maxMessageId;
        r1 = NUM; // 0x7fffffff float:NaN double:1.060997895E-314;
        r2 = 1;
        r0[r2] = r1;
        r3 = 0;
        r0[r3] = r1;
        r0 = r7.minMessageId;
        r4 = -NUM; // 0xfffffffvar_ float:-0.0 double:NaN;
        r0[r2] = r4;
        r0[r3] = r4;
        goto L_0x1ae0;
    L_0x1acd:
        r1 = NUM; // 0x7fffffff float:NaN double:1.060997895E-314;
        r2 = 1;
        r3 = 0;
        r4 = -NUM; // 0xfffffffvar_ float:-0.0 double:NaN;
        r0 = r7.maxMessageId;
        r0[r2] = r4;
        r0[r3] = r4;
        r0 = r7.minMessageId;
        r0[r2] = r1;
        r0[r3] = r1;
    L_0x1ae0:
        r0 = r7.maxDate;
        r0[r2] = r4;
        r0[r3] = r4;
        r0 = r7.minDate;
        r0[r2] = r3;
        r0[r3] = r3;
        r0 = r7.waitingForLoad;
        r1 = r7.lastLoadIndex;
        r1 = java.lang.Integer.valueOf(r1);
        r0.add(r1);
        r15 = r47.getMessagesController();
        r0 = r7.dialog_id;
        r18 = 30;
        r19 = 0;
        r20 = 0;
        r2 = r7.cacheEndReached;
        r2 = r2[r3];
        r4 = 1;
        r21 = r2 ^ 1;
        r2 = r7.minDate;
        r22 = r2[r3];
        r2 = r7.classGuid;
        r24 = 0;
        r25 = 0;
        r3 = r7.currentChat;
        r26 = org.telegram.messenger.ChatObject.isChannel(r3);
        r3 = r7.inScheduleMode;
        r4 = r7.lastLoadIndex;
        r5 = r4 + 1;
        r7.lastLoadIndex = r5;
        r16 = r0;
        r23 = r2;
        r27 = r3;
        r28 = r4;
        r15.loadMessages(r16, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28);
        r1 = 1;
        r7.loading = r1;
        goto L_0x1b55;
    L_0x1b31:
        r0 = r7.botButtons;
        if (r0 == 0) goto L_0x1b40;
    L_0x1b35:
        r1 = 0;
        r7.botButtons = r1;
        r0 = r7.chatActivityEnterView;
        if (r0 == 0) goto L_0x1b40;
    L_0x1b3c:
        r3 = 0;
        r0.setButtons(r1, r3);
    L_0x1b40:
        r0 = r7.currentEncryptedChat;
        if (r0 != 0) goto L_0x1b55;
    L_0x1b44:
        r0 = r7.currentUser;
        if (r0 == 0) goto L_0x1b55;
    L_0x1b48:
        r0 = r0.bot;
        if (r0 == 0) goto L_0x1b55;
    L_0x1b4c:
        r0 = r7.botUser;
        if (r0 != 0) goto L_0x1b55;
    L_0x1b50:
        r7.botUser = r2;
        r47.updateBottomOverlay();
    L_0x1b55:
        r1 = 0;
        r7.canShowPagedownButton = r1;
        r2 = 1;
        r7.updatePagedownButtonVisibility(r2);
        r7.showMentionDownButton(r1, r2);
        if (r14 == 0) goto L_0x2eac;
    L_0x1b61:
        r0 = r7.chatAdapter;
        if (r0 == 0) goto L_0x2eac;
    L_0x1b65:
        r7.removeUnreadPlane(r2);
        r0 = r7.chatAdapter;
        r0.notifyDataSetChanged();
        goto L_0x2eac;
    L_0x1b6f:
        r3 = org.telegram.messenger.NotificationCenter.messagesDeleted;
        if (r0 != r3) goto L_0x1e77;
    L_0x1b73:
        r3 = 2;
        r0 = r8[r3];
        r0 = (java.lang.Boolean) r0;
        r0 = r0.booleanValue();
        r1 = r7.inScheduleMode;
        if (r0 == r1) goto L_0x1b81;
    L_0x1b80:
        return;
    L_0x1b81:
        r1 = 0;
        r0 = r8[r1];
        r0 = (java.util.ArrayList) r0;
        r1 = 1;
        r3 = r8[r1];
        r3 = (java.lang.Integer) r3;
        r1 = r3.intValue();
        r3 = r7.currentChat;
        r3 = org.telegram.messenger.ChatObject.isChannel(r3);
        if (r3 == 0) goto L_0x1bab;
    L_0x1b97:
        if (r1 != 0) goto L_0x1ba3;
    L_0x1b99:
        r3 = r7.mergeDialogId;
        r5 = 0;
        r8 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1));
        if (r8 == 0) goto L_0x1ba3;
    L_0x1ba1:
        r3 = 1;
        goto L_0x1baf;
    L_0x1ba3:
        r3 = r7.currentChat;
        r3 = r3.id;
        if (r1 != r3) goto L_0x1baa;
    L_0x1ba9:
        goto L_0x1bae;
    L_0x1baa:
        return;
    L_0x1bab:
        if (r1 == 0) goto L_0x1bae;
    L_0x1bad:
        return;
    L_0x1bae:
        r3 = 0;
    L_0x1baf:
        r4 = r0.size();
        r5 = 0;
        r6 = 0;
        r8 = 0;
        r10 = 0;
        r11 = 0;
        r14 = 0;
    L_0x1bb9:
        if (r5 >= r4) goto L_0x1cce;
    L_0x1bbb:
        r13 = r0.get(r5);
        r13 = (java.lang.Integer) r13;
        r15 = r7.messagesDict;
        r15 = r15[r3];
        r9 = r13.intValue();
        r9 = r15.get(r9);
        r15 = r9;
        r15 = (org.telegram.messenger.MessageObject) r15;
        if (r3 != 0) goto L_0x1c0b;
    L_0x1bd2:
        r9 = r7.chatInfo;
        if (r9 == 0) goto L_0x1be1;
    L_0x1bd6:
        r9 = r9.pinned_msg_id;
        r12 = r13.intValue();
        if (r9 == r12) goto L_0x1bdf;
    L_0x1bde:
        goto L_0x1be1;
    L_0x1bdf:
        r9 = 0;
        goto L_0x1bee;
    L_0x1be1:
        r9 = r7.userInfo;
        if (r9 == 0) goto L_0x1c0b;
    L_0x1be5:
        r9 = r9.pinned_msg_id;
        r12 = r13.intValue();
        if (r9 != r12) goto L_0x1c0b;
    L_0x1bed:
        goto L_0x1bdf;
    L_0x1bee:
        r7.pinnedMessageObject = r9;
        r9 = r7.chatInfo;
        if (r9 == 0) goto L_0x1bf8;
    L_0x1bf4:
        r12 = 0;
        r9.pinned_msg_id = r12;
        goto L_0x1bff;
    L_0x1bf8:
        r12 = 0;
        r9 = r7.userInfo;
        if (r9 == 0) goto L_0x1bff;
    L_0x1bfd:
        r9.pinned_msg_id = r12;
    L_0x1bff:
        r9 = r47.getMessagesStorage();
        r9.updateChatPinnedMessage(r1, r12);
        r9 = 1;
        r7.updatePinnedMessageView(r9);
        goto L_0x1c0c;
    L_0x1c0b:
        r9 = 1;
    L_0x1c0c:
        if (r15 == 0) goto L_0x1cc2;
    L_0x1c0e:
        r12 = r7.editingMessageObject;
        if (r12 != r15) goto L_0x1CLASSNAME;
    L_0x1CLASSNAME:
        r7.hideFieldPanel(r9);
    L_0x1CLASSNAME:
        r12 = r7.messages;
        r12 = r12.indexOf(r15);
        r9 = -1;
        if (r12 == r9) goto L_0x1cc2;
    L_0x1c1e:
        r9 = r15.scheduled;
        if (r9 == 0) goto L_0x1c2c;
    L_0x1CLASSNAME:
        r9 = r7.scheduledMessagesCount;
        r10 = 1;
        r11 = r9 + -1;
        r7.scheduledMessagesCount = r11;
        r10 = 0;
        r11 = 1;
        goto L_0x1c2d;
    L_0x1c2c:
        r10 = 0;
    L_0x1c2d:
        r7.removeUnreadPlane(r10);
        r9 = r7.selectedMessagesIds;
        r9 = r9[r3];
        r10 = r13.intValue();
        r9 = r9.indexOfKey(r10);
        if (r9 < 0) goto L_0x1c4c;
    L_0x1c3e:
        r6 = r4 + -1;
        if (r5 != r6) goto L_0x1CLASSNAME;
    L_0x1CLASSNAME:
        r6 = 1;
        goto L_0x1CLASSNAME;
    L_0x1CLASSNAME:
        r6 = 0;
    L_0x1CLASSNAME:
        r9 = 0;
        r7.addToSelectedMessages(r15, r9, r6);
        r9 = r12;
        r14 = 1;
        goto L_0x1c4d;
    L_0x1c4c:
        r9 = r12;
    L_0x1c4d:
        r10 = r7.messages;
        r10 = r10.remove(r9);
        r10 = (org.telegram.messenger.MessageObject) r10;
        r23 = r10.getGroupId();
        r16 = 0;
        r21 = (r23 > r16 ? 1 : (r23 == r16 ? 0 : -1));
        if (r21 == 0) goto L_0x1CLASSNAME;
    L_0x1c5f:
        r12 = r7.groupedMessagesMap;
        r16 = r0;
        r50 = r1;
        r0 = r10.getGroupId();
        r0 = r12.get(r0);
        r0 = (org.telegram.messenger.MessageObject.GroupedMessages) r0;
        if (r0 == 0) goto L_0x1CLASSNAME;
    L_0x1CLASSNAME:
        if (r8 != 0) goto L_0x1CLASSNAME;
    L_0x1CLASSNAME:
        r8 = new android.util.LongSparseArray;
        r8.<init>();
    L_0x1CLASSNAME:
        r1 = r11;
        r10 = r0.groupId;
        r8.put(r10, r0);
        r0 = r0.messages;
        r0.remove(r15);
        goto L_0x1CLASSNAME;
    L_0x1CLASSNAME:
        r16 = r0;
        r50 = r1;
    L_0x1CLASSNAME:
        r1 = r11;
    L_0x1CLASSNAME:
        r0 = r7.messagesDict;
        r0 = r0[r3];
        r10 = r13.intValue();
        r0.remove(r10);
        r0 = r7.messagesByDays;
        r10 = r15.dateKey;
        r0 = r0.get(r10);
        r0 = (java.util.ArrayList) r0;
        if (r0 == 0) goto L_0x1cbf;
    L_0x1ca0:
        r0.remove(r15);
        r0 = r0.isEmpty();
        if (r0 == 0) goto L_0x1cbf;
    L_0x1ca9:
        r0 = r7.messagesByDays;
        r10 = r15.dateKey;
        r0.remove(r10);
        if (r9 < 0) goto L_0x1cbf;
    L_0x1cb2:
        r0 = r7.messages;
        r0 = r0.size();
        if (r9 >= r0) goto L_0x1cbf;
    L_0x1cba:
        r0 = r7.messages;
        r0.remove(r9);
    L_0x1cbf:
        r11 = r1;
        r10 = 1;
        goto L_0x1cc6;
    L_0x1cc2:
        r16 = r0;
        r50 = r1;
    L_0x1cc6:
        r5 = r5 + 1;
        r1 = r50;
        r0 = r16;
        goto L_0x1bb9;
    L_0x1cce:
        if (r14 == 0) goto L_0x1cdb;
    L_0x1cd0:
        if (r6 != 0) goto L_0x1cd8;
    L_0x1cd2:
        r1 = 0;
        r3 = 1;
        r4 = 0;
        r7.addToSelectedMessages(r1, r4, r3);
    L_0x1cd8:
        r47.updateActionModeTitle();
    L_0x1cdb:
        if (r8 == 0) goto L_0x1d26;
    L_0x1cdd:
        r0 = 0;
    L_0x1cde:
        r1 = r8.size();
        if (r0 >= r1) goto L_0x1d26;
    L_0x1ce4:
        r1 = r8.valueAt(r0);
        r1 = (org.telegram.messenger.MessageObject.GroupedMessages) r1;
        r3 = r1.messages;
        r3 = r3.isEmpty();
        if (r3 == 0) goto L_0x1cfa;
    L_0x1cf2:
        r3 = r7.groupedMessagesMap;
        r4 = r1.groupId;
        r3.remove(r4);
        goto L_0x1d23;
    L_0x1cfa:
        r1.calculate();
        r3 = r1.messages;
        r4 = r3.size();
        r5 = 1;
        r4 = r4 - r5;
        r3 = r3.get(r4);
        r3 = (org.telegram.messenger.MessageObject) r3;
        r4 = r7.messages;
        r3 = r4.indexOf(r3);
        if (r3 < 0) goto L_0x1d23;
    L_0x1d13:
        r4 = r7.chatAdapter;
        if (r4 == 0) goto L_0x1d23;
    L_0x1d17:
        r5 = r4.messagesStartRow;
        r3 = r3 + r5;
        r1 = r1.messages;
        r1 = r1.size();
        r4.notifyItemRangeChanged(r3, r1);
    L_0x1d23:
        r0 = r0 + 1;
        goto L_0x1cde;
    L_0x1d26:
        r0 = r7.messages;
        r0 = r0.isEmpty();
        if (r0 == 0) goto L_0x1df3;
    L_0x1d2e:
        r0 = r7.endReached;
        r1 = 0;
        r0 = r0[r1];
        if (r0 != 0) goto L_0x1dc5;
    L_0x1d35:
        r0 = r7.loading;
        if (r0 != 0) goto L_0x1dc5;
    L_0x1d39:
        r0 = r7.progressView;
        if (r0 == 0) goto L_0x1d41;
    L_0x1d3d:
        r1 = 4;
        r0.setVisibility(r1);
    L_0x1d41:
        r0 = r7.chatListView;
        if (r0 == 0) goto L_0x1d49;
    L_0x1d45:
        r1 = 0;
        r0.setEmptyView(r1);
    L_0x1d49:
        r0 = r7.currentEncryptedChat;
        if (r0 != 0) goto L_0x1d61;
    L_0x1d4d:
        r0 = r7.maxMessageId;
        r1 = NUM; // 0x7fffffff float:NaN double:1.060997895E-314;
        r2 = 1;
        r0[r2] = r1;
        r3 = 0;
        r0[r3] = r1;
        r0 = r7.minMessageId;
        r4 = -NUM; // 0xfffffffvar_ float:-0.0 double:NaN;
        r0[r2] = r4;
        r0[r3] = r4;
        goto L_0x1d74;
    L_0x1d61:
        r1 = NUM; // 0x7fffffff float:NaN double:1.060997895E-314;
        r2 = 1;
        r3 = 0;
        r4 = -NUM; // 0xfffffffvar_ float:-0.0 double:NaN;
        r0 = r7.maxMessageId;
        r0[r2] = r4;
        r0[r3] = r4;
        r0 = r7.minMessageId;
        r0[r2] = r1;
        r0[r3] = r1;
    L_0x1d74:
        r0 = r7.maxDate;
        r0[r2] = r4;
        r0[r3] = r4;
        r0 = r7.minDate;
        r0[r2] = r3;
        r0[r3] = r3;
        r0 = r7.waitingForLoad;
        r1 = r7.lastLoadIndex;
        r1 = java.lang.Integer.valueOf(r1);
        r0.add(r1);
        r32 = r47.getMessagesController();
        r0 = r7.dialog_id;
        r35 = 30;
        r36 = 0;
        r37 = 0;
        r2 = r7.cacheEndReached;
        r2 = r2[r3];
        r4 = 1;
        r38 = r2 ^ 1;
        r2 = r7.minDate;
        r39 = r2[r3];
        r2 = r7.classGuid;
        r41 = 0;
        r42 = 0;
        r3 = r7.currentChat;
        r43 = org.telegram.messenger.ChatObject.isChannel(r3);
        r3 = r7.inScheduleMode;
        r4 = r7.lastLoadIndex;
        r5 = r4 + 1;
        r7.lastLoadIndex = r5;
        r33 = r0;
        r40 = r2;
        r44 = r3;
        r45 = r4;
        r32.loadMessages(r33, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45);
        r1 = 1;
        r7.loading = r1;
        goto L_0x1de9;
    L_0x1dc5:
        r0 = r7.botButtons;
        if (r0 == 0) goto L_0x1dd4;
    L_0x1dc9:
        r1 = 0;
        r7.botButtons = r1;
        r0 = r7.chatActivityEnterView;
        if (r0 == 0) goto L_0x1dd4;
    L_0x1dd0:
        r3 = 0;
        r0.setButtons(r1, r3);
    L_0x1dd4:
        r0 = r7.currentEncryptedChat;
        if (r0 != 0) goto L_0x1de9;
    L_0x1dd8:
        r0 = r7.currentUser;
        if (r0 == 0) goto L_0x1de9;
    L_0x1ddc:
        r0 = r0.bot;
        if (r0 == 0) goto L_0x1de9;
    L_0x1de0:
        r0 = r7.botUser;
        if (r0 != 0) goto L_0x1de9;
    L_0x1de4:
        r7.botUser = r2;
        r47.updateBottomOverlay();
    L_0x1de9:
        r1 = 0;
        r7.canShowPagedownButton = r1;
        r2 = 1;
        r7.updatePagedownButtonVisibility(r2);
        r7.showMentionDownButton(r1, r2);
    L_0x1df3:
        r0 = r7.chatAdapter;
        if (r0 == 0) goto L_0x1e6f;
    L_0x1df7:
        if (r10 == 0) goto L_0x1e58;
    L_0x1df9:
        r0 = r7.chatListView;
        r0 = r0.getChildCount();
        r1 = 0;
    L_0x1e00:
        if (r1 >= r0) goto L_0x1e3a;
    L_0x1e02:
        r2 = r7.chatListView;
        r2 = r2.getChildAt(r1);
        r3 = r2 instanceof org.telegram.ui.Cells.ChatMessageCell;
        if (r3 == 0) goto L_0x1e14;
    L_0x1e0c:
        r3 = r2;
        r3 = (org.telegram.ui.Cells.ChatMessageCell) r3;
        r13 = r3.getMessageObject();
        goto L_0x1e21;
    L_0x1e14:
        r3 = r2 instanceof org.telegram.ui.Cells.ChatActionCell;
        if (r3 == 0) goto L_0x1e20;
    L_0x1e18:
        r3 = r2;
        r3 = (org.telegram.ui.Cells.ChatActionCell) r3;
        r13 = r3.getMessageObject();
        goto L_0x1e21;
    L_0x1e20:
        r13 = 0;
    L_0x1e21:
        if (r13 == 0) goto L_0x1e37;
    L_0x1e23:
        r3 = r7.messages;
        r3 = r3.indexOf(r13);
        if (r3 >= 0) goto L_0x1e2c;
    L_0x1e2b:
        goto L_0x1e37;
    L_0x1e2c:
        r0 = r7.chatAdapter;
        r0 = r0.messagesStartRow;
        r12 = r0 + r3;
        r13 = r2.getBottom();
        goto L_0x1e3c;
    L_0x1e37:
        r1 = r1 + 1;
        goto L_0x1e00;
    L_0x1e3a:
        r12 = -1;
        r13 = 0;
    L_0x1e3c:
        r0 = r7.chatAdapter;
        r0.notifyDataSetChanged();
        r0 = -1;
        if (r12 == r0) goto L_0x1e6f;
    L_0x1e44:
        r0 = r7.chatLayoutManager;
        r1 = r7.chatListView;
        r1 = r1.getMeasuredHeight();
        r1 = r1 - r13;
        r2 = r7.chatListView;
        r2 = r2.getPaddingBottom();
        r1 = r1 - r2;
        r0.scrollToPositionWithOffset(r12, r1);
        goto L_0x1e6f;
    L_0x1e58:
        r1 = 0;
        r7.first_unread_id = r1;
        r7.last_message_id = r1;
        r7.createUnreadMessageAfterId = r1;
        r0 = r7.unreadMessageObject;
        r7.removeMessageObject(r0);
        r1 = 0;
        r7.unreadMessageObject = r1;
        r0 = r7.pagedownButtonCounter;
        if (r0 == 0) goto L_0x1e6f;
    L_0x1e6b:
        r1 = 4;
        r0.setVisibility(r1);
    L_0x1e6f:
        if (r11 == 0) goto L_0x2eac;
    L_0x1e71:
        r1 = 1;
        r7.updateScheduledInterface(r1);
        goto L_0x2eac;
    L_0x1e77:
        r2 = org.telegram.messenger.NotificationCenter.messageReceivedByServer;
        if (r0 != r2) goto L_0x2064;
    L_0x1e7b:
        r2 = 6;
        r0 = r8[r2];
        r0 = (java.lang.Boolean) r0;
        r0 = r0.booleanValue();
        r1 = r7.inScheduleMode;
        if (r0 == r1) goto L_0x1e89;
    L_0x1e88:
        return;
    L_0x1e89:
        r1 = 0;
        r0 = r8[r1];
        r2 = r0;
        r2 = (java.lang.Integer) r2;
        r0 = r7.messagesDict;
        r0 = r0[r1];
        r3 = r2.intValue();
        r0 = r0.get(r3);
        r3 = r0;
        r3 = (org.telegram.messenger.MessageObject) r3;
        if (r3 == 0) goto L_0x2eac;
    L_0x1ea0:
        r4 = 1;
        r0 = r8[r4];
        r4 = r0;
        r4 = (java.lang.Integer) r4;
        r0 = r4.equals(r2);
        if (r0 != 0) goto L_0x1var_;
    L_0x1eac:
        r0 = r7.messagesDict;
        r0 = r0[r1];
        r5 = r4.intValue();
        r0 = r0.indexOfKey(r5);
        if (r0 < 0) goto L_0x1var_;
    L_0x1eba:
        r0 = r7.messagesDict;
        r0 = r0[r1];
        r4 = r2.intValue();
        r0 = r0.get(r4);
        r0 = (org.telegram.messenger.MessageObject) r0;
        r4 = r7.messagesDict;
        r1 = r4[r1];
        r2 = r2.intValue();
        r1.remove(r2);
        if (r0 == 0) goto L_0x1var_;
    L_0x1ed5:
        r1 = r7.messages;
        r1 = r1.indexOf(r0);
        r2 = r7.messages;
        r2.remove(r1);
        r2 = r7.messagesByDays;
        r0 = r0.dateKey;
        r0 = r2.get(r0);
        r0 = (java.util.ArrayList) r0;
        r0.remove(r3);
        r0 = r0.isEmpty();
        if (r0 == 0) goto L_0x1var_;
    L_0x1ef3:
        r0 = r7.messagesByDays;
        r2 = r3.dateKey;
        r0.remove(r2);
        if (r1 < 0) goto L_0x1var_;
    L_0x1efc:
        r0 = r7.messages;
        r0 = r0.size();
        if (r1 >= r0) goto L_0x1var_;
    L_0x1var_:
        r0 = r7.messages;
        r0.remove(r1);
    L_0x1var_:
        r0 = r7.chatAdapter;
        if (r0 == 0) goto L_0x1var_;
    L_0x1f0d:
        r0.notifyDataSetChanged();
    L_0x1var_:
        return;
    L_0x1var_:
        r0 = 2;
        r0 = r8[r0];
        r1 = r0;
        r1 = (org.telegram.tgnet.TLRPC.Message) r1;
        r0 = r8.length;
        r5 = 4;
        if (r0 < r5) goto L_0x1var_;
    L_0x1f1b:
        r0 = r8[r5];
        r0 = (java.lang.Long) r0;
        goto L_0x1var_;
    L_0x1var_:
        r5 = 0;
        r0 = java.lang.Long.valueOf(r5);
    L_0x1var_:
        r5 = r0;
        if (r1 == 0) goto L_0x1fe7;
    L_0x1var_:
        r0 = r3.isForwarded();	 Catch:{ Exception -> 0x1var_ }
        if (r0 == 0) goto L_0x1var_;
    L_0x1f2f:
        r0 = r3.messageOwner;	 Catch:{ Exception -> 0x1var_ }
        r0 = r0.reply_markup;	 Catch:{ Exception -> 0x1var_ }
        if (r0 != 0) goto L_0x1var_;
    L_0x1var_:
        r0 = r1.reply_markup;	 Catch:{ Exception -> 0x1var_ }
        if (r0 != 0) goto L_0x1var_;
    L_0x1var_:
        r0 = r3.messageOwner;	 Catch:{ Exception -> 0x1var_ }
        r0 = r0.message;	 Catch:{ Exception -> 0x1var_ }
        r6 = r1.message;	 Catch:{ Exception -> 0x1var_ }
        r0 = r0.equals(r6);	 Catch:{ Exception -> 0x1var_ }
        if (r0 != 0) goto L_0x1var_;
    L_0x1var_:
        r13 = 1;
        goto L_0x1var_;
    L_0x1var_:
        r13 = 0;
    L_0x1var_:
        if (r13 != 0) goto L_0x1f7f;
    L_0x1f4a:
        r0 = r3.messageOwner;	 Catch:{ Exception -> 0x1f7d }
        r0 = r0.params;	 Catch:{ Exception -> 0x1f7d }
        if (r0 == 0) goto L_0x1f5c;
    L_0x1var_:
        r0 = r3.messageOwner;	 Catch:{ Exception -> 0x1f7d }
        r0 = r0.params;	 Catch:{ Exception -> 0x1f7d }
        r6 = "query_id";
        r0 = r0.containsKey(r6);	 Catch:{ Exception -> 0x1f7d }
        if (r0 != 0) goto L_0x1f7f;
    L_0x1f5c:
        r0 = r1.media;	 Catch:{ Exception -> 0x1f7d }
        if (r0 == 0) goto L_0x1f7b;
    L_0x1var_:
        r0 = r3.messageOwner;	 Catch:{ Exception -> 0x1f7d }
        r0 = r0.media;	 Catch:{ Exception -> 0x1f7d }
        if (r0 == 0) goto L_0x1f7b;
    L_0x1var_:
        r0 = r1.media;	 Catch:{ Exception -> 0x1f7d }
        r0 = r0.getClass();	 Catch:{ Exception -> 0x1f7d }
        r6 = r3.messageOwner;	 Catch:{ Exception -> 0x1f7d }
        r6 = r6.media;	 Catch:{ Exception -> 0x1f7d }
        r6 = r6.getClass();	 Catch:{ Exception -> 0x1f7d }
        r0 = r0.equals(r6);	 Catch:{ Exception -> 0x1f7d }
        if (r0 != 0) goto L_0x1f7b;
    L_0x1f7a:
        goto L_0x1f7f;
    L_0x1f7b:
        r0 = 0;
        goto L_0x1var_;
    L_0x1f7d:
        r0 = move-exception;
        goto L_0x1var_;
    L_0x1f7f:
        r0 = 1;
    L_0x1var_:
        r46 = r13;
        r13 = r0;
        r0 = r46;
        goto L_0x1f8d;
    L_0x1var_:
        r0 = move-exception;
        r13 = 0;
    L_0x1var_:
        org.telegram.messenger.FileLog.e(r0);
        r0 = r13;
        r13 = 0;
    L_0x1f8d:
        r10 = r3.getGroupId();
        r14 = 0;
        r6 = (r10 > r14 ? 1 : (r10 == r14 ? 0 : -1));
        if (r6 == 0) goto L_0x1fbe;
    L_0x1var_:
        r10 = r1.grouped_id;
        r6 = (r10 > r14 ? 1 : (r10 == r14 ? 0 : -1));
        if (r6 == 0) goto L_0x1fbe;
    L_0x1f9d:
        r6 = r7.groupedMessagesMap;
        r10 = r3.getGroupId();
        r6 = r6.get(r10);
        r6 = (org.telegram.messenger.MessageObject.GroupedMessages) r6;
        if (r6 == 0) goto L_0x1fb2;
    L_0x1fab:
        r10 = r7.groupedMessagesMap;
        r14 = r1.grouped_id;
        r10.put(r14, r6);
    L_0x1fb2:
        r6 = r3.messageOwner;
        r10 = r6.grouped_id;
        r3.localSentGroupId = r10;
        r10 = r5.longValue();
        r6.grouped_id = r10;
    L_0x1fbe:
        r5 = r3.messageOwner;
        r5 = r5.fwd_from;
        r3.messageOwner = r1;
        if (r5 == 0) goto L_0x1fd6;
    L_0x1fc6:
        r6 = r1.fwd_from;
        if (r6 == 0) goto L_0x1fd6;
    L_0x1fca:
        r6 = r6.from_name;
        r6 = android.text.TextUtils.isEmpty(r6);
        if (r6 != 0) goto L_0x1fd6;
    L_0x1fd2:
        r6 = r3.messageOwner;
        r6.fwd_from = r5;
    L_0x1fd6:
        r5 = 1;
        r3.generateThumbs(r5);
        r3.setType();
        r1 = r1.media;
        r1 = r1 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaGame;
        if (r1 == 0) goto L_0x1fe9;
    L_0x1fe3:
        r3.applyNewText();
        goto L_0x1fe9;
    L_0x1fe7:
        r0 = 0;
        r13 = 0;
    L_0x1fe9:
        if (r0 == 0) goto L_0x1fee;
    L_0x1feb:
        r3.measureInlineBotButtons();
    L_0x1fee:
        r0 = r7.messagesDict;
        r1 = 0;
        r0 = r0[r1];
        r2 = r2.intValue();
        r0.remove(r2);
        r0 = r7.messagesDict;
        r0 = r0[r1];
        r2 = r4.intValue();
        r0.put(r2, r3);
        r0 = r3.messageOwner;
        r2 = r4.intValue();
        r0.id = r2;
        r0 = r3.messageOwner;
        r0.send_state = r1;
        r3.forceUpdate = r13;
        r0 = r8.length;
        r1 = 6;
        if (r0 < r1) goto L_0x2023;
    L_0x2017:
        r1 = 5;
        r0 = r8[r1];
        r0 = (java.lang.Integer) r0;
        r0 = r0.intValue();
        r3.applyMediaExistanceFlags(r0);
    L_0x2023:
        r1 = 0;
        r7.addToPolls(r3, r1);
        r15 = new java.util.ArrayList;
        r15.<init>();
        r15.add(r3);
        r0 = r7.currentEncryptedChat;
        if (r0 != 0) goto L_0x2044;
    L_0x2033:
        r14 = r47.getMediaDataController();
        r0 = r7.dialog_id;
        r2 = r7.inScheduleMode;
        r19 = 0;
        r16 = r0;
        r18 = r2;
        r14.loadReplyMessagesForMessages(r15, r16, r18, r19);
    L_0x2044:
        r0 = r7.chatAdapter;
        if (r0 == 0) goto L_0x204c;
    L_0x2048:
        r1 = 1;
        r0.updateRowWithMessageObject(r3, r1);
    L_0x204c:
        r0 = r7.chatLayoutManager;
        if (r0 == 0) goto L_0x205b;
    L_0x2050:
        if (r13 == 0) goto L_0x205b;
    L_0x2052:
        r0 = r0.findFirstVisibleItemPosition();
        if (r0 != 0) goto L_0x205b;
    L_0x2058:
        r47.moveScrollToLastMessage();
    L_0x205b:
        r0 = r47.getNotificationsController();
        r0.playOutChatSound();
        goto L_0x2eac;
    L_0x2064:
        r2 = org.telegram.messenger.NotificationCenter.messageReceivedByAck;
        if (r0 != r2) goto L_0x208b;
    L_0x2068:
        r2 = 0;
        r0 = r8[r2];
        r0 = (java.lang.Integer) r0;
        r1 = r7.messagesDict;
        r1 = r1[r2];
        r0 = r0.intValue();
        r0 = r1.get(r0);
        r0 = (org.telegram.messenger.MessageObject) r0;
        if (r0 == 0) goto L_0x2eac;
    L_0x207d:
        r1 = r0.messageOwner;
        r1.send_state = r2;
        r1 = r7.chatAdapter;
        if (r1 == 0) goto L_0x2eac;
    L_0x2085:
        r2 = 1;
        r1.updateRowWithMessageObject(r0, r2);
        goto L_0x2eac;
    L_0x208b:
        r2 = 0;
        r3 = org.telegram.messenger.NotificationCenter.messageSendError;
        if (r0 != r3) goto L_0x20ae;
    L_0x2090:
        r0 = r8[r2];
        r0 = (java.lang.Integer) r0;
        r1 = r7.messagesDict;
        r1 = r1[r2];
        r0 = r0.intValue();
        r0 = r1.get(r0);
        r0 = (org.telegram.messenger.MessageObject) r0;
        if (r0 == 0) goto L_0x2eac;
    L_0x20a4:
        r0 = r0.messageOwner;
        r1 = 2;
        r0.send_state = r1;
        r47.updateVisibleRows();
        goto L_0x2eac;
    L_0x20ae:
        r2 = org.telegram.messenger.NotificationCenter.chatInfoDidLoad;
        if (r0 != r2) goto L_0x22b0;
    L_0x20b2:
        r2 = 0;
        r0 = r8[r2];
        r0 = (org.telegram.tgnet.TLRPC.ChatFull) r0;
        r1 = r7.currentChat;
        if (r1 == 0) goto L_0x2eac;
    L_0x20bb:
        r2 = r0.id;
        r3 = r1.id;
        if (r2 != r3) goto L_0x2eac;
    L_0x20c1:
        r2 = r0 instanceof org.telegram.tgnet.TLRPC.TL_channelFull;
        if (r2 == 0) goto L_0x211d;
    L_0x20c5:
        r1 = r1.megagroup;
        if (r1 == 0) goto L_0x2111;
    L_0x20c9:
        r1 = r0.participants;
        if (r1 == 0) goto L_0x20ec;
    L_0x20cd:
        r1 = 0;
        r13 = 0;
    L_0x20cf:
        r2 = r0.participants;
        r2 = r2.participants;
        r2 = r2.size();
        if (r1 >= r2) goto L_0x20ed;
    L_0x20d9:
        r2 = r0.participants;
        r2 = r2.participants;
        r2 = r2.get(r1);
        r2 = (org.telegram.tgnet.TLRPC.ChatParticipant) r2;
        r2 = r2.date;
        r13 = java.lang.Math.max(r2, r13);
        r1 = r1 + 1;
        goto L_0x20cf;
    L_0x20ec:
        r13 = 0;
    L_0x20ed:
        if (r13 == 0) goto L_0x2102;
    L_0x20ef:
        r1 = java.lang.System.currentTimeMillis();
        r3 = 1000; // 0x3e8 float:1.401E-42 double:4.94E-321;
        r1 = r1 / r3;
        r3 = (long) r13;
        r1 = r1 - r3;
        r1 = java.lang.Math.abs(r1);
        r3 = 3600; // 0xe10 float:5.045E-42 double:1.7786E-320;
        r5 = (r1 > r3 ? 1 : (r1 == r3 ? 0 : -1));
        if (r5 <= 0) goto L_0x2111;
    L_0x2102:
        r1 = r47.getMessagesController();
        r2 = r7.currentChat;
        r2 = r2.id;
        r2 = java.lang.Integer.valueOf(r2);
        r1.loadChannelParticipants(r2);
    L_0x2111:
        r1 = r0.participants;
        if (r1 != 0) goto L_0x211d;
    L_0x2115:
        r1 = r7.chatInfo;
        if (r1 == 0) goto L_0x211d;
    L_0x2119:
        r1 = r1.participants;
        r0.participants = r1;
    L_0x211d:
        r7.chatInfo = r0;
        r0 = r7.chatActivityEnterView;
        if (r0 == 0) goto L_0x2128;
    L_0x2123:
        r1 = r7.chatInfo;
        r0.setChatInfo(r1);
    L_0x2128:
        r0 = r7.mentionsAdapter;
        if (r0 == 0) goto L_0x2131;
    L_0x212c:
        r1 = r7.chatInfo;
        r0.setChatInfo(r1);
    L_0x2131:
        r0 = 3;
        r1 = r8[r0];
        r1 = r1 instanceof org.telegram.messenger.MessageObject;
        if (r1 == 0) goto L_0x2143;
    L_0x2138:
        r0 = r8[r0];
        r0 = (org.telegram.messenger.MessageObject) r0;
        r7.pinnedMessageObject = r0;
        r1 = 0;
        r7.updatePinnedMessageView(r1);
        goto L_0x2147;
    L_0x2143:
        r1 = 1;
        r7.updatePinnedMessageView(r1);
    L_0x2147:
        r0 = r7.avatarContainer;
        if (r0 == 0) goto L_0x2153;
    L_0x214b:
        r0.updateOnlineCount();
        r0 = r7.avatarContainer;
        r0.updateSubtitle();
    L_0x2153:
        r0 = r7.chatInfo;
        r1 = r0 instanceof org.telegram.tgnet.TLRPC.TL_chatFull;
        if (r1 == 0) goto L_0x21b3;
    L_0x2159:
        r1 = 0;
        r7.hasBotsCommands = r1;
        r0 = r7.botInfo;
        r0.clear();
        r7.botsCount = r1;
        org.telegram.ui.Components.URLSpanBotCommand.enabled = r1;
        r0 = 0;
    L_0x2166:
        r1 = r7.chatInfo;
        r1 = r1.participants;
        r1 = r1.participants;
        r1 = r1.size();
        if (r0 >= r1) goto L_0x21aa;
    L_0x2172:
        r1 = r7.chatInfo;
        r1 = r1.participants;
        r1 = r1.participants;
        r1 = r1.get(r0);
        r1 = (org.telegram.tgnet.TLRPC.ChatParticipant) r1;
        r2 = r47.getMessagesController();
        r1 = r1.user_id;
        r1 = java.lang.Integer.valueOf(r1);
        r1 = r2.getUser(r1);
        if (r1 == 0) goto L_0x21a7;
    L_0x218e:
        r2 = r1.bot;
        if (r2 == 0) goto L_0x21a7;
    L_0x2192:
        r2 = 1;
        org.telegram.ui.Components.URLSpanBotCommand.enabled = r2;
        r3 = r7.botsCount;
        r3 = r3 + r2;
        r7.botsCount = r3;
        r7.hasBotsCommands = r2;
        r3 = r47.getMediaDataController();
        r1 = r1.id;
        r4 = r7.classGuid;
        r3.loadBotInfo(r1, r2, r4);
    L_0x21a7:
        r0 = r0 + 1;
        goto L_0x2166;
    L_0x21aa:
        r0 = r7.chatListView;
        if (r0 == 0) goto L_0x225c;
    L_0x21ae:
        r0.invalidateViews();
        goto L_0x225c;
    L_0x21b3:
        r0 = r0 instanceof org.telegram.tgnet.TLRPC.TL_channelFull;
        if (r0 == 0) goto L_0x225c;
    L_0x21b7:
        r1 = 0;
        r7.hasBotsCommands = r1;
        r0 = r7.botInfo;
        r0.clear();
        r7.botsCount = r1;
        r0 = r7.chatInfo;
        r0 = r0.bot_info;
        r0 = r0.isEmpty();
        if (r0 != 0) goto L_0x21d5;
    L_0x21cb:
        r0 = r7.currentChat;
        if (r0 == 0) goto L_0x21d5;
    L_0x21cf:
        r0 = r0.megagroup;
        if (r0 == 0) goto L_0x21d5;
    L_0x21d3:
        r0 = 1;
        goto L_0x21d6;
    L_0x21d5:
        r0 = 0;
    L_0x21d6:
        org.telegram.ui.Components.URLSpanBotCommand.enabled = r0;
        r0 = r7.chatInfo;
        r0 = r0.bot_info;
        r0 = r0.size();
        r7.botsCount = r0;
        r0 = 0;
    L_0x21e3:
        r1 = r7.chatInfo;
        r1 = r1.bot_info;
        r1 = r1.size();
        if (r0 >= r1) goto L_0x221c;
    L_0x21ed:
        r1 = r7.chatInfo;
        r1 = r1.bot_info;
        r1 = r1.get(r0);
        r1 = (org.telegram.tgnet.TLRPC.BotInfo) r1;
        r2 = r1.commands;
        r2 = r2.isEmpty();
        if (r2 != 0) goto L_0x2212;
    L_0x21ff:
        r2 = r7.currentChat;
        r2 = org.telegram.messenger.ChatObject.isChannel(r2);
        if (r2 == 0) goto L_0x220f;
    L_0x2207:
        r2 = r7.currentChat;
        if (r2 == 0) goto L_0x2212;
    L_0x220b:
        r2 = r2.megagroup;
        if (r2 == 0) goto L_0x2212;
    L_0x220f:
        r2 = 1;
        r7.hasBotsCommands = r2;
    L_0x2212:
        r2 = r7.botInfo;
        r3 = r1.user_id;
        r2.put(r3, r1);
        r0 = r0 + 1;
        goto L_0x21e3;
    L_0x221c:
        r0 = r7.chatListView;
        if (r0 == 0) goto L_0x2223;
    L_0x2220:
        r0.invalidateViews();
    L_0x2223:
        r0 = r7.mentionsAdapter;
        if (r0 == 0) goto L_0x223e;
    L_0x2227:
        r0 = r7.currentChat;
        r0 = org.telegram.messenger.ChatObject.isChannel(r0);
        if (r0 == 0) goto L_0x2237;
    L_0x222f:
        r0 = r7.currentChat;
        if (r0 == 0) goto L_0x223e;
    L_0x2233:
        r0 = r0.megagroup;
        if (r0 == 0) goto L_0x223e;
    L_0x2237:
        r0 = r7.mentionsAdapter;
        r1 = r7.botInfo;
        r0.setBotInfo(r1);
    L_0x223e:
        r0 = r7.bottomOverlayChatText2;
        if (r0 == 0) goto L_0x225c;
    L_0x2242:
        r0 = r7.currentChat;
        r0 = org.telegram.messenger.ChatObject.isChannel(r0);
        if (r0 == 0) goto L_0x225c;
    L_0x224a:
        r0 = r7.currentChat;
        r0 = r0.megagroup;
        if (r0 != 0) goto L_0x225c;
    L_0x2250:
        r0 = r7.chatInfo;
        r0 = r0.linked_chat_id;
        r0 = -r0;
        if (r0 == 0) goto L_0x225c;
    L_0x2257:
        r0 = r7.bottomOverlayChatText2;
        r0.updateCounter();
    L_0x225c:
        r0 = r7.chatActivityEnterView;
        if (r0 == 0) goto L_0x2267;
    L_0x2260:
        r1 = r7.botsCount;
        r2 = r7.hasBotsCommands;
        r0.setBotsCount(r1, r2);
    L_0x2267:
        r0 = r7.mentionsAdapter;
        if (r0 == 0) goto L_0x2270;
    L_0x226b:
        r1 = r7.botsCount;
        r0.setBotsCount(r1);
    L_0x2270:
        r0 = r7.inScheduleMode;
        if (r0 != 0) goto L_0x2eac;
    L_0x2274:
        r0 = r7.currentChat;
        r0 = org.telegram.messenger.ChatObject.isChannel(r0);
        if (r0 == 0) goto L_0x2eac;
    L_0x227c:
        r0 = r7.mergeDialogId;
        r2 = 0;
        r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1));
        if (r4 != 0) goto L_0x2eac;
    L_0x2284:
        r0 = r7.chatInfo;
        r1 = r0.migrated_from_chat_id;
        if (r1 == 0) goto L_0x2eac;
    L_0x228a:
        r1 = -r1;
        r1 = (long) r1;
        r7.mergeDialogId = r1;
        r1 = r7.maxMessageId;
        r0 = r0.migrated_from_max_id;
        r2 = 1;
        r1[r2] = r0;
        r0 = r7.chatAdapter;
        if (r0 == 0) goto L_0x229c;
    L_0x2299:
        r0.notifyDataSetChanged();
    L_0x229c:
        r0 = r7.mergeDialogId;
        r2 = 0;
        r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1));
        if (r4 == 0) goto L_0x2eac;
    L_0x22a4:
        r0 = r7.endReached;
        r1 = 0;
        r0 = r0[r1];
        if (r0 == 0) goto L_0x2eac;
    L_0x22ab:
        r7.checkScrollForLoad(r1);
        goto L_0x2eac;
    L_0x22b0:
        r2 = org.telegram.messenger.NotificationCenter.chatInfoCantLoad;
        if (r0 != r2) goto L_0x2347;
    L_0x22b4:
        r2 = 0;
        r0 = r8[r2];
        r0 = (java.lang.Integer) r0;
        r0 = r0.intValue();
        r1 = r7.currentChat;
        if (r1 == 0) goto L_0x2eac;
    L_0x22c1:
        r1 = r1.id;
        if (r1 != r0) goto L_0x2eac;
    L_0x22c5:
        r1 = 1;
        r0 = r8[r1];
        r0 = (java.lang.Integer) r0;
        r0 = r0.intValue();
        r1 = r47.getParentActivity();
        if (r1 == 0) goto L_0x2346;
    L_0x22d4:
        r1 = r7.closeChatDialog;
        if (r1 == 0) goto L_0x22d9;
    L_0x22d8:
        goto L_0x2346;
    L_0x22d9:
        r1 = new org.telegram.ui.ActionBar.AlertDialog$Builder;
        r2 = r47.getParentActivity();
        r1.<init>(r2);
        r2 = NUM; // 0x7f0e00f9 float:1.8875543E38 double:1.0531622797E-314;
        r3 = "AppName";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r1.setTitle(r2);
        if (r0 != 0) goto L_0x22fd;
    L_0x22f0:
        r0 = NUM; // 0x7f0e0248 float:1.8876222E38 double:1.053162445E-314;
        r2 = "ChannelCantOpenPrivate";
        r0 = org.telegram.messenger.LocaleController.getString(r2, r0);
        r1.setMessage(r0);
        goto L_0x231c;
    L_0x22fd:
        r2 = 1;
        if (r0 != r2) goto L_0x230d;
    L_0x2300:
        r0 = NUM; // 0x7f0e0247 float:1.887622E38 double:1.0531624447E-314;
        r2 = "ChannelCantOpenNa";
        r0 = org.telegram.messenger.LocaleController.getString(r2, r0);
        r1.setMessage(r0);
        goto L_0x231c;
    L_0x230d:
        r2 = 2;
        if (r0 != r2) goto L_0x231c;
    L_0x2310:
        r0 = NUM; // 0x7f0e0246 float:1.8876218E38 double:1.053162444E-314;
        r2 = "ChannelCantOpenBanned";
        r0 = org.telegram.messenger.LocaleController.getString(r2, r0);
        r1.setMessage(r0);
    L_0x231c:
        r0 = NUM; // 0x7f0e076c float:1.8878891E38 double:1.0531630954E-314;
        r2 = "OK";
        r0 = org.telegram.messenger.LocaleController.getString(r2, r0);
        r2 = 0;
        r1.setPositiveButton(r0, r2);
        r0 = r1.create();
        r7.closeChatDialog = r0;
        r7.showDialog(r0);
        r1 = 0;
        r7.loading = r1;
        r0 = r7.progressView;
        if (r0 == 0) goto L_0x233d;
    L_0x2339:
        r1 = 4;
        r0.setVisibility(r1);
    L_0x233d:
        r0 = r7.chatAdapter;
        if (r0 == 0) goto L_0x2eac;
    L_0x2341:
        r0.notifyDataSetChanged();
        goto L_0x2eac;
    L_0x2346:
        return;
    L_0x2347:
        r2 = org.telegram.messenger.NotificationCenter.contactsDidLoad;
        if (r0 != r2) goto L_0x2358;
    L_0x234b:
        r2 = 1;
        r7.updateTopPanel(r2);
        r0 = r7.avatarContainer;
        if (r0 == 0) goto L_0x2eac;
    L_0x2353:
        r0.updateSubtitle();
        goto L_0x2eac;
    L_0x2358:
        r2 = org.telegram.messenger.NotificationCenter.encryptedChatUpdated;
        if (r0 != r2) goto L_0x23c9;
    L_0x235c:
        r2 = 0;
        r0 = r8[r2];
        r0 = (org.telegram.tgnet.TLRPC.EncryptedChat) r0;
        r1 = r7.currentEncryptedChat;
        if (r1 == 0) goto L_0x2eac;
    L_0x2365:
        r2 = r0.id;
        r1 = r1.id;
        if (r2 != r1) goto L_0x2eac;
    L_0x236b:
        r7.currentEncryptedChat = r0;
        r1 = 1;
        r7.updateTopPanel(r1);
        r47.updateSecretStatus();
        r47.initStickers();
        r0 = r7.chatActivityEnterView;
        if (r0 == 0) goto L_0x23a7;
    L_0x237b:
        r1 = r7.currentEncryptedChat;
        if (r1 == 0) goto L_0x238c;
    L_0x237f:
        r1 = r1.layer;
        r1 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r1);
        r2 = 23;
        if (r1 < r2) goto L_0x238a;
    L_0x2389:
        goto L_0x238c;
    L_0x238a:
        r1 = 0;
        goto L_0x238d;
    L_0x238c:
        r1 = 1;
    L_0x238d:
        r2 = r7.currentEncryptedChat;
        if (r2 == 0) goto L_0x239e;
    L_0x2391:
        r2 = r2.layer;
        r2 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r2);
        r3 = 46;
        if (r2 < r3) goto L_0x239c;
    L_0x239b:
        goto L_0x239e;
    L_0x239c:
        r2 = 0;
        goto L_0x239f;
    L_0x239e:
        r2 = 1;
    L_0x239f:
        r0.setAllowStickersAndGifs(r1, r2);
        r0 = r7.chatActivityEnterView;
        r0.checkRoundVideo();
    L_0x23a7:
        r0 = r7.mentionsAdapter;
        if (r0 == 0) goto L_0x2eac;
    L_0x23ab:
        r1 = r7.chatActivityEnterView;
        r1 = r1.isEditingMessage();
        if (r1 != 0) goto L_0x23c3;
    L_0x23b3:
        r1 = r7.currentEncryptedChat;
        if (r1 == 0) goto L_0x23c1;
    L_0x23b7:
        r1 = r1.layer;
        r1 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r1);
        r2 = 46;
        if (r1 < r2) goto L_0x23c3;
    L_0x23c1:
        r12 = 1;
        goto L_0x23c4;
    L_0x23c3:
        r12 = 0;
    L_0x23c4:
        r0.setNeedBotContext(r12);
        goto L_0x2eac;
    L_0x23c9:
        r2 = org.telegram.messenger.NotificationCenter.messagesReadEncrypted;
        if (r0 != r2) goto L_0x241e;
    L_0x23cd:
        r2 = 0;
        r0 = r8[r2];
        r0 = (java.lang.Integer) r0;
        r0 = r0.intValue();
        r1 = r7.currentEncryptedChat;
        if (r1 == 0) goto L_0x2eac;
    L_0x23da:
        r1 = r1.id;
        if (r1 != r0) goto L_0x2eac;
    L_0x23de:
        r1 = 1;
        r0 = r8[r1];
        r0 = (java.lang.Integer) r0;
        r0 = r0.intValue();
        r1 = r7.messages;
        r1 = r1.iterator();
    L_0x23ed:
        r2 = r1.hasNext();
        if (r2 == 0) goto L_0x2419;
    L_0x23f3:
        r2 = r1.next();
        r2 = (org.telegram.messenger.MessageObject) r2;
        r3 = r2.isOut();
        if (r3 != 0) goto L_0x2400;
    L_0x23ff:
        goto L_0x23ed;
    L_0x2400:
        r3 = r2.isOut();
        if (r3 == 0) goto L_0x240d;
    L_0x2406:
        r3 = r2.isUnread();
        if (r3 != 0) goto L_0x240d;
    L_0x240c:
        goto L_0x2419;
    L_0x240d:
        r3 = r2.messageOwner;
        r3 = r3.date;
        r4 = 1;
        r3 = r3 - r4;
        if (r3 > r0) goto L_0x23ed;
    L_0x2415:
        r2.setIsRead();
        goto L_0x23ed;
    L_0x2419:
        r47.updateVisibleRows();
        goto L_0x2eac;
    L_0x241e:
        r2 = org.telegram.messenger.NotificationCenter.removeAllMessagesFromDialog;
        if (r0 != r2) goto L_0x243f;
    L_0x2422:
        r2 = 0;
        r0 = r8[r2];
        r0 = (java.lang.Long) r0;
        r0 = r0.longValue();
        r2 = r7.dialog_id;
        r4 = (r2 > r0 ? 1 : (r2 == r0 ? 0 : -1));
        if (r4 != 0) goto L_0x2eac;
    L_0x2431:
        r1 = 1;
        r0 = r8[r1];
        r0 = (java.lang.Boolean) r0;
        r0 = r0.booleanValue();
        r7.clearHistory(r0);
        goto L_0x2eac;
    L_0x243f:
        r2 = org.telegram.messenger.NotificationCenter.screenshotTook;
        if (r0 != r2) goto L_0x2448;
    L_0x2443:
        r47.updateInformationForScreenshotDetector();
        goto L_0x2eac;
    L_0x2448:
        r2 = org.telegram.messenger.NotificationCenter.blockedUsersDidLoad;
        if (r0 != r2) goto L_0x2470;
    L_0x244c:
        r0 = r7.currentUser;
        if (r0 == 0) goto L_0x2eac;
    L_0x2450:
        r0 = r7.userBlocked;
        r1 = r47.getMessagesController();
        r1 = r1.blockedUsers;
        r2 = r7.currentUser;
        r2 = r2.id;
        r1 = r1.indexOfKey(r2);
        if (r1 < 0) goto L_0x2464;
    L_0x2462:
        r12 = 1;
        goto L_0x2465;
    L_0x2464:
        r12 = 0;
    L_0x2465:
        r7.userBlocked = r12;
        r1 = r7.userBlocked;
        if (r0 == r1) goto L_0x2eac;
    L_0x246b:
        r47.updateBottomOverlay();
        goto L_0x2eac;
    L_0x2470:
        r2 = org.telegram.messenger.NotificationCenter.fileNewChunkAvailable;
        if (r0 != r2) goto L_0x24b3;
    L_0x2474:
        r2 = 0;
        r0 = r8[r2];
        r0 = (org.telegram.messenger.MessageObject) r0;
        r1 = 3;
        r1 = r8[r1];
        r1 = (java.lang.Long) r1;
        r1 = r1.longValue();
        r3 = 0;
        r5 = (r1 > r3 ? 1 : (r1 == r3 ? 0 : -1));
        if (r5 == 0) goto L_0x2eac;
    L_0x2488:
        r3 = r7.dialog_id;
        r5 = r0.getDialogId();
        r8 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1));
        if (r8 != 0) goto L_0x2eac;
    L_0x2492:
        r3 = r7.messagesDict;
        r4 = 0;
        r3 = r3[r4];
        r0 = r0.getId();
        r0 = r3.get(r0);
        r0 = (org.telegram.messenger.MessageObject) r0;
        if (r0 == 0) goto L_0x2eac;
    L_0x24a3:
        r0 = r0.messageOwner;
        r0 = r0.media;
        r0 = r0.document;
        if (r0 == 0) goto L_0x2eac;
    L_0x24ab:
        r2 = (int) r1;
        r0.size = r2;
        r47.updateVisibleRows();
        goto L_0x2eac;
    L_0x24b3:
        r2 = org.telegram.messenger.NotificationCenter.didCreatedNewDeleteTask;
        if (r0 != r2) goto L_0x251c;
    L_0x24b7:
        r2 = 0;
        r0 = r8[r2];
        r0 = (android.util.SparseArray) r0;
        r1 = 0;
        r2 = 0;
    L_0x24be:
        r3 = r0.size();
        if (r1 >= r3) goto L_0x2515;
    L_0x24c4:
        r3 = r0.keyAt(r1);
        r4 = r0.get(r3);
        r4 = (java.util.ArrayList) r4;
        r5 = r2;
        r2 = 0;
    L_0x24d0:
        r6 = r4.size();
        if (r2 >= r6) goto L_0x2511;
    L_0x24d6:
        r6 = r4.get(r2);
        r6 = (java.lang.Long) r6;
        r10 = r6.longValue();
        if (r2 != 0) goto L_0x24fb;
    L_0x24e2:
        r6 = 32;
        r13 = r10 >> r6;
        r13 = (int) r13;
        if (r13 >= 0) goto L_0x24ea;
    L_0x24e9:
        r13 = 0;
    L_0x24ea:
        r6 = r7.currentChat;
        r6 = org.telegram.messenger.ChatObject.isChannel(r6);
        if (r6 == 0) goto L_0x24f7;
    L_0x24f2:
        r6 = r7.currentChat;
        r6 = r6.id;
        goto L_0x24f8;
    L_0x24f7:
        r6 = 0;
    L_0x24f8:
        if (r13 == r6) goto L_0x24fb;
    L_0x24fa:
        return;
    L_0x24fb:
        r6 = r7.messagesDict;
        r8 = 0;
        r6 = r6[r8];
        r8 = (int) r10;
        r6 = r6.get(r8);
        r6 = (org.telegram.messenger.MessageObject) r6;
        if (r6 == 0) goto L_0x250e;
    L_0x2509:
        r5 = r6.messageOwner;
        r5.destroyTime = r3;
        r5 = 1;
    L_0x250e:
        r2 = r2 + 1;
        goto L_0x24d0;
    L_0x2511:
        r1 = r1 + 1;
        r2 = r5;
        goto L_0x24be;
    L_0x2515:
        if (r2 == 0) goto L_0x2eac;
    L_0x2517:
        r47.updateVisibleRows();
        goto L_0x2eac;
    L_0x251c:
        r2 = org.telegram.messenger.NotificationCenter.messagePlayingDidStart;
        if (r0 != r2) goto L_0x2609;
    L_0x2520:
        r2 = 0;
        r0 = r8[r2];
        r0 = (org.telegram.messenger.MessageObject) r0;
        r1 = r0.eventId;
        r3 = 0;
        r5 = (r1 > r3 ? 1 : (r1 == r3 ? 0 : -1));
        if (r5 == 0) goto L_0x252e;
    L_0x252d:
        return;
    L_0x252e:
        r7.sendSecretMessageRead(r0);
        r1 = r0.isRoundVideo();
        if (r1 != 0) goto L_0x253d;
    L_0x2537:
        r1 = r0.isVideo();
        if (r1 == 0) goto L_0x255a;
    L_0x253d:
        r1 = r7.fragmentView;
        if (r1 == 0) goto L_0x255a;
    L_0x2541:
        r1 = r1.getParent();
        if (r1 == 0) goto L_0x255a;
    L_0x2547:
        r1 = org.telegram.messenger.MediaController.getInstance();
        r2 = 1;
        r3 = r7.createTextureView(r2);
        r4 = r7.aspectRatioFrameLayout;
        r5 = r7.videoPlayerContainer;
        r1.setTextureView(r3, r4, r5, r2);
        r7.updateTextureViewPosition(r2);
    L_0x255a:
        r1 = r7.chatListView;
        if (r1 == 0) goto L_0x2eac;
    L_0x255e:
        r1 = r1.getChildCount();
        r2 = 0;
    L_0x2563:
        if (r2 >= r1) goto L_0x25da;
    L_0x2565:
        r3 = r7.chatListView;
        r3 = r3.getChildAt(r2);
        r4 = r3 instanceof org.telegram.ui.Cells.ChatMessageCell;
        if (r4 == 0) goto L_0x25d7;
    L_0x256f:
        r3 = (org.telegram.ui.Cells.ChatMessageCell) r3;
        r4 = r3.getMessageObject();
        if (r4 == 0) goto L_0x25d7;
    L_0x2577:
        r5 = r4.isVideo();
        r6 = r4.isRoundVideo();
        if (r6 != 0) goto L_0x2596;
    L_0x2581:
        if (r5 == 0) goto L_0x2584;
    L_0x2583:
        goto L_0x2596;
    L_0x2584:
        r5 = r4.isVoice();
        if (r5 != 0) goto L_0x2590;
    L_0x258a:
        r4 = r4.isMusic();
        if (r4 == 0) goto L_0x25d7;
    L_0x2590:
        r4 = 0;
        r6 = 1;
        r3.updateButtonState(r4, r6, r4);
        goto L_0x25d7;
    L_0x2596:
        r6 = 1;
        r8 = r0.equals(r4);
        r8 = r8 ^ r6;
        r3.checkVideoPlayback(r8);
        r6 = org.telegram.messenger.MediaController.getInstance();
        r6 = r6.isPlayingMessage(r4);
        if (r6 != 0) goto L_0x25d0;
    L_0x25a9:
        if (r5 == 0) goto L_0x25c2;
    L_0x25ab:
        r5 = org.telegram.messenger.MediaController.getInstance();
        r5 = r5.isGoingToShowMessageObject(r4);
        if (r5 != 0) goto L_0x25c2;
    L_0x25b5:
        r5 = r3.getPhotoImage();
        r5 = r5.getAnimation();
        if (r5 == 0) goto L_0x25c2;
    L_0x25bf:
        r5.start();
    L_0x25c2:
        r5 = r4.audioProgress;
        r6 = 0;
        r5 = (r5 > r6 ? 1 : (r5 == r6 ? 0 : -1));
        if (r5 == 0) goto L_0x25d7;
    L_0x25c9:
        r4.resetPlayingProgress();
        r3.invalidate();
        goto L_0x25d7;
    L_0x25d0:
        if (r5 == 0) goto L_0x25d7;
    L_0x25d2:
        r4 = 1;
        r5 = 0;
        r3.updateButtonState(r5, r4, r5);
    L_0x25d7:
        r2 = r2 + 1;
        goto L_0x2563;
    L_0x25da:
        r0 = r7.mentionListView;
        r0 = r0.getChildCount();
        r1 = 0;
    L_0x25e1:
        if (r1 >= r0) goto L_0x2eac;
    L_0x25e3:
        r2 = r7.mentionListView;
        r2 = r2.getChildAt(r1);
        r3 = r2 instanceof org.telegram.ui.Cells.ContextLinkCell;
        if (r3 == 0) goto L_0x2606;
    L_0x25ed:
        r2 = (org.telegram.ui.Cells.ContextLinkCell) r2;
        r3 = r2.getMessageObject();
        if (r3 == 0) goto L_0x2606;
    L_0x25f5:
        r4 = r3.isVoice();
        if (r4 != 0) goto L_0x2601;
    L_0x25fb:
        r3 = r3.isMusic();
        if (r3 == 0) goto L_0x2606;
    L_0x2601:
        r3 = 1;
        r4 = 0;
        r2.updateButtonState(r4, r3);
    L_0x2606:
        r1 = r1 + 1;
        goto L_0x25e1;
    L_0x2609:
        r2 = org.telegram.messenger.NotificationCenter.messagePlayingGoingToStop;
        if (r0 != r2) goto L_0x26a1;
    L_0x260d:
        r2 = 1;
        r0 = r8[r2];
        r0 = (java.lang.Boolean) r0;
        r0 = r0.booleanValue();
        if (r0 == 0) goto L_0x2628;
    L_0x2618:
        r0 = r7.contentView;
        r1 = r7.videoPlayerContainer;
        r0.removeView(r1);
        r1 = 0;
        r7.videoPlayerContainer = r1;
        r7.videoTextureView = r1;
        r7.aspectRatioFrameLayout = r1;
        goto L_0x2eac;
    L_0x2628:
        r0 = r7.chatListView;
        if (r0 == 0) goto L_0x2eac;
    L_0x262c:
        r0 = r7.videoPlayerContainer;
        if (r0 == 0) goto L_0x2eac;
    L_0x2630:
        r0 = r0.getTag();
        if (r0 == 0) goto L_0x2eac;
    L_0x2636:
        r1 = 0;
        r0 = r8[r1];
        r1 = r0;
        r1 = (org.telegram.messenger.MessageObject) r1;
        r0 = r7.chatListView;
        r0 = r0.getChildCount();
        r12 = 0;
    L_0x2643:
        if (r12 >= r0) goto L_0x2eac;
    L_0x2645:
        r2 = r7.chatListView;
        r2 = r2.getChildAt(r12);
        r3 = r2 instanceof org.telegram.ui.Cells.ChatMessageCell;
        if (r3 == 0) goto L_0x269e;
    L_0x264f:
        r2 = (org.telegram.ui.Cells.ChatMessageCell) r2;
        r3 = r2.getMessageObject();
        if (r1 != r3) goto L_0x269e;
    L_0x2657:
        r0 = r2.getPhotoImage();
        r2 = r0.getAnimation();
        if (r2 == 0) goto L_0x2eac;
    L_0x2661:
        r0 = r2.getAnimatedBitmap();
        if (r0 == 0) goto L_0x2688;
    L_0x2667:
        r3 = r7.videoTextureView;	 Catch:{ all -> 0x2684 }
        r4 = r0.getWidth();	 Catch:{ all -> 0x2684 }
        r5 = r0.getHeight();	 Catch:{ all -> 0x2684 }
        r3 = r3.getBitmap(r4, r5);	 Catch:{ all -> 0x2684 }
        r4 = new android.graphics.Canvas;	 Catch:{ all -> 0x2684 }
        r4.<init>(r0);	 Catch:{ all -> 0x2684 }
        r0 = 0;
        r5 = 0;
        r6 = 0;
        r4.drawBitmap(r3, r0, r5, r6);	 Catch:{ all -> 0x2684 }
        r3.recycle();	 Catch:{ all -> 0x2684 }
        goto L_0x2688;
    L_0x2684:
        r0 = move-exception;
        org.telegram.messenger.FileLog.e(r0);
    L_0x2688:
        r0 = r1.audioProgressMs;
        r3 = (long) r0;
        r0 = r47.getFileLoader();
        r1 = r1.getDocument();
        r5 = 1;
        r0 = r0.isLoadingVideo(r1, r5);
        r0 = r0 ^ r5;
        r2.seekTo(r3, r0);
        goto L_0x2eac;
    L_0x269e:
        r12 = r12 + 1;
        goto L_0x2643;
    L_0x26a1:
        r2 = org.telegram.messenger.NotificationCenter.messagePlayingDidReset;
        if (r0 == r2) goto L_0x2dff;
    L_0x26a5:
        r2 = org.telegram.messenger.NotificationCenter.messagePlayingPlayStateChanged;
        if (r0 != r2) goto L_0x26ab;
    L_0x26a9:
        goto L_0x2dff;
    L_0x26ab:
        r2 = org.telegram.messenger.NotificationCenter.messagePlayingProgressDidChanged;
        if (r0 != r2) goto L_0x2702;
    L_0x26af:
        r2 = 0;
        r0 = r8[r2];
        r0 = (java.lang.Integer) r0;
        r1 = r7.chatListView;
        if (r1 == 0) goto L_0x2eac;
    L_0x26b8:
        r1 = r1.getChildCount();
        r12 = 0;
    L_0x26bd:
        if (r12 >= r1) goto L_0x2eac;
    L_0x26bf:
        r2 = r7.chatListView;
        r2 = r2.getChildAt(r12);
        r3 = r2 instanceof org.telegram.ui.Cells.ChatMessageCell;
        if (r3 == 0) goto L_0x26ff;
    L_0x26c9:
        r2 = (org.telegram.ui.Cells.ChatMessageCell) r2;
        r3 = r2.getMessageObject();
        if (r3 == 0) goto L_0x26ff;
    L_0x26d1:
        r4 = r3.getId();
        r5 = r0.intValue();
        if (r4 != r5) goto L_0x26ff;
    L_0x26db:
        r0 = org.telegram.messenger.MediaController.getInstance();
        r0 = r0.getPlayingMessageObject();
        if (r0 == 0) goto L_0x2eac;
    L_0x26e5:
        r1 = r0.audioProgress;
        r3.audioProgress = r1;
        r1 = r0.audioProgressSec;
        r3.audioProgressSec = r1;
        r0 = r0.audioPlayerDuration;
        r3.audioPlayerDuration = r0;
        r2.updatePlayingMessageProgress();
        r0 = r7.drawLaterRoundProgressCell;
        if (r0 != r2) goto L_0x2eac;
    L_0x26f8:
        r0 = r7.fragmentView;
        r0.invalidate();
        goto L_0x2eac;
    L_0x26ff:
        r12 = r12 + 1;
        goto L_0x26bd;
    L_0x2702:
        r2 = org.telegram.messenger.NotificationCenter.didUpdatePollResults;
        if (r0 != r2) goto L_0x2748;
    L_0x2706:
        r2 = 0;
        r0 = r8[r2];
        r0 = (java.lang.Long) r0;
        r0 = r0.longValue();
        r2 = r7.polls;
        r0 = r2.get(r0);
        r0 = (java.util.ArrayList) r0;
        if (r0 == 0) goto L_0x2eac;
    L_0x2719:
        r1 = 1;
        r2 = r8[r1];
        r2 = (org.telegram.tgnet.TLRPC.TL_poll) r2;
        r1 = 2;
        r1 = r8[r1];
        r1 = (org.telegram.tgnet.TLRPC.TL_pollResults) r1;
        r3 = r0.size();
        r12 = 0;
    L_0x2728:
        if (r12 >= r3) goto L_0x2eac;
    L_0x272a:
        r4 = r0.get(r12);
        r4 = (org.telegram.messenger.MessageObject) r4;
        r5 = r4.messageOwner;
        r5 = r5.media;
        r5 = (org.telegram.tgnet.TLRPC.TL_messageMediaPoll) r5;
        if (r2 == 0) goto L_0x273a;
    L_0x2738:
        r5.poll = r2;
    L_0x273a:
        org.telegram.messenger.MessageObject.updatePollResults(r5, r1);
        r5 = r7.chatAdapter;
        if (r5 == 0) goto L_0x2745;
    L_0x2741:
        r6 = 1;
        r5.updateRowWithMessageObject(r4, r6);
    L_0x2745:
        r12 = r12 + 1;
        goto L_0x2728;
    L_0x2748:
        r2 = org.telegram.messenger.NotificationCenter.didUpdateReactions;
        if (r0 != r2) goto L_0x2794;
    L_0x274c:
        r2 = 0;
        r0 = r8[r2];
        r0 = (java.lang.Long) r0;
        r0 = r0.longValue();
        r2 = r7.dialog_id;
        r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1));
        if (r4 == 0) goto L_0x2761;
    L_0x275b:
        r2 = r7.mergeDialogId;
        r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1));
        if (r4 != 0) goto L_0x2eac;
    L_0x2761:
        r2 = 1;
        r3 = r8[r2];
        r3 = (java.lang.Integer) r3;
        r2 = r3.intValue();
        r3 = r7.messagesDict;
        r4 = r7.dialog_id;
        r6 = (r0 > r4 ? 1 : (r0 == r4 ? 0 : -1));
        if (r6 != 0) goto L_0x2774;
    L_0x2772:
        r12 = 0;
        goto L_0x2775;
    L_0x2774:
        r12 = 1;
    L_0x2775:
        r0 = r3[r12];
        r0 = r0.get(r2);
        r0 = (org.telegram.messenger.MessageObject) r0;
        if (r0 == 0) goto L_0x2eac;
    L_0x277f:
        r1 = r0.messageOwner;
        r2 = 2;
        r2 = r8[r2];
        r2 = (org.telegram.tgnet.TLRPC.TL_messageReactions) r2;
        org.telegram.messenger.MessageObject.updateReactions(r1, r2);
        r0.measureInlineBotButtons();
        r1 = r7.chatAdapter;
        r2 = 1;
        r1.updateRowWithMessageObject(r0, r2);
        goto L_0x2eac;
    L_0x2794:
        r2 = 2;
        r3 = org.telegram.messenger.NotificationCenter.updateMessageMedia;
        if (r0 != r3) goto L_0x28aa;
    L_0x2799:
        r3 = 0;
        r0 = r8[r3];
        r0 = (org.telegram.tgnet.TLRPC.Message) r0;
        r1 = r7.messagesDict;
        r1 = r1[r3];
        r2 = r0.id;
        r1 = r1.get(r2);
        r1 = (org.telegram.messenger.MessageObject) r1;
        if (r1 == 0) goto L_0x2eac;
    L_0x27ac:
        r2 = r1.messageOwner;
        r4 = r0.media;
        r2.media = r4;
        r4 = r0.attachPath;
        r2.attachPath = r4;
        r1.generateThumbs(r3);
        r2 = r1.getGroupId();
        r4 = 0;
        r6 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1));
        if (r6 == 0) goto L_0x2886;
    L_0x27c3:
        r2 = r1.photoThumbs;
        if (r2 == 0) goto L_0x27cd;
    L_0x27c7:
        r2 = r2.isEmpty();
        if (r2 == 0) goto L_0x2886;
    L_0x27cd:
        r2 = r7.groupedMessagesMap;
        r3 = r1.getGroupId();
        r2 = r2.get(r3);
        r2 = (org.telegram.messenger.MessageObject.GroupedMessages) r2;
        if (r2 == 0) goto L_0x2886;
    L_0x27db:
        r3 = r2.messages;
        r3 = r3.indexOf(r1);
        if (r3 < 0) goto L_0x2886;
    L_0x27e3:
        r4 = r2.messages;
        r4 = r4.size();
        if (r3 <= 0) goto L_0x284a;
    L_0x27eb:
        r5 = r2.messages;
        r5 = r5.size();
        r6 = 1;
        r5 = r5 - r6;
        if (r3 >= r5) goto L_0x284a;
    L_0x27f5:
        r5 = new org.telegram.messenger.MessageObject$GroupedMessages;
        r5.<init>();
        r6 = org.telegram.messenger.Utilities.random;
        r10 = r6.nextLong();
        r5.groupId = r10;
        r6 = r5.messages;
        r8 = r2.messages;
        r10 = r3 + 1;
        r11 = r8.size();
        r8 = r8.subList(r10, r11);
        r6.addAll(r8);
        r6 = 0;
    L_0x2814:
        r8 = r5.messages;
        r8 = r8.size();
        if (r6 >= r8) goto L_0x2830;
    L_0x281c:
        r8 = r5.messages;
        r8 = r8.get(r6);
        r8 = (org.telegram.messenger.MessageObject) r8;
        r13 = r5.groupId;
        r8.localGroupId = r13;
        r8 = r2.messages;
        r8.remove(r10);
        r6 = r6 + 1;
        goto L_0x2814;
    L_0x2830:
        r6 = r7.groupedMessagesMap;
        r10 = r5.groupId;
        r6.put(r10, r5);
        r6 = r5.messages;
        r8 = r6.size();
        r9 = 1;
        r8 = r8 - r9;
        r6 = r6.get(r8);
        r13 = r6;
        r13 = (org.telegram.messenger.MessageObject) r13;
        r5.calculate();
        goto L_0x284b;
    L_0x284a:
        r13 = 0;
    L_0x284b:
        r5 = r2.messages;
        r5.remove(r3);
        r3 = r2.messages;
        r3 = r3.isEmpty();
        if (r3 == 0) goto L_0x2860;
    L_0x2858:
        r3 = r7.groupedMessagesMap;
        r4 = r2.groupId;
        r3.remove(r4);
        goto L_0x2886;
    L_0x2860:
        if (r13 != 0) goto L_0x2871;
    L_0x2862:
        r3 = r2.messages;
        r5 = r3.size();
        r6 = 1;
        r5 = r5 - r6;
        r3 = r3.get(r5);
        r13 = r3;
        r13 = (org.telegram.messenger.MessageObject) r13;
    L_0x2871:
        r2.calculate();
        r2 = r7.messages;
        r2 = r2.indexOf(r13);
        if (r2 < 0) goto L_0x2886;
    L_0x287c:
        r3 = r7.chatAdapter;
        if (r3 == 0) goto L_0x2886;
    L_0x2880:
        r5 = r3.messagesStartRow;
        r2 = r2 + r5;
        r3.notifyItemRangeChanged(r2, r4);
    L_0x2886:
        r0 = r0.media;
        r2 = r0.ttl_seconds;
        if (r2 == 0) goto L_0x28a5;
    L_0x288c:
        r2 = r0.photo;
        r2 = r2 instanceof org.telegram.tgnet.TLRPC.TL_photoEmpty;
        if (r2 != 0) goto L_0x2898;
    L_0x2892:
        r0 = r0.document;
        r0 = r0 instanceof org.telegram.tgnet.TLRPC.TL_documentEmpty;
        if (r0 == 0) goto L_0x28a5;
    L_0x2898:
        r1.setType();
        r0 = r7.chatAdapter;
        if (r0 == 0) goto L_0x2eac;
    L_0x289f:
        r3 = 0;
        r0.updateRowWithMessageObject(r1, r3);
        goto L_0x2eac;
    L_0x28a5:
        r47.updateVisibleRows();
        goto L_0x2eac;
    L_0x28aa:
        r3 = 0;
        r4 = org.telegram.messenger.NotificationCenter.replaceMessagesObjects;
        if (r0 != r4) goto L_0x28d8;
    L_0x28af:
        r0 = r8[r3];
        r0 = (java.lang.Long) r0;
        r0 = r0.longValue();
        r2 = r7.dialog_id;
        r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1));
        if (r4 == 0) goto L_0x28c4;
    L_0x28bd:
        r2 = r7.mergeDialogId;
        r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1));
        if (r4 == 0) goto L_0x28c4;
    L_0x28c3:
        return;
    L_0x28c4:
        r2 = r7.dialog_id;
        r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1));
        r1 = 1;
        if (r4 != 0) goto L_0x28cd;
    L_0x28cb:
        r9 = 0;
        goto L_0x28ce;
    L_0x28cd:
        r9 = 1;
    L_0x28ce:
        r0 = r8[r1];
        r0 = (java.util.ArrayList) r0;
        r1 = 0;
        r7.replaceMessageObjects(r0, r9, r1);
        goto L_0x2eac;
    L_0x28d8:
        r3 = org.telegram.messenger.NotificationCenter.notificationsSettingsUpdated;
        if (r0 != r3) goto L_0x28ec;
    L_0x28dc:
        r47.updateTitleIcons();
        r0 = r7.currentChat;
        r0 = org.telegram.messenger.ChatObject.isChannel(r0);
        if (r0 == 0) goto L_0x2eac;
    L_0x28e7:
        r47.updateBottomOverlay();
        goto L_0x2eac;
    L_0x28ec:
        r3 = org.telegram.messenger.NotificationCenter.replyMessagesDidLoad;
        if (r0 != r3) goto L_0x2904;
    L_0x28f0:
        r3 = 0;
        r0 = r8[r3];
        r0 = (java.lang.Long) r0;
        r0 = r0.longValue();
        r2 = r7.dialog_id;
        r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1));
        if (r4 != 0) goto L_0x2eac;
    L_0x28ff:
        r47.updateVisibleRows();
        goto L_0x2eac;
    L_0x2904:
        r3 = org.telegram.messenger.NotificationCenter.pinnedMessageDidLoad;
        if (r0 != r3) goto L_0x293a;
    L_0x2908:
        r3 = 0;
        r0 = r8[r3];
        r0 = (org.telegram.messenger.MessageObject) r0;
        r1 = r0.getDialogId();
        r3 = r7.dialog_id;
        r5 = (r1 > r3 ? 1 : (r1 == r3 ? 0 : -1));
        if (r5 != 0) goto L_0x2eac;
    L_0x2917:
        r1 = r7.chatInfo;
        if (r1 == 0) goto L_0x2923;
    L_0x291b:
        r1 = r1.pinned_msg_id;
        r2 = r0.getId();
        if (r1 == r2) goto L_0x292f;
    L_0x2923:
        r1 = r7.userInfo;
        if (r1 == 0) goto L_0x2eac;
    L_0x2927:
        r1 = r1.pinned_msg_id;
        r2 = r0.getId();
        if (r1 != r2) goto L_0x2eac;
    L_0x292f:
        r7.pinnedMessageObject = r0;
        r3 = 0;
        r7.loadingPinnedMessage = r3;
        r1 = 1;
        r7.updatePinnedMessageView(r1);
        goto L_0x2eac;
    L_0x293a:
        r3 = 0;
        r4 = org.telegram.messenger.NotificationCenter.didReceivedWebpages;
        if (r0 != r4) goto L_0x299b;
    L_0x293f:
        r0 = r8[r3];
        r0 = (java.util.ArrayList) r0;
        r1 = 0;
        r14 = 0;
    L_0x2945:
        r2 = r0.size();
        if (r1 >= r2) goto L_0x2994;
    L_0x294b:
        r2 = r0.get(r1);
        r2 = (org.telegram.tgnet.TLRPC.Message) r2;
        r3 = org.telegram.messenger.MessageObject.getDialogId(r2);
        r5 = r7.dialog_id;
        r8 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1));
        if (r8 == 0) goto L_0x2962;
    L_0x295b:
        r5 = r7.mergeDialogId;
        r8 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1));
        if (r8 == 0) goto L_0x2962;
    L_0x2961:
        goto L_0x2991;
    L_0x2962:
        r5 = r7.messagesDict;
        r10 = r7.dialog_id;
        r6 = (r3 > r10 ? 1 : (r3 == r10 ? 0 : -1));
        if (r6 != 0) goto L_0x296c;
    L_0x296a:
        r3 = 0;
        goto L_0x296d;
    L_0x296c:
        r3 = 1;
    L_0x296d:
        r3 = r5[r3];
        r4 = r2.id;
        r3 = r3.get(r4);
        r3 = (org.telegram.messenger.MessageObject) r3;
        if (r3 == 0) goto L_0x2991;
    L_0x2979:
        r4 = r3.messageOwner;
        r5 = new org.telegram.tgnet.TLRPC$TL_messageMediaWebPage;
        r5.<init>();
        r4.media = r5;
        r4 = r3.messageOwner;
        r4 = r4.media;
        r2 = r2.media;
        r2 = r2.webpage;
        r4.webpage = r2;
        r2 = 1;
        r3.generateThumbs(r2);
        r14 = 1;
    L_0x2991:
        r1 = r1 + 1;
        goto L_0x2945;
    L_0x2994:
        if (r14 == 0) goto L_0x2eac;
    L_0x2996:
        r47.updateVisibleRows();
        goto L_0x2eac;
    L_0x299b:
        r3 = org.telegram.messenger.NotificationCenter.didReceivedWebpagesInUpdates;
        if (r0 != r3) goto L_0x29cd;
    L_0x299f:
        r0 = r7.foundWebPage;
        if (r0 == 0) goto L_0x2eac;
    L_0x29a3:
        r1 = 0;
        r0 = r8[r1];
        r0 = (android.util.LongSparseArray) r0;
        r1 = 0;
    L_0x29a9:
        r2 = r0.size();
        if (r1 >= r2) goto L_0x2eac;
    L_0x29af:
        r2 = r0.valueAt(r1);
        r2 = (org.telegram.tgnet.TLRPC.WebPage) r2;
        r3 = r2.id;
        r5 = r7.foundWebPage;
        r5 = r5.id;
        r8 = (r3 > r5 ? 1 : (r3 == r5 ? 0 : -1));
        if (r8 != 0) goto L_0x29c9;
    L_0x29bf:
        r0 = r2 instanceof org.telegram.tgnet.TLRPC.TL_webPageEmpty;
        r1 = 1;
        r0 = r0 ^ r1;
        r3 = 0;
        r7.showFieldPanelForWebPage(r0, r2, r3);
        goto L_0x2eac;
    L_0x29c9:
        r3 = 0;
        r1 = r1 + 1;
        goto L_0x29a9;
    L_0x29cd:
        r3 = 0;
        r4 = org.telegram.messenger.NotificationCenter.messagesReadContent;
        if (r0 != r4) goto L_0x2a4a;
    L_0x29d2:
        r0 = r8[r3];
        r0 = (java.util.ArrayList) r0;
        r2 = r7.currentChat;
        r2 = org.telegram.messenger.ChatObject.isChannel(r2);
        if (r2 == 0) goto L_0x29e3;
    L_0x29de:
        r2 = r7.currentChat;
        r13 = r2.id;
        goto L_0x29e4;
    L_0x29e3:
        r13 = 0;
    L_0x29e4:
        r2 = 0;
        r14 = 0;
    L_0x29e6:
        r3 = r0.size();
        if (r2 >= r3) goto L_0x2a43;
    L_0x29ec:
        r3 = r0.get(r2);
        r3 = (java.lang.Long) r3;
        r3 = r3.longValue();
        r5 = 32;
        r5 = r3 >> r5;
        r6 = (int) r5;
        if (r6 >= 0) goto L_0x29fe;
    L_0x29fd:
        r6 = 0;
    L_0x29fe:
        if (r6 == r13) goto L_0x2a01;
    L_0x2a00:
        goto L_0x2a40;
    L_0x2a01:
        r5 = r7.messagesDict;
        r6 = 0;
        r5 = r5[r6];
        r4 = (int) r3;
        r3 = r5.get(r4);
        r3 = (org.telegram.messenger.MessageObject) r3;
        if (r3 == 0) goto L_0x2a40;
    L_0x2a0f:
        r3.setContentIsRead();
        r3 = r3.messageOwner;
        r3 = r3.mentioned;
        if (r3 == 0) goto L_0x2a3f;
    L_0x2a18:
        r3 = r7.newMentionsCount;
        r4 = 1;
        r3 = r3 - r4;
        r7.newMentionsCount = r3;
        r3 = r7.newMentionsCount;
        if (r3 > 0) goto L_0x2a2b;
    L_0x2a22:
        r5 = 0;
        r7.newMentionsCount = r5;
        r7.hasAllMentionsLocal = r4;
        r7.showMentionDownButton(r5, r4);
        goto L_0x2a3f;
    L_0x2a2b:
        r5 = 0;
        r6 = r7.mentiondownButtonCounter;
        if (r6 == 0) goto L_0x2a3f;
    L_0x2a30:
        r8 = new java.lang.Object[r4];
        r3 = java.lang.Integer.valueOf(r3);
        r8[r5] = r3;
        r3 = java.lang.String.format(r1, r8);
        r6.setText(r3);
    L_0x2a3f:
        r14 = 1;
    L_0x2a40:
        r2 = r2 + 1;
        goto L_0x29e6;
    L_0x2a43:
        if (r14 == 0) goto L_0x2eac;
    L_0x2a45:
        r47.updateVisibleRows();
        goto L_0x2eac;
    L_0x2a4a:
        r3 = org.telegram.messenger.NotificationCenter.botInfoDidLoad;
        if (r0 != r3) goto L_0x2ab4;
    L_0x2a4e:
        r3 = 1;
        r0 = r8[r3];
        r0 = (java.lang.Integer) r0;
        r0 = r0.intValue();
        r1 = r7.classGuid;
        if (r1 != r0) goto L_0x2eac;
    L_0x2a5b:
        r1 = 0;
        r0 = r8[r1];
        r0 = (org.telegram.tgnet.TLRPC.BotInfo) r0;
        r1 = r7.currentEncryptedChat;
        if (r1 != 0) goto L_0x2aaf;
    L_0x2a64:
        r1 = r0.commands;
        r1 = r1.isEmpty();
        if (r1 != 0) goto L_0x2a77;
    L_0x2a6c:
        r1 = r7.currentChat;
        r1 = org.telegram.messenger.ChatObject.isChannel(r1);
        if (r1 != 0) goto L_0x2a77;
    L_0x2a74:
        r1 = 1;
        r7.hasBotsCommands = r1;
    L_0x2a77:
        r1 = r7.botInfo;
        r2 = r0.user_id;
        r1.put(r2, r0);
        r0 = r7.chatAdapter;
        if (r0 == 0) goto L_0x2a89;
    L_0x2a82:
        r1 = r0.botInfoRow;
        r0.notifyItemChanged(r1);
    L_0x2a89:
        r0 = r7.mentionsAdapter;
        if (r0 == 0) goto L_0x2aa4;
    L_0x2a8d:
        r0 = r7.currentChat;
        r0 = org.telegram.messenger.ChatObject.isChannel(r0);
        if (r0 == 0) goto L_0x2a9d;
    L_0x2a95:
        r0 = r7.currentChat;
        if (r0 == 0) goto L_0x2aa4;
    L_0x2a99:
        r0 = r0.megagroup;
        if (r0 == 0) goto L_0x2aa4;
    L_0x2a9d:
        r0 = r7.mentionsAdapter;
        r1 = r7.botInfo;
        r0.setBotInfo(r1);
    L_0x2aa4:
        r0 = r7.chatActivityEnterView;
        if (r0 == 0) goto L_0x2aaf;
    L_0x2aa8:
        r1 = r7.botsCount;
        r2 = r7.hasBotsCommands;
        r0.setBotsCount(r1, r2);
    L_0x2aaf:
        r47.updateBotButtons();
        goto L_0x2eac;
    L_0x2ab4:
        r3 = org.telegram.messenger.NotificationCenter.botKeyboardDidLoad;
        if (r0 != r3) goto L_0x2afe;
    L_0x2ab8:
        r0 = r7.dialog_id;
        r2 = 1;
        r3 = r8[r2];
        r3 = (java.lang.Long) r3;
        r2 = r3.longValue();
        r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1));
        if (r4 != 0) goto L_0x2eac;
    L_0x2ac7:
        r1 = 0;
        r0 = r8[r1];
        r0 = (org.telegram.tgnet.TLRPC.Message) r0;
        if (r0 == 0) goto L_0x2ae0;
    L_0x2ace:
        r2 = r7.userBlocked;
        if (r2 != 0) goto L_0x2ae0;
    L_0x2ad2:
        r2 = new org.telegram.messenger.MessageObject;
        r3 = r7.currentAccount;
        r2.<init>(r3, r0, r1);
        r7.botButtons = r2;
        r47.checkBotKeyboard();
        goto L_0x2eac;
    L_0x2ae0:
        r1 = 0;
        r7.botButtons = r1;
        r0 = r7.chatActivityEnterView;
        if (r0 == 0) goto L_0x2eac;
    L_0x2ae7:
        r0 = r7.replyingMessageObject;
        if (r0 == 0) goto L_0x2af5;
    L_0x2aeb:
        r2 = r7.botReplyButtons;
        if (r2 != r0) goto L_0x2af5;
    L_0x2aef:
        r7.botReplyButtons = r1;
        r1 = 1;
        r7.hideFieldPanel(r1);
    L_0x2af5:
        r0 = r7.chatActivityEnterView;
        r1 = r7.botButtons;
        r0.setButtons(r1);
        goto L_0x2eac;
    L_0x2afe:
        r3 = org.telegram.messenger.NotificationCenter.chatSearchResultsAvailable;
        if (r0 != r3) goto L_0x2b78;
    L_0x2b02:
        r0 = r7.classGuid;
        r1 = 0;
        r3 = r8[r1];
        r3 = (java.lang.Integer) r3;
        r1 = r3.intValue();
        if (r0 != r1) goto L_0x2eac;
    L_0x2b0f:
        r1 = 6;
        r0 = r8[r1];
        r0 = (java.lang.Boolean) r0;
        r0 = r0.booleanValue();
        if (r0 == 0) goto L_0x2b6f;
    L_0x2b1a:
        r1 = 1;
        r0 = r8[r1];
        r0 = (java.lang.Integer) r0;
        r0 = r0.intValue();
        r1 = 3;
        r1 = r8[r1];
        r1 = (java.lang.Long) r1;
        r3 = r1.longValue();
        if (r0 == 0) goto L_0x2b46;
    L_0x2b2e:
        r5 = 0;
        r6 = 1;
        r10 = r7.dialog_id;
        r1 = (r3 > r10 ? 1 : (r3 == r10 ? 0 : -1));
        if (r1 != 0) goto L_0x2b38;
    L_0x2b36:
        r9 = 0;
        goto L_0x2b39;
    L_0x2b38:
        r9 = 1;
    L_0x2b39:
        r10 = 1;
        r1 = r47;
        r11 = 2;
        r2 = r0;
        r3 = r5;
        r4 = r6;
        r5 = r9;
        r6 = r10;
        r1.scrollToMessageId(r2, r3, r4, r5, r6);
        goto L_0x2b4a;
    L_0x2b46:
        r11 = 2;
        r47.updateVisibleRows();
    L_0x2b4a:
        r0 = r8[r11];
        r0 = (java.lang.Integer) r0;
        r0 = r0.intValue();
        r1 = 4;
        r1 = r8[r1];
        r1 = (java.lang.Integer) r1;
        r1 = r1.intValue();
        r2 = 5;
        r2 = r8[r2];
        r2 = (java.lang.Integer) r2;
        r2 = r2.intValue();
        r7.updateSearchButtons(r0, r1, r2);
        r0 = r7.searchItem;
        if (r0 == 0) goto L_0x2b6f;
    L_0x2b6b:
        r1 = 0;
        r0.setShowSearchProgress(r1);
    L_0x2b6f:
        r0 = r7.messagesSearchAdapter;
        if (r0 == 0) goto L_0x2eac;
    L_0x2b73:
        r0.notifyDataSetChanged();
        goto L_0x2eac;
    L_0x2b78:
        r11 = 2;
        r2 = org.telegram.messenger.NotificationCenter.chatSearchResultsLoading;
        if (r0 != r2) goto L_0x2b9b;
    L_0x2b7d:
        r0 = r7.classGuid;
        r1 = 0;
        r1 = r8[r1];
        r1 = (java.lang.Integer) r1;
        r1 = r1.intValue();
        if (r0 != r1) goto L_0x2eac;
    L_0x2b8a:
        r0 = r7.searchItem;
        if (r0 == 0) goto L_0x2eac;
    L_0x2b8e:
        r1 = 1;
        r0.setShowSearchProgress(r1);
        r0 = r7.messagesSearchAdapter;
        if (r0 == 0) goto L_0x2eac;
    L_0x2b96:
        r0.notifyDataSetChanged();
        goto L_0x2eac;
    L_0x2b9b:
        r2 = org.telegram.messenger.NotificationCenter.didUpdatedMessagesViews;
        if (r0 != r2) goto L_0x2bdf;
    L_0x2b9f:
        r2 = 0;
        r0 = r8[r2];
        r0 = (android.util.SparseArray) r0;
        r1 = r7.dialog_id;
        r2 = (int) r1;
        r0 = r0.get(r2);
        r0 = (android.util.SparseIntArray) r0;
        if (r0 == 0) goto L_0x2eac;
    L_0x2baf:
        r1 = 0;
        r14 = 0;
    L_0x2bb1:
        r2 = r0.size();
        if (r1 >= r2) goto L_0x2bd8;
    L_0x2bb7:
        r2 = r0.keyAt(r1);
        r3 = r7.messagesDict;
        r4 = 0;
        r3 = r3[r4];
        r3 = r3.get(r2);
        r3 = (org.telegram.messenger.MessageObject) r3;
        if (r3 == 0) goto L_0x2bd5;
    L_0x2bc8:
        r2 = r0.get(r2);
        r3 = r3.messageOwner;
        r4 = r3.views;
        if (r2 <= r4) goto L_0x2bd5;
    L_0x2bd2:
        r3.views = r2;
        r14 = 1;
    L_0x2bd5:
        r1 = r1 + 1;
        goto L_0x2bb1;
    L_0x2bd8:
        if (r14 == 0) goto L_0x2eac;
    L_0x2bda:
        r47.updateVisibleRows();
        goto L_0x2eac;
    L_0x2bdf:
        r2 = org.telegram.messenger.NotificationCenter.peerSettingsDidLoad;
        if (r0 != r2) goto L_0x2CLASSNAME;
    L_0x2be3:
        r2 = 0;
        r0 = r8[r2];
        r0 = (java.lang.Long) r0;
        r0 = r0.longValue();
        r2 = r7.dialog_id;
        r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1));
        if (r4 == 0) goto L_0x2bfd;
    L_0x2bf2:
        r2 = r7.currentUser;
        if (r2 == 0) goto L_0x2eac;
    L_0x2bf6:
        r2 = r2.id;
        r2 = (long) r2;
        r4 = (r2 > r0 ? 1 : (r2 == r0 ? 0 : -1));
        if (r4 != 0) goto L_0x2eac;
    L_0x2bfd:
        r0 = r7.paused;
        r1 = 1;
        r0 = r0 ^ r1;
        r7.updateTopPanel(r0);
        goto L_0x2eac;
    L_0x2CLASSNAME:
        r2 = org.telegram.messenger.NotificationCenter.newDraftReceived;
        if (r0 != r2) goto L_0x2c1f;
    L_0x2c0a:
        r2 = 0;
        r0 = r8[r2];
        r0 = (java.lang.Long) r0;
        r0 = r0.longValue();
        r2 = r7.dialog_id;
        r4 = (r0 > r2 ? 1 : (r0 == r2 ? 0 : -1));
        if (r4 != 0) goto L_0x2eac;
    L_0x2CLASSNAME:
        r1 = 1;
        r7.applyDraftMaybe(r1);
        goto L_0x2eac;
    L_0x2c1f:
        r2 = org.telegram.messenger.NotificationCenter.userInfoDidLoad;
        if (r0 != r2) goto L_0x2CLASSNAME;
    L_0x2CLASSNAME:
        r2 = 0;
        r0 = r8[r2];
        r0 = (java.lang.Integer) r0;
        r1 = r7.currentUser;
        if (r1 == 0) goto L_0x2eac;
    L_0x2c2c:
        r1 = r1.id;
        r0 = r0.intValue();
        if (r1 != r0) goto L_0x2eac;
    L_0x2CLASSNAME:
        r1 = 1;
        r0 = r8[r1];
        r0 = (org.telegram.tgnet.TLRPC.UserFull) r0;
        r7.userInfo = r0;
        r0 = r7.headerItem;
        if (r0 == 0) goto L_0x2CLASSNAME;
    L_0x2c3f:
        r1 = r7.userInfo;
        r1 = r1.phone_calls_available;
        if (r1 == 0) goto L_0x2c4b;
    L_0x2CLASSNAME:
        r1 = 32;
        r0.showSubItem(r1);
        goto L_0x2CLASSNAME;
    L_0x2c4b:
        r1 = 32;
        r0.hideSubItem(r1);
    L_0x2CLASSNAME:
        r0 = r8[r11];
        r0 = r0 instanceof org.telegram.messenger.MessageObject;
        if (r0 == 0) goto L_0x2CLASSNAME;
    L_0x2CLASSNAME:
        r0 = r8[r11];
        r0 = (org.telegram.messenger.MessageObject) r0;
        r7.pinnedMessageObject = r0;
        r1 = 0;
        r7.updatePinnedMessageView(r1);
        goto L_0x2eac;
    L_0x2CLASSNAME:
        r1 = 1;
        r7.updatePinnedMessageView(r1);
        goto L_0x2eac;
    L_0x2CLASSNAME:
        r2 = org.telegram.messenger.NotificationCenter.didSetNewWallpapper;
        if (r0 != r2) goto L_0x2ca9;
    L_0x2c6c:
        r0 = r7.fragmentView;
        if (r0 == 0) goto L_0x2eac;
    L_0x2CLASSNAME:
        r0 = r7.contentView;
        r1 = org.telegram.ui.ActionBar.Theme.getCachedWallpaper();
        r2 = org.telegram.ui.ActionBar.Theme.isWallpaperMotion();
        r0.setBackgroundImage(r1, r2);
        r0 = r7.progressView2;
        r0 = r0.getBackground();
        r1 = org.telegram.ui.ActionBar.Theme.colorFilter;
        r0.setColorFilter(r1);
        r0 = r7.emptyView;
        if (r0 == 0) goto L_0x2CLASSNAME;
    L_0x2c8c:
        r0 = r0.getBackground();
        r1 = org.telegram.ui.ActionBar.Theme.colorFilter;
        r0.setColorFilter(r1);
    L_0x2CLASSNAME:
        r0 = r7.bigEmptyView;
        if (r0 == 0) goto L_0x2ca2;
    L_0x2CLASSNAME:
        r0 = r0.getBackground();
        r1 = org.telegram.ui.ActionBar.Theme.colorFilter;
        r0.setColorFilter(r1);
    L_0x2ca2:
        r0 = r7.chatListView;
        r0.invalidateViews();
        goto L_0x2eac;
    L_0x2ca9:
        r2 = org.telegram.messenger.NotificationCenter.didApplyNewTheme;
        if (r0 != r2) goto L_0x2cda;
    L_0x2cad:
        r0 = r7.undoView;
        if (r0 == 0) goto L_0x2cd9;
    L_0x2cb1:
        r0 = r7.paused;
        if (r0 == 0) goto L_0x2cb6;
    L_0x2cb5:
        goto L_0x2cd9;
    L_0x2cb6:
        r1 = 0;
        r0 = r8[r1];
        r0 = (org.telegram.ui.ActionBar.Theme.ThemeInfo) r0;
        r1 = 1;
        r1 = r8[r1];
        r1 = (org.telegram.ui.ActionBar.Theme.ThemeAccent) r1;
        r2 = r8[r11];
        r2 = (java.lang.Boolean) r2;
        r2 = r2.booleanValue();
        r8 = r7.undoView;
        r9 = 0;
        r11 = 12;
        r12 = 0;
        r13 = new org.telegram.ui.-$$Lambda$ChatActivity$EM2AMKNRTq5VcRHDCT-pM4GeUoA;
        r13.<init>(r1, r0, r2);
        r8.showWithAction(r9, r11, r12, r13);
        goto L_0x2eac;
    L_0x2cd9:
        return;
    L_0x2cda:
        r2 = org.telegram.messenger.NotificationCenter.goingToPreviewTheme;
        if (r0 != r2) goto L_0x2d18;
    L_0x2cde:
        r0 = r7.chatLayoutManager;
        if (r0 == 0) goto L_0x2eac;
    L_0x2ce2:
        r0 = r0.findFirstVisibleItemPosition();
        if (r0 == 0) goto L_0x2d13;
    L_0x2ce8:
        r7.scrollToPositionOnRecreate = r0;
        r0 = r7.chatListView;
        r1 = r7.scrollToPositionOnRecreate;
        r0 = r0.findViewHolderForAdapterPosition(r1);
        r0 = (org.telegram.ui.Components.RecyclerListView.Holder) r0;
        if (r0 == 0) goto L_0x2d0e;
    L_0x2cf6:
        r1 = r7.chatListView;
        r1 = r1.getMeasuredHeight();
        r0 = r0.itemView;
        r0 = r0.getBottom();
        r1 = r1 - r0;
        r0 = r7.chatListView;
        r0 = r0.getPaddingBottom();
        r1 = r1 - r0;
        r7.scrollToOffsetOnRecreate = r1;
        goto L_0x2eac;
    L_0x2d0e:
        r0 = -1;
        r7.scrollToPositionOnRecreate = r0;
        goto L_0x2eac;
    L_0x2d13:
        r0 = -1;
        r7.scrollToPositionOnRecreate = r0;
        goto L_0x2eac;
    L_0x2d18:
        r2 = org.telegram.messenger.NotificationCenter.channelRightsUpdated;
        if (r0 != r2) goto L_0x2d3c;
    L_0x2d1c:
        r2 = 0;
        r0 = r8[r2];
        r0 = (org.telegram.tgnet.TLRPC.Chat) r0;
        r1 = r7.currentChat;
        if (r1 == 0) goto L_0x2eac;
    L_0x2d25:
        r2 = r0.id;
        r1 = r1.id;
        if (r2 != r1) goto L_0x2eac;
    L_0x2d2b:
        r1 = r7.chatActivityEnterView;
        if (r1 == 0) goto L_0x2eac;
    L_0x2d2f:
        r7.currentChat = r0;
        r1.checkChannelRights();
        r47.checkRaiseSensors();
        r47.updateSecretStatus();
        goto L_0x2eac;
    L_0x2d3c:
        r2 = org.telegram.messenger.NotificationCenter.updateMentionsCount;
        if (r0 != r2) goto L_0x2d80;
    L_0x2d40:
        r2 = r7.dialog_id;
        r4 = 0;
        r0 = r8[r4];
        r0 = (java.lang.Long) r0;
        r4 = r0.longValue();
        r0 = (r2 > r4 ? 1 : (r2 == r4 ? 0 : -1));
        if (r0 != 0) goto L_0x2eac;
    L_0x2d4f:
        r2 = 1;
        r0 = r8[r2];
        r0 = (java.lang.Integer) r0;
        r0 = r0.intValue();
        r3 = r7.newMentionsCount;
        if (r3 <= r0) goto L_0x2eac;
    L_0x2d5c:
        r7.newMentionsCount = r0;
        r0 = r7.newMentionsCount;
        if (r0 > 0) goto L_0x2d6c;
    L_0x2d62:
        r3 = 0;
        r7.newMentionsCount = r3;
        r7.hasAllMentionsLocal = r2;
        r7.showMentionDownButton(r3, r2);
        goto L_0x2eac;
    L_0x2d6c:
        r3 = 0;
        r4 = r7.mentiondownButtonCounter;
        r2 = new java.lang.Object[r2];
        r0 = java.lang.Integer.valueOf(r0);
        r2[r3] = r0;
        r0 = java.lang.String.format(r1, r2);
        r4.setText(r0);
        goto L_0x2eac;
    L_0x2d80:
        r3 = 0;
        r1 = org.telegram.messenger.NotificationCenter.audioRecordTooShort;
        if (r0 != r1) goto L_0x2da0;
    L_0x2d85:
        r0 = r8[r3];
        r0 = (java.lang.Integer) r0;
        r0 = r0.intValue();
        r1 = r7.classGuid;
        if (r0 == r1) goto L_0x2d92;
    L_0x2d91:
        return;
    L_0x2d92:
        r1 = 1;
        r0 = r8[r1];
        r0 = (java.lang.Boolean) r0;
        r0 = r0.booleanValue();
        r7.showVoiceHint(r3, r0);
        goto L_0x2eac;
    L_0x2da0:
        r1 = org.telegram.messenger.NotificationCenter.videoLoadingStateChanged;
        if (r0 != r1) goto L_0x2dda;
    L_0x2da4:
        r0 = r7.chatListView;
        if (r0 == 0) goto L_0x2eac;
    L_0x2da8:
        r1 = r8[r3];
        r1 = (java.lang.String) r1;
        r0 = r0.getChildCount();
        r2 = 0;
    L_0x2db1:
        if (r2 >= r0) goto L_0x2eac;
    L_0x2db3:
        r3 = r7.chatListView;
        r3 = r3.getChildAt(r2);
        r4 = r3 instanceof org.telegram.ui.Cells.ChatMessageCell;
        if (r4 != 0) goto L_0x2dbf;
    L_0x2dbd:
        r5 = 0;
        goto L_0x2dd7;
    L_0x2dbf:
        r3 = (org.telegram.ui.Cells.ChatMessageCell) r3;
        r4 = r3.getStreamingMedia();
        if (r4 != 0) goto L_0x2dc8;
    L_0x2dc7:
        goto L_0x2dbd;
    L_0x2dc8:
        r4 = org.telegram.messenger.FileLoader.getAttachFileName(r4);
        r4 = r4.equals(r1);
        if (r4 == 0) goto L_0x2dbd;
    L_0x2dd2:
        r4 = 1;
        r5 = 0;
        r3.updateButtonState(r5, r4, r5);
    L_0x2dd7:
        r2 = r2 + 1;
        goto L_0x2db1;
    L_0x2dda:
        r5 = 0;
        r1 = org.telegram.messenger.NotificationCenter.scheduledMessagesUpdated;
        if (r0 != r1) goto L_0x2eac;
    L_0x2ddf:
        r0 = r8[r5];
        r0 = (java.lang.Long) r0;
        r0 = r0.longValue();
        r2 = r7.dialog_id;
        r4 = (r2 > r0 ? 1 : (r2 == r0 ? 0 : -1));
        if (r4 != 0) goto L_0x2eac;
    L_0x2ded:
        r1 = 1;
        r0 = r8[r1];
        r0 = (java.lang.Integer) r0;
        r0 = r0.intValue();
        r7.scheduledMessagesCount = r0;
        r0 = r7.openAnimationEnded;
        r7.updateScheduledInterface(r0);
        goto L_0x2eac;
    L_0x2dff:
        r1 = org.telegram.messenger.NotificationCenter.messagePlayingDidReset;
        if (r0 != r1) goto L_0x2e06;
    L_0x2e03:
        r47.destroyTextureView();
    L_0x2e06:
        r0 = r7.chatListView;
        if (r0 == 0) goto L_0x2eac;
    L_0x2e0a:
        r0 = r0.getChildCount();
        r1 = 0;
    L_0x2e0f:
        if (r1 >= r0) goto L_0x2e7a;
    L_0x2e11:
        r2 = r7.chatListView;
        r2 = r2.getChildAt(r1);
        r3 = r2 instanceof org.telegram.ui.Cells.ChatMessageCell;
        if (r3 == 0) goto L_0x2e77;
    L_0x2e1b:
        r2 = (org.telegram.ui.Cells.ChatMessageCell) r2;
        r3 = r2.getMessageObject();
        if (r3 == 0) goto L_0x2e77;
    L_0x2e23:
        r4 = r3.isVoice();
        if (r4 != 0) goto L_0x2e72;
    L_0x2e29:
        r4 = r3.isMusic();
        if (r4 == 0) goto L_0x2e30;
    L_0x2e2f:
        goto L_0x2e72;
    L_0x2e30:
        r4 = r3.isVideo();
        if (r4 == 0) goto L_0x2e5d;
    L_0x2e36:
        r4 = 1;
        r5 = 0;
        r2.updateButtonState(r5, r4, r5);
        r4 = org.telegram.messenger.MediaController.getInstance();
        r4 = r4.isPlayingMessage(r3);
        if (r4 != 0) goto L_0x2e77;
    L_0x2e45:
        r4 = org.telegram.messenger.MediaController.getInstance();
        r3 = r4.isGoingToShowMessageObject(r3);
        if (r3 != 0) goto L_0x2e77;
    L_0x2e4f:
        r2 = r2.getPhotoImage();
        r2 = r2.getAnimation();
        if (r2 == 0) goto L_0x2e77;
    L_0x2e59:
        r2.start();
        goto L_0x2e77;
    L_0x2e5d:
        r4 = r3.isRoundVideo();
        if (r4 == 0) goto L_0x2e77;
    L_0x2e63:
        r4 = org.telegram.messenger.MediaController.getInstance();
        r3 = r4.isPlayingMessage(r3);
        if (r3 != 0) goto L_0x2e77;
    L_0x2e6d:
        r3 = 1;
        r2.checkVideoPlayback(r3);
        goto L_0x2e77;
    L_0x2e72:
        r3 = 1;
        r4 = 0;
        r2.updateButtonState(r4, r3, r4);
    L_0x2e77:
        r1 = r1 + 1;
        goto L_0x2e0f;
    L_0x2e7a:
        r0 = r7.mentionListView;
        r0 = r0.getChildCount();
        r1 = 0;
    L_0x2e81:
        if (r1 >= r0) goto L_0x2eac;
    L_0x2e83:
        r2 = r7.mentionListView;
        r2 = r2.getChildAt(r1);
        r3 = r2 instanceof org.telegram.ui.Cells.ContextLinkCell;
        if (r3 == 0) goto L_0x2ea7;
    L_0x2e8d:
        r2 = (org.telegram.ui.Cells.ContextLinkCell) r2;
        r3 = r2.getMessageObject();
        if (r3 == 0) goto L_0x2ea7;
    L_0x2e95:
        r4 = r3.isVoice();
        if (r4 != 0) goto L_0x2ea1;
    L_0x2e9b:
        r3 = r3.isMusic();
        if (r3 == 0) goto L_0x2ea7;
    L_0x2ea1:
        r3 = 1;
        r4 = 0;
        r2.updateButtonState(r4, r3);
        goto L_0x2ea9;
    L_0x2ea7:
        r3 = 1;
        r4 = 0;
    L_0x2ea9:
        r1 = r1 + 1;
        goto L_0x2e81;
    L_0x2eac:
        return;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.didReceivedNotification(int, int, java.lang.Object[]):void");
    }

    public /* synthetic */ void lambda$didReceivedNotification$68$ChatActivity() {
        ActionBarLayout actionBarLayout = this.parentLayout;
        if (actionBarLayout != null) {
            actionBarLayout.resumeDelayedFragmentAnimation();
        }
    }

    static /* synthetic */ void lambda$didReceivedNotification$69(ThemeAccent themeAccent, ThemeInfo themeInfo, boolean z) {
        Boolean valueOf = Boolean.valueOf(false);
        if (themeAccent != null) {
            ThemeAccent accent = themeInfo.getAccent(false);
            NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.needSetDayNightTheme, themeInfo, valueOf, null, Integer.valueOf(themeAccent.id));
            if (z) {
                Theme.deleteThemeAccent(themeInfo, accent, true);
                return;
            }
            return;
        }
        NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.needSetDayNightTheme, themeInfo, valueOf, null, Integer.valueOf(-1));
    }

    private void checkSecretMessageForLocation(MessageObject messageObject) {
        if (messageObject.type == 4 && !this.locationAlertShown && !SharedConfig.isSecretMapPreviewSet()) {
            this.locationAlertShown = true;
            AlertsCreator.showSecretLocationAlert(getParentActivity(), this.currentAccount, new -$$Lambda$ChatActivity$RLmPW4dEo50erJUt_xPGuxrdpR4(this), true);
        }
    }

    public /* synthetic */ void lambda$checkSecretMessageForLocation$70$ChatActivity() {
        int childCount = this.chatListView.getChildCount();
        for (int i = 0; i < childCount; i++) {
            View childAt = this.chatListView.getChildAt(i);
            if (childAt instanceof ChatMessageCell) {
                ChatMessageCell chatMessageCell = (ChatMessageCell) childAt;
                if (chatMessageCell.getMessageObject().type == 4) {
                    chatMessageCell.forceResetMessageObject();
                }
            }
        }
    }

    private void clearHistory(boolean z) {
        int i;
        this.messages.clear();
        this.waitingForLoad.clear();
        this.messagesByDays.clear();
        this.groupedMessagesMap.clear();
        for (i = 1; i >= 0; i--) {
            this.messagesDict[i].clear();
            if (this.currentEncryptedChat == null) {
                this.maxMessageId[i] = Integer.MAX_VALUE;
                this.minMessageId[i] = Integer.MIN_VALUE;
            } else {
                this.maxMessageId[i] = Integer.MIN_VALUE;
                this.minMessageId[i] = Integer.MAX_VALUE;
            }
            this.maxDate[i] = Integer.MIN_VALUE;
            this.minDate[i] = 0;
            this.selectedMessagesIds[i].clear();
            this.selectedMessagesCanCopyIds[i].clear();
            this.selectedMessagesCanStarIds[i].clear();
        }
        hideActionMode();
        updatePinnedMessageView(true);
        if (this.botButtons != null) {
            this.botButtons = null;
            ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
            if (chatActivityEnterView != null) {
                chatActivityEnterView.setButtons(null, false);
            }
        }
        i = 4;
        if (z) {
            ChatActivityAdapter chatActivityAdapter = this.chatAdapter;
            if (chatActivityAdapter != null) {
                FrameLayout frameLayout = this.progressView;
                if (chatActivityAdapter.botInfoRow == -1) {
                    i = 0;
                }
                frameLayout.setVisibility(i);
                this.chatListView.setEmptyView(null);
            }
            for (i = 0; i < 2; i++) {
                this.endReached[i] = false;
                this.cacheEndReached[i] = false;
                this.forwardEndReached[i] = true;
            }
            this.first = true;
            this.firstLoading = true;
            this.loading = true;
            this.startLoadFromMessageId = 0;
            this.needSelectFromMessageId = false;
            this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
            int i2 = this.startLoadFromMessageIdSaved;
            if (i2 != 0) {
                this.startLoadFromMessageId = i2;
                this.startLoadFromMessageIdSaved = 0;
                MessagesController messagesController = getMessagesController();
                long j = this.dialog_id;
                int i3 = AndroidUtilities.isTablet() ? 30 : 20;
                int i4 = this.startLoadFromMessageId;
                int i5 = this.classGuid;
                boolean isChannel = ChatObject.isChannel(this.currentChat);
                boolean z2 = this.inScheduleMode;
                i = this.lastLoadIndex;
                this.lastLoadIndex = i + 1;
                messagesController.loadMessages(j, i3, i4, 0, true, 0, i5, 3, 0, isChannel, z2, i);
            } else {
                MessagesController messagesController2 = getMessagesController();
                long j2 = this.dialog_id;
                int i6 = AndroidUtilities.isTablet() ? 30 : 20;
                i2 = this.classGuid;
                boolean isChannel2 = ChatObject.isChannel(this.currentChat);
                boolean z3 = this.inScheduleMode;
                int i7 = this.lastLoadIndex;
                this.lastLoadIndex = i7 + 1;
                messagesController2.loadMessages(j2, i6, 0, 0, true, 0, i2, 2, 0, isChannel2, z3, i7);
            }
        } else {
            FrameLayout frameLayout2 = this.progressView;
            if (frameLayout2 != null) {
                frameLayout2.setVisibility(4);
                this.chatListView.setEmptyView(this.emptyViewContainer);
            }
        }
        ChatActivityAdapter chatActivityAdapter2 = this.chatAdapter;
        if (chatActivityAdapter2 != null) {
            chatActivityAdapter2.notifyDataSetChanged();
        }
        if (this.currentEncryptedChat == null) {
            User user = this.currentUser;
            if (user != null && user.bot && this.botUser == null) {
                this.botUser = "";
                updateBottomOverlay();
            }
        }
    }

    public boolean processSwitchButton(TL_keyboardButtonSwitchInline tL_keyboardButtonSwitchInline) {
        if (this.inlineReturn == 0 || tL_keyboardButtonSwitchInline.same_peer || this.parentLayout == null) {
            return false;
        }
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("@");
        stringBuilder.append(this.currentUser.username);
        stringBuilder.append(" ");
        stringBuilder.append(tL_keyboardButtonSwitchInline.query);
        String stringBuilder2 = stringBuilder.toString();
        if (this.inlineReturn == this.dialog_id) {
            this.inlineReturn = 0;
            this.chatActivityEnterView.setFieldText(stringBuilder2);
        } else {
            getMediaDataController().saveDraft(this.inlineReturn, stringBuilder2, null, null, false);
            if (this.parentLayout.fragmentsStack.size() > 1) {
                ArrayList arrayList = this.parentLayout.fragmentsStack;
                BaseFragment baseFragment = (BaseFragment) arrayList.get(arrayList.size() - 2);
                if ((baseFragment instanceof ChatActivity) && ((ChatActivity) baseFragment).dialog_id == this.inlineReturn) {
                    finishFragment();
                } else {
                    Bundle bundle = new Bundle();
                    long j = this.inlineReturn;
                    int i = (int) j;
                    int i2 = (int) (j >> 32);
                    if (i == 0) {
                        bundle.putInt("enc_id", i2);
                    } else if (i > 0) {
                        bundle.putInt("user_id", i);
                    } else if (i < 0) {
                        bundle.putInt("chat_id", -i);
                    }
                    presentFragment(new ChatActivity(bundle), true);
                }
            }
        }
        return true;
    }

    /* JADX WARNING: Removed duplicated region for block: B:78:0x01aa  */
    /* JADX WARNING: Removed duplicated region for block: B:73:0x0195  */
    private void replaceMessageObjects(java.util.ArrayList<org.telegram.messenger.MessageObject> r20, int r21, boolean r22) {
        /*
        r19 = this;
        r0 = r19;
        r1 = r20;
        r3 = 0;
        r5 = r3;
        r4 = 0;
    L_0x0007:
        r6 = r20.size();
        r7 = 1;
        if (r4 >= r6) goto L_0x01de;
    L_0x000e:
        r6 = r1.get(r4);
        r6 = (org.telegram.messenger.MessageObject) r6;
        r8 = r0.messagesDict;
        r8 = r8[r21];
        r9 = r6.getId();
        r8 = r8.get(r9);
        r8 = (org.telegram.messenger.MessageObject) r8;
        r9 = r0.pinnedMessageObject;
        if (r9 == 0) goto L_0x0035;
    L_0x0026:
        r9 = r9.getId();
        r10 = r6.getId();
        if (r9 != r10) goto L_0x0035;
    L_0x0030:
        r0.pinnedMessageObject = r6;
        r0.updatePinnedMessageView(r7);
    L_0x0035:
        if (r8 == 0) goto L_0x01d9;
    L_0x0037:
        if (r22 == 0) goto L_0x0045;
    L_0x0039:
        r9 = r8.messageOwner;
        r9 = r9.date;
        r10 = r6.messageOwner;
        r10 = r10.date;
        if (r9 == r10) goto L_0x0045;
    L_0x0043:
        goto L_0x01d9;
    L_0x0045:
        if (r22 == 0) goto L_0x004c;
    L_0x0047:
        r1.remove(r4);
        r4 = r4 + -1;
    L_0x004c:
        r0.addToPolls(r6, r8);
        r9 = r6.type;
        if (r9 < 0) goto L_0x00a0;
    L_0x0053:
        r9 = r8.replyMessageObject;
        if (r9 == 0) goto L_0x006c;
    L_0x0057:
        r6.replyMessageObject = r9;
        r9 = r6.messageOwner;
        r9 = r9.action;
        r10 = r9 instanceof org.telegram.tgnet.TLRPC.TL_messageActionGameScore;
        if (r10 == 0) goto L_0x0065;
    L_0x0061:
        r6.generateGameMessageText(r3);
        goto L_0x006c;
    L_0x0065:
        r9 = r9 instanceof org.telegram.tgnet.TLRPC.TL_messageActionPaymentSent;
        if (r9 == 0) goto L_0x006c;
    L_0x0069:
        r6.generatePaymentSentMessageText(r3);
    L_0x006c:
        r9 = r8.isEditing();
        if (r9 != 0) goto L_0x0094;
    L_0x0072:
        r9 = r8.getFileName();
        r10 = r6.getFileName();
        r9 = r9.equals(r10);
        if (r9 == 0) goto L_0x0091;
    L_0x0080:
        r9 = r6.messageOwner;
        r10 = r8.messageOwner;
        r10 = r10.attachPath;
        r9.attachPath = r10;
        r9 = r8.attachPathExists;
        r6.attachPathExists = r9;
        r9 = r8.mediaExists;
        r6.mediaExists = r9;
        goto L_0x0094;
    L_0x0091:
        r6.checkMediaExistance();
    L_0x0094:
        r9 = r0.messagesDict;
        r9 = r9[r21];
        r10 = r8.getId();
        r9.put(r10, r6);
        goto L_0x00ab;
    L_0x00a0:
        r9 = r0.messagesDict;
        r9 = r9[r21];
        r10 = r8.getId();
        r9.remove(r10);
    L_0x00ab:
        r9 = r0.messages;
        r9 = r9.indexOf(r8);
        if (r9 < 0) goto L_0x01d9;
    L_0x00b3:
        r10 = r0.messagesByDays;
        r11 = r8.dateKey;
        r10 = r10.get(r11);
        r10 = (java.util.ArrayList) r10;
        if (r10 == 0) goto L_0x00c4;
    L_0x00bf:
        r11 = r10.indexOf(r8);
        goto L_0x00c5;
    L_0x00c4:
        r11 = -1;
    L_0x00c5:
        r12 = r8.getGroupId();
        r14 = 0;
        r16 = (r12 > r14 ? 1 : (r12 == r14 ? 0 : -1));
        if (r16 == 0) goto L_0x0126;
    L_0x00cf:
        r12 = r0.groupedMessagesMap;
        r13 = r8.getGroupId();
        r12 = r12.get(r13);
        r12 = (org.telegram.messenger.MessageObject.GroupedMessages) r12;
        if (r12 == 0) goto L_0x0126;
    L_0x00dd:
        r13 = r12.messages;
        r13 = r13.indexOf(r8);
        if (r13 < 0) goto L_0x0126;
    L_0x00e5:
        r14 = r8.getGroupId();
        r16 = r6.getGroupId();
        r18 = (r14 > r16 ? 1 : (r14 == r16 ? 0 : -1));
        if (r18 == 0) goto L_0x00fa;
    L_0x00f1:
        r14 = r0.groupedMessagesMap;
        r2 = r6.getGroupId();
        r14.put(r2, r12);
    L_0x00fa:
        r2 = r6.photoThumbs;
        if (r2 == 0) goto L_0x0129;
    L_0x00fe:
        r2 = r2.isEmpty();
        if (r2 == 0) goto L_0x0105;
    L_0x0104:
        goto L_0x0129;
    L_0x0105:
        r2 = r12.messages;
        r2.set(r13, r6);
        r2 = r12.positions;
        r2 = r2.remove(r8);
        r2 = (org.telegram.messenger.MessageObject.GroupedMessagePosition) r2;
        if (r2 == 0) goto L_0x0119;
    L_0x0114:
        r3 = r12.positions;
        r3.put(r6, r2);
    L_0x0119:
        if (r5 != 0) goto L_0x0121;
    L_0x011b:
        r2 = new android.util.LongSparseArray;
        r2.<init>();
        r5 = r2;
    L_0x0121:
        r2 = r12.groupId;
        r5.put(r2, r12);
    L_0x0126:
        r17 = r8;
        goto L_0x0191;
    L_0x0129:
        if (r5 != 0) goto L_0x0130;
    L_0x012b:
        r5 = new android.util.LongSparseArray;
        r5.<init>();
    L_0x0130:
        r2 = r12.groupId;
        r5.put(r2, r12);
        if (r13 <= 0) goto L_0x018a;
    L_0x0137:
        r2 = r12.messages;
        r2 = r2.size();
        r2 = r2 - r7;
        if (r13 >= r2) goto L_0x018a;
    L_0x0140:
        r2 = new org.telegram.messenger.MessageObject$GroupedMessages;
        r2.<init>();
        r3 = org.telegram.messenger.Utilities.random;
        r17 = r8;
        r7 = r3.nextLong();
        r2.groupId = r7;
        r3 = r2.messages;
        r7 = r12.messages;
        r8 = r13 + 1;
        r14 = r7.size();
        r7 = r7.subList(r8, r14);
        r3.addAll(r7);
        r3 = 0;
    L_0x0161:
        r7 = r2.messages;
        r7 = r7.size();
        if (r3 >= r7) goto L_0x017d;
    L_0x0169:
        r7 = r2.messages;
        r7 = r7.get(r3);
        r7 = (org.telegram.messenger.MessageObject) r7;
        r14 = r2.groupId;
        r7.localGroupId = r14;
        r7 = r12.messages;
        r7.remove(r8);
        r3 = r3 + 1;
        goto L_0x0161;
    L_0x017d:
        r7 = r2.groupId;
        r5.put(r7, r2);
        r3 = r0.groupedMessagesMap;
        r7 = r2.groupId;
        r3.put(r7, r2);
        goto L_0x018c;
    L_0x018a:
        r17 = r8;
    L_0x018c:
        r2 = r12.messages;
        r2.remove(r13);
    L_0x0191:
        r2 = r6.type;
        if (r2 < 0) goto L_0x01aa;
    L_0x0195:
        r2 = r0.messages;
        r2.set(r9, r6);
        r2 = r0.chatAdapter;
        if (r2 == 0) goto L_0x01a4;
    L_0x019e:
        r3 = r2.messagesStartRow;
        r3 = r3 + r9;
        r2.updateRowAtPosition(r3);
    L_0x01a4:
        if (r11 < 0) goto L_0x01d9;
    L_0x01a6:
        r10.set(r11, r6);
        goto L_0x01d9;
    L_0x01aa:
        r2 = r0.messages;
        r2.remove(r9);
        r2 = r0.chatAdapter;
        if (r2 == 0) goto L_0x01b9;
    L_0x01b3:
        r3 = r2.messagesStartRow;
        r3 = r3 + r9;
        r2.notifyItemRemoved(r3);
    L_0x01b9:
        if (r11 < 0) goto L_0x01d9;
    L_0x01bb:
        r10.remove(r11);
        r2 = r10.isEmpty();
        if (r2 == 0) goto L_0x01d9;
    L_0x01c4:
        r2 = r0.messagesByDays;
        r8 = r17;
        r3 = r8.dateKey;
        r2.remove(r3);
        r2 = r0.messages;
        r2.remove(r9);
        r2 = r0.chatAdapter;
        r3 = r2.messagesStartRow;
        r2.notifyItemRemoved(r3);
    L_0x01d9:
        r2 = 1;
        r4 = r4 + r2;
        r3 = 0;
        goto L_0x0007;
    L_0x01de:
        if (r5 == 0) goto L_0x022a;
    L_0x01e0:
        r1 = 0;
    L_0x01e1:
        r2 = r5.size();
        if (r1 >= r2) goto L_0x022a;
    L_0x01e7:
        r2 = r5.valueAt(r1);
        r2 = (org.telegram.messenger.MessageObject.GroupedMessages) r2;
        r3 = r2.messages;
        r3 = r3.isEmpty();
        if (r3 == 0) goto L_0x01fe;
    L_0x01f5:
        r3 = r0.groupedMessagesMap;
        r6 = r2.groupId;
        r3.remove(r6);
        r6 = 1;
        goto L_0x0227;
    L_0x01fe:
        r2.calculate();
        r3 = r2.messages;
        r4 = r3.size();
        r6 = 1;
        r4 = r4 - r6;
        r3 = r3.get(r4);
        r3 = (org.telegram.messenger.MessageObject) r3;
        r4 = r0.messages;
        r3 = r4.indexOf(r3);
        if (r3 < 0) goto L_0x0227;
    L_0x0217:
        r4 = r0.chatAdapter;
        if (r4 == 0) goto L_0x0227;
    L_0x021b:
        r7 = r4.messagesStartRow;
        r3 = r3 + r7;
        r2 = r2.messages;
        r2 = r2.size();
        r4.notifyItemRangeChanged(r3, r2);
    L_0x0227:
        r1 = r1 + 1;
        goto L_0x01e1;
    L_0x022a:
        return;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.replaceMessageObjects(java.util.ArrayList, int, boolean):void");
    }

    private void migrateToNewChat(MessageObject messageObject) {
        ActionBarLayout actionBarLayout = this.parentLayout;
        if (actionBarLayout != null) {
            BaseFragment baseFragment;
            int i = messageObject.messageOwner.action.channel_id;
            if (actionBarLayout.fragmentsStack.size() > 0) {
                ArrayList arrayList = this.parentLayout.fragmentsStack;
                baseFragment = (BaseFragment) arrayList.get(arrayList.size() - 1);
            } else {
                baseFragment = null;
            }
            int indexOf = this.parentLayout.fragmentsStack.indexOf(this);
            ActionBarLayout actionBarLayout2 = this.parentLayout;
            if (indexOf <= 0 || (baseFragment instanceof ChatActivity) || (baseFragment instanceof ProfileActivity) || !this.currentChat.creator) {
                AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$Aevyn06KDM-F-wmqbk1mSLydlvo(this, baseFragment, messageObject, actionBarLayout2));
            } else {
                int size = actionBarLayout2.fragmentsStack.size() - 1;
                while (indexOf < size) {
                    baseFragment = (BaseFragment) actionBarLayout2.fragmentsStack.get(indexOf);
                    String str = "chat_id";
                    Bundle bundle;
                    if (baseFragment instanceof ChatActivity) {
                        bundle = new Bundle();
                        bundle.putInt(str, i);
                        actionBarLayout2.addFragmentToStack(new ChatActivity(bundle), indexOf);
                        baseFragment.removeSelfFromStack();
                    } else if (baseFragment instanceof ProfileActivity) {
                        bundle = new Bundle();
                        bundle.putInt(str, i);
                        actionBarLayout2.addFragmentToStack(new ProfileActivity(bundle), indexOf);
                        baseFragment.removeSelfFromStack();
                    } else if (baseFragment instanceof ChatEditActivity) {
                        bundle = new Bundle();
                        bundle.putInt(str, i);
                        actionBarLayout2.addFragmentToStack(new ChatEditActivity(bundle), indexOf);
                        baseFragment.removeSelfFromStack();
                    } else if (baseFragment instanceof ChatUsersActivity) {
                        if (!((ChatUsersActivity) baseFragment).hasSelectType()) {
                            bundle = baseFragment.getArguments();
                            bundle.putInt(str, i);
                            actionBarLayout2.addFragmentToStack(new ChatUsersActivity(bundle), indexOf);
                        }
                        baseFragment.removeSelfFromStack();
                    }
                    indexOf++;
                }
            }
            AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$1mw5L4krFwO_Sw3AaDgNIB5bKlU(this, i), 1000);
        }
    }

    public /* synthetic */ void lambda$migrateToNewChat$71$ChatActivity(BaseFragment baseFragment, MessageObject messageObject, ActionBarLayout actionBarLayout) {
        if (baseFragment instanceof NotificationCenterDelegate) {
            getNotificationCenter().removeObserver((NotificationCenterDelegate) baseFragment, NotificationCenter.closeChats);
        }
        getNotificationCenter().postNotificationName(NotificationCenter.closeChats, new Object[0]);
        Bundle bundle = new Bundle();
        bundle.putInt("chat_id", messageObject.messageOwner.action.channel_id);
        actionBarLayout.presentFragment(new ChatActivity(bundle), true);
    }

    public /* synthetic */ void lambda$migrateToNewChat$72$ChatActivity(int i) {
        getMessagesController().loadFullChat(i, 0, true);
    }

    private void addToPolls(MessageObject messageObject, MessageObject messageObject2) {
        long pollId = messageObject.getPollId();
        if (pollId != 0) {
            ArrayList arrayList = (ArrayList) this.polls.get(pollId);
            if (arrayList == null) {
                arrayList = new ArrayList();
                this.polls.put(pollId, arrayList);
            }
            arrayList.add(messageObject);
            if (messageObject2 != null) {
                arrayList.remove(messageObject2);
            }
        }
    }

    private void updateSearchButtons(int i, int i2, int i3) {
        ImageView imageView = this.searchUpButton;
        if (imageView != null) {
            imageView.setEnabled((i & 1) != 0);
            this.searchDownButton.setEnabled((i & 2) != 0);
            ImageView imageView2 = this.searchUpButton;
            float f = 1.0f;
            imageView2.setAlpha(imageView2.isEnabled() ? 1.0f : 0.5f);
            imageView2 = this.searchDownButton;
            if (!imageView2.isEnabled()) {
                f = 0.5f;
            }
            imageView2.setAlpha(f);
            if (i3 < 0) {
                this.searchCountText.setText("");
            } else if (i3 == 0) {
                this.searchCountText.setText(LocaleController.getString("NoResult", NUM));
            } else {
                this.searchCountText.setText(LocaleController.formatString("Of", NUM, Integer.valueOf(i2 + 1), Integer.valueOf(i3)));
            }
        }
    }

    public boolean needDelayOpenAnimation() {
        return this.firstLoading;
    }

    /* Access modifiers changed, original: protected */
    public void onBecomeFullyHidden() {
        UndoView undoView = this.undoView;
        if (undoView != null) {
            undoView.hide(true, 0);
        }
    }

    public void onTransitionAnimationStart(boolean z, boolean z2) {
        if (z) {
            getNotificationCenter().setAllowedNotificationsDutingAnimation(new int[]{NotificationCenter.chatInfoDidLoad, NotificationCenter.dialogsNeedReload, NotificationCenter.scheduledMessagesUpdated, NotificationCenter.closeChats, NotificationCenter.messagesDidLoad, NotificationCenter.botKeyboardDidLoad, NotificationCenter.userInfoDidLoad, NotificationCenter.needDeleteDialog});
            this.openAnimationEnded = false;
            if (!z2) {
                this.openAnimationStartTime = SystemClock.uptimeMillis();
            }
        } else {
            if (UserObject.isUserSelf(this.currentUser)) {
                getNotificationCenter().setAllowedNotificationsDutingAnimation(new int[]{NotificationCenter.chatInfoDidLoad, NotificationCenter.dialogsNeedReload, NotificationCenter.scheduledMessagesUpdated, NotificationCenter.closeChats, NotificationCenter.messagesDidLoad, NotificationCenter.botKeyboardDidLoad, NotificationCenter.userInfoDidLoad, NotificationCenter.needDeleteDialog, NotificationCenter.mediaDidLoad});
            }
            ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
            if (chatActivityEnterView != null) {
                chatActivityEnterView.onBeginHide();
            }
        }
        getNotificationCenter().setAnimationInProgress(true);
    }

    public void onTransitionAnimationEnd(boolean z, boolean z2) {
        int i = 0;
        getNotificationCenter().setAnimationInProgress(false);
        if (z) {
            this.openAnimationEnded = true;
            if (VERSION.SDK_INT >= 21) {
                createChatAttachView();
            }
            if (this.chatActivityEnterView.hasRecordVideo() && !this.chatActivityEnterView.isSendButtonVisible()) {
                Chat chat = this.currentChat;
                Object obj = (chat == null || !ChatObject.isChannel(chat) || this.currentChat.megagroup) ? null : 1;
                SharedPreferences globalMainSettings = MessagesController.getGlobalMainSettings();
                String str = obj != null ? "needShowRoundHintChannel2" : "needShowRoundHint2";
                int i2 = globalMainSettings.getInt(str, 0);
                if (i2 < 3 && Utilities.random.nextFloat() <= 0.2f) {
                    showVoiceHint(false, this.chatActivityEnterView.isInVideoMode());
                    globalMainSettings.edit().putInt(str, i2 + 1).commit();
                }
            }
            if (!z2) {
                ActionBarLayout actionBarLayout = this.parentLayout;
                if (actionBarLayout != null) {
                    int size = actionBarLayout.fragmentsStack.size() - 1;
                    while (i < size) {
                        BaseFragment baseFragment = (BaseFragment) this.parentLayout.fragmentsStack.get(i);
                        if (baseFragment != this && (baseFragment instanceof ChatActivity)) {
                            ChatActivity chatActivity = (ChatActivity) baseFragment;
                            if (chatActivity.dialog_id == this.dialog_id && chatActivity.inScheduleMode == this.inScheduleMode) {
                                baseFragment.removeSelfFromStack();
                                return;
                            }
                        }
                        i++;
                    }
                }
            }
        }
    }

    /* Access modifiers changed, original: protected */
    public void onDialogDismiss(Dialog dialog) {
        Dialog dialog2 = this.closeChatDialog;
        if (dialog2 != null && dialog == dialog2) {
            getMessagesController().deleteDialog(this.dialog_id, 0);
            ActionBarLayout actionBarLayout = this.parentLayout;
            if (!(actionBarLayout == null || actionBarLayout.fragmentsStack.isEmpty())) {
                ArrayList arrayList = this.parentLayout.fragmentsStack;
                if (arrayList.get(arrayList.size() - 1) != this) {
                    arrayList = this.parentLayout.fragmentsStack;
                    BaseFragment baseFragment = (BaseFragment) arrayList.get(arrayList.size() - 1);
                    removeSelfFromStack();
                    baseFragment.finishFragment();
                    return;
                }
            }
            finishFragment();
        }
    }

    /* JADX WARNING: Missing block: B:12:0x0031, code skipped:
            if (r9.findItem(16908321) != null) goto L_0x0035;
     */
    public boolean extendActionMode(android.view.Menu r9) {
        /*
        r8 = this;
        r0 = org.telegram.ui.PhotoViewer.hasInstance();
        r1 = 16908321; // 0x1020021 float:2.3877321E-38 double:8.3538205E-317;
        r2 = 1;
        if (r0 == 0) goto L_0x0025;
    L_0x000a:
        r0 = org.telegram.ui.PhotoViewer.getInstance();
        r0 = r0.isVisible();
        if (r0 == 0) goto L_0x0025;
    L_0x0014:
        r0 = org.telegram.ui.PhotoViewer.getInstance();
        r0 = r0.getSelectiongLength();
        if (r0 == 0) goto L_0x0024;
    L_0x001e:
        r0 = r9.findItem(r1);
        if (r0 != 0) goto L_0x0035;
    L_0x0024:
        return r2;
    L_0x0025:
        r0 = r8.chatActivityEnterView;
        r0 = r0.getSelectionLength();
        if (r0 == 0) goto L_0x0144;
    L_0x002d:
        r0 = r9.findItem(r1);
        if (r0 != 0) goto L_0x0035;
    L_0x0033:
        goto L_0x0144;
    L_0x0035:
        r0 = android.os.Build.VERSION.SDK_INT;
        r1 = 23;
        if (r0 < r1) goto L_0x0041;
    L_0x003b:
        r0 = 16908341; // 0x1020035 float:2.3877378E-38 double:8.3538304E-317;
        r9.removeItem(r0);
    L_0x0041:
        r0 = new android.text.SpannableStringBuilder;
        r1 = NUM; // 0x7f0e01e7 float:1.8876025E38 double:1.053162397E-314;
        r3 = "Bold";
        r1 = org.telegram.messenger.LocaleController.getString(r3, r1);
        r0.<init>(r1);
        r1 = new org.telegram.ui.Components.TypefaceSpan;
        r3 = "fonts/rmedium.ttf";
        r3 = org.telegram.messenger.AndroidUtilities.getTypeface(r3);
        r1.<init>(r3);
        r3 = r0.length();
        r4 = 33;
        r5 = 0;
        r0.setSpan(r1, r5, r3, r4);
        r1 = NUM; // 0x7var_ float:1.8077744E38 double:1.0529679414E-314;
        r3 = 6;
        r6 = NUM; // 0x7var_ float:1.8077746E38 double:1.052967942E-314;
        r9.add(r6, r1, r3, r0);
        r0 = new android.text.SpannableStringBuilder;
        r1 = NUM; // 0x7f0e059f float:1.8877956E38 double:1.0531628676E-314;
        r3 = "Italic";
        r1 = org.telegram.messenger.LocaleController.getString(r3, r1);
        r0.<init>(r1);
        r1 = new org.telegram.ui.Components.TypefaceSpan;
        r3 = "fonts/ritalic.ttf";
        r3 = org.telegram.messenger.AndroidUtilities.getTypeface(r3);
        r1.<init>(r3);
        r3 = r0.length();
        r0.setSpan(r1, r5, r3, r4);
        r1 = NUM; // 0x7var_a float:1.8077748E38 double:1.0529679424E-314;
        r3 = 7;
        r9.add(r6, r1, r3, r0);
        r0 = new android.text.SpannableStringBuilder;
        r1 = NUM; // 0x7f0e066d float:1.8878374E38 double:1.0531629694E-314;
        r3 = "Mono";
        r1 = org.telegram.messenger.LocaleController.getString(r3, r1);
        r0.<init>(r1);
        r1 = new org.telegram.ui.Components.TypefaceSpan;
        r3 = android.graphics.Typeface.MONOSPACE;
        r1.<init>(r3);
        r3 = r0.length();
        r0.setSpan(r1, r5, r3, r4);
        r1 = NUM; // 0x7var_c float:1.8077752E38 double:1.0529679434E-314;
        r3 = 8;
        r9.add(r6, r1, r3, r0);
        r0 = r8.currentEncryptedChat;
        if (r0 == 0) goto L_0x00c9;
    L_0x00bd:
        if (r0 == 0) goto L_0x0122;
    L_0x00bf:
        r0 = r0.layer;
        r0 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r0);
        r1 = 101; // 0x65 float:1.42E-43 double:5.0E-322;
        if (r0 < r1) goto L_0x0122;
    L_0x00c9:
        r0 = new android.text.SpannableStringBuilder;
        r1 = NUM; // 0x7f0e0aa9 float:1.8880573E38 double:1.053163505E-314;
        r7 = "Strike";
        r1 = org.telegram.messenger.LocaleController.getString(r7, r1);
        r0.<init>(r1);
        r1 = new org.telegram.ui.Components.TextStyleSpan$TextStyleRun;
        r1.<init>();
        r7 = r1.flags;
        r3 = r3 | r7;
        r1.flags = r3;
        r3 = new org.telegram.ui.Components.TextStyleSpan;
        r3.<init>(r1);
        r1 = r0.length();
        r0.setSpan(r3, r5, r1, r4);
        r1 = NUM; // 0x7var_e float:1.8077756E38 double:1.0529679444E-314;
        r3 = 9;
        r9.add(r6, r1, r3, r0);
        r0 = new android.text.SpannableStringBuilder;
        r1 = NUM; // 0x7f0e0b51 float:1.8880913E38 double:1.053163588E-314;
        r3 = "Underline";
        r1 = org.telegram.messenger.LocaleController.getString(r3, r1);
        r0.<init>(r1);
        r1 = new org.telegram.ui.Components.TextStyleSpan$TextStyleRun;
        r1.<init>();
        r3 = r1.flags;
        r3 = r3 | 16;
        r1.flags = r3;
        r3 = new org.telegram.ui.Components.TextStyleSpan;
        r3.<init>(r1);
        r1 = r0.length();
        r0.setSpan(r3, r5, r1, r4);
        r1 = NUM; // 0x7var_f float:1.8077758E38 double:1.052967945E-314;
        r3 = 10;
        r9.add(r6, r1, r3, r0);
    L_0x0122:
        r0 = NUM; // 0x7var_b float:1.807775E38 double:1.052967943E-314;
        r1 = 11;
        r3 = NUM; // 0x7f0e0346 float:1.8876737E38 double:1.0531625707E-314;
        r4 = "CreateLink";
        r3 = org.telegram.messenger.LocaleController.getString(r4, r3);
        r9.add(r6, r0, r1, r3);
        r0 = NUM; // 0x7var_d float:1.8077754E38 double:1.052967944E-314;
        r1 = 12;
        r3 = NUM; // 0x7f0e0950 float:1.8879873E38 double:1.0531633345E-314;
        r4 = "Regular";
        r3 = org.telegram.messenger.LocaleController.getString(r4, r3);
        r9.add(r6, r0, r1, r3);
    L_0x0144:
        return r2;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.extendActionMode(android.view.Menu):boolean");
    }

    private void updateScheduledInterface(boolean z) {
        ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
        if (chatActivityEnterView != null) {
            chatActivityEnterView.updateScheduleButton(z);
        }
    }

    /* JADX WARNING: Removed duplicated region for block: B:116:0x0254  */
    /* JADX WARNING: Missing block: B:34:0x0097, code skipped:
            if (r0.linked_chat_id != 0) goto L_0x0099;
     */
    private void updateBottomOverlay() {
        /*
        r6 = this;
        r0 = r6.bottomOverlayChatText;
        if (r0 == 0) goto L_0x025e;
    L_0x0004:
        r0 = r6.inScheduleMode;
        if (r0 == 0) goto L_0x000a;
    L_0x0008:
        goto L_0x025e;
    L_0x000a:
        r0 = r6.currentChat;
        r1 = 8;
        r2 = 1;
        r3 = 0;
        if (r0 == 0) goto L_0x00ca;
    L_0x0012:
        r0 = org.telegram.messenger.ChatObject.isChannel(r0);
        if (r0 == 0) goto L_0x00ba;
    L_0x0018:
        r0 = r6.currentChat;
        r4 = r0 instanceof org.telegram.tgnet.TLRPC.TL_channelForbidden;
        if (r4 != 0) goto L_0x00ba;
    L_0x001e:
        r0 = org.telegram.messenger.ChatObject.isNotInChat(r0);
        if (r0 == 0) goto L_0x0048;
    L_0x0024:
        r0 = r6.getMessagesController();
        r4 = r6.currentChat;
        r4 = r4.id;
        r0 = r0.isJoiningChannel(r4);
        if (r0 == 0) goto L_0x0036;
    L_0x0032:
        r6.showBottomOverlayProgress(r2, r3);
        goto L_0x007f;
    L_0x0036:
        r0 = r6.bottomOverlayChatText;
        r4 = NUM; // 0x7f0e0257 float:1.8876252E38 double:1.0531624526E-314;
        r5 = "ChannelJoin";
        r4 = org.telegram.messenger.LocaleController.getString(r5, r4);
        r0.setText(r4);
        r6.showBottomOverlayProgress(r3, r3);
        goto L_0x007f;
    L_0x0048:
        r0 = r6.getMessagesController();
        r4 = r6.dialog_id;
        r0 = r0.isDialogMuted(r4);
        if (r0 != 0) goto L_0x0063;
    L_0x0054:
        r0 = r6.bottomOverlayChatText;
        r4 = NUM; // 0x7f0e0271 float:1.8876305E38 double:1.0531624654E-314;
        r5 = "ChannelMute";
        r4 = org.telegram.messenger.LocaleController.getString(r5, r4);
        r0.setText(r4);
        goto L_0x0071;
    L_0x0063:
        r0 = r6.bottomOverlayChatText;
        r4 = NUM; // 0x7f0e0290 float:1.8876368E38 double:1.0531624807E-314;
        r5 = "ChannelUnmute";
        r4 = org.telegram.messenger.LocaleController.getString(r5, r4);
        r0.setText(r4);
    L_0x0071:
        r0 = r6.bottomOverlayProgress;
        r0 = r0.getTag();
        if (r0 == 0) goto L_0x007b;
    L_0x0079:
        r0 = 1;
        goto L_0x007c;
    L_0x007b:
        r0 = 0;
    L_0x007c:
        r6.showBottomOverlayProgress(r3, r0);
    L_0x007f:
        r0 = r6.currentChat;
        r0 = org.telegram.messenger.ChatObject.isNotInChat(r0);
        if (r0 != 0) goto L_0x00b3;
    L_0x0087:
        r0 = r6.currentChat;
        r4 = r0.megagroup;
        if (r4 != 0) goto L_0x00b3;
    L_0x008d:
        r0 = r0.has_link;
        if (r0 != 0) goto L_0x0099;
    L_0x0091:
        r0 = r6.chatInfo;
        if (r0 == 0) goto L_0x00b3;
    L_0x0095:
        r0 = r0.linked_chat_id;
        if (r0 == 0) goto L_0x00b3;
    L_0x0099:
        r0 = r6.bottomOverlayChatText2;
        r4 = NUM; // 0x7f0e0252 float:1.8876242E38 double:1.05316245E-314;
        r5 = "ChannelDiscuss";
        r4 = org.telegram.messenger.LocaleController.getString(r5, r4);
        r0.setText(r4);
        r0 = r6.bottomOverlayChatText2;
        r0.setVisibility(r3);
        r0 = r6.bottomOverlayChatText2;
        r0.updateCounter();
        goto L_0x0151;
    L_0x00b3:
        r0 = r6.bottomOverlayChatText2;
        r0.setVisibility(r1);
        goto L_0x0151;
    L_0x00ba:
        r0 = r6.bottomOverlayChatText;
        r4 = NUM; // 0x7f0e03af float:1.887695E38 double:1.0531626225E-314;
        r5 = "DeleteThisGroup";
        r4 = org.telegram.messenger.LocaleController.getString(r5, r4);
        r0.setText(r4);
        goto L_0x0151;
    L_0x00ca:
        r6.showBottomOverlayProgress(r3, r3);
        r0 = r6.userBlocked;
        if (r0 == 0) goto L_0x0114;
    L_0x00d1:
        r0 = r6.currentUser;
        r0 = r0.bot;
        if (r0 == 0) goto L_0x00e6;
    L_0x00d7:
        r0 = r6.bottomOverlayChatText;
        r4 = NUM; // 0x7f0e01f5 float:1.8876054E38 double:1.053162404E-314;
        r5 = "BotUnblock";
        r4 = org.telegram.messenger.LocaleController.getString(r5, r4);
        r0.setText(r4);
        goto L_0x00f4;
    L_0x00e6:
        r0 = r6.bottomOverlayChatText;
        r4 = NUM; // 0x7f0e0b4f float:1.888091E38 double:1.053163587E-314;
        r5 = "Unblock";
        r4 = org.telegram.messenger.LocaleController.getString(r5, r4);
        r0.setText(r4);
    L_0x00f4:
        r0 = r6.botButtons;
        if (r0 == 0) goto L_0x0151;
    L_0x00f8:
        r0 = 0;
        r6.botButtons = r0;
        r4 = r6.chatActivityEnterView;
        if (r4 == 0) goto L_0x0151;
    L_0x00ff:
        r4 = r6.replyingMessageObject;
        if (r4 == 0) goto L_0x010c;
    L_0x0103:
        r5 = r6.botReplyButtons;
        if (r5 != r4) goto L_0x010c;
    L_0x0107:
        r6.botReplyButtons = r0;
        r6.hideFieldPanel(r3);
    L_0x010c:
        r0 = r6.chatActivityEnterView;
        r4 = r6.botButtons;
        r0.setButtons(r4, r3);
        goto L_0x0151;
    L_0x0114:
        r0 = r6.botUser;
        if (r0 == 0) goto L_0x0143;
    L_0x0118:
        r0 = r6.currentUser;
        r0 = r0.bot;
        if (r0 == 0) goto L_0x0143;
    L_0x011e:
        r0 = r6.bottomOverlayChatText;
        r4 = NUM; // 0x7f0e01f1 float:1.8876046E38 double:1.053162402E-314;
        r5 = "BotStart";
        r4 = org.telegram.messenger.LocaleController.getString(r5, r4);
        r0.setText(r4);
        r0 = r6.chatActivityEnterView;
        r0.hidePopup(r3);
        r0 = r6.getParentActivity();
        if (r0 == 0) goto L_0x0151;
    L_0x0137:
        r0 = r6.getParentActivity();
        r0 = r0.getCurrentFocus();
        org.telegram.messenger.AndroidUtilities.hideKeyboard(r0);
        goto L_0x0151;
    L_0x0143:
        r0 = r6.bottomOverlayChatText;
        r4 = NUM; // 0x7f0e03ae float:1.8876948E38 double:1.053162622E-314;
        r5 = "DeleteThisChat";
        r4 = org.telegram.messenger.LocaleController.getString(r5, r4);
        r0.setText(r4);
    L_0x0151:
        r0 = r6.inPreviewMode;
        r4 = 4;
        if (r0 == 0) goto L_0x016c;
    L_0x0156:
        r0 = r6.searchContainer;
        r0.setVisibility(r4);
        r0 = r6.bottomOverlayChat;
        r0.setVisibility(r4);
        r0 = r6.chatActivityEnterView;
        r0.setFieldFocused(r3);
        r0 = r6.chatActivityEnterView;
        r0.setVisibility(r4);
        goto L_0x025b;
    L_0x016c:
        r0 = r6.searchItem;
        if (r0 == 0) goto L_0x01a0;
    L_0x0170:
        r0 = r0.getVisibility();
        if (r0 != 0) goto L_0x01a0;
    L_0x0176:
        r0 = r6.searchContainer;
        r0.setVisibility(r3);
        r0 = r6.bottomOverlayChat;
        r0.setVisibility(r4);
        r0 = r6.chatActivityEnterView;
        r0.setFieldFocused(r3);
        r0 = r6.chatActivityEnterView;
        r0.setVisibility(r4);
        r0 = r6.chatActivityEnterView;
        r0 = r0.isTopViewVisible();
        if (r0 == 0) goto L_0x019b;
    L_0x0192:
        r6.topViewWasVisible = r2;
        r0 = r6.chatActivityEnterView;
        r0.hideTopView(r3);
        goto L_0x025b;
    L_0x019b:
        r0 = 2;
        r6.topViewWasVisible = r0;
        goto L_0x025b;
    L_0x01a0:
        r0 = r6.searchContainer;
        r0.setVisibility(r4);
        r0 = r6.muteItem;
        if (r0 == 0) goto L_0x01be;
    L_0x01a9:
        r0 = r6.currentChat;
        if (r0 == 0) goto L_0x01b9;
    L_0x01ad:
        r0 = org.telegram.messenger.ChatObject.isNotInChat(r0);
        if (r0 == 0) goto L_0x01b9;
    L_0x01b3:
        r0 = r6.muteItem;
        r0.setVisibility(r1);
        goto L_0x01be;
    L_0x01b9:
        r0 = r6.muteItem;
        r0.setVisibility(r3);
    L_0x01be:
        r0 = r6.currentChat;
        if (r0 == 0) goto L_0x01d0;
    L_0x01c2:
        r0 = org.telegram.messenger.ChatObject.isNotInChat(r0);
        if (r0 != 0) goto L_0x01de;
    L_0x01c8:
        r0 = r6.currentChat;
        r0 = org.telegram.messenger.ChatObject.canWriteToChat(r0);
        if (r0 == 0) goto L_0x01de;
    L_0x01d0:
        r0 = r6.currentUser;
        if (r0 == 0) goto L_0x0231;
    L_0x01d4:
        r0 = org.telegram.messenger.UserObject.isDeleted(r0);
        if (r0 != 0) goto L_0x01de;
    L_0x01da:
        r0 = r6.userBlocked;
        if (r0 == 0) goto L_0x0231;
    L_0x01de:
        r0 = r6.chatActivityEnterView;
        r0 = r0.isEditingMessage();
        if (r0 == 0) goto L_0x0200;
    L_0x01e6:
        r0 = r6.chatActivityEnterView;
        r0.setVisibility(r3);
        r0 = r6.bottomOverlayChat;
        r0.setVisibility(r4);
        r0 = r6.chatActivityEnterView;
        r0.setFieldFocused();
        r0 = new org.telegram.ui.-$$Lambda$ChatActivity$9F-V3mGAidABLoB0O4Fhklq44aQ;
        r0.<init>(r6);
        r4 = 100;
        org.telegram.messenger.AndroidUtilities.runOnUIThread(r0, r4);
        goto L_0x021b;
    L_0x0200:
        r0 = r6.bottomOverlayChat;
        r0.setVisibility(r3);
        r0 = r6.chatActivityEnterView;
        r0.setFieldFocused(r3);
        r0 = r6.chatActivityEnterView;
        r0.setVisibility(r4);
        r0 = r6.chatActivityEnterView;
        r0.closeKeyboard();
        r0 = r6.stickersAdapter;
        if (r0 == 0) goto L_0x021b;
    L_0x0218:
        r0.hide();
    L_0x021b:
        r0 = r6.attachItem;
        if (r0 == 0) goto L_0x0222;
    L_0x021f:
        r0.setVisibility(r1);
    L_0x0222:
        r0 = r6.editTextItem;
        if (r0 == 0) goto L_0x0229;
    L_0x0226:
        r0.setVisibility(r1);
    L_0x0229:
        r0 = r6.headerItem;
        if (r0 == 0) goto L_0x0250;
    L_0x022d:
        r0.setVisibility(r3);
        goto L_0x0250;
    L_0x0231:
        r0 = r6.botUser;
        if (r0 == 0) goto L_0x0246;
    L_0x0235:
        r0 = r6.currentUser;
        r0 = r0.bot;
        if (r0 == 0) goto L_0x0246;
    L_0x023b:
        r0 = r6.bottomOverlayChat;
        r0.setVisibility(r3);
        r0 = r6.chatActivityEnterView;
        r0.setVisibility(r4);
        goto L_0x0250;
    L_0x0246:
        r0 = r6.chatActivityEnterView;
        r0.setVisibility(r3);
        r0 = r6.bottomOverlayChat;
        r0.setVisibility(r4);
    L_0x0250:
        r0 = r6.topViewWasVisible;
        if (r0 != r2) goto L_0x025b;
    L_0x0254:
        r0 = r6.chatActivityEnterView;
        r0.showTopView(r3, r3);
        r6.topViewWasVisible = r3;
    L_0x025b:
        r6.checkRaiseSensors();
    L_0x025e:
        return;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.updateBottomOverlay():void");
    }

    public /* synthetic */ void lambda$updateBottomOverlay$73$ChatActivity() {
        this.chatActivityEnterView.openKeyboard();
    }

    public void showAlert(String str, String str2) {
        FrameLayout frameLayout = this.alertView;
        if (frameLayout != null && str != null && str2 != null) {
            if (frameLayout.getTag() != null) {
                this.alertView.setTag(null);
                AnimatorSet animatorSet = this.alertViewAnimator;
                if (animatorSet != null) {
                    animatorSet.cancel();
                    this.alertViewAnimator = null;
                }
                this.alertView.setVisibility(0);
                this.alertViewAnimator = new AnimatorSet();
                animatorSet = this.alertViewAnimator;
                Animator[] animatorArr = new Animator[1];
                animatorArr[0] = ObjectAnimator.ofFloat(this.alertView, View.TRANSLATION_Y, new float[]{0.0f});
                animatorSet.playTogether(animatorArr);
                this.alertViewAnimator.setDuration(200);
                this.alertViewAnimator.addListener(new AnimatorListenerAdapter() {
                    public void onAnimationEnd(Animator animator) {
                        if (ChatActivity.this.alertViewAnimator != null && ChatActivity.this.alertViewAnimator.equals(animator)) {
                            ChatActivity.this.alertViewAnimator = null;
                        }
                    }

                    public void onAnimationCancel(Animator animator) {
                        if (ChatActivity.this.alertViewAnimator != null && ChatActivity.this.alertViewAnimator.equals(animator)) {
                            ChatActivity.this.alertViewAnimator = null;
                        }
                    }
                });
                this.alertViewAnimator.start();
            }
            this.alertNameTextView.setText(str);
            this.alertTextView.setText(Emoji.replaceEmoji(str2.replace(10, ' '), this.alertTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0f), false));
            Runnable runnable = this.hideAlertViewRunnable;
            if (runnable != null) {
                AndroidUtilities.cancelRunOnUIThread(runnable);
            }
            AnonymousClass62 anonymousClass62 = new Runnable() {
                public void run() {
                    if (ChatActivity.this.hideAlertViewRunnable == this && ChatActivity.this.alertView.getTag() == null) {
                        ChatActivity.this.alertView.setTag(Integer.valueOf(1));
                        if (ChatActivity.this.alertViewAnimator != null) {
                            ChatActivity.this.alertViewAnimator.cancel();
                            ChatActivity.this.alertViewAnimator = null;
                        }
                        ChatActivity.this.alertViewAnimator = new AnimatorSet();
                        AnimatorSet access$25000 = ChatActivity.this.alertViewAnimator;
                        Animator[] animatorArr = new Animator[1];
                        animatorArr[0] = ObjectAnimator.ofFloat(ChatActivity.this.alertView, View.TRANSLATION_Y, new float[]{(float) (-AndroidUtilities.dp(50.0f))});
                        access$25000.playTogether(animatorArr);
                        ChatActivity.this.alertViewAnimator.setDuration(200);
                        ChatActivity.this.alertViewAnimator.addListener(new AnimatorListenerAdapter() {
                            public void onAnimationEnd(Animator animator) {
                                if (ChatActivity.this.alertViewAnimator != null && ChatActivity.this.alertViewAnimator.equals(animator)) {
                                    ChatActivity.this.alertView.setVisibility(8);
                                    ChatActivity.this.alertViewAnimator = null;
                                }
                            }

                            public void onAnimationCancel(Animator animator) {
                                if (ChatActivity.this.alertViewAnimator != null && ChatActivity.this.alertViewAnimator.equals(animator)) {
                                    ChatActivity.this.alertViewAnimator = null;
                                }
                            }
                        });
                        ChatActivity.this.alertViewAnimator.start();
                    }
                }
            };
            this.hideAlertViewRunnable = anonymousClass62;
            AndroidUtilities.runOnUIThread(anonymousClass62, 3000);
        }
    }

    private boolean hidePinnedMessageView(boolean z) {
        if (this.pinnedMessageView.getTag() != null) {
            return false;
        }
        this.pinnedMessageView.setTag(Integer.valueOf(1));
        AnimatorSet animatorSet = this.pinnedMessageViewAnimator;
        if (animatorSet != null) {
            animatorSet.cancel();
            this.pinnedMessageViewAnimator = null;
        }
        if (z) {
            this.pinnedMessageViewAnimator = new AnimatorSet();
            AnimatorSet animatorSet2 = this.pinnedMessageViewAnimator;
            Animator[] animatorArr = new Animator[1];
            animatorArr[0] = ObjectAnimator.ofFloat(this.pinnedMessageView, View.TRANSLATION_Y, new float[]{(float) (-AndroidUtilities.dp(50.0f))});
            animatorSet2.playTogether(animatorArr);
            this.pinnedMessageViewAnimator.setDuration(200);
            this.pinnedMessageViewAnimator.addListener(new AnimatorListenerAdapter() {
                public void onAnimationEnd(Animator animator) {
                    if (ChatActivity.this.pinnedMessageViewAnimator != null && ChatActivity.this.pinnedMessageViewAnimator.equals(animator)) {
                        ChatActivity.this.pinnedMessageView.setVisibility(8);
                        ChatActivity.this.pinnedMessageViewAnimator = null;
                    }
                }

                public void onAnimationCancel(Animator animator) {
                    if (ChatActivity.this.pinnedMessageViewAnimator != null && ChatActivity.this.pinnedMessageViewAnimator.equals(animator)) {
                        ChatActivity.this.pinnedMessageViewAnimator = null;
                    }
                }
            });
            this.pinnedMessageViewAnimator.start();
        } else {
            this.pinnedMessageView.setTranslationY((float) (-AndroidUtilities.dp(50.0f)));
            this.pinnedMessageView.setVisibility(8);
        }
        return true;
    }

    /* JADX WARNING: Removed duplicated region for block: B:125:? A:{SYNTHETIC, RETURN} */
    /* JADX WARNING: Removed duplicated region for block: B:122:0x0326  */
    /* JADX WARNING: Removed duplicated region for block: B:39:0x0093  */
    /* JADX WARNING: Removed duplicated region for block: B:122:0x0326  */
    /* JADX WARNING: Removed duplicated region for block: B:125:? A:{SYNTHETIC, RETURN} */
    private void updatePinnedMessageView(boolean r20) {
        /*
        r19 = this;
        r0 = r19;
        r1 = r0.pinnedMessageView;
        if (r1 == 0) goto L_0x0329;
    L_0x0006:
        r1 = r0.inScheduleMode;
        if (r1 == 0) goto L_0x000c;
    L_0x000a:
        goto L_0x0329;
    L_0x000c:
        r1 = r0.chatInfo;
        r2 = 0;
        r3 = 0;
        if (r1 == 0) goto L_0x003c;
    L_0x0012:
        r4 = r0.pinnedMessageObject;
        if (r4 == 0) goto L_0x0020;
    L_0x0016:
        r1 = r1.pinned_msg_id;
        r4 = r4.getId();
        if (r1 == r4) goto L_0x0020;
    L_0x001e:
        r0.pinnedMessageObject = r2;
    L_0x0020:
        r1 = r0.chatInfo;
        r1 = r1.pinned_msg_id;
        if (r1 == 0) goto L_0x0036;
    L_0x0026:
        r4 = r0.pinnedMessageObject;
        if (r4 != 0) goto L_0x0036;
    L_0x002a:
        r4 = r0.messagesDict;
        r4 = r4[r3];
        r1 = r4.get(r1);
        r1 = (org.telegram.messenger.MessageObject) r1;
        r0.pinnedMessageObject = r1;
    L_0x0036:
        r1 = r0.chatInfo;
        r1 = r1.pinned_msg_id;
    L_0x003a:
        r8 = r1;
        goto L_0x006a;
    L_0x003c:
        r1 = r0.userInfo;
        if (r1 == 0) goto L_0x0069;
    L_0x0040:
        r4 = r0.pinnedMessageObject;
        if (r4 == 0) goto L_0x004e;
    L_0x0044:
        r1 = r1.pinned_msg_id;
        r4 = r4.getId();
        if (r1 == r4) goto L_0x004e;
    L_0x004c:
        r0.pinnedMessageObject = r2;
    L_0x004e:
        r1 = r0.userInfo;
        r1 = r1.pinned_msg_id;
        if (r1 == 0) goto L_0x0064;
    L_0x0054:
        r4 = r0.pinnedMessageObject;
        if (r4 != 0) goto L_0x0064;
    L_0x0058:
        r4 = r0.messagesDict;
        r4 = r4[r3];
        r1 = r4.get(r1);
        r1 = (org.telegram.messenger.MessageObject) r1;
        r0.pinnedMessageObject = r1;
    L_0x0064:
        r1 = r0.userInfo;
        r1 = r1.pinned_msg_id;
        goto L_0x003a;
    L_0x0069:
        r8 = 0;
    L_0x006a:
        r1 = r0.currentAccount;
        r1 = org.telegram.messenger.MessagesController.getNotificationsSettings(r1);
        r4 = r0.chatInfo;
        if (r4 != 0) goto L_0x0078;
    L_0x0074:
        r4 = r0.userInfo;
        if (r4 == 0) goto L_0x0320;
    L_0x0078:
        if (r8 == 0) goto L_0x0320;
    L_0x007a:
        r4 = new java.lang.StringBuilder;
        r4.<init>();
        r5 = "pin_";
        r4.append(r5);
        r5 = r0.dialog_id;
        r4.append(r5);
        r4 = r4.toString();
        r1 = r1.getInt(r4, r3);
        if (r8 == r1) goto L_0x0320;
    L_0x0093:
        r1 = r0.actionBar;
        if (r1 == 0) goto L_0x00a7;
    L_0x0097:
        r1 = r1.isActionModeShowed();
        if (r1 != 0) goto L_0x0320;
    L_0x009d:
        r1 = r0.actionBar;
        r1 = r1.isSearchFieldVisible();
        if (r1 == 0) goto L_0x00a7;
    L_0x00a5:
        goto L_0x0320;
    L_0x00a7:
        r1 = r0.pinnedMessageObject;
        if (r1 == 0) goto L_0x02f8;
    L_0x00ab:
        r1 = r0.pinnedMessageView;
        r1 = r1.getTag();
        r4 = 1;
        if (r1 == 0) goto L_0x0109;
    L_0x00b4:
        r1 = r0.pinnedMessageView;
        r1.setTag(r2);
        r1 = r0.pinnedMessageViewAnimator;
        if (r1 == 0) goto L_0x00c2;
    L_0x00bd:
        r1.cancel();
        r0.pinnedMessageViewAnimator = r2;
    L_0x00c2:
        r1 = 0;
        if (r20 == 0) goto L_0x00fd;
    L_0x00c5:
        r5 = r0.pinnedMessageView;
        r5.setVisibility(r3);
        r5 = new android.animation.AnimatorSet;
        r5.<init>();
        r0.pinnedMessageViewAnimator = r5;
        r5 = r0.pinnedMessageViewAnimator;
        r6 = new android.animation.Animator[r4];
        r7 = r0.pinnedMessageView;
        r8 = android.view.View.TRANSLATION_Y;
        r9 = new float[r4];
        r9[r3] = r1;
        r1 = android.animation.ObjectAnimator.ofFloat(r7, r8, r9);
        r6[r3] = r1;
        r5.playTogether(r6);
        r1 = r0.pinnedMessageViewAnimator;
        r5 = 200; // 0xc8 float:2.8E-43 double:9.9E-322;
        r1.setDuration(r5);
        r1 = r0.pinnedMessageViewAnimator;
        r5 = new org.telegram.ui.ChatActivity$64;
        r5.<init>();
        r1.addListener(r5);
        r1 = r0.pinnedMessageViewAnimator;
        r1.start();
        goto L_0x0107;
    L_0x00fd:
        r5 = r0.pinnedMessageView;
        r5.setTranslationY(r1);
        r1 = r0.pinnedMessageView;
        r1.setVisibility(r3);
    L_0x0107:
        r1 = 1;
        goto L_0x010a;
    L_0x0109:
        r1 = 0;
    L_0x010a:
        r5 = r0.pinnedMessageNameTextView;
        r5 = r5.getLayoutParams();
        r5 = (android.widget.FrameLayout.LayoutParams) r5;
        r6 = r0.pinnedMessageTextView;
        r6 = r6.getLayoutParams();
        r6 = (android.widget.FrameLayout.LayoutParams) r6;
        r7 = r0.pinnedMessageObject;
        r7 = r7.photoThumbs2;
        r8 = NUM; // 0x43a00000 float:320.0 double:5.605467397E-315;
        r9 = org.telegram.messenger.AndroidUtilities.dp(r8);
        r7 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r7, r9);
        r9 = r0.pinnedMessageObject;
        r9 = r9.photoThumbs2;
        r10 = NUM; // 0x42200000 float:40.0 double:5.481131706E-315;
        r11 = org.telegram.messenger.AndroidUtilities.dp(r10);
        r9 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r9, r11);
        r11 = r0.pinnedMessageObject;
        r12 = r11.photoThumbsObject2;
        if (r7 != 0) goto L_0x0171;
    L_0x013c:
        r7 = r11.mediaExists;
        if (r7 == 0) goto L_0x0152;
    L_0x0140:
        r7 = r11.photoThumbs;
        r8 = org.telegram.messenger.AndroidUtilities.getPhotoSize();
        r7 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r7, r8);
        if (r7 == 0) goto L_0x014f;
    L_0x014c:
        r8 = r7.size;
        goto L_0x0150;
    L_0x014f:
        r8 = 0;
    L_0x0150:
        r9 = 0;
        goto L_0x015e;
    L_0x0152:
        r7 = r11.photoThumbs;
        r8 = org.telegram.messenger.AndroidUtilities.dp(r8);
        r7 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r7, r8);
        r8 = 0;
        r9 = 1;
    L_0x015e:
        r11 = r0.pinnedMessageObject;
        r11 = r11.photoThumbs;
        r10 = org.telegram.messenger.AndroidUtilities.dp(r10);
        r10 = org.telegram.messenger.FileLoader.getClosestPhotoSizeWithSize(r11, r10);
        r11 = r0.pinnedMessageObject;
        r12 = r11.photoThumbsObject;
        r15 = r9;
        r9 = r10;
        goto L_0x0173;
    L_0x0171:
        r8 = 0;
        r15 = 1;
    L_0x0173:
        if (r7 != r9) goto L_0x0176;
    L_0x0175:
        r9 = r2;
    L_0x0176:
        if (r7 == 0) goto L_0x01dc;
    L_0x0178:
        r10 = r7 instanceof org.telegram.tgnet.TLRPC.TL_photoSizeEmpty;
        if (r10 != 0) goto L_0x01dc;
    L_0x017c:
        r10 = r7.location;
        r10 = r10 instanceof org.telegram.tgnet.TLRPC.TL_fileLocationUnavailable;
        if (r10 != 0) goto L_0x01dc;
    L_0x0182:
        r10 = r0.pinnedMessageObject;
        r10 = r10.isAnyKindOfSticker();
        if (r10 == 0) goto L_0x018b;
    L_0x018a:
        goto L_0x01dc;
    L_0x018b:
        r2 = r0.pinnedMessageObject;
        r2 = r2.isRoundVideo();
        if (r2 == 0) goto L_0x019f;
    L_0x0193:
        r2 = r0.pinnedMessageImageView;
        r10 = NUM; // 0x41800000 float:16.0 double:5.42932517E-315;
        r10 = org.telegram.messenger.AndroidUtilities.dp(r10);
        r2.setRoundRadius(r10);
        goto L_0x01a4;
    L_0x019f:
        r2 = r0.pinnedMessageImageView;
        r2.setRoundRadius(r3);
    L_0x01a4:
        r0.pinnedImageSize = r8;
        r0.pinnedImageCacheType = r15;
        r0.pinnedImageLocation = r7;
        r0.pinnedImageThumbLocation = r9;
        r0.pinnedImageLocationObject = r12;
        r10 = r0.pinnedMessageImageView;
        r2 = r0.pinnedImageLocation;
        r11 = org.telegram.messenger.ImageLocation.getForObject(r2, r12);
        r13 = org.telegram.messenger.ImageLocation.getForObject(r9, r12);
        r2 = 0;
        r7 = r0.pinnedMessageObject;
        r12 = "50_50";
        r14 = "50_50_b";
        r9 = r15;
        r15 = r2;
        r16 = r8;
        r17 = r9;
        r18 = r7;
        r10.setImage(r11, r12, r13, r14, r15, r16, r17, r18);
        r2 = r0.pinnedMessageImageView;
        r2.setVisibility(r3);
        r2 = NUM; // 0x425CLASSNAME float:55.0 double:5.50055916E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r6.leftMargin = r2;
        r5.leftMargin = r2;
        goto L_0x01f5;
    L_0x01dc:
        r7 = r0.pinnedMessageImageView;
        r7.setImageBitmap(r2);
        r0.pinnedImageLocation = r2;
        r0.pinnedImageLocationObject = r2;
        r2 = r0.pinnedMessageImageView;
        r7 = 4;
        r2.setVisibility(r7);
        r2 = NUM; // 0x41900000 float:18.0 double:5.43450582E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r6.leftMargin = r2;
        r5.leftMargin = r2;
    L_0x01f5:
        r2 = r0.pinnedMessageNameTextView;
        r2.setLayoutParams(r5);
        r2 = r0.pinnedMessageTextView;
        r2.setLayoutParams(r6);
        r2 = r0.pinnedMessageObject;
        r2 = r2.type;
        r5 = 17;
        if (r2 != r5) goto L_0x0216;
    L_0x0207:
        r2 = r0.pinnedMessageNameTextView;
        r6 = NUM; // 0x7f0e08e5 float:1.8879656E38 double:1.0531632816E-314;
        r7 = "PinnedPoll";
        r6 = org.telegram.messenger.LocaleController.getString(r7, r6);
        r2.setText(r6);
        goto L_0x0224;
    L_0x0216:
        r2 = r0.pinnedMessageNameTextView;
        r6 = NUM; // 0x7f0e08e3 float:1.8879652E38 double:1.0531632806E-314;
        r7 = "PinnedMessage";
        r6 = org.telegram.messenger.LocaleController.getString(r7, r6);
        r2.setText(r6);
    L_0x0224:
        r2 = r0.pinnedMessageObject;
        r6 = r2.type;
        r7 = 14;
        if (r6 != r7) goto L_0x024a;
    L_0x022c:
        r5 = r0.pinnedMessageTextView;
        r6 = 2;
        r6 = new java.lang.Object[r6];
        r2 = r2.getMusicAuthor();
        r6[r3] = r2;
        r2 = r0.pinnedMessageObject;
        r2 = r2.getMusicTitle();
        r6[r4] = r2;
        r2 = "%s - %s";
        r2 = java.lang.String.format(r2, r6);
        r5.setText(r2);
        goto L_0x0324;
    L_0x024a:
        r4 = 32;
        r7 = 10;
        r8 = 150; // 0x96 float:2.1E-43 double:7.4E-322;
        if (r6 != r5) goto L_0x0271;
    L_0x0252:
        r2 = r2.messageOwner;
        r2 = r2.media;
        r2 = (org.telegram.tgnet.TLRPC.TL_messageMediaPoll) r2;
        r2 = r2.poll;
        r2 = r2.question;
        r5 = r2.length();
        if (r5 <= r8) goto L_0x0266;
    L_0x0262:
        r2 = r2.substring(r3, r8);
    L_0x0266:
        r2 = r2.replace(r7, r4);
        r3 = r0.pinnedMessageTextView;
        r3.setText(r2);
        goto L_0x0324;
    L_0x0271:
        r5 = r2.messageOwner;
        r5 = r5.media;
        r6 = r5 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaGame;
        r9 = NUM; // 0x41600000 float:14.0 double:5.41896386E-315;
        if (r6 == 0) goto L_0x0296;
    L_0x027b:
        r2 = r0.pinnedMessageTextView;
        r4 = r5.game;
        r4 = r4.title;
        r5 = r2.getPaint();
        r5 = r5.getFontMetricsInt();
        r6 = org.telegram.messenger.AndroidUtilities.dp(r9);
        r3 = org.telegram.messenger.Emoji.replaceEmoji(r4, r5, r6, r3);
        r2.setText(r3);
        goto L_0x0324;
    L_0x0296:
        r2 = r2.caption;
        r2 = android.text.TextUtils.isEmpty(r2);
        if (r2 != 0) goto L_0x02ca;
    L_0x029e:
        r2 = r0.pinnedMessageObject;
        r2 = r2.caption;
        r2 = r2.toString();
        r5 = r2.length();
        if (r5 <= r8) goto L_0x02b0;
    L_0x02ac:
        r2 = r2.substring(r3, r8);
    L_0x02b0:
        r2 = r2.replace(r7, r4);
        r4 = r0.pinnedMessageTextView;
        r5 = r4.getPaint();
        r5 = r5.getFontMetricsInt();
        r6 = org.telegram.messenger.AndroidUtilities.dp(r9);
        r2 = org.telegram.messenger.Emoji.replaceEmoji(r2, r5, r6, r3);
        r4.setText(r2);
        goto L_0x0324;
    L_0x02ca:
        r2 = r0.pinnedMessageObject;
        r2 = r2.messageText;
        if (r2 == 0) goto L_0x0324;
    L_0x02d0:
        r2 = r2.toString();
        r5 = r2.length();
        if (r5 <= r8) goto L_0x02de;
    L_0x02da:
        r2 = r2.substring(r3, r8);
    L_0x02de:
        r2 = r2.replace(r7, r4);
        r4 = r0.pinnedMessageTextView;
        r5 = r4.getPaint();
        r5 = r5.getFontMetricsInt();
        r6 = org.telegram.messenger.AndroidUtilities.dp(r9);
        r2 = org.telegram.messenger.Emoji.replaceEmoji(r2, r5, r6, r3);
        r4.setText(r2);
        goto L_0x0324;
    L_0x02f8:
        r0.pinnedImageLocation = r2;
        r0.pinnedImageLocationObject = r2;
        r1 = r19.hidePinnedMessageView(r20);
        r2 = r0.loadingPinnedMessage;
        if (r2 == r8) goto L_0x0324;
    L_0x0304:
        r0.loadingPinnedMessage = r8;
        r4 = r19.getMediaDataController();
        r5 = r0.dialog_id;
        r2 = r0.currentChat;
        r2 = org.telegram.messenger.ChatObject.isChannel(r2);
        if (r2 == 0) goto L_0x031a;
    L_0x0314:
        r2 = r0.currentChat;
        r3 = r2.id;
        r7 = r3;
        goto L_0x031b;
    L_0x031a:
        r7 = 0;
    L_0x031b:
        r9 = 1;
        r4.loadPinnedMessage(r5, r7, r8, r9);
        goto L_0x0324;
    L_0x0320:
        r1 = r19.hidePinnedMessageView(r20);
    L_0x0324:
        if (r1 == 0) goto L_0x0329;
    L_0x0326:
        r19.checkListViewPaddings();
    L_0x0329:
        return;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.updatePinnedMessageView(boolean):void");
    }

    private void updateTopPanel(boolean z) {
        if (this.topChatPanelView != null && !this.inScheduleMode) {
            StringBuilder stringBuilder;
            Object obj;
            SharedPreferences notificationsSettings = MessagesController.getNotificationsSettings(this.currentAccount);
            long j = this.dialog_id;
            EncryptedChat encryptedChat = this.currentEncryptedChat;
            String str = "dialog_bar_vis3";
            if (encryptedChat != null) {
                Object obj2 = (encryptedChat.admin_id == getUserConfig().getClientUserId() || getContactsController().isLoadingContacts() || getContactsController().contactsDict.get(Integer.valueOf(this.currentUser.id)) != null) ? null : 1;
                long j2 = (long) this.currentUser.id;
                stringBuilder = new StringBuilder();
                stringBuilder.append(str);
                stringBuilder.append(j2);
                int i = notificationsSettings.getInt(stringBuilder.toString(), 0);
                if (obj2 != null && (i == 1 || i == 3)) {
                    obj2 = null;
                }
                obj = obj2;
                j = j2;
            } else {
                StringBuilder stringBuilder2 = new StringBuilder();
                stringBuilder2.append(str);
                stringBuilder2.append(j);
                obj = notificationsSettings.getInt(stringBuilder2.toString(), 0) == 2 ? 1 : null;
            }
            StringBuilder stringBuilder3 = new StringBuilder();
            stringBuilder3.append("dialog_bar_share");
            stringBuilder3.append(j);
            boolean z2 = notificationsSettings.getBoolean(stringBuilder3.toString(), false);
            stringBuilder = new StringBuilder();
            stringBuilder.append("dialog_bar_report");
            stringBuilder.append(j);
            boolean z3 = notificationsSettings.getBoolean(stringBuilder.toString(), false);
            StringBuilder stringBuilder4 = new StringBuilder();
            stringBuilder4.append("dialog_bar_block");
            stringBuilder4.append(j);
            boolean z4 = notificationsSettings.getBoolean(stringBuilder4.toString(), false);
            StringBuilder stringBuilder5 = new StringBuilder();
            stringBuilder5.append("dialog_bar_add");
            stringBuilder5.append(j);
            boolean z5 = notificationsSettings.getBoolean(stringBuilder5.toString(), false);
            StringBuilder stringBuilder6 = new StringBuilder();
            stringBuilder6.append("dialog_bar_location");
            stringBuilder6.append(j);
            boolean z6 = notificationsSettings.getBoolean(stringBuilder6.toString(), false);
            if (z3 || z4 || z6) {
                this.reportSpamButton.setVisibility(0);
            } else {
                this.reportSpamButton.setVisibility(8);
            }
            User user = this.currentUser != null ? getMessagesController().getUser(Integer.valueOf(this.currentUser.id)) : null;
            if (user != null) {
                if (user.contact || !z5) {
                    String str2 = "ShareMyContactInfo";
                    if (z2) {
                        this.addContactItem.setVisibility(0);
                        this.addToContactsButton.setVisibility(0);
                        this.addContactItem.setText(LocaleController.getString(str2, NUM));
                        this.addToContactsButton.setText(LocaleController.getString("ShareMyPhone", NUM).toUpperCase());
                        this.addToContactsButton.setTag(Integer.valueOf(1));
                        this.addToContactsButton.setVisibility(0);
                    } else {
                        if (user.contact || r4 != null) {
                            this.addContactItem.setVisibility(8);
                        } else {
                            this.addContactItem.setVisibility(0);
                            this.addContactItem.setText(LocaleController.getString(str2, NUM));
                            this.addToContactsButton.setTag(Integer.valueOf(2));
                        }
                        this.addToContactsButton.setVisibility(8);
                    }
                } else {
                    this.addContactItem.setVisibility(0);
                    this.addToContactsButton.setVisibility(0);
                    this.addContactItem.setText(LocaleController.getString("AddToContacts", NUM));
                    if (this.reportSpamButton.getVisibility() == 0) {
                        this.addToContactsButton.setText(LocaleController.getString("AddContactChat", NUM));
                    } else {
                        this.addToContactsButton.setText(LocaleController.formatString("AddContactFullChat", NUM, UserObject.getFirstName(user)).toUpperCase());
                    }
                    this.addToContactsButton.setTag(null);
                    this.addToContactsButton.setVisibility(0);
                }
                this.reportSpamButton.setText(LocaleController.getString("ReportSpamUser", NUM));
            } else {
                String str3;
                if (z6) {
                    this.reportSpamButton.setText(LocaleController.getString("ReportSpamLocation", NUM));
                    this.reportSpamButton.setTag(NUM, Integer.valueOf(1));
                    str3 = "chat_addContact";
                    this.reportSpamButton.setTextColor(Theme.getColor(str3));
                    this.reportSpamButton.setTag(str3);
                } else {
                    this.reportSpamButton.setText(LocaleController.getString("ReportSpamAndLeave", NUM));
                    this.reportSpamButton.setTag(NUM, null);
                    str3 = "chat_reportSpam";
                    this.reportSpamButton.setTextColor(Theme.getColor(str3));
                    this.reportSpamButton.setTag(str3);
                }
                ActionBarMenuSubItem actionBarMenuSubItem = this.addContactItem;
                if (actionBarMenuSubItem != null) {
                    actionBarMenuSubItem.setVisibility(8);
                }
                this.addToContactsButton.setVisibility(8);
            }
            if (this.userBlocked || (this.addToContactsButton.getVisibility() == 8 && this.reportSpamButton.getVisibility() == 8)) {
                obj = null;
            }
            AnimatorSet animatorSet;
            AnimatorSet animatorSet2;
            Animator[] animatorArr;
            if (obj != null) {
                if (this.topChatPanelView.getTag() != null) {
                    if (BuildVars.LOGS_ENABLED) {
                        FileLog.d("show spam button");
                    }
                    this.topChatPanelView.setTag(null);
                    this.topChatPanelView.setVisibility(0);
                    animatorSet = this.reportSpamViewAnimator;
                    if (animatorSet != null) {
                        animatorSet.cancel();
                        this.reportSpamViewAnimator = null;
                    }
                    if (z) {
                        this.reportSpamViewAnimator = new AnimatorSet();
                        animatorSet2 = this.reportSpamViewAnimator;
                        animatorArr = new Animator[1];
                        animatorArr[0] = ObjectAnimator.ofFloat(this.topChatPanelView, View.TRANSLATION_Y, new float[]{0.0f});
                        animatorSet2.playTogether(animatorArr);
                        this.reportSpamViewAnimator.setDuration(200);
                        this.reportSpamViewAnimator.addListener(new AnimatorListenerAdapter() {
                            public void onAnimationEnd(Animator animator) {
                                if (ChatActivity.this.reportSpamViewAnimator != null && ChatActivity.this.reportSpamViewAnimator.equals(animator)) {
                                    ChatActivity.this.reportSpamViewAnimator = null;
                                }
                            }

                            public void onAnimationCancel(Animator animator) {
                                if (ChatActivity.this.reportSpamViewAnimator != null && ChatActivity.this.reportSpamViewAnimator.equals(animator)) {
                                    ChatActivity.this.reportSpamViewAnimator = null;
                                }
                            }
                        });
                        this.reportSpamViewAnimator.start();
                    } else {
                        this.topChatPanelView.setTranslationY(0.0f);
                    }
                }
            } else if (this.topChatPanelView.getTag() == null) {
                if (BuildVars.LOGS_ENABLED) {
                    FileLog.d("hide spam button");
                }
                this.topChatPanelView.setTag(Integer.valueOf(1));
                animatorSet = this.reportSpamViewAnimator;
                if (animatorSet != null) {
                    animatorSet.cancel();
                    this.reportSpamViewAnimator = null;
                }
                if (z) {
                    this.reportSpamViewAnimator = new AnimatorSet();
                    animatorSet2 = this.reportSpamViewAnimator;
                    animatorArr = new Animator[1];
                    animatorArr[0] = ObjectAnimator.ofFloat(this.topChatPanelView, View.TRANSLATION_Y, new float[]{(float) (-AndroidUtilities.dp(50.0f))});
                    animatorSet2.playTogether(animatorArr);
                    this.reportSpamViewAnimator.setDuration(200);
                    this.reportSpamViewAnimator.addListener(new AnimatorListenerAdapter() {
                        public void onAnimationEnd(Animator animator) {
                            if (ChatActivity.this.reportSpamViewAnimator != null && ChatActivity.this.reportSpamViewAnimator.equals(animator)) {
                                ChatActivity.this.topChatPanelView.setVisibility(8);
                                ChatActivity.this.reportSpamViewAnimator = null;
                            }
                        }

                        public void onAnimationCancel(Animator animator) {
                            if (ChatActivity.this.reportSpamViewAnimator != null && ChatActivity.this.reportSpamViewAnimator.equals(animator)) {
                                ChatActivity.this.reportSpamViewAnimator = null;
                            }
                        }
                    });
                    this.reportSpamViewAnimator.start();
                } else {
                    this.topChatPanelView.setTranslationY((float) (-AndroidUtilities.dp(50.0f)));
                }
            }
            checkListViewPaddings();
        }
    }

    /* JADX WARNING: Removed duplicated region for block: B:44:0x00ee A:{Catch:{ Exception -> 0x0111 }} */
    /* JADX WARNING: Removed duplicated region for block: B:43:0x00e8 A:{Catch:{ Exception -> 0x0111 }} */
    /* JADX WARNING: Removed duplicated region for block: B:14:0x0028 A:{Catch:{ Exception -> 0x0111 }} */
    /* JADX WARNING: Removed duplicated region for block: B:21:0x0055 A:{Catch:{ Exception -> 0x0111 }} */
    /* JADX WARNING: Removed duplicated region for block: B:32:0x00a7 A:{Catch:{ Exception -> 0x0111 }} */
    /* JADX WARNING: Removed duplicated region for block: B:43:0x00e8 A:{Catch:{ Exception -> 0x0111 }} */
    /* JADX WARNING: Removed duplicated region for block: B:44:0x00ee A:{Catch:{ Exception -> 0x0111 }} */
    private void checkListViewPaddingsInternal() {
        /*
        r9 = this;
        r0 = r9.chatLayoutManager;
        if (r0 != 0) goto L_0x0005;
    L_0x0004:
        return;
    L_0x0005:
        r0 = r0.findFirstVisibleItemPosition();	 Catch:{ Exception -> 0x0111 }
        r1 = r9.wasManualScroll;	 Catch:{ Exception -> 0x0111 }
        r2 = -1;
        if (r1 != 0) goto L_0x0024;
    L_0x000e:
        r1 = r9.unreadMessageObject;	 Catch:{ Exception -> 0x0111 }
        if (r1 == 0) goto L_0x0024;
    L_0x0012:
        r1 = r9.messages;	 Catch:{ Exception -> 0x0111 }
        r3 = r9.unreadMessageObject;	 Catch:{ Exception -> 0x0111 }
        r1 = r1.indexOf(r3);	 Catch:{ Exception -> 0x0111 }
        if (r1 < 0) goto L_0x0024;
    L_0x001c:
        r0 = r9.chatAdapter;	 Catch:{ Exception -> 0x0111 }
        r0 = r0.messagesStartRow;	 Catch:{ Exception -> 0x0111 }
        r0 = r0 + r1;
        r1 = r0;
        r0 = -1;
        goto L_0x0025;
    L_0x0024:
        r1 = -1;
    L_0x0025:
        r3 = 0;
        if (r0 == r2) goto L_0x0044;
    L_0x0028:
        r4 = r9.chatLayoutManager;	 Catch:{ Exception -> 0x0111 }
        r4 = r4.findViewByPosition(r0);	 Catch:{ Exception -> 0x0111 }
        if (r4 != 0) goto L_0x0031;
    L_0x0030:
        goto L_0x0044;
    L_0x0031:
        r5 = r9.chatListView;	 Catch:{ Exception -> 0x0111 }
        r5 = r5.getMeasuredHeight();	 Catch:{ Exception -> 0x0111 }
        r4 = r4.getBottom();	 Catch:{ Exception -> 0x0111 }
        r5 = r5 - r4;
        r4 = r9.chatListView;	 Catch:{ Exception -> 0x0111 }
        r4 = r4.getPaddingBottom();	 Catch:{ Exception -> 0x0111 }
        r5 = r5 - r4;
        goto L_0x0045;
    L_0x0044:
        r5 = 0;
    L_0x0045:
        r4 = r9.chatListView;	 Catch:{ Exception -> 0x0111 }
        r4 = r4.getPaddingTop();	 Catch:{ Exception -> 0x0111 }
        r6 = NUM; // 0x42500000 float:52.0 double:5.496673668E-315;
        r7 = org.telegram.messenger.AndroidUtilities.dp(r6);	 Catch:{ Exception -> 0x0111 }
        r8 = NUM; // 0x40400000 float:3.0 double:5.325712093E-315;
        if (r4 == r7) goto L_0x0099;
    L_0x0055:
        r4 = r9.pinnedMessageView;	 Catch:{ Exception -> 0x0111 }
        if (r4 == 0) goto L_0x0061;
    L_0x0059:
        r4 = r9.pinnedMessageView;	 Catch:{ Exception -> 0x0111 }
        r4 = r4.getTag();	 Catch:{ Exception -> 0x0111 }
        if (r4 == 0) goto L_0x006d;
    L_0x0061:
        r4 = r9.topChatPanelView;	 Catch:{ Exception -> 0x0111 }
        if (r4 == 0) goto L_0x0099;
    L_0x0065:
        r4 = r9.topChatPanelView;	 Catch:{ Exception -> 0x0111 }
        r4 = r4.getTag();	 Catch:{ Exception -> 0x0111 }
        if (r4 != 0) goto L_0x0099;
    L_0x006d:
        r4 = r9.chatListView;	 Catch:{ Exception -> 0x0111 }
        r7 = org.telegram.messenger.AndroidUtilities.dp(r6);	 Catch:{ Exception -> 0x0111 }
        r8 = org.telegram.messenger.AndroidUtilities.dp(r8);	 Catch:{ Exception -> 0x0111 }
        r4.setPadding(r3, r7, r3, r8);	 Catch:{ Exception -> 0x0111 }
        r3 = r9.floatingDateView;	 Catch:{ Exception -> 0x0111 }
        r3 = r3.getLayoutParams();	 Catch:{ Exception -> 0x0111 }
        r3 = (android.widget.FrameLayout.LayoutParams) r3;	 Catch:{ Exception -> 0x0111 }
        r4 = org.telegram.messenger.AndroidUtilities.dp(r6);	 Catch:{ Exception -> 0x0111 }
        r3.topMargin = r4;	 Catch:{ Exception -> 0x0111 }
        r4 = r9.floatingDateView;	 Catch:{ Exception -> 0x0111 }
        r4.setLayoutParams(r3);	 Catch:{ Exception -> 0x0111 }
        r3 = r9.chatListView;	 Catch:{ Exception -> 0x0111 }
        r4 = NUM; // 0x42400000 float:48.0 double:5.491493014E-315;
        r4 = org.telegram.messenger.AndroidUtilities.dp(r4);	 Catch:{ Exception -> 0x0111 }
        r3.setTopGlowOffset(r4);	 Catch:{ Exception -> 0x0111 }
        goto L_0x00e6;
    L_0x0099:
        r4 = r9.chatListView;	 Catch:{ Exception -> 0x0111 }
        r4 = r4.getPaddingTop();	 Catch:{ Exception -> 0x0111 }
        r6 = NUM; // 0x40800000 float:4.0 double:5.34643471E-315;
        r7 = org.telegram.messenger.AndroidUtilities.dp(r6);	 Catch:{ Exception -> 0x0111 }
        if (r4 == r7) goto L_0x00e5;
    L_0x00a7:
        r4 = r9.pinnedMessageView;	 Catch:{ Exception -> 0x0111 }
        if (r4 == 0) goto L_0x00b3;
    L_0x00ab:
        r4 = r9.pinnedMessageView;	 Catch:{ Exception -> 0x0111 }
        r4 = r4.getTag();	 Catch:{ Exception -> 0x0111 }
        if (r4 == 0) goto L_0x00e5;
    L_0x00b3:
        r4 = r9.topChatPanelView;	 Catch:{ Exception -> 0x0111 }
        if (r4 == 0) goto L_0x00bf;
    L_0x00b7:
        r4 = r9.topChatPanelView;	 Catch:{ Exception -> 0x0111 }
        r4 = r4.getTag();	 Catch:{ Exception -> 0x0111 }
        if (r4 == 0) goto L_0x00e5;
    L_0x00bf:
        r4 = r9.chatListView;	 Catch:{ Exception -> 0x0111 }
        r7 = org.telegram.messenger.AndroidUtilities.dp(r6);	 Catch:{ Exception -> 0x0111 }
        r8 = org.telegram.messenger.AndroidUtilities.dp(r8);	 Catch:{ Exception -> 0x0111 }
        r4.setPadding(r3, r7, r3, r8);	 Catch:{ Exception -> 0x0111 }
        r4 = r9.floatingDateView;	 Catch:{ Exception -> 0x0111 }
        r4 = r4.getLayoutParams();	 Catch:{ Exception -> 0x0111 }
        r4 = (android.widget.FrameLayout.LayoutParams) r4;	 Catch:{ Exception -> 0x0111 }
        r6 = org.telegram.messenger.AndroidUtilities.dp(r6);	 Catch:{ Exception -> 0x0111 }
        r4.topMargin = r6;	 Catch:{ Exception -> 0x0111 }
        r6 = r9.floatingDateView;	 Catch:{ Exception -> 0x0111 }
        r6.setLayoutParams(r4);	 Catch:{ Exception -> 0x0111 }
        r4 = r9.chatListView;	 Catch:{ Exception -> 0x0111 }
        r4.setTopGlowOffset(r3);	 Catch:{ Exception -> 0x0111 }
        goto L_0x00e6;
    L_0x00e5:
        r0 = -1;
    L_0x00e6:
        if (r0 == r2) goto L_0x00ee;
    L_0x00e8:
        r1 = r9.chatLayoutManager;	 Catch:{ Exception -> 0x0111 }
        r1.scrollToPositionWithOffset(r0, r5);	 Catch:{ Exception -> 0x0111 }
        goto L_0x0115;
    L_0x00ee:
        if (r1 == r2) goto L_0x0115;
    L_0x00f0:
        r0 = r9.chatListView;	 Catch:{ Exception -> 0x0111 }
        r0 = r0.getMeasuredHeight();	 Catch:{ Exception -> 0x0111 }
        r2 = r9.chatListView;	 Catch:{ Exception -> 0x0111 }
        r2 = r2.getPaddingBottom();	 Catch:{ Exception -> 0x0111 }
        r0 = r0 - r2;
        r2 = r9.chatListView;	 Catch:{ Exception -> 0x0111 }
        r2 = r2.getPaddingTop();	 Catch:{ Exception -> 0x0111 }
        r0 = r0 - r2;
        r2 = NUM; // 0x41e80000 float:29.0 double:5.46299942E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);	 Catch:{ Exception -> 0x0111 }
        r0 = r0 - r2;
        r2 = r9.chatLayoutManager;	 Catch:{ Exception -> 0x0111 }
        r2.scrollToPositionWithOffset(r1, r0);	 Catch:{ Exception -> 0x0111 }
        goto L_0x0115;
    L_0x0111:
        r0 = move-exception;
        org.telegram.messenger.FileLog.e(r0);
    L_0x0115:
        return;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.checkListViewPaddingsInternal():void");
    }

    private void checkListViewPaddings() {
        if (!this.wasManualScroll) {
            MessageObject messageObject = this.unreadMessageObject;
            if (messageObject != null) {
                if (this.messages.indexOf(messageObject) >= 0) {
                    this.fixPaddingsInLayout = true;
                    View view = this.fragmentView;
                    if (view != null) {
                        view.requestLayout();
                    }
                }
            }
        }
        if (this.checkPaddingsRunnable == null) {
            -$$Lambda$ChatActivity$P7S4EhCkkma2fkxF3dNqtjOpuV4 -__lambda_chatactivity_p7s4ehckkma2fkxf3dnqtjopuv4 = new -$$Lambda$ChatActivity$P7S4EhCkkma2fkxF3dNqtjOpuV4(this);
            this.checkPaddingsRunnable = -__lambda_chatactivity_p7s4ehckkma2fkxf3dnqtjopuv4;
            AndroidUtilities.runOnUIThread(-__lambda_chatactivity_p7s4ehckkma2fkxf3dnqtjopuv4);
        }
    }

    public /* synthetic */ void lambda$checkListViewPaddings$74$ChatActivity() {
        this.checkPaddingsRunnable = null;
        checkListViewPaddingsInternal();
    }

    private void checkRaiseSensors() {
        ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
        if (chatActivityEnterView == null || !chatActivityEnterView.isStickersExpanded()) {
            Chat chat = this.currentChat;
            if (chat == null || ChatObject.canSendMedia(chat)) {
                if (!ApplicationLoader.mainInterfacePaused) {
                    FrameLayout frameLayout = this.bottomOverlayChat;
                    if (frameLayout == null || frameLayout.getVisibility() != 0) {
                        frameLayout = this.bottomOverlay;
                        if (frameLayout == null || frameLayout.getVisibility() != 0) {
                            frameLayout = this.searchContainer;
                            if (frameLayout == null || frameLayout.getVisibility() != 0) {
                                MediaController.getInstance().setAllowStartRecord(true);
                                return;
                            }
                        }
                    }
                }
                MediaController.getInstance().setAllowStartRecord(false);
                return;
            }
            MediaController.getInstance().setAllowStartRecord(false);
            return;
        }
        MediaController.getInstance().setAllowStartRecord(false);
    }

    public void dismissCurrentDialig() {
        Dialog dialog = this.chatAttachAlert;
        if (dialog == null || this.visibleDialog != dialog) {
            super.dismissCurrentDialig();
            return;
        }
        dialog.closeCamera(false);
        this.chatAttachAlert.dismissInternal();
        this.chatAttachAlert.hideCamera(true);
    }

    /* Access modifiers changed, original: protected */
    public void setInPreviewMode(boolean z) {
        super.setInPreviewMode(z);
        ChatAvatarContainer chatAvatarContainer = this.avatarContainer;
        float f = 0.0f;
        if (chatAvatarContainer != null) {
            chatAvatarContainer.setOccupyStatusBar(z ^ 1);
            this.avatarContainer.setLayoutParams(LayoutHelper.createFrame(-2, -1.0f, 51, !z ? 56.0f : 0.0f, 0.0f, 40.0f, 0.0f));
        }
        ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
        if (chatActivityEnterView != null) {
            chatActivityEnterView.setVisibility(!z ? 0 : 4);
        }
        ActionBar actionBar = this.actionBar;
        if (actionBar != null) {
            actionBar.setBackButtonDrawable(!z ? new BackDrawable(false) : null);
            this.headerItem.setAlpha(!z ? 1.0f : 0.0f);
            ActionBarMenuItem actionBarMenuItem = this.attachItem;
            if (!z) {
                f = 1.0f;
            }
            actionBarMenuItem.setAlpha(f);
        }
        RecyclerListView recyclerListView = this.chatListView;
        if (recyclerListView != null) {
            int childCount = recyclerListView.getChildCount();
            for (int i = 0; i < childCount; i++) {
                View childAt = this.chatListView.getChildAt(i);
                boolean z2 = childAt instanceof ChatMessageCell;
                MessageObject messageObject = z2 ? ((ChatMessageCell) childAt).getMessageObject() : childAt instanceof ChatActionCell ? ((ChatActionCell) childAt).getMessageObject() : null;
                if (messageObject != null) {
                    Message message = messageObject.messageOwner;
                    if (message != null && message.media_unread && message.mentioned) {
                        if (!(messageObject.isVoice() || messageObject.isRoundVideo())) {
                            this.newMentionsCount--;
                            if (this.newMentionsCount <= 0) {
                                this.newMentionsCount = 0;
                                this.hasAllMentionsLocal = true;
                                showMentionDownButton(false, true);
                            } else {
                                this.mentiondownButtonCounter.setText(String.format("%d", new Object[]{Integer.valueOf(this.newMentionsCount)}));
                            }
                            getMessagesController().markMentionMessageAsRead(messageObject.getId(), ChatObject.isChannel(this.currentChat) ? this.currentChat.id : 0, this.dialog_id);
                            messageObject.setContentIsRead();
                        }
                        if (z2) {
                            ChatMessageCell chatMessageCell = (ChatMessageCell) childAt;
                            chatMessageCell.setHighlighted(false);
                            chatMessageCell.setHighlightedAnimated();
                        }
                    }
                }
            }
        }
        updateBottomOverlay();
        updateSecretStatus();
    }

    public void onResume() {
        BackupImageView backupImageView;
        super.onResume();
        AndroidUtilities.requestAdjustResize(getParentActivity(), this.classGuid);
        MediaController.getInstance().startRaiseToEarSensors(this);
        checkRaiseSensors();
        ChatAttachAlert chatAttachAlert = this.chatAttachAlert;
        if (chatAttachAlert != null) {
            chatAttachAlert.onResume();
        }
        SizeNotifierFrameLayout sizeNotifierFrameLayout = this.contentView;
        if (sizeNotifierFrameLayout != null) {
            sizeNotifierFrameLayout.onResume();
        }
        if (this.firstOpen && getMessagesController().isProxyDialog(this.dialog_id, true)) {
            SharedPreferences globalNotificationsSettings = MessagesController.getGlobalNotificationsSettings();
            String str = "proxychannel";
            if (globalNotificationsSettings.getLong(str, 0) != this.dialog_id) {
                globalNotificationsSettings.edit().putLong(str, this.dialog_id).commit();
                AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                builder.setTitle(LocaleController.getString("AppName", NUM));
                builder.setMessage(LocaleController.getString("UseProxySponsorInfo", NUM));
                builder.setPositiveButton(LocaleController.getString("OK", NUM), null);
                showDialog(builder.create());
            }
        }
        checkActionBarMenu();
        PhotoSize photoSize = this.replyImageLocation;
        if (photoSize != null) {
            backupImageView = this.replyImageView;
            if (backupImageView != null) {
                backupImageView.setImage(ImageLocation.getForObject(photoSize, this.replyImageLocationObject), "50_50", ImageLocation.getForObject(this.replyImageThumbLocation, this.replyImageLocationObject), "50_50_b", null, this.replyImageSize, this.replyImageCacheType, this.replyingMessageObject);
            }
        }
        photoSize = this.pinnedImageLocation;
        if (photoSize != null) {
            backupImageView = this.pinnedMessageImageView;
            if (backupImageView != null) {
                backupImageView.setImage(ImageLocation.getForObject(photoSize, this.pinnedImageLocationObject), "50_50", ImageLocation.getForObject(this.pinnedImageThumbLocation, this.pinnedImageLocationObject), "50_50_b", null, this.pinnedImageSize, this.pinnedImageCacheType, this.pinnedMessageObject);
            }
        }
        if (!this.inScheduleMode) {
            getNotificationsController().setOpenedDialogId(this.dialog_id);
        }
        getMessagesController().setLastVisibleDialogId(this.dialog_id, this.inScheduleMode, true);
        if (this.scrollToTopOnResume) {
            if (this.scrollToTopUnReadOnResume) {
                MessageObject messageObject = this.scrollToMessage;
                if (messageObject != null) {
                    if (this.chatListView != null) {
                        boolean z;
                        int i = this.scrollToMessagePosition;
                        if (i == -9000) {
                            i = getScrollOffsetForMessage(messageObject);
                        } else if (i == -10000) {
                            i = -AndroidUtilities.dp(11.0f);
                        } else {
                            z = true;
                            this.chatLayoutManager.scrollToPositionWithOffset(this.chatAdapter.messagesStartRow + this.messages.indexOf(this.scrollToMessage), i, z);
                        }
                        z = false;
                        this.chatLayoutManager.scrollToPositionWithOffset(this.chatAdapter.messagesStartRow + this.messages.indexOf(this.scrollToMessage), i, z);
                    }
                    this.scrollToTopUnReadOnResume = false;
                    this.scrollToTopOnResume = false;
                    this.scrollToMessage = null;
                }
            }
            moveScrollToLastMessage();
            this.scrollToTopUnReadOnResume = false;
            this.scrollToTopOnResume = false;
            this.scrollToMessage = null;
        }
        this.paused = false;
        this.pausedOnLastMessage = false;
        checkScrollForLoad(false);
        if (this.wasPaused) {
            this.wasPaused = false;
            ChatActivityAdapter chatActivityAdapter = this.chatAdapter;
            if (chatActivityAdapter != null) {
                chatActivityAdapter.notifyDataSetChanged();
            }
        }
        fixLayout();
        applyDraftMaybe(false);
        FrameLayout frameLayout = this.bottomOverlayChat;
        if (!(frameLayout == null || frameLayout.getVisibility() == 0 || this.actionBar.isSearchFieldVisible())) {
            this.chatActivityEnterView.setFieldFocused(true);
        }
        ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
        if (chatActivityEnterView != null) {
            chatActivityEnterView.onResume();
        }
        if (this.currentUser != null) {
            this.chatEnterTime = System.currentTimeMillis();
            this.chatLeaveTime = 0;
        }
        if (this.startVideoEdit != null) {
            AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$szUrvdsC-YQOqSMG7tgBr_VGusg(this));
        }
        if (this.chatListView != null) {
            chatActivityEnterView = this.chatActivityEnterView;
            if (chatActivityEnterView == null || !chatActivityEnterView.isEditingMessage()) {
                this.chatListView.setOnItemLongClickListener(this.onItemLongClickListener);
                this.chatListView.setOnItemClickListener(this.onItemClickListener);
                this.chatListView.setLongClickable(true);
            }
        }
        checkBotCommands();
        updateTitle();
    }

    public /* synthetic */ void lambda$onResume$75$ChatActivity() {
        openVideoEditor(this.startVideoEdit, null);
        this.startVideoEdit = null;
    }

    public void finishFragment() {
        super.finishFragment();
        ActionBarPopupWindow actionBarPopupWindow = this.scrimPopupWindow;
        if (actionBarPopupWindow != null) {
            actionBarPopupWindow.dismiss();
        }
    }

    /* JADX WARNING: Removed duplicated region for block: B:97:0x01e5  */
    /* JADX WARNING: Removed duplicated region for block: B:96:0x01bc  */
    public void onPause() {
        /*
        r15 = this;
        super.onPause();
        r0 = r15.scrimPopupWindow;
        if (r0 == 0) goto L_0x000a;
    L_0x0007:
        r0.dismiss();
    L_0x000a:
        r0 = r15.getMessagesController();
        r1 = r15.dialog_id;
        r0.markDialogAsReadNow(r1);
        r0 = org.telegram.messenger.MediaController.getInstance();
        r1 = 1;
        r0.stopRaiseToEarSensors(r15, r1);
        r15.paused = r1;
        r15.wasPaused = r1;
        r0 = r15.inScheduleMode;
        if (r0 != 0) goto L_0x002c;
    L_0x0023:
        r0 = r15.getNotificationsController();
        r2 = 0;
        r0.setOpenedDialogId(r2);
    L_0x002c:
        r0 = r15.getMessagesController();
        r2 = r15.dialog_id;
        r4 = r15.inScheduleMode;
        r5 = 0;
        r0.setLastVisibleDialogId(r2, r4, r5);
        r0 = r15.ignoreAttachOnPause;
        r2 = 0;
        if (r0 != 0) goto L_0x0070;
    L_0x003d:
        r0 = r15.chatActivityEnterView;
        if (r0 == 0) goto L_0x0070;
    L_0x0041:
        r0 = r15.bottomOverlayChat;
        r0 = r0.getVisibility();
        if (r0 == 0) goto L_0x0070;
    L_0x0049:
        r0 = r15.chatActivityEnterView;
        r0.onPause();
        r0 = r15.replyingMessageObject;
        r3 = r15.chatActivityEnterView;
        r3 = r3.isEditingMessage();
        if (r3 != 0) goto L_0x0063;
    L_0x0058:
        r3 = r15.chatActivityEnterView;
        r3 = r3.getFieldText();
        r3 = org.telegram.messenger.AndroidUtilities.getTrimmedString(r3);
        goto L_0x0064;
    L_0x0063:
        r3 = r2;
    L_0x0064:
        r4 = r15.chatActivityEnterView;
        r4 = r4.isMessageWebPageSearchEnabled();
        r6 = r15.chatActivityEnterView;
        r6.setFieldFocused(r5);
        goto L_0x0073;
    L_0x0070:
        r0 = r2;
        r3 = r0;
        r4 = 1;
    L_0x0073:
        r6 = r15.chatAttachAlert;
        if (r6 == 0) goto L_0x0081;
    L_0x0077:
        r7 = r15.ignoreAttachOnPause;
        if (r7 != 0) goto L_0x007f;
    L_0x007b:
        r6.onPause();
        goto L_0x0081;
    L_0x007f:
        r15.ignoreAttachOnPause = r5;
    L_0x0081:
        r6 = r15.contentView;
        if (r6 == 0) goto L_0x0088;
    L_0x0085:
        r6.onPause();
    L_0x0088:
        r6 = r15.inScheduleMode;
        if (r6 != 0) goto L_0x0226;
    L_0x008c:
        r6 = new java.lang.CharSequence[r1];
        r6[r5] = r3;
        r3 = r15.getMediaDataController();
        r7 = r15.currentEncryptedChat;
        if (r7 == 0) goto L_0x00a5;
    L_0x0098:
        r7 = r7.layer;
        r7 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r7);
        r8 = 101; // 0x65 float:1.42E-43 double:5.0E-322;
        if (r7 < r8) goto L_0x00a3;
    L_0x00a2:
        goto L_0x00a5;
    L_0x00a3:
        r7 = 0;
        goto L_0x00a6;
    L_0x00a5:
        r7 = 1;
    L_0x00a6:
        r12 = r3.getEntities(r6, r7);
        r8 = r15.getMediaDataController();
        r9 = r15.dialog_id;
        r11 = r6[r5];
        if (r0 == 0) goto L_0x00b6;
    L_0x00b4:
        r2 = r0.messageOwner;
    L_0x00b6:
        r13 = r2;
        r14 = r4 ^ 1;
        r8.saveDraft(r9, r11, r12, r13, r14);
        r0 = r15.getMessagesController();
        r2 = r15.dialog_id;
        r0.cancelTyping(r5, r2);
        r0 = r15.pausedOnLastMessage;
        if (r0 != 0) goto L_0x0212;
    L_0x00c9:
        r0 = r15.currentAccount;
        r0 = org.telegram.messenger.MessagesController.getNotificationsSettings(r0);
        r0 = r0.edit();
        r2 = r15.chatLayoutManager;
        if (r2 == 0) goto L_0x01b4;
    L_0x00d7:
        r2 = r2.findFirstVisibleItemPosition();
        if (r2 == 0) goto L_0x01b4;
    L_0x00dd:
        r3 = r15.chatListView;
        r3 = r3.findViewHolderForAdapterPosition(r2);
        r3 = (org.telegram.ui.Components.RecyclerListView.Holder) r3;
        if (r3 == 0) goto L_0x01b4;
    L_0x00e7:
        r4 = r3.itemView;
        r6 = r4 instanceof org.telegram.ui.Cells.ChatMessageCell;
        if (r6 == 0) goto L_0x00f8;
    L_0x00ed:
        r4 = (org.telegram.ui.Cells.ChatMessageCell) r4;
        r4 = r4.getMessageObject();
        r4 = r4.getId();
        goto L_0x0108;
    L_0x00f8:
        r6 = r4 instanceof org.telegram.ui.Cells.ChatActionCell;
        if (r6 == 0) goto L_0x0107;
    L_0x00fc:
        r4 = (org.telegram.ui.Cells.ChatActionCell) r4;
        r4 = r4.getMessageObject();
        r4 = r4.getId();
        goto L_0x0108;
    L_0x0107:
        r4 = 0;
    L_0x0108:
        if (r4 != 0) goto L_0x0114;
    L_0x010a:
        r3 = r15.chatListView;
        r4 = r2 + 1;
        r3 = r3.findViewHolderForAdapterPosition(r4);
        r3 = (org.telegram.ui.Components.RecyclerListView.Holder) r3;
    L_0x0114:
        r2 = r2 - r1;
        r4 = 0;
        r6 = 0;
    L_0x0117:
        r7 = r15.chatAdapter;
        r7 = r7.messagesStartRow;
        if (r2 < r7) goto L_0x0155;
    L_0x011d:
        r7 = r2 - r7;
        if (r7 < 0) goto L_0x0152;
    L_0x0121:
        r8 = r15.messages;
        r8 = r8.size();
        if (r7 < r8) goto L_0x012a;
    L_0x0129:
        goto L_0x0152;
    L_0x012a:
        r8 = r15.messages;
        r7 = r8.get(r7);
        r7 = (org.telegram.messenger.MessageObject) r7;
        r8 = r7.getId();
        if (r8 != 0) goto L_0x0139;
    L_0x0138:
        goto L_0x0152;
    L_0x0139:
        r8 = r7.isOut();
        if (r8 == 0) goto L_0x0145;
    L_0x013f:
        r8 = r7.messageOwner;
        r8 = r8.from_scheduled;
        if (r8 == 0) goto L_0x014c;
    L_0x0145:
        r7 = r7.isUnread();
        if (r7 == 0) goto L_0x014c;
    L_0x014b:
        r6 = 1;
    L_0x014c:
        r7 = 2;
        if (r4 <= r7) goto L_0x0150;
    L_0x014f:
        goto L_0x0155;
    L_0x0150:
        r4 = r4 + 1;
    L_0x0152:
        r2 = r2 + -1;
        goto L_0x0117;
    L_0x0155:
        if (r3 == 0) goto L_0x01b4;
    L_0x0157:
        if (r6 != 0) goto L_0x01b4;
    L_0x0159:
        r2 = r3.itemView;
        r4 = r2 instanceof org.telegram.ui.Cells.ChatMessageCell;
        if (r4 == 0) goto L_0x016a;
    L_0x015f:
        r2 = (org.telegram.ui.Cells.ChatMessageCell) r2;
        r2 = r2.getMessageObject();
        r2 = r2.getId();
        goto L_0x017a;
    L_0x016a:
        r4 = r2 instanceof org.telegram.ui.Cells.ChatActionCell;
        if (r4 == 0) goto L_0x0179;
    L_0x016e:
        r2 = (org.telegram.ui.Cells.ChatActionCell) r2;
        r2 = r2.getMessageObject();
        r2 = r2.getId();
        goto L_0x017a;
    L_0x0179:
        r2 = 0;
    L_0x017a:
        if (r2 <= 0) goto L_0x0180;
    L_0x017c:
        r4 = r15.currentEncryptedChat;
        if (r4 == 0) goto L_0x0186;
    L_0x0180:
        if (r2 >= 0) goto L_0x01b4;
    L_0x0182:
        r4 = r15.currentEncryptedChat;
        if (r4 == 0) goto L_0x01b4;
    L_0x0186:
        r3 = r3.itemView;
        r3 = r3.getBottom();
        r4 = r15.chatListView;
        r4 = r4.getMeasuredHeight();
        r3 = r3 - r4;
        r4 = org.telegram.messenger.BuildVars.LOGS_ENABLED;
        if (r4 == 0) goto L_0x01b6;
    L_0x0197:
        r4 = new java.lang.StringBuilder;
        r4.<init>();
        r6 = "save offset = ";
        r4.append(r6);
        r4.append(r3);
        r6 = " for mid ";
        r4.append(r6);
        r4.append(r2);
        r4 = r4.toString();
        org.telegram.messenger.FileLog.d(r4);
        goto L_0x01b6;
    L_0x01b4:
        r2 = 0;
        r3 = 0;
    L_0x01b6:
        r4 = "diditemo";
        r6 = "diditem";
        if (r2 == 0) goto L_0x01e5;
    L_0x01bc:
        r7 = new java.lang.StringBuilder;
        r7.<init>();
        r7.append(r6);
        r8 = r15.dialog_id;
        r7.append(r8);
        r6 = r7.toString();
        r0.putInt(r6, r2);
        r2 = new java.lang.StringBuilder;
        r2.<init>();
        r2.append(r4);
        r6 = r15.dialog_id;
        r2.append(r6);
        r2 = r2.toString();
        r0.putInt(r2, r3);
        goto L_0x020f;
    L_0x01e5:
        r15.pausedOnLastMessage = r1;
        r2 = new java.lang.StringBuilder;
        r2.<init>();
        r2.append(r6);
        r6 = r15.dialog_id;
        r2.append(r6);
        r2 = r2.toString();
        r0.remove(r2);
        r2 = new java.lang.StringBuilder;
        r2.<init>();
        r2.append(r4);
        r3 = r15.dialog_id;
        r2.append(r3);
        r2 = r2.toString();
        r0.remove(r2);
    L_0x020f:
        r0.commit();
    L_0x0212:
        r0 = r15.currentUser;
        if (r0 == 0) goto L_0x021f;
    L_0x0216:
        r2 = java.lang.System.currentTimeMillis();
        r15.chatLeaveTime = r2;
        r15.updateInformationForScreenshotDetector();
    L_0x021f:
        r0 = r15.undoView;
        if (r0 == 0) goto L_0x0226;
    L_0x0223:
        r0.hide(r1, r5);
    L_0x0226:
        return;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.onPause():void");
    }

    private void applyDraftMaybe(boolean z) {
        if (this.chatActivityEnterView != null && !this.inScheduleMode) {
            DraftMessage draft = getMediaDataController().getDraft(this.dialog_id);
            Message draftMessage = (draft == null || draft.reply_to_msg_id == 0) ? null : getMediaDataController().getDraftMessage(this.dialog_id);
            String str = "";
            if (this.chatActivityEnterView.getFieldText() == null) {
                if (draft != null) {
                    CharSequence charSequence;
                    this.chatActivityEnterView.setWebPage(null, draft.no_webpage ^ 1);
                    if (draft.entities.isEmpty()) {
                        charSequence = draft.message;
                    } else {
                        charSequence = SpannableStringBuilder.valueOf(draft.message);
                        MediaDataController.sortEntities(draft.entities);
                        for (int i = 0; i < draft.entities.size(); i++) {
                            MessageEntity messageEntity = (MessageEntity) draft.entities.get(i);
                            boolean z2 = messageEntity instanceof TL_inputMessageEntityMentionName;
                            int i2;
                            TextStyleRun textStyleRun;
                            TextStyleSpan textStyleSpan;
                            if (z2 || (messageEntity instanceof TL_messageEntityMentionName)) {
                                if (z2) {
                                    i2 = ((TL_inputMessageEntityMentionName) messageEntity).user_id.user_id;
                                } else {
                                    i2 = ((TL_messageEntityMentionName) messageEntity).user_id;
                                }
                                if (messageEntity.offset + messageEntity.length < charSequence.length() && charSequence.charAt(messageEntity.offset + messageEntity.length) == ' ') {
                                    messageEntity.length++;
                                }
                                StringBuilder stringBuilder = new StringBuilder();
                                stringBuilder.append(str);
                                stringBuilder.append(i2);
                                URLSpanUserMention uRLSpanUserMention = new URLSpanUserMention(stringBuilder.toString(), 1);
                                i2 = messageEntity.offset;
                                charSequence.setSpan(uRLSpanUserMention, i2, messageEntity.length + i2, 33);
                            } else if ((messageEntity instanceof TL_messageEntityCode) || (messageEntity instanceof TL_messageEntityPre)) {
                                textStyleRun = new TextStyleRun();
                                textStyleRun.flags |= 4;
                                textStyleSpan = new TextStyleSpan(textStyleRun);
                                i2 = messageEntity.offset;
                                MediaDataController.addStyleToText(textStyleSpan, i2, messageEntity.length + i2, charSequence, true);
                            } else if (messageEntity instanceof TL_messageEntityBold) {
                                textStyleRun = new TextStyleRun();
                                textStyleRun.flags |= 1;
                                textStyleSpan = new TextStyleSpan(textStyleRun);
                                i2 = messageEntity.offset;
                                MediaDataController.addStyleToText(textStyleSpan, i2, messageEntity.length + i2, charSequence, true);
                            } else if (messageEntity instanceof TL_messageEntityItalic) {
                                textStyleRun = new TextStyleRun();
                                textStyleRun.flags |= 2;
                                textStyleSpan = new TextStyleSpan(textStyleRun);
                                i2 = messageEntity.offset;
                                MediaDataController.addStyleToText(textStyleSpan, i2, messageEntity.length + i2, charSequence, true);
                            } else if (messageEntity instanceof TL_messageEntityStrike) {
                                textStyleRun = new TextStyleRun();
                                textStyleRun.flags |= 8;
                                textStyleSpan = new TextStyleSpan(textStyleRun);
                                i2 = messageEntity.offset;
                                MediaDataController.addStyleToText(textStyleSpan, i2, messageEntity.length + i2, charSequence, true);
                            } else if (messageEntity instanceof TL_messageEntityUnderline) {
                                textStyleRun = new TextStyleRun();
                                textStyleRun.flags |= 16;
                                textStyleSpan = new TextStyleSpan(textStyleRun);
                                i2 = messageEntity.offset;
                                MediaDataController.addStyleToText(textStyleSpan, i2, messageEntity.length + i2, charSequence, true);
                            } else if (messageEntity instanceof TL_messageEntityTextUrl) {
                                URLSpanReplacement uRLSpanReplacement = new URLSpanReplacement(messageEntity.url);
                                int i3 = messageEntity.offset;
                                charSequence.setSpan(uRLSpanReplacement, i3, messageEntity.length + i3, 33);
                            }
                        }
                    }
                    this.chatActivityEnterView.setFieldText(charSequence);
                    if (getArguments().getBoolean("hasUrl", false)) {
                        this.chatActivityEnterView.setSelection(draft.message.indexOf(10) + 1);
                        AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$7IaJTnG6f5z_pHMVX_lcny36Esc(this), 700);
                    }
                }
            } else if (z && draft == null) {
                this.chatActivityEnterView.setFieldText(str);
                hideFieldPanel(true);
            }
            if (this.replyingMessageObject == null && draftMessage != null) {
                this.replyingMessageObject = new MessageObject(this.currentAccount, draftMessage, getMessagesController().getUsers(), false);
                showFieldPanelForReply(this.replyingMessageObject);
            }
        }
    }

    public /* synthetic */ void lambda$applyDraftMaybe$76$ChatActivity() {
        ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
        if (chatActivityEnterView != null) {
            chatActivityEnterView.setFieldFocused(true);
            this.chatActivityEnterView.openKeyboard();
        }
    }

    private void updateInformationForScreenshotDetector() {
        if (this.currentUser != null) {
            if (this.currentEncryptedChat != null) {
                ArrayList arrayList = new ArrayList();
                RecyclerListView recyclerListView = this.chatListView;
                if (recyclerListView != null) {
                    int childCount = recyclerListView.getChildCount();
                    for (int i = 0; i < childCount; i++) {
                        View childAt = this.chatListView.getChildAt(i);
                        MessageObject messageObject = null;
                        if (childAt instanceof ChatMessageCell) {
                            messageObject = ((ChatMessageCell) childAt).getMessageObject();
                        }
                        if (messageObject != null && messageObject.getId() < 0) {
                            long j = messageObject.messageOwner.random_id;
                            if (j != 0) {
                                arrayList.add(Long.valueOf(j));
                            }
                        }
                    }
                }
                MediaController.getInstance().setLastVisibleMessageIds(this.currentAccount, this.chatEnterTime, this.chatLeaveTime, this.currentUser, this.currentEncryptedChat, arrayList, 0);
            } else {
                SecretMediaViewer instance = SecretMediaViewer.getInstance();
                MessageObject currentMessageObject = instance.getCurrentMessageObject();
                if (!(currentMessageObject == null || currentMessageObject.isOut())) {
                    MediaController.getInstance().setLastVisibleMessageIds(this.currentAccount, instance.getOpenTime(), instance.getCloseTime(), this.currentUser, null, null, currentMessageObject.getId());
                }
            }
        }
    }

    private boolean fixLayoutInternal() {
        boolean z;
        if (AndroidUtilities.isTablet() || ApplicationLoader.applicationContext.getResources().getConfiguration().orientation != 2) {
            this.selectedMessagesCountTextView.setTextSize(20);
        } else {
            this.selectedMessagesCountTextView.setTextSize(18);
        }
        int childCount = this.chatListView.getChildCount();
        HashMap hashMap = null;
        int i = 0;
        while (true) {
            z = true;
            if (i >= childCount) {
                break;
            }
            View childAt = this.chatListView.getChildAt(i);
            if (childAt instanceof ChatMessageCell) {
                GroupedMessages currentMessagesGroup = ((ChatMessageCell) childAt).getCurrentMessagesGroup();
                if (currentMessagesGroup != null && currentMessagesGroup.hasSibling) {
                    if (hashMap == null) {
                        hashMap = new HashMap();
                    }
                    if (!hashMap.containsKey(Long.valueOf(currentMessagesGroup.groupId))) {
                        hashMap.put(Long.valueOf(currentMessagesGroup.groupId), currentMessagesGroup);
                        ArrayList arrayList = currentMessagesGroup.messages;
                        int indexOf = this.messages.indexOf((MessageObject) arrayList.get(arrayList.size() - 1));
                        if (indexOf >= 0) {
                            ChatActivityAdapter chatActivityAdapter = this.chatAdapter;
                            chatActivityAdapter.notifyItemRangeChanged(indexOf + chatActivityAdapter.messagesStartRow, currentMessagesGroup.messages.size());
                        }
                    }
                }
            }
            i++;
        }
        if (!AndroidUtilities.isTablet()) {
            return true;
        }
        FragmentContextView fragmentContextView;
        if (AndroidUtilities.isSmallTablet() && ApplicationLoader.applicationContext.getResources().getConfiguration().orientation == 1) {
            this.actionBar.setBackButtonDrawable(new BackDrawable(false));
            fragmentContextView = this.fragmentContextView;
            if (fragmentContextView != null && fragmentContextView.getParent() == null) {
                ((ViewGroup) this.fragmentView).addView(this.fragmentContextView, LayoutHelper.createFrame(-1, 39.0f, 51, 0.0f, -36.0f, 0.0f, 0.0f));
            }
        } else {
            ActionBar actionBar = this.actionBar;
            ActionBarLayout actionBarLayout = this.parentLayout;
            if (!(actionBarLayout == null || actionBarLayout.fragmentsStack.isEmpty() || this.parentLayout.fragmentsStack.get(0) == this || this.parentLayout.fragmentsStack.size() == 1)) {
                z = false;
            }
            actionBar.setBackButtonDrawable(new BackDrawable(z));
            fragmentContextView = this.fragmentContextView;
            if (!(fragmentContextView == null || fragmentContextView.getParent() == null)) {
                this.fragmentView.setPadding(0, 0, 0, 0);
                ((ViewGroup) this.fragmentView).removeView(this.fragmentContextView);
            }
        }
        return false;
    }

    private void fixLayout() {
        ChatAvatarContainer chatAvatarContainer = this.avatarContainer;
        if (chatAvatarContainer != null) {
            chatAvatarContainer.getViewTreeObserver().addOnPreDrawListener(new OnPreDrawListener() {
                public boolean onPreDraw() {
                    if (ChatActivity.this.avatarContainer != null) {
                        ChatActivity.this.avatarContainer.getViewTreeObserver().removeOnPreDrawListener(this);
                    }
                    return ChatActivity.this.fixLayoutInternal();
                }
            });
        }
    }

    public boolean maybePlayVisibleVideo() {
        if (this.chatListView == null) {
            return false;
        }
        MessageObject playingMessageObject = MediaController.getInstance().getPlayingMessageObject();
        if (playingMessageObject != null && !playingMessageObject.isVideo()) {
            return false;
        }
        AnimatedFileDrawable animatedFileDrawable;
        MessageObject messageObject;
        HintView hintView = this.noSoundHintView;
        ArrayList arrayList = null;
        if (hintView == null || hintView.getTag() == null) {
            animatedFileDrawable = null;
            messageObject = animatedFileDrawable;
        } else {
            ChatMessageCell messageCell = this.noSoundHintView.getMessageCell();
            ImageReceiver photoImage = messageCell.getPhotoImage();
            animatedFileDrawable = photoImage.getAnimation();
            if (animatedFileDrawable != null) {
                messageObject = messageCell.getMessageObject();
                this.scrollToVideo = messageCell.getTop() + photoImage.getImageY2() > this.chatListView.getMeasuredHeight();
            } else {
                messageObject = null;
            }
        }
        if (messageObject == null) {
            int childCount = this.chatListView.getChildCount();
            for (int i = 0; i < childCount; i++) {
                View childAt = this.chatListView.getChildAt(i);
                if (childAt instanceof ChatMessageCell) {
                    ChatMessageCell chatMessageCell = (ChatMessageCell) childAt;
                    MessageObject messageObject2 = chatMessageCell.getMessageObject();
                    boolean isRoundVideo = messageObject2.isRoundVideo();
                    if (messageObject2.isVideo() || isRoundVideo) {
                        ImageReceiver photoImage2 = chatMessageCell.getPhotoImage();
                        AnimatedFileDrawable animation = photoImage2.getAnimation();
                        if (animation != null) {
                            int top = childAt.getTop() + photoImage2.getImageY();
                            int imageHeight = photoImage2.getImageHeight() + top;
                            if (imageHeight >= 0 && top <= this.chatListView.getMeasuredHeight()) {
                                if (messageObject != null && top < 0) {
                                    break;
                                }
                                boolean z = top < 0 || imageHeight > this.chatListView.getMeasuredHeight();
                                this.scrollToVideo = z;
                                if (top >= 0 && imageHeight <= this.chatListView.getMeasuredHeight()) {
                                    messageObject = messageObject2;
                                    animatedFileDrawable = animation;
                                    break;
                                }
                                messageObject = messageObject2;
                                animatedFileDrawable = animation;
                            }
                        } else {
                            continue;
                        }
                    }
                }
            }
        }
        if (messageObject == null || MediaController.getInstance().isPlayingMessage(messageObject)) {
            return false;
        }
        hintView = this.noSoundHintView;
        if (hintView != null) {
            hintView.hide();
        }
        hintView = this.forwardHintView;
        if (hintView != null) {
            hintView.hide();
        }
        if (messageObject.isRoundVideo()) {
            boolean playMessage = MediaController.getInstance().playMessage(messageObject);
            MediaController instance = MediaController.getInstance();
            if (playMessage) {
                arrayList = createVoiceMessagesPlaylist(messageObject, false);
            }
            instance.setVoiceMessagesPlaylist(arrayList, false);
            return playMessage;
        }
        SharedConfig.setNoSoundHintShowed(true);
        messageObject.audioProgress = animatedFileDrawable.getCurrentProgress();
        messageObject.audioProgressMs = animatedFileDrawable.getCurrentProgressMs();
        animatedFileDrawable.stop();
        if (PhotoViewer.isPlayingMessageInPip(messageObject)) {
            PhotoViewer.getPipInstance().destroyPhotoViewer();
        }
        return MediaController.getInstance().playMessage(messageObject);
    }

    public void onConfigurationChanged(Configuration configuration) {
        fixLayout();
        Dialog dialog = this.visibleDialog;
        if (dialog instanceof DatePickerDialog) {
            dialog.dismiss();
        }
        ActionBarPopupWindow actionBarPopupWindow = this.scrimPopupWindow;
        if (actionBarPopupWindow != null) {
            actionBarPopupWindow.dismiss();
        }
        if (!AndroidUtilities.isTablet()) {
            if (configuration.orientation == 2) {
                if (!PhotoViewer.hasInstance() || !PhotoViewer.getInstance().isVisible()) {
                    MessageObject playingMessageObject = MediaController.getInstance().getPlayingMessageObject();
                    if (playingMessageObject != null && playingMessageObject.isVideo()) {
                        PhotoViewer.getInstance().setParentActivity(getParentActivity());
                        getFileLoader().setLoadingVideoForPlayer(playingMessageObject.getDocument(), false);
                        MediaController.getInstance().cleanupPlayer(true, true, false, true);
                        PhotoViewer instance = PhotoViewer.getInstance();
                        long j = 0;
                        long j2 = playingMessageObject.type != 0 ? this.dialog_id : 0;
                        if (playingMessageObject.type != 0) {
                            j = this.mergeDialogId;
                        }
                        if (instance.openPhoto(playingMessageObject, j2, j, this.photoViewerProvider, false)) {
                            PhotoViewer.getInstance().setParentChatActivity(this);
                        }
                        hideHints();
                        MediaController.getInstance().resetGoingToShowMessageObject();
                    }
                }
            } else if (PhotoViewer.hasInstance() && PhotoViewer.getInstance().isOpenedFullScreenVideo()) {
                PhotoViewer.getInstance().injectVideoPlayerToMediaController();
                PhotoViewer.getInstance().closePhoto(false, true);
            }
        }
    }

    private void createDeleteMessagesAlert(MessageObject messageObject, GroupedMessages groupedMessages) {
        createDeleteMessagesAlert(messageObject, groupedMessages, 1);
    }

    private void createDeleteMessagesAlert(MessageObject messageObject, GroupedMessages groupedMessages, int i) {
        AlertsCreator.createDeleteMessagesAlert(this, this.currentUser, this.currentChat, this.currentEncryptedChat, this.chatInfo, this.mergeDialogId, messageObject, this.selectedMessagesIds, groupedMessages, this.inScheduleMode, i, new -$$Lambda$ChatActivity$zy6JH2LRrvTYMnHyFZhl1er6dWA(this));
    }

    public /* synthetic */ void lambda$createDeleteMessagesAlert$77$ChatActivity() {
        hideActionMode();
        updatePinnedMessageView(true);
    }

    private void hideActionMode() {
        if (this.actionBar.isActionModeShowed()) {
            ActionBar actionBar = this.actionBar;
            if (actionBar != null) {
                actionBar.hideActionMode();
            }
            this.cantDeleteMessagesCount = 0;
            this.canEditMessagesCount = 0;
            this.cantForwardMessagesCount = 0;
            ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
            if (chatActivityEnterView != null) {
                EditTextCaption editField = chatActivityEnterView.getEditField();
                if (this.chatActivityEnterView.getVisibility() == 0) {
                    editField.requestFocus();
                }
                editField.setAllowDrawCursor(true);
            }
            ChatListTextSelectionHelper chatListTextSelectionHelper = this.textSelectionHelper;
            if (chatListTextSelectionHelper != null) {
                chatListTextSelectionHelper.clear(true);
                this.textSelectionHelper.cancelAllAnimators();
            }
            TextSelectionHint textSelectionHint = this.textSelectionHint;
            if (textSelectionHint != null) {
                textSelectionHint.hide();
            }
            this.textSelectionHintWasShowed = false;
        }
    }

    private void createMenu(View view, boolean z, boolean z2, float f, float f2) {
        createMenu(view, z, z2, f, f2, true);
    }

    private CharSequence getMessageCaption(MessageObject messageObject, GroupedMessages groupedMessages) {
        CharSequence charSequence = messageObject.caption;
        if (charSequence != null) {
            return charSequence;
        }
        if (groupedMessages == null) {
            return null;
        }
        int size = groupedMessages.messages.size();
        CharSequence charSequence2 = null;
        for (int i = 0; i < size; i++) {
            CharSequence charSequence3 = ((MessageObject) groupedMessages.messages.get(i)).caption;
            if (charSequence3 != null) {
                if (charSequence2 != null) {
                    return null;
                }
                charSequence2 = charSequence3;
            }
        }
        return charSequence2;
    }

    /* JADX WARNING: Removed duplicated region for block: B:452:0x0e9e  */
    /* JADX WARNING: Removed duplicated region for block: B:451:0x0e9d A:{RETURN} */
    /* JADX WARNING: Removed duplicated region for block: B:451:0x0e9d A:{RETURN} */
    /* JADX WARNING: Removed duplicated region for block: B:452:0x0e9e  */
    /* JADX WARNING: Removed duplicated region for block: B:165:0x02ef  */
    /* JADX WARNING: Removed duplicated region for block: B:164:0x02ee A:{RETURN} */
    /* JADX WARNING: Removed duplicated region for block: B:75:0x0114  */
    /* JADX WARNING: Removed duplicated region for block: B:85:0x0139  */
    /* JADX WARNING: Removed duplicated region for block: B:84:0x0137  */
    /* JADX WARNING: Removed duplicated region for block: B:88:0x013e  */
    /* JADX WARNING: Removed duplicated region for block: B:120:0x01a2 A:{SKIP} */
    /* JADX WARNING: Removed duplicated region for block: B:164:0x02ee A:{RETURN} */
    /* JADX WARNING: Removed duplicated region for block: B:165:0x02ef  */
    /* JADX WARNING: Removed duplicated region for block: B:58:0x00dd  */
    /* JADX WARNING: Removed duplicated region for block: B:64:0x00f0  */
    /* JADX WARNING: Removed duplicated region for block: B:75:0x0114  */
    /* JADX WARNING: Removed duplicated region for block: B:84:0x0137  */
    /* JADX WARNING: Removed duplicated region for block: B:85:0x0139  */
    /* JADX WARNING: Removed duplicated region for block: B:88:0x013e  */
    /* JADX WARNING: Removed duplicated region for block: B:120:0x01a2 A:{SKIP} */
    /* JADX WARNING: Removed duplicated region for block: B:165:0x02ef  */
    /* JADX WARNING: Removed duplicated region for block: B:164:0x02ee A:{RETURN} */
    /* JADX WARNING: Removed duplicated region for block: B:58:0x00dd  */
    /* JADX WARNING: Removed duplicated region for block: B:64:0x00f0  */
    /* JADX WARNING: Removed duplicated region for block: B:75:0x0114  */
    /* JADX WARNING: Removed duplicated region for block: B:85:0x0139  */
    /* JADX WARNING: Removed duplicated region for block: B:84:0x0137  */
    /* JADX WARNING: Removed duplicated region for block: B:88:0x013e  */
    /* JADX WARNING: Removed duplicated region for block: B:120:0x01a2 A:{SKIP} */
    /* JADX WARNING: Removed duplicated region for block: B:164:0x02ee A:{RETURN} */
    /* JADX WARNING: Removed duplicated region for block: B:165:0x02ef  */
    /* JADX WARNING: Removed duplicated region for block: B:58:0x00dd  */
    /* JADX WARNING: Removed duplicated region for block: B:64:0x00f0  */
    /* JADX WARNING: Removed duplicated region for block: B:75:0x0114  */
    /* JADX WARNING: Removed duplicated region for block: B:84:0x0137  */
    /* JADX WARNING: Removed duplicated region for block: B:85:0x0139  */
    /* JADX WARNING: Removed duplicated region for block: B:88:0x013e  */
    /* JADX WARNING: Removed duplicated region for block: B:120:0x01a2 A:{SKIP} */
    /* JADX WARNING: Removed duplicated region for block: B:165:0x02ef  */
    /* JADX WARNING: Removed duplicated region for block: B:164:0x02ee A:{RETURN} */
    /* JADX WARNING: Missing block: B:59:0x00e3, code skipped:
            if (r5.pinned_msg_id == r0.getId()) goto L_0x00e5;
     */
    /* JADX WARNING: Missing block: B:215:0x0466, code skipped:
            if (r2.bot != false) goto L_0x0468;
     */
    /* JADX WARNING: Missing block: B:294:0x06d8, code skipped:
            if (r1.edit_messages != false) goto L_0x06da;
     */
    /* JADX WARNING: Missing block: B:397:0x0bed, code skipped:
            if (r1.bot != false) goto L_0x0bef;
     */
    private void createMenu(android.view.View r22, boolean r23, boolean r24, float r25, float r26, boolean r27) {
        /*
        r21 = this;
        r7 = r21;
        r8 = r22;
        r0 = r7.actionBar;
        r0 = r0.isActionModeShowed();
        if (r0 == 0) goto L_0x000d;
    L_0x000c:
        return;
    L_0x000d:
        r0 = r8 instanceof org.telegram.ui.Cells.ChatMessageCell;
        r1 = 0;
        if (r0 == 0) goto L_0x001a;
    L_0x0012:
        r0 = r8;
        r0 = (org.telegram.ui.Cells.ChatMessageCell) r0;
        r0 = r0.getMessageObject();
        goto L_0x0027;
    L_0x001a:
        r0 = r8 instanceof org.telegram.ui.Cells.ChatActionCell;
        if (r0 == 0) goto L_0x0026;
    L_0x001e:
        r0 = r8;
        r0 = (org.telegram.ui.Cells.ChatActionCell) r0;
        r0 = r0.getMessageObject();
        goto L_0x0027;
    L_0x0026:
        r0 = r1;
    L_0x0027:
        if (r0 != 0) goto L_0x002a;
    L_0x0029:
        return;
    L_0x002a:
        r2 = r7.getMessageType(r0);
        if (r23 == 0) goto L_0x004f;
    L_0x0030:
        r3 = r0.messageOwner;
        r4 = r3.action;
        r4 = r4 instanceof org.telegram.tgnet.TLRPC.TL_messageActionPinMessage;
        if (r4 == 0) goto L_0x004f;
    L_0x0038:
        r0 = r3.reply_to_msg_id;
        r1 = r3.id;
        r2 = 1;
        r3 = 0;
        r4 = 1;
        r22 = r21;
        r23 = r0;
        r24 = r1;
        r25 = r2;
        r26 = r3;
        r27 = r4;
        r22.scrollToMessageId(r23, r24, r25, r26, r27);
        return;
    L_0x004f:
        r7.selectedObject = r1;
        r7.selectedObjectGroup = r1;
        r7.forwardingMessage = r1;
        r7.forwardingMessageGroup = r1;
        r7.selectedObjectToEditCaption = r1;
        r9 = 1;
        r3 = 1;
    L_0x005b:
        if (r3 < 0) goto L_0x0075;
    L_0x005d:
        r4 = r7.selectedMessagesCanCopyIds;
        r4 = r4[r3];
        r4.clear();
        r4 = r7.selectedMessagesCanStarIds;
        r4 = r4[r3];
        r4.clear();
        r4 = r7.selectedMessagesIds;
        r4 = r4[r3];
        r4.clear();
        r3 = r3 + -1;
        goto L_0x005b;
    L_0x0075:
        r21.hideActionMode();
        r7.updatePinnedMessageView(r9);
        if (r27 == 0) goto L_0x0082;
    L_0x007d:
        r3 = r7.getValidGroupedMessage(r0);
        goto L_0x0083;
    L_0x0082:
        r3 = r1;
    L_0x0083:
        r4 = r7.inScheduleMode;
        r10 = 0;
        if (r4 == 0) goto L_0x008a;
    L_0x0088:
        r4 = 0;
        goto L_0x00ac;
    L_0x008a:
        r4 = r7.currentChat;
        if (r4 == 0) goto L_0x00a2;
    L_0x008e:
        r4 = r0.getDialogId();
        r11 = r7.mergeDialogId;
        r6 = (r4 > r11 ? 1 : (r4 == r11 ? 0 : -1));
        if (r6 == 0) goto L_0x0088;
    L_0x0098:
        r4 = r7.currentChat;
        r4 = org.telegram.messenger.ChatObject.canPinMessages(r4);
        if (r4 == 0) goto L_0x0088;
    L_0x00a0:
        r4 = 1;
        goto L_0x00ac;
    L_0x00a2:
        r4 = r7.currentEncryptedChat;
        if (r4 != 0) goto L_0x0088;
    L_0x00a6:
        r4 = r7.userInfo;
        if (r4 == 0) goto L_0x0088;
    L_0x00aa:
        r4 = r4.can_pin_message;
    L_0x00ac:
        if (r4 == 0) goto L_0x00c0;
    L_0x00ae:
        r4 = r0.getId();
        if (r4 <= 0) goto L_0x00c0;
    L_0x00b4:
        r4 = r0.messageOwner;
        r4 = r4.action;
        if (r4 == 0) goto L_0x00be;
    L_0x00ba:
        r4 = r4 instanceof org.telegram.tgnet.TLRPC.TL_messageActionEmpty;
        if (r4 == 0) goto L_0x00c0;
    L_0x00be:
        r4 = 1;
        goto L_0x00c1;
    L_0x00c0:
        r4 = 0;
    L_0x00c1:
        r5 = r0.getDialogId();
        r11 = r7.mergeDialogId;
        r13 = (r5 > r11 ? 1 : (r5 == r11 ? 0 : -1));
        if (r13 == 0) goto L_0x00e7;
    L_0x00cb:
        if (r4 == 0) goto L_0x00e7;
    L_0x00cd:
        r5 = r7.chatInfo;
        if (r5 == 0) goto L_0x00d9;
    L_0x00d1:
        r5 = r5.pinned_msg_id;
        r6 = r0.getId();
        if (r5 == r6) goto L_0x00e5;
    L_0x00d9:
        r5 = r7.userInfo;
        if (r5 == 0) goto L_0x00e7;
    L_0x00dd:
        r5 = r5.pinned_msg_id;
        r6 = r0.getId();
        if (r5 != r6) goto L_0x00e7;
    L_0x00e5:
        r5 = 1;
        goto L_0x00e8;
    L_0x00e7:
        r5 = 0;
    L_0x00e8:
        r6 = r7.currentChat;
        r6 = r0.canEditMessage(r6);
        if (r6 == 0) goto L_0x0104;
    L_0x00f0:
        r6 = r7.chatActivityEnterView;
        r6 = r6.hasAudioToSend();
        if (r6 != 0) goto L_0x0104;
    L_0x00f8:
        r11 = r0.getDialogId();
        r13 = r7.mergeDialogId;
        r6 = (r11 > r13 ? 1 : (r11 == r13 ? 0 : -1));
        if (r6 == 0) goto L_0x0104;
    L_0x0102:
        r6 = 1;
        goto L_0x0105;
    L_0x0104:
        r6 = 0;
    L_0x0105:
        r11 = 2;
        if (r6 == 0) goto L_0x013a;
    L_0x0108:
        if (r3 == 0) goto L_0x013a;
    L_0x010a:
        r6 = r3.messages;
        r6 = r6.size();
        r12 = 0;
        r13 = 0;
    L_0x0112:
        if (r12 >= r6) goto L_0x0135;
    L_0x0114:
        r14 = r3.messages;
        r14 = r14.get(r12);
        r14 = (org.telegram.messenger.MessageObject) r14;
        if (r12 == 0) goto L_0x0126;
    L_0x011e:
        r15 = r14.caption;
        r15 = android.text.TextUtils.isEmpty(r15);
        if (r15 != 0) goto L_0x0132;
    L_0x0126:
        r7.selectedObjectToEditCaption = r14;
        r14 = r14.caption;
        r14 = android.text.TextUtils.isEmpty(r14);
        if (r14 != 0) goto L_0x0132;
    L_0x0130:
        r13 = r13 + 1;
    L_0x0132:
        r12 = r12 + 1;
        goto L_0x0112;
    L_0x0135:
        if (r13 >= r11) goto L_0x0139;
    L_0x0137:
        r6 = 1;
        goto L_0x013a;
    L_0x0139:
        r6 = 0;
    L_0x013a:
        r12 = r7.inScheduleMode;
        if (r12 != 0) goto L_0x019f;
    L_0x013e:
        r12 = r7.currentEncryptedChat;
        if (r12 == 0) goto L_0x014c;
    L_0x0142:
        r12 = r12.layer;
        r12 = org.telegram.messenger.AndroidUtilities.getPeerLayerVersion(r12);
        r13 = 46;
        if (r12 < r13) goto L_0x019f;
    L_0x014c:
        if (r2 != r9) goto L_0x0158;
    L_0x014e:
        r12 = r0.getDialogId();
        r14 = r7.mergeDialogId;
        r16 = (r12 > r14 ? 1 : (r12 == r14 ? 0 : -1));
        if (r16 == 0) goto L_0x019f;
    L_0x0158:
        r12 = r0.messageOwner;
        r12 = r12.action;
        r12 = r12 instanceof org.telegram.tgnet.TLRPC.TL_messageActionSecureValuesSent;
        if (r12 != 0) goto L_0x019f;
    L_0x0160:
        r12 = r7.currentEncryptedChat;
        if (r12 != 0) goto L_0x016a;
    L_0x0164:
        r12 = r0.getId();
        if (r12 < 0) goto L_0x019f;
    L_0x016a:
        r12 = r7.bottomOverlayChat;
        if (r12 == 0) goto L_0x0174;
    L_0x016e:
        r12 = r12.getVisibility();
        if (r12 == 0) goto L_0x019f;
    L_0x0174:
        r12 = r7.currentChat;
        if (r12 == 0) goto L_0x019d;
    L_0x0178:
        r12 = org.telegram.messenger.ChatObject.isNotInChat(r12);
        if (r12 != 0) goto L_0x019f;
    L_0x017e:
        r12 = r7.currentChat;
        r12 = org.telegram.messenger.ChatObject.isChannel(r12);
        if (r12 == 0) goto L_0x0194;
    L_0x0186:
        r12 = r7.currentChat;
        r12 = org.telegram.messenger.ChatObject.canPost(r12);
        if (r12 != 0) goto L_0x0194;
    L_0x018e:
        r12 = r7.currentChat;
        r12 = r12.megagroup;
        if (r12 == 0) goto L_0x019f;
    L_0x0194:
        r12 = r7.currentChat;
        r12 = org.telegram.messenger.ChatObject.canSendMessages(r12);
        if (r12 != 0) goto L_0x019d;
    L_0x019c:
        goto L_0x019f;
    L_0x019d:
        r12 = 1;
        goto L_0x01a0;
    L_0x019f:
        r12 = 0;
    L_0x01a0:
        if (r23 != 0) goto L_0x02e8;
    L_0x01a2:
        if (r2 < r11) goto L_0x02e8;
    L_0x01a4:
        r13 = 20;
        if (r2 != r13) goto L_0x01aa;
    L_0x01a8:
        goto L_0x02e8;
    L_0x01aa:
        r1 = r7.chatActivityEnterView;
        if (r1 == 0) goto L_0x01bd;
    L_0x01ae:
        r1 = r1.isRecordingAudioVideo();
        if (r1 != 0) goto L_0x01bc;
    L_0x01b4:
        r1 = r7.chatActivityEnterView;
        r1 = r1.isRecordLocked();
        if (r1 == 0) goto L_0x01bd;
    L_0x01bc:
        return;
    L_0x01bd:
        r1 = r7.actionBar;
        r1 = r1.createActionMode();
        r2 = 12;
        r1 = r1.getItem(r2);
        if (r1 == 0) goto L_0x01ce;
    L_0x01cb:
        r1.setVisibility(r10);
    L_0x01ce:
        r1 = r7.bottomMessagesActionContainer;
        r1.setVisibility(r10);
        r1 = r7.chatActivityEnterView;
        r1 = r1.getMeasuredHeight();
        r2 = NUM; // 0x424CLASSNAME float:51.0 double:5.495378504E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r18 = r1 - r2;
        r1 = r7.chatActivityEnterView;
        r1 = r1.getVisibility();
        if (r1 != 0) goto L_0x0247;
    L_0x01e9:
        r1 = new java.util.ArrayList;
        r1.<init>();
        r2 = r7.chatActivityEnterView;
        r1.add(r2);
        r2 = r7.mentionContainer;
        if (r2 == 0) goto L_0x0202;
    L_0x01f7:
        r2 = r2.getVisibility();
        if (r2 != 0) goto L_0x0202;
    L_0x01fd:
        r2 = r7.mentionContainer;
        r1.add(r2);
    L_0x0202:
        r2 = r7.stickersPanel;
        if (r2 == 0) goto L_0x0211;
    L_0x0206:
        r2 = r2.getVisibility();
        if (r2 != 0) goto L_0x0211;
    L_0x020c:
        r2 = r7.stickersPanel;
        r1.add(r2);
    L_0x0211:
        r12 = r7.actionBar;
        r13 = r7.bottomMessagesActionContainer;
        r14 = 0;
        r2 = new android.view.View[r10];
        r1 = r1.toArray(r2);
        r15 = r1;
        r15 = (android.view.View[]) r15;
        r1 = 3;
        r1 = new boolean[r1];
        r1 = {0, 1, 1};
        r2 = r7.chatListView;
        r16 = r1;
        r17 = r2;
        r12.showActionMode(r13, r14, r15, r16, r17, r18);
        r1 = r21.getParentActivity();
        if (r1 == 0) goto L_0x023d;
    L_0x0234:
        r1 = r21.getParentActivity();
        r1 = (org.telegram.ui.LaunchActivity) r1;
        r1.hideVisibleActionMode();
    L_0x023d:
        r1 = r7.chatActivityEnterView;
        r1 = r1.getEditField();
        r1.setAllowDrawCursor(r10);
        goto L_0x0277;
    L_0x0247:
        r1 = r7.bottomOverlayChat;
        r1 = r1.getVisibility();
        if (r1 != 0) goto L_0x0268;
    L_0x024f:
        r12 = r7.actionBar;
        r13 = r7.bottomMessagesActionContainer;
        r14 = 0;
        r15 = new android.view.View[r9];
        r1 = r7.bottomOverlayChat;
        r15[r10] = r1;
        r1 = new boolean[r9];
        r1[r10] = r9;
        r2 = r7.chatListView;
        r16 = r1;
        r17 = r2;
        r12.showActionMode(r13, r14, r15, r16, r17, r18);
        goto L_0x0277;
    L_0x0268:
        r12 = r7.actionBar;
        r13 = r7.bottomMessagesActionContainer;
        r14 = 0;
        r15 = 0;
        r16 = 0;
        r1 = r7.chatListView;
        r17 = r1;
        r12.showActionMode(r13, r14, r15, r16, r17, r18);
    L_0x0277:
        r1 = r7.scrimPopupWindow;
        if (r1 == 0) goto L_0x027e;
    L_0x027b:
        r1.dismiss();
    L_0x027e:
        r1 = r7.chatLayoutManager;
        r1.setCanScrollVertically(r9);
        r7.updatePinnedMessageView(r9);
        r1 = new android.animation.AnimatorSet;
        r1.<init>();
        r2 = new java.util.ArrayList;
        r2.<init>();
        r3 = 0;
    L_0x0291:
        r4 = r7.actionModeViews;
        r4 = r4.size();
        if (r3 >= r4) goto L_0x02be;
    L_0x0299:
        r4 = r7.actionModeViews;
        r4 = r4.get(r3);
        r4 = (android.view.View) r4;
        r5 = org.telegram.ui.ActionBar.ActionBar.getCurrentActionBarHeight();
        r5 = r5 / r11;
        r5 = (float) r5;
        r4.setPivotY(r5);
        org.telegram.messenger.AndroidUtilities.clearDrawableAnimation(r4);
        r5 = android.view.View.SCALE_Y;
        r6 = new float[r11];
        r6 = {NUM, NUM};
        r4 = android.animation.ObjectAnimator.ofFloat(r4, r5, r6);
        r2.add(r4);
        r3 = r3 + 1;
        goto L_0x0291;
    L_0x02be:
        r1.playTogether(r2);
        r2 = 250; // 0xfa float:3.5E-43 double:1.235E-321;
        r1.setDuration(r2);
        r1.start();
        r1 = r24;
        r7.addToSelectedMessages(r0, r1);
        r0 = r7.selectedMessagesCountTextView;
        r1 = r7.selectedMessagesIds;
        r1 = r1[r10];
        r1 = r1.size();
        r2 = r7.selectedMessagesIds;
        r2 = r2[r9];
        r2 = r2.size();
        r1 = r1 + r2;
        r0.setNumber(r1, r10);
        r21.updateVisibleRows();
        return;
    L_0x02e8:
        r13 = r21.getParentActivity();
        if (r13 != 0) goto L_0x02ef;
    L_0x02ee:
        return;
    L_0x02ef:
        r13 = new java.util.ArrayList;
        r13.<init>();
        r14 = new java.util.ArrayList;
        r14.<init>();
        r15 = new java.util.ArrayList;
        r15.<init>();
        if (r2 >= 0) goto L_0x0319;
    L_0x0300:
        r1 = -1;
        if (r2 != r1) goto L_0x0316;
    L_0x0303:
        if (r23 == 0) goto L_0x0316;
    L_0x0305:
        r1 = r0.isSending();
        if (r1 != 0) goto L_0x0311;
    L_0x030b:
        r1 = r0.isEditing();
        if (r1 == 0) goto L_0x0316;
    L_0x0311:
        r1 = r7.currentEncryptedChat;
        if (r1 != 0) goto L_0x0316;
    L_0x0315:
        goto L_0x0319;
    L_0x0316:
        r1 = 4;
        goto L_0x0e97;
    L_0x0319:
        r7.selectedObject = r0;
        r7.selectedObjectGroup = r3;
        r1 = -1;
        r3 = "Copy";
        r17 = NUM; // 0x7var_ce float:1.7945515E38 double:1.0529357313E-314;
        if (r2 != r1) goto L_0x0374;
    L_0x0325:
        r0 = r7.selectedObject;
        r1 = r0.type;
        if (r1 == 0) goto L_0x033b;
    L_0x032b:
        r0 = r0.isAnimatedEmoji();
        if (r0 != 0) goto L_0x033b;
    L_0x0331:
        r0 = r7.selectedObject;
        r1 = r7.selectedObjectGroup;
        r0 = r7.getMessageCaption(r0, r1);
        if (r0 == 0) goto L_0x0357;
    L_0x033b:
        r0 = NUM; // 0x7f0e0339 float:1.887671E38 double:1.053162564E-314;
        r0 = org.telegram.messenger.LocaleController.getString(r3, r0);
        r14.add(r0);
        r0 = 3;
        r0 = java.lang.Integer.valueOf(r0);
        r15.add(r0);
        r0 = NUM; // 0x7var_cd float:1.7945513E38 double:1.052935731E-314;
        r0 = java.lang.Integer.valueOf(r0);
        r13.add(r0);
    L_0x0357:
        r0 = NUM; // 0x7f0e021f float:1.8876139E38 double:1.053162425E-314;
        r1 = "CancelSending";
        r0 = org.telegram.messenger.LocaleController.getString(r1, r0);
        r14.add(r0);
        r0 = 24;
        r0 = java.lang.Integer.valueOf(r0);
        r15.add(r0);
        r0 = java.lang.Integer.valueOf(r17);
        r13.add(r0);
        goto L_0x0316;
    L_0x0374:
        r1 = NUM; // 0x7f0e0382 float:1.8876859E38 double:1.0531626003E-314;
        r11 = "Delete";
        if (r2 != 0) goto L_0x03af;
    L_0x037b:
        r0 = NUM; // 0x7f0e099a float:1.8880023E38 double:1.053163371E-314;
        r2 = "Retry";
        r0 = org.telegram.messenger.LocaleController.getString(r2, r0);
        r14.add(r0);
        r0 = java.lang.Integer.valueOf(r10);
        r15.add(r0);
        r0 = NUM; // 0x7var_f6 float:1.7945596E38 double:1.052935751E-314;
        r0 = java.lang.Integer.valueOf(r0);
        r13.add(r0);
        r0 = org.telegram.messenger.LocaleController.getString(r11, r1);
        r14.add(r0);
        r0 = java.lang.Integer.valueOf(r9);
        r15.add(r0);
        r0 = java.lang.Integer.valueOf(r17);
        r13.add(r0);
        goto L_0x0316;
    L_0x03af:
        if (r2 != r9) goto L_0x04f2;
    L_0x03b1:
        r2 = r7.currentChat;
        if (r2 == 0) goto L_0x04a8;
    L_0x03b5:
        if (r12 == 0) goto L_0x03d6;
    L_0x03b7:
        r2 = NUM; // 0x7f0e0961 float:1.8879907E38 double:1.053163343E-314;
        r3 = "Reply";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r14.add(r2);
        r2 = 8;
        r2 = java.lang.Integer.valueOf(r2);
        r15.add(r2);
        r2 = NUM; // 0x7var_f3 float:1.794559E38 double:1.0529357496E-314;
        r2 = java.lang.Integer.valueOf(r2);
        r13.add(r2);
    L_0x03d6:
        if (r5 == 0) goto L_0x03f8;
    L_0x03d8:
        r2 = NUM; // 0x7f0e0b5a float:1.8880932E38 double:1.0531635924E-314;
        r3 = "UnpinMessage";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r14.add(r2);
        r2 = 14;
        r2 = java.lang.Integer.valueOf(r2);
        r15.add(r2);
        r2 = NUM; // 0x7var_ float:1.7945635E38 double:1.0529357604E-314;
        r2 = java.lang.Integer.valueOf(r2);
        r13.add(r2);
        goto L_0x0419;
    L_0x03f8:
        if (r4 == 0) goto L_0x0419;
    L_0x03fa:
        r2 = NUM; // 0x7f0e08d9 float:1.8879632E38 double:1.0531632757E-314;
        r3 = "PinMessage";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r14.add(r2);
        r2 = 13;
        r2 = java.lang.Integer.valueOf(r2);
        r15.add(r2);
        r2 = NUM; // 0x7var_f1 float:1.7945586E38 double:1.0529357486E-314;
        r2 = java.lang.Integer.valueOf(r2);
        r13.add(r2);
    L_0x0419:
        r2 = r7.currentChat;
        r2 = r0.canEditMessage(r2);
        if (r2 == 0) goto L_0x0440;
    L_0x0421:
        r2 = NUM; // 0x7f0e03e5 float:1.887706E38 double:1.053162649E-314;
        r3 = "Edit";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r14.add(r2);
        r2 = 12;
        r2 = java.lang.Integer.valueOf(r2);
        r15.add(r2);
        r2 = NUM; // 0x7var_d0 float:1.794552E38 double:1.0529357323E-314;
        r2 = java.lang.Integer.valueOf(r2);
        r13.add(r2);
    L_0x0440:
        r2 = r7.selectedObject;
        r3 = r2.contentType;
        if (r3 != 0) goto L_0x0487;
    L_0x0446:
        r2 = r2.isMediaEmptyWebpage();
        if (r2 != 0) goto L_0x0487;
    L_0x044c:
        r2 = r7.selectedObject;
        r2 = r2.getId();
        if (r2 <= 0) goto L_0x0487;
    L_0x0454:
        r2 = r7.selectedObject;
        r2 = r2.isOut();
        if (r2 != 0) goto L_0x0487;
    L_0x045c:
        r2 = r7.currentChat;
        if (r2 != 0) goto L_0x0468;
    L_0x0460:
        r2 = r7.currentUser;
        if (r2 == 0) goto L_0x0487;
    L_0x0464:
        r2 = r2.bot;
        if (r2 == 0) goto L_0x0487;
    L_0x0468:
        r2 = NUM; // 0x7f0e0964 float:1.8879913E38 double:1.0531633444E-314;
        r3 = "ReportChat";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r14.add(r2);
        r2 = 23;
        r2 = java.lang.Integer.valueOf(r2);
        r15.add(r2);
        r2 = NUM; // 0x7var_f4 float:1.7945592E38 double:1.05293575E-314;
        r2 = java.lang.Integer.valueOf(r2);
        r13.add(r2);
    L_0x0487:
        r2 = r7.inScheduleMode;
        r3 = r7.currentChat;
        r0 = r0.canDeleteMessage(r2, r3);
        if (r0 == 0) goto L_0x0316;
    L_0x0491:
        r0 = org.telegram.messenger.LocaleController.getString(r11, r1);
        r14.add(r0);
        r0 = java.lang.Integer.valueOf(r9);
        r15.add(r0);
        r0 = java.lang.Integer.valueOf(r17);
        r13.add(r0);
        goto L_0x0316;
    L_0x04a8:
        r2 = r7.selectedObject;
        r2 = r2.getId();
        if (r2 <= 0) goto L_0x04d1;
    L_0x04b0:
        if (r12 == 0) goto L_0x04d1;
    L_0x04b2:
        r2 = NUM; // 0x7f0e0961 float:1.8879907E38 double:1.053163343E-314;
        r3 = "Reply";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r14.add(r2);
        r2 = 8;
        r2 = java.lang.Integer.valueOf(r2);
        r15.add(r2);
        r2 = NUM; // 0x7var_f3 float:1.794559E38 double:1.0529357496E-314;
        r2 = java.lang.Integer.valueOf(r2);
        r13.add(r2);
    L_0x04d1:
        r2 = r7.inScheduleMode;
        r3 = r7.currentChat;
        r0 = r0.canDeleteMessage(r2, r3);
        if (r0 == 0) goto L_0x0316;
    L_0x04db:
        r0 = org.telegram.messenger.LocaleController.getString(r11, r1);
        r14.add(r0);
        r0 = java.lang.Integer.valueOf(r9);
        r15.add(r0);
        r0 = java.lang.Integer.valueOf(r17);
        r13.add(r0);
        goto L_0x0316;
    L_0x04f2:
        r9 = 20;
        if (r2 != r9) goto L_0x0547;
    L_0x04f6:
        r0 = NUM; // 0x7f0e099a float:1.8880023E38 double:1.053163371E-314;
        r2 = "Retry";
        r0 = org.telegram.messenger.LocaleController.getString(r2, r0);
        r14.add(r0);
        r0 = java.lang.Integer.valueOf(r10);
        r15.add(r0);
        r0 = NUM; // 0x7var_f6 float:1.7945596E38 double:1.052935751E-314;
        r0 = java.lang.Integer.valueOf(r0);
        r13.add(r0);
        r0 = NUM; // 0x7f0e0339 float:1.887671E38 double:1.053162564E-314;
        r0 = org.telegram.messenger.LocaleController.getString(r3, r0);
        r14.add(r0);
        r0 = 3;
        r0 = java.lang.Integer.valueOf(r0);
        r15.add(r0);
        r0 = NUM; // 0x7var_cd float:1.7945513E38 double:1.052935731E-314;
        r0 = java.lang.Integer.valueOf(r0);
        r13.add(r0);
        r0 = org.telegram.messenger.LocaleController.getString(r11, r1);
        r14.add(r0);
        r0 = 1;
        r1 = java.lang.Integer.valueOf(r0);
        r15.add(r1);
        r0 = java.lang.Integer.valueOf(r17);
        r13.add(r0);
        goto L_0x0316;
    L_0x0547:
        r9 = r7.currentEncryptedChat;
        r19 = NUM; // 0x7var_cf float:1.7945517E38 double:1.052935732E-314;
        r20 = NUM; // 0x7var_ float:1.7945618E38 double:1.0529357565E-314;
        r1 = "ShareFile";
        if (r9 != 0) goto L_0x0CLASSNAME;
    L_0x0553:
        r9 = r7.inScheduleMode;
        if (r9 == 0) goto L_0x0576;
    L_0x0557:
        r9 = NUM; // 0x7f0e064c float:1.8878307E38 double:1.053162953E-314;
        r10 = "MessageScheduleSend";
        r9 = org.telegram.messenger.LocaleController.getString(r10, r9);
        r14.add(r9);
        r9 = 100;
        r9 = java.lang.Integer.valueOf(r9);
        r15.add(r9);
        r9 = NUM; // 0x7var_ float:1.7945718E38 double:1.0529357807E-314;
        r9 = java.lang.Integer.valueOf(r9);
        r13.add(r9);
    L_0x0576:
        r9 = r7.selectedObject;
        r9 = r9.messageOwner;
        r9 = r9.action;
        r9 = r9 instanceof org.telegram.tgnet.TLRPC.TL_messageActionPhoneCall;
        if (r9 == 0) goto L_0x05e0;
    L_0x0580:
        r9 = r0.messageOwner;
        r9 = r9.action;
        r9 = (org.telegram.tgnet.TLRPC.TL_messageActionPhoneCall) r9;
        r10 = r9.reason;
        r8 = r10 instanceof org.telegram.tgnet.TLRPC.TL_phoneCallDiscardReasonMissed;
        if (r8 != 0) goto L_0x0590;
    L_0x058c:
        r8 = r10 instanceof org.telegram.tgnet.TLRPC.TL_phoneCallDiscardReasonBusy;
        if (r8 == 0) goto L_0x059c;
    L_0x0590:
        r8 = r0.isOutOwner();
        if (r8 != 0) goto L_0x059c;
    L_0x0596:
        r8 = NUM; // 0x7f0e01ff float:1.8876074E38 double:1.053162409E-314;
        r10 = "CallBack";
        goto L_0x05a1;
    L_0x059c:
        r8 = NUM; // 0x7f0e01fe float:1.8876072E38 double:1.0531624086E-314;
        r10 = "CallAgain";
    L_0x05a1:
        r8 = org.telegram.messenger.LocaleController.getString(r10, r8);
        r14.add(r8);
        r8 = 18;
        r8 = java.lang.Integer.valueOf(r8);
        r15.add(r8);
        r8 = NUM; // 0x7var_c7 float:1.79455E38 double:1.052935728E-314;
        r8 = java.lang.Integer.valueOf(r8);
        r13.add(r8);
        r8 = org.telegram.ui.Components.voip.VoIPHelper.canRateCall(r9);
        if (r8 == 0) goto L_0x05e0;
    L_0x05c1:
        r8 = NUM; // 0x7f0e0206 float:1.8876088E38 double:1.0531624126E-314;
        r9 = "CallMessageReportProblem";
        r8 = org.telegram.messenger.LocaleController.getString(r9, r8);
        r14.add(r8);
        r8 = 19;
        r8 = java.lang.Integer.valueOf(r8);
        r15.add(r8);
        r8 = NUM; // 0x7var_d1 float:1.7945521E38 double:1.052935733E-314;
        r8 = java.lang.Integer.valueOf(r8);
        r13.add(r8);
    L_0x05e0:
        if (r12 == 0) goto L_0x0601;
    L_0x05e2:
        r8 = NUM; // 0x7f0e0961 float:1.8879907E38 double:1.053163343E-314;
        r9 = "Reply";
        r8 = org.telegram.messenger.LocaleController.getString(r9, r8);
        r14.add(r8);
        r8 = 8;
        r8 = java.lang.Integer.valueOf(r8);
        r15.add(r8);
        r8 = NUM; // 0x7var_f3 float:1.794559E38 double:1.0529357496E-314;
        r8 = java.lang.Integer.valueOf(r8);
        r13.add(r8);
    L_0x0601:
        r8 = r7.selectedObject;
        r9 = r8.type;
        if (r9 == 0) goto L_0x0617;
    L_0x0607:
        r8 = r8.isAnimatedEmoji();
        if (r8 != 0) goto L_0x0617;
    L_0x060d:
        r8 = r7.selectedObject;
        r9 = r7.selectedObjectGroup;
        r8 = r7.getMessageCaption(r8, r9);
        if (r8 == 0) goto L_0x0633;
    L_0x0617:
        r8 = NUM; // 0x7f0e0339 float:1.887671E38 double:1.053162564E-314;
        r8 = org.telegram.messenger.LocaleController.getString(r3, r8);
        r14.add(r8);
        r8 = 3;
        r8 = java.lang.Integer.valueOf(r8);
        r15.add(r8);
        r8 = NUM; // 0x7var_cd float:1.7945513E38 double:1.052935731E-314;
        r8 = java.lang.Integer.valueOf(r8);
        r13.add(r8);
    L_0x0633:
        r8 = r7.inScheduleMode;
        if (r8 != 0) goto L_0x066c;
    L_0x0637:
        r8 = r7.currentChat;
        r8 = org.telegram.messenger.ChatObject.isChannel(r8);
        if (r8 == 0) goto L_0x066c;
    L_0x063f:
        r8 = r7.currentChat;
        r9 = r8.megagroup;
        if (r9 != 0) goto L_0x064d;
    L_0x0645:
        r8 = r8.username;
        r8 = android.text.TextUtils.isEmpty(r8);
        if (r8 != 0) goto L_0x066c;
    L_0x064d:
        r8 = NUM; // 0x7f0e033a float:1.8876713E38 double:1.0531625647E-314;
        r9 = "CopyLink";
        r8 = org.telegram.messenger.LocaleController.getString(r9, r8);
        r14.add(r8);
        r8 = 22;
        r8 = java.lang.Integer.valueOf(r8);
        r15.add(r8);
        r8 = NUM; // 0x7var_df float:1.794555E38 double:1.0529357397E-314;
        r8 = java.lang.Integer.valueOf(r8);
        r13.add(r8);
    L_0x066c:
        r8 = 2;
        if (r2 != r8) goto L_0x06fb;
    L_0x066f:
        r1 = r7.inScheduleMode;
        if (r1 != 0) goto L_0x0b00;
    L_0x0673:
        r1 = r7.selectedObject;
        r1 = r1.type;
        r2 = 17;
        if (r1 != r2) goto L_0x0b00;
    L_0x067b:
        r1 = r0.isPollClosed();
        if (r1 != 0) goto L_0x0b00;
    L_0x0681:
        r1 = r0.isVoted();
        if (r1 == 0) goto L_0x06a6;
    L_0x0687:
        r1 = NUM; // 0x7f0e0b60 float:1.8880944E38 double:1.0531635953E-314;
        r2 = "Unvote";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 25;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = NUM; // 0x7var_a float:1.7945637E38 double:1.052935761E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
    L_0x06a6:
        r1 = r0.isForwarded();
        if (r1 != 0) goto L_0x0b00;
    L_0x06ac:
        r1 = r0.isOut();
        if (r1 == 0) goto L_0x06c0;
    L_0x06b2:
        r1 = r7.currentChat;
        r1 = org.telegram.messenger.ChatObject.isChannel(r1);
        if (r1 == 0) goto L_0x06da;
    L_0x06ba:
        r1 = r7.currentChat;
        r1 = r1.megagroup;
        if (r1 != 0) goto L_0x06da;
    L_0x06c0:
        r1 = r7.currentChat;
        r1 = org.telegram.messenger.ChatObject.isChannel(r1);
        if (r1 == 0) goto L_0x0b00;
    L_0x06c8:
        r1 = r7.currentChat;
        r2 = r1.megagroup;
        if (r2 != 0) goto L_0x0b00;
    L_0x06ce:
        r2 = r1.creator;
        if (r2 != 0) goto L_0x06da;
    L_0x06d2:
        r1 = r1.admin_rights;
        if (r1 == 0) goto L_0x0b00;
    L_0x06d6:
        r1 = r1.edit_messages;
        if (r1 == 0) goto L_0x0b00;
    L_0x06da:
        r1 = NUM; // 0x7f0e0aa3 float:1.888056E38 double:1.053163502E-314;
        r2 = "StopPoll";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 26;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = NUM; // 0x7var_f2 float:1.7945588E38 double:1.052935749E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
        goto L_0x0b00;
    L_0x06fb:
        r8 = 3;
        if (r2 != r8) goto L_0x0733;
    L_0x06fe:
        r1 = r7.selectedObject;
        r1 = r1.messageOwner;
        r1 = r1.media;
        r2 = r1 instanceof org.telegram.tgnet.TLRPC.TL_messageMediaWebPage;
        if (r2 == 0) goto L_0x0b00;
    L_0x0708:
        r1 = r1.webpage;
        r1 = r1.document;
        r1 = org.telegram.messenger.MessageObject.isNewGifDocument(r1);
        if (r1 == 0) goto L_0x0b00;
    L_0x0712:
        r1 = NUM; // 0x7f0e09ab float:1.8880057E38 double:1.0531633794E-314;
        r2 = "SaveToGIFs";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 11;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = NUM; // 0x7var_d4 float:1.7945527E38 double:1.0529357343E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
        goto L_0x0b00;
    L_0x0733:
        r8 = 4;
        if (r2 != r8) goto L_0x084f;
    L_0x0736:
        r2 = r7.selectedObject;
        r2 = r2.isVideo();
        if (r2 == 0) goto L_0x077e;
    L_0x073e:
        r2 = r7.selectedObject;
        r2 = r2.needDrawBluredPreview();
        if (r2 != 0) goto L_0x0b00;
    L_0x0746:
        r2 = NUM; // 0x7f0e09ac float:1.888006E38 double:1.05316338E-314;
        r3 = "SaveToGallery";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r14.add(r2);
        r2 = java.lang.Integer.valueOf(r8);
        r15.add(r2);
        r2 = NUM; // 0x7var_d3 float:1.7945525E38 double:1.052935734E-314;
        r2 = java.lang.Integer.valueOf(r2);
        r13.add(r2);
        r2 = NUM; // 0x7f0e0a3f float:1.8880358E38 double:1.0531634526E-314;
        r1 = org.telegram.messenger.LocaleController.getString(r1, r2);
        r14.add(r1);
        r1 = 6;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = java.lang.Integer.valueOf(r20);
        r13.add(r1);
        goto L_0x0b00;
    L_0x077e:
        r2 = r7.selectedObject;
        r2 = r2.isMusic();
        if (r2 == 0) goto L_0x07bd;
    L_0x0786:
        r2 = NUM; // 0x7f0e09ae float:1.8880064E38 double:1.053163381E-314;
        r3 = "SaveToMusic";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r14.add(r2);
        r2 = 10;
        r2 = java.lang.Integer.valueOf(r2);
        r15.add(r2);
        r2 = java.lang.Integer.valueOf(r19);
        r13.add(r2);
        r2 = NUM; // 0x7f0e0a3f float:1.8880358E38 double:1.0531634526E-314;
        r1 = org.telegram.messenger.LocaleController.getString(r1, r2);
        r14.add(r1);
        r1 = 6;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = java.lang.Integer.valueOf(r20);
        r13.add(r1);
        goto L_0x0b00;
    L_0x07bd:
        r2 = r7.selectedObject;
        r2 = r2.getDocument();
        if (r2 == 0) goto L_0x0827;
    L_0x07c5:
        r2 = r7.selectedObject;
        r2 = r2.getDocument();
        r2 = org.telegram.messenger.MessageObject.isNewGifDocument(r2);
        if (r2 == 0) goto L_0x07f0;
    L_0x07d1:
        r2 = NUM; // 0x7f0e09ab float:1.8880057E38 double:1.0531633794E-314;
        r3 = "SaveToGIFs";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r14.add(r2);
        r2 = 11;
        r2 = java.lang.Integer.valueOf(r2);
        r15.add(r2);
        r2 = NUM; // 0x7var_d4 float:1.7945527E38 double:1.0529357343E-314;
        r2 = java.lang.Integer.valueOf(r2);
        r13.add(r2);
    L_0x07f0:
        r2 = NUM; // 0x7f0e09aa float:1.8880055E38 double:1.053163379E-314;
        r3 = "SaveToDownloads";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r14.add(r2);
        r2 = 10;
        r2 = java.lang.Integer.valueOf(r2);
        r15.add(r2);
        r2 = java.lang.Integer.valueOf(r19);
        r13.add(r2);
        r2 = NUM; // 0x7f0e0a3f float:1.8880358E38 double:1.0531634526E-314;
        r1 = org.telegram.messenger.LocaleController.getString(r1, r2);
        r14.add(r1);
        r1 = 6;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = java.lang.Integer.valueOf(r20);
        r13.add(r1);
        goto L_0x0b00;
    L_0x0827:
        r1 = r7.selectedObject;
        r1 = r1.needDrawBluredPreview();
        if (r1 != 0) goto L_0x0b00;
    L_0x082f:
        r1 = NUM; // 0x7f0e09ac float:1.888006E38 double:1.05316338E-314;
        r2 = "SaveToGallery";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 4;
        r2 = java.lang.Integer.valueOf(r1);
        r15.add(r2);
        r1 = NUM; // 0x7var_d3 float:1.7945525E38 double:1.052935734E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
        goto L_0x0b00;
    L_0x084f:
        r8 = 5;
        if (r2 != r8) goto L_0x08a7;
    L_0x0852:
        r2 = NUM; // 0x7f0e00fc float:1.8875549E38 double:1.053162281E-314;
        r3 = "ApplyLocalizationFile";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r14.add(r2);
        r2 = 5;
        r2 = java.lang.Integer.valueOf(r2);
        r15.add(r2);
        r2 = NUM; // 0x7var_dd float:1.7945545E38 double:1.0529357387E-314;
        r2 = java.lang.Integer.valueOf(r2);
        r13.add(r2);
        r2 = NUM; // 0x7f0e09aa float:1.8880055E38 double:1.053163379E-314;
        r3 = "SaveToDownloads";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r14.add(r2);
        r8 = 10;
        r2 = java.lang.Integer.valueOf(r8);
        r15.add(r2);
        r2 = java.lang.Integer.valueOf(r19);
        r13.add(r2);
        r2 = NUM; // 0x7f0e0a3f float:1.8880358E38 double:1.0531634526E-314;
        r1 = org.telegram.messenger.LocaleController.getString(r1, r2);
        r14.add(r1);
        r1 = 6;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = java.lang.Integer.valueOf(r20);
        r13.add(r1);
        goto L_0x0b00;
    L_0x08a7:
        r8 = 10;
        if (r2 != r8) goto L_0x0900;
    L_0x08ab:
        r2 = NUM; // 0x7f0e00fe float:1.8875553E38 double:1.053162282E-314;
        r3 = "ApplyThemeFile";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r14.add(r2);
        r2 = 5;
        r2 = java.lang.Integer.valueOf(r2);
        r15.add(r2);
        r2 = NUM; // 0x7var_ float:1.7945625E38 double:1.052935758E-314;
        r2 = java.lang.Integer.valueOf(r2);
        r13.add(r2);
        r2 = NUM; // 0x7f0e09aa float:1.8880055E38 double:1.053163379E-314;
        r3 = "SaveToDownloads";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r14.add(r2);
        r2 = 10;
        r2 = java.lang.Integer.valueOf(r2);
        r15.add(r2);
        r2 = java.lang.Integer.valueOf(r19);
        r13.add(r2);
        r2 = NUM; // 0x7f0e0a3f float:1.8880358E38 double:1.0531634526E-314;
        r1 = org.telegram.messenger.LocaleController.getString(r1, r2);
        r14.add(r1);
        r8 = 6;
        r1 = java.lang.Integer.valueOf(r8);
        r15.add(r1);
        r1 = java.lang.Integer.valueOf(r20);
        r13.add(r1);
        goto L_0x0b00;
    L_0x0900:
        r8 = 6;
        if (r2 != r8) goto L_0x0958;
    L_0x0903:
        r2 = NUM; // 0x7f0e09ac float:1.888006E38 double:1.05316338E-314;
        r3 = "SaveToGallery";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r14.add(r2);
        r2 = 7;
        r2 = java.lang.Integer.valueOf(r2);
        r15.add(r2);
        r2 = NUM; // 0x7var_d3 float:1.7945525E38 double:1.052935734E-314;
        r2 = java.lang.Integer.valueOf(r2);
        r13.add(r2);
        r2 = NUM; // 0x7f0e09aa float:1.8880055E38 double:1.053163379E-314;
        r3 = "SaveToDownloads";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r14.add(r2);
        r2 = 10;
        r2 = java.lang.Integer.valueOf(r2);
        r15.add(r2);
        r2 = java.lang.Integer.valueOf(r19);
        r13.add(r2);
        r2 = NUM; // 0x7f0e0a3f float:1.8880358E38 double:1.0531634526E-314;
        r1 = org.telegram.messenger.LocaleController.getString(r1, r2);
        r14.add(r1);
        r1 = 6;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = java.lang.Integer.valueOf(r20);
        r13.add(r1);
        goto L_0x0b00;
    L_0x0958:
        r1 = 7;
        if (r2 != r1) goto L_0x0a05;
    L_0x095b:
        r1 = r7.selectedObject;
        r1 = r1.isMask();
        if (r1 == 0) goto L_0x0984;
    L_0x0963:
        r1 = NUM; // 0x7f0e00ca float:1.8875447E38 double:1.0531622564E-314;
        r2 = "AddToMasks";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 9;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = NUM; // 0x7var_ float:1.7945622E38 double:1.0529357575E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
        goto L_0x0b00;
    L_0x0984:
        r1 = NUM; // 0x7f0e00cb float:1.887545E38 double:1.053162257E-314;
        r2 = "AddToStickers";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 9;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = NUM; // 0x7var_ float:1.7945622E38 double:1.0529357575E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
        r1 = r7.selectedObject;
        r1 = r1.getDocument();
        r2 = r21.getMediaDataController();
        r2 = r2.isStickerInFavorites(r1);
        if (r2 != 0) goto L_0x09e4;
    L_0x09b3:
        r2 = r21.getMediaDataController();
        r2 = r2.canAddStickerToFavorites();
        if (r2 == 0) goto L_0x0b00;
    L_0x09bd:
        r1 = org.telegram.messenger.MessageObject.isStickerHasSet(r1);
        if (r1 == 0) goto L_0x0b00;
    L_0x09c3:
        r1 = NUM; // 0x7f0e00c9 float:1.8875445E38 double:1.053162256E-314;
        r2 = "AddToFavorites";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 20;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = NUM; // 0x7var_d1 float:1.7945521E38 double:1.052935733E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
        goto L_0x0b00;
    L_0x09e4:
        r1 = NUM; // 0x7f0e039a float:1.8876908E38 double:1.053162612E-314;
        r2 = "DeleteFromFavorites";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 21;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = NUM; // 0x7var_ float:1.794563E38 double:1.0529357594E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
        goto L_0x0b00;
    L_0x0a05:
        r1 = 8;
        if (r2 != r1) goto L_0x0aa7;
    L_0x0a09:
        r1 = r21.getMessagesController();
        r2 = r7.selectedObject;
        r2 = r2.messageOwner;
        r2 = r2.media;
        r2 = r2.user_id;
        r2 = java.lang.Integer.valueOf(r2);
        r1 = r1.getUser(r2);
        if (r1 == 0) goto L_0x0a5c;
    L_0x0a1f:
        r2 = r1.id;
        r8 = r21.getUserConfig();
        r8 = r8.getClientUserId();
        if (r2 == r8) goto L_0x0a5c;
    L_0x0a2b:
        r2 = r21.getContactsController();
        r2 = r2.contactsDict;
        r1 = r1.id;
        r1 = java.lang.Integer.valueOf(r1);
        r1 = r2.get(r1);
        if (r1 != 0) goto L_0x0a5c;
    L_0x0a3d:
        r1 = NUM; // 0x7f0e00b1 float:1.8875397E38 double:1.053162244E-314;
        r2 = "AddContactTitle";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 15;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = NUM; // 0x7var_c3 float:1.7945493E38 double:1.052935726E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
    L_0x0a5c:
        r1 = r7.selectedObject;
        r1 = r1.messageOwner;
        r1 = r1.media;
        r1 = r1.phone_number;
        r1 = android.text.TextUtils.isEmpty(r1);
        if (r1 != 0) goto L_0x0b00;
    L_0x0a6a:
        r1 = NUM; // 0x7f0e0339 float:1.887671E38 double:1.053162564E-314;
        r1 = org.telegram.messenger.LocaleController.getString(r3, r1);
        r14.add(r1);
        r1 = 16;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = NUM; // 0x7var_cd float:1.7945513E38 double:1.052935731E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
        r1 = NUM; // 0x7f0e01fd float:1.887607E38 double:1.053162408E-314;
        r2 = "Call";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 17;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = NUM; // 0x7var_c7 float:1.79455E38 double:1.052935728E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
        goto L_0x0b00;
    L_0x0aa7:
        r1 = 9;
        if (r2 != r1) goto L_0x0b00;
    L_0x0aab:
        r1 = r7.selectedObject;
        r1 = r1.getDocument();
        r2 = r21.getMediaDataController();
        r2 = r2.isStickerInFavorites(r1);
        if (r2 != 0) goto L_0x0ae1;
    L_0x0abb:
        r1 = org.telegram.messenger.MessageObject.isStickerHasSet(r1);
        if (r1 == 0) goto L_0x0b00;
    L_0x0ac1:
        r1 = NUM; // 0x7f0e00c9 float:1.8875445E38 double:1.053162256E-314;
        r2 = "AddToFavorites";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 20;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = NUM; // 0x7var_d1 float:1.7945521E38 double:1.052935733E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
        goto L_0x0b00;
    L_0x0ae1:
        r1 = NUM; // 0x7f0e039a float:1.8876908E38 double:1.053162612E-314;
        r2 = "DeleteFromFavorites";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 21;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = NUM; // 0x7var_ float:1.794563E38 double:1.0529357594E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
    L_0x0b00:
        r1 = r7.inScheduleMode;
        if (r1 != 0) goto L_0x0b3a;
    L_0x0b04:
        r1 = r7.selectedObject;
        r1 = r1.needDrawBluredPreview();
        if (r1 != 0) goto L_0x0b3a;
    L_0x0b0c:
        r1 = r7.selectedObject;
        r1 = r1.isLiveLocation();
        if (r1 != 0) goto L_0x0b3a;
    L_0x0b14:
        r1 = r7.selectedObject;
        r1 = r1.type;
        r2 = 16;
        if (r1 == r2) goto L_0x0b3a;
    L_0x0b1c:
        r1 = NUM; // 0x7f0e04cc float:1.8877528E38 double:1.0531627633E-314;
        r2 = "Forward";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 2;
        r2 = java.lang.Integer.valueOf(r1);
        r15.add(r2);
        r1 = NUM; // 0x7var_d2 float:1.7945523E38 double:1.0529357333E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
    L_0x0b3a:
        if (r5 == 0) goto L_0x0b5c;
    L_0x0b3c:
        r1 = NUM; // 0x7f0e0b5a float:1.8880932E38 double:1.0531635924E-314;
        r2 = "UnpinMessage";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 14;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = NUM; // 0x7var_ float:1.7945635E38 double:1.0529357604E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
        goto L_0x0b7d;
    L_0x0b5c:
        if (r4 == 0) goto L_0x0b7d;
    L_0x0b5e:
        r1 = NUM; // 0x7f0e08d9 float:1.8879632E38 double:1.0531632757E-314;
        r2 = "PinMessage";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 13;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = NUM; // 0x7var_f1 float:1.7945586E38 double:1.0529357486E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
    L_0x0b7d:
        if (r6 == 0) goto L_0x0b9e;
    L_0x0b7f:
        r1 = NUM; // 0x7f0e03e5 float:1.887706E38 double:1.053162649E-314;
        r2 = "Edit";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 12;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = NUM; // 0x7var_d0 float:1.794552E38 double:1.0529357323E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
    L_0x0b9e:
        r1 = r7.inScheduleMode;
        if (r1 == 0) goto L_0x0bcb;
    L_0x0ba2:
        r1 = r7.selectedObject;
        r2 = r7.currentChat;
        r1 = r1.canEditMessageScheduleTime(r2);
        if (r1 == 0) goto L_0x0bcb;
    L_0x0bac:
        r1 = NUM; // 0x7f0e064b float:1.8878305E38 double:1.0531629526E-314;
        r2 = "MessageScheduleEditTime";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 102; // 0x66 float:1.43E-43 double:5.04E-322;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = NUM; // 0x7var_fe float:1.7945612E38 double:1.052935755E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
    L_0x0bcb:
        r1 = r7.inScheduleMode;
        if (r1 != 0) goto L_0x0c0e;
    L_0x0bcf:
        r1 = r7.selectedObject;
        r2 = r1.contentType;
        if (r2 != 0) goto L_0x0c0e;
    L_0x0bd5:
        r1 = r1.getId();
        if (r1 <= 0) goto L_0x0c0e;
    L_0x0bdb:
        r1 = r7.selectedObject;
        r1 = r1.isOut();
        if (r1 != 0) goto L_0x0c0e;
    L_0x0be3:
        r1 = r7.currentChat;
        if (r1 != 0) goto L_0x0bef;
    L_0x0be7:
        r1 = r7.currentUser;
        if (r1 == 0) goto L_0x0c0e;
    L_0x0beb:
        r1 = r1.bot;
        if (r1 == 0) goto L_0x0c0e;
    L_0x0bef:
        r1 = NUM; // 0x7f0e0964 float:1.8879913E38 double:1.0531633444E-314;
        r2 = "ReportChat";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r14.add(r1);
        r1 = 23;
        r1 = java.lang.Integer.valueOf(r1);
        r15.add(r1);
        r1 = NUM; // 0x7var_f4 float:1.7945592E38 double:1.05293575E-314;
        r1 = java.lang.Integer.valueOf(r1);
        r13.add(r1);
    L_0x0c0e:
        r1 = r7.inScheduleMode;
        r2 = r7.currentChat;
        r0 = r0.canDeleteMessage(r1, r2);
        if (r0 == 0) goto L_0x0316;
    L_0x0CLASSNAME:
        r0 = NUM; // 0x7f0e0382 float:1.8876859E38 double:1.0531626003E-314;
        r0 = org.telegram.messenger.LocaleController.getString(r11, r0);
        r14.add(r0);
        r0 = 1;
        r1 = java.lang.Integer.valueOf(r0);
        r15.add(r1);
        r0 = java.lang.Integer.valueOf(r17);
        r13.add(r0);
        goto L_0x0316;
    L_0x0CLASSNAME:
        if (r12 == 0) goto L_0x0CLASSNAME;
    L_0x0CLASSNAME:
        r0 = NUM; // 0x7f0e0961 float:1.8879907E38 double:1.053163343E-314;
        r4 = "Reply";
        r0 = org.telegram.messenger.LocaleController.getString(r4, r0);
        r14.add(r0);
        r0 = 8;
        r0 = java.lang.Integer.valueOf(r0);
        r15.add(r0);
        r0 = NUM; // 0x7var_f3 float:1.794559E38 double:1.0529357496E-314;
        r0 = java.lang.Integer.valueOf(r0);
        r13.add(r0);
    L_0x0CLASSNAME:
        r0 = r7.selectedObject;
        r4 = r0.type;
        if (r4 == 0) goto L_0x0c6a;
    L_0x0c5a:
        r0 = r0.isAnimatedEmoji();
        if (r0 != 0) goto L_0x0c6a;
    L_0x0CLASSNAME:
        r0 = r7.selectedObject;
        r4 = r7.selectedObjectGroup;
        r0 = r7.getMessageCaption(r0, r4);
        if (r0 == 0) goto L_0x0CLASSNAME;
    L_0x0c6a:
        r0 = NUM; // 0x7f0e0339 float:1.887671E38 double:1.053162564E-314;
        r0 = org.telegram.messenger.LocaleController.getString(r3, r0);
        r14.add(r0);
        r0 = 3;
        r0 = java.lang.Integer.valueOf(r0);
        r15.add(r0);
        r0 = NUM; // 0x7var_cd float:1.7945513E38 double:1.052935731E-314;
        r0 = java.lang.Integer.valueOf(r0);
        r13.add(r0);
    L_0x0CLASSNAME:
        r0 = 4;
        if (r2 != r0) goto L_0x0d71;
    L_0x0CLASSNAME:
        r2 = r7.selectedObject;
        r2 = r2.isVideo();
        if (r2 == 0) goto L_0x0ccd;
    L_0x0CLASSNAME:
        r2 = NUM; // 0x7f0e09ac float:1.888006E38 double:1.05316338E-314;
        r3 = "SaveToGallery";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r14.add(r2);
        r2 = java.lang.Integer.valueOf(r0);
        r15.add(r2);
        r0 = NUM; // 0x7var_d3 float:1.7945525E38 double:1.052935734E-314;
        r0 = java.lang.Integer.valueOf(r0);
        r13.add(r0);
        r0 = NUM; // 0x7f0e0a3f float:1.8880358E38 double:1.0531634526E-314;
        r0 = org.telegram.messenger.LocaleController.getString(r1, r0);
        r14.add(r0);
        r0 = 6;
        r0 = java.lang.Integer.valueOf(r0);
        r15.add(r0);
        r0 = java.lang.Integer.valueOf(r20);
        r13.add(r0);
    L_0x0cc7:
        r0 = NUM; // 0x7f0e0382 float:1.8876859E38 double:1.0531626003E-314;
        r1 = 4;
        goto L_0x0e81;
    L_0x0ccd:
        r0 = r7.selectedObject;
        r0 = r0.isMusic();
        if (r0 == 0) goto L_0x0d0b;
    L_0x0cd5:
        r0 = NUM; // 0x7f0e09ae float:1.8880064E38 double:1.053163381E-314;
        r2 = "SaveToMusic";
        r0 = org.telegram.messenger.LocaleController.getString(r2, r0);
        r14.add(r0);
        r0 = 10;
        r0 = java.lang.Integer.valueOf(r0);
        r15.add(r0);
        r0 = java.lang.Integer.valueOf(r19);
        r13.add(r0);
        r0 = NUM; // 0x7f0e0a3f float:1.8880358E38 double:1.0531634526E-314;
        r0 = org.telegram.messenger.LocaleController.getString(r1, r0);
        r14.add(r0);
        r0 = 6;
        r0 = java.lang.Integer.valueOf(r0);
        r15.add(r0);
        r0 = java.lang.Integer.valueOf(r20);
        r13.add(r0);
        goto L_0x0cc7;
    L_0x0d0b:
        r0 = r7.selectedObject;
        r0 = r0.isVideo();
        if (r0 != 0) goto L_0x0d52;
    L_0x0d13:
        r0 = r7.selectedObject;
        r0 = r0.getDocument();
        if (r0 == 0) goto L_0x0d52;
    L_0x0d1b:
        r0 = NUM; // 0x7f0e09aa float:1.8880055E38 double:1.053163379E-314;
        r2 = "SaveToDownloads";
        r0 = org.telegram.messenger.LocaleController.getString(r2, r0);
        r14.add(r0);
        r0 = 10;
        r0 = java.lang.Integer.valueOf(r0);
        r15.add(r0);
        r0 = java.lang.Integer.valueOf(r19);
        r13.add(r0);
        r0 = NUM; // 0x7f0e0a3f float:1.8880358E38 double:1.0531634526E-314;
        r0 = org.telegram.messenger.LocaleController.getString(r1, r0);
        r14.add(r0);
        r0 = 6;
        r0 = java.lang.Integer.valueOf(r0);
        r15.add(r0);
        r0 = java.lang.Integer.valueOf(r20);
        r13.add(r0);
        goto L_0x0cc7;
    L_0x0d52:
        r0 = NUM; // 0x7f0e09ac float:1.888006E38 double:1.05316338E-314;
        r1 = "SaveToGallery";
        r0 = org.telegram.messenger.LocaleController.getString(r1, r0);
        r14.add(r0);
        r1 = 4;
        r0 = java.lang.Integer.valueOf(r1);
        r15.add(r0);
        r0 = NUM; // 0x7var_d3 float:1.7945525E38 double:1.052935734E-314;
        r0 = java.lang.Integer.valueOf(r0);
        r13.add(r0);
        goto L_0x0d93;
    L_0x0d71:
        r1 = 4;
        r0 = 5;
        if (r2 != r0) goto L_0x0d98;
    L_0x0d75:
        r0 = NUM; // 0x7f0e00fc float:1.8875549E38 double:1.053162281E-314;
        r2 = "ApplyLocalizationFile";
        r0 = org.telegram.messenger.LocaleController.getString(r2, r0);
        r14.add(r0);
        r0 = 5;
        r0 = java.lang.Integer.valueOf(r0);
        r15.add(r0);
        r0 = NUM; // 0x7var_dd float:1.7945545E38 double:1.0529357387E-314;
        r0 = java.lang.Integer.valueOf(r0);
        r13.add(r0);
    L_0x0d93:
        r0 = NUM; // 0x7f0e0382 float:1.8876859E38 double:1.0531626003E-314;
        goto L_0x0e81;
    L_0x0d98:
        r0 = 10;
        if (r2 != r0) goto L_0x0dbb;
    L_0x0d9c:
        r0 = NUM; // 0x7f0e00fe float:1.8875553E38 double:1.053162282E-314;
        r2 = "ApplyThemeFile";
        r0 = org.telegram.messenger.LocaleController.getString(r2, r0);
        r14.add(r0);
        r0 = 5;
        r0 = java.lang.Integer.valueOf(r0);
        r15.add(r0);
        r0 = NUM; // 0x7var_ float:1.7945625E38 double:1.052935758E-314;
        r0 = java.lang.Integer.valueOf(r0);
        r13.add(r0);
        goto L_0x0d93;
    L_0x0dbb:
        r0 = 7;
        if (r2 != r0) goto L_0x0dde;
    L_0x0dbe:
        r0 = NUM; // 0x7f0e00cb float:1.887545E38 double:1.053162257E-314;
        r2 = "AddToStickers";
        r0 = org.telegram.messenger.LocaleController.getString(r2, r0);
        r14.add(r0);
        r0 = 9;
        r0 = java.lang.Integer.valueOf(r0);
        r15.add(r0);
        r0 = NUM; // 0x7var_ float:1.7945622E38 double:1.0529357575E-314;
        r0 = java.lang.Integer.valueOf(r0);
        r13.add(r0);
        goto L_0x0d93;
    L_0x0dde:
        r0 = 8;
        if (r2 != r0) goto L_0x0d93;
    L_0x0de2:
        r0 = r21.getMessagesController();
        r2 = r7.selectedObject;
        r2 = r2.messageOwner;
        r2 = r2.media;
        r2 = r2.user_id;
        r2 = java.lang.Integer.valueOf(r2);
        r0 = r0.getUser(r2);
        if (r0 == 0) goto L_0x0e35;
    L_0x0df8:
        r2 = r0.id;
        r4 = r21.getUserConfig();
        r4 = r4.getClientUserId();
        if (r2 == r4) goto L_0x0e35;
    L_0x0e04:
        r2 = r21.getContactsController();
        r2 = r2.contactsDict;
        r0 = r0.id;
        r0 = java.lang.Integer.valueOf(r0);
        r0 = r2.get(r0);
        if (r0 != 0) goto L_0x0e35;
    L_0x0e16:
        r0 = NUM; // 0x7f0e00b1 float:1.8875397E38 double:1.053162244E-314;
        r2 = "AddContactTitle";
        r0 = org.telegram.messenger.LocaleController.getString(r2, r0);
        r14.add(r0);
        r0 = 15;
        r0 = java.lang.Integer.valueOf(r0);
        r15.add(r0);
        r0 = NUM; // 0x7var_c3 float:1.7945493E38 double:1.052935726E-314;
        r0 = java.lang.Integer.valueOf(r0);
        r13.add(r0);
    L_0x0e35:
        r0 = r7.selectedObject;
        r0 = r0.messageOwner;
        r0 = r0.media;
        r0 = r0.phone_number;
        r0 = android.text.TextUtils.isEmpty(r0);
        if (r0 != 0) goto L_0x0d93;
    L_0x0e43:
        r0 = NUM; // 0x7f0e0339 float:1.887671E38 double:1.053162564E-314;
        r0 = org.telegram.messenger.LocaleController.getString(r3, r0);
        r14.add(r0);
        r0 = 16;
        r0 = java.lang.Integer.valueOf(r0);
        r15.add(r0);
        r0 = NUM; // 0x7var_cd float:1.7945513E38 double:1.052935731E-314;
        r0 = java.lang.Integer.valueOf(r0);
        r13.add(r0);
        r0 = NUM; // 0x7f0e01fd float:1.887607E38 double:1.053162408E-314;
        r2 = "Call";
        r0 = org.telegram.messenger.LocaleController.getString(r2, r0);
        r14.add(r0);
        r0 = 17;
        r0 = java.lang.Integer.valueOf(r0);
        r15.add(r0);
        r0 = NUM; // 0x7var_c7 float:1.79455E38 double:1.052935728E-314;
        r0 = java.lang.Integer.valueOf(r0);
        r13.add(r0);
        goto L_0x0d93;
    L_0x0e81:
        r0 = org.telegram.messenger.LocaleController.getString(r11, r0);
        r14.add(r0);
        r0 = 1;
        r2 = java.lang.Integer.valueOf(r0);
        r15.add(r2);
        r0 = java.lang.Integer.valueOf(r17);
        r13.add(r0);
    L_0x0e97:
        r0 = r15.isEmpty();
        if (r0 == 0) goto L_0x0e9e;
    L_0x0e9d:
        return;
    L_0x0e9e:
        r0 = r7.scrimPopupWindow;
        if (r0 == 0) goto L_0x0eab;
    L_0x0ea2:
        r0.dismiss();
        r0 = 0;
        r7.scrimPopupWindow = r0;
        r7.scrimPopupWindowItems = r0;
        return;
    L_0x0eab:
        r0 = new android.graphics.Rect;
        r0.<init>();
        r8 = new org.telegram.ui.ActionBar.ActionBarPopupWindow$ActionBarPopupWindowLayout;
        r2 = r21.getParentActivity();
        r8.<init>(r2);
        r2 = new org.telegram.ui.ChatActivity$68;
        r2.<init>(r0);
        r8.setOnTouchListener(r2);
        r0 = new org.telegram.ui.-$$Lambda$ChatActivity$LZtUcxCIcBmFsimnBqJYKGdwO7Q;
        r0.<init>(r7);
        r8.setDispatchKeyEventListener(r0);
        r9 = new android.graphics.Rect;
        r9.<init>();
        r0 = r21.getParentActivity();
        r0 = r0.getResources();
        r2 = NUM; // 0x7var_ float:1.794583E38 double:1.052935808E-314;
        r0 = r0.getDrawable(r2);
        r0 = r0.mutate();
        r0.getPadding(r9);
        r8.setBackgroundDrawable(r0);
        r0 = "actionBarDefaultSubmenuBackground";
        r0 = org.telegram.ui.ActionBar.Theme.getColor(r0);
        r8.setBackgroundColor(r0);
        r10 = new android.widget.LinearLayout;
        r0 = r21.getParentActivity();
        r10.<init>(r0);
        r0 = android.os.Build.VERSION.SDK_INT;
        r2 = 21;
        if (r0 < r2) goto L_0x0var_;
    L_0x0eff:
        r11 = new org.telegram.ui.ChatActivity$69;
        r2 = r21.getParentActivity();
        r3 = 0;
        r4 = 0;
        r5 = NUM; // 0x7f0var_ float:1.9008031E38 double:1.053194553E-314;
        r0 = r11;
        r12 = 4;
        r1 = r21;
        r6 = r10;
        r0.<init>(r2, r3, r4, r5, r6);
        goto L_0x0f1d;
    L_0x0var_:
        r12 = 4;
        r11 = new android.widget.ScrollView;
        r0 = r21.getParentActivity();
        r11.<init>(r0);
    L_0x0f1d:
        r0 = 0;
        r11.setClipToPadding(r0);
        r0 = -2;
        r1 = -NUM; // 0xffffffffCLASSNAME float:-2.0 double:NaN;
        r0 = org.telegram.ui.Components.LayoutHelper.createFrame(r0, r1);
        r8.addView(r11, r0);
        r0 = NUM; // 0x43480000 float:200.0 double:5.5769738E-315;
        r0 = org.telegram.messenger.AndroidUtilities.dp(r0);
        r10.setMinimumWidth(r0);
        r0 = 1;
        r10.setOrientation(r0);
        r0 = r14.size();
        r0 = new org.telegram.ui.ActionBar.ActionBarMenuSubItem[r0];
        r7.scrimPopupWindowItems = r0;
        r0 = r14.size();
        r1 = 0;
    L_0x0var_:
        if (r1 >= r0) goto L_0x0var_;
    L_0x0var_:
        r2 = new org.telegram.ui.ActionBar.ActionBarMenuSubItem;
        r3 = r21.getParentActivity();
        r2.<init>(r3);
        r3 = r14.get(r1);
        r3 = (java.lang.CharSequence) r3;
        r4 = r13.get(r1);
        r4 = (java.lang.Integer) r4;
        r4 = r4.intValue();
        r2.setTextAndIcon(r3, r4);
        r3 = r7.scrimPopupWindowItems;
        r3[r1] = r2;
        r10.addView(r2);
        r3 = new org.telegram.ui.-$$Lambda$ChatActivity$H4iYBJRcbdOk4xLun0NB9tvR_Pc;
        r3.<init>(r7, r1, r15);
        r2.setOnClickListener(r3);
        r1 = r1 + 1;
        goto L_0x0var_;
    L_0x0var_:
        r0 = -2;
        r1 = -2;
        r2 = 51;
        r0 = org.telegram.ui.Components.LayoutHelper.createScroll(r0, r1, r2);
        r11.addView(r10, r0);
        r0 = new org.telegram.ui.ChatActivity$70;
        r2 = -2;
        r0.<init>(r8, r1, r2);
        r7.scrimPopupWindow = r0;
        r0 = r7.scrimPopupWindow;
        r1 = 220; // 0xdc float:3.08E-43 double:1.087E-321;
        r0.setDismissAnimationDuration(r1);
        r0 = r7.scrimPopupWindow;
        r1 = 1;
        r0.setOutsideTouchable(r1);
        r0 = r7.scrimPopupWindow;
        r0.setClippingEnabled(r1);
        r0 = r7.scrimPopupWindow;
        r2 = NUM; // 0x7f0var_ float:1.9007977E38 double:1.0531945397E-314;
        r0.setAnimationStyle(r2);
        r0 = r7.scrimPopupWindow;
        r0.setFocusable(r1);
        r0 = NUM; // 0x447a0000 float:1000.0 double:5.676053805E-315;
        r0 = org.telegram.messenger.AndroidUtilities.dp(r0);
        r1 = -NUM; // 0xfffffffvar_ float:-0.0 double:NaN;
        r0 = android.view.View.MeasureSpec.makeMeasureSpec(r0, r1);
        r1 = NUM; // 0x447a0000 float:1000.0 double:5.676053805E-315;
        r1 = org.telegram.messenger.AndroidUtilities.dp(r1);
        r2 = -NUM; // 0xfffffffvar_ float:-0.0 double:NaN;
        r1 = android.view.View.MeasureSpec.makeMeasureSpec(r1, r2);
        r8.measure(r0, r1);
        r0 = r7.scrimPopupWindow;
        r1 = 2;
        r0.setInputMethodMode(r1);
        r0 = r7.scrimPopupWindow;
        r1 = 0;
        r0.setSoftInputMode(r1);
        r0 = r7.scrimPopupWindow;
        r0 = r0.getContentView();
        r1 = 1;
        r0.setFocusableInTouchMode(r1);
        r0 = r22.getLeft();
        r1 = r25;
        r1 = (int) r1;
        r0 = r0 + r1;
        r1 = r8.getMeasuredWidth();
        r0 = r0 - r1;
        r1 = r9.left;
        r0 = r0 + r1;
        r1 = NUM; // 0x41e00000 float:28.0 double:5.46040909E-315;
        r1 = org.telegram.messenger.AndroidUtilities.dp(r1);
        r0 = r0 - r1;
        r1 = NUM; // 0x40CLASSNAME float:6.0 double:5.367157323E-315;
        r1 = org.telegram.messenger.AndroidUtilities.dp(r1);
        if (r0 >= r1) goto L_0x0ffe;
    L_0x0ff7:
        r0 = NUM; // 0x40CLASSNAME float:6.0 double:5.367157323E-315;
        r0 = org.telegram.messenger.AndroidUtilities.dp(r0);
        goto L_0x1024;
    L_0x0ffe:
        r1 = r7.chatListView;
        r1 = r1.getMeasuredWidth();
        r2 = NUM; // 0x40CLASSNAME float:6.0 double:5.367157323E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r1 = r1 - r2;
        r2 = r8.getMeasuredWidth();
        r1 = r1 - r2;
        if (r0 <= r1) goto L_0x1024;
    L_0x1012:
        r0 = r7.chatListView;
        r0 = r0.getMeasuredWidth();
        r1 = NUM; // 0x40CLASSNAME float:6.0 double:5.367157323E-315;
        r1 = org.telegram.messenger.AndroidUtilities.dp(r1);
        r0 = r0 - r1;
        r1 = r8.getMeasuredWidth();
        r0 = r0 - r1;
    L_0x1024:
        r1 = org.telegram.messenger.AndroidUtilities.isTablet();
        if (r1 == 0) goto L_0x1036;
    L_0x102a:
        r1 = 2;
        r2 = new int[r1];
        r1 = r7.fragmentView;
        r1.getLocationInWindow(r2);
        r1 = 0;
        r2 = r2[r1];
        r0 = r0 + r2;
    L_0x1036:
        r1 = r7.contentView;
        r1 = r1.getHeight();
        r2 = r8.getMeasuredHeight();
        r3 = r7.contentView;
        r3 = r3.getKeyboardHeight();
        r4 = NUM; // 0x41a00000 float:20.0 double:5.439686476E-315;
        r4 = org.telegram.messenger.AndroidUtilities.dp(r4);
        if (r3 <= r4) goto L_0x104f;
    L_0x104e:
        r1 = r1 + r3;
    L_0x104f:
        if (r2 >= r1) goto L_0x10ae;
    L_0x1051:
        r3 = r7.chatListView;
        r3 = r3.getY();
        r4 = r22.getTop();
        r4 = (float) r4;
        r3 = r3 + r4;
        r3 = r3 + r26;
        r3 = (int) r3;
        r4 = r9.top;
        r4 = r2 - r4;
        r5 = r9.bottom;
        r4 = r4 - r5;
        r5 = NUM; // 0x43700000 float:240.0 double:5.589925436E-315;
        r5 = org.telegram.messenger.AndroidUtilities.dp(r5);
        if (r4 <= r5) goto L_0x1077;
    L_0x106f:
        r4 = NUM; // 0x43700000 float:240.0 double:5.589925436E-315;
        r4 = org.telegram.messenger.AndroidUtilities.dp(r4);
        r4 = r4 - r2;
        r3 = r3 + r4;
    L_0x1077:
        r4 = (float) r3;
        r5 = r7.chatListView;
        r5 = r5.getY();
        r6 = NUM; // 0x41CLASSNAME float:24.0 double:5.450047783E-315;
        r6 = org.telegram.messenger.AndroidUtilities.dp(r6);
        r6 = (float) r6;
        r5 = r5 + r6;
        r4 = (r4 > r5 ? 1 : (r4 == r5 ? 0 : -1));
        if (r4 >= 0) goto L_0x109a;
    L_0x108a:
        r1 = r7.chatListView;
        r1 = r1.getY();
        r2 = NUM; // 0x41CLASSNAME float:24.0 double:5.450047783E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r2 = (float) r2;
        r1 = r1 + r2;
        r3 = (int) r1;
        goto L_0x10b0;
    L_0x109a:
        r1 = r1 - r2;
        r2 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r2 = r1 - r2;
        if (r3 <= r2) goto L_0x10b0;
    L_0x10a5:
        r2 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
        r3 = r1 - r2;
        goto L_0x10b0;
    L_0x10ae:
        r3 = org.telegram.messenger.AndroidUtilities.statusBarHeight;
    L_0x10b0:
        r1 = r7.scrimPopupWindow;
        r2 = r7.chatListView;
        r4 = 51;
        r1.showAtLocation(r2, r4, r0, r3);
        r0 = r7.chatListView;
        r0.stopScroll();
        r0 = r7.chatLayoutManager;
        r1 = 0;
        r0.setCanScrollVertically(r1);
        r0 = r22;
        r7.scrimView = r0;
        r0 = r7.scrimView;
        r1 = r0 instanceof org.telegram.ui.Cells.ChatMessageCell;
        if (r1 == 0) goto L_0x10d7;
    L_0x10ce:
        r0 = (org.telegram.ui.Cells.ChatMessageCell) r0;
        r1 = 1;
        r0.setInvalidatesParent(r1);
        r7.restartSticker(r0);
    L_0x10d7:
        r0 = r7.contentView;
        r0.invalidate();
        r0 = r7.chatListView;
        r0.invalidate();
        r0 = r7.scrimAnimatorSet;
        if (r0 == 0) goto L_0x10e8;
    L_0x10e5:
        r0.cancel();
    L_0x10e8:
        r0 = new android.animation.AnimatorSet;
        r0.<init>();
        r7.scrimAnimatorSet = r0;
        r0 = new java.util.ArrayList;
        r0.<init>();
        r1 = r7.scrimPaint;
        r2 = org.telegram.ui.Components.AnimationProperties.PAINT_ALPHA;
        r3 = 2;
        r3 = new int[r3];
        r3 = {0, 50};
        r1 = android.animation.ObjectAnimator.ofInt(r1, r2, r3);
        r0.add(r1);
        r1 = r7.pagedownButton;
        r1 = r1.getTag();
        if (r1 == 0) goto L_0x111f;
    L_0x110d:
        r1 = r7.pagedownButton;
        r2 = android.view.View.ALPHA;
        r3 = 1;
        r4 = new float[r3];
        r3 = 0;
        r5 = 0;
        r4[r5] = r3;
        r1 = android.animation.ObjectAnimator.ofFloat(r1, r2, r4);
        r0.add(r1);
    L_0x111f:
        r1 = r7.mentiondownButton;
        r1 = r1.getTag();
        if (r1 == 0) goto L_0x1139;
    L_0x1127:
        r1 = r7.mentiondownButton;
        r2 = android.view.View.ALPHA;
        r3 = 1;
        r3 = new float[r3];
        r4 = 0;
        r5 = 0;
        r3[r5] = r4;
        r1 = android.animation.ObjectAnimator.ofFloat(r1, r2, r3);
        r0.add(r1);
    L_0x1139:
        r1 = r7.scrimAnimatorSet;
        r1.playTogether(r0);
        r0 = r7.scrimAnimatorSet;
        r1 = 150; // 0x96 float:2.1E-43 double:7.4E-322;
        r0.setDuration(r1);
        r0 = r7.scrimAnimatorSet;
        r0.start();
        r21.hideHints();
        r0 = r7.chatActivityEnterView;
        if (r0 == 0) goto L_0x1159;
    L_0x1151:
        r0 = r0.getEditField();
        r1 = 0;
        r0.setAllowDrawCursor(r1);
    L_0x1159:
        r0 = android.os.Build.VERSION.SDK_INT;
        r1 = 19;
        if (r0 < r1) goto L_0x116e;
    L_0x115f:
        r0 = r21.getParentActivity();
        r0 = r0.getWindow();
        r0 = r0.getDecorView();
        r0.setImportantForAccessibility(r12);
    L_0x116e:
        return;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.createMenu(android.view.View, boolean, boolean, float, float, boolean):void");
    }

    public /* synthetic */ void lambda$createMenu$78$ChatActivity(KeyEvent keyEvent) {
        if (keyEvent.getKeyCode() == 4 && keyEvent.getRepeatCount() == 0) {
            ActionBarPopupWindow actionBarPopupWindow = this.scrimPopupWindow;
            if (actionBarPopupWindow != null && actionBarPopupWindow.isShowing()) {
                this.scrimPopupWindow.dismiss();
            }
        }
    }

    public /* synthetic */ void lambda$createMenu$79$ChatActivity(int i, ArrayList arrayList, View view) {
        if (this.selectedObject != null && i >= 0 && i < arrayList.size()) {
            processSelectedOption(((Integer) arrayList.get(i)).intValue());
            ActionBarPopupWindow actionBarPopupWindow = this.scrimPopupWindow;
            if (actionBarPopupWindow != null) {
                actionBarPopupWindow.dismiss();
            }
        }
    }

    private void startEditingMessageObject(MessageObject messageObject) {
        if (messageObject != null && getParentActivity() != null) {
            if (this.searchItem != null && this.actionBar.isSearchFieldVisible()) {
                this.actionBar.closeSearchField();
                this.chatActivityEnterView.setFieldFocused();
            }
            this.mentionsAdapter.setNeedBotContext(false);
            this.chatActivityEnterView.setVisibility(0);
            showFieldPanelForEdit(true, messageObject);
            updateBottomOverlay();
            checkEditTimer();
            this.chatActivityEnterView.setAllowStickersAndGifs(false, false);
            updatePinnedMessageView(true);
            updateVisibleRows();
            if (messageObject.scheduled) {
                this.chatActivityEnterView.showEditDoneProgress(false, true);
                return;
            }
            TL_messages_getMessageEditData tL_messages_getMessageEditData = new TL_messages_getMessageEditData();
            tL_messages_getMessageEditData.peer = getMessagesController().getInputPeer((int) this.dialog_id);
            tL_messages_getMessageEditData.id = messageObject.getId();
            this.editingMessageObjectReqId = getConnectionsManager().sendRequest(tL_messages_getMessageEditData, new -$$Lambda$ChatActivity$Lo1_-gwku8qIQ0sFfG0V7ZdmboU(this));
        }
    }

    public /* synthetic */ void lambda$startEditingMessageObject$81$ChatActivity(TLObject tLObject, TL_error tL_error) {
        AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$E3wXpuXRodBdMcYnTIL0WyuUPD8(this, tLObject));
    }

    public /* synthetic */ void lambda$null$80$ChatActivity(TLObject tLObject) {
        this.editingMessageObjectReqId = 0;
        ChatActivityEnterView chatActivityEnterView;
        if (tLObject != null) {
            chatActivityEnterView = this.chatActivityEnterView;
            if (chatActivityEnterView != null) {
                chatActivityEnterView.showEditDoneProgress(false, true);
            }
        } else if (getParentActivity() != null) {
            AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
            builder.setTitle(LocaleController.getString("AppName", NUM));
            builder.setMessage(LocaleController.getString("EditMessageError", NUM));
            builder.setPositiveButton(LocaleController.getString("OK", NUM), null);
            showDialog(builder.create());
            chatActivityEnterView = this.chatActivityEnterView;
            if (chatActivityEnterView != null) {
                chatActivityEnterView.setEditingMessageObject(null, false);
                hideFieldPanel(true);
            }
        }
    }

    private void restartSticker(ChatMessageCell chatMessageCell) {
        MessageObject messageObject = chatMessageCell.getMessageObject();
        Document document = messageObject.getDocument();
        boolean isAnimatedEmoji = messageObject.isAnimatedEmoji();
        boolean z = false;
        Integer valueOf = Integer.valueOf(0);
        Integer valueOf2 = Integer.valueOf(1);
        if (!isAnimatedEmoji) {
            if (this.currentEncryptedChat == null) {
                z = true;
            }
            if (!MessageObject.isAnimatedStickerDocument(document, z) || SharedConfig.loopStickers) {
                return;
            }
        }
        RLottieDrawable lottieAnimation = chatMessageCell.getPhotoImage().getLottieAnimation();
        if (lottieAnimation != null) {
            lottieAnimation.restart();
            if (messageObject.isAnimatedEmoji()) {
                if ("❤".equals(messageObject.getStickerEmoji())) {
                    HashMap hashMap = new HashMap();
                    hashMap.put(valueOf2, valueOf2);
                    hashMap.put(Integer.valueOf(13), valueOf);
                    hashMap.put(Integer.valueOf(59), valueOf2);
                    hashMap.put(Integer.valueOf(71), valueOf);
                    hashMap.put(Integer.valueOf(128), valueOf2);
                    hashMap.put(Integer.valueOf(140), valueOf);
                    lottieAnimation.setVibrationPattern(hashMap);
                }
            }
        }
    }

    private String getMessageContent(MessageObject messageObject, int i, boolean z) {
        String str = "";
        if (z) {
            int i2 = messageObject.messageOwner.from_id;
            if (i != i2) {
                String str2 = ":\n";
                StringBuilder stringBuilder;
                if (i2 > 0) {
                    User user = getMessagesController().getUser(Integer.valueOf(messageObject.messageOwner.from_id));
                    if (user != null) {
                        stringBuilder = new StringBuilder();
                        stringBuilder.append(ContactsController.formatName(user.first_name, user.last_name));
                        stringBuilder.append(str2);
                        str = stringBuilder.toString();
                    }
                } else if (i2 < 0) {
                    Chat chat = getMessagesController().getChat(Integer.valueOf(-messageObject.messageOwner.from_id));
                    if (chat != null) {
                        stringBuilder = new StringBuilder();
                        stringBuilder.append(chat.title);
                        stringBuilder.append(str2);
                        str = stringBuilder.toString();
                    }
                }
            }
        }
        StringBuilder stringBuilder2;
        if ((messageObject.type == 0 || messageObject.isAnimatedEmoji()) && messageObject.messageOwner.message != null) {
            stringBuilder2 = new StringBuilder();
            stringBuilder2.append(str);
            stringBuilder2.append(messageObject.messageOwner.message);
            return stringBuilder2.toString();
        }
        Message message = messageObject.messageOwner;
        if (message.media == null || message.message == null) {
            stringBuilder2 = new StringBuilder();
            stringBuilder2.append(str);
            stringBuilder2.append(messageObject.messageText);
            return stringBuilder2.toString();
        }
        stringBuilder2 = new StringBuilder();
        stringBuilder2.append(str);
        stringBuilder2.append(messageObject.messageOwner.message);
        return stringBuilder2.toString();
    }

    private void saveMessageToGallery(MessageObject messageObject) {
        String str = messageObject.messageOwner.attachPath;
        if (!(TextUtils.isEmpty(str) || new File(str).exists())) {
            str = null;
        }
        if (TextUtils.isEmpty(str)) {
            str = FileLoader.getPathToMessage(messageObject.messageOwner).toString();
        }
        MediaController.saveFile(str, getParentActivity(), messageObject.isVideo(), null, null);
    }

    /* JADX WARNING: Missing block: B:150:0x04f9, code skipped:
            if (r8.exists() != false) goto L_0x04fd;
     */
    /* JADX WARNING: Missing block: B:154:0x050b, code skipped:
            if (r0.exists() != false) goto L_0x050f;
     */
    private void processSelectedOption(int r24) {
        /*
        r23 = this;
        r7 = r23;
        r0 = r24;
        r1 = r7.selectedObject;
        if (r1 == 0) goto L_0x075d;
    L_0x0008:
        r1 = r23.getParentActivity();
        if (r1 != 0) goto L_0x0010;
    L_0x000e:
        goto L_0x075d;
    L_0x0010:
        r1 = 100;
        r2 = 1;
        r3 = 0;
        r8 = 0;
        if (r0 == r1) goto L_0x06c5;
    L_0x0017:
        r1 = 102; // 0x66 float:1.43E-43 double:5.04E-322;
        if (r0 == r1) goto L_0x073e;
    L_0x001b:
        r1 = "";
        r4 = 1000; // 0x3e8 float:1.401E-42 double:4.94E-321;
        r6 = NUM; // 0x7f0e076c float:1.8878891E38 double:1.0531630954E-314;
        r9 = "OK";
        r10 = 4;
        r11 = NUM; // 0x7f0e0214 float:1.8876117E38 double:1.0531624195E-314;
        r12 = "Cancel";
        r13 = 23;
        r14 = 3;
        r15 = "android.permission.WRITE_EXTERNAL_STORAGE";
        switch(r0) {
            case 0: goto L_0x067b;
            case 1: goto L_0x0664;
            case 2: goto L_0x0630;
            case 3: goto L_0x0616;
            case 4: goto L_0x05d0;
            case 5: goto L_0x04de;
            case 6: goto L_0x0459;
            case 7: goto L_0x0400;
            case 8: goto L_0x03f9;
            case 9: goto L_0x03ca;
            case 10: goto L_0x0342;
            case 11: goto L_0x0329;
            case 12: goto L_0x0313;
            case 13: goto L_0x022b;
            case 14: goto L_0x01e9;
            case 15: goto L_0x01ba;
            case 16: goto L_0x01ad;
            case 17: goto L_0x0173;
            case 18: goto L_0x015a;
            case 19: goto L_0x0149;
            case 20: goto L_0x0132;
            case 21: goto L_0x011b;
            case 22: goto L_0x00fb;
            case 23: goto L_0x00ea;
            case 24: goto L_0x00a1;
            case 25: goto L_0x0078;
            case 26: goto L_0x0035;
            default: goto L_0x0032;
        };
    L_0x0032:
        r1 = r8;
        goto L_0x0757;
    L_0x0035:
        r0 = r7.selectedObject;
        r1 = new org.telegram.ui.ActionBar.AlertDialog$Builder;
        r2 = r23.getParentActivity();
        r1.<init>(r2);
        r2 = NUM; // 0x7f0e0aa5 float:1.8880564E38 double:1.053163503E-314;
        r3 = "StopPollAlertTitle";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r1.setTitle(r2);
        r2 = NUM; // 0x7f0e0aa4 float:1.8880562E38 double:1.0531635025E-314;
        r3 = "StopPollAlertText";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r1.setMessage(r2);
        r2 = NUM; // 0x7f0e0a97 float:1.8880536E38 double:1.053163496E-314;
        r3 = "Stop";
        r2 = org.telegram.messenger.LocaleController.getString(r3, r2);
        r3 = new org.telegram.ui.-$$Lambda$ChatActivity$MBKZAJsvK4_LlBf4x-AB7m0JSj0;
        r3.<init>(r7, r0);
        r1.setPositiveButton(r2, r3);
        r0 = org.telegram.messenger.LocaleController.getString(r12, r11);
        r1.setNegativeButton(r0, r8);
        r0 = r1.create();
        r7.showDialog(r0);
        goto L_0x0032;
    L_0x0078:
        r0 = new org.telegram.ui.ActionBar.AlertDialog[r2];
        r1 = new org.telegram.ui.ActionBar.AlertDialog;
        r2 = r23.getParentActivity();
        r1.<init>(r2, r14);
        r0[r3] = r1;
        r1 = r23.getSendMessagesHelper();
        r2 = r7.selectedObject;
        r3 = new org.telegram.ui.-$$Lambda$ChatActivity$Jma28CL-lunTy3mFtVQuI_XjXGU;
        r3.<init>(r0);
        r1 = r1.sendVote(r2, r8, r3);
        if (r1 == 0) goto L_0x0032;
    L_0x0096:
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$1gtwrit1eyCJoqPKo5t52WlmEw8;
        r2.<init>(r7, r0, r1);
        r0 = 500; // 0x1f4 float:7.0E-43 double:2.47E-321;
        org.telegram.messenger.AndroidUtilities.runOnUIThread(r2, r0);
        goto L_0x0032;
    L_0x00a1:
        r0 = r7.selectedObject;
        r0 = r0.isEditing();
        if (r0 != 0) goto L_0x00df;
    L_0x00a9:
        r0 = r7.selectedObject;
        r0 = r0.isSending();
        if (r0 == 0) goto L_0x00b6;
    L_0x00b1:
        r0 = r7.selectedObjectGroup;
        if (r0 != 0) goto L_0x00b6;
    L_0x00b5:
        goto L_0x00df;
    L_0x00b6:
        r0 = r7.selectedObject;
        r0 = r0.isSending();
        if (r0 == 0) goto L_0x0032;
    L_0x00be:
        r0 = r7.selectedObjectGroup;
        if (r0 == 0) goto L_0x0032;
    L_0x00c2:
        r0 = r7.selectedObjectGroup;
        r0 = r0.messages;
        r0 = r0.size();
        if (r3 >= r0) goto L_0x0032;
    L_0x00cc:
        r0 = r23.getSendMessagesHelper();
        r1 = new java.util.ArrayList;
        r2 = r7.selectedObjectGroup;
        r2 = r2.messages;
        r1.<init>(r2);
        r0.cancelSendingMessage(r1);
        r3 = r3 + 1;
        goto L_0x00c2;
    L_0x00df:
        r0 = r23.getSendMessagesHelper();
        r1 = r7.selectedObject;
        r0.cancelSendingMessage(r1);
        goto L_0x0032;
    L_0x00ea:
        r0 = r23.getParentActivity();
        r1 = r7.dialog_id;
        r3 = r7.selectedObject;
        r3 = r3.getId();
        org.telegram.ui.Components.AlertsCreator.createReportAlert(r0, r1, r3, r7);
        goto L_0x0032;
    L_0x00fb:
        r0 = new org.telegram.tgnet.TLRPC$TL_channels_exportMessageLink;
        r0.<init>();
        r1 = r7.selectedObject;
        r1 = r1.getId();
        r0.id = r1;
        r1 = r7.currentChat;
        r1 = org.telegram.messenger.MessagesController.getInputChannel(r1);
        r0.channel = r1;
        r1 = r23.getConnectionsManager();
        r2 = org.telegram.ui.-$$Lambda$ChatActivity$GNrgkdfmb0F1tpeM3C3bZe0sCac.INSTANCE;
        r1.sendRequest(r0, r2);
        goto L_0x0032;
    L_0x011b:
        r9 = r23.getMediaDataController();
        r10 = 2;
        r11 = r7.selectedObject;
        r12 = r11.getDocument();
        r0 = java.lang.System.currentTimeMillis();
        r0 = r0 / r4;
        r13 = (int) r0;
        r14 = 1;
        r9.addRecentSticker(r10, r11, r12, r13, r14);
        goto L_0x0032;
    L_0x0132:
        r0 = r23.getMediaDataController();
        r1 = 2;
        r2 = r7.selectedObject;
        r3 = r2.getDocument();
        r9 = java.lang.System.currentTimeMillis();
        r9 = r9 / r4;
        r4 = (int) r9;
        r5 = 0;
        r0.addRecentSticker(r1, r2, r3, r4, r5);
        goto L_0x0032;
    L_0x0149:
        r0 = r23.getParentActivity();
        r1 = r7.selectedObject;
        r1 = r1.messageOwner;
        r1 = r1.action;
        r1 = (org.telegram.tgnet.TLRPC.TL_messageActionPhoneCall) r1;
        org.telegram.ui.Components.voip.VoIPHelper.showRateAlert(r0, r1);
        goto L_0x0032;
    L_0x015a:
        r0 = r7.currentUser;
        if (r0 == 0) goto L_0x0032;
    L_0x015e:
        r1 = r23.getParentActivity();
        r2 = r23.getMessagesController();
        r3 = r7.currentUser;
        r3 = r3.id;
        r2 = r2.getUserFull(r3);
        org.telegram.ui.Components.voip.VoIPHelper.startCall(r0, r1, r2);
        goto L_0x0032;
    L_0x0173:
        r0 = new android.content.Intent;	 Catch:{ Exception -> 0x01a7 }
        r1 = "android.intent.action.DIAL";
        r2 = new java.lang.StringBuilder;	 Catch:{ Exception -> 0x01a7 }
        r2.<init>();	 Catch:{ Exception -> 0x01a7 }
        r3 = "tel:";
        r2.append(r3);	 Catch:{ Exception -> 0x01a7 }
        r3 = r7.selectedObject;	 Catch:{ Exception -> 0x01a7 }
        r3 = r3.messageOwner;	 Catch:{ Exception -> 0x01a7 }
        r3 = r3.media;	 Catch:{ Exception -> 0x01a7 }
        r3 = r3.phone_number;	 Catch:{ Exception -> 0x01a7 }
        r2.append(r3);	 Catch:{ Exception -> 0x01a7 }
        r2 = r2.toString();	 Catch:{ Exception -> 0x01a7 }
        r2 = android.net.Uri.parse(r2);	 Catch:{ Exception -> 0x01a7 }
        r0.<init>(r1, r2);	 Catch:{ Exception -> 0x01a7 }
        r1 = NUM; // 0x10000000 float:2.5243549E-29 double:1.32624737E-315;
        r0.addFlags(r1);	 Catch:{ Exception -> 0x01a7 }
        r1 = r23.getParentActivity();	 Catch:{ Exception -> 0x01a7 }
        r2 = 500; // 0x1f4 float:7.0E-43 double:2.47E-321;
        r1.startActivityForResult(r0, r2);	 Catch:{ Exception -> 0x01a7 }
        goto L_0x0032;
    L_0x01a7:
        r0 = move-exception;
        org.telegram.messenger.FileLog.e(r0);
        goto L_0x0032;
    L_0x01ad:
        r0 = r7.selectedObject;
        r0 = r0.messageOwner;
        r0 = r0.media;
        r0 = r0.phone_number;
        org.telegram.messenger.AndroidUtilities.addToClipboard(r0);
        goto L_0x0032;
    L_0x01ba:
        r0 = new android.os.Bundle;
        r0.<init>();
        r1 = r7.selectedObject;
        r1 = r1.messageOwner;
        r1 = r1.media;
        r1 = r1.user_id;
        r3 = "user_id";
        r0.putInt(r3, r1);
        r1 = r7.selectedObject;
        r1 = r1.messageOwner;
        r1 = r1.media;
        r1 = r1.phone_number;
        r3 = "phone";
        r0.putString(r3, r1);
        r1 = "addContact";
        r0.putBoolean(r1, r2);
        r1 = new org.telegram.ui.ContactAddActivity;
        r1.<init>(r0);
        r7.presentFragment(r1);
        goto L_0x0032;
    L_0x01e9:
        r0 = new org.telegram.ui.ActionBar.AlertDialog$Builder;
        r1 = r23.getParentActivity();
        r0.<init>(r1);
        r1 = NUM; // 0x7f0e0b5c float:1.8880936E38 double:1.0531635934E-314;
        r2 = "UnpinMessageAlertTitle";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r0.setTitle(r1);
        r1 = NUM; // 0x7f0e0b5b float:1.8880934E38 double:1.053163593E-314;
        r2 = "UnpinMessageAlert";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r0.setMessage(r1);
        r1 = NUM; // 0x7f0e0b5a float:1.8880932E38 double:1.0531635924E-314;
        r2 = "UnpinMessage";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$a6j6rYWtRPa002WhZREqV8O422I;
        r2.<init>(r7);
        r0.setPositiveButton(r1, r2);
        r1 = org.telegram.messenger.LocaleController.getString(r12, r11);
        r0.setNegativeButton(r1, r8);
        r0 = r0.create();
        r7.showDialog(r0);
        goto L_0x0032;
    L_0x022b:
        r0 = r7.selectedObject;
        r0 = r0.getId();
        r4 = new org.telegram.ui.ActionBar.AlertDialog$Builder;
        r5 = r23.getParentActivity();
        r4.<init>(r5);
        r5 = NUM; // 0x7f0e08dd float:1.887964E38 double:1.0531632777E-314;
        r10 = "PinMessageAlertTitle";
        r5 = org.telegram.messenger.LocaleController.getString(r10, r5);
        r4.setTitle(r5);
        r5 = r7.currentUser;
        if (r5 == 0) goto L_0x025c;
    L_0x024a:
        r1 = NUM; // 0x7f0e08dc float:1.8879638E38 double:1.053163277E-314;
        r5 = "PinMessageAlertChat";
        r1 = org.telegram.messenger.LocaleController.getString(r5, r1);
        r4.setMessage(r1);
        r1 = new boolean[r2];
        r1[r3] = r3;
        goto L_0x02f6;
    L_0x025c:
        r5 = r7.currentChat;
        r5 = org.telegram.messenger.ChatObject.isChannel(r5);
        if (r5 == 0) goto L_0x026a;
    L_0x0264:
        r5 = r7.currentChat;
        r5 = r5.megagroup;
        if (r5 != 0) goto L_0x0274;
    L_0x026a:
        r5 = r7.currentChat;
        if (r5 == 0) goto L_0x02e6;
    L_0x026e:
        r5 = org.telegram.messenger.ChatObject.isChannel(r5);
        if (r5 != 0) goto L_0x02e6;
    L_0x0274:
        r5 = NUM; // 0x7f0e08da float:1.8879634E38 double:1.053163276E-314;
        r10 = "PinMessageAlert";
        r5 = org.telegram.messenger.LocaleController.getString(r10, r5);
        r4.setMessage(r5);
        r5 = new boolean[r2];
        r5[r3] = r2;
        r10 = new android.widget.FrameLayout;
        r13 = r23.getParentActivity();
        r10.<init>(r13);
        r13 = new org.telegram.ui.Cells.CheckBoxCell;
        r14 = r23.getParentActivity();
        r13.<init>(r14, r2);
        r14 = org.telegram.ui.ActionBar.Theme.getSelectorDrawable(r3);
        r13.setBackgroundDrawable(r14);
        r14 = NUM; // 0x7f0e08de float:1.8879642E38 double:1.053163278E-314;
        r15 = new java.lang.Object[r3];
        r8 = "PinNotify";
        r8 = org.telegram.messenger.LocaleController.formatString(r8, r14, r15);
        r13.setText(r8, r1, r2, r3);
        r1 = org.telegram.messenger.LocaleController.isRTL;
        r2 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        if (r1 == 0) goto L_0x02b6;
    L_0x02b1:
        r1 = org.telegram.messenger.AndroidUtilities.dp(r2);
        goto L_0x02b7;
    L_0x02b6:
        r1 = 0;
    L_0x02b7:
        r8 = org.telegram.messenger.LocaleController.isRTL;
        if (r8 == 0) goto L_0x02bd;
    L_0x02bb:
        r2 = 0;
        goto L_0x02c1;
    L_0x02bd:
        r2 = org.telegram.messenger.AndroidUtilities.dp(r2);
    L_0x02c1:
        r13.setPadding(r1, r3, r2, r3);
        r16 = -1;
        r17 = NUM; // 0x42400000 float:48.0 double:5.491493014E-315;
        r18 = 51;
        r19 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r20 = 0;
        r21 = NUM; // 0x41000000 float:8.0 double:5.38787994E-315;
        r22 = 0;
        r1 = org.telegram.ui.Components.LayoutHelper.createFrame(r16, r17, r18, r19, r20, r21, r22);
        r10.addView(r13, r1);
        r1 = new org.telegram.ui.-$$Lambda$ChatActivity$jdYIhc2likvcBU0dL3MAPqweSAs;
        r1.<init>(r5);
        r13.setOnClickListener(r1);
        r4.setView(r10);
        r1 = r5;
        goto L_0x02f6;
    L_0x02e6:
        r1 = NUM; // 0x7f0e08db float:1.8879636E38 double:1.0531632767E-314;
        r5 = "PinMessageAlertChannel";
        r1 = org.telegram.messenger.LocaleController.getString(r5, r1);
        r4.setMessage(r1);
        r1 = new boolean[r2];
        r1[r3] = r3;
    L_0x02f6:
        r2 = org.telegram.messenger.LocaleController.getString(r9, r6);
        r3 = new org.telegram.ui.-$$Lambda$ChatActivity$otIkUayYqDs0GxQjhUR6Vt-81So;
        r3.<init>(r7, r0, r1);
        r4.setPositiveButton(r2, r3);
        r0 = org.telegram.messenger.LocaleController.getString(r12, r11);
        r1 = 0;
        r4.setNegativeButton(r0, r1);
        r0 = r4.create();
        r7.showDialog(r0);
        goto L_0x0757;
    L_0x0313:
        r1 = r8;
        r0 = r7.selectedObjectToEditCaption;
        if (r0 == 0) goto L_0x031c;
    L_0x0318:
        r7.startEditingMessageObject(r0);
        goto L_0x0321;
    L_0x031c:
        r0 = r7.selectedObject;
        r7.startEditingMessageObject(r0);
    L_0x0321:
        r7.selectedObject = r1;
        r7.selectedObjectGroup = r1;
        r7.selectedObjectToEditCaption = r1;
        goto L_0x0757;
    L_0x0329:
        r0 = r7.selectedObject;
        r0 = r0.getDocument();
        r1 = r23.getMessagesController();
        r2 = r7.selectedObject;
        r1.saveGif(r2, r0);
        r23.showGifHint();
        r1 = r7.chatActivityEnterView;
        r1.addRecentGif(r0);
        goto L_0x0756;
    L_0x0342:
        r0 = android.os.Build.VERSION.SDK_INT;
        if (r0 < r13) goto L_0x0363;
    L_0x0346:
        r0 = r23.getParentActivity();
        r0 = r0.checkSelfPermission(r15);
        if (r0 == 0) goto L_0x0363;
    L_0x0350:
        r0 = r23.getParentActivity();
        r1 = new java.lang.String[r2];
        r1[r3] = r15;
        r0.requestPermissions(r1, r10);
        r1 = 0;
        r7.selectedObject = r1;
        r7.selectedObjectGroup = r1;
        r7.selectedObjectToEditCaption = r1;
        return;
    L_0x0363:
        r0 = r7.selectedObject;
        r0 = r0.getDocument();
        r0 = org.telegram.messenger.FileLoader.getDocumentFileName(r0);
        r2 = android.text.TextUtils.isEmpty(r0);
        if (r2 == 0) goto L_0x0379;
    L_0x0373:
        r0 = r7.selectedObject;
        r0 = r0.getFileName();
    L_0x0379:
        r2 = r7.selectedObject;
        r2 = r2.messageOwner;
        r8 = r2.attachPath;
        if (r8 == 0) goto L_0x0393;
    L_0x0381:
        r2 = r8.length();
        if (r2 <= 0) goto L_0x0393;
    L_0x0387:
        r2 = new java.io.File;
        r2.<init>(r8);
        r2 = r2.exists();
        if (r2 != 0) goto L_0x0393;
    L_0x0392:
        r8 = 0;
    L_0x0393:
        if (r8 == 0) goto L_0x039b;
    L_0x0395:
        r2 = r8.length();
        if (r2 != 0) goto L_0x03a7;
    L_0x039b:
        r2 = r7.selectedObject;
        r2 = r2.messageOwner;
        r2 = org.telegram.messenger.FileLoader.getPathToMessage(r2);
        r8 = r2.toString();
    L_0x03a7:
        r2 = r23.getParentActivity();
        r3 = r7.selectedObject;
        r3 = r3.isMusic();
        if (r3 == 0) goto L_0x03b4;
    L_0x03b3:
        goto L_0x03b5;
    L_0x03b4:
        r14 = 2;
    L_0x03b5:
        r3 = r7.selectedObject;
        r3 = r3.getDocument();
        if (r3 == 0) goto L_0x03c5;
    L_0x03bd:
        r1 = r7.selectedObject;
        r1 = r1.getDocument();
        r1 = r1.mime_type;
    L_0x03c5:
        org.telegram.messenger.MediaController.saveFile(r8, r2, r14, r0, r1);
        goto L_0x0756;
    L_0x03ca:
        r0 = new org.telegram.ui.Components.StickersAlert;
        r2 = r23.getParentActivity();
        r1 = r7.selectedObject;
        r4 = r1.getInputStickerSet();
        r5 = 0;
        r1 = r7.bottomOverlayChat;
        r1 = r1.getVisibility();
        if (r1 == 0) goto L_0x03ed;
    L_0x03df:
        r1 = r7.currentChat;
        if (r1 == 0) goto L_0x03e9;
    L_0x03e3:
        r1 = org.telegram.messenger.ChatObject.canSendStickers(r1);
        if (r1 == 0) goto L_0x03ed;
    L_0x03e9:
        r1 = r7.chatActivityEnterView;
        r6 = r1;
        goto L_0x03ee;
    L_0x03ed:
        r6 = 0;
    L_0x03ee:
        r1 = r0;
        r3 = r23;
        r1.<init>(r2, r3, r4, r5, r6);
        r7.showDialog(r0);
        goto L_0x0756;
    L_0x03f9:
        r0 = r7.selectedObject;
        r7.showFieldPanelForReply(r0);
        goto L_0x0756;
    L_0x0400:
        r0 = r7.selectedObject;
        r0 = r0.messageOwner;
        r8 = r0.attachPath;
        if (r8 == 0) goto L_0x041a;
    L_0x0408:
        r0 = r8.length();
        if (r0 <= 0) goto L_0x041a;
    L_0x040e:
        r0 = new java.io.File;
        r0.<init>(r8);
        r0 = r0.exists();
        if (r0 != 0) goto L_0x041a;
    L_0x0419:
        r8 = 0;
    L_0x041a:
        if (r8 == 0) goto L_0x0422;
    L_0x041c:
        r0 = r8.length();
        if (r0 != 0) goto L_0x042e;
    L_0x0422:
        r0 = r7.selectedObject;
        r0 = r0.messageOwner;
        r0 = org.telegram.messenger.FileLoader.getPathToMessage(r0);
        r8 = r0.toString();
    L_0x042e:
        r0 = android.os.Build.VERSION.SDK_INT;
        if (r0 < r13) goto L_0x044f;
    L_0x0432:
        r0 = r23.getParentActivity();
        r0 = r0.checkSelfPermission(r15);
        if (r0 == 0) goto L_0x044f;
    L_0x043c:
        r0 = r23.getParentActivity();
        r1 = new java.lang.String[r2];
        r1[r3] = r15;
        r0.requestPermissions(r1, r10);
        r1 = 0;
        r7.selectedObject = r1;
        r7.selectedObjectGroup = r1;
        r7.selectedObjectToEditCaption = r1;
        return;
    L_0x044f:
        r1 = 0;
        r0 = r23.getParentActivity();
        org.telegram.messenger.MediaController.saveFile(r8, r0, r3, r1, r1);
        goto L_0x0757;
    L_0x0459:
        r0 = r7.selectedObject;
        r0 = r0.messageOwner;
        r8 = r0.attachPath;
        if (r8 == 0) goto L_0x0473;
    L_0x0461:
        r0 = r8.length();
        if (r0 <= 0) goto L_0x0473;
    L_0x0467:
        r0 = new java.io.File;
        r0.<init>(r8);
        r0 = r0.exists();
        if (r0 != 0) goto L_0x0473;
    L_0x0472:
        r8 = 0;
    L_0x0473:
        if (r8 == 0) goto L_0x047b;
    L_0x0475:
        r0 = r8.length();
        if (r0 != 0) goto L_0x0487;
    L_0x047b:
        r0 = r7.selectedObject;
        r0 = r0.messageOwner;
        r0 = org.telegram.messenger.FileLoader.getPathToMessage(r0);
        r8 = r0.toString();
    L_0x0487:
        r0 = new android.content.Intent;
        r1 = "android.intent.action.SEND";
        r0.<init>(r1);
        r1 = r7.selectedObject;
        r1 = r1.getDocument();
        r1 = r1.mime_type;
        r0.setType(r1);
        r1 = new java.io.File;
        r1.<init>(r8);
        r3 = android.os.Build.VERSION.SDK_INT;
        r4 = 24;
        r5 = "android.intent.extra.STREAM";
        if (r3 < r4) goto L_0x04bf;
    L_0x04a6:
        r3 = r23.getParentActivity();	 Catch:{ Exception -> 0x04b7 }
        r4 = "org.telegram.messenger.beta.provider";
        r3 = androidx.core.content.FileProvider.getUriForFile(r3, r4, r1);	 Catch:{ Exception -> 0x04b7 }
        r0.putExtra(r5, r3);	 Catch:{ Exception -> 0x04b7 }
        r0.setFlags(r2);	 Catch:{ Exception -> 0x04b7 }
        goto L_0x04c6;
    L_0x04b7:
        r1 = android.net.Uri.fromFile(r1);
        r0.putExtra(r5, r1);
        goto L_0x04c6;
    L_0x04bf:
        r1 = android.net.Uri.fromFile(r1);
        r0.putExtra(r5, r1);
    L_0x04c6:
        r1 = r23.getParentActivity();	 Catch:{ all -> 0x0756 }
        r2 = "ShareFile";
        r3 = NUM; // 0x7f0e0a3f float:1.8880358E38 double:1.0531634526E-314;
        r2 = org.telegram.messenger.LocaleController.getString(r2, r3);	 Catch:{ all -> 0x0756 }
        r0 = android.content.Intent.createChooser(r0, r2);	 Catch:{ all -> 0x0756 }
        r2 = 500; // 0x1f4 float:7.0E-43 double:2.47E-321;
        r1.startActivityForResult(r0, r2);	 Catch:{ all -> 0x0756 }
        goto L_0x0756;
    L_0x04de:
        r0 = r7.selectedObject;
        r0 = r0.messageOwner;
        r0 = r0.attachPath;
        r0 = android.text.TextUtils.isEmpty(r0);
        if (r0 != 0) goto L_0x04fc;
    L_0x04ea:
        r8 = new java.io.File;
        r0 = r7.selectedObject;
        r0 = r0.messageOwner;
        r0 = r0.attachPath;
        r8.<init>(r0);
        r0 = r8.exists();
        if (r0 == 0) goto L_0x04fc;
    L_0x04fb:
        goto L_0x04fd;
    L_0x04fc:
        r8 = 0;
    L_0x04fd:
        if (r8 != 0) goto L_0x050e;
    L_0x04ff:
        r0 = r7.selectedObject;
        r0 = r0.messageOwner;
        r0 = org.telegram.messenger.FileLoader.getPathToMessage(r0);
        r1 = r0.exists();
        if (r1 == 0) goto L_0x050e;
    L_0x050d:
        goto L_0x050f;
    L_0x050e:
        r0 = r8;
    L_0x050f:
        if (r0 == 0) goto L_0x0756;
    L_0x0511:
        r1 = r0.getName();
        r1 = r1.toLowerCase();
        r3 = "attheme";
        r1 = r1.endsWith(r3);
        if (r1 == 0) goto L_0x057a;
    L_0x0521:
        r1 = r7.selectedObject;
        r1 = r1.getDocumentName();
        r3 = 0;
        r0 = org.telegram.ui.ActionBar.Theme.applyThemeFile(r0, r1, r3, r2);
        if (r0 == 0) goto L_0x0538;
    L_0x052e:
        r1 = new org.telegram.ui.ThemePreviewActivity;
        r1.<init>(r0);
        r7.presentFragment(r1);
        goto L_0x0756;
    L_0x0538:
        r0 = -1;
        r7.scrollToPositionOnRecreate = r0;
        r0 = r23.getParentActivity();
        if (r0 != 0) goto L_0x0548;
    L_0x0541:
        r7.selectedObject = r3;
        r7.selectedObjectGroup = r3;
        r7.selectedObjectToEditCaption = r3;
        return;
    L_0x0548:
        r0 = new org.telegram.ui.ActionBar.AlertDialog$Builder;
        r1 = r23.getParentActivity();
        r0.<init>(r1);
        r1 = NUM; // 0x7f0e00f9 float:1.8875543E38 double:1.0531622797E-314;
        r2 = "AppName";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r0.setTitle(r1);
        r1 = NUM; // 0x7f0e0579 float:1.887788E38 double:1.053162849E-314;
        r2 = "IncorrectTheme";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r0.setMessage(r1);
        r1 = org.telegram.messenger.LocaleController.getString(r9, r6);
        r2 = 0;
        r0.setPositiveButton(r1, r2);
        r0 = r0.create();
        r7.showDialog(r0);
        goto L_0x0756;
    L_0x057a:
        r1 = org.telegram.messenger.LocaleController.getInstance();
        r2 = r7.currentAccount;
        r0 = r1.applyLanguageFile(r0, r2);
        if (r0 == 0) goto L_0x0590;
    L_0x0586:
        r0 = new org.telegram.ui.LanguageSelectActivity;
        r0.<init>();
        r7.presentFragment(r0);
        goto L_0x0756;
    L_0x0590:
        r0 = r23.getParentActivity();
        if (r0 != 0) goto L_0x059e;
    L_0x0596:
        r1 = 0;
        r7.selectedObject = r1;
        r7.selectedObjectGroup = r1;
        r7.selectedObjectToEditCaption = r1;
        return;
    L_0x059e:
        r0 = new org.telegram.ui.ActionBar.AlertDialog$Builder;
        r1 = r23.getParentActivity();
        r0.<init>(r1);
        r1 = NUM; // 0x7f0e00f9 float:1.8875543E38 double:1.0531622797E-314;
        r2 = "AppName";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r0.setTitle(r1);
        r1 = NUM; // 0x7f0e0578 float:1.8877877E38 double:1.0531628483E-314;
        r2 = "IncorrectLocalization";
        r1 = org.telegram.messenger.LocaleController.getString(r2, r1);
        r0.setMessage(r1);
        r1 = org.telegram.messenger.LocaleController.getString(r9, r6);
        r2 = 0;
        r0.setPositiveButton(r1, r2);
        r0 = r0.create();
        r7.showDialog(r0);
        goto L_0x0756;
    L_0x05d0:
        r0 = android.os.Build.VERSION.SDK_INT;
        if (r0 < r13) goto L_0x05f1;
    L_0x05d4:
        r0 = r23.getParentActivity();
        r0 = r0.checkSelfPermission(r15);
        if (r0 == 0) goto L_0x05f1;
    L_0x05de:
        r0 = r23.getParentActivity();
        r1 = new java.lang.String[r2];
        r1[r3] = r15;
        r0.requestPermissions(r1, r10);
        r1 = 0;
        r7.selectedObject = r1;
        r7.selectedObjectGroup = r1;
        r7.selectedObjectToEditCaption = r1;
        return;
    L_0x05f1:
        r0 = r7.selectedObjectGroup;
        if (r0 == 0) goto L_0x060f;
    L_0x05f5:
        r0 = r7.selectedObjectGroup;
        r0 = r0.messages;
        r0 = r0.size();
        if (r3 >= r0) goto L_0x0756;
    L_0x05ff:
        r0 = r7.selectedObjectGroup;
        r0 = r0.messages;
        r0 = r0.get(r3);
        r0 = (org.telegram.messenger.MessageObject) r0;
        r7.saveMessageToGallery(r0);
        r3 = r3 + 1;
        goto L_0x05f5;
    L_0x060f:
        r0 = r7.selectedObject;
        r7.saveMessageToGallery(r0);
        goto L_0x0756;
    L_0x0616:
        r0 = r7.selectedObject;
        r1 = r7.selectedObjectGroup;
        r0 = r7.getMessageCaption(r0, r1);
        if (r0 == 0) goto L_0x0625;
    L_0x0620:
        org.telegram.messenger.AndroidUtilities.addToClipboard(r0);
        goto L_0x0756;
    L_0x0625:
        r0 = r7.selectedObject;
        r0 = r7.getMessageContent(r0, r3, r3);
        org.telegram.messenger.AndroidUtilities.addToClipboard(r0);
        goto L_0x0756;
    L_0x0630:
        r0 = r7.selectedObject;
        r7.forwardingMessage = r0;
        r0 = r7.selectedObjectGroup;
        r7.forwardingMessageGroup = r0;
        r0 = new android.os.Bundle;
        r0.<init>();
        r1 = "onlySelect";
        r0.putBoolean(r1, r2);
        r1 = "dialogsType";
        r0.putInt(r1, r14);
        r1 = r7.forwardingMessageGroup;
        if (r1 != 0) goto L_0x064c;
    L_0x064b:
        goto L_0x0652;
    L_0x064c:
        r1 = r1.messages;
        r2 = r1.size();
    L_0x0652:
        r1 = "messagesCount";
        r0.putInt(r1, r2);
        r1 = new org.telegram.ui.DialogsActivity;
        r1.<init>(r0);
        r1.setDelegate(r7);
        r7.presentFragment(r1);
        goto L_0x0756;
    L_0x0664:
        r0 = r23.getParentActivity();
        if (r0 != 0) goto L_0x0672;
    L_0x066a:
        r1 = 0;
        r7.selectedObject = r1;
        r7.selectedObjectToEditCaption = r1;
        r7.selectedObjectGroup = r1;
        return;
    L_0x0672:
        r0 = r7.selectedObject;
        r1 = r7.selectedObjectGroup;
        r7.createDeleteMessagesAlert(r0, r1);
        goto L_0x0756;
    L_0x067b:
        r0 = r7.selectedObjectGroup;
        if (r0 == 0) goto L_0x06ad;
    L_0x067f:
        r0 = 0;
    L_0x0680:
        r1 = r7.selectedObjectGroup;
        r1 = r1.messages;
        r1 = r1.size();
        if (r0 >= r1) goto L_0x06a2;
    L_0x068a:
        r1 = r23.getSendMessagesHelper();
        r4 = r7.selectedObjectGroup;
        r4 = r4.messages;
        r4 = r4.get(r0);
        r4 = (org.telegram.messenger.MessageObject) r4;
        r1 = r1.retrySendMessage(r4, r3);
        if (r1 != 0) goto L_0x069f;
    L_0x069e:
        r2 = 0;
    L_0x069f:
        r0 = r0 + 1;
        goto L_0x0680;
    L_0x06a2:
        if (r2 == 0) goto L_0x0756;
    L_0x06a4:
        r0 = r7.inScheduleMode;
        if (r0 != 0) goto L_0x0756;
    L_0x06a8:
        r23.moveScrollToLastMessage();
        goto L_0x0756;
    L_0x06ad:
        r0 = r23.getSendMessagesHelper();
        r1 = r7.selectedObject;
        r0 = r0.retrySendMessage(r1, r3);
        if (r0 == 0) goto L_0x0756;
    L_0x06b9:
        r23.updateVisibleRows();
        r0 = r7.inScheduleMode;
        if (r0 != 0) goto L_0x0756;
    L_0x06c0:
        r23.moveScrollToLastMessage();
        goto L_0x0756;
    L_0x06c5:
        r0 = r7.chatActivityEnterView;
        r0 = r0.getSendButton();
        r0 = r7.checkSlowMode(r0);
        if (r0 != 0) goto L_0x073e;
    L_0x06d1:
        r0 = r23.getMediaController();
        r1 = r7.selectedObject;
        r0 = r0.isPlayingMessage(r1);
        if (r0 == 0) goto L_0x06e4;
    L_0x06dd:
        r0 = r23.getMediaController();
        r0.cleanupPlayer(r2, r2);
    L_0x06e4:
        r0 = new org.telegram.tgnet.TLRPC$TL_messages_sendScheduledMessages;
        r0.<init>();
        r1 = r7.currentAccount;
        r1 = org.telegram.messenger.MessagesController.getInstance(r1);
        r4 = r7.dialog_id;
        r2 = (int) r4;
        r1 = r1.getInputPeer(r2);
        r0.peer = r1;
        r1 = r7.selectedObjectGroup;
        if (r1 == 0) goto L_0x0720;
    L_0x06fc:
        r1 = r7.selectedObjectGroup;
        r1 = r1.messages;
        r1 = r1.size();
        if (r3 >= r1) goto L_0x072f;
    L_0x0706:
        r1 = r0.id;
        r2 = r7.selectedObjectGroup;
        r2 = r2.messages;
        r2 = r2.get(r3);
        r2 = (org.telegram.messenger.MessageObject) r2;
        r2 = r2.getId();
        r2 = java.lang.Integer.valueOf(r2);
        r1.add(r2);
        r3 = r3 + 1;
        goto L_0x06fc;
    L_0x0720:
        r1 = r0.id;
        r2 = r7.selectedObject;
        r2 = r2.getId();
        r2 = java.lang.Integer.valueOf(r2);
        r1.add(r2);
    L_0x072f:
        r1 = r7.currentAccount;
        r1 = org.telegram.tgnet.ConnectionsManager.getInstance(r1);
        r2 = new org.telegram.ui.-$$Lambda$ChatActivity$yH3-kBsWPYtVNk9i4aMv_l2Z8zg;
        r2.<init>(r7, r0);
        r1.sendRequest(r0, r2);
        goto L_0x0756;
    L_0x073e:
        r0 = r7.selectedObject;
        r1 = r7.selectedObjectGroup;
        r8 = r23.getParentActivity();
        r9 = r7.dialog_id;
        r2 = r0.messageOwner;
        r2 = r2.date;
        r11 = (long) r2;
        r13 = new org.telegram.ui.-$$Lambda$ChatActivity$wGzXdh9oPypg1vrjKqh5MNKF6wY;
        r13.<init>(r7, r1, r0);
        r14 = 0;
        org.telegram.ui.Components.AlertsCreator.createScheduleDatePickerDialog(r8, r9, r11, r13, r14);
    L_0x0756:
        r1 = 0;
    L_0x0757:
        r7.selectedObject = r1;
        r7.selectedObjectGroup = r1;
        r7.selectedObjectToEditCaption = r1;
    L_0x075d:
        return;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.processSelectedOption(int):void");
    }

    static /* synthetic */ void lambda$processSelectedOption$82(boolean[] zArr, View view) {
        CheckBoxCell checkBoxCell = (CheckBoxCell) view;
        zArr[0] = zArr[0] ^ 1;
        checkBoxCell.setChecked(zArr[0], true);
    }

    public /* synthetic */ void lambda$processSelectedOption$83$ChatActivity(int i, boolean[] zArr, DialogInterface dialogInterface, int i2) {
        getMessagesController().pinMessage(this.currentChat, this.currentUser, i, zArr[0]);
    }

    public /* synthetic */ void lambda$processSelectedOption$84$ChatActivity(DialogInterface dialogInterface, int i) {
        getMessagesController().pinMessage(this.currentChat, this.currentUser, 0, false);
    }

    static /* synthetic */ void lambda$null$85(TLObject tLObject) {
        if (tLObject != null) {
            TL_exportedMessageLink tL_exportedMessageLink = (TL_exportedMessageLink) tLObject;
            try {
                ((ClipboardManager) ApplicationLoader.applicationContext.getSystemService("clipboard")).setPrimaryClip(ClipData.newPlainText("label", tL_exportedMessageLink.link));
                if (tL_exportedMessageLink.link.contains("/c/")) {
                    Toast.makeText(ApplicationLoader.applicationContext, LocaleController.getString("LinkCopiedPrivate", NUM), 0).show();
                } else {
                    Toast.makeText(ApplicationLoader.applicationContext, LocaleController.getString("LinkCopied", NUM), 0).show();
                }
            } catch (Exception e) {
                FileLog.e(e);
            }
        }
    }

    static /* synthetic */ void lambda$processSelectedOption$87(AlertDialog[] alertDialogArr) {
        try {
            alertDialogArr[0].dismiss();
        } catch (Throwable unused) {
        }
        alertDialogArr[0] = null;
    }

    public /* synthetic */ void lambda$processSelectedOption$89$ChatActivity(AlertDialog[] alertDialogArr, int i) {
        if (alertDialogArr[0] != null) {
            alertDialogArr[0].setOnCancelListener(new -$$Lambda$ChatActivity$jD-CpG8ofMpECWClk02OvBwCLASSNAMEM(this, i));
            showDialog(alertDialogArr[0]);
        }
    }

    public /* synthetic */ void lambda$null$88$ChatActivity(int i, DialogInterface dialogInterface) {
        getConnectionsManager().cancelRequest(i, true);
    }

    public /* synthetic */ void lambda$processSelectedOption$95$ChatActivity(MessageObject messageObject, DialogInterface dialogInterface, int i) {
        AlertDialog[] alertDialogArr = new AlertDialog[]{new AlertDialog(getParentActivity(), 3)};
        TL_messages_editMessage tL_messages_editMessage = new TL_messages_editMessage();
        TL_messageMediaPoll tL_messageMediaPoll = (TL_messageMediaPoll) messageObject.messageOwner.media;
        TL_inputMediaPoll tL_inputMediaPoll = new TL_inputMediaPoll();
        tL_inputMediaPoll.poll = new TL_poll();
        TL_poll tL_poll = tL_inputMediaPoll.poll;
        TL_poll tL_poll2 = tL_messageMediaPoll.poll;
        tL_poll.id = tL_poll2.id;
        tL_poll.question = tL_poll2.question;
        tL_poll.answers = tL_poll2.answers;
        tL_poll.closed = true;
        tL_messages_editMessage.media = tL_inputMediaPoll;
        tL_messages_editMessage.peer = getMessagesController().getInputPeer((int) this.dialog_id);
        tL_messages_editMessage.id = messageObject.getId();
        tL_messages_editMessage.flags |= 16384;
        AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$xwzbg3LPdyrefyZidRAP_QNwGTE(this, alertDialogArr, getConnectionsManager().sendRequest(tL_messages_editMessage, new -$$Lambda$ChatActivity$o7IqOMfZbb_OvPyuKGDV1FCihUQ(this, alertDialogArr, tL_messages_editMessage))), 500);
    }

    public /* synthetic */ void lambda$null$92$ChatActivity(AlertDialog[] alertDialogArr, TL_messages_editMessage tL_messages_editMessage, TLObject tLObject, TL_error tL_error) {
        AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$S11I8KDYTTzhN55gKVA8bLS0s1s(alertDialogArr));
        if (tL_error == null) {
            getMessagesController().processUpdates((Updates) tLObject, false);
        } else {
            AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$gJ9MKWpQyCDA_EYY7VZ-IWaH7c4(this, tL_error, tL_messages_editMessage));
        }
    }

    static /* synthetic */ void lambda$null$90(AlertDialog[] alertDialogArr) {
        try {
            alertDialogArr[0].dismiss();
        } catch (Throwable unused) {
        }
        alertDialogArr[0] = null;
    }

    public /* synthetic */ void lambda$null$91$ChatActivity(TL_error tL_error, TL_messages_editMessage tL_messages_editMessage) {
        AlertsCreator.processError(this.currentAccount, tL_error, this, tL_messages_editMessage, new Object[0]);
    }

    public /* synthetic */ void lambda$null$94$ChatActivity(AlertDialog[] alertDialogArr, int i) {
        if (alertDialogArr[0] != null) {
            alertDialogArr[0].setOnCancelListener(new -$$Lambda$ChatActivity$N4_MWOGQoX8d63w1bi16ygA_wMY(this, i));
            showDialog(alertDialogArr[0]);
        }
    }

    public /* synthetic */ void lambda$null$93$ChatActivity(int i, DialogInterface dialogInterface) {
        getConnectionsManager().cancelRequest(i, true);
    }

    public /* synthetic */ void lambda$processSelectedOption$98$ChatActivity(TL_messages_sendScheduledMessages tL_messages_sendScheduledMessages, TLObject tLObject, TL_error tL_error) {
        if (tL_error == null) {
            MessagesController.getInstance(this.currentAccount).processUpdates((Updates) tLObject, false);
            AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$b5QQ2xMKVWW7lTybi-vdwWw2SJs(this, tL_messages_sendScheduledMessages));
        } else if (tL_error.text != null) {
            AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$mO1FLQFCh-oowWOWG_FLPbrg2nQ(this, tL_error));
        }
    }

    public /* synthetic */ void lambda$null$96$ChatActivity(TL_messages_sendScheduledMessages tL_messages_sendScheduledMessages) {
        NotificationCenter.getInstance(this.currentAccount).postNotificationName(NotificationCenter.messagesDeleted, tL_messages_sendScheduledMessages.id, Integer.valueOf((int) (-this.dialog_id)), Boolean.valueOf(true));
    }

    public /* synthetic */ void lambda$null$97$ChatActivity(TL_error tL_error) {
        if (tL_error.text.startsWith("SLOWMODE_WAIT_")) {
            AlertsCreator.showSimpleToast(this, LocaleController.getString("SlowmodeSendError", NUM));
        } else if (tL_error.text.equals("CHAT_SEND_MEDIA_FORBIDDEN")) {
            AlertsCreator.showSimpleToast(this, LocaleController.getString("AttachMediaRestrictedForever", NUM));
        } else {
            AlertsCreator.showSimpleToast(this, tL_error.text);
        }
    }

    public /* synthetic */ void lambda$processSelectedOption$99$ChatActivity(GroupedMessages groupedMessages, MessageObject messageObject, boolean z, int i) {
        if (groupedMessages != null) {
            SendMessagesHelper.getInstance(this.currentAccount).editMessage((MessageObject) groupedMessages.messages.get(0), null, false, this, null, i, null);
        } else {
            SendMessagesHelper.getInstance(this.currentAccount).editMessage(messageObject, null, false, this, null, i, null);
        }
    }

    public void didSelectDialogs(DialogsActivity dialogsActivity, ArrayList<Long> arrayList, CharSequence charSequence, boolean z) {
        ArrayList<Long> arrayList2 = arrayList;
        int i = 0;
        if (this.forwardingMessage != null || this.selectedMessagesIds[0].size() != 0 || this.selectedMessagesIds[1].size() != 0) {
            ArrayList arrayList3 = new ArrayList();
            MessageObject messageObject = this.forwardingMessage;
            if (messageObject != null) {
                GroupedMessages groupedMessages = this.forwardingMessageGroup;
                if (groupedMessages != null) {
                    arrayList3.addAll(groupedMessages.messages);
                } else {
                    arrayList3.add(messageObject);
                }
                this.forwardingMessage = null;
                this.forwardingMessageGroup = null;
            } else {
                for (int i2 = 1; i2 >= 0; i2--) {
                    int i3;
                    ArrayList arrayList4 = new ArrayList();
                    for (i3 = 0; i3 < this.selectedMessagesIds[i2].size(); i3++) {
                        arrayList4.add(Integer.valueOf(this.selectedMessagesIds[i2].keyAt(i3)));
                    }
                    Collections.sort(arrayList4);
                    for (i3 = 0; i3 < arrayList4.size(); i3++) {
                        MessageObject messageObject2 = (MessageObject) this.selectedMessagesIds[i2].get(((Integer) arrayList4.get(i3)).intValue());
                        if (messageObject2 != null) {
                            arrayList3.add(messageObject2);
                        }
                    }
                    this.selectedMessagesCanCopyIds[i2].clear();
                    this.selectedMessagesCanStarIds[i2].clear();
                    this.selectedMessagesIds[i2].clear();
                }
                hideActionMode();
                updatePinnedMessageView(true);
            }
            DialogsActivity dialogsActivity2;
            if (arrayList.size() > 1 || ((Long) arrayList2.get(0)).longValue() == ((long) getUserConfig().getClientUserId()) || charSequence != null) {
                dialogsActivity2 = dialogsActivity;
                while (i < arrayList.size()) {
                    long longValue = ((Long) arrayList2.get(i)).longValue();
                    if (charSequence != null) {
                        getSendMessagesHelper().sendMessage(charSequence.toString(), longValue, null, null, true, null, null, null, true, 0);
                    }
                    getSendMessagesHelper().sendMessage(arrayList3, longValue, true, 0);
                    i++;
                }
                dialogsActivity.finishFragment();
            } else {
                long longValue2 = ((Long) arrayList2.get(0)).longValue();
                if (longValue2 != this.dialog_id) {
                    int i4 = (int) longValue2;
                    i = (int) (longValue2 >> 32);
                    Bundle bundle = new Bundle();
                    bundle.putBoolean("scrollToTopOnResume", this.scrollToTopOnResume);
                    if (i4 == 0) {
                        bundle.putInt("enc_id", i);
                    } else if (i4 > 0) {
                        bundle.putInt("user_id", i4);
                    } else if (i4 < 0) {
                        bundle.putInt("chat_id", -i4);
                    }
                    if (i4 == 0) {
                        dialogsActivity2 = dialogsActivity;
                    } else if (!getMessagesController().checkCanOpenChat(bundle, dialogsActivity)) {
                        return;
                    }
                    ChatActivity chatActivity = new ChatActivity(bundle);
                    if (presentFragment(chatActivity, true)) {
                        chatActivity.showFieldPanelForForward(true, arrayList3);
                        if (!AndroidUtilities.isTablet()) {
                            removeSelfFromStack();
                        }
                    } else {
                        dialogsActivity.finishFragment();
                    }
                } else {
                    dialogsActivity2 = dialogsActivity;
                    dialogsActivity.finishFragment();
                    moveScrollToLastMessage();
                    showFieldPanelForForward(true, arrayList3);
                    if (AndroidUtilities.isTablet()) {
                        hideActionMode();
                        updatePinnedMessageView(true);
                    }
                    updateVisibleRows();
                }
            }
        }
    }

    public boolean checkRecordLocked() {
        ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
        if (chatActivityEnterView == null || !chatActivityEnterView.isRecordLocked()) {
            return false;
        }
        AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
        if (this.chatActivityEnterView.isInVideoMode()) {
            builder.setTitle(LocaleController.getString("DiscardVideoMessageTitle", NUM));
            builder.setMessage(LocaleController.getString("DiscardVideoMessageDescription", NUM));
        } else {
            builder.setTitle(LocaleController.getString("DiscardVoiceMessageTitle", NUM));
            builder.setMessage(LocaleController.getString("DiscardVoiceMessageDescription", NUM));
        }
        builder.setPositiveButton(LocaleController.getString("DiscardVoiceMessageAction", NUM), new -$$Lambda$ChatActivity$jJQDKcBpgoaP1uDVCxRxvsjipL8(this));
        builder.setNegativeButton(LocaleController.getString("Continue", NUM), null);
        showDialog(builder.create());
        return true;
    }

    public /* synthetic */ void lambda$checkRecordLocked$100$ChatActivity(DialogInterface dialogInterface, int i) {
        ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
        if (chatActivityEnterView != null) {
            chatActivityEnterView.cancelRecordingAudioVideo();
        }
    }

    public boolean onBackPressed() {
        if (this.messagesSearchListView.getTag() != null) {
            showMessagesSearchListView(false);
            return false;
        }
        ActionBarPopupWindow actionBarPopupWindow = this.scrimPopupWindow;
        if (actionBarPopupWindow != null) {
            actionBarPopupWindow.dismiss();
            return false;
        } else if (checkRecordLocked()) {
            return false;
        } else {
            if (this.textSelectionHelper.isSelectionMode()) {
                this.textSelectionHelper.clear();
                return false;
            }
            ActionBar actionBar = this.actionBar;
            if (actionBar == null || !actionBar.isActionModeShowed()) {
                ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
                if (chatActivityEnterView == null || !chatActivityEnterView.isPopupShowing()) {
                    return true;
                }
                this.chatActivityEnterView.hidePopup(true);
                return false;
            }
            clearSelectionMode();
            return false;
        }
    }

    private void clearSelectionMode() {
        for (int i = 1; i >= 0; i--) {
            this.selectedMessagesIds[i].clear();
            this.selectedMessagesCanCopyIds[i].clear();
            this.selectedMessagesCanStarIds[i].clear();
        }
        hideActionMode();
        updatePinnedMessageView(true);
        updateVisibleRows();
    }

    /* JADX WARNING: Removed duplicated region for block: B:16:0x0037  */
    /* JADX WARNING: Removed duplicated region for block: B:15:0x0032  */
    /* JADX WARNING: Removed duplicated region for block: B:19:0x003c  */
    /* JADX WARNING: Removed duplicated region for block: B:71:0x0128  */
    private void updateVisibleRows() {
        /*
        r16 = this;
        r0 = r16;
        r1 = r0.chatListView;
        if (r1 != 0) goto L_0x0007;
    L_0x0006:
        return;
    L_0x0007:
        r2 = r0.wasManualScroll;
        r3 = -1;
        if (r2 != 0) goto L_0x0026;
    L_0x000c:
        r2 = r0.unreadMessageObject;
        if (r2 == 0) goto L_0x0026;
    L_0x0010:
        r1 = r1.getMeasuredHeight();
        if (r1 == 0) goto L_0x0026;
    L_0x0016:
        r1 = r0.messages;
        r2 = r0.unreadMessageObject;
        r1 = r1.indexOf(r2);
        if (r1 < 0) goto L_0x0026;
    L_0x0020:
        r2 = r0.chatAdapter;
        r2 = r2.messagesStartRow;
        r1 = r1 + r2;
        goto L_0x0027;
    L_0x0026:
        r1 = -1;
    L_0x0027:
        r2 = r0.chatListView;
        r2 = r2.getChildCount();
        r4 = r0.chatActivityEnterView;
        r5 = 0;
        if (r4 == 0) goto L_0x0037;
    L_0x0032:
        r4 = r4.getEditingMessageObject();
        goto L_0x0038;
    L_0x0037:
        r4 = r5;
    L_0x0038:
        r6 = 0;
        r7 = 0;
    L_0x003a:
        if (r7 >= r2) goto L_0x0121;
    L_0x003c:
        r8 = r0.chatListView;
        r8 = r8.getChildAt(r7);
        r9 = r8 instanceof org.telegram.ui.Cells.ChatMessageCell;
        if (r9 == 0) goto L_0x010f;
    L_0x0046:
        r8 = (org.telegram.ui.Cells.ChatMessageCell) r8;
        r9 = r8.getMessageObject();
        r10 = r0.actionBar;
        r10 = r10.isActionModeShowed();
        r11 = 1;
        if (r10 == 0) goto L_0x0085;
    L_0x0055:
        r8.setCheckBoxVisible(r11, r11);
        r12 = r9.getDialogId();
        r14 = r0.dialog_id;
        r10 = (r12 > r14 ? 1 : (r12 == r14 ? 0 : -1));
        if (r10 != 0) goto L_0x0064;
    L_0x0062:
        r10 = 0;
        goto L_0x0065;
    L_0x0064:
        r10 = 1;
    L_0x0065:
        if (r9 == r4) goto L_0x007e;
    L_0x0067:
        r12 = r0.selectedMessagesIds;
        r12 = r12[r10];
        r13 = r9.getId();
        r12 = r12.indexOfKey(r13);
        if (r12 < 0) goto L_0x0076;
    L_0x0075:
        goto L_0x007e;
    L_0x0076:
        r8.setDrawSelectionBackground(r6);
        r8.setChecked(r6, r6, r11);
        r10 = 0;
        goto L_0x0082;
    L_0x007e:
        r0.setCellSelectionBackground(r9, r8, r10, r11);
        r10 = 1;
    L_0x0082:
        r12 = r10;
        r10 = 1;
        goto L_0x0090;
    L_0x0085:
        r8.setDrawSelectionBackground(r6);
        r8.setCheckBoxVisible(r6, r11);
        r8.setChecked(r6, r6, r11);
        r10 = 0;
        r12 = 0;
    L_0x0090:
        r13 = r8.getMessageObject();
        r14 = r8.getCurrentMessagesGroup();
        r15 = r8.isPinnedBottom();
        r6 = r8.isPinnedTop();
        r8.setMessageObject(r13, r14, r15, r6);
        r6 = r0.scrimView;
        if (r8 == r6) goto L_0x00b3;
    L_0x00a7:
        r6 = r10 ^ 1;
        if (r10 == 0) goto L_0x00af;
    L_0x00ab:
        if (r12 == 0) goto L_0x00af;
    L_0x00ad:
        r10 = 1;
        goto L_0x00b0;
    L_0x00af:
        r10 = 0;
    L_0x00b0:
        r8.setCheckPressed(r6, r10);
    L_0x00b3:
        r6 = r0.highlightMessageId;
        r10 = NUM; // 0x7fffffff float:NaN double:1.060997895E-314;
        if (r6 == r10) goto L_0x00c6;
    L_0x00ba:
        if (r9 == 0) goto L_0x00c6;
    L_0x00bc:
        r6 = r9.getId();
        r12 = r0.highlightMessageId;
        if (r6 != r12) goto L_0x00c6;
    L_0x00c4:
        r6 = 1;
        goto L_0x00c7;
    L_0x00c6:
        r6 = 0;
    L_0x00c7:
        r8.setHighlighted(r6);
        r6 = r0.highlightMessageId;
        if (r6 == r10) goto L_0x00d1;
    L_0x00ce:
        r16.startMessageUnselect();
    L_0x00d1:
        r6 = r0.searchContainer;
        if (r6 == 0) goto L_0x010b;
    L_0x00d5:
        r6 = r6.getVisibility();
        if (r6 != 0) goto L_0x010b;
    L_0x00db:
        r6 = r16.getMediaDataController();
        r10 = r9.getId();
        r12 = r9.getDialogId();
        r14 = r0.mergeDialogId;
        r9 = (r12 > r14 ? 1 : (r12 == r14 ? 0 : -1));
        if (r9 != 0) goto L_0x00ee;
    L_0x00ed:
        goto L_0x00ef;
    L_0x00ee:
        r11 = 0;
    L_0x00ef:
        r6 = r6.isMessageFound(r10, r11);
        if (r6 == 0) goto L_0x010b;
    L_0x00f5:
        r6 = r16.getMediaDataController();
        r6 = r6.getLastSearchQuery();
        if (r6 == 0) goto L_0x010b;
    L_0x00ff:
        r6 = r16.getMediaDataController();
        r6 = r6.getLastSearchQuery();
        r8.setHighlightedText(r6);
        goto L_0x011c;
    L_0x010b:
        r8.setHighlightedText(r5);
        goto L_0x011c;
    L_0x010f:
        r6 = r8 instanceof org.telegram.ui.Cells.ChatActionCell;
        if (r6 == 0) goto L_0x011c;
    L_0x0113:
        r8 = (org.telegram.ui.Cells.ChatActionCell) r8;
        r6 = r8.getMessageObject();
        r8.setMessageObject(r6);
    L_0x011c:
        r7 = r7 + 1;
        r6 = 0;
        goto L_0x003a;
    L_0x0121:
        r2 = r0.chatListView;
        r2.invalidate();
        if (r1 == r3) goto L_0x0148;
    L_0x0128:
        r2 = r0.chatListView;
        r2 = r2.getMeasuredHeight();
        r3 = r0.chatListView;
        r3 = r3.getPaddingBottom();
        r2 = r2 - r3;
        r3 = r0.chatListView;
        r3 = r3.getPaddingTop();
        r2 = r2 - r3;
        r3 = NUM; // 0x41e80000 float:29.0 double:5.46299942E-315;
        r3 = org.telegram.messenger.AndroidUtilities.dp(r3);
        r2 = r2 - r3;
        r3 = r0.chatLayoutManager;
        r3.scrollToPositionWithOffset(r1, r2);
    L_0x0148:
        return;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.updateVisibleRows():void");
    }

    private void checkEditTimer() {
        ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
        if (chatActivityEnterView != null) {
            MessageObject editingMessageObject = chatActivityEnterView.getEditingMessageObject();
            if (!(editingMessageObject == null || editingMessageObject.scheduled)) {
                User user = this.currentUser;
                if (user == null || !user.self) {
                    int abs = editingMessageObject.canEditMessageAnytime(this.currentChat) ? 360 : (getMessagesController().maxEditTime + 300) - Math.abs(getConnectionsManager().getCurrentTime() - editingMessageObject.messageOwner.date);
                    if (abs > 0) {
                        if (abs <= 300) {
                            this.replyObjectTextView.setText(LocaleController.formatString("TimeToEdit", NUM, AndroidUtilities.formatShortDuration(abs)));
                        }
                        AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$BhRjZmtnKKyPZ5cOcgFDHcn6z6c(this), 1000);
                    } else {
                        this.chatActivityEnterView.onEditTimeExpired();
                        this.replyObjectTextView.setText(LocaleController.formatString("TimeToEditExpired", NUM, new Object[0]));
                    }
                }
            }
        }
    }

    private ArrayList<MessageObject> createVoiceMessagesPlaylist(MessageObject messageObject, boolean z) {
        ArrayList arrayList = new ArrayList();
        arrayList.add(messageObject);
        int id = messageObject.getId();
        messageObject.getDialogId();
        if (id != 0) {
            for (int size = this.messages.size() - 1; size >= 0; size--) {
                MessageObject messageObject2 = (MessageObject) this.messages.get(size);
                if ((messageObject2.getDialogId() != this.mergeDialogId || messageObject.getDialogId() == this.mergeDialogId) && (((this.currentEncryptedChat == null && messageObject2.getId() > id) || (this.currentEncryptedChat != null && messageObject2.getId() < id)) && ((messageObject2.isVoice() || messageObject2.isRoundVideo()) && (!z || (messageObject2.isContentUnread() && !messageObject2.isOut()))))) {
                    arrayList.add(messageObject2);
                }
            }
        }
        return arrayList;
    }

    private void alertUserOpenError(MessageObject messageObject) {
        if (getParentActivity() != null) {
            AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
            builder.setTitle(LocaleController.getString("AppName", NUM));
            builder.setPositiveButton(LocaleController.getString("OK", NUM), null);
            if (messageObject.type == 3) {
                builder.setMessage(LocaleController.getString("NoPlayerInstalled", NUM));
            } else {
                builder.setMessage(LocaleController.formatString("NoHandleAppInstalled", NUM, messageObject.getDocument().mime_type));
            }
            showDialog(builder.create());
        }
    }

    private void openSearchWithText(String str) {
        if (!this.actionBar.isSearchFieldVisible()) {
            this.avatarContainer.setVisibility(8);
            this.headerItem.setVisibility(8);
            this.attachItem.setVisibility(8);
            this.editTextItem.setVisibility(8);
            this.searchItem.setVisibility(0);
            updateSearchButtons(0, 0, -1);
            updateBottomOverlay();
        }
        this.openSearchKeyboard = str == null;
        this.searchItem.openSearch(this.openSearchKeyboard);
        if (str != null) {
            this.searchItem.setSearchFieldText(str, false);
            getMediaDataController().searchMessagesInChat(str, this.dialog_id, this.mergeDialogId, this.classGuid, 0, this.searchingUserMessages);
        }
        updatePinnedMessageView(true);
    }

    public void didSelectLocation(MessageMedia messageMedia, int i, boolean z, int i2) {
        getSendMessagesHelper().sendMessage(messageMedia, this.dialog_id, this.replyingMessageObject, null, null, z, i2);
        if (!this.inScheduleMode) {
            moveScrollToLastMessage();
        }
        if (i == 0 || i == 1) {
            afterMessageSend();
        }
        if (this.paused) {
            this.scrollToTopOnResume = true;
        }
    }

    public boolean isEditingMessageMedia() {
        ChatAttachAlert chatAttachAlert = this.chatAttachAlert;
        return (chatAttachAlert == null || chatAttachAlert.getEditingMessageObject() == null) ? false : true;
    }

    public boolean isSecretChat() {
        return this.currentEncryptedChat != null;
    }

    public boolean canScheduleMessage() {
        if (this.currentEncryptedChat == null) {
            FrameLayout frameLayout = this.bottomOverlayChat;
            if (frameLayout == null || frameLayout.getVisibility() != 0) {
                return true;
            }
        }
        return false;
    }

    public boolean isInScheduleMode() {
        return this.inScheduleMode;
    }

    public User getCurrentUser() {
        return this.currentUser;
    }

    public Chat getCurrentChat() {
        return this.currentChat;
    }

    public boolean allowGroupPhotos() {
        if (!isEditingMessageMedia()) {
            EncryptedChat encryptedChat = this.currentEncryptedChat;
            if (encryptedChat == null || AndroidUtilities.getPeerLayerVersion(encryptedChat.layer) >= 73) {
                return true;
            }
        }
        return false;
    }

    public EncryptedChat getCurrentEncryptedChat() {
        return this.currentEncryptedChat;
    }

    public ChatFull getCurrentChatInfo() {
        return this.chatInfo;
    }

    public UserFull getCurrentUserInfo() {
        return this.userInfo;
    }

    public void sendMedia(PhotoEntry photoEntry, VideoEditedInfo videoEditedInfo, boolean z, int i) {
        PhotoEntry photoEntry2 = photoEntry;
        VideoEditedInfo videoEditedInfo2 = videoEditedInfo;
        if (photoEntry2 != null) {
            fillEditingMediaWithCaption(photoEntry2.caption, photoEntry2.entities);
            if (photoEntry2.isVideo) {
                if (videoEditedInfo2 != null) {
                    SendMessagesHelper.prepareSendingVideo(getAccountInstance(), photoEntry2.path, videoEditedInfo2.estimatedSize, videoEditedInfo2.estimatedDuration, videoEditedInfo2.resultWidth, videoEditedInfo2.resultHeight, videoEditedInfo, this.dialog_id, this.replyingMessageObject, photoEntry2.caption, photoEntry2.entities, photoEntry2.ttl, this.editingMessageObject, z, i);
                } else {
                    SendMessagesHelper.prepareSendingVideo(getAccountInstance(), photoEntry2.path, 0, 0, 0, 0, null, this.dialog_id, this.replyingMessageObject, photoEntry2.caption, photoEntry2.entities, photoEntry2.ttl, this.editingMessageObject, z, i);
                }
                afterMessageSend();
            } else if (photoEntry2.imagePath != null) {
                SendMessagesHelper.prepareSendingPhoto(getAccountInstance(), photoEntry2.imagePath, null, this.dialog_id, this.replyingMessageObject, photoEntry2.caption, photoEntry2.entities, photoEntry2.stickers, null, photoEntry2.ttl, this.editingMessageObject, z, i);
                afterMessageSend();
            } else if (photoEntry2.path != null) {
                SendMessagesHelper.prepareSendingPhoto(getAccountInstance(), photoEntry2.path, null, this.dialog_id, this.replyingMessageObject, photoEntry2.caption, photoEntry2.entities, photoEntry2.stickers, null, photoEntry2.ttl, this.editingMessageObject, z, i);
                afterMessageSend();
            }
        }
    }

    /* JADX WARNING: Missing block: B:23:0x00b5, code skipped:
            if (r14 != null) goto L_0x00b9;
     */
    public void showOpenGameAlert(org.telegram.tgnet.TLRPC.TL_game r10, org.telegram.messenger.MessageObject r11, java.lang.String r12, boolean r13, int r14) {
        /*
        r9 = this;
        r0 = r9.getMessagesController();
        r1 = java.lang.Integer.valueOf(r14);
        r0 = r0.getUser(r1);
        r1 = 1;
        r2 = "";
        if (r13 == 0) goto L_0x006d;
    L_0x0011:
        r13 = new org.telegram.ui.ActionBar.AlertDialog$Builder;
        r3 = r9.getParentActivity();
        r13.<init>(r3);
        r3 = NUM; // 0x7f0e00f9 float:1.8875543E38 double:1.0531622797E-314;
        r4 = "AppName";
        r3 = org.telegram.messenger.LocaleController.getString(r4, r3);
        r13.setTitle(r3);
        if (r0 == 0) goto L_0x0030;
    L_0x0028:
        r2 = r0.first_name;
        r0 = r0.last_name;
        r2 = org.telegram.messenger.ContactsController.formatName(r2, r0);
    L_0x0030:
        r0 = NUM; // 0x7f0e01ed float:1.8876037E38 double:1.0531624E-314;
        r1 = new java.lang.Object[r1];
        r3 = 0;
        r1[r3] = r2;
        r2 = "BotPermissionGameAlert";
        r0 = org.telegram.messenger.LocaleController.formatString(r2, r0, r1);
        r13.setMessage(r0);
        r0 = NUM; // 0x7f0e076c float:1.8878891E38 double:1.0531630954E-314;
        r1 = "OK";
        r0 = org.telegram.messenger.LocaleController.getString(r1, r0);
        r7 = new org.telegram.ui.-$$Lambda$ChatActivity$XpdeFKB0Cf3hJz8AcxFUhjc1Qx8;
        r1 = r7;
        r2 = r9;
        r3 = r10;
        r4 = r11;
        r5 = r12;
        r6 = r14;
        r1.<init>(r2, r3, r4, r5, r6);
        r13.setPositiveButton(r0, r7);
        r10 = NUM; // 0x7f0e0214 float:1.8876117E38 double:1.0531624195E-314;
        r11 = "Cancel";
        r10 = org.telegram.messenger.LocaleController.getString(r11, r10);
        r11 = 0;
        r13.setNegativeButton(r10, r11);
        r10 = r13.create();
        r9.showDialog(r10);
        goto L_0x00bc;
    L_0x006d:
        r13 = android.os.Build.VERSION.SDK_INT;
        r14 = 21;
        if (r13 < r14) goto L_0x00ab;
    L_0x0073:
        r13 = org.telegram.messenger.AndroidUtilities.isTablet();
        if (r13 != 0) goto L_0x00ab;
    L_0x0079:
        r13 = org.telegram.ui.WebviewActivity.supportWebview();
        if (r13 == 0) goto L_0x00ab;
    L_0x007f:
        r13 = r9.parentLayout;
        r13 = r13.fragmentsStack;
        r14 = r13.size();
        r14 = r14 - r1;
        r13 = r13.get(r14);
        if (r13 != r9) goto L_0x00bc;
    L_0x008e:
        r13 = new org.telegram.ui.WebviewActivity;
        if (r0 == 0) goto L_0x009c;
    L_0x0092:
        r14 = r0.username;
        r14 = android.text.TextUtils.isEmpty(r14);
        if (r14 != 0) goto L_0x009c;
    L_0x009a:
        r2 = r0.username;
    L_0x009c:
        r5 = r2;
        r6 = r10.title;
        r7 = r10.short_name;
        r3 = r13;
        r4 = r12;
        r8 = r11;
        r3.<init>(r4, r5, r6, r7, r8);
        r9.presentFragment(r13);
        goto L_0x00bc;
    L_0x00ab:
        r13 = r9.getParentActivity();
        r10 = r10.short_name;
        if (r0 == 0) goto L_0x00b8;
    L_0x00b3:
        r14 = r0.username;
        if (r14 == 0) goto L_0x00b8;
    L_0x00b7:
        goto L_0x00b9;
    L_0x00b8:
        r14 = r2;
    L_0x00b9:
        org.telegram.ui.WebviewActivity.openGameInBrowser(r12, r11, r13, r10, r14);
    L_0x00bc:
        return;
        */
        throw new UnsupportedOperationException("Method not decompiled: org.telegram.ui.ChatActivity.showOpenGameAlert(org.telegram.tgnet.TLRPC$TL_game, org.telegram.messenger.MessageObject, java.lang.String, boolean, int):void");
    }

    public /* synthetic */ void lambda$showOpenGameAlert$101$ChatActivity(TL_game tL_game, MessageObject messageObject, String str, int i, DialogInterface dialogInterface, int i2) {
        showOpenGameAlert(tL_game, messageObject, str, false, i);
        Editor edit = MessagesController.getNotificationsSettings(this.currentAccount).edit();
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("askgame_");
        stringBuilder.append(i);
        edit.putBoolean(stringBuilder.toString(), false).commit();
    }

    public void showOpenUrlAlert(String str, boolean z) {
        boolean z2 = true;
        if (Browser.isInternalUrl(str, null) || !z) {
            Context parentActivity = getParentActivity();
            if (this.inlineReturn != 0) {
                z2 = false;
            }
            Browser.openUrl(parentActivity, str, z2);
        } else if (getParentActivity() != null) {
            AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
            builder.setTitle(LocaleController.getString("OpenUrlTitle", NUM));
            String string = LocaleController.getString("OpenUrlAlert2", NUM);
            int indexOf = string.indexOf("%");
            SpannableStringBuilder spannableStringBuilder = new SpannableStringBuilder(String.format(string, new Object[]{str}));
            if (indexOf >= 0) {
                spannableStringBuilder.setSpan(new URLSpan(str), indexOf, str.length() + indexOf, 33);
            }
            builder.setMessage(spannableStringBuilder);
            builder.setMessageTextViewClickable(false);
            builder.setPositiveButton(LocaleController.getString("Open", NUM), new -$$Lambda$ChatActivity$WgIHRioKDphvexTV-uq7f1AXT3Q(this, str));
            builder.setNegativeButton(LocaleController.getString("Cancel", NUM), null);
            showDialog(builder.create());
        }
    }

    public /* synthetic */ void lambda$showOpenUrlAlert$102$ChatActivity(String str, DialogInterface dialogInterface, int i) {
        Browser.openUrl(getParentActivity(), str, this.inlineReturn == 0);
    }

    public void showRequestUrlAlert(TL_urlAuthResultRequest tL_urlAuthResultRequest, TL_messages_requestUrlAuth tL_messages_requestUrlAuth, String str) {
        TL_urlAuthResultRequest tL_urlAuthResultRequest2 = tL_urlAuthResultRequest;
        String str2 = str;
        if (getParentActivity() != null) {
            AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
            builder.setTitle(LocaleController.getString("OpenUrlTitle", NUM));
            String string = LocaleController.getString("OpenUrlAlert2", NUM);
            int indexOf = string.indexOf("%");
            SpannableStringBuilder spannableStringBuilder = new SpannableStringBuilder(String.format(string, new Object[]{str2}));
            if (indexOf >= 0) {
                spannableStringBuilder.setSpan(new URLSpan(str2), indexOf, str.length() + indexOf, 33);
            }
            builder.setMessage(spannableStringBuilder);
            builder.setMessageTextViewClickable(false);
            builder.setNegativeButton(LocaleController.getString("Cancel", NUM), null);
            CheckBoxCell[] checkBoxCellArr = new CheckBoxCell[2];
            LinearLayout linearLayout = new LinearLayout(getParentActivity());
            linearLayout.setOrientation(1);
            User currentUser = getUserConfig().getCurrentUser();
            int i = 0;
            while (true) {
                if (i < (tL_urlAuthResultRequest2.request_write_access ? 2 : 1)) {
                    checkBoxCellArr[i] = new CheckBoxCell(getParentActivity(), 1);
                    checkBoxCellArr[i].setBackgroundDrawable(Theme.getSelectorDrawable(false));
                    checkBoxCellArr[i].setMultiline(true);
                    checkBoxCellArr[i].setTag(Integer.valueOf(i));
                    String str3 = "";
                    if (i == 0) {
                        SpannableStringBuilder replaceTags = AndroidUtilities.replaceTags(LocaleController.formatString("OpenUrlOption1", NUM, tL_urlAuthResultRequest2.domain, ContactsController.formatName(currentUser.first_name, currentUser.last_name)));
                        int indexOf2 = TextUtils.indexOf(replaceTags, tL_urlAuthResultRequest2.domain);
                        if (indexOf2 >= 0) {
                            replaceTags.setSpan(new URLSpan(str3), indexOf2, tL_urlAuthResultRequest2.domain.length() + indexOf2, 33);
                        }
                        checkBoxCellArr[i].setText(replaceTags, str3, true, false);
                    } else if (i == 1) {
                        checkBoxCellArr[i].setText(AndroidUtilities.replaceTags(LocaleController.formatString("OpenUrlOption2", NUM, UserObject.getFirstName(tL_urlAuthResultRequest2.bot))), str3, true, false);
                    }
                    checkBoxCellArr[i].setPadding(LocaleController.isRTL ? AndroidUtilities.dp(16.0f) : AndroidUtilities.dp(8.0f), 0, LocaleController.isRTL ? AndroidUtilities.dp(8.0f) : AndroidUtilities.dp(16.0f), 0);
                    linearLayout.addView(checkBoxCellArr[i], LayoutHelper.createLinear(-1, -2));
                    checkBoxCellArr[i].setOnClickListener(new -$$Lambda$ChatActivity$VQFvSbjHYDddE7UuiKqyRPBBg5o(checkBoxCellArr));
                    i++;
                } else {
                    builder.setCustomViewOffset(12);
                    builder.setView(linearLayout);
                    builder.setPositiveButton(LocaleController.getString("Open", NUM), new -$$Lambda$ChatActivity$3ynR0Wu8gucLJqJl_pwbaLYIyXc(this, checkBoxCellArr, str, tL_messages_requestUrlAuth, tL_urlAuthResultRequest));
                    showDialog(builder.create());
                    return;
                }
            }
        }
    }

    static /* synthetic */ void lambda$showRequestUrlAlert$103(CheckBoxCell[] checkBoxCellArr, View view) {
        if (view.isEnabled()) {
            Integer num = (Integer) view.getTag();
            checkBoxCellArr[num.intValue()].setChecked(checkBoxCellArr[num.intValue()].isChecked() ^ 1, true);
            if (num.intValue() == 0 && checkBoxCellArr[1] != null) {
                if (checkBoxCellArr[num.intValue()].isChecked()) {
                    checkBoxCellArr[1].setEnabled(true);
                } else {
                    checkBoxCellArr[1].setChecked(false, true);
                    checkBoxCellArr[1].setEnabled(false);
                }
            }
        }
    }

    public /* synthetic */ void lambda$showRequestUrlAlert$108$ChatActivity(CheckBoxCell[] checkBoxCellArr, String str, TL_messages_requestUrlAuth tL_messages_requestUrlAuth, TL_urlAuthResultRequest tL_urlAuthResultRequest, DialogInterface dialogInterface, int i) {
        if (checkBoxCellArr[0].isChecked()) {
            AlertDialog[] alertDialogArr = new AlertDialog[]{new AlertDialog(getParentActivity(), 3)};
            TL_messages_acceptUrlAuth tL_messages_acceptUrlAuth = new TL_messages_acceptUrlAuth();
            tL_messages_acceptUrlAuth.button_id = tL_messages_requestUrlAuth.button_id;
            tL_messages_acceptUrlAuth.msg_id = tL_messages_requestUrlAuth.msg_id;
            tL_messages_acceptUrlAuth.peer = tL_messages_requestUrlAuth.peer;
            if (tL_urlAuthResultRequest.request_write_access) {
                tL_messages_acceptUrlAuth.write_allowed = checkBoxCellArr[1].isChecked();
            }
            try {
                alertDialogArr[0].dismiss();
            } catch (Throwable unused) {
            }
            alertDialogArr[0] = null;
            AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$-buEOypPj3owHNORgmNwwvCp6k0(this, alertDialogArr, getConnectionsManager().sendRequest(tL_messages_acceptUrlAuth, new -$$Lambda$ChatActivity$qpj95jorfVyaa3tNzciSnhEmjVU(this, str))), 500);
            return;
        }
        Browser.openUrl(getParentActivity(), str, false);
    }

    public /* synthetic */ void lambda$null$105$ChatActivity(String str, TLObject tLObject, TL_error tL_error) {
        AndroidUtilities.runOnUIThread(new -$$Lambda$ChatActivity$Z881-boRrpAeVl7DfDOZIkDWDl8(this, tLObject, str));
    }

    public /* synthetic */ void lambda$null$104$ChatActivity(TLObject tLObject, String str) {
        if (tLObject instanceof TL_urlAuthResultAccepted) {
            Browser.openUrl(getParentActivity(), ((TL_urlAuthResultAccepted) tLObject).url, false);
        } else if (tLObject instanceof TL_urlAuthResultDefault) {
            Browser.openUrl(getParentActivity(), str, false);
        }
    }

    public /* synthetic */ void lambda$null$107$ChatActivity(AlertDialog[] alertDialogArr, int i) {
        if (alertDialogArr[0] != null) {
            alertDialogArr[0].setOnCancelListener(new -$$Lambda$ChatActivity$cMXb9oFU6FZUvMzKGKxeDWPxshQ(this, i));
            showDialog(alertDialogArr[0]);
        }
    }

    public /* synthetic */ void lambda$null$106$ChatActivity(int i, DialogInterface dialogInterface) {
        getConnectionsManager().cancelRequest(i, true);
    }

    private void removeMessageObject(MessageObject messageObject) {
        int indexOf = this.messages.indexOf(messageObject);
        if (indexOf != -1) {
            this.messages.remove(indexOf);
            ChatActivityAdapter chatActivityAdapter = this.chatAdapter;
            if (chatActivityAdapter != null) {
                chatActivityAdapter.notifyItemRemoved(chatActivityAdapter.messagesStartRow + indexOf);
            }
        }
    }

    public void openVCard(User user, String str, String str2, String str3) {
        try {
            File sharingDirectory = AndroidUtilities.getSharingDirectory();
            sharingDirectory.mkdirs();
            File file = new File(sharingDirectory, "vcard.vcf");
            BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(file));
            bufferedWriter.write(str);
            bufferedWriter.close();
            showDialog(new PhonebookShareAlert(this, null, user, null, file, ContactsController.formatName(str2, str3)));
        } catch (Exception e) {
            FileLog.e(e);
        }
    }

    private void setCellSelectionBackground(MessageObject messageObject, ChatMessageCell chatMessageCell, int i, boolean z) {
        GroupedMessages validGroupedMessage = getValidGroupedMessage(messageObject);
        boolean z2 = false;
        if (validGroupedMessage != null) {
            Object obj;
            for (int i2 = 0; i2 < validGroupedMessage.messages.size(); i2++) {
                if (this.selectedMessagesIds[i].indexOfKey(((MessageObject) validGroupedMessage.messages.get(i2)).getId()) < 0) {
                    obj = 1;
                    break;
                }
            }
            obj = null;
            if (obj == null) {
                validGroupedMessage = null;
            }
        }
        chatMessageCell.setDrawSelectionBackground(validGroupedMessage == null);
        if (validGroupedMessage == null) {
            z2 = true;
        }
        chatMessageCell.setChecked(true, z2, z);
    }

    private void updateMessageListAccessibilityVisibility() {
        if (this.currentEncryptedChat == null && VERSION.SDK_INT >= 19) {
            int i;
            RecyclerListView recyclerListView = this.chatListView;
            if (this.mentionContainer.getVisibility() != 0) {
                ActionBarPopupWindow actionBarPopupWindow = this.scrimPopupWindow;
                if (actionBarPopupWindow == null || !actionBarPopupWindow.isShowing()) {
                    i = 0;
                    recyclerListView.setImportantForAccessibility(i);
                }
            }
            i = 4;
            recyclerListView.setImportantForAccessibility(i);
        }
    }

    public boolean canBeginSlide() {
        return this.swipeBackEnabled;
    }

    private boolean openLinkInternally(String str, int i) {
        if (!(this.currentChat == null || str == null)) {
            String str2 = "tg:privatepost";
            String str3 = "post";
            String str4 = "tg://privatepost";
            String str5 = "tg://telegram.org";
            Uri parse;
            int intValue;
            if (str.startsWith(str2) || str.startsWith(str4)) {
                parse = Uri.parse(str.replace(str2, str5).replace(str4, str5));
                intValue = Utilities.parseInt(parse.getQueryParameter(str3)).intValue();
                if (Utilities.parseInt(parse.getQueryParameter("channel")).intValue() == this.currentChat.id && intValue != 0) {
                    this.showScrollToMessageError = true;
                    scrollToMessageId(intValue, i, true, 0, false);
                    return true;
                }
            }
            str2 = this.currentChat.username;
            if (str2 != null) {
                str2 = str2.toLowerCase();
                if (publicMsgUrlPattern == null) {
                    publicMsgUrlPattern = Pattern.compile("(https://)?t.me/([0-9a-zA-Z_]+)/([0-9]+)");
                }
                Matcher matcher = publicMsgUrlPattern.matcher(str);
                if (matcher.find(2) && matcher.find(3) && str2.equals(matcher.group(2).toLowerCase())) {
                    int parseInt = Integer.parseInt(matcher.group(3));
                    this.showScrollToMessageError = true;
                    scrollToMessageId(parseInt, i, true, 0, false);
                    return true;
                }
                String str6 = "tg:resolve";
                String str7 = "tg://resolve";
                if (str.startsWith(str6) || str.startsWith(str7)) {
                    parse = Uri.parse(str.replace(str6, str5).replace(str7, str5));
                    str6 = parse.getQueryParameter("domain").toLowerCase();
                    intValue = Utilities.parseInt(parse.getQueryParameter(str3)).intValue();
                    if (str2.equals(str6) && intValue != 0) {
                        scrollToMessageId(intValue, i, true, 0, false);
                        return true;
                    }
                }
            }
            if (privateMsgUrlPattern == null) {
                privateMsgUrlPattern = Pattern.compile("(https://)?t.me/c/([0-9]+)/([0-9]+)");
            }
            Matcher matcher2 = privateMsgUrlPattern.matcher(str);
            if (matcher2.find(2) && matcher2.find(3)) {
                int parseInt2 = Integer.parseInt(matcher2.group(2));
                intValue = Integer.parseInt(matcher2.group(3));
                if (parseInt2 == this.currentChat.id && intValue != 0) {
                    this.showScrollToMessageError = true;
                    scrollToMessageId(intValue, i, true, 0, false);
                    return true;
                }
            }
        }
        return false;
    }

    public static boolean isClickableLink(String str) {
        return str.startsWith("https://") || str.startsWith("@") || str.startsWith("#") || str.startsWith("$");
    }

    public ThemeDescription[] getThemeDescriptions() {
        View subtitleTextView;
        -$$Lambda$ChatActivity$nW_h0JtnxM-SsgjEZ2py69Fkjm0 -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm0 = new -$$Lambda$ChatActivity$nW_h0JtnxM-SsgjEZ2py69Fkjm0(this);
        ThemeDescription[] themeDescriptionArr = new ThemeDescription[441];
        themeDescriptionArr[0] = new ThemeDescription(this.fragmentView, 0, null, null, null, null, "chat_wallpaper");
        themeDescriptionArr[1] = new ThemeDescription(this.fragmentView, 0, null, null, null, null, "chat_wallpaper_gradient_to");
        themeDescriptionArr[2] = new ThemeDescription(this.messagesSearchListView, ThemeDescription.FLAG_BACKGROUND, null, null, null, null, "windowBackgroundWhite");
        themeDescriptionArr[3] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_BACKGROUND, null, null, null, null, "actionBarDefault");
        themeDescriptionArr[4] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_LISTGLOWCOLOR, null, null, null, null, "actionBarDefault");
        themeDescriptionArr[5] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_ITEMSCOLOR, null, null, null, null, "actionBarDefaultIcon");
        themeDescriptionArr[6] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_SELECTORCOLOR, null, null, null, null, "actionBarDefaultSelector");
        -$$Lambda$ChatActivity$nW_h0JtnxM-SsgjEZ2py69Fkjm0 -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm02 = -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm0;
        themeDescriptionArr[7] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_SUBMENUBACKGROUND, null, null, null, -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm02, "actionBarDefaultSubmenuBackground");
        themeDescriptionArr[8] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_SUBMENUITEM, null, null, null, -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm02, "actionBarDefaultSubmenuItem");
        themeDescriptionArr[9] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_IMAGECOLOR | ThemeDescription.FLAG_AB_SUBMENUITEM, null, null, null, -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm02, "actionBarDefaultSubmenuItemIcon");
        themeDescriptionArr[10] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_BACKGROUND, null, null, null, null, "actionBarDefault");
        themeDescriptionArr[11] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_LISTGLOWCOLOR, null, null, null, null, "actionBarDefault");
        themeDescriptionArr[12] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_ITEMSCOLOR, null, null, null, null, "actionBarDefaultIcon");
        ChatAvatarContainer chatAvatarContainer = this.avatarContainer;
        View view = null;
        themeDescriptionArr[13] = new ThemeDescription(chatAvatarContainer != null ? chatAvatarContainer.getTitleTextView() : null, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "actionBarDefaultTitle");
        ChatAvatarContainer chatAvatarContainer2 = this.avatarContainer;
        themeDescriptionArr[14] = new ThemeDescription(chatAvatarContainer2 != null ? chatAvatarContainer2.getTitleTextView() : null, ThemeDescription.FLAG_IMAGECOLOR, null, null, null, null, "actionBarDefaultSubtitle");
        chatAvatarContainer2 = this.avatarContainer;
        themeDescriptionArr[15] = new ThemeDescription(chatAvatarContainer2 != null ? chatAvatarContainer2.getSubtitleTextView() : null, ThemeDescription.FLAG_TEXTCOLOR | ThemeDescription.FLAG_CHECKTAG, null, new Paint[]{Theme.chat_statusPaint, Theme.chat_statusRecordPaint}, null, null, "chat_status", null);
        chatAvatarContainer2 = this.avatarContainer;
        if (chatAvatarContainer2 != null) {
            subtitleTextView = chatAvatarContainer2.getSubtitleTextView();
        } else {
            subtitleTextView = null;
        }
        themeDescriptionArr[16] = new ThemeDescription(subtitleTextView, ThemeDescription.FLAG_TEXTCOLOR | ThemeDescription.FLAG_CHECKTAG, null, null, null, null, "actionBarDefaultSubtitle", null);
        themeDescriptionArr[17] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_SELECTORCOLOR, null, null, null, null, "actionBarDefaultSelector");
        themeDescriptionArr[18] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_SEARCH, null, null, null, null, "actionBarDefaultSearch");
        themeDescriptionArr[19] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_SEARCHPLACEHOLDER, null, null, null, null, "actionBarDefaultSearchPlaceholder");
        themeDescriptionArr[20] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_AM_ITEMSCOLOR, null, null, null, null, "actionBarActionModeDefaultIcon");
        themeDescriptionArr[21] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_AM_BACKGROUND, null, null, null, null, "actionBarActionModeDefault");
        themeDescriptionArr[22] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_AM_TOPBACKGROUND, null, null, null, null, "actionBarActionModeDefaultTop");
        themeDescriptionArr[23] = new ThemeDescription(this.actionBar, ThemeDescription.FLAG_AB_AM_SELECTORCOLOR, null, null, null, null, "actionBarActionModeDefaultSelector");
        themeDescriptionArr[24] = new ThemeDescription(this.selectedMessagesCountTextView, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "actionBarActionModeDefaultIcon");
        chatAvatarContainer2 = this.avatarContainer;
        themeDescriptionArr[25] = new ThemeDescription(chatAvatarContainer2 != null ? chatAvatarContainer2.getTitleTextView() : null, 0, null, null, new Drawable[]{Theme.chat_muteIconDrawable}, null, "chat_muteIcon");
        chatAvatarContainer2 = this.avatarContainer;
        if (chatAvatarContainer2 != null) {
            subtitleTextView = chatAvatarContainer2.getTitleTextView();
        } else {
            subtitleTextView = null;
        }
        themeDescriptionArr[26] = new ThemeDescription(subtitleTextView, 0, null, null, new Drawable[]{Theme.chat_lockIconDrawable}, null, "chat_lockIcon");
        themeDescriptionArr[27] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.avatar_savedDrawable}, null, "avatar_text");
        themeDescriptionArr[28] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "avatar_backgroundRed");
        themeDescriptionArr[29] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "avatar_backgroundOrange");
        themeDescriptionArr[30] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "avatar_backgroundViolet");
        themeDescriptionArr[31] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "avatar_backgroundGreen");
        themeDescriptionArr[32] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "avatar_backgroundCyan");
        themeDescriptionArr[33] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "avatar_backgroundBlue");
        themeDescriptionArr[34] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "avatar_backgroundPink");
        themeDescriptionArr[35] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "avatar_nameInMessageRed");
        themeDescriptionArr[36] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "avatar_nameInMessageOrange");
        themeDescriptionArr[37] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "avatar_nameInMessageViolet");
        themeDescriptionArr[38] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "avatar_nameInMessageGreen");
        themeDescriptionArr[39] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "avatar_nameInMessageCyan");
        themeDescriptionArr[40] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "avatar_nameInMessageBlue");
        themeDescriptionArr[41] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "avatar_nameInMessagePink");
        themeDescriptionArr[42] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class, BotHelpCell.class}, null, new Drawable[]{Theme.chat_msgInDrawable, Theme.chat_msgInMediaDrawable}, null, "chat_inBubble");
        themeDescriptionArr[43] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgInSelectedDrawable, Theme.chat_msgInMediaSelectedDrawable}, null, "chat_inBubbleSelected");
        themeDescriptionArr[44] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class, BotHelpCell.class}, null, new Drawable[]{Theme.chat_msgInShadowDrawable, Theme.chat_msgInMediaShadowDrawable}, null, "chat_inBubbleShadow");
        themeDescriptionArr[45] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgOutDrawable, Theme.chat_msgOutMediaDrawable}, null, "chat_outBubble");
        themeDescriptionArr[46] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgOutDrawable, Theme.chat_msgOutMediaDrawable}, null, "chat_outBubbleGradient");
        themeDescriptionArr[47] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgOutSelectedDrawable, Theme.chat_msgOutMediaSelectedDrawable}, null, "chat_outBubbleSelected");
        View view2 = this.chatListView;
        Class[] clsArr = new Class[]{ChatMessageCell.class};
        r5 = new Drawable[2];
        MessageDrawable messageDrawable = Theme.chat_msgOutSelectedDrawable;
        r5[0] = messageDrawable;
        r5[1] = messageDrawable;
        themeDescriptionArr[48] = new ThemeDescription(view2, 0, clsArr, null, r5, null, "chat_outBubbleGradientSelectedOverlay");
        themeDescriptionArr[49] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgOutShadowDrawable, Theme.chat_msgOutMediaShadowDrawable}, null, "chat_outBubbleShadow");
        themeDescriptionArr[50] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{ChatActionCell.class}, Theme.chat_actionTextPaint, null, null, "chat_serviceText");
        themeDescriptionArr[51] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_LINKCOLOR, new Class[]{ChatActionCell.class}, Theme.chat_actionTextPaint, null, null, "chat_serviceLink");
        themeDescriptionArr[52] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_shareIconDrawable, Theme.chat_replyIconDrawable, Theme.chat_botInlineDrawable, Theme.chat_botLinkDrawalbe, Theme.chat_goIconDrawable}, null, "chat_serviceIcon");
        themeDescriptionArr[53] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class, ChatActionCell.class}, null, null, null, "chat_serviceBackground");
        themeDescriptionArr[54] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class, ChatActionCell.class}, null, null, null, "chat_serviceBackgroundSelected");
        themeDescriptionArr[55] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class, BotHelpCell.class}, null, null, null, "chat_messageTextIn");
        themeDescriptionArr[56] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_messageTextOut");
        themeDescriptionArr[57] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_LINKCOLOR, new Class[]{ChatMessageCell.class, BotHelpCell.class}, null, null, null, "chat_messageLinkIn", null);
        themeDescriptionArr[58] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_LINKCOLOR, new Class[]{ChatMessageCell.class}, null, null, null, "chat_messageLinkOut", null);
        themeDescriptionArr[59] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgNoSoundDrawable}, null, "chat_mediaTimeText");
        themeDescriptionArr[60] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgOutCheckDrawable}, null, "chat_outSentCheck");
        themeDescriptionArr[61] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgOutCheckSelectedDrawable}, null, "chat_outSentCheckSelected");
        themeDescriptionArr[62] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgOutCheckReadDrawable, Theme.chat_msgOutHalfCheckDrawable}, null, "chat_outSentCheckRead");
        themeDescriptionArr[63] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgOutCheckReadSelectedDrawable, Theme.chat_msgOutHalfCheckSelectedDrawable}, null, "chat_outSentCheckReadSelected");
        themeDescriptionArr[64] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgOutClockDrawable}, null, "chat_outSentClock");
        themeDescriptionArr[65] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgOutSelectedClockDrawable}, null, "chat_outSentClockSelected");
        themeDescriptionArr[66] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgInClockDrawable}, null, "chat_inSentClock");
        themeDescriptionArr[67] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgInSelectedClockDrawable}, null, "chat_inSentClockSelected");
        themeDescriptionArr[68] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgMediaCheckDrawable, Theme.chat_msgMediaHalfCheckDrawable}, null, "chat_mediaSentCheck");
        themeDescriptionArr[69] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgStickerHalfCheckDrawable, Theme.chat_msgStickerCheckDrawable, Theme.chat_msgStickerClockDrawable, Theme.chat_msgStickerViewsDrawable}, null, "chat_serviceText");
        themeDescriptionArr[70] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgMediaClockDrawable}, null, "chat_mediaSentClock");
        themeDescriptionArr[71] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgOutViewsDrawable}, null, "chat_outViews");
        themeDescriptionArr[72] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgOutViewsSelectedDrawable}, null, "chat_outViewsSelected");
        themeDescriptionArr[73] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgInViewsDrawable}, null, "chat_inViews");
        themeDescriptionArr[74] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgInViewsSelectedDrawable}, null, "chat_inViewsSelected");
        themeDescriptionArr[75] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgMediaViewsDrawable}, null, "chat_mediaViews");
        themeDescriptionArr[76] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgOutMenuDrawable}, null, "chat_outMenu");
        themeDescriptionArr[77] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgOutMenuSelectedDrawable}, null, "chat_outMenuSelected");
        themeDescriptionArr[78] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgInMenuDrawable}, null, "chat_inMenu");
        themeDescriptionArr[79] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgInMenuSelectedDrawable}, null, "chat_inMenuSelected");
        themeDescriptionArr[80] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgMediaMenuDrawable}, null, "chat_mediaMenu");
        themeDescriptionArr[81] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgOutInstantDrawable, Theme.chat_msgOutCallDrawable}, null, "chat_outInstant");
        themeDescriptionArr[82] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgOutCallSelectedDrawable}, null, "chat_outInstantSelected");
        themeDescriptionArr[83] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgInInstantDrawable, Theme.chat_msgInCallDrawable}, null, "chat_inInstant");
        themeDescriptionArr[84] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgInCallSelectedDrawable}, null, "chat_inInstantSelected");
        themeDescriptionArr[85] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgCallUpGreenDrawable}, null, "chat_outUpCall");
        themeDescriptionArr[86] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgCallDownRedDrawable}, null, "chat_inUpCall");
        themeDescriptionArr[87] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgCallDownGreenDrawable}, null, "chat_inDownCall");
        themeDescriptionArr[88] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_msgErrorPaint, null, null, "chat_sentError");
        themeDescriptionArr[89] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_msgErrorDrawable}, null, "chat_sentErrorIcon");
        themeDescriptionArr[90] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm0, "chat_selectedBackground");
        themeDescriptionArr[91] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_durationPaint, null, null, "chat_previewDurationText");
        themeDescriptionArr[92] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_gamePaint, null, null, "chat_previewGameText");
        themeDescriptionArr[93] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inPreviewInstantText");
        themeDescriptionArr[94] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outPreviewInstantText");
        themeDescriptionArr[95] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inPreviewInstantSelectedText");
        themeDescriptionArr[96] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outPreviewInstantSelectedText");
        themeDescriptionArr[97] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_deleteProgressPaint, null, null, "chat_secretTimeText");
        themeDescriptionArr[98] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_stickerNameText");
        themeDescriptionArr[99] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_botButtonPaint, null, null, "chat_botButtonText");
        themeDescriptionArr[100] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_botProgressPaint, null, null, "chat_botProgress");
        themeDescriptionArr[101] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_timeBackgroundPaint, null, null, "chat_mediaTimeBackground");
        themeDescriptionArr[102] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inForwardedNameText");
        themeDescriptionArr[103] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outForwardedNameText");
        themeDescriptionArr[104] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inViaBotNameText");
        themeDescriptionArr[105] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outViaBotNameText");
        themeDescriptionArr[106] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_stickerViaBotNameText");
        themeDescriptionArr[107] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inReplyLine");
        themeDescriptionArr[108] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outReplyLine");
        themeDescriptionArr[109] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_stickerReplyLine");
        themeDescriptionArr[110] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inReplyNameText");
        themeDescriptionArr[111] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outReplyNameText");
        themeDescriptionArr[112] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_stickerReplyNameText");
        themeDescriptionArr[113] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inReplyMessageText");
        themeDescriptionArr[114] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outReplyMessageText");
        themeDescriptionArr[115] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inReplyMediaMessageText");
        themeDescriptionArr[116] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outReplyMediaMessageText");
        themeDescriptionArr[117] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inReplyMediaMessageSelectedText");
        themeDescriptionArr[118] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outReplyMediaMessageSelectedText");
        themeDescriptionArr[119] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_stickerReplyMessageText");
        themeDescriptionArr[120] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inPreviewLine");
        themeDescriptionArr[121] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outPreviewLine");
        themeDescriptionArr[122] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inSiteNameText");
        themeDescriptionArr[123] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outSiteNameText");
        themeDescriptionArr[124] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inContactNameText");
        themeDescriptionArr[125] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outContactNameText");
        themeDescriptionArr[126] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inContactPhoneText");
        themeDescriptionArr[127] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inContactPhoneSelectedText");
        themeDescriptionArr[128] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outContactPhoneText");
        themeDescriptionArr[129] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outContactPhoneSelectedText");
        themeDescriptionArr[130] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_mediaProgress");
        themeDescriptionArr[131] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inAudioProgress");
        themeDescriptionArr[132] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outAudioProgress");
        themeDescriptionArr[133] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inAudioSelectedProgress");
        themeDescriptionArr[134] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outAudioSelectedProgress");
        themeDescriptionArr[135] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_mediaTimeText");
        themeDescriptionArr[136] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inTimeText");
        themeDescriptionArr[137] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outTimeText");
        themeDescriptionArr[138] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inTimeSelectedText");
        themeDescriptionArr[139] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_adminText");
        themeDescriptionArr[140] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_adminSelectedText");
        themeDescriptionArr[141] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outTimeSelectedText");
        themeDescriptionArr[142] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inAudioPerfomerText");
        themeDescriptionArr[143] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inAudioPerfomerSelectedText");
        themeDescriptionArr[144] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outAudioPerfomerText");
        themeDescriptionArr[145] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outAudioPerfomerSelectedText");
        themeDescriptionArr[146] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inAudioTitleText");
        themeDescriptionArr[147] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outAudioTitleText");
        themeDescriptionArr[148] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inAudioDurationText");
        themeDescriptionArr[149] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outAudioDurationText");
        themeDescriptionArr[150] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inAudioDurationSelectedText");
        themeDescriptionArr[151] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outAudioDurationSelectedText");
        themeDescriptionArr[152] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inAudioSeekbar");
        themeDescriptionArr[153] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outAudioSeekbar");
        themeDescriptionArr[154] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inAudioSeekbarSelected");
        themeDescriptionArr[155] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outAudioSeekbarSelected");
        themeDescriptionArr[156] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inAudioSeekbarFill");
        themeDescriptionArr[157] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inAudioCacheSeekbar");
        themeDescriptionArr[158] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outAudioSeekbarFill");
        themeDescriptionArr[159] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outAudioCacheSeekbar");
        themeDescriptionArr[160] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inVoiceSeekbar");
        themeDescriptionArr[161] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outVoiceSeekbar");
        themeDescriptionArr[162] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inVoiceSeekbarSelected");
        themeDescriptionArr[163] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outVoiceSeekbarSelected");
        themeDescriptionArr[164] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inVoiceSeekbarFill");
        themeDescriptionArr[165] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outVoiceSeekbarFill");
        themeDescriptionArr[166] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inFileProgress");
        themeDescriptionArr[167] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outFileProgress");
        themeDescriptionArr[168] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inFileProgressSelected");
        themeDescriptionArr[169] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outFileProgressSelected");
        themeDescriptionArr[170] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inFileNameText");
        themeDescriptionArr[171] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outFileNameText");
        themeDescriptionArr[172] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inFileInfoText");
        themeDescriptionArr[173] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outFileInfoText");
        themeDescriptionArr[174] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inFileInfoSelectedText");
        themeDescriptionArr[175] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outFileInfoSelectedText");
        themeDescriptionArr[176] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inFileBackground");
        themeDescriptionArr[177] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outFileBackground");
        themeDescriptionArr[178] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inFileBackgroundSelected");
        themeDescriptionArr[179] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outFileBackgroundSelected");
        themeDescriptionArr[180] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inVenueInfoText");
        themeDescriptionArr[181] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outVenueInfoText");
        themeDescriptionArr[182] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inVenueInfoSelectedText");
        themeDescriptionArr[183] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outVenueInfoSelectedText");
        themeDescriptionArr[184] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_mediaInfoText");
        themeDescriptionArr[185] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_urlPaint, null, null, "chat_linkSelectBackground");
        themeDescriptionArr[186] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, Theme.chat_textSearchSelectionPaint, null, null, "chat_textSelectBackground");
        themeDescriptionArr[187] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outLoader");
        themeDescriptionArr[188] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outMediaIcon");
        themeDescriptionArr[189] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outLoaderSelected");
        themeDescriptionArr[190] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_outMediaIconSelected");
        themeDescriptionArr[191] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inLoader");
        themeDescriptionArr[192] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inMediaIcon");
        themeDescriptionArr[193] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inLoaderSelected");
        themeDescriptionArr[194] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, null, null, "chat_inMediaIconSelected");
        view2 = this.chatListView;
        int i = ThemeDescription.FLAG_BACKGROUNDFILTER;
        clsArr = new Class[]{ChatMessageCell.class};
        r5 = new Drawable[4];
        Drawable[][] drawableArr = Theme.chat_photoStatesDrawables;
        r5[0] = drawableArr[0][0];
        r5[1] = drawableArr[1][0];
        r5[2] = drawableArr[2][0];
        r5[3] = drawableArr[3][0];
        themeDescriptionArr[195] = new ThemeDescription(view2, i, clsArr, null, r5, null, "chat_mediaLoaderPhoto");
        view2 = this.chatListView;
        clsArr = new Class[]{ChatMessageCell.class};
        r5 = new Drawable[4];
        drawableArr = Theme.chat_photoStatesDrawables;
        r5[0] = drawableArr[0][0];
        r5[1] = drawableArr[1][0];
        r5[2] = drawableArr[2][0];
        r5[3] = drawableArr[3][0];
        themeDescriptionArr[196] = new ThemeDescription(view2, 0, clsArr, null, r5, null, "chat_mediaLoaderPhotoIcon");
        view2 = this.chatListView;
        i = ThemeDescription.FLAG_BACKGROUNDFILTER;
        clsArr = new Class[]{ChatMessageCell.class};
        r5 = new Drawable[4];
        drawableArr = Theme.chat_photoStatesDrawables;
        r5[0] = drawableArr[0][1];
        r5[1] = drawableArr[1][1];
        r5[2] = drawableArr[2][1];
        r5[3] = drawableArr[3][1];
        themeDescriptionArr[197] = new ThemeDescription(view2, i, clsArr, null, r5, null, "chat_mediaLoaderPhotoSelected");
        view2 = this.chatListView;
        clsArr = new Class[]{ChatMessageCell.class};
        r5 = new Drawable[4];
        drawableArr = Theme.chat_photoStatesDrawables;
        r5[0] = drawableArr[0][1];
        r5[1] = drawableArr[1][1];
        r5[2] = drawableArr[2][1];
        r5[3] = drawableArr[3][1];
        themeDescriptionArr[198] = new ThemeDescription(view2, 0, clsArr, null, r5, null, "chat_mediaLoaderPhotoIconSelected");
        view2 = this.chatListView;
        i = ThemeDescription.FLAG_BACKGROUNDFILTER;
        clsArr = new Class[]{ChatMessageCell.class};
        r5 = new Drawable[2];
        drawableArr = Theme.chat_photoStatesDrawables;
        r5[0] = drawableArr[7][0];
        r5[1] = drawableArr[8][0];
        themeDescriptionArr[199] = new ThemeDescription(view2, i, clsArr, null, r5, null, "chat_outLoaderPhoto");
        view2 = this.chatListView;
        clsArr = new Class[]{ChatMessageCell.class};
        r5 = new Drawable[2];
        drawableArr = Theme.chat_photoStatesDrawables;
        r5[0] = drawableArr[7][0];
        r5[1] = drawableArr[8][0];
        themeDescriptionArr[200] = new ThemeDescription(view2, 0, clsArr, null, r5, null, "chat_outLoaderPhotoIcon");
        view2 = this.chatListView;
        i = ThemeDescription.FLAG_BACKGROUNDFILTER;
        clsArr = new Class[]{ChatMessageCell.class};
        r5 = new Drawable[2];
        drawableArr = Theme.chat_photoStatesDrawables;
        r5[0] = drawableArr[7][1];
        r5[1] = drawableArr[8][1];
        themeDescriptionArr[201] = new ThemeDescription(view2, i, clsArr, null, r5, null, "chat_outLoaderPhotoSelected");
        view2 = this.chatListView;
        clsArr = new Class[]{ChatMessageCell.class};
        r5 = new Drawable[2];
        drawableArr = Theme.chat_photoStatesDrawables;
        r5[0] = drawableArr[7][1];
        r5[1] = drawableArr[8][1];
        themeDescriptionArr[202] = new ThemeDescription(view2, 0, clsArr, null, r5, null, "chat_outLoaderPhotoIconSelected");
        view2 = this.chatListView;
        i = ThemeDescription.FLAG_BACKGROUNDFILTER;
        clsArr = new Class[]{ChatMessageCell.class};
        r5 = new Drawable[2];
        drawableArr = Theme.chat_photoStatesDrawables;
        r5[0] = drawableArr[10][0];
        r5[1] = drawableArr[11][0];
        themeDescriptionArr[203] = new ThemeDescription(view2, i, clsArr, null, r5, null, "chat_inLoaderPhoto");
        view2 = this.chatListView;
        clsArr = new Class[]{ChatMessageCell.class};
        r5 = new Drawable[2];
        drawableArr = Theme.chat_photoStatesDrawables;
        r5[0] = drawableArr[10][0];
        r5[1] = drawableArr[11][0];
        themeDescriptionArr[204] = new ThemeDescription(view2, 0, clsArr, null, r5, null, "chat_inLoaderPhotoIcon");
        view2 = this.chatListView;
        i = ThemeDescription.FLAG_BACKGROUNDFILTER;
        clsArr = new Class[]{ChatMessageCell.class};
        r5 = new Drawable[2];
        drawableArr = Theme.chat_photoStatesDrawables;
        r5[0] = drawableArr[10][1];
        r5[1] = drawableArr[11][1];
        themeDescriptionArr[205] = new ThemeDescription(view2, i, clsArr, null, r5, null, "chat_inLoaderPhotoSelected");
        view2 = this.chatListView;
        clsArr = new Class[]{ChatMessageCell.class};
        r5 = new Drawable[2];
        drawableArr = Theme.chat_photoStatesDrawables;
        r5[0] = drawableArr[10][1];
        r5[1] = drawableArr[11][1];
        themeDescriptionArr[206] = new ThemeDescription(view2, 0, clsArr, null, r5, null, "chat_inLoaderPhotoIconSelected");
        themeDescriptionArr[207] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_photoStatesDrawables[9][0]}, null, "chat_outFileIcon");
        themeDescriptionArr[208] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_photoStatesDrawables[9][1]}, null, "chat_outFileSelectedIcon");
        themeDescriptionArr[209] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_photoStatesDrawables[12][0]}, null, "chat_inFileIcon");
        themeDescriptionArr[210] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_photoStatesDrawables[12][1]}, null, "chat_inFileSelectedIcon");
        themeDescriptionArr[211] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_contactDrawable[0]}, null, "chat_inContactBackground");
        themeDescriptionArr[212] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_contactDrawable[0]}, null, "chat_inContactIcon");
        themeDescriptionArr[213] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_contactDrawable[1]}, null, "chat_outContactBackground");
        themeDescriptionArr[214] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_contactDrawable[1]}, null, "chat_outContactIcon");
        themeDescriptionArr[215] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_locationDrawable[0]}, null, "chat_inLocationBackground");
        themeDescriptionArr[216] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_locationDrawable[0]}, null, "chat_inLocationIcon");
        themeDescriptionArr[217] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_locationDrawable[1]}, null, "chat_outLocationBackground");
        themeDescriptionArr[218] = new ThemeDescription(this.chatListView, 0, new Class[]{ChatMessageCell.class}, null, new Drawable[]{Theme.chat_locationDrawable[1]}, null, "chat_outLocationIcon");
        themeDescriptionArr[219] = new ThemeDescription(this.messagesSearchListView, 0, new Class[]{DialogCell.class}, null, new Drawable[]{Theme.avatar_savedDrawable}, null, "avatar_text");
        themeDescriptionArr[220] = new ThemeDescription(this.messagesSearchListView, 0, new Class[]{DialogCell.class}, Theme.dialogs_countPaint, null, null, "chats_unreadCounter");
        view2 = this.messagesSearchListView;
        clsArr = new Class[]{DialogCell.class};
        r6 = new Paint[3];
        TextPaint[] textPaintArr = Theme.dialogs_namePaint;
        r6[0] = textPaintArr[0];
        r6[1] = textPaintArr[1];
        r6[2] = Theme.dialogs_searchNamePaint;
        themeDescriptionArr[221] = new ThemeDescription(view2, 0, clsArr, null, r6, null, null, "chats_name");
        view2 = this.messagesSearchListView;
        clsArr = new Class[]{DialogCell.class};
        r6 = new Paint[3];
        textPaintArr = Theme.dialogs_nameEncryptedPaint;
        r6[0] = textPaintArr[0];
        r6[1] = textPaintArr[1];
        r6[2] = Theme.dialogs_searchNameEncryptedPaint;
        themeDescriptionArr[222] = new ThemeDescription(view2, 0, clsArr, null, r6, null, null, "chats_secretName");
        themeDescriptionArr[223] = new ThemeDescription(this.messagesSearchListView, 0, new Class[]{DialogCell.class}, null, new Drawable[]{Theme.dialogs_lockDrawable}, null, "chats_secretIcon");
        themeDescriptionArr[224] = new ThemeDescription(this.messagesSearchListView, 0, new Class[]{DialogCell.class}, null, new Drawable[]{Theme.dialogs_groupDrawable, Theme.dialogs_broadcastDrawable, Theme.dialogs_botDrawable}, null, "chats_nameIcon");
        themeDescriptionArr[225] = new ThemeDescription(this.messagesSearchListView, 0, new Class[]{DialogCell.class}, null, new Drawable[]{Theme.dialogs_scamDrawable}, null, "chats_draft");
        themeDescriptionArr[226] = new ThemeDescription(this.messagesSearchListView, 0, new Class[]{DialogCell.class}, Theme.dialogs_messagePaint[1], null, null, "chats_message_threeLines");
        themeDescriptionArr[227] = new ThemeDescription(this.messagesSearchListView, 0, new Class[]{DialogCell.class}, Theme.dialogs_messageNamePaint, null, null, "chats_nameMessage_threeLines");
        -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm02 = -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm0;
        themeDescriptionArr[228] = new ThemeDescription(null, 0, null, null, null, -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm02, "chats_nameMessage");
        themeDescriptionArr[229] = new ThemeDescription(null, 0, null, null, null, -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm02, "chats_attachMessage");
        themeDescriptionArr[230] = new ThemeDescription(this.messagesSearchListView, 0, new Class[]{DialogCell.class}, null, Theme.dialogs_messagePrintingPaint, null, null, "chats_actionMessage");
        themeDescriptionArr[231] = new ThemeDescription(this.messagesSearchListView, 0, new Class[]{DialogCell.class}, Theme.dialogs_timePaint, null, null, "chats_date");
        themeDescriptionArr[232] = new ThemeDescription(this.messagesSearchListView, 0, new Class[]{DialogCell.class}, null, new Drawable[]{Theme.dialogs_checkDrawable}, null, "chats_sentCheck");
        themeDescriptionArr[233] = new ThemeDescription(this.messagesSearchListView, 0, new Class[]{DialogCell.class}, null, new Drawable[]{Theme.dialogs_checkReadDrawable, Theme.dialogs_halfCheckDrawable}, null, "chats_sentReadCheck");
        themeDescriptionArr[234] = new ThemeDescription(this.mentionContainer, 0, null, Theme.chat_composeBackgroundPaint, null, null, "chat_messagePanelBackground");
        themeDescriptionArr[235] = new ThemeDescription(this.mentionContainer, 0, null, null, new Drawable[]{Theme.chat_composeShadowDrawable}, null, "chat_messagePanelShadow");
        themeDescriptionArr[236] = new ThemeDescription(this.searchContainer, 0, null, Theme.chat_composeBackgroundPaint, null, null, "chat_messagePanelBackground");
        themeDescriptionArr[237] = new ThemeDescription(this.searchContainer, 0, null, null, new Drawable[]{Theme.chat_composeShadowDrawable}, null, "chat_messagePanelShadow");
        themeDescriptionArr[238] = new ThemeDescription(this.bottomOverlay, 0, null, Theme.chat_composeBackgroundPaint, null, null, "chat_messagePanelBackground");
        themeDescriptionArr[239] = new ThemeDescription(this.bottomOverlay, 0, null, null, new Drawable[]{Theme.chat_composeShadowDrawable}, null, "chat_messagePanelShadow");
        themeDescriptionArr[240] = new ThemeDescription(this.bottomOverlayChat, 0, null, Theme.chat_composeBackgroundPaint, null, null, "chat_messagePanelBackground");
        themeDescriptionArr[241] = new ThemeDescription(this.bottomOverlayChat, 0, null, null, new Drawable[]{Theme.chat_composeShadowDrawable}, null, "chat_messagePanelShadow");
        themeDescriptionArr[242] = new ThemeDescription(this.bottomMessagesActionContainer, 0, null, Theme.chat_composeBackgroundPaint, null, null, "chat_messagePanelBackground");
        themeDescriptionArr[243] = new ThemeDescription(this.bottomMessagesActionContainer, 0, null, null, new Drawable[]{Theme.chat_composeShadowDrawable}, null, "chat_messagePanelShadow");
        themeDescriptionArr[244] = new ThemeDescription(this.chatActivityEnterView, 0, null, Theme.chat_composeBackgroundPaint, null, null, "chat_messagePanelBackground");
        themeDescriptionArr[245] = new ThemeDescription(this.chatActivityEnterView, 0, null, null, new Drawable[]{Theme.chat_composeShadowDrawable}, null, "chat_messagePanelShadow");
        themeDescriptionArr[246] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_BACKGROUND, new Class[]{ChatActivityEnterView.class}, new String[]{"audioVideoButtonContainer"}, null, null, null, "chat_messagePanelBackground");
        view2 = this.chatActivityEnterView;
        i = ThemeDescription.FLAG_TEXTCOLOR;
        clsArr = new Class[]{ChatActivityEnterView.class};
        String[] strArr = new String[1];
        strArr[0] = "messageEditText";
        themeDescriptionArr[247] = new ThemeDescription(view2, i, clsArr, strArr, null, null, null, "chat_messagePanelText");
        themeDescriptionArr[248] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_CURSORCOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"messageEditText"}, null, null, null, "chat_messagePanelCursor");
        themeDescriptionArr[249] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"recordSendText"}, null, null, null, "chat_fieldOverlayText");
        themeDescriptionArr[250] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_HINTTEXTCOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"messageEditText"}, null, null, null, "chat_messagePanelHint");
        themeDescriptionArr[251] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"sendButton"}, null, null, null, "chat_messagePanelSend");
        themeDescriptionArr[252] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_USEBACKGROUNDDRAWABLE | ThemeDescription.FLAG_DRAWABLESELECTEDSTATE, new Class[]{ChatActivityEnterView.class}, new String[]{"sendButton"}, null, null, 24, null, "chat_messagePanelSend");
        themeDescriptionArr[253] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"emojiButton1"}, null, null, null, "chat_messagePanelIcons");
        themeDescriptionArr[254] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_USEBACKGROUNDDRAWABLE | ThemeDescription.FLAG_DRAWABLESELECTEDSTATE, new Class[]{ChatActivityEnterView.class}, new String[]{"emojiButton1"}, null, null, null, "listSelectorSDK21");
        themeDescriptionArr[255] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"emojiButton2"}, null, null, null, "chat_messagePanelIcons");
        themeDescriptionArr[256] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_USEBACKGROUNDDRAWABLE | ThemeDescription.FLAG_DRAWABLESELECTEDSTATE, new Class[]{ChatActivityEnterView.class}, new String[]{"emojiButton2"}, null, null, null, "listSelectorSDK21");
        themeDescriptionArr[257] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"botButton"}, null, null, null, "chat_messagePanelIcons");
        themeDescriptionArr[258] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_USEBACKGROUNDDRAWABLE | ThemeDescription.FLAG_DRAWABLESELECTEDSTATE, new Class[]{ChatActivityEnterView.class}, new String[]{"botButton"}, null, null, null, "listSelectorSDK21");
        themeDescriptionArr[259] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"notifyButton"}, null, null, null, "chat_messagePanelIcons");
        themeDescriptionArr[260] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_IMAGECOLOR | ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatActivityEnterView.class}, new String[]{"scheduledButton"}, null, null, null, "chat_messagePanelIcons");
        themeDescriptionArr[261] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"scheduledButton"}, null, null, null, "chat_recordedVoiceDot");
        themeDescriptionArr[262] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_USEBACKGROUNDDRAWABLE | ThemeDescription.FLAG_DRAWABLESELECTEDSTATE, new Class[]{ChatActivityEnterView.class}, new String[]{"scheduledButton"}, null, null, null, "listSelectorSDK21");
        themeDescriptionArr[263] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"attachButton"}, null, null, null, "chat_messagePanelIcons");
        themeDescriptionArr[264] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_USEBACKGROUNDDRAWABLE | ThemeDescription.FLAG_DRAWABLESELECTEDSTATE, new Class[]{ChatActivityEnterView.class}, new String[]{"attachButton"}, null, null, null, "listSelectorSDK21");
        themeDescriptionArr[265] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"audioSendButton"}, null, null, null, "chat_messagePanelIcons");
        themeDescriptionArr[266] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"videoSendButton"}, null, null, null, "chat_messagePanelIcons");
        themeDescriptionArr[267] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"notifyButton"}, null, null, null, "chat_messagePanelVideoFrame");
        themeDescriptionArr[268] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_USEBACKGROUNDDRAWABLE | ThemeDescription.FLAG_DRAWABLESELECTEDSTATE, new Class[]{ChatActivityEnterView.class}, new String[]{"notifyButton"}, null, null, null, "listSelectorSDK21");
        themeDescriptionArr[269] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"videoTimelineView"}, null, null, null, "chat_messagePanelSend");
        themeDescriptionArr[270] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"doneButtonImage"}, null, null, null, "chat_messagePanelBackground");
        themeDescriptionArr[271] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_BACKGROUND, new Class[]{ChatActivityEnterView.class}, new String[]{"recordedAudioPanel"}, null, null, null, "chat_messagePanelBackground");
        themeDescriptionArr[272] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"micDrawable"}, null, null, null, "chat_messagePanelVoicePressed");
        themeDescriptionArr[273] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"cameraDrawable"}, null, null, null, "chat_messagePanelVoicePressed");
        themeDescriptionArr[274] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"sendDrawable"}, null, null, null, "chat_messagePanelVoicePressed");
        themeDescriptionArr[275] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"lockDrawable"}, null, null, null, "key_chat_messagePanelVoiceLock");
        themeDescriptionArr[276] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"lockTopDrawable"}, null, null, null, "key_chat_messagePanelVoiceLock");
        themeDescriptionArr[277] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"lockArrowDrawable"}, null, null, null, "key_chat_messagePanelVoiceLock");
        themeDescriptionArr[278] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"lockBackgroundDrawable"}, null, null, null, "key_chat_messagePanelVoiceLockBackground");
        themeDescriptionArr[279] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"lockShadowDrawable"}, null, null, null, "key_chat_messagePanelVoiceLockShadow");
        themeDescriptionArr[280] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"recordDeleteImageView"}, null, null, null, "chat_messagePanelVoiceDelete");
        themeDescriptionArr[281] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_USEBACKGROUNDDRAWABLE | ThemeDescription.FLAG_DRAWABLESELECTEDSTATE, new Class[]{ChatActivityEnterView.class}, new String[]{"recordDeleteImageView"}, null, null, null, "listSelectorSDK21");
        themeDescriptionArr[282] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{ChatActivityEnterView.class}, new String[]{"recordedAudioBackground"}, null, null, null, "chat_recordedVoiceBackground");
        themeDescriptionArr[283] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"recordTimeText"}, null, null, null, "chat_recordTime");
        themeDescriptionArr[284] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_BACKGROUND, new Class[]{ChatActivityEnterView.class}, new String[]{"recordTimeContainer"}, null, null, null, "chat_messagePanelBackground");
        themeDescriptionArr[285] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"recordCancelText"}, null, null, null, "chat_recordVoiceCancel");
        themeDescriptionArr[286] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_BACKGROUND, new Class[]{ChatActivityEnterView.class}, new String[]{"recordPanel"}, null, null, null, "chat_messagePanelBackground");
        themeDescriptionArr[287] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"recordedAudioTimeTextView"}, null, null, null, "chat_messagePanelVoiceDuration");
        themeDescriptionArr[288] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"recordCancelImage"}, null, null, null, "chat_recordVoiceCancel");
        themeDescriptionArr[289] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"doneButtonProgress"}, null, null, null, "contextProgressInner1");
        themeDescriptionArr[290] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"doneButtonProgress"}, null, null, null, "contextProgressOuter1");
        themeDescriptionArr[291] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{ChatActivityEnterView.class}, new String[]{"cancelBotButton"}, null, null, null, "chat_messagePanelCancelInlineBot");
        themeDescriptionArr[292] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_USEBACKGROUNDDRAWABLE | ThemeDescription.FLAG_DRAWABLESELECTEDSTATE, new Class[]{ChatActivityEnterView.class}, new String[]{"cancelBotButton"}, null, null, null, "listSelectorSDK21");
        themeDescriptionArr[293] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"redDotPaint"}, null, null, null, "chat_recordedVoiceDot");
        themeDescriptionArr[294] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"paint"}, null, null, null, "chat_messagePanelVoiceBackground");
        themeDescriptionArr[295] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"paintRecord"}, null, null, null, "chat_messagePanelVoiceShadow");
        themeDescriptionArr[296] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"seekBarWaveform"}, null, null, null, "chat_recordedVoiceProgress");
        themeDescriptionArr[297] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"seekBarWaveform"}, null, null, null, "chat_recordedVoiceProgressInner");
        themeDescriptionArr[298] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"playDrawable"}, null, null, null, "chat_recordedVoicePlayPause");
        themeDescriptionArr[299] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"pauseDrawable"}, null, null, null, "chat_recordedVoicePlayPause");
        themeDescriptionArr[300] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_DRAWABLESELECTEDSTATE, new Class[]{ChatActivityEnterView.class}, new String[]{"playDrawable"}, null, null, null, "chat_recordedVoicePlayPausePressed");
        themeDescriptionArr[301] = new ThemeDescription(this.chatActivityEnterView, ThemeDescription.FLAG_DRAWABLESELECTEDSTATE, new Class[]{ChatActivityEnterView.class}, new String[]{"pauseDrawable"}, null, null, null, "chat_recordedVoicePlayPausePressed");
        themeDescriptionArr[302] = new ThemeDescription(this.chatActivityEnterView, 0, new Class[]{ChatActivityEnterView.class}, new String[]{"dotPaint"}, null, null, null, "chat_emojiPanelNewTrending");
        View view3 = this.chatActivityEnterView;
        if (view3 != null) {
            view3 = view3.getEmojiView();
        }
        themeDescriptionArr[303] = new ThemeDescription(view3, 0, new Class[]{EmojiView.class}, null, null, null, (ThemeDescriptionDelegate) -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm0, "chat_emojiPanelBackground");
        view3 = this.chatActivityEnterView;
        if (view3 != null) {
            view3 = view3.getEmojiView();
        }
        themeDescriptionArr[304] = new ThemeDescription(view3, 0, new Class[]{EmojiView.class}, null, null, null, (ThemeDescriptionDelegate) -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm0, "chat_emojiPanelShadowLine");
        view3 = this.chatActivityEnterView;
        if (view3 != null) {
            view3 = view3.getEmojiView();
        }
        themeDescriptionArr[305] = new ThemeDescription(view3, 0, new Class[]{EmojiView.class}, null, null, null, (ThemeDescriptionDelegate) -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm0, "chat_emojiPanelEmptyText");
        view3 = this.chatActivityEnterView;
        if (view3 != null) {
            view3 = view3.getEmojiView();
        }
        themeDescriptionArr[306] = new ThemeDescription(view3, 0, new Class[]{EmojiView.class}, null, null, null, (ThemeDescriptionDelegate) -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm0, "chat_emojiPanelIcon");
        view3 = this.chatActivityEnterView;
        if (view3 != null) {
            view3 = view3.getEmojiView();
        }
        themeDescriptionArr[307] = new ThemeDescription(view3, 0, new Class[]{EmojiView.class}, null, null, null, (ThemeDescriptionDelegate) -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm0, "chat_emojiPanelIconSelected");
        view3 = this.chatActivityEnterView;
        if (view3 != null) {
            view3 = view3.getEmojiView();
        }
        themeDescriptionArr[308] = new ThemeDescription(view3, 0, new Class[]{EmojiView.class}, null, null, null, (ThemeDescriptionDelegate) -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm0, "chat_emojiPanelStickerPackSelector");
        view3 = this.chatActivityEnterView;
        if (view3 != null) {
            view3 = view3.getEmojiView();
        }
        themeDescriptionArr[309] = new ThemeDescription(view3, 0, new Class[]{EmojiView.class}, null, null, null, (ThemeDescriptionDelegate) -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm0, "chat_emojiPanelBackspace");
        view3 = this.chatActivityEnterView;
        if (view3 != null) {
            view3 = view3.getEmojiView();
        }
        themeDescriptionArr[310] = new ThemeDescription(view3, 0, new Class[]{EmojiView.class}, null, null, null, (ThemeDescriptionDelegate) -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm0, "chat_emojiPanelTrendingTitle");
        view3 = this.chatActivityEnterView;
        if (view3 != null) {
            view3 = view3.getEmojiView();
        }
        themeDescriptionArr[311] = new ThemeDescription(view3, 0, new Class[]{EmojiView.class}, null, null, null, (ThemeDescriptionDelegate) -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm0, "chat_emojiPanelTrendingDescription");
        view3 = this.chatActivityEnterView;
        if (view3 != null) {
            view3 = view3.getEmojiView();
        }
        themeDescriptionArr[312] = new ThemeDescription(view3, 0, new Class[]{EmojiView.class}, null, null, null, (ThemeDescriptionDelegate) -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm0, "chat_emojiPanelBadgeText");
        view3 = this.chatActivityEnterView;
        if (view3 != null) {
            view3 = view3.getEmojiView();
        }
        themeDescriptionArr[313] = new ThemeDescription(view3, 0, new Class[]{EmojiView.class}, null, null, null, (ThemeDescriptionDelegate) -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm0, "chat_emojiPanelBadgeBackground");
        view3 = this.chatActivityEnterView;
        if (view3 != null) {
            view3 = view3.getEmojiView();
        }
        themeDescriptionArr[314] = new ThemeDescription(view3, 0, new Class[]{EmojiView.class}, null, null, null, (ThemeDescriptionDelegate) -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm0, "chat_emojiBottomPanelIcon");
        view3 = this.chatActivityEnterView;
        if (view3 != null) {
            view3 = view3.getEmojiView();
        }
        themeDescriptionArr[315] = new ThemeDescription(view3, 0, new Class[]{EmojiView.class}, null, null, null, (ThemeDescriptionDelegate) -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm0, "chat_emojiSearchIcon");
        view3 = this.chatActivityEnterView;
        if (view3 != null) {
            view3 = view3.getEmojiView();
        }
        themeDescriptionArr[316] = new ThemeDescription(view3, 0, new Class[]{EmojiView.class}, null, null, null, (ThemeDescriptionDelegate) -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm0, "chat_emojiPanelStickerSetNameHighlight");
        view3 = this.chatActivityEnterView;
        if (view3 != null) {
            view3 = view3.getEmojiView();
        }
        themeDescriptionArr[317] = new ThemeDescription(view3, 0, new Class[]{EmojiView.class}, null, null, null, (ThemeDescriptionDelegate) -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm0, "chat_emojiPanelStickerPackSelectorLine");
        themeDescriptionArr[318] = new ThemeDescription(this.undoView, ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, null, null, "undo_background");
        themeDescriptionArr[319] = new ThemeDescription(this.undoView, 0, new Class[]{UndoView.class}, new String[]{"undoImageView"}, null, null, null, "undo_cancelColor");
        themeDescriptionArr[320] = new ThemeDescription(this.undoView, 0, new Class[]{UndoView.class}, new String[]{"undoTextView"}, null, null, null, "undo_cancelColor");
        themeDescriptionArr[321] = new ThemeDescription(this.undoView, 0, new Class[]{UndoView.class}, new String[]{"infoTextView"}, null, null, null, "undo_infoColor");
        themeDescriptionArr[322] = new ThemeDescription(this.undoView, 0, new Class[]{UndoView.class}, new String[]{"textPaint"}, null, null, null, "undo_infoColor");
        themeDescriptionArr[323] = new ThemeDescription(this.undoView, 0, new Class[]{UndoView.class}, new String[]{"progressPaint"}, null, null, null, "undo_infoColor");
        themeDescriptionArr[324] = new ThemeDescription(this.undoView, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{UndoView.class}, new String[]{"leftImageView"}, null, null, null, "undo_infoColor");
        themeDescriptionArr[325] = new ThemeDescription(null, 0, null, null, null, null, "chat_botKeyboardButtonText");
        themeDescriptionArr[326] = new ThemeDescription(null, 0, null, null, null, null, "chat_botKeyboardButtonBackground");
        themeDescriptionArr[327] = new ThemeDescription(null, 0, null, null, null, null, "chat_botKeyboardButtonBackgroundPressed");
        themeDescriptionArr[328] = new ThemeDescription(this.fragmentView, ThemeDescription.FLAG_BACKGROUND | ThemeDescription.FLAG_CHECKTAG, new Class[]{FragmentContextView.class}, new String[]{"frameLayout"}, null, null, null, "inappPlayerBackground");
        themeDescriptionArr[329] = new ThemeDescription(this.fragmentView, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{FragmentContextView.class}, new String[]{"playButton"}, null, null, null, "inappPlayerPlayPause");
        themeDescriptionArr[330] = new ThemeDescription(this.fragmentView, ThemeDescription.FLAG_TEXTCOLOR | ThemeDescription.FLAG_CHECKTAG, new Class[]{FragmentContextView.class}, new String[]{"titleTextView"}, null, null, null, "inappPlayerTitle");
        themeDescriptionArr[331] = new ThemeDescription(this.fragmentView, ThemeDescription.FLAG_TEXTCOLOR | ThemeDescription.FLAG_FASTSCROLL, new Class[]{FragmentContextView.class}, new String[]{"titleTextView"}, null, null, null, "inappPlayerPerformer");
        themeDescriptionArr[332] = new ThemeDescription(this.fragmentView, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{FragmentContextView.class}, new String[]{"closeButton"}, null, null, null, "inappPlayerClose");
        themeDescriptionArr[333] = new ThemeDescription(this.fragmentView, ThemeDescription.FLAG_BACKGROUND | ThemeDescription.FLAG_CHECKTAG, new Class[]{FragmentContextView.class}, new String[]{"frameLayout"}, null, null, null, "returnToCallBackground");
        themeDescriptionArr[334] = new ThemeDescription(this.fragmentView, ThemeDescription.FLAG_TEXTCOLOR | ThemeDescription.FLAG_CHECKTAG, new Class[]{FragmentContextView.class}, new String[]{"titleTextView"}, null, null, null, "returnToCallText");
        themeDescriptionArr[335] = new ThemeDescription(this.pinnedLineView, ThemeDescription.FLAG_BACKGROUND, null, null, null, null, "chat_topPanelLine");
        themeDescriptionArr[336] = new ThemeDescription(this.pinnedMessageNameTextView, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_topPanelTitle");
        themeDescriptionArr[337] = new ThemeDescription(this.pinnedMessageTextView, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_topPanelMessage");
        themeDescriptionArr[338] = new ThemeDescription(this.alertNameTextView, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_topPanelTitle");
        themeDescriptionArr[339] = new ThemeDescription(this.alertTextView, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_topPanelMessage");
        themeDescriptionArr[340] = new ThemeDescription(this.closePinned, ThemeDescription.FLAG_IMAGECOLOR, null, null, null, null, "chat_topPanelClose");
        themeDescriptionArr[341] = new ThemeDescription(this.closeReportSpam, ThemeDescription.FLAG_IMAGECOLOR, null, null, null, null, "chat_topPanelClose");
        themeDescriptionArr[342] = new ThemeDescription(this.topChatPanelView, ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, null, null, "chat_topPanelBackground");
        themeDescriptionArr[343] = new ThemeDescription(this.alertView, ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, null, null, "chat_topPanelBackground");
        themeDescriptionArr[344] = new ThemeDescription(this.pinnedMessageView, ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, null, null, "chat_topPanelBackground");
        themeDescriptionArr[345] = new ThemeDescription(this.addToContactsButton, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_addContact");
        themeDescriptionArr[346] = new ThemeDescription(this.reportSpamButton, ThemeDescription.FLAG_CHECKTAG | ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_reportSpam");
        themeDescriptionArr[347] = new ThemeDescription(this.reportSpamButton, ThemeDescription.FLAG_CHECKTAG | ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_addContact");
        themeDescriptionArr[348] = new ThemeDescription(this.replyLineView, ThemeDescription.FLAG_BACKGROUND, null, null, null, null, "chat_replyPanelLine");
        themeDescriptionArr[349] = new ThemeDescription(this.replyNameTextView, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_replyPanelName");
        themeDescriptionArr[350] = new ThemeDescription(this.replyObjectTextView, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_replyPanelMessage");
        themeDescriptionArr[351] = new ThemeDescription(this.replyIconImageView, ThemeDescription.FLAG_IMAGECOLOR, null, null, null, null, "chat_replyPanelIcons");
        themeDescriptionArr[352] = new ThemeDescription(this.replyCloseImageView, ThemeDescription.FLAG_IMAGECOLOR, null, null, null, null, "chat_replyPanelClose");
        themeDescriptionArr[353] = new ThemeDescription(this.searchUpButton, ThemeDescription.FLAG_IMAGECOLOR, null, null, null, null, "chat_searchPanelIcons");
        themeDescriptionArr[354] = new ThemeDescription(this.searchUpButton, ThemeDescription.FLAG_DRAWABLESELECTEDSTATE | ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, null, null, "actionBarActionModeDefaultSelector");
        themeDescriptionArr[355] = new ThemeDescription(this.searchDownButton, ThemeDescription.FLAG_IMAGECOLOR, null, null, null, null, "chat_searchPanelIcons");
        themeDescriptionArr[356] = new ThemeDescription(this.searchDownButton, ThemeDescription.FLAG_DRAWABLESELECTEDSTATE | ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, null, null, "actionBarActionModeDefaultSelector");
        themeDescriptionArr[357] = new ThemeDescription(this.searchCalendarButton, ThemeDescription.FLAG_IMAGECOLOR, null, null, null, null, "chat_searchPanelIcons");
        themeDescriptionArr[358] = new ThemeDescription(this.searchCalendarButton, ThemeDescription.FLAG_DRAWABLESELECTEDSTATE | ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, null, null, "actionBarActionModeDefaultSelector");
        themeDescriptionArr[359] = new ThemeDescription(this.searchUserButton, ThemeDescription.FLAG_IMAGECOLOR, null, null, null, null, "chat_searchPanelIcons");
        themeDescriptionArr[360] = new ThemeDescription(this.searchUserButton, ThemeDescription.FLAG_DRAWABLESELECTEDSTATE | ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, null, null, "actionBarActionModeDefaultSelector");
        themeDescriptionArr[361] = new ThemeDescription(this.searchCountText, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_searchPanelText");
        themeDescriptionArr[362] = new ThemeDescription(this.searchAsListTogglerView, ThemeDescription.FLAG_DRAWABLESELECTEDSTATE | ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, null, null, "actionBarActionModeDefaultSelector");
        themeDescriptionArr[363] = new ThemeDescription(this.replyButton, ThemeDescription.FLAG_IMAGECOLOR | ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "actionBarActionModeDefaultIcon");
        themeDescriptionArr[364] = new ThemeDescription(this.replyButton, ThemeDescription.FLAG_DRAWABLESELECTEDSTATE | ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, null, null, "actionBarActionModeDefaultSelector");
        themeDescriptionArr[365] = new ThemeDescription(this.forwardButton, ThemeDescription.FLAG_IMAGECOLOR | ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "actionBarActionModeDefaultIcon");
        themeDescriptionArr[366] = new ThemeDescription(this.forwardButton, ThemeDescription.FLAG_DRAWABLESELECTEDSTATE | ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, null, null, "actionBarActionModeDefaultSelector");
        themeDescriptionArr[367] = new ThemeDescription(this.bottomOverlayText, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_secretChatStatusText");
        themeDescriptionArr[368] = new ThemeDescription(this.bottomOverlayChatText, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_fieldOverlayText");
        themeDescriptionArr[369] = new ThemeDescription(this.bottomOverlayChatText2, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_fieldOverlayText");
        themeDescriptionArr[370] = new ThemeDescription(this.bottomOverlayProgress, 0, null, null, null, null, "chat_fieldOverlayText");
        themeDescriptionArr[371] = new ThemeDescription(this.bigEmptyView, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_serviceText");
        themeDescriptionArr[372] = new ThemeDescription(this.emptyView, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_serviceText");
        themeDescriptionArr[373] = new ThemeDescription(this.progressBar, ThemeDescription.FLAG_PROGRESSBAR, null, null, null, null, "chat_serviceText");
        themeDescriptionArr[374] = new ThemeDescription(this.stickersPanelArrow, ThemeDescription.FLAG_IMAGECOLOR, null, null, null, null, "chat_stickersHintPanel");
        themeDescriptionArr[375] = new ThemeDescription(this.stickersListView, ThemeDescription.FLAG_BACKGROUNDFILTER, new Class[]{StickerCell.class}, null, null, null, "chat_stickersHintPanel");
        themeDescriptionArr[376] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_USEBACKGROUNDDRAWABLE, new Class[]{ChatUnreadCell.class}, new String[]{"backgroundLayout"}, null, null, null, "chat_unreadMessagesStartBackground");
        themeDescriptionArr[377] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{ChatUnreadCell.class}, new String[]{"imageView"}, null, null, null, "chat_unreadMessagesStartArrowIcon");
        view2 = this.chatListView;
        i = ThemeDescription.FLAG_TEXTCOLOR;
        clsArr = new Class[]{ChatUnreadCell.class};
        strArr = new String[1];
        strArr[0] = "textView";
        themeDescriptionArr[378] = new ThemeDescription(view2, i, clsArr, strArr, null, null, null, "chat_unreadMessagesStartText");
        themeDescriptionArr[379] = new ThemeDescription(this.progressView2, ThemeDescription.FLAG_SERVICEBACKGROUND, null, null, null, null, "chat_serviceBackground");
        themeDescriptionArr[380] = new ThemeDescription(this.emptyView, ThemeDescription.FLAG_SERVICEBACKGROUND, null, null, null, null, "chat_serviceBackground");
        themeDescriptionArr[381] = new ThemeDescription(this.bigEmptyView, ThemeDescription.FLAG_SERVICEBACKGROUND, null, null, null, null, "chat_serviceBackground");
        themeDescriptionArr[382] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_SERVICEBACKGROUND, new Class[]{ChatLoadingCell.class}, new String[]{"textView"}, null, null, null, "chat_serviceBackground");
        themeDescriptionArr[383] = new ThemeDescription(this.chatListView, ThemeDescription.FLAG_PROGRESSBAR, new Class[]{ChatLoadingCell.class}, new String[]{"textView"}, null, null, null, "chat_serviceText");
        themeDescriptionArr[384] = new ThemeDescription(this.mentionListView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{BotSwitchCell.class}, new String[]{"textView"}, null, null, null, "chat_botSwitchToInlineText");
        themeDescriptionArr[385] = new ThemeDescription(this.mentionListView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{MentionCell.class}, new String[]{"nameTextView"}, null, null, null, "windowBackgroundWhiteBlackText");
        themeDescriptionArr[386] = new ThemeDescription(this.mentionListView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{MentionCell.class}, new String[]{"usernameTextView"}, null, null, null, "windowBackgroundWhiteGrayText3");
        themeDescriptionArr[387] = new ThemeDescription(this.mentionListView, 0, new Class[]{ContextLinkCell.class}, null, new Drawable[]{Theme.chat_inlineResultFile, Theme.chat_inlineResultAudio, Theme.chat_inlineResultLocation}, null, "chat_inlineResultIcon");
        themeDescriptionArr[388] = new ThemeDescription(this.mentionListView, 0, new Class[]{ContextLinkCell.class}, null, null, null, "windowBackgroundWhiteGrayText2");
        themeDescriptionArr[389] = new ThemeDescription(this.mentionListView, 0, new Class[]{ContextLinkCell.class}, null, null, null, "windowBackgroundWhiteLinkText");
        themeDescriptionArr[390] = new ThemeDescription(this.mentionListView, 0, new Class[]{ContextLinkCell.class}, null, null, null, "windowBackgroundWhiteBlackText");
        themeDescriptionArr[391] = new ThemeDescription(this.mentionListView, 0, new Class[]{ContextLinkCell.class}, null, null, null, "chat_inAudioProgress");
        themeDescriptionArr[392] = new ThemeDescription(this.mentionListView, 0, new Class[]{ContextLinkCell.class}, null, null, null, "chat_inAudioSelectedProgress");
        themeDescriptionArr[393] = new ThemeDescription(this.mentionListView, 0, new Class[]{ContextLinkCell.class}, null, null, null, "divider");
        themeDescriptionArr[394] = new ThemeDescription(this.gifHintTextView, ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, null, null, "chat_gifSaveHintBackground");
        themeDescriptionArr[395] = new ThemeDescription(this.gifHintTextView, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_gifSaveHintText");
        -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm02 = -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm0;
        themeDescriptionArr[396] = new ThemeDescription(null, 0, null, null, null, -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm02, "chat_attachMediaBanBackground");
        themeDescriptionArr[397] = new ThemeDescription(null, 0, null, null, null, -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm02, "chat_attachMediaBanText");
        themeDescriptionArr[398] = new ThemeDescription(this.noSoundHintView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{HintView.class}, new String[]{"textView"}, null, null, null, "chat_gifSaveHintText");
        themeDescriptionArr[399] = new ThemeDescription(this.noSoundHintView, ThemeDescription.FLAG_IMAGECOLOR, new Class[]{HintView.class}, new String[]{"imageView"}, null, null, null, "chat_gifSaveHintText");
        themeDescriptionArr[400] = new ThemeDescription(this.noSoundHintView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{HintView.class}, new String[]{"arrowImageView"}, null, null, null, "chat_gifSaveHintBackground");
        themeDescriptionArr[401] = new ThemeDescription(this.forwardHintView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{HintView.class}, new String[]{"textView"}, null, null, null, "chat_gifSaveHintText");
        themeDescriptionArr[402] = new ThemeDescription(this.forwardHintView, ThemeDescription.FLAG_TEXTCOLOR, new Class[]{HintView.class}, new String[]{"arrowImageView"}, null, null, null, "chat_gifSaveHintBackground");
        themeDescriptionArr[403] = new ThemeDescription(this.pagedownButtonCounter, ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, null, null, "chat_goDownButtonCounterBackground");
        themeDescriptionArr[404] = new ThemeDescription(this.pagedownButtonCounter, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_goDownButtonCounter");
        themeDescriptionArr[405] = new ThemeDescription(this.pagedownButtonImage, ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, null, null, "chat_goDownButton");
        themeDescriptionArr[406] = new ThemeDescription(this.pagedownButtonImage, ThemeDescription.FLAG_DRAWABLESELECTEDSTATE | ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, null, null, "chat_goDownButtonShadow");
        themeDescriptionArr[407] = new ThemeDescription(this.pagedownButtonImage, ThemeDescription.FLAG_IMAGECOLOR, null, null, null, null, "chat_goDownButtonIcon");
        themeDescriptionArr[408] = new ThemeDescription(this.mentiondownButtonCounter, ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, null, null, "chat_goDownButtonCounterBackground");
        themeDescriptionArr[409] = new ThemeDescription(this.mentiondownButtonCounter, ThemeDescription.FLAG_TEXTCOLOR, null, null, null, null, "chat_goDownButtonCounter");
        themeDescriptionArr[410] = new ThemeDescription(this.mentiondownButtonImage, ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, null, null, "chat_goDownButton");
        themeDescriptionArr[411] = new ThemeDescription(this.mentiondownButtonImage, ThemeDescription.FLAG_DRAWABLESELECTEDSTATE | ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, null, null, "chat_goDownButtonShadow");
        themeDescriptionArr[412] = new ThemeDescription(this.mentiondownButtonImage, ThemeDescription.FLAG_IMAGECOLOR, null, null, null, null, "chat_goDownButtonIcon");
        ChatAvatarContainer chatAvatarContainer3 = this.avatarContainer;
        themeDescriptionArr[413] = new ThemeDescription(chatAvatarContainer3 != null ? chatAvatarContainer3.getTimeItem() : null, 0, null, null, null, null, "chat_secretTimerBackground");
        chatAvatarContainer3 = this.avatarContainer;
        if (chatAvatarContainer3 != null) {
            view = chatAvatarContainer3.getTimeItem();
        }
        themeDescriptionArr[414] = new ThemeDescription(view, 0, null, null, null, null, "chat_secretTimerText");
        themeDescriptionArr[415] = new ThemeDescription(null, ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, new Drawable[]{Theme.chat_attachButtonDrawables[0]}, null, "chat_attachGalleryBackground");
        themeDescriptionArr[416] = new ThemeDescription(null, 0, null, null, new Drawable[]{Theme.chat_attachButtonDrawables[0]}, null, "chat_attachGalleryIcon");
        themeDescriptionArr[417] = new ThemeDescription(null, ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, new Drawable[]{Theme.chat_attachButtonDrawables[1]}, null, "chat_attachAudioBackground");
        themeDescriptionArr[418] = new ThemeDescription(null, 0, null, null, new Drawable[]{Theme.chat_attachButtonDrawables[1]}, null, "chat_attachAudioIcon");
        themeDescriptionArr[419] = new ThemeDescription(null, ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, new Drawable[]{Theme.chat_attachButtonDrawables[2]}, null, "chat_attachFileBackground");
        themeDescriptionArr[420] = new ThemeDescription(null, 0, null, null, new Drawable[]{Theme.chat_attachButtonDrawables[2]}, null, "chat_attachFileIcon");
        themeDescriptionArr[421] = new ThemeDescription(null, ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, new Drawable[]{Theme.chat_attachButtonDrawables[3]}, null, "chat_attachContactBackground");
        themeDescriptionArr[422] = new ThemeDescription(null, 0, null, null, new Drawable[]{Theme.chat_attachButtonDrawables[3]}, null, "chat_attachContactIcon");
        themeDescriptionArr[423] = new ThemeDescription(null, ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, new Drawable[]{Theme.chat_attachButtonDrawables[4]}, null, "chat_attachLocationBackground");
        themeDescriptionArr[424] = new ThemeDescription(null, 0, null, null, new Drawable[]{Theme.chat_attachButtonDrawables[4]}, null, "chat_attachLocationIcon");
        themeDescriptionArr[425] = new ThemeDescription(null, ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, new Drawable[]{Theme.chat_attachButtonDrawables[5]}, null, "chat_attachPollBackground");
        themeDescriptionArr[426] = new ThemeDescription(null, 0, null, null, new Drawable[]{Theme.chat_attachButtonDrawables[5]}, null, "chat_attachPollIcon");
        themeDescriptionArr[427] = new ThemeDescription(null, 0, null, null, new Drawable[]{Theme.chat_attachEmptyDrawable}, null, "chat_attachEmptyImage");
        -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm02 = -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm0;
        themeDescriptionArr[428] = new ThemeDescription(null, 0, null, null, null, -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm02, "chat_attachPhotoBackground");
        themeDescriptionArr[429] = new ThemeDescription(null, 0, null, null, null, -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm02, "dialogBackground");
        themeDescriptionArr[430] = new ThemeDescription(null, 0, null, null, null, -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm02, "dialogBackgroundGray");
        themeDescriptionArr[431] = new ThemeDescription(null, 0, null, null, null, -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm02, "dialogTextGray2");
        themeDescriptionArr[432] = new ThemeDescription(null, 0, null, null, null, -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm02, "dialogScrollGlow");
        themeDescriptionArr[433] = new ThemeDescription(null, 0, null, null, null, -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm02, "dialogGrayLine");
        themeDescriptionArr[434] = new ThemeDescription(null, 0, null, null, null, -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm02, "dialogCameraIcon");
        themeDescriptionArr[435] = new ThemeDescription(null, 0, null, null, null, -__lambda_chatactivity_nw_h0jtnxm-ssgjez2py69fkjm02, "dialogButtonSelector");
        themeDescriptionArr[436] = new ThemeDescription(null, 0, null, null, null, null, "windowBackgroundWhiteLinkSelection");
        themeDescriptionArr[437] = new ThemeDescription(null, 0, null, null, null, null, "windowBackgroundWhiteInputField");
        themeDescriptionArr[438] = new ThemeDescription(null, 0, null, null, null, null, "chat_outTextSelectionHighlight");
        themeDescriptionArr[439] = new ThemeDescription(null, 0, null, null, null, null, "chat_inTextSelectionHighlight");
        themeDescriptionArr[440] = new ThemeDescription(null, 0, null, null, null, null, "chat_TextSelectionCursor");
        return themeDescriptionArr;
    }

    public /* synthetic */ void lambda$getThemeDescriptions$109$ChatActivity() {
        int childCount;
        int i;
        View childAt;
        updateVisibleRows();
        ChatActivityEnterView chatActivityEnterView = this.chatActivityEnterView;
        if (chatActivityEnterView != null) {
            chatActivityEnterView.updateColors();
        }
        ChatAttachAlert chatAttachAlert = this.chatAttachAlert;
        if (chatAttachAlert != null) {
            chatAttachAlert.checkColors();
        }
        RecyclerListView recyclerListView = this.chatListView;
        int i2 = 0;
        if (recyclerListView != null) {
            childCount = recyclerListView.getChildCount();
            for (i = 0; i < childCount; i++) {
                childAt = this.chatListView.getChildAt(i);
                if (childAt instanceof ChatMessageCell) {
                    ((ChatMessageCell) childAt).createSelectorDrawable();
                }
            }
        }
        recyclerListView = this.messagesSearchListView;
        if (recyclerListView != null) {
            childCount = recyclerListView.getChildCount();
            for (i = 0; i < childCount; i++) {
                childAt = this.messagesSearchListView.getChildAt(i);
                if (childAt instanceof DialogCell) {
                    ((DialogCell) childAt).update(0);
                }
            }
        }
        if (this.scrimPopupWindowItems != null) {
            while (true) {
                ActionBarMenuSubItem[] actionBarMenuSubItemArr = this.scrimPopupWindowItems;
                if (i2 >= actionBarMenuSubItemArr.length) {
                    break;
                }
                actionBarMenuSubItemArr[i2].setColors(Theme.getColor("actionBarDefaultSubmenuItem"), Theme.getColor("actionBarDefaultSubmenuItemIcon"));
                this.scrimPopupWindowItems[i2].setSelectorColor(Theme.getColor("dialogButtonSelector"));
                i2++;
            }
        }
        ActionBarPopupWindow actionBarPopupWindow = this.scrimPopupWindow;
        if (actionBarPopupWindow != null) {
            View contentView = actionBarPopupWindow.getContentView();
            contentView.setBackgroundColor(Theme.getColor("actionBarDefaultSubmenuBackground"));
            contentView.invalidate();
        }
    }
}
